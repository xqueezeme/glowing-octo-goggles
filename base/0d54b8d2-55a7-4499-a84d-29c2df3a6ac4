{
    "title": "Fourth Vector Ch. 16",
    "pages": [
        "Chapter 16: The Galician King\n\n*****\n\n\"Why, Commodore, I do believe you're poking me from behind.\"\n\nJack smiled as his eyes remained closed. It was still early enough that he didn't want to hazard a glance just yet, preferring to remain pressed into the sweet-smelling woman in front of him. However, it was only with a quick glance that he saw the dark hair, reminding him that it was Abigail on this side of the bed. Which must have meant that it was Kat who was gently stroking his back from behind.\n\n\"I thought you liked when I poked you from behind,\" muttered Jack, taking the opportunity to thrust his hips against her ass. \n\nAbigail moaned in response. \"I do, but not when you tease me. Your cock isn't even inside me. How fair is that?\"\n\nBefore Jack could respond, the other woman in bed answered for him. \"That doesn't sound fair at all, if you ask me,\" chirped Kat.\n\n\"See, Jack? Kat agrees with me,\" said Abigail triumphantly. \"You're outnumbered, Commodore. Two to one.\"\n\n\"You're really enjoying this title change, aren't you?\" he asked with a chuckle.\n\nShe responded by pushing her hips back at him. His cock sunk further into the crevice between her legs. He could almost feel the heat being released from her core, and it only served to put more steel into his morning erection.\n\nJack turned his head to look at Kat. \"And you? I don't see you using the title too much.\"\n\nKat shrugged. \"That's because I much prefer to hear you called king instead.\" She then pressed in a sweet kiss against his lips. Her tongue entered his mouth a moment later, caressing his own before she pulled away. \"Your Majesty,\" she whispered.\n\nIt was quite the heavenly experience being kissed by one woman while his cock was about to enter another but it had been all too familiar over the last few weeks. Ever since the two women met each other and decided to make good upon their promises to share him, Jack had rarely spent a night not nestled between the two of them in bed. It was only when Abigail had separated from them briefly that it had changed, however, once they reached Methusa and set up camp, the dark-haired commander slipped ashore to crawl into his bed once more.\n\nBoth Jack and Kat had been happy to see her once more, especially in such an intimate setting. The playfully aggressive commander of the Destiny had been missed while she led the ship to the former slave city, and thankfully she took the first opportunity to join them when she could. It was to be their last day in Andalucia, and Jack didn't want to be apart from either woman as he said his goodbyes to the people who now called him king.\n\nFor the moment though, there were slightly more important things to worry about. Like Kat's hand around his shaft, slowly pressing it forward so it rubbed against Abigail's slit. Despite the two of them not having full-on sex yet, Kat had become quite the naughty vixen between the sheets, and this was one task she much enjoyed doing.\n\n\"Kat, please don't tease me anymore,\" moaned Abigail, feeling the tip against her sex. \"Put him in me, hurry, please!\"\n\nKat let out a soft giggle. \"What happened to foreplay though? I thought you might need worked up a little more before you took him in you?\"\n\nAbigail scoffed and reached her hand between her legs. She must have swiped at her slit because she presented her drenched fingers a second later. \"Does this look like I need more foreplay? I need him in me!\"\n\nKat grinned and then shrugged playfully. \"If you wish,\" she said. This part of the game was especially fun for the both of them. After this much time, they'd gone from having somewhat awkward bedroom encounters at the addition of a third person to having a truly integrated relationship where the three of them connected well together. It was any man's dream scenario, and Jack got to live it every day.\n\nHe didn't have long to think about it as Kat gave a subtle push to his hips. He groaned as the tip of his cock slipped inside Abigail's wetness, earning a hiss of approval from her at the sudden intrusion.\n\n\"That's better,\" she purred as she wiggled her hips back at him. It had the effect of driving more of his shaft inside. \"That's a feeling that's never been equaled by anything else.\"\n\nJack chuckled as he pressed in further. \"You're telling me that? I have the both of you in my bed. Can you imagine that feeling?\"\n\n\"From where I'm laying, I have two attentive lovers as well,\" said Abigail with a smirk. \"So yes.\"\n\nJack turned to look at Kat, who was fully entranced with the sight of his cock filling up Abigail from their spooning position. She licked her upper lip and then bit it softly. \"I can't imagine what that must feel like.\"\n\n\"Whenever you're ready,\" said Jack as he withdrew his hips and surged forward, earning a low moan from Abigail. \"I won't rush you, but I do desire to be intimate with you like I am with Abigail.\"\n\nKat nodded quickly. \"I know, Jack. You've been so patient with me.\"\n\nHe smiled at her, nodding his head in return. In the interim, Abigail had grabbed one of his hands and placed it on her breast. He kneaded her perfect globe in turn as his fingers found her nipple. She squealed as he pinched it, pressing her lower half forcibly against his body. \n\n\"I know how much you love my tits,\" moaned Abigail as she turned her head against his ear. \"All of me belongs to you, you know that?\"\n\n\"I do,\" he whispered breathlessly. He began to pump his hips harder, letting his cock slide along her slippery entrance. \"I wouldn't have it any other way.\"\n\nThe two of them continued their movements in the early morning light, quickly developing more urgency as the pace increased. On Jack's other side, Kat pressed several kisses against his body, teasing him by blowing her hot breath against sensitive spots on his neck and shoulders. She even stopped for a moment to kiss his birthmark, running a trail that started at his shoulder and ran upwards. It added a wonderfully erotic quality to sex, even if he couldn't see much of the blonde's body. That was something that needed changed.\n\n\"Kat, come here for a moment,\" he said, stopping his hips to allow her to climb over him. She was still dressed in her nightly sleepwear of a tank top and shorts, and he wanted to be rid o the clothing to appreciate her body. \"These need to go,\" he said playfully, gesturing to her garments.\n\nAbigail nodded as well. \"Yes, they do. Get naked with us, Kat.\"\n\nThe blonde woman smiled demurely as her fingertips wrapped around the hem of her top. Jack sucked in his breath in anticipation. He'd only seen Kat fully naked a couple of times, but the sight was one that always took his breath away.\n\nWithout further encouragement, she pulled the top up over her head, pulling her hair through the other side as she deposited it on the floor beneath them. Her skin was nearly perfect apart from a pair of small moles on the left side of her rib cage. The rest of her was incredible. Kat had hidden a large set of breasts under her more concealing clothing that were perky and proud upon release. They were capped with tiny, pink areolas, and large, thick nipples. They tapered down to her tight stomach, wonderfully flawless as well as her fingers slipped to the band in her shorts.\n\nShe pushed those down just as quickly, revealing a golden triangle of hair just above her sex. It wasn't hard to tell that Kat was aroused, a glistening sheen apparent on the outside of her lips just from watching the other two. Her shapely, pale legs went on forever and soon curled up under her butt. It was a beautiful sight to take in, and Jack knew his cock throbbed even harder at witnessing it.\n\n\"Fuck, you're so gorgeous,\" breathed Abigail as their hips started moving again. \"I'm so glad I don't have to compete with you.\"\n\nKat giggled and then pointed to the dark-haired commander. \"Ditto. Although your butt is so much better than mine.\" It wasn't too far off the mark. Abigail was especially gifted with a nice rear end.\n\n\"So what? I wished my tits looked just like yours,\" panted Abigail as she reached up to caress Kat's nipple softly. \n\n\"How about we just agree that you're both perfect and leave it there?\" asked Jack. He meant it more teasingly than it came out, however, the feeling of being deep inside Abigail while looking at both women was soon having the desired effect. He could feel his passion building deep inside his body, aching to explode in pleasure.\n\n\"I can live with that,\" sighed Abigail. She reached her hand behind them and grabbed Jack's hips. \"Please keep fucking me. I'm so close.\"\n\nIn response to that, both of the other partners on the bed redoubled their efforts. Jack placed his hand around her breast once more, softly rolling the flesh in his hands while he focused on long, forceful strokes against her lower half. Abigail soon let out a babble of unintelligible words and moans, a sure symbol she was approaching the edge.\n\nAbove him, Kat began to softly caress Abigail's body, pressing her own teasing kisses against the other woman's soft flesh. It was the same move that she'd done for Jack just minutes earlier, and judging by Abigail's moans, it was having the desired effect.\n\n\"Oh, fuck, oh, fuck!\" Abigail clamped her legs down as her mouth fell upon. He could feel her pussy squeezing his cock forcefully, and he soon felt a rush of liquids coat his shaft as her orgasm hit with full intensity. She mewled and writhed on the bed as it ran its course, her body only stopping once she came down from the high.\n\n\"I'll never get tired of that,\" she said dreamily as she once more started to push back on his cock.\n\n\"Neither will I,\" said Jack with a grin. \"There's nothing sexier than watching you both cum.\"\n\n\"I don't know, Jack,\" added Kat with a raised eyebrow. \"I rather enjoy watching you cum.\"\n\n\"I'm getting there. I promise,\" he said while he started to pick the pace once again.\n\n\"I certainly hope so,\" said Kat. \"But just to make sure it's a good one, let me help you.\"\n\nThe blonde woman climbed up a bit higher on his body, using her limbs to ensure she remained out of the path of thrusting between him and Abigail. She climbed to the other side of the bed and cupped her tits with both hands. Leaning forward, she didn't stop until her nipple was only inches away from his lips.\n\nJack reached up and latched onto her nipple, earning a surprising gasp from the Galician woman. \"That's it, Jack. Suck my nipples, please,\" cooed Kat.\n\nHe gladly obeyed that request, teasing her nipple with his tongue while Abigail pushed back against his cock. It was sensory overload over him, soon being overwhelmed by the feeling of Abigail's wet pussy and sucking Kat's nipple into his mouth. He worked the little nub until it had to be painfully erect, at which point she simply removed it and pressed the other one into his mouth. If he thought he was enjoying the act alone, he was soon mistaken. Kat's moans were getting louder.\n\n\"Oh, yes, just like that, Jack,\" she whimpered. She was rubbing herself again with her free hand while he sucked, a job that he hated to have to see her do on her own.\n\nWithout a word, he replaced her hand with his, his careful fingers gently sliding across her blonde mound and dipping into her wet hole. Kat moaned loudly as soon as that first finger slipped into her pussy, and soon she was grinding down hard on his hand while he teased her nipples.\n\n\"You're going to make me cum, Jack,\" she whispered. She wasn't kidding. About a moment later, he felt his hand soon get coated in her juices as she shuddered above him. She pulled her sensitive nipples from his mouth as her own orgasm shook her body. \n\nIn the interim, it let him focus once more on fucking Abigail without any distractions. He grabbed her hip once more and really drove himself into her repeatedly. The both of them were soon making their own noises as he felt his orgasm starting deep within his loins. It wouldn't be long until it happened\u2014when he came crashing across the threshold of desire.\n\n\"Fuck, I'm going to cum,\" he panted as he felt the first spurt start to boil up his shaft.\n\nAbigail reached behind him and grabbed his hips, pressing him tightly against her slick bottom. The first splash of semen shot deep inside her as a result, as several more voluminous pumps filled her soaking, wet hole. \n\n\"Oh, right there,\" she purred, feeling the first squirt deep inside her. She wiggled her hips, pressing back tightly to make sure she got all of it. \n\nJack felt himself releasing the intense pressure against her rear end as his orgasm sated. Kat pressed into his lips softly as their tongues entwined, only releasing him once he pivoted to his back. In doing so, his softening member finally emerged from Abigail, leaving a trail of spent cum to slip out of her well-fucked hole.\n\n\"That looks just heavenly,\" whispered Kat, eyeing the both of their genitals.\n\n\"It felt just as heavenly too,\" said a still breathless Abigail. \n\n\"You'll hear no complaints from me either,\" added Jack.\n\nAbigail turned her body around to face him while Kat rested her head against his stomach. By this point, they'd all caught their breath from their previous exertion, even if they could all use a good shower at this point. It was one thing he missed about Septhada already\u2014the large, made-for-many shower stall was the perfect spot for washing off the smell and sweat of sex. He'd already tried it out once with the women and found it just the perfect size and temperature, especially compared with the tight quarters on the ships. \n\nOf course, there were no such facilities here in the king's tent, although he was sure they'd find a way to rummage up a bath in case he asked for one. Sadly, a bath didn't have the same appeal, so he resolved to just take care of it once they reboarded the Destiny this afternoon.\n\nAbigail seemed to be thinking along similar lines. \"In just a little while, we'll be back in our cramped quarters again on the Destiny. I've gotten used to having this much space too.\"\n\n\"Just for a short while,\" said Jack. \"At least until we reach Kat's house.\" He then turned to face the blonde woman. \"Do you have lots of space at your cottage?\"\n\nKat smiled. \"Plenty when compared to a cramped warship. Although I don't know how much of this we'll be able to get in.\" Kat circled her hands around the three of them, the meaning of sex heavily implied.\n\n\"Why not?\" he asked. \"It'll just be the three of us after all.\"\n\nKat opened her mouth to speak but no words came out. She closed it just as quickly, looking like there was something that she didn't want to give voice to just yet. \"I just mean we'll have some things to do on our short stay, that's all.\" She looked like she wanted to say much more but she didn't.\n\nBefore Jack could press her on it, Abigail started to speak again. \"I wouldn't mind some time right up against the water. You mentioned you're right on the beach, right? I could use some proper time in the sand.\"\n\nJack chuckled. \"We have plenty of sand here, you know?\"\n\nShe swatted his chest playfully. \"You know what I meant. An actual beach, not just desert.\"\n\nHe made a face at her, causing her to try to smack his body again. He caught her hand and brushed it away easily, which earned a playful smile from her. Abigail leaned in and kissed him longingly. \"It's not that I won't miss Andalucia,\" she said finally, once the kiss broke. \"I'm just ready to move on.\"\n\n\"But here I'm king,\" said Jack with a mock sense of pride. \"Anywhere else we go, I'll just be a naval officer again.\"\n\nAbigail sighed dramatically. \"And now my station goes down. Woe is me.\"\n\nHe reached out to tickle her, earning a hearty squeal from her as Kat soon laughed alongside them. \"I know how you feel, Abigail,\" teased Kat. \"Going from a palace to a ship. I hope we don't go any lower, or I just don't know what we'll do!\"\n\n\"Maybe we'll have to find a new lover,\" said Abigail with a shrug. The grin on her face never left.\n\nHe growled at both of them. \"I'm about to leave the both of you here and just go off on my own.\"\n\nAbigail rolled her eyes. \"As if you could bear to be parted from us. Face it, Jack. Your life is too good.\" She then traced her finger nails down his chest, stopping just inches from his cock. It was only once she grabbed it that she kissed him sweetly. \"I tease you too much. I love you, you know that, right?\"\n\nHe nodded. \"Remember what happens to girls that tease too much?\"\n\nHer eyes flashed with passion. \"I really hope it's a spanking.\"\n\nThe three of them laughed together and after some more light conversation, they began to slip out of bed. The sun was now high enough in the sky that it illuminated their portion of the tent enough to see despite not having any windows to the outside. Jack was the last to leave bed, always admiring the view of their two bodies the second they weren't obstructed by blankets. In his mind, both women were flawless\u2014beautiful specimens of femininity that got his heart racing every time. He greatly enjoyed watching them rummage around for clothing as he appraised every inch of their nudity. Even with the subtle differences between their physiques, he also liked the difference in their hair\u2014the darkness of Abigail contrasted evenly to Kat's golden locks. It was a mix that seemed to speak to him instinctively, and he had no idea how he enjoyed life, or previous partners, before the two of them.\n\n\"Are you just going to watch us all morning or are you going to get dressed?\" teased Kat, tossing her discarded shorts into his lap. She grinned as she began to slip on her usual forest-green outfit, soon covering her exposed body from view.\n\n\"I was thinking I might watch as long as I could,\" said Jack. \"I never get tired of it!\"\n\nAbigail walked over and grabbed his cock, already thickening while he watched them. \"No, it would seem you didn't!\" She gave him several firm strokes.\n\n\"Careful,\" he warned. \"If you get me hard again, we're going right back into bed.\"\n\n\"We have too much to do this morning, and not enough time to do it,\" said Abigail as she shook her head. She didn't stop stroking him however.\n\nJack pushed her hand away, even though she now had him at half-mast. \"Then stop stroking it!\"\n\nShe grinned wickedly. \"I just want to make sure you want me. I want you to be thinking about us all morning until we can get back into bed tonight.\"\n\n\"Trust me, I have enough of a problem as is not thinking about you both during the day,\" he admitted. \"Although this just seems kind of cruel to leave me this way.\"\n\nKat finished getting dressed before she sunk to her knees in front of him. Taking his cock in her hand, she gave it a long lick along the underside before patting it affectionately. \"That will have to do for now. Come on, we need to say our goodbyes to everyone here.\"\n\nJack groaned in frustration. \"You two are going to be the death of me.\" In response, both women just giggled and finished getting ready.\n\nAfter enough time (and after his cock was soft once more), Jack finally pushed off of his bed and began to get dressed. Today wouldn't be a day for the usual colorful and fancy silks of the king. Instead, Jack picked out his naval uniform and got dressed. He still wasn't completely used to the more conspicuous attire, although it was what the Andalucians expected. Truthfully, he was somewhat relieved to go back to his normal life after all the time spent in the desert country. Back out on the seas, he was just a commodore. It wasn't as stressful as being king.\n\nRight on time, Jack heard the rummaging of Bazu as he prepared for the morning report. Never one to slack at his duties, Bazu appeared at precisely the same time every single morning. Jack never understood how so much happened between his nightly briefing and the morning report, yet it always seemed to work out that something big happened while he slept. ",
        "However, today would be quite the opposite.\n\n\"Good morning, sire,\" said Bazu as he entered his chambers. The women had long since left to grab something to eat, and he remained seated at a makeshift desk awaiting the vizier. Bazu had come a long way from the timid and scared man he'd met when he first took the throne. It wasn't hard to tell he hadn't been respected by his predecessor, even though Jack found the man to be extraordinarily gifted at his job. It really served to endear the vizier to him, and as Jack got to know him more, Bazu started to come out of his shell. \n\n\"Good morning, Bazu. I trust you slept well last night?\"\n\nBazu grinned. \"Probably not as good as you, sire, but yes, it wasn't too bad.\"\n\nJack chuckled. Because of Bazu's regularity in his visits, there had been times when he emerged into his chambers to find Abigail and Kat still sound asleep. The vizier was one of the first to admit the attractiveness of both women, and as he became better acquainted with Jack, he wasn't one to not appreciate Jack's position.\n\n\"So what happened since we last talked Bazu? Anything new in the country?\"\n\nBazu grabbed the first scroll and opened it. \"It was exceedingly quiet last night, sire. Not that I mind that in one bit, but there's just not a lot going on right now. I do have the former slave report here though.\"\n\nJack had instructed him to put together reporting on the former slaves of Andalucia since he'd freed them. Even though Jack had paid them a month's worth of wages upon release, his biggest worry was upsetting the Andalucian economy and them not having enough time to adjust to their new status before the money ran out.\n\n\"Your Majesty, you'll be pleased to hear they are coming along well. It seems a good portion of them have gone back to their old jobs, although there's an actual paycheck coming in this time. Many of them were rehired by the families they used to serve. There's been some grumbling from the Andalucians at having another expense, but I think many of those households are too busy now with the day-to-day chores that all the time they used to spend training or fighting has been soaked up.\"\n\n\"That was my hope,\" said Jack. \"This country goes to war far too frequently. I can understand if an outsider invades, like the Swabians, but there's no reason for them to shed their own blood. In the end, they're all Andalucians. I was hoping they'd be too busy now to think about battle.\"\n\n\"It seems to be so, sire. I have no reports of any warfare between the clans. Which is odd to say the least,\" said Bazu. \"Usually there's someone who's fighting someone else.\"\n\n\"Good, then I can leave here and be at peace,\" said Jack. \"The last thing I want to do is leave for Picardy knowing I left some unrest behind me.\"\n\n\"About that, sire,\" said Bazu, folding up the latest scroll so that he could look at him. \"Are you sure you have to go?\"\n\nJack smiled. \"Going to miss me, Bazu?\"\n\n\"In a word, yes,\" said the vizier. \"I don't think there's been a king like you in a long time here, sire. Someone who understands the value of human life, not only with your words but with your actions. It just makes me nervous that you're already leaving us.\"\n\n\"It's not for forever,\" said Jack. \"I'll be back someday. Unfortunately, I'm a Javan naval officer first. I have other duties that I need to attend to.\" There was a rummaging of the tent again as another person stepped into the room. \"Besides, you'll have Masud here to help run things.\"\n\nMasud gave him a broad smile as he stepped into the room. Bazu bowed to the new Andalucian Regent, but not before Masud bowed to Jack. \"Good morning, Your Majesty. I trust you're well?\"\n\nJack took a deep breath. \"As well as can be, thank you, Masud. I was just telling Bazu not to worry. The country will be in good hands while I'm gone.\"\n\n\"As much as I can handle,\" said Masud. \"I'm not saying I won't make mistakes, but I'll do my best to govern in your name.\"\n\n\"I know you will,\" said Jack with a nod. \"You've been a great counsel to me since you've been by my side. I know Andalucia will be well-served in your hands. Now come, stay for the rest of the morning report. You should get used to these since you'll be in my place.\"\n\nFor the next twenty minutes, Bazu went over the rest of the details of the country for both men. Jack was pleased to see that Masud asked engaging questions, often coming up with pragmatic solutions to existing problems, as well as seeing some of those problems from an outsider's perspective. It was clear the man had a wealth of life experience, and it only served to remind Jack that he was leaving the country in capable hands.\n\n\"That should be just about all of it,\" said Bazu as he wrapped up the final scroll. \"Sire, I think that's going to be your last morning report for quite a while.\"\n\nJack turned to look at Masud. \"That just means he's your problem now.\" The elder man chuckled while Bazu didn't look nearly as pleased.\n\n\"I'm just teasing, Bazu,\" said Jack finally. \"There isn't a soul in the rest of Andalucia who could be a better vizier than you.\"\n\nThe man actually turned pink at the compliment. \"W-why, thank you, sire! I always try to do a good job, but I never really expected that!\"\n\n\"I had my suspicions about the way Vertulis treated you,\" said Jack. \"Which in all honesty, just serves to confirm all my thoughts about that man. He's better off dead. You're a wise counselor, Bazu. And a good friend as well. I shall miss you while I'm gone.\"\n\nBazu looked like he was ready to hug him. \"As I will you, sire. The country will miss you. I will miss you. Come back safely when you can.\"\n\nJack nodded to him before he embraced the man, patting his back. Bazu responded to the gesture with equal measure, even pulling away with slightly misty eyes which he looked to shield out of embarrassment.\n\n\"I should really get back to my own desk,\" Bazu said finally, gesturing to his partition of the tent. \"But thank you, Your Majesty. Safe travels out there.\"\n\nThe vizier gave one final wave before disappearing out of the partition.\n\n\"Funny man, that one is,\" said Jack to Masud once they were alone.\n\n\"I rather like him,\" said the other man. \"He's a bit eccentric, but you can tell he enjoys what he does. I can see why he made it this far up the chain.\"\n\n\"I think Vertulis would've probably killed him eventually,\" said Jack. \"He was like a whipped dog when I found him, skittish as can be. Which is a shame considering his talents, but I have a feeling he'll be better off now.\"\n\n\"I'm looking forward to working more with him, sire. Although not so much with you being away.\"\n\n\"Don't say another word,\" said Jack with a chuckle. \"I've heard enough from everyone else that doesn't want me to leave. It does grate on you after hearing it enough times.\"\n\n\"How about an appeal to logic?\"\n\nJack pursed his lips. \"You can try, but I'm not making any promises.\"\n\n\"Just hear me out,\" said Masud with raised hands. \"I know you're not from Andalucia, and you have duties towards your home country. With being an officer.\" Masud gestured to his uniform.\n\n\"Correct, but what does that have to do with anything, Masud?\"\n\n\"All I'm about to say is that we all have duties. I have a duty to my clan, sire. To be a loyal son and a good fighter when they need me, but I also have a duty to my family to protect them. To take care of my wife and my daughters. My duty to my clan came first, but my duty to my family is more important to me even though it came second. Can't it be the same for you?\"\n\n\"I see where you're going with this,\" said Jack. \"You think my duty to Andalucia is more important because it's an elevated position to the one I have already in Java?\"\n\nMasud nodded eagerly. \"Yes, sire. Who wouldn't want to be a king over that of an officer? Not to put down your home country, but it's true. Do you have a King of Java as well?\"\n\n\"An emperor, but that's practically the same thing.\"\n\n\"Exactly, sire. Do you think he'd pick being just about anything else over being an Emperor of Java?\"\n\nJack thought about his words for a moment. He saw the argument that Masud was trying to make, even though the Emperor of Java was a lot more powerful than the King of Andalucia. And he had a lot further reach. Even though Andalucia's warriors were fierce, they were still few in number to what the emperor could produce.\n\n\"Let me ask you something, Masud,\" said Jack, taking another line of approach. \"If someone turned against our country, against Andalucia, would you not want me as the king to pursue them and bring them to justice? Is not treason met by death?\"\n\nMasud blinked several times before nodding. \"It's true. Death is the only suitable punishment for treason.\"\n\n\"Then what would stop my emperor ordering my death for going against my own country?\" asked Jack. \"Java is much more powerful than Andalucia. That's not a matter of opinion or preference. I've seen both countries, and that's the honest truth. And I wouldn't be able to hide here behind the clans. If the emperor wanted me dead, he'd send legions of men and ships to accomplish that. Look at how much we've accomplished here with just my force of marines. Now imagine legions of them assaulting the shores. We wouldn't last a week.\"\n\nMasud took a deep sigh. \"It seems you've beaten me at my own argument.\"\n\nJack chuckled and patted his back. \"Believe me, the thought has crossed my mind. Maybe some day when I can retire, I can come live out the rest of my days in Andalucia, but for now, I have to give loyalty to my country. My first country. That's the thing that Andalucians can most readily understand, right? Loyalty to your homeland? It's something I have to give as well.\"\n\nMasud nodded. \"You understand why I bring it up though, right, sire? It just makes me nervous about you being away.\"\n\n\"I can understand that, believe me,\" said Jack. \"But you have the full force to rule in my name. You have the Sciavo at your command as well as the loyalty of the clans. If anyone makes trouble for you needlessly, deal with them. If the Swabians attempt to land in the country again, let me know right away. Andalucia is not so far away from Picardy that we can't attempt to head their forces off or cut into their flank.\"\n\n\"Is it your desire to take the war to Swabia eventually?\" asked Masud. \"Surely they will need to pay for their invasion here?\"\n\nJack thought about that answer for a few moments before he responded. While he would love nothing more than to bring a full-on start to hostilities with the Swabians, especially instead of fighting this cold, undeclared war with them, it would be a mistake at the current time. They were just too strong. Perhaps if he had the full resources of Java at his disposal, he could try, however his encounters with them thus far had only been a shadow of their real strength. He knew that if the Swabians came at him with full force, he might not be able to repel them.\n\nIt was also just as likely to spark that war with the annihilation of one of their regiments in the last battle. He didn't think that act would go without retribution either. \n\n\"That's a complicated answer, Masud,\" said Jack finally. \"I do think that time will ultimately come although I'm not sure when or how. My country is still fighting a war on the other side of the ocean. We came here to find allies, not to find new enemies. I'm afraid my leadership would look to prevent any further hostilities with the Swabians at least until our own war with the Occitanians is concluded.\"\n\n\"It does seem a bit shortsighted though, sire. You can't make new friends without inheriting their enemies too. I don't think your emperor understands just what that fully entails.\"\n\nJack chuckled. \"There are many who say that our emperor doesn't understand the majority of things that come across his desk. Yet, it's not my job to question orders. Just to follow them.\"\n\n\"So public obligation aside, what are your true feelings about it as a man?\"\n\n\"As a man, and a king, I'd love to see the Swabians punished for the pain they've brought to Andalucia. And to Sorella for that matter. And when that time comes, I'd like to be the one leading the charge.\"\n\n\"As will I,\" added Masud. \"If that day actually comes.\"\n\n\"I think it will one day. And we just need to be ready for it. Keep the Sciavo trained and ready for action while I'm gone. Make sure the clans still find time for training when they can.\"\n\n\"That might be hard with all the new chores they find themselves doing,\" said Masud with a displeased expression. \"Especially with the slaves now free.\"\n\n\"They can carve some time out of their day to make sure they're still in fighting shape,\" countered Jack. \"I know you may not have wanted to see their freedom, but it was necessary. Andalucia will be a better place now that all men are equal and free.\" \n\n\"You'll find this old warrior hard to convince on that front,\" admitted Masud. \"However, I will keep your ruling and make sure the former slaves stay free. I trust your judgment on this. You've never led me astray.\"\n\n\"And I hope I never will,\" said Jack with a small smile.\n\n\"How could you? You really are the Tur'hava, you know? Freeing the slaves changed our society forever. Our first king ushered in the Andalucia that you know right now. We've waited a long time for you to appear, sire. I knew something was different about you when we heard whispers about who you really were, right before we faced you in battle the first time. I suspected it when you met us across the battlefield after that day along the coast. You confirmed it for me when you took the throne. You're the Tur'hava. And for that reason, I'll follow you to my last breath.\"\n\n\"You know that I wake up every morning hoping to live up to the person you all believe me to be,\" admitted Jack. \"All of Andalucia has placed so much faith in me. My biggest fear is letting that faith be for nothing.\"\n\n\"The biggest fear of many of the kings before you was running out of wine or whores,\" said Masud. \"That's how I know you're different.\"\n\nJack extended his hand, which the elder man took willingly and clasped tightly. \"Please look out after my people and this country,\" he said, looking in Masud's eyes. \"Let me know if you need me.\"\n\n\"I'll do my best, sire. And come back when you can.\"\n\n\"You have my promise that I will.\"\n\nJack only released his hand a moment later, fully sharing in his understanding with the elder warrior. Masud bowed one last time before he left his partition, offering only the faintest of goodbyes before departing. Jack would miss all of them\u2014the vizier, the regent, the deputies, the chiefs, and the warriors. He hadn't expected Andalucia to be the source of so much pain upon leaving, but here he was. \n\nThe country had surprised him. Somewhere in the time when they first landed in Methusa, they had endeared themselves to his heart. Jack scoffed lightly at the thought. Who would have imagined such a thing after the first battle with the Muthada?\n\nIn a way, it paralleled the experience in Sorella as well. Finding himself in the middle of a war upon entry, he had to think quickly to prevent his force from taking a blow from which they couldn't recover. However, by the time they left Sorella, the island was at peace and set to rebuild. Could Andalucia now do the same thing? \n\nWas this going to be a pattern with every new country they visited in the Fourth Vector?\n\nIt was those questions that Jack pondered while they readied to depart. Around midmorning, the great tent of the king emptied out as all the Javans prepared to travel the short distance into Methusa to board their ships. Out in the distance, just off the coast, Jack could see the sparkling hulls of his task force at anchor, ready to receive them and to continue on their mission. It was a bittersweet feeling to leave Andalucia, especially with all they've accomplished.\n\n\"Having second thoughts?\" asked Vera as the group of Javans made their way to the main docks of the city. \"You look like you're deep in thought.\"\n\nJack shook his head. \"Not second thoughts, no. Just feeling a bit melancholy at having to leave this land. We're leaving now a lot differently than how we arrived.\"\n\nVera smiled. \"I'll say. I can't say a tiny part of me isn't relieved we're leaving. Even though I appreciate what you've done here more than others, I can't say part of me isn't secretly thrilled to be leaving this land.\"\n\n\"Those memories are hard to ignore?\" asked Jack. \n\nVera nodded quietly. \n\n\"Hopefully with what we've done, no one will have to know that kind of pain here again. No one will have to repeat your experience.\"\n\nShe turned to look at him, beaming with a smile. \"That's my hope too.\"\n\nAs the Javans made it into town, Jack gave the word for all the marines to reboard the ships. That took the longest amount of time, moving over a regiment's worth of men back out to sea but he would need them with him in the time ahead. A part of him wanted to leave some of them, perhaps even a battalion in Andalucia, but with his force as small as it was, he felt better about having all the firepower at his disposal moving forward. \n\nIt did require some creativity in getting the men lodged on the ships. The Destiny was the only ship built with the extra quarters to take large forces of marines, however her extra space capped out at two battalions. For that reason, Jack put Greg's original battalion, and one of the others from the 57th on the Destiny, while he spread out the remaining three battalions so that one lodged in each of the other remaining cruisers. \n\nQuarters were tight, especially on the Valiant which had the least space, but it would have to do for now. He was sure the men had a worse time crossing over to him initially when they were all crammed on the three other cruisers without the Destiny to take up space. Once the marines were loaded, one last launch boat was sent for Jack, Greg, Abigail, Kat, and Vera. It met them on the docks while his Sciavo accompanied them to the very point where their feet last left the soil of Andalucia.\n\nBehind the Sciavo, Bazu and Masud could be seen watching, offering silent waves as the launch boat started to push away from the dock. Jack waved in return, and soon the city started to recede into the distance behind him. Once they reached the ships, all that could be seen was the general outline of the former slave city, its white walls standing out in deep contrast to the light brown sand around it.\n\nI'm leaving it better than how I found it. At least, that's my hope, thought Jack as they reached the Destiny. They climbed up into the ship as so many sailors gathered around to greet his return. It had felt like a small eternity since he'd last stepped foot on the heavy cruiser, and he was relieved to see all those familiar faces around him once more.\n\n\"Just like being home again,\" said Abigail as she reached out to squeeze his hand. Jack smiled and rested his other hand against the metal railing. It did feel good to be back to his home.\n\n\"Welcome back, Commodore,\" yelled one of the sailors nearby. He offered Jack a small wave and an enthusiastic grin. It was a face that he recognized before. \n\n\"Thank you, Petty Officer Warren,\" said Jack with a smile. \"It's good to be back. Now, let's get going to Picardy.\"\n\n*****\n\nAdmiral Percival Bancroft sat at his desk in the imperial palace wearing a broad grin. In his hand was the very dispatch he'd been waiting for months. He was sure he probably presented a nearly ludicrous sight by the other officers of the Admiralty, grinning like an idiot in the middle of the floor, but at that moment, he couldn't care less. \n\nThere was much to be happy about right now, and in times like these, he had to celebrate when he still could.",
        "The message that had brought him such elation was the recent receipt of a new battleship from their main shipbuilder, JN Ironworks. The ship that was to be called the Charles IX was now ready for commissioning. Unlike its namesake, this was to prove to be one magnificent vessel. The first Javan battleship to come off the line in nearly five years, it was designed to be stronger than anything else currently afloat.\n\nAnd the firepower was exceptional. The ship had sixteen-inch guns, twelve of them in all arrayed in quadruple turrets. It was the first ship in any navy to successfully mount the sixteen-inch guns, the previous attempt by both themselves and the Occitanians never making it past sea trials due to compromised performance. \n\nAnd now he had it on his side.\n\nIt hadn't been without struggle. It was the one ship he wanted completed more than any other, especially given the current situation with the country's supply chain. It had been completed late, as the last crucial supplies to finish her were held up by the emperor's troops. Even its sea trials were massively rushed forward so that she could be ready for service. Behind her were three more of the same class of battleships, designed to completely upend the existing Occitanian dominance of the seas.\n\nAll of it was needed to release their main fleet from the blockade. Every successive day that the Javan fleet remained bottled up in Aberdeen was another that prolonged the war needlessly. Even though idiots like the crown prince and his father believed the war could be won on land, Bancroft knew that as long as Javan warships protected the homeland, the Occitanians couldn't take their cities or their people.\n\nIt was the quickest way for them to win the war. He just wished that others around him could see that as easily as he did. \n\nBancroft shook his head. It mattered not today. The last thing he wanted was negative thoughts to spoil his mood like it did so often on other days. In just a week's time, the Charles IX would be operational. He only wished he could attend the commissioning ceremony.\n\nAs hard as he tried to maintain his good spirits, it would soon be interrupted. Bancroft didn't realize it, but a presence had appeared behind him in the hall, and it was of the very last person he wanted to see. Normally, Bancroft could track the crown prince by his heavily-labored breathing and rumbling footsteps, however the corpulent man had managed to sneak up on him today. It wasn't until he heard his heavy jowls move that Bancroft sat upright suddenly, shocked by his sudden appearance.\n\n\"Well, don't you look like the cat that ate the canary today, Bancroft,\" said George with a sly grin as he moved around his desk, his breathing needlessly labored. \"You look like you just received some good news. Have we won a battle today?\"\n\nThe admiral resisted the urge to scowl. It was what George would have wanted anyway, so he was content to deny him the satisfaction.\n\n\"Not quite, Your Highness, but I have just received excellent news. The new battleship, Charles IX, has recently completed sea trials and is ready for commissioning. I daresay this might change our situation with our own fleet being so bottled up in Aberdeen.\"\n\nAs if Bancroft's respect for George couldn't go any lower, he was still surprised by his astonishingly stupid answer.\n\n\"I suppose that's not bad news, but what good to us is another battleship right now?\" asked George with a dimwitted expression on his face. \"We need fighting men right now. Not ships.\"\n\n\"That's where we have a difference in opinion,\" said Bancroft. \"This is most fortuitous news for our country. If we can break the back of Occitanian sea power, we can swing this war back into our corner.\"\n\nGeorge shrugged. \"An invasion of Occitania will do the same thing. Their army is second rate especially when compared with their navy. All we have to do is land our troops, and we can waltz our way to Montauban.\"\n\nBancroft highly doubted anyone would be waltzing to the enemy capitol. While he couldn't deny that Occitanian troops weren't known for their exceptional abilities, any enemy would fight harder when defending their homeland. It made the prospect of an invasion risky, and furthermore, what were they to do if they took all that ground? It would be harder to defend it against people who may be defeated in arms but not in spirit. It would be a quagmire for their armies, all the while the Ruthenians prepared to strike them while their backs were turned.\n\nNo, an invasion was most certainly not the way to go about it. Only destroying their fleet could prevent them any hope of ending a war with Java, rendering any further fighting futile. They could sit and sulk on their islands for all Bancroft cared. As long as his ships protected the shores, he kept Java whole.\n\nAnd he kept George and his father in power.\n\n\"I suppose it's a good thing I never got into the army then,\" said Bancroft finally, giving a disarming smile to the crown prince. \"I don't have half the mind for army affairs such as you do.\"\n\nThe smile that was on George's face dropped at the veiled insult. Bancroft watched the man's nostrils flare, and for a brief moment, the tension between them was thick with hostility. \n\nIt was only once that smile reappeared on the crown prince's face that Bancroft realized he hadn't bested the man.\n\n\"Well, consider this next assignment a learning activity, Admiral,\" said George as he leaned his heavy frame against his desk. The desk scooted two inches in the other direction, clearly not made for holding such hefty loads. \"Now is your time to learn a bit more about army affairs and how you can be of assistance to them.\"\n\nBancroft pursed his lips. \"What do you mean?\"\n\n\"I mean it's time for us to mount that invasion, old boy,\" said George with a smirk. \"We have almost thirty thousand men camped out on the north coast. Two whole divisions. The generals think we can land that force and take over Occitania, and my father agrees with them.\"\n\n\"And how do you suppose to get that many men across the straits without the Occitanians blowing your transport fleet out of the water?\" asked Bancroft dryly.\n\n\"Why, that'll be your job, Bancroft.\" George brought both his hands up so they were parallel with his frame. \"I need you to ensure that we have a highway to work with. The straits between Java and Occitania are only twenty-five miles at their narrowest. If you can give us protection on either side, we can sail right through and land on their southern coast. I can only imagine the thoughts of their people when they see a Javan army standing on their doorstep.\" George shuddered with his own form of pleasure, a mostly sickening sight that beckoned Bancroft's breakfast to emerge from his stomach.\n\n\"Do you have any idea how many transport ships you'd need to take across two divisions at one time?\" asked the admiral, already annoyed. \"The biggest ones only carry a thousand fully loaded men. Not to mention, they are slow as all hell. You'd be lucky to make that crossing with half the men in one day.\"\n\nGeorge nodded. \"Which is why we need your protection to get there.\"\n\n\"Not to mention, what about a supply chain? Reinforcements? Those men are going to need a link back to Java that just can't be extinguished by landing them the first time. Not to mention the Occitanians are going to get word and start patrolling that strait once they know we're there. It will make any kind of reinforcement impossible. And that's only if they find out about it late. If word leaks to them, they'll be waiting with their ships as soon as the first transport gets into deep water.\"\n\n\"My my, Bancroft, I didn't take you to be such a pessimist,\" said George with a subtle tsk-tsk. \"I thought you believed in the overwhelming power of Javan arms?\"\n\n\"I'm also a realist,\" spat Bancroft. \"You're going to land an inadequate force across a contested strait with no hopes for resupply. Do you really want to throw those men's lives away?\"\n\n\"All the generals agree it's a sound plan,\" said the crown prince defensively.\n\nYeah, they said that because they are all sycophants, thought Bancroft.\n\n\"It still seems foolish from a naval perspective,\" said the admiral finally.\n\n\"Well, perhaps it will give you a chance to see how the other side truly lives,\" said George with a broad grin. \"You just admitted not five minutes ago that you didn't have much mind for army affairs. Perhaps it's showing right now, Bancroft.\"\n\n\"And exactly how am I supposed to accomplish this task with most of my fleet bottled up in Aberdeen?\"\n\nGeorge shrugged. \"Be creative, Admiral! I'm sure you'll think of something. Hell, bring your new battleship that just came off the line. I'm sure my father would love to see his namesake floating off the coast and protecting his army as they crossed. Think of how much the press would enjoy seeing that?\"\n\nBancroft could only imagine the horror of the press when Occitanian warships started blasting the transports out of the water. An operation of this size and magnitude never escaped attention, and he was sure that the enemy would find out about it and try to contest the landings. But what did he have to prevent it with? Aside from a handful of small task forces, everything else was in Aberdeen. The new battleship would help, but it would need protection in the form of cruisers and destroyers, and there just weren't that many of them that were not tied up elsewhere at the current moment. \n\nBancroft was still thinking it over when George started speaking again. \"Look at it this way, Admiral. Imagine the glory that the navy will achieve by helping to make this invasion possible. You've been wanting a more expanded role for your forces. Here it is! It will also be your chance to truly strike back at them for their last raid on Belfort that took your own Admiralty building.\"\n\n\"I can appreciate the plan that you've ironed out as well as the intended accolades of its success,\" said Bancroft curtly. \"However, I don't think we are in any position to offer a naval invasion with our current situation.\"\n\nGeorge's smile melted instantly, only to be replaced by disdain. \"I wasn't asking for you to support the invasion, Admiral. I was telling you. That army is going to cross no matter what, and you will need to be there to support it. That's an order.\"\n\nBancroft ground his teeth together. \"And when does this little invasion kick off? How long do I have to prepare?\"\n\n\"You have a month,\" replied George. \"We kick off the invasion on the day that the full moon is due to rise. I'll send more specifics to you later on but know that's how much time you have to work with.\"\n\n\"Fine,\" answered the admiral. \"If that's the case, and I only have four weeks, you'll need to excuse me. I need to start preparing a force that can protect the transports.\"\n\n\"That's the spirit,\" roared George as he slapped his meaty hand against Bancroft's shoulder. \"I knew you were the man for the job. Keep me informed on what you intend to do, and let's talk again real soon.\"\n\nBancroft only nodded as George pulled himself off his desk and began to walk away. The admiral had nearly let out a sigh of relief before George turned around. \"And Admiral? Don't let me down.\" The fat man turned to walk away. \n\nDisembowelment or beheading? Perhaps both? Yes, if at all possible, I'll do both to him the day I take power, thought Bancroft as he went back to work. The man sure knew how to spoil his mood.\n\nHow the hell was he going to keep an invasion force safe with no firepower? \n\n*****\n\nThe Crown Prince of the Javan Empire found himself chuckling as he walked away from the desk of the Admiral Bancroft. He was sure the man was probably still staring daggers through his backside. He knew he shouldn't play with the admiral like this but it just felt too good not to. \n\nPeevish Percy Bancroft thinks he's too good for the rest of us, thought George. If I'm the only one willing to bring him down a level or two, so be it!\n\nFrankly, George was tired of the amount of clout that Bancroft held in the country's government. His father had an unhealthy degree of respect for the man that George just didn't understand. He'd always found Bancroft to be stuffy and pessimistic, capable of only looking at naval matters and not the big picture. But it was of no matter now. In a matter of weeks, their invasion force would be on the Occitanian shore, and their capitol city would come under siege.\n\nGeorge only wished he could be the one leading the troops in their final charge as they slaughtered those Occitanian bastards. He'd even brought up the discussion to the generals. Of course, they'd politely declined, and George knew the reason why. He slapped his fat stomach several times and chuckled. He'd make a hell of a target for any sniper on the field, and the death of the crown prince would be a terrible headline to read about in the press.\n\nEven still, he looked forward to the eventual victory parade, both through Montauban and Belfort once the war had finished. Perhaps he'd even make sure that Bancroft had a position of honor, that is, as long as the man still had his head by the time the treaty was signed. \n\nGeorge retired to his own personal quarters a few minutes later. He had nearly an entire wing of the palace to himself, save for the temporary Admiralty quarters in the grand hall. However, it did mean that, for just one man, he had almost fifty rooms to himself. Not bad considering there were some he hadn't been inside for years.\n\nMoving inside his own quarters, George came upon his own office and sat down. His chair was heavily-reinforced at the joints, a necessary precaution after the first time one snapped out from under him, but it was easily one of the most comfortable places to sit inside the entire palace. In front of him was his desk, filled with all kinds of messages, dispatches, orders, and bills. The only ones that he really looked at were those that originated with the army. He usually read those fully, but as for the rest of them, he couldn't be bothered with the other matters of state.\n\nEven though his father had tried to mold him into being the next Emperor of Java, with all the responsibilities that it came with, George was content to enjoy life at his own pace. Being crown prince meant all the pleasures of royalty with none of the obligations. Sure, he had to attend most of the functions and obligations, and occasionally he had to make state visits during times of peace, but for the most part, he kept to himself and his . . . pleasures.\n\nGeorge looked around the room, and seeing not one of the servants around him, he decided to ring the little bell on his desk. Its chiming echoed through the empty chambers until not a moment later, one of the servant girls came running to attend to him. \n\n\"Your Highness, how can I help you?\" she asked, bowing deeply in front of him.\n\nGeorge grinned lecherously. Amelia was one of his favorite girls. The only reason she worked at the palace was for her appearance. Dark, curly hair and big, green eyes, the girl was such a sexy little thing that she set his blood on fire just by being near him. She also was so damn top heavy that George had to wonder how she managed to walk upright\u2014at least without having massive amounts of back pain. Not any older than twenty, Amelia made a fine addition to his own personal staff.\n\n\"Is it only you here today? Or anyone else?\" asked George, gesturing around the corners.\n\nAmelia bit her lip defensively. \"No, Judd is here as well today.\"\n\n\"Get him. Quickly. Then come back here,\" ordered George.\n\nShe left only reluctantly, no doubt knowing what was to come. It was a scene he greatly enjoyed when it was acted out in front of him, and the lording of power over Bancroft had made him eager for their particular talents.\n\nThe one called Judd appeared a moment later. He had a shaved head, with only prickly remains left upon his scalp. A tall lad, he was noticeably thick in the back and chest as well. He was around the same age as the girl, a glowing reminder of his youth and virility. He'd do nicely.\n\n\"Good. Take off your clothes. Both of you,\" ordered George.\n\nThe two servants looked at each other before obeying his order. They both wore a simple servant's gown, easy to take off, and they fell to floor to reveal their nude bodies in a matter of seconds. George felt the first signs of life in his cock at seeing the girl's impressive tits, but also at the other servant's cock, which was showing the first signs of life. \n\nApparently, Judd was already noticing Amelia as well. He stole frequent glances at her body, no doubt knowing what would be coming next.\n\n\"Bend over my desk,\" George instructed the girl. \"You, get behind her.\"\n\nThe girl nodded uneasily and laid down against his ornate workstation. The other servant grabbed his cock, preparing to enter her from behind. George nearly shivered at the anticipation of their coupling. But he needed to do one more thing first.\n\n\"Wait just a second.\" George spit into his hand and reached behind the girl. He used the opportunity to coat her pliant hole with his saliva, getting her ready to take the cock hovering just inches away from her ass. Once he was satisfied with the result, he nodded back to the man. \"Begin.\"\n\nGeorge let out a low hiss as their genitals joined, and the girl let out a pathetic mewl. Finding his hand slipping into his robes, he watched as their hips began to thrust together in wild fashion.\n\nThis was true entertainment.\n\nThis was his reward for being the Crown Prince of Java.\n\nHis robes started to move faster.\n\n*****\n\nIt had been nine days at sea after leaving Andalucia when Jack was told that the task force should arrive off the coast of Kat's island home in Picardy. It had been an uneventful trip so far, much the opposite of the first time they set out for Picardy, and he'd been content to enjoy the sight of open ocean and nothing else. \n\nBeing back on the Destiny was a little weird for him at first. He'd spent so much time in Andalucia, and had been so close to death at times, that he wondered if he'd ever step foot on the mighty cruiser again. Yet, once she was fully underway upon leaving Methusa, Jack moved to the bow of the ship and smiled. He felt the soft mist of the ocean cover his face while the wind brushed through his hair. It was a feeling he'd long since missed\u2014the joy of being one with the water.\n\nIt also reminded him how cramped the ship was once again now that they had two full battalions on board. Many of them were new faces still too, men that Jack hadn't met or seen only once in passing. Every once in a while, he'd still see the faces of the veterans\u2014those few remaining cadres of marines that had been with him since the mission started. Their ranks were a lot thinner these days, and they'd truly survived hell together. Jack just hoped that he could get the rest of them back home without losing any more brothers. \n\nWith the threat of further hostilities on the horizon with the Swabians, it was a hope he didn't think would come to pass.\n\nAt the current moment, he could be found at the desk in his own quarters, catching up on the small mountain of paperwork that had been left for him while he was in Andalucia. Abigail was on the bridge commanding the ship, while Kat was still in his bed, writing something in that journal of hers. She did that often enough to catch his attention, although he never knew for sure what else was in it beyond the prophecy that she loved to reference. Fear of finding out further details always stopped him from pursuing the subject.\n\nAt this particular moment though, she had a troubled look on her face. Her eyebrows were drawn tight together and her lips were pursed tightly. He knew her well enough by now to know that something was bothering her.",
        "\"What's on your mind?\" he asked as he raised from the desk and approached the bed. Kat snapped out of her reverie and looked back at him, blinking steadily.\n\n\"Oh, nothing, I suppose.\"\n\nJack chuckled. \"Somehow, I don't believe you. Did you come across more prophecy?\" He tapped at her journal.\n\nShe shook her head and shut the book. \"No, nothing like that.\"\n\n\"What's wrong then? I can tell something's up with you.\"\n\nKat opened her mouth to speak but no words came out. Instead, she used a finger to grab a lock of her hair, twisting it around it. \"It's just . . . I don't even know what to say, Jack. Especially with us getting so close. I really need to . . . to . . . \"\n\n\"To what?\"\n\nShe looked at him helplessly. \"There's just so much on my mind right now. I don't know if I can get it all out like I'd want to.\"\n\nJack frowned. \"Do you need time to yourself?\"\n\n\"Perhaps, but I don't know.\" She bit her lip. \"Maybe I just need a nap or something. Something to clear my thoughts.\"\n\n\"Do you want me to stay with you or do you need me to give you some space?\"\n\nKat looked like she might cry. \"Is it okay if I have some space?\"\n\nHe pulled her in for a hug, letting her blonde hair tickle his nose. \"Of course. Does this have to do with us?\"\n\n\"Yes and no,\" she said, the sound muffled by his uniform. \"Can we talk about it tonight? Just the two of us?\"\n\n\"No Abigail?\"\n\nKat shook her head. \"Not yet.\"\n\nJack took a deep breath. \"Okay, that's fine. Tonight then.\" He stood up from the bed, resolving to head to the bridge in order to give her the space she needed. \"If you need me for something, just use that spare radio on my desk, all right?\"\n\nShe nodded quickly, slipping further into bed. She pulled the covers up to her chin. In that moment, she looked so vulnerable, so scared, that Jack didn't want to leave. He wanted to pull her to him and banish whatever demon was disturbing her from the inside. Yet, she didn't want him to comfort her right now. She wanted her space, and he would respect that. He just hoped that whatever was troubling her, she could confide in him about it tonight.\n\nAs he closed the door and began to walk to the bridge, he hoped that she wasn't getting second thoughts about joining him on this mission.\n\nOr with being with him.\n\n*****\n\n\"So what did you do this time?\" asked Greg between magazines as they fired off the stern of the Destiny. \n\nJack let out a deep sigh and looked over to the marine. \"I don't even know. She was fine this morning, at least I think she was. But then this afternoon, she started to get upset over something that she wouldn't talk about. Kat said we'd talk more tonight but that was the last thing I heard before I left.\"\n\nGreg slipped a new magazine into his NT-12 and began to riddle the target floating out at sea. In their time since coming back aboard the Destiny, they had resumed their shooting practice from the rear of the ship. Even though most of the trip through Andalucia had involved heavy fighting, the last couple weeks had seen peace through the island, and Jack wanted to keep his skills sharp.\n\n\"Maybe she's having second thoughts about your whole three-way relationship thing,\" offered Greg after the new magazine was unloaded. \"Maybe she doesn't want Abigail in the picture after all.\"\n\nJack shrugged. While the idea did have some weight, it was something that he didn't want to get into too much detail with his friend. The relationship was still novel even to him, and it didn't feel right talking about the specifics with an outsider, even if it was Greg. That kind of stuff was usually kept more private.\n\n\"I don't know,\" said Jack finally. \"But she was reading that journal of hers when she got upset. I have to wonder if that has something to do with it?\"\n\n\"Didn't you say before that she kept pages of prophecy within that book? Maybe she's all worked up about something?\"\n\nJack grunted. \"I hope not. I'm tired of hearing the word 'prophecy' anyway. Even with all that's happened in Andalucia, I get the impression that she thinks this prophecy of hers is behind it.\"\n\n\"What if it is? I know you hate the idea of it, but what if there are certain events that are guided along by the fates?\" asked Greg.\n\n\"Not you too,\" said Jack with a heavy groan. \n\nGreg started to laugh. \"The idea does have some merit. What we've achieved since we've been here is pretty damn remarkable, Jack. We've freed ourselves from certain death in Lishkerra, stopped a civil war and recovered more treasure than we could use in a lifetime in Sorella, and you're now the King of Andalucia, a country we were never supposed to step foot in. Not to mention half the other stuff we've done like completely destroying an Occitanian task force. We've been in the Vector for almost six months at this point. If the fates aren't guiding us along, I doubt we'd have ever made it out of Sorella.\"\n\nJack could only grunt in response. \"Maybe we're just that good?\"\n\nGreg chuckled again. \"That I don't doubt but maybe we're being helped along too?\"\n\nJack thought over those last few words for several minutes without offering a rebuttal. He had no way to prove Greg wrong, but he wasn't sure if he really wanted to do that in the first place. Even though the idea made him uncomfortable, he couldn't deny the extraordinary luck they'd had since this mission started. If something or someone was guiding their steps, he could eventually learn to understand that. Kat seemed to believe in it enough to dedicate her life to it. \n\nIt still made his traditional Javan sensibilities cringe, but then again, so did having a relationship with two women. If he could accept that, why couldn't he accept something else that he didn't have a concrete answer for?\n\nOne thing was for certain\u2014he needed to figure out what was bothering Kat and whether it was related to this prophecy.\n\n*****\n\nThat evening, Jack returned to his quarters after some time spent on the bridge. Abigail was the one to relieve him, volunteering to take the first watch to give him some alone time with Kat. He wasn't sure if Kat had talked with her, but Abigail seemed to understand that they would need the time to themselves and willingly give them the space.\n\nHe was grateful for that, however, it didn't make his steps any less heavy as he approached the door to his room. Shadows were already growing larger with the setting of the sun, and part of him wondered what awaited him on the other side of the door. Taking a deep breath, he reached for the handle and opened it.\n\nAs he expected, Kat was already waiting for him inside. She was sitting upright on his bed, her long legs crossed underneath her body while her journal set open just in front of her. She offered a weak smile upon seeing him, which didn't make him feel any better.\n\nClosing the door behind him, he then approached the bed. \"Are you ready to talk?\"\n\nKat nodded. \"Will you sit here with me?\"\n\nJack climbed onto the bed and positioned himself directly in front of her. The tension between them was awkward, more than he'd ever felt from her. Up until this point, time spent with Kat had been effortless, so it was an unusual feeling to not know where she stood or what was causing her such distress.\n\nIt didn't mean he didn't have time to think about what she could want to discuss. His mind kept coming back to their relationship. It was the one thing he dreaded to hear\u2014that she didn't want to continue being with him, or that she didn't want to share him with someone else. Could he really be forced to pick between the two of them if she forced that decision on him? The thought made his heart pound in his chest, and he was eager to start this discussion.\n\n\"This is going to be hard for me, so just bear with me, all right Jack?\" she started, taking a deep breath.\n\n\"Kat, I have to wonder what this is about. You've had me on edge most of the day. Is this about us?\" he asked, gesturing between them.\n\n\"It is, in a way,\" she said cryptically. \n\nJack gulped hard. \"Do you not want to be in a relationship with me? Is this whole arrangement not working for you?\"\n\nKat's eyes locked on his. She gave him a confused look for a moment before she slowly shook her head. \"Not at all. I've always known what it meant to be with you and what that would entail. I really like Abigail as a person, and I'm still willing to share you. I find myself with feelings for you that I've never felt for anyone else, so no Jack, this relationship is very much working for me.\"\n\nJack tried to withhold it but he didn't succeed when he let out a sigh of relief. He smiled for a brief moment as he ran his fingers through his hair. \"Well, that's a relief.\"\n\nKat giggled. \"Is that what you thought this was about?\"\n\n\"Well, yeah, when you said it was about us, I thought this had to be it,\" he said defensively.\n\nKat shook her head and then leaned forward, kissing him deeply. \"Nothing could change the way I feel about you. Trust me, okay?\"\n\nHe nodded and then returned the kiss. She melted against him briefly before pulling away and locking eyes with him once more. \"This has to do with something else, Jack. Something that I haven't told you.\"\n\nHe looked down at her journal and back at her. \"The prophecy?\"\n\n\"Yes,\" she confirmed. \"I know I've only given you bits and pieces of it so far. That was by design. I had to make sure that the person I was looking for was who I thought he was. When I saw prophecy being fulfilled right in front of my eyes, I had no doubt about it.\"\n\n\"There's that 'he' again,\" said Jack with a smile. \"Are you going to tell me who this 'he' is?\"\n\n\"Yes, Jack. Now is the time. You deserve to know.\"\n\nJack swallowed heavily. \"I guess I'm ready to hear this.\" He didn't see what the big deal was. He knew she was looking to find this person but how did it involve him?\n\nKat took another long breath. \"This person that I've searched for so long to find is of paramount importance. Not only to my people, but to the world. Jack, the person I'm looking for is the Galician King.\"\n\nHe gave her a confused look. \"But I thought the Galician kings were dead? Died out completely, right? That's why they have the regent in place since that throne is empty?\"\n\nShe shook her head. \"No, there was a survivor. A boy that was born to the last Galician King, Robert III. The world was told he didn't survive the stress of childbirth, along with his mother, but that wasn't the case. The boy lived.\"\n\n\"Why did they fake his death?\"\n\n\"There was a plot against the royal family that the king exposed. A plot by some very nasty people to remove them from the throne for their own gain,\" said Kat. \"Robert knew they would target his sons as the embodiment of their future as kings, so he arranged to have one go into hiding to protect him. By separating the family, they ensured its survival. The queen went with the newborn, and the world was told of their deaths. Ultimately, the king was correct. His eldest son was poisoned, and then he was next. The world thought the family line was extinguished.\"\n\n\"What happened to the boy and his mother?\" asked Jack.\n\n\"They hid themselves on a remote island in Galicia and tried to live a normal life. It was only the wise words of a prophetess that prevented them from pushing the boy forward to claim the throne. It was foretold that the family had to hide so that one day, an important heir could be borne from them, one who would bring back the balance to the world, bring forth freedom to those oppressed, and cast away evil forever.\"\n\n\"Those last lines are from that prophecy that you read to me back in Sorella,\" said Jack, tapping at her journal. \"You're searching for the Galician King with this prophecy.\"\n\nShe nodded. \"The important heir has arrived, Jack. He was born almost thirty-six years ago, and he has no idea of his true heritage. I've been tracking him ever since we found out he was the one we'd been waiting for. And I've found him.\"\n\nHe started to shake his head. \"Kat . . . \"\n\nShe slipped her hand onto his. \"Jack, it's you that I've been looking for. You are the true heir of the Galician throne. The Galician King is very much alive, and he is you, Jack.\"\n\nHe pulled his hand away from hers. \"No, no, no, that can't be right, Kat. Come on, I'm Javan. Who is it that you're really looking for?\"\n\nHer sky-blue eyes softened. \"Have you never wondered the circumstances of how I came to be attached to your group? Or the true reason why you alone of all your Javan countrymen have blonde hair and blue eyes? That's your ancestry shining through, Jack. You are the great, great, great grandson of that child that was spirited away before he could be killed.\"\n\nJack's mind was spinning. It was getting to the point that he could barely keep up with the words Kat was saying. How could she really believe him to be this Galician heir? He was a Javan naval officer, and he spent his whole life there. Until a few months ago, he'd never even heard of Galicia. \n\nThere must be some mistake.\n\n\"Kat, there has to be some mistake here,\" he said finally. \"I have Javan parents. Everyone I know is from Java. Hell, before our arrival in the Vector, no Easterner had ever been inside the Vector and lived to tell about it. You have the wrong guy.\"\n\nShe shook her head firmly. \"There are multiple signs that tell me that I'm right about my suspicions\u2014\"\n\n\"But, Kat, my parents were Javan. They have dark hair and dark eyes. They couldn't possibly be Galician heirs. I don't exactly know where my features come from, but they were normal Javan folks. I think they would have told me if we were some long forgotten heirs to some throne.\"\n\nKat took a deep breath. \"That's because they weren't really your actual parents.\"\n\nJack blinked. \"What? How can you even . . .?\" Jack thought back to every memory he had of his parents from when he was growing up. His father taught him how to sail their boat, how to be a man, and how to be brave. His mother was the nurturer, a kind presence who was always there to pick him up when he fell.\n\nHow could they have not been my real parents?\n\n\"Jack, there's so much to explain. So many details to it. But the people you knew as your parents weren't related to you by blood. When you were born, our enemies found out who you were and what you represented. It was no longer safe to leave you with your real parents. The only place you could be safe was across the ocean in Java. So they took you there. They found a young Javan couple, newly married and having issues with getting pregnant. You were a gift to them, a son of their own, and one they could love. It also put you far out of reach of your enemies, in a land where they could never touch you.\"\n\n\"Just stop. Stop,\" said Jack firmly. \"I don't know where you concocted this story, but I want you to stop, Kat.\"\n\nShe pressed her hand lightly against his face, forcing him to look at her. \"Jack, I can't. You need to know this. I've delayed this for too long, but I can't any further. Tomorrow, when we arrive at my house, I'll tell you more. I'll make sure you get the whole story. But trust me, I would never lie to you, Jack. I care about you too much.\"\n\nHis head was still spinning, and he felt like he might lose his dinner. Even though he was so sure of who he was and his life up until that point, now everything had a giant question mark beside it. Especially his parents. He wished he could ask them, but they'd been dead for half his life. What about Jocelyn though? His sister?\n\n\"My sister Jocelyn? What of her?\"\n\nKat shook her head. \"She's actually their child, related by blood. Which means, she's not actually your sister.\"\n\n\"Not even Jocelyn,\" he whispered. Of course not, not with her dark features. How didn't he see it before? The only one with his light skin, hair and eyes in his entire family. How had he never pieced it together before that he was different?\n\nOr was he truly different? Was she telling him the truth?\n\n\"What purpose is this for, Kat?\" he asked, clutching his upset stomach. \"What is to become of me?\"\n\nShe raised her chin when she looked at him. \"Your purpose will be to reclaim your throne. I won't stop this until I've seen you take your rightful place as King of Galicia. You will have a lot of enemies along the way. The Swabians will not permit a king to reemerge in the lands of their traditional enemy. Not to mention, there are many in Galicia that won't want to see the status quo changed. I fear we have a great conflict ahead of us, and you are destined to lead us through that conflict.\"\n\n\"Me? Why me?\"\n\n\"It's been foretold through prophecy, Jack,\" said Kat as she tapped at the lines of prophecy in front of her. \"The world has waited a long time for your coming. Even hundreds of years ago, there were those that were so frightened by the prospect of your coming that they tried to prevent it from happening. They tried to kill off the Galician royal family and nearly succeeded. Multiple generations of your family have stayed hidden, looking to keep you safe and to maintain the bloodline just so you could be born. And now here you are.\"\n\nShe softly caressed his cheek once more. \"You're the person we've all been waiting on. You're the king, Jack. Not just of Andalucia, but of Galicia.\"\n\nHe shook his head and pushed her hand away. \"I don't even know what to say to you now, Kat,\" he whispered hoarsely.\n\n\"I'm so sorry, Jack,\" she said. \"I know this is a lot for you. There will be more tomorrow when we get there to Picardy.\"\n\n\"How much more? I don't know how much more of this I can take.\"\n\nKat swallowed. \"There's two things waiting for you in my home. Something that belongs to you, and . . . someone that you need to meet.\"\n\n\"Who?\"\n\nShe shook her head. \"Tomorrow. I've thrown enough at you tonight. I'm sorry it had to be this way, Jack. I should have told you sooner.\"\n\n\"Yes, you should,\" he said angrily. \"How could you have spent this much time with me and not told me? Hell, Kat, we've been intimate together.\" Jack recoiled from her and pushed off from the bed. \"How the hell do you do that while keeping this secret from me?\"\n\nA tear slipped down her cheek. \"It wasn't easy. I'm sorry, I know how confused you must be. I had to be sure it was really you. When you freed the slaves in Andalucia, it only just confirmed it for me. I was so scared to tell you, scared of what you might think. Not only of the prophecy but of me.\"\n\nHe crossed his arms in front of his chest. \"You still should have told me sooner, Kat.\"\n\n\"I know. I'm sorry, Jack.\" Tears were flowing freely now. \"I can give you some time to yourself to process this. I'll go sleep in Vera's room tonight. Maybe we can talk in the morning?\"\n\n\"Fine,\" he muttered, crossing his arms. She leaned in to kiss his cheek before wiping her tears once more. In the next moment, she was gone, leaving the room with the subtle sound of the door closing.\n\nJack laid back against his bed. It was more out of necessity than anything as the contents of his stomach threatened to empty. This just couldn't be right. It would mean everything that he'd known about his life was a complete lie. His family wasn't even his own, just people with no connection to him at all, maintaining a falsity for his entire life. He wondered if Jocelyn even knew. Growing up, they'd been very close so part of him had to question if she could really hide something of that magnitude from him. Why hadn't his parents told him? Perhaps they'd been waiting for the right time, yet that accident that killed them prevented the news from reaching him.\n\nIn a way, it made sense. Greg's words from earlier rang through his head. Kat truly believed that this prophecy was guiding them, and for him, it was guiding his entire life. Even back to some ancestors so far back that he didn't even know they'd existed. \n\nAnd now I'm supposed to take the throne of a country I've never been to and save the world? ",
        "It almost sounded comical to think in that way. He was a nobody, just a damn naval officer from some country to the east. How could he be this long-awaited king? Yet, Kat seemed so sure of it. And she was so torn up about telling him.\n\nIt serves her right, for holding it from me for so long. She should have told me sooner!\n\nBut would he be any less mad at the outcome? Perhaps not. He just might have thought she was crazy instead and left her behind. She'd waited until he'd developed feelings for her in order to spring the news on him. When he wouldn't be willing to send her away for the news. It was a calculated move, and it hurt his head as well as his heart. Was she keeping anything else from him? And who did she want him to meet tomorrow? Could it be his real family? His real mother or his father?\n\nHow did she just manage to turn my world completely upside down?\n\n*****\n\nNeedless to say, Jack didn't get any sleep that night. His mind kept turning with the revelations from last night. Most importantly, he wondered what they would mean if they were true. Having to confront that those he called family for his entire life were strangers was the hardest part. In a way, it was a disparaging feeling. He almost felt abandoned by the real parents that he never knew.\n\nPart of him wanted to shrug it off as a mistake. That maybe Kat really did have the wrong guy, and nothing had to change about his life. Jack wasn't sure if it was his sense of irony, but something told him that there was merit to her words. The small voice in the back of his mind told him that she was likely correct. However, that didn't mean he would blindly accept anything without proof.\n\nAnd she still owed him a lot of proof. He hoped that whatever they would find today would put an end to any doubts that he might have. Either he was Jack Easterbrook, Commodore in the Javan Navy, or he was this long forgotten heir of the Galician throne. One way or another, he needed an answer.\n\nUnfortunately for him, his request to be left alone was honored for the entire night. Even when he half-expected Abigail to come to bed at the end of her shift, he received no other visitors until dawn when his deputy, Twitch, brought him the morning dispatches. The evening hours were quiet for the Destiny and the rest of the task force, and by all accounts, they should be reaching the coordinates of Kat's island by midmorning. \n\nAnd it was there that he hoped to find more answers to just exactly who he was.\n\nHowever, being alone all night made him want to talk to someone, anyone that would listen. He was tired of being alone with his thoughts, and he wanted to open up, even if it was just to chat about trivial matters as a means of distraction.\n\nFor that reason, he first headed down to Greg's quarters, however the man was not there. It was still early enough in the morning that it wasn't entirely a surprise, and Jack figured he'd probably spent the night with Abigail's deputy Brittany like he'd done before. Thinking about who else he could see, he went above deck to track down Vera. The Galician woman was always a good sounding board for just about anything, and she'd surely be able to find something to help take his mind off of recent events. \n\n\"Come in,\" she yelled through the door after he'd given a firm rap to it.\n\nJack opened the door to find three pairs of eyes looking at him. The first was Vera's, and she was sitting in a chair right next to her bed. Beside her was Kat, also sitting in another chair and facing the bed. The person in the bed was Abigail, still half-asleep, which Jack didn't consider surprising since she would have been on the bridge for half the night. The three women were talking amongst themselves, but the chatter died down instantly as soon as they saw him. \n\n\"I was just hoping to talk to Vera,\" he said quietly, as he watched the three of them.\n\nKat was the first to nod, and she soon sprung out of her seat. \"I'll give you both some time.\" She passed by him while offering a conciliatory look.\n\nAbigail was out of bed next, thankfully still wearing most of her uniform. She only had to put on her jacket before she too left the room, offering him a kiss before she slipped out. It left Jack alone with the last woman finally.\n\n\"You look like you've had a rough night,\" said Vera jokingly while gesturing to the bags under his eyes. \n\n\"You have no idea,\" he answered. He made for Kat's now empty chair and sat down across from the blue-eyed, blonde woman. \"I felt like I had a bomb dropped on me.\"\n\n\"That's what Kat said but she wouldn't tell us why,\" said Vera.\n\nHe gave her a look of confusion. \"You sure she didn't? You don't know what this is about?\"\n\nVera shook her head. \"Not a clue. She said it was between her and you, and that you would tell the rest of us when you were ready. I take it that time is now?\"\n\nJack mulled that question over for a moment before answering. Did he really want to start talking about something that he didn't have his own proof about? What if Kat was wrong? What if this was just a whole case of mistaken identity?\n\n\"Maybe not yet,\" he said finally. \"Just not the right time yet.\"\n\nVera nodded quickly. \"I understand. Are you two having any issues? I understand the relationship between the three of you is not exactly routine, but I'd hate to see it cause any problems.\"\n\n\"That's the least of my concerns right now,\" he said a bit too honestly. \"This is much bigger.\"\n\nVera really looked at him. \"Are you okay, Jack?\"\n\nJack took a deep breath. Was he? Not really.\n\n\"I don't know,\" he answered. \"But I hope to get more answers today.\"\n\n\"I really hope you find the answers you're looking for,\" she said sweetly, offering a touch of support against his arm. \"I hope you're as excited to see Kat's house as I am.\"\n\n\"You're going too?\"\n\nVera nodded. \"That's just what Kat was in here about. She requested that the four of us go to the island together. Me, you, her, and Abigail. She said there's something important there that will require all of us to be on the island.\"\n\nJack wanted to groan. \"You too? What in the world could it be that involves you too, Vera?\"\n\nShe gave him a look of confusion. \"I'm sorry? What do you mean?\"\n\n\"I thought this had to do with me alone. Why are you and Abigail involved?\"\n\nShe shrugged. \"I don't know, Jack. Kat wouldn't tell us anymore than that, only promising that we would find out once we were there.\"\n\nJack wanted to swear. It was bad enough that he had to suffer through this but to get the other two involved only served to agitate him further. For the first time, he felt real anger at Kat for the way she'd turned his world upside down.\n\n\"I know why I'm going, but I don't know what it has to do with you and Abigail,\" he said finally, once he calmed himself. \"I didn't think this involved either of you, but I guess we'll find out more shortly.\"\n\n\"Is everything going to be all right, Jack?\" she asked, giving him a vulnerable expression. \"I've never seen you like this, and it's not right for Kat to be this cryptic with me.\"\n\n\"I really hope it will be just fine, Vera,\" he said, pulling the younger woman to him. She hugged him tightly. \"I really just want to get to the bottom of this.\"\n\n\"You and me both,\" she said with a half giggle. \"This trip has been strange enough for me without adding in anything else.\"\n\nYou have no idea what's in store for you then, thought Jack. Especially once you find out that I'm supposed to be your long forgotten king.\n\n\"I'm sure whatever it is, it can't be that bad,\" said Vera once she pulled away. \"Then maybe we can enjoy a couple of days of quiet before we head further into Picardy. Maybe even get a chance to enjoy some time on the beach?\"\n\nJack chuckled. \"That would be relaxing if anything. I think all of us have earned a little reprieve after all that we've been through in the last few months.\"\n\nHe stayed to chat with Vera for another thirty minutes, mostly about casual subjects, until he was ready to go. The time spent with her helped him greatly. There was always something calming about her personality, something soothing about her presence. He could never quite put his finger on what it was, but Jack was grateful to have her along in any event. In times like these, true friends could be few and far between.\n\nAfter he left Vera's room, he made his way to the closest mess kitchen for breakfast. As luck would have it, he finally found Greg sitting alone with his own tray in front of him. Unfortunately, the look on his face seemed to match Jack's inner feelings, so he sat down next to him to find out what was going on.\n\n\"There you are,\" said Jack. \"I was looking for you this morning.\"\n\nGreg nodded quietly. \"Yeah, sorry, I was in Brittany's room over the night.\"\n\n\"I figured. How's she doing?\"\n\nGreg took a deep breath. \"Better than me. She dumped me.\"\n\nSo that explained why he looked the way that he did. \n\n\"How did that happen?\" asked Jack.\n\n\"I'm not really sure,\" said Greg sullenly. \"One minute, things were fine between us. She went wild once I was back aboard the ship. I mean, she usually always was a little on the wild side anyway, you know? Things have been great since we left Andalucia but the past few days, she was a little withdrawn. Then last night, we had sex and she said she doesn't want to do this anymore. She said she's basically bored of what we're doing, and she wants to see other people.\"\n\nJack let out a low whistle. \"Damn, she said all of that?\"\n\n\"Not in those words, but that's the intended message,\" said Greg quietly. \"It is what it is. I get it. I didn't think she was the marrying type but she was fun to be around. I just didn't expect it to go south nearly this soon.\"\n\n\"Well, I'm sorry to hear that, man.\"\n\n\"I'll be all right,\" said Greg while turning his attention back to his plate. \"Eventually.\"\n\n\"Maybe it's better that it ends now then. Especially if you think it didn't have a future.\"\n\n\"Maybe,\" said Greg. \"Just because I didn't intend to marry her though doesn't mean I didn't care about her. This one will sting for a little while.\"\n\nJack nodded. A small part of him wanted to commiserate with Greg about the news he'd received last night, but he held back. He got the impression that the marine just wanted to vent, and the last thing he wanted to do was to steal his thunder. So he just listened to Greg talk. He nodded when the man asked a question or gave his opinion when necessary. Mostly, Jack stayed quiet to just listen. It was what Greg really needed at that moment, and he was all too happy to provide it.\n\n\"Sorry, Jack. You didn't come here to listen to me bitch and complain,\" said Greg finally, once both their trays were long since empty. \"It just felt good to get all of it out there.\"\n\n\"I know the feeling,\" said Jack. \"You'll get back on your own two feet, I have no doubt about that.\"\n\n\"It's just hard being on the same ship as her right now.\"\n\n\"Well, maybe once we get to Picardy, some time ashore will be just what you need,\" said Jack. \"I don't intend to leave the ship without you with me, so there's that to look forward to.\"\n\n\"Speaking of Picardy, I heard we should be arriving at Kat's house lately. Anything you want me to do while you're on the island?\"\n\nJack shook his head. \"No. I don't know how long we'll stay there, but we do have our own business to attend to while we're there. Just hold down the fort for me here while I'm away?\"\n\nGreg nodded. \"I can do that.\" He reached out to smack Jack on the back. \"Thanks for hearing me out again. I appreciate it, Jack.\"\n\n\"Of course. Anything to help a brother,\" replied Jack.\n\nShortly after he'd parted from Greg, Jack got the message through his radio that they'd arrived at Kat's island home. Coming to the top deck, he looked out across the waves to see a small, light-blue cottage set right off the beach. He couldn't see many more details from this distance, but he hoped to find all the answers he needed inside that little house.\n\nAs he prepared to go ashore in a launch boat, he heard a familiar voice from behind him.\n\n\"Are you ready?\" asked Kat as she walked to his side.\n\n\"As ready as I'll ever be,\" he said quietly.\n\nShe bit her lip nervously. \"Are you still upset with me?\"\n\nJack wanted to chuckle at the look on her face. \"A little.\"\n\n\"I care for you so much,\" she said, pressing into his arms. \"For who you are in here, not for who your blood makes you. Please know that, all right?\"\n\nHe nodded wordlessly as she hugged him. She placed a soft kiss against his cheek before separating as Abigail and Vera appeared alongside them. \n\n\"Are we ready?\" he asked all three women. All of them nodded. He helped them get into the launch boat one at a time before hopping in himself, and they were swiftly lowered to the ocean to go ashore. While the rest of the task force anchored just off the coast, Jack watched as the little cottage appeared to get larger as they moved closer to it.\n\nIt really was a cozy looking home. As they neared the shore, Jack was able to see more of the light-blue colored building tucked in just off the coast. The roof was sloped along two sides, highest in the middle, and deep gray in color. He could make out two windows along the side closest to the water, and what looked to be a small deck that wrapped around the other side.\n\n\"It's been so long since I've been here,\" said Kat by his side. \"There were times when I thought I'd never see it again.\"\n\n\"Well, you're home now,\" said Jack. \"I'm sure it will sink in once we're inside.\"\n\nShe nodded and looked back to the house. Jack steered the vessel past the waves until it nudged into the sand. Hopping off the boat, he helped each of the three women with stepping off until they were more firmly planted on ground. Jack then pulled the boat from the water, depositing it not far from where the grass met the sand. If anything, it would be safe in this position despite the risk of the tides.\n\nOnce they neared the house, it quickly became apparent to Jack that they weren't alone. He could see curtains against the window moving on their own, a sure symbol that someone had just been watching them. Even though he knew that Kat wanted him to meet someone, part of him wondered just who this person could be. He rested his hand against the pistol at his waist, wanting to be ready in case he needed it.\n\nIt hardly came to that point. As Kat led them to the door, it opened before she even neared it. An older woman poked her head out from the door, followed by the rest of her. At first, she had a look of curiosity on her face. \n\nThat is, until she saw Kat. At that point, she broke out into the biggest smile and rushed forward to hug the much younger woman.\n\n\"Kat!\" exclaimed the older lady as she hugged her fiercely. \"I'm so happy to see you. It's been way too long.\"\n\n\"Evelyn, I've missed you terribly,\" said Kat against her. \"There were times when I thought I'd never see your face again.\"\n\nThe other three hung back to let the two women continue to greet each other. Jack looked over the older woman while she chattered. Her hair was a silvery-blonde color, and her eyes were piercing blue even despite her advanced age. She was short in statue, although he couldn't tell if she started that way or age had just brought her down over the years. She was clothed in a white garment that seemed to be just a shade duller than her own hair. There was a look of genuine joy written into her face at seeing Kat once more.\n\nIt was only once she'd greeted Kat that her eyes turned to look at the rest of them by the door. They started with Abigail, only to move to Vera, and finally to Jack. She did a triple take after looking at Jack, and she soon brought her hand up to cover her mouth in shock.\n\n\"Is that him? Is it really him?\" she asked Kat, her eyes wide with excitement.\n\nKat nodded. \"It's really him, Evelyn.\"\n\nThe older woman rushed past her to embrace Jack. He nearly felt the wind knocked out of his chest at the intensity of her squeeze, and she rested her silvery hair against his chest. He didn't know who this person was, but she was weeping and smiling at the same time, dampening the front of his uniform. He looked to Kat for help.\n\n\"I'm sorry, but can someone fill me in?\" he asked before his voice turned to a whisper. \"Who is this?\"\n\nKat locked eyes with him. \"That's your grandmother, Jack. Your real grandmother.\"\n\n*****\n\nJack felt numb as he was led inside the cottage by the older woman who was supposed to be his grandmother. Kat had called her Evelyn, and he couldn't deny the fact that there was something familiar about her as they walked inside. A quick glance back at Abigail and Vera seemed to confirm that he wasn't the only one that was confused. \n\nHowever, it was about to get worse.\n\n\"Her too,\" said Kat, referring to Vera. Evelyn wiped tears of happiness from her eyes as she looked at Vera, rushing just as quickly to scoop up the baffled woman in her arms. \n\n\"How is this possible, Kat? How did you find them both?\" asked Evelyn, weeping happily. \"I thought it would be hard enough just to find one, but you've really managed to surprise me.\"\n\n\"They both came to me. Or rather I to them,\" said Kat. \"Just like the fates intended.\"\n\n\"I'm sorry, but I'm with Jack on this one,\" said Vera with a confused look around the room. \"What is going on? Is this lady really Jack's grandmother?\"\n\nKat nodded. \"Yes, she is. And she's yours as well.\"\n\n\"What?\" whispered Vera. \"How can that be?\" Vera shared a look with Jack as the realization hit them both at the same time.\n\nKat walked over and slipped her arm around Vera's back. \"Vera, Jack is your brother.\"\n\nThe younger woman cupped her hands over her mouth and took several steps back. \"What? How?\"\n\n\"Kat, you really need to explain this to us. This is getting ridiculous,\" said Jack, looking around the room. \"In the last day, all you've done is drop bombs on me with half-hearted explanations. That needs to stop. I need the full story. So does Vera for that matter.\" Jack looked to Vera one more time. Could she really be my sister?\n\n\"Why is he talking like that?\" asked Evelyn. \"Does he not know?\"\n\nKat flinched. \"I only told him last night. Not the whole story, either.\"\n\n\"Good heavens,\" squeaked Evelyn as she fanned her face. \"No wonder they're so confused.\"\n\n\"I'm sorry, Evelyn. That is all my fault. I delayed too long in coming out with it. There were other complications as well,\" said Kat as her cheeks tinged with red. Kat's hand slipped into Jack's, a movement that was noticed instantly by Evelyn.\n\n\"Ah, I see then. I think I understand now,\" said Evelyn. \"Very well, it's time that we explained everything. We owe it to the both of them. Jack and Vera, will you please sit? And who is this lovely woman as well?\" she asked, gesturing to Abigail.\n\n\"Commander Abigail Wainwright,\" she answered proudly, sticking her hand out to Evelyn. \n\n\"The dark seed,\" muttered Kat quietly to Evelyn.\n\nEvelyn's face turned to shock with the realization. \"Goodness, you've found all of them.\" She then shook Abigail's hand warmly. \"Pleased to meet you, dear. Please have a seat.\" Abigail only gave her a slight look of confusion before the older woman turned away.\n\nEvelyn led them into a small living room that overlooked the coast. Jack recognized the drapes behind the windows, the same ones that Evelyn had been watching them from while they walked up to the house. In the distance, he could see the task force floating off shore. Part of him wanted to leave now, go back to the Destiny, and resume life as he knew it before yesterday. \n\nThe other part desperately wanted to hear everything that Evelyn had to say.\n\nJack sat down on a large couch and took the one side. Vera gave him a funny look as he sat down, no doubt because her own mind was still reeling, but she sat down in the middle beside him. Abigail took the other end, while Kat pulled up two chairs for herself and Evelyn to sit facing them. The tension in the room was heavy, and no one seemed to want to start talking first.",
        "\"Would any of you like something to drink before we begin?\" asked Evelyn as she looked around the room.\n\nJack shook his head. \"I don't mean to be rude, but what I really want are some answers. Drinks can wait. Please tell us what's going on.\"\n\nTo his surprise, Vera chirped up next with an equally strong response. \"I have to agree with Jack. Please start the story. Is he really my brother?\"\n\nEvelyn nodded. \"That is he. He's your older brother, and both of your parents are the same. Your father was my son, John. He's been gone for almost twenty-two years now, and there's not an hour of the day that goes by that I don't think about him. Jack, you're like a vision of him at that age, and Vera, you look so much like your mother.\"\n\n\"What happened to him?\" asked Jack.\n\n\"Killed,\" said Evelyn. \"Alongside your mother, and my husband, Will, by agents of Marcus Rosdahl, the former Galician Regent.\"\n\n\"The Galician Regent? But why?\" said Jack. \"If I'm supposed to be the Galician King, why would the regent want to hunt down my family?\"\n\nJack's words were honest and inquisitive, but they earned a round of gasps from both Vera and Abigail. Jack then realized it was the first time either of them had heard the news about his identity.\n\n\"What kind of game is this?\" asked Vera angrily. \"He's not the Galician King!\"\n\nEvelyn put her hands up to calm her. \"We'll get to that, my dear. But he's correct. Jack is the heir to the Galician throne. His birth has been foretold by prophecy for nearly two thousand years now.\"\n\nVera's mouth hung open. \"If he's the king, then that makes me . . . \"\n\n\"Correct, you're a princess now,\" said Evelyn with a sweet smile. \"But let me answer your brother's question.\" She then turned back to Jack. \"The answer to your question reveals the true nature of power. That is, those that attain power never seek to give it up. Yes, the Galician regents were caretakers of the throne as long as the royal family was gone, however, they were just supposed to be caretakers. When the first regent took the throne, it was written that he was supposed to give up the regency in case the heir to the throne could be found, which of course, he willingly agreed to do. Over time, all hope has vanished of the Galicians finding their heir, so the regents got comfortable with their power. They didn't want it to go away and would do all they could to preserve it.\"\n\n\"Marcus Rosdahl was just such a regent. He had the full power of the country behind him, and when he learned that the heir's family still lived, he sought to extinguish the line. He did it out of foolishness, thinking that if he did, his family would be able to rule Galicia forever. That turned out somewhat ironically for him though, but he did hunt us for all the long years he spent on the throne.\"\n\n\"How did he find out about you?\" asked Jack. \"I'm assuming if you've been hiding for that long, you had to have had a good hiding place.\"\n\n\"Someone tipped him off,\" said Evelyn with a pained expression. \"For nearly one hundred and fifty years, multiple generations lived on the same small, deserted Galician island, alone to ourselves. It was perfectly safe as long as we stayed on the island. However, we couldn't always stay there. There was no market or town there, so we had to cross to another nearby island for supplies. It was there that your grandfather let slip of who we were to someone he shouldn't. This man wanted a quick payday, and he tipped off soldiers of the regent. The guards showed up afterwards.\"\n\n\"What happened then?\" asked Vera.\n\n\"That was a hard day,\" said Evelyn with a distant remorse. \"We ran. We did the only thing we could do. Jack, you were still so little. Barely a month old. But the five of us traveled, and no matter where we went, Marcus' men weren't far behind. We knew that Jack was the one that the prophecy was about. It was no way to raise a child constantly on the run, so we had to make a painful decision. We sent him to a family on the other side of the world.\"\n\n\"Java,\" answered Jack.\n\n\"Correct, Jack. I myself took the journey across the ocean with your father and mother. We died our hair black during the journey, to prevent any rumors of foreigners from spreading around. Of course, there aren't very many blondes in that part of the world. We lived in the capitol of Belfort for nearly six months until we found someone who would take you, someone who would raise you like their own. Good people, your adoptive parents. They wanted so badly to have a child that they were willing to accept you as their own.\"\n\n\"If I'm to believe you, I need you to tell me their names,\" said Jack. \"You have to understand what this means to me, if what you're saying is true. Give me a sign that you're telling the truth.\"\n\nEvelyn looked at him and said his parents' real names like she just got done having a real conversation with them.\n\nJack's stomach churned. \"That's correct,\" he whispered, remembering the last time he saw their faces. To find out they weren't really his parents was a crushing blow. Almost as bad as if everything that Evelyn was saying was actually true.\n\nEvelyn reached out to pat his hand. \"I'm sorry, dear. I know what this must do to you. Just know your real parents loved you so much that they went to the other side of the world just to keep you safe. Your grandfather loved you soundly. I love you, even now. It makes my heart smile to see the man that you've become. The last time I saw you, you were only a year old.\"\n\nEvelyn's eyes became weepy again as she looked to fight the urge to hug her grandson. \n\nSurprisingly, Vera was the next to speak up. \"Where does that leave me? Did they give me up too?\"\n\nEvelyn nodded. \"Unfortunately, we had to, Vera. When your parents and I got back to Galicia, we were back to being hunted again. It took us ages to catch up to my husband, but we eventually managed. Marcus Rosdahl never stopped hunting us but it did go in waves. After a few quiet years, we found out that your mother was pregnant with you. I remembered holding you the day you were born, and the way you looked up at me was just angelic.\"\n\n\"However, Marcus Rosdahl was always close behind. He got better with age, trying new tactics to catch us. Unfortunately, he finally got his break. There was a fire in the house we lived in at the time, set by his own men. I don't know how he found us\u2014we were on some unnamed Galician island, but he did. I was the only one outside the house, and I saw the men running from the flames. Vera, you were the closest to the door, but the house burned too quickly, trapping your parents and my husband.\"\n\nEvelyn's head hung low as she wept again. \"After that day, it was just you and me.\"\n\nSurprisingly, Vera leapt out of the couch and went to comfort the older woman, placing her arms around her back. Evelyn pushed her head against her chest, breaking down into more tears. For several minutes, the elderly woman got out the rest of her tears before she was able to talk again.\n\n\"After that, I knew I couldn't keep you on my own. I was already advanced in age, and they would never stop hunting me. So I did the only thing I could do. I gave you up to someone I knew in a nearby town. A trader and his family, who were kind and honest people. They were Galician as well, so I knew at least you'd know about who our people were.\"\n\n\"Their tactics never changed,\" said Vera, now sobbing as well. \"My mother and sister died in a mysterious fire as well. Well, my adoptive mother and sister. Did they know who I was even then?\"\n\nEvelyn nodded. \"It's very possible. You're lucky to still be alive then.\"\n\n\"I almost died again. When my father's ship got wrecked in that storm. I was the only survivor.\"\n\n\"So that family is all gone then?\" asked Evelyn with a shocked expression.\n\nVera nodded.\n\n\"Good heavens,\" whispered the older woman. \"It's a miracle that you're still here. I give thanks to the fates for sparing your life.\"\n\nJack cleared his throat. \"So they gave up Vera and I? What happened next? Were you on your own for the next twenty years?\"\n\nEvelyn nodded. \"Just about. For some reason, it seemed like they weren't hunting us anymore. I've never met Marcus Rosdahl, but the man seemed to give up interest in us. I lived on the same remote island for almost twenty years with no incident. I thought that he might just spare my life.\"\n\n\"Perhaps he realized the error of his ways?\" said Kat, speaking up for the first time since the story began. \"That he shouldn't have persecuted you in the first place?\"\n\nEvelyn shrugged. \"I'm not sure, but I hope that's correct.\"\n\n\"You mentioned something about Marcus being ironic,\" interrupted Abigail. \"What was ironic about him and his family?\"\n\n\"He was so set on establishing his own family to rule by exterminating our own that he didn't realize what happened when he died nearly four years ago,\" said Evelyn. \"He did everything to ensure his daughter would inherit the regency. Women weren't traditional rulers of Galicia so there was some considerable resistance to the idea from the nobility. He had to pay off a lot of nobles to get them to even consider it. She was hailed as the regent and ruled for four months before she was deposed by her own cousin, one by the name of Eric Rosdahl.\"\n\n\"The current regent,\" said Jack.\n\nEvelyn nodded. \"Exactly. So Marcus couldn't even protect his own family. Unfortunately, the hotheadedness of youth seemed to flare up again in the form of Eric. We started to be persecuted again.\"\n\n\"What happened next?\" pressed Vera.\n\n\"This time, I was warned they were coming,\" said Evelyn, as she reached out to squeeze Kat's hand. Kat smiled down at her. \"I received a blessing in the form of Kat.\"\n\n\"You did not think me a blessing at first,\" said Kat with a small laugh.\n\n\"True, but we turned that around, didn't we?\"\n\nKat grinned.\n\n\"Anyway, Kat warned me they were hunting me again and generously made this house available for me a long distance away from Galicia. It was a hard trip for an old woman. Especially in consideration of the fact that we had to travel a long way around to avoid the Swabians. I shiver at the thought of what they would have done to us.\"\n\n\"Once we were safe on this island, we knew we had to find you, Jack,\" said Kat. \n\n\"And how did you do that? How did you even know I was coming?\" he asked.\n\n\"At first we didn't. Jacob and I guessed at where you could be. We spent over two years searching this part of the world for any hint of your whereabouts. But then luckily for us, we received a break.\"\n\n\"What kind of break?\"\n\nKat smiled. \"We were warned. All prophecy comes from seers or prophets. A prophetess was the one to let us know you were on your way and that you would arrive in Lishkerra. She told us the exact date you would arrive,\" said Kat. \"So we trekked our way to Lishkerra. It was hard enough to do it without being noticed by the Lishkerrans. As you've no doubt noticed, they are rather defensive of their island.\"\n\n\"I have,\" said Jack with a chuckle, remembering his time there.\n\n\"That's when we started to track you. We watched you in Sorella when you fought the battle in Heron's capitol city. When you started to move again, we followed your trail. It wasn't always easy, especially when you were at sea. However, we knew you were heading into the interior, so that's where we went. All the while, Jacob got weaker.\"\n\nEvelyn reached out to pat Kat's back. \"He passed, hasn't he?\"\n\nKat nodded silently, before wiping her eyes of tears.\n\n\"He was a lovely man. And a true friend,\" said Evelyn. \"He will be very missed.\"\n\n\"If you were tracking me all that time, Kat, were you even in danger when I found you?\" Jack gave her an untrusting look. \"Was that just some ploy to join my group?\"\n\nKat shook her head fervidly. \"Not at all, Jack! Jacob and I were used to working in unstable countries, but he was my protector when he was strong. He just got too weak in his advanced age. We couldn't travel by night like we used to because he couldn't handle it. I don't know how those thieves did it, but they surprised us. I thought I was a goner before you showed up. When I realized it was really you, I had to wonder if it was the fates that guided our paths together.\"\n\n\"And Vera's too?\" he asked. \"Was it the fates that guided her to me in Daimanos' palace?\"\n\nKat nodded, even though she looked uncomfortable. \"I really believe that, Jack.\"\n\n\"It just seems a little hard for me to believe this,\" he said. \"All of it.\" He then turned to look at Evelyn. \"Not that I doubt your story . . . or who you are, it's just a lot to take in right now.\"\n\nEvelyn smiled warmly. \"I understand completely. I still remember the day I found out that the heir of the Galician throne was my fiance. You can imagine my surprise at being told that story, much like your surprise right now.\"\n\nVera was the first to laugh. \"It took you that long to find out?\"\n\nEvelyn nodded. \"Oh, yes. Your grandfather was usually very cautious about who he told, as he should be. But I didn't find out until a week before we were married. I always thought he was rather strange, and of course once he explained it all to me, it made sense. But you have to understand what it means to be one of us. The world believes we're all dead. Many of them would rather us be dead instead of showing up alive.\" Evelyn then locked eyes with Jack. \"Especially you, Jack.\"\n\n\"Why me?\"\n\n\"Think about what you represent. A return to the old world. Of a strong Galician king who was overlord of all the western nations,\" said Evelyn. \"How many people would do anything possible to prevent that happening? The Swabians? Of course. But how many Galicians? Eric Rosdahl would not allow that to happen, and he would fight you until his last breath.\"\n\n\"This guy sounds almost as bad as the Swabians themselves,\" said Jack. \"How did he get to be regent?\"\n\n\"It's not a warmhearted man that deposes his own cousin, much less puts a price on her head,\" said Evelyn. \"Eric had a reputation for cruelty long before he became the regent. Unfortunately, it's only been exacerbated since he's been in power. I still have my own little network of spies in Galicia, and the word there is that he's even been allying with our traditional enemy to further empower himself.\"\n\n\"How can he even think to ally with such people like the Swabians?\" asked Vera with a disgusted expression.\n\n\"The Swabians have access to almost unlimited gold,\" said Evelyn. \"Gold will make many men do a lot of things they otherwise wouldn't. Eric is not strong enough to resist them. In fact, he eagerly works with them.\"\n\n\"At least we fixed that part about their access to gold,\" said Jack. \"I've become the King of Andalucia and have shut down the gold exchange going back to Swabia.\"\n\nEvelyn took a deep breath. \"While there is much more about that statement that you'll have to tell me about soon, the Swabians don't need outside gold. The endless mines of Swabia produce more than they need.\"\n\n\"Then why were they so interested in Andalucia?\"\n\n\"It's about power, Jack. The Swabians are always about power. The deeper they become involved in the society of the host country, the more they can act like a parasite to it. They suck it dry of their sovereignty. The Swabians have no need for more gold. Only power.\"\n\nJack mulled that idea over for a few moments without responding. It made sense to him. Even in Sorella, the Swabians were trying to weaken them by the war and by stealing their gold so they could once more conquer the island. Was it so far-fetched that they could be doing the same thing to eventually take over Andalucia?\"\n\n\"We live in very troubled times,\" said Evelyn as she closed her eyes. \"The Swabians are on the march in multiple directions. Galicia is weak and her traditional allies are either anemic or disarmed. The Swabian Emperor would love nothing more than to conquer all the countries of the Vector to have the people as his slaves. Galician power has historically kept this in check. What will the peoples of the world do when the very Galician Regent seeks to help them? They won't stand a chance.\"\n\n\"That's why you're here, Jack,\" she continued, patting his hand once more. \"These troubled times were foreseen two thousand years ago. That's why they gave us you as our protection. That's why they preserved our line, through the blood that runs through your veins. Look inside yourself, Jack. You are the king.\"\n\nAs Jack sat there absorbing her words, parts of his life flashed through his mind. He remembered his parents and growing up in their household. He remembered teaching his younger sister Jocelyn how to swim. In that moment, he realized how she wasn't even really his sister anymore. \n\nNo, my sister is sitting beside me, he thought while turning to look at Vera. Vera looked back at him as her hand crept into his. \n\nIn an odd way, that felt familiar to him too. He'd always known there was something different about Vera. Even from when they rescued her from Daimanos' harem, she always had that soothing presence to her. That feeling of belonging that he felt comforting. Was that his mind piecing together the link between them on a subconscious level?\n\nAnd what was he to do about being this Galician king? He already had one kingship that he didn't know what to do about but now there were two? For so long in his life, he'd distrusted prophecy and the belief that one's actions were predetermined. He was his own man, capable of making his own choices in the world. If he accepted this, it would mean he'd have to accept that his life was no longer his own. That it belonged to all those Galicians longing to have their king back. To all those free people in the Vector that wanted to stay that way, free of the Swabian menace.\n\nLastly, what would that mean for this current role in Java? He considered himself a loyal Javan citizen to his very core. Sure, there were some things about Java that he didn't like, but he accepted Java despite its flaws. Java was his home. The place that nurtured him and just about everyone that he knew. Would accepting Galicia mean turning his back on Java?\n\nWhen he looked up again, Evelyn was watching him. She wasn't the only one. All the other women were looking at him profoundly, awaiting his next move. Jack realized his brow was sweaty, and reached up to wipe away the slick sweat. \n\n\"I'm sure you have so many questions, Jack,\" said Evelyn quietly. \"We're all here to answer them. This won't be easy for you, we know that. If you need to talk about it, then let's do so. If you need time just to process it, we can give you space as well.\"\n\n\"It's just too . . . weird,\" he said finally. \"It's not that I doubt you, Evelyn. It's just what this means for my life. Your story was believable, and I don't think you were lying, but it's just going to be so hard for me to accept this. I don't know what to do.\" He placed his hands against his chin and leaned forward. It was honesty that he gave her, even if he was being too honest. But they had to understand what they were asking of him.\n\nSurprisingly enough, Kat leaned forward toward Evelyn. \"The sword?\" she asked simply, without any further explanation.\n\nEvelyn nodded. \"In the back room closet, under the middle floor tile.\"\n\nKat pushed up from her seat and left the room while Evelyn leaned forward. \"I understand this burden that's been placed on you, Jack. Perhaps it will be better to have some proof? Definitive proof?\"\n\nJack nodded eagerly. \"That would really help me understand this right now.\"\n\nShe reached out to pat his hand. \"Then that's what we'll give you, dear. While Kat attends to that, I'll show you some proof that I have. I hope you don't mind but all this old woman has left is her pictures.\"\n\nEvelyn reached for the table that was beside her chair, pulling out an old box from underneath. It sat upon a pile of old books, and it was small enough in size that Jack could only wonder how many pictures were inside. As Evelyn removed the lid and began to rifle through the small stack, she let out an excitable chuckle when she found what she was looking for."
    ],
    "authorname": "CJMcCormick",
    "tags": [
        "action",
        "adventure",
        "fantasy",
        "king",
        "oral",
        "prophecy",
        "sci-fi",
        "sword",
        "virgin"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/fourth-vector-ch-16"
}