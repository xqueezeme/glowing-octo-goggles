{
    "title": "Prince of Darkness vs Prom Queen 03",
    "pages": [
        "coldhands_warmheart \u00a9 2013\n\nThe sequel to Prince of Darkness v Prom Queen 1 &amp; 2\n\nChapter 1 Hooray for Hollywood\n\nThe calendar was watching him. Every time he glanced up it was staring at him, reminding him of the date of his first wedding anniversary. It was like one of those paintings, the ones with the creepy eyes, following him around the room. He tried to focus on the file in front of him. It was important, one of the biggest deals he'd ever worked on; it needed his undivided attention which it would have if the damned calendar would stop sneering at him.\n\nHis first anniversary. Donovan Corbett had never really expected to have a first anniversary, at least not one that meant anything. Marriage was not something he thought about as a realistic part of his life. He supposed maybe one day, in the far distant future, he might marry for the sake of companionship but the concept of spending his life with one woman was slightly abstract and completely unimportant.\n\nDonovan's world used to be orderly and routine, structured, ruled by rules. He worked. He made money and more money. He read mostly work related materials but sometimes for pleasure. He traveled the world visiting places he'd read about. He recognized and developed his talents as a Dominant, training both submissives and sex slaves. He was mostly solitary, not really living life, but rather existing under a solemn, quiet and almost isolated grey cloud.\n\nAnd then, along came Laci. His world unexpectedly exploded in chaos, sunshine, and rainbows.\n\nHe had known her for just over two years. He had loved her for most of that time although it took him a little while to figure it out, which seemed entirely fair since he was still trying to figure her out. He wasn't sure he'd ever manage to completely understand her but he was having the best time trying.\n\nWhatever it was he believed marriage was going to be like, it most definitely wasn't that way with Laci. Yes, she was beautiful. Absolutely, she was sexy. She was also smart, grasping some of his most complicated business concepts as quickly as he did. She fit so effortlessly into his life; he could hardly remember when she wasn't there. He never knew what to expect and was constantly surprised. She was incredibly caring, and the best part of his day was having her fly into his arms when he got home, or she got home. It never mattered who got home as long as they found each other.\n\nMaybe that wasn't the best part. The morning sex was pretty remarkable. Afternoon sex wasn't bad either. Lunchtime sex was impressive, and who knew there could be such merit in sex at teatime? Then there was pre-dinner and post dinner, late night, and midnight. Her energy level was astonishing.\n\nAs was her method of submission. Donovan was a Dom, ergo, he required a sub. The rules between Doms and subs were established long before Donovan ever considered entering the world of BDSM. Laci knew there were rules but created an addendum to each one. She was no traditional submissive but when she decided to submit to him, he usually couldn't walk in a straight line for the rest of the day. There would be one hell of a lot of happy Doms in the world if all subs used the 'Laci Method'.\n\nLaci Grace Corbett was amazing. Donovan supposed most men felt that way about their wives, but Laci was almost perfect. If men had a place where they could gather, each assembling the components of an ideal woman, the world would be flooded with reproductions of her. Some might be taller and some might have red hair, but when it came to heart, soul, loving, and understanding, Laci was what every man secretly wanted.\n\nShe knew Donovan like no one else. She knew when he wanted her by his side, but she also knew when he wanted to be alone. He'd been on his own for a long time and she understood how sometimes he needed his quiet time. She knew when his work day had not gone smoothly and was there with hugs and words of encouragement or support. She knew when he'd accomplished something wonderful and her methods of celebration made wonderful even better. She didn't completely agree with or understand his need to maintain absolute control as a Dominant, but she accepted it as part of his job and part of who he was as a person. That, alone, made her extraordinary.\n\nSometimes he found himself almost intimidated by her and all she could do. Donovan had grown up not knowing how to do anything for himself. His instincts were unparalleled when he was dealing with business, but his instincts about simple things were almost nonexistent and he paid people to do what he couldn't. When Laci came along, she showed him how to do all kinds of things. He may have taught her about business but she taught him about life and how to really live it. Incredibly, she never made him feel foolish for not being able to do things. She was patient and laughed with him but never at him. She scolded him occasionally when he was being a little compulsive, but habits were hard to break and sometimes he did things just to annoy her since it so often worked to his advantage in the best possible ways. Who but Laci could 'insta-fuck' anytime, anywhere, and hardly get a hair out of place?\n\nEverything seemed easier or better when she was around. Sharing things with her made him feel like he was experiencing them for the first time. She never nagged or complained. She never demanded anything. She had no expectations or entitlements. She didn't judge him and even if she didn't always agree with him, she never really tried to change who he was. She made him smile. She was always cheerful, bringing sunshine into his cloudy world. She made him happy and seeing him happy made her happy. He couldn't recall a time when he was ever as happy as he had been since Laci came along.\n\nWhen he proposed to her he gave her a blue diamond, partially because it matched her eyes and because blue was her favorite color, but it was also because blue diamonds were special and rare, and so was Laci. She loved her ring, but extravagance wasn't important to her. It was almost frustrating because Donovan could have afforded almost anything she desired and would have given her anything she asked for, but none of that mattered to her, in fact the only thing she told him she ever wanted was his love, his respect, and mutual trust. She wanted to be able to trust him and know he trusted her.\n\nCould he really have gotten that lucky? Could someone as perfect as Laci really exist? His life could not have possibly been better, until the day he decided to do something monumentally stupid and fuck it all up. He had to pat himself on the back and give himself a standing ovation. Ever the over-achiever, when Donovan Corbett fucked things up, he did it better than anyone else.\n\nHe supposed he could blame Trent Nichols.\n\nWhy the hell was Hollywood mega-star and actor Trent Nichols friends with Laci? Weren't actors supposed to hang around with other actors, swapping actor stories, bragging about actor accomplishments, and sharing actor idiosyncrasies? Did all Hollywood mega-star actors have another man's wife's number on their speed dial?\n\nTrent came to town to film a movie. He got to know Laci when she asked to interview him and before long, she was off on a California adventure with her new best friend. She said she was only going to be gone for a couple of days but it seemed like forever and Donovan missed her. For the first time in his life, Donovan Corbett missed someone and that was an emotion he had never experienced. With the possible exception of Victor, everyone in Donovan's life was expendable until Laci came along. That was the first time he started to realize how much she mattered and how much he cared.\n\nOf course she had come back to Georgia. Donovan and Laci were on their way to very happily ever after, until . . . Trent Nichols, part 2.\n\nAccording to Hollywood buzz, the film he made the previous year about a haunted plantation was going to be a blockbuster and Trent was already in preparation for a sequel. The first film hadn't even made its way to theaters yet, and it was buzzing all over the place. Who the hell cared about Hollywood buzz? Buzzing was for bees and people who drank a little too much, then said stupid things. Donovan would come to know much more about buzzing and saying stupid thing as the days went on. Little did he know he was about to become an expert in both being buzzed and stupid.\n\nSuddenly Trent was in constant contact with Laci, as in Laci CORBETT, who was now MARRIED and lived in Georgia with her HUSBAND and didn't need to buzz with an actor who was constantly on the covers of magazines and dated every woman in the western hemisphere. And it was for business. Right. It was for film-making business. Sure it was. Trent Nichols who had been acting in and producing films for years needed Laci CORBETT'S business advice for his new film being filmed in Georgia. Right. Business.  \n\nTrent needed to know about this place and that thing and thanks to her job with Donovan's cousin Marian, Laci became his Georgia tourism liaison. Trent Nichols was obsessive and compulsive and obsessively compulsive, and sometimes called Laci ten times a day because obviously he had no one in the entire fucking state of California to talk to and had to call Georgia and talk to her. He had to call Laci who knew almost nothing about the film industry because wasn't that what all obsessive, compulsive Hollywood mega-star and mega-sleaze actors did? For business? Of course they did.\n\nLaci's new best friend was Trent Nichols. Donovan's new best friend appeared in the form of a green-eyed monster. Jealousy was another emotion Donovan hadn't experienced until Laci but he and the monster were now spending many hours together, happily plotting the demise of Trent Nichols. In all fairness, Laci never tried to hide her telephone affair. She spoke very openly in front of Donovan and it actually seemed as if every topic was somehow involved with the film. She was also good about setting certain parameters. Trent had her attention when she was on the phone, but she'd shut the phone off and give Donovan her full and complete attention during lunchtime and teatime and other such times.\n\nBut at long last, Trent was coming to town. He had figured out what needed figuring, logic-ed his logistics and could finally get off the fucking phone, start working, and leave Laci alone.\n\nAnd that was when Donovan's life became one giant Hollywood premiere and bumpy red carpet ride. Blockbuster? Ballbuster? The critics haven't made up their minds yet.\n\nIt started with the opening of the suspense thriller, 'GUESTHOUSE', and the fan blades started to slowly rotate, unaware that the shit was soon to be hitting. Innocent and na\u00efve Laci, obviously knowing nothing about slimy actors who had dated every woman in the western hemisphere, asked if Mr. Mega-Sleaze could stay in the guesthouse. He needed a quiet place to work, away from distractions and people wanting autographs. It would also give Donovan the perfect chance to get acquainted with Trent, who was a really nice guy. Sure he was. He was a regular Georgia peach. What was Donovan supposed to say to her request? Laci never asked for anything and Donovan reasoned it was probably a good idea to keep his enemy close.\n\nThus paved the way for the wacky comedy, 'JOB-OFFER' and the blades on the fan started to spin just a little faster. Cousin Marian, traitor and Laci's boss, had been speaking to Trent who, she agreed, was a really nice guy. Trent needed an assistant for a few weeks before filming started, and Marian suggested Laci. It wasn't tourist season, things were quiet in the office, plus Trent and Laci had been working together for the last few weeks, so he knew he could trust her and they got along like two fucking peas in a fucking green pod, coincidentally, the same shade of green as the eyes belonging to Donovan's monster friend. It was bad enough he called her constantly and was going to be staying in the guesthouse, but now she was going to be spending all day with Mega-Sleaze. Thanks, Cousin Marian.\n\nIn his worst nightmares, Donovan could never have predicted the outcome of the highly charged and absorbing, 'CONVERSATION-IN-THE-GARDEN'. Trent had been in town for about a week and, surprisingly, seemed to be a really nice guy. He was kind of quiet, slightly insane, but thanked Donovan for agreeing to the use of the guesthouse and was very respectful of Laci, who he promised not to monopolize. Donovan was actually starting to wonder if he could have been ever so slightly wrong about the actor. That was until the afternoon he came home early and overheard Trent and Laci in the garden. The garden was back to back with Donovan's office, and while it was hard to see them, he could hear every word.\n\n\"Why do you stay with him?\" Trent was asking. \"I can see how horribly he treats you.\"\n\n\"Horrible? You can't begin to understand how repulsive he is,\" was Laci's response. \"He lied to get me to marry him and I'm nothing more than another acquisition. He doesn't care about me. He doesn't care about anyone or anything but himself. I truly hate him. I hate the sound of his voice. I hate when he touches me. I hate opening my eyes in the morning and knowing he's going to be there.\"\n\n\"Let me help you,\" Trent told her. \"I can help you get away from him. I can make sure you get away and you're safe.\"\n\n\"No you can't,\" Laci told him, sounding pitiful. \"You don't know how violent and relentless he is. He'd find me no matter where I went, and if he knew you'd helped me, he'd be vicious enough to kill both of us. Besides, I'm entitled to his money, and I'm going to make sure I get it. He spends thousands on himself, but he's the most tightfisted bastard in the world when it comes to me. He loves hearing me beg, but one of these days, I'm going to have every dime and without his money and his power the world will finally see him for the vile creature he really is.\"\n\nDonovan was stunned. He bolted from the house before he actually did do something violent. Trent Nichols might have fooled everyone else, but he had never fooled Donovan. But Laci? On some level, Donovan was hurt to the point of devastation, but mostly, he was numb from hearing Laci's words. She hated him? She hated being touched by him? All she wanted was his money? He'd never quite been able to figure her out but how could he have been so completely wrong about her? Having a broken heart was another brand new emotion and one he never expected to experience because of Laci.\n\nDonovan Corbett was never indecisive about anything, but for the next few days he was a complete and total wreck, not knowing what to do. He snapped and snarled at everyone, especially Laci. When she tried to talk to him, he just snapped and snarled even more. He actually heard her pretending to be concerned when she asked Victor if Donovan was ill or having trouble at work, but even Victor, who was used to the many moods of Donovan, was staying out of his way and didn't have any answers.\n\nThe damned fan was picking up speed and the plot thickened, leading to the powerful and dramatic, 'HOW-MANY-BROKEN-HEARTS-DOES-IT-TAKE-TO-SPELL-STUPID?'.\n\nDonovan was out of his element on several levels. He understood strength and control better than anyone, but jealousy, hurt, and broken hearts were not part of his curriculum vitae. No part of his training, nothing he had ever experienced had prepared him for what he was feeling, and part of that feeling was anger. Some of it was directed at her, but largely he was his own target. How could he have misread her? He had been reading people for years but Laci was a book of blank pages. How could he have allowed himself to care for someone so deeply that her betrayal hurt so much? Should he divorce her and throw her out? Should he make her life a living hell and show her how hateful and vile he could actually be? Should he leave, pretend it didn't matter, go on a very long, extended business trip and never return? Dominants didn't wallow in broken hearts. Childish though it might be, what he really wanted to do was hurt her as much as she had hurt him.\n\nHow many broken hearts did it take to spell stupid? In Donovan's case, one was more than enough. To avoid facing Laci, he was hiding in his office, drinking more than usual and starting to feel the buzz. While going through the forgotten recesses of his desk, he came upon an envelope containing a few old and compromising photos of someone who had been one of his subs for about twenty minutes so long ago he had forgotten her name. He wasn't sure why he did what he did. Victor had always thought Donovan was a little crazy, so perhaps it was the insanity. It could have been the desire to hurt or maybe it was the alcohol, but Donovan and his newly acquired green-eyed buddy found Laci, threw the photos in her face and told her the reason for his recent surliness was because he was having an affair. She just looked at the photos and at him, said, \"Okay,\" then left the room.\n\nOkay? He had just given the best performance of his life and all he got was 'Okay'? Wasn't there a gold statuette for 'Best Performance by a Slightly Buzzed, Controlling Dominant on the Brink of Insanity'? The statuette was going to have to wait because the blades on the fan were really starting to spin and were about to propel Donovan into yet another premiere, the satirical, comical, and thought provoking, 'CONVERSATION-IN-THE-GARDEN -- THE SEQUEL', and it was definitely not the type of climax he was usually accustomed to having.\n\nHe was back in his office and it couldn't have been more than an hour after his photo tossing frenzy when he overheard Trent and Victor talking in the garden.\n\n\"Why do you stay with him?\" Trent was asking. \"I can see how horribly he treats you.\"\n\n\"Horrible? You can't begin to understand how repulsive he is,\" was Victor's response. \"He lied to get me to marry him and I'm nothing more than another acquisition. He doesn't care about me. He doesn't care about anyone or anything but himself. I truly hate him. I hate the sound of his voice. I hate when he touches me. I hate opening my eyes in the morning and knowing he's going to be there.\"\n\n\"Let me help you,\" Trent told him. \"I can help you get away from him. I can make sure you get away and you're safe.\"\n\n\"No you can't,\" Victor told him, sounding pitiful. \"You don't know how violent and relentless he is. He'd find me no matter where I went, and if he knew you'd helped me, he'd be vicious enough to kill both of us. Besides, I'm entitled to his money, and I'm going to make sure I get it. He spends thousands on himself, but he's the most tightfisted bastard in the world when it comes to me. He loves hearing me beg, but one of these days, I'm going to have every dime and without his money and his power the world will finally see him for the vile creature he really is.\"\n\nSlightly buzzed? Maybe. On the brink of insanity? Probably, but there wasn't anything wrong with his hearing.\n\nInstantly he was out the door and into the garden, where Trent and Victor sat calmly reading a script and rehearsing a scene from Super Atomic Mega-Sleaze's film, which was supposed to be about some damned haunted plantation and some damned ghost creating havoc for all who visited that very same damned plantation. Donovan's life had enough havoc. It didn't need any assistance from Trent Nichols and his fucking haunted script.\n\nAh! The magic of Hollywood. Who would have ever guessed that Trent's ghost and Donovan's monster would become acquainted?\n\nThings like this didn't happen in real life. They only happened on some stupid Hollywood soundstage. Had he actually overheard a rehearsal and jumped to enough wrong conclusions to earn Olympic gold? Had he actually been foolish enough to believe what he heard were his amazing wife's own words, and not those of some demented screenwriter? Had he actually just confessed to an affair he never had solely for the purpose of hurting that same amazing wife the way be believed she had hurt him? How the hell was he going to explain his lunacy to Laci?",
        "Turned out -- he didn't have to. The fan had finally reached maximum speed and the shit was flying in every direction.\n\nBy the time he went looking for her, she had moved lock, stock, and stuffed unicorn, out of their bedroom to the guest bedroom at the far end of the hall. When he tried to talk to her and point out that two people who cared about each other shouldn't go to bed angry, she pointed out that he didn't have to worry because she wouldn't be going to bed with him.\n\nStupidity, thy name is Donovan Corbett, except, he wasn't stupid. He was exceptionally smart and ran his corporate empire and his Dominant empire with a very skilled and controlled iron fist.\n\nAnd then there was Laci, Donovan's own personal, blue-eyed, angelic form of Kryptonite.\n\nThe calendar was waving to him, pointing out how little time he had to unfuck all that had been fucked.\n\nReal life wasn't always a big budget, passionately gripping theatrical release with a predictable but happy ending. It wasn't long until his first anniversary and Donovan had the very distinct feeling if he didn't figure things out, there was a good chance he wouldn't be having a sequel of his own.\n\nChapter 2 Egregious Miscalculation\n\nVictor was clattering around the kitchen while Donovan was having a cup of coffee, pretending to read the newspaper and attempting to sort out his dilemma. How in the hell could Victor make so much noise? He was one person with a decibel level usually in the range of a herd of stampeding elephants.\n\n\"Victor, could you stop whatever it is you're doing and give me a little peace and quiet?\"\n\n\"Not doing anything. Just standing here waiting for you to tell me what's on your mind.\"\n\n\"Nothing is on my mind. I'm simply trying to read the paper and would appreciate some quiet.\"\n\n\"Which you'll get as soon as you tell me what's on your mind,\" Victor retorted.\n\n\"There is nothing on my mind. I'm minding my own business and hoping you'll mind yours.\"\n\n\"How's the coffee?\"\n\n\"It's fine, Victor.\"\n\n\"So what's on your mind?\"\n\n\"Damn it! Can't you just leave me alone to enjoy my coffee?\"\n\n\"Need more sugar?\"\n\n\"No.\"\n\n\"You sure?\"\n\n\"Victor, what the hell is your problem?\"\n\n\"Me? Got no problem except wondering what's on your mind and why you've been sitting there for almost an hour drinking coffee and haven't noticed that I never poured coffee in your cup. Other than that, no problems here. So what's on your mind?\"\n\nDonovan huffed in annoyance. \"Laci and I had a disagreement. Are you satisfied?\"\n\n\"Nope.\"\n\n\"Victor, are you going to badger me forever?\"\n\n\"Until the end of time. So what's on your mind.\"\n\n\"I already told you. Laci and I had a disagreement.\"\n\n\"You fucked up, didn't you?\"\n\n\"Why is it always my fault? A lot of people make mistakes every single day and not everything that happens is my fault.\"\n\n\"That's very true, Donovan. People make mistakes all the time. While you've been sitting here, there've probably been ten thousand mistakes made in every corner of the world, and only some of them have been your fault, so, what'd you do to fuck up?\"\n\n\"Victor, it's a long story.\"\n\n\"No shit. When have you ever had anything but a long story? What'd you do this time?\"\n\n\"I told Laci I was having an affair. Now are you satisfied?\"\n\nVictor was actually shocked. \"You're cheating on Laci?\"\n\n\"Of course not. Other than when I'm training, I haven't looked at another woman since Laci.\"\n\n\"Donovan? Are you gay?\"\n\n\"No, I'm not gay.\" Donovan was having a hard time hiding his annoyance. \"What the hell is wrong with you? You've known me for years. If I was gay, wouldn't you have figured it out by now?\"\n\nVictor didn't seem convinced. \"One would think, but if you're having an affair, and you haven't looked at another woman, what's left? Sex has a pretty short menu, Donovan. Men. Women. Not much else to choose from. Well, there is, but let's not go there. Even you're not that crazy.\"\n\n\"Victor. Shut up.\"\n\n\"So, why're you cheating on Laci?\"\n\n\"I just told you that I'm not.\"\n\nVictor looked at him in confusion. \"Okay. Let's start again. What's on your mind, Donovan?\"\n\nDonovan's level of exasperation was about to reach its peak. \"I already told you. Laci and I had a disagreement. I misunderstood something and I told her I was having an affair, but I'm not having an affair. I would never cheat on my wife. That would be reprehensible.\"\n\n\"So you told her you were having an affair that you're not having, but she thinks you're having?\"\n\n\"Exactly.\"\n\n\"Okay. Let's start again. What's on your mind, Donovan?\"\n\n\"Victor, just shut up. I need to figure out what I'm going to do.\"\n\n\"What you're going to do about Laci and the affair you told her you're having but you're not having even though you told her you were having it? Is that what you want to figure out, because I'm telling you -- no way you're figuring that out. I know they say confession is good for the soul, but the way it works is you're supposed to do something before you confess. You don't confess first.\"\n\n\"Victor, you're giving me a headache.\"\n\n\"Donovan, way I see it, headache's the least of your problems.\n\n\"Unless you have something helpful to say, just don't say anything.\"\n\n\"You fucked up.\"\n\n\"Yes, Victor. I know.\"\n\n\"You finally found someone you care about more than you care about yourself, and you fucked up.\"\n\n\"What part of that was the helpful part?\"\n\n\"How are you planning to unfuck things?\"\n\nDonovan sighed wearily. \"I don't know. I have no fucking idea how I'm going to unfuck what I fucked up since I wasn't planning to fuck up, but fucked up anyway. Does that answer your fucking question?\"\n\n\"So am I to understand something occurred, which because of your compulsively obsessive psyche resulted in an egregious miscalculation on your part leading to a prime target objective of retaliation, which manifested itself solely due to your inability to employ more efficient and maturely appropriate coping mechanisms? Would that be an accurate assessment?\" Victor wanted to know.\n\nDonovan stared at him. \"What?\"\n\n\"You fucked up because you're an asshole.\"\n\n\"Victor, go away. Go annoy your wife. Go annoy Trent Nichols. Just go.\"\n\n\"What kind of a friend would I be if I left you? You need me to help get you unfucked.\"\n\n\"All right. If you're so helpful, what do you suggest I do?\"\n\n\"What I always suggest. Talk to her. You were alone for a long time and now you're not. It's not all about you anymore and at some point, you're going to have to start including her in your marriage.\"\n\n\"What the hell does that mean? I include her.\"\n\n\"I don't mean the bedroom stuff, Donovan. I mean the relationship stuff. Talk to her.\"\n\n\"Which would be easier if she was talking to me. In case you haven't noticed, she's barely said a word to me for the last couple of days. It's a little hard to have a one sided conversation,\" Donovan stated.\n\n\"Not true,\" Victor told him. \"You do it all the time. You love hearing yourself talk. Listening to yourself talk and fucking up are two of your favorite hobbies. Thing is, Donovan, she's pretty tolerant, but one of these days her patience with you is gonna wear out and you'll be really miserable if she walks away.\"\n\n\"She may have already done that. She couldn't wait to move out of our bedroom and she said she'll talk to me when she knows what she wants to say. That doesn't sound very good, relationship-wise.\"\n\n\"Donovan, I don't get it. Why can't you read Laci the way you read everyone else? She reads you. I would bet anything she already knows you didn't have an affair and she's not planning to talk to you until she figures out why you told her you did. Why don't you just make it easy on both of you, tell her and get it over with? Why did you lie to her in the first place? Most men who have affairs lie to their wives and say they didn't. Only you would not have an affair and lie and say you did.\"\n\n\"You know that script you were reading with Trent?\" Victor nodded and Donovan continued, \"I heard her reading through it with him and I thought she was talking about me.\"\n\n\"No. Really. Why'd you lie?\"\n\n\"That's really why, Victor. It sounded very authentic, at the time. She can do everything else, so I guess it shouldn't come as a surprise that she can also act.\"\n\n\"No. Really. Why'd you really lie?\"\n\n\"Damn it, Victor, that's really why. I was in the office and overheard them in the garden and I overreacted a little. What if you'd heard Marian saying something like that? How would you feel if you heard your wife saying those words?\"\n\nVictor wandered restlessly around the kitchen for several minutes. \"You know, Donovan, for once you have me stumped. I get what you're saying, but Master Donovan is no insecure guy. You're demanding, controlling, arrogant, egotistical, self-absorbed, dictatorial, narcissistic, pompous, domineering.....\"\n\n\"I get the point, Victor. Any chance you can get to your point?\"\n\n\"My point is what would make you believe Laci would say things like that about you? Although,\" Victor looked at his friend, \"it's actually kinda nice.\"\n\n\"What's nice? What's so fucking nice about thinking your wife hates you then screwing up your marriage to the point where your wife doesn't even want to talk to you? What's nice about that?\"\n\n\"What's nice,\" Victor told him smugly, \"is that you really love her and for once in your life, someone else is more important to you than you are to yourself. You really love her, even though she isn't submissive, you have no idea what's going on in her head and she makes you crazier than you already are, but you love her anyway and that's nice. So how about taking your dictatorial, narcissistic, pompous self to wherever she is, and telling her. Go talk to her Donovan. She knows you better than you know you, and she likes you anyway. Go talk to her. She'll understand.\"\n\nSure she would. Who wouldn't understand such a simple plot twist?\n\nChapter 3 Are We Done?\n\nWhat was he going to tell her? Presuming she would be willing to listen, how was he going to explain his insane reaction to what he thought he heard? Even he had to admit it was childish, but Laci had that effect on him. Donovan spent most of his adult life being prepared for anything, then dealing with it accordingly. Control was only a small part of it. It wasn't as if the world was swarming with submissive people. He'd dealt with plenty of domineering, aggressive and combative people every day and he was good at it, so why did Laci render him crazy and nearly powerless?\n\nLove. Damn it, but Victor was right about that. Donovan Corbett truly loved Laci Grace Corbett. Loving another person was hard enough; loving her was like trying to reach out and grab hold of the wind, but the mistral known as Laci, made every bit of the effort worthwhile.\n\nDonovan spent the rest of the day stalking the driveway, waiting for her to come home. Trent was back from wherever he'd been and was safely hidden away in the guesthouse probably doing actor things. Marian had pulled into the driveway next door and gone into the house she shared with Victor. That was still a hard one for Donovan. Cousin Marian had always been so sensible, but she and Victor were madly in love and very happily married, so it must be true that complete opposites attracted.\n\nAnd where was Laci? Perhaps hiding was a good word. She had finished for the day with Trent and checked in with Marian, then had gone off on her own to think and figure out what she was going to say to Donovan, her wonderfully dear and mildly deranged husband.\n\nPoor Donovan. He was trying so hard to deal with his dominant tendencies and his couldn't possibly be any less submissive wife. Everything in his world had been neat, orderly and completely in his control until she came wandering into that world and sent it into orbit.\n\nWatching him try to coordinate Donovan the man, with Donovan the husband, and Donovan the Dominant was like watching a championship high stakes poker game. He understood his objective, he wasn't quite sure what card was going to be drawn, but he would be damned if he'd let anyone beat him. That was until Laci out-bluffed him.\n\nTrue he was still trying to find his way around and figure things out. Falling in love had been hard for Donovan. Believing he was in love had been even harder, but accepting her love was pure wonderment for him.\n\nLaci adored Donovan and considered herself the luckiest woman in the entire world. The relationship wasn't without its issues, after all, how many women watched their husband go off for several weeks to train sex slaves, but it was part of who he was and she could deal with it as long as she knew he'd be back and she knew he'd always be back. A man like Donovan was rare. When he loved, it was with his entire heart and every bit of his being. What woman could resist a love like that?\n\nShe wished he could see himself as she saw him. There was no question about his need to control, and when he was working, he was profoundly awe-inspiring. He was so smart and quick, watching him wheel and deal, demolish an opponent or command a meeting was a truly magnificent sight. Of course, watching him struggle with some mundane task like putting batteries in a flashlight made her love him even more. She would never get tired of watching his autocratic and formidable side, but his helpless side made her melt. His confidence in the workplace was paramount, and his uncertainty and confusion with all the little things made him human.\n\nShe recalled a day when she wanted to plant some seeds for a small herb garden. He didn't have the slightest idea where to start, in fact, she wasn't sure he'd ever touched dirt prior to that day but he jumped in wholeheartedly, made a huge mess and got every single seed planted. His almost child-like enthusiasm and wonder when he saw the seeds actually starting to sprout filled her with complete joy. He filled her with complete joy . . . when he wasn't having one of his breakdowns.\n\nEvery so often, all the components of his personality collided and his brain imploded. Why else would he tell her he'd been having an affair? Like she would ever believe that. For one thing, he was too honorable and for another, he wouldn't have the energy after she was done with him. Donovan might have many faults, but none of them were in their bedroom. Still, something had set him off, he'd overreacted, and sometimes his overreactions got a little out of control.\n\nLaci didn't usually play games, but if he needed to realign his personality, his aura and chakras, or do whatever he did to take back his control, she could handle it and play along. She was used to his moments of lunacy, the only difference was this time she called him on it and moved out of their bedroom. She'd never done that before and he'd paced so much during the last couple of days, he probably could have made it all the way to Canada. It was only a matter of time until he told her what was on his mind and all the planets in Donovan's universe would once again be in harmony.\n\nUnless she decided to make him work just a little harder for it this time. Control went both ways.\n\nFinally. Finally he saw her car coming down the street. Where the hell had she been? How could he work things out if she wasn't around to work with him? \"Laci, we need to talk about some things.\"\n\n\"Okay.\"\n\nDid that mean okay, yes -- or okay, no -- or okay, I'll talk to you when I damn well feel like it? He grabbed her by the hand and pulled her into his office. She stood watching him struggling to take back control. \"Laci, I did not have an affair.\"\n\n\"Okay. Are we done?\"\n\n\"What the hell do you mean 'are we done'? Is that all you have to say?\"\n\nGood sign. She seemed to be thinking about it. \"Yes. Are we done?\"\n\nMaybe not such a good sign. \"Laci, we need to discuss this. I need to make you understand. I did not have an affair. I told you I did, but I didn't. Have an affair. I never had one. Do you understand?\"\n\n'Yes. Are we done?\"\n\n\"No, we're not done! We need to get this settled. Maybe you didn't hear me.\"\n\n\"Of course I heard you. You're standing right in front of me. You told me you had an affair that you didn't have.\"\n\n\"Exactly.\" Finally. She was finally understanding. \"Do you forgive me?\"\n\nShe looked slightly puzzled. \"Why do you need forgiveness for something you haven't done?\"\n\nThis was good. She was paying attention and asking questions. He just wished he had the answer. \"I guess I don't since I never actually did anything. So it's all settled and everything's been cleared up and you can move back into our bedroom.\"\n\n\"Thank you for clearing it up, but I'm not moving back into the bedroom. Are we done?\"\n\n\"NO! WE'RE NOT DONE! I thought you understood.\"\n\n\"Donovan, I totally understand. You told me you were having an affair that you never had. I absolutely understand.\"\n\n\"Then why won't you move back to our bedroom?\"\n\nHer glance was just chilly enough. \"Because you lied to me. When we got married, the only things I asked for were love, respect, and trust. A man who loves his wife doesn't say he's cheating when he's not. A man who respects his wife tells the truth. A man who suddenly confesses to not having an affair he previously said he had is hardly the pinnacle of trust.\"\n\n\"Sometimes I get confused.\" Sometimes? He got confused every time she walked into the damn room.\n\n\"Then I'll clear things up for you. When you're ready to get unconfused and tell me what's really going on, we can talk about it. I think we're done now.\" She turned and started to leave.\n\n\"Laci! Wait!\" This wasn't going as planned. Maybe he needed Trent Nichols to lend him a script. A fucking script was what started this whole mess. \"I heard something and thought I understood, but what I heard wasn't what was really said, except, I thought it was. Then, I heard it again and that was when I knew what I heard wasn't really what I heard, even though I thought it was what I heard.\"\n\nLet the babbling begin.\n\n\"And that was why you told me you were having an affair you weren't actually having.\"\n\n\"Exactly.\" Why the hell did it always take her so long to understand? He'd made it perfectly clear.\n\n\"Well, if you're hearing things that aren't being said, that's not really a good thing. Perhaps you should see a doctor. Are we done now?\"\n\n\"NO!\" he told her loudly and stubbornly. \"We're not done until you forgive me.\"\n\n\"But, Donovan, we've already established you haven't done anything that requires forgiveness.\"\n\n\"Right.\" Donovan looked at her in defeat. \"I guess we're done.\" He watched her turn and leave the room before he sank down into his chair. He tried to look at the bright side, although, whichever way he flipped it, none of the sides appeared particularly bright. I am a Dominant, he reminded himself. I am in complete and total control. Maybe he could give himself another round of applause. At least if no one else appreciated him, he could appreciate himself. Let's hear it for Donovan!\n\nChapter 4 Chain of Fools\n\nDonovan loved their bedroom. Of course he loved it more when they were both in it together, but a reconciliation didn't appear to be happening anytime soon. Maybe sitting quietly in the sauna would help him think more clearly.\n\nDonovan purchased the house years ago because Marian lived in Georgia and he liked visiting with her when his scheduled permitted. Although not as grand as some of his other properties, it was a stately and classic Southern colonial which hadn't been updated in years so when he decided it was time for some renovations, he was pleased they were able to make changes but keep most of the elegant charm that was the true personality of the house.\n\nThe only place they really changed was the master bedroom. Decorated in soft tints of blue and grey, it had become a tranquil oasis away from the rest of the world. It wasn't just a place for sleeping or sex, although they did plenty of both, but it was also a place of serenity. Well, maybe not for the sex part.",
        "Other than the bed, his favorite part was the sauna. After a long exhausting day, he liked to lie back and relax. After a session of Laci's submission, he really needed to lie back and relax. Perhaps lying back and relaxing would help him figure out a way to untangle the very tangled web he'd managed to wrap around himself.\n\nFor the millionth time he tried to figure out why he, Donovan Corbett, Master Donovan, dissolved into an incoherent mess whenever he went up against his Prom Queen wife. It wasn't reasonable. Almost every other part of his life was organized, planned, and controlled. Maybe he should stop putting her up on such a high pedestal. Even though he thought of her as perfect, no one was really perfect all the time. He was intrigued with her from the first time he saw her and even after all the time that had passed, it hadn't changed, but it was more than simple intrigue. Even though he had never expected to fall in love, his feelings for Laci went beyond love.\n\nLaci just wasn't like anyone else. How had she become who she was? Her life hadn't been sunshine and rainbows, but she was a fighter and had managed to come out on top. She'd made his life so much better, but it was a sobering thought to wonder if he'd made much change or improvement in hers. She could survive without him. He had to hope she'd at least miss him, but she'd go on living and thriving and being Laci. He'd survive, too, but that's all he'd do within the confines of his world. If they were to separate, he'd go back to living his routine, grey, clouded life. She'd keep riding her rainbows. It wasn't exactly Dom-like and it was hard to admit, but he kind of liked riding rainbows with her.\n\nSomeone was at the sauna door. Laci! Their talk had gotten through to her and she'd decided to forgive him for what he hadn't done that didn't need forgiveness. All it took was a little clarification and patience. He knew it. He knew she'd come looking for him.\n\nHe was ready. Hell, he'd been ready and supremely horny for the last couple of days, but he was going to be as nonchalant as possible - as possible as he could be with his cock standing at attention and practically glowing like a neon sign. The sauna was hot, but that didn't matter. People did hot yoga all the time. It improved flexibility and stamina, alleviated stress and heightened focus and awareness. He could only imagine how fucking amazing hot sauna sex was going to be. Fucking amazing and healthy.\n\nThe door was opening.\n\nIn walked the love of his life . . . Trent Nichols . . . wrapped in a terrycloth robe, and for reasons known only to himself, trying to manipulate a set of shackles, because didn't all mega-sleaze actors use shackles in a sauna? Had to be a new Hollywood trend. Could be worth checking out.\n\nIt was a little hard to miss Donovan standing at full salute. \"Hey, Donovan. Hope I didn't catch you at a bad time. Laci said I could use the sauna.\"\n\nOf course she did. Laci was the perfect hostess and submissive to everyone except her darling and Dominant husband. Oh well. If Laci wasn't talking to him, at least he could spend quality time chit-chatting with really nice guy and sleazy actor, Trent. Maybe he could be useful enough to come up with a plot twist to unfuck Donovan's world. Donovan grabbed his towel. \"Not at all, Trent. Make yourself comfortable. I thought Laci was coming in the sauna.\" Donovan settled onto one of the lounges.\n\n\"All that for Laci, huh? Not surprised. She is pretty hot. You're a lucky man, Donovan. Any chance you might know anything about shackles?\" Trent removed his robe and, with a deep sigh, settled onto the other lounge.\n\nDid Master Donovan know anything about shackles? Donovan's eyes narrowed suspiciously. What the hell did Trent Nichols do in his spare time? \"A little. Why do you need shackles? Probably not the best idea in a sauna. Humidity could make them a little rusty.\"\n\nTrent looked up in surprise. \"Never thought of the humidity. Need them for my next film. I'm playing a magician who can get out of any type of device in a matter of seconds and I get kidnapped by some guy who's trying to break his brother out of some foreign prison. Cool role, huh? Gotta figure these out. Supposed to be some kind of trick to them, but damned if I can guess what it is. Got any plans for your anniversary?\"\n\n\"How do you know about my anniversary?\" Donovan continued to eye Trent as he manipulated the four steel cuffs connected together with chain. Shackles weren't the hardest devices in the world to understand, except, apparently, for wife-stealing actors.\n\n\"You kidding? Laci made damn sure I knew she was taking a couple of days off. Made it her only condition to agreeing to work for me.\" The chain and cuffs continued to clank as Trent worked with them. \"She's astonishing. How the hell does she do everything she does in a single day?\"\n\nThe Hollywood idiot had no idea what he was doing with the device he was twisting and turning this way and that. He was going to end up hanging himself with the damn things if he wasn't careful. \"I've asked myself that question many times. Laci just does what Laci does and sometimes it's best not to question her. Her methods aren't always the most conventional or easy to understand.\"\n\nTrent nodded. \"Truer words were never spoken, but she's a treasure. Can I be honest? First time I met her I wanted to sweep her off her feet, but she let me know her boundaries. Made it clear you were her number one priority and her most special person in the world. You really are a lucky bastard. She's smart and gorgeous, plus I know I can trust her. That's hard for someone like me. If I trust the wrong person, every bit of my personal life could end up in the tabloids or on TV. I could do the dumbest thing in the world around her and I know she'll keep my secrets. Finding someone like her is rare. I'd hire her in a minute but she loves it here, almost as much as she loves you.\"\n\n\"Laci told you that?\"\n\n\"Not in so many words, but she talks about you with such total and honest devotion. That's not something I see in Hollywood. Egos, careers, money, and marriage aren't a good mixture. If I meet someone, my first thought doesn't have anything to do with happily ever after. It's more about what does she want from me, is there any hope of trusting her, and will she sign a pre-nup? Not the most romantic start to a relationship, but it's my reality. I don't think Laci wants a damn thing from me and I know I can trust her. I'm a little iffy on the pre-nup thing. Have the feeling she'd try to choke me with it. You ask her to sign one?\"\n\n\"Thought about it, but decided against it. Had no doubt she'd try to choke me with it.\" Donovan was watching Trent with growing impatience. \"Trent, give me those damned things. What the hell are you trying to do with them? Turn around and put your hands behind your back.\" Master Donovan knew how to command certain things. Expertly, he snapped two of the cuffs around Trent's wrists. \"They're exactly like handcuffs. Just put them on and snap closed.\" Donovan reached back to grab his towel that was falling.\n\n\"I get it,\" Trent was saying, \"just like this.\"\n\nBefore Donovan realized what was happening, Trent, who seemed to be lacking in mental dexterity but was surprisingly agile physically, managed to snap the two remaining cuffs around Donovan's wrists. Could the day get any better? Laci wasn't talking to him and now, Master Donovan was naked and shackled with his hands behind his back, to equally naked mega-sleazy star, Trent. Great. \"Yes, Trent, that's how it's done. Where's the key?\"\n\n\"On the table in the guesthouse.\"\n\nOf course it was. Where else would the fucking key be? Who was growling? Surely that wasn't Master Donovan? He tried to stay patient. \"Trent, number one rule when using shackles, or handcuffs, or any similar devices, is to make sure the key is always at hand.\"\n\n\"Yeah,\" Trent agreed, \"I guess that would be good.\"\n\n\"Yeah, well now we're going to work together and get the door open, then carefully maneuver our way down the stairs and through the house, and get the key. Have you got that, Trent? Just pretend you're doing your own stunts.\" Yes, that was more growling from Master Donovan.\n\nThe two attempted to stand up. As they were making their way to the door, the sound Donovan least wanted to hear penetrated the room.\n\n\"Donovan? Where the hell are you?\"\n\nVictor. And the day just got better and better. \"I'm in the sauna, Victor,\" Donovan called.\"\n\nThe door flew open. \"Hey, Donovan, Laci wanted me to tell you.......what the fuck......?\"\n\n\"Unlock me, Victor.\"\n\n\"What the hell are you doing now?\"\n\nDonovan tried to stay patient. \"I'm showing Trent how shackles work.\"\n\n\"Sure you are, and naked shackle training is just a regular occurrence for you, isn't it? Actually, I guess it is, but that's a whole other story.\"\n\n\"Victor, just go get the damned key. Trent said it's on the table in the guest house.\" Trent just stood, helpfully nodding his head in agreement.\n\n\"Donovan? You trying to get yourself in that world record book? Is there a record for how many things you can get yourself attached to while naked, cause you're getting pretty good at it. Might've already won that record by now.\"\n\n\"Victor, go get the fucking key and unlock me.\"\n\n\"This is kind of a new one for you, being attached to another person. Shackles are a real nice touch. Uh, Donovan? You haven't changed your mind about that gay thing, have you?\"\n\nPatience, Donovan told himself. Patience. \"Victor, unless you want this chain wrapped around your neck, you'll stop the inquisition and go get the fucking key, from the fucking guesthouse!\"\n\n\"No need to shout. Be back in a minute.\" He was out the door.\n\n\"Might as well sit down while we wait,\" Trent suggested.\n\n\"Sure, might as well,\" Donovan agreed. Might as well just sit back and enjoy the rest of the day. If he was any luckier, Laci would come in and serve tea and cookies.\n\n\"Hey, Donovan, I'm not trying to pry, but how come you like to get naked and fasten yourself to things?\"\n\n\"Good question, Trent, but it's not usually a conscious choice. It just seems to happen.\" How great that he came into the sauna to relax, figure out a way to make things better with his wife, and ended up naked and chained to another naked man. Funny how life worked. \"Where the hell is Victor? What's taking him so long?\"\n\n\"You know, Donovan, Victor's a real nice guy, but I think he's a couple of tacos short of a fiesta platter. I mean, I know he works for you and all...just saying...\"\n\nPerhaps Donovan had been wrong about Trent's intelligence. Maybe he was smarter than he looked.\n\n\"Hey, Trent? You know those movies where something happens, somebody hears something wrong and there's a misunderstanding and everything falls apart?\"\n\n\"Yeah. That's a Hollywood staple. I've done two films using that plot. Why?\"\n\n\"Just wondering how they ended. How did they work things out and get it all resolved?\" Donovan wanted to know.\n\n\"Well, in the first one, my ex-girlfriend set up my current girlfriend so she'd believe I was still involved with the ex. The new girl, who I really loved, was leaving town and luckily I found out in time to stop her. There was this big dramatic reunion scene in the rain where I had to declare my undying love. Damn thing shot for hours and ended up getting soaked about fifty times. Let me tell you, Hollywood is not all about red carpets. The other one was even worse, but people like to see happy endings. For that one, I had the most incredible wife in the world and overheard her talking to someone about how much she hated me. I started acting like a total prick and she had no idea why. Turns out, she was just reading from a book and I got the whole thing wrong. I mean, how likely is that?\"\n\n\"Yeah,\" Donovan agreed, \"that could never really happen. How'd it get resolved?\"\n\n\"She left me and I had to go after her and tell her the truth to get her back, even though it made me look like the biggest, fucking fool in the world. I mean, why would a guy with a great wife believe something like that? In the end, she made me work for it but forgave me so everyone got their happy ending. At least I didn't have to stand in pouring rain for hours when I shot the second one. Hey! Where the hell is Victor? He should've been back by now.\"\n\nAs if on cue, the door again flew open. \"Sorry, Donovan,\" Victor said. \"No key. See you in the morning.\" He started out the door.\n\n\"VICTOR! GET BACK HERE!\"\n\n\"See what I mean?\" Trent said. \"Tacos.\"\n\n\"You guys want tacos? Sounds good to me, but won't the sauna make 'em kinda soggy? How about if you get dressed and I'll go for the tacos. Nothing personal, but I'd prefer not eating tacos with two naked guys. Plus it's a safety thing. Hot sauce doesn't go real well with certain parts of the anatomy. I hope I don't have to explain further.\"\n\n\"VICTOR, I DON'T WANT ANY FUCKING TACOS!\"\n\n\"Okay. Don't have to yell about it. Want burgers? Bet Laci'd like pizza. Oh yeah, Laci wanted me to tell you something.\"\n\n\"Victor, are you sure the key wasn't on the table in the front room of the guest house?\" Trent asked. \"I know I left it there.\"\n\n\"Nope. No key. Looked on all the tables. So which is it? Tacos or burgers? How about wings?\"\n\n\"Victor, could you go look for some bolt cutters and cut the shackles?\" Donovan snarled.\n\n\"Sure. Right after I get back with the food. Was it tacos or wings?\"\n\n\"Damn it, Victor. I don't care about the fucking food. Just get the cutters.\"\n\n\"Actually, wings sound good,\" Trent stated. \"Do they have the spicy, barbeque kind?\"\n\n\"Sure. Love those. Hey, Donovan. Feel like going a little crazy with some spicy wings, or you just gonna have the plain stuff like always?\"\n\nDominants do not cry, Donovan reminded himself. They stay in control until they have the opportunity to murder their employees. \"Victor, I don't want any damned wings.\"\n\n\"Okay then, wings for two. Be right back.\"\n\n\"VICTOR!!\"\n\n\"Change your mind? Wings for three it is.\"\n\n\"Victor, I am ordering you to unlock me from these chains, then I am demanding you tell me whatever it is you came in to tell me about Laci. Short menu, Victor. Unlock. Tell. Can you handle that?\"\n\n\"Of course I can.\" He looked a little insulted. \"I've handled way more complicated things than that. Laci said to tell you she was going to the ranch for a few days. Seems like she's still pissed at you. Thought you were going to talk to her and tell her about the affair.\"\n\n\"Affair? You're cheating on Laci?\" Trent asked. \"I can't believe you cheated and right before your anniversary? How could you cheat on Laci?\"\n\n\"That's what I asked,\" Victor told him, \"but he's not really cheating. He just told her he was cheating.\"\n\n\"That doesn't make sense,\" Trent responded.\n\n\"See,\" Victor told Donovan.\n\n\"Victor,\" Donovan spoke precisely and clearly, \"unless you want to be responsible for my cousin becoming a widow in the very near future, I strongly advise you to listen to me. I want these damned shackles off before the locks fuse together with rust. Go call a locksmith.\"\n\n\"At this time of night. It's gonna cost you.\"\n\n\"I don't care. I just want these damned cuffs off.\"\n\n\"Shoulda just said that in the beginning.\" Victor reached into his back pocket and removed a small, flat case. Popping it open, he selected a thin, wire-shaped object. He inserted it into the locks on the shackles and within seconds Donovan and Trent were free of their restraints.\n\n\"Why the fucking hell didn't you do that in the first place?\" Donovan demanded.\n\n\"You told me to get the key,\" Victor reminded him. \"Hey, Trent, you still up for those wings?\"\n\n\"Sure. Just take me a minute to get dressed.\" Trent grabbed his robe and started for the door.\n\n\"Trent,\" Donovan called, \"don't forget your shackles.\"\n\n\"Thanks, Donovan, and thanks for showing me how they work.\"\n\n\"No problem, Trent. No problem at all.\"\n\nThere they went -- Trent and Victor. It was a little hard to tell who was playing the part of the taco and who was playing the part of the fiesta platter.\n\nMeanwhile, Laci had gone to the ranch for a couple of days and their first anniversary was the day after tomorrow. There wasn't much time to unfuck what had been fucked, so maybe he should follow Trent's Hollywood plot and go after her. It made a hell of a lot more sense than sitting around with a couple of fiesta platters and a bucket of spicy wings.\n\nBy Victor's account and Donovan's calculations, she was probably arriving at the ranch just about the same time he was ready to leave. It would take him close to six hours to drive there and that was too long. One of the benefits of being wealthy was getting whatever one wanted, whenever one wanted it and at this moment, what Donovan wanted was a helicopter. He headed for the airport.\n\nChapter 5 Knee Deep\n\nDonovan had never been to the ranch before. Laci invited him several times, but he wasn't a ranch-type person. He wasn't a horse or getting dirty type person. He was an immaculately tailored Armani suit type person, so he would not have gone within miles of the place if it wasn't for her.\n\nHe hadn't really wanted to tell Laci the complete truth. She believed she was married to a brilliant man, not one who was stupid enough to misunderstand something as simple as two people reading a script. Trent's words came back to him, the words about Laci speaking about Donovan with honest devotion. That was such a huge compliment to him. How could he have believed anything less of her?\n\nAnd suddenly, none of that mattered. Being in control didn't matter. Behaving like a fool didn't matter. Finding his wife and holding her in his arms was all that mattered. Hopefully, she was willing to be held.\n\nThe flight took almost no time. Renting a car at the airport and driving along the dark, deserted roads to the ranch took a little longer than he thought, but it gave him more time to decide what he was going to say. As he pulled through the gates and onto the property, he realized how familiar it all seemed. Laci had described it so many times; he knew right where to go.\n\nHe followed the road, driving past the main house towards the barn, stables, and corral areas. She had shown him some photos, so even in the dark it was easy to spot. Stepping from the car he had to admit this was not the type of place that was in his usual zone of comfort. Wide open spaces, empty land, dirt, dust, and darkness as far as the eye could see held no appeal for Master Donovan or Donovan Corbett, business owner and entrepreneur. The only one that wanted to be standing exactly at that place was Donovan, man who loved Laci. He set off to find the room behind the barn.\n\nThat had to be it. There was an overhead light, like some type of heavenly beacon, shining down right where he knew he'd find her. The gravel crunched under his feet as he made his way across the yard. The door was right where he thought it would be, and he suddenly wondered if it was locked. It damn well better be locked. She better not be sleeping with an unlocked door unless she was sleeping with one of her whips under her pillow to use as a weapon against intruders, like the one he was about to become.\n\nHe tried the door latch. Locked. Good for her but not so good for him. There was a window next to the door and it was cracked open just enough for him to push it aside and climb into the room. What was the point of locking the door if any vagrant that happened along could climb through the window? He really was going to have to have a long and serious talk with her, when she was talking to him again.\n\nHe peered through the glass and there she was, sound asleep. There was just enough light beaming into the room for him to see her with her arms wrapped around that fucking stuffed unicorn. Why the hell was he here? Damn thing always stared at him and gave him the creeps.",
        "Silently and slowly, he pushed the window aside. It was easy to hoist himself up. Good. There was a chair right under the window. Perfect for him or any marauder to use to gain easy entry. What the hell was she thinking? Didn't she understand the meaning of security? Obviously just about as well as she understood the meaning of submissive.\n\nDonovan stepped down from the chair and glanced around. She had been so grateful when the owners of the ranch said she could live in the room. She had described it perfectly. It was far from luxurious, but she had made it comfortable and cozy. This was where she had spent many years after her parents couldn't be bothered with her and had basically pushed her out of their lives. Not for the first time he wondered how they could have done it. They should have treasured her as much as he did.\n\nStealthily he made his way over to the bed. There was just enough light to see her. With her silky, soft blonde hair feathered out across the pillow, she looked like a beautiful, sleeping princess from a fairytale. Tempted to wake her with a kiss, Donovan instead leaned over and gently touched her cheek. He saw her glorious, blue eyes starting to open.\n\nShe moved swiftly, and as her knee connected directly with his balls, she heard a low agonizing moan. Instantly awake and out of bed, Laci snapped on the bedside lamp just in time to see Donovan, doubled over, slump sideways onto the bed.\n\n\"Donovan?? You scared me half to death!\" She was obviously shocked at the sight of him in the room. \"What are you doing here?\"\n\nIt was his own fault. He should have guessed. She had been a Prom Queen. She could split a leaf cleanly in half with one stroke of a whip. She had a fabulous ass. She baked the best damn cookies in the world. She knew how to 'insta-fuck'. She was a blue-eyed angel. Of course she could kill a man with one well-placed knee to the balls. Why should he be surprised?\n\nArms wrapped around himself, eyes squeezed tightly shut, face pale and contorted in pain, Donovan could only choke out a single word, \"Dying.\"\n\n\"Donovan, I'm sorry. I didn't realize it was you. C'mon, lie back and try to relax.\" He was shuddering and moaning as she helped him slowly recline and lie back on the bed, then removed his shoes. \"Are you all right? Do you want me to call a doctor?\"\n\nHe shook his head. \"No. Ow! It's not that bad. Ow! I think that damned unicorn,\" he groaned, \"prevented the full impact of your deadly knee.\" He was moaning. \"Ow! He's staring at me again. I think he's enjoying this. I'm almost certain he's laughing at me.\"\n\nHe winced as she sat on the bed at his side and reached for his belt buckle. His hand covered hers. \"Could we save tying privileges until later?\" he asked, his forehead furrowed with pain. \"I'm not really in the mood at the moment.\" He groaned again\n\n\"Donovan? Seriously? You're in this much pain and you're thinking about sex?\"\n\n\"Laci, as long as you are anywhere near where I am, and I am breathing, I will probably be thinking about sex. Ow!\" He started moaning again.\n\nShaking her head in disbelief, she unbuckled his belt, unfastened the waist of his slacks, and unzipped the zipper. \"Lie still and hush. I'm only trying to relieve the pressure on your lower abdomen. Would some ice help? Are you sure you don't need a doctor?\"\n\n\"I'm sure. Ow! No ice, but could you help me take off my jacket? I think I'd be more comfortable.\"\n\nReaching over, she unbuttoned his shirt, then gently stretched out his arm and pulled both the sleeve of his shirt and jacket off. Carefully, she did the same with the sleeves on the other side. \"Can you sit up a little?\" she asked. As he did, she helped support him then pulled the garments away, tossing them on a nearby chair. She helped him recline again, not missing how much pain the small effort caused.\n\nThere were beads of sweat on his forehead, his breathing was shallow and his face was so white, she was afraid he was going to pass out. She went into the bathroom returning with a damp cloth. Folding it, she placed it on his forehead. Sitting next to him she rested a hand on his bare chest, trying to comfort him and help him relax.\n\nFinally, he opened his eyes, looking at her with a mixture of gratitude and pain. She could see he was still hurting, but his breathing was starting to return to normal and he had color back in his face.\n\n\"Please, would you mind turning off that bright light?\" he asked. Reaching over, she snapped off the lamp and the room was again in dim shadows. \"Thanks. Would you happen to have any aspirin?\"\n\n\"Sure. How many would you like?\"\n\n\"Ow!\" Donovan was shifting on the bed, to try and make himself more comfortable. \"Ow! I'd say ten, twelve bottles would work out well. Do aspirin come in kegs?\"\n\nRolling her eyes, Laci went into the bathroom while Donovan watched her from his position on the bed. As always, she looked beautiful. She'd almost turned him into a eunuch, and she hadn't even messed up her hair. How the hell did she always look so damned good?\n\nReturning to his side, she handed him two aspirin tablets and a glass of cool water. After swallowing the pills, he gave her the glass. She placed it on the table, walked to the other side of the bed, and slipped under the blanket, pulling it up over both of them.\n\nShe turned on her side to look at him. \"Donovan Corbett, you require a lot of maintenance.\"\n\nHe turned his head to look at her. \"Laci Corbett, you're a walking weapon.\"\n\n\"What did you expect? I opened my eyes, saw the silhouette of a man standing over me and I reacted. You're the last person I ever expected to have breaking into my room. Is breaking into women's bedrooms a regular habit of yours?\"\n\n\"I should think it would be fairly apparent I don't do it too frequently. I am clearly not very good at it.\" He moaned again.\n\nShe looked at him with concern. \"Are you going to be all right? What can I do to help? Sure you don't need a doctor?\"\n\nHe took several deep breaths. \"No doctor. Just a couple of hours of rest. This would probably be a good time to tell me if you have any other hidden assassin skills I should know about? Any black belts I've never seen? Any other weapons you've mastered? Ow! Guns? Daggers? Flame Throwers? Light Sabers? Do I need full body armor or will a bullet proof vest suffice? How about personal injury insurance? Should I upgrade my coverage? Ow! Damn that hurts!\"\n\n\"Donovan, what are you doing here?\"\n\nHe looked over at her again. \"Oh! Ow!\" Maybe a few extra groans would make her feel sorry for him. Sympathy could work to his benefit. So could simple honesty. \"You're here.\"\n\n\"But you said you'd never come to the ranch.\"\n\n\"I didn't have an affair.\"\n\n\"I know that. I never thought you did.\"\n\n\"Then why'd you move out of our bedroom six months ago? Do you know how hard it's been for me not having you there at night? I haven't had a good night's sleep since you left. And don't think it's escaped my attention that you never answered my question about the flame thrower.\"\n\nShe couldn't stop herself from smiling. \"Donovan, it's been less than a week since I moved out of the bedroom.\"\n\n\"Seems a lot longer,\" he grumbled.\n\n\"And when something upsets the balance in your world, I've discovered it's best to leave you be and let you work it out for yourself. Sometimes you need to be alone.\"\n\n\"And were you ever planning to let me in on that little secret? You can leave me alone without leaving me alone, you know. Ow! It gives me too much time to think. Ouch! Too much thinking leads to bad choices. I think I've proved that.\"\n\n\"Want to tell me the rest?\"\n\n\"No. You'll think I'm an idiot. You'll try to incinerate me with your hidden flame thrower.\" She just looked at him, not saying a word. He sighed. \"All right. I heard you and Trent in the garden talking about how much you hated your husband and I thought you were talking about me. That's when I did what I did. Then I found out you were reading from some fucking script. See? I'm an idiot. A total, aching, every inch in pain, may not be able to walk for a week, idiot.\"\n\n\"Want to tell me the rest?\"\n\n\"No.\" He sighed again. \"Yes. Laci, we have very different ideas about being in control and submitting. I like control. I thrive on it, and then you come along and suddenly I'm not sure I'm doing it right. It's not good for a Dom to have control and not have control both at the same time. It confuses the slaves. I also find it highly unfair, that I am finally in bed with you again, and for the moment, at least, I can't do anything about it, and yes, I am thinking about sex. Again.\"\n\n\"I believe that is what is known as poetic justice.\"\n\n\"Very funny.\"\n\n\"Master Donovan, my love, I am not oblivious to how difficult things can get for you, but did it ever occur to you that you don't have to be perfect all the time? You're already pretty perfect just as you are. I know you think you're not always in control, but I think you're doing fine. You may not be able to control me, but you are in full and complete control of my heart and you always will be.\"\n\n\"Ballbuster. Flame thrower. Whip wielder. Psychologist. What else don't I know about you?\" As he turned to look at her, the movement caused pain to be reflected in his face.\n\n\"Lie still, and try to relax. Are you sure you're okay?\" She sounded concerned.\n\n\"I will be.\" He leaned back and took a deep breath. \"Are we good?\"\n\n\"We were never bad.\"\n\n\"Would you move over here, a little?\" he asked. She hesitated, then shifted closer. As his arm went around her and pulled her towards him, he was breathing harder.\"\n\n\"Donovan, stop. You're in pain.\" She tried to move away, but he was holding her tightly against him.\n\n\"Yes, I'm in pain, although that's most likely not the only reason I'm breaking out in a cold sweat. I've missed you and it would help if you'd stop moving so much. It would also give me great peace of mind if you would move your knee a little, just in case I say something you don't agree with.\"\n\nHer lips twitching with an amused smile, Laci shifted slowly, nestling close to him, her head resting on his hard chest. She was aware of his ragged breathing as she asked, \"Is this better?\"\n\n\"Much. Ow! Just give me a minute, okay?\" She tried not to move as he took several more deep breaths. She could hear and feel his heart pounding, rapidly. After a couple of minutes, she could tell that his breathing and heart rate were returning to normal, as she stayed still, enjoying the feel of his arm around her. \"Stay here. I feel a lot better when I'm holding you. Everything's better when I'm holding you.\"\n\nFor a moment she didn't move, then she snuggled closer, relaxing against him. \"Okay, but only if you promise to try to relax. Are you comfortable?\"\n\n\"As comfortable as I can be, and I promise.\"\n\n\"You know, Donovan, maybe next time you think you hear something that you might or might not really be hearing it would be good if you talked to me about it. I might be able to help.\"\n\n\"That's part of the problem. You always help. You always know what to do and what to say and you always make everything perfect. You've made my life so much better and what have I done for you? I've done nothing for you. Nothing except give you grief.\"\n\n\"Do you really believe that?\"\n\n\"I'm injured. It's the best I can do.\"\n\n\"Donovan, I have a good mind to kick you again.\" She could feel him flinching. \"Remember what I told you about my past? Imagine how I felt coming home, discovering my mother had walked away? I wondered for years what I had done wrong to make both parents not want to bother with me. Then you came along and made me feel cherished, like the most special person in the world. I never have to wonder how you feel. I know you love me and you always will. That's what you've done for me.\"\n\nHe was quiet for several minutes. \"No one has ever said anything like that to me before.\"\n\n\"And they damn well better not ever say it in the future. You're mine, Master Donovan. Every inch of you, your controlling tendencies, obsessive, compulsive habits, every paddle, every conclusion you jump to without looking first, and every bit of your insanity. It all belongs to me.\"\n\n\"Victor is partially responsible for the insanity. Trust me on this...do not ask him about tacos.\"\n\n\"Got it. No tacos, and I would agree about his sharing responsibility for the insanity, but you would be lost without him.\"\n\n\"I know,\" he agreed reluctantly.\n\n\"How about trying to get some rest?\"\n\n\"I love you, Laci.\"\n\n\"I love you, Donovan.\" She snuggled closer. He heard a small sigh, and within minutes, he could tell she was serenely asleep, her soft curves nestled next to his body, her head resting on his chest. Did all angels fall asleep so quickly and easily?\n\nOther than some lingering pain, he was completely content lying there, holding her, looking into the shadows, stroking her soft hair. He had the most perfect wife in the world and she accepted him for who he was. Life was good and getting better. Of course, there was still the matter of the flame thrower, but as long as she kept it away from Victor, he could learn to live with it. Damn fool would probably burn down the house trying to make his own spicy wings.\n\nChapter 6 Try to Make Me Go to Rehab -- Yes! Yes! Yes!!\n\nIt was still dark when Laci felt Donovan nuzzling the back of her neck. She had turned on her side and he was spooning, his front to her back, his arm holding her close. As she wriggled closer to him, she felt his bare skin and could immediately tell his injury from the previous evening was far from permanent.\n\nTurning over, she smiled at him. \"You're awake early. How are you feeling?\"\n\nHe had to smile back. \"Not quite 100%, but better than last night. It would probably be good if you kept your knees at a safe distance for the next day or two.\"\n\n\"Donovan, I really am sorry. I had no idea you'd come up here. I was caught totally off-guard.\"\n\n\"I know, and it's partially my fault for sneaking in on you, but other than a little soreness, I'm fine. I'm also glad you're able to defend yourself, should the need arise, just as long as it's not against me. At the moment what I'm most looking forward to is getting back to our own home and our own bed. We have an anniversary to celebrate tomorrow.\"\n\n\"I know. One whole year. Did you bring any ranch clothes with you?\"\n\nHe frowned slightly. \"Hi. Have we met? Donovan Corbett. Dom. Compulsive neat freak. Tailored suit maven. I don't even know what ranch clothes are? Jeans? I haven't worn jeans since college, and even then, only when it was necessary.\"\n\n\"I'm going to have to take you shopping. Your ass will look great in a pair of fitted jeans.\"\n\n\"Thank you for the compliment, and no jeans.\"\n\n\"Okay.\"\n\nLying back, he groaned. \"Why do I sense jeans in my future?\"\n\n\"After breakfast I'm going to take you to meet Prince.\"\n\n\"I've already met your unicorn. He hates me.\"\n\n\"Virgil doesn't hate you. He helped you just last night.\"\n\n\"He always stares at me. Wait. What do you mean Virgil? I thought he was Prince.\"\n\n\"Well, first he was Virgil, and then he was Matthew, and then he was Prince, but there's the horse, Prince of Darkness, and there's you, Prince of Darkness, and it was getting confusing, so I went back to Virgil.\"\n\n\"What happened to Matthew? I thought you liked that name. It's better than Virgil.\"\n\n\"I love that name. It's one of my favorites, but we're going to name someone else Matthew and what's wrong with Virgil. He likes it.\"\n\n\"Virgil is a terrible name. It's bad enough he sits in our bedroom staring at me, but it's even more unnerving to have someone named Virgil sneering at me. I think he's jealous.\"\n\n\"Donovan, you do realize we're talking about a stuffed toy, right?\"\n\n\"Of course I do, but he's still fucking creepy and I hate the name Virgil.\"\n\n\"Maybe I could call him Victor. It'll be nice having two Princes and two Victors.\"\n\nDonovan was silent for a minute. \"Virgil's not that bad, and if he likes it, I guess we should respect his wishes.\" Damn she was good. Some of his best executives couldn't beat the system like she could.\n\n\"Thank you, Donovan.\" She leaned over for a kiss.\n\nVirgil. Who cared what the damned unicorn's name was? He could sleep in the closet so his beady little eyes wouldn't be watching everything. As long as Laci was happy, Donovan was happy.\n\nAt the moment, Laci seemed very happy. She was kissing his jaw. It felt really good. She always made him feel better. When Laci was working her magic, he didn't have a care in the world. She was moving her feathery soft kisses down the side of his neck. He loved that. It always made shivers run up and down his spine. Damn she was good at kissing. She was kissing his chest. That always made him sigh in contentment. If it made her happy, he'd convince Victor to change his name to Virgil. Hell, if she'd keep kissing him the way she was kissing him, he'd change his own name to Virgil. Virgil Corbett. Master Virgil. Maybe not.\n\nHe was so relaxed. All was well with him and Laci, and she had forgiven him even if he hadn't actually needed forgiveness. Her kisses were going lower and lower and that meant only one thing. He should probably stop her. He still needed a little recuperation time and he wanted to make sure he was in top shape for his anniversary. He'd give her one more minute than he'd stop her.\n\nHe hoped she was going to like the bracelet he was giving her. It had taken him hours to design it and he'd driven the jeweler crazy making sure it was exactly right. It was simple and elegant, studded with blue diamonds to match her ring. Oooh! That felt so good. He really was going to have to stop her. Just another minute. One more minute.\n\nHe could remember the first time he saw her. Even then she'd been a little intimidating, the way she'd examined him with her eyes but kept her distance. He should have approached her that night. Uh-oh! She was ducking lower and under the covers and she was doing that thing with her nails. Oh wow! Oh that felt good! But he had to stop her. In a minute.\n\nShe wanted him to meet her horse. Technically it wasn't her horse, but according to Victor the damned horse was in love with her. Laci had taken Victor and Marian to visit the ranch and he had come back with enough stories to annoy Donovan for a week. Like he was supposed to believe some big stupid horse was in love with his wife. Right. Oh! Wow!! Damn that felt good! How the hell did she do that flickering thing with her tongue on the tip of his cock? It was like she had a double jointed tongue. Who the hell had a double jointed tongue? Oh Damn! One more minute. Just one.\n\nVictor said the fucking horse was actually flirting with her. How the hell did a horse flirt? Even better question: how would Victor know if the horse was flirting? Hmm? Oh WOW! Just one more minute.\n\nVictor. Did Trent and Victor get into any trouble on their spicy wing trek? It probably wasn't the best idea for the two of them to be out wandering by themselves, but if they had any problems, Marian was there to help. Still, Trent was concerned about being in the tabloids and an outing with Victor could lead to just about anything. It was a Hollywood headline waiting to happen: TRENT NICHOLS AND UNIDENTIFIED MALE COMPANION FOUND SHACKLED TO TABLE IN SPICY WING PLACE. Just might give him something to hold over Victor's head for a while. OH FUCK!! She was doing that thing again. She was flickering that spot under his cock. How did she always manage to find it? Had she marked it with a damned Sharpie? Fuck that felt good. Wasn't he supposed to stop her? Just one minute. Maybe two.\n\nHe'd never asked Laci about any of her sexual experience before him, but sometimes he wondered. Like how in the hell she knew how to do what she was doing. Oh damn! FUCK! Was he moaning? He had no idea who could be wandering around the ranch, so he was doing his best to be silent. Moaning? That wasn't him and besides, she was going to have to stop in another minute. One minute.",
        "Considering his own past, it hadn't seemed fair to question her but he had to wonder. She appeared almost na\u00efve and innocent, but her tongue sure as hell wasn't innocent. Oh Damn! OH DAMN! She was doing that thing with her teeth. Teeth and dicks did not belong together. They weren't meant to join in a harmonious relationship, but somehow, her teeth seemed to know how to make his dick sing. It was bellowing an operatic aria on the top of its lungs. Wait. Dicks didn't have lungs, did they? DAMN!\n\nHe really had to tell her to stop. Didn't he? Wasn't he supposed to be recuperating? What was it he was recuperating from again? He'd remember. It would just take a minute. It would be a hell of a lot easier if that fucking unicorn would quit groaning and panting. Damn thing hated him. Always stared at him. Virgil. Who in the hell named a unicorn Virgil? Unicorns should have more majestic names like Champion or Max. Or Horny. She'd mentioned the name Horny once. Maybe he could get her to change his name. He'd rather have Horny in the bedroom watching him than Virgil. Oh DAMN!\n\nOh! This was a new development. She'd never done this before and what the hell was it? OH FUCKING DAMN! IT FELT GREAT!! Was it teeth? No. It was nails. No, teeth. Nails? Oh fuck, who cares? It was amazing and how the hell did she know how to do it? He couldn't be sure if his dick was a tenor or a baritone, but he was one hell of a singer. Between the moaning and groaning and panting and singing, it was like his own damned Carnegie Hall down there. And he would certainly consider giving his wife a standing ovation if he had any strength left to do so. FUCKING HELL!! That was incredible!\n\nSwirling. Swirling was good. It was relaxing. It helped him catch his breath. Swirling was like interval training. He liked swirling. Oh shit! He really liked swirling. Really! REALLY! He was SEX-ERCISING!\n\nWas that a grunt? Was that him or Virgil? Was he going to be adding grunting to the performance? Moaning, groaning, panting, grunting and singing. It belonged in lights. APPEARING TONIGHT: MAESTRO DONOVAN CORBETT AND THE BLOW JOB QUINTET. His dick could outperform Trent Nichols with one ball tied behind his back. Note to self: don't give Laci any ideas. She doesn't need help.\n\nOh no! His balls. She was doing that thing under his balls. OH WOW! She managed to find that spot. Oh damn! Oh Damn! OH DAMN!! That spot under his balls. That spot. That spot somehow managed to turn his entire body into one enormous, fucking, raging hard-on. How the hell did she do it? He kept meaning to watch but usually his eyes were rolled back in his head just like they were at the moment. One of these days he'd have to watch. One of these days. Wasn't he intending to tell her something?\n\nOh, wow! Oh, wow! Oh, wow! The groaning section was taking center stage for a solo performance. OH FUCK! She was flickering that spot under his balls. Her incredible double jointed tongue was flickering that spot. THAT SPOT!!! His entire body was riveted to what she was doing and the moaning section was joining the groaning section. They might be singing back-up to his dick, but wow, those guys had some great choreography. So that's where they got the term pole-dancing. What a performance!!\n\nWasn't he supposed to be telling her something? Oh yeah. He was supposed to be telling her to stop, but he couldn't remember why. Oh Wow! All the parts were in harmony. The arpeggio was starting to climb. Damn they were singing loud! The harmony was cresting. Surging. Intensifying. Getting louder. Who knew he could hold a note for that long? OH FUCK! THE CRESCENDO!!! Fuck!! FUCK!!\n\nWas he breathing? That was one hell of a performance. Was somebody throwing flowers or was he seeing spots in front of his eyes? He'd have to give himself some applause. He'd definitely do that. As soon as he was able to unpry his fingers from the headboard. In about an hour.\n\nLaci was popping back up from under the covers, undoubtedly for her curtain call. \"Laci,\" he was still trying to catch his breath, \"you do recall that I was injured last night, right?\"\n\nShe was beaming. Her usual rays of sunshine were bouncing everywhere. \"Of course, and you'll be happy to know there's no bruising.\"\n\n\"Do you mean before you did what you just did, or now?\" he asked.\n\n\"Donovan, how long will it take until you're feeling better?\"\n\nIt was going to take a minute for his brain to connect the words. \"Well, when I first woke up I would have said a couple of hours. Now I think it's more like a day or two. Why?\"\n\n\"It's a proven fact that injuries heal better and more quickly with rehabilitation therapy. I think you're going to need intensive rehab for more than just a day or two. I think we should plan on a week or two. At least. Maybe even three weeks of intense and restorative rehab. As much and as often as possible.\"\n\n\"Rehab? You think I need rehab?\"\n\n\"Rehab.\" She sounded very definite. \"Rehab has amazing curative abilities.\" She snuggled up next to him. \"It's still really early. Why don't you try to get a little more rest? When you wake up you can have another treatment, then breakfast and then you can meet Prince. He gets a little jealous and possessive sometimes, but I'll make sure he's nice to you.\"\n\nSnuggling a little closer, she was immediately asleep. How the hell did she fall asleep so quickly? He was the one who was exhausted and in need of intensive rehab. Rehab. For a week or two. At least. Maybe even three weeks of intense and restorative rehab. As much and as often as possible. That was what she'd said. He knew he'd heard right. Rehab. At the end of three weeks of rehab he'd be needing rehab to learn how to walk again. And probably to remember his own name. Virgil sounded familiar.\n\nHow the fuck did she manage to do that thing she did? Maybe he shouldn't ask. She might be tempted to demonstrate. Rehab. Oh damn. Maybe he shouldn't worry about it. After three weeks of Laci's rehab, he'd probably be dead. It wouldn't matter how the hell she did it.\n\nWhat, he wondered, would the coroner put on the death certificate?\n\nCause of death: blow job. That didn't seem right. A death certificate was a legal document.\n\nCause of death: fellatio. Nope. Still not right.\n\nCause of death: FEL--LACI--O. That was better.\n\nDonovan Corbett\n\nCause of death: FEL\u2014LACI\u2014O and excessive smiling due to extensive and curative rehab.\n\nLeave it to Laci to revolutionize the entire medical profession. Rehab! OH, YEAH!\n\nChapter 7 Save the Date\n\nDonovan opened his eyes. Laci was still asleep, curled up in his arms. It was the morning of his first wedding anniversary and he had accomplished his goal to unfuck all that needed to be unfucked. Or maybe she had done the unfucking. He wasn't quite sure, and it really didn't matter who fucked, unfucked, refucked or defucked - as long as they were together.\n\nThe sun was shining, or maybe that was Laci. She was always shining, although since their reconciliation at the ranch she seemed brighter than usual. She wasn't just shining. She was sparkling. Must be from all that damned rehab. She and her tongue had the most extraordinary healing powers. He'd heard about laying on of hands, but laying on of tongues? Laci had wrought many miracles with her tongue. Donovan wasn't sure what condition he'd be in after his extended bout of rehab, but with any luck, he'd need a little more rehab to help recover from his recovery.\n\nAs promised, before they left the ranch, she had taken him to meet her horse, the first Prince of Darkness. Donovan had ridden thoroughbreds in his youth but wasn't prepared for the massive creature stomping and snorting angrily around the corral. Smoky-grey, close to 18-hands high, everyone else on the ranch knew him as Ogre, but he was Laci's Prince. And the damned horse really was in love with her. The instant he saw her, he turned from fierce and fire-breathing Ogre, to docile little lamb. He snickered at her and nuzzled her and came pretty close to having his own equine orgasms.\n\nLaci brought him over to Donovan and told Prince Ogre to be nice. Damned horse despised him on sight. Donovan could swear the horse looked at him with a malevolent 'I saw her first' look in his eyes. Fucking horse was probably getting tips from Virgil. It probably didn't help when Laci turned her back and Donovan whispered, 'You may have seen her first, but she gives me rehab'. Who knew horses could understand so well? Or growl?\n\nAnd who knew a relationship could be both so enlightening and mind-bogglingly unpredictable? He had been shocked into silence the first time he saw her handle a whip. He had been shocked even more when he discovered he had feelings for her. He was stunned when he realized she was returning those feelings. He'd pretty much given up on the traditional Dom/sub thing happening. She'd reinvented a simple and centuries-old concept. Dominants dominated submissive submissives. Before Laci, it was a pretty straight forward idea. After Laci, it was a semi-Dom/and sort-of sub, dominating submissively while submissively dominating. Trying to figure it all out was headache inducing. Damn good thing he was going to rehab.\n\nSometimes it was hard to keep track of everything. As he and Laci evolved, he was sure he was losing her to Trent Nichols. Instead she accepted Donovan's marriage proposal. Then, he was certain she hated him and he almost screwed up his marriage. He probably deserved the kick in the balls, but he had to admit, she was one hell of a physical therapist. Now he was contending with a blue-eyed and angelic Prom Queen who adored him. And rehab. And a stuffed unicorn who gave him dirty looks. And a growling horse. And Victor. Talk about headache inducing. A few extra sessions of rehab probably wouldn't hurt. Better safe than sorry.\n\nOh well. None of that mattered. He loved her in a way he never thought he would love anyone. She accepted him and loved him unconditionally. There had been a few unexpected occurrences and bumps in the road, but they were together and would be forever. He had found chaotic happiness and had learned how to ride rainbows. There was no way she could possibly surprise him further. No way.\n\nHe looked down to see cornflower blue gazing up at him. She was giving him 'that look', but there was something else. What was different? \"Happy Anniversary,\" he told her, trying to figure out what else he was reading in her eyes.\n\n\"We could start the day by making it happier,\" she responded.\n\nDamn he was lucky. He could figure out what was different later. For the moment, he just wanted her, but this was no time for an 'insta-fuck'. This was their anniversary. That meant an 'insta-fuck-supreme'.\n\nHe moved quickly, over her, inside her. It was still bed-scorching hot, and slamming hard, but this was slower, a little more relaxed, giving her as much time to enjoy it as he did. He loved when he felt her back arching as she moved to pull him further inside. And those nails! He might have to re-address the issue of her flame thrower because he was pretty sure each one of those nails was a miniature torch. How else could she run the tips of them up and down his back making him feel like his skin was igniting?\n\nAnd how did she know where each and every pressure point was on his entire body? Damn. He needed to talk her into working with him when he trained. She could give sex slave seminars and revolutionize the entire sex slave business. Why the hell not? She'd manage to revolutionize almost everything else in his world.\n\nWow! DAMN! She was doing that thing she did. How the hell had she learned to control her muscles to give pussy massages? He probably shouldn't suggest she revolutionize the massage industry. This most likely wasn't what they meant by deep tissue massage, although she sure knew how to do it. It was like pussy yoga. Tantric pussy yoga. Oh yeah! That works! That really works! Where the hell could she have possibly learned pussy yoga? Damn she was good at that. It was like core training for his cock. Between all the rehab, pussy yoga, and sex-ercising, his cock was going to live forever. Was she making his cock do a lotus pose? No. That was definitely a sun salutation. That felt good! Maybe he needed a mantra. Oh fuck! Oh fuck! OH FUCK!! OH FUCK!!! OH FUCK!!! Good mantra. He'd stick with that one.\n\nCould the day have been any more perfect? A week ago he'd been wondering if he was looking at a first divorce instead of a first anniversary, and now he knew no matter what form of insanity he developed, he'd be celebrating anniversaries with Laci forever. Forever was a good word.\n\nThey spent the day just being together. Victor was off somewhere with his new buddy Trent, hopefully steering clear of shackles, so Donovan and Laci had the entire, very quiet and tranquil house to themselves. He was still a little puzzled about why she seemed different, but maybe it was because of their reconciliation. Or maybe he was just happy to see her happy. Or maybe he was imagining things. Wouldn't exactly be the first time for that one.\n\nStill, he had to wonder why she suddenly wanted to redecorate the bedroom closest to the master bedroom. In a ranch theme? All the rooms were decorated in a stately and southern colonial manner that matched the style of the house. It wasn't that he minded. She could decorate the entire house with a ranch theme if that was what she wanted. He might have to draw the line at growling horses, but she could turn the entire house into a theme park if she wanted to. As long as she was happy he was happy. Maybe she wanted a reminder of the ranch when she couldn't get up there. Even though he hated dirt and dust, maybe he'd surprise her and drive up with her next time. For a little extra rehab.\n\nWhat a turn his life had taken. Ironic that he had Frank Harding to thank for bringing him together with Laci. It was still hard to believe the depraved son of a bitch actually thought he could turn her into a sex slave. Luckily Donovan knew he had no further concerns about Frank Harding. Where ever the bastard was resting, it definitely wasn't at peace. Still, if there was one show Donovan would not have minded watching, it would have been Laci teaching Frank Harding a lesson or two in submission. Now, the only master Laci was ever going to serve was Master Donovan, although it was probably best not to tell her that. Not if he wanted to be around for his second anniversary.\n\nAnd who would have ever thought he'd be related as a cousin-in-law, by marriage, to Victor? Cousin Marian and Victor? The most sensible one in his family and Victor? The one person in his family Donovan actually admired and Victor? Anybody and Victor? It was fairly obvious there was a lot more to Victor than what he let on, but he certainly loved driving Donovan as crazy as possible. Victor would always be a challenge but he could always be counted on. What would he ever do without Victor?\n\nWhat would he ever do WITH Victor? Maybe Victor could teach one of the sex slave seminars with Laci. Laci could teach how to do what she did and Victor could teach something equally useful...like how to make macram\u00e9 shackles. Still, Victor was always there for him and had been a friend and confidant, helping Donovan unravel and unfuck the raveled and fucked that had permeated life. Things had been much easier in the days when unraveling and unfucking wasn't needed. Easier, maybe, but not nearly as entertaining. And even though he hated to admit it, if Victor called at that exact moment and needed rescuing from some tree or stupid actor he'd shackled himself to, Donovan would be there, and Victor would do the same for him. And then probably remind him about it every day for the rest of both their lives. Or haunt him like Trent's plantation ghost. Somehow, Victor would always be around.\n\nThere was one thing he never understood. How could Laci's parents simply pretend she didn't exist? How had they turned their backs on her? They should have been filled with pride at the woman she had become. True he wasn't ready to be a parent, but he could never do something like that to his own child. For them to ignore her, not care about how she was or where she was, seemed inexcusable and unforgiveable, yet she had gone on, lived her life and was able to give love when she had received none. Extraordinary, but what about her wasn't extraordinary?\n\nBefore Laci life had definitely been simpler. He woke up. He worked. He earned more money than he could ever spend. He finished working. He had dinner. He went to sleep. Life was routine, boring, and more than a little lonely. Even though he excelled at everything he did, his life was colorless.\n\nThen Laci and her Technicolor blue eyes and sunbeams changed it all. Before her, Frank Harding had never held him at gunpoint, nor had anyone else. Because of her, he knew how to make toast and do quite a number of other useful things. If it wasn't for her, he wouldn't have a stuffed unicorn named Virgil stalking him. He'd never have been shackled to Trent Nichols. He wouldn't have known horses could growl. He wouldn't have ever had so much fun 'insta-fucking'. He'd never have considered the many benefits of tying privileges. How would he have known he needed rehab? Live and learn.\n\nAnd then there was Laci, herself.\n\nThey were sitting together in the garden, snuggled in the lounge chair big enough for two, doing absolutely nothing but enjoying each other's company and Donovan realized he had somehow turned into one of those men he always ridiculed. He had turned into a romantic who was unashamedly and unabashedly obsessed with, and adored, his beautiful wife and he didn't care who knew it.\n\nHe was a very lucky man. The circle of people close to him was a small, tight group, but they were people who he truly cared for and who cared for him in return. No matter what happened in his life, he had what other people only dreamed about. He had friends, success, love, and Laci.\n\nHe looked down at her, contentedly snuggled against him. \"Hey! How about I open some wine? I haven't given you your anniversary gift and I was thinking we could go out to dinner.\"\n\nLaci glowed up at him. \"Actually, I've been craving orange juice all day. Would you mind if I had that instead? I have a gift for you, too, and I'd love to go out to dinner.\"\n\nIt only took a few minutes for him to get the wine and fill a glass with icy cold juice. Funny how the last couple of days, she seemed to be drinking a lot of orange juice. Maybe she had a vitamin C deficiency. He'd have to bring it to her attention tomorrow.\n\nReturning to the garden, he handed her the juice and a white velvet box. \"My gift first,\" he announced.\n\nShe sipped her juice then untied the ribbon on the box. She gasped as she popped open the lid and lifted the bracelet from its velvet bed. Each of the perfectly matched blue diamonds was set in a small filigree scroll, giving the bracelet an antique and old world look. \"Donovan! It's gorgeous. I love it! Please help me put it on.\" He helped with the clasp and she twisted her wrist from side to side, admiring the glittering piece of jewelry as it caught the afternoon light. \"It's so beautiful. I've never seen anything like it.\"\n\n\"I designed it so it's one of a kind; just like you.\"\n\n\"Donovan Corbett you are a pretty wonderful husband. Thank you.\" She leaned over and gave him a very well-deserved kiss, then said, \"My turn. Here's my gift to you.\" She pulled a small, flat package out from under one of the pillows on the lounge.\n\nHe examined the small package. Tied with a bright blue bow, it was wrapped in a calendar page for the month of October. That seemed odd. October was more than seven months away, but he knew Laci well enough to know there was some reason for it.\n\nSliding off the paper, he discovered a silver picture frame, trimmed with enamel in a smoky-blue color. It was framing a small black and white photo of something that looked a bit like a Rorschach test. Or a peanut. Or a Rorschach test in which he was seeing a peanut. How, he wondered, would that be interpreted? That he had a fear of elephants? That he was fearing she was going to bring home an elephant that stared with beady, little eyes and gave him dirty looks? Maybe that he had a fear of elephants that growled? Was there an elephant in the room, somewhere?",
        "He looked up. She was watching him and sunbeams were bouncing everywhere, along with radiantly, shimmering sparkles. \"It's wonderful,\" he told her. \"I can put it on my desk. I'm not sure about the picture, but it's interesting. Don't see peanut pictures on people's desks too often. It's a good conversation starter.\" He leaned over for a kiss. \"Why'd you wrap in in a calendar page?\"\n\n\"Well, I know how busy you get and how far in advance you schedule your training sessions and business functions. I wanted to make sure you kept October clear.\"\n\n\"Sure. I can do that. What's happening in October?\" he questioned.\n\nShe smiled at him. She was sparkling so brilliantly, he could swear she was wearing her Prom Queen tiara. \"That's when Matthew is coming.\"\n\nHe looked at her with mild exasperation. \"Another guest? It's bad enough we have Trent staying and now you've invited someone else? Who's Matthew? One of Trent's friends? Is he coming to make a movie, too?\" He sighed. \"I guess it doesn't matter.\" Leaning over for another kiss, he said, \"I'm going to put my picture on my desk and get changed for dinner. See you upstairs?\"\n\n\"Absolutely,\" she responded. \"I'll be up in about two minutes and thank you for this wonderful day and for my bracelet. I love it almost as much as I love you.\"\n\nDonovan disappeared inside the house and headed straight for the office. He placed the frame on his desk and stood for a minute looking at the picture. The longer he looked at it, the more it seemed like he had seen something like it once before? But where?\n\nMatthew was coming in October. Laci probably had the biggest heart in the world, but she really needed to stop picking up strays. If Laci invited him, he was sure Matthew would be a nice enough guy, who hopefully wasn't planning on rehearsing in the garden or traveling with shackles. There had been enough rehearsing and shackling to last a lifetime.\n\nThat's why it looked familiar. How funny. That peanut picture reminded him of an article he had read in Marian's magazine dealing with some of the local hospitals and the services they offered. The peanut reminded him of the photo of the pre-natal ultra sound.\n\nHe turned to leave the room, froze, and turned back to the peanut. She wanted to redecorate one of the bedrooms with a ranch theme. She was craving orange juice. Matthew was coming in October. The elephant in the room was starting to growl. Really loud.\n\nOutside, Laci stretched on the lounge and sipped her juice. Donovan was exceptionally intelligent. It wasn't going to take him long to figure it out.\n\nCRASH!!!\n\nShe listened for a moment then smiled with relief. The echoing noise from inside the house didn't sound like a body hitting the floor.\n\nThat hadn't taken long, at all.\n\n~ ~ ~ ~ ~ ~ ~\n\nThank you to everyone for reading and for your comments.\n\nPart 4 is in the works and will -- predictably -- pick up about nine months later.\n\nAnother THANK YOU to bigg_mike for editing and encouraging."
    ],
    "authorname": "coldhands_warmheart",
    "tags": [
        "romance novella",
        "humor",
        "strong female",
        "dominant male",
        "blow job",
        "drama"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/prince-of-darkness-vs-prom-queen-03"
}