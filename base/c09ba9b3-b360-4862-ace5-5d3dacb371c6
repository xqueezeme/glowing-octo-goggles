{
    "title": "Warden's Wife Pays His Debt Ch. 06",
    "pages": [
        "This story is posted on the Literotica website\u2014the author does not give permission for it to be reposted or reprinted anywhere else without consent. This chapter picks up right where the fifth one left off...I am confident you will enjoy it as a standalone, but I suspect you'll want to go back and read chapters 1-5 afterwards.\n\n*****\n\nAxel Rose's unmistakable voice blared from the speakers as the smell of sizzling bacon wafted through the Rawlins' weekend retreat in Sea Ranch, California. Outside, the ceaseless rain pounded heavily around the isolated property.\n\nLike all the residents of this remote seaside community, the Rawlins' had been drawn to Sea Ranch for its rugged beauty and get-away-from-it-all charm. Most of the upscale homes rested on a four mile stretch of grass covered landscape that sloped invitingly towards picturesque cliffs overlooking the Pacific Ocean. Few trees and even fewer close neighbors made this the perfect geographic antidote to the rat race existence of their primary residence in the Bay Area.\n\nUnfortunately for the captive couple, it also meant the likelihood of someone dropping by for a stick of butter was quite remote too. Their nearest neighbor was a thousand yards away.\n\nThe Rawlins' had bought the place late the previous summer and spent most of the fall remodeling and decorating. In late autumn and over the holidays, their weekends were filled hosting extended family or simply enjoying the peace and serenity of the solitary place to themselves. They hadn't made much of an effort to meet their \"neighbors\". But in spite of their yearning for isolationism, the Rawlins' had committed to spending much of the upcoming spring and summer exploring the breathtaking terrain and immersing themselves in the culture of coastal Northern California and Southern Oregon. They had lots of trips planned up Highway 1 on Grant's Harley.\n\nThose alluring plans were now the farthest thing from their minds.\n\nLiv Rawlins' hacking cough challenged the Guns N' Roses iconic singer's octave range as ironically the band's famous ballad November Rain blared from the speakers. A billowing smoke cloud exited the young wife's lungs as her coughing fit continued. Mylo Dickenson laughed as he removed the thick joint from her fingers and took another hit himself. \"Okay honey, just one more for you and then we'll sit down and enjoy this incredible feast you prepared for us!\"\n\n\"No more...please. You said if I took that first one I could stop, and now you want me to take a third, this is crazy! I don't do this stuff...\"\n\n\"Shit baby, think of it like a vacation! We don't have anywhere to be or anyone to see, we can just hang out and enjoy each other's company all day...if you think about it, we have a lot to celebrate\u2014I mean it is the one day anniversary of the first time we fucked!\" Mylo teased, knowing the comment was especially insensitive for the captive couple as today was actually their seventh wedding anniversary.\n\n\"Company? Vacation? Anniversary? It's more like a FUCKING NIGHTMARE! Why don't you just take the car and anything else you want, and make a run for it before they find you. Grant and I won't tell them you were here and you can be far away by then.\"\n\nMylo laughed. \"Sugar, there are a couple of problems with your scenario. First, I don't want to leave. And second, if I did, one of the things I'd take with me would be your sexy ass! So unless you want to be like a modern day Bonnie and Clyde, I would suggest you hit that doobie one more time and shut the fuck up!\"\n\nThe deviant watched proudly as the half-naked wife reluctantly hit the Sour Diesel spliff for the third time. He ogled her flawless body displayed to perfection in the deep cut lingerie exposing her large breasts. \"Hey chief,\" he yelled out to the gagged warden sitting solitarily across the room, \"Do you remember if Bonnie from Bonnie and Clyde had as nice a rack as your wife? I'm thinking not or ol' Clyde might have been too distracted to kill all those fuckin' people...kind of like I am right now! Hahaha.\"\n\nThe warden stared at him blankly. His bound wrist still connected to the wrought iron section of the couch. Over the past hour, he'd watched and listened as best he could above the loud music, as the deranged criminal juvenilely tortured his faultless wife with constant verbal and physical goading. A litany of sexual teases and references to the previous night's activities spewed from his mouth. All the while, the son-of-a-bitch spanked, pinched, and groped her while she prepared his extravagant breakfast. The pancake spatula was his play toy of choice as he slapped her exposed ass cheeks again and again.\n\nFor Liv, the whole experience was challenging enough, but doing it while stoned was next to impossible. The criminal had been smart enough to have her administer his insulin shot before they started partying heavily. Once that was out of the way he broke out the weed. And now making matters worse, the convict had prepared two of the strongest Bloody Mary's either of them had ever tasted. Periodically he would make her stop what she was doing and take a large swig with him. They followed each guzzle with a mandated kiss that her husband was forced to watch.\n\nIn reference to the warden, Liv wasn't the only one having to deal with Mylo's constant banter. The rapist took extra pleasure in verbally assaulting him too. \"Hey chief, how's that porn treating you?\" He yelled out. \"That threesome shit is fucking awesome ain't it? As a matter of fact, I wish that hot Indian reporter we saw on the news earlier was here. I can tell you if she was, me, her, and the little missus would be all tangled up in that bedroom right now! Hahaha. I bet it's a bitch having that cage on your little pecker while that hot ass shit plays in front of you! Maybe at some point if you're a good boy, I'll let you jack off while me and the old lady get it on again! Oh...that's assuming you can jack off, which arm do you do it with?\" He teased rhetorically.\n\nThe warden stared despisingly at the abhorrent criminal, hoping against hope that his revenge would come sooner than later. Meanwhile, his guilt-filled wife did her best to ignore his crazed rants and when it was finally time to eat she asked, \"Can you unlock him so we can bring him to the table?\"\n\n\"Table? He ain't eatin' at this fuckin' table, not smellin' like he does. As a matter of fact, he ain't getting near this grub! When we're done, I got some other menu items for him.\" Mylo laughed.\n\nLiv glanced worriedly in her husband's direction before questioning, \"What do you mean 'other menu items', I made plenty of food for all three of us?\"\n\n\"Don't fucking worry about him, he'll get his nourishment, but right now c'mon over and sit that pretty little ass in my lap, I'm hungry as fuck from all that fuckin'!\"\n\nLiv could see the impatient gaze forming on Mylo's face again. She decided she was better off doing what he said than questioning him again. After delivering two large platters of eggs, bacon, pancakes, and fruit to the table she asked, \"Don't you want to have room to eat? I bet you haven't had a meal like this in a long time, I could sit over there and give you plenty of space.\"\n\n\"Haha, I got nothing but time on my hands honey. So if it takes an hour to eat this awesome looking spread, I'm good with it. Besides, my stomach isn't the only body part looking for a little nourishment.\" Mylo teased while flashing the same shit-eating grin she'd seen before. He led her gaze to his lap where his huge cock extended several inches out the top of his boxers. \"That hot little blonde at the weed shop was right about that Diesel shit, it makes my fuckin' dick hard!\"\n\nLiv gasped loudly. She was at a loss for words as she thought shockingly to herself, \"How can his huge penis be hard again already? He isn't going to want to have sex right here...in front of Grant...is he?\"\n\nHer final question was answered quickly as he backed his seat from the table. \"Baby, climb down under here and help me get my boxers off. I'm not shy, and there's something cathartic about eating naked!\"\n\nWith the music blaring loudly, Grant could only hear bits and pieces of their conversation but he had a pretty good idea what Mylo was coercing his wife to do. He pulled on his restraints yet again, but he could feel the power in his resistance fading quickly. The interminable pain and swelling in his broken bones, lack of food, and utter exhaustion were sapping what little energy he had left.\n\nLiv took one final glance in her husband's direction before kneeling down under the table. Mylo ran one of his big hands through her hair. \"Okay Sugar, help me get these uncomfortable fucker's off.\"\n\nThey worked together to free the snug boxers and Liv maneuvered them over his unit before sliding them down his legs. His semi-hard cock swung back out and flopped against her pretty face. The talented children's doctor moved her small hand to his shaft and reluctantly guided the swollen head into her mouth at Mylo's direction.\n\nThe sex offender's head fell back as he groaned loudly. \"Oh fuck yeah!\" Now with his hungry cock being serviced, Mylo turned his attention to the buffet and proceeded to shovel the delectable contents into his hungry mouth. The home-cooked breakfast feast was like a gift from heaven. He honestly couldn't tell which was better, the tasty food or the breakfast blowjob.\n\nLiv couldn't believe his cock was already in her mouth again.\n\nHer thoughts were quickly interrupted by more of Mylo's hubris. \"Damn warden...Mmmm...you don't know what you're missing over here. I honestly don't know what's better, your wife's wet lips or her fuckin' blueberry pancakes!\"\n\nThe warden seethed with rage. For the second time since they'd awoken, his beautiful wife was being forced to pleasure the deranged sociopath orally. This time however, her positioning, the loveseat to his left, and the placement of the kitchen table set, obscured his view of the debauchery. But the constant verbal chatter from the arrogant piece of shit, let him know exactly what was happening.\n\n\"Yeah, you suck a really mean cock honey! But as filling as I know that fucker is, you must be starving yourself, climb on up here and get yourself some of this incredible grub.\" Mylo encouraged as he easily lifted her lingerie clad body from her knees and maneuvered it into his lap. She was now facing her husband's direction as Mylo's huge cock pressed against her g-string clad pussy.\n\nWhen she looked over in Grant's direction, Liv noticed her vision was slightly blurred\u2014she immediately chalked it up to the marijuana and vodka. \"Jeez it's only a quarter to eleven and I already feel like this? What in the world is the rest of this day going to be like?\"\n\nIf she only knew...\n\nFor the next several minutes the tortuous criminal fed her tidbits of the delectable fare while subtly gliding his steel shaft along her slit. It wasn't long before he could feel her wetness leaking onto him. He whispered in her ear, I'm gonna slide my cock in you and as long as you don't respond outwardly, your husband won't have to know we are fucking again. The choice is yours, if you choose to fight it or make a scene,\" his teeth clenched menacingly for effect, \"then I'll drag your ass over there and fuck you so hard on the couch right next to him that he'll never be able to get the image out of his mind! Is that what you want?\"\n\nLiv subtly shook her head, confused by how she should respond, but not wanting to torture her husband any further.\n\n\"Good...so I'm gonna pull your panties aside and you're going to rub that wet slit along my cock until the head pops inside. And then we're gonna work together to get this fucker nice and deep, just the way you like it! Then you're going to ride and squeeze it with your tight little cunt while we eat the rest of our breakfast. And when you're ready to cum, I would suggest you try your best not to squirt all over the place or your hubby might know. Do you think you can do that?\"\n\nLiv nervously contemplated his directive. She hated her options, but didn't see she had a choice. The pretty wife slowly nodded as she did her best to focus on the man she loved sitting helplessly across the room, not the one whose fat cock felt so good grinding against her dripping sex.\n\nHer head hadn't stopped nodding before Mylo's long fingers slipped inside the slick material and yanked her g-string aside. The delicate garment stretched like it might snap. It was already soaked. \"Nice baby...okay slide that married pussy across my dick until it's nice and wet and then line it up with your hole. Then I want you to tell me what you want!\" Mylo whispered before he bit down on her ear.\n\nThe crazed sex offender fed Liv a piece of crispy bacon while her hips moved ever so slowly across his lap. As they did so, the young wife could feel every rutted contour of his rigid pole as her tender lips parted and gripped the persistent invader. Her married slit left a slippery trail along its veiny span. \"That's it baby, nice and slow,\" Mylo whispered, \"but don't forget to eat or your hubby's gonna wonder what's going on.\"\n\nLiv reached for her fork and mindlessly took a bite of scrambled eggs. She glanced in her husband's direction just as his head bobbed for the first time.\n\n\"Damn, these blueberry pancakes are fucking juicy!\" Mylo blurted out loud enough to startle the warden from his malaise. His announcement startled Liv enough that she flinched too. Mylo felt a gush of pussy cream splash across his cock when she settled back down. The deviant extended his purple-stained tongue and fluttered it like he was eating pussy, \"Yeah, this shit is so wet and juicy, I can feel the nectar dripping! What do you think baby?\" Mylo asked as he brought a big bite smothered in syrup to her mouth. His callous approach caused a large dollop of gooey syrup to spill from his fork and splatter in the gap between her big tits.\n\n\"Oh shit, I almost forgot the best part,\" Mylo shouted as he grabbed the whip cream canister from across the table. \"Here honey open up, mix this shit with the bite in your mouth!\" The reluctant wife did as he said before her mouth was quickly filled with the thick sugary cream. \"Is that fuckin' shit good or what?\" He cackled.\n\nWith the distraction in place, Mylo whispered stealthily in her ear, \"Tell me where you want my cock!\"\n\nShe shook her head delicately, trying not to alert her husband whose attention had been recaptured by Mylo's outburst.\n\n\"Don't fuck with me bitch or I'll get that fireplace poker out again,\" he cautioned, this time in a more vociferous, threatening tone, but still not loud enough for her husband to hear.\n\nDespite the distance across the room and Mylo's distracting ravings, Grant suspected something more was happening between the lunatic and his wife, but his vision of their layered bodies remained blocked below the table level. He watched as after Mylo filled his wife's mouth with whip cream, he sprayed a big clump on his own tongue and joyously sucked it down.\n\nAfter swallowing, the rapist whispered again, \"Tell me...\"\n\n\"Can we please just keep doing this, I'm sure it feels good for you...\"\n\n\"Don't question me bitch! I can tell by how wet your pussy is, it feels good for you too, but it ain't your choice,\" Mylo growled through gritted teeth as he pinched her plump ass hard.\n\nLiv held back a scream. \"Okay, put it in.\"\n\n\"That's not convincing enough slut!\" He gripped her skin and pinched more aggressively.\n\n\"Oh shit please stop. Will you...um...put it inside me. I want to...uh...ride it...\"\n\nA conquering grunt escaped Mylo's throat as his fingers absorbed another taught section of the wife's sexy ass flesh. \"What do you want to ride?\"\n\n\"Please don't pinch me...your cock...I wanna ride your...um...big cock!\"\n\n\"That a girl. Take a bite of food as you slide forward and put that tight hole against it. This horny fucker knows what to do after that. It won't be his first time stretching that tight shit out. Will it?\"\n\n\"Oh jeez...no!\"\n\n\"What do you mean 'no' bitch?\" Mylo questioned as he gathered more smooth skin between his fingers.\n\n\"I mean, no it won't be the first time he has stretched it out. It's...uh...he's so...so effing big...\" She acknowledged as she slowly pushed her hips forward, gliding her sopping gash along his bulging shaft again. At the same time, she distractedly forked a bite of cantaloupe into her mouth.\n\nWhen her slippery opening neared the swollen head, Mylo gripped her hips tightly and thrust upward. His big cock was like a wild animal stabbing its prey. The young wife practically choked on her food as the oversized knob bullied its way inside. Mylo reached for a piece of bacon and stuffed it in his own mouth. After chewing loutishly he bellowed, \"Fuck chief, this shit is good, you should put it on the menu at the prison! Damn, it's easy to forget after you haven't had something for so long just how fucking good it can be! You know what I mean big guy?\"\n\nIn spite of his distrust for the deranged convict, perhaps due to his foggy head or the arousing threesome on the screen in front of him, the warden didn't catch that Mylo's deceptive reference referred to his wife's pussy, not the bacon.\n\nOver the next few minutes, the warden peered ignorantly back and forth between the porn and the kitchen table. He fought the dull ache from his concussed brain and exhaustion from the long sleepless night. As a result, he wasn't sharp and had no idea every sensitive nerve ending in his wife's pussy was being assaulted by the oversized intruder taking up residence between her legs.\n\nAt the same time, Mylo coerced the guilt-filled wife into feeding him bites of the delectable fare. He did the same for her, making her tell him how much she loved each one. The preoccupied wife answered in a series of breathless nods as her slick pussy soaked the rooting invader.\n\nMylo basked in the moment. He knew the young wife was experiencing profound anguish. Despite her pleasure, she was trying not to display any reaction in front of her husband. That, in and of itself, would have been difficult under any similar circumstance, but it was made all the more challenging now by the size of the intruder stretching her tunnel to its limits.\n\nFrom Mylo's perspective, on the surface this stealthy strategy would appear to fly in the face of his true goal of torturing the warden through the sexual (mis)treatment of his wife. But the cunning sex offender knew his own satisfaction would be that much more fulfilling if, in addition to tormenting the man who had wronged him for so long, he corrupted the mother-fucker's wife's brilliant mind in addition to her spectacular body. Mylo Dickenson was in his element. Fucking Liv Rawlins was unbelievable, but fucking with her was almost as good!\n\nHe wasn't done.\n\nMylo slipped his hand from her ass and moved it between her thighs. She stiffened as his long fingers found their way through her little furry patch to her slippery bump.\n\n\"Oh god...no please don't...you don't need to do that! I already feel you everywhere...\"\n\n\"Not everywhere slut, I could be molesting your huge tits or fingering your asshole, which of course I will again later, but right now, you just sit here and ride this big cock. Don't worry about anything else.\"\n\nLiv bit her lip and grunted while the already incommunicable feelings of pleasure were enhanced dramatically as Mylo's fingers frigged her like no man ever had. She tried to avoid making eye contact with her husband, but when she finally glanced his way and saw his head bobbing in exhaustion again, a momentary sense of relief permeated her senses. She let herself enjoy the feelings of pleasure without remorse, if only for a few seconds. Unfortunately for her, during that blissful hesitation, perhaps due to her drug and alcohol induced condition, the irrefutable words \"ffffuck me\" oozed unconsciously from her faithful lips.",
        "A satisfied grin formed on Mylo's face. It had been a very long time, but he had been down this path many times in the bedrooms of countless women, all of whom wanted desperately to reject his personal trespassings. But as it was with each of them, he could already sense that Liv Rawlins' body was succumbing to the pleasurable feelings her intellectual mind could not refute.\n\nHe thought to himself, \"I'm fucking this horny bitch in the same room as her asshole of a husband, while I hold them both captive in their own home, and all she can do is beg me to keep fucking her. I'm gonna bang this bitch till her pussy explodes!\" \n\nThe irony of the situation was profound. While the warden sat isolated in misery with his cock uncomfortably bound by a cold immovable barrier, his wife's sexual complement dripped in blissful arousal while stuffed to its limits by the hottest pleasure tool imaginable. All the while, her captor's fingers played her clit in perfect rhythm with the GNR keyboardist's manipulation of the ivories.\n\nThe young wife battled her feelings of disloyalty. Her husband sat no further than thirty feet away while another man drove her towards sexual ecstasy the likes of which she hadn't imagined possible only 24 hours previously. Perhaps the drugs and booze had broken down some of her inhibitions, but she still questioned how her body could respond so traitorously given the situation.\n\nNevertheless it did. Liv Rawlins was going to cum. And it wasn't going to be a small one.\n\nFrom somewhere deep inside, perhaps not as deeply as her captor's cock, another orgasm was building. Since the prior night, the young wife had come to recognize this previously unfamiliar stirring. Each time it felt like a tropical depression forming in the far recesses of her ocean, building unrelentingly until it reached her pussy as a category five tempest that battered her from the tips of her toes to the last follicle of hair on her head.\n\nMylo knew her storm was coming\u2014he already recognized her telltale signs. Limitless gasps and grunts escaped her lips followed by continuous contractions around his dick while the slickest of lubrications saturated him. Her nipples swelled harder than diamonds. \"That's it baby, cum on that big fuckin' cock again!\" Mylo whispered in her ear.\n\n\"Ohhhh...not here...can we please stop...uhn shit?\" The guilt-filled wife answered his challenge unconvincingly.\n\nMylo held back a laugh. He had stopped moving his cock and pulled his fingers from her clit minutes before. The warden's wife's undulating hips and contracting pussy were now doing all the work.\n\n\"You don't want to stop! You know what's coming and hubby can barely keep his eyes open. As long as you don't scream too loud or squirt all over the place, he won't know. You can have your cake and eat it too!\"\n\n\"It's not cake, it's...it's terrible...\" she answered in a pre-disposed response.\n\nThis time Mylo did let out a laugh, the words coming from her lips didn't align with the urgent movements of her hips. \"Oh yeah, that sopping pussy doesn't seem to think so!\"\n\n\"It's only because you got me wasted, just like last night!\"\n\n\"Honey, you better come up with a better excuse cuz you and I are going to be fucked-up 24/7. And based on the way you fucked after that blow last night, this weed's just a warm up. I got a mountain of that white stuff!\"\n\n\"I hate you!\"\n\nMylo moved his hand back between her legs.\n\n\"Oh god...please don't do that...\"\n\n\"Do what?\" He teased as he slipped her bump between two of his thick fingers.\n\n\"Touch me while...while...you are inside me...like that...oh...uhn...please...don't\" Liv Rawlins whimpered as her hips reacted more urgently.\n\nMylo moved his mouth to her ear, \"It's time baby, it's time to give me that cum. Hubby's in lala land over there. Cream on this big cock again, we can clean the mess up after...\"\n\n\"You're an evil man...uhn...uhn...uhn...just know I'm...oh god...not doing this for you. I'm doing it for him,\" she grunted while gazing in her husband's direction. \"He's a better man...oh shit...than you could ever be!\"\n\nMylo felt her sinewy body tense and go rigid as her pussy gripped his cock one final time. Her breathing stopped as an almost imperceptible shriek escaped her parted lips. It was such a high pitch that it didn't capture her husband's attention, but Mylo knew it was the final sign. He watched as her hands gripped the edge of the table, her fingers turning white, as she pushed herself down hard on his cock.\n\nMoments later the cunning rapist's genitals were washed in waves of hot fluid as robust as any he'd already drawn from her. While she was still shaking, Mylo breathed in her ear, \"That's it, give it to me sweetheart. Cum on that big cock again! I'm not sure how you're measuring the better man, but if it's him, it certainly can't be determined by whose cock your little pussy squirts on the most.\" He cackled.\n\nThe sex offender remained buried deep inside for the next several minutes while she breathlessly recovered. Her hips twitched involuntarily in post-coital recuperation while Mylo fed her more of the delectable fare. She mindlessly consumed the remainder of her breakfast that had long since turned cold.\n\nWhen his cock finally softened, Mylo lifted her hips and pulled out. Another wave of dammed-up ejaculate spilled from her gaped opening and gushed on the floor. \"Oh shit, you spilled your syrup all over the floor bitch!\" Mylo yelled. \"Go over and grab something to clean it up before it becomes even more of a sticky mess.\"\n\nGrant's drowsy head lifted as he peered again in their direction.\n\nLiv could feel her cum dripping down her legs as she moved to the kitchen hoping her husband wouldn't be able to see from across the room. She shuffled quickly on wobbly legs, leaving a trail behind her. The remorseful wife retrieved a sponge and a towel and made her way back to the table. Mylo looked on smugly before she shot him the dirtiest look imaginable.\n\nHis demeanor changed again. \"Get down on your hands and knees and clean it!\"\n\nAs she climbed under the table and began wiping up her mess, Mylo gripped a handful of hair, pulled her face to his arching dick and ordered just quietly enough that Grant couldn't here, \"Clean your cum off my cock with your mouth first!\" She started to object until he yanked more firmly on her scalp. Moments later Liv Rawlins, wife of the proud prison leader, licked her own essence from the dripping penis of one of his inmates\u2014an evil man who had ripped yet another mind-bending orgasm from her bewildered pussy.\n\n\"Don't forget my balls too slut, that shit splattered all over the place!\" He piled on degradingly.\n\nThe young doctor awkwardly licked and sucked her cum from his genitals. While Liv had always possessed a kinky streak, fellatio was never one her things. She had tasted herself on Grant's tongue many times and was never grossed out by it, but it wasn't her thing to do it from his penis. Her husband had always been the oral provider in their relationship.\n\nNow as her tongue fluttered along the rutted surface of her captor's cock, she surprisingly found her flavor subtle, and her scent, while pungent was not disagreeable. Before long, she found herself licking more vigorously as an unfamiliar feeling began to develop...she couldn't place it, but it felt strangely like intoxication. And while she'd already had a strong cocktail and several hits of pot, she could tell this was something entirely different.\n\nMylo helped her out from under the table and after slipping his boxers back on, led her across the room to where her husband sat. The warden's heavy eyes opened wide as he saw them approach. He stared back and forth between them as drool spilled from his gag. His chest was soaked with spit. But despite his desolation, he still was able to discern a strange look on his wife's face that wasn't familiar to him. He also noticed she had a dark wet spot on the front of her babydoll and slickness on her thighs. \"That must have been where the syrup spilled...\"\n\nAn overwhelming sense of guilt enveloped Liv as she observed her husband's wretchedness. She felt especially disloyal as only minutes before, while he wallowed in pain and dejection, she had experienced indescribable pleasure while cumming all over their captor's huge cock...again.\n\nTheir thoughts were both interrupted by Mylo's grading voice. \"Okay doc, now that you provided me with your delicious treats, I think it's time we had a little three-way discussion regarding your piece-of-shit husband's injuries.\" He looked over at the warden as an uncontrollable saliva stream spilled from around his gag and dribbled down his chest.\n\n\"Well...maybe this will be a two-way discussion, but I think you get the point.\" The escapee laughed at his own joke while mocking the helpless warden yet again.\n\nThe Rawlins' were not in a joking mood.\n\nBut in spite of Mylo's cruel mocking, they both felt cautiously buoyed by his acknowledgement of Grant's injuries and a willingness to discuss them. Mylo rose and retrieved the fireplace poker before making his way across the room and collecting the medical bag. He came back to where they were sitting and plopped back into Grant's Lazy-boy with the bag in his lap.\n\n\"Chief, those unfortunate fucks in your infirmary were nice enough to provide access to the prison pharmacy after they departed planet earth. I collected a pretty nice stash of shit before I left, including that huge mountain of blow sitting on the end table over there. I'm not going to ask why you keep medical grade cocaine in the infirmary at a state prison, but I'm...uh...let me correct that...your wife and I are really glad that you do. I've already told you what that amazing shit does to her!\"\n\nMylo watched as the distraught warden glanced in his wife's direction only to see her eyes drop again.\n\n\"But she isn't the only one potentially benefitting from my little pilfering. You see fucknut, I grabbed a shitload of pain meds too. He pulled container after container of pills from the bag. I have a bunch of opioids including Vicodin, Oxycodone, Morphine...oh looky here I didn't realize I grabbed a couple of bottles of Fentanyl too!\"\n\n\"You had all that pain medication with you the whole time and didn't offer him any knowing the severity of his injuries? You're a son-of-a-bitch!\" Liv shouted.\n\nMylo laughed. \"You don't know how correct that statement is honey! My mom was a bitch, actually she was a whore but that's just semantics, and yes I like to fuck a lot...you obviously know that! But getting back to the pain meds, I still have no intention of giving him shit! Anything he gets will be earned. And since he isn't in any shape to earn his own, you're going to do it for him!\"\n\nThe warden shook his head vehemently, fully grasping what the lunatic was suggesting.\n\n\"Oh look how chivalrous the gallant hubby is honey, in spite of his obvious discomfort, he doesn't want his sexy wife to have to degrade herself to earn pain relief for him. What this dumbshit doesn't understand is his horny wife loves every second of her degradation. Huh baby?\"\n\n\"Fuck you Mylo!\" Liv screamed.\n\n\"What did you say to me cunt?\"\n\n\"I...I...said...oh...I'm sorry...I said I'm sorry!\" She backpedaled, realizing her last comment might have crossed his imaginary line.\n\n\"No, that's not what you said slut!\" Mylo growled as he rose quickly from his chair and moved across the space between them to the kink box. He ripped the wooden paddle from inside. As he turned back towards his chair, he gripped her thick dark hair and pulled her across his knees as he landed heavily back in the seat.\n\nThe warden pulled desperately at his bindings as his wife screamed in terror.\n\nMylo stared at him with cold dark eyes as he yanked the bottom of his wife's baby doll up over her hips until it was wrapped around her torso. She struggled to free herself, but the shocking strength in his upper body quelled her movements. The devilish assailant then gripped the top strap of her g-string and ripped the stretchy garment from her hips and tossed it aside.\n\nBoth men sat staring at one another as the sexy wife's heart-shaped bubble ass now lay exposed in the convict's lap. Mylo raised the paddle in one hand as his other rubbed across her perfectly smooth skin until his fingers disappeared between her cheeks.\n\nAnother thick spit stream spilled down the warden's chin as he helplessly watched his wife's hips tense while fearful whimpers escaped her lips.\n\n\"Okay fucker, your disrespectful wife is clearly not adhering to the rules we established earlier\u2014so she needs to be punished. Nod your head and confirm you agree!\"\n\nGrant Rawlins frantically shook his.\n\n\"WHACK\" the paddle sounded as it landed squarely on Liv Rawlins' pristine ass. She screamed in pain.\n\n\"Damn that is one tight fuckin' ass chief\u2014I'm surprised the paddle didn't break! Acknowledge your hot wife needs to be punished for her insolence!\"\n\nThe distraught warden shook his head vehemently again.\n\nAgain the paddle slapped loudly against her reddening ass cheeks. She yelped.\n\nThe warden had used the same paddle on his wife many times in their playful sex games over the years. It had been one of the first toys they had added to the kink box not long after their wedding years before. In fact it was its purchase that led Grant to truly understand that his new wife had a seductive, naughty side in the bedroom that he never could have imagined in his wildest dreams.\n\nMany years before, the warden had returned from a business trip on a Friday night only months after their wedding night. He had texted her when he left the airport to tell her he'd be home in about an hour. When Grant entered the house, everything was dark. He thought it was odd, but made his way upstairs quietly, anxiously wondering what his beautiful wife might have in store. The only light was a muted ambiance emanating from their master bedroom at the end of the hall. When he turned the corner, he was immediately presented with one of the most erotic settings he ever dreamed possible.\n\nCandles flickered around the large room while quiet music played in the background. In the center on their large bed, his gorgeous wife rested on her elbows and knees. Her wrists were inexplicably handcuffed to their headboard. Grant approached silently, his cock already hard in his pants as he took in the scene. Liv's stunning body was clad in tiny black and white jailbird lingerie. A short skirt, if you could call it that, covered about three inches of her deep cleft ass crack, leaving the rest of its bubbled exquisiteness exposed for him. Her thick pussy lips sat framed to perfection between her ass cheeks and smooth athletic thighs. Black fishnet stockings connected with lacy garters highlighted her long legs capped by four inch stiletto heels. She wore nothing on top, the skin of her sinewy torso glistening under the flickering light of the candled illuminessence. To crown the perfection of the scene, the warden could make out the perfect roundedness of one of her large naked breasts from the side as it pressed enticingly against the silky bed sheets.\n\nNeither of them had made a sound on his approach. When he finally arrived at the foot of the bed his eyes were drawn to an unfamiliar wooden paddle resting on its surface. Next to the paddle, a note read: Warden, I've been a bad prisoner while you were away. I've had many naughty thoughts\u2014I thought it only right that I be spanked for all the dirty things I've fantasized about!\n\nGrant made a quick glance up at the heavens and asked himself, \"What did I do to deserve this?\"\n\nThe warden quickly learned that his wife hadn't purchased the paddle only for his benefit. On that decadent night and many since, he had watched streams of her silky juice flow down her thighs as he paddled away at her sweet ass.\n\nOf course he had never spanked her as firmly as Mylo Dickenson was at this moment. The warden was pulled back to reality by the rapist's gravelly voice, \"C'mon warden, don't make me do this again! Your audacious wife needs punishment doesn't she?\"\n\nThis time Grant hesitated in response\u2014the backwardness of the situation readily apparent to him. Their captor had roughly paddled his wife's naked ass while challenging him to acknowledge her need for punishment. The crackling connections and pinkish glow forming on her typically flawless skin making it obvious she was already receiving significant chastisement. He didn't know what his acknowledgement of her wrongdoing would lead to, but it didn't seem like it could be worse than the treatment she was already receiving. And knowing his wife's desire for the paddle, the conflicted warden was also mindful of how her body might respond to further paddling. This time he nodded.\n\n\"Ah, nice warden! I'm glad you see things my way. Due to your confirmation, the paddling will cease for now, but since she's in need of more, this will accompany your wife and I the next time we head off to the bedroom together!\" Mylo spewed while holding up the punishment tool.\n\nThe warden gulped nervously.\n\nMylo directed his next statement at the sexy wife, \"Your hubby wants me to extend this punishment in the bedroom, but in the meantime, are you ready to apologize for your disrespectful behavior?\"\n\nLiv quickly nodded her head. \"Yes Mr. Dickenson, I apologize, please don't paddle me again!\" Ironically, she had the same concerns as her husband in regards to how her body would respond. The only difference was, she could already feel the effects on the inside of her thighs.\n\nMylo set the paddle aside and gripped her puffy ass cheeks with both hands. \"Okay, I will forgive you for now honey, but just know we aren't done with this.\" The cocky escapee squeezed the doctor's bubbled contours while staring across at her husband. He wanted Grant to know who this splendid ass belonged to now.\n\nMylo led the warden's gaze back down as his fingers slipped between the folds of deep cleft gap. Moments later a devious grin formed on the rapist's face. \"Hmm chief, if I didn't know better, I'd think our little criminal enjoyed that more than she let on.\" The assailant pulled his hand from between her cheeks and held his fingers up for them both to see. The glistening wetness was clearly apparent.\n\nWarden Rawlins gulped nervously again as he realized the lunatic had just uncovered one of his wife's kinky secrets.\n\nMylo moved her from his lap back into a sitting position next to him. Grant couldn't help but notice that the confident, sometimes fiery appearance in his wife's expression was no longer there. It had been replaced by an accepting, almost submissive gaze.\n\n\"Where were we in regards to these pain meds before your wife so rudely interrupted?\" Mylo barked in the warden's direction. \"Ah, that's right, we were just getting ready to discuss the earning component to this little program. So I've been thinking about the most equitable way to distribute these into your 'pain pill bank' chief. And now, after spending as much time as I have with your wife, I have a better idea about the most reasonable way to do it.\"\n\nHe continued, \"Originally I was thinking about awarding you with a dose of morphine for each time the little wifey squirted on my big cock...\" Mylo hesitated for effect as the Rawlins' stared at each other in horror as to what he had just suggested. \"But I've since come to realize that really isn't fair, because at the pace we're on, you would have a huge stockpile of drugs in no time. So instead, I've decided you will earn a quarter of a pill for each squirt\u2014that sounds about right doesn't it doc?\" Mylo grinned while staring at the shocked wife.\n\nHer fiery persona returned and it took everything in her being to keep from cussing him out again. She held her tongue and stared back with hatred in her eyes.",
        "\"I'll take that as a yes!\" Mylo jeered. \"Okay, this is subject to change if I find the warden's stash growing too quickly, but as of now, here's how the program will to work: For every blowjob where my jizz is not swallowed in its entirety, I will award half an opioid, either Vicodin or Oxycodone, and of course the warden will get a yummy new candied apple in the process. But if the little wifey ups her game and learns how to gulp it all down, then I will award an entire pill. Unfortunately for you chief, in that scenario you won't get one of your tasty treats, unless you want one of course...\" Mylo laughed. \"Are you following?\"\n\nThey stared at the psychopath, rage apparent in their expressions.\n\n\"Okay good. Moving on. Per my previous announcement, I will award a quarter of a dose of morphine for every time the doctor's squirtin' little quim splashes on my big cock. I'm still concerned this one might be a little on the lenient side based on the past 24 hours, but as I said, I'll make adjustments as necessary.\"\n\nAgain, the married couple seethed but remained quiet.\n\n\"And lastly, to earn the really potent stuff, you know they say Fentanyl is up to fifty times stronger than morphine\u2014I'm probably making this one a little too easy too, but all that's required for the warden to earn a full dose is for you to take one of my sticky loads in your ass Mrs. Rawlins!\"\n\nGrant yanked at his restraints as desperate undistinguishable cries sounded from his throat.\n\n\"I hate you,\" was all the livid wife could muster.\n\nMylo laughed. \"Of course if I'm in a charitable mood, I might award \"extra credit\" for special treatment. But also know that I can and will take away any number of rewards for insolence or resistance!\"\n\nBoth Rawlins' sat silently for several seconds, but Mylo could tell Liv was holding something back. \"What is it doc? You got something you want to say?\"\n\n\"Yeah...uh...but can we go in the other room to discuss it?\"\n\n\"Nope. If you want to get something off your very nice chest, do it right here or I'm going to consider this topic closed.\" Mylo knew what she wanted to ask, but didn't want to give her the opportunity to do it outside of the warden's earshot.\n\nA pained expression formed on her face as she made eye contact with her husband before speaking, \"Obviously his injuries are significant, are you going to give him any painkillers now?\"\n\n\"Why would I do that, we just established the guidelines?\"\n\nAgain the convict watched as she glanced nervously at the warden before responding, \"What...what about what's already been earned?\"\n\n\"What do you mean?\" He asked, playing dumb but fully understanding what she was getting at.\n\nThis time an irritated expression formed on the wife's pretty face. \"You know what I mean!\"\n\n\"I'm afraid I don't, you're a smart doctor lady and I'm just a high school dropout from the sticks.\"\n\nThe young wife knew exactly what Mylo was doing, this wasn't going anywhere unless she asked directly. \"Are you going to give him meds for the...uh stuff...we've already done together?\"\n\n\"Stuff?\"\n\n\"SEX you asshole!\"\n\nA sly smile formed on Mylo's face as he peered over at the warden who was breathing heavily through his nose as spit spilled down his chin. The remorseless convict saw this as another opportunity to torment them further. \"Hmm, I'm not really sure what you're referring to Sugar. I guess I could award him half a Vicodin for the blowjob, but not a whole one cuz you choked on my load. And don't forget, he was rewarded with that scrumptious apple in that exchange, so it worked out pretty good for him. Didn't it chief?\" Mylo laughed as he studied the warden's furious face. \"...But aside from that, I'm not exactly sure what you are talking about honey?\"\n\n\"That's bullshit! You've already rubbed his...my husband's...nose in it. He obviously has a good idea what you've been making me do behind closed doors!\"\n\n\"Making you do?\" Mylo laughed, enjoying every second of the titillating banter. \"Doc, you seem to be living in some kind of spectrum of denial. But nonetheless, I think you should focus on how you're going to maximize his bank from this point forward, anything you may have done is water under the bridge...or more accurately stains on the sheets.\"\n\n\"You're a monster!\"\n\n\"Careful titties, do you want me to get that paddle out again? Actually, don't respond to that...I think I already know the answer!\" Mylo joked. \"Alright sweetcakes, speaking of sheets, I want you to run on into our room and strip those off our bed and make up the warden's comfortable resting place with them. Put some clean ones on our bed, I saw a red satin set in the closet last night, use those. And then find another one of your hot little outfits and slip it on. Also, clean yourself up. Fix your hair and put on some makeup. I like dark eye-liner, thick eyelashes, and glossy lipstick! When you're done, climb under those silky sheets and wait for me!\"\n\nThe young wife glared back at him. \"What about food and drink for him, he hasn't eaten or had anything to drink in almost 24 hours?\"\n\n\"That's not true. Don't forget honey he already got a significant amount of protein on that candied apple! But, I'll see to it that he gets some more nourishment before I put him to bed. But you need to hurry your ass up, get those sheets changed and make yourself hot for me.\"\n\nShe started to rise but before she moved far, Mylo reached out, grabbed her arm and pulled her head down for a heavy wet kiss. The action surprised her and her body wasn't in a position to fend him off. He held her there as their lips pressed together for several moments. When he finally released her, she pushed herself away and scrambled towards the bedroom, never glancing back at either of them.\n\nThe warden pulled at his restraints as rigorously as his wrecked body allowed.\n\nMylo watched Liv's sweet little ass jiggled before she disappeared. \"You know chief, you are one lucky SOB! I don't know how a jackwagon like you ever landed something as fucking hot as that! I think now about all the nights I sat in my own squalor in solitary thanks to you, while you were home chasing that fine shit around the bedroom. I got to give you credit. I mean, as you know, I had my fair share of quality pussy when I was on the outside. But probably due to the long time since, I don't remember ever sinking my cock into something quite that sweet!\"\n\nUnintelligible cries sounded from the warden as more spit spilled down his filthy face.\n\nMylo continued, \"So the shoe is on the other foot now isn't it motherfucker? It's unfortunate for you that this fucking rain still hasn't let up, because if it did, me and the little lady might venture out a little bit, but instead we are holed up here with nothing else to do except party and fuck! I'm gonna let you in on a little secret. While you were sitting here watching porn and dozing, your horny little wife was impaling her tight wet hole on my cock while we dined at the table. While I fed her bites of bacon in one opening, I fed her the full length of my sausage in the other. And when that horny slut finally came, which she always does, it was her cream that squirted all over your kitchen floor, not the fucking Aunt Jemima's!\" Mylo cackled. \"So as I told you before, think of this as your solitary confinement you son-of-a-bitch. Today while you lay in our cum-stained sheets, just know I'm gonna be chasing that sexy shit around your bedroom all day long!\"\n\nMylo moved across and patted the immobile warden heavily on his wrecked shoulder as muffled cries of rage sounded. He spoke again, \"It won't be long before I move you to your room to get a little shut eye chief, you must be tired as hell after trying to sleep in your own piss all night long. I hope you have happy dreams!\"\n\nThe warden struggled against his restraints yet again as the arrogant criminal rose from the couch and made his way into the kitchen. For the next fifteen minutes, the prison official listened as the song Whistle Why You Work spewed irritatingly over and over from the sociopath's lips. With a gloating smile, Mylo whistled and busied himself collecting items for his planned day of debauchery. Rawlins watched as the miscreant removed a large bottle of chilled tequila from the refrigerator along with a twelve back of Bud Light. \"I probably could have picked up the fully leaded stuff chief,\" Mylo teased as he held up the twelve pack, \"as with all the exercise I'm gonna get, I guess I could've used the extra calories, but I'm always trying to watch my girlish figure!\" He laughed as he headed into the master room before coming back out for another load.\n\nThe grating whistling continued.\n\n\"I love what you and the missus have done in there chief. The mini-fridge and big screen are gonna come in handy today. Oh shit, that reminds me, I need to grab some porn. Shit, this is like packing for a camping trip, I don't want to forget anything important!\" He laughed giddily. Moments later Mylo sauntered past again with a shit-eating grin plastered to his face, a container of strawberries, the canister of whip cream, and a bottle of Hershey's chocolate sauce now stacked on his tray.\n\nOn his next pass he carefully picked up the mirror containing the big pile of cocaine. \"Your wife's favorite part...\" he jeered.\n\nOn his final jaunt, Mylo moved in front of the warden and yanked his boxers down. His huge cock flopped out heavily and rested in a slight arc, pressed in its position by the massive ball sack beneath it. \"You know after thinking about it, my last statement wasn't entirely true chief, the cocaine is actually your slut wife's second favorite part!\" The sex offender slapped his cock against the warden's face before pulling up his shorts and squeezing the tormented man's injured shoulder again. The proud prison official whimpered in agony.\n\nMylo moved over to the kink box.\n\n\"Let's see...hmm...the nipple clamps, porn, and motion lotion are already in the bedroom. What else...ah this little bullet vibe could be good...you know chief I found a remote egg in her panty drawer, did you even know she had that? Or is that part of a secret stash she uses to get off when she tires of your little tool?\"\n\nThe warden didn't respond as Mylo cackled again.\n\nThe convict continued perusing the box. He pulled out a black leather horse crop and playfully whipped it in the air, \"This could be interesting...\" Finally he grabbed the bag of feathers and a blindfold. \"You sit tight here chief, I'm gonna take this shit into the love nest and then I'll come back and escort you into your room.\" He started to move towards the bedroom before stopping in his tracks. \"Oh shit, I almost forgot...\" He returned and retrieved the wooden paddle from the couch. A sly smile formed on his face, \"I'm on to her chief. She liked when I spanked that tight little ass with my hand last night, but that dirty little thing seemed especially fond of the paddle a few minutes ago. I think I may have made a kinky little discovery, huh chief?\" Mylo patted it playfully against the warden's cheek several times before hurrying off.\n\nWhen he returned, he unlocked Grant from the couch and roughly pulled him to his feet. After sitting for such a long period, his injuries conspired to make it difficult for him to walk from the living room to his bedroom. When they finally arrived, the pungent smell of sex struck both of them simultaneously. \"Ah good, the little wifey got the sheets changed over I see...and smell.\" Both men could see large wet spots coating the expensive floral printed bed coverings. Grant had observed the soiled sheets when Mylo led him to their room earlier in the morning, but for some reason they appeared more sullied now. Perhaps it was the prospect of him climbing between them that made it seem so. His thoughts were interrupted by the sex offender's repartee, \"At least it doesn't smell like piss in here anymore, huh chief?\"\n\nWith little difficulty, Mylo connected the warden's good wrist to the cable circling the bed. \"I'll go grab you something to eat and drink. There's some toilet paper there on the floor next to your bucket if you need to take a crap.\"\n\nThe escaped convict returned a few minutes later with a paper plate containing two dry rice cakes, a box of cat food, and a couple of Mountain Dew's. \"I know I kind of splurged on the vittles compared to that shit you fed me in solitary, but it's just the kind of guy I am. Bon Appetite! If I were you, after chowing down on this feast, I would try to get some sleep. But I need to run, I'm sure my scantily clad buddy is getting anxious for my arrival!\" Mylo could hear the warden madly sliding along his cable behind him as muffled cries echoed from deep in his throat. A proud smile formed on the rapist's lips as he exited the room and pulled the door closed behind him.\n\n*****\n\nFifteen minutes later as the distraught warden sat on the edge of his bed, he heard the door knob click and his stunning wife entered quietly.\n\nThe sight was like a cruel mirage.\n\nGrant couldn't remember ever seeing her look hotter. The silky leopard patterned teddy that Mylo had tossed in his lap earlier, clung to her flawless body like the designer had painted it on himself. The v-cut stretchy material gripped her natural D-cups like a layer of skin, exposing the alluring chasm and highlighting the rounded contour of each globe to perfection. Black slender straps, stretched to capacity, sunk taughtly into the smooth skin of her exposed shoulders carrying a heavy burden.\n\nThe fullness of her breasts contrasted the sleekness of her narrow core, molded tightly in the silky fabric. And the taper of her sexy hips was made all the more seductive by the cut of the designer piece and the idyllic volume of athletic thigh exposed between the body glove and the matching leopard patterned tights connected by garters. Her shapely legs squeezed by the sexy hose, appeared to go on forever as her delicate feet melted naturally into a pair of jet black five inch stiletto heels, giving the impression she was standing on her toes. Agonizingly, the warden had never seen any part of the decadent ensemble on her\u2014his naughty wife had only purchased it days before to surprise him for their anniversary.\n\nNow their crazed captor would soon enjoy it for a second time.\n\nAs she moved quickly and as quietly as the stiletto's allowed, the full grasp of his wife's flawlessness registered for the tormented warden. She'd been inside for only a few seconds before the beguiling scent of his favorite perfume wafted in strongly and made his misery that much more profound.\n\nHis wife's thick dark locks were teased in a wild kind of kinky coif that looked like it belonged more on a 23-year-old than a woman ten years older. Heavy dangling oil-rubbed earrings and an onyx chain necklace that he'd never seen before hung around her sleek neck. Liv's Ariana Grande looking long natural eyelashes were painted in black mascara and complimented by dark eyeliner that, along with her dense eye shadow, made her shapely azure blues pop. Her naturally swollen cheekbones blushed in a pinkish radiance that would make any Cosmopolitan model jealous, highlighted the perfection of her flawless facial skin. And lastly, a mid-shade glossy lipstick made her full thick lips look so wet it was as if she'd just taken a big swig of baby oil.\n\nThe warden couldn't help but wonder why she would make herself look so good for him. \n\n\"Honey I don't have much time. He just went into the bathroom and if he finds me in here, I don't know what he'll do!\" Liv spoke in panicked tones as she frantically located a nearby towel and wiped his spit strewn face. She carefully observed the large gash on his forehead for signs of infection before she spoke again. \"Honey, it's important that you get some rest, I snuck these from one of the pill containers in the living room,\" she held out a couple of pills. \"This is Fentanyl, it's some pretty potent stuff, I don't have time to take your gag off so I'm going to push them around it and you'll have to try to swallow or suck on them if necessary. It should help significantly with the pain and will make you tired too.\" She squeezed the first pill between the gag and his stretched lips and fingered it inside before she did the same with the second. \"What did he bring for you to eat and drink?\"\n\nHer husband's eyes led her gaze down to the meager rations. \"Oh my god! He's evil!\" Liv shouted in hushed tones when she observed the abhorrent spread. She quickly opened both cans of Mountain Dew and slipped the straw into one, \"This shit's not going to help you sleep,\" she whined as she pushed the straw where the pills entered and he was able to suck some of the sugary drink into his parched mouth. Liv broke up several small sized pieces of the rice cake for him to slip around his gag. \"Try to get some of this food in your mouth, you have to eat and drink! Do you understand me?\"\n\nGrant nodded his head but wondered how he would manage any of this without the basic use of either of his arms.\n\n\"Honey, I've got to go, he might already be out of there!\"\n\nThe warden's eyes were like saucers as he tried to motion for her to stay. She hugged him tightly and planted several kisses around his face. \"Just know that I love you more than anything in this world and we will get through this!\" She paused momentarily before looking deeply into his bloodshot eyes. \"Baby, anything I have to do for him will be to get us one step closer to freedom, please know that I'm doing this for US! I Love You!\"\n\nAgainst his muted objections, she rose quickly and was out the door in moments.\n\nThe warden had no idea there was dampness between his gorgeous wife's slender thighs as she exited.\n\n*****\n\nMoments later the injured man heard a loud roar and a terrified scream that he knew meant one thing, his wife had been caught. His heart beat like a freight train and his head pounded as he tried to come to grips with the incomprehensible situation. The distraught prison leader committed yet again, that if and when he were to escape this nightmare, he would kill Mylo Dickenson by whatever means necessary, even if it meant he would have to spend the rest of his life in his own maximum security prison for it.\n\nAt the moment, his negligee attired wife was being led into the master bedroom by the back of her arm. She and her captor were moving as fast as her high-spiked heels allowed. \"I told you to be waiting for me in bed, you purposefully disobeyed me slut!\" Mylo growled before whacking her hard on the ass.\n\nLiv's heart was in her throat as fear and pain gripped her. She did her best to keep her balance in the heels as he moved her along quickly.\n\nMylo held back a laugh. He had no intention of hurting her, but she didn't know that. Physical violence, aside from hard fucking, had never been one of his things, but his plan required at least the threat of it. The sex offender had every intention of corrupting the young wife's mind as well as her pussy, and he knew putting her in a position of fear and arousal would make her that much more pliable.\n\nBased on what he'd learned in the past 24 hours, he knew just the thing to do the trick. He grabbed the wooden paddle from the dresser as he led her roughly towards the bed. Mylo could smell the sweet scent of her perfume. He'd given her basic instructions as to how he wanted her to prepare herself for their bedroom rendezvous, but she had taken his vision to another level with the leopard teddy, matching thigh-high tights, and platform sex heels. The outfit, combined with her hair, makeup, and fragrance gave the hot wife the appearance of a $1,000-a-night hooker.\n\nMylo Dickenson would have her for free.",
        "Tears streamed down her face as he landed on the edge of the bed and yanked her sexy body over his knee for the second time that morning. \"Please don't do this...please!\" She begged.\n\n\"Slut, my instructions were clear and you chose to ignore them!\"\n\n\"But...but I dressed up like you wanted!\"\n\nMylo held back a laugh again as his he thought to himself, \"You exceeded my expectations there slut... you didn't make yourself look this hot because of my orders\u2014you wanted to look extra hot for me you horny bitch...\" He finally spoke, \"Yeah, it's the only reason your punishment isn't going to be worse. Now reach back and unsnap it between your legs slut and then beg me to spank your sweet little ass!\"\n\n\"Please don't...it hurt me when you used the paddle before...\" She whimpered.\n\n\"It's gonna hurt a lot more if you don't unveil that tail for me right now bitch!\"\n\nLiv reluctantly shipped her hand back between her ass cheeks and disconnected the crotch snaps.\n\n\"Pull it up in the back and show me where you want this paddle!\"\n\n\"I don't want it...please...can you just use your hand?\"\n\nThis time Mylo did laugh. \"Oh, you can count on that too slut, but I don't think you mind this paddle as much as you lead on!\"\n\n\"Why would you say that...it hurts!\" She whined as her nimble fingers reluctantly pulled the stretchy garment up the crack of her ass exposing her reddened cheeks. Mylo spied her spectacular caboose. He had molested the puffy halves as he pounded the shit out of her doggy-style the previous night before directing his massive cock to her rear entrance and claiming her forbidden prize\u2014a joy her husband had never experienced. Now her previously unblemished backside bore the signs of the odious connections. Bruises and bite marks staked Mylo Dickenson's claim as the new owner of the formerly pristine place.\n\nMylo slipped his thumb in his mouth and moved it over her beckoning starfish. The combination of sensitivity and tenderness from what Mylo's huge cock had done to her backside only hours previously made her jump. His powerful arms held her in place as he molested her private little hole.\n\n\"Please don't touch me there, it hurts from what you did already!\"\n\n\"Haha, you say that now slut, but that isn't what I heard when you begged me to shoot my load in your ass last night and early this morning!\"\n\n\"I didn't beg...\" she answered unconvincingly.\n\nMylo laughed again. \"Okay, maybe you didn't beg, but you sure didn't object!\" In his best women's impersonation he mocked, \"Oh yeah...god...please...yeah...I didn't know it would feel like this...so big...oh...yeah...don't...uhn...stop...\"\n\n\"You're such a pig...\" was her only comeback. She wanted to use the drug/alcohol excuse again, but knew that would only feed right into his perverted plans. Mylo grinned before he let a large saliva stream spill from his lips and splatter on her asshole. Another surprised gasp escaped her mouth.\n\nAs he messaged the slippery fluid around her sphinq he quipped, \"I'm going to paddle this sweet ass of yours again for disobeying my orders. You have two choices, you can object and I guarantee it will be much, much worse or you can beg me for more and I might show you some mercy. And don't forget slut, I'm onto your little secret, a little paddling is right up your alley. What's it going to be?\"\n\nThe respected children's doctor now found herself in an unwinnable position. She was terrified for what the crazed sociopath might do if she objected, but encouraging his sadistic behavior went against every fiber in her being. But at the same time, Liv Rawlins knew her body well\u2014she was fearful how it might respond if she accepted. And worse yet, she knew her captor knew it too.\n\n\"Tell me slut!\"\n\n\"Oh god...ugh...do it...spank me.\" She answered in the faintest of tones.\n\nMylo heard her the first time but wanted to make her say it again. \"I didn't hear you, what's it going to be slut?\" He shouted loud enough that her husband in the other room could hear.\n\nGrant Rawlins remained on the edge of the bed. The initial relief from the Fentanyl was just starting to take effect as the extreme pain from his injuries began ebbing for the first time. Yet, in spite of his physical improvement, his head still hung dejectedly as it conjured up images of what the lunatic was likely doing to his wife in the room next door. He hadn't heard a thing since the initial uproar but the warden still couldn't get the image of the hot outfit and his wife's overall stunning appearance out of his mind. \"She always looks phenomenal in lingerie, but did she have to make herself look that good for him?\"\n\nHe then heard the convict's deep voice from next door but couldn't make out what was being said.\n\nBack in the master, his wife's unsteady reply sounded. \"Spank me.\"\n\nThe next sound the warden heard was the unmistakable connection of the wooden paddle on his wife's firm backside. It was followed by a piercing squeal. He heard it again...and again...and again.\n\nTears were streaming down her beautiful face as her captor paddled away at her bubbled cheeks. A litany of taunts rained down upon her as her ass turned a bright shade of pink. \"Tell me you want another slut!\"\n\n\"Oh god...please don't...it hurts...\"\n\n\"Tell me...now!\"\n\n\"God...shit...yes...spank me again.\"\n\n\"Whack\" the paddle sounded as it struck the smooth surface. The warden's wife yelped loudly.\n\n\"Are you going to obey me from now on?\"\n\n\"Yes... yes...I promise...please no more paddle!\"\n\n\"How do I know I can trust you?\" Mylo teased, not really caring whether he could or couldn't but having too much fun listening to her grovel to stop.\n\n\"I...I'll do what you want...please just don't use the paddle again.\"\n\nThe assailant held back a laugh. He thought about all the things he had planned for the hot WILF, some of which she might not like as much as the paddle. \"We're gonna fuck some more but based on your husband's condition, I'm not sure the lower grade meds are going to do much for him. You better get your head around earning him more of the strong stuff...you know what I'm talking about, huh slut?\"\n\nLiv gulped, remembering the Fentanyl was tied to anal sex. Before she could process that thought further, she felt Mylo's long fingers slip between her ass cheeks down towards her pussy. She knew what he would find when they got there.\n\n\"Ah-hah, just as I suspected!\" Mylo triumphed. \"This tight pussy is literally dripping! You might claim you don't like that paddle honey, but your little slit gives you away every time! I bet the warden pulls that thing out of the kink box every chance he gets. If he doesn't, I'm sure you remind him! Haha.\"\n\nLiv didn't respond\u2014the convict wasn't far off. The young wife could feel pussy juice spilling down the insides of her thighs as it always did when Grant paddled her. Mylo flipped her off his lap onto the bed face down. She let out a startled gasp as her captor gripped her narrow hips and slid them forward. Moments later, she felt her cheeks part and Mylo's long tongue push its way inside her asshole.\n\n\"No...don't do that...ugh.\"\n\nThe sex offender probed her sensitive opening while roughly squeezing her tender cheeks. Liv couldn't believe this was happening again. Prior to the previous night, the young wife had never had her sphincter rimmed. It took only a moment to remind her of the decadence.\n\nStill, she objected, \"Please don't do that...as a medical professional...uhn...I can tell you that isn't a safe practice.\"\n\nMylo laughed. \"You think I care about that Sugar, you can't imagine some of the shit that has gone in this mouth in the last eighteen years. Besides, I really like the taste of your ass!\" He bellowed before circling his devilish tongue around and around her puckered hole. The whirling dervish then continued downward along her taint to her slippery pussy lips.\n\nLiv Rawlins moaned unconsciously when it arrived. Mylo's thumb replaced his tongue on her rosebud as he went to work on her thick labia with his mouth. Juice was practically dripping from her slit as he worked his magic. \"Lift your hips!\" He ordered as he moved a pillow alongside her.\n\n\"Why do you have to do that...\" She breathed heavily as she followed his orders with only slight hesitation.\n\n\"Don't ask questions slut!\" He growled as he shoved the pillow underneath and hungrily attacked her pussy.\n\n\"Please don't...oh...uhn...this is so wronnngggg...why do you keep doing thiiiiissss?\" She whined breathlessly.\n\nMylo pushed her legs apart and brought his other hand beneath them. He rubbed circles around her swollen bump while he sucked and nibbled on her thick tasty lips. All the while, his thumb never paused its relentless assault on her pulsing asshole.\n\nThe hot doctor's hips began to move as her genitals basked in the tortuous pleasure. \"Please don't do this. Please stop...uhn...god,\" she urged as Mylo watched her fists grip the comforter tightly. The subtle roll of her hips became more pronounced as he moved his fingers from her clit and buried them in her slippery groove.\n\n\"Oh no...noooo! Uhn...no...please...sttt\u2014oppp! Not there...no...not there too!\"\n\nThe practiced sex offender roughed her g-spot as he dropped his tongue back against her slickened ringpiece and went to town.\n\nThis time the young wife gasped out loud. \"OH FUCK! GOD I HATE YOU!\" Her rigid ass cheeks tightened against his face and her hips rolled violently as if they were trying to find something more solid than the pillow to hump. Mylo increased his efforts and moments later the warden's wife squealed as sex juice erupted from her married pussy and splashed his entire forearm.\n\nIn the room next door, Grant's bobbing head was suddenly startled by Mylo's triumphant wail! \"YEAH THAT SQUIRTIN' LITTLE PUSSY'S LIKE A FUCKIN' WATERFALL!\"\n\nBack in the master room as cum still surged from the young wife's pulsing pussy. Mylo had already flipped her over and pulled her to the edge\u2014his massive cock was balls deep before she even caught her breath. Liv screamed loudly as the mammoth organ hammered into her. The deviant was on a mission\u2014a mission to extend the doctor's climax. The maneuver was one Mylo had perfected with so many other hot young babes and he was sure the warden's wife's fiery body was ripe for the process.\n\nWith one foot on the bed and the other on the floor, he wasted no time in pounding her pussy hard. Her flexible body was angled such that her shoulder was pressed against the headboard while her splayed hips perched on the edge, invitingly open for his assault. Mylo gripped one of her stocking clad legs and aimed the tip of her spiked heel towards the ceiling. The new position afforded him the opportunity to fuck her hard. Real hard.\n\n\"Please stop...you're hurting me...oh god...it's too deep,\" she begged.\n\nMylo ignored her pleas and continued hammering into her. He could see fear and pain in her expression, but he knew one of the two emotions would fade quickly. This was the first time he had really seen her face since his make-up directive. The sexy WILF had exceeded his expectations in making herself up for him and aside from a few mascara stains on her cheeks, she looked absolutely flawless. The kinked hair, long dark eyelashes, and full glossy lips gave her the look of someone five years younger. Although his memory had faded significantly, he couldn't remember ever fucking any chick this hot.\n\n\"Fuck bitch, your slippery pussy is so damn tight, we need another cum to loosen it up!\" He joyously teased through his sinister gaze.\n\n\"You're too big...please...it hurts...\" Liv pleaded again. All the while she could still feel the remnants of her previous orgasm stirring within. She tried to ignore the sensation, but as his huge cock maintained its offensive, the reluctant wife could feel pleasure pulses firing in the deepest walls of her pussy.\n\nMylo could see the changing effects on her gorgeous face.\n\nHe turned his attention to another beckoning vision. The young wife's big tits jiggled invitingly beneath the sexy lingerie while her hard nipples poked against the slick fabric. Mylo coolly gripped the top and pulled down hard on the stretchy material releasing her bounding D-cups. The thin straps maintained their grip on her shoulders creating a leopard patterned sling around her huge breasts. The effect caused the flawless set to press together, pushing upwards towards his hungry face.\n\nThe new vision stiffened his cock and encouraged him to pound her more aggressively as he reached down and tweaked one of her hard nipples. Liv Rawlins grunted loudly while other new sounds filled the room. Her slickening pussy began putting off sloppy wet overtures while the headboard banged hard for the first time.\n\nIn the room next door, the warden had positioned his wrecked body carefully between the filthy sheets and begun to doze. He was awoken by the sound of the bed frame suddenly slamming against the wall. The helpless husband knew immediately what the sound meant. His raspy throat gulped painfully, trying to imagine how the sex-crazed lunatic could perform again so soon.\n\nThe constant thumping went on and on like drips from a leaky faucet. It was a reverberation that made him practically ill and one he came to detest in only a matter of moments.\n\nIt was only just beginning...\n\nMeanwhile his wife had gone practically tone deaf. The only sounds she could hear were her own grunts and moans and the incessant litany of sexual taunts spewing from the lips of her relentless captor.\n\n\"C'mon slut...gimme that cum!\"\n\n\"Nnnnnoooo...you're a monster!\"\n\n\"Don't fight it...you know you can't wait to squirt all over this big stick again! Let that tight little pussy do its thing Sugar!\" Mylo goaded as his thick cock thrust relentlessly into her married slit. Wet, slapping sounds filled the room as his massive balls slapped off her soaked ass splattering their combined juices across the bed.\n\nThe headboard banged off the wall again and again.\n\n\"Fuck you got a hot pussy...tell me how much better my big cock feels than your husband's little prick!\"\n\n\"No...uhn...I won't...uhn...\"\n\nMylo slapped one of her big tits. \"Say it cunt! Tell me you love this big fuckin' cock and you're going to cum all over it again!\n\n\"Ohh...don't do that...you're hurting me...\" she whined.\n\n\"SAY IT!\" He slapped the heaving mound again.\n\n\"Just...just because I might...uhn...do it again...uhn...doesn't mean I like it more than his. I...I do it on his penis too.\" The distracted wife answered, not really even sure what she'd just said.\n\n\"Ha! I'm sure you do cum on that little tool once in a while, but you don't squirt all over it every time do you slut?\"\n\n\"I...I don't know...oh shit...please just stop...uhn...I love my husband...please...\" Her hands that had been moving aimlessly across the bed now gripped the comforter tightly. Her eyes rolled back and her mouth opened. Mylo knew she was on the verge of another massive climax.\n\n\"That's it baby it's time to give it to me! It's time to cum all over this big fucking cock again!\"\n\nIn spite of her desperate attempt to not provide him with the satisfaction again, her mental efforts were quickly overwhelmed by her physical euphoria. She couldn't deny the pleasure any further. Her lithe body began to shake as breathless words escaped her perfect lips, \"Oh god...I'm doing this for him...only for him...uhn...uhn...uhn...soooo good ...uhn...yeah...soooo much cock...oh shit...cummmminnng...cumming for him...yessssss ...don't ssttttopppp!\"\n\nThe look of complete ecstasy on her gorgeous face coupled with the arousing movements of her wanton body were all it took to trigger a massive eruption from Mylo's cum-filled nuts. He wailed triumphantly as his swinging testicles pumped a gallon of scalding convict cum into her fertile womb. Their combined juices splattered together deep inside her slippery tunnel before gushing out all over the satiny bed sheets.\n\nUpon hearing the climactic wailing from next door, the warden did everything in his power to control his rage. Eventually he squeezed his eyes closed, trying to block out any further thoughts or sounds. Over the course of the long afternoon, he entered into and out of fitful sleep. The pain medication had relieved his injuries to the point of tolerance and sheer exhaustion finally pushed him towards needed dormancy.\n\nUnfortunately for him, he was awoken again and again to the banging of his headboard against the shared wall.\n\nThe sex offender and his wife fucked. And they fucked. And they fucked. The jubilant wails of the rapist beast and his wife's own climactic acknowledgements, coupled with his inability to do anything about it, made the proud warden feel like he was on a slow steady path towards insanity.\n\n*****\n\nFive hours later Mylo Dickenson entered into the warden's bedroom with the smuggest of shit-eating grins plastered to his face. Chocolate syrup stains were visible around his mouth. \"Good afternoon, or should I say good evening! How is your anniversary going pencil dick? I hope you were able to get some sleep, I know how irritable I can get when I haven't slept. Are you the same way chief?\"\n\nThe warden stared at the rapist loathingly.\n\n\"I can see from the splatter around your bucket you must have pissed at least once. Isn't a little pittle on your cage a lot better than sleeping in a big pool of piss? Let's get you unlocked from your cable so you aren't stuck in here all night. I can assure you the real action in this house isn't taking place in this little cave. Mylo dragged the indignant prison official out to the living room and positioned him back in his spot.\n\nThe unmistakable smell of cigarettes painfully overwhelmed the warden's senses. It made him sneeze. Mylo picked up on the effect. \"I know, those Marlboro's are still strong after all these years, aren't they chief? Your wife coughed like a junior high schooler on her first one.\"\n\nGrant's eyes opened wide in surprise before Mylo reached to his left and opened a familiar wooden box. The initials G.A.R. were monogrammed near the latch in gold inlay letters. The warden recognized the box immediately. \"Cuban's? Only the best for the biggest asshole in the California prison system, huh chief? I hope you didn't mind that I rescued your humidor from your office desk. No sense leaving these babies around for all those loser murderers and gang thugs to smoke!\" Mylo joked before taking a big puff and blowing the heavy purple smoke into the warden's face.\n\n\"So chief, I just got to tell you I had one of the best afternoons of my life!\" The smug convict smiled before taking a nice long drag from Grant's favorite Cohiba brand stogie. \"This 43-year-old battered body even surprised me. I mean to keep up with that five-star fuck machine for that long was a hell of an accomplishment for an old fuck like me.\" Mylo's comment was just another dig at the distraught husband. In spite of Liv Rawlins' sexual prowess, the practiced rapist had literally fucked every ounce of energy out of her fit, athletic body.\n\nSpit splattered from around the warden's gag as rage steamed from his ears. The sex offender casually puffed another long drag. \"I mean if they awarded gold medals for fucking, that wife of yours would be on the medal stand in the marathon category!\" Mylo jeered through a big wide smile. \"Then again, I understand they drug test all those athletes and with the amount of jif your little wifey had flowing through her veins, she certainly couldn't have passed any tests!\" The unfeeling convict laughed loudly before he continued. \"And as far as cum goes, I don't know where she gets it all. It reminds of this Pit Bull I used to have when I was a kid. That fucker could piss on every rock, tree, bush and fire-hydrant in my whole neighborhood\u2014he never ran out no matter how long we walked. Now I'm not calling your smokin' wife a dog, but that bitch cums like my old Pit Bull Hank used to piss. Her squirtin' married pussy just never runs out!\"",
        "Mylo didn't stop. \"But I gotta give you credit chief, every time that little slut gushes on my dick she says she is doing it for you. I mean that horny bitch even says it before she screams out my name in ecstasy. She's as loyal as they come. You're a lucky man Rawlins!\"\n\nThe warden decided that further emotional displays were exactly what the psychopath desired, so he just stared at him through unblinking eyes. Inside, however Grant felt like a thousand daggers were stabbing him in the heart. He was obviously aware of his wife's propensity for ejaculation, but the thought of her doing it time after time on the huge cock of a detestable rapist was more than he could fathom. The indignant husband suspected the escapee was embellishing the story, but after sleeping in cum-covered sheets himself for the past several hours, it was hard to deny there was likely a lot of truth to his braggadocious rant.\n\nThe warden swallowed hard and wondered to himself how this detestable situation could possibly get worse.\n\nIt would...\n\nTo be continued...\n\n*****\n\nAuthor's note: \n\nPlease remember to vote and either comment or PM me. Make sure to include your email address if you want me to respond. I had originally planned on writing only two more chapters to this saga, but as you can probably tell, we have a ways to go. I can't say exactly how quickly I will publish each, but this continues to be my top priority and the wait between them shouldn't be too long. "
    ],
    "authorname": "FifthEstate",
    "tags": [
        "big cock",
        "big tits",
        "creampie",
        "non con",
        "non consent",
        "prison",
        "san quentin",
        "squirting pussy",
        "warden",
        "white wife"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/wardens-wife-pays-his-debt-ch-06"
}