{
    "title": "A Drow's Dilemma Ep. 45: The Vaults",
    "pages": [
        "Author's Note: \n\nA Drow's Dilemma began as a one-on-one roleplaying project and has been converted into a chapter-by-chapter format for weekly posting with the permission and assistance from my partner. It will contain a considerable amount of sexual themes such as femdom, lesbian, straight, 'reverse' rape, BDSM, group sex, romance, and other themes. The main goal of the story, however, is to tell an epic tale of adventures, gods and goddesses, fae, and nymphomaniacs. This episode and every episode to come will be available for free on Literotica for the foreseeable future. All characters that engage in sexual or suggestive situations are mentally and sexually mature: the human equivalent of 18 for their race.\n\n*****\n\nEpisode 45: The Vaults\n\n\"Not that it matterss, ssinsce we found the man again, but I jusst activated the path to the vaultss.\" Slasjowskew commented, appearing from behind an arch after the giant distiller had been defeated and the rest of the party had (somewhat) recovered.\n\n\"Good.\" Caleldir said shortly. \"Saves me some work.\" Caleldir's manner continued to be slightly odd. For one thing, his voice sounded slightly off, and he moved in a slightly more swaying way than normal. Of course, the first could be explained by his ghostliness, and the second by the fact that his legs had recently been turned into jelly, but still there was something slightly off about his behavior. Not that the rest of the party took notice, as absorbed as they were with their own problems.\n\nAlthaia sniffed the air. \"If you want potions, there are hundreds of them in this very room. In addition to thousands of gallons of the best vintage and brews in the entire world. Either way, I can smell them.\" She was busily occupied in clearing out bottles and tankards from the shelves.\n\nIndeed, Ashyr spotted a key laying amid the ruins of the brewmaster's robes: one that opened a cabinet just past the millstone. Ashyr quietly signaled Selene before she opened the cabinet, not letting the rest of the party (Slas) know about the loot she'd found until she and Selene got their pick. There, on the shelves, were hundreds of potions and poisons. Both Ashyr and Selene took a moment to use their passive drow talent in detecting magic to choose out as many healing potions from the cabinet as they could easily carry. On each vial Selene took the extra precaution to detect poison in a classic display of drow suspicion. A few were obviously poison, a few more obviously healing draughts, but the vast majority were labeled in Caleldir's language, and therefore unidentifiable. They ignored the latter. Ashyr might have taken them just to put in R.I.S.A.'s dimension, but she didn't want to risk subjecting the weaker A.I. to the bitch who had control over this place. When all the potions they wanted to take were in their own protective belt slots, the two drow turned to the rest of the party. \"Anyone else going to take some? Caleldir? You said you were out of healing spells.\"\n\nCaleldir gave the cabinet a suspicious look. \"I am not really sure about trusting anything that the Distiller of Essence has been cooking up.\" He said slowly. He gave the potions a look over, then shrugged. \"Eh, I am sure that someone will find them useful.\" He grabbed a few black vials. \"Perfect.\" He nodded. Slasjowskew followed suite, but seemed mostly to grab obvious poisons. Caleldir presumably could have translated the exact names of them, but the Yuan-Ti did not ask and the Half-Ghost did not offer.\n\nThe Nymph was quite a bit less cautious. \"I can have you translate these later.\" She said cheerfully. \"Or I could use the 'Tongues' spell to do so myself, but I am blind at the moment, so I will just take all of them. Good thing I gave R.I.S.A. most of my normal inventory, so I can shove these all into this convenient ring. Along with a lifetime's supply of the best booze that this plane was to offer. Seriously, you guys should try some of this stuff.\" True to her words, she was quite busy in taking potions and other liquids.\n\nSelene shot Althaia a dirty look. A goblet or two of strong, fine drink sounded really good at that moment. The younger drow's hand strayed to her lower abdomen. That wasn't exactly an option for Selene right then. \"Just save some for me.\" She grumbled at the nymph.\n\n\"A convenient ring indeed.\" Slasjowskew said dryly, ignoring both Selene and drink. \"Whoever dessigned it wass clearly a geniuss.\"\n\nAlthaia blew him a kiss. \"I am sure he was.\" She said cheerfully.\n\nAshyr ignored that particular exchange. Selene seemed to be getting more or less back to herself now that Caleldir was with them. Some of her rage had dissipated with the last fight. It was Caleldir now that Ashyr was worried about. It was clear to her that this experience had been quite a bit more traumatic that the last time she'd rescued him from being tortured. She opened her mouth to ask if her was okay, but then realized that the answer was obvious. Instead, she lifted her hand to gently squeeze his upper arm and looked up at him with searching eyes. \"If you need anything from me, let me know.\" She told him softly in her native tongue.\n\nCaleldir did not respond verbally. He merely gave her a weak smile, and put a cold hand over hers. He must have been more incorporeal that she thought; she noticed that both his upper arm and his hand were unusually soft. She couldn't inspect further, though, since he then slipped away from her.\n\n\"Since we have plundered this place of everything of any value.\" Caleldir said shortly, rubbing his legs. The way he seemed to be nursing them it was pretty clear that he had not really gotten over having them pulped. \"We should head to the vaults now. I believe that that is where you were headed?\" With that, he led the way out of the brewmaster's chamber and down the stairway.\n\n\"Well, that's where you said we should start...\" Selene said with some impatience. Both drow then gathered and followed Caleldir down the stairs. Said stairway seemed to dip implausibly deep until the two drow could probably feel quite at home. An indeterminate number of steps later, going past a dizzying array of side-doors and side-passages - most of which looked rather dangerous and all of which Caleldir ignored - the group stepped out into an underground tunnel of truly incomprehensible size. Pitch black, and far larger than anyone's darkvision could see, the sound of running water could be heard all around them. Caleldir stopped, rubbing his forehead. \"Almost there.\" He said gloomily.\n\nAshyr looked up at him with more concern in her gaze. Something must have been bothering him pretty severely. Why would almost being at the vault be cause for gloominess? \"Do you think there are more dangers here?\" She'd thought the alchemist had been the only guard. Perhaps she was wrong.\n\n\"There are always dangers around here.\" Caleldir said perfunctorily. \"This place has been the death of more adventurers than you can count. On the way down here, we went by passages that led to death in a hundred ugly forms. Ironically, the deepest parts of this cursed place are, in some ways, the safest, as they are farthest away from the Animating Intellect's focus or the major players.\"\n\nAlthaia spoke up. \"Does anyone think it odd that we have not been attacked yet?\" She said uneasily. \"I mean, with this place's reputation, I am surprised that nothing has jumped out at us since we rescued Caleldir. If nothing else, we should be swamped with undead or automatons at least once or twice during that long descent.\"\n\n\"How odd.\" Caleldir said flatly. He gave the group a smile. \"No worries, things will be revealed soon enough.\" His voice squeaked imperceptibly as he spoke.\n\nThose words and tone triggered alarm in Selene, though the rest of the party seemed happy enough to ignore it. They would see 'soon enough.' That was cause for alarm for any typical suspicious drow, and Selene wasn't so changed as to forget that suspicion. None of that she let show on her face. She grabbed at Ashyr's hand and squeezed tight enough for her cousin to turn her gaze toward her. To anyone behind, it would look as if the drow were paying attention to the ground as they walked. If someone in front was quick enough, they would see their hands flash in their silent drow language.\n\nThe stairs had spilled out onto a platform, and Caleldir led the group down a smaller flight of stairs to the right, to a place closer to the bottom of the tunnel. The place stunk of mold and moisture, not all unpleasant, but fairly slimy all the same. \"All of Deusterra had a single, interconnected sewer system.\" Caleldir mentioned. \"This is but one branch of it.\" Indeed, here at the bottom of that last flight of stairs, they were walking alongside an underground river flowing through the tunnel, flowing off in the direction of the sea. Probably. There was a very real chance that they were below sea-level, though, so where exactly all this water was draining to was an open question. \"Not too much farther.\"\n\nHe was silent for about ten minutes, and then came to another stairway up to a platform, and then a second, eerily illuminated passage up into the monastery. Taking it up, they quickly came to probably the most overly fortified door that any one in this party had seen in a long time. Waving his hands, the locks sprung open as if expecting him. \"We are there.\" He said. Then, he smiled. \"You fools.\" He said in a rather mocking, feminine tone.\n\n\"Lolth damn you, Ashyr, I told you!\" The younger drow exclaimed. She began to try to backpedal, to think of a spell that might be used on... whatever the thing that looked like Caleldir was.\n\nAshyr didn't look quite as shocked as she could have been. Selene had told her something was wrong, and her younger cousin was right. Hell, Ashyr knew it, too, but was too busy focusing on her own emotional injuries to really think about how Caleldir was acting. \"Are you the A.I?\" She demanded. Her hands went for her weapons, but she was pretty positive they would do whatever that was no harm. Oh, Lolth, this meant Caleldir was still captured somewhere and they weren't working to save him.\n\n\"The Animating Intellect?\" Not!Caleldir said scornfully. He stared at the two drow with hatred, looking exactly like he had from the vision. \"You did not think that finding the Master Librarian would be so easy, did you? It was all a trick, an illusion.\" He told them. \"A trap that you fell for!\" With mocking laughter, his armor fell away. Underneath, he was not a he at all, but a she. Now in a diaphanous flowing gown, the creature went ghostly. Besides her hips and her breasts, both of which had apparently been partly constricted partly illusioned away, she resembled Caleldir - now a ghostly Caleldir - exactly. \"I am Caleldra Hissael.\" She hissed. \"And you, Ashyr, you took my name!\" She sent a bolt of cold energy lancing through the air, paralyzing Ashyr.\n\nCaleldra turned towards Selene, bristling with fury. Around them, ghosts of dead adventurers lurched from every corner, howling in pain and rage. \"They call me another name as well.\" She said. \"'The Vengeful Forgotten Adventuress'. And they call me vengeful for a reason. You, foul woman, have taken what I have desired for a thousand years! How dare you! How dare you take my love's seed! It was mine!\" She shrieked with terrible anger. Slasjowskew skittered off to the side, trying not to be killed by ghosts, while Althaia rushed and slashed at the ghost woman. There was no effect. Caleldra continued her rant. \"You Duskhaven whore, you stole him from me! He is mine, mine, mine I tell you! Such a fragile, living creature as you do not deserve him!\" Rushing forwards, she grasped Selene in her cold arms, paralyzing the drow with a touch, draining skill and life. Then she raised her up in the air and fled into the depths of her domain, leaving the rest of the group to face down an army of dead adventurers.\n\nCries of rage echoed down the corridors and chased the escaping Caleldra, though Selene could not hear her cousin's voice. The younger drow had passed out almost immediately.\n\nThe red haze of desperate anger settled over Ashyr's consciousness. Tears once again fell from her eyes. Yet she did not fall to the floor and weep when she broke through the paralysis spell cast upon her. Blades came to her hands and she began to slash at the undead with furious action. Her attacks were reckless, uncaring of both herself and her own companions. She had to get past them, had to go and save Selene. Surely her cousin did not have the mental strength to withstand capture by that tortured soul!\n\nSlasjowskew, to his credit, tried to stop the ghost woman from flying away, running through the air in something almost like flight in order to catch up with her. It was useless, of course, the ghost phased right through a wall, still carrying Selene. Slasjowskew cursed as he drifted to the floor, and turned to destroying the lesser spectres as they attacked.\n\nAlthaia shouted as well, but had no better luck. \"She and the brewer were in league!\" She said in frustration. Her blade ripped through the image of a warrior, causing the phantom to fizzle out. \"He blinded me on purpose so that I could not see that there had been a switch! I would have been able to see that this 'Caleldra' was Evil rather than Good!\" She angrily hacked through another ghost. These creatures were annoying, and may even have been a threat under different circumstances, but as things were the party was making good use of its anger to rip through them. The nymph held out her holy symbol, a set of silver lips, and sent a burst of energy out from it. Most of the nearby lesser ghosts fled back into the walls. \"She played us all like a fiddle.\" She cursed. \"I should have known! I am the one who learned her story, that of The Vengeful Forgotten Adventuress! But I had not heard that she was a fucking body double!\" That was, in many ways, the worst part. Bad enough to get the nymph to use actual profanity.\n\nAshyr managed to rip through the ghosts, but as it turned out, the vault that the ghost had lured them into was a labyrinth, and the ghost herself had bypassed the whole thing rather easily. But before Ashyr could go charging off and get herself lost, as she was clearly about to do in her blind rage, Althaia sprinted up to the drow and hit her with a potent calming spell. It was as if that spell had drained all her energy, for when it absorbed into her body she collapsed with the lack of rage to carry her forward. She gave Ashyr a wry smile. \"We will save your cousin.\" Althaia promised. \"But we cannot go rushing headfirst into that maze without clearing our heads first.\"\n\nAshyr knelt there on her hands and knees, trembling. The hope that Althaia tried to give her felt hollow on Ashyr's ears. Both of her lovers were gone, and she couldn't help but feel that she was to blame. How much agony could she have spared them if she just had stayed in the forest those two months ago? It was perhaps an excessively dramatic thought for a woman of her age to be having, but it stuck in her mind. It laughed at her, taunted her, played images of their torture and Celeste's death over and over until it was the only thing she could see or think about.\n\nThe drow curled under the weight of those thoughts. They were too powerful to just be soothed away.\n\n\"How can my head be clear?!\" Ashyr demanded. \"This is my fault. I should have listened. Selene knew something was off about him. She knew. Now they're both gone!\" She took a deep, shuddering breath. Althaia and Slas should not see her weep - and indeed she hadn't shamed herself like that quite yet beyond the tears of anger that still glistened at her cheeks. No, them seeing such complete weakness could only make things worse. Ashyr was Drow. She was Noble. Female. Strong.\n\nGoddess, even with that calming spell she still wanted to hurt something, or fuck something - do anything to make her feel powerful again.\n\nThe Yuan-ti shifted his weight awkwardly from one foot to the other. He cleared his throat, giving Althaia a questioning look. The nymph nodded and he relaxed a little. \"Well then.\" He stated. \"I will go ahead and try to sscout thiss plasce out a bit. Find out where the ghosst took our mage. We need one of thosse.\" His words were not quite as callous as they sounded, but he knew that this was not a place that he could help. He vanished into the labyrinth.\n\nAlthaia knelt down by Ashyr's side, giving the drow a comforting hug, which she returned only half-heartedly. \"I know that there is nothing I can say that will make you feel better.\" She said in a divinely soothing tone. \"But all the same, be of good cheer! Caleldir, well, we once again know where he is. The library. Where he spent over a thousand years. I am sure that old Goelon Duvainor is doing quite well. After all, this is his turf! So no need to worry about him. We will simply have to find the fellow and knock his identity back into his head. As for Selene...\" Althaia drooped a bit, sighing. Ashyr groaned her own hopeless noise \"I admit, when it comes to Selene, things look bad. The Vengeful Forgotten Adventuress is not likely to treat her that well. But we do not have to worry about her killing Selene, for even if she did, the ritual would activate and put your cousin beyond her power. So it may even be for the best if the Adventuress tries. Something tells me she will not, though.\" \n\nThe nymph sighed again, burying her blind eyes into her armor. This was clearly not helping \"What we need now is a miracle.\" She whispered. Suddenly, she stood up tall. \"A miracle! I can call in a divine favor!\" She turned towards Ashyr, giving her a light kiss. \"You have earned the gift of the Nymph's Kiss. Therefore, you can look on what would blind ordinary mortals.\" With that, she fell to her knees, eyes looking up to the heavens. Her clothes melted away, and she let out the full, terrible force of her literally blinding beauty, a sight that most mortals could look on only once. \n\nAshyr watched in stunned amazement. The nymph was so beautiful that Ashyr didn't even want to immediately start to try fucking her. No, that seemed too... mundane a response. Instead, she stared in wonder in not outright worship as Althaia prayed to her deities.\n\n\"Aelsuna, my patron! I beg of you to give me sight and refresh the powers of my soul!\" A soft glow covered the radiant fey, and her eyes, glowing blue, snapped open. She stood up, turning towards the dumbstruck Ashyr, and hit her with an even more potent cocktail of enhancement spells than she had given to Selene back in the brewery.\n\nThe pain was still there in the aftermath of that cocktail, but the determination to do something about it finally superseded the heartache. Ashyr got to her feet slowly. \"That's... better, actually.\" She commented. Her features were not back to her customary mischief, but at least there was no agony there anymore. It was a temporary fix, but hopefully temporary was all they needed. Once her people were back, they all could help each other through the emotional pain they'd suffered. \n\nGoddess, that sounded sappy. \n\nAlthaia covered herself in some flattering, but understated, robes. \"Good to hear. Well, then, let us chase down a ghost.\" She stated with conviction. \"Slas should have an idea as to what is in this maze, by now.\"\n\n\"Right. Let's get going.\" Ashyr agreed. But a thought occurred to her, just a simple question. \"Althaia? Why did you call your goddess 'patron'? Would not 'matron' be more appropriate?\" It was one of those surface world habits that Ashyr was not yet able to understand. It was so very different from her female dominant society. And for now, talking about differences in culture and language was better than worrying about her lovers, who they were already doing all they could to rescue.\n\n\"Hmm? Patrons?\" Althaia asked. She thought a moment. \"Ah! That is because of translation difficulties.\" As she spoke, she began heading into the maze. \"'Patron' can mean father, and 'Matron' mother, up here, but 'Patron 'has a gender-neutral secondary meaning of 'Benefactor' as well as the masculine meaning. In fact, in the Common tongue, the term Patron meaning benefactor has so surpassed the original term meaning fatherly, that if you use it to refer to an actual father few people will even know what you are talking about. Oh! Look out for the wizard!\" Sure enough, they had rounded a corner and came face to face with a ghostly magus. After disposing of the spectre, Althaia continued her speech. \"So, anyway, while Matron is still feminine, Patron is no longer its counterpart due to linguistic drift. Calling my goddesses 'matrons' would, in current usage, be calling them 'old ladies'. Now, if I were to pray in Sylvan or Celestial, the word would be different, obviously, and probably translate more directly.\" She shrugged. \"One could make all sorts of arguments about the gendering of language, but I think that that exercise is best left to gnarly old gnomes and particularly bitter drow. No offence. Oh! There is a skeletal rogue behind you! Huh. I thought she just used ghosts...\" All things considered, the nymph seemed to be rather well-informed about matters of grammar and etymology, but as a creature from a race that was not so much female-dominant as female-only she was probably not the best authority on gender relations. She observed as much to Ashyr as she struck down a ghostly bard before the creature could begin singing a song that they probably would not like to have heard.",
        "Slasjowsjew appeared around the corner. \"Thiss plasce iss an awful deathtrap.\" He said soberly. \"I think that each of thesse powerss that rule in the monasstery have ssome ssort of domain that reflectss their nature, and ssinsce thiss iss the realm of the 'Adventuresss' it iss pretty much an approximation of every dungeon cliche ever invented by deluded architectss in tombss and vaultss acrosss hisstory. You two are fortunate that I have been traverssing thiss path before you, ssinsce I sswear there are trapss every five fucking feet.\" It was highly unusual for the Yuan-ti to swear in Common. \"The Adventuresss will be in the 'treasure room' at the center of the labyrinth, going by the obvious cliche, and it sseemss that to get there we will have to defeat four elemental guardianss to gain the four keyss to the door. Or ssome crap like that.\"\n\nSomething like amusement crossed Ashyr's features, though it was a half-hearted expression. \"Then it was a good thing you went ahead, oh Great Trap Finder.\" She told him. This may have been meant to be flirtatious, but Ashyr's heart was not in it. It had not skipped her notice that Slas liked having his ego stroked, and therein lie her chosen tactic to try to stroke... something else of his. She hoped that focusing on that would help her cope with the lack of Caleldir and Selene in her presence. If Althaia was right about Slas not being interested in sex, then it would be a worthy challenge to set her mind to while she performed the mindless task of clich\u00e9 dungeon delving.\n\n--\n\nThe Yuan-ti was correct; Caleldra was indeed in the center of her labyrinth, in a room luxurious and wealthy beyond imagination. The ghost stifled her ethereal self and took on physical form. Once more the spitting image of Caleldir, but female, laid the unconscious Selene on a rich bed and began flitting around the room putting golden coins, weapons, armour, and mouldering skeletons, back into place. \"Wakey, wakey, drow sorceress!\" She giggled to herself. \"I have so much to tell you...\"\n\nUpon hearing that feminine voice, Selene did as she was asked and woke. It was not a peaceful awakening. The drow started, and began to try to scramble back away from the feminine doppelganger of Caleldir. The fact that she looked so like him was cause for confusion even still. Visions of his face by firelight in a safe place came to her: the softness of it, the pleasure, the intimacy. She wanted to see his face. But this... this was just wrong. \n\nSelene's hand came up in a protective grasp against her abdomen. She remembered the chilling words this... Caleldra had spoken about the seed being hers. The mage could imagine all sorts of horrors a jealous, insane rival might perform. Those thoughts were pushed from her mind, for down that path led to full-on panic attacks. Already it was hard to keep her breathing in check.\n\n\"If you are sister and lover to him - or even want to be - then you know that he would be angry if you hurt me or my child.\" Selene declared. \"This is not the way to win his heart.\" No, apparently that involved raping him or being witness to that rape. Not that Selene was going to say that aloud.\n\nThe ghostly woman laughed hollowly at Selene. Well, she was not all that ghostly at the moment, but even as she was right now it was amply obvious that something was very, very wrong with her. \"Oh, I am not going to hurt you or his little girl.\" She mocked. \"I am going to take you and her.\" She flitted around the room looking at Selene from every angle, her blue eyes, identical to Caleldir's staring right through the drow. \"You see, I am not a jealous woman.\" She lied very obviously. \"At least, not jealous that he loves you. No, I am jealous that you took his love first. You think I cannot see into you!\" Psionic energies leaked out from her, and the memory of Selene's, well, 'meeting' with Caleldir appeared in the air. \"Hah! I can read your thoughts and memories clear as the endless night. I am not native to this realm; the curse does not affect me. I am adopted by it. I see more clearly than the madness in here. I see past the illusions and see the reality.\" Indeed, the woman may have been dead, psychotic, and had a whole barrel of other issues to deal with, but she seemed different from the rest of the monastery.\n\nThe woman floated towards the bed while swords and daggers flew around her, leaping towards Selene and deftly shredding her dress to nothing. But though the drow had a few painful nicks, the telekinetic weapons clearly were not meant to harm her. But... the pattern of the shredding, and the slight wounds, was a near perfect recreation of what Selene had done to Caleldir. Except for the part where Selene stubbornly made her clothes repair themselves with each slashing cut. Caleldra smiled toothily while she phased out of her clothing. Then she reached down and plucked Althaia's ring right off of Selene's finger, which put an end to the drow's stubborn defiance. \"A cunning trick.\" She taunted. \"But I see everything.\" She hit the drow with a potent paralysis magic. \n\nThe drow snarled at her captor. Selene still felt quite weak in the aftermath of the spells Caleldra had used to initially capture her, otherwise she would have been burning the room to ash - herself with it, if necessary. There was nothing she could do beyond curl into herself. But even that was barred from her as Caleldra hit her with that paralyzing spell. The horror of it crossed her face when she felt her body go limp across the bed. No. This couldn't be happening. \n\n\"I have to give you some credit. You managed to do what I had been trying to do for eight centuries. You see, I hate him. But I love and desire him even more. So I wanted to force him down, to give him pain in revenge and take my pleasure from him. But I never could. The Master Librarian was too powerful. But you...\" she glared at the drow with intense emotions that were somewhere between jealousy and admiration. \"You did it. So now I am going to do it to you. Over and over. Once for every time that you have had him. And then, when I am finished, I will steal his child from your womb and place it in mine, and then I will have completely supplanted you. Then, perhaps, I will give you to the Master Librarian as a toy. To ravage as he pleases.\" The woman landed on Selene, straddling her waist. Eyes beginning to glow, she leaned down and brought her face close to Selene's. \"But you will only ever be our toy. Nothing more.\" Her breath, like her skin, was cold.\n\nSelene's hands could only tremble very slightly. The thought of this insane hag being able to take her unborn was almost enough to make her start babbling, pleading. But when the fuck did that ever work where she came from? She couldn't lose her only child to this pathetic cunt who couldn't even get a male to fuck her! This madwoman didn't deserve her daughter! Hell, Selene doubted she would even be able to take care of her. The drow grit her teeth, and her jaw rippled with the force of it. She had to be strong for her child's sake.\n\n\"Pathetic.\" Selene managed to hiss at her. \"You think your 'Master Librarian' will pay attention to you even after you carry my child? At the very best, he will care for his child and naught else. He will throw you away like the worthless cunt you are,\" For at the moment, Selene was reasonably certain that Caleldir was not currently himself. He would be the cruel master of books that Ashyr described earlier that day when Caleldir was not looking at their hands. He would be more wicked than even she at her peak, though there were a fair few of mindless slaves she had personally broken in her wake. At least she had not tortured them in death. She did not have the capacity to care about the sire of her previous, dead child. Why would Caleldir's ghost be different when it came to the mother of his child? \"Take me to him now, and you will see how little he cares for the vessel that carries his child. You will save yourself the effort.\"\n\nCaleldra giggled. \"You silly, silly woman. I know the Master Librarian better than anyone else. Certainly better than you.\" She lined their groins together, and slipped her fingers in between, lightly fingering both of them. \"You saw nothing I do not already know. Goelon Duvainor is a heartless madman. But did it not strike you as odd? I do not call myself Goelona Duvainor. I call myself Caleldra Hissael. You see, I knew who the madman was before he became mad!\" Phasing her right leg through the bed and pushing Selene's left leg to the side, she materialized her limb again when she had smoothly pushed her pussy against Selene's, continuing to stroke the drow's clit with the hand between them. \"He did not remember me, of course. I was different in those days, a sad, wan thing. But more than that, I saw his memories. All of them. When I looked at the mad ghost, I saw the gentle, playful scholar he had once been. It amused Goelon, of course. He would pretend to be the scholar, to try convince me that the curse was ended. Just one of the ways he broke me. But I was never fooled. I saw right through him!\" She giggled again, before letting out a pleased sigh. Her free hand roamed around Selene's body, gliding over her like smooth, cool water.\n\n\"But,\" she continued. \"That was before. Oh yes. Before. You see, his mother broke the curse on him! The dead Archfey herself, the very queen of all nymphs, she managed to pry herself from death long enough to break the hold the curse had on her son and throw him to the adventurers' town! He thinks that the curse still holds him here, but he is wrong.\" Her fingers slipped inside Selene, and she began to shift her hips back and forth. As she became more and more excited, she began moving faster. \"I know how it works. I know how to force him from Goelon to Caleldir at will! So, I will have the power. For a thousand years the ghost ruled over me, breaking and binding, torturing and tormenting! My mind was shattered and rebuilt ten thousand times! But I am a psion of terrible power, and I plotted my revenge. Oh yes. That is why I am Caleldra, see. I rebuilt my mind using the identity of my tormenter before he went mad. The memories of the story-teller were my lifeline to sanity. For I am broken, but not a gibbering wreck like those in my labyrinth. I still have a mind, twisted as it is. But every twist made me stronger.\" Indeed, a veritable maelstrom of psionic power whipped around the bed, snippets of memories from thousands of adventurers screaming out from the storm. \n\nAll the information Caleldra had imparted upon Selene might have been interesting to Ashyr. A woman who could see his memories, see who the male was before the curse took place would have fascinating information about him. Selene didn't give a damn. Her character development was not that far advanced. She could care nothing for anyone who wasn't herself or her progeny. If anything, she despaired of the company she had been keeping the last month. It would have been better that she go into hiding in the Underdark. \n\nThe things the madwoman was doing to her body, however, had far greater effect. Selene felt herself warm despite the unwelcome advances of Caleldra. This was nothing at all like her rape at the hands of her cousins and brothers. For one thing, the woman molesting her was pleasuring the both of them. And there were no dicks actively trying to choke her. No, this so far was not her first nor most traumatizing rape at the hands of a woman more powerful than herself. If she closed her eyes, she could picture Ashyr above her, inside her. That was exactly when Selene did, for she would not be a very good drow if she did not develop coping mechanisms for being raped.\n\nBut the woman was not done ranting. Or molesting Selene, for that matter. \"When I am done with you, when your friends have been taken by the monastery, I will claim Caleldir as my own, hold him prisoner in this place while I take my sweet, loving vengeance on him.\" She was breathing lightly and shallowly, clearly getting off on her wild imaginings as much as on what she was doing to the drow underneath her. \"I know how sadistic you are, dear Selene. I have looked into you memories, stripped them bare. I have seen what you have done. I see what everyone has done! I only punish the wicked, after all. But everyone is wicked. I see all their cruelties, all their hatreds, all their injustices. They all have to be punished!\" She trailed off. If someone did not know better, they almost might say that the ghost was trying to justify her own cruelties to herself. Then again, perhaps she had trailed off because she had bit her lip in orgasm. Pulling her hand out from between the two of them, she expertly phased and twisted herself so that she collapsed down on top of Selene, pressing her body, now just the smallest bit warm, against the drow. \"So maybe you will enjoy it when I use the two of you as instruments of torture on each other.\" She whispered. \"You will both be my toys!\" Any contradictions in her words seemed to escape her, apparently.\n\n\"Darling, I do believe I suffered... tenfold... for what I did to your precious Caleldir. For everything I did. Do not justify your actions towards me.\" Selene said the pleasure-labored breath. This time she held herself back enough that she could think, otherwise her mind would be addled and her body shaking with climax. It was an imperfect switch, a losing battle with pleasure. But she was not just some male that one could force so easily to orgasm. \"I did not choose this, and I would not choose it if I had the chance to go back... but I know a woman who would.\" She stopped to breathe, to regather her thoughts. \"Someone as mad as you, but crippled by her madness.\" Images of Caleldir's rape at the hands of Naliira seen through a scryer's pool came to Selene's mind. There was still outrage that flared within Selene upon thinking of this. Apparently she was more than happy to throw that particular female and her unborn under the proverbial cart. \"And she could be carrying his child as we speak. A child powerful and nigh eternal, unlike my own. She could not possibly take care of it in her current condition. Would not you prefer that daughter inside you?\"\n\nCaleldra was, being the exact height of Caleldir himself, much, much taller than Selene. But even laying on top of her, she seemed to weigh only exactly what she wanted to weight, which was not at that much. After a moment of simply laying there and seeming to completely ignore Selene's retort, she shifted her body again to wrap both legs around one of Selene's and begin sliding her slightly cool, damp pussy up and down the drow's dark thigh. \"Oh!\" Caleldra said with sudden clarity. \"I see that Caleldir has grown creative with his telekinesis. I will have to try that...\"\n\nAs she softly moaned against Selene, the drow felt a phantom cock press against her womanhood, one that seemed to be pulled straight from her memories about Caleldir, and recreated with telekinetic force. As Caleldra continued to hump her leg, the invisible dick slipped into her and began pumping softly in and out. Selene groaned and arched her back in pleasure. There was nothing quite like the sensation of being filled more completely than fingers ever could. Being penetrated so was an almost inexplicable, primal sort of satisfaction. After its initial insertion, however, Selene didn't seem to be enjoying herself any more than she had been with the madwoman's fingers. Her eyes flickered open - they had been shut this whole time so that she could imagine a more favorable partner - to check that Caleldra was just using telekinesis and had not somehow made herself even more in the image of her obsession. It was a silly thought in retrospect, for she could feel the wetness of the other woman's pussy against her leg. If Selene had her movement, she would have tried to knee the other woman as hard as she could in her delicate sex. Pleasure she may be feeling, but that wasn't an indication that Selene wanted to remain in this cunt's lair.\n\n\"I know the woman of whom you speak.\" Caleldra breathed finally. If she could be said to breath. \"But I am not so much a fool as to tangle with with a demigoddess. She was old when this country was young. So do not try to trick me into going after her.\" She said, much to Selene's readily apparent disappointment. \"Besides, it is not every woman who has had Caleldir that I am going to take my revenge on, for I understand that that is quite a lot of them. It is just you: you who stole his all-important first time that I coveted so much. So now, I will steal it from you!\" \n\nThe illusion dropped and her hair went white, her eyes phantom blue, her body transparent, and her visage took on the savage edge of deathly perfection, which seemed to horrify Selene. \"I will live out your memories, enjoying him as you did, and as I do, you will lose those memories. For I see that you refuse to value them!\" A line of psionic energy appeared between the ghost's forehead and Selene's. Caleldra gasped in pleasure as she claimed the sensations of sex. \"Be... grateful... She breathed. I will erase the shame of being impregnated by such an 'inferior being!'\"\n\nWhat?!\n\nSelene thought with incredulity as she felt her mind being squeezed and milked. No! Selene was not particularly attached to the memory, for there was much pain involved, but she'd rather be cursed to drider form than lose it to this cunt. She held onto the recollection with an iron, clawing grip.\n\n\"I see you... conveniently leave out... the pain I felt.\" Selene observed through clenched teeth, judging by the look of ecstasy she saw on Caleldra's visage. She had no idea if this would work, but she at least try. The drow lashed out through the mental connection with her own finely edged weapon of the emotional and physical pain she'd felt in recent months. Her matron raped, tortured, burned, killed, destroyed. Then her mother, then her sisters. She'd been forced to watch it all. Then came the worst of it: her daughter. She'd cried at the end. Begged for her momma to make it stop. At the time of Selene's rape of Caleldir, all this had been pulsing through her mind, for she thought that Ashyr had a part in this. Then, when it was over, she could add the sickness she felt when she realized that Ashyr had no idea, that Selene put her through the pain of watching her favorite male in such distress for no reason. Sure, Selene had climaxed at the end of it all, but never did it really feel good. \n\nThe only thing she was glad about was the fact that Caleldir's seed inside her blocked the Duskhaven males from getting what they wanted.\n\nSelene's mental 'weapon' was double-edged. She had formed each trauma in her head with as much clarity as she could muster. The drow wanted to completely spoil the ghost's pleasure in the ill-gotten memory, even if Selene, too, was taken down by it. She shut her eyes tight against the tears that flowed from them, but it did not hinder their progress. Selene could not cover her face to hide the shame and humiliation of crying in front of this stranger.\n\nThe ghost giggled. \"Of course I leave out the pain. I can just absorb it and not feel it. Why would I want to feel your pain? No, that I leave to you.\" The mad ghost was a psion of terrible power, when Selene tried to resist the attack she frowned, doubling down on it. The amount of energy was, quite literally, mind-shattering, bearing down on Selene with inexorable force, stealing away every good memory and leaving only the worst of them.\n\nBut Selene resisted.\n\nWith a loud shattering clang, the connection broke, and the force of it sent Caleldra flying backwards, shrieking as Selene shattered both the memory drain and the paralysis with the searing power of her own trauma. The room erupted with telekinetic energy, treasures ripping through the air. Caleldra stopped herself, hovering a few yards away, head cradled in her hands. \"You... you broke my control\" She said disbelievingly. Her form began to dissipate. \"That... that should not be possible.\" She looked stricken. Then, she smiled again. \"Oh well, you still cannot escape. I will gather my energies, and return prepared for you. What can you do here, alone and naked?\" The image of her flickered, and then vanished.",
        "Selene let out a shuddering breath of relief. There were still tears in her eyes when she watched as Caleldra disappear. Clearly, a mother's pain at the death of her child was a powerful thing. A truly wicked smile pulled at the corners of Selene's mouth until it was a wide rictus of not-quite-sanity. Laughter ripped from her own throat, a broken, derisive sound that filled the room as Caleldra vacated it.\n\nThe laughter inevitably devolved into broken sobs that made her whole body shudder and heave. For a moment, she thought she was going to be sick all over the floor. Selene didn't much want to taint the loot she had temporarily liberated from that mad cunt. Selene allowed herself the weeping for a short while before she gathered her wits enough to look about her and start drying her tears.\n\nDamn. The bitch stole her ring. Selene liked that thing.\n\nDouble damn. Now she was almost distractingly horny from the pleasure that was necessarily cut short. Selene couldn't bring herself to be proud that she had resisted the urge to climax while the ghost lady molested her. Not when it made her pussy ache with unrealized orgasm.\n\nThe pregnant drow sighed, then stood to search for a way to get out of this place and find the rest of her party using the help of her magic detection and drow cleverness. The ghost seemed to think there was no way out for her, but then she had thought her psionic powers were enough to overpower Selene. The bitch could easily be wrong twice."
    ],
    "authorname": "DrowsDilemma",
    "tags": [
        "fantasy",
        "adventure",
        "drow",
        "lesbian",
        "non-con",
        "lesbian sex",
        "noncon"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/a-drows-dilemma-ep-45-the-vaults"
}