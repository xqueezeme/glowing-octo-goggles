{
    "title": "Spell, Crook and Handle Pt. 03",
    "pages": [
        "Note: All characters are 18 years or older, some are way older. I have been fighting a sixty page piece that was supposed to fill this spot, but it won. So I am jumping ahead in the timeline a little and will post the other once I beat it into submission. Working title on it is currently 'The Lost Year'. Thank you for your patience and I hope you enjoy. Please feel free to comment and vote.\n\n*****\n\nPreface: It has been three years since I recovered the Heart of Ashurbanipal. The nightmares that plagued me have been vanquished and are more or less a thing of the past. I have left my posting in Japan for Paris and the promise of safety and the possibility of answers to question as yet unasked. I have taken a small apartment in a fine neighborhood. It has a coffee house, several interesting shops and a bakery. My only constant companion now is my A.I. familiar Feng, a gift from a former lover and dear friend.\n\nPart One: Path of the Inquisitor\n\nI kept the double doors that open onto my balcony open at night. I did this so that when I wake up I can smell the delicious scent of fresh baked bread waft in on the morning breeze. My alarm woke me up promptly at six in the morning. I didn't open my eyes I just took a deep breath and inhaled that glorious smell that makes this apartment worthwhile. \n\n\"Goddamn I love the smell of fresh baked bread,\" I said and reluctantly sat up.\n\n\"You have said that for the last three mornings,\" the sleepy voice said next to me.\n\n\"Marie, you are spoiled,\" I told her. \"You grew up in Paris.\"\n\n\"True, but damn it man do you have to praise the morning so fucking enthusiastically?\"\n\n\"I will get you a cherry muffin and a cup of coffee,\" I said. \"Will that appease that foul mood of yours?\"\n\n\"MMMMMM, you weren't calling my mood foul last night while you were fucking my brains out.\" She said as she rolled onto her belly. \"My poor pussy is still quite sore mon ami\"\n\n\"J'adore that fine pussy of yours and you know it,\" I said as I rose and threw on my clothes from last night. \"Remind me I need to go by the laundry and pick up my clean clothes.\"\n\nMarie just lifted her arm and shot me the bird as I slipped on my shoes. I walked the two flights of stairs down and crossed the street. The sign on the door said closed but I walked in anyway. The bell above the door rang and Veronica, the owner's lovely granddaughter, came out to greet me.\n\n\"Bon Jour Louie,\" she said smiling as she always did. \"What can I get you today?\"\n\n\"Run away with me and I will show you the world,\" I said as I always did when I greeted the buxom teen.\n\n\"Alas Monsieur, if I did, it would break my grand papa's heart. Now, tell me what you really want.\"\n\n\"Well, in that case, I suppose I will have two loves of seed bread, a cherry muffin and three blueberry pastries.\"\n\n\"Cherry you say, that tart must still be warning your bed,\" Veronica said curtly. \n\n\"Are you jealous,\" I asked and she smiled and winked at me.\n\nShe filled my order and I noticed when she turned around that the top two buttons of her blouse were suddenly undone. I could just make out her youthful cleavage as she had intended. I paid for my goods and kissed her hand before I left. I bid her a good day and decided to kick Marie to the curb after breakfast. Things were beginning to look promising with the young Veronica, very promising indeed!\n\nI carried the brown bag containing my bake goods to the coffeehouse and ordered two large coffees to go. Daniel, the middle aged barista, always took good care of me since my advice on women had panned out so well for him. His fianc\u00e9 was proof that I was a talented matchmaker. He handed me the cardboard holder with my two cups of coffee and a free double shot of expresso. I spotted Tina, his Italian fianc\u00e9e, and winked at her as I left. I returned to my apartment and found Marie coming out of the bathroom. She was wearing one of my t-shirts and a smile. I handed her the muffin and coffee and I was rewarded with a peck on the cheek.\n\n\"Still sniffing around that young girl,\" Marie asked as she sipped her coffee.\n\n\"Yep,\" I said biting into my pastry. \"I think I have made some real progress thanks to you.\"\n\n\"Me, I have never even spoken to her. She is a child. She can't be more than nineteen, hardly a suitable lover for a man like you.\"\n\n\"Doesn't matter,\" I said. \"I am leaving Paris soon anyway.\"\n\n\"Leaving,\" Marie repeated frowning. \"I thought you were going to finish out the summer here?\"\n\n\"That was the plan, things change,\" I said as she ran fingers through her wavy blonde hair.\n\nThe silence that followed was awkward and tense. I sipped my expresso as her mood worsened even more. I could feel the disappointment smolder into anger and that kindled into a full blown rage. She rose up and began a long ass tirade about men and how they are born to destroy everything and everyone they touch. It ended as all her rants did with her on my lap and hugging me fiercely.\n\n\"I haven't repaid you for your kindness Louie,\" she whispered in my ear.\n\n\"I didn't do it for payment,\" I told her for the umpteenth time. \"I did it because I wanted to.\"\n\n\"I owe you my life,\" she said kissing my cheek.\n\n\"If you really want to help,\" I said and her eyes met mine. \"I need two errands ran. I need my laundry and I need you to pick up a parcel at Sal's.\"\n\nShe nodded and laid her head on my shoulder. I held her close until she was ready to get dressed and go out for me. I watched her get dressed and smiled as she stepped out the door. I let out a sigh of relief. Thank god she was going to Sal's for me. The place was being watched night and day now that the Ordo Malleus had arrived. The fucking witch hunters were on my trail and I had to be careful and discreet. I could leave the city easily enough but I had to have the parcel first. I finished my coffee and half a pastry before I hit the shower and washed up. \n\nI dried off after my shower and wrapped a towel around my waist. I paced the floor wondering if they would intercept Marie or not. The waiting was horrific and I absently twisted the platinum and diamond ring on my left hand. It was the ring that I had been given back in the states. The ring was my most prized possession. It held the crystalline core for my digital familiar Feng. The twisting must have alerted her to my dire impatience.\n\n\"Louis you are pacing, again,\" she said as she appeared.\n\nShe hovered over the little round table that marked the virtual location of both my living room and my dining room. It was a tiny apartment. Feng appeared weightless as she floated. Her hair was a kind of sapphire cloud around her head and the black skin tight suit clung to her quite nicely. I had personalized every aspect of her appearance to the tiniest detail. I liked the silvery circuit design that covered both sides of her body suit. It accentuated her assets quite nicely. But it was her raw beauty that I had really outdone myself. The heart shaped face with the upswept almond shaped eyes the color of frost, her petite nose and small mouth with their full pouty lips. Her ethnicity was a perfect blend of Irish, Thai and Elf. The pointy ears were a definite giveaway to the latter origins. \n\n\"Louis, someone is coming,\" Feng said as she sat up and regarded the front door.\n\n\"I'm back,\" Marie said as she stepped inside. \"No, I wasn't followed.\"\n\nShe walked over to the table and set down the small package wrapped in brown paper. My laundry she was good enough to place in the closet. Feng watched Marie move around the apartment but Marie could not perceive Feng. It was complicated but involved eye drops and an injection at the base of my skull. The only external hardware I possessed to access Feng was my ring. Marie took her seat at the table and finished her meal.\n\n\"Thank you,\" I said and she smiled at me.\n\n\"Are you going to show me what I retrieved? I hope it isn't drugs or anything illegal.\"\n\n\"No, it is something I haggled for with that old fart. We went round and round for over a week before he settled on a price. I think in the end it was more about the haggling than the money itself.\"\n\nI saw the expectant look on her face so I picked up the package and opened it. I methodically removed the wrapping first. The box was made of some sort of dark wood. There was a deep and lustrous texture to it and it was inscribed with an intricate Celtic knot on the lid. A simple silver clasp held it shut and when I opened it Marie let out a gasp of astonishment.\n\n\"What is that?\" She asked.\n\n\"It is an uncut gemstone,\" I said and she narrowed her eyes at me disapprovingly.\n\n\"I can see that but what kind of stone is it?\"\n\n\"Orakulum,\" I said. \"It is a very rare volcanic mineral.\"\n\n\"Never heard of it,\" she said. \"But it is gorgeous.\"\n\n\"Just wait until I have it cut,\" I told her and she smiled.\n\nI heard the cock of the pistol's hammer. I shook my head and looked over at the silenced .45. She made a gesture for me to hand over the stone. Again I shook my head and brought the protective spell into my thoughts and focused on it. There are many ways to cast a spell. This particular method was developed by the Hashashin, Middle Eastern assassins. It is where we get the word assassin from. They mastered the art of hanging spells. You could look at it like this. You cast 99% of the spell and hold off on the very last syllable. The number of spells hanging depends upon the skill of the mage. In my case I have ten hanging at any given time. Most of them are defensive, two are killing spells. \n\n\"Don't... please...\" I said without any hint of emotion.\n\n\"You are out of time Louie,\" she said as she squeezed the trigger.\n\n\"Vun,\" I whispered and the barrier sprung to life.\n\nThe bullet smashed into the barrier and disappeared for a millisecond. One millisecond later it reappeared travelling in the opposite direction. It crashed into her skull, her head snapped back and she crumpled, dead before she hit the floor. I sat there unmoving until the police arrived. I had closed the box and slid it beneath my bed. The police arrived and all the questions began. I told them she tried to kill me but something went terribly wrong. They tested my hands for gunshot residue and released me. \n\nThe police photographed the scene, took the body away and in the end it was a terrible tragedy. I packed up my few belongings and prepared to move into a small hotel. It was now just a matter of time. My name on a police report would generate attention, attention I did not need or want. I couldn't leave without looking suspicious so I had to change my plans. I would have to get creative. My trip to Antwerp to have the stone cut would be cancelled. I would cut the stone myself, with a little help.\n\n\"Feng, I want you to discreetly look up everything there is to know about cutting gemstones.\"\n\n\"Yes Louis, it will be done. I will require a day or two at the most.\"\n\n\"Good, that will give me time to prep the second half of this endeavor.\"\n\nFeng vanished and I snuck out the building via a nearby roof. The group of reporters was just going to have to work a bit harder for that on camera interview. I paid cash for my hotel room and check in under the name Johan Schmidt, the German equivalent of John Smith. It wasn't in the best part of town but it served my purposes well enough. \n\nI put my clothing away and placed my precious box in a nice secure location even the witch hunters would never locate. I began my research with the manufacturing plants closest to my current location and worked outward from there. I had very specific needs and I was able to cross off potential sites fairly quickly. Paris was eliminated within the hour. It was close to midnight before I found what I had sought. Now the hard part began, I had to crack their security. That would take precious time I didn't have. The Ordo Malleus was actively seeking me and they would not be idle. The attempted murder placed me in the city and under scrutiny until the investigation was finished. \n\nI needed to get some rest and recuperate before the hounds were at the door. I placed the wards on the windows and the front door before I lay down to sleep. The wards would keep my presence at the hotel hidden from magical detection or intrusion. It had taken nearly a year to hone those skills to an effective level. I closed my eyes and tried to relax. I used astral projection and sought out a willing plaything to feed from. They were like twinkling stars in a night sky. Those dreamers who were in a state of sexual arousal and I was the moth drawn to their flame. I sought the brightest and hottest flame to throw myself at. I rose up above the rooftop and looked down. I rotated slowly seeking, searching, hunting for my prey. \n\nThere she was! A scintillating spark of white hot lust and I willed myself by her side. I entered her dream and was struck at its simple beauty. I guessed it was a rural home beside a lake with an orchard of apple trees nearby. She was standing on the dock at the edge of the lake. Her back was to me and my attention was torn between her long mane of ebony hair that kissed that round ass of hers or the fierce hunger in her eyes as she looked over her shoulder at me. She was tall, slender and stacked like nobody's business. This pretty young thing was wearing a tres chic micro bikini that hid little of that luscious body beneath. Her eyes were a blue bordering on violet that accentuated her heart shaped face, high cheek bones and full kissable mouth. She embodied the stuff of dreams.\n\n\"Who are you,\" she asked her voice as pleasing at the rest of her.\n\n\"I came for you,\" I told her as I approached.\n\n\"Have you now and what makes you think I want you?\" She asked and I sniffed the air.\n\n\"You smell like a bitch in heat,\" I said watching her reaction carefully.\n\n\"Do I now? Should I get down on all fours and bark for you? Or are you going to take me by force?\"\n\nI regarded her for a long time as she turned to face me. Damn, her tits were distracting! She must be at least a double D or larger and her nipples were hard little pebbles pressing against the black material of her bikini. We walked towards one another and the closer we got the stronger her scent. There was a fire in her eyes and it screamed challenge and yet her body language howled submission. We stopped when we were within arm's length and I waited.\n\n\"You didn't answer my question,\" she said licking her lips.\n\n\"Here is my answer woman,\" I said as I stepped forward, grabbed her by her hair and pulled her into a hungry kiss.\n\nI snatched just a tiny amount of her life. It is the same way a wine connoisseur swishes his glass, sniffs the contents and only then takes a taste. She tasted of peaches and cream. There was a purity underlying her erotic persona. Could she be a virgin? Was this all an act in her dream? Is that why she wanted me to take charge? Very well, I would be gentle. I pulled her into my arms and let her body mold to mine. The kiss deepened and her eyes slowly closed as she yielded to me. I felt her body tremble as I broke our kiss.\n\n\"I will mark you as mine,\" I told her and she just nodded.\n\nI kissed her neck slowly and she whimpered as my lips pressed against her flesh. I made a fist in her hair and drew her head back exposing her neck completely. I could see the vein running alone the side and bit lightly to gauge her reaction. She moaned and lifted one leg to wrap about my waist. I lowered my free hand to her ass cheek and caressed it.\n\n\"OH...\" she gasped.\n\nI dug my nails into her cheek and her cry was louder this time. I lowered my lips to her covered nipple and she arched her back bringing them within easier reach. I suckled her nipple through the material and her trembling increased.\n\n\"Are you going to cum just from this?\" I asked and she nodded once. \"Expose them for me.\"\n\nThe nameless girl reached up and tugged the bikini from her tits revealing her large dark areole and iron hard nipples. My mouth watered and I bit lightly at her sensitive flesh and her orgasm was my reward. Another tiny chunk of her life flowed into me and the dark magic took hold completely now. She was mine and she knew it. I feasted on her tit flesh as she moaned and begged for more.\n\n\"Fuck me... please fuck me,\" she pleaded. \"I need to feel you inside of me!\"\n\n\"No,\" I said and she frowned. \"There is so much to do before then. I want to become acquainted with every inch of your body.\"\n\n\"It feels so intense,\" she whimpered.\n\nI kissed my way down to her belly. I tapped her leg and she lowered it to the dock. I dropped to a kneeling position and pulled the small bit of material covering her sex. I smiled up at her as I pulled her clam shaped pussy apart. She was soaked and the scent of her hunger was overpowering. I buried my tongue between those lips and tasted her secret self. The girl cried out and dug her fingers into my hair. She clung on as my tongue invaded her sex to its core. I had long since mastered the snake tongue technique and she was powerless to resist it.\n\n\"Oh my god,\" she cried out. \"It is going so deep! How can you do that?\"\n\nI ignored her words for now and focused on pushing her over the edge a second time. The undulating action was working far faster than I would have thought possible. Her juices ran freely now and she was grinding her hips against my face. Her cries echoed off the surface of the lake and beyond. I could feel the sudden shift in her body and knew she was on the verge.\n\n\"So close... so fucking close! Fuck me with your tongue!\"\n\nI drank a little larger chunk of her essence as she climaxed for me. Her knees gave out and I withdrew my tongue quickly as she crumpled to the dock. She was panting and shaking as her sweat covered body shivered in delight.\n\n\"Have you ever sucked a cock before?\" I asked and she shook her head. \"You're a virgin aren't you?\"\n\n\"Uh huh,\" she managed. \"I am only eighteen for crying out loud.\"\n\n\"Good enough for me,\" I said as I rolled her onto her back. \"This is going to be epic!\"\n\nI parted her legs and positioned her just right. I took my erection in hand and teased her with the tip. She growled but lay there too weak to complain. I eased just the head inside of her and she gasped. Then I slowly fed her the rest until she was impaled completely. Her eyes were wide and she bit her lip as I began to move. She met my gaze as I thrust into nice and slow, for now. I wanted her to enjoy her first time. I began grunting each time I slid inside of her, her pussy was so damn tight! I watched her reactions carefully and it didn't take her long to recover from the shock of her first penetration.\n\n\"Faster,\" she said. \"Fuck me faster...\"\n\n\"Okay,\" I said as I stopped, rolled her onto her belly and got her up on her knees. \"Here comes faster.\"\n\nI grabbed her ass cheeks and hammered her faster. It wasn't as fast as I could go but a decent pace. She cried out in surprise as her breasts swung with my rhythm. The girl grabbed one of her tits and teased the nipple as I rammed into her harder now as well.\n\n\"Je-sus... I wasn't expecting that,\" she yelped.\n\n\"I have barely begun,\" I told her as I slowly ramped up both the power and speed of my hips.\n\n\"Oh shit... oh shit...\" she repeated as her third orgasm began to crest. \"I am going to cum again!\"\n\n\"Relax and go with the flow,\" I ordered her. \"I have a secret up my sleeve.\"\n\n\"Unnn unnnn unnnn I can't wait,\" she groaned.\n\nI timed my thrusts with her orgasm and when it hit I slammed into her and held on. Her scream lasted for a long time and a good sized piece of her life fed me. The dark magic was boiling in her veins now. I could almost see its aura surrounding her.\n\n\"Fuck me... fuck me more! I need your cock lover! Give it to me!\"\n\nWe were entering dangerous territory. If I continued I could put her in a coma or worse. There was a reason the witch hunters were after me. I had lost control six times since I left Japan. One didn't survive and the other five were still hospitalized. I tried to fight the hunger but it was as much a part of me as breathing. So I tried a different tack that might dissuade her and help me slow down.",
        "\"You have given me your virginity,\" I said and she nodded eagerly.\n\n\"I have and with not an iota of regret,\" she purred.\n\n\"Now it is time to lose the other one,\" I said and caressed her ass cheeks.\n\n\"Wait, you don't mean...\" she said as I pulled those lovely round globes apart.\n\n\"Yep,\" I said and l lowered my face and let my tongue flicker her other hole.\n\nI was sure she would freak the fuck out and that would be that. I would shoot my load inside of her and I would be done. Fate and the dark magic had other plans though.\n\n\"Will it hurt?\" She asked looking over her shoulder at me.\n\n\"Yes,\" I said as the tip of my tongue entered her.\n\n\"UNNNN... your tongue is opening my nasty little hole,\" she groaned. \"That feels so weird.\"\n\nMy tongue worked its way inexorably towards her other core. I watched as her eyes rolled up in her head when the rippling began. Her mouth fell open and she was moaning now. I could feel her entire body begin to shake and her orgasm stunned both of us. \n\n\"I came from your tongue... in my ass... I can't believe it! What would your dick feel like then?\"\n\n\"Well, what will it be,\" I said after retracting my tongue.\n\n\"What, are you nuts, of course I want you to violate my ass with your cock! I will come like nothing I ever dreamed of!\"\n\nI summoned the dark miracle and her eyes locked on the second erection with wonder. I pressed the tip against her entrance and asked one final time but she nodded and grits her teeth. I watched her expressions closely as I pushed. The tight sphincter opened reluctantly to the girth of my cock but it yielded, eventually. She was panting and her face covered in sweat but she smiled despite the pain. I pushed slowly and her eyes widened as I filled her up.\n\n\"God damn, my ass is so full of cock,\" she whimpered. \"It hurts so good.\"\n\n\"You are a freak,\" I said as I knelt there letting her acclimate.\n\n\"I am your freak, just you remember that,\" she replied catching her breath. \"Alright now fuck me properly.\"\n\nI moved slowly and her expression shot passed worship in seconds flat. She was enchanted and her life trickled into me now. As I fucked her one orgasm followed the next as her life faded by the second. I was as much a victim of the dark magic as she was. The pleasure wasn't just a physical one, there was a deeper connection that only a being such as I and a mortal woman can share. My orgasm was building swiftly and I was thankful. I hammered both her holes remorselessly until I lost my battle and shot into her. The girl collapsed in front of me but she was still conscious.\n\n\"I love you,\" she whispered as I pulled out of her.\n\n\"No, you are in lust,\" I told her. \"Rest up; we might just meet beyond your dream.\"\n\n\"I am dreaming? Wait... what is your name?\"\n\nI shook my head as I stood up and left her dream. My eyes snapped open and thanked whatever gods were out there that she was alright. The fatigue had been purged from my system and I turned on the television. I was waiting for the inevitable. I got to my feet and began to practice my spell craft. I was going to focus on stealth so when the time was right I could slip away unnoticed and leave the hunters behind. My red headed goddess had been right. The longer I was around the stronger everything became. When I first tried a spell it was like learning how to drive a stick shift. I had to break down each action until I got it right. Now I get into a car and I can drive it without thinking about it. The same is true for spellcasting. \n\n\"I hope she is okay,\" I said to myself as I manipulated the shadows around me.\n\nThey grew thicker, darker and more menacing. I found that certain types of magic were harder than others. I discovered those I had a knack for and focused on them. My experiments with mental magic were limited to seduction and attraction. While I could alter light, sound and matter with great ease. Of course there were abilities that I could utilize that were less ephemeral and I considered skills rather than magic. My shapeshifting was one such ability and I had raised it to an instinctual thing now. I could shift not just my body but my clothing with a thought. \n\nThat had saved me from the hunters on more than one occasion and speaking of hunters my wards just went crazy. Wards are a strange blend of magics that requires a lot of patience and imagination. They are part alarm, part lock and a just a dash of offensive. They can not only alert you to the presence of enemies but can, if said enemy gets too close, zap the shit out of them. I use it as a heads up and a chance to slip away before things get too hairy. \n\nThere were six hunters in my vicinity, not good, not good at all. I sat down on the floor, closed my eyes and extended my perceptions to the astral plane. The vibrant energy of Paris night life blazed in my vision. But that is not what I was looking for, oh no. I was seeking dark patches in the landscape. That is where the hunters would be. They would be armed with seals, sigils and anti-magic devices. The very things that protected them would alert me to their positions. The totems that dispelled magic would work on all magic. That meant that they would appear dark against the bright backdrop of natural energy. \n\n\"There you are you fucker,\" I said as I spotted one of them.\n\nIt took a bit but I found all six. The down side they were all around the hotel. The bright side is that they were moving on. They were methodically searching and were already passing by. I let out a sigh of relief. I kept watching until I knew they were gone. I opened my eyes and there it was on the television. The breaking news report was repeating itself.\n\n\"Christina Milano, Olympic hopeful was found in a vegetative state early this morning by her teammate. She was taken to...\"\n\nThey showed an image of her and it was someone else. She looked nothing like the girl whose dream I had entered. It wasn't the girl that I had been with, thank god. The news continued and it got even worse.\n\n\"Christina is the tenth young girl to fall into an unresponsive coma-like state in the last six months.\"\n\nWhat the holy hell was going on? I looked at the image of the ten girls and I recognized none of them. That's why the witch hunters were in France, specifically Paris. They were hunting someone or something that was feeding off of young women. The youngest victim was eighteen and the oldest twenty two. This was something else and it was preying on the young and vulnerable. This was bad and I was as shocked as the hunters. I needed to find this thing and dispatch it before I crossed paths with the Ordo Malleus. \n\nI shook my head and did a mental checklist of how I could try and track down this beastie. If it was sentient I would find it and warn it out of the area. If it wasn't sentient I would hunt it down and kill it. I couldn't track it until I knew that the hunters were long gone. I got dressed and headed out. I kept a low profile and made my way to the hotel downtown where the athletes are staying. \n\nThere is a small crowd around the hotel along with several police cars as well as news vehicles. The smart thing to do would be to wait until the crowd thinned and the police left. But if I waited the psychic trace would be that much harder. I found a nice quiet spot that was secluded and shifted my form. I figured a nice athletic brunette would draw far less attention and get me in the front door. It was still weird taking on a female form but it was necessary. I walked up to the police line and I noticed how many of the men stared at me as I passed. A smile and sob story was enough to get me inside. I took the stairs and began my trace there. Imagine you are a bloodhound but instead of sniffing out the predator with your nose you follow a faint visual trail. \n\nI shifted my vision to the astral plane but only partially. The effect was to mute my physical vision and allow me access to the spiritual realm. Four flights later I got my first hint of activity. The fifth floor door looked real promising. Whoever or whatever it was had passed by that door. I ditched the high heels for tennis shoes and chose casual clothes and a duster over a LBD, little black dress. I opened the door and looked around. The hallway was empty but the trail was strong. It took me a full minute to determine directionality. \n\nI followed the predator and rounded a corner and stopped short. There were two figures, a man and a woman, and they wore the badges of the Ordo Malleus. They had their backs to me and I paused waiting to see what they were going to do. The man was obviously the subordinate as the woman directed him to continue on with the search. He left and headed away from me. I let out a sigh of relief until the woman turned to face me and I saw the insignia on her lapel. Holy fucking shit she was a full-fledged inquisitor! I kept my face calm and met her penetrating stare. I was comforted by the gauss pistol pressing reassuringly against my lower back, but still.\n\n\"Who are you,\" the woman asked staring me down.\n\nThere are quite a few ways to handle people. There is the submissive meek individual that will bow down under pressure and respond without hesitation. There is also the average run of the mill type that is suspicious and ignores the question to move on. I went with C, the loud mouthed Yank who gets in your face.\n\n\"Who the fuck, are you,\" I said in my best New York accent.\n\n\"I am the one asking questions,\" the woman responded her eyes narrowing dangerously.\n\n\"I am none of your fucking business, that's who the hell I am,\" I replied as I began walking past her.\n\nI was shoulder to shoulder with her when she sniffed me. I looked over at her and she was smiling. I continued walking when she placed her hand on my shoulder.\n\n\"That was your last mistake bitch,\" I said turning to face her.\n\n\"My last mistake,\" she said and I could hear a hint of Italian in her speech pattern. \"Be a dear and tell me my other mistakes.\"\n\n\"One, you opened your mouth. Two, you were all high and mighty and three...\"\n\n\"Yes?\" She asked as I slapped her across the face.\n\n\"You put your hands on me,\" I said as murder entered her eyes.\n\nThe Inquisitor began reaching for something. I followed suit and actually had my hand on the grip of my pistol when another voice intervened.\n\n\"Do you have a room on this floor?\" The police officer asked.\n\n\"I don't but a friend of mine does,\" I responded as the Inquisitor stood completely erect and let her hands fall to her sides.\n\n\"No, but...\"\n\n\"You,\" he said pointing at me. \"Get to your friends room and you, you must leave the hotel at once.\"\n\n\"Thank you officer,\" I said in my sweetest voice as I walked past him.\n\nI didn't hear all of what transpired but it definitely escalated. I held back my giggle as I continued tracking whatever was responsible for the athlete's attack. The trail became clearer as I neared a laundry chute. Did they still use these things? I glanced around before opening the chute. I peered down and the path was bright and strong. I sniffed the air and wrinkled my nose at the powerful scent of sulfur. Damn it that was my first strong clue that something demonic was at work. I made my way to the service elevator and changed my form to accommodate the situation. I stepped out on the ground floor in a hotel uniform and got a glimpse of the beastie.\n\n\"Aw crap it's a barghest,\" I said as I entered the kitchen. \n\nThese hell hounds are built for combat and are the underworld's dogs of war. They are heavily armored, pretty damn quick and carry a deadly neurotoxin in their bite as well as their claws. They have four eyes that allow them to peer into the astral as well as mundane spectrum. They are bred to kill and possessed neither compassion nor morality. They are perfect killing machines. They are typically summoned familiars of dark wizards. However, on rare occasions they can make their way to earth via conjunctions or weird magical instabilities. \n\nThey are normally deadly and almost always slay their victims. I suspected someone was controlling this beastie. They wanted to take this poor girl out of the competition for whatever reasons. The hell hound was making its way towards the underground garage attached to the hotel. I was running now as I chased it down. I hit the door to the garage and it flew open. I had lost visual on the thing but it was nearby, its stink was strong and close. I drew out my gauss pistol and loaded it with silver ammunition. Silver worked on not just lycanthropes but most demonic forces as well. I slipped into a crouch and began my hunt in earnest. \n\n'Come out come out you fucker,' I thought as I sniffed the air.\n\nI had shifted my vision back to the astral to better find this deadly predator. I had made it to the second curve when I heard someone else enter the garage. I recognized the voice. Damn it all to hell, it was that fucking Inquisitor and her lackey. I ditched the bright colored uniform for a dark colored hoodie, jeans and tennis shoes. I pulled up the hood and wrapped myself in shadows. The silver would work just fine if I was forced into a conflict with the witch hunters. \n\n\"A barghest, shouldn't we have back up?\"\n\n\"Shut up, you are giving away our position,\" she snapped at him. \n\nI watched as they approached my hiding place and I held my breath. The Inquisitor was armed with a wicked looking dagger and her companion was sporting a sawed off shotgun. They had nearly passed me when the barghest struck from the shadows. Its angle of attack placed the witch hunters between me and it. The young man went down with his throat ripped out. The hell hound gobbled up his soul as he died. The Inquisitor struck and her blade grazed the demon's armored hide. I crouched and took aim. I inhaled and waited for my shot. The beast spun and its mace-like tail knocked the Inquisitor to the ground. God help me I hesitated. A part of me wanted to kill two birds with one stone. \n\nFaster than its bulk would hint at, the barghest spun on the Inquisitor. I was sure she was dead, but I was wrong. She had managed to get her legs between her core and snapping jaws of the beast. Her feet were lodged against its chest and she kicked hard. The beast was too heavy to do more than lift its head but that was enough. I fired a heartbeat later. The silver disc struck the upper left eye of the thing. The force was enough to toss it into the air and smash it against a red SUV. The alarm went off and the hell hound got to its feet. The Inquisitor had snatched up the shotgun and leveled it at the demon. \n\nIt growled low in its barrel chest and began stalking her. They circled each other and I took up another firing position. The barghest lowered its body and leapt at the hunter and she rolled out of the way. I fired off a three round burst, two struck along its side while the third missed. The beast rolled and struck the wall hard enough to crack the cinder block bricks. It roared and recovered in seconds. The Inquisitor took aim and as the beast leapt a second time she caught it in the face with a blast from both barrels. As she backed away she opened the gun, yanked out the spent cartridges and reloaded. The left side of the hell hound's head was a bloody ruin. While its depth perception impaired it the silver shot served only to piss it off beyond reason. Another deafening roar from it announced its next attack. \n\nThe hunter raised her weapon but the beast was nowhere to be seen. I had watched as its skin shimmered and the thing faded from view. Much the same way a chameleon or octopus changes its color to blend into its environment the hell hound shifted out of phase. I slowed my breathing and used my eyes to look for the beast. It could run away now, but it wouldn't. It was too badly injured and whoever had conjured it had lost their hold on it. I watched the hunter as well to see what she would do. She pushed her long coat away from her hip and reached into one of the pouches on her hip. She brought her hand, palm up, and blew. The silvery powder went everywhere as she slowly turned covered a hundred and twenty degree arc.\n\nThere, a shimmer of contact, she brought her weapon to bear and fired from the hip. A hit, the barghest appeared as it charged her. The Inquisitor rolled away but not quick enough. The claw raked her side and cut through her body armor like it was nonexistent. She cried out and landed hard and panting. She clutched at her side as the fell wound festered. The barghest's path took it into a nearby pillar. It huddled there as the silver coursed through its system. I could see the two of them and had the power to put them both out of their misery.\n\n\"I know you're there,\" the Inquisitor moaned. \"I saw the wound you inflicted. Kill it! Slay the beast!\"\n\nI took careful aim and placed another round into the beast's head. It destroyed its brain and severed its connection with the physical plane. I stepped out of the shadows and confronted her. I kept my form of the young Latin lad just in case. I kept my gun trained on her but I didn't fire. Yes I was being paranoid but it had served me well in the past.\n\n\"Inquisitor,\" I said and delighted in her shock.\n\n\"You... you are well informed,\" she said looking me over.\n\n\"And you are dying,\" I said.\n\n\"You have a gift for the obvious,\" she replied as the hell hound's venom attacked her nervous system.\n\n\"Shall I call your people,\" I asked.\n\n\"No,\" she shook her head and winced in pain. \"I would be dead by the time they arrived.\"\n\n\"A pity,\" I said as a crouched down and looked at her lovely features. \"You are quite beautiful for a Vatican Pawn. Is it true?\"\n\n\"Yes,\" she said her breathing becoming labored now. \"I am a virgin, you perv.\"\n\n\"What if I could heal you,\" I asked and her eyes fluttered open. \"It is possible but you must decide quickly.\"\n\n\"At... what price?\"\n\n\"I don't want your soul, if that is what you are concerned about. I want your virginity. I collect them you might say.\"\n\nShe actually blushed as she contemplated my offer. I rose to my feet to leave when she called out. The hunter nodded and stretched out her hand to me. I smiled as I scooped her up into my arms as gently as I could. I invoked one of my hanging spells and teleported to a safe house I had outside the city limits. I laid her on the bed and placed my hand upon her wound. The energy I had gotten earlier now flowed into the witch hunter and not only stopped the demonic poison but closed her wound completely.\n\n\"Sleep, you need rest to fully recuperate,\" I said and her eyes closed.\n\nI built up a fire in the hearth and watched her sleep. I was tired but I had done the right thing. She may be a bit misguided but she was a good person deep down. She couldn't help what she was any more than I could. She had been raised since birth to serve the church. Once they determined she could utilize magic her fate was sealed. I had been told there were entire bloodlines dedicated to breeding Inquisitors. It could all be bullshit but it made a sick kind of sense. Unfortunately for the church a majority of their mages were women. \n\nThe few male mages were usually promoted to bishops or even cardinals. While the best a woman could hope for was to reach the esteemed title of Inquisitor. The current Grand Inquisitor was one Rinaldo Giovani, the Archbishop of Berlin. He was envied, loved and feared by his flock. He has executed fellow Inquisitors for speaking out that a woman could and should be Grand Inquisitor. I suspect that given time a woman will knock him off his pedestal. While I feared them I also respected the witch hunters for their dedication to their god.\n\nIt was getting dark when Feng appeared and informed me she had gotten the information I required. I was amazed at her efficiency. When I asked her where she got the information she was reluctant to respond. Instead a download icon appeared in my field of vision.",
        "\"What is that,\" I asked.\n\n\"That is the information you required. It is the life work of a master gem cutter.\"\n\n\"Whoa, what kind of format is it in?\" I asked and again she was loath to answer. \"Okay, I guess I will just have to see for myself.\"\n\nI stared at the icon and blinked. The rush of information was a maelstrom of sensory overload that forced me to shut my eyes and let the download finish. I think I screamed when the input reached its height. I opened my eyes and there was silence. I looked at Feng and she was now kneeling at my feet. Due to our shared link I could actually feel her hand on my leg.\n\n\"I didn't know it would be so intense I swear,\" she said digital tears streaming down her cheeks.\n\n\"I am alright, but how about a diagnostic to make sure there is no permanent damage.\"\n\n\"I am doing so as we speak.\" She said as she looked at me intently. \"Scan complete, no neurological damage detected.\"\n\n\"Well that's a relief,\" I said. \"Now I am ordering you to tell me what the hell I just downloaded.\"\n\n\"The life work of a master gem cutter,\" she said and then continued. \"His name was David Asher and he passed away at the end of the 18th century. He was considered at the time the world's most gifted gem cutter. He had no peers and was courted by nobility all over Europe and the Near East.\"\n\n\"That is all well and good but you've evaded my question, again. What sort of format did I just download?\"\n\n\"A majority of the file was what you could call muscle memory. The rest was intimate knowledge of raw gems and their qualities and characteristics.\"\n\n\"That is fantastic,\" I said. \"Now for my last question, I promise, where the hell did you get that information?\"\n\nFeng knelt there for a very long time. She must be processing a shit ton of possible responses and then she blinked before she spoke.\n\n\"I discovered them buried in Master Nick's digital vault. The vault led me to a physical location that was quite isolated. That location yielded the memory engrams you downloaded.\"\n\n\"You are protecting that source aren't you?\"\n\n\"I promised,\" she said.\n\n\"There are more engrams at that location isn't there?\"\n\n\"Yes.\"\n\n\"I respect your desire to protect your source.\" I said and left it at that. \"How do I access these new memories?\"\n\n\"I suspect performing task or tasks related to gemology or mineralogy.\" She said smiling now.\n\nI smiled and looked over at the sleeping Inquisitor. I had to deal with her first and then I would see what kind of treasure was now hiding in my head. I stood up and walked over to the bed. She was definitely easy on the eyes. She was of average height but she possessed a lean muscular build. It was a fine balance of power and dexterity. Her breasts were a large B to a small C cup with small areole with perky nips.\n\nHer eyes were still closed but she wasn't sleeping. I plopped down next to her and she opened her eyes.\n\n\"Do you usually talk to yourself,\" she asked as she sat up. \"Um... where are my clothes?\"\n\n\"In the closet, do you want them?\" I asked and she slowly shook her head.\n\n\"You actually saved my life,\" she said with a look of surprise. \"You could have killed me.\"\n\n\"I could have but I am not wired that way,\" I told her. \"I just want to be left alone.\"\n\n\"I was sent here to hunt the barghest not you.\"\n\n\"Now that we have that settled you can leave if you feel up to it,\" I said. \"I can step outside while you dress or I can get your clothes for you.\"\n\nThe Inquisitor looked at me and I could see the wheels spinning. She shook her head and looked down at the sheets. I will admit it I was enjoying her discomfort. I leaned close and kissed her cheek. She blushed and I looked in her eyes. \n\n\"You don't know how to ask do you,\" I said and she nodded. \"Do you want me to get things started?\"\n\n\"Please,\" she said in a whisper.\n\nI took her chin in my hand and turned her to face me. I leaned in again and kissed her lips lightly. She let out a soft moan. I broke the kiss and looked into her eyes again. They were half lidded and she was biting her lip now. I kissed her again and her arms went around my neck causing the sheet to fall away from her breasts. She was a natural kisser and had me aroused in no time at all. \n\n\"Touch me,\" she moaned in my ear. \n\nI kissed her neck as I cupped her left breast. She let out another moan but it quickly turned into a growl. When I teased her nipple she gasped and arched her back. Her body was beginning to shake and I suspected she was getting close to cracking. I decided this was a perfect time to change tactics. I stopped, slipped behind her and held her close.\n\n\"What are you doing,\" she asked as I snuggled close.\n\n\"I thought you might want to cuddle,\" I said and she looked over her shoulder at me like I had lost my mind.\n\n\"Cuddle? You just want to fucking cuddle.\"\n\n\"What did you have in mind?\"\n\n\"Well more that cuddling!\" She said whimpering.\n\n\"I got an idea,\" I said smiling. \"I know you're a virgin and all but have you ever um well...\"\n\n\"Masturbated, is that what you are asking?\"\n\n\"Yeah,\" I said grinning even wider.\n\n\"You want to watch me get myself off?\" She asked and I nodded. \"...Only if you do it at the same time.\"\n\n\"Fair is fair,\" I said as I began tugging my shirt off.\n\nSo I stripped down and leaned against the headboard of the bed while the hunter took up a position at the foot of the bed. She propped her head up with a couple of pillows so she could see me. The Inquisitor spread her legs and reached down to begin pleasuring herself. I followed suit and took my cock in hand. We watched each other as we masturbated. Unhappy with her position she grabbed her pillows and scooted until her pussy was mere inches away from me. Satisfied she returned to diddling herself.\n\n\"See how wet I am,\" she moaned. \"This is what you did to me. You are very big. I don't know if that will fit inside of me.\"\n\n\"Sure it will,\" I told her as I slowly stroked myself. \"It will fill you up nicely and make you cum easily, I promise.\"\n\n\"It is so close,\" she purred. \"I can't wait to feel it inside of me.\"\n\nShe pulled her pussy lips apart to show me her rosy pink flesh. I watched as she teased her clit and slid two fingers in her cunt. Her ass lifted up and off the bed as she ground it against my hand. She moaned and whimpered as she rubbed against me now. I took my hand and placed it on her sex while her other hand wrapped around me. We had switched roles now as we teased each other. She cried out as my fingers slid inside of her. I shuddered as her hand moved along the shaft of my cock. \n\n\"You are killing me,\" she growled. \"Fuck me already! You got what you want! I am begging for it now.\"\n\n\"How do you want it? Shall I keep you on your back or do you want to be on top?\"\n\n\"Just do it already,\" she cried.\n\nI shifted my position and knelt between her spread legs. I took the tip and tapped her clit with it and she glared at me. I took her hand and she guided me inside of her. I watched intently as her mouth opened wide and she let out a long low moan. I felt her pussy wrap around me as I filled her up. She cursed and blasphemed as I began moving my hips. I grabbed her tits and squeezed them as I thrust into her.\n\n\"Oh shit... oh god... I never guessed how good this would feel!\"\n\nI just giggled and moved a little faster now. The hunter's body shook as her first orgasm crashed over her and another cry escaped her lips. The first touch of the dark magic was felt as she begged for more. I continued thrusting and she shifted her legs over my shoulders so I could plunge deeper still. I smiled down at her as I rolled her onto her shoulders. I was driving my hips down into her now. She looked up at me with a hint of worship in her eyes now. The loud slapping sound as our bodies met was loud in my ears. She was grunting each time my cock filled her up now and urging me to shoot inside of her.\n\n\"I want to feel it, I need to feel your seed shoot into me,\" she said.\n\n\"Close...\" I growled as my first orgasm crested.\n\n\"I can feel it! You are getting bigger! Holy shit you are stretching me even more!\"\n\nI cried out as I lost control. She echoed my cry as her body mirrored my own. Her orgasm hit her hard and fast. Panting, I lowered her body back to the bed. Her arms went around me and pulled me close. I could hear her heart tripping in her chest. \n\n\"Can you go again? Ooh you are still hard... here let me...\"\n\nShe rolled me onto my back and took over. She was awkward at first but was a quick learner. Her movements became more and more confident as she fucked me. I was enchanted as she lifted up her body slowly and she watched as my cock disappeared inside of her. She bit her lower lip as she moved.\n\n\"Gabrielle,\" she moaned. \"My name is Gabrielle.\"\n\n\"Louis,\" I replied as she thrust downward. \"UNNNN... you are enjoying yourself.\"\n\n\"UH HUH... I love your cock,\" she growled as her gaze intensified. \"The more I come the better it feels.\"\n\n\"That's how it works,\" I told her as I began thrusting upward to meet her body.\n\n\"Oh I like that,\" she said excitedly. \"Are you going to fuck me from behind?\"\n\n\"Only if you want me to,\" I said.\n\n\"Oh yes... I want to feel it all!\"\n\n\"It's going to be a long night,\" I said and she nodded.\n\nGabrielle and I fucked for hours. I let her experience every position I could think of as well as letting her suck me off twice. Her first blowjob was awkward but the second one she actually tried swallowing. It was early morning when we finished in a sweaty pile on the floor. We shared a cold shower and the old Inquisitor reared its ugly head.\n\n\"This complicates things,\" Gabrielle said as I washed her hair.\n\n\"How so,\" I asked and she laughed.\n\n\"I am Ordo Malleus and you are... wait a second... what exactly are you?\"\n\n\"I am not sure, to be honest. My story is convoluted.\"\n\n\"I believe you,\" she said as she rinsed out the shampoo. \"Want to share?\"\n\n\"I have the blood of Watchers in my veins,\" I said and the silence was profound.\n\nShe turned to face me and looked up into my eyes. There was an expression of shock and awe on her lovely features. She looked at me and I could see she was looking at me intently. Her tears were almost invisible in the confines of the shower.\n\n\"You are a Watcher,\" she said putting maximum emphasis on the word 'are'.\n\n\"I am now,\" I said and she made a puzzled face. \"I was born human, like I said convoluted.\"\n\n\"I will protect you,\" she said. \"Let me travel with you, please.\"\n\n\"It will be difficult for you,\" I told her. \"I am not the monogamous type. You must accept that fact or leave now.\"\n\nI could see the shock on her face but then she nodded. She leaned against me and placed her head against on my chest. I gave her all the time in the world she needed. Her answer was direct and clear cut. She dropped down to her knees and began licking and sucking quite enthusiastically.\n\n\"I am guessing that your answer is a resounding yes,\" I moaned.\n\nPart Two: Demon in the Mirror\n\nVancouver, Canada\n\nIt was the end of a gorgeous day. Gabrielle and I had just taken up our positions to observe Port Metro in Vancouver. The green hillside looked out over the water giving us a direct line of sight on any and all water traffic coming into the city. I had learned over the past six months both sides of having an Inquisitor as a companion. The plus side, no one was hunting me anymore and she had become a complete freak in the sack. The down side, we were hunting things I would have steered cleared of before we hooked up. Take our current situation for example. The Grand Inquisitor himself had ordered her to Vancouver to intercept some sort of shipment from Europe. I didn't like the lack of details this mission was based on. While Gabrielle, the good little soldier, didn't bat a luscious eyelid at how ambiguous her orders were. When I questioned her she just shrugged and told me it happened all the time. \n\nNot that I didn't trust her with my life, I didn't trust her boss one iota. I had Feng run the specs on this cargo ship as well as monitor the High Inquisitor's communications and report back to me with all pertinent data. Our ship was due in tonight so to pass the time I decided to practice. I unfolded the small table I had packed in my backpack. Then I placed the tools on it and took out the raw uncut stones I had purchased. Gabrielle watched me intently as I examined one of the stones before attempting to cut and shape it.\n\n\"I didn't know you were trained in such things,\" she said as she munched on a roll we had purchased as part of our supplies.\n\n\"I'm not,\" I said as I looked at the stone through the jeweler's eyepiece. \"Hmmm... this should be simple enough.\"\n\n\"Wait, if you aren't trained then how can you expect to succeed?\"\n\n\"Convoluted,\" I said and she threw up her hands in surrender.\n\nI placed the stone in what I hoped was the proper position and brought the blade down upon it. I managed to cleave the gem perfectly. I reexamined it and chose my next cut carefully. An hour later I handed the finished jewel to Gabrielle. She held it up to the fading light and whistled.\n\n\"It is gorgeous,\" she said and handed it back.\n\n\"No, keep it,\" I said and she blushed.\n\n\"I have taken an oath of poverty,\" she said.\n\n\"You also took one of celibacy and you see how well that turned out,\" I said smirking.\n\n\"You are awful you know that,\" she smiled.\n\n\"Trust me, I know,\" I said and we both laughed.\n\nI put the tools and table away. I had lost my light and we should be on lookout for the ship anyway. I took out my gauss pistol and loaded it with standard rounds. Gabrielle eyed it with what I would have sworn was envy.\n\n\"It was a gift,\" I told her.\n\n\"I know that,\" she said. \"I just wondered how it fires.\"\n\n\"There is next to no kick considering the amount of force it exerts on the projectile. I have handled quite a few pistols and this one is the most accurate by far.\"\n\n\"The Vatican attempted to purchase gauss weapons but they were turned down.\" She said and I laughed. \"What's so funny?\"\n\n\"They were turned down when a certain someone discovered they were hunting me. Besides I don't think she trusts your High Inquisitor much.\"\n\n\"I take it that 'she' was the one that gave you that pistol.\"\n\n\"Yes, but she gave me a matched pair,\" I said. \"...with custom grips and a biometric security system to boot.\"\n\n\"Are you telling me that you are the only one that can even fire that pistol?\"\n\n\"Uh huh,\" I said. \"That precaution was all my idea.\"\n\nI handed her the gun and watched as she looked it over. She tested the balance and turned it this way and that. She pointed to an aperture just below the muzzle. I told her it was what the manufacturer called a smart gun link. I explained that the hardware, when activated, projected a ruby colored dot where the round should hit. I took it back, turned off the safety and pointed. She looked at me with one eyebrow raised in disbelief.\n\n\"I don't see anything,\" she said.\n\n\"The display is projected directly onto my retina. So it doesn't give away my position to an enemy.\"\n\n\"Oh now that is just too damn cool,\" she said smiling.\n\nI placed the pistol's safety back on and holstered it. We sat close and watched the ships come in. It was nearly ten at night when the ship arrived. If I was expecting something small and manageable I was sorely disappointed. I grimaced at the massive cargo vessel pulled into port. It was one of those beastly fuckers that carry hundreds of the large cargo containers. \n\n\"Mother fucker...\" I cursed and made a face.\n\n\"We better hurry,\" Gabrielle said as she got to her feet. \"We have to meet that ship and keep it from being unloaded. We have to search it.\"\n\n\"Feng,\" I said as I stood up.\n\n\"I am on it,\" she said. \"I am searching the ship's digital manifest. The port authority receives a copy of all containers on each ship. I will endeavor to isolate which one you are seeking.\"\n\nWe returned to our rental car and drove to the docks. The other positive aspect of having an Inquisitor with you is all the false ID's that she carries on her. As I drove she opened her purse and took out one and hung it around her neck. I was simply her driver and she would do all the talking, which was fine by me. We reached the security check point and we stopped. She got out and met the guard. He took one look at her credentials and waved us through enthusiastically. Gabrielle returned to the car smiling. The gate opened and we drove through as she fought off the giggles.\n\nWe reached pier 124 and parked. The Grand Marianas had dropped anchor and thrown the massive ropes that would hold the vessel in place overboard. The dock crew tied them off and a gangway was lowered into place. We were out and ready to intercept the captain. Feng had isolated twelve questionable containers that were purposely vague. I was impressed. We could have been forced to search over a hundred and she had narrowed it down to a dozen, good girl! Crewmen began to exit the ship as we walked on board and were directed to the bridge.\n\nCaptain Miguel Santos was the master of this ship. He was an older man, Argentinian by birth and well-seasoned in all the rules and regulations concerning questionable cargo. He and Gabrielle did a little legal dance until she threatened to impound the entire vessel until such time as each and every container was searched. That shut him down and took the fight out of him instantly. I read out the numbers on the containers and on the fifth one he reacted. It didn't take Feng to tell me his heartrate was elevated, I could smell his fear.\n\n\"Why don't we star t with that one,\" I said and he nodded.\n\nI left Gabrielle on board as I went to the dock and watched as the container was offloaded. I casually clicked the safety off on my pistol and unsnapped the cover. I wanted to be able to draw and fire. The ground crew brought bolt cutters and cut the lock off. I backed away as they opened it slowly. The entire container was packed tight with wooden boxes of all shapes and sizes. The men around it left me to it and returned to their other duties. I walked closer and I felt it. The blast of psychic cold was palpable! There was something dark and sinister lurking in this container. \n\nI silently went through the spells I had hanging and waited for the hammer to drop. I turned to look up at the ship and Gabrielle was looking down at me. I gave her a thumbs up and she waved back. The hairs on the back of my neck went up and I looked around. There was activity all over the place. This pier was not isolated and this ship wasn't the only one docked and being unloaded. The truck approached at a normal speed and seemed like it was going to continue on. I got a look at the driver and saw the expression of anger and surprise. Even as he turned the truck in my direction and gunned it I crouched, drew my pistol and fired. The three round burst struck the front of the truck turning the engine to scrap. Damn Newton and the laws of motion! The vehicle had already picked up sufficient speed and momentum to make it lethal. \n\n\"Kuun,\" I cried out and the barrier snapped into place a moment before the truck would have struck me.\n\nThe vehicle stopped and the kinetic shield dissipated. I raised my weapon and took aim at the driver. He held up his hands but his passenger lifted the assault rifle up and fired off a wild burst. The windshield shattered and I rolled away. Men began to pour out of the rear of the truck and I switched the pistol to full auto. I fired into the cab and the rifle fell deadly silent. I took up a defensive position behind one of the open container doors. More automatic gun fire erupted and I aimed at muzzle flash. Three volleys of bullets struck in and around my position. \n\nI pulled back and instinctively wrapped the shadows around me. I moved slowly to a flanking position when Gabrielle appeared. She had an auto pistol in each hand and fired controlled bursts into the rear and side of the truck. I raced towards the rear of the vehicle to create a crossfire. I reached my goal and crouched. Three men lie dead on the concrete, two were wounded and five were holed up in the back of the truck. Two fired at Gabrielle while three reloaded. I lay down a line of fire into the back from one corner to the other. I looked over and Gabrielle was picking herself up off the ground. She was wincing from the impact with her body armor but she was otherwise unharmed. We made sure the threat was over and checked the injured and dying. They surrendered and were disarmed. ",
        "\"That wasn't so bad,\" I said when the next round of gunfire came from above us. \n\nI dove under the truck as the weapon fire from the helicopter struck the area. Gabrielle followed suit and we huddled as the entire truck was riddled with bullets. I was running low on mana but I managed to summon another shield spell and sustain it above us. She huddled closer as the smell of gasoline filled the air.\n\n\"Shit, they hit the gas tank,\" she cursed.\n\n\"Hold on,\" I said as I pulled her even closer. \"Spell, don't fail me now.\"\n\nThe explosion rang in my ears even through the protective energy of the spell. I was gritting my teeth and clinging to that spell with everything I had. I think I passed out. When I was conscious again I was face up in Gabrielle's lap. She was crying and muttering prayers when I opened my eyes.\n\n\"You are alive,\" she said kissing me fiercely. \"I thought you were dead!\"\n\n\"Nope, just drained,\" I said smiling. \"...The container?\"\n\n\"Gone, they brought in a big ass helicopter and flew off with it.\"\n\nI looked around and the docks were strangely quiet. Where were the police? Hell, where was the military? A gun ship fires openly in full sight of the public and no one has swamped the area. I looked up at Gabrielle and she shared my fears. I called on Feng to monitor police and military channels as we left the docks.\n\n\"Reports so far are that some sort of black ops was being run and everyone was ordered to ignore the docks until ordered otherwise.\"\n\nI shared Feng's report with Gabrielle and she looked a little spooked. The kind of clearance required was staggering. What the hell had we gotten ourselves into? I drove us to within a block of our hotel and parked. We got out and walked the rest of the way. I kept a look out for surveillance and spotted the van right away. It might just be the local utilities but better safe than sorry. I pulled us into a nearby alleyway and told her what I had seen.\n\n\"Gas van near the corner,\" I said and she smiled.\n\n\"Black SUV across from the hotel,\" she replied and kissed me lightly. \"So what's your plan?\"\n\n\"Promise you won't be angry,\" I said and she nodded. \"Hmmm... blonde, brunette or redhead?\"\n\n\"Blondes have more fun,\" she replied. \"Why?\"\n\nI changed right in front of her. My new form was a tall leggy blonde with bright blue eyes and a rack that any woman would envy. Gabrielle's eyebrows went up and she smiled.\n\n\"Oh you've been keeping secrets,\" she said smiling.\n\n\"I wasn't sure how you'd react,\" I told her in my best Southern drawl. \n\n\"I've never kissed a girl before,\" she said as she leaned forward and planted one on me. \"Your lips are so soft...\"\n\n\"Let's see if we can get into our room and grab our shit and dash.\"\n\nWe walked out of the alley with her arm around my waist. We entered the hotel unmolested. I feared men in black would swarm us any second. The elevator ride was interesting. I've used a female persona as a disguise before but I've never 'used' it like this. Gabrielle's tongue was invading my mouth and her hands were on my ass. I was on the receiving end of overwhelming sexual attention. I was a little frightened by how this body was reacting.\n\n\"You are going to let me play with this new you aren't you,\" Gabrielle pouted.\n\n\"Um... I uh... I've never,\" I tried to say and she giggled.\n\n\"You will tonight,\" she promised.\n\nI felt a wave of panic as the elevator door opened. We stepped out and headed for our room. There was a maid's cart at the end of the hall but no sign of the maid. I slipped my arm around Gabrielle's waist and urged her past our room. She looked over at me and we slowed as we got closer to the cart. There, at the front of the cart, a camera aimed at the hallway in front of our room. We continued and discussed what was in the room and whether or not it was worth returning for. \n\n\"I don't need anything, what about you?\"\n\n\"All of my mystical equipment is in there,\" she said. \"It can't be replaced. Some of those relics are hundreds of years old!\"\n\nI leaned up against the wall and thought it over. I was so damned drained but there was a spell that might work. It was worth the risk. I told Feng and Gabrielle my plan. We turned around and she took out her room key. Feng had hacked hotel security by the time we reached the room next to ours. Gabrielle slid in our key and Feng unlocked the door for us. The room was dark and we closed the door as quietly as we could. We crept into the bedroom and found the bed occupied. The occupant was a man in his forties and the stench of alcohol coming off of him was a relief. \n\n\"He shouldn't wake up,\" Gabrielle whispered. \"Okay now that we are in here what are you going to do?\"\n\n\"This...\" I said as I laid my hand on the wall and chanted softly. The shimmering began near my hand but quickly expanded to a circle about six feet in diameter. I grabbed her with my free hand and we stepped through the wall and into our room. I collapsed onto the carpeted floor and clung to consciousness. Gabrielle knelt next to me and her expression of concern was well founded. She helped up onto the bed and as I tried to get comfortable she worked on undressing me.\n\n\"What the hell are you doing, the room is being watched.\"\n\n\"Shut up and enjoy,\" she said.\n\nI lay there naked and she undressed while I watched. Oh there was that strange female reaction, the warmth and tingling down there. Gabrielle smiled and lay on top of me. Her tits pressed against me as we kissed. Her hands weren't idle and her knowledge of the female anatomy was profound. I was shaking and moaning as she worked on me. I now knew how a woman felt having her body caressed and pampered. I cried out when her lips wrapped around my nipple. \n\n\"Oh shit,\" I cried out and all that did was to encourage her.\n\n\"This is fun,\" she said as her hands parted my legs. \"Now relax and let me do all the work.\"\n\n\"I am too weak to argue,\" I replied as her fingers found their mark. \"DAMN!\"\n\nMy hips left the bed as her lips and fingers went to work. I had done this once before years ago. I was too weirded out to do it again. But I trusted Gabrielle and she seemed to really be enjoying herself. I looked down and watched as she licked and fingered my poor little pussy. It began in my toes and swiftly moved up through me until I cried out.\n\n\"Oh hell what was that,\" I asked and Gabrielle just giggled.\n\n\"You came you silly goose,\" she said. \"Ready for round two?\"\n\nWe shifted into a sixty nine position and now I understood her logic. I had never fed in female form before. The light trickle of her life stuff did wonders for me. I was still weak but the dire threat had been removed. I would survive. I rolled her onto her back and took charge for a little while. She protested but not for long. Once I got my wind I decided to try something I'd never done before.\n\n\"Are you ready for a surprise,\" I whispered in her ear as I had her on her knees now.\n\n\"What kind of surprise?\"\n\nI had used the dark miracle to entertain the ladies properly. But now I was going to try it in this form. I closed my eyes and the change was easier than I thought. I looked down and there was my old familiar friend. I took it in hand and eased it inside of Gabrielle. She let out a guttural cry as I began fucking her. Her surprise mirrored my own. It was the best of both worlds. Gabrielle looked over her shoulder and narrowed her eyes.\n\n\"Cheater,\" she whimpered. \"I am never leaving your side.\"\n\n\"I know,\" I said as I thrust harder and the trickle of life flowed again. \n\n\"I am so close so soon,\" she said. \"Be careful lover...\"\n\n\"I will I am close too.\" \n\nI drove into her as hard and fast as I could. The sway of her breasts matched mine. It was weird but felt amazing. I cupped my own tits and teased the nipples as Gabrielle thrust back against me now. I was hitting sensory overload at breakneck speed. We were perfectly in sync as our mutual orgasms hit at the exact same moment. I severed the dark magic and eased out of my lover slowly. I lay back and Gabrielle pounced cuddling close.\n\n\"That was fucking amazing,\" she cried out.\n\n\"I am glad you enjoyed it,\" I said. \"This is all new territory for me.\"\n\n\"Now you know how I feel,\" she replied as her hand wrapped around my semi erect member. \"Are you up for round three?\"\n\n\"I don't want to hurt you,\" I said feeling a flash of alarm.\n\n\"That's not what I had in mind,\" she said smiling. \"I will be gentle... and careful.\"\n\nShe had me lie flat and I let her have her way with this new form I had created. Her logic became clear at once. I watched as she stroked and licked me to an aching erection. She took a two handed grip and wrapped her lips around the head. She double fisted my cock and licked and sucked like a demon herself. I grabbed at the covers like a newbie and whimpered and moaned for her. Gabrielle slowly took about half my length between her lips and when I warned her I was close she just ignored me. I cried out as I came and she swallowed every last drop.\n\n\"Damn woman,\" I growled. \"You fucking curled my toes.\"\n\n\"MMMMMMM perfect,\" she said. \"Now let's get the hell out of here.\"\n\nWe got dressed, packed our bags and reversed course. Since I had enough energy from Gabrielle the pass wall spell didn't tax me too much. We reached the hallway without incident. We got to the elevator and when it opened two men in dark suits exited. They headed in the direction of our room and we took the elevator down only breathing when we reached the lobby.\n\n\"That was close,\" I said and Gabrielle nodded.\n\n\"I have a question,\" she asked as we turned in our key.\n\n\"Hmmm,\" I muttered as we neared the exit.\n\n\"Do you take requests,\" she asked smiling mischievously.\n\n\"Huh,\" I said confused as I pushed to outer door open.\n\n\"You know... your faces,\" she said blushing now.\n\nMy eyes widened as we stepped out onto the sidewalk. I giggled and we headed back to the car. We were halfway down the block when every car alarm went off without warning. We didn't run but we did walk faster. The sound of the alarms brought tons of people out to investigate. Well played Feng! I tossed the luggage into the back seat as Gabrielle started the car. I hopped in even as she backed out. She continued backward entering the intersection in reverse and then heading forward along the side street.\n\n\"Well done Feng,\" I said aloud.\n\n\"Thank you Louis,\" she replied. \"I didn't have time to warn you. The assassins were waiting to cut down anyone that exited the hotel.\"\n\n\"That's pretty damn cold blooded,\" I said. \"Do you know who ordered the hit?\"\n\n\"Yes and you are not going to like it,\" she said.\n\n\"Hit, did someone hire assassins?\" Gabrielle asked.\n\n\"Yeah, we have Feng to thank for our escape.\"\n\n\"The Grand Inquisitor gave the order, the assassins are Inquisitors.\" Feng said softly. \"He has declared Gabrielle a heretic. Her life is forfeit.\"\n\n\"Is he behind the shipment Feng? Did he set this in motion?\"\n\n\"Yes sir, whatever is in that container is for him.\"\n\nI fell silent and wondered how to tell her the news. Gabrielle had given up so much; this was going to crush her. I looked down at my hands and fidgeted horribly. We drove around with no clear destination and I waited to tell her what Feng had discovered. \n\n\"You are being awfully quiet,\" Gabrielle said after ten minutes or so. \"How bad is it?\"\n\n\"Bad... really bad,\" I said my voice cracking.\n\n\"I am not going anywhere,\" she said again. \"I have dedicated myself to you.\"\n\n\"The Grand Inquisitor is behind the shipment and the hit men are Inquisitors.\"\n\n\"I fucking knew it,\" she said her eyes bright with anger. \"That arrogant fucker...\"\n\n\"So you're not pissed at me,\" I asked and she shook her head.\n\n\"I am going to chop his balls off,\" she snarled. \"I need you. I need your help on this.\"\n\nWe planned and schemed and plotted. I sent out an email to a certain young lady. We needed arms and I knew she wouldn't let me down. She replied an hour later and the cost for the case of weapons, a long weekend in Switzerland. I thanked her and told her she could have a week if she wanted. The weapons alarmed her but she didn't ask questions. She was very understanding. We went off the grid. I had caches of gold coins worldwide and that would help finance our little vendetta. This fucker was not going to get away with this!\n\nIt was going to take time. That couldn't be helped and every day spent in preparation was another day the Grand Inquisitor was in possession of whatever the hell was in that container. We took a train to British Columbia. I had a safety deposit box there. While we were in transit I contacted a coil dealer I knew.\n\n\"Francois, comment cava?\" I said in greeting.\n\n\"Louis, it has been too long,\" he replied.\n\n\"Do you remember our last conversation,\" I said and he laughed.\n\n\"Oui, you told me that you might be able to get your hands on some interesting currency. Has this fine thing happened?\"\n\n\"Yes it has,\" I said. \"I have three rather interesting pieces for your perusal.\"\n\n\"When will you be available?\" Francois asked quite eager.\n\n\"Tomorrow,\" I said. \"I will need a cash transaction.\"\n\n\"Understood,\" he said. \"I look forward to your arrival.\"\n\nI hung up and looked over at Gabrielle. She was smiling at me and had that look. It was the 'you've been keeping secrets again' glance.\n\n\"Convoluted, but let me explain,\" I said and she looked shocked.\n\n\"You don't have to,\" she said.\n\n\"I want to,\" I told her.\n\nI told her all about Yig and the ruins where my friends had been killed. I told her about the treasure chamber and all the gold coins and other artifacts. That was the source of my wealth and it was scattered all around the world. I told her I was taking a big hit on the price of the coins but I didn't have time to put them up for auction. \n\n\"So how much did you get out of those ruins?\" She asked and I shrugged.\n\n\"I could guess on the weight, which was about a thousand pounds of gold and other precious metals. But most of the coins are quite rare and worth more than their weight in gold.\"\n\n\"Holy... how did you manage to move that all on your own,\" she asked.\n\n\"A lot of hard work and some very uh creative engineering,\" I replied.\n\nGabrielle just shook her head and looked at me. I could almost pick out her thoughts. She thought if I had that much money we could just disappear, forever. The wheels kept spinning and then I saw the dark expression take hold and I knew she had recovered her conviction. I giggled and she shot me a dirty look.\n\n\"What is so fucking funny,\" she snapped.\n\n\"I so pity this guy,\" I told her and she smiled. \"He is in for a world of pain.\"\n\n\"You are so wicked,\" Gabrielle said and kissed my cheek. \"I think I love you.\"\n\nI loved British Columbia, it was a great place to live, to visit and the people are awesome. We arrived late that night and settled into a bed and breakfast for the evening. I took Gabrielle out on the town to help take her mind of the situation. We went to one of my favorite restaurants for a late dinner. The chef came out and spoke with us and that made her night. \n\n\"Do you have friends everywhere,\" Gabrielle asked.\n\n\"No, but I do know someone that does,\" I said grinning. \"The Little Moriarty...\"\n\n\"Who is she?\"\n\n\"Why do you assume it's a woman,\" I asked.\n\n\"The way you inflect Moriarty, it screams intimate... unless I am wrong?\"\n\n\"Nope, she and I had a brief thing,\" I admitted.\n\n\"Manwhore,\" she said smiling.\n\nAfter dinner we went dancing and I was able to 'drift' the crowd. It's a term I came up with for feeding off multiple people at the same time. The best places were clubs, roller coasters and movie theatres. So while Gabrielle got tired I only got more energetic. After the club we returned to our room at the bed and breakfast. Gabrielle stripped down and went to bed. I placed minor wards at the door and windows before I slipped into bed next to her. I didn't sleep but I worked out a workable attack plan. I learned from Gabrielle that this Grand Inquisitor was located in Rome. That didn't mean he didn't travel on business. Why ship this object to Canada in the first place? There was something I was missing.\n\nI stared at the ceiling and called Feng. She appeared floating above me. She smiled down and we went to work. We began isolating citizens of Vancouver. It took hours and hours of work. We broke down services and possible religious links or even relatives. In the end it came down to one individual. I was able to locate him via his bank accounts. You might think that is unimportant until you see how much money he has and how many countries are involved. \n\n\"How much?\" I asked and Feng read off the total amount for the third time. \"...So roughly five billion dollars...\"\n\n\"Yes, my suggestion would be either money laundering or a personal bank for black ops and the like.\"\n\n\"So he handles projects for governments, corporations and cartels.\"\n\n\"That would be guess,\" Feng said. \"You believe this is where the Grand Inquisitor is heading?\"\n\n\"What do you mean heading? He is in Canada?\"\n\n\"He arrived an hour ago on Alitalia flight 207.\"\n\nWhat the hell is going on? Was he selling the artifact? Was this man, Thaddeus Black, buying the artifact? My head hurt. I pinched the bridge of my nose and pondered an early morning. That thought died as soon as it was born when Gabrielle rolled over and her arm went over my chest. Aw damn, I wasn't going anywhere. She lay like that for a while and then she rolled onto her side and scooched until her ass was against my hip. Gods I wanted to take out my frustration on something or someone. \n\n\"MMMMMM Louis... don't... people will see...\" she moaned in her sleep.\n\nI reached out and stopped myself. I had already fed from her and it would be dangerous to do so again so soon. However it was a Friday night so it might be possible to find a pretty young thing. \n\n\"It's so big,\" Gabrielle whimpered. \"I'm so full lover...\"\n\nI rolled onto my side and held her close. I let her dream uninterrupted and left the other dreamers untapped. I would deal with the hunger another time. I leaned close and took in her scent. Was this love or just infatuation? I had cared, check that, care for many of the women I have been intimate with. There was a parade of faces and names and I felt warm and fuzzy when I remembered them. There they were the faces that I didn't want to see, the faces of those that I had killed or maimed with my hunger. The frustration vaporized in the flame of regret. I held Gabrielle closer and it was tears hitting her cheeks that woke her up.\n\n\"Louis... Louis what is wrong,\" she said sleepily.\n\nShe managed to turn around and hold me tight. She stroked my cheek lightly and told me it would be okay. I held back for a while before the wall inside was sundered by her cool soothing voice.\n\n\"You will hate me if I tell you...\" I said through gritted teeth.\n\n\"Louis, I could never hate you,\" she said and kissed my cheek.\n\nI looked her in the eye and I nodded. I wiped the tears from my eyes and sat up. Gabrielle placed her head in my lap and looked up at me expectantly. I decided to tell her everything. I explained the hunger and how it was tied to my general health. She nodded and seemed to understand. I told her the different ways I fed. How I preferred positive emotions but explained the more intense the emotion the more I got out of it. Then I hesitated but pushed on.\n\n\"Sex is very intense,\" I told her and she nodded. \"I have the ability to astral project. I can enter dreams and interact with the dreamer. I can read peoples emotional state from the astral and choose the most aroused by the intensity of their aura.\"\n\n\"I understand,\" she said.\n\n\"There is a circuit formed between my donor and me,\" I said. \"There is a danger if the hunger grows too strong. I can take too much.\"\n\n\"Has that happened... oh...\" she said and I saw the understanding in her eyes. \"You've hurt them... your hunger caused you to keep the circuit open too long. I see why you were concerned.\"",
        "\"I knew you would hate me,\" I said and began to move away from her.\n\n\"STOP,\" she said as her hand latched onto my wrist. \"I think you underestimate me Louis.\"\n\n\"Huh,\" I said as she rolled on top of me.\n\n\"Do you think I'm weak? I understood your nature from the beginning. I may not have had all the details but that has no bearing on my feelings. Do you understand what I am saying?\"\n\n\"You take me as I am with all the good and the bad.\"\n\n\"Exactly,\" she said as she rose up, aimed my cock and dropped down impaling herself. \"Now be a dear and shut the fuck up while I take my pleasure from you!\"\n\nI lay back, close my eyes and let her ride me all she wanted. I knew she was angry and disappointed. If I could be an outlet then so be it. Her grunts as she drove her hips downward sounded angry at first. But after a little while she was simply moaning for sheer pleasures sake.\n\n\"You are filling me up,\" she whimpered. \"So long and thick...\"\n\n\"I just want to make you happy,\" I whispered.\n\n\"You do... you are the first good thing that has happened for so long.\"\n\nI cupped her tits and began thrusting upward to meet her. I didn't feed from her. I was there to make her climax as long as her body held out. When her legs gave out I rolled her onto her back and took over. I hammered her nonstop until she begged me to stop. Her orgasms blurred together at the end but when I pulled out she was a panting sweat covered puddle of womanhood. She looked at me with renewed wonder. She mouthed the words 'oh my god' before she closed her eyes and slept.\n\n\"Finally... I was able to tell someone...\"\n\nIt was ten in the morning when I showered and slipped out to get us fresh brewed coffee. When I returned Gabrielle was in the shower. I told her I had coffee. I slipped into the bathroom and watched her. I offered to wash her back but she spun around and nearly slipped covering her backside. \n\n\"Sore,\" I asked.\n\n\"A little,\" she whimpered. \"Okay, a lot...\"\n\n\"After coffee we are going out for breakfast and then off to see a man about some coins.\"\n\n\"Ooh, can I go with you to the bank? I want to see the coins, if you are okay with that.\"\n\n\"Sure you don't want me to wash your butt or back?\"\n\n\"OUT... get the fuck out...\"\n\nI was crying I was laughing so damn hard. I sipped my coffee and enjoyed the fruit of the bean. Gabrielle came out wearing one of my t-shirts and a pair of see-through panties. I smiled and handed her the coffee. She sat on the edge of the bed and winced. I suggested wearing a skirt. Jeans might be a little too tight right now. She nodded and laid out her clothes as she sipped her coffee. The leather bodice with the slits all over it was interesting. Then she unrolled a leather pouch of sorts which held a couple dozen metal darts. She took the razor sharp throwing darts and slid them into the pockets on her bodice. I was impressed. \n\nBy the time she was done she was a veritable walking arsenal. We finished dressing and headed off to breakfast and then to the bank. She was so excited when we walked into the private viewing room of the bank. They brought me my box and I let Gabrielle open it. The twenty gold coins were in individual plastic cases. I picked out the three that I was going to sell and let Gabrielle pick out one. She had great taste and I told her all about it as we headed over to the coin shop. I loved the way her eyes lit up when she looked at her coin.\n\nFrancois was waiting for me eagerly as we walked into his shop. He was a third generation numismatic or coin collector. But he was more of a coin historian in my mind. He was a native of British Columbia and was in his mid-fifties with a full head of silvery white hair. He had steel gray eyes and the family nose. I knew this from the twenty odd photos all over the walls. Francois was very proud of his lineage. He always wore a dark suit with thin pin stripes and the most god awful ties you have ever seen. Today's obscenity for the eyes was a bright yellow affair with nautiluses all over it. \n\n\"Bon Jour Francois, I see your taste in ties is a bad as always,\" I said hugging him.\n\n\"Louie my friend, I see your taste in gorgeous women is as awe inspiring as always,\" he said and took Gabrielle's hand and kissed it.\n\n\"Flatterer,\" Gabrielle said and rewarded him with a wink.\n\n\"I have three little treasures for you,\" I said reaching into my pocket.\n\nHe produced a jeweler's eyepiece and examined the coins carefully. He muttered to himself the entire time and cried out when something spectacular caught his attention. It was at least a half an hour before he finished his examinations. He shook his head and looked at me.\n\n\"Before we conclude our business I must ask again,\" he said. \"Where did you get these coins Louie?\"\n\n\"What if I told you I found all of them in a single chamber,\" I said.\n\n\"I would say you were the luckiest Archaeologist on the planet. Did you? Did you actually find them in a single burial chamber?\"\n\n\"No, it was a treasure chamber,\" I said.\n\n\"Have you researched any of these coins? They are from the four corners of the ancient world and different millennia.\"\n\n\"You were the one that asked,\" I told him and he nodded.\n\nFrancois produced the suitcase of cash. I didn't bother counting it. I trusted him and if he shorted me I would never trade another coin in his shop ever and he knew it. I suspected he sold them to high end collectors making ten times what he was paying me. But there were another five thousand coins scattered all over the planet, stored away for all those rainy days to come. \n\nWe left the shop and got our tickets for the train back to Vancouver. We had a few hours so we returned to the bed and breakfast and checked out. As we headed for the station I received an email regarding the weapons I asked for. They would be waiting at the Vancouver train station in a locker. I had to promise to be careful and return in one piece. I had no desire to perish on this mission. This was the first time I raced into danger instead of fleeing it. Okay, the barghest doesn't count that was self-serving in the end. \n\nThe train departed the station exactly on time, a nod to Canadian punctuality. Gabrielle and I sat with the other passengers and did a little people watching. I had split the cash up into smaller bags and given one to her. I told her we would be splitting up for a week and meeting back up again in Chicago. She was loath to leave me but understood the danger of traveling together for too long. I had set plans in motion for a nice beach front home in the Bahamas for a year or so and she liked the sound of that. That part of my plan was all true. I felt bad about leaving her out of the other part of my plan, the part where I sneak in and confront the Grand Inquisitor and most likely put a round between his eyes. \n\n\"You are awful quiet Louis,\" Gabrielle said watching a young girl play with her stuffed animal.\n\n\"I am going to miss you,\" I told her, which was true.\n\n\"Do you know how long I've been an Inquisitor, seven years,\" she said her voice calm and controlled. \"I was practically raised by the church. I have been training in this line of work for fifteen years. I know you promised not to lie to me or hold things back, but uh... do you think I am a fucking idiot?\"\n\n\"I don't want you getting hurt,\" I said eyes downcast. \n\n\"I know how they think; their strategy and I can help you. Why would you keep me out of this?\"\n\n\"I've never shared as much as I have with you. I want you far away and safe when I... when this goes down.\"\n\n\"You are going to kill him aren't you,\" she asked and I nodded. \"Do you have any idea what the Vatican will do when they hear about that? You will be on the run for the rest of your life or until they run you to ground and kill you. You can't kill him!\"\n\n\"I am open to suggestions.\" I snapped.\n\n\"You need to expose him for the fraud he is.\" Gabrielle said and I stared at her and then smiled. \"You need my help now shut up and buy me a drink.\"\n\nSo we sat there and rehashed the plan I had worked out so diligently. By the time we were both yawning we had taken a turd of a plan and polished it to a metallic sheen. Gabrielle's Inquisitor experience pushed the likelihood of success to the seventy percentile. Hell, we might actually walk out of there alive! We retired to the sleeping compartment and by noon have reached Vancouver. \n\nThe gentle rocking motion from the train's movement lulled me asleep in no time. I dreamt I was standing in front of the shipping container. I was looking into the darkened depths but unlike what had happened there was fog rolling out in a steady stream. Something moved against the darkness and was walking outward towards the light, towards me. The boxes were gone suddenly and I could make out wings, massive wings too large to fit in the tiny confines of the container. There were eyes blazing in the darkness and unlike feline eye shine these eyes produced their own illumination. \n\n\"Louis...\" it called out to me. \"I am coming Louis.\"\n\nI sat up and the cry of alarm died premature in my throat. I looked over and Gabrielle was sleeping soundly. I smiled and cuddled close to her for the simple comfort of it. I closed my eyes and drifted back to a deep dreamless sleep. The smell of freshly brewed coffee caught my attention and I opened my eyes. There was Gabrielle holding a cup of coffee for me. She was smiling as I sat up and took the cup from her.\n\n\"Morning sleepy head,\" she said blushing.\n\n\"What,\" I asked. \n\n\"You were holding me tight when I woke up this morning. It felt really nice is all.\"\n\n\"I had a nightmare about the cargo container,\" I said and her face darkened. \"There was this fog coming out of it and these eyes, glowing in the back and wings. It doesn't matter it was just a dream.\"\n\nI drank my coffee and after that got dressed and we ate breakfast in the dining car. We sat across from one another and I happened to look out. Aw crap, it was snowing. It began as a few random flakes but the closer we got to Vancouver the heavier it became. It looked like we were going to dealing with a full blown snow storm. Gabrielle was about to get up when I laid my hand on hers.\n\n\"What is it, is there something wrong?\"\n\n\"No, I want you to have this,\" I said passing her a small envelope. \"Just in case, things go sideways.\"\n\n\"We are both going to walk away from this,\" she said as she opened the envelope. \"You opened a bank account for me?\"\n\n\"Yeah, if we are unable to prove his guilt, you are going to need some money to go underground with.\"\n\nThe 'him' I was referring to was the Grand Inquisitor. We had a good solid plan but nothing in life is guaranteed. I wanted her taken care of. She had somehow managed to worm her way into my heart. I glanced around the dining car and picked out three potential targets. They could be watching us but we would only know once we left the train or they acted. We paid for our meal and one out of the three followed us to one of the main cars. \n\nI asked one of the staff how long until we reached Vancouver and we had at least another hour. The weather was worsening the closer we got to our destination. I didn't want to say it but Gabrielle's expression reflected my own fears. Whatever had been in the container was having an adverse effect on the weather. We passed through to our sleeping berth and packed our bags. We drew out winter jackets and as she dressed I kept a lookout.\n\n\"Are you ready,\" she asked and I shrugged. \"I can help you if you want.\"\n\n\"This is so weird,\" I said as I stripped down to nothing. \"Okay, here we go.\"\n\nI shifted my form in a cute petite Japanese gal. Gabrielle shook her head and over the next ten minutes I tweaked the form until she was happy with it. I could only look down and smile at her suggestions. Gabrielle said that before she met me she had never kissed a girl, but she sure knew what she liked in her women now. The final form was stunning from any angle. I dressed and altered the clothing through a simple spell I had mastered long ago. It took a little time, as it usually did, to adjust to my new height and body mechanics. We picked up our luggage and headed for one of the main cars. We placed our luggage on one side and sat next to each other. \n\n\"I could go for girls after seeing you like this,\" Gabrielle said grinning.\n\n\"You say the most flattering things,\" I said placing my hand over hers. \"Are we getting enough attention?\"\n\n\"Pfft... are you kidding,\" she laughed. \"Every heterosexual male is staring at you, lucky me.\"\n\n\"Well you were so damn specific,\" I said.\n\n\"MMMMMMM, yes I was and you should thank me,\" she purred. \"Make me a promise.\"\n\n\"If I can,\" I told her recognizing that hungry look.\n\n\"If we both pull this off, you will let me play with this new form of yours.\"\n\n\"I have created a monster,\" I said and we both laughed. \"I promise.\"\n\nA half hour later the train pulled into the Vancouver station. We grabbed our bags and filed out with the other passengers. The temperature had dropped dramatically, the wind was gusting fiercely and the snow was falling heavily, sideways. We slipped the five men following us. Not due to any great stealth skills but because they were looking for me, the male version, that they believed was still on the train. We reached the lockers and removed the two suitcases without incident. \n\nWe took a cab to a small hotel and changed. The cases had one gauss rifle and two pistols. Beneath each cache of weapons was some sort of thin micro-weave body armor. The material was thin and flexible enough to wear beneath regular clothing quite easily. They reminded me more of body suits than armor. Gabrielle and I stripped down and slipped the armor on and put our clothing on top of it. I put on the shoulder holster on and sheathed the gauss pistols into each holster. Gabrielle put the rifle into a duffle bag along with all our gear that we felt was absolutely necessary. \n\nOur transportation for this mission was an inexpensive jeep we bought for cash. It would get us there and back and anything beyond that was a bonus. The former military compound turned manor house was an hour drive from downtown Vancouver. While the jeep did have a decent heater the windshield wipers were crap. They moved but did little to remove the snow as it accumulated. Feng acted as our navigation system using satellite GPS. We were nearly there when she told us to take a turn and head up a private drive. \n\n\"I need to access the compound's security system. To do that I need to upload a copy of my core programming.\" Feng explained. \"There it is... the satellite dish. The family uses it for entertainment I am going to use it for Yuri 5, a soviet era spy satellite.\"\n\nWe waited while Feng sent a copy of herself using the dish to an obsolete satellite. She hoped to be able to recover and repurpose the existing equipment onboard. Once her copy was in place we found a spot to park close to, but not in line of sight of, Thaddeus' manor house. If she could circumnavigate the security we would go the tech route. If not, then we would go old school, really old school. I would teleport us into the main building using Feng as a guide. Blind teleportation was not just dangerous; it almost always ended badly for the mage. The thought of appearing inside a wall or structure made me shiver. \n\n\"It's a no go,\" Feng said. \"The satellite is not going to work for my purposes. I can give you a safe entry point though. After that you are on your own. I am sorry.\"\n\n\"We had to try,\" I said and informed Gabrielle of the situation.\n\n\"Let's do this.\"\n\nWe got out of the jeep and Gabrielle shouldered the duffle bag. I closed my eyes and let Feng show me exactly where we were going to enter. She gave me the most current blue prints but how accurate they were, was anyone's guess. I began the teleport spell and visualized the landing spot as clear as I could. I opened my arms and that was Gabrielle's signal to cling to me. Once I felt her body next to mine and closed my arms around her and told her to exhale. We blew out our breath and the stomach lurching sensation slammed into us.\n\nI opened my eyes and found we had landed uninjured. I would mark that as a master stroke of spell work. I scratched blind teleport off my bucket list as well. We crouched and I shifted my vision to the infrared spectrum. Hopefully I could pick up the body heat of guards and other inhabitants. So far so good, but we had a long way to go. I took the lead and headed straight for the basement. If I were an evil mastermind I would keep the artifact there. The closer I got the easier it would be to fine tune our path.\n\nWe stopped to access our position and situation. I decided to risk a passive detection spell. Unlike an active spell that would send out a kind of mystical ping, this spell would act as a receiver of magical energy. It would alert me to not only the artifact but wards and other nasty surprises. I had to maintain it but it would be worth it. I held up my hand and moved it all around us and got a strong source of mana in a northeasterly direction, so much for the basement. We moved quietly towards our goal and entered the northern wing of the manor. We headed east and straight towards the artifact. \n\n'Something is wrong,' I thought to myself. 'Where the hell is all the security?'\n\nGabrielle tapped me on the shoulder and we halted. She leaned close and whispered her own concern over the lack of guards or electronic surveillance. I nodded and frowned. I dropped the spell since our destination was clear now. I reached up and pulled the armored hood over my head and Gabrielle followed suit. She took out the gauss rifle and I pulled out one of my pistols. With a few deep breaths to push down my stress we entered the gallery. There were priceless treasures located everywhere. We would have to limit ourselves to kill shots only. It would break my heart if a random shot damaged a single piece of this collection. The gallery was broken down to two smaller outer wings and one larger central display area. At the very center of the display area was an object covered in a red velvet material. The silhouette hinted what might be beneath , a full length mirror.\n\nWe stopped and Gabrielle took up a firing position. I renewed the detection spell and was overwhelmed by the power coming off the covered object. The problem was that it was giving off so much mana it would mask any other lesser spells or enchantments. In other words, it was a trap. They were waiting for us and who was I to disappoint them. I switch the safety off of my weapon and another deep breath later I slipped into the open area. I peered into the astral and found the spells concealing them. It was time for the drama to play itself out.\n\nI stood up, holstered my weapon and walked boldly in. I felt the binding kick in ten feet away from the relic. It was a magic circle that would let me walk in easy enough but I couldn't leave without outside assistance. I snatched the velvet material off the object and stepped back. I had been right, it was a mirror and it was ancient by the looks of it. I examined the wooden frame, specifically the esoteric carvings. The meanings were clear; beyond the dimension of the glass was a mystical prison for a powerful demon. I reached out a gloved hand and tapped the glass.\n\n\"Come out come out whatever you are,\" I said.\n\n\"It doesn't work like that,\" a male voice said from the shadows. \"You walked in eagerly enough.\"\n\n\"It wasn't like you were going to pop out and holler boo,\" I replied. \"So how long has this been in your family Inquisitor?\"\n\n\"Generations and it is Grand Inquisitor,\" Rinaldo Giovanni said as he stepped out from the shadows.\n\n\"Whatever,\" I said and turned to face him. \"About what I expected...\"\n\n\"You are quite stunning,\" he said. \"I was hoping to catch your Master.\"\n\n\"He is outside waiting for me,\" I lied and smiled. \"He is quite safe.\"",
        "\"For now,\" the Grand Inquisitor said as he approached. \"I wonder how quickly he will come running to save you.\"\n\nI yawned, sat down and placed my back against the mirror. Rinaldo was joined by Thaddeus Black. They were both men in their late fifties early sixties. Thaddeus had a full head of white hair and dark brown eyes. He was unremarkable and I imagined that aided him in passing unseen and unnoticed. People probably underestimated him at their peril from his looks alone. The Grand Inquisitor had lost most of his hair and only a crescent of gray remained. His eyes were pale blue and intense as he glared at me. I was evil and something to be destroyed I suppose. I closed my eyes and ignored them for now. Gabrielle would hold off until I gave the signal to fire.\n\n\"So how old were you when you realized what this thing was?\" I asked.\n\n\"Ten,\" the Grand Inquisitor replied curtly.\n\n\"Did you enjoy the show?\" I asked and he let out a venomous hiss.\n\n\"What is she talking about,\" Thaddeus asked.\n\n\"I am talking about her masturbating in front of the mirror. I imagine she diddled herself every damn day eventually.\"\n\n\"Shut the FUCK up,\" Rinaldo snarled. \"My mother was a good woman!\"\n\n\"I am sure she was,\" I said. \"Good at head... probably gave a world class hand job too...\"\n\n\"I will kill you,\" he roared.\n\n\"Don't you fool,\" Thaddeus warned him. \"If you step into the circle...\"\n\n\"Clever girl,\" the Grand Inquisitor growled. \"You wanted me to get within striking range.\"\n\n\"No, I just wanted to piss you off. I wanted to see just how much fucking your own mother must have damaged you. You did fuck her didn't you? How did that wet pussy feel wrapped around your cock huh?\"\n\n\"Grand Inquisitor no,\" Thaddeus cried out and I opened my eyes to see the two men struggling now.\n\n\"Did you fuck her up the ass or just shoot your load down her greedy little throat?\"\n\nThe Grand Inquisitor picked up Thaddeus and tossed him away. He took out a dagger I recognized all too well and entered the mystical circle. I raised my hands and gestured. He stopped and laughed.\n\n\"I am armored against your satanic magic demon,\" he snarled. \"I have God on my side!\"\n\n\"I never planned on casting a spell at you,\" I said as I stood up. \"I just wanted to get your attention.\"\n\nHe looked around gripping the dagger tighter. When he looked back I had drawn my pistol and had it aimed squarely at his center mass. The look of surprise was priceless. He didn't let go of the dagger and we faced each other that way for a long time.\n\n\"It was the demon in the mirror,\" I said. \"The demon seduced you and coerced you to sleep with your mother. That is why you and all the male heirs of your thin bloodline have taken up the mantle of Inquisitor.\"\n\n\"I was just a child,\" he said. \"I was a boy of eighteen. I had heard the strange noises coming from her bedroom for a long time. It was the dreams. The dreams that showed me terrible things and it was those images that corrupted me. I began to watch her from the door. I saw the things she did to herself when my father was gone. I have confessed my sins and have been forgiven.\"\n\n\"There is only one problem there Grand Inquisitor,\" I said looking him dead in the eye.\n\n\"And what is that?\"\n\n\"You never forgave her and you never forgave yourself,\" I told him and my pity for this man was clear on my features. \"I am sorry.\"\n\nI could see it in his eyes. SNAP! Rinaldo Giovanni charged me and I fired. The round caught him in the knee and he fell forward and the dagger went spinning away from his grasp. He howled in pain and I glanced over at Thaddeus Black. He was confused and looked from me to the Inquisitor and back again.\n\n\"You could've killed him,\" he said. \"Why didn't you fucking kill him?\"\n\n\"He isn't my enemy,\" I said. \"I came after the mirror. I intend on sending the demon back to hell.\"\n\n\"You're mad,\" Thaddeus snarled. \"Now kill him or I will have you killed.\"\n\n\"Thaddeus, you bastard, how dare you betray me!\" \n\n\"Shut up you old fool,\" Thaddeus shot back his eyes narrowing. \"This trap was fool proof and I caught you so damn easily.\"\n\nI began laughing and looked at the two old serpents. All they cared about were power and ideology. I decided it was time to finish what I had started. I gave Gabrielle the signal to cover me and then I began chanting my incantation. The demon howled from its dimensional prison. It hammered at the glass before it switched tactics and began making promises. The group of security appeared out of the darkness armed with assault rifles and took aim at me and the Inquisitor. Gabrielle's first shots took out the three guards clustered together. The multiple sonic booms fractured the air as the men fell. \n\nI turned my back to the guards praying the body armor lived up to my expectations. I continued with my spell and the first rounds struck my back, legs and head. The force dropped me to my knees but I managed to keep my wits and intoned the words without fail. The mirror began to shake and vibrate as Gabrielle picked off the security force with extreme prejudice. I was approaching the end of the spell and I heard the cry of pain directly behind me. I wanted to look but I couldn't until I finished.\n\nThe last syllable of the banishment spell passed my lips and another sound filled the air of the gallery. The walls shook and plaster dust filled the air as the dimensions were hewn and the mirror was cast into the rift. With a shriek of a billion souls the gate snapped shut and a profound silence took hold of the world. I looked over my shoulder and there directly behind me was the body of Rinaldo Giovanni. He was breathing but for how much longer was anyone's guess. His torso had been pierced at least a dozen times by bullets from the assault rifles of the security force. I looked down at him and shook my head. \n\n\"What the hell,\" I said and he smiled.\n\n\"I... I was wrong,\" he managed as red foamed oozed from between his lips.\n\n\"Let it go,\" I said as I looked over at Thaddeus Black. \"Forgive your younger self... you were just a kid.\"\n\n\"I will,\" he said in gasps. \"I forgive her and myself, thanks to you.\"\n\n\"Eh... I was doing my job. You need to tell me you forgive Gabrielle.\"\n\n\"I do,\" he said weakly. \"She is fully reinstated as an Inquisitor in good standing...\"\n\nI watched the life go out of his eyes. I heard Gabrielle cry out as Thaddeus Black got to his feet. He had fallen flat to keep from being shot by his own men. He dusted himself off and smiled. He turned to leave when Gabrielle's round hit him at the base of his spine. The older man dropped like a felled tree. I got to my feet and the two of us stood over the paralyzed man. Gabrielle rolled him onto his back.\n\n\"Hello Thaddeus,\" I said and smiled down at him. \"I am going to make a phone call. A friend of mine is going to be here shortly to confiscate your precious little treasures. The public is going to love your collection.\"\n\n\"NO... I spent decades...\" he said and then winced in pain.\n\n\"Feng are you done,\" I asked.\n\n\"Yes Louis,\" Feng replied. \"While you were busy with your endeavor I managed to funnel Mr. Black's funds into a thousand different accounts worldwide.\"\n\n\"Excellent,\" I said. \"I have drained your accounts and to honor your kindly donation to the museum I have created a non for profit organization to take care of post conflict veterans. Your money will take care of the men and women that have fought in all these fruitless wars. You are going to be a freaking hero!\"\n\nI reached down and took the signet ring from his left hand. I removed it and examined it carefully. I placed it in my pocket and the sound of helicopter rotors could be heard now. That would be my little Moriarty. It was time to leave.\n\n\"You robbed me?\" Thaddeus asked. \"You got rid of the mirror. You are giving my treasures to a fucking museum. Kill me now!\"\n\n\"Nope,\" Gabrielle said as she spat on him. \"You are going to live mother fucker!\"\n\n\"Oh and I have your ring,\" I said and his eyes widened. \"I wonder what your friends will do when they realized it's gone.\"\n\nHe cried out as I stood up straight, reverted to my normal form and holstered my gun. Gabrielle clung to me as we headed for the nearest exit. We retrieved her duffle bag just as Surisa and her team entered the gallery.\n\n\"Louis,\" Surisa said in greeting.\n\n\"Moriarty,\" I replied and she giggled. \"This is my dear friend Gabrielle.\"\n\n\"You always were a fine choice of woman flesh,\" Surisa said and shook Gabrielle's hand. \"...A pleasure.\"\n\n\"Charmed,\" Gabrielle replied.\n\n\"Damn Louis, you sure know how to find this shit. What do I do with the bodies?\"\n\n\"I leave it up to your gentle considerations,\" I told her and she nodded.\n\n\"Worry not, I am on the job,\" she said.\n\nAs Surisa barked orders we headed out and passed the Chinook cargo helicopter on our way to the half-buried jeep. Gabrielle drove back to Vancouver and I wondered what we had missed. Rinaldo Giovanni, the Grand Inquisitor, had gone to great lengths to secretly ship his family heirloom here. Why? What was the connection between Thaddeus Black and the Grand Inquisitor? Were they going to sell the mirror, some sort of private auction? I felt like the other shoe hadn't fallen and when it did I was not going to like it. We reached our hotel and checked in. I had called in favors and managed to get the penthouse for two full weeks. Gabrielle clung to me as we rode the elevator up. \n\n\"Why are you laughing,\" she asked looking up at me.\n\n\"The song... its City of Angels,\" I said smiling. \"Appropriate no?\"\n\n\"Very,\" she said shaking her head. \"We are likely to be snowed in for at least a week.\"\n\n\"I hope so,\" I told her.\n\n\"Louis...?\"\n\n\"What is it Gabrielle,\" I asked as I unlocked the penthouse.\n\n\"You did make me a promise, right?\" She said as she closed the doors.\n\n\"Wait, I know that look... stay back... NOOOO...\"\n\n\"Oh shut up and fuck me...\"\n\nEpilogue:\n\nSurisa's men had searched the entire compound. They had boxed up and crated all the valuables from the gallery and elsewhere in the manor house. It was the last minute sweep that discovered the hidden door. The armed mercenaries swept forward and cleared the way for her. That is where they found them, the soulless ones. There were in cages and being housed like animals. Three dozen men, women and children drained of their very life essence. Further in was the kennel where Thaddeus Black housed the pack of barghests. The stench had driven them back until they returned with gas masks and other breathing apparatus. The binding circles around each cage were still intact. It had been Thaddeus that had sent his hell hounds into the various cities to feed and return with their precious energy.\n\n\"What in god's name is this,\" Surisa gasped when she saw the shimmering artifact.\n\n\"Is it alive,\" one of her men asked.\n\n\"I don't know,\" she said shaking her head. \"Get the explosives... I... I want this place leveled, buried so that no one and nothing escapes. Shoot those poor bastards back there and leave these demons to their fate.\"\n\nThey stood out in the cold crisp air. The snow fell in large flakes and continued to blanket the area. Thaddeus Black had been treated for his wound and was lying flat on a stretcher. The Chinook's twin rotors began to turn as the helicopter prepped for the flight back to the ship. Surisa looked at the vile thing that passed as a human being.\n\n\"Louis made me promise not to kill you,\" Surisa said to the dark mage.\n\n\"He was a fool, they were all fools,\" Thaddeus said smiling.\n\n\"I keep my promises,\" she said and handed her pistol off to one of her men.\n\n\"You are not going to shoot me are you,\" Thaddeus asked his eyes wide with fear.\n\n\"No,\" Surisa said and smiled. \"Return this bastard to his cave and feed him to his dogs. When it is done we set off the explosives and finish this.\"\n\n\"No... wait... I can make you a very wealthy woman,\" Thaddeus cried out.\n\n\"I already am,\" she said and walked towards the helicopter."
    ],
    "authorname": "Lost Boy",
    "tags": [
        "magic",
        "demons",
        "gender bender",
        "shape shifting",
        "girl on girl"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/spell-crook-and-handle-pt-03"
}