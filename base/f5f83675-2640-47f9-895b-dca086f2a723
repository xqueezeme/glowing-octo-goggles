{
    "title": "The Twelve Vitali Ch. 15",
    "pages": [
        "Authors note: Happy 2018, everyone. Thank you, everyone, for the positive feedback and comments they mean the world to me and have brightened my days. I'm back at work so the writing is slower but hopefully, I will continue to have one chapter a week for you this year as well. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\nCat arrived at the hospital building of the compound that made up the Battaglia family headquarters in the middle of the night. Marcus had taken her to meet Bruno Battaglia in a small admissions office near the open foyer area. Confused, she sat quietly as she was introduced and the giant leader of the family surveyed her silently for long minutes before his deep rumbling voice sounded to fill the small room.\n\n\"Good evening, Catriona, I trust your flight was smooth?\" he asked cordially.\n\n\"Yes, thank you,\" she responded politely, aware of Marcus hovering slightly behind the chair in which she sat.\n\n\"Sit down, Marcus, you are bothering our guest hovering behind her like the angel of doom,\" Bruno grumbled before turning his attention back to the young woman. \"When a table sends us a young woman, for whatever reason, they are usually fairly specific about the trial they would like them to endure. In your case, however, your trial has been set by the thirteenth Table. Do you understand who that is and why that may have occurred?\"\n\n\"No, not really, but I understand that the Vitali have many family laws and traditions that I need to learn more about before they will give their blessing to my accepting Matteo's proposal,\" she said honestly.\n\n\"It is rare that an outsider is in a position such as yours, there has been only one other case in recent years, and she, too, came here to undergo a trial. That trial was interrupted prematurely, and we have put several precautions in place to ensure your safety with us. Having said that, this is not a prison, and while Marcus and his brothers will shadow your movements you will be free to leave at any time if you feel the trial is beyond your capabilities,\" he explained. \"The shadows are a necessary evil for a woman in your position, I am afraid.\"\n\n\"What do you mean, a woman in my position?\" Cat tilted her head.\n\n\"Each of the twelve tables is populated by twelve men directly descended from an original member of the thirteenth table, which is made up of the leaders of each of the twelve,\" he paused to make sure she was following him and saw her nod. \"The twelve men protect and enable their families to flourish financially, socially, and privately, but the real power behind each table is the mother of the family who binds them all together. It is not only a position of great power, but also honour and respect. I believe you know Theresa Vitali and Peri Donati?\" he asked.\n\n\"I know Peri Donati quite well, but I have only met Theresa twice and have not spent any quality time with her,\" she admitted. \"Peri was an outsider and sent here. I know she almost died at the hands of Josh's sister here. I am not concerned that will happen to me, I am not in the same league as Peri Donati.\"\n\n\"The Vitali's believe you might be,\" Bruno smiled as she registered his words. \"And as there is a high possibility that Matteo will sit in the chair of the next Vitali table, which would mean that should you marry him you will become a mother to a vast family and private empire, that is why the thirteenth are involved in the requirements of your trial.\"\n\n\"I didn't know, in all the different things I have been told about the tables that was not one of them!\" Cat gasped.\n\n\"It is not well known, even amongst the members of the family who see only women stuck in the more traditional role of raising children and supporting their husbands. This is quite far from the truth, and the expectation on the wives of the men of the table grows every year, but none more so than the mother. It is rarely spoken about or even understood that it is she who holds the most power within the family.\"\n\n\"I see, and the thirteenth has dictated the trial I will undergo?\" she asked.\n\n\"They have,\" he confirmed. \"Given your past, it was agreed that you would come in as a recruited girl who has no links to any family. You will begin your stay with us by undergoing a thorough medical and mental examination. From there it will be decided what form your trial will take, as it is with any recruited girl who is escaping an unsavoury past. You will have the option of choosing an alias for yourself, or we can assign you one.\"\n\n\"If I choose to leave rather than complete the trial decided for me?\" she asked, thinking about what he was saying.\n\n\"Then Matteo will be forced to make a choice, you or his family,\" Bruno said without pulling any punches.\n\n\"I thought you said I wouldn't be a prisoner?\" she gasped, dismayed by the answer.\n\n\"There are no locks on the doors, you can leave whenever you like,\" he spread his hands as if that was plain to see, but he knew what she meant. \"It is what it is, and, since you came willingly, I am assuming this makes little difference to your reasons for being here in the first place. Now, would you like to choose a name before Marcus shows you to the room assigned to you while you undergo the health and well-being elements of your trial?\"\n\n\"Jane Bennet,\" she said after some thought.\n\n\"A classic, nice,\" Bruno accepted the name and wrote it on the file in his hands. \"Your backstory is a woman who was pimped out to her abusive boyfriend's friends. The other girls and the trainers will accept that and encourage you to do well here.\" He nodded and closed the file, handing it to Marcus.\n\n\"Only Marcus and Nero will know who you are and your relationship to the Vitali Family. Everybody else you come across will treat you as if you are a recruit here for training. Marcus will show you to your room and introduce you to Nero in the morning,\" he said in a commanding tone. \"Welcome, and good luck, Miss Bennet.\"\n\n*****\n\nAfter being raced to the hospital in a police car, Matteo and Ricco stepped into the intensive care room where Stefano lay looking wide awake, but his skin was ashy, and he seemed to be labouring to breathe. He reached out and gripped their hands as the two younger men went to stand on either side of his bed.\n\n\"Catriona has accepted her trial?\" Stefano asked in a raspy voice.\n\n\"Yes, she left for the Battaglia facility tonight with Marcus,\" Matteo answered.\n\n\"That is good, she will do well, she has spirit, that one,\" Stefano coughed as he strained to catch his breath, and the doctor came forward to check his vitals. \"You will both swear to undergo a trial of your own while she is away. Swear on my life and I will let this butcher carve me up,\" he looked directly at the surgeon who stood ready to take him as soon as he agreed to the surgery.\n\n\"I don't want to swear on your life about anything!\" Matteo almost shouted at his father.\n\n\"Papa, why would you say that? Just have the surgery and you'll be back on your feet and able to make us jump through any hoops you like, but you have to agree without all of this,\" Ricco said with a frown.\n\n\"You will swear, or I will lie here and fade away,\" he threatened. \"The trial will not be onerous for either of you, and you will be able to live your lives during the time allotment.\"\n\n\"My life hasn't been my own since the New Year anyway,\" Ricco shrugged as he spoke to Matteo, letting him make a choice for both of them.\n\n\"Fine, we swear,\" Matteo shook his head.\n\n\"Good. Go and get Cosimo,\" he ordered with a barking cough.\n\nFrowning, Matteo moved toward the door and signalled his uncle before returning to his father's bedside.\n\n\"These watches are waterproof, shockproof and tamper proof. They will also inform us if you stray more than twenty-five meters from each other's side,\" Cosimo presented the two younger men with the watches. \"You will wear them for the entirety of your trial,\" he added.\n\n\"That's it? That's the trial?\" Matteo asked incredulously.\n\n\"That's it,\" Stefano nodded, his breath rasping and a hand on his chest.\n\n\"Fine with me,\" Ricco took the watch, looking anxiously at Stefano before looking at Matteo, who had already picked up the watch.\n\n\"Alright, the butcher can take me now,\" Stefano decreed. \"Go home and live your lives; just do it together.\"\n\nThey left the room as the doctors began preparing him for surgery. They sat in chairs in the waiting room and considered what had just happened. Matteo's mind raced with the problems these watches would cause them. They'd have to live at his place, there was no way he was moving into the house Ricco and Jacobi shared. Ricco would have to move his office again up to his; it was his building and his company, after all. Jacobi would probably throw a fit as his twin was distanced from him.\n\n\"I guess there's no use asking if you want to stay at my place with Jacobi and Maryanne due back tonight,\" Ricco said as if reading Matteo's mind.\n\n\"There's not much chance of me wanting to move offices either,\" Matteo admitted. \"Everything else is negotiable.\"\n\n\"You've just nailed home and work. What else is there?\" Ricco asked. The truth was he was quite happy to stay at Matteo's penthouse and move up to the executive suite in HQ. He wasn't really arguing, merely pointing out the facts so he had some bargaining power with the smaller issues later on when he needed it.\n\n\"There'll be stuff, trust me,\" Matteo grumbled, thinking of Cat's return and wondering how long both trials would last and considering how they would negotiate that relationship. \"When do you want to deal with Jacobi? He'll be back tomorrow.\"\n\n\"Fuck!\" Ricco hissed and ran his fingers through his hair. \"We've got a few hours before anything happens here, let's go grab my stuff. It will make telling him easier if I'm already moved.\"\n\n\"Yeah, alright,\" Matteo agreed, although he was looking forward to being there with Ricco when that confrontation took place. The three older brothers were close, and while Matteo was usually on the outer of the three, this time he would be right in the middle of any conversation that had to happen. The usually authoritative Jacobi would have to listen instead of telling them what to do in regards to the family for a change.\n\n*****\n\nCat woke to the alarm that piped into the small hospital room through high speakers and groaned. She knew by now that it was far easier to get up than be forced out of bed and into a cold shower by the nurse who tended to the girls in this wing of the hospital. He could be cruel and demeaning when alone with the girls, and she had no wish to incur his wrath. She'd been here four days now and had found the constant attention exhausting. She rolled out of bed and headed for the shower. Hot water was only available for the first fifteen minutes after the alarm, and she needed to wash her hair before the nurse arrived to strap her into the torture device they made her wear. At least he had stopped holding her up from taking a shower so that she missed the hot water, because he came to her room last now to strap her into the torturous brace.\n\nIn all of the testing she had been subjected to, the most pressing issue had been her posture and a slight bend in her spine that could have been scoliosis. To remedy her bad posture, she had been given a rigid body brace that kept her ramrod straight and lifted her head with a neck brace to keep her head centred. It looked old fashioned and was particularly uncomfortable for a girl used to slouching to disguise her height.\n\nCat luxuriated in hot water. She wasn't a morning person, and she hated rising early unless it was with Matteo, and even then she took some time to get her bearings. The water turned cold too soon for her and she turned off the faucet, believing that this was cruel and unusual punishment for the patients of her wing of the hospital. It may not have been a prison, but each morning it certainly felt like one.\n\n\"Good morning, Jane,\" Nurse James said as he entered her room. \"This should be your last day wearing this brace,\" he said regrettably as he picked up the device of torture and helped her into it, doing the straps up tightly.\n\n\"Poor you,\" Cat quipped. \"I know how much you love torturing me with this every morning.\"\n\n\"I think I'll survive,\" he smirked, helping her pull the loose, gauzy slave dress into place over the brace. \"I believe they will be moving you to the training wing today. I will miss that sassy attitude, but you will have to leave that here, along with the brace. The Masters in the facility will demand manners and respect from you,\" he said in a warning tone. \"Then again, a sassy slut like you would probably enjoy being punished, wouldn't you?\" He ran his hands over her, lingering over her breasts as he feigned smoothing the material of her dress.\n\n\"They're moving me?\" she was surprised. The other women here had been here for weeks, or at least ten days.\n\n\"You are far healthier than most of the girls that come through here, and aside from your disgusting posture, you won't be passing on any STD's,\" he said casually as he opened the door for her. \"I wouldn't mention that to the other girls at breakfast, just in case plans change.\"\n\nCat nodded thoughtfully. The women who shared this wing with her were always referred to as girl, regardless of their age, which ranged between twenty and fifty. She enjoyed their mealtimes together, and they had all formed a small bond of friendship as women undergoing the same treatment for a range of reasons. A few quite openly spoke about their pasts, others seemed to hide theirs behind haunted looks, and Cat could only imagine what had happened to them.\n\nNone of the women in her wing were drug addicts, which meant that they moved through the hospital facility faster than the women who sat across the dining room from them looking frail and pale. The women in her wing had other addictions, gambling, sex, adrenaline, crime, porn, anything to give them the endorphin rush they craved. There were a lot of reasons she found for women to take up the offer of a safe and controlled life in the service of one of the twelve families.\n\nHer backstory fell into the sex and dangerous men categories, and using her experience with Ned it wasn't hard to talk earnestly about the life she had led before coming to the facility, even if she had left out the last six months of it. She tried to divorce herself from the fact that she was in love with one man and planned to marry him if he still wanted her after this. She had been informed that she was on the pathway of a Kept, because that is where she could engage in classes and training for deportment, elocution and etiquette, as well as the usual protocol instruction that the household staff received.\n\nShe had been immediately befriended by a sweet-seeming young woman they called Nymph. She claimed to be a nymphomaniac with Daddy issues. She hooked up with an older man on the Sugar Babies website, and when he was done with her he had dumped her barely recognisable body in an emergency room and left. Cat had liked her honesty and enthusiasm for the program they were on, and on days when she missed Matteo and the life they had only just started together, Nymph made her smile and live in the moment rather than becoming blue. She was here, and she had to make this work, not just for herself, but for Matteo.\n\n\"Jane, Jane! Come sit with me!\" Nymph called out as she entered the cafeteria section of the floor they lived on.\n\n\"Let me get some breakfast first,\" Cat laughed.\n\n\"I got you some already, come and sit with me,\" Nymph said excitedly. Cat looked at the tray beside Nymph filed with the things Cat would normally have chosen for herself and smiled.\n\n\"Thank you,\" she said, taking the seat beside her friend.\n\n\"Something is going on today. The nurses are acting weird, and the Masters are here talking to the doctors,\" she indicated a small group of men in the far corner of the room watching the women as they entered and had breakfast together.\n\n\"I know I haven't been here as long as you, but that probably just happens from time to time. It makes sense that they would want to know who is going to go to the training facility eventually,\" Cat said carefully. If Nurse James had been right, she would be going there today.\n\n\"I know, but I haven't had anything done or taken a test in two days, so I am thinking I am the one going,\" she nodded. \"I can't wait; living like a nun here has given me a case of the sads that I'm having trouble getting over.\"\n\n\"Seriously, this is you when you're sad?\" Cat laughed.\n\n\"Well, no, not really, but I am seriously bored,\" she sagged. \"I need sex, and if not that then a change, Jane. Don't you? You can't possibly like being bound up in this contraption every day.\"\n\n\"It's not much fun, so I hope you're right and we all get a change of scenery soon.\" Cat popped a strawberry into her mouth and chewed. Each of the women from their wing also agreed that they had a feeling something big was happening today. The murmured conversation was rife with speculation, some good and some bad, as Cat quietly ate her breakfast of yoghurt and muesli and a plate of fresh fruit. She'd barely finished the last bite when Nurse James came to escort her to see the doctor. She pulled a quick \"I don't know\" face at Nymph and let herself be led away.\n\n\"I thought I told you that the brace wasn't required today?\" Nero addressed James as they entered his office.\n\n\"I must have missed that memo,\" he turned toward Cat with a smirk. \"I'll remove it for you.\"\n\n\"I knew you like torturing me with this,\" Cat hissed under her breath.\n\n\"We still need to address your slouch, and if your head drops again you will find the brace is back,\" Nero lectured Cat. \"This is a less intrusive lighter weight posture brace for your shoulders. You will wear it during your training until your posture improves.\" He held up what looked like a bunch of straps toward James once he had removed the metal and plastic brace that has kept her so rigidly straight for the last four days.\n\n\"You should be able to manage this yourself once you get used to it,\" James instructed as he helped her place the loops over her shoulders and straightened the elasticated straps that crisscrossed her back before pulling the wide band around her ribs and buckling it in place just below her breasts. \"Very nice,\" he murmured, running his hands over the elasticated straps that ran down the sides of her breast and had the effect of pushing them together and out from her chest. He looked almost regretful as he helped her replace her casmisk.\n\n\"Thank you, James, you can go. And ensure Jane's belongings are sent to Mistress Hella's wing of the new building, please,\" Nero commanded, making James look up at him sharply. He knew very well what the implications of being sent to the new building meant, and while he had been tormenting Jane he hadn't considered that she would actually enjoy being tortured.\n\n\"Of course. Goodbye, Jane, and good luck on the next phase of your training,\" he smirked and left the room.\n\n\"Thank you for everything,\" Cat said with a sickly sweet smile, and waited until the door was closed before turning her attention back to Nero. \"What was that look he just gave you?\" she asked politely.\n\n\"The new building is purpose-built for practitioners of BDSM and all that the lifestyle may or may not entail. It is a facility built to test a girl's limits and whether she is able to use her safe words wisely or if, in fact, despite our rigorous assessment, is masochistic to the point of endangering themselves and their partners. Your friend, Nymph, is one such creature, and Matteo has concerns about how much you would endure for him before using a safe word. He has asked that your limits be tested by a woman rather than a man, so you will be sent to Mistress Hella, along with Nymph, who also has some issues to work out where a Mistress would be the best teacher,\" he explained in detail.",
        "\"You think I have Daddy issues like Nymph?\" Cat gasped.\n\n\"In some ways,\" Nero said enigmatically, and held up his hand as she was about to protest his assessment. \"Everything, even a simple blood test, has been met with questions, compromises, negotiations, and in some cases outright arguments. In short, you are a brat, and anything where you can't make a clear choice for yourself is met with this type of behaviour. \"You will learn that there are times where you must simply do what you are told without the drama.\" His voice had deepened to an almost growl, and his tone was an authoritative command that made her sit back and think about what he was saying.\n\nShe could hear Matteo's voice in her mind complaining, \"Why can't you just do what I ask without arguing for once!\" She had to acknowledge Nero's words, so she tried another tack.\n\n\"I've never been with a woman, or even been attracted to a woman before,\" she said quietly, still stinging from the rebuke and not wanting another one.\n\n\"That matters not. This is not a dating club here; this is a cold, clinical assessment of your capabilities. You have a man who loves you and wants you back better than before knowing what your limits and kinks are, and that you can be trusted to remain safe when a scene becomes overheated,\" he lectured.\n\n\"A clinical assessment,\" she rolled the words around in her mind.\n\n\"Just as your assessments here in the hospital wing have been,\" he nodded. \"I will continue to monitor your health and well being, Marcus will oversee your deportment and etiquette, and my brother, Francesco, will oversee Hella's training for you. We three will be the only ones who know your true identity and why you have come here. If you have any problems and issues you will speak to one of us immediately. Do you understand?\" He demanded.\n\n\"How will I do that? Will I ask Mistress Hella to call you?\" she asked.\n\n\"There is a panic button built into this collar which you will wear for the remainder of your time here. The emblem at the front is designated to show that a member of the current sitting table of the Battaglia has shown an interest in offering you a contract once your training has been completed. The panic button is beneath the insignia at the front, and the clasp is a simple swing joint,\" he completed the show and tell by standing and moving behind her to place the decorative collar around her neck.\n\n\"Addictions to the endorphins that come from the merging of pleasure and pain can be even more dangerous when the adrenaline of the fight or flight response kicks in. We will talk often, and you must be unscrupulously honest about how you are feeling both emotionally and physically,\" he went back to his lecturing tone. \"My brothers and I will let no harm come to you here, but we can only do that if you are honest and trusting.\"\n\n*****\n\nMatteo found that after the initial chafing of settling into life with Ricco's constant presence that he enjoyed having him close by. The scene with Jacobi hadn't gone the way he had expected after the initial accusations. When Matteo had come to Ricco's defence he had seemed to swallow down his anger and disappointment and accept the situation. He sat back thinking about it and waiting for the storm to erupt. He had the impression that Jacobi could only hold down so much stress and disappointment before exploding.\n\nRicco had moved his office into the office beside Matteo's executive suite with the intention of making it a more permanent second executive suite if this trial continued on beyond a week or two. Lucca, who had joined the company after graduating with an environmental engineering degree and begun to learn the business from his brother, had vacated the office for Ricco without any rancour. He spent more time on the road between projects supervising the project managers and understood there was little choice for his brothers. He also knew that, regardless of where his office was located, he was rapidly becoming Matteo's go-to man for running the company when he was off-site.\n\nDuring the last few days, Matteo had some hard conversations with several of his brothers about the possible futures that awaited them. Lucca would be stepping up to take a bigger role in his company, and even the youngest of his brothers would begin helping to manage the horse stud they were so fond of, with the help of the men he already had in place at the facility. He needed to know that if he had to leave the security of his family, rather than just threaten to, that the business he had built would remain successful for his brothers.\n\nStefano had come through the surgery, but he was healing slowly, and complications had arisen that had worried both the medical specialists and their family. He knew Roberto and his uncles were making decisions about their own lives and expecting him and Ricco to do the same. So he was not making any secret of the fact that he was making preparations to hand over most of the running of his business to his managers. Regardless of whether he left the family or became the leader of it, these decisions needed to be made, because in the short term he planned to spend a lot of time with Cat building a home and family of their own.\n\nHe had seen firsthand how stressed Joshua Donati had become trying to be in control of everything and everyone in his life. Matteo was determined to start loosening the control he had maintained and guarded over the last two years when his work had become his life. Meeting Cat had turned his life inside out and upside down. His fathers' had seen him fall for her and instigated plans of their own. He wondered briefly about their accidental meeting and realised fairly quickly that there was no way they could have engineered the meeting. Both he and Cat had both decided to go to Queensland that weekend independently of any outside influence.\n\n\"Ready to go?\" Ricco sauntered into Matteo's office.\n\n\"Yeah, they're moving him this morning, I think, so I doubt there's any rush, they probably won't let us in any way,\" Matteo grumbled. \"We'll take Knox. Parking there's a bitch during the day.\"\n\n\"Sure,\" Ricco shrugged. One of the perks of living with Matteo was access to Knox and Lisa, who were good people who seemed to truly care about not only Matteo but his family. He particularly liked Knox and had struck up a tentative friendship with the man.\n\nBy the time they made it to the hospital, Stefano had demanded yet again to go home, and a frazzled looking Theresa wrung her hands as nurses and orderlies rearranged his room in a myriad of ways while the older man barked orders at them.\n\n\"Looks like he's feeling better today,\" Ricco noted with a wry smile.\n\n\"Give the nurses a break, Papa, Ricco and I can move anything else while we're here, just try and relax,\" Matteo said. \"Thank you for all your help, we'll buzz if we need anything else,\" he dismissed the grateful looking hospital staff.\n\n\"You can't just come in here and start ordering people around,\" Stefano grumbled.\n\n\"Neither can you. You're a patient, these people work for the hospital, not for you. They aren't your personal staff,\" Matteo grumbled back, but his voice held the smile he was suppressing at seeing Stefano regaining his strength. It had been more than a little disconcerting seeing his Papa looking frail and old.\n\n\"Where's your brother? Have you given up already? You swore on my life, remember?\" Stefano continued to grumble in his bad mood.\n\n\"He's trying to calm Mama down from the nervous breakdown you have given her this morning. What the hell is wrong with you, old man?\" Matteo gave his father a hard look.\n\n\"I want to go home!\" he snapped.\n\n\"Well, if that was your way of sweet talking Mama into helping you with that, it was an epic failure,\" Matteo chuckled.\n\n\"No one will tell me anything in here,\" he grumbled.\n\n\"What do you want to know?\" Matteo asked.\n\n\"Everything! Get Cosimo in here!\" Stefano demanded.\n\n\"We can't all stop what we're doing just because you decided to pull an attention-seeking stunt,\" Ricco said walking into the room. \"Just give him a call. Or do you need to see him face to face?\"\n\n\"They took my phone away from me!\" Stefano practically yelled, as yet again he couldn't do as he wanted. \"I'm not a child!\" he snarled at Theresa, who stood in the doorway.\n\n\"Yell at Mama like that again, and you might find yourself in time out like a child!\" Matteo growled.\n\n\"I'm still your father!\" Stefano turned his anger on his son.\n\n\"Yes, but you are being impossible, Papa. You just had lifesaving heart surgery, and you are about to undo all the surgeon's hard work unless you calm the hell down. Now tell me what it is you want to know so desperately?\" Matteo said in a calmer voice.\n\n\"Not knowing what's going on with the family is causing him the most stress,\" Theresa put in. \"I've told him what I know, but he doesn't believe that the world, as we knew it in our house, has practically stopped because Roberto and I have been here the whole time. We couldn't use our phones in the intensive care unit, the doctors haven't told us otherwise for in here,\" she indicated the machines.\n\n\"Why don't you go downstairs and call Cosimo, Mama,\" Ricco said. \"We're here now. You can take a break.\"\n\n\"Maryanne will go with you,\" Jacobi said, appearing at the door. \"Papa is obviously feeling better if he can scare the staff again.\"\n\n\"Great, another clown to add to the circus,\" Stefano grumbled.\n\n\"I'm glad you're feeling better,\" Jacobi walked in and kissed his father's cheek. \"I guess that means you can release these two from their trial and things can go back to normal now?\"\n\n\"You weren't so worried about things being normal for your brother when you took off for Europe without considering him at all,\" Stefano accused. \"For someone who claimed he was ready to share his wife and his life with his brother only weeks ago, you were quick to leave him behind when it suited you.\"\n\n\"That's not how it was, and it's a moot point now anyway, as you have made so clear,\" Jacobi shrugged.\n\n\"He didn't abandon me, Cobi told me he was going,\" Ricco jumped to his brother's defence.\n\n\"After it had been decided, no doubt. I don't believe either he or Maryanne included you in the conversation when they decided on this babymoon,\" Stefano challenged his son. \"Nothing had been decided for either of your futures, we only wanted Alessandro's life acknowledged instead of written out of your version of the family history. We merely pointed out that you were not the second son and that you assumed too much. We have also had similar conversations with Matteo, in which his assumptions have been challenged, and instead of running away in a self-indulgent tantrum, he has not only accepted his own trial but sent the woman he loves to the Battaglia.\"\n\n\"The woman he loves?\" Jacobi raised an eyebrow at Matteo before turning to Ricco. \"You never said anything.\"\n\n\"Now is not the time for this conversation,\" Ricco said quietly.\n\n\"Now is the perfect time for this conversation,\" Stefano argued. \"Tell your brothers how you really feel, Enricco.\"\n\n\"No, Papa, it's not. You can't always bully us into doing what you want, you won't like the consequences if you continue to try and force your will on us,\" Ricco sighed. \"Take out your bad mood on someone else. Stay if you want, Matt, I'll be in the waiting room.\"\n\n\"Take the goddamn watch off, and I'll drive you home,\" Jacobi said incredulously. He had never seen Ricco lose his temper or talk back to their fathers the way he had just done.\n\n\"No! Unlike you, I am a man of my word, and I swore to wear this for as long as was necessary!\" Ricco said in a harsh voice, then threw up his hands and groaned as if he couldn't believe he had said that to his twin, and walked out of the room.\n\n\"Someone want to tell me what that was about before I go find him?\" Matteo looked at Jacobi and Stefano.\n\n\"Ric and I will sort it out later,\" Jacobi said.\n\nOnce in the waiting room, Ricco turned on his phone to check for messages. As soon as he turned it on it came to life in his hands with an unknown number.\n\n\"Hello?\" he answered cautiously.\n\n\"Ricco? It's Cat,\" she felt a wave of relief as, finally, someone answered their phone.\n\n\"Cat, what's up? Is everything alright?\" Ricco frowned. He hadn't thought she would have phone privileges during her trial.\n\n\"They are moving me from the hospital to a training facility, and this will be the last chance I have to talk to Matteo. He's not with you, is he? Are you at work? Can you find him for me? His phone is off, and I'm worried now,\" she spoke rapidly as if she had very little time to talk.\n\n\"We're at the hospital with Stefano. Talk to me while I find him. Are you okay?\" He asked.\n\n\"Yeah, I'm fine. It's so good to hear your voice, I'm a little homesick. How's Stefano?\" She asked.\n\n\"He's grumpy and being mean to everyone, which means he's getting better,\" Ricco chuckled. \"Don't go anywhere, hang on just one minute, okay, I have to get him out of the room. We can't have phones in there or Stefano will steal them.\" Cat could hear a murmured conversation and the phone being handed over.\n\n\"Hello?\" Matteo answered the call Ricco had passed him cautiously, not knowing who it was.\n\n\"Matt,\" Cat breathed into the phone and felt her whole body relax. \"When your phone was off I thought all sorts of things. I'm sorry, you will have a few panicked messages. Luckily Marcus had Ricco's number handy.\"\n\n\"Kitten,\" Matteo sighed, echoing the relief in her voice. \"I miss you more than I thought possible. Are you okay? Nothing is wrong, is it?\" Worry crept into his voice.\n\n\"They're moving me from the hospital to a training building today, so I won't be able to contact you again for a while, and I just needed to hear your voice,\" she said with an obvious smile. \"I miss you so much, it's not nearly as much fun being woken up early if you're not there.\"\n\n\"I feel the same way. Ricco is staying with me, and it's not nearly as much fun hauling his lazy butt out of bed in the morning,\" he chuckled.\n\n\"Matt?\" Cat took a deep breath. \"I'm being trained with the Kept, they said you knew and asked for a female trainer?\"\n\n\"I don't like the idea of you with someone else at all, and it seemed the better option,\" he admitted.\n\n\"Better for you, maybe,\" she said quietly. \"I'm not sure I can do that, you know... with a woman. I don't want to fail or let you down, but I'm just not sure I can do it.\"\n\n\"Kitten,\" he said in a commanding tone after hearing the anxiety in her voice. He knew she wouldn't have bothered to mention it to him unless it was seriously freaking her out. \"I understand this isn't easy. It isn't easy for either of us right now, but I want you to try. I will talk to Marcus about your limits and just testing out a Mistress, but you need to at least try for me, Kitten. Can you do that?\"\n\n\"Yes,\" she whispered petulantly, making him smile as he imagined her face as she gave in to him.\n\n\"Is Marcus with you right now?\" he asked.\n\n\"No, I am with Sir Nero,\" she said with only slightly more volume than her whispered yes.\n\n\"Let me talk to him, Kitten,\" Matteo commanded. He then spent a few minutes explaining why he couldn't just give in to her and that Marcus could use his best judgement if having a Mistress train her was pushing her limits too far. He spoke to her briefly again, reminding her that he loved her just the way she was and to be honest with Marcus about how she was feeling during every stage of the training.\n\nIn the week they had together since Valentine's Day, he had realised that when he was kind and giving she argued and negotiated more than ever, and if he was commanding and had specific expectations for her she seemed to revel in meeting those expectations and the praise he gave her when she was successful. When he ended the phone call, he turned around to find Ricco staring at him intently.\n\n\"This, we will talk about tonight,\" Ricco said in a deep, unhappy rumble.\n\n*****\n\n\"Who knew a simple waltz could be so complicated,\" Cat said as she tried to take in all of the steps Marcus was patiently teaching her.\n\n\"This is a Viennese waltz and is different to just shuffling around the dance floor,\" he explained and tapped his hand in the middle of her back to remind her of her posture. \"When we are done you will walk, eat, speak and dance as if you were born to the royal court,\" He said encouragingly, but had to admit she was not particularly coordinated or well-balanced. \"You will become the perfect hostess and be able to converse with people from wide and varied backgrounds on a range of topics.\"\n\n\"I danced with Matteo once, and it was easy to follow his lead. Why do I have to learn all this?\" she asked, not in complaint but out of curiosity.\n\n\"Because in your life you will dance with a great many people, and not all will be as gifted at leading a partner as Matteo Vitali,\" he chuckled. \"I believe Nero's assessment of you was correct. You are not a brat in the traditional sense of the word, but you do not do anything easily, not even things you want to do, do you?\"\n\n\"I do the things I want to do,\" she rebutted his words, looking up at Marcus, and he could see the questions forming in her mind.\n\n\"Not one thing we have done here have you come to with an open mind and less than ten questions,\" he scolded her. \"Some you even ask twice, changing the phrasing as if you are looking to catch us out in a lie. You need to trust me and my colleagues, Jane. Everyone you encounter in this facility will be scrupulously honest with you. Shockingly so, in some cases.\"\n\nThe music ended, and he spun her away from his body, watching her form in the high heels. Her posture still needed quite a lot of work if she were to become less clumsy, but at least the back brace was helping, to some degree. He kept hold of her arm and led her away from the other dancers in the class before she could become distracted by Nymph, who had already met with Mistress Hella while he had begun his etiquette classes with Cat.\n\nUnlike Peri, Cat had no influential teachers or friends to help her overcome a lack of social graces. While Peri was at the lower end of the middle classes growing up with a single mother, Cat had been more than poverty stricken growing up in the lowest of social classes. He tried not to compare the two women, but having an outsider rise to the rank of Mother of a table was unheard of until Peri, and now, only two years later, there was Cat, and, truthfully, Marcus wasn't sure, from what he had seen so far, that she was up to the challenges she would face. Peri had an inner strength that was obvious. Cat was a conundrum for him so far. She seemed anxious and out of her depth, but when she was pushed she always rose to the task before her, yet she would attempt to negotiate, question, and attempt to make a task easier or more palatable by arguing, if only subtly.\n\nThe three brothers would often meet to monitor her progress and come up with a strategy for fast-tracking her through training that could take six months to a year for a girl with a similar lack of education and breeding. Nero thought her more than capable once she learned to trust them and accept their authority, Francesco was waiting for Hella's initial report before he could decide if she understood the seriousness of why she had been sent here.\n\nHe watched her as she came to sit with him in the Atrium where tea had been laid out for them. She sat demurely with her knees together to the side of her chair and her feet crossed at the ankles beneath her chair. He had to explain several times why this was the preferred posture for a lady sitting before she had adopted it. Peri, being a natural submissive, had just accepted everything he had asked of her without concern. Catriona Leone, on the other hand, seemed to constantly be testing the necessity of everything he asked of her.",
        "Once again, he considered Matteo's words to Nero, explaining why he couldn't just give in and change his mind, even though he doubted she would have asked unless it truly bothered her. She needed to know that, even though he was miles away in a different city, he was still in control and still cared about everything she did and experienced. Pushing her too hard could cause her to run, but not pushing her hard enough would breed resentment from her and she would top from the bottom, so to speak. Training this girl was going to be a delicate balance, and Marcus smiled, wondering what Hella would make of her, not knowing her true identity.\n\n\"Tea?\" he offered, picking up the teapot.\n\n\"No thank you, I am a coffee addict, but I never enjoyed the smell or taste of tea,\" she smiled softly.\n\n\"I'm sorry, there is no coffee today. Fresh lemonade perhaps?\" he indicated the jug with his free hand.\n\n\"That would be nice, thank you,\" she said politely. She had learned that Marcus was the host of the afternoon tea times, and, as the guest, she waited for him to offer and then pour her the beverage she had accepted.\n\n\"I hope I'm not late,\" a female voice sounded close by, and Cat turned to watch a woman walk towards them. She took in the messy blonde hair that sat around a heart-shaped smiling face and dangled into wide pale blue eyes. She was quite short and slim, and even though the loose top and skirt seemed to hang off her, she looked elegant in a dishevelled way. She reminded Cat of Reece Witherspoon, in a cute blonde kind of way. Cat unconsciously breathed a sigh of relief. Their guest couldn't be the dominatrix, Miss Hella, she was supposed to meet this afternoon. This woman looked fun and kind and not at all like her image of a Domme.\n\n\"Jane,\" Marcus said formally. \"I would like you to meet my cousin, Hella.\"\n\nCat froze in the act of standing and reaching out to shake the woman's hand, her eyes widening. \"Heh, hell... hello,\" she stuttered, unsure of whether to use her name or not at this first meeting.\n\n\"No need to stand on ceremony, Pet. Sit and enjoy your lemonade,\" she leaned in to kiss Marcus on the cheek before taking a seat of her own.\n\n\"Tea?\" Marcus offered as if nothing was amiss, and watched as Cat struggled for a moment before remembering how to sit when she was with him in this room.\n\n\"No Thank you, but I will have some lemonade, that looks refreshing,\" she smiled. \"Now, Jane, Marcus thought that it might be nicer if we met while he was here to look after us, which makes me believe you are a little anxious about our interview this afternoon.\"\n\n\"I... um, interview?\" Cat asked, still not quite marrying this sweet-seeming woman sitting across the table from with her image of a Mistress that dominated girls like her. She certainly didn't fit the picture of a leather-clad dominatrix that Cat had in her mind's eye.\n\n\"Of course, Pet. We have to get to know each other before we can start testing your limitations,\" she smiled kindly and reached over to pat Cat's hand gently. \"The training to be a Kept is a long and slow process that starts with an interview, and some get to know you time.\" She accepted her lemonade from Marcus and took a sip. \"I have the information from your recruitment officer and your time in the hospital, of course, but there is nothing like sitting down and talking with a new pet to get to know her properly.\"\n\nShe'd just come from Nero's office where she had read his file on Jane Bennet and asked the usual questions. The fact that Nero and Marcus had shown an interest in this girl's training made her question who she was and why she was here, but she kept her suspicions to herself. When she reported to Francesco, she would test the waters and see what she could find out. If he, too, showed an obvious interest in this girl's training, she would know for sure that something was up and make a decision then about how this would go.\n\nThis woman looked and sounded so sweet and cute, despite using the word limitations and calling her pet. Cat was simultaneously disappointed and relieved by the woman's appearance and stared at her, lost for words. She didn't seem intimidating, even as she spoke of the training she would do with her, yet there was an air about her that told Cat she was not a woman who could be negotiated with or tolerate excuses and arguments.\n\n\"Jane, dear, drink your lemonade,\" Hella said sweetly, but Cat blinked hearing the undertone and realised she had been staring. She blushed, lowering her eyes as she picked up her glass, taking a sip of the home-made lemonade.\n\nThe trio engaged in over polite small talk that centred on them asking Cat questions to get her to talk and relax, until, finally, Hella smiled sweetly at Cat again before addressing Marcus.\n\n\"I think we girls will be just fine this afternoon, thank you, Marcus,\" she said, dismissing one of the most powerful men in her family as if he were a staff member.\n\n\"I'll let Francesco know to check on you later,\" Marcus said in a voice that told of his displeasure, but not rebuking Hella openly in front of Cat.\n\n\"If you think it's best, but there is no need,\" she dismissed his remark. \"Come, Jane, I will show you where my office is for our future appointments.\" With those words she stood and walked away, not looking back at all as she expected Cat to follow her without hesitation.\n\nCat looked at Marcus, who merely tilted his head and watched her, saying nothing, so she got to her feet and followed Hella, hurrying to catch up with her quick steps.\n\n*****\n\nRicco gave Matteo the cold shoulder for the remainder of the day. He immersed himself with work, and any time a member of his family tried to engage him in a conversation he immediately shut it down and went back to the files he was working on. A week ago, he had believed that it was possible to have everything he wanted in his life, now he wasn't sure he wanted any of it anymore. He wanted to go out to the house on the hill and just be alone to think, but the promise to wear the watch and stay with Matteo hung heavily on him, and he wouldn't break his word, he couldn't, just as he couldn't have broken his commitment to Jacobi when Cat had left him.\n\n\"Alright, get your shit together, we're going out to a job site, there's been an accident. Whether you're talking to me or not, we have to go, now,\" Matteo said, stepping into Ricco's office looking agitated.\n\n\"What happened?\" Ricco asked, his mood forgotten as he worried for his brother. Accidents on job sites were never good for those involved, or for the business. This time it was Matteo who was silent and pensive as Knox drove beyond the speed limit to the work site where the accident had occurred, and Ricco left him to his thoughts, knowing that they would get all the answers they needed when they arrived.\n\nThe accident wasn't as bad as it could have been because of the stringent workplace health and safety rules Matteo insisted on for his company. The ambulance was already in attendance, and the man who had fallen after being knocked by a steel girder being hoisted by a crane was being examined. His leg was broken in several places, and his hip was possibly fractured. He had damage to his shoulder, and a possible head injury was also being investigated, but it seemed his left leg and hip had taken the brunt of the fall.\n\n\"He had been wearing headphones instead of the regular earbuds. He shouldn't have been up there in the first place, but the headphones must have negated the sirens that go off whenever the crane is in use. He didn't see it coming until it was too late, and the wind was rocking the cables pretty hard,\" Aimee filled Matteo in as he walked through the site to where Martyn had gathered most of the workers and his assistants were gathering statements.\n\nIt took them the rest of the afternoon to sort of the drama and speak to the police. From all reports, it was an accident where a combination of worker fault and weather conditions combined to make it unavoidable. Ricco was satisfied that the company wouldn't be held accountable, and Matteo was unconcerned by the union representative who spouted rhetoric and threatened to lead the men in a strike against unsafe workplace practice. He treated his employees well and knew the man would get no traction.\n\nMatteo's concern was for the man and his family, if he had one, instructing the project manager to continue paying the man until his compensation claim came in. By the time they left the site, Matteo was still seething that an accident like this could have happened on one of his sites. The investigation would show where the fault lay. Even the video footage taken by a few of the nearby workers who were yelling to warn the man would vindicate him and his team, but he knew once the media found out there was little chance of hushing up the accident as he could with social indiscretions in his family.\n\n\"I'm starving,\" Ricco said as they climbed back into the car in the early evening. \"We both missed lunch, let's go to Jericho's place.\"\n\n\"You're always starving,\" Matteo rolled his eyes.\n\n\"Not my fault, I have a high metabolism,\" Ricco grinned.\n\n\"Yeah, food would be good,\" Matteo said, sounding exhausted. \"Then maybe you can tell me what's up with you and Cobi and I'll answer any questions you have about the phone call you overheard this morning. Otherwise, we may as well give up this trial now, because there's no point if we can't talk about the stuff the matters.\"\n\nRicco grunted in acknowledgement as he climbed into the car and gave Knox directions to a quiet restaurant he preferred, and once again fell silent. He considered Jacobi and the argument they had before he left for Europe. Still, Matteo was right. If they couldn't be honest with each other, how could they possibly hope to get through this trial successfully?\n\nRicco was greeted as on old friend at the restaurant, and even though they were obviously early for the evening shift of the restaurant, they were shown to a quiet booth and given menus. Ricco ordered without looking at the menu, and Matteo nodded that he would have the same. He didn't want to waste time reading through the variety of meals instead of having the conversation they had to have.\n\n\"Cobi blames me for the trip to the Papillo and the loss of the chair,\" Ricco admitted with a shrug. \"We both said things that are hard to come back from and forgive each other.\"\n\n\"Details,\" Matteo said, giving him a hard stare. \"How the hell is anything Papa does your fault?\"\n\n\"The way Cobi sees it, I shouldn't have been dating at all and just living like a monk to give the impression that Maryanne and I were developing a relationship of our own, but any fool could see that she treated me no different to any of our brothers. Papa encouraged my relationship with Cat and warned me not to get caught up in Cobi's ambitions, because nothing could be certain about the future, but I'd been living the lie for so long...\" His voice petered out, and once again he shrugged.\n\n\"You loved her,\" Matteo nodded, meaning Cat.\n\n\"I didn't admit it at the time, but, yeah, and I let her go because it wasn't fair to either of us. Not the position I was in or the position I put her in. I guess that had festered for a while, because when Cobi blamed my dating Cat for the loss of the chair, I told him what a selfish bastard he had been in great detail. I also told him how I really felt about the fact that he gave me little choice and no time to get to know Maryanne before he proposed and announced their engagement,\" he paused as the waiter brought a bottle of the red wine he always ordered here.\n\n\"I thought as much from what Papa said at the hospital this morning,\" Matteo said as their wine glasses were filled.\n\n\"I want what everyone wants, a loving relationship and a family. I don't want a Kept and acting the part of being part of their lives when they've never included me in anything. I was hoping, because Cat and I already had a relationship of sorts, that it would be easier for you and her, but you have made it clear that it won't. You'd rather leave the family than see her with me, despite the fact you know we've already slept together!\" Ricco sounded angry and frustrated. \"Worse than that, you're training her as a Kept?\"\n\n\"That's fair,\" Matteo agreed, not denying anything he said. \"Let's say, for shits and giggles, you and Cat remained together and you admitted you loved each other and planned to marry, then Papa gave you the same ultimatum as me. Would you be generous as to share the first real love of your life with me?\"\n\n\"I always knew I would have to share, and in my mind I already am,\" Ricco stared at Matteo. \"By the time I realised just how wrong I had been to let her go, Cat had already met you. I knew I had no chance to make amends and get her back, but I know she still cares about me, on some level, and I still love her.\"\n\nMatteo fell silent as he considered his younger brother, the truth would hurt him, he knew, but at this point honesty was the only thing that could save their relationship from becoming resentful and nasty. He was trying to work out how he would say what needed to be said when Ricco spoke again.\n\n\"After everything she's been through, you sent her for training as a Kept? Why would you do that?\" Ricco shook his head disbelievingly.\n\n\"Shit, where to start with this conversation. Believe it or not, it's what Cat wants and needs,\" Matteo said, and looked his brother in the eyes as he said it, trying to convey his honesty. \"There's a long story behind it, and I'm not sure you're ready to hear it.\"\n\n\"I'm not going anywhere, and like it or not we're stuck together like Siamese twins at the moment, so neither are you. We may as well leave nothing unsaid tonight if we have any hope of moving on together, or if we decided to call it a day and give up playing Papa's games after everything had been said,\" Ricco sighed. \"Truthfully, I'm tired of being the third wheel to you and Jacobi and the women you love.\"\n\n\"Alright, then let's start from the beginning when you first met Cat, and I'll carry on after your break up. No holds barred, brutally honest retell of the last year that she has been part of our family in one way or another,\" Matteo said. \"It will make sense why you need to relive your story when I tell you mine, trust me.\"\n\n\"Let's see, it was May last year when Frankie convinced Vanessa to hire Cat as a corporate artist for the new building where you had her decorating some of the offices,\" Ricco began. Over the course of the dinner he detailed the relationship he had enjoyed with Cat, including the breakup, and then the on again and off again meeting before the final meeting at Frankie's where she had stopped what they were doing and walked out on him and made plans to leave town.\n\nMatteo knew most of it from Cat, and Ricco's story was not very different from what he knew. He added a few little comments that Cat had told him to let his brother know that he was aware of the time they spent at his house on the hill, as well as her perspective of the breakup and how she felt at the time. He explained the hurt and embarrassed she felt because she believed he thought her not worthy of his family. He then began his story from the moment she fell into the Donati apartment where he had been staying. He was honest about the fianc\u00e9 contract, and her reaction to his name and their ultimate break up, because once again she didn't feel good enough for him, and her plans to run away again.\n\n\"You see the pattern here, right?\" Matteo asked before moving on to talk about their trip to the Kimberley's and his return and subsequent pursuit of Cat. \"It was David who made me wake up to myself. He likened me to Ned, and threatened me,\" he chuckled. \"So I gave her space and put up with her delays and prevarication until she returned to the city, and then I showed up and wouldn't leave until we talked with total honesty.\"\n\n\"The night you tried to kill her in one of Lorenzo's cars?\" Ricco asked with a small chuckle.\n\n\"She was never in any danger,\" Matteo groaned. \"I was in control the whole time.\" Rico chuckled, but kept eating his meal, waving on Matteo in his retelling of his story. Matteo talked about Pete and his suspicion that he had been grooming Cat, as well as his offer to oversee her trial for her rather than letting their fathers or Zio handle it.\n\n\"You said no, obviously,\" Ricco said with obvious approval of his brother's actions.\n\n\"Pete, and many of the Donati family, answered all her questions about the tables, as well as gave her information about all of us. Bianca was a fountain of information, apparently, and between her and Pete, Cat became fascinated with the staff, particularly the Kept, and those that lived as a submissive. We had lunch with Pete, and he brought his Kept to meet Cat, making it even more real for her,\" he said.\n\n\"Fascinated, how?\" Ricco frowned.\n\n\"Originally, she said it was because she couldn't understand why someone would sign away years of their life to a family,\" Matteo said. \"At this stage, though, our relationship was built on honesty, and I could tell every time she pulled away from me, so we talked in depth and she admitted vanilla sex was nice. Do you want to know what she said about your sex life?\" he asked, letting his brother know the answer was there if he wanted it.\n\n\"Brutally honest is fine with me at this point,\" Ricco said, putting his fork down and pushing his plate away, picking up his glass of wine. They were well into the second bottle now.\n\n\"She said it was soft and sweet and loving, but she never managed to get the same highs she had with Ned,\" he paused as Ricco choked on his wine that the brutal ex-boyfriend who raped and beat her gave her better sex than he ever had.\n\n\"She said I was rougher and had more control, but, again, she never reached the same highs. She wanted to try a dominant-submissive sex life like she'd read about, in of all things, Fifty Shades. Later on, I found out she read some online stuff and had seen a few things, but that was what she asked for in the beginning. We talked about it a lot before I gave in and, even then, I gave her so many opportunities to change her mind. I started out going easy on her, but,\" he sighed. \"You should see her like that, it's an amazing transformation.\"\n\nRicco was stunned to silence and sat taking in what his brother was saying silently.\n\n\"After that first time, she told me she had thought she was broken, that Ned had broken something inside her so that she couldn't enjoy soft sweet love-making. She had been embarrassed that she wanted more and craved that sort of treatment, and having that sort of relationship with me, and seeing how happy it made me as well, seemed to change something profound in her.\" He tried to explain.\n\n\"She thought there was something wrong with her? I made her feel that way?\" Ricco asked incredulously.\n\n\"After that first time, she tried to run again when I questioned how happy and relaxed she seemed. She believed I would think badly of her or treat her like the whore Ned constantly told her she was. She had convinced herself for so many years that she shouldn't like the pain and being treated that way, that she couldn't quite believe there was a safe and sane way to enjoy it with someone who loved her, regardless of her needs. She was panicked and went into fight or flight mode again,\" Matteo admitted.\n\n\"I see the pattern again,\" Ricco nodded.\n\n\"The thing is, and what became blindingly clear that night, was that when I am the nice guy who loves her and will give her anything she asks for, she is constantly arguing and negotiating every little thing I ask. Yet when I am in control and demanding, she accepts what I am saying and does as I ask. I call her Kitten when I expect to her do what I am asking, which is what you heard this morning,\" he came to the point of everything he was saying.",
        "\"Wouldn't it be better to test her limitations yourself, training her to your own way of doing things?\" Ricco asked, accepting that submission was something she wanted and needed in her sex life.\n\n\"That is not my choice, but I do have influence over it. The thirteen forced the issue of Cat being sent to the Battaglia. After what happened to Nik and Peri there, it was thought best to disguise her identity and have her go through with a group of recruits under an assumed name. As far as I know, only Bruno and Marcus know of her real identity. Marcus told me that for her to have the etiquette, elocution and social class profile they desire she must be on the Kept track. So I asked for a female trainer. That phone call this morning was her trying to negotiate that decision with me,\" he admitted.\n\n\"So, you're fine with a Domme fucking the woman you love with a strap-on, but you'll leave the family rather than let your brother into your relationship, even on a superficial level?\" Ricco said, his tone holding an angry edge.\n\n\"I never said that. What I said was that I would leave rather than see you marry Cat. I will be her husband; I won't fade into the background at public events like Dante Donati does. He says he's happy though, and claims he wouldn't have it any other way, but I have tried to imagine it, and I can't. I want to marry that woman, and I will jump through as many hoops as needed to make that happen, but I won't let you or anyone else marry her instead, regardless of the reasons,\" he said with conviction.\n\n\"Okay, so let's say it's a perfect world and you get the chair and I am named Oracle,\" Ricco said slowly. \"Would you allow me to pursue an intimate relationship, not just with Cat, but with you, a true triad leading our family into the future?\"\n\n\"I think that's a question for when we get home. This place looks like it's getting crowded,\" Matteo indicated the hovering waiters. They'd arrived early and been lingering over the food as they had their in-depth conversation.\n\n\"Give you time to formulate an honest answer, you mean,\" Ricco said, throwing some notes on the table to cover the bill and getting to his feet, grateful that Knox waited for them outside.\n\n\"If it helps, Cat knows about the triad and said if it were you she would accept it,\" Mateo smirked.\n\n\"It helps, but at this point in time that means nothing unless you can accept it,\" Ricco said quietly. \"Jacobi said all the right things, but when it came down to it he kept putting off allowing me any time to get to know Maryanne properly on my own terms, and she never seemed interested in knowing me on a deeper level. I was just supposed to live like a monk and be grateful. I won't do that again.\"\n\nMatteo nodded his understanding and followed Ricco from the restaurant, considering all that had been said. If Ricco had been more honest with Cat about what he wanted, and she'd been more honest with him about her needs, they may have stayed together and he would never have met her. His brother was a good man, and he deserved a real relationship, and the fact that he wanted that, not only with Cat but with him as well, made the impossibility of the situation seem less so.\n\n***** "
    ],
    "authorname": "xelliebabex",
    "tags": [
        "brothers",
        "training",
        "trial",
        "mistress"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-15"
}