{
    "title": "Where the Lines Overlap Ch. 10",
    "pages": [
        "\"Yeah Mom, I don't need you to come cook for me,\" I said into my BIC, rolling my eyes at my mother even though she couldn't see me.\n\n\"Are you sure? Is Taron's cooking good?\" she asked.\n\n\"Taron doesn't cook Mom. The droid does.\"\n\n\"Like machines know how to cook with love.\"\n\n\"Don't tell that to a droid, or they'll squirt lubricating oil into your food,\" I said. I heard my mother laugh over the call.\n\n\"Well, if you're sure. I'll see you then.\"\u2028\n\n\"I'm sure Mom. Bye.\"\n\n\"Bye,\" she replied as the call ended. I chuckled to myself, shaking my head at my mother. Ever since I had moved back to the city centre a few days ago, my mom had been mothering me to no end. My dad says she's just got a taste what it's like without me and suddenly went into overdrive when I came back. \n\nI leaned into the couch as I closed my eyes. I had finally gotten the last of my boxes unpacked and now I was fully moved into my new home. Or should I say, our new home. Yep, Taron and I moved in together. \n\nI stared around the living room and smiled. I liked our house, but I liked saying that even more. Our house. It wasn't huge like the mansions that Taron or Alena lived in, but it wasn't the standard two story natal residences either. It was a moderately size bungalow, which seemed just right for two loving boyfriends. \n\nIt's been around a month since the whole fiasco with the moving and all that. The reposting in itself took close to three weeks to finalize. There were a thousand and one forms to sign and read through. Everyone had been involved. Will, Taron, Alena and even Jay, my previous boss. It was a long process, but eventually my reposting was approved and that's when I moved back to the City Centre. It was also the same time Taron asked me to move in with him, which I, of course, gladly accepted.\n\nThe sound of the door opening brought me from my thoughts as I looked over to see my lovely boyfriend walking into the house. \"Hey,\" I said, smiling at him as I hung my head off the back of the couch.\n\n\"Hey beautiful,\" he said, bending down and kissing me.\n\n\"How was your day?\" \n\n\"Really? Have we really become one of those couples already? I only expected that after a few years of a relationship,\" he said, coming around the couch and plopping down next to me. \n\n\"Meh, as long as we're a couple, I don't care what kind of couple we are,\" I said.\n\n\"Touch\u00e9. But your brother was exceptionally annoying today,\" he sighed.\n\n\"What happened this time?\"\n\n\"He and Alena keep flaunting their relationship in everyones faces. Its pretty sickening to be honest. Like seriously, PDA non stop kind of couple,\" he said and I grimaced at that. I never liked couples who excessively displayed their love in public, and imagining Ken as one of those people weirded me out to be honest. Taron saw my expression, a similar one on his face. \"I know right?\"\n\n\"I still can't believe they managed to keep their relationship a secret from everyone,\" I said. You know when Ken had supposedly confessed his undying love to Alena in a spur of the moment thing? Well, turns out that I had been played like a violin. Unbeknownst to all of us, Ken and Alena had been having a secret relationship, around the same time that Taron and I had gotten together. Remember when I said that I could read Ken like he could read me? Well, I was apparently wrong. So wrong.\n\n\"Yeah. Alena, I can see being able to hide it, but your brother?\" \n\n\"Oh believe me, he pulled it off. He gave me the impression that he was hiding his feelings the whole time, and I believed him.\" \n\n\"But I'm glad he did though. If he didn't, you wouldn't have confessed to me either,\" he said. I blushed. I mean of course I told him what went down, and even if I didn't, Alena and Ken were bragging about it so much he would have found out anyway. \n\n\"I do love you though,\" I said.\n\n\"I have no doubt about that,\" Taron said, climbing over and straddling my legs. Now you may think that in the month that we've gotten back together, we've been fucking like rabbits, but thats not really the case. I only moved back a few days ago, and I've been so busy with everything that we just didn't have time to have sex. \n\nThat's not saying that we didn't have sex though. We did, once, back at sector 76 a few weeks ago. It was great, like the last time at Taron's house, but I realized that I still couldn't touch him without having some sort of panic attack. Of course, that was unacceptable in my mind. I loved him, and I needed to be able to pleasure my man. Hell, I wanted to be able to pleasure my man. I had been practicing too, slipping my hands underneath his shirt when we slept together, intertwining our legs, all to get comfortable with my skin on his.\n\n\"So, if you don't want to be the old couple type, do you want to be the sex all day type?\" Taron said seductively against my neck. His breath tickled my skin and sent goosebumps racing across my body. \n\n\"That sounds good,\" I breathed out, wrapping my hand around his waist.\n\n\"It's been what, two weeks?\" Taron asked as he sucked on my earlobe.\n\n\"Too long. That's all I know,\" I said, as I felt my eyes close, just enjoying the feeling of his lips on me. Taron chuckled against me, the vibration traveling through his chest into my own. Taron's arms were around my neck, his fingers weaving through my hair. I've missed this. Missed him.\n\nThe way his fingers threaded throw my hair, coupled with the soft sucking of my earlobe, Taron had me growing hard in my trousers. Ever so often, Taron's fast growing bulge would brush up against my own, an involuntary moan escaping my lips at each touch. I wanted to touch him, to feel him underneath my fingertips, but I didn't want to ruin this moment. I severely needed him, and I didn't want to risk stopping what he was doing with an unexpected panic attack.\n\nTaron understood my unmoving hands though, taking control as he trailed his hands down my chest. His fingernails lightly scraped down my pecs, feeling this through the fabric of my shirt. His mouth had left my ear, returning to attack my very impatient mouth. My need had reached a point that I wanted him to move faster, but as usual Taron took his time, being the sensual lover that he was. \n\n\"Can you...move faster?\" I breathed, trying my hardest to increase the pace of our kisses. He wasn't having it though.\n\n\"You'll like this better,\" he smirked, continuing with his slow ministrations of my mouth. I couldn't argue though, knowing that his deliberate speed was all in an attempt to increase the high of my orgasm. I would have normally gone along with him, knowing full well the pleasure he would give me if I was patient, but this time was different. The need I had for him was almost painful. \n\nOut of pure need, my hands moved on their own accord, snaking their way around his waist. My fingers slid underneath his shirt, running across his hot skin. I expected the nausea to start forming in my stomach, but to my pleasant surprise, it didn't. I didn't know what was different this time, but at that moment I didn't care about the how, only interested in the absence of it. \n\nI pulled him closer, bringing his body flushed against mine. I could feel his throbbing dick against my own, to which he ground against. I gasped in pleasure, reveling in the feelings that shot through my body. I brought my hand up, pushing his shirt up. He broke the kiss for a second to allow me to fully remove the piece of clothing, before he quickly tore mine off as well.\n\nHe looked down at my body, seeing the lust in his eyes as he took me in. I blushed, embarrassed under his scrutiny, and yet aroused that I was able to make a fine specimen like him want me that much. He trailed a single finger down from my throat, down the middle of my pecs and between the ridges of my abs. He stopped at my finger, his gaze coming back to my eyes. I could see he wanted me, and I smiled knowing that I wanted him just as much, if not more.\n\n\"Like what you see?\" I teased, giving him a cheeky smile. He didn't reply, instead bending down and taking a nipple in his mouth. I took a sharp intake of breath at the sudden motion, electricity shooting from my nipple straight to my crotch. \n\nOnce again, lust controlled my movements, my hands running up and down his hard muscled back, lightly digging my nails into his skin, which only cause Taron to moan against my chest, the vibrations causing my dick to jerk in my pants. My hands slid past the waist of his jeans, noticing that he wasn't wearing any underwear which only made me more aroused. I grabbed each globe of his ass, squeezing them in my fingers, loving the feel of his round butt in my hands. Still, no nausea.\n\nAt this, Taron stopped though, his head jerking up to meet my eyes. He looked confused and I knew exactly why. I had never touched him anywhere remotely close to being below his waist since 'The Event' and he was probably shocked that I was now doing exactly that. \n\n\"You okay?\" he asked, worried that I was simply pushing through my fears. I wasn't. \n\n\"Never been better.\"\n\n\"How?\" he asked, probably surprised of the sudden change. I was surprised too, to be honest.\n\n\"Don't know, don't care. I'm not gonna be questioning it now. Right now, I just want to feel you,\" I growled.\n\nAt this Taron jumped off of me, pulling me off the couch and to our bedroom. He moved with haste and I could even sense slight panic in his body. Not from the fact that I could touch him, but more from the possible transient nature of my lack of panic. He didn't know if this was only temporary, and he was almost desperate in having this experience. \n\nWe entered our bedroom before he let go of my wrist, marching over to our bed and throwing himself down on it. Laying on his back, with arms and legs outstretched, he looked at me seductively. \"Take me,\" he whispered, unbuttoning his jeans, exposing the slight tuft of hair that peaked out from underneath. \n\nI growled, jumping on top of him. I could now feel the same desperation that he had just moment before. My fingers pulled at his jeans, swiftly pulling them of his muscled legs, his rock hard dick snapping back against his pelvis. At the same time, I kissed the skin on his torso, trying to cover every area of his chest and abs with my kisses. His dick nestled in the nook between by pecs, rubbing against it as I explored his body. \n\nI glanced downward, seeing the small pool of pre cum that was forming at the head of his member. I smiled, lowering myself down and breathing against his pulsating cock. I exhaled hot air onto him, seeing his dick jump at the feeling. I stuck my tongue out, licking from his balls slowly up his shaft, trailing my tongue against the thick veins of his dick. Taron's body shuddered underneath mine, his body reeling with pleasure. I smirked up at him, seeing him looking down at me with an almost pained expression on his face. At least he now knew how torturous he had been with me before, constantly going at such a slow pace. \n\nNot breaking eye contact, I wrapped my mouth around the head of his penis, not moving any further down his shaft. I kept my mouth there, my tongue not even touching him, simply applying very slight suction. He didn't break his stare either, but I could see him controlling his eyes from rolling into the back of his head. I darted my tongue forward, flicking his slit with the tip of my tongue, and he couldn't resist any longer, his head falling back into the pillow. I moaned in satisfaction and he shuddered underneath me, the sound sending vibrations directly to his dick still in my mouth. \n\nSlowly, I pushed my mouth forward, inching down his hard cock at an excruciatingly slow pace. \"Please, Kev,\" he begged, to which I ignored. \n\n\"You'll like this better,\" I mocked, repeating his words back to him as I pulled off of his member.\n\n\"No, I won't,\" he replied, total confidence in his voice. I arched an eyebrow at him, wordlessly asking him to explain himself. \"I know what I like, and right now, I like my partner to be more on the rough side,\" he said, blushing slightly. \n\nI took a moment to process this piece of information. I had never pleasured Taron before, so I couldn't have known about this. Turns out Taron had something of a fetish. I understood it though. Taron had made me realize that I preferred the slow and sensual type of sex, getting better orgasms in cases like that. Taron was on the other end of the spectrum, in which fast and hard sex brought him to even greater heights. \n\nOf course, I'm not saying that a person's sexual needs didn't change depending on the mood, but judging by the atmosphere in the room at that moment, I knew that Taron was positively begging to be taken.\n\nI smirked seductively at him. Oh, I can do hard and fast. Not even giving him any sort of warning, I lowered myself onto him, taking his entire eight inches into my throat in one motion. \n\n\"Fuck!\" Taron cried, as he gripped the bedsheets, his knuckles turning white. There was a satisfaction in being able to make him lose control like that. I kept him down my throat for a few seconds, my nose buried in his trimmed pubes. I moaned as I pulled off, not even giving him a chance to catch his breath as I dove back down on him. I did this multiple times, each time seeing Taron clench the sheets on the bed like he was going to tear them.\n\nSpit generously coated his dick as I worked him, forgetting being about anything other than dominating. Recovering whatever control he had left, I felt Taron slowly thrust into my mouth, fucking my throat as his hands gripped my hair. It wasn't long before I felt his thrusts start to waver ever so slightly, indicating his approaching orgasm, but I wasn't done with him yet.\n\nI pulled off, Taron almost immediately complaining before I pushed his legs up, exposing his hole to me. I lapped at it, dipping my tongue into his twitching rosebud. Licking one finger, I slicked up my digit and with one last lick of his eager hole, slid my finger into him. It entered easily, twitching around me and he clench and relaxed. \"Oh god,\" Taron muttered, his head thrown back in ecstasy. Spurred by his reaction, I added a second finger, scissoring him open.\n\n\"You're so tight,\" I cooed, twisting my fingers around his slick entrance, seeking the spot that would drive him insane. I knew I found it when Taron gasped. I smirked, adding a third finger. \n\n\"Now. I need you now,\" Taron pleaded. \n\nWithdrawing my fingers, I climbed back up his body, licking, kissing and biting him as I travelled upward. I stopped at his face, kissing him roughly on the lips, to which he responded with equal fervor. I reach for the bedside table, pulling out the tube of lube I had kept in there. \"Beg for it,\" I said, as I popped the cap of the lube and coated my dick.\n\n\"Give it to me,\" he said, staring me straight in the eyes. Behind the lust, I could also see the love he held for me, although it was hidden behind his unbridle need for release. With one thrust, I pushed into him all the way to the hilt, feeling my balls against his ass. \"Shit,\" he cried, once again throwing his head back. \n\nI waited for a moment, allowing him to adjust. He wanted me to be rough, but that didn't mean I had to hurt him. Five seconds, that's all it took before he nodded to me, urging me to continue. I did as instructed, pulling out before slamming back into him. Taron was breathing heavily, a layer of sweat now covering his muscular frame. \n\n\"Pound me, make me feel you,\" he urged as he stared at me with determination on his face. This was so different from the sex we have had before, so much more...primal, and it was erotic as fuck. \n\nI continued my thrusts, angling myself to hit his prostate. I knew I did when he exclaimed, \"Holy fuck, yes!\"\n\nI attacked his lips, sucking his tongue into my mouth as I continued to ram his ass. I reached for his dick but he swatted my hand away. He didn't need to say it for me to understand. He was close, but he didn't want it to end just yet.\n\n\"Stop,\" he suddenly said, and I stilled immediately, worried that I had hurt him. He pushed me off, causing me to slip out of him.\n\n\"Are you okay?\" I asked, getting more and more worried with each moment he didn't speak. Taron got off the bed, walking over to the wall. Halfway there he turned, giving me a seductive look, beckoning me to follow. \n\nI did as he asked, following him to the wall, where he placed his hands against it, looking over his shoulder with a sly grin on his face. I then knew what he wanted, moving behind him as I held his waist. My mouth bit down on his shoulder, while I once again entered him. He threw his head back onto my shoulder, giving me better access to his neck. \n\n\"Remember the first time we were in this position?\" he asked, as his hands grabbed my ass cheeks, pushing me further into him. My mind flashed back to the shower all those months ago. We were in the exact same position, but this time I knew for a fact that Taron was enjoying what I was doing. I wasn't raping him. I was making love to him. \n\nAt the thought, my thrusts increased in rhythm, hitting Taron's sweet spot over and over. He was moaning in pleasure, so loud I was pretty sure people outside the house could hear. I didn't care though, continuing to pleasure my boyfriend. The man I loved with all my heart. \n\n\"Oh fuck,\" Taron cried, as I brushed up against his magic button one last time before he started cumming, shooting ropes of semen onto the wall in front of him. Judging by the hands that never left my ass, I knew he had reached climax without touching himself. That completely arousing image, along with the pressure around my dick as he squeezed me with each pulse, had me spilling my seed into his hot hole. \n\nI breathed deeply as I empty my load into him, wrapping my arms around his chest to steady my now weak legs. \"I love you,\" I muttered between breaths.\n\n\"I love you too,\" he replied, moving his head back and kissing my cheek. We stayed like that for a while, coming down from the insane high that we had just experienced. My deflating cock soon slipped out of his ass, after which I turned him around and gave him a long kiss. \n\nHe smiled against me, slowly moving us backwards until we fell back onto the soft bed. Moving into a more comfortable position, I lay my head down on his chest as he stared at the ceiling. \"Keep up sex like that and you're a shoe in for the best boyfriend award,\" I said, remembering the little conversation we had back at my sector 76 house. \n\nHe didn't reply, instead looking thoughtful for a minute. \"What if...I don't want to be in the running for that award anymore?\" he asked.\n\nI raised an eyebrow, looking at him. His face showed no signs of a joke, and I wondered what he had meant by that. \"I don't follow,\" I said.\n\n\"I mean, we can still have sex, I'll still live here and I'll still love you, but...\" he trailed off.\n\nNow I was genuinely worried. Was he breaking up with me? It sounded to me like he wanted to be friends with benefits rather than boyfriends. \"But?\" I asked, asking him to finish his sentence, although I was unsure if I wanted to hear the rest of it.\n\n\"But...I don't think I want to be boyfriends anymore,\" he said, as he looked off to the side. My chest constricted. He was breaking up with me? After everything we had gone through, he was going to dump me?\n\n\"What?\" I muttered, the only thing that I could say at that point. I pushed myself away from Taron, sitting on my side of the bed, staring at him incredulously.\n\n\"It's not that big a deal,\" he said, throwing his legs over the side of the bed and getting up. I watched as he walked to our dresser, opening it and slipping on a pair of boxer briefs before resting his weight against it.\n\n\"Not a big deal?\" I whispered.\n\n\"Look, Kev,\" he said, turning from the dresser and walking over to my side of the bed. I followed him with my eyes, trying to control myself from hyperventilating. \"I just don't want to be the 'best boyfriend' anymore.\" ",
        "I looked up at him, my eyes starting to water as I felt the gravity of his words hitting me. \"Why?\" I choked out.\n\n\"Because, I'd much rather...\" he started and I started to fill in the rest of his sentence in my head. I'd much rather see other people. I'd much rather date an elite. I'd much rather not be gay. \"I'd much rather be the 'best husband' to you,\" he finished.  \n\nMy eyes furrowed at his words, looking up at him, not having really processed what he had just said. All I knew was that it wasn't anything I was thinking. \"What?\" I asked.\n\nI saw a smirk grace his features as he slowly descended down onto one knee, holding out a black box to me. In said box, sat a metal band, glistening against the light in the room. I looked from the little box, up to Taron's beaming face. \"Kevin Branson, would you give me the honor of becoming the best husband to you?\" he asked.\n\nI stared at him in shock for what I guess was close to ten seconds. In all that time, the smirk on Taron's face hadn't dropped. On the contrary, his smug look only seem to me getting worse. Finally regaining most of my senses, I didn't reply him, but instead gave him a shove, causing him to lose his balance and fall back onto his ass.\n\n\"You fucking asshole,\" I scolded. \"You scared me half to death you idiot.\"\n\n\"Is that a no then?\" he asked, rubbing his ass with one hand but still holding the ring out to me with the other.\n\n\"I feel like saying no, after that fucking stunt you just pulled,\" I shouted.\n\n\"You feel like saying no? So means you're saying yes?\" he asked, shooting me a cheeky smile.\n\nI rolled my eyes, lying back down onto the bed. \"Well of course it's a yes, regardless of the fact that you're an asshole.\" I heard Taron get off the floor, before climbing over me and sitting down on top of me. I grunted as he let his weight onto my abdomen. \"Fuck, you're heavy,\" I choked out.\n\nHe didn't say anything as he grabbed my left hand, slipping the titanium band onto my ring finger. He looked at it for a second, smiled, then climbed off of me back onto his side of the bed. Wordlessly, he lay down beside me and rested his head on my chest. \"I'm sorry for scaring you,\" he said, though I could still hear the slight chuckle in his tone.\n\n\"You'd better be. No sex for a week,\" I said.\n\n\"Meh,\" he replied, shrugging his shoulders. \"I went two weeks without sex the last time. No biggie. Besides, I get the rest of my life to make love to you anyway.\"\n\nI sighed, bringing up my left hand and examining the ring on my finger more closely this time. \"Firstly, why the sudden proposal? And secondly, that's got to be the worst proposal ever.\"\n\n\"For the first question, why not? I love you and I don't plan on letting you go ever again. Marriage seemed the next logical option,\" he said, smiling up at me. Did I think it was too fast? Maybe, but hey I loved him and personally, I felt like it was going to happen one day anyway. Why not now? \"As for the second statement, yes it probably was the worst proposal ever.\" He laughed as he said this. \"But bad proposal is better than no proposal. Don't act like you didn't like it.\"\n\nI scoffed at him. \"Didn't like it? I hated it. I seriously thought you were breaking up with me. It's a good thing I love you.\"\n\n\"I love you too,\" he said, kissing me on the lips. \"My husband to be.\"\n\nI thought about it. Husband. I did like that more than boyfriend. Okay, so maybe that wasn't the worse proposal ever. It would be a nice story to tell our kids one day, wouldn't it? Besides, I loved the asshole and he could have proposed to me in any kind of way and I would have still said yes. \n\nWhat can I say, love makes you stupid.\n\n\u2014\u2014\u2014THE END\u2014\u2014\u2014\n\nThere you have it guys. That's all folks. Tell me what you thought about it. Love it, hate it? \n\nTill next time guys! See ya"
    ],
    "authorname": "musicfreak",
    "tags": [
        "gay romance",
        "sci-fi",
        "science fiction",
        "hunk",
        "love",
        "self discovery",
        "moon",
        "young love",
        "rivalry",
        "friendship"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/where-the-lines-overlap-ch-10"
}