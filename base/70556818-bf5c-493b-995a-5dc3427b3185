{
    "title": "How To Talk Dirty To Your Lover",
    "pages": [
        "After writing Blowjobs for Dummies and How to Eat Pussy Like a Champ, these \u2018How To\u2019 articles are becoming habit forming for me!  However, I\u2019ve received some of the most wonderful, kindest feedback that a writer could ever ask for, and I\u2019m grateful.\n\nOne thing I\u2019ve been asked to write about \u2013 very often \u2013 is talking dirty.  The kind of erotic talk that heats things up in bed \u2013 on the floor, over the kitchen sink \u2013 wherever.\n\nI do understand the fascination with it.  Hearing is of course one the five senses, and along with sight, touch, smell and taste, can add to the excitement and enjoyment of having sex.  If you\u2019re into it, dirty talk \u2013 and mind you I don\u2019t think it\u2019s dirty at all \u2013 can make good sex better, and great sex down right memorable.\n\nIn the classic porn film, \"Talk Dirty To Me,\" starring the incomparable John Leslie, his dirty talk drives women absolutely wild.  They\u2019re out of control, fucking and sucking him, without really even knowing why.  It turns them on so much that even though they don\u2019t originally want him, they can\u2019t help themselves.  Does it really work this way?  With the right people and done properly, I believe it can.  So read on.\n\nFirst, I need to point out that although I\u2019ve had my share of experience, I don\u2019t hold myself out as an \u2018expert.\u2019  Then again, is there a degree one can get for dirty erotic talk?  I haven\u2019t seen it in any of the adult evening classes at the local college.  Like anyone else, my experience has been through personal trial and error, reading and hearing an awful lot of suggestions from literotica readers and sexual addicts such as myself and being a devout student of erotic human behavior.  So I guess, in a sense, I\u2019m as much of an expert as anyone else.\n\nBy the way, you\u2019ll notice I call it dirty \u2018erotic\u2019 talk.  In the future I\u2019ll just try and shorten it to dirty talk.  It\u2019s just that here in NJ, you hear dirty talk on the radio, at the deli, and especially in traffic, along with dirty gestures.  None of it is erotic.  At least I don\u2019t think it\u2019s supposed to be, unless \"that was my parking spot, you motherfucker\" turns you on.\n\nBefore we get started, a quick mission statement.  Why this article?  Done right, talking dirty to your lover can be a powerful aphrodisiac.  It can bring out hidden desires and fantasies in both men and women.  It can be hot \u2013 oh man, you have no idea how hot \u2013 and add an aspect to sex that kicks it up several notches.  I promise.  The rules are, there are no rules.  But I have some suggestions and observations that can get you on the right track and get you going.  After that, it\u2019s up to you my friends.  You don\u2019t want me there as a coach\u2026\n\nWhat is dirty talk anyway?  What is considered dirty?  Is it, \"mmm, that feels so good,\" or \"get on your knees and suck my cock you whore.\"  The answer is \u2013 both, depending on who\u2019s talking and who\u2019s listening.  One person\u2019s dirty is another\u2019s mild.  To yet another person, it\u2019s downright perverted and filthy.  This is important to keep in mind.\n\nOn one end of the spectrum, you have sex so silent that it could qualify for a covert operation behind enemy lines.  I think there are some concrete reasons for this speechless sex.  A) Either one or both of the parties feels uncomfortable or embarrassed about sex. B) Either one or both of the parties feels uncomfortable or embarrassed about any talking during sex because of upbringing, religious beliefs or what have you. C) There is a high level of inexperience. D) Nobody knows what to say or how to get started.\n\nThe remarkable thing about it, which always perplexes me, it that some of these men whose mouths are sewn shut during sex won\u2019t stop talking during a sporting event.  Their excitement is overwhelming.  They yell, scream and jump up and down when a touchdown is scored or a home run hit. And some of the women just won\u2019t get off the phone with their friends and family.  But get them in bed \u2013 wham \u2013 you shut them right up.\nThe middle ground would consist of some moaning and groaning, perhaps a little, \"yes\" or \"that feels good\" here and there.  These people clearly enjoy sex, and may benefit from this article the most, but don\u2019t want to or know how to take it to the next level.\n\nThe other end of the spectrum, God bless it, is when the lady expresses herself in a dignified manner such as, \"I want to suck your cock like a ten dollar whore,\" and the man replies \"That\u2019s right, baby, I want to taste the juices flowing from your cunt.\"  It\u2019s hot, tasty, salty sex.  My favorite kind, I\u2019d like to add!\n\nAny or all of these variations are fine, as long as the people involved are satisfied.  And if you want to get on this train, if you\u2019ve been looking for a way to add that extra ingredient to augment your sex life, read on.\n\nDodger\u2019s manager Tommy Lasorda was once asked, \"Did you ever think in your wildest dreams that you\u2019d be in the World Series?\" and replied \"My wildest dreams have nothing to do with baseball.\"  Well put.  \n\nThe point is that if your girl asks you to \"talk dirty\" to them and you say, \"Fuck me hard and long, I want to cum on your face, you slut,\" she may freak because what she expected to hear was \"I can\u2019t wait to be inside you.\"  If she says \"suck my cunt lips until I scream your name, I want to be your cock whore,\" he may be shocked, because to him, dirty is, \"Do me, honey.\"  In either case, expectation is far from reality and may be embarrassing enough to prevent either one from ever trying to talk dirty again.\n\nObviously, it would be better to have some idea of what the other person would like to hear before you say \"I\u2019m gonna spank your nasty ass \u2018til you squeal like a pig\" to a monastery candidate.  Before you begin to talk dirty to your lover, ask yourself, what kind of a person are they?  Are they easily offended by harsh language or do they swear like a truck driver (no offense)?  Do they appear to be open minded in other ways, about oral sex or different positions for example?  How do they like their sex?  Fast, furious and balls to the walls, or slow and tender?  This can at least give you some kind of gauge where to start experimenting.\n\nWarning - do not judge a book by its cover.  I\u2019ve known some girls who were demure and seemingly innocent at work or school.  But once the passions of desire had been stoked \u2013 they played with live ammo - pass the Vaseline, duct tape and batteries, we\u2019re having a party!\n\nIf your adventures in talking dirty start with your lover asking you to do it, ask them what they have in mind, what they\u2019d like you to say.  If this is too embarrassing for them, ask them to write it down.  I\u2019ve always been more comfortable writing than saying it, too.  I once knew a girl, wonder where she is now, who would leave me little notes in private places telling me what she wanted to do to me. It was a different kind of dirty talk, sure, but it got me fired up all right.  More on that later.\n\nYou can always start out slow.  No one expects to go from silence to waking the neighbors with your screams in just one night.  It would seem too labored, too artificial as well.  I believe it would be more natural to begin with light fare, such as \"yeah, that feels really good.\"  One of my absolute favorites is the simple, elegant and unfailingly hot, \"Oh God.\"  You don\u2019t get an \"Oh God\" unless your doing really well.  Maybe an \"Oh,\" possibly an \"Oh my,\" but when you get a nod the to Big Guy, you\u2019re on the right track.\n\nOnce you start out slow and comfortable, see how that goes, where it takes you, and decide to move on or not.  If you are the instigator, it usually follows that you begin the dirty talk, and your lover gets the idea.  If they don\u2019t, try asking them questions which will prompt a response, such as \"How does that feel baby, is that good?\"  Or, \"Do you like it when I do that?\"  Again, if you like the idea of dirty talk and want to make it a regular part of your sexual behavior, it\u2019s far better to start slow, even though you may want to blurt out, \"Your cock is so big I feel like I\u2019m being fucked by a horse,\" which I don\u2019t hear often enough for some strange reason beyond my comprehension,\" or even, \"spread those ass cheeks wide, doctor enema is coming in for a landing.\"  Outrageously dirty talk is wild fun, and can spice the hell out of a sexual liaison, but it can truly turn off the uninitiated, so be cautious at first.\n\nWhich brings me to another very important issue.  What you do in the bedroom stays in the bedroom.  It may be OK for you to call her \u2018your slut whore\u2019 when you\u2019re fucking, or for her to call you her daddy (oh baby!), but not back I the real world.  You do that and you\u2019ll spoil your bedroom fun in the long run.  Unless your lover likes it, leave it in bed.  She may want to be treated like a naughty little girl who likes to be punished in bed, tied up, blindfolded, whip out the vibrator and\u2026don\u2019t get me started, but you should separate fantasy from reality.\n\nJust to clarify a little further though, when I say keep it in bed, I mean keep it in the context of sexual situations.  I once had a girlfriend who would write little notes on cocktail napkins when we were out to a fancy dinner, \"When I get you home I\u2019m going to suck your cock until you cum in my mouth.\"  Waiter?  Check please!  A buddy of mine leaves explicit letters to his wife, and calls her during the day to tell her where they are.  By the time he gets home she\u2019s ready to rock the Casbah.  I know a young lady, and she knows who she is, who with one sentence on the computer keyboard can put a lump in my throat and my pants.  I can\u2019t see her face or hear her voice on the internet, but her desire comes through loud and clear.  Yours can, too.\n\nBut I repeat, you can call her during the day and say \"I miss my sweet little whore,\" or she can tell you she \"longs for her guy\u2019s meaty cock down her throat,\" when you\u2019re away on business and it\u2019s all great fun and in the right spirit of sexuality and desire.  Just keep in that way and in perspective.  It definitely doesn\u2019t have to be restricted to the bedroom, but there is still a time and place.  \n\nThis also means of course that your lover knows you mean no disrespect in what you say or write.  You may call her \u2018your cum sucking cock hound\u2019, but that\u2019s only in the realm of sexual fun and fantasy.  She probably doesn\u2019t want you to think of her as a whore in the real world, so let her or him know you understand the difference.\n\nI think it also should be said that dirty talk, like any other delicacy, can get old fast is overused.  I love a good steak, but not every night or I\u2019ll get sick of it.  If you talk dirty and take it to the limit every time, it\u2019ll lose its erotic value, which would be a shame.  Perhaps its best to save it for those times when sex is the menu for the evening, instead of a quick appetizer or late night dessert.\n\nOK, are you almost ready to get started?  Great.  Do keep one last thing in mind before we summarize.  Tone of voice is all-important.  Think of Minnie Mouse bellowing \"Fuck me with your huge little mouse cock, Mickey!\" in her squeaky little cartoon voice.  Does that turn you on?  If so, you may be related to Walt Disney.  \n\nYou can\u2019t use your daily student, motherly or business meeting voice.  It may sound like you\u2019re giving instructions.  \"Now stick that big cock or yours in me.  You ready to cum?  Good, then cum, I\u2019ve got errands to do.\"\n\nIn your sexiest voice, shaking with desire and passion, say something like, \"mmm\u2026your cock feels so good inside of me\u2026so warm\u2026you making me\u2026you\u2019re gonna make me cum so hard\u2026so hard, baby\u2026\"  Or if you\u2019re a guy, in your lowest, most measured tones it may be \"Oh baby, you\u2019re so beautiful\u2026I just love to fuck you\u2026to have my cock inside of you\u2026I love to watch your face when it\u2019s full of my cock\u2026I\u2019m so hard for you\u2026\"  Whatever the words.  Whispered in her ear, they\u2019re magic.\n\nAnd unless you are in fact whispering in your lover\u2019s ear, the best way to talk dirty to them is when looking into their eyes.  The hottest, most erotic words will have little effect if you look away to say them, as though you\u2019re shy or embarrassed about it. If you practically mumble them to the floor, you may not even be heard.  Speak up \u2013 we\u2019re all friends here!  Look your lover in the eyes and tell them you love what they\u2019re doing, or what you\u2019re dying to do to them or have them do to you.  Don\u2019t be timid, be proud!  Speak it, shout it, whisper it, but let them see and hear you.   Can you imagine how hot it is when your lady\u2019s face is near your cock as she looks up at you and says in her sexiest voice, \"mmmm\u2026I just love your cock\u2026I\u2019m gonna rub it all over my face and then tickle my tonsils with it\u2026I\u2019m gonna suck your cock until you beg me to let you cum\u2026\" This has got to add another inch to that erection!  Two if she\u2019s rubbing her tits all over it while she\u2019s talking\u2026there I go again.\n\nOK now, before we adjourn for some practice of our own, let me suggest that you do indeed practice on your own, at least at first.  The greatest speakers rehearse.  You do want to know what you\u2019re going to sound like, even to yourself.  So say some erotic lines out loud a few times.  Adjust your tone, your pace.  Just say it a few times until it sounds good to you, this isn\u2019t Broadway.  It will alleviate some of the jitters of trying something new.  And to me that\u2019s what good sex is all about, trying something new.\n\nI can practically hear some of you saying, \"OK fine, I get the picture, but what do I say, what are the actual words.\"  And no, I can\u2019t send you a recording.  But let\u2019s look at it this way.  Even taco sauce comes in mild, medium and spicy, right?  Sometimes you might feel like mild or medium, sometimes you want some hot spice.  It\u2019s the same with dirty erotic talk.\n\nMild would probably phrases like, \"mmm\u2026that\u2019s nice,\" \"feels so good,\"  \"yes\u2026yes, right there,\" \"Oh God, baby\u2026yes,\" \"I can\u2019t wait to taste you,\" \"I love what you\u2019re doing to me\u2026I love how it feels\u2026I\u2019ve been wanting you all day\u2026\" \"Let\u2019s make love until the sun comes up\u2026\" You get the picture, mix and match as you like.  These are erotic words that should not have the beginner choking on them.\n\nOnce you get used to the mild sauce, or saucy comments, you may want to get a bit more creative.  \"I love how your cock feels inside of me,\" \"Your pussy is so wet\u2026I love how my cock feels inside of you,\" \"Your juices taste so good,\" \"Your body is so beautiful\u2026 oh my God, I can\u2019t wait to taste every inch of you,\"  \"I love these breasts, I want to lick and suck them so hard\u2026\" \"Wrap your legs around me, I want every inch of me inside of you,\" \"I\u2019m gonna suck your cock now baby\u2026hold in tight,\" \n\nLet me just start breathing normally again for a minute.  There.  Now, you want spice?  You want to bring it home to papa?  Those who really like the salty stuff probably don\u2019t need my suggestions.  But hey, I\u2019m the writer here, indulge me.\n\nWhen you graduate to, \"Spread those cunt lips my sweet little whore, I\u2019m gonna slam you like Hulk Hogan,\" \"I\u2019m gonna suck your cock until every last drop of cum fills my mouth,\" \"Don\u2019t you dare cum until I give you permission,\" \"Suck my cock you little whore,\" \"Can\u2019t you fuck any harder than that? \u2013 be a man!\" \"I want to taste your seed\u2026cum on my face,\" \"Bend over baby\u2026you\u2019ve been a bad girl and it\u2019s time for your ass to pay\u2026\" now you know you don\u2019t need my words.  God, I do wish I could be there!  How about sending me a tape?\n\nMy friends, I mean it when I say that some girls, and guys, are so aroused by dirty talk \u2013 often to their surprise \u2013 they can\u2019t believe it themselves.  Imagine a girl who is the definition of proper at work, in the kitchen, at the gym, in church \u2013 whatever, but in the bedroom she likes to be called a \u2018whore\u2019 and have her \u2018cunt fucked hard by you\u2019.  Or the conservative business dude who likes to tell her to \u2018suck my cock like an ice cream cone until I tell you to stop.\u2019  It can be so very hot, and you may not even know this vista of opportunity exists until you try it at least on some level.  I sincerely hope you do.\n\nI wish you good luck, good health and good sex.  No matter what your age or sexual preference, live a passionate life and keep the spirit alive.\n\nI\u2019d love to hear your feedback.  It means a great deal to me, and I learn a lot from it.  If you liked the article, please take a moment to comment.  If you didn\u2019t, oh well to each his own, I hope you\u2019ll like someone else\u2019s better.  Peace."
    ],
    "authorname": "BatsandGlamour",
    "tags": [
        "dirty lover",
        "feels uncomfortable",
        "start slow",
        "sexiest voice",
        "sweet whore",
        "feels inside",
        "sex parties",
        "wait taste",
        "gonna suck",
        "dirty talk"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-talk-dirty-to-your-lover"
}