{
    "title": "The Chair",
    "pages": [
        " Authors Note: This story could fit into multiple categories. to prevent anyone from getting blindsided, it has some N/C overtones, some bondage overtones and other themes. It's meant to be erotic fantasy, so if you have trouble suspending disbelief it's probably not for you. Thanks to Blackshang and Cloudy for editing and impression reading.\n\n\n*\n\nCandice shuddered as she got out of her car. Her grandfather's old house always did that to her. The decrepit Victorian just looked like something right off the set of a slasher movie. \n\nThe old man was gone now, and with his passing, there had been the usual fights over his fortune. Webster had been a mean and creepy old bastard and his will had been his last chance to take shots at his grandchildren, all of whom had disappointed him in some way. \n\nHer cousin Tom, Webster's favorite to hate, had been left with two companies. It had seemed so surprising and everyone had thought the old man was trying to make amends right up until Tom discovered both companies were failing, were being investigated by the SEC and other governmental bodies, and were facing crippling class action lawsuits. When all was said and done, he would be lucky to get out with his shirt.\n\nHer cousin Christy had been left a lifetime supply of condoms and birth control pills. Webster's none-to-subtle hint she fucked around too much. And so it went. The old bastard had hit everyone. Except her. \n\nHer mother had been his favorite child, in as much as he liked any of his offspring. Candice had been kept carefully away from him. The few times she had been around him, she had always remained polite and quiet. The fact was, he gave her the creeps, and when she got older she always felt like he was undressing her with his eyes. Luckily, she had been transferred to the Tokyo office soon after graduation and had been out of the country for much of his last five years. \n\nSo she had missed the infamous blowup at the annual Christmas get together. The old man had gone off on everyone, from her mother to the great grandkids. Her \"flower-child\" aunt, Becky, believed the old man had been possessed by an evil spirit in the house. She had even gone so far as to try and have an exorcism done on him, much to the old man's annoyance.\n\nWebster Carpenter had been nothing if not vindictive and she wasn't comfortable here, even though he was two years in the grave. Still, the house and property were worth a cool ten million. His stipulation that she had to live there for a year had been a shock. She had hoped to just sell it without even visiting. Luckily for her, they had an office in nearby White Plains and she was able to get a transfer for a year. It would make for a hellacious commute, over two hours one way. Still, that seemed to be a small price to pay in the grand scheme of things.\n\nThe key the lawyer had given her turned easily in the old lock and the door swung open. As she expected, everything inside was coated in a layer of dust. It was just as she always remembered from her childhood, from the big portrait of her grandfather in the foyer, to the slightly run down appearance of the antique furnishings. She had hoped some of her relations would be on hand to help with the clean up, but the lawyer had dissuaded her from calling. Apparently, there had been a terrible row over the furnishings, and that whole side of her family wasn't speaking to her side. According to him, her cousins had resented the fact she was getting the house and furnishings. There was also the matter of the missing twenty five million. Apparently, cousin Rich thought it was in the house. \n\nThe police had arrested him twice for breaking and entering. The cousins had all contested the will, but Web had foreseen that. The executor had been empowered to draw off an annuity to fight the legal battles. The will was airtight anyway, so it had all been settled before she even returned to the states. \n\nCandice knew it was wrong to think ill of the dead, but she couldn't help but believe the will had been written for precisely that result. To sew discord. It would be just like the old man.\n\n<center>***</center> It took most of her week's vacation to dust, mop, sweep and polish. Removing her grandfather's brooding portrait from the foyer had been her first order of business. The bedding company had come on Monday to replace the mattress on the big poster bed. Candice had slept on the sofa rather than upstairs. A trip to town had produced new sheets, pillows, pillowcases, curtains and knick-knacks. She was really glad her time in Japan had precluded her from amassing a lot of junk of her own, as the old place was filled to overflowing with furniture as it was. She would have liked to sell some of it, not only to make room, but to give her some cash to buy a few things, but she was barred from doing so until the year was out.\n\nShe piled most of Webster's bedroom stuff in a spare room, and redid the master bedroom to be more open and cheerful. Candice also renovated the kitchen somewhat and the living room. She was used to apartment living, so she simply closed off the rest of the forty odd rooms. Her plan was simply to live in the three rooms while she tackled the others one at a time, carefully noting what was in them. She hoped to have some documentation on some of the pieces, before she was able to call the auctioneers in to get rid of it.\n\nEven with a new look, the master bedroom felt uncomfortable to her and she often slept on the sofa, especially when winter came and the big fireplace made it the coziest room in the drafty old house.\n\n<center>***</center>\n\nCandice woke with a start. She glanced quickly all around the room. Something had awakened her, but she was unsure of what, and felt chills along her spine. The old place was creepy, the old man had been creepy and she felt very suddenly like someone was watching her.\n\nShe had almost convinced herself it was her mind playing tricks on her, when she noticed a bookcase, near the fireplace was out of place. The books were still neatly lined up in rows, but the case itself seemed canted outward. Her curiosity overcame her trepidation, and she got up. She approached the bookcase, and then noticed it really was canted outward. Candice put her hand on the smooth wood and tugged. To her surprise, the bookcase opened outward on silent hinges, revealing a darkened staircase. \n\nShe wanted to investigate, but her fears were stronger than her curiosity, so she decided to wait until morning. Candice couldn't find any latch or catch, so she used a chair to prop the secret door open. \n\nThe next morning, armed with her trusty .357 magnum and a flashlight, she entered the small opening and descended the narrow stair after a thorough search reveled no light switch or overhead pull-chain. \n\nThe staircase opened out into a large, square chamber, about thirty feet by thirty feet. Unlike the staircase, Candice easily found a light switch and threw it. Subtle, indirect light illuminated the room. The floor was covered in a thick, shag carpet. The walls were unadorned, but paneled in a light oak that seemed to give the room a kind of warmth. In the center of the room, there was a strange chair, which appeared to be the only furnishing.\n\nIt was a massive piece, made of dark wood and sitting on a raised metal dais. The back was straight and upholstered in a soft, red leather. The arms were curiously shaped, but also upholstered in red leather. The legs were strange, Queen Anne legs, but also upholstered where one's claves would rest.\n\nThe metal dais seemed to actually be part of the chair now that she looked; the seat was bare metal, with only a round red leather pad to rest your ass on. She could see the outline of cubbyholes in several places, but she couldn't find any latch to open them.\n\nIntricate carvings of leering demons and ecstatic feminine faces decorated the whole thing. The arm rests ending in fiercely scowling dragon heads. The chair had a vaguely sinister feel to it and she gave it a wide berth as she investigated the only other feature of the room. This was a small, console with a big red button and six small, buttons in a row that reminded her of the push buttons on the old eight track player in Grandpa's car.\n\nShe tried all the buttons, but nothing happened. They had probably been attached to stereo equipment or something, she reasoned.\n\nAfter a thorough investigation, she satisfied herself that the room was just a harmless basement room, possibly her grandfather's Av room. Whatever had been here, it was gone now.\n\nShe cut off the light, ascended the stair and closed the door, hearing it click shut. Maybe she would discover the opening mechanism later, when she had the energy to worry with it. For now, she preferred it shut, even though she knew that was silly.\n\n<center>***</center>\n\nCandice awoke with a start. That feeling, that there were eyes upon her was there again, but as before, she saw no one in the room. She was about to close her eyes again when she noticed the secret door was standing ajar. She broke out in gooseflesh and the hairs on the back of her neck prickled. She stood and wrapped her robe tightly around her shoulders.\n\nShe thought she could detect a faint glow at the back of the stair, as if the lights were on downstairs. Grabbing the gun, she edged to the top of the stairs. There was no question now the light was on in the strange room.\n\n\"Hello?\" she called.\n\nSilence greeted her call, and she felt foolish for even trying. She was alone in the house, but try as she might to convince herself, she didn't feel that way. She edged into the space on the landing and peered down into the darkness.\n\n\"Hello?\" she called again. She had one foot on the top stair, when the bookcase slammed shut. Candice jumped, as the whole passage was plunged into darkness, with only the weak glow of the room lighting at the very foot visible. She pressed back into the corner and held her breath, the gun before her in her shaking hands. Nothing moved, there was no sound and after her eyes adjusted, she found it wasn't even all that dark. Annoyed with herself for letting her childish fears run away with her, she began pushing on the book case, but it was shut firm. \n\nShe searched for a catch or a latch or something that would unlock it, but after half an hour and pushing on every protuberance in the foyer, she began to panic.\n\n\"Breathe,\" she said aloud.\n\nNo one would build a secret door, which they couldn't open from the inside, she reasoned. If the passage only accessed one room, then the unlocking mechanism was probably located in the room. She remembered the strange console downstairs and actually laughed. Of course. The door probably could be locked and unlocked from down there electronically. That would explain both the console and why the door kept opening on its own. It was so old it was probably malfunctioning. It would also explain why nothing had happened when she pressed the button earlier, the door was already propped open at that time.\n\nReassured by her rationalizing, or at least, trying to be blase' about it in the face of her uncertainty, she started down the steps. At the bottom, she turned and passed through the small stone arch and into the room. As she thought, the lights were on, providing a soft, warm, indirect glow. She proceeded to the strange console and depressed the big button, but nothing happened. She hit it several more times, but still nothing happened. \n\nShe fought down her rising panic and tried to think. No one would miss her until Monday at the earliest. And even if someone came, they might never find her down here. She examined the console again. She depressed all six of the smaller buttons in their turn, but nothing happened. \n\nIn frustration she hit the big button again. She heard a whirring sound, and whirled, almost shooting blindly. The long wall, the one farthest from her was rotating. When it clicked shut, she was facing a giant television screen. When nothing further happened, she approached it, but it had neither button nor dial. \n\nAfter several minutes of investigation, she returned to the console and hesitantly pressed the big button again. Like magic, the television screen rotated back and the blank wall returned.\n\nWhen she depressed it again, the television screen rotated back into view. Candice examined the control pad again and realized the fifth button was still depressed. She pressed another halfway, until the fifth one popped out and then pressed the big button. Nothing.\n\nCandice depressed the sixth button, but nothing happened. She had expected that. She hit the big button and jumped as the screen flared to life and sound poured out of hidden speakers. The show was apparently a heavy BDS&M flick, with lots of theatric moaning and wailing. Candice actually smiled.\n\n\"Maybe you weren't such a stick in the mud after all,\" she said to the silent room and hit the big button again, which killed the show. \n\n\"But you were a luddite,\" she added, as she now recognized the console as working in a very primitive manner. You depressed a button, then hit the big button, like on a cash register. Realizing this she depressed the first button and tried it. The wall in front of the chair spun around, to reveal another big screen.\n\nThe second, revealed a closet on the back wall. It was a wardrobe and Candice wanted to investigate, but first she wanted to open the door.\n\nThe third opened a small, safe like cabinet in the wall above the console. Candice checked, but it seemed empty.\n\nThe forth button opened sliding panels in the roof. Chains, ropes, and even one of those black, free floating bondage chairs were slowly lowered. Additionally, two sections of the floor slid back and a large horse and Maltese cross both rose and locked into place with audible clicks. She noticed a big screen was also built into the ceiling, directly over the chair.\n\nShe went to the stairwell, but the door seemed to still be closed. Candice went and opened the wardrobe. Inside were whips, manacles, collars, tight latex cat suits with appropriate cut outs, masks, stiletto heels, handcuffs, bondage gear, and several varieties of vibrator and dildo, all neatly stored.\n\n\"Jeeze, Webster, you must have been some kind of freak,\" she said, shaking her head. \n\nAt the back of the wardrobe, she found another button, set into a square of brass, when she depressed it, a small bin, like a cash drawer, extended at about waist level. \n\nDepressing the button a second time closed the drawer, and a third opened it again. \n\nLeaving the wardrobe, she returned to the console. While she was examining it, she noticed the safe she thought had been empty, actually held a single sheet of paper. She pulled it out and examined it. It was a crude stick person diagram with few words. It showed the wardrobe and a stick figure.\n\n1.Locate button in panel B (back of the wardrobe) 2.Place clothing in tray. 3.Close drawer. 4.Locate Button C, lower right hand corner of console A.\n\nIt gave no indication of what this button would do. \n\n\"This is weirding me out,\" she said to the empty room.\n\nShe put the paper on the chair with her gun, then went back to searching for the button that would open the door. After several minutes of searching, she grew frustrated and felt her fears resurfacing. She glanced at the wardrobe, at the paper on the chair and shrugged. \n\nCandice took a deep breath, removed her sheer robe and pressed the button. When the drawer appeared, she placed her robe in it and pushed the button. The drawer closed, but nothing happened. She walked over and investigated the console, but no new button had appeared. \n\nShe returned to the wardrobe, depressed the button and it opened, revealing her robe. Candice felt silly, but took off her bra and panties and added them to the drawer, still nothing happened. \n\n\"Fuck,\" she said aloud, wondering if the electronics had failed. It would be just her luck. Then another idea occurred to her. Perhaps the sheer robe and underthings didn't weigh enough? She opened the drawer again and added one of the cat suits and a pair of spike heels. This time when the drawer closed she heard a whirring sound and a click. \n\n\"Bingo!\" she said excitedly, hurrying over to the console. \n\nThere, behind a slide away panel was a blue button. She depressed it and heard a soft hiss from behind her. She turned quickly, but could see nothing different. Depressing the button again did nothing.\n\nFrustrated and angry, she returned to the wardrobe and pressed the button. She felt small and vulnerable enough and wanted her clothes back. \n\n\"What the fuck?!\" she exploded when the button clicked but the drawer did not appear.\n\nShe mashed it several more times, but nothing happened.\n\n\"Piece of junk!\" she cried kicking it and hurting her bare foot in the process. She turned and started back for her gun, which was still sitting on the chair. When she neared it, she noticed a piece of paper, on the floor. Could that have been the sound she heard when she first pressed the blue button? She hurried over, to find a small slot, similar to those where a cash receipt would print from an old fashioned adding machine. Obviously, the piece of paper had come from the slot in the base of the chair.\n\nThe paper was another crude diagram. With a stick person and the chair.\n\n1.Sit down 2.Locate red button, behind panel X 3.Depress button\n\nShe examined the diagram and found that the red button was supposedly behind the carved dragon head on the right armrest. No amount of pushing or prying worked and it seemed to be totally solid and part of the chair. She shrugged and sat in the chair. Nothing happened at first, but after several tense moments, the Dragon's jaw opened and a small red button, mounted on a silver fixture extended. \n\nCandice shrugged and pressed the red button. From hidden apertures, felt lined, steel manacles snapped out, imprisoning her ankles and her arm. \n\n\"What the fuck? Oh shit.\"\n\nShe struggled and struggled, but no amount of pressure seemed to make any impression on them. She pressed the button again, and screamed curses at it, as the button slowly withdrew and the dragon's mouth closed.\n\nWith her free hand, she tried to find some way to open the manacle imprisoning her hand, but it was no use. Eventually the adrenalin wore off and she slumped. \n\n\"All right girl, you've got to think. Think, think, think,\" she said aloud.\n\nThis technology is ancient. Everything has to be just right. The wardrobe button failed, until the weight was right. She thought back to the diagram. The stick figure had been sitting upright, with both arms on the armrests. Maybe it wouldn't work, unless all the manacles had sprung? Her gun was on the floor, where she had placed it before sitting, but no amount of stretching would allow her to grab it, and even if she could, then what? She would be just as likely to hurt herself as free herself taking potshots at the manacles.\n\nCandice debated for a long while. Eventually, she reached a conclusion: she would have to let her other arm be captured. Before she actually did it though, she made herself mentally review, one last time. She did have a hand free, but without tools of some kind, she was held fast. Everything else in this bizarre room seemed to be triggered only with specific input. She could keep her arm free, but in doing so, it might never trip whatever device there was to get her out. \n\nWith a resigned sigh, she placed her arm on the other armrest. She didn't even jump when the manacle caught tight. She waited, but nothing happened. \n\n\"Shit,\" she exclaimed.\n\nA million wild thoughts ran through her head, but they were panic inspired and she eventually clamed herself. She found herself speaking out loud, as much to have sound as to keep things clear.",
        "\"They'll miss me at work by Monday afternoon. When Cindy can't reach me, she'll probably call the cops. Figure, twenty-four hours before I'm officially a missing person. The police will find me, naked, on the set for a bad S & M flick. Really cute, Grandpa Web, what did I ever fucking do to you?\" \n\nShe threw her head back and jumped when a metal collar popped out and secured her head to the high backed chair. That seemed to trip a relay and she heard several mechanical moans, groans and hisses, before the TV screen before her flared to life. Candice stared as the camera focused on Grandpa Web. Instead of the creepy, old man she had always known, he was tan, naked to the waist and had a big smile on his face. He seemed taller, less austere and twenty years younger than she remembered on her last visit.\n\n\"Hello Candy, my dear. I'll have to assume you are now seated in my chair and are probably wondering just what in the name of hell is going on?\" the image said.\n\n\"That's an understatement,\" she replied, although she knew it was just a tape.\n\n\"First things first, relax, you're in no danger. You'll be free in a few hours, and the way to open the door is by pressing all six buttons down and then hitting the big one. Also, there is nothing supernatural about my old home, at least, nothing I was aware of. If I can, I'll be haunting it,\" he said with a big laugh.\n\n\"The door is opened and closed by electric magnets and, if things have gone as I hoped, the random opening and closing eventually trapped you down here. Sorry for the games, but I couldn't very well ask you to disrobe and jump up on my chair, now could I?\"\n\nThe view panned back some and she saw Web was sitting at his desk in the study. She could also see a thick mane of red hair bobbing in his lap.\n\n\"This is my lover, Etta, by the way. She's busy, but I assure you she sends love and hugs. Now, to business,\" he said, clapping his hands together.\n\n\"Let's start with the basics. I made this tape the year after you left for Japan.\"\n\nCandice did some quick calculation, three years ago? That was impossible, Web hadn't looked this young and vigorous in the whole time she could remember him.\n\n\"I'm not the vicious old bastard you all thought I was. Up until my final year, I was a swinger and hosted bondage and discipline parties here. Why the act? The stuffy old clothes and perpetual scowl, makeup to make me appear pale? Good Question. Simply put, I busted my ass to make my fortune. I worked long hours, sweated out deals, paid my dues. Donna understood and was a full partner to everything I did. It was a severe blow when she up and died on me. I never forgave my kids for not showing some concern. Hell, Jack and Cindy didn't even come to her funeral.\"\n\nFor a long moment, she saw pain in his face, pain that was quickly controlled and replaced with anger.\n\n\"All the work we did together for those many lean years, before things improved. My kids chose not to learn from it, or to show any initiative. They just hung around like vultures, waiting for me to croak off, and married gold digging scoundrels. The grand kids were even worse. Not one of the whole lot has worked an honest day in his life. They've all spent their time living on credit, borrowed against the day I die and they get rich. Fuck 'em. All except you, that is. You went out and did something. Made your own way. Even when I was playing Captain Bly, you were always polite. And not the play nice to Grampa kind of polite of the rest of those ingratiating noaccounts. So I left you the house, the furnishings and you'll find twenty five million in bearer bonds in the safe when this is over. The lion's share of what I owned.\n\n\"I suppose you'll be wondering now why this elaborate trap, if I meant you no harm? Well, the answer is, I've wanted to fuck you since you turned eighteen. I wouldn't have ever acted on that impulse, but it was there. You're a very beautiful girl and you've got guts. That's sexier to me than looks. So I commissioned this room. The electronics you see are very crude, part of the trap. There are actually space age electronics to run most of it. I didn't want to hurt you or embarrass you, so there's a timer running on a separate circuit, hard wired to the mains, with a triple redundancy feature. In five hours, even if the rest doesn't work, you'll be set free. In case you're wondering, I'm telling you all this so you can relax and enjoy it.\"\n\nThe tape paused for a moment and Candice shrieked when the chair suddenly began to move. The legs slowly tipped up, until her legs were even with the seat. They then swung outward, inexorably pulling her legs open. At their widest point, they ceased pulling and pushed back, forcing her legs up. As this happened, the seat lay back, coming to a stop at a slight incline. She found herself in a position that was very similar to an ob-gyn table. It was slow and apparently pressure sensitive, as the motion ceased when she reached a point where she could go no further. She experimented and could move her thighs some, even doing a bit to close them, but her ankles were locked in place, and thus left her more or less vulnerable. \n\nThe chair whirred again and she felt the pad she had noticed in the seat rising, forcing her pelvis up. It stopped, and all was silent. Candice had never felt so humiliated, so open and exposed, so vulnerable. The screen above her head on the ceiling flared to life. Web was still getting a sloppy blowjob. She couldn't do anything but wait and wonder what was next. The chair began to whir and she heard a sound like the hose made when you were filling up your tires and there wasn't a good seal. It was coming from the base of the dais.\n\nShe watched disbelievingly as a strange machine slowly rose and locked into place between her legs. There was a large box with a wheel on one side. Belts ran from the wheel to a pair of smaller wheels, mounted on a vertical bar. A second set of wheels and pulleys could be seen, but little else. \n\n\"Well now, I hope you're nice and comfortable?\" her grandfather's voice boomed, startling her.\n\nWith a snort, the machine began to spray her lower body and legs in a fine oil. Candice struggled and tried to avoid the spray, but in no time her legs, pussy, ass, and stomach up to her breasts were thoroughly coated. \n\n\"Sorry for the inaccuracy, my engineers assured me there was no way to be more precise. Now, don't worry if you start to feel warm, the oil has a chemical in it that should start it warming up on contact.\"\n\nAs the now silent figure predicted, she felt her skin prickle and begin to warm. Soon she was flushed, her lower extremities suffused with a comfortable heat.\n\n\"Well, now I know you're wondering what's next. Afraid I am going to subject you to one of Grandpa's nastier traits. One I wasn't faking. I'm about to crow,\" he said, with a twinkle in his eyes.\n\n\"In a few moments, you're going to be witness to multi-million dollar technology. The very same technology that allows smart bombs to guide themselves into a target using TV cameras. I hired a couple of moonlighting engineers from Raytheon, and a couple of NASA boys. Wondering what it is? Well, wonder no more!\"\n\nAs his voice trailed off the machine began to sputter and hiss. Candice looked down and what she saw was so unbelievable, she was struck mute. The big wheel was spinning slowly and from the open end of the vertical arm, a fat, pink vibe was slowly being extended. It was attached to a long, gleaming steel rod. \n\n\"Oh no,\" she said aloud, starting to pull at her bonds. \n\n\"Isn't she a beauty?\" the old man's voice said. \n\nShe glanced back up to see him smiling. \n\n\"Now, that little beauty is headed for your ass. I do hope you've tried anal before, if not, you're in for a treat. I'll be signing off here for a bit. Like I said, I'm really bad about bragging and I want you to get the full effect.\"\n\nShe was still looking up when the picture switched suddenly from her Grandfather to a porno. It took her a few moments to realize the open woman she was seeing was herself!\n\n\"I call it the dildo cam. See the little green cross hairs on your asshole? If you move, the crosshairs move and the arm moves to adjust, so it stays on target. Cost me a bloody fortune, so I hope you appreciate the expense I went to.\" Candice looked down in horror, to see the dildo was moving closer to her. She shifted in the seat, glancing up, to see the camera adjusting. She glanced back down to see that the dildo was following the camera, moving to realign itself. \n\n\"Now, I know you could just keep shaking that ass, but eventually you'll tire out. Etta here wants to speak to you.\"\n\n\"Hello, Candy,\" a pleasantly twangy feminine voice said.\n\nShe heard a rhythmic slapping and assumed her grandfather and his lady friend were now fucking.\n\n\"Your granddad was hell on wheels, even at his age and I have to say, imagining you there in that chair is getting me hot. God knows I've had more orgasms in it than I can count. There's no escaping that little camera thingy, I should know, I was the test subject. Web wanted me to tell you this, in case you aren't experienced. It's best if you just relax; try not to tense as it's going in. The pressure gauge is sensitive, but it can hurt awfully if you make it bull its way past your sphincter. So just relax and enjoy it, it feels really nice once you get used to it.\"\n\nCandice was not a complete novice. She had tried anal once or twice and she knew the woman's advice was good. Still, this was so impersonal and...just plain wrong. She felt she needed to fight, to escape, but every time she moved, the camera tracked and the dildo followed. She considered waiting until it touched her and then jerking away. Surely it couldn't follow that. But if it couldn't follow and thought it was on target, would it just keep pushing? Possibly injuring her in the process? \n\nShe was still considering it, watching in fascination on the big screen when she felt the cold material touch her anus. Despite herself she jumped, but it stayed on target. Slowly, she felt the pressure build. Candice closed her eyes, took a deep breath and forced herself to relax. There seemed no way around it, so she determined to do all that she could to prevent herself from being hurt. Another spray of oil came, this one more concentrated on the vibe and her privates.\n\nThe pressure built slowly, and try as she might, she just couldn't make herself completely relax. The oil was apparently a very good lubricant, as she felt the vibe nose past her outer muscles. The machine remorselessly fed the dildo into her, oblivious to her groans and hisses. Her rear passage was lewdly expanded and she felt stuffed long before it finally came to rest. When she cracked open her eye, she saw that it was buried almost to the hilt inside her. The camera angle had changed; it was now an overhead shot, showing her body, from the navel down. The green crosshairs was now centered on a specific point near the base of the vibe. The machine whirred and she felt the entire arm shiver as something locked into place. The vibe slowly withdrew, until a second crosshair appeared near the tip. The machine shivered again and he heard another clicking sound. Candice grimaced as the thing slid slowly back into her.\n\nThe screen went blank a moment, and then came back to life. The man on the screen was an older gent, sitting in a wheel chair.\n\n\"Good evening, Candy. Your gramps told me to call you that. It's nice to meet you, such as this is. Web asked me to tell you a little about him. He promised me this would be unedited, and I know he's a man of his word, so I'm going to piss him off a bit,\" he said. \n\nThe old man's face grew far away, as if he was going back in time. Despite the fullness in her bowels, she found herself hanging on his halting words. \"I met Web at Paris Island, oh, I guess in forty-one. I know you don't know he fought in the war, but he was a hell of man back then. Tall, strong, headstrong and one hell of a hard charger. If old Web couldn't fuck it or drink it, he was damned sure gonna fight it. The men loved him, idolized him really, and for good reason. He was the bravest Marine I ever saw,\" he said, pausing as if unsure of what to say next.\n\nHe was silent a long while, before shaking himself from some distant memory. He smiled gently, but his eyes were misty as he continued.\n\n\"I don't have much time. They tell me it's Alzheimer's. I'd rather have gone out fighting. Anyway, your gramps was with me on Pelilu. Our squad started up a hill when a Japanese mortar round landed right in the middle of us. Our sergeant was killed and every one of us was wounded. The nips opened up then, with the most murderous crossfire you ever saw. Killed most of the company in a just a few minutes and here we all are lying in the open, too wounded to move. All except Web, he was hit in the chest, but the blast had thrown him down into a little defile. He was safe. I figured I had breathed my last when the crazy bastard comes stumbling back up the hill, grabs my arm and drags me back down with him. He patched me up, then went back. Nine more times he exposed himself to that crossfire. He got hit three more times, but he didn't slow down until he had pulled every man jack of us to safety. He won the CMOH for that. Got a silver star, a bronze star, a hand full of purple hearts too on Okinowa, but I wasn't with him then, took me two years to learn to walk again after Pelilu. There's a lot more I'd like to tell you, but I'm already over the time limit Web set for this. Hopefully, he'll let me make another for you. He thinks the world of you, always has. I know he don't show it much, but he's forever bragging about his little Candy at the VFW. Be good young lady and be proud of your gramps. He risked his life so that his buddies might live, time and again. I've got ten grandkids of my own, if it weren't for Web, I'd have died before I even met my Martha.\"\n\nThe screen changed again, back to her grandfather, who was vigorously fucking Etta from behind. \n\n\"Sorry for that, Ole Bill got to where he rambled a lot before he died. He beat Alzheimer's though, passed away from a massive coronary while he slept. Hope I go that easily. As you can see, Etta and I are having a blast, hope you don't mind, but I have another friend who will walk you through the next little bit. This is Caramel.\"\n\nThe screen faded out and back in on a tall, statuesque black woman. She was nude, except for a feather boa and a Mardi Gras mask.\n\n\"Well child, it's a pleasure to meet you,\" she said in a thick patois.\n\n\"Hope you're liking Web's pleasure chair. He said you won't see this until there's a vibe deep in your ass. Relax and enjoy it, sweety, I've spent a lot of time in that chair, and it just keeps getting better,\" she said with a laugh. \n\nShe tossed the boa and stood there, gloriously naked. Despite herself, Candice felt a little flutter in her tummy. Caramel was beautiful, with long gorgeous legs, a shaved pussy, flat tummy, big firm breasts and a wanton smile.\n\n\"Hope you like what you see. I've drooled over your pictures enough, I figured I would give you a good look. If you're interested, my cell number is in Web's Rolodex. Now that I've hit on you, let's go. In about a minute, you're going to get another view from the dildo cam. Just relax and hold still. It's real important that you stay still, because the machine is going to calibrate for your depth and if you jiggle it, it might end up set to too deep a stroke, and that would hurt you.\"\n\nThe camera faded out, then cut to another between her legs view. Candice had half expected to see some kind of strange interior view from the vibe in her ass, but instead, the machine came back to life. This time, the cross hair was centered on her vaginal opening. The machine began to hiss again and as she watched, the big wheel slowly turned. As it did so, a stout, long and heavily veined dildo in a very realistic flesh tone was extended on a second rod.\n\nWhen Candice realized she was going to have that one in her too, she closed her eyes and mouthed the word, shit. She had never tried a double penetration before and she felt how tense she was. She took slow breaths and tried to relax. She couldn't keep herself from watching the screen, and even then, she jumped when it touched her. Unlike the anal one, the wheel began to roll forward, then reversed itself. The screen had changed and she groaned when she saw the crosshairs was sitting only a quarter inch from the base of the dildo. \n\nShe realized quickly what the machine was doing. It was pushing forward a bit, then rocking back, then pushing forward again, but each time, the dildo was going forward a little more. In this manner, it slowly buried the faux cock in her quivering pussy. Candice found she was biting her lip, and she could feel sweat on her brow and between her breasts. She felt absolutely stuffed. Worse than that, she could feel herself getting turned on. \n\nShe felt the same jerk and clicking sound. With a hiss, the cock was withdrawn, until the second cross hair, centered on the bottom of the fluted head appeared. It clunked again and then slid back into her. The screen flared and Caramel appeared again.\n\n\"Well honey, how does that feel? Good, I bet. Nothing like some DP action to really get a girl's motor running. I've got a minute or two, so let me tell you about your granddad. I met Web in N'awlins about ten years ago. He was on a business trip and I was dancing in a topless cabaret. Web took an interest in me. Not just a sexual interest either. He asked about my family and when I told him I had two kids at home I was trying to support, he sorta looked at me hard. Web's good at reading people and he saw I was telling the truth. Upshot is, he gave me enough money to quit dancing and go back to school. Helped put my young'uns through school too. No reason for it. No explanation. Just the way he was. Web was always big on helping those who had the courage to try and help themselves, but I didn't find that out until much later. Well, my time is up, girl. If you ever decide you want to try a walk on the wild side, call me.\"\n\nThe screen faded out and when it faded back in, Etta was sitting on a bed in an upstairs room. \"Now?\" she asked.\n\nApparently the cameraman gave her a nod and she sat up straighter.\n\n\"Hello, Candice. I'm the last person you'll have to put up with eulogizing Web. And after I'm done, I'll be walking you through the next phase. I was married to one of your grandfather's business associates. Trophy wife and all that. I barely knew Web when the market crashed. In one crazy day, Jim lost everything. I found him on the kitchen floor, a gun in his hand and blood all over. So there I was, widowed, with more debts than I could ever manage, and two young children. None of Jim's partners could or would help. I was very close to taking up the world's oldest profession when Web showed up on the doorstep. He was kind and he listened, and he promised to help. And he did. He paid off our bills, got me on my feet again. I became his mistress, not because he ever demanded it, but because I loved him. I wanted to met you, but Web was so determined not to let his children see the real him. So I always went away when family came over. I'm just one of a ton of people your grandfather helped. Most anonymously. He loved you to death. Was...so unbelievably proud of you. I hope you know that.\"\n\nShe paused, wiped a tear from her eyes and then broke down. The camera faded to black, but came back up in a moment.\n\n\"Sorry. This is hard for me, since I know his time is running out. Anyway, let's get on with the fun. In a moment, the screen will give you a final dildo cam, what an awful phrase\" she said, wrinkling her cute nose, \"just relax, honey, and I'll be back with you in a minute.\"",
        "The camera cut to a view that was becoming all too familiar. This time the crosshairs was centered on her clitoral hood. The machine hissed to life and extended a third rod. This one didn't have a dildo attached; it was just a heavy rod with a metal ball on the end. It closed in, until the ball was eventually pushed tightly against her. \n\nThe screen cut back to Etta, who was now smiling.\n\n\"All right baby, the preliminaries are over. The machine is preprogrammed, so just relax, you're about to go on the wildest ride of your life.\"\n\nThe screen flared, died and then came back to life. The scene was in the very room she was now in. There was an orgy in progress. She recognized Etta, moaning, growling and screaming her way through an orgasm on the very same chair Candice was now lying on. She recognized Caramel, wearing a blue skintight cat suit with cut outs for her pussy and tits. She was strapped across the horse, and seemed to be enjoying a good paddling while sucking a man's cock. There were others there, people she didn't recognize, but almost as if on cue they all turned and waved to the camera while shouting, \"Hello, Candy!\"\n\nShe was so caught up in watching the various people, she barely noticed the machine sputter to life. When it did, she saw the big wheel begin to turn.\n\n\"Fuck!\" she shouted in surprises when the vibe in her ass was slowly withdrawn. \n\nWhen just the tip was still in her, it started another plunge, but at the same moment, the dildo in her pussy began to withdraw. She could feel the two of them, scraping against each other, separated only by the membrane between her two canals. At first they moved slowly, but as time passed they picked up speed. The machine hissed and spit out more oil, not that it was needed. In spite of herself, Candice's pussy was sopping wet. \n\nCandice couldn't tear her eyes away from the many people having fun on the screen. Her body adjusted to the two toys and soon she was really enjoying them. Without warning, the ball on her clitoral hood began to gently vibrate, sending wicked tremors of pleasure through her. \n\n\"Oh, my god,\" she moaned.\n\nThe dildos were in perfect sync now, alternately filling her and leaving her achingly empty. She could feel her body coiling, tightening, drawing in upon itself. When the tension seemed unbearable, she unwound. Blast after shrieking, mind bending, world shattering blast assaulted her senses. Starbursts exploded in brilliant colors on the backs of her tightly closed eyes. Her body jerked and twitched as she rode the waves ever higher. Through it all the cocks continued their steady rhythm and the vibe continued to dance across her sensitive flesh.\n\nShe was gasping like a fish out of water as she came down from the euphoric high. Almost without warning, a second orgasm rocked her. This one was weaker, but no less beautiful. It had barely rippled away, when the dildos changed action, suddenly they were driving into and out of her body in unison. \n\nThe rhythm was maddening. She went from unbelievably empty on the out strokes to totally full on the down strokes. The vibration on the ball had altered too. Buzzing happily on the down strokes, but pausing on the out strokes. The difference in stimulation was jarringly, radically different, and soon she found herself longing for and anticipating the down strokes. Actually barking in pleasure each time the twin dildos were driven home.\n\nNot surprisingly, her next orgasm was on the down stroke. She could hear herself, mewling in pleasure and whimpering in need when they were withdrawn. The orgasm was strong, not as strong as the initial one, but easily enough to make her cry out at its peak. Another one came, and another, and she was still experiencing aftershocks when the tempo changed again.\n\nNow the vibe in her ass was making slow, deep strokes, but the cock in her pussy was making extremely fast, but relatively shallow plunges. \n\n\"Oh, God,\" she groaned as her body tried to absorb the new influx of sensation. \n\nIt felt...indescribable. There were no words. No expressions for such pure, unadulterated sensation. When words finally came, they shocked her to hear them from her own mouth.\n\n\"Fuck, fuck, fuck,\" she was chanting, in time to the driving of the dildo in her pussy. \n\nShe could feel herself building to another shattering climax, and the anticipation was almost more than she could bear. When it came, the pleasure was so thick and heady she screamed, like some feral animal in heat. Outrageous pleasure, beyond any comprehension, assailed her. She was ripped away by the tide and carried where it would, totally lost in it. \n\nWhen she regained some semblance of coherency, she found the tempo had changed yet again, both vibes were slowly, deeply stroking into her, the ball was still. Almost like a planned respite, but all too swiftly, the ball began humming with its own contained joy. The dildos picked up speed, and her body went berserk. \n\nOrgasm came upon orgasm, and she couldn't separate them, one from the other. Some were weak, others strong, but before one rippled away, another came. The sensations blended, melded, morphed and bounced off one another, until the entire experience became one of pure bliss. Unendurable joy, exquisite agony, Heaven, Hell. All of them or none. \n\nHer brain was misfiring; the sensations were so powerful they trampled boundaries in her mind. Random thoughts floated before her, like snowflakes. She could watch them, but if she reached out to examine one, it was gone. She was gone. Candice was no more. Only the pleasure remained. Only the exquisite blasts, the soft cascade, the unending kaleidoscope was real. No longer concerned with anything else, Candice floated away on the tide, happy and serene amidst the turmoil.\n\nMinutes passed, then hours, but the relentless machine never slowed, never tired, never missed a beat. Regular inundations of oil kept the toys from chaffing and regular orgasms kept Candice from even noticing.\n\n<center>***</center>\n\nWhen it finally ceased, and the toys retracted, Candice was trembling and exhausted. The screen, which had been showing orgy after orgy, came back to Web, now seated at his desk, with Etta on his lap.\n\n\"Well, that's it. The cock in your pussy was made from a mold of my own Mr. Johnson. I hope you enjoyed it, as it's as close as I could ever bring myself to actually introducing you to my lifestyle and my friends. There's a kind of user's guide along with the bonds in the safe. I know you'll probably decide to sell the place and move away, but I guess I'm kind of hoping you'll decide to stay. This room is really my crowning achievement in life. I poured a lot of resources into creating a place where a person's every sexual fantasy could be fulfilled. I doubt any of your cousins will understand, but I hope you will. This is a room designed and built by me, with the only motive being to bring others pleasure. I'm sorry I wasn't ever able to get to know you as myself, but your mother would never permit me to see you without her being around. I had hoped, after you graduated, to invite you here, but you were such a go-getter and landed that job before I even found out you had graduated. I guess this is goodbye, Candy. I'm sorry we didn't have some time together. I'm sorry I never got to be the kind of grandfather I wanted to be. Hopefully, you'll remember me a little differently than your cousins and my kids. Take care.\" The tape stopped, the screen faded and to her relief, the metal bonds retracted, freeing her. She rolled off the chair, nearly falling on her rubbery legs. The chair hissed, and slowly returned to the upright position. Candice struggled over to the console and looked in the safe, sure enough, the bonds were there, as well as the user's guide. It was as thick as the Manhattan phone book, she noted with a wan smile. \n\nShe closed the safe and pressed the buttons one by one, until the room had returned to the blank walls. Candice clicked off the light after opening the door and headed upstairs. She was hungry, so she made a snack before going upstairs and crawling into bed. In the darkened room, her mind, which seemed to have shut down, began to function again.\n\nShe felt she should be indignant, after all she had basically been raped. But the whole thing had been about her pleasure, which seemed incongruous with being raped. She wondered about her grandfather, what kind of man he really was. She had a hard time reconciling the hard-bitten and mean spirited man she had known with the free, easygoing and likeable fellow she had seen tonight. She had always been grateful to her mother for shielding her from her grandfather, but now, she wished she had been allowed to know him. \n\nAs to the house, perhaps she would sell. Perhaps not. She could sell the bearer bonds and be free of financial worry for the rest of her life. She thought of Suki, her best friend in the Tokyo office and how sad she had been at their parting. Perhaps, she would agree to come over and stay a while. She also thought of Caramel and Etta and all the other people she had \"met\" tonight, but mostly, she thought of Suki.\n\nCandice drifted off to sleep with a smile on her face, imagining the small woman crying out in pleasure, securely bound to the magical chair in the basement. "
    ],
    "authorname": "Colleen Thomas",
    "tags": [
        "bondage"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-chair-16"
}