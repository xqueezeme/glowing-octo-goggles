{
    "title": "Baseball Ch. 08: Here's the Pitch",
    "pages": [
        "1. All characters are 18+\n\n2. No characters resemble real people\n\n3. Enjoy the fiction\n\nBaseball Ch 8 - Here's the Pitch\n\nCasey and I had been together for a few months now. How many months depends on exactly when you start counting. We quibbled and teased each other about when we officially got together. Was it when we were finally able to go public? Or before that, when we started sleeping together? We finally decided to declare our first date as that first Sunday dinner at my place, when I made her my lasagna, which was May 2. Now it was early August, and we'd just celebrated our three month anniversary.\n\nThe locker room initially gave me crap about my relationship with Casey, but they were careful about crossing the line. They avoided saying lewd things about her; rather they called me a gold-digger and a boy-toy. I could handle that, and when I showed it didn't get under my skin, they mostly let it go.\n\nDirk and Jimmy continued being themselves. There was no changing Dirk, he was a lost cause. But Jimmy softened a bit when the pitchers stood up to his crap, just like Mike Karnes did. They told him to work with them, not command them, or else they'd promise to make his life difficult. I may or may not have provided a few psychologist-type things to say to him, to help him change his attitude.\n\nThe IronPigs were winning more than losing, but not really in the running for any championship trophies. However, the Phillies were within striking distance of taking the NL East division, and probably a wild card spot in the playoffs. That was much more interesting, and all the guys in our locker room cheered on our major league affiliate, while secretly hoping to get called up.\n\n--\n\nI spent a Friday lunch with Casey and Lani. \"I have a favor to ask,\" Casey told her roommate.\n\n\"What kind of favor?\"\n\n\"The kind of favor you'll do for me because you're my best friend forever?\"\n\nLani groaned. \"I don't like where this is going, princess.\" Lani always called Casey a princess in a loving sarcasm.\n\n\"I need you to go on a date with Landon.\"\n\nLani almost choked on her food. \"Landon Carter? Your ex, before you hooked up with Slugger here?\" She pointed at me.\n\n\"Yeah, so, I owe him a favor,\" Casey explained, \"and he's asking to cash it in for a date with you.\"\n\n\"Please don't say 'date' and 'cash' in the same sentence,\" Lani told her, \"it sounds like he's purchasing my services.\"\n\nCasey looked at me for help. I raised my hands. \"I told you she wouldn't do it, not even to go to the Gala.\"\n\n\"Gala? What Gala?\" Lani's disinterest wavered slightly. Casey and I shared a smirk between us.\n\nCasey said, \"There's a big charity gala event coming up, in two weeks. Tuxedos and gowns, fancy dinner and a live band for dancing.\" She knew Lani loved that kind of thing, especially since Lani had finagled her way into being my date to the charity luncheon earlier this year. \"Dad says he'll buy me a new dress, and I'll convince him to buy you one too.\" Then she took a drink, and waited.\n\nLani squinted her eyes, then asked, \"Dress and shoes?\"\n\nCasey shook her head. \"You've got too many shoes as it is. Dress, and we'll get pedicures beforehand.\"\n\n\"Deal,\" Lani agreed. \"Damn you. I'll escort your boring ex. But no hanky-panky.\" \n\nThen the conversation turned to later events. Casey was talking about what she wanted to do in the fall, after the IronPigs season was over. I was mostly listening to her ideas, and when she asked what I wanted to do, I just shrugged and said I honestly hadn't thought about it that much. \"Probably go visit with my mom back in Ohio,\" I said.\n\nA minute later, when Casey excused herself for the restroom, Lani kicked me. \"She's giving you a hint, thickhead,\" she said.\n\n\"What? What do you mean?\"\n\nShe motioned to where Casey had been sitting. \"She brought up the off-season because she wants to spend more time with you. She's trying to see if you feel the same way.\"\n\n\"Of course I do.\"\n\n\"Listen,\" Lani said, \"Casey's way into you. She's told me, but she didn't have to. She's never been like this with any other guy, ever. I know you two love each other now, but she's in it for the long haul. Are you?\"\n\n\"Yes,\" I answered honestly. \"I'm in. I'm committed.\"\n\n\"Then maybe you should consider showing it,\" Lani said quickly and quietly, as Casey was headed back to the table.\n\n--\n\nThe downside to our current living arrangements was that we were often apart. If Casey and I spent the night together for two nights in a row, it was extremely rare. But that was going to the case anyway, when I spent a bunch of time on the road and Casey stayed in town, working from the office.\n\nBut I think the upside outweighed the downside. Casey's father didn't need to know how often we spent the night together. And Lani didn't care whether we were at their place or mine, as long as she was warned ahead of time. And, since we no longer needed to be a secret, we spent as many nights together as we deemed wise, while still catering to the demands of our careers.\n\nThat Saturday was one of those nights, and we were at my place. I wooed Casey over with the promise of breakfast in the morning. Though, upon further reflection, she'd have been wooed even without breakfast. As usual, she let herself in with my spare key, locked the door behind her, and plopped herself down on my lap as I sat on the couch. She blocked my view of the TV, but with her chest in my face, I found it was much too pleasant for me to mind that.\n\n\"I was thinking more about the off-season,\" she told me, restarting our earlier conversation. \"How would you like to go somewhere warm with me?\"\n\n\"Warm like Florida, or warm like the Caribbean?\" I asked, then immediately added, \"Either way, yes.\"\n\n\"Good answer,\" she said, nibbling my neck. \"Caribbean. Somewhere secluded, where only you will care if I lay on the beach topless.\" She stripped off her shirt.\n\n\"Sounds like fun to me.\" I helped her get rid of her bra. \"Ice cold drinks, skin kissed by the sun.\" I kissed her chest tenderly. \"Are you the type that tans easily, or do you need regular rub-downs with lotion?\"\n\n\"Mmm,\" Casey said, as I rubbed my hands over her breasts. \"I do tan, but I certainly won't object to as many rub-downs as I can get.\" She continued making appreciative noises as I took a nipple in my mouth. \"Maybe November?\"\n\nI took a small pause from my activities to answer. \"I can't wait to see you in a bikini, and then watch you take it off.\"\n\n\"Watch?\" Casey asked with a cute pout. \"I was hoping you'd want to help.\"\n\nThat seemed like the best cue for me. I lifted my gorgeous lover and carried her into the bedroom. She giggled happily for the short trip and as I plopped her onto the bed. I helped her strip out of her tight jeans (how do girls get in those anyway?) and then pulled aside her tiny pink panties to feast at her juicy peach. I had found that what really drove Casey mad was when I licked her everywhere but her clit. As usual, after a minute or so of that, she begged me for it. I attacked it with my tongue, and entered her canal with my finger, and she went wild. It didn't take much of that to drive over the edge. I tried to continue when she came, but she closed her legs and rolled over onto her stomach, gasping, \"Hold on, give me a minute.\"\n\nI laid on the bed next to her, and she gazed at me. \"You're wonderful,\" she said, then frowned as she looked down my body. \"But you're wearing too many clothes.\"\n\n\"Easily fixable,\" I said, and stripped off my shirt and pants. \"Better?\"\n\n\"I still can't see little Johnny,\" Casey said, poking at the mound in my boxers.\"\n\n\"Little?\"\n\nShe laughed. \"Oops. I mean that baseball bat you keep in your pants.\" She yanked at the waistband. \"Certainly big enough to get the job done.\"\n\nI helped her pull the boxers down, and then removed her panties too. Then Casey got on all fours and wiggled her cute ass at me. I teased her by rubbing my dick on her back door, which made her yelp in surprise. \"No! That's just... no.\"\n\n\"Only kidding,\" I reassured her, now rubbing up against the correct orifice.\n\n\"Maybe someday. Maybe. If you're a good boy. Now,\" she demanded, \"put that in me.\"\n\n\"Yes, ma'am,\" I said, and pushed in. She fit me so well, and felt so warm and snug.\n\n\"Ahhh,\" she was her response. \"That's it. That's where it goes. Now fuck me.\"\n\n\"Like this?\" I gave her the slowest, gentlest thrust.\n\n\"No, really pound me. I really need it!\"\n\nI pulled almost all the way out, grabbed her hips, and really hammered my dick back into her. \"OH!\" she cried out. \"Yes! Fuck me hard!\" I gave it to her again, and again. Each time, a groan or other gutteral noise escaped her lips. As I continued ramming her, she eventually gave up on holding herself up by her arms, and sank face first into the bed, and her moans were now muffled by my mattress. With her words now gone, I could only tell by the slight increase in volume, and the spasms on my dick, when she came.\n\nI pulled out and flipped her over. I wanted to fuck her more, but I wanted to look into her face this time. I drove back into her pussy, and this time I grabbed her thighs as I fucked her. I quickly returned to the same tempo and watched her eyes as she watched me. My skin slapped against hers with each push.\n\n\"Oh, oh, fuck, fuck, fuck, Fuck!\" Casey was chanting beneath me. I tried to watch her and gauge when she was close so I could time my own. When she said, \"John, Johnny, I'm, I'm,\" I knew she was climaxing, and I let myself go.\n\n\"Gah!\" I grunted, and I released everything I had into her quivering pussy. Her eyes had closed, and her hands had gripped the bedsheets. I let myself fall onto the bed next to her, thinking about how damn lucky I was to have found this woman.\n\nWe laid there together for a minute and caught our breaths, then she crawled onto me and peppered my face with small kisses. \"I think maybe you like the idea of a Caribbean getaway.\"\n\n\"I definitely do. I love you.\"\n\n\"I love you,\" she responded sweetly. \"And I love it when you fill me up. But I think I'm leaking now.\" She hopped up from the bed and skipped away to the bathroom.\n\nBy the time she'd returned, still naked, I had grabbed her some water from the kitchen and was waiting for her in bed. She drank the water gratefully and slid in beside me.\n\n\"I'm so glad I found you,\" I told her as she cuddled into me.\n\n\"I'm glad you found me too. Some days, I felt like one of those fairy tale princesses, locked away in a tower, waiting for my prince.\"\n\n\"You'd have escaped the tower on your own,\" I said.\n\n\"Yes, but without my prince. Then where would I be?\"\n\nI teased her. \"Married to a toad.\"\n\n\"Or plundered by the black knight,\" she mused. \"Instead, I was patient, and found my true love.\" She kissed me, and settled down to sleep.\n\nCasey slept rather quick after sex like that. I usually did too, except for tonight. I was kept just barely awake by my thoughts of the future, and by Lani's words of wisdom. \n\nCasey and I had met each other's parents, we were having sex, and everything was great - I'm the here and now. But how about the future, how would that work? Before coming to Allentown, I'd assumed I'd be here for the season, then go back to Ohio for the winter, until spring training started the whole thing over again. Now I was in a committed relationship, and things were very different than what I'd planned.\n\nI needed to show Casey how committed I was. But how? One early thought was to ask her to move in with me. But that was dumb; my apartment was tiny and hers was much nicer, even though she had a roommate. I also couldn't completely guarantee I'd always be on this team; I could get traded and end up living elsewhere.\n\nMy second thought was to avoid getting traded by quitting the team, ensuring I'd stay in town with Casey. That was even more ridiculous. Even if I was willing, which I wasn't, Casey would kill me for giving up my dream.\n\nI could always buy some jewelry. Like maybe a promise ring. But that seemed too immature. We were adults, not stupid kids.\n\n'What about an engagement ring?' part of my brain asked. The other parts rioted. That's ludicrous! We've only been dating three months! We're too young! We're still learning about each other! She'd never say yes!\n\nBut as I gazed over her sleeping body I realized Casey probably would say yes. She was just as committed as I was. What was stopping us from being engaged? The largest obstacle was the overwhelming uncertainty of my career, of course. Even if I managed to never get traded, I'd still be on the road half the summer. The long baseball season was tiring, as I was finding out. I was really looking forward to taking some time off in October, and of course I wanted to spend that time with Casey.\n\nIf I asked, and if she accepted, we could have a long engagement. Long enough to figure out what the hell we were going to do, how we were going to handle life together, even when we were apart.\n\nWorst case scenario was if I asked and she said no. I was sure she'd frame it kindly, but a no is still a no. Could I handle that?\n\nMy head spun. There was a lot of uncertainty. A lot of little factors to weigh. But when it came down to it, I asked myself one question: was Casey 'the one'? There was only one answer for that. Yes. That much certainty was enough to finally settle my thoughts and help me sleep.\n\n--\n\nI talked to Lani on Monday, when I was sure Casey would be in the office. The team was on the road so I had to wait for a time when we were off the bus, stopped for lunch. I knew I could trust Lani to keep a secret.\n\n\"What would Casey say if I asked her to marry me?\" I asked bluntly.\n\nShe was a bit taken aback, I could tell, even through the phone. \"Well. Um. I guess you really took my commitment talk seriously.\"\n\n\"You could say that.\"\n\n\"I assume you're not asking what she'd say in, say, another year. I think we both know it would be a yes. I think you're asking what she'd say of you asked her, like, today.\"\n\n\"Maybe not today, but yes, near future.\"\n\n\"Um. Honestly, I don't know. If I had to guess, I'd think she would freak out, but then say yes. I mean, she loves you. But she'd freak about it because she's still only 22, and you haven't been together very long.\"\n\n\"That's about what I thought too.\"\n\n\"But, in the end, she'd realize that she's not going to find anyone better for her than you. So even if it scares her at first, she'll come to that conclusion and say yes.\" Then she flipped the tables on me. \"Now let me ask you a question,\" she said, \"How serious is this? Are you really considering it?\"\n\n\"I am,\" I admitted. \"I thought about a promise ring, but it seemed childish, and an engagement ring holds that same promise. Plus, like you said, she's perfect for me. I'm not going to find anyone better. Like, I know it sounds stupid, but at the same time it sounds stupid not to. Does that make sense?\"\n\n\"I guess so. And I agree that a promise ring sounds dumb. But engagement? That's really big.\"\n\n\"Yeah. That's why I needed your opinion, Lani.\"\n\nShe sighed. \"I guess I would say to do it. But if you're going to ask, you better talk to her father first.\"\n\n\"Yeah, that's what I thought too.\"\n\n\"And she's going to want a big rock. Can you afford it?\"\n\nI had already done the math in my head. \"Yeah, I think so. I've got some money in savings, left to me by my dad. I've never bought a diamond before. Can you help me pick one out?\"\n\n\"You're asking me to shop?\" Lani laughed. \"For expensive jewelry? Yes, I think I can find time for that.\"\n\n--\n\nThe evening of the Gala was scheduled for a Saturday night. JJ Wentworth and the IronPigs organization were major benefactors, so the organizers were more than willing to schedule around us. But instead, the baseball game for that day was scheduled at 1:00, not the usual evening game, so JJ and others tied to the team could attend. \n\nBob the GM, Chuck, and a few other coaches were planning to go. Players were able to go as well, but the tickets were costly, so most of them didn't. I probably would also have skipped it, since my salary was fairly poor, but JJ and Casey were paying for me. Lani also would never be able to afford to go on her own, but she was attending as Landon's escort, and she'd be sitting at the very next table with the Carter family.\n\nThe Monday before the Gala was a big day for me. Thankfully, we'd arrived back in town the Sunday night, so I had all of Monday available for errands. I picked up my tuxedo that morning, and met Mr. Wentworth for lunch. \"I'm a little surprised to be dining with you, without Casey,\" he admitted as we ate. \n\n\"Well, I wanted to get to know you better, sir.\"\n\n\"Don't call me sir, Johnny. My daughter likes you well enough, you can call me JJ.\"\n\n\"Thanks JJ. I'm glad your daughter does like me,\" I said with a smile. \"And I really do love her.\"\n\nHe looked at me and sighed, \"And?\" When I didn't respond, he put down his fork. \"I think I know why I'm here, Johnny. You're shaking, you're so nervous. Just say it.\"\n\n\"I love your daughter, and I want to be committed to her,\" I blurted out. \"I respect you and wanted to get your blessing.\"\n\n\"My blessing for? You're going to have to say it, son.\"\n\nHe called me son, and it made me tear up. \"I want to marry your daughter. She's the one and only one for me. Now that we're together, I can't imagine letting her slip away. And I promise you that I'll do whatever it takes to make her happy.\" It all came out kinda fast, like word vomit. But somehow it all made sense, and wasn't a mess of jibberish.\n\nHe smiled. \"That's what I thought. I admit, this is coming on much sooner than I had anticipated. But you do make her happy. Anybody with eyes, and probably even without, can see that.\" He sighed. \"Someday, maybe you'll know the feeling of watching your child grow up, and start to leave you behind. But if you feel that, I hope you also feel the joy of watching that child find love.\" He stuck out his hand. \"I like you Johnny. You're good for my Casey. And if she says she wants to marry you, I approve.\"\n\nI shook his hand. \"Thank you, JJ. It really means a lot.\"\n\nI spent Monday afternoon scouting the venue being used for the Gala. It had a garden next to it, where the bushes had lights hung on them. It would be a very memorable place to propose. I pictured the scene: Casey in her formal gown, me in my tuxedo, on one knee.\n\nI called my family that night. Both Mom and Morgan were shocked at the timing of it, and both expressed their concerns. But Morgan had the best perspective. \"I've seen her with you and without you. When you were around, it seemed like she was radiating waves of love at you, even when she was actively doing something else. And when you weren't around, she wished you were, though she didn't say it. She'll say yes, or I'm the Queen of England.\"\n\nTuesday morning, I was able to lure Lani to take a half-day from work and go ring shopping with me. She laughed at the first salesman who assumed she was my fiancee, then she explained that she was only there to help. Two stores and what seemed like hundreds of rings later, I'd found the perfect ring. The center stone was a full karat on its own, but it had smaller stones on its sides. It was classy, elegant, and brilliant, just like Casey.\n\n--\n\nI guess I should have seen it coming. Everything was going so well. Maybe too well. Something had to happen, and when it did, it wasn't even remotely expected.\n\n\"Mills!\" Chuck called when I came past his office on Tuesday night. It was right after the game, and I had been headed home.\n\n\"What's up, skip?\"\n\n\"Reynolds got hurt tonight. Sprained ankle,\" he said. Pete Reynolds was the starting catcher for the Phillies. \"They need you up there for tomorrow. Congratulations, kid. You're going to the bigs.\"\n\n\"I am? Holy...holy shit.\" I stammered, suddenly needing to sit down. \"I'm going to Philly.\"",
        "He nodded. \"They're home, thank goodness. Go home and pack a bag, and be back here ASAP. Don't worry about driving, we'll have a car waiting for you here.\"\n\n\"How long will I be gone?\" I asked. \"I mean, I'm worried about the team, with Jimmy...\"\n\n\"Don't worry. They need you there. I'll handle that little turd. You'll be there probably a week, maybe more, until Reynolds' ankle is better.\"\n\nI nodded, realizing I would miss the Gala. \"Yeah. Okay. Thanks. Thanks, skip.\"\n\n\"And kid? You earned it. Good luck.\" He said, patting me on the shoulder. He had no way of knowing how much that waylaid my plan. Any other time, I would have jumped for joy at the shot to play in Philly. In the Major Leagues! But now, all I could think of was Casey.\n\nI wasn't planning on seeing her tonight, but I texted her as I was leaving the stadium. \"My place, now.\"\n\nI sat in my apartment before she arrived, staring at the ring for a minute. It would have to wait, I decided. I wanted to set up the perfect moment for her. She was worth the effort.\n\nI had just stuffed the ring box into the inner pocket of my jacket for safekeeping, and put that jacket into my bag, when she came in a second later. I think she thought it was a booty call, because she came in with a grin; her face dropped as she saw me packing. \"What's going on?\"\n\n\"I'm going to Philly. Reynolds got hurt, and I got the call up.\" I was a mess of emotions, and Casey saw it.\n\nShe grabbed me into her arms and held me. \"This is amazing. You're so lucky! You're going to play in the big leagues!\" she told me. Her voice lifted me. It was comforting. I was nervous and scared, and she helped me push all that away. I was thrilled at the opportunity, and she was there to celebrate with me.\n\nWhen I'd composed myself a little more, I whispered, \"I'll miss the Gala.\"\n\n\"Fuck the Gala,\" she said, surprising me a little. \"The tickets are paid, so the charity gets their money either way.\"\n\n\"I have to go soon,\" I told her. \"I'll be back in a week or so.\"\n\n\"Okay. I'll be here when you get back. I love you.\"\n\n\"I love you too.\" She helped me finish packing, then drove me back to the stadium to see me off. A town car was there, waiting to take me onwards.\n\n--\n\nI crashed at a hotel near the stadium. It was really nice, especially compared to the places we stayed as minor leaguers. I'd be there for the rest of the week, so I was glad it was comfortable. I woke up late on Wednesday morning to see several congrats texts from my teammates. I also got voicemails from Morgan and my mother. I guessed Casey had notified them early this morning.\n\nI also found out that the Phillies were travelling to New York after Sunday's game to play the Mets. I had a shot of playing ball in New York City - that fact boggled my mind.\n\nThe coaches in Philadelphia were friendly when they greeted me on Wednesday. They pretty much laid down the plan for the next few games. Donaldson, the normal backup catcher, had finished last night's game, and was starting the next few. They'd have me start Saturday to give him a night off, then he'd play again Sunday. After that, they said, we'll see.\n\nThe most magical moment was walking into their clubhouse and seeing my name on a real Phillies jersey. Mills, #55. It blew my freaking mind. I took a picture and sent it to Casey, and she texted back, \"OMG! Glad you got to keep your number!\" I was too - I'd been #55 since high school. I just considered it mine.\n\nThe players were welcoming and warm. They missed their normal catcher, of course, but injuries happen, and they knew that. I got to suit up with them, and watch their game from the bench. I called Casey that night and told her every detail, and she eagerly listened.\n\nThe same thing happened on Thursday and Friday. Get up and eat, work out, watch from the bench, call Casey, and sleep. Normally by the third night, I would think it would be boring. Maybe it would be to most girls, but not my Mighty Casey. She drank in every insignificant detail. She wanted to know what stories or jokes or advice the major league guys shared with me.\n\nFinally, Saturday arrived. I had called Casey that morning, as she was headed for the stadium for the IronPigs' day game. \"I'm nervous,\" I told her.\n\n\"Who wouldn't be? It's your debut,\" she said. \"You're going to be fine. Like Chuck said, you've earned it.\"\n\n\"I hope so. I hope I don't embarrass myself.\"\n\n\"That can't happen. You're not playing first or third,\" she joked.\n\n\"Ha ha.\" Even though her joke was dumb, it calmed me down. I was catching. It was what I was good at. I might not hit very well at this level, but I was here to work with the pitchers and get batters to strike out. I could do that. \"Thanks. Thanks for everything,\" I told her. \"And have fun at the Gala tonight.\"\n\n\"I'll have fun. Don't worry, I don't have another date. No one can replace you, my slugger.\"\n\n\"Love you, my princess.\"\n\n--\n\nReality really set in when I arrived at the stadium that evening. As expected, the lineup card for the night read:\n\n#55 Mills, J. C\n\nIt was real. Not a prank. I was starting tonight with a major league team. I dressed, got batting practice, and received lots of encouragement from the other guys. They knew what I was going through.\n\nBut the real shock was when they let in the crowd. I was sitting in the dugout, chatting with Donaldson, the team's other catcher, and kept hearing someone call my name. \"Mills! Mills!\" came a couple of female voices from the crowd, just above where we sat.\n\nI stood up and looked. Standing up there were my mother, my sister, and Casey, all three wearing white Phillies jerseys. I just about cried right there.\n\nI ran over to the rail to see them. \"What are you doing here?\"\n\n\"Did you think I'd miss my son's major league debut?\" my mother said. \"I'm so proud of you, Johnny.\"\n\nI looked to Casey. \"You'll miss the Gala.\"\n\n\"You're far more important than some snooty dinner. I had Dad pull some strings and get us tickets, and arrange the flight for them from Cincinnati,\" she said excitedly. \"Oh! And...\" she turned around, and the others did too, to reveal they were all wearing my name and number on their backs. Casey had got them all custom jerseys to match me.\n\n\"We're your personal cheering squad!\" Morgan beamed at me. \n\nCasey pointed upwards. \"We'll be sitting up there.\" I looked up at the luxury boxes. \"And we got these,\" she said, holding up lanyards that looked like all-access passes. \"Again, Dad helped. It's his friend's box. And he sends his best.\"\n\nI was so happy. \"Thank you. Thank you so much. I don't know what I did to deserve you, all of you.\"\n\n\"Now go get em, Slugger!\" Casey said.\n\n\"Wooo, Johnny!\" Morgan yelled.\n\nThe game started. I had to wait for the third inning for my first at-bat. The announcer said my name, the crowd gave a bit of polite applause, and I heard Casey and Morgan screaming from the box. I stepped into the box. The opposing pitcher was on fire that night. He had four strikeouts already from the seven previous batters. Only one guy had gotten a hit to get in base, in the previous inning.\n\nThus, I didn't expect to get a hit. I swung at the first pitch and I shouldn't have, as I missed badly. I didn't swing at the second pitch and I should have, as it was right down the middle. The guy was a master of deception; his pitches moved all over the place.\n\nI took his third pitch, as it was low and inside. But then his fourth pitch headed in the same direction. That was mistake, as I knew he wouldn't throw the same pitch twice in a row. I swung, a little later than I should have, but it still connected. To my surprise, the ball blooped over the first baseman's head. It stayed fair by inches. I ran to first and stopped. My first major league hit. Again, the crowd applauded, a little louder this time, and my personal cheer squad was ecstatic. I saw them dancing and hugging and waving to me. I watched the fielding team gather the ball I hit and toss it into the Phillies' dugout. It was a souvenir for me.\n\nLater, in the eighth inning, we were down 3-2. Our pitcher was melting down on the mound, so I went out to talk to him. \"Big game for you, huh?\" he said as I came close.\n\n\"Sure is. My family and my girl are here. So let's not blow this up, okay?\" I told him with a smile.\n\n\"Okay. What do you think?\"\n\n\"This guy can't hit curves for shit. Bad news is your curve isn't doing well tonight. It was better last night,\" I told the relief pitcher. \"Good news is he doesn't know that. Throw your curve, low and outside. He'll swing.\"\n\nHe nodded. \"Okay, rookie. I can do that.\" I went back to the plate, and looked up to the box. As usual, Casey was glued to the game, and she gave me a nod and smile of encouragement. I gave a nod of my own to the pitcher, and he did what I asked. The pitch looked good, right down the middle, then dipped and turned outside. The batter swung and missed.\n\nI motioned for the pitcher to do it again. To my surprise, the curve was even better that time, even more motion on it, and the batter swung again. Strike two.\n\nNow I motioned for the same pitch, but inside. If he threw it again the same way, it should look like a ball, then come back into the strike zone. It worked, and the batter watched strike three go right by. We got out of the inning unscathed.\n\nIn the ninth inning, we were still down by one. With two guys on base, I managed to get a walk to load the bases. The pitcher was supposed to be up next, but he was lifted for a pinch hitter. That hitter nailed a fastball into right field. I got to second, but more importantly, both runners ahead of me scored, which won us the game. Everyone mobbed the hitter at first base, and the crowd went nuts at the walk off win. I looked up and signalled to Casey by patting my heart and pointing to her, indicating I loved her. She blew me a kiss in return.\n\n--\n\nThe clubhouse was jovial following the win. What made it better was a couple of guys who made a hasty ceremony of presenting my souvenir first-hit baseball to me, and the rest of the guys applauding. Someone in the clubhouse staff had already put the ball in a plastic case for me.\n\nI sat and looked at my ball, and thought about how cool Casey would think this is. Casey! An idea shot into my head. I grabbed my cell phone and sent a message to Casey. \"Still got your pass? Meet me at home plate.\"\n\nI went back to the dugout and saw all three of my ladies standing at the rail. Casey was showing her pass to the usher, but he wasn't letting her onto the field. \"It's okay, she's with me,\" I said. \n\nThe usher saw me still in uniform and shrugged. \"Okay, just for a minute. We need to get everyone out.\"\n\n\"I understand. Thank you.\" I told him, then I led Casey down to home plate. \n\n\"You were great tonight!\" she said happily. \"Where are we going?\"\n\n\"Here,\" I said, stopping her on the base. \"You are my home run, my perfect game, my Mighty Casey. You amaze me every day. And I want to be continually amazed.\" I handed her the ball. \"I want you to have this.\"\n\n\"I can't take this, it's yours,\" she said, slightly confused. She handed it back.\n\n\"Okay, maybe you're right. How about I give you this instead?\" I held out the ring box.\n\nHer eyes got super wide. \"Johnny. What?\"\n\nI got down on one knee. This was better than the Gala, I had realized. Who else gets to propose on home plate in a major league stadium? And who else but Casey would fully appreciate that kind of setting?\n\n\"Cassandra Anne Wentworth, my Casey, I am absolutely and forever in love with you. Will you marry me?\"\n\nShe staggered a bit, and I thought she might faint, but she knelt down with me instead. \"Are you serious?\" she asked quietly.\n\n\"Serious. If ever there were two people right for each other, it's you and me.\"\n\n\"Johnny,\" she said, then staring at the ring, then back at me, and finally she whispered, \"yes.\"\n\n\"Yes?\"\n\n\"Yes. Yes! Oh my God.\" She started to cry. I pulled her into my arms.\n\nI heard a clap, then another, then more. I turned to the source of the sound. A couple of the guys from the team were hanging over the dugout railing, clapping for us. One of them was the pitcher I'd helped in the eighth inning. He'd tell me later that he saw me head back to the field, and recalled how I said my girlfriend was there. He correctly guessed what I might do, and gathered a couple other guys to come along. Even the usher, who was still waiting to kick us out, clapped too. \n\nI slipped the ring on Casey's finger, but that didn't stop her tears. After we stood, she jumped into my arms, and refused to let me go. I had to carry her back to the gate where my mom and Morgan stood. They both congratulated us, and we got some pictures. I made sure to send a pic to Lani, who flipped out. She had known the plan was to propose today, but thought the plan was ruined.\n\n\"I have to change, but meet me at the hotel,\" I told them. They finally let the usher shoo them away, and I went back to the clubhouse. By the time I got there, I got mobbed by the remainder of the team who had just heard what happened.\n\nAt the hotel, Casey explained that she had arranged for Morgan and my mother to get a room at the same hotel. They'd fly back to Cincinnati tomorrow morning. But Casey was staying for the Sunday afternoon game. She didn't care that I probably wasn't playing, she just wanted to watch.\n\nThat night, at the hotel bar, we all wound down with a drink, and I told them the story of how I'd planned to propose at the Gala. Casey agreed that doing it there would have been nice, but doing it here was even better. Eventually, Mom and Morgan decided to head to their room, as they'd had a long day. Casey and I hugged them and bid them goodnight. \"Aren't you going to your room too?\" I asked her.\n\nCasey pursed her lips. \"Well, you see, I didn't actually get a room for myself.\"\n\n\"Hmm. So where are you sleeping?\" I teased.\n\n\"Honestly, I don't plan on getting much sleep.\"\n\nWe shared a smirk between us. \"Yeah?\" I asked.\n\n\"Yeah. We have to start planning a wedding,\" she said, completely deadpan. I just stared at her, and she broke into a grin. \"Just kidding.\"\n\n\"We do need to discuss that,\" I said, holding her left hand, looking at the ring there. \"But it doesn't have to be tonight.\"\n\n\"Not tonight,\" she nodded, looking at it too. \"But I do really like the upgrade from girlfriend to fiancee. Maybe... I can show you how much I like it.\"\n\nI led her to my room. As soon as we got inside, I saw her overnight bag on the floor, the same bag she'd brought to my apartment several times. \"How?\" I started to ask.\n\nShe waved it off. \"Magic fiancee powers,\" she said. I figured she contacted the hotel and put it there before coming to the game. It didn't matter. What mattered was she was here, and she loved me, and she wanted to be my wife. And now we were going to celebrate one of the greatest days of our lives.\n\n--"
    ],
    "authorname": "Octave888888",
    "tags": [
        "blonde",
        "baseball",
        "sports",
        "major league",
        "minor league",
        "proposal"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/baseball-ch-08-heres-the-pitch"
}