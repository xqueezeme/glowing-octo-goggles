{
    "title": "The Shooting at Our Merciful Lord",
    "pages": [
        "My thanks to blackrandl1958.\n\n*****\n\nChapter 1: Complacence and Discontent\n\nEvery life has physical or emotional tragedy that must be endured. Suffering is part of our condition. A birth defect, an accidental crippling, an early demise: all lives include tragedies, eventually. The great tragedy of my personal life came to light because of another tragedy, a terrorist attack that struck a small town in the middle of nowhere, our everywhere. Not a day goes by I don't give those two tragedies a thought. I'm reminded every time I try to button my collar, throw a ball, or sign my name. \n\nI grew up in that town, Sky Grey, Ohio, attending the public schools there, playing in Little League, exploring the woods, and reading in the library. In those days, a parent sent a 7-year-old boy out to play and might not see him for hours; we were more independent before we knew there were molesters and kidnappers afoot. We kids'd pick up a game of slow pitch baseball or half-court basketball. We'd make teams of three and play fast pitch baseball with a rubber ball in Jimmy's side yard (and \"run like the dickens\" when we broke a window in his house). There were woods nearby and we would explore, sneaking about, climbing trees, playing army or cowboys. I played tennis for whole afternoons, knocking a ball against a wall if no one else wanted to play, or I'd find my way to the library and read for hours in the air conditioning. I didn't realize how special that time and place were. It was an idyll I only recognized many years later. \n\nI went to Sky Grey Public High School, getting good enough grades to get into college, and in lieu of anything else or better, I went. My parents paid the way. I liked it: I liked girls, I liked sports, I liked reading, and I liked not having to pay for anything myself. My college years were good years. I dated a few girls, especially Alice, and she stuck with me the last two years of undergraduate school. I graduated with good but not great grades and a degree in something that would never pay. \n\nI was 22 and the world was opening its arms to me; I just didn't want to be embraced. I knocked around various jobs, proofreading for a company that made how-to books, playing with kids at a daycare center, and unloading furniture at a warehouse. All of these were minimum wage jobs despite my college degree, and unconnected to it. Alice dropped out of my life and neither of us were all that sad about it. I lived at home with my parents, worried about nothing, and only bit by bit did it dawn on me that my life had to change. \n\nI joined the Marines, spending a few years as an infantry officer in Virginia and North Carolina. No one shot at me, and our leaders avoided sending me to war or incident, so my service was a series of schools and programs with a short time assigned to a combat unit ready to go to war, which didn't happen for me. Seasickness was my most dangerous foe. In some ways, I had very good luck. \n\nIndeed, on one of my leaves, I went home and attended an old friend's wedding. There I found Karen Ann Prynne. She was Karen or Karen Ann interchangeably, and she liked both. I'd known her in high school, but she was a year younger and we moved in different circles. At this reception we gravitated to one another. Perhaps it was my uniform; it definitely was her looks. \n\nI didn't think I'd ever talked to her until that night, at least for any length of time. She was just a little shy, about to graduate from college with a teaching license, and things were different with her. We danced and talked and laughed, and I found myself with a girlfriend. I was convinced there had never been a more beautiful, sexy, intelligent, discreet, good person. I didn't think I could find a better woman for loving for life. I had not felt this way about Alice or any other girl. \n\nI only saw her three times in as many months after the reception, but I was sure. She would kiss me, push that wonderful body against me, and I responded. By the fourth date, I would touch and she would touch me, but we didn't really have much time together or opportunity for more. I was serious though, and I thought she was the one for me. I noticed her pick up a child at a family gathering, talking gently and with humor to him. I saw her give change to a beggar as we walked through downtown Cincinnati. She was perfect, I thought.\n\nI was smitten. I flew home any chance I had, or drove overnight on long weekends, and Karen Ann and I became serious as my last year of committed service began. We were engaged in September, as she began her first year teaching at Sky Grey Public Elementary. We decided to get married over Christmas with no fanfare, when I would be home for two weeks. Karen Ann contacted the church and kept everything secret. It would be an elopement with no lope. \n\nI had duty on Thanksgiving Day, but she made an excuse, flew to Raleigh and we spent the weekend after Thanksgiving exploring our bodies and having sex in a motel. Her body was wonderful; Karen Ann's face was arresting and even striking in a way that attracted men when they saw her up close, but her body was long, shapely, curved, and drew stares across crowded rooms. She was well-built. \n\nHer breasts were perfect and a little large, and I had a wonderful time pressing them, squeezing them, and sucking them. She would sigh and hold my head to her whispering, \"yes, lover\" or \"harder\" or \"pinch it.\" I would push a hard dick in her, loving the wet warmth around me, and she'd put her hands behind my neck and say, \"I'm yours now, John\" or \"I'm yours, all yours,\" and \"I'm no one else's.\" Usually, she pointed out my possession of her, her willing state as chattel, a metaphor I dismissed. Each time, it would heighten my excitement and hasten my climax, but I wondered at that most illiberal idea that a man possesses a woman. I decided it was a bedroom turn-on for her and we never discussed it. I left her at the airport in Raleigh Monday morning about 3:30 a.m., and I then swooped back to Lejeune. I made it by 6:30. I told the captain my girlfriend was in town and he said, \"I knew there was a reason for that smile.\"\n\nFive weeks later was Christmas, and I had leave until January 3. My duties were winding down in the Corps, so I flew home and we were married at the Episcopal Church because it would make our parents happy. Neither of us really held much belief in spirits or God or Jesus. We told them the week before Christmas we had the wedding set up, but we only wanted them and a few friends to attend, and that was how we did it. Christmas was on a Wednesday, we married on Thursday with perhaps 20 people there, and by 7 in the evening we were having sex in a motel in Cincinnati. I still remember that anniversary date. \n\nWe were naked and embracing, my hand on her marvelous right breast, when she said, \"I'm pregnant, John. Since Thanksgiving.\" It made for a loving and then almost violent sexual event. This time, Karen was on all fours on the bed, and I was slowly, very slowly, sliding my dick into that marvelous, trimmed pussy, when she turned her head and said, breathlessly at times, \"UH, that feels so good. You own this cunt...you own me...now you own my womb.\" She had this most marvelous expression to her countenance, part happy to tell me such wonderful news (I'd never made a secret of my desire for kids) and the mild distress or pleasure a woman feels as a man's dickhead is first captured by her pussy. I rammed it into her then, and she yelled \"Yes!\" as loud as she could. I fucked her that time for thirty minutes, milking it to stop the beginning of climax. She was shuddering and writhing as I mounted her from behind; she was sometimes up on her hands, other times resting with her head on a pillow. I was on both knees, sometimes one knee, sometimes crouching so my cock went into her from different angles. She talked when she could, \"fuck me\" or \"give it to me\" or \"I love your dick.\" We only did it that one long episode on that wonderful occasion, but I woke up in the middle of the night thinking, is there anything better in life?\n\nI felt lucky. Karen Ann was beyond my dreams sexy and good. I had married the best of women. I won the lottery.\n\nWe stayed in that motel, ate in its restaurant, and shopped in some shops there, but mainly made love or fucked; it was the same for us, day or night. Even hard sex was loving. But nothing is perfect, and that last day of the year she started to cramp and then bleed, and she said, \"John, this shouldn't be happening,\" and we lost that child then. We spent the day and night at a hospital in the Clifton area of the city, and it was a sad, close moment. The D and C followed. The doctors had no reason to give; sometimes these things happen, more than you know, they said, nodding sadly at us. They told us to wait a while and try again. Still, the world was no longer only right. Bad things happened for no reason, and we couldn't avoid all of them. We didn't tell our parents, at least right away; they still pretended our first night together was the day of the wedding, but they really all knew. There was no reason to tell them of the miscarriage since Karen Ann was okay. It was ours, only ours, I thought, one of those sad secrets that make a marriage stronger.\n\nI called the duty officer of my battalion and requested some extra days because of my wife's condition, which was granted after he notified the XO. I was a liaison officer with only routine duties that were easily redistributed. I headed back to Camp Lejeune on the fourth day of the new year. Karen Ann would wait for me in Sky Grey. We would live with her parents once I left the Marines in July, until we could buy a house or rent an apartment. I was soon reassigned and so spent the last six months of my commitment running one of the rifle ranges on base, an assignment often given to a soon-to-depart first lieutenant.\n\nAs July came to a close, I drove home to a wonderful welcome and stifled sex in my in-laws' home. A few weeks later, I found an acceptable job in a rural growing regional hospital, organizing volunteers and eventually scheduling professional events and educational enrichment for doctors, nurses, and other professionals. Officially, I was the Professional Careers Enhancement Coordinator at the Hospital of Our Merciful Lord. (The hospital was actually incorporated, but they avoided putting Inc. at the end of the title.) The hospital served a very large rural area with no large city, a rare niche that it filled well. It was growing rapidly as the communities nearby came to rely on it. I would help professionals maintain their certificates and licenses or upgrade when possible. Eventually, as I learned the demands, I'd coordinate with medical colleges and other hospitals when a doctor asked for help. I worked with schools and programs to organize lectures for new or advancing professionals, especially for some of our more prominent doctors. Merciful Lord lacked a standard personnel department that other larger hospitals had. It needed one, according to some department heads, and I hoped my position would grow if it were organized.\n\nWe found a small house in town, only two bedrooms, but there was a small utility room that could be converted to a small third bedroom; we would be in one and any kid who came along could be in the other until we could convert the back room or afford a bigger place. It had one bath, a small laundry room, and no basement. The backyard was small, but large enough to toss baseballs, so what else was the purpose of a backyard? Actually, there was a small patio with an oak shade tree. There was a dying ash tree over to one side, magnificent at one time but now dying from borers. I think Karen Ann was disappointed in the house we could afford, but it was that or an apartment. We closed on September 20 with immediate occupancy, so we were only with her parents for two months or so, and happily, that had not been onerous.\n\nThe day after I was hired there was a reception for all the new hires, doctors, and administrators, as well as some sort of hospital benefit. Karen Ann and I attended, meeting this nurse and that doctor and the main administrators. I was introduced to the staff, along with others. Karen Ann was fetching in a grey dress that was a little too sexy, showing a bit much of her great breasts for a Catholic hospital, but she enjoyed the attention of doctors and others she seemed to attract (I didn't say men because one woman was definitely hoping she was in the game.). Karen Ann was demure in behavior, if not attire, and I was proud to be her husband. She enjoyed the evening. \n\nI have regretted not paying more attention to Karen Ann at that gathering.\n\nWe were pregnant with Dylan by the beginning of October, and we discovered it in November. As the pregnancy progressed that month, Karen Ann complained that her back was hurting so we bought a firmer mattress that she said helped. Karen Ann said she had names ready for our first child: Dylan for a boy and Hanley if a girl. Dylan was born in June, happy, healthy, and long. He was bright-eyed, moved a lot and soon smiled; I think he was happy from birth. I played with that kid every moment, and Karen Ann enjoyed watching us play on a blanket on the floor. Dylan was a wonderful joy. Dylan.\n\nIn December, with Dylan now 7 months old, Karen Ann said she was pregnant again, but like our first pregnancy this child was doomed. Christmas with Dylan was wonderful as he started crawling and the positive prospect of another in August was warming, but for some reason we lost this one in January when the cramping started. Karen Ann called for me to hold her, we called my parents to take Dylan, and I took my poor wife to the hospital for another D and C. This time it was my hospital. I never left her side. \n\nAgain, the doctors shook their heads at our bad luck. There was nothing to do, they said, two miscarriages were not that unusual, and you have one healthy child. If it happens again, we'll do some tests. Take some time, heal and gain strength. We did, and our patience was rewarded.\n\nI was convinced of the strength of our marriage, and never more convinced than after the two miscarriages. I held Karen, kissed her as she wept, more at the loss of expected happiness than the pain itself. The great tragedy of our miscarriages was the loss of a joyous dream. After our first, Karen had clung to me, literally and emotionally. My arm would be gripped in public, her body would push into mine as we walked on the sidewalk or in a mall. After the second, she accepted my condolence, but her eyes looked distant at times, as if she needed to speak but didn't want to say it. It was as if she were looking for something that was not there. I wondered if the pain of miscarriage diminished her desire for children. I assumed it had to do with the wear and tear of work and pregnancies, dual miscarriages and raising a child.\n\nBy August, we were pregnant again and knew it a month later, and this one was our Hanley, the little girl we prayed to have. She was dark-haired and chubby and again a taller child, wonderful to tease and cuddle. She was born April 1. Her older brother wondered at this sudden increase, toddling about and trying to talk and suddenly competing for attention and hugs.\n\nAs every parent knows, work goes on despite midnight cryings and three-o'clock feedings, and we were exhausted many days dressing for work. I was accustomed to my job and did it well, I thought, and Father seemed pleased. But Karen Ann was slowly running down after she went back to teach in May, so we decided to have no more children for a bit. We had our hands full, breastfeeding the one and gradually teaching Dylan to take only one step at a time. The house was suddenly full and we needed to decide what to do.\n\nWe kept Hanley with us in a bassinet and Dylan had a room to himself, so close I could hear him turn over in bed on a quiet night. Not many were quiet; Hanley needed feeding or wanted to wiggle at 3:15 a.m., or wanted to see if we'd get up for her. Usually we were cheerful, or at least we faked it. We watched an old Humphrey Bogart movie after one wake up that denied further sleep; Karen Ann and I cuddled in front of the TV, watching a plane in Casablanca take off in heavy fog. I thought it a touching, weary moment. I felt loved and valued, and Karen snuggled. Perhaps we needed more such nights. \n\nWe were still young, and young families are cramped as they save for that bigger house or prepare for that better job, so I didn't fret. It was the way of life: youthful struggle and middle aged success. There was reason to believe our situation would improve.\n\nMerciful Lord was a good place to work, but my job was a hodge-podge of duties that frequently went unnoticed by more than one or two doctors or nurses. Father stopped in to talk with me shortly after Hanley was born, to ask my plans and what I wanted out of working at Merciful Lord. I explained that I saw the job as a dead end for me unless there was an increase in responsibility, and he nodded. I could make more money selling suits in a mall. I said that with two kids, I had more need of a career and needed to be more ambitious. He nodded again and said he was thinking along those lines, too. Once he left, I wondered if he was hinting I should leave.\n\nHanley was just over a month old. Dylan would turn two in a few months. My wife had lovingly borne two children, suffered two miscarriages, and quietly accepted my easy contentment with our life. For me, life was a lot of joy. I had just the normal insecurities of a man in his late 20s. \n\nIt all went away with the massacre, not because of it, but because it never was. It was always a chimera, in several senses of the word.\n\nI had been at Our Merciful Lord for two years and nine months on the awful morning that made us famous. \n\nChapter 2: The Shooting at Our Merciful Lord\n\nThe Merciful Lord Shooting occurred at my hospital on June 3, early in the morning. You may have heard of it. Some people call it a massacre, a terrorist attack, or Jihad. By any term, a lot of people died. It was a sunny day, not too hot, and I was checking on a lecture I'd scheduled for beginning surgeons in Classroom 2 at 8:30 a.m. and a demonstration dissection of cancerous liver tissue in Classroom 1a at 8:45. My watch said 8:28. \n\nI walked to two (which was on my end of the hallway) where there were people milling about just as shots sounded behind me. If you have not heard M16 fire, it is not particularly booming but it is penetrating and arrests your attention, especially indoors; it is more of a sharp cracking sound if it is fired in rhythmic, short patterns, and that was what I heard coming from the main entrance behind me. It was so much louder than I remembered from the shooting range. Everyone first thought it must be firecrackers, but somehow I knew it was not. It went on, a cadenced series of pops. It turned out they had plenty of targets.\n\nThere were young doctors standing about the hall near the doorway to two, and they looked startled, wondering what the sound could be; I said, \"That's gunfire, get in the room, in the room!\" They looked as if they didn't believe me, and I had to push them to get them moving. \"You can get out the rear window if it's safe. Look first. I'm gonna lock the door here. Pile up some stuff in front of the door if you have to!\" I heard \"oh my God\" and \"what is this\" and then they moved. \"I'm locking the door now, be careful,\" I said, as one little woman doctor stared at me. I closed the door and locked it. There were a lot, a LOT, of pops. \n\nI turned back to the hall. There was the popping sound in little groups of three. Pop pop pop. Pop pop pop. Not automatic, but three rounds as fast as the finger could comfortably move the trigger, and repeated. It was disciplined, cadenced. As it went on, it became paired shots. They were in a target-rich environment and didn't need to use so much ammunition. Disciplined killers were usually trained somewhere, I thought. I moved carefully beyond my little office. I heard shooting and screaming; then I heard some shots, probably from a security guard because they were lower and deeper; there were three or four of these and the pistol shots stopped. A moment later I peeked around the bend in the hall and saw a security guard on the floor in a pool of his blood; he was behind a counter that had holes through it and I assumed he'd been shot while ducking behind. I still didn't see the shooter or shooters. There were screams and voices and it was disconcerting. Farther down the hall, I could see several bodies on the floor, none moving. Pop pop. Pop pop. As I got closer, the sound was more like a cracks piercing my eardrums.",
        "I moved to the guard, crouched, felt his neck, but he was gone. Ah, Tommy. I exhaled audibly. I took the semi-automatic pistol from his hand and found two loaded magazines in a holder on his belt. I released the magazine in his 9 millimeter pistol. The magazine fell from the butt and I saw that it held 11 rounds so I replaced it with a full magazine, 15 rounds loaded, and put the 11 and other full magazine in my pocket. I checked the breech and there was a round ready to go. I heard shooting down the main hall, near the elevators. Pop pop. Pop pop. Pop...\n\nI heard a thump and a groan, like someone let the air out of his lungs loudly, and I was at the hall intersection to the main elevators. There were two bodies behind the information center counter here, which I now ducked in front of; Mrs. Scizm and a guy I didn't know from the business office. Jody Scizm was still alive; she seemed to be quietly sobbing. \"Jody, it's John. I'm going down the hall. How many did you see? How many, Jody?\"\n\n\"One I saw, but I heard someone else shooting. Am I going to die?\" she said. I was crouched on the other side of the counter and really couldn't see her since I'd put it between me and the main hall. \"God, I hope not,\" I said. \"Hang in there, Jody. Hold pressure on it. I'm going down the hall, so hopefully you won't see any more of them. I think I'm behind them. Good luck.\" \n\nI saw body after body as I made my way down the hallway, my back to the left side wall as much as possible. I passed the elevators. I saw empty thirty-round magazines, taped to one another upside down and discarded on the floor. (Oh, my God, I thought, 60 rounds from one gun already?) I stepped over a guy I'd never seen, walked by an orderly with a head wound, his eyes open and unseeing. I walked past the cardiology waiting room where there were people on the floor. \"If anyone can move, the hall is clear behind me, just head straight out the main entrance.\" I saw a man and a woman get up, move carefully and then break for the doors forty feet behind me. Four people didn't move, they just lay there. That made ten, I thought. Blood was everywhere. \n\nI passed the waiting room. I heard more shooting ahead near the cardiology operating rooms on the right and the glass backdoor to the cafeteria on the left; this shooting also sounded like a gun battle. I scooted down the empty hall, scared. I thought, you have two children and a wife, and this is NOT in your job description. \n\nThe door to the cafeteria was ajar. I saw them there, their backs to me. \n\nThey were two dark-haired men in camouflage, and they shot many morning breakfasters in the cafeteria. Apparently, the people there had not noticed or recognized the shootings in the entry and hall and the killers had burst into the cafeteria behind their coffee line. There must have been ten or twelve people on the floor, all apparently dead. Others were cowering, alive but playing opossum, or just afraid they were next. The shooting had now stopped because the situation had changed. \n\nThe killers were five feet from me. They were looking across the cafeteria at two security guards who had their pistols aimed back at them. The guards were behind the pillars near the dead in the coffee line. They didn't want to fire because hostages were involved.\n\nThe killers were only five feet apart. I noticed one AR 15-type rifle on the floor by the killer on my left; he had his left arm around a woman's neck and a pistol pointed at her head with his right. The other guy had his rifle pointing toward the guards with one hand, and he also had some poor 15-year-old boy around the neck\u2014they were a good step forward of the first pair, from my angle. \n\nThey were using hostages as shields. I looked through the open doorway. I knew the guards could see me behind the killers, and I recognized the one guard. I pointed at the guy with the pistol and signalled \"ONE\" to the guards; I pointed at the guy with the rifle and signalled \"TWO.\" I then pointed at myself and mimicked shooting first the guy on the left and then the guy on the right. I transferred the pistol to my left hand. I rehearsed the moves in my head for a second, thought of something Captain Mullarkey had taught us at The Basic School: THIS should be a moment of \"max agg.\" Maximum aggression. Then I took a deep breath. \n\nIt was quick. I took two forceful steps straight into the cafeteria and left, behind the one guy, knocked the pistol up from the woman's head with my right hand and with my left hand, fired my pistol from about two inches away into the left side of the guy's head, trying to angle the gun enough to the right so the bullet would miss the woman (and her son, farther away) should it go straight through, which it did. The pistol recoil was more than I expected; I'd never fired with my left hand alone and it was at an odd angle. I felt a stinging pain in my right hand, which was flung right, but I concentrated on moving to the other guy. \n\nTime slowed down. \n\nThe remaining terrorist turned his head toward me, obviously startled. I roared a guttural sound, \"UUUHHH!,\" pivoted on my right foot, took a big step with my left foot straight toward the guy as I extended my left arm and put the pistol into his face. He made a grimace and I put a round from five inches away through his left cheekbone, just below his left eye and out the back of his head. He didn't have time to move his rifle enough to aim at anyone. He joined his fellow terrorist on the tile floor. I held my pistol on him, angry and willing to fire again if he moved.\n\nI have never regretted those shots. \n\nAfter a long moment of silence, there were screams and moans and cries. The woman on the left wailed and turned to the boy who cried out, his ears probably ringing from the report of the pistol so close, but neither of them were shot and the killers were down. I kept my pistol pointing at those two on the floor, angry and projecting all the rage I could generate, but they were definitely dead. Kicking their rifles and pistol away anyway, I leaned over them and said, \"You fucked with the wrong Marine.\" My right hand was mangled; the bullet that killed the first guy came out his right cheek and hit my hand as I pushed his weapon up from the woman's head.\n\nAt that point, the guards were there and they said something about me being okay and there seemed to be a fog. I asked, \"Were there only two?\" \n\nBill Meier, the one guard, said, \"Yeah, pretty sure. Others are checking. You okay, Mr. Buck?\" \n\nI took a deep breath and lost my aggression. It drained from me and a wave of weakness passed through. \"Hurt my hand.\"\n\nThe lady and boy were in each other's arms; I guessed they were mother and son. \"You two okay, ma'am?\" I asked. They were crying and clinging to each other on the near benches. \"Thank God, thank God,\" she said, tears streaming, nodding at me, holding her son's head to her chest.. \n\n\"I need to sit, Bill,\" I said. My left hand was shaking with the weapon now. I handed him the pistol. \"I took it off Tommy out front; he was...\" \n\n\"I know, John, I know.\"\n\n\"Jody was hurt, someone should see to her,\" I said. My hand was up, blood running to my elbow and dripping. \"I'm making a mess.\" The world seemed slow.\n\nI sat beside the crying lady and her son on one of the table bench seats, resting my right elbow and holding my hand up, but it still puddled blood on the table. My left hand gripped my wrist, trying to stop the blood and pain. \n\nSuddenly, there were policemen everywhere. I looked at my watch on my left wrist. 8:43. It had taken only fifteen minutes. It was almost time for that liver dissection. \n\n*\n\nThere were many dead and as many wounded. Hospital personnel were everywhere wrapping wounds, calling for gurneys, attempting resuscitation. Father Michales was there, just a priest this morning, performing last rites, getting attention for those who needed it, praying. He looked over at me holding my hand up, nodded, and went about his business. \n\nThe police came for the mother and son beside me. I was in my adrenaline-comedown fog, shaking, and I felt a hand on my left shoulder. I looked up at the woman, her son still in her grasp, and she was crying. She squeezed my shoulder. She tried to say, \"Thank you\" but no sound came out. I smiled and nodded back. \n\nA policeman appeared with rolls of gauze and started to wrap my hand as he asked what I saw and did. I told him I killed the guys and he stopped, looked me in the eyes and said, \"Good. You might not want to talk about it, but to us cops.\" He disappeared to talk to others, then. Rolls of gauze were everywhere. I rewrapped my own bandage when that one soaked through. My wound was not terribly important this day. \n\nThey eventually put me in a room and left me, since a guy who shoots himself in the hand should be protected from humiliation. An orderly bandaged my right hand again some time later to control the dripping, but otherwise, I was a low priority considering the carnage around the building. I decided to let Karen Ann know I was okay.\n\nI had trouble getting the phone out of my right side pocket, but I managed after a few attempts. I guess the cell lines in the area were overloaded, because there was no way to get a message through. I kept trying every few minutes. About 10:30 I finally reached the school. The school secretary then sent the call through even though Karen Ann was in class; the Merciful Lord Hospital shooting was all over the news media and word had reached everyone in little Sky Grey, Ohio. \n\n\"Karen, Karen Ann... Hey, yeah, I'm fine, well, gonna be fine. You heard of the killing? Awful. Yeah I saw some. Karen Ann, be calm now, I got shot in the hand, Babe... Yeah, not too bad... No, I did. I did... Me. I shot myself by accident... Anyway. They'll operate on it in the next few days probably, but not like the others... Awful Babe... No, I don't know if any doctors were shot... Calm down, I'm okay. I'll find out more about who was hurt soon, I'm sure... Yeah, thank God. I'll probably stay here overnight. Come see me after school... Good. Disorganized here right now. Cops everywhere. Love... Love you, too.\"\n\nShe'd seemed frantic, even panicked about finding out everyone who was hurt, to see if she knew any. I assumed there'd be a lot of sadness in Sky Grey this day. \n\nI called my mom, who sounded fretful and teary. I asked her to put Dad on; I explained everything to him. I didn't tell him I shot the guys. I decided it would be best if I told the police and no one else. My mom asked for constant updates on my hand, but I just laughed and said if there was any news I'd call. \n\nI lay back and thought about things. It was weird that in the midst of this carnage, with strange policemen and government officials everywhere, I was alone for long periods. I had time to think. I think climactic events motivate introspection.\n\nI thought about Karen Ann. In our conversation, something had seemed awkward\u2014as if she had something she wanted to say, fraught with urgency, but that she couldn't bring herself to voice. It was gravid, which I had not expected. I had expected extreme concern, focussed on my wound, and matter-of-fact attitude about arranging for a substitute teacher and things like that. She had quickly dismissed my wounding and moved onto other things. (Which, considering the nature of my wound compared to others', was reasonable to me.) I had expected to relieve her anxiety, yet it continued unabated.\n\nWe had changed in the last years, since we married and I returned from the Marines. Since we moved to the little house, since she became pregnant with Dylan, her ardor was diminished. More than that, we had not talked, not cuddled, not made time for each other very much. I remembered the ONE time we cuddled in the middle of the night; it was the rarest moment. We still had sex, but it was more routine, despite any act I prepared or performed. She no longer liked romantic talk or moments, dates, insinuations of sex to come, or anything like that. I wondered if it was me. We were just settling into normal married life.\n\nI missed the enthusiasm of our early sex life. I missed young sex. I missed that sense of warmth that we had before the children. I shook my head. Missed it.\n\nChapter 3: Aftermath\n\nKaren Ann found someone to cover her last classes and made it to the hospital by 1:30.\n\nI was in a hospital gown by this time, but I had no restriction or drip or anything yet. Painkillers were being administered by injection or orally, when needed. The hospital was very busy with the ongoing tragedy of the dead and wounded; doctors were operating in all the surgeries. I later discovered that we sent many to Dayton and Cincinnati hospitals, if they could travel and needed an operation. \n\nKaren Ann came speedily across the room and hugged me as I sat on the bed, my bandaged hand in the air. (I thought it looked like a giant cotton swab with the thick gauze enclosing it.) It was all too much emotionally for her. Tears came. \"Who was killed? Do you know? They aren't releasing names yet...\" she said. She looked around my hand to see me.\n\nI said, \"I only know one or two for sure by name. No one we ever socialized with. I saw the bodies of some I didn't know, some visitors or patients. There were a bunch. Blood everywhere.\" \n\nShe wiped at her eyes. \"I saw blood on the floor. Bullet holes, and police tape. Father Michales put me on the elevator\u2014they weren't going to let me in,\" she said. Shaking her head, resting her hand on my shoulder, looking off a bit, she went on, \"On the radio they just said they have no motive and they can't name the guys yet. They said neither man had any identification and no one seemed to know who they were. Everyone assumes they were religious extremists. It's so strange, I mean, why here? We don't have a building over 4 stories except for the hospital,\" she said. \"We're nobody.\" \n\nShe asked, \"So can you tell me what happened? To you?\" \n\n\"Yeah. Mostly I came across dead or dying people. I...\" I decided that I would give her the same version of events that I'd give everyone except for the police. I'd tell her the details when she was settled and calm. She was obviously upset, eyes puffy and the panic in her voice on the phone had been surprising\u2014I'd never thought of her as the panicky type. Some things I would pretermit.\n\n\"I heard shooting down the hall and I got some new doctors to leave through the window of the classroom. Then I sort of followed the killers down the halls to the cafeteria, where I finally saw them. I had a pistol I took from a guard who was down and the first time I fired it, I shot my own hand. There were security guys there and the bad guys were killed.\" (Did I protect myself by pointing to the buffoonish aspect of the incident? Was I avoiding her?) \"Hurt like hell, Babe. There was a mother and her 15-year-old kid the killers were using as hostages. They survived but got quite a scare. Then the police showed up.\" \n\nKaren Ann was incredulous and syrupy, a bit mocking, disdainful. I'd never heard that from her. \n\n\"I think you were brave, even if you can't shoot. All that Marine stuff was just too long ago, I guess,\" she said. It was as if she were pushing all thought aside where I was concerned. She pushed aside all faith in me. She didn't wonder that I'd shot my right hand, despite my being right-handed. I loved Karen Ann since the time I saw her at that wedding. She'd been calm for both miscarriages and faced the operations with strength. I'd been there every sufferance. She was different in this; I didn't understand her attitude or the upset in her eyes.\n\nI realized suddenly and clearly that my wife had no respect for me. Perhaps because of leaving the Marines, the disappointment of our small house, my willingness to accept a minor position for work, and the other disappointments of our lives together, she had lost any conception that I was competent and did some good. She thought her husband inept and less than common, and she skillfully categorized information to support that as a prejudice. \n\nYour low-key humble-trappings demeanor was paying unwanted dividends, John, I thought wryly. In an age of self-promotion, you project modesty. Even your wife thinks you're inept, Knucklehead. You're a dolt.\n\nThere was a knock on the frame of the open door. \"Uh, John Buck?\" There was a woman at the door, holding up a badge. \"I'm with the police. I need to interview you about what happened.\" She walked in. \n\n\"Of course, Officer. My wife, Karen Ann.\" I said. \n\nKaren Ann said, \"I'll get out of here. I'll be back after I take care of the kids.\" She left immediately. It was a quick exit, as if she had no interest in these proceedings and a large one elsewhere. The kids, I was sure.\n\nThe detective said, \"Sorry. I didn't mean to interrupt anything.\" \n\nI shook my head. I knew how it looked and I wondered. \n\nI recounted my story in as much detail as I could. She asked questions. I had not seen the killers before. No, I had not seen a third shooter. Yes, I knew how to use a pistol; I'd worked at the pistol range occasionally during my last year in the Marines. No, I'd never fired left-handed. \"The range was short.\" She looked at me and nodded. \n\n\"Mr. Buck... I just want to say, have you no idea what you did?\"\n\nI didn't smile. I remembered the gore as I aimed a pistol at two guys on the floor. \"I killed two bad guys.\" \n\nShe shook her head. She said they had not released the identities of the two, and that my actions were being discussed in the news, although my name had not become known yet. I thought back. The only people who had seen me clearly were the two security guys and the two hostages after I acted; the woman and her son. Everyone else was down, hiding behind tables and chairs, trying to get out of the line of fire. Perhaps someone had hazarded a look, but I'd quickly turned to sit on the bench and protect my hand after I kicked the weapons away. Perhaps only a few knew. The detective said I should avoid telling people; if these were terrorists, the less information in their hands, the better.\n\nKaren Ann came back in tears two hours later. I assumed it was the wanton butchery upsetting her, the scope of the disaster being overwhelming for anyone. She just shook her head and said it was horrible, occasionally crying. Casualty lists were emerging as next of kin were notified and area hospitals identified patients. She sat by my side until I was sent to x-ray, and she was there as the hand doctor explained the operation I would need in the morning. Karen Ann stayed until nine that evening, and then went home to get things ready for tomorrow. She intended to be back for the operation on my hand and had taken the day off; indeed, the school district was considering closing schools because so many families were affected, one way or another, and the end of the school year was only a few days away.\n\nThe attack was all over the news. A comprehensive list of casualties came out about midnight. Dead were nine hospital employees: Thomason the guard whose pistol I had used, his good care of his weapon had ended the murders; one administrator who I knew well, Curtis Wills, the hospital's chief accountant; several with whom I had a passing acquaintance; two doctors, one who had been honored for a heart valve operation he'd pioneered. Jody still lived, but there were more deaths. Twelve visitors were killed out front in the waiting area, and in the cafeteria. Other casualties were legion: 37 people were treated in various hospitals in critical to good conditions. I was listed as fair. \n\nMrs. Spagnol and her son Tony were alive after their hostage experience, but only because the security guards confronted the gunmen. No one knew a motive, or at least no one thought it was anything other than religious extremism visiting small town America. Perhaps that was the point.",
        "It was four in the morning when I awoke, disoriented. I was in a hospital room. Karen Ann was home with the kids. My hand throbbed. They planned to operate on it in a few hours. I stared up at the ceiling. I remembered the bodies. I thought of Karen Ann's concern, her almost abrupt visits, her odd weeping. Something was going on. My mind leapt to conclusions which I discarded as silly. \n\nKaren Ann called about 5:30 a.m. to say she would be there after the operation: she needed to get the kids to her parents and write lesson plans for school. She was sorry she couldn't be there before the operation.\n\nMy hand was repaired as well as it could be by Dr. Tara Beatol, who was the hand doctor for our part of the world. She operated at 7 a.m., her first of the day. My grip would probably never recover good strength, but I would have one. All my fingers would work, and I would feel and could even lift as long as that grip threshold was not reached. I could throw a ball, but my release might be difficult or make me wild. My jar-opening days were likely ended. People would notice a weak handshake. I was just a little crippled, and it would not be obvious. \n\nShe worked on my hand for five hours, a long time for a hand, I think. I was put into one of those euphoric \"almost awake\" states that regular people call sleep. After the operation, I imagined seeing Karen Ann by my side, and she was, but so was a scruffy guy who looked like he needed sleep. \n\nI was foggy for a while, so the guy stayed in the background until I asked who he was.\n\nKaren Ann said, \"I don't really know. He has a badge.\" \n\nHe stepped forward. \"Mr. Buck, I'm Special Agent Remarque. I'm with Homeland Security.\" He paused, letting me think about that. \n\n\"Mrs. Buck, you should hear this. After yesterday, we believe that you and your family may be in some danger of retaliation by the Islamic World Caliphate, the group that attacked the hospital.\" Karen Ann's eyes showed surprise. \n\n\"Why us? \" she asked. \n\n\"Because of your husband's actions yesterday,\" Remarque said, looking at her as if she were not quite lucid. \n\n\"For shooting himself in the hand?\" she asked, incredulous, laughing. It sounded like sniggering to me. The agent looked from her to me, and he saw the expressions on our faces. I shook my head the tiniest bit. The agent saw it and looked at Karen Ann.  \n\nShe concealed what confidence she had in me, which I now realized was very little. Her disdain was practically adolescent. I thought she appeared... arrogant. Of all her quirks, of all her attributes, I'd never recognized arrogance in her.\n\nRemarque, seeing the marital dynamic and probably wondering at it, decided not to volunteer details. He was a professional at walking into situations with incomplete knowledge. \"No, just for being involved at all. We think we can contain the story to some degree, which should afford everyone involved some protection, the guards, the hostages, the witnesses, and,\" he hesitated just a split second to peek at me, \"the guy who killed the terrorists. We've confiscated the videos from the two surveillance cameras in the cafeteria, and the ones in the hall don't show much. There's a cell phone video playing on Youtube from one of the people in the cafeteria, and it shows the takedown, but you can't see who it was; it's just too fuzzy and the light was not great, the voice is unclear,\" he said. \"Mr. Buck, we'd like your cooperation in keeping everyone's name quiet.\" \n\nPerhaps Karen Ann assumed I was a witness. I'd given her that impression.\n\nI hesitated to think; I knew the guards, Jody, the Spagnols. \"That should be no problem for me. The guards?\"\n\n\"They want to keep it quiet. We're also keeping their names out of the news, the two hostages, also. Everyone knows what happened, but not who did what. We'd like everyone to keep the names out of the story. The guards'll just say it was someone they didn't know. A visitor, probably. Hopefully, everyone will be protected. No one should give anyone's name.\"\n\n\"You saw what happened?\" Karen Ann asked me, surprised I'd been that close, I guess. In the whole affair, that was as close as she came to being impressed with me, or respectful. Perhaps it was my fault for not being up front about it. \n\n\"Yeah, I saw it; you could say that. Then I shot my hand and I got real nauseous and the police were everywhere,\" I said. \n\nI'd not realized her loss of regard. I trusted Karen Ann with everything, EVERYTHING. Even though I joked about my foibles and actions, I thought she had a higher opinion of me. It's a part of the marriage commitment: to love and honor. What does honoring your spouse mean? Didn't she see humility as a virtue? She likely did, in theory. She simply didn't recognize humility in me. Humility required a level of competence she didn't consider mine.\n\nI was disappointed in her. I wondered what had happened to us, and when. How.\n\n\"I'll be back in a bit, Mr. Buck,\" Special Agent Remarque said, \"and we'll need to get into some greater detail.\" \n\n\"Anytime, sir, I'll be here all day today and tomorrow until noon. At least, it's what the doc said. After that, I'll be home a few days. You must have my address?\"\n\nHe nodded and left. Karen Ann put her head on my shoulder, awkward though that was. \n\n\"Glad you're okay,\" she said. \n\n\"Me, too,\" I said.\n\n\"Did you see who killed them?\" she asked. \n\n\"I didn't see much of him,\" I said, considering that truthful if misleading. \"I'll not tell anyone anything.\"\n\nI resolved to make an effort to talk more with her, to ask her opinions, to give mine and accept disagreement. I wanted to diminish the strange distance between us. I wanted Karen Ann to love me as much as I loved her. My good arm was around her, her head was on my chest, and I kissed her hair.\n\nChapter 4: Arrogance and Disloyalty\n\nFor some time, the arrogance of some of the best doctors at our hospital had rankled me. One surgeon made a small mistake during a liver transplant by accidentally slicing a drain tube, and had to replace it for the operation to continue. The mistake was no big deal; the operation went without a hitch, really, and the patient was doing well, but I watched as he called the family together to give them the (legal) rundown on the procedure. Still in his scrubs, straight from the operating room, he went over and poured himself some burned bad coffee from the pot in the waiting room, then sat down with the family, leaning back like one of the guys. I noticed he held the cup of coffee to his lips occasionally but did not really sip any. At the end of describing the successful operation, he said, \"Oh, one little thing...\" And then he described the slight mistake, as the law required. \n\nCheek, I thought. He knew their only concern was the condition of their loved one. This guy sold an exhausting operation like a referee with a bad call or a car salesman with a slightly beat up but decent car. It would bother me. Legally doctors must admit their humanity, admit their mistakes, and most do, most of the time, but listen for them carefully. They're just people.\n\nI came to a different conclusion as I had more experience with doctors. One of our doctors failed to save a woman with an aortic aneurysm, and he trashed the operating room, throwing trays of instruments and breaking a light, scaring the other doctor and the nurses around him. He was arrogant and angry and I reflectively thought: DAMN, I WOULD WANT HIM FIGHTING FOR ME, willing to do whatever it took to save my kid, or my wife, or my mom, and taking it personally if he couldn't. If he didn't believe the procedure should work at least this once, who would?\n\nArrogance was a small price to pay for knowledge, judgment, skill, and determination, all wrapped up in a human being. Personal characteristics aside, doctors dealt with us in our worst moments of life. Perhaps in order to inspire confidence, arrogance was projected as a form of confidence. It was not all of the doctors, but it was not rare. Some were more self-actualized, confident, joking and sincere, looking into a patient's eyes as if every word was significant and revealing, or into the face of a husband whose wife was in dire condition and who deserved one moment of understanding from the person most likely to help, if anyone could. Often arrogance was just arrogance, building up the confidence of doctor, patient and family when confidence was most needed. \n\nOf course, that doesn't make them easy to like. I don't blame the arrogant, nor do I seek their company.\n\nShawn Dunston was an arrogant one. Many a nurse, many another doctor, had been openly chastized for a mistake or difference of opinion during the middle of an operation, even in the operating room with the patient laid open before them. \"He just thinks he's God,\" I heard an exasperated nurse say once. \n\nLikeability was beside the point, though. Dunston was a very good doctor, considered by one magazine (which rates doctors like football teams) the best cardiologist in this part of the country. He invented a procedure that vastly improved the likely survivability of heart transplant recipients and wrote a paper on procedures to help heart valve replacement. The hospital was proud that he was here. Since his paper was published 10 months before the shootings, he was requested for consultation or speaking engagements in hospitals around the country\u2014Johns Hopkins, Mayo Clinic, Cleveland Clinic, UCLA. Why would a guy like that stay at a country hospital like Merciful Lord? Indeed, I had heard that the board expected him to resign at the end of his contract, once he decided whether he wanted to live in New York, Los Angeles, or any one of the other places that good doctors go to become richer and more famous. \n\nHe had a great future until he was shot through his heart walking into our cafeteria. He was relatively young, 40, and handsome, dark and tall, and probably played tennis well. He chose the wrong moment to get that coffee or sweet roll, and he took a 5.56 round in the front and out the back obliterating most of the muscle that beats, the same one he knew how to exchange for another. \n\nI hardly knew him, but occasionally we'd pass in the hall. I'd met him at two parties over the three years I'd been here. He'd acknowledge my greetings with a wave of his hand and looking past me, pointing out my inconsequence to him. He was known to have attracted quite a bit of money in the form of donations, having founded and led the heart transplant team the last four years and gaining a reputation for helping some very sick people. Regional, largely rural hospitals rarely conducted heart transplants, rarely obtained the required licenses and certification: ours was one of those few. I admitted to telling people I knew him; sometimes, he was the only reason people in other places had heard of Our Merciful Lord Hospital or Sky Grey, Ohio. \n\n* \n\nI went home on Friday, two days after the shooting, but I was practically couch-ridden with my hand up in a contraption for a few days. I would sleep on the couch due to the strange contraption. I liked seeing the kids, Hanley still immobile and Dylan toddling about and trying to speak words. Karen Ann took them to her parents and occasionally mine, so they were taken care of and I wouldn't have to do anything, awkward as I was those days. She had a lot to do that weekend and with work Monday and Tuesday, since the last days of school with the students had been cancelled. She was on the phone in the other room a lot Saturday. \n\nAnyway, I spent most of my time at home, figuring how to use a bathroom with a hand on a wheeled holder-upper, learning to use a remote control left-handed. I watched the news, saw the shadowy recording of my actions. Anyone who looked carefully could see that the shooter had shot his own hand. They heard the yell as I shot the second guy, and my statement standing over them was clear, the only clear thing on the whole recording, but it didn't sound like my voice. I doubted anyone could identify the voice as mine, perhaps Karen Ann or my dad. Dad might recognize how I carried myself. In any case, I was lauded anonymously on Fox, one guy calling me a hero and another on MSNBC an \"unknown deliverer.\" I shook my head.\n\nIt did identify the shooter as a Marine. I expected to be identified, but was not.\n\nKaren Ann was in and out Sunday, shopping for groceries and even visiting the mall for clothes for me: shirts I could get over my hugely bandaged hand and without buttons, etc. She went to Walmart around midnight to be sure the family had what it needed for a few days. I didn't see that there was need for such a rush.\n\nThe community was coming to grips with the tragedy. Funerals began on Saturday, and most were scheduled in the coming week. One notable one was Monday: Wills, the accountant, whom I counted a friend. I didn't go, unwilling to drive with so many painkillers in my system.\n\n*\n\nOne of the dead terrorists had a brother, it later turned out. I imagined him begging his brother to accompany them, but his brother refusing him. \n\nI visualized their parting. \"It is not your mission. You are not trained. You have another destiny,\" perhaps his brother's last words to him as he left for Ohio, Youssef hugging him briefly with a hand behind his neck. \n\nI imagined him on that day of the massacre, as my hand throbbed in the night, first getting the news that his brother was dead having killed so few despite the expectations. It was supposed to be glorious, backcountry Americans facing trained warriors. Youssef would not be the great martyr he'd promised to be. \n\nPerhaps he mourned his brother's failure in the great moment of his life, shot in the head by an off-handed infidel. Youssef was gone now, so cheaply. Not a failure, but not what they had hoped. In a town just east of Indianapolis, facing east on his knees, he may have had tears streaming down his face at his loss.\n\n*\n\nKaren Ann still had school\u2014the last two days of the teacher schedule were that Monday and Tuesday. I asked her, what do you do at school on the last days without students, and she said she had books to count, posters to take down, walls to clean, recommendations to write, grades to check, meetings to attend, you know. She was obviously tired, having gotten only five or six hours of rest after all her shopping and work yesterday. She kissed me goodbye Monday morning and left about 6:30, wearing blue jeans and a work shirt, saying she'd be home at the usual time. She took the kids to her mom's house, across town, where they could spend the day and I wouldn't have to care for them.\n\nIt was about 10:15 a.m. that Terry Marks called, asking for Karen Ann. As the teaching team leader, Terry had to verify that each teacher had entered an accurate grade and Karen Ann's grade for one student was not consonant with the average she'd earned for the quarter. This happened when a teacher decided a student deserved a higher grade than the average in the computer; never did teachers enter a final letter grade below the percentage indicated. She said she had a question about the grade Karen Ann wanted to give a kid.\n\n\"Uh, Karen Ann's not here. She should be there with you guys. She left here around the usual time,\" I said. \n\n\"Oh. I thought she stayed home to take care of you,\" Terry said. \"Took a sick day.\"\n\n\"No, not here. If she's not there, I don't know where she is.\" \n\n\"It's probably my mistake,\" Terry said, as if something was dawning on her. I could hear an almost desperate quality in her voice, like she'd committed a faux pas of some sort. I didn't understand. \"She's probably in another part of the building. I just haven't seen her up here, but all her stuff's in so there's no reason she'd need to be up here.\" \n\nI thought about that a minute. \"Well, I can't help you, Terry. I'll let her know you're looking for her when I see her.\"\n\n\"Thanks, John. Hope the hand feels better.\" \n\n\"Thanks. Bye.\" I hung up. Terry's mistake was calling on our landline, instead of Karen Ann's cell phone. \n\nIt was about 12:30 p.m. Karen Ann called to see how I was. \n\n\"John, how's home?\" she said. \n\n\"Fine, Babe. How's school?\" \n\n\"Oh, you know, so much to do to close up the room and things. Too many books, all have to be counted and stacked and discrepancies noted. It gets tiresome after five hours, working mostly alone in the room. I have a lot of stuff to pack this year.\" \n\n\"Why don't you pick me up and I'll keep you company?\" \n\n\"Nah, I'm going to go out with some of the other teachers,\" she said, \"get some lunch. You take it easy. I'll see you around 4:30. Okay?\" \n\n\"Fine, Karen Ann, see you then. Love you,\" I said. \n\n\"Me too, John. Bye.\" \n\nMe, too. \n\nFather Michales called that afternoon. \"John, this is Mike. I know what you did, John. I spoke to the security guards before the police even got them, but we're doing everything we can to contain it. It's probably best your name not be out there for the extremists.\" \n\n\"Thank you, sir. I hope to be back at work next week or so.\" \n\n\"Take your time and heal. Things won't be normal here for a while. It's pretty awful. There are lots of Homeland Security investigators around, lots of police from various agencies, some in full battle dress.\" I could imagine him shaking his head.\n\n\"Okay, well, one of the investigators is supposed to come by tomorrow,\" I said. \"My hand is pretty useless and the bulky wrap is tough to get around.\"\n\n\"I'll be in contact. I have funerals all week, insurance issues, but I should be able to contact you. Get better, come in and see me if I'm around, and we'll talk about some ideas I have. I'd like to change your job a little. Or a lot.\"\n\n\"Yes, sir. Thanks for calling.\" \n\nSo he was thinking about changing my job? Father knew what he was doing. He was purposely increasing my anxiety level, making me want to get back to work: to see if I had a job? That didn't sound like the administrator I'd known for three years. No, he wanted me eager to get to work for its sake. I wondered what ideas he had.\n\nKaren Ann and the kids arrived about 5, Dylan running (with a huge wet diaper between his legs) to me, and Hanley in her arms. \n\n\"Tonight, I just want to take it easy and watch you play with the kids,\" she said, smiling. \n\n\"I'll second that. I don't have to use that contraption anymore, thank you Dr. Beatol,\" I said. She'd said just through Sunday, so I'd slept in my own bed next to Karen Ann. We ordered pizza, and sat around watching TV, getting Hanley to smile, and rolling a ball with Dylan, or rolling Dylan like a ball, pealing laughter. After feeding Hanley, we put both kids in their beds and the evening was calm. \n\nWe sat on the couch and kissed a bit, and I reached for her breast. She laughed and said, \"You'll get wet, be careful!\" \n\n\"Do you think she left any for me?\" I asked, opening her feeding bra, the unsexiest female undergarment ever invented. \n\n\"Why don't you try?\"\n\nBreast milk was sweet, but I already knew that.\n\n*\n\nTuesday morning came soon, and the memory of our first lovemaking in many months lingered. I have always loved waking with the memory of sex the night before. In this case, with the birth of Hanley just nine weeks before, Karen Ann refusing to use all the maternity leave near the end of the school year, and then the shooting, life had not been conducive to romance. Last night had been wonderful if a little sticky, but very refreshing for my confidence. \n\nKaren Ann was up and dressing again for school, this time in a nice pants outfit. I watched her. She finished, saw me watching her in the mirror, and then came over. She sat beside me, put her arm across me, leaned down and kissed me softly. \"I have to go now. The kids will be with Mom and Dad, you don't need to worry about them.\" She said it all very softly. She leaned in and kissed me again, stood, and turned. At the door she looked back and said, \"Good-bye, John.\"",
        "\"Have a good day, Karen Ann,\" I replied. She shook her head and left. The very last day must be hard, I thought. \n\nIt was about 10:15 a.m. that the doorbell chimed. I was dressed and presentable when I opened it. There stood a very young, smiley, high-school-senior-type girl with a ponytail, in shorts and a sleeveless shirt. She wore sunglasses and smiled brightly. \"John Buck?\" \n\n\"Yes?\"\n\n\"Oh, you hurt your hand?\" she said. \"Here\u2014you are served,\" she said, putting a manila envelope in my left hand. I almost swooned. I saw the word divorce among others on the envelope. Me? I asked the little girl if she had the right address, the right name, the right me.\n\n\"Yes sir, you are John Buck at this address, sued by Karen Ann Prynne Buck. I see this a lot,\" she said in a perky, what-can-you-do voice. \"Well, sorry, gotta go,\" and she hopped off the steps and out to her dinky car. She pulled away. I guess you're older than you look, I thought. \n\nI had a large envelope of papers in my hand, but I couldn't think of what to do. I stood there for some time. \n\nI went inside finally, where it was cool. I sat at the kitchen table and thought, but my mind was completely blank. I searched for my cell phone and finally found it, but Karen Ann didn't pick up. I left a message: \"Karen, what's this all about? Divorce? Please, explain what's happening.\" \n\nNext, I called her school. The school secretary said, \"She took today off, Mr. Buck. She said she had a lot of things to clear up and needed to go out of town. She promised to finish up here next week or so.\"\n\nI called her parents, Rose and Bob Prynne, never great fans of mine but not bad people. \n\n\"Hello, Rose? This is John. Do you know what's going on with Karen Ann? I was just served with divorce papers. I can't reach her, and the school says she's out of town. Do you know?\"\n\n\"Oh, John,\" said Rose, with sympathy in her tone, but then I heard her give the phone to Bob.\n\n\"Yeah John, she told us about it yesterday when she picked up the kids,\" he said. \"You should look carefully at the papers, John, especially about the kids, okay? She had to make a move to be sure they get what's coming to them.\"\n\n\"What do you mean, the kids? What...\"\n\n\"They're not yours, John. She had a long affair with a doctor named Dunston. They're his kids, and she's going to make sure they get their inheritance. He said he'd take care of them. She was planning on marrying him in six months anyway, so this was ready to go.\"\n\nI felt a weight of emotion in my chest. I was quiet awhile, unable to talk and thinking of what I wanted to know.\n\n\"Did you know of the affair, sir? Before last night?\" I asked. \n\nHe said nothing, but I heard him breathing so I knew the answer.\n\nI hung up.\n\nI had never felt this way. Heartbreak was devastating. It crushed. I thought, is this survivable? It was so overwhelming. How many suffering this sudden desolation would stop their heart by force of will alone if they could? I didn't understand why my heart kept beating. Who wanted to live at this price? I felt the thump of my heart. I stood outside myself and was enlightened: I understood so much better some of the passionate and heart-rending passages in literature and Bible. Doctor Zhivago, Anna Karenina... I understood a woman swooning at such a moment, or a man descending into his cups, perhaps never again to emerge. I understood the old laws allowing an outraged husband to murder adulteress and paramour. I understood countless songs of betrayal and loss and disappointment. \n\nKaren Ann. I shook my head. I cried out. Me.\n\nChapter 5: Original Sins\n\nI remembered a professor of philosophy who once told our freshman class, \"You want to get what you deserve in life? What you DESERVE? What the hell do you deserve in life? What is promised you out of the womb? Hobbes says one thing, Locke another, Kant, Nietzsche. What you DESERVE? Hasn't the idea of Original Sin made any impression on you Christians? Most of us are hoping we DON'T get what we deserve!\" \n\nHe was a Catholic philosopher. Wore no socks.\n\nKaren Ann called about 11:30 that long Tuesday, in the evening. \n\n\"John, how's the hand?\" she asked. Now she noticed. She was probably very concerned.\n\n\"Fine. The kids are NOT MINE?\"\n\n\"No. Shawn knocked me up the first time he fucked me. It was... wonderful. I have those two little angels to remind me of him.\" \n\nWas I already dead? I descended emotionally into petulance, whining, and outrage. I saw it in myself, knew it was pitiable\u2014but I was unable to stop the sinking. \n\n\"Are you trying to hurt me?\" I asked.\n\n\"No, of course not,\" she replied breezily, affectedly, \"It's just that you, someone like you, will never understand what we had. Shawn and I. It was transcendent. Beyond normal love. He was a man such as women dream to love them. I count my time with him as the best of my life, the best it could be.\" \n\nI felt something in her words contradictory to the reality of a years-long affair, but I couldn't identify it yet. It was fantastic, unrealistic, and rationalizing. She had lived with this explanation for some time, I thought, and believed it now. I'd always considered her mature and down-to-earth. I hadn't perceived this part of her personality. \n\n\"I thought you loved me. Were those words meaningless?\" I was building my pain, hurting myself, wanting more of it. I needed the pain to hurt as much as possible. I wanted to never have been born. \n\n\"Oh, no, not meaningless. Perhaps I misinterpreted my feelings as love.\" She sounded tired... or bored. \"It's hard to explain. What Shawn and I had was special. We were about to tell you, by the way, but... the shooting ended that. He was not like you, he was first rank. He won at life. He was respected, admired, so famous. Talented. Shawn said after I became pregnant with Dylan\u2014Dylan was Shawn's middle name, by the way\u2014that he would provide for his son in his will. Later he said the same for Hanley. It will be read after the funeral Thursday. Hanley was his mother's maiden name. I notified the lawyer I'd be there tomorrow to meet the family\u2014there's some sort of pre-funeral gathering for those in the will. I know nothing about them, either. Shawn never once mentioned them. Anyway, they'll probably be thrilled to find he has two kids.\" Her disjointed, breathless explanation seemed too breezy, too much an attempt to sophisticate a tawdry choice. \n\nI assumed he was probably too busy screwing her to talk about mundane things like responsibility and family. A man like that did first things first. I felt myself descending further emotionally.\n\n\"How do you know they're his?\" I asked, afraid I knew. \n\n\"I used a diaphragm with you. You never noticed it, did you? Then I did DNA tests. Right after each was born. You never suspected, did you?\" She laughed a little but then must have realized how it would seem to me. \"Mrs. Grigsby across the street said she wondered if I had a different husband in the summer, Shawn was over so much during the days. I had to beg her not to tell you.\" \n\nOh my God. So the neighbors knew? Her parents knew. Terry Marks's voice was more understandable now. Was I last to know? Did they all cover for her? The kids were not mine and about to inherit probably a bundle, Karen Ann had become hateful, and they did it here?\n\n\"In our bed?\" I asked.\n\nI heard her sigh. \"Yes. Many times. He wanted the firmer mattress, by the way. I'd have to change the sheets right as you got home. Shawn made me overflow,\" she said, obviously to diminish me, as if copious semen were a sign of character. \"I've come to terms with his death. At first I couldn't...\"\n\nI hung up, thinking some grief is beyond words. I wondered but knew in my heart that the second miscarriage was Shawn's child. The mattress, the children, the wanton acts, the disrespect, the glossing, the contraception without my knowledge, the insults, the whole affair... That was the first night I drank too much over Karen Ann, Dylan and Hanley. I didn't take any of my pain pills, but I considered taking them all. I stared at that little bottle for a minute, maybe two.\n\nI awoke the next day around noon. It was a hangover like other hangovers, only more so, I thought, remembering that wonderful, sleepless but now meaningless night that we cuddled watching \"Casablanca.\" Only a month ago?\n\nI cleaned up, dressed and found a divorce lawyer recommended by someone's friend. I took all the papers over to him about three that Wednesday afternoon. He was a heavy guy, about 50, with a moustache and longer hair than a man that age should have. In any event, he seemed sharp and successful. \n\n\"How'd you hurt your hand?\" he asked after I came in the office. I sat and he took the papers behind the desk. He started scanning\n\n\"Got shot at the hospital,\" I said. He stopped looking at the papers and looked at me. \n\n\"And she served you yesterday?\" he said, at that point shaking his head and whistling. He looked back at the papers. \"Oh, I see. The father, Dunston, killed at the hospital?\" he asked. \n\n\"Yes.\" \n\n\"You never knew?\" \n\n\"No.\"\n\nHe read everything with me there, an hour's worth. Then he sat back and blew out a long breath.\n\n\"Mr. Buck, this is one of the most heartless, evil things I've ever seen a woman do. Craven. The callousness... You go through something like that and it turns out to be the catalyst for your own divorce,\" he said and shook his head. \n\n\"Her parents said she intended to divorce me and marry him,\" I said. \n\n\"Likely story,\" he harrumphed, skeptical. \"Guys string these gals along with promises and usually there's nothing there but a roll in the hay. You say she's at a meeting about his will, and the reading is later?\" \n\n\"That's what I was told.\"\n\n\"I'd like to be a fly on the wall at that meeting,\" he said. Then he lowered the boom. \n\nHe said I had little recourse legally or practically. I had been a caretaking father, but he said she threatened to claim abuse and other things if I didn't agree to the terms offered. \"It's in lawyer language so there is no implied coercion. But it is there and every lawyer in the country would recognize it.\" No shared custody, no visitation, clear out of the house by Friday night, no contact with the kids, but also, no alimony or child support. \n\n\"Obviously she expects a bundle in the will and does not want you to have a claim to her money or the kids'. The kids are so young she's claiming you and they are not bonded yet, and since no biological connection exists she wants complete authority, period. The court is likely to agree, as that would prevent years of haggling over visitation and custody, alimony, child support, cut the bond before it's strong, especially since your job does not provide enough means for their support.\" \n\nHe looked at me, steepled his fingers. \"I'll do anything you want, Mr. Buck, but you cannot afford and would probably lose any demand for shared custody or frequent visitation. You might get some once a week visits, maybe with a chaperone, especially if she claims abuse. It could be dirty, and some people never recover from even unfounded charges.\" He stopped talking and a few seconds of silence followed with him looking at me.\n\n\"So?\" I asked.\n\n\"What do you want, Mr. Buck?\"\n\n\"My kids. My wife,\" I pleaded. My life back. I couldn't go on for a second, realizing I was begging. \"But I have no means to raise them on my own. My life is falling apart, I'm recently crippled. I need to think.\" I sat for a minute, eyes closed, still hungover and feeling my heartbeat behind my eyes.\n\nI said, \"I need a few days. I'll contact you by Friday, okay?\" \n\n\"I'll check with you Friday morning if you don't come in by 11,\" he said. I wondered at that. Concern? He saw the sunken eyes, the half-shaved face, the rumpled clothes. \n\nI stood. I held out my left hand and we shook. \n\nHe asked, \"How'd you get hit?\" \n\n\"Shot my own damn hand.\" We laughed. \n\n\"Not the first to do that.\"\n\nThat meeting in Connecticut was probably over by the time I left my lawyer and walked out into the sunshine of a late afternoon. As it turned out, there was a fly on the wall in that room in Connecticut. He wore a clerical collar.\n\nEarly that evening, the phone rang. It was the fly.\n\n\"John? This is Mike.\" Father Michales, pronounced mike-uh-lus, would call himself \"Mike\" in private conversation, but it was the first time he'd done it with me that I could remember. \n\n\"Yes, sir, I didn't expect a call.\" \n\n\"I'm in Connecticut, and I wanted to check up on you to see if you were alright. I'm caught up in the estate distribution for Dr. Dunston; we have some insurance and investment involvement with him. The man left a lot, I mean a LOT\u2014of loose ends. I saw your wife here, but we were in different parts of the room. She saw me but didn't come over.\"\n\n\"Yes, sir, she sued me for divorce. She contended our children were Dunston's and she believes she has some claim on his property,\" I explained. \n\nThere was a long pause not as if the man was shocked but as if the statement deserved consideration. \n\n\"Yes, I figured a lot of that out. Your wife was under the impression that Dr. Dunston was not married,\" he said. \"Or at least I believe so. However, all his insurance papers listed a spouse still married to him. Mrs. Dunston is here with their two kids living in the Dunston family house; the family's been here since the early 1800s. Karen Ann introduced herself as Dr. Dunston's fianc\u00e9e, which brought a hush to the room of perhaps 40 people. His wife walked up to her and smacked her across the face. That's how she found out about the wife. Karen Ann's staying in the same motel I am.\" \n\nKaren Ann must have felt humiliated. I felt like laughing, but suddenly her humiliation swept over me. Her humiliation was also mine.\n\nHe went on. \"Anyway, all were given copies of his will. Nothing was stipulated as confidential. The official reading is after the funeral. I will be there, but the lawyers for family and various investments and businesses are much in agreement. The insurance money goes to his wife, per the contract. His private investments will be split among his children, now totaling four, with your two. Investments were a little over a million bucks, so not inconsequential. The surviving parent is trustee of the children's money; the lawyers agree it does not mean the wife has control of Dylan's and Hanley's shares, but that Karen Ann would fulfill that role for them. There is no provision in the will for Karen Ann, by either name or implication. The wife inherits the house and a special fund to pay its taxes for probably ten years, our lawyer says. Also, two companies will be sold and the proceeds go to the family, with his wife getting his share. Oh, she gets the joint checking account.\" \n\nHe allowed me a moment to feel smug. I squelched the urge to exult. None of this was good. There was nothing good in finding out you've been manipulated deviously and considered contemptible. There was no joy in discovering your wife and your marriage were ruined by lies. \n\n\"I'm sorry Karen Ann didn't realize... Perhaps,\" I said, \"it would have had a different outcome if she'd known more about him.\" \n\nI almost felt that Father Michales was nodding. He sounded sorry for her. \"My experience with adulterers is that the longer they deceive, the more disdainful they become of the ignorant husband or wife. They see trust as stupidity. They give credence to their new lovers.\" \n\n\"I agree, Father.\" I think analyzing it was a way to distance myself from the devastation of the situation. \n\n\"In the end, they're... pitiful,\" he said. \"Always.\" He paused a moment. \"She expected a bigger payout from Dunston; that was obvious to everyone at the meeting. What if she withdraws the suit, or asks for alimony or whatever? What will you do?\" He wanted to know if the marriage could be salvaged.\n\nTo live with Karen Ann again, to wonder for life if it was marriage or if the cuckolding continued? To fulfill not the role of consummate lover but at best, acceptable substitute? I said, \"I think it's too late for us. She was hateful, almost gloating telling me about her affair with him, as if her affair made her more important. She was ashamed of me. I don't know, Father. I'll talk to my lawyer first. It's hard when your wife... turns away. I always expected to turn to her in times of trouble.\"\n\nCalmly, he said, \"I'll see you in a few days or next week. We have some important things to discuss about changing your job. I think you'll like them. I hope so, anyway. I'll see you when you're able to come by.\" \n\n\"Thanks, Father.\"\n\nHe was leaving me with something positive to anticipate; perhaps he had a psychology degree among all his others. I felt like a great evil had settled into me. I understood the idea of possession by the devil: It suddenly didn't seem so ridiculous.\n\nHow was it possible to feel such pain, and such pain without physical injury? My hand was as nothing. I lay dying emotionally, and it was my body doing it to itself, creating pain out of the strength of love that was betrayed, unrequited, blind, spousal, and paternal. It was in my chest, solid and tangible, and if Shawn Dunston were alive, he could have opened me up and found it there, a mass of solid pain the size of a softball. \n\nI beseeched a God I hardly admitted, but it was really a wallow: Could I die now? Please? What more could You want? She loved me never, gave herself to another from the second month we were living together, disdained me, took my family, and threatened to allege evil and unfounded abuse. My children were not mine; a wave like nausea passed through me. How would I tell Mom? Dad? Such anguish cannot be borne\u2014I wanted to smash my one good fist into a bookcase. \n\nI poured the first of two doubles then. I brooded of Shawn Dunston. Had he ever seen his children? Held them? Kissed them? Had he tickled Dylan or smiled into Hanley's eyes? Did Dylan run to him for a hug? Had he felt jealous of my time with them? Of my time with Karen Ann? I fell asleep from too much liquor and too much anguish, with one thought bouncing about my mind: all affairs were fantasies.\n\n*\n\nThe day of Shawn Dunston's funeral, I woke on the couch about 4:30 a.m., unable to sleep and thinking I would have to leave my house after one more night. I packed my things, preparing them for removal. It didn't take long. It was surprising how little I owned. Lots of books were disposable, a few not. Clothes I threw in boxes or bins, but really, our lack of great means resulted in a frugality that was quite efficient. I filled some boxes and stacked clothes on hangers on the back seat of my car. I had a football, a ball glove, and a basketball in a box I forced into the trunk. Some tools I stacked on the passenger seat and floor. All of my possessions were in one used Ford. \n\nI could no longer avoid a certain moment. I drove over to my parents' house about 10. \n\n\"Mom, Dad, we need to sit. Please,\" I said, holding it together. I told them everything: that the children were not mine, that I did not see a way out, that Karen Ann was angry and hateful to me, and that she was now disappointed in Dunston. My dad nodded with his head down and jowls hanging. \n\nMy mom looked as if the whole world were crumbling. We were in adjacent seats and she clasped her hands behind my neck, and tears ran down her face. She was silent. Dad suggested coffee, understanding the bleary eyes and disheveled appearance I presented as soon as I started talking. I told them that Karen Ann had an order forcing me from the house, that the lawyer said she was prepared to allege emotional and maybe other abuse if I did not comply with her request and sign the papers. Mom cried out at that, realizing the grandchildren were never more her grandchildren. She understood completely; Mom was the smartest of us. There was little chance she could maintain a relationship with them if Karen Ann and I were at odds. I thought we would always be at odds now.",
        "I don't think Mom ever recovered from this blow. She aged about 20 years as we discussed the situation sitting at the kitchen table and drinking coffee. She lived a long while yet, but she became an old lady that day. Her eyes and her movements changed. She sank into senility almost gratefully when it started ten years later, as if appreciative that the burdens of life would now rest elsewhere. She had things to be very happy about by then, including grandchildren, but love was love and it wasn't based on DNA tests. She saw the kids occasionally at a market or park, but after a few months, she was effectively a stranger. They had other paternal grandparents in New England, even if estranged.\n\nHer last few years, descending into dementia, Mom would wander about the yard and talk to herself, talk to plants or animals, lost in the netherworld of her mind, imagining people from her life. We would laugh gently, talking about it among ourselves, seeing her good life exposed by her condition and wishing that time didn't pass for such people. I found her one day, standing beside a tree, talking. Drawing closer, she saw me and asked, \"Do you think Dylan and Hanley can come by for lunch?\" \n\nKaren Ann eventually realized what she'd done and I think regretted it, but that didn't change it. She squandered the love of three generations. \n\nChapter 6: Two Priests and a Nonbeliever\n\nI slept fitfully and for the last time in our house, on our couch. For all I knew Karen Ann and Shawn may have had sex on our couch as well, but I knew they had used the bed. It was a long night looking often at the clock on the tv box, waiting for morning, drifting in and out of sleep.\n\nFriday came finally. Again, I awoke early, shaved, showered and dressed in a loose polo shirt. I decided to try to see Dr. Beatol a day early; the huge bandage was dirty, impossible, and awkward. I still had pain, but I rarely took a pain pill, and I had gone a night without drinking, so things were probably improving, at least for my hand. \n\nMerciful Lord was cleaned up, windows were repaired, bullet holes were filled, painting was ongoing, and damaged counters, desks and tables were removed. There remained a few extra police in the building and on the grounds, but they were in regular uniforms and just keeping an eye on things. I went to my office and it was still there, still small, still as I had left it. I called to see if I could advance my appointment with Dr. Beatol, who was already operating this morning. I left a message and a half hour later, they called to confirm for nine. I straightened my desk, threw away some old papers with which I'd failed to deal and looked at my calendar, when there was a knock. \n\n\"Come in,\" I said, and Father Michales entered, closing the door behind him. \n\nI stood. \"Father, you do get around quickly,\" I said. He held out his left hand and we shook. \n\n\"I learned to manage sleep when in seminary I was sent to some cloistered nuns, getting up at midnight to pray, then working until three, then another hour or two of sleep.\" He shook his head. \"Astounding, really. Remarkable women. Last night I caught a late flight and got in about one.\" \n\nI thought he had another purpose, also. A morning flight would have been soon enough for business.\n\nWe sat and talked, starting with the reading of the will and then to other topics. \n\n\"It was as we discussed. Dunston has four known children now. They will divide the investments. Mrs. Buck was almost shunned by the family. They were quite rude to her, openly rude, but the lawyer executor kept things civil. The kids will get their disbursal, probably in some months. My business there was concluded quickly; our lawyer is still there to wrap up one loose end, but nothing to do with you.\"\n\nHe looked straight at me and said, \"Tell me about what you intend to do.\"\n\nTaking a deep breath, I said, \"She detests me. She said she was with him because I was a loser. Their love was transcendent.\" I couldn't keep the cynicism from my voice, which I realized as soon as I spoke so I hesitated and waved my one hand to apologize. \"She gloated about them having sex so often in our bed... She was so hateful. I was shocked.\"\n\nHe shook his head. \"This whole thing... I saw it and didn't act,\" he said. \"I knew he was seeing different women; I didn't know Karen Ann was one until the meeting before the funeral. I was taught in management classes that the discreet affair should be left to those involved. That's a mistake, especially for an institution rooted in the perception of morality and goodness. It can't be discreet if I know of it. I'll think about this and change how I deal with these things in the future.\" \n\nI looked at my situation, trying for objectivity. I wasn't disgusted, I was bereft. \"We're in our late twenties, Father. These should be the years for us: babies and sex and building a family, and here I am without one. My wife abhors me and I wonder if I've lost every decent dream... \" \n\nHe looked at me. He was a Jesuit. He said, \"I know you don't have faith, but I pray you find your way to God, John. I met Karen Ann only twice that I remember. I hope she finds her way to a more loving outlook. It appears that you will soon be ostracized from the children for whom you struggled all of your adult life. Don't sink. Overcome. You're that guy that wins out in the end. I've seen it in you. God... in you.\" His hand was on my shoulder.\n\n\"The God Solution, huh?\" I said. He'd talked about an approach to solving problems, and to other things over the years, and it always involved introspection, calm, and seeking over time. He didn't believe in quick solutions to social problems. We called it his \"God Solution\" behind his back. \n\n\"Always,\" he said, smiling. \"Now, you said you have to leave your home? Tonight?\" \n\n\"Yes, everything's in my car. I could go to my parents, but they're so upset seeing me might upset them more. About Karen Ann and the grandkids.\"\n\n\"I have a solution. I know a guy who needs help paying his utilities, but he wouldn't charge you any rent. Might want you to help with chores. Share grocery bills. I can probably get it set up today; give me until the afternoon. Or I'll come find you.\" \n\n\"Thanks so much, Father,\" I said. I had never thought of Landon Michales as my friend, but it appeared he was interested. Or grateful or loyal. \n\n\"When do you get the hand looked at?\" he asked.\n\n\"Nine today.\" \n\n\"Well. Tara's the best. We'll talk about your job after that sometime. Today, tomorrow, soon. There is a lot happening for you and fast, so I'll just give you the gist. Most of the larger hospitals have a department that monitors professional development. Doctors, nurses, much what you are assisting now but on a more formal basis. I would like to create that department and enlarge your duties and responsibilities. Right now, the departments handle it in house, but that won't work as we grow. We'll talk. Think about it. I don't know when it would start. Early next year, once we obtained approval and remodeled some. I'll get back to you.\" \n\n\"Father, I don't know what to say. It sounds like a career.\"\n\nHe was nodding and looking directly at me. \"Yeah, it does to me, too.\"\n\n*\n\nDr. Beatol liked the look of my hand and reduced the size of my next bandage by two thirds. I could now wear regular shirts, although buttons would be very hard with the off-hand doing all the work. She told me to come back in another week. Alone with her in the examining room, the door shut, she said, \"I know there is some reason to keep your name out of the press, but I just wanted to say... I think it was terribly brave. I had assumed you were shot by the terrorists. I didn't realize you were the one who ended the attack. How'd you get shot then?\" She had a look of genuine sincerity and... respect. I had not seen much of that.\n\n\"The one guy had a pistol pointed right at the lady's head. I was afraid if I shot him in the head, he'd squeeze the trigger. So I knocked the pistol up as I shot him. The bullet went through him and hit my hand.\"\n\nShe shook her head. \"And you still shot the other guy then? You're a hero, John, you know. You saved a lot of us, and someday it'll be okay to let people know. I hope.\"\n\n\"Kind words,\" I replied, smiling, \"If I were just a little more graceful I might have escaped shooting myself. Thanks for everything, Tara. I'll be back in a week.\" \n\n*\n\nThe cell rang as I returned to my office. It was becoming a busy Friday, and I'd done none of my usual work. \n\n\"Hello?\"\n\n\"John?\" It was Karen Ann. \n\nI said nothing then.\n\n\"John?\"\n\n\"I heard you. Say what you have to say.\"\n\n\"I should not have said what I said, John.\" \n\nSilence. Finally I spoke.\n\n\"I was your biggest fan, Karen Ann. I told people I had married the best person I'd ever met. I lionized you.\" \n\nShe said, \"I was wrong about some things, I know now. We can save it, if we...\"\n\n\"Just stop, Karen Ann! No man of any character could stay in a marriage with a woman who felt as you did about me. There's no argument. What could you possibly want of me? What is there to build on?\" I asked. \"I can't be married to you. You threatened to claim ...\" but my voice quit and my mouth kept moving. I tried to make my voice hard. I had no voice. \n\nShe said, \"John, you are being so unreasonable. Don't you love the kids?\"\n\nI found my voice at the idea that coercion could be negotiated out of our relationship. \"Unreasonable? The issue is character. You have made children into property and I don't have any claim. You abandoned me and took them. You threatened to fabricate the most evil acts in my relationship with them. Unreason is not the issue.\n\n\"A father is more than a guy. He's that one who does what's best for the family even when it hurts. It's hard for me, but I must. I'll sign your papers in a few minutes.\" \n\nShe said, \"You're... cruel.\"\n\nMy voice was hard now, as I finally understood my feelings and my situation. \"I don't suffer the destruction of my family gladly. You destroyed us. How could you even THINK of alleging abuse? NO ONE loved those children more than I. Not even you.\" I paused. Then I said, \"Did Dunston even know them? Hold them? Play with Dylan?\" \n\nThere was silence. Silence can be loud or full. This silence was both. I realized he knew neither child with any feeling, and didn't care to know. His loss, I thought.\n\n\"Where do we go, John?\" she asked, and I thought for the first time she realized she had completely demolished us. \n\n\"You are Ugolino... You introduced Ruggieri into our family.\" I stopped because my anger was taking me too far. \"May God forgive you for him in our lives,\" I said. \n\nI shook my head, and there was silence on the phone. I wondered why she was still listening: Remorse? Loss? Hopelessness? Single motherhood?\n\n\"The kids still have potential. Perhaps you can salvage a decent life for them,\" I said quietly, angrily, \"but do me two favors: First, stop using my name. The kids can keep it if you wish. You made fun of it enough.\" \n\nI waited. I imagined her nodding on the other end of the line. \n\nShe said, \"You said two favors.\"\n\n\"Yeah. Take responsibility for this clusterfuck you called a marriage. And fuck you.\" \n\nShe said nothing. There was a long period of silence. I never used such language, even as a Marine. I heard her breathing. I decided I wanted her to know I was silently there, so I held the line open. Eventually I heard her hang up.\n\n*\n\nI immediately called my lawyer and said I had decided to sign the papers. I drove to his office and he welcomed me with another left-handed shake. \"Reduced the bandages, huh?\" he said. \n\n\"Yeah. My wife called, wanted to drop the whole thing, I think, but it's past that point.\" We were sitting by now, and I paused as more emotion passed through, \"I mean, low expectations shouldn't be the criteria to maintain a marriage.\" \n\nHe nodded and pulled out the papers, marked with arrows for me to sign. He said, \"It wouldn't work. Men can't get past a sincere declaration that someone else is the pig's eye, or soulmate, or however they put it. Only when it's the only way to care for kids.\" \n\nI nodded and said, \"She has some money now.\" \n\nI signed with my left hand, making unrecognizable squiggles, squelching the teary feeling, knowing my eyes must have been shining. \n\nHe said, \"Might be for the best, then.\" \n\nI nodded, unable to talk. I pulled off my wedding ring and put it on the table. \n\n\"I'll take care of everything. In a month or so, it should be over. I'll let you know when the court says.\"\n\nI stood and held out my left hand. We shook. I shook my head because I didn't trust myself to speak. Something died when I signed those papers. My love had been sincere. You never get over the end of a family, even one as bad as mine had been.\n\n*\n\nI returned to the hospital about one and found Father Michales escorting some people toward my office. I walked in and he saw me. \n\n\"Mr. Buck, some people wanted to speak with you.\" That was when I recognized Tony Spagnol, his mother Marilyn, and a man I'd not met.\n\nTony actually threw himself into my arms. His mom waited and hugged me next. \n\n\"Hello, hello!\" I said, laughing and hugging them back. \n\nMrs. Spagnol said, \"We wanted to thank you for saving us. This is my husband Cal.\" Cal was standing with a little difficulty. \n\nI held out my left hand. \"John Buck,\" I said. \n\n\"Cal Spagnol,\" he replied, pronouncing it \"spaniel\" like a dog and clearing up a minor mystery, and we shook left-handed. He was holding onto a crutch with his right hand. \n\n\"We were here to take Cal home that morning when the terrorists came in. Knee surgery,\" she said. \n\n\"I hope everyone is doing well, then,\" I said. Fr. Michales was smiling at all concerned. It was a nice meeting of the anonymous: the Spagnols were not releasing their names as hostages, just in case. We talked a few minutes. Cal asked about my hand and I explained how it happened. He shook his head, realizing my crippling was to protect his wife. Marilyn and Tony turned to leave then. \n\nCal leaned into me and said, \"Thank God for what you did, Buck. I do. I thank Him. And you. I can never repay...\" He shook his hs head and then my hand with his left and right, trapping the crutch under his arm. \n\nI shook my head. \"I'd do it again. So would you, if you'd been there.\"\n\nCal nodded. Marilyn, Cal, and Tony were gone then. \n\nFather Michales was smiling at them as they left. He was openly helping me fight depression. \n\n\"Thanks, Mike,\" I said. No one could hear, and he smiled at my use of it. \"I might get through this after all.\" \n\n\"We can get you counselling, you know. No charge. Hospital can...\" \n\nI shook my head. \"No, you're doing enough. I spoke to Karen Ann a few hours ago. She was trying to make amends but it's beyond that. I signed the papers.\" \n\nHe nodded. \"I hate to see marriages break up. I hate the idea of divorce. Two loving people can always resolve things in time, with God's assistance. I really believe it.\" He sighed and looked at me sympathetically. \"Not all marriages have two loving people. Some have one loving enough for two, and those marriages end long before the couples realize it.\" \n\n\"It's hard to...\" I stopped, unsure what I was going to say, and finally just shook my head. I chastised myself in my mind. Now come on, not with my boss. Emotionally motivated speechlessness?\n\n\"Let's take a ride,\" he said, ignoring my emotion. \"I'll drive.\"\n\nHe drove us only a mile or so down the street. \"Found you a place. No rent. You pay utilities to $300 and he'll pay the rest. You have a third of an old gothic house. Your own bath, your own entrance or use the common one, use of the common rooms like the kitchen and living room. The fireplaces work. In good shape.\" \n\n\"Sounds excellent, Father.\" I was overwhelmed. \n\nHe pulled up behind the local Catholic Church: Our Merciful God Parish. (In Sky Grey, everything Catholic is Our Merciful Something: God, Saviour, Lord, Mother.) \n\n\"Out,\" he said, and I stepped out. \n\nI realized what he was saying. I started to laugh. I couldn't help it; it tickled me and with all the tragedy of the shooting, the hurt hand, the divorce, and losing the kids, I needed to laugh.\n\n\"Yeah, what's so funny?\"\n\n\"You got me an apartment in a priest's house? A rectory?\"\n\n\"Yeah. What's the big deal? It'll save everybody money. Come on, Phil's inside. He's your housemate.\" \n\nI was still laughing as we climbed the steps. \"I guess I don't have to worry about him bringing girls home at all hours?\"\n\n\"Probably not. But keep your eyes open.\"\n\nWe knocked.\n\n*\n\nI moved to my new digs. I had a separate bedroom in a spooky house built in the late 1800s: dark hardwood floors and trim, chair rails, thick plaster, chandeliers, two fireplaces (one in the living room, the other in my bedroom), overstuffed chairs, and the mild smell of old cigar smoke throughout. A big, cannonball-topped, four-post bed of darkest wood looked that it could withstand the Blitz. The building was built for three priests in the days when a large parish could afford and recruit them, back in the days when such an edifice could be built and bought. It was the nicest place I'd ever lived. Every appointment was the solid 19th century quality that lasted the 20th and into the 21st. It was dated, but I imagined Conan Doyle writing at the desk or Lincoln staring at the fireplace. \n\nPaintings were on every vertical surface. Jesus looked down from some walls, Mary or Joseph from others. There were portraits of various saints about. There was St. Drogo, patron of the ugly. (I wondered if whoever hung that painting did it with humor.) I had never heard of the Infant of Prague or St. Margaret of Chichester. I began to understand the insinuation\u2014the very extent\u2014of Catholic guilt.\n\nFather Philip was older and sharp-witted, the local parish priest, a transplant from the other side of the archdiocese. I had access to the whole house, use of my own bathroom, and a woman would come in to clean once a week. I had to cook for Father and myself when I could. After one meal, Father decided to cook for both of us. Father Philip said he was an alcoholic so I was not to have spirits on the premises; I told him there would be no problem. I was out of rye whiskey, anyway. With this simple agreement, I avoided alcoholism.\n\nFrom that Friday, that very busy Friday, my life started to wind down to a reasonable pace. The crises of violence, confrontations, family disintegration, and difficult decisions were hopefully behind. Some of that credit should go to those two priests doing so much for a non-Catholic in distress. Part of it was allowing me time and space. The God Solution: think about it and how it affects you, pray, look at the options, discuss it with people who will help, and you will find a solution. Drop the God part and almost everyone would agree: calm down, think it through, learn what you can, talk it over and make a decision. Then watch how it progresses and react appropriately, doing all those things again. I shook my head at the thought. It was practically the scientific method. \n\nFather Philip and I began to talk on those evenings he was free. He was 67, had served as a chaplain in the Gulf War, and had performed more baptisms, weddings, and last rites than he could count. He played poker, never lost, and liked a nip or 15 and that had been his undoing. He'd been assigned to Merciful God after drying out; it was a plum assignment and he had been in it for 13 years now. He did not have long left, one way or the other. His health was not great, and it was time for him to retire anyway. \n\nHe told me about the problems he'd handled over the years. He loved the relationship with the parish elementary school. He was humbly\u2014and he claimed easily\u2014celibate. We discussed our work, our lives, baseball, world peace, soccer, football, the Dead Sea Scrolls, and argued about the Gospel of Thomas from Nag Hammadi, anything. He got me to read parts of gospels, supposed gospels, novels; he had me crawl under the old wooden dining room table and shine a spotlight up, and there were the names of every priest to serve in the parish and live in the house, written in pencil. Over a hundred years of priests were listed there. We talked about it. We'd discuss a line or a book for hours on some nice evenings. My evenings closed my days in peace and quiet, reading, and friendly conversation (thank heaven we were both Reds fans). I came to love the evenings. Occasionally he'd smoke a cigar on the porch, but he said he never did inside.",
        "I avoided details about my impending divorce, nor did I tell him about my part in the shootings. \n\nJune ended and July came in hotter than ever. Our air conditioning was stalwart but upstairs I needed a fan overnight to sleep; it was comfortable with that. I went back to work at regular hours, and the second week of July Father Michales came in to talk about my job. \n\n*\n\nHe sat across from me. \"You know, I've been looking at ways we can keep you at the hospital. I mean, it's tragic to lose good people because of lack of a strong career pathway in a growing hospital. John, if you're interested, I'd like to propose some ideas to the board. If you're interested,\" he said. I was touched. He was going out of his way to help me. He acted as if I had options.\n\n\"I'd like to send you to a program in Cleveland for new hospital administrators, where they will teach you about all the licensing, accrediting, and certifying rules for the various major medical fields. I understand they include some work on hospital and doctor contracts. They have connections to programs all over the world. \n\n\"Sending a doctor off to be trained shouldn't, should NOT cost our hospital the benefit of the training. Hopefully, once you get back here we can set up a program to help the doctors identify their deficiencies and strengths; we can then include nurses and other professions. We need to build upgrading and relicensing into our professionals' contracts, so they don't go away and stay there. I want the best of our doctors to want to stay here, for their families to stay in Sky Grey. That idea took a big hit with the massacre.\" He shook his head. I realized he expected to fight to prove Sky Grey was a good place to raise a family.\n\nHe went on. \"The program will get you some graduate credits. Once you finish in Cleveland, I'd like you to begin a course in health admin or hospital management; there are several around that I think would help. Or one in hospital law, not malpractice, hospital. Maybe a sabbatical down the road, for a master's.\" \n\n\"You want me to work toward a degree, Father?\" I asked. \n\n\"I do. You'll have some choices to make if you want the career here at Merciful God. As we start a new department. I don't see how one person could do it. Bigger hospitals have a department to help the doctors and nurses maintain or improve their ratings; I've seen some. We'd have to add an assistant once your initial training was over and you were attempting to establish a program. Then one or two more, within a short time. I could help you with all of this, but some of it would be similar to what you have been doing, but of course on a much more rigorous basis. We'll arrange for you to finish a program in hospital management or personnel, or a related field like law. Hell, a law degree makes sense.\" \n\nI'd never been excited about my job before. \n\n\"Next step is writing it up. Could you get me started, investigate University Hospital in Cincinnati; they have a huge number of doctors and first-rate facilities and reputation. Find out how they do it, get me some notes and then a short essay about all the elements. Notes don't have to be fancy or perfect, but make the essays good; I may want to use them when I talk to the board. Maybe a week for the first. If you need more time, let me know. You'll have to meet up with them, interview people. Okay?\" \n\nI was smiling. \"Yes, sir, I'll call as soon as you leave here.\" \n\n\"Notes first, I want to see what you're running into. Every day you can send them to me by email, or paper, as often as you can. I can give you some help with phone calls.\" \n\nI looked at him and considered his purposes. I was sure he knew what this sort of job entailed. It sounded like some of the lines I'd read in his vita, positions he'd held at other hospitals early in his career. He was training me, sending me to investigate things he already knew, making sure I learned how such a professional human resources department worked. Apparently, he had faith in my abilities and wanted to marshal me along into a career. \"Great, sir. I know some people in that department at UC, I'll call them right away and see what they think.\"\n\nSo my new job began. I was excited and scared I might be in over my head. I would have been, but there were several people holding me up.\n\n*\n\nI had my hand examined another time by good Dr. Beatol, who pronounced it much improved and one of her best jobs. She said I should continue to wrap it for the rest of the summer. She also had some ointment to help healing and prevent infections. The scars were vicious looking and made me wonder if I'd ever be able to make a fist. As it was, I could move all my fingers with some pain. \n\nWeeks and then a month had passed since the shooting, and hot day followed hot night. I didn't see the children; I didn't see Karen Ann. Life was comfortable but empty for me. Anonymity suited me like a glove, but without children or wife, I was lonely in ways no friendly priest could assuage. Indeed, I'd always been anonymous. Except for two Homeland investigators and the two priests, I didn't think anyone knew where I lived, not even my parents.\n\nThere was great conjecture in the media still about who had killed the terrorists. The shadowy Youtube cellphone video was brightened and enhanced to the point I thought I could recognize me, but I didn't think anyone else could. No one had ever considered me in such a role, so that aided my anonymity. The one thing it showed clearly was the effect of the round hitting my right hand. Luckily, I was just one of several people who had been wounded in the arm or hand, so I didn't stand out. There was an interview with the mayor of Sky Grey, who called me a \"hero and a humble man.\" Special Agent Remarque was interviewed once and just said, \"The man's identity will not be divulged.\" \n\nI sat on the porch one night with Fr. Phil and wondered how it would turn out. We discussed marriage in general terms, my divorce, and the right thing to do. He didn't judge. He of course disapproved of divorce, but the sin was in sex outside the marriage. For the Church, the divorce was not recognized. He recommended a book by Evelyn Waugh about a divorced Catholic, another one to read, I thought. One thing about living with Phil, he always had a book to recommend. This one was a comedy, though somewhat subdued, about World War II.\n\nThere was no humor to the end of my marriage. July 24th the divorce was final. I didn't even have to go to the hearing, but my lawyer stopped in at the hospital to drop off the papers. It was all as the original request had asked. My lawyer said, \"The judge asked me why your name was so illegible and I explained you'd been wounded at the hospital. He had some things to say to your ex-wife then. He didn't change any of the terms, but she had to hear it. She said nothing, and her lawyer was not happy.\"\n\n\"Good-bye to all that.\" I liked to quote book titles when appropriate.\n\nWe shook left hands. \"Good luck, John. I am so sorry, really. I know this was not what you wanted in your life.\" I think he understood.\n\nI was not married. I drove to Mom and Dad's and showed them the paper. There was a tragedy within tragedy as Mom nodded and said nothing, and Dad nodded and said nothing worth printing. I hugged them and left after a few minutes. There was nothing to do. Dylan and Hanley were no more mine, if they ever had been. There was nothing to do. Nothing to do.\n\nThe supreme happiness of life is the conviction that we are loved, Lord Byron said. Had Karen Ann loved me once and lost it? Dylan was conceived within two months of our living together after I was finished with active duty. We were not in hardship. We would soon be crowded if we'd had a child. We were anyway with Dylan. Had I ever been loved? There was only one way to answer. \n\nNo. A Byronic No.\n\nThat evening, Phil and I talked about the finality of the divorce. I was melancholy. He called Father Mike and we all sat on the porch, watching the stars and sipping iced tea. We talked about Karen Ann and the kids, and how I could never do anything for them again. \n\nI raised my glass. \"A toast. To celebrating a divorce with one unavowed and two avowed celibates.\" We laughed and tapped glasses. \n\nI decided to tell Phil the details of my marriage. I sipped. I waved my hand, signifying that something had gone with the wind. \"After the massacre, my wife confessed that she had a long, ongoing affair with one of the victims. Shawn Dunston, the surgeon. She said that she didn't know if she had ever loved me. She called me a loser. My children, it turns out, are not mine. I love them, but I'm not their biological father. I was advised that I had little legal foundation to sue for custody or even visitation. My wife threatened to allege that I had abused them or her. After what happened in the massacre, it was just too much. I had no place to go. Father Mike led me here.\" I sipped again. I waited. \"I am truly grateful, Father.\" \n\n\"You're not Catholic?\"\n\n\"No. I'm not much of anything.\" \n\n\"Oh, you are, John. From what Father Mike has said, and anyone who knows you can see it.\" \n\nNot the woman I married, I thought, but I respected his attempt to raise my self-esteem. \n\nMike stood then. \"I need to get on. Thank you for a wonderful divorce party, both of you. I admit I've never been invited to one before. I've heard some can be quite raucous. John, I'll see you tomorrow.\" He left then, walking toward the hospital. I didn't think he was ever done for the day. Wonderful? Oh yeah, suffering brings us closer to God. I tempered my thoughts.\n\nPhil spoke quietly, \"So this Dunston. A good doctor? It was all over the paper that he was one of the victims.\"\n\n\"Yeah. A great doctor, but...\"\n\nPhil sat quietly, holding his ice tea in both hands before him, as I am sure he'd held whiskey two decades before. He spoke, looking at his tea. \"Two broken marriages, yours and his. Two unacknowledged children in your Hanley and Dylan. Living five states from his other children and wife. Apparently other affairs.\" He sipped.\n\nWe looked out at Venus, showing in the early evening gloom. \n\nAfter a bit, I said, \"He saved a lot of lives with his surgery.\" \n\nPhil nodded. \"There is that. I'm sure Peter kept track of it all.\" Phil could be droll.\n\n*\n\nAbout a week later, August now, on Thursday evening, Phil and I were discussing the news on the porch again and he changed the subject. \"John,\" he began, \"I've watched you and your depression is continuing. I understand the divorce has left a vile taste in your mouth. But it's more than that, isn't it?\"\n\nI nodded in the darkening evening. \"I'm a minor hospital administrator, Father. I make less than a teacher, and there is no advancement. Right now I'm trusting Father Michales, he intends to expand my job. I'm excited but scared that I won't do well, or that it won't amount to anything significant, or they'll drop me for all the more qualified people. So far, I've written two essays and submitted notes about two hospital programs we will use to guide us. \n\n\"And I miss the kids, family life... Hanley is four months old and Dylan two years... I don't want my next wife to have low expectations. If there is a next wife. My mind is a mishmash of anguish, I guess.\" \n\nPhil nodded. \"Your heart, too,\" he said almost inaudibly. \n\nThe wind blew hot, and we were not cooled on the porch. I heard music from a house across the street. He rocked; I drifted languorously in an Adirondack chair, perspiring gently as the day's heat wafted.\n\nPhil finished his tea. \"It is hot this evening, isn't it?\" he said. \n\n\"Yeah,\" I responded. My iced tea was gone.\n\nPhil looked down, pursed his lips, and then looked at me. \"Would you attend Mass with me tomorrow, John? This is my early one, once a week, a few old men attend, two or three women. It would humor me.\" \n\n\"I've never been to Mass before. I... I don't believe, Father.\" \n\nHe smiled and chuckled. \"Oh, it's not so bad. We even call it a celebration. What else are you doing at 6:30? I'll wake you.\" \n\nIt was 5:30 when Philip knocked on my door. \"John. We leave at six. Mass at 6:30 in the building.\" The church was all of fifty feet from the backdoor of the rectory, so I was now up in plenty of time. I even showered and shaved. I wrapped my hand again with clean bandages. We arrived at 6:05 and Philip went to vest. Catholic clergy have particular garments and things to do for every situation or date. I sat in a pew, the lone person, and even knelt for a bit on the padded kneeler and prayed. It was not awful, actually pleasant, if very early. \n\nThere were a few older men who wandered in, one with a walker. Two older women, a young man perhaps 25, and a tiny woman about 30 eventually arrived. Father entered, and Mass began. Philip went through the ritual quickly. He had no helpers (called servers, I learned), and so performed all tasks himself. He did have a sermon, and I listened. \n\nI think he meant this part for me, and I later found he meant it for several of us: \"There are times when good men or women are in a quagmire. There is deceit in their lives, betrayal, failure. There seems to be no love for these good people, and it is easy to sink into despair. Despair is not the worst thing. Perhaps they are even right: it is a time for despair, but don't let despair be the end of it. There's something good for you after it. Come out of it. Find someone to love. Help someone find love. There is goodness, there is joy, there is life for all of us. Life itself is a gift of God. Accept that it's good, that despair ends and there will be love. You will find the way that is best if you're open to love.\" He looked at me and quoted Hugo: \"It is nothing to die. It is frightful not to live.\"\n\nI'd never thought of that idea including responsibility. Had Dunston never lived, or lived only partially? Was I being adjured to live fully? It's difficult to realize the depths with which many have examined morality or religion or life. Phil was one, I now saw; he seemed an old guy with his heart on his sleeve, reading Garcia-Marquez or John Galsworthy, but there was reason in his ideas. Philosophy and learning beyond scripture were inside every sermon. \n\nI wondered later if he really believed in all the dogmas of his church, or if he accepted them because he saw such a moral goodness at its heart.\n\nWhen Mass ended, Father Philip simply announced it, walked down the center aisle to the back of the nave, and began to speak with the congregants. There were laughter and friendship in this large, largely empty, Catholic building. I met Joe and Richard, two veterans of Korea and Vietnam, with welcoming left handshakes. I just said I'd injured my hand at work. They were impressed I'd been in the service, and felt I was lucky to have missed combat. Sybil was the old woman from Florida\u2014I later learned she moved to Sky Grey when her husband shot himself. The young man left immediately, probably to get to work on time. Maria was the woman near my age, red hair, with an attractive but diffident visage. She was very small, almost tiny, and carried herself as if she wanted to be smaller. She was likely the most beautiful woman in any room.\n\nPhilip gathered her right hand in both of his as if he thought she might bolt, whispered something to her, and walked with her to me. I thought for a second, yes, she was shaking, just a bit. \"Maria Grey, this is John Buck,\" Philip said. She looked at me with her head canted down slightly, perhaps wanting to lower her eyes to the floor.\n\n\"Hello, John.\" \n\n\"Maria, my pleasure,\" I said, and I held my left hand out to her. She looked at my bandaged hand, and then hesitantly reached her left to mine, and we shook. It was a big moment for her, and Philip new it, foresaw it, and arranged it. He held her right hand tightly during the introduction, not letting her get away. \n\nFather nodded and found someone else to speak with, so he left us alone and we talked for a few minutes. She spoke very meekly at first, forcing her eyes to mine with an almost visible willpower. She worked weekdays 7:30 to 3:30 cleaning rooms at a motel, so this early Mass was not inconvenient. I asked her if she attended every week, and she said she had only been once before, last week. Father had asked her to return, saying he had someone he wanted her to meet. It took me a second to realize he'd had this in the works for a week. \n\nI looked at him. I thought, You dog, you! She's beautiful and damaged, and you wanted us to meet. Phil: the priest and social manipulator. A new respect for old Catholic priests was planted at that moment. \n\n\"Would you like to have dinner with me tonight? After your work?\" I asked. \n\nShe looked confused at that, but then she raised her eyes to mine and said, determinedly, firmly\u2014as if it took a great effort or some moral courage, very, very quietly, \"Yes, I'd like that. Shall we meet someplace, or could you pick me up? I don't have a car, myself.\" \n\n\"I'll pick you up. May I have your address? I'll come about seven?\" \n\n\"Good. I'll be ready.\" She was scribbling her address on a piece of paper she'd pulled from her purse. \"I must go now. Thanks so much for asking me. See you at seven?\" \n\n\"Count on it.\" \n\nFather Phil and I walked back to the rectory together then. \n\n\"What do you know about Maria?\" I asked him. \"She said she hasn't been coming to Friday Mass much.\" \n\n\"Oh, but her family are long-time parishioners. As a matter of fact, her family first settled Sky Grey. Her father works for the power company and her mother runs a daycare center for grade school kids. Good people. Maria was terribly hurt as a young woman and she has trouble meeting people and bonding. I believe she sees a therapist.\" \n\n\"What does that mean? How hurt?\"\n\n\"When she was 21 or so, she was attacked by some young men who violated her. She became very hesitant about men after that. Mentally. It has been a struggle to get her to join society. It's a very good sign that she's started working, now coming to Mass, and did I hear you arrange a date?\" I nodded. He said, \"Very good.\" \n\nYes. Very good.\n\nChapter 7: Maria\n\nAt seven, I found myself in front of an old house in the old part of the old town of Sky Grey. The clapboard was painted white; the windowpanes were wavy with age. There was a bay window in front, beside a porch with room for a swing. The house was two stories and had a red tin roof. \n\nI knocked.\n\nA heavyset man about 55 answered the door. He wore a short sleeved khaki shirt that looked as if it were fresh, clean blue work pants with a \"Dickies\" tag on one leg, and running shoes, although he was so big he probably didn't run long distances. \n\n\"John?\" he asked.\n\n\"Yes, sir, I'm here to see Maria.\" \n\n\"Come in, come in,\" and he held the door open. \"I'm Tom Grey.\" I held up my bandaged hand to explain why we should shake left-handed (\"Hurt my hand,\" I said); the air conditioning was a great relief from the humid, August heat. He pointed me to a chair in the living room. \"Sally,\" he called, \"John's here.\"\n\nSally came in then, tiny like her daughter, with similar red hair and pale complexion. \"John, nice to meet you. I did not get your last name?\" \n\n\"Buck, John Buck.\" I shook her hand, my left to her right when she saw my bandage late, but she did not let go for some seconds, as if the meeting were more significant than most. \n\n\"We're glad to meet you, John. Come in and sit. Would you like something to drink: soft drink, water?\" she asked. We sat then as we waited. \n\n\"Uh, no, we probably need to get going soon.\" \n\nAs all of Sky Grey, the Grey house had a lived-in feel to it: Older furniture that could use recovering or replacement, mix-matched chairs at the kitchen table, that sort of lived-in. \n\n\"So, what do you do, John?\" Tom asked. He seemed very interested, as if he didn't see many dates for Maria, and he wanted to be sure to ask the right things of me."
    ],
    "authorname": "Malraux",
    "tags": [
        "adultery",
        "betrayal",
        "terrorism",
        "cuckolding",
        "small town",
        "outdoor sex",
        "humility",
        "faith",
        "despair"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-shooting-at-our-merciful-lord"
}