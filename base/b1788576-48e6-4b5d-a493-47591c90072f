{
    "title": "The Boys Next Door Ch. 07",
    "pages": [
        "Author's Note: New to this series? I suggest starting at the beginning to get the backstory. This chapter has more plot, more drama, and -- yes -- a resolution. Enjoy!\n\n*******\n\nDiana blinked at the dim shapes of an unfamiliar room. Cool air kissed her bare curves. Deep, peaceful, regular breathing stirred her hair, and a soft pillow cradled her cheek. But she knew the broad male chest pressed against her back, the solid arm circling her waist -- Brendan. His steady touch calmed her, easing the confusion of lying in a strange bed, naked with a buzzing head.\n\nA soft snore behind Brendan made her giggle suddenly, and she quickly rolled over and buried her laugh in Brendan's warm shoulder. He shifted, settling against her and pulling her close, smiling in his sleep. A hand dropped down to cup her ass. Over the slope of his broad back, Diana saw bare feminine curves and one last candle, still lit and near the end of its life.\n\nLast night? Last night. Oh, sweet merciful everything, last night.\n\nHad it really happened? It hadn't. She was dreaming, right now, as her eyes moved over the very detailed poster about Scorpio hanging above the very naked girl fast asleep against Brendan's back. She was definitely dreaming up the five bodies tangled up on one bed. The total stranger sheets pressing against her cheek, soft and purple, smelling like patchouli. The fact that a gorgeous girl, the type who'd always intimidated her, was snoring, not to mention that the bed hadn't cracked.\n\nAnd everything she'd done \u2014 and liked it.\n\nShe buried her face in Brendan's shoulder again, breathing in his masculine scent, aware of the other male body behind her and the heat coming off it. God, her hair had to be a sweaty mess, she didn't even want to know the state of her makeup, her skin prickled with the warmth of both twins' bodies, and her thighs were wet and juicy. She couldn't help rubbing her hardening nipples against Brendan's chest. He let out a soft sound of enjoyment.\n\nAfter she'd drifted off last night, after she'd completely lost control with the twins, and God \u2014 those girls \u2014 she'd half-woken a little later, pleasantly fuzzy, her head resting on Ian's slow-breathing chest. Hands had smoothed her sweaty hair back from her face. A low voice had whispered in her ear: Brendan, softly asking if she was okay.\n\nShe'd nodded and reached for him, pulling him down to her as sensations took over: powerful arms wrapping around her. Brendan's muscular leg parting hers. His cock, gliding easily into her soaked and tingling pussy. His reassuring murmurs that he'd take it easy on her after Ian. Her thighs, sore, but instinctively hugging his waist, as she yielded to his soft kisses on her lips and his gentle strokes into her aching cunt.\n\nBrendan's warm hands held her tightly against him, angling her ass to fuck her more deeply, until she felt Ian stir and she whispered in Brendan's ear that she wanted to turn over. Then she gasped when hardness speared her swollen pussy from behind, moving in and out with coaxing strokes that made her wetter and wetter, while she beckoned Ian in front of her and opened her lips to his cock, hot and silky smooth and juicy and perfect. She wanted him to say something, anything, as she swirled her tongue over his swollen head and lapped up the pearl of liquid oozing out, but he just watched her, eyes half-closed, hands fisting in her hair.\n\nAnd oh yes, Brendan was exploring her full hanging breasts with one large palm, rubbing his thumb softly over her puckered nipples, arousing her beyond belief and urging her in his most reassuring voice to take Ian's cock deeper and deeper into her mouth. God, her cunt was so full, her mouth was so full, she needed to moan and she couldn't even manage it around Ian's thick shaft, but no way would she stop, not when Ian was actually whimpering above her, raw sounds of arousal and need driving every lick and suck as she bathed his cock with her tongue.\n\nShe was vaguely aware of the girls next to them, flashes of smooth shifting bodies and low nuzzling sounds. Soft skin brushed against hers, and two pairs of eyes eagerly watched her writhe between the twins. Diana couldn't resist wriggling more, sucking Ian's cock harder, thrusting toward Brendan's cock faster, moaning louder as Ian pulled back. Jesus, this was so crazy, and it was so hot to hear the girls moaning too as they drank in the sight of the twins fucking her\u2014\n\nBut when Brendan's roaming hand massaged its way down the curve of her belly and cupped her mound, one finger finding her clit, she couldn't concentrate on anything but the slow waves of pleasure spreading from his sure touch and the hot cock sliding over her tongue.\n\n\"That's it, sweetness,\" Brendan murmured. \"Come for us, Di. Just like that.\"\n\nDiana gasped with need and release around Ian's cock, heard him grunt. As he pulled on her hair, her slick pussy rippled on Brendan's thickness, spasming harder and harder. Ian was flexing his hips now, fucking her mouth, his body taut with the effort to control his movements.\n\nFingers tightened on her full hips. She hadn't needed to look over her shoulder to know that Brendan was coming deep in her quivering pussy, whispering that she was so sexy and he was so proud of her, while Ian filled her mouth with hot cream, his low hoarse groans meeting her ears.\n\nIan. The buzzing in her head turned into sharpness. Diana rolled over in Brendan's sleep-heavy arms and reached in front of her for Ian, just wanting to rub her face against his chest and breathe together with him.\n\nHer eyes focused. And oh God, Ian's eyes were closed, his lashes resting on his cheeks, his eyelids looking kissable, moving and groaning softly. A naked female body spooned him from behind. Long brown hair brushed his shoulder. A lithe arm snaked under his, exploring his muscled chest. He shifted and let out an mmmmm as the hand trailed down his hard abs.\n\nThis wasn't happening. It was. And it had been okay to see Brendan with another girl in the heat of the moment, even intensely sexy to watch, but one hundred per cent wrong for Ian.\n\nAs Diana stared, the girl's hand moved idly over Ian's stomach, exactly where her own hand should be, ruffling the line of hair and stopping to tickle his belly button. Ian's eyes opened, met Diana's, and he grunted more loudly, unmistakeable arousal in his fogged-over gaze. His cock was rapidly hardening. Jesus, was he getting off on her watching?\n\nSuddenly everything halted, everyone was awake and staring at her, Ian was blinking, his eyes not quite focusing, because she'd actually roared \"MINE!\" and made a grab for him.\n\nThen aching rushed through her head, and she couldn't swallow around the lump in her throat.\n\n\"I need to go,\" she whispered, embarrassment flooding her cheeks. Oh my God, where were her clothes? She sat up, looked around wildly. That was...her black bra hanging off a lamp shade? A bra. Someone's bra. Forget about her underwear, Ian had reduced it to shreds last night, and dammit, those panties hadn't been cheap. The redhead rolled over on the other side of Brendan and mumbled something about saving the drama for the morning. Jesus. Breasts. She was looking at another girl's breasts. She'd done a lot more than look last night. But it was still last night, wasn't it?\n\n\"Where the hell is a clock?\" Diana grumbled. Suddenly knowing the time was extremely important. \"Can someone just tell me where to find a goddamn clock?\" God, she sounded grumpy and bitchy beyond all get-out, she wasn't making sense even to herself, and the whole time her body was screaming Ian and she couldn't even look at him. How many times had the twins woken up in the bed of some random girl \u2014 apart or together? She'd been determined to handle herself, keep up with them both \u2014 Jesus, surpass them. But she'd sensed she was in over her head with the twins, and she was right.\n\nBrendan stirred behind her, put a hand on her back. \"It's okay, Di,\" he murmured groggily.\n\n\"No, I really need to go.\"\n\nIan was rubbing his eyes, trying to sit up, reaching for her, while the brunette looked from Diana to the twins, her face lit with curious interest like she was watching a show. Diana wanted to hand her some popcorn and tell her to pull up a chair.\n\n\"Can everyone please just shut up and go back to sleep?\" the redhead groused into the sheets. \"I don't do drama before coffee.\"\n\n\"Di,\" More urgency in Brendan's voice, and less sleep. \"Di, you're coming down. It hits some people hard. Don't go anywhere.\"\n\nBut she was already grabbing her crumpled red dress from the floor, pulling it on every which way over her sweaty curves, slinging her high heels over her shoulder and stumbling barefoot out of the apartment though her whole body told her to just stay in bed with the twins.\n\nWhat happened next was a merciful blur: Ian, running out of the building shirtless, zipping up his pants, his hair mussed in all directions, trying to make sure she was okay while she managed, brilliantly, to call him a slut; Brendan, jogging out a few minutes later, fully dressed and much more together than his brother, trying to calm her down too; her pathetic attempt to stalk away from both of them with what was left of her dignity and catch the next bus home, when in fact they'd stopped running for the night. Not to mention that her wallet was sitting in the twins' car, along with her jacket and glasses.\n\n\"Diana, what happened in there\u2014\" Ian began. He was holding her arm. Both her arms. Tightly. Brendan's hand was on her back. The two of them were probably the only thing keeping her upright.\n\n\"It's not a big deal.\" She glared at the sidewalk, too embarrassed and upset to even look Ian in the eye. \"Forget I said anything. I don't care.\"\n\nSomehow, they talked her into getting in the Jeep and riding home with them: Brendan in the front, driving carefully at half the speed Ian had used to bring them there; Diana in the back with her aching head in Ian's lap, the place she most and least wanted to be right now.\n\nSilence filled the car. The clock she'd been wanting so badly beamed a steady green glow from the dashboard: 4:19 am. Ian's hand was rubbing the back of her head, and it was soothing her headache and making her angry all over again at the same time, because she never wanted him to stop.\n\n\"Di, we thought this would be good for you,\" Brendan began, placatingly. \"We thought it would help you.\"\n\n\"Shut up, Brendan.\" Ian's morose voice made it through Diana's head slowly, but she looked up soon enough to see Brendan's stunned expression in the rearview mirror. The twins never fought. They'd made an agreement, they'd kept it since they were seven, and the two of them arguing was suddenly the most wrong thing about this night.\n\n\"Don't yell at Brendan,\" she snapped, and instantly regretted it because the effort made her head throb more.\n\n\"Diana, you don't even\u2014\" Ian broke off. She felt the soft thud of the seat as he banged his head against it. \"The club was your idea,\" he said in a lower voice, clearly aimed at his brother. \"This fucking threesome was your idea. It's Brendan's idea. It's always Brendan's idea.\"\n\n\"You have lots of ideas.\" Brendan's tone was mild. \"It wasn't my idea for you to climb in Diana's window alone and make her guess who you were.\" Crazily, he didn't seem bothered, more like he was trying to support his brother \u2014 but Diana couldn't bear to hear anymore.\n\n\"Let's just forget that happened,\" she blurted out. Silence. Ian's leg stiffened against her cheek, and after a second, his hand left her hair. Without thinking, she grabbed his palm and pulled it back. He sighed and began to rub her head again.\n\n\"Your hair's a mess,\" he said softly. And he was just making it messier, his warm fingers buried against her scalp and rubbing her neck. His other hand found the open back of her dress \u2014 half-buttoned, in her rush. Slowly, he began doing the buttons up.\n\n\"Yeah, well, you sound like shit warmed over,\" she mumbled into his leg. His jeans smelled like smoke and beer. \"Both of you.\" Though it was really only true for Ian. \"And you look like it too.\"\n\nA brief half-laugh. Streetlights streaked by through the window. The Jeep rolled through one intersection after another, the only car on the deserted streets.\n\nAfter a few silent minutes, Brendan turned on the radio, keeping the volume low. Diana was about to tell him to turn it off immediately, but when she saw his arm crooked out the open driver's window, his head leaning to the side, his solid body looking exhausted, she kept her mouth shut. Better for the driver to stay awake. And dammit, the song on the radio was mellow and warm, all sunlight and happiness and a long lazy summer ahead.\n\n\"Sorry, man,\" Ian said in a low voice.\n\nHe was apologizing, Diana thought. Not to her. To his brother.\n\n\"No, I'm sorry,\" Brendan said after a minute.\n\n\"Thanks.\"\n\n\"That's it right there, isn't it?\" Diana told herself to just stop talking, that at least the twins were making up, but her mouth wasn't paying attention. \"That's the only apology that matters to either of you. At the end of the day, you don't really care about anyone else. You only care about each other.\"\n\nThere was a very long silence. Too long. Or maybe it just felt that way because her head was drumming five rhythms at once against Ian's leg, and his hand had stopped rubbing her scalp and just cupped it, holding still.\n\n\"That's not true, Di,\" Brendan said quietly. Finally. The car had stopped. She recognized the maple trees from the window, even lying down. They were in front of her house.\n\nIan let out a long exhalation. \"Diana, can we please just sleep this off and talk tomorrow?\"\n\n\"No, Di, we shouldn't leave you,\" Brendan cut in. \"Let us stay with you 'til morning \u2014 or you can sleep over at our house and I'll explain to your parents\u2014\"\n\nThat was an explanation she'd like to see Brendan give her mom. But hearing the twins disagree \u2014 they'd always worked together, so smoothly she'd barely been aware of it \u2014 made up her mind.\n\n\"I need to be alone.\" Fuck, her voice was shaky. She didn't want to be alone \u2014 no, she wanted it more than anything else \u2014 she had no idea what she wanted right now. \"For awhile. Don't call me, Brendan. And Ian, I don't need to say that to you because you never have.\"\n\nNow she did manage to look at both twins as she climbed out of the Jeep. They were still masculine. Still good-looking. No doubt about it. But worn. Brendan leaned his forehead against the open window frame, shadows under his eyes. Ian, in the back, did look like shit warmed over. Hair sticking up everywhere, heavy-lidded eyes staring back at her, and she just wanted to grab him and drag him up to her room and fall asleep with her head in the crook of his shoulder.\n\n\"You know, Di,\" Brendan said quietly. \"It's a lot of work to try to make everyone happy.\"\n\nDiana rubbed her eyes. The maple trees rustled overhead. It was either way too late at night or way too early in the morning. \"Is that your job? Along with talking for Ian?\" Who she couldn't look at again, and who wasn't saying a word from the back.\n\n\"One of them.\"\n\n\"Maybe you should find some new jobs.\" She slammed the car door and made her way inside her dark house without glancing back. Behind her, the Jeep's engine turned over, the only sound in the sleeping neighborhood beside the chirp of the crickets.\n\n*******\n\nAfter a few hours of tossing and turning, Diana folded her pillow over and punched it, glaring at the cheerful early morning light pouring through her window. No chance anyone would climb through that window now. No twin would make the branches shake outside as he clambered up, beaming, with a naughty graduation gift in a brown paper bag, or wrapped in shadow, refusing to tell her who he was. She'd made damn sure of that in the Jeep, when she'd been too upset to think straight.\n\nIt was ridiculous to have her feelings hurt, she knew. After all, she'd been with both the twins. She'd picked up those girls right along with them. Her body clenched with sharp arousal, remembering. And if she had a do-over card for last night, she knew deep down she'd do it all again, except for the last half hour. But that didn't ease the hollow in her chest.\n\nShe buried her face in her pillow, mashing it against the cotton. From the beginning, there'd never been any secret: Brendan and Ian were players. She'd been an idiot to hope for more. Naive to think all that bullshit Ian had spouted on graduation night about her being beautiful and perfect actually meant anything besides wanting to get his dick up her ass. He'd probably done that with a hundred girls and knew exactly what to say.\n\nBut she couldn't stop hearing their voices in her head: It's always Brendan's idea. It's a lot of work to try to make everyone happy. Was this how the twins went through life \u2014 getting into scrapes together, Ian taking the blame, Brendan taking care of the cleanup? She kicked at her covers. She was not going to feel sorry for them, even though she knew, deep down, she'd been unfairly mean in the car. Hurt their feelings. She wanted to make things right, but she didn't have the first idea how.\n\nWhen the doorbell rang, she pulled her pillow over her head. Didn't the world know not to make loud sounds right now? Her mother's enthusiastic \"Brendan!\" carried right through the plump down. Oh boy.\n\n\"Diana's resting right now, but I can let her know you're here. How late did you boys keep her out last night? I hope Ian didn't give her anything to drink.\"\n\n\"No, Mrs. Cooper, he didn't. Don't worry.\" That deep voice was definitely Brendan's, but he sounded subdued. \"Let Diana sleep. I don't want to bother her.\"\n\nDiana sighed, heaved the pillow across the room, padded to her door, and opened it.\n\n\"Brendan can come up,\" she called down the stairs, then hesitated. \"If he wants to.\"\n\nThere was a pause, some low voices, then the floor creaked. Diana blinked at the bulk of Brendan's body coming up the stairs. Her hair was still saturated with smoke, some other girl's perfume clung to her skin, the pink camisole and boy shorts she'd managed to pull on before tumbling into bed were stuck to her sex-scented body with sweat, and she'd thought this was a good idea why? But Brendan was already in her room, closing the door with a soft click behind him, and looking around for a place to sit in a way that made it very obvious he was avoiding her bed. Diana noticed something tucked under his arm.\n\n\"Hey.\" She gestured to herself. \"I know. I need to shower.\"\n\n\"Yep. You do.\"\n\nA hint of a smile flashed across Brendan's face, the cleft flickering in his chin, but Diana couldn't help noticing: this was the first time she'd seen Brendan not trying to be charming. She'd never fully realized how much the charm was on \u2014 day, night, awake or asleep. Always, since they'd been kids. Now, he just looked tired. Diana wondered if he'd slept as badly as she had. And Ian\u2014\n\nImpulsively, she patted the bed next to her. The mattress sank under Brendan's weight, his leg warm against hers.\n\n\"I came over to give you this.\" He held out her jean jacket, folded into a tidy bundle. Diana couldn't keep back a sigh of relief. She reached into the front pocket, found her glasses, and put them on. Her room sharpened into focus, and she immediately felt better.\n\nBrendan was already close enough to see clearly, \u2014 very close to her, in fact \u2014 but the glasses just made it more obvious: tired or not, he was still gorgeous. But she didn't recognize his expression. They'd grown up together, they'd had all kinds of sex the past two weeks, but she had to wonder if she knew him at all. Or Ian, or herself.\n\n\"Thanks.\"\n\n\"Check the sleeves.\"\n\nDiana slid her hand into one sleeve. Out came her black satin bra, neatly tucked into the denim.",
        "\"Oh. Right.\" She'd thought she was beyond blushing. Now she knew better. Dropping the generous cups on her bed, she reached into the other sleeve and pulled out some black scraps of lace.\n\n\"Seriously?\" She stared up at Brendan, her shredded panties dangling from her hand. \"What am I supposed to do with these?\"\n\nA grin tugged at his mouth. \"I thought you could sew them back together or something.\"\n\n\"Ian's just too cheap to buy me new ones, isn't he?\" And saying his name made her stomach knot up.\n\nBrendan shrugged, his smile fading. Diana rubbed her temples. She just wanted to lean against Brendan's shoulder. Get tangled up in Ian's arms. Have some idea of what was going on. \"Look, I'm sorry I was mean to you guys in the car.\"\n\n\"Di.\" Brendan put a warm hand on her back. \"Did you have fun at all last night?\"\n\n\"Yeah,\" she said softly. \"Yeah, I did. It was exciting and crazy and intense and...a lot. I was just so excited \u2014 I just wanted to do it all, like you said \u2014 to do whatever I wanted, but \u2014\" She reached for him. \"Can you just be my big brother for a few minutes?\"\n\nFor the first time, Brendan really smiled. God, he was beautiful. Diana practically had to shield her eyes from the flash of white teeth. \"'Course.\"\n\nIt felt natural to rub her cheek against Brendan's shoulder, the way she'd wanted to. It was comforting to bury her nose in his soft t-shirt and breathe in the familiar clean detergent smell. Her shoulders relaxed when Brendan folded an arm around her. She didn't protest when he took the ripped panties out of her hand, moving them to her desk along with her jacket and bra.\n\n\"Can we lie down?\" she whispered.\n\n\"Mm-hm.\" Brendan eased her down on the mattress and pulled her close. It felt right to curl up in his muscular arms. His hand found her back and rubbed gently, between her shoulder blades. Diana rested her forehead on his shoulder, letting him unhook her glasses and drop them on her desk as well. The throbbing in her head eased off. It felt so good just to let Brendan hold her. She snuggled closer, let her eyelids drift closed and her arm and leg wrap around his solid body.\n\n\"Are you guys fighting?\" she asked softly.\n\n\"Not exactly.\" Brendan's voice was low. \"Don't worry about it, Di. Just rest.\"\n\n\"It's my business too.\"\n\nA pause. His breath stirred her hair. \"Ian made me promise that if I saw you today, I wouldn't talk about him. Or for him.\"\n\n\"Oh.\" Her stomach went cold. Fine. That was fine. But it wasn't fine at all. \"Well, I'd like to talk about Ian.\"\n\n\"And say what?\" Brendan pulled back, his eyebrows raised. There was too much expectation in the air. Diana let out a breath.\n\n\"I don't know.\" She buried her face in Brendan's shoulder, sighing when his hand slipped under her silky pink camisole and stroked her smooth stomach, up and down. A few seconds passed, or maybe a few minutes. No one was checking on them. Apparently her mom didn't feel the need to review the rules of boys in Diana's room when it was Brendan in there with her.\n\nDiana nestled her head against his broad chest. His hand was so warm on her bare stomach. \"Why do you guys do it? Why do you play good twin and bad twin?\"\n\nNo answer. Dammit, if Brendan was taking his promise to Ian this seriously, he might as well leave. But when Diana glanced up at him, hazel eyes were on hers. Brendan looked older. \"It's what we've always done.\" He stroked the slight curve of her belly. \"We've always done it that way.\"\n\n\"That's not enough of a reason.\"\n\n\"Okay. It's been good for us.\"\n\n\"You mean for you. Was it all your idea?\"\n\n\"No, Di. Believe me when I say it hasn't been.\" His finger found her belly button and traced it, making her giggle, just a little. A smile crossed his face.\n\n\"I don't know what to do,\" she mumbled.\n\n\"You don't have to do anything right now.\" Brendan brushed his lips against the top of her head. \"Just lie here with me.\"\n\n\"Okay.\" She snuggled closer. Brendan's firm body felt more relaxed against hers, and she realized he'd been tense when he came in.\n\nAs they lay quietly on her bed, breathing together, warmth spread over her body at his muscular arm around her. She squeezed his back. And even though Brendan was just holding her, she'd been crazy to think she could cuddle with him like brother and sister and not feel anything. Her full breasts pressed against his chest, her nipples contracting and puckering through her thin camisole. His hand on her stomach sent flutters through her skin. When she shifted against him, his fingers stroked through her hair. Oh God \u2014 just that made her shiver and hug her thighs around his leg. Her pussy ached with need, and juices were starting to soak her boy shorts.\n\nDownstairs, a door slammed. The garage opened, then closed. They were alone in her house.\n\n\"Brendan, please...\"\n\nHis lips brushed her forehead in a light kiss, and God, she was rubbing her pussy shamelessly against his solid leg now. She couldn't wait, she couldn't help wrapping her fingers around his hand and pulling it to her firm breast, then sliding her own hand over his hard abs to cup the heavy bulge in his shorts.\n\n\"Di,\" Brendan said in a low voice, almost a warning. \"You want this right now?\"\n\n\"Please,\" she whispered again.\n\nWhen she met Brendan's eyes, he put his fingers under her chin and tilted her face towards his. His kiss was soft, his lips warm on hers, like that first kiss he'd given her in her room two weeks ago while she'd prickled with nervousness. When she opened her mouth to take in his hot tongue, his touch stayed gentle.\n\n\"It's okay, baby,\" he murmured between open-mouthed kisses. A large hand caressed the underside of her heavy breast through her silky camisole. Diana didn't know who he was reassuring more \u2014 her or himself. \"Everything's going to be okay.\"\n\nShe cried out when he cupped her breast fully, his palm warm and firm against her hard nipple. Her hand roamed over his muscled body, stroking the hair on his arm, slipping under his t-shirt to rub his back. Her other hand found the back of his head, holding him close as she moaned softly into his juicy kisses.\n\n\"Good, Di,\" Brendan whispered. Yes. That's what she needed to hear. She was good. Everything was good, everything was all right. She buried her fingers in Brendan's hair, moaning again when he sucked on her lower lip. \"That's it.\"\n\nGently, he rolled her onto her back and peeled off her pink camisole. His mouth closed over one rosy nipple. \"Mmmm,\" he murmured. \"You taste so sweet.\"\n\n\"Brendan,\" she moaned. Her fingers tangled in his hair again. His tongue on her ripe bud was driving her crazy, and she tried to tug his head down to her pussy, but Brendan just kept licking her generous breast.\n\n\"So gorgeous, Di.\" He bit her nipple lightly, and her hips bucked toward him. \"You know last night was because of you.\"\n\n\"Yes,\" she whispered.\n\n\"Everybody wanted you. And you wanted it. You weren't shy, sweetness. You were you.\"\n\n\"Yes,\" she panted, \"but\u2014\"\n\nBrendan was nibbling her nipple, then sucking on it, the changing sensations making her head spin.\n\n\"Do you want Ian here too?\" Hazel eyes flicked up to meet hers. He squeezed her full breasts gently, and she shuddered. \"Do you want me to call him, Di?\"\n\n\"No,\" she said stubbornly.\n\n\"Tell the truth, baby.\" Brendan looked at her intently. He rolled both puckered nipples between his fingers, rubbing his thumb over the sensitive buds as she arched her back from the sharp pleasure.\n\n\"He told you not to talk about him,\" she panted. \"So let's not talk about him.\" Oh God, she wanted Ian here more than anything, but she could never really get everything she wanted from him, could she? She didn't just want sex. She wanted so much more, she wanted all of him, and it could never, ever work. \"I am telling you the truth,\" she whispered into Brendan's neck. She squeezed his thick erection through his shorts, whimpering with need when he pinched her nipples harder and harder.\n\nAs her whimpers rose, Brendan worked his hand into her panties. One finger caressed her aching clit, stroking the hard nub firmly until she cried out. \"You're so fucking wet, Di.\"\n\n\"Brendan, please...\" She bucked on his hand, rubbing her soaked lips against his touch, and gasped when a finger slid into her tight cunt.\n\n\"Say you want him.\" Brendan's whisper was urgent. There was no teasing smile on his face, no sign he was playing with her. His sudden pleading expression, his voice begging her to ask for his brother like it would make things right between the three of them \u2014 she hadn't known Brendan could need something so badly. \"Say what we both know.\" He squeezed her mound. \"Say what you need.\"\n\nShe sobbed quietly into his neck, shuddering with excitement and the strain of not moaning out Ian's name as Brendan massaged her needy pussy.\n\n\"No, I don't care about Ian,\" she gasped. \"I want you to fuck me.\"\n\nBrendan took in a long breath, then let it out. Fingers wrapped around her wrist and pushed her hand suddenly off the heavy bulge of his cock. His palm gave her quivering pussy one last squeeze, then eased out of her soaked panties.\n\n\"Brendan\u2014 No...what are you doing?\"\n\nHe was shaking his head. God, his warm body was so close to hers, and she just needed him to quench the heat between her legs right now...\n\n\"Please,\" she whispered. She grasped Brendan's cock again \u2014 ragingly hard \u2014 with one hand, tried to pull him on top of her with the other. \"Don't stop. I just want to feel you.\" She looked up at Brendan pleadingly. She was confused, she knew, but this would help her understand. She was sure of it. And she was so horny. God, Ian hadn't been kidding when he'd called her insatiable. And she was determined not to think about him right now.\n\nBrendan hesitated for a minute, his solid body leaning over hers, emotions she couldn't read crossing his face. Then he sat up. Heaved himself off the bed. Looked down at her. No \u2014 yes \u2014 he was zipping up his pants in one quick, unBrendan-like stroke.\n\n\"You're leaving?\" Diana stared at him.\n\n\"You wanted some time alone. Right? And you wanted a big brother.\" At least the flush on his cheeks showed he was turned on, too. He pulled on his shirt, working to get his breathing under control.\n\n\"Are you kidding me? Is it because I need to shower? I'll go shower right now.\"\n\nBrendan shook his head again. His eyes flicked over her voluptuous breasts, but before she could react, he pulled up her covers and wrapped them firmly around her. \"Just trust me, Di.\"\n\n\"You said you'd take care of me.\" God, she really was begging shamelessly now.\n\n\"Exactly.\"\n\n\"Fine.\" She picked up her pillow and threw it at his hard stomach. Brendan caught it, looking surprised. A smile flickered across his face, despite the circles under his eyes. How dare he laugh at her? She was still panting, flushed and turned on. \"Go play basketball or go to the gym or help little old ladies across the street. Be the good twin. And tell Ian I don't want to talk about him either.\"\n\nBrendan's face turned serious. \"Look, Di\u2014\"\n\n\"Uh-uh. Go. Goodbye.\"\n\nInstead, Brendan bent down, tucked her pillow under her head, and brushed his lips across her hair. Diana growled, done with talking. At the door, he turned back.\n\n\"You should talk to him, Di,\" Brendan said softly. \"Talk to him yourself.\"\n\nDiana glared at him as he quietly left the room. Once the door closed, she gave the finger to his retreating back. Then she pulled the pillow over her head again.\n\nHer mind whispered that Brendan had done the right thing by leaving, and her body shouted that she was furious with him for doing it. Her panties were soaked. Her pussy still quivered from his teasing touch. Her bare nipples were two hard buds. Her crotch buzzed with need for his thick cock, and her skin burned in a way that the iciest shower wouldn't take care of.\n\nRemembering last night, writhing between the twins and those girls, her own screams bouncing off the walls as Ian thrust into her with all his strength, made her go cold and hot. No matter how much she buried her head under her pillow and pretended that's where she wanted to be, what scared her most wasn't that she'd finally lost all control, but that she wanted more.\n\nWho the hell was she, now that she was done with high school? Would she ever be able to think straight, or straighter than she was now, her thumbs skimming off her wet boy shorts, her hand going right to her pussy, slipping between her moist lips to stroke her warm center?\n\nBrendan hadn't left her room. He was right there, in bed with her, kissing a path down her neck, sliding his mouth down to rub his lips against her bare shoulder, laughing softly when she tugged at his shirt and ran her fingers over his muscled chest. She sighed when he eased her back to run his hands over her tingling curves. She pulled her head out from under her pillow when he whispered that everything would be fine. More than fine. It would be great. There was nothing for her to worry about, he murmured as he cupped her heavy breasts. Just let him and Ian take care of everything.\n\nAnd as she moaned softly, Brendan's sure fingers finding her soaked pussy, squeezing her mound, sinking inside her tight cunt to give her what she craved, a prowling figure climbed into her room, leaping to her bed, clothes flying everywhere, his mouth going right for her neck, sucking so hard she shrieked and bit Brendan's shoulder. Oh God, she really had shrieked, she was shrieking into her pillow, and Ian's mouth was all over her body, marking her everywhere, and she could only pant and moan as she took Brendan inside her, his cock going deeper and deeper, and dammit, he was groaning and coming, filling her long before she was ready for him to be done, and rolling her firmly toward his brother. Yes...Ian plunged inside her now, holding her creamy thighs apart, filling everything.\n\nBrendan's warm tongue ran over her ear. \"Deeper, Di,\" he whispered. \"Harder. More.\"\n\nHazel eyes locked on hers. And oh God, she knew so well now what Ian looked like soaked in lust, wanting to swallow her whole, but there was more than that on his face, and it made her start to shake. Her thighs quivered. Her own fingers rubbed her hard clit, more fingers opening her silky pussy, juice running onto the sheets.\n\n\"Ian...\" she whispered out loud. \"Brendan...\"\n\n\"Yes, Di,\" Brendan crooned in one ear. \"This is it.\"\n\n\"Diana.\" Ian breathed in her other ear. \"C'mon, love. Do it for me.\"\n\nShe gasped and came in a hot rush, her tight pussy convulsing on her fingers \u2014 no, Ian's cock \u2014 with ripples of pleasure that spilled over her skin. One muscled body thrust on top of her, one lay next to her, urging her to come harder and harder, until her breath slowed down and she was alone.\n\nDiana rolled over on her rumpled sheets, her cheeks smudged with sweat, and stared at the open window. The curtains fluttered in the breeze.\n\nLove?\n\nOh.\n\nShit.\n\n*******\n\nFinally, she was able to fall asleep. She kept her head under her pillow and her covers balled around her body until cooking smells, floating up the stairs, woke her.\n\nDiana stretched, groaned, and flopped over. She'd spent the whole day in bed, something she'd done exactly never, and the most surprising part was that her parents hadn't tried to rouse her. As good as the meatballs frying downstairs smelled, she was tempted to stay exactly where she was.\n\nThen she shoved the covers back. This wasn't her anymore. She was no longer the girl who ran home at the end of the day, yanked her blankets over her head, and cried into her pillow because she'd pulled a B+ on a physics test or couldn't get up the courage to even walk past an epic crush in the hall. She was going to take a shower, put on her bicycle-printed skirt and a fresh t-shirt, and just deal with all those memories of riding bikes with the twins as kids and the very different ride they'd taken her on, these past two weeks.\n\nShe understood now. Brendan saw her as some kind of sexy little sister he'd been all into educating, and she was just some girl Ian had screwed. The two of them got off on seeing how much they could push her limits. She'd gotten off on it too. And she was on board with Brendan being her hot older brother. She could even deal with the education being over. Fine. She'd graduated. But Ian\u2014\n\nOf course her parents peppered her with questions over dinner. Was she sick? Was she missing high school now that the excitement of graduation was over? Her mother put her fork down decisively. \"Ian gave you alcohol last night, didn't he. Did he give you a beer? I swear, that boy is headed for trouble if he hasn't found it already, and the only saving grace is his brother\u2014\"\n\n\"No, Mom,\" Diana interrupted. \"Ian didn't give me anything to drink last night.\" That much was the truth. At least, he hadn't given her anything from a bottle. Right here in the kitchen with her parents, she could taste his heavy shaft sliding between her lips, feel Brendan's smooth thrusts into her pussy from behind, hear the excited moans of the girls as their soft skin rubbed against hers. As soon as she'd swallowed the last bite of spaghetti and meatballs, she told her parents she was going for a walk and slipped outside.\n\nThe June air was warm and sweet, without the stickiness of the night before. A soft breeze blew her skirt around her bare legs. Her feet took her to the big park around the corner.\n\nThis park had belonged to her and the twins, when they were kids. At least, she'd always thought of it that way. Now, she wondered if they'd been as possessive of a few grassy patches as she'd been.\n\nThough it was still light out, the park was quiet. A couple lounged under a tree, a few guys were shooting hoops on the wide court, but the stretch of land by the creek lay empty. Diana flopped onto the velvet grass, pulling up random daisies and tossing them aside. Grass pricked her bare arms and legs and tickled her through her t-shirt. Taking off her glasses, she let them fall to the ground.\n\nLying flat on the grass was about all she could handle right now. She couldn't remember the last time she'd just lazed around, with no assignments hanging over her head, no tests to ace, no contests to win. Nothing to prove. No commitments.\n\nActually, she did remember. Brushing her wet hair off her face, she let her eyes close. Back when she was eleven. The twins were thirteen.\n\nIt was the summer before she'd started sixth grade, before she'd gone from somewhat studious to painfully shy and buried in her books. The last summer she'd really hung out with the twins. Already, she was getting tongue-tied around them, noticing that Brendan and Ian were boys \u2014 very cute boys.\n\nBut that day near the end of summer, the three of them sprawled right here on the grass while the creek gurgled by, she hadn't worried about how she looked or how she sounded or what to say. Nothing had been awkward.\n\nBrendan had been calmly telling her exactly what to expect at her new school: what everyone was wearing, what they were listening to, where to sit in the cafeteria, and how to get on Mr. Sandvold the gym teacher's good side. She'd had so many questions for him, and every time she turned toward him with another one, something \u2014 a bug? A leaf? \u2014 had tickled her arm, or her knee, or her neck, and she'd tried to brush it away, only to meet with air.\n\nFinally, when Brendan couldn't hide his grin and laughter split the air behind her, she rolled over fast enough to catch Ian teasing her with a long blade of grass. She so clearly remembered grabbing her own fistful of grass and furiously stuffing it down Ian's jersey while he smirked at her and Brendan chuckled on her other side.\n\n\"I hope it gets in your underwear,\" she snarled, and Ian's smile just got bigger. Then she'd dissolved into laughter along with the twins. The three of them had started throwing grass at each other, and they'd gone home sweaty and stained with green and slurped down the cherry coke in the O'Brians' fridge, and Diana's mom had yelled at her when she came in for ruining her clothes. It had been a perfect day.",
        "Rolling onto her back, she stared up at the flaming wash of sunset across the sky. Smoke curled through the trees. A group of people were passing around a joint, further down the creek \u2014 people she recognized, people from school. She knew that smell now. She knew so much more, so why did she feel like she knew nothing?\n\nAfter night fell and she'd made the walk home, Diana dragged a sleeping bag and her record player out to her backyard. This hadn't been a breakup with the twins. And there was nothing she needed to talk about with Ian. She was not going to drown her sorrows in the rocky road ice cream calling her name from the freezer. She was not going to find the record Ian had put on, when the twins had taken her way past anything she thought she could handle on graduation night, and hide it in the back of her vinyl bin. She was not going to frantically circle her clit and plunge her dildo into her pussy while she remembered gyrating between the twins in a crowded club and losing all control with them and a couple of hot girls, and she was definitely not going to keep her head under her pillow.\n\nWhatever else was going on, the firm familiar ground and soft grass in her backyard were calm. Simple. As the air cooled down, she snuggled into her sleeping bag. Low music from her turntable unwound into the night, and the endless sky was the last thing she saw before her eyes drifted closed.\n\nLulled by cricket chirps and the notes of her record, nearly asleep, Diana heard faint splashing on the other side of the fence. Someone was swimming in the O'Brians' pool. Her eyes half-opened to follow the shape of Orion in the sky, imagining one sleek muscular body or the other plowing through cool water, hair slicked back. It was probably just Mr. or Mrs. O'Brian, out for an evening swim. But the splashes were there the next night and the next, soon after she turned on her record player, and they comforted her.\n\n*******\n\nAs for the daytime? The problem with hooking up with the boys next door...was that they lived next door.\n\nMonday morning, between bites of rice krispies, she glimpsed Brendan through her kitchen window: strolling down the O'Brians' driveway, unfairly hot in a crisp button-down shirt and tie, heading to his summer internship. She didn't wait around to watch Ian emerge a few hours later in athletic shorts and a tank top, off to work at the gym nearby.\n\nTuesday night, her friends wanted to know why she stopped in the middle of pumping gas and drove her mom's car away from the station with the tank still half-empty \u2014 and hey, wasn't that one of the O'Brian twins coming out of the mini-mart, snacks in hand, looking all edible? And did the twins ever end up taking her out to celebrate graduation?\n\n\"We got ice cream,\" Diana said quickly. \"Nothing crazy happened. Very low-key.\" One twin, not two. Brendan, from the quick glimpse she'd gotten of his relaxed walk before she jumped back in the car. He'd spotted her too, opened his mouth to say something, and she had no plans of sticking around to hear it. She cranked up the radio, floored the gas, and tried not to remember Ian doing the same on Saturday night.\n\nWednesday evening, Mr. and Mrs. O'Brian came over for barbecue on the deck with her parents and Diana was forced to make friendly conversation before she left for a concert. She had to admit \u2014 once she'd pulled the pillow off her head on Sunday, she'd been going out. Having fun. Spending more time out of her house than in it, getting used to the strange feeling of free time. And it felt good, as long as she didn't let herself hear Brendan's coaxing whispers, or see Ian's eyes devouring her, or feel them both buried inside her as pleasure and need rocked her body.\n\nBut her ears pricked up when the O'Brians mentioned that Ian had been very quiet during the rare times they saw him at home. Of course both the twins were busy with their summer jobs, but this was unusual, and he didn't even seem to be talking to his brother.\n\n\"Brendan's always been the one person Ian listens to.\" Mrs. O'Brian heaved a long-suffering sigh. \"If we need to get anything across to Ian, we go through Brendan.\" She shook her head. \"I swear, his brother's the only reason Ian isn't wilder than he is.\"\n\n\"Diana?\" Her father frowned in her direction. \"Do you have something in your throat?\"\n\n\"No, no,\" she coughed. \"I better go.\" Hurrying out the door, she stopped herself from asking questions. But over the pounding music at the concert, and the dancing she was actually doing with her friends, she couldn't stop remembering that even though she'd called Ian a slut, the only person he'd touched on Saturday night had been her.\n\nThat night, she did bring her dildo out to the backyard. She'd taken it from her underwear drawer, nestled against the brown paper bag Brendan had brought through her window last week, her folded graduation speech about \"surprising yourself,\" and the black lace panties Ian had ripped off her eager body when she'd said she wanted to get wild.\n\nBass still hummed through her veins. Through every twist of her hips at the concert, she'd felt Ian's hard chest brush against her breasts, Brendan's hard cock pressed against her ass. Yes...she was peeling off her dress, sighing with relief as she freed her full breasts from her lacy bra and massaged the sensitive curves under the open sky. And oh God, it felt so good to work the thick dildo into her waiting pussy, stroking her clit as she got wetter and more excited and the night air caressed her naked body. Ian was spanking her, every smack of his big hand making her soft cheeks ripple. Brendan was feeding her his silken cock. Sweet Jesus, a girl's soft tongue flickered over her cunt and the luscious weight of breasts filled her hands...she was tangled up with two muscled bodies in the dark treehouse as knowing fingers explored her pussy for the first time...she was alone with Ian in her bed, vulnerable but safe in his arms as they fell asleep together...oh God, she was so confused. She was so turned on. She could only hope the music from her turntable hid her moans as the splashes in the O'Brians' pool sent tingles through her body and her pussy convulsed tightly around the dildo, hugging its roundness in a long shuddering orgasm.\n\nThursday afternoon found Diana standing at the front desk of the gym near her house, actually talking about classes and drop-in fees and whatever the hell else you discussed at a gym front desk while she peered over the receptionist's shoulder at the machines and weights like the stalker she was. There wasn't any mistaking the sculpted slope of Ian's back as he bent over a female body on the floor, spotting her through a series of weight lifts. The casual play of his muscles and his obvious focus made Diana's stomach clench. Of course he was working with a cute girl, but from what she could see, Ian wasn't cracking a smile, though the girl offered him plenty. No dimples, no flirting, nothing but business.\n\nShe could be bold, right? After everything she'd done with the twins, it wouldn't be a big deal to bike home, wriggle into the only shorts she owned \u2014 a red satin thrifted pair that said St. Xavier High School on the side and that she never, ever wore outside the house \u2014 stroll back into the gym like she actually knew what those machines did, and inform Ian she wanted a little personal training. And then \u2014 oh fuck, what the hell then?\n\n\"I know, right?\" The receptionist was giving her a meaningful look.\n\n\"Sorry?\" Diana said, flustered.\n\n\"One word: yum. I know I shouldn't say that, since I work here, but...\" She winked at Diana and tapped a few keys on her computer. \"I think he has some openings. Not soon, but if you can wait a couple weeks, I can fit you in\u2014\"\n\nRight. Diana shook her head. She was just another girl who drooled over Ian. She'd seen that he was alive and well, and that's all she needed to know. She didn't need any receptionist to do her a favor by fitting her in.\n\n\"His twin brother comes to work out in the evenings,\" the receptionist added. \"Can you believe there are two of them?\"\n\n\"Yeah.\" Diana cleared her throat. \"As a matter of fact, I can.\"\n\n*******\n\nFriday, she went to the beach with her friends. All day. There were no O'Brians to be seen, or any of their friends or relations. Just endless sun and sky and sand and water. And she felt it all, because once Marissa spread out the blanket, Diana took a deep breath, sucked in all her courage, and whipped off her oversized t-shirt. For about five seconds, she wanted to shut her eyes tight and sink into the sand, feeling the salt air, the burn of the sun of her skin, and all the eyes on her.\n\nLast Saturday night hadn't been a fluke. People hadn't just stared because she'd been with the twins. It made her dizzy to look around the stretch of sand and see so many guys glance away when she met their gaze \u2014 or not notice that she noticed them, because they were busy gawking at the generous swells of her breasts spilling over her yellow bikini top, or the soft curve of her ass, encased snugly in her high-waisted bottoms, or her smooth legs that felt nude like they never had before.\n\nA piercing whistle split the air \u2014 Marissa.\n\n\"Put your shirt back on, hot mama. That's got to be illegal.\"\n\nAnd Diana felt one hand actually reaching for her shirt, while her other hand stopped it. Instead, she took a deep breath. The sun felt good, the breeze across the tops of her breasts felt good, she was laughing now along with her friends, and if she was mostly naked, well, so was everybody else. An hour later, sand between her toes and everyone already reminiscing about high school, she was so relaxed that she flopped onto the blanket and closed her eyes.\n\nA hand nudged her shoulder. Diana blinked sleepily, confused by the bright light coming through her eyelids.\n\n\"You should put sunscreen on, Diana,\" said a low voice. A shadow fell across her face. \"You're already starting to burn.\"\n\nSquinting, she tried to make out which twin's head loomed over hers. A pair of brown eyes came into focus. Not Ian. Not Brendan. Alex Noriega.\n\nOh Jesus. She was remembering now. Alex had caught her by surprise in Marissa's backyard, what, a week and a half ago, the night before graduation? She'd gotten high for the first time, she'd fended off his kisses, she'd giggled her way home, and Ian had sneaked in her window and made her forget it all. Felt like five years ago.\n\n\"Uh, thanks,\" she murmured, fumbling with one hand for the bottle of sunscreen she'd seen nearby while she reached for her glasses with the other.\n\n\"Want help?\"\n\nHelp. That sounded good. She could use a lot of help right now. She was a little startled when a dollop of cream squirted onto her back, followed by Alex's hands rubbing it in, but she was too relaxed to argue, or to be all that embarrassed when she noticed his eyes on her flushed curves, or to make excuses when he asked what she was up to that night .\n\nSix hours later, restaurant noise filled the air. Diana eyed Alex's lips as he sipped his Coke across the table. Her shoulders were red with the first sunburn she'd had since she was a kid, her dress was unbuttoned an extra button in front, and she felt loose, relaxed, and floppy from lying on the beach all day.\n\nDetermined to challenge herself, she ordered the messiest, drippiest burger on the menu. It was delicious, even though she was constantly wiping juice off her chin.\n\n\"So what do you usually do on weekends?\" Alex's knee pressed hers under the table. This was really happening. After rushing headlong through every other possible first in the past three weeks, she was on her first date. And it was time to stop thinking that she should be in the O'Brians' backyard instead, snuggled between the twins, or that Ian should be the one sitting across the table from her right now, when she'd told him in the bitchiest way possible that she needed to be alone.\n\n\"You know.\" Diana tried to sound nonchalant. She popped a french fry in her mouth. \"Study. Go to record stores. Participate in orgies.\"\n\nAlex's mouth twitched. \"You're kidding, right?\"\n\n\"Yeah.\" She kept her face deadpan. Alex's leg against hers was very distracting. \"I don't always make it to the record store.\"\n\nAlex eyed her uncertainly over his burger. He wasn't sure she was joking. Or maybe he just thought she was nuts. \"What about you?\" she asked quickly.\n\n\"I, uh, I guess we haven't been going to the same orgies. I keep missing you.\"\n\n\"Sorry about that.\" She laughed, and he laughed too, looking relieved. This was good, right? Weird, but good. She was dipping her french fry in Alex's ketchup like she went out to dinner with guys all the time. They were actually making conversation. Alex was trying to focus on her face, but his obvious glances at the hint of deep cleavage peeking from her dress, accented by her sunburn, drove a curl of self-conscious excitement through her body.\n\nAlex was cute, in a scruffy kind of way. Would he like it if she pulled his hair later? Ian had loved that, the harder the better, and Brendan hadn't minded either... Fuck it, she was not going to think about their thick hair under her fingers, or how she wanted the twins' hands in her own hair right now and all over her flushed body, soothing her prickling skin, or how, right when Alex asked about the literary magazine \u2014 did high school ever end? \u2014 she fought the urge to dig up all the secret poems she'd written over the years, hunt down Ian, and dump them in his lap.\n\n\"Want to see a movie after this?\" she asked abruptly. Alex blinked, his Coke halfway to his mouth. Shit, he'd been right in the middle of talking about college. Where was he going, anyway? Brown. Or Duke, or some other one-syllable school, like she was. Before she could backtrack, Alex was nodding eagerly and asking what she felt like seeing.\n\nThe only logical next move was to suggest the action movie at the big cineplex nearby \u2014 the last kind of movie she'd normally pick. Alex looked a little surprised, but once they sat down in the packed stadium theatre, he dropped an arm around her bare shoulders. The warm weight made her sunburned skin tingle.\n\nExplosions rocked the screen. Diana did her best not to jump. When she turned to Alex, ready to whisper a comment about the action, he kissed her.\n\nSurprised, her mouth opened. His lips were softer than she'd remembered, his tongue hotter. Curious, she ran her fingers through his shaggy hair, and her glasses were in the way, and it was exciting and awkward at the same time. Alex seemed to like that. Now his hand was in her hair too, and their tongues kept brushing, and nervous arousal shot through her body.\n\nBut Diana couldn't keep her eyes from darting around. She could writhe between Brendan and Ian in a crowded club and not give a shit what anyone thought, but here? She was very aware of the people all around. Probably because Brendan wasn't handing her sweet bubbly drinks and Ian wasn't urging her to find things out with him. Had to be why.\n\nAnd Alex was busy running a palm up her bare arm, his other hand cupping her head and pulling her closer. From the way he was rubbing her shoulder, getting lower each time, she just knew he was working up to brushing against her full breast. Should she let him, just because it would feel nice? What the hell was normal for a first date with a guy you barely knew? Brendan wasn't here to murmur softly, reassuringly, in her ear that she was so sexy, doing such a good job, and Ian\u2014 just feeling his hot gaze on her body, his look of need and desire, sent a soft moan from her mouth, right around Alex's tongue, right as his hand brushed the heavy swell of her breast. And she was this close to pushing her firm curve into his hand, aroused past awkward excitement now that she was feeling Ian's hands on her too...\n\nHer breath caught when Alex's thumb rubbed the side of her breast. \"So tell me about those orgies,\" he murmured.\n\nBefore she could decide on an answer, Diana's gaze landed on a pack of guys, sitting across the aisle and up a row. Surprise jolted her body. Her skin prickled. Quickly, she broke the kiss and pulled back.\n\n\"Everything okay?\" Alex whispered.\n\n\"Fine,\" she whispered back. Not fine. Her pulse had skyrocketed. She tried to breathe. Two familiar muscled males, lounging in those seats, here to watch things exploding with all their friends. She should have taken Alex to see a nice drama with subtitles at the independent theatre downtown, where she could count on neither O'Brian twin ever walking in the door. \"I just saw some people I know.\"\n\n\"You're afraid they'll see us?\" Alex smiled teasingly.\n\n\"No, no, it's fine.\"\n\nShe'd spent enough time with the twins to read their body language, and she didn't have to be up close to know that the twin leaning back in his seat, relaxed and wearing a baseball cap, was Brendan, and the twin slouched next to the aisle, staring at them, was Ian.\n\nHer throat dry, she stared back. Why did he have to watch? He probably got off on it. He probably hoped the entire theatre would break out into one giant orgy. And dammit, his unsmiling stare made her feel slutty in a way she never had before, squirming with pleasure between him and his brother, or even with her head clasped between a gorgeous girl's thighs while Ian sank into her eager pussy from behind and Brendan did God knows what with the other girl.\n\nTrying to remember Ian as the kid who'd run around the O'Brians' house in Spiderman pajamas shooting his fingers at her like guns, instead of the too-handsome guy who'd ripped her insides out and stomped on them, she gave him her stoniest glare.\n\nUnbelievably, Ian's lips twitched. She hurriedly turned back to Alex, but her own mouth was dangerously close to a smile.\n\nWhen Alex's lips slid down her neck, Diana's eyes went back to the twin across the aisle.\n\nThere was a certain face Ian had made when they were kids and he wanted to get a rise out of her: eyes crossed so far they practically disappeared, nostrils flaring, tongue sticking all the way out and waggling obscenely. It never failed. He was making that face now.\n\nDiana's sudden explosion of laughter turned every head in the two rows in front of her. Alex pulled away, staring at her too. Great. He'd been kissing her so nicely, and she'd just snorted in his face.\n\n\"Sorry. Sorry,\" she whispered, her face crimson.\n\n\"What's so funny?\" Alex blinked at her like she'd grown three heads.\n\n\"Not you,\" she said quickly. \"The movie. Bad timing. Sorry.\"\n\n\"You think buildings getting blown up are funny?\"\n\nRight. A monument had just detonated on the screen, debris flying everywhere.\n\n\"I have a quirky sense of humor.\" Gulping, she tried to get a hold of herself. How dare Ian try to ruin her date? For the rest of the movie, she refused to look across the aisle. God, she could barely focus on the screen or on Alex. She was actually whispering excuses when he tried to take her glasses off and kiss her again. And knowing Ian was watching, or not watching, and Brendan there too \u2014\n\nAs soon as the movie was over, she practically dragged Alex out of the theatre. No, she didn't need to stay for the credits. But once they made it to the bright lights of the lobby, Alex said he'd be back in a minute and disappeared toward the restrooms.\n\nDiana buried her face in the fountain for a long drink. She needed to think straight. Keep her cool. When she stood, wiping the dripping water from her chin, a twin leaned against the wall next to her. Hands in his pockets, eyes on her face.\n\nUp close, Ian didn't seem to have gotten a full night's sleep in awhile. Still gorgeous, still athletic, but faint circles shadowed his eyes. His freckle stood out against his skin. She steeled herself not to care. More than likely, he was out partying 'til all hours, boozing and smoking up and getting women to spread their legs for him.",
        "Behind him, she saw Brendan, standing by the popcorn counter with the rest of their friends, glancing casually at the two of them. When she met his eyes, he gave her a little half-wave. Probably expected the three of them to get all cozy again, once she and Ian made up. She responded with a curt nod and turned back to Ian.\n\n\"Don't even think about ruining my date.\"\n\nIan ran a hand through his wavy brown hair. Diana wished he hadn't. It just made her want to grab his hair too, and pull, guiding his head down to her\u2014 She shook her own head impatiently, and Ian shoved his hands in his pockets again.\n\n\"Having fun?\" he asked.\n\n\"None of your business.\"\n\n\"Seems like a nice guy.\" Ian shrugged. \"Put him on a leash and you'll have a cute pet.\"\n\n\"I didn't ask you.\"\n\n\"Come on, Diana.\" Now a hint of dimple showed. \"We both know you could eat him for breakfast.\"\n\n\"I'll stick with rice krispies, thanks.\" Dammit, she was not going to let Ian make her laugh again. \"And I bet you don't know when breakfast is anymore, 'cause you're not sleeping.\"\n\n\"Yeah. Someone keeps playing moody electronica next door.\"\n\nDiana couldn't hold back a smile now. \"Well, your splashing is keeping me awake.\"\n\n\"Well,\" he mimicked, \"you should wear sunscreen when you lie out. All your skin's gonna peel off.\" Unbelievable. Ian was actually pulling a shred of skin off her bare shoulder. The brush of his thumb on her flushed skin sent a hot current of need through her body. Her nipples hardened, pressing against her sundress, and her pussy ached with sudden desire.\n\n\"What's the worst that can happen? My insides will fall out?\" She slapped his hand away.\n\n\"Diana, look\u2014\" He fixed his eyes on hers. Oh God. That pleading gaze was going to melt her into a puddle, and it was probably all an act anyway \u2014 she'd seen the way he'd puppy-dogged her mom into believing they'd spent a completely platonic night together in her bed.\n\n\"I am looking,\" she said in a low voice. And she didn't want to stop. Her hand was two seconds away from stroking the freckle under his eye.\n\n\"Hey there,\" said a voice behind her. She turned, so relieved Alex had shown up that she pecked his cheek.\n\n\"Hey,\" she said. \"Let's go.\"\n\nBut Alex wasn't moving. \"Are you...yeah, you're one of the O'Brian twins,\" he was saying to Ian, sounding...happy. Excited.\n\n\"Yep. Ian.\" And Ian was actually holding out his hand, giving Alex a firm handshake like he was a person with manners. \"And you are?\"\n\n\"Sorry,\" Diana said grudgingly. \"I should have introduced you guys.\" Clearly she was still a nice girl, too polite for her own good. \"This is Alex Noriega. We just graduated together.\"\n\n\"Hey, you were responsible for that prank with the principal's car and the pink spray paint, right? And the shrink wrap? People are still talking about it two years later. That was gold, man,\" Alex gushed.\n\nDiana wanted to kick him. So much for Alex saving the day. Ian nodded modestly, then launched into a drawling story about covering some door on the UConn campus with marshmallows. Somewhere, that story turned into another story. Alex hung on to every word, while Diana could only seethe.\n\nIan was doing it. Ruining her date \u2014 slowly, surely, and completely. Couldn't he leave her alone? Did he consider every girl he'd fucked his territory, his property, so he couldn't let her go have a good time with Alex in Mrs. Noriega's minivan?\n\nAnd as Ian kept talking like he planned to be there all night, piling on details Diana never would have believed if she didn't know he was capable of it all, was she really looking over her shoulder pleadingly at Brendan, who was watching the whole conversation with a look of amused interest? When she caught his eye, he just gave her an exaggerated shrug and mouthed something that looked an awful lot like \"not my job\". Then he fucking winked.\n\n\"You know what?\" Diana shouldered her purse. \"I'm just going to leave the two of you alone together and go get ice cream.\" For real, not as an alibi for clubbing and mass hooking up.\n\nIan raised an eyebrow at her \u2014 she wanted to tell him to put it back down again \u2014 but Alex looked abashed.\n\n\"I'm kidding,\" she said. She put her hand on Alex's arm. A little part of her watched the whole scene in shock. She was putting her hand on a guy's arm like it was nothing, when three weeks ago she wouldn't have been able to really look him in the eye. She supposed she had the twins to thank.\n\n\"So how do you guys know each other?\" Alex finally asked.\n\n\"The O'Brians live next door to me,\" Diana said shortly. \"Ian's like my annoying older brother. Brendan, too. See you around,\" she said to Ian, firmly steering Alex away towards the door.\n\nBut she couldn't help looking over her shoulder as they left the theatre. Brendan stood with an arm around his brother. While their friends laughed and talked, both twins watched her go.\n\n*******\n\nShe had to blame that look back. There was no makeout session with Alex in his mom's minivan. Her glasses never came off. Instead, driving away from the movies, there was a passionate debate about some band she didn't even like, but once Alex made a comment she mildly disagreed with, she began arguing harder and harder, just for the hell of it.\n\nSo much for being afraid she'd run out of things to say on a date. It wasn't until she came up for air at a stoplight that she noticed Alex looked a little scared of her, even though he was still sneaking peeks at her breasts. A guy? Scared of her?\n\nThe date ended with an awkward elbowy hug in front of her house \u2014 or so she thought, until Alex's rambling postmortem via text showed up half an hour later, right before she dropped the needle on her record and climbed into her sleeping bag. Maybe Ian had been right about the leash, and that was the absolute last time she was going to think about him tonight.\n\nAs Diana's eyelids drifted closed, the shine of the stars and the flash of fireflies kept her company. It was nice outside. Peaceful. The one thing she could count on to make sense. She could see herself spending every night out here until she left for Yale.\n\nDeep into the night, she rolled over and stirred awake, sleepily taking in the whispering trees and the damp grass against her hand. The needle scratched the record. The air had cooled down from the humid heat of the day.\n\nSomething lay in her field of vision, a lumpy pile on the grass that hadn't been there when she'd fallen asleep.\n\nCurious, she crawled out of her sleeping bag, dew on the grass getting her legs wet, and knelt in front of the pile, shivering a little in the night air. Fleece met her hands. A blanket. A Huskies blanket. She recognized it from the O'Brians' den. Maybe it had cushioned her back when she'd lost her virginity to Ian in the treehouse. And taken Brendan right after that...\n\nNext to the blanket was a thermos. Probably spiked, she thought wryly, but she unscrewed the lid. Steam rose to meet her. Little marshmallows bobbed on top. The smell brought back every cup of Swiss Miss she'd ever drunk.\n\nA piece of paper lay on the blanket. She unfolded it. Three words: Can we talk? The messy, spiky handwriting didn't leave any doubt who'd written it.\n\nWho the hell was we? Her and Ian? Brendan too? Could she honestly sit down and talk with either of them without wanting to jump them? Or yell at them, or both?\n\nShe pressed the blanket against her cheek, running her hand over the fuzzy fleece, and sniffed the hot chocolate again, closing her eyes at the warm scent. There was no way this could work. Brendan had told her to trust them, but right now, she didn't trust herself.\n\n*******\n\nSaturday afternoon, Diana sprawled on her bed, reading in her underwear. She'd fallen asleep wrapped in the blanket the night before, still smelling hot chocolate, but when the sun rose, she'd folded the blanket neatly, set the thermos and note on top of it, and tiptoed inside her sleeping house.\n\nShe couldn't bring herself to go out today, see her friends. Can we talk? tugged at the inside of her head. She saw the twins' hazel eyes on her as she left the movie theatre, felt their solid bodies surrounding her in the club, in her bed, in the treehouse, heard their whispers urging her to do everything she'd always wanted to do. She smelled smoke and beer and the twins' male sweat, tasted Ian's hot mouth as his lips closed over hers in front of everybody.\n\nVoices and laughter floated through her open window from the party next door. Mr. and Mrs. O'Brian were gone for the weekend again \u2014 Diana had to wonder what they thought the twins did when their parents were out of town \u2014 and her own parents were off at a lecture somewhere. After an especially loud shriek, Diana couldn't help it. She wiped the sweat from her forehead, rolled off her bed, and went to the window.\n\nA twin lay in a chair on the O'Brians' patio, beer bottle dangling from one hand, staring out at the pool.\n\nGirls came up to him, and he ignored them.\n\nFrom this distance, Diana could tell who it was. She didn't need chin clefts or freckles as guides anymore.\n\nAnd suddenly, she knew what to do. Throwing down her book, she unhooked her black bra, wriggled out of her damp panties, and let them all drop to the floor. She took just a second to turn a full circle in front of her mirror and eye the new tan lines on her body that outlined the full pale globes of her breasts and pointed right to the velvety patch between her legs. The sunburn was calming down, but her skin still prickled, making her very aware of every touch \u2014 the lace on her bra, the breeze from the window, her dark hair tickling her shoulders.\n\nOne quick tug and her underwear drawer was open. On went her yellow swimsuit. She tied the little red bows tightly on the sides, adjusted her deep cleavage in the top, smoothed her bangs, and slipped on a sundress.\n\nThree weeks ago, she'd quaked at going over to the O'Brians' and walking in on their party. Three weeks ago, she'd been afraid.\n\nShe didn't need to toss back a shot of vodka for courage now. She didn't need to pace and argue with herself while school and shyness and lust pulled her in all directions. A text to her parents that she was heading to the O'Brians', a scramble onto her desk and up to the window frame, a deep breath, and she was in the tree outside her window.\n\nThe smell of cut grass filled her nose. Wind set the branches swaying, the bark rough against her palms and bare feet. And God, saying she wasn't afraid right now would be a lie, but if the tree could hold two muscular guys, it could hold her. She half-climbed, half-slid down the thick trunk, scraping her legs, breathless and laughing when her feet hit the ground.\n\nHer pulse pounded as she ran over her lawn, wet from the sprinklers. Years ago, she and the twins had lined up rocks on the grass to show the exact boundary between their houses. The rocks were gone now, but she'd crossed the line a long time ago, and she had no plan to turn back.\n\nWalking right through the O'Brians' unlocked front door, she stopped short, her heart beating faster, when she saw a half-naked twin in the kitchen getting ice.\n\nHe looked up, startled. Then a pleased smile broke across his face.\n\n\"Hey, Di,\" he said softly. \"I won't bite.\"\n\nBrendan. \"No, that's not your style,\" she managed.\n\nHe laughed \u2014 a genuine laugh. Diana started laughing too. Before she could think twice, she crossed the kitchen and impulsively grabbed him in a tight hug. Brendan's arms wrapped firmly around her, pulling her close. She could tell herself his hug felt brotherly. Almost.\n\n\"We missed you, Di.\"\n\n\"We?\" She repeated.\n\nHe shook his head above her. \"I promised I'd stop talking for Ian. I missed you. But I know he did too.\"\n\n\"You guys are talking again,\" she murmured into his shoulder. \"To each other. I heard you weren't.\"\n\n\"Yeah,\" Brendan said quietly. He squeezed her waist. \"Mad at me?\"\n\n\"Not anymore.\"\n\n\"Good, Di. I'm really glad.\" She could feel the relief in the muscular body close to hers.\n\n\"Missed you too,\" she whispered. She let her cheek rest against his chest, her skin stirring when Brendan's hand brushed her hair off her neck and forehead.\n\n.\n\n\"Look, Brendan \u2014\" the kitchen was starting to feel much warmer, and she had to stay strong in her resolve for which twin she was here to see.\n\n\"Ian's out back.\" His thumb was rubbing her shoulder blade idly now. Maybe he really didn't notice that kind of thing. Maybe she could get used to it. \"I think he'll be really glad to see you.\" And before she was ready to brave the backyard, he'd put a drink in her hand and walked her outside.\n\nThe O'Brians' backyard spilled over with people in swimsuits: yelling, laughing, scarfing chips, guzzling beer, playing ping-pong. Music vibrated the air. Diana walked right through the crowd. Nervousness pricked her skin, but it didn't stop her from looking around, smiling, even saying hi to the people she passed.\n\nThose sleek tanned bodies frolicking around the pool belonged to people, just people like her. If she'd learned anything from putting her head between the legs of the kind of girl who'd always scared her, it had been that.\n\n\"Hey, you gave that speech at graduation, right?\" one girl called out. \"My little brother's in your class...we all really liked it...\"\n\nCalling back a thanks, amazed that she wasn't blushing, Diana stopped short at the edge of the pool. A lone figure cut through the water, sending up furious splashes on either side as he zoomed from one end to the other. One glimpse of his back, wet and slick, and she shimmied out of her sundress, not caring who saw her curves on display or where that low whistle came from. Her glasses went on top of her clothes.\n\nShe jumped into the pool, not with a sleek dive, but a kid's belly flop. If the music hadn't been loud already, she would have cranked it up. Swimming as fast as she could toward the twin in the water, she took a deep breath and grabbed his ankle, hard.\n\nIan twisted to glare over his shoulder.\n\n\"What the fuck\u2014\"\n\nHe broke off.\n\n\"You're in my lane,\" Diana said in a low voice.\n\nHazel eyes widened. Ian turned to face her, water dripping off his cheeks and clinging to his eyelashes and broad shoulders. She'd never seen him quiet like this before. \"Really glad to see you\" was not the dominant expression on his face. It was more like, \"What the hell are you doing here?\"\n\nDammit, she'd misjudged everything. She should get out of the pool right now and go home \u2014 except that Ian's hands gripped her waist, holding her up in the water. She'd trusted him to respond, give her something to go on, and now she had no idea what to say next.\n\n\"You wanted to talk?\" she whispered. God, her voice was giving out. Hoarse.\n\nHe was just staring at her. Finally, he spoke.\n\n\"Not here. In my room.\"\n\nNow her throat really was dry. Her hands squeezed Ian's shoulders. Cool water lapped their skin. She nodded quickly. Pulling her with him, Ian swam to the side, grabbed the ledge, and heaved his dripping body out of the pool. He bent to give Diana a hand up.\n\nNeither of them let go. Ian's fingers felt too good laced through hers as they crossed the lawn, pretending they weren't still holding hands. Past the warm pressure of Ian's palm and the hot sun on her wet body, Diana barely noticed the clack of the ping pong ball, paddles flashing, bottles clinking, some of the twins' friends watching her and Ian curiously as he held the back door open for her.\n\nThe O'Brians' long kitchen, the fancy dining room, the living room with the giant recliner that she and twins had rolled around on when they were kids, were all so familiar, the way she'd always remembered them, but changed, too \u2014 a new landscape over the dining table, a different couch in front of the TV.\n\nShe was aware of Ian's eyes on her creamy skin as they climbed the stairs, passed a twenty-year photo gallery of the smiling twins, and walked down the upstairs hallway. Water dripped from her swimsuit and hair, leaving a trail on the polished wood floor, and Ian's wet swim trunks clung to his legs. It couldn't be denied \u2014 she was looking too. As they passed a closet, he opened the door, took out two thick towels, and wrapped one around her shoulders. Her skin tingled at the brush of soft cotton.\n\n\"Uh, do you and Brendan still share a room?\" Last she remembered, the twins were thirteen and insisting on their bunk beds.\n\nA pause. \"Nuh-uh,\" Ian said finally. \"But Brendan still sleeps with a nightlight.\"\n\nDiana couldn't keep back a spurt of laughter. \"Be nice.\"\n\n\"Eh, he can take it. Believe me.\"\n\nPulling her into a room on the left, he closed the door.\n\nPosters plastered the walls and ceiling. The bunk beds were long gone. Diana eyed the low full-size bed, which to her shock was actually made. Ian's decorating style had been wall-to-wall posters when they were kids, too. There were all the sports posters she expected, and the music posters, but instead of the generous serving of girlie pictures she'd figured was a given, there was only one \u2014 small and close to his bed. A pinup girl, frolicking cheerfully in a swimsuit while salt spray licked her legs. A girl with black bangs and shoulder-length hair, with pale voluptuous curves and a slim waist. A girl who looked...a lot like she did.\n\nNeither of them had broken the silence. Diana let Ian's hand go and pointed at the picture. \"I'm not sure how to feel about that.\"\n\nIan shrugged. \"I like brunettes with big tits. Surprise.\" He was standing posed by the door, looking cool, but Diana noticed his leg jiggling. \"Did I ruin your date?\"\n\n\"Pretty much.\"\n\n\"Good.\"\n\nDiana sniffed, turning quickly to examine the basketball trophies that lined the dresser. Ian's eyes, following her exposed body as she picked up each trophy and studied it, sent a hot flush over her skin. She might as well be naked in his room. Laughter from the backyard filtered through the window, along with summer sounds from the neighborhood: a lawn mower whirring outside, leaves rustling, cars rolling by. Ian stood a foot away from her, drops of water dripping down his chest.\n\n\"Ian,\" she said softly. When she turned to face him, warm skin met her hands. Hot lips closed over hers. \"Wait,\" she panted before she dove in for another kiss. \"We have to\u2014\" Oh God, Ian was sucking hard on her lower lip, and she was tasting his tongue, raking her fingers through his hair like she'd wanted to all week, squeezing his shoulders, trying to wrap herself around him. \"We have to talk,\" she gasped out, even as she ran her tongue over his neck and Ian grunted, backing her against the dresser. \"You wanted to talk. So talk.\" She couldn't help adding, as Ian's finger on her spine made her shudder and she grabbed his hand, \"This time it was your idea, right? Not Brendan's?\"\n\nIan's chest rose and fell through a few deep breaths. Then he tipped his head toward the bed. Diana let him guide her to the low mattress, wrapping the towel tightly around her curves. Keeping space between their wet bodies \u2014 a bare inch \u2014 was the hardest thing she'd ever done.\n\nIan leaned back and rubbed his forehead. \"Brendan always knew,\" he said abruptly. \"He knew I had a crush on you from the time we were kids. But I'd never admit it to him, and the times he said something, I said you were an obnoxious little priss and no way.\"\n\nDiana could actually feel her mouth fall open. \"You teased me constantly.\"\n\n\"And you gave it back so well.\" A grin flashed across Ian's face. \"So well.\"\n\nShe blinked, stunned. This was a lot to absorb, and God, Ian didn't waste any time getting down to it. \"Why?\" she asked finally. \"Why would you never admit it?\"\n\n\"You're so smart, Diana.\" His voice dropped. \"It's kinda scary.\"\n\n\"I'm not...\" She broke off. \"I'm not. There's a lot that I\u2014 that I don't know.\"",
        "Ian's lips twitched. \"Don't say that. I'm not even kidding.\"\n\n\"You could have any girl\u2014\"\n\n\"Except you.\" Hazel eyes held hers. \"You just stopped talking to me. You stopped looking at me. You acted like you were too good\u2014\"\n\n\"I was shy.\" She cut in, frustrated. \"I was nervous. You ignored me. I stopped talking to Brendan too. And basically anyone male.\"\n\nIan just shook his head. \"When Brendan came back from your house and told me he kissed you, and it was your first kiss, he tried to make me feel better about it. Even though we hadn't talked about you in awhile. He said it just happened, and he wanted to help you out, and then you asked for more, and you were all grown up and gorgeous and he'd asked you to come over later so I could, uh, see you too.\" A little smile flickered over his lips. \"I told him to have fun, because\u2014\" he broke off, red creeping up his neck.\n\n\"Because?\" prompted Diana.\n\n\"Because you were a frigid little bitch who'd never warm up past freezing, and he was wasting his time.\"\n\n\"Thanks, Ian,\" she said drily.\n\n\"I didn't really think that.\" Ian lay back on his bed, arms folded under his head, his eyes focused on her face. Diana wanted to tug the tufts of hair under his arms. \"I had this feeling that under your buttoned-up ice princess outside was a crazy hot girl who'd burn me up if I got close enough. And yeah. I was right.\"\n\nGod, Ian was talking about being burned up, but she was the one whose skin was hot and fizzing, and she didn't know if the drops trickling down her back and into the deep valley of her cleavage were pool water or sweat. Her towel had fallen down to the mattress, somewhere in the conversation, and she hadn't even noticed. She squeezed her thighs together, aware of Ian's gaze roaming over her exposed skin and clinging swimsuit. Her throat was dry. Parched. \"And?\"\n\nIan's eyes flickered. \"Brendan talked me into hitting on you too, just to see what happened. The way he put it, you were a shy little virgin with a wild side that was just waiting to come out, and we were the guys to help you with that. I really didn't think it would work, that first time. And when it did, I figured it was all Brendan. Nothing would happen between you and me without him around. He has a nice smooth touch.\" Ian gave her an evil grin. \"He's the kind of guy that\u2014\"\n\n\"My mom wants me to be with,\" Diana finished. \"Except she has no idea who he actually is. And he likes it that way.\"\n\nIan raked his fingers through his drying hair. Little drops of water clung to his bare shoulders and the tips of his chest hair. Diana couldn't take it anymore. She knelt on the bed right over him, straddling him with her knees pressed to the sheets on either side. Not quite settling on his lap, but leaning over him, looking down at his near-naked body.\n\n\"You could have asked me,\" she said. \"You guys were busy backstage making your plans and agreements.\"\n\nIan shrugged, a little smile playing over his mouth. A hand squeezed the curve of her hip. \"You weren't complaining.\"\n\nNo. She definitely hadn't been complaining.\n\n\"Brendan asked me, after you spent the night. Oh, I heard you were up early. I heard you were taking care of Diana. If you want something more from her, tell me now. I kept telling him no, she's just little Diana who grew up next door to us, and she's hot now, and we're all just fooling around. And he finally said he believed me because he figured I'd only tell him the truth. But he always knew.\"\n\n\"Those girls at the club\u2014\" she flushed. \"Did you plan that too?\"\n\nIan shook his head. He actually looked a little embarrassed, she was pleased to see. \"Brendan thought\u2014\" he broke off. \"He wanted to see how much we could get you to let go that night. If we, you know, helped you get comfortable enough. We came really fucking close to having an argument about it before we picked you up. I'll be honest, I wanted to see it too, but I also...didn't. But Brendan thought it would be so great for you. And to tell you the truth, he was pushing me too. Inside, he was about as close as Brendan ever gets to pissed that I wasn't admitting how I felt about you. So we talked about what might happen if you were totally open to trusting us, and the only hard rule we made was no other guys.\"\n\nGod, the twins really had been making agreements behind her back. But she didn't regret trusting them. \"So you didn't know the girls.\"\n\n\"Didn't even know their names.\" Ian rubbed his hands over her back. Diana shivered. Her fingertip found the freckle under Ian's eye, stroking gently. \"It was all about you with them. When I woke up, I thought it was you touching me.\"\n\n\"Sorry,\" she whispered. A sudden pinch on her ass made her wriggle.\n\n\"Brendan probably got their numbers.\" Ian flashed her a wicked smile. Her cheeks were red now, she knew. \"If you want a repeat.\"\n\n\"Jerk.\" She poked him in the ribs.\n\n\"You made that girl come pretty hard.\" Ian slapped her ass lightly. \"And I'd never figured you for a screamer.\"\n\n\"That was with you. When you were\u2014\" Diana broke off. \"And once was enough for now, thanks,\" she added hastily. \"I know that's just a typical Saturday night out for you, but\u2014\"\n\n\"It wasn't,\" Ian said quietly. \"Not even close.\"\n\n\"But you've gotten crazy before.\" She was pushing now, but she had to say it. \"You and Brendan. You've been with the same girl, before me.\" She waited.\n\nIan gave her a reluctant nod. \"But not like you. Nothing like you. You know what it was like before, when me and Brendan teamed up?\" His voice went high. \"Ooohh, let's look at your cocks side by side and see if they're exactly the same. Ooohh, let's see who cums first. Stuff like that.\"\n\n\"Poor you.\"\n\n\"Diana, it's completely different with you. From the beginning\u2014\" Ian's eyes were half-closed now, his hands stroking her arms. \"I couldn't believe I was touching you. I couldn't believe I was fucking you. Being your first \u2014 I thought for sure you'd want Brendan.\"\n\n\"You teased me. You gave me such a hard time\u2014\"\n\n\"Because I literally couldn't believe something I'd wanted for so goddamn long was actually happening.\"\n\nDiana stared. \"You really mean it.\"\n\nIan nodded once. Their gaze held. He cupped her cheek, and the surprising gentleness of his touch sent a wash of need and excitement over her skin, popping it into goosebumps.\n\n\"Look, she said softly, \"about Brendan\u2014\"\n\nBrushing her wet hair back from her face, Ian gave it a teasing tug. Diana couldn't resist pinching his nipple in response, and he grinned. \"We talked. After a few days of not talking. When we saw you at the movie theatre, with your pet\u2014\"\n\n\"Stop.\" She slapped his arm.\n\n\"Things couldn't go on like they had been.\" Ian's warm hand covered her stomach, rubbing in circles. \"Not just with you. All that good twin-bad twin shit\u2014 we'd been doing it so long, I didn't even know what's real anymore.\" Diana sighed when Ian stroked her ribs. Her skin was still covered in goosebumps, but Ian's touch was making her melt from the inside. \"I love Brendan, Diana. We've shared a lot. And it killed him that I had to be alone for awhile, but I needed to do it. He's fine with it. I'm fine with it.\"\n\n\"Oh, that's great. What about me?\"\n\n\"What about you?\" Ian looked at her innocently. Heat flooded her face. His smile got bigger, and she realized he'd noticed her hard nipples poking through her swimsuit.\n\n\"I, uh\u2014\"\n\n\"You liked being with both of us.\" He rubbed his thumb over her belly button, and she braced her hands flat on his chest.\n\n\"Yes,\" she whispered. \"A lot. I'm not going to lie.\"\n\n\"You can't lie, baby. I saw how fucking hard you came on my brother's cock. More than once.\"\n\n\"Jesus, Ian.\" She'd settled onto his lap without realizing it, and the hard bulge in his wet swim trunks nestled against her crotch. She was starting to breathe faster.\n\nHe reached up to run his fingers under the straps of her yellow swimsuit top. When she leaned forward, arching instinctively towards his touch, he eased one strap, then the other down her shoulders. Diana shivered when fingers slipped inside her swimsuit, roaming over the tops of her firm swells.\n\n\"No point in pretending you didn't. It was hot. I liked watching. I liked you between us, turning into the hot little slut you're meant to be.\"\n\nThere was no way she could hold back now. Diana rubbed her wet crotch over Ian's thick erection, moaning softly as his fingers found her rosy nipples and pinched. \"It\u2014 it probably wouldn't have happened with just one of you,\" she managed. \"Maybe Brendan and I would have kissed some more and that would have been it before I freaked out. And nothing would have happened with you. Ever.\"\n\n\"Yep.\" Ian nodded slowly. \"But now\u2014 Look, Diana\u2014\" His hands closed over her breasts. His eyes, fixed on hers, sent a shiver through her body.\n\n\"I want to be with you,\" she said softly. A hundred and eighty degrees away from being shy.\n\nIan hesitated, struggling to say something. \"If you want one last time with both of us\u2014\" he said in a low voice, \"Just be honest about it.\"\n\nFor a second, Diana thought about it. It would be hot. Of course it would be hot. She could feel Brendan's knowing hands on her damp skin, hear his reassuring whispers in her ear. But the way Ian was looking at her, holding his breath, gave her the answer.\n\n\"No. I want to be with you.\"\n\nHer face burned. Ian just stared at her, wordlessly, every flicker of his eyelids a pinprick on her skin. Slowly, he stripped her bikini top off her heavy globes and draped it over the headboard behind him. Palms closed over her waist. Inch by inch, she leaned down, feeling the heat from Ian's chest against her breasts as she came closer. Before her lips could settle onto his, he flipped her over.\n\nSuddenly, she couldn't hear the shouts and laughter outside, the splashes, the summer sounds of cars rolling by, birds singing, leaves rustling. Just Ian's hot mouth opening to hers, sucking in her tongue with a suddenness that made her gasp. Ian smelled like pool water. He tasted like the hot sunshine outside. She couldn't stop, she didn't ever want to stop tasting him, nibbling on his lips, opening her mouth to his own probing tongue.\n\nOh God, Ian's lips were all over hers, her neck, her throat. She cried out as he sucked on her tender skin and her head swam. Her hands roamed down his back, stroking the smooth flesh, digging her fingers into firm muscle, trying to touch all of him at once. Pushing him back, she bit his neck in return.\n\n\"Fuck,\" he groaned. His mouth captured hers again, and her breath caught. Jesus, she wanted to feel Ian everywhere, wanted to taste him, take him all the way in, but it was scary as hell too. Admitting his body against hers meant more than a hot crazy hookup with the boys next door. Seeing Ian strip down for her, doing the same for him. But she needed to be naked with him as soon as possible. When she tugged his busy hands toward her hips, fingers swiftly loosened the red bows on her swimsuit bottoms, peeling the wet fabric from her goosebumped skin.\n\n\"Ian,\" she moaned into his neck. \"I'm cold.\" Even though his skin burned her everywhere they connected, even though the June air was warm and sweet, she needed him to surround her, warm her up even more. A powerful arm pulled her close, and she jumped when thick fluffy fabric rubbed the full curves of her breasts and tickled her under her arms. Ian moved the towel over her naked body with sure strokes, drying every crevice in a way that felt beyond intimate. And she couldn't stop running her hands over his chest and shoulders, feeling hot skin and flexing muscles.\n\n\"Hold still, Diana \u2014 uh,\" he groaned suddenly, when she nipped his salty skin. The towel slipped between her thighs. \"No way we can dry you here,\" he murmured, that familiar smirk on his face. \"You always have such a wet little pussy, don't you?\" Diana shuddered at a sudden squeeze on her mound.\n\nThen the towel flew across the room. Ian propped himself on one muscular arm, looking down at her so intently that aching need washed over her body. She was alone with Ian, face to face in afternoon sunlight, wide awake with nothing to fuzz her brain.\n\n\"Ian...\" she whispered.\n\n\"I'm looking.\"\n\nShe didn't want to pull her eyes from his gaze, but she needed to look at him too. Her throat was dry again. She licked her lips. The freckle under Ian's eye led to the freckle on his chin, then the scar he'd gotten after popping one too many wheelies when they'd all been out on their bikes as kids, the raised line from his dive into the backyard pool off a tree, and the spot where he'd broken his collarbone after tumbling into the bushes, that time she'd climbed on the roof with the twins.\n\n\"I remember that. And that. And that.\" She stroked each scar lightly, and he breathed in. \"I remember how you took all the blame for me being up there, and how you climbed right back onto the roof the next day.\"\n\nA grin flashed across his face. \"Just wanted to impress you.\"\n\n\"Now you say that.\"\n\nIan chuckled. One finger touched her jaw, traced the soft skin of her neck, and trailed over the flushed edge of her sunburn, outlining her full breasts and curving hips. His light touch sent sparks through her skin. She could only do the same, traveling down his chest with a fingertip, her legs crying out to just wrap around him. Six inches away, she could feel the heat coming off his body.\n\n\"What do you see?\" she breathed. She couldn't stop drinking in the bronzed swells of his muscles, the amazed half-smile on his lips, the need in his hazel eyes.\n\n\"You,\" Ian murmured. \"Naked in my bed. Beautiful.\"\n\nHe eased her creamy thighs apart. Fingers peeled open her wet petals of flesh. Ian's eyes on the rosy folds between her legs made her nipples harden. More than that \u2014 the pure desire on his face sent a trickle of juice from her pussy. When she gasped, he parted her lips, holding her tight juicy entrance firmly exposed to his stare. Diana moaned, squeezing his waist. Oh God, oh yes. This was so right. She needed to be completely open to Ian's lust-filled gaze. His hands on her soft skin, unmoving, drove her crazy, but when she bucked her hips toward Ian, his palms pressed her thighs down against the mattress.\n\n\"Spread open to me,\" Ian's voice dropped to a growl. \"Can't tell you how many times I've thought about you here. I've wanted you in my bed for so long, Diana.\"\n\nShe was so aroused, she could barely breathe. Ian stroked her soaked lips with one slow finger, stirring her dark curls, driving a whimper from her mouth. Thumbs spread her quivering pussy even wider. \"Anywhere else?\"\n\nA grin creased his face. \"Everywhere.\"\n\n\"I want you everywhere,\" she said softly. Her own thumbs hooked under the wet waistband of his swim trunks. Her hands trembled as she worked the soaked fabric over Ian's hips. His glossy cock, springing free, was just so beautiful. Mouth-watering. He raised his body to help her slide the swim trunks down, then kicked them off.\n\n\"Tell me, baby.\" His breath was hot against her ear. \"Talk dirty, you little slut. I want to hear you do it.\"\n\nShe moaned, flushed and excited. \"Do what you said you wanted to. That night you made me guess who you were.\"\n\n\"Oh. That?\" Ian's face was all innocence. One warm palm slid up her smooth stomach and heavy breast to give her nipple a sudden hard pinch, the other hand firm on her thigh. Diana yelped, then moaned again at her pussy's eager response. \"You said let's forget that ever happened.\"\n\n\"I don't ever want to forget,\" she whispered.\n\nHe grinned. \"Well, you're gonna have to remind me, 'cause I forgot.\"\n\n\"Liar.\" She dug her fingers into his shoulders.\n\n\"Tell me, Diana.\" Ian tweaked her puckered nipples with both hands, cupping her breasts, making her back arch as he rubbed his thumbs over the tight buds. Every curve cried out for his touch. Her pussy was all liquid heat, her thighs slick with juices. \"Say it. Say what I said to you. Ask for what this bad girl needs.\"\n\nInstead, she pushed on Ian's broad shoulders, wedged her leg between his, and rolled over with him so she was looking down at surprised hazel eyes. Before she could think twice, she dipped her head. It didn't matter who was doing the begging now. Her own soft pleas mixed with Ian's groans of need as she buried her face in his hard stomach and kissed his warm skin. Fingers twined in her hair, tugging, when she teased his belly button with her tongue, licking a hot trail down to his cock.\n\n\"Ian,\" she said softly. Kneeling between his legs, she wrapped her fingers around his thick shaft and looked up at him with wide blue eyes. Ian was breathing shallowly. A bead of liquid hung suspended from his smooth head. She eagerly lapped it up, and his cock jerked in her hand. Her firm breasts felt heavy with want, but she had to focus on Ian right now.\n\n\"I need you to fuck me everywhere.\" That was her voice, sounding so husky. So confident. Like pure sex. \"I need you to do what you said you wanted to, in my bed, when you climbed in my window the night before graduation and made me guess which twin you were. I need you to fuck my mouth,\" she took a deep breath, \"and my pussy,\" her voice dropped, \"and my ass,\" she whispered. Ian grunted softly, his eyes fixed on hers. His fingers found the back of her head again and slid into her tangled hair. She began stroking the meaty cock in her hand, slowly, remembering Ian guiding her that first time in the treehouse. Her cheeks were flaming now, her whole body was on fire, hot desire pricked her skin and concentrated in her cunt. \"I need you to soak me in your cum and see it running out of me while I lie there, completely satisfied.\" God, she remembered every word he'd said to her. No way she could ever forget. \"Because you're going make me completely satisfied.\"\n\nIan let out a long breath. His hands tightened in her hair. His cock was so close to her lips, oozing more liquid, and she lightly ran her tongue around the satiny head. \"Yeah,\" he rasped. \"Fuck yeah, I am.\"\n\nLow grunts met Diana's ears as warm thick flesh filled her mouth. Yes...she wanted Ian everywhere. Wanted to take him all the way in. Hug him, surround him, hold him. Be surrounded by him, all around her. She wanted to taste his cum, feel it splash across her face and breasts. Be marked by him. And she wanted to draw this out, but she couldn't help gobbling him hungrily, licking and sucking his meaty erection, swirling her tongue over his hot smooth shaft, driven with need.\n\nWarm liquid suddenly flooded her mouth. Pulling back, she quickly pumped Ian's cock, letting more warmth spurt onto her cheeks and lips. Did she have some in her hair? God, she hoped so. She took in Ian's expression, somewhere between shock and hungry delight, as he panted above her, opening into a surprised grin when she began to laugh.\n\n\"What's so funny?\"\n\n\"I'm just happy,\" she giggled. \"And it was kind of hilarious when you came on my face.\"\n\nIan's grin broadened. \"Dirty girl,\" he whispered back. Diana twitched at the sudden firm motions of the fluffy towel. Ian was wiping her face clean with deliberate strokes, rolling her onto her back. His hand cupped her firm breast as he teased the towel down her body. A low cry left her mouth when hot lips closed around one eager nipple, sucking hard on the tight bud. It was almost too much, but Ian's big hand was so soothing on her other breast, his caresses so gentle as he explored the heavy curve, that her shrieks were shrieks of pleasure and need.\n\n\"Ian\u2014 oh God\u2014\"\n\nShe gasped when he scraped his teeth against her nipple, grabbing his hair with both hands to tug his head away, but Ian just ran his tongue around her puckered skin, blowing a stream of cool air over her rosy nub.\n\n\"Please,\" she begged.\n\n\"Please what?\" Ian growled into her breast.\n\n\"Touch me.\" Her voice came out a whisper.\n\n\"I am touching you, Diana.\" He gave her nipple a tweak.",
        "\"You know what I mean.\"\n\n\"Oh, here.\" He tugged her earlobe.\n\n\"Ian\u2014\" she protested.\n\n\"Say it.\"\n\n\"Touch my pussy, Ian,\" she said softly.\n\n\"Ooohhhh, right. Your sweet little pussy.\" Fingers dipped into the river of juices between her legs. Diana gasped, her body tightening when Ian massaged her opening.\n\n\"Feel good, baby?\" He grinned at her. She groaned softly, curling up against him and letting her thighs splay apart. Ian's blankets were completely rumpled now, his bed unmade, the pillows scattered on the floor. Afternoon sun lit the room. His free hand found hers, wrapping around her palm.\n\n\"I need more...\"\n\n\"Tell me.\"\n\nJesus, he was making her ask for everything. \"Stroke my clit,\" she murmured, blushing now. \"Please, babe.\"\n\nIan's eyelids flickered. His cheeks were flushed. He'd caught the term of endearment. She'd never dared use one before.\n\n\"Like that, beautiful?\" Fingers closed over her clit, pinching it assuredly into swollen eagerness.\n\n\"Yesss...\" she moaned. \"And put your fingers inside me.\"\n\n\"You want so much,\" Ian murmured. \"You're such a horny little girl, Diana. Like that?\" She moaned softly at sudden pressure inside her soaked cunt. \"Or like that?\" She wriggled at the sensation of being stretched further open. \"Or like that?\" Letting go of her hand, his other palm slid swiftly over her thigh. She cried out when more touch pressed firmly against her slick rosebud, caressing the sensitive skin. \"You didn't say where.\"\n\n\"Yes, yes...\" she panted, shuddering as Ian's fingers thrust into her warm pussy. She buried her face in his shoulder when she felt him penetrate her ass. \"Make me come, Ian. Please.\"\n\nHe grunted when her hand closed over his cock, stroking the satiny skin. Oh yes, he was hard again.\n\n\"You're so demanding.\" A hot tongue snaked over her neck. She moaned at the slow circles of his thumb on her clit, the knowing strokes of thick fingers in and out of her tingling cunt. \"This is gonna be the story all summer, isn't it? My girlfriend's a hot little slut who's going to keep me busy satisfying your dirty needs. And I can't even expect my brother to help me fuck you anymore.\"\n\n\"Ian,\" she groaned. He just laughed softly, his thumb sending sharp twinges of pleasure radiating out from her clit. She shivered, her pussy spasming on his fingers. And oh God, his finger was sinking deeper into her ass, deliberately easing open her tightness, coaxing her to relax and accept the intrusion. \"Not just the summer,\" she whispered. \"The fall.\"\n\nIan's strokes slowed. He held his fingers inside her juicy pussy. \"If you say so, baby,\" he said quietly.\n\nInvoluntarily, she squeezed his cock, her fingers still wrapped around it, and his eyes narrowed with need. \"What do you mean?\" she demanded. God, her pussy and ass were quivering around his probing touch, she was completely open to him, and-- Ian just shook his head, starting to rub her soft folds again, but she gripped his wrist. \"Tell me.\"\n\n\"I mean,\" Ian rested his palm on her mound, cupping her pussy, his fingers not moving, \"that when you go to Yale, Diana, you're not going to be into me anymore. So let's just live in the now.\"\n\n\"Excuse me?\" She squeezed his cock harder, and Ian's eyes opened wide. She could barely think, she needed his touch so badly. \"You're not going to be into me. I bet everyone worships the ground you walk on at UConn. You and Brendan. You guys walk around with...with...a basketball in one hand and a beer in the other, and beautiful girls hanging onto your ankles.\"\n\nIan spluttered with laughter, rolling his head against hers, but his face turned serious almost immediately.\n\n\"You don't want a boyfriend who's an incredible waste.\"\n\nDiana could only stare at him. \"You care what my English teacher said?\" She couldn't believe they were discussing Ms. Wood in the middle of sex, Ian's fingers buried deep inside her, his cock twitching in her hand, but something told her this conversation had to happen right now. \"She's wrong. I know you. She doesn't. And you're amazing.\" Her cheeks were flushing again. Ian held himself a few inches away from her, his fingers gently flexing inside her cunt, his eyes locked on her. \"I want you,\" she whispered. There wasn't any room for being scared now. Ian's thumb pressed against her clit, and she shuddered. \"You, Ian.\" His fingers slid deeper into her soaked cunt and ass. His arm tightened around her. \"You.\"\n\nHe grunted softly as she squeezed his cock. She just wanted to stroke the silky skin, feel him pulse with need against her hand, but Ian's tongue was suddenly plunging into her mouth, sucking on her lips, as he caressed her needy pussy to a fever pitch. She couldn't hold back if she tried. As her mouth opened to him, her soft thighs clenched, closing on Ian's wrist. Her pussy rippled in pure release. Her ass fluttered as he stroked her tight warmth.\n\n\"That's it, Diana.\" Ian's voice was hoarse now. \"Just come on my fingers, sweetheart. Soak my hand.\"\n\n\"Oh God\u2014\" she buried her face in his neck, her pussy tingling. Wet warmth on her cheeks surprised her. \"I missed you so much, Ian,\" she whispered. His thumb found the exposed tip of her clit, and her slippery cunt clutched his fingers in another long spasm. \"This week\u2014 uh,\" she groaned, her pussy tensing through more spasms of pleasure, thrusting against Ian's busy hands. He was kissing her tear-stained cheeks. \"I couldn't stand it.\"\n\n\"I know, Diana,\" he murmured. She rested her cheek against his shoulder, still riding out her orgasm. \"Everything's okay now.\"\n\nAs her breath slowed, Ian withdrew his fingers from her juice-slicked crotch, his lips closing over hers again. Warm palms spread her creamy thighs wide.\n\n\"Ian\u2014\" she moaned, but she didn't need to ask. Firm roundness pressed against her soaked entrance. Ian grasped her ass cheeks in both hands. Diana gasped as he sank into her cunt in one long stroke.\n\n\"You're so open,\" Ian breathed. \"I've never felt you like this before.\"\n\nOh God, he was just holding himself still inside her, filling her completely. \"Please,\" Diana begged, her hands flat on his back, clutching the broad planes. Her pussy spasmed around his thickness, hugging his cock. She bucked her hips against him in tiny motions, squirming against his firm weight.\n\n\"I want to take all of you,\" she whispered.\n\n\"You will.\" Hazel eyes, focused on hers, were glazing over with animal lust. \"I'm going to fuck you so hard, Diana.\"\n\nA cry left her mouth as he pulled back, then drove his cock into her wet warmth. Each juicy plunge was opening her more and more. She squeezed his hard waist with her thighs, bucked her hips to meet him as much as she could, gasping when Ian hit a tender spot inside her and hit it again. Oh God, he was. He was fucking her so hard. He was pounding her into a froth of need while her cunt clung to his cock and her arms and legs wrapped tight around him, and she loved it, her eager opening quivering around his thick shaft. It was so good, it was so right, oh God, the bed was banging the wall and she wanted Ian to go on forever, but--\n\n\"Don't come,\" she gasped. \"Turn me over.\"\n\nIan's breath was ragged. His hands fisted in the sheets. With an effort, he slowed his thrusts and eased his cock from her dripping pussy. She shuddered at his lips on her neck, his hands rolling her over. A pillow brushed her stomach, tucked underneath her tingling body. A rattle announced a drawer sliding open. She moaned softly when Ian pulled her rounded cheeks apart, and shivered at the still-new feeling of cool lube drizzling over her exposed rosebud.\n\n\"You've done this a lot,\" she whispered.\n\n\"This is about you, Diana.\" Ian was massaging her cheeks, pinching them, lightly slapping them, making her jump. God, she was so wet, her pussy oozing cream onto Ian's pillow. \"You.\"\n\nSilky flesh pressed against her sensitive ass. One warm hand worked its way between her belly and the pillow to cup her soaked mound. The other was buried in her damp hair, sliding down to rub her neck. Ian's leg pressed between hers, his other leg firm against her hip. She shuddered with pleasure and nerves, then relaxed against Ian's touch, lifting her ass to take him.\n\nGod, she was completely open to him and completely at his mercy. Ian's cock, slowly penetrating her tight opening, felt just as big as it had on graduation night. Then, she'd been afraid it would hurt, afraid she couldn't take him all. She'd clung to Brendan because it had been so overwhelming. Now, a different kind of nervousness rippled over her skin. She felt so vulnerable with Ian, and she wanted to be.\n\n\"I'm yours,\" she whispered.\n\nIan grunted, abruptly holding himself still. His hand squeezed the back of her neck. He clenched his eyes shut for a second, his whole body tightening behind her. Oh God, he was trying not to come.\n\n\"Yeah,\" he breathed. \"You are.\"\n\n\"Ian,\" she panted, as he slipped deeper into her narrow channel. The first time had been overpowering, all excitement and overload and the twins closing her in as she gave herself up to their bodies. But alone with Ian, she could push back, just a little. Move with him and against him as his thick cock firmly opened her ass. Moan with need, louder and louder, as her snug channel fluttered around his hard rod, his fingers played in her juicy folds, and his free hand rubbed its way down her back to hold her soft ass open to him.\n\nShe felt Ian's hips flex behind her as he took a deep breath.\n\n\"Diana, baby.\" His voice was low. \"I love you.\"\n\nNow she froze. It was her turn to clench up. She twisted to look over her shoulder. Ian watched her, not moving. The room was silent.\n\nLove. Love was for way in the future. For six months from now, a year. When you'd known someone forever, and it was safe to say it.\n\nBut Brendan's voice suddenly brushed her ear, his coaxing whispers making her shiver: You're so ready for this, Di. You've come such a long way already. Say what we both know. Say what you need.\n\nShe'd already known Ian forever, and she was just starting to know him, and she wasn't interested in playing safe anymore.\n\n\"I love you too, Ian,\" she whispered. \"So much.\"\n\nThen the breath hissed out of her when fingers surrounded her clit. Ian stroked her aching nub, sending sparks of sharp pleasure through her soaked cunt and full ass. It didn't take much. A few slides of his fingers through her slick folds, a few gentle pinches, and she began to shudder in a long spasm that found release in quivering around Ian's cock.\n\n\"Oh God,\" she gasped. \"Oh God, Oh God...\"\n\n\"Fall apart, baby,\" Ian whispered. He hadn't stopped caressing her hard pearl, his breath getting faster as her tight warmth clutched his cock. \"Don't hold it in. I got you.\"\n\nShe just kept coming, her ass clenching on Ian's cock, hot juices flowing over his fingers as he massaged her swollen pussy. With every wave of pleasure, she felt Ian sink deeper. Oh God, she was opening to him completely, taking his thick rod all the way inside her. She came again, harder, deeper.\n\n\"I can't stop,\" she moaned.\n\n\"Don't. Don't even try.\"\n\nIan really was fucking her ass now, rolling his hips to bury his cock inside her again and again. And she was taking him. Thrusting back, moving her own hips, looking over her shoulder to lock eyes with him as she clutched his sheets.\n\nJets of warmth filled her ass. Ian groaned, holding her firmly as he came. Each thrust sent a moan from her mouth. When he finally eased his cock from her clinging tightness, she melted onto his chest, listening to his slowing heartbeat as arms wrapped around her.\n\n*******\n\nAfterward, Diana leaned against Ian in the shower. Water steamed over both of them, and heat fogged the master bathroom. She couldn't believe she was rinsing off in Mr. and Mrs. O'Brian's bathroom \u2014 again \u2014 but Ian was completely at home. He lazily soaped her generous breasts, his body relaxed against Diana's as she lathered up his muscled chest and tugged at the hair under his arms.\n\n\"Tickles.\" Ian twitched and grinned.\n\n\"Right. You're ticklish.\" Memories of tickle fights with the twins were drifting back. Ian had been way more ticklish than Brendan \u2014 when Diana could get at him. She let her hands skate over his ribs, teasing him with soapy fingers.\n\n\"Don't even try.\" His hand closed around her wrist. Before she could really dig in, Ian swiftly captured her nipples, rubbing them to hardness under the cascade of hot water.\n\n\"Ian...\" she pressed her forehead into his shoulder, all tickling forgotten. She'd thought she was beyond worn out from the past \u2014 hour? Two hours? How long had it been? \u2014 but a twinge of pleasure shot through her moist pussy.\n\n\"You always want it, don't you?\"\n\n\"With you,\" she whispered. She cupped his balls, stroking her thumb gently over the soft wrinkled skin, and his eyes closed for a second. \"There's so much I want to do with you, Ian.\"\n\nShe expected a crack about how many ways they could fuck, but Ian just looked at her, leaning his wet head against the shower wall.\n\n\"Like what?\"\n\n\"Show you all the places I like,\" she murmured. \"The things I like to do. The things I never show anyone else. Um, the poetry I hide from everybody.\"\n\nIan's grin widened. \"Hell yes, you're showing me that.\"\n\nHe was kissing her neck now, and she leaned against his shoulder again. \"And have you show me what matters to you.\"\n\n*******\n\nThe kitchen was overflowing with empty chips bag, stacks of watermelon rinds, and piles of cans. A familiar voice carried in from outside \u2014 Brendan, in his swimsuit, on the patio laughing with the few guests still there, a beer bottle in his hand. Diana could only admire the way he effortlessly wrapped up the conversation, said goodbye to the stragglers like it had been their idea to leave, and made a big show of ushering them around the side of the house.\n\nA cold glass pressed against her hand. Ian must have put it there. Diana gulped water as she leaned over the sink, wearing one of Ian's t-shirts worn to soft thinness and smelling like him, and a pair of his plaid boxers that hung off her hips.\n\nIan, in another pair of boxers and nothing else, shook his head over the kitchen, whistling. \"I don't know who makes this kind of mess.\" He took a long swig of water, turned to Diana, and blew a whale spout straight at her.\n\n\"You're disgusting,\" she spluttered, wiping water off her face.\n\n\"And you've got a wet t-shirt,\" he drawled. Diana glared at Ian's shit-eating smile, his eyes on her full breasts through the soaked cotton. \"What?\" He gave her an injured look. \"You looked hot. Oops, you're still hot.\" He reached for his water glass again. Diana dove for it, too. Right as their hands connected and knocked it over with a splash, Brendan walked in, alone.\n\nThe charm was back in full force. A mischievous grin lit his face, dimples on display. \"I'm leaving this for you guys to clean up.\" He waved his hand at the mess in the kitchen. \"All of it. And Di, your mom called to find out what was taking so long, and I told her you couldn't come to the phone because Ian was fucking you into the mattress.\"\n\n\"You didn't.\"\n\nBrendan nodded innocently. \"I held the phone up so she could hear the bed banging the wall.\"\n\n\"Brendan...\"\n\n\"We have some paint left over from when Mom and Dad redid the house. I bet if you take care of the marks now, they'll be dry by tomorrow.\"\n\nWhen Diana glanced at Ian, he was rolling his eyes, but there was an actual blush on his neck.\n\n\"Nah. I covered for you. Told her you're staying for dinner.\"\n\nDiana sighed with relief. A tiny part of her had been afraid Brendan was telling the truth. \"You can stop looking so pleased with yourself.\"\n\nBrendan just grinned wider. \"I am pleased with myself. I'm that good. You guys wouldn't be here, looking all lovesick, if it wasn't for me. Here.\" He wrapped Diana's hand around her glasses and cocked his head toward the sundress she'd left outside, now folded and sitting on a kitchen chair. Then he tossed her a dish towel \u2014 more gently than she'd hurled her pillow at him last Sunday, with a subtle nod at the wet t-shirt clinging to her rosy nipples \u2014 and draped an arm around his brother. \"But don't try to sneak around forever. Next time Diana's mom finds you in her bed, bro, you're not allowed to say you're me.\"\n\nIan just had a stupid grin on his face. Diana knew how he felt, because she was so happy she thought she might never stop smiling. She could deal with her parents later. One thing at a time.\n\nThe three of them cleaned up the kitchen together. Laughing and jostling, arguing over the best way to get rid of all the beer bottles and snapping towels at each others' asses. Joking with both twins, Diana felt...comfortable. At home. At ease. She wasn't trying to keep it together while she bobbed on a tide of lust and awkwardness. Everything fit.\n\nBrendan looked like himself again, smiling, all easy charm, but different than she'd known him, even when they'd hung out as kids. This was the side of Brendan that just showed up when he was alone with Ian, she realized. Raunchier. Blunter. More opinionated. Not trying to make everything pretty or everyone happy. Now she was seeing it too. And Ian was more relaxed, his face open in a broad grin that just made her want to eat it up every time she looked at him.\n\n\"Really happy for you both, Di,\" Brendan said in a low voice, putting a warm hand on her shoulder, when she passed him on her way to the backyard to pick up a round of plates. \"Ian knows that.\"\n\n\"Thanks,\" she murmured. The smile on her face was definitely permanent. Not going away. \"Really, thank you. I know it too.\"\n\nAnd if she was aware that her nipples still showed through the thin cotton of Ian's t-shirt, getting harder from horseplay with both twins as they scrubbed dishes and took out the trash and wiped down the counters, or when Brendan tousled her hair or Ian pulled her close for a quick kiss, well, she could deal with it.\n\nSitting out on the patio once the kitchen was clean, eating the party leftovers for dinner, Diana eyed the two muscled bodies relaxed in their chairs. Ian's fingers twined in hers, his hand resting on her thigh. She'd sat down gingerly, her ass still throbbing from his slow thrusts. Brendan had noticed and raised a knowing eyebrow, and she'd blushed, then laughed.\n\nWhen Brendan met her eyes, he leaned back and gave her an easy smile. And Ian...she didn't know what to do when she caught the adoring look on his face, until she realized she was probably wearing the same goofy grin.\n\n\"You guys really don't think this is weird,\" she burst out.\n\nA pause. Both twins shook their heads.\n\nBrendan flashed his dimples. \"I was just happy to help.\"\n\nDiana flicked a tater tot at his chest. \"You don't have to act like you're some kind of saint. I know you're not.\"\n\nBoth twins burst out laughing. More and more, the twins were so distinct to her that Diana forgot they looked alike \u2014 and then there were the times she still could barely tell them apart. This was one of those times.\n\n\"This is right, Di.\" Brendan stretched out his legs. \"We had fun. And when you come visit this fall \u2014 you should come visit us, because we'll have an apartment and you and Ian aren't gonna have any privacy in your dorm room, and UConn has better parties than Yale, I'll show you which bus\u2014\"\n\nBrendan broke off. Diana and Ian were both eyeing him. Brendan held up his hands, grinning almost sheepishly. \"You'll figure it out.\"\n\nLater, after Brendan had gone out for the night, after he'd hugged his brother and ruffled Diana's damp hair while Ian's arm tightened possessively around her, just a little, Diana led Ian to the huge tree outside her house. When they reached her window, they kept going. Diana climbed gingerly onto the roof, Ian following easily.\n\nThe slate tiles were warm and rough against her back, baked in the heat of the day. The sky was darkening to velvet blue. She reached for Ian and his fingers laced through hers, relaxing into the soft sounds of crickets chirping, cars rolling down the street, barbecue smells. The ease of not needing to talk right now, her head against his cheek. Evening air was all around them, and the world was wide open.",
        "Anything could happen.\n\n*******\n\nThanks for taking this journey with Diana, Ian, and Brendan! \"The Boys Next Door\" would not have become what it is without the reader interaction. Along the way, you've inspired me, as Brendan puts it, to aim better, harder, deeper. To everyone who's commented, emailed, or just enjoyed, thank you.\n\nAs fun as it is to imagine Diana and Ian's relationship taking shape over the summer...or to predict what happens when Diana and the twins head off to college...or to fast-forward 15 years to when Brendan takes over the White House, as one reader mentioned...I'm going to give Diana and Ian some much-needed privacy now. I'm excited to share other projects with you in the coming months."
    ],
    "authorname": "SilverMuse",
    "tags": [
        "mfm",
        "twins",
        "dirty talk",
        "two men one woman",
        "anal",
        "female masturbation",
        "coming of age",
        "drama",
        "romance",
        "love"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-boys-next-door-ch-07"
}