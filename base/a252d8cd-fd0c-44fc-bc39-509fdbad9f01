{
    "title": "Chinese Girl Adrift in Bangkok Ch. 07",
    "pages": [
        "Chapter 7\n\nIt was hot and humid outside and I felt perspiration, OK sweat, gathering on my shoulders and chest. I was quite glad of my skimpy outfit. As always the night was illuminated by raucous neon.\n\nThere were a lot of people milling around, both locals and expats. Some were carrying purchases from local night markets. I could see many girls in short dresses like mine. I certainly didn't stand out I was pleased to note. It was then that I realized, in my haste to meet James, I had got here much too early. I was feeling really frustrated. I wanted James. I didn't want to wait. What is wrong with you girl?\n\nI was feeling hot. I could feel my pussy moistening. Fuck, I really was like a bitch on heat. I so wanted James. A little whimper escaped my lips. I wanted him to touch me. I wanted his hands on me. I wanted a man's hands on me. I wanted to be fucked. There was the jewellery shop. No James there.\n\nI noticed a policeman nearby stopping a girl and checking her ID. I didn't hang about and walked into Nana Plaza mingling with the crowd. I wandered past several clubs. They looked much glitzier than mine. I could see the clubs were on several levels around the plaza. They were less obviously brothels than my downmarket place.\n\nI caught reflections of myself in mirrored windows. It was obvious I wasn't a tourist. I looked just like the other girls freelancing in the Plaza. I guessed it was a bit of a lottery whether or not the police stopped a girl, but I thought it best to avoid them as much as I could. I had to be a bit careful, try and make myself scarce as James wouldn't be here for at least 45 mins to an hour.\n\nI wandered into a side alley, not quite as well lit, noticing several other girls hanging around. Some of them were leaning against the wall, looking like total sluts, with one leg bent up at the knee, propped back against the wall. OMG, I realized, real street hookers. To be sure, I had become a brothel whore, I couldn't deny it, but I certainly wasn't ready for their kind of activities. But from the wary glances they gave me, I could tell they couldn't see a difference. They knew I was a sister whore. Still, I had a modicum of residual self-respect. I had come here to meet my young lover, nothing more I told myself. I was impatient to give myself to him.\n\nI noticed a couple of girls being approached by guys and accompanying them further down the alley. No way! I wished the Police would move on so that I could more safely wait by the jewellery shop. I began to think I had made a mistake, stepping back into this crazy sordid world. Perhaps it would be better to get a taxi back to the Marriott, but I knew I was deluding myself. I couldn't avoid the rising feeling of excitement. I noticed two policemen not far away in the plaza. I shrank back leaning against the wall behind me a few metres from where the other girls were leaning.\n\nA middle-aged Asian guy came up to me, saying something in Thai and standing right in front of me. I smiled but shook my head. He was balding, quite tall, thickset with a guttural voice. He was quite persistent and sounded excited raising his voice. Out of the corner of my eye I was aware of the two policemen back in the plaza, looking in our direction. Oh hell, I didn't want to make a scene even though I wanted to tell him to fuck off.\n\nHe touched my shoulder as he spoke. I didn't understand a word. I looked back at the guy, he had pulled a few banknotes from his pocket. I half smiled at him distractedly before glancing back in the direction of the police. Oh shit, I thought seeing they were still looking our way. He took the opportunity, rolling up the bank notes, not much I guessed, and pushing them down the wide neck of my dress into my cleavage. Oh God, I wanted to be fucked, but I really didn't fancy this jerk. God I really am a total slut I thought, no different from these street whores, but surely there is a line.\n\nHe clearly didn't think so. Not giving me a chance to argue, and assuming my assent, he took my arm and led me past the other girls further down the alley. Resigned, I assumed he was taking me back to his hotel. My alarm bells began sounding as I was virtually frog-marched round the corner into a dark deserted back alley.\n\nFeeling a rising sense of panic, I looked wildly around me. I was just a small slim girl being manhandled by this large guy. OMG, back home in London, I would never get into a situation like this in a dark street with a complete stranger. I also realised that back in the brothel, I hadn't exactly consented to become a whore. I had in some way been ensnared, lured into that life. I had left the brothel without any money. My pimps had kept all my earnings... I supposed I could go back and demand my share, but would that be safe?\n\nThis is different I thought to myself. I didn't have to be here. I am now with a customer. I am a freelance street hooker. There is no other way to put it. I have become a prostitute.\n\nWith some anxiety I looked more closely at my surroundings. There were some large, wheeled skip-like rubbish bins in a row in the alley, I guessed placed near the back entrances of clubs or cafes. There was a lot of trash lying around in this deserted street. It was very poorly lit, dark, everything in shadows, sounds of music drifted in, a hum distant traffic... a police siren. It was the din of a big city, and here was I, intelligent, elegant, small, slender, beautiful, alone and without any protection: an upper class British Chinese girl, in its dark underbelly. Oh, but I wasn't alone; I was with an unknown stranger. He drew me between two of the large bins and I noticed a wide blind-ending alcove perhaps two metres deep, in the wall of the building behind. Some low bins no more than waist height were in the alcove. We were completely hidden from view in the shadows. A cat darted out of the recess. I felt afraid and extremely vulnerable, thoughts of Jack-the-Ripper going through my mind. I had read about him and his murders of London prostitutes, but never dreamt I would be a girl like them.\n\nHe pushed me up against the wall causing my bag to slip from my shoulder into the crook of my elbow. I put it on the bin beside me. I didn't try to resist much, he was much bigger than me and I didn't want to upset him. He was speaking fast in Thai and I couldn't catch anything. Oh God I hadn't said anything to him, we had had no communication whatever and he had me now in this place. He grabbed a breast squeezing me through the thin material, then tried to kiss me. I turned my head away.\n\nHe was running his hands over my body now and I made rather ineffectual attempts to restrain his hands. He turned me around pushing me back against the wall so the side of my head and cheek were against the concrete, while his hands roamed over my uncovered back. OMG, I felt something scurry past my foot in the blackness... a rat?\n\nHe slipped his hand down to my ass, between my legs, my dress was so short that his hands slipped below the hem onto my almost invisible T-back. He squeezed my ass cheeks. OMG no! I was dripping, my wetness was obvious. He turned me around again and pushed me down onto my knees.\n\nI shuffled my position trying to find a comfortable position kneeling on the hard gravelly concrete. He fumbled with his zipper and took out his cock. It was too dark to see if he was clean, not that I had any wipes. He didn't give me a choice anyway. Taking hold of my hair he pushed his cock into my face, rubbing it over my lips. He forced himself against my mouth, against my teeth. Giving way to the inevitable I opened my mouth and his cock pushed in on to my tongue. I took hold of his now turgid rod feeling its sweaty surface with my fingers. I tasted the sweat on his dick. I licked over his glans and started to wank the shaft.\n\nHe thrust his whole body at me, pushing my head back, and forcing his penis deep into my throat. He laughed at the incomprehensible sounds that escaped me as he jerked repeatedly at me. My lips slid up and down over along his length. I closed my fingers more tightly around the root just above his scrotum as I worked his cock faster and harder. I knew I looked exactly what I was, a cheap street hooker enthusiastically plying her sluttish trade.\n\nRunning my tongue over his tip I could taste his faintly acrid precum, it wouldn't be long. But he had other ideas saying something in Thai. Pushing his forefinger back and forwards between the vee-shape of the fingers of his other hand and nodding at me, he indicated that he wanted to fuck me. I nodded enthusiastically to show my understanding.\n\nQuickly, he bent down taking hold of me under my shoulders. He easily hoisted me up and sat me on the bins next to my bag, while I reached inside for a condom. I was practised at this by now and as he approached me again, I leaned forwards taking his dick and rolling on the sheath. He reached in his pocket and handed me some more money, I guessed another $5.\n\nHe said nothing but pushed me back so that I was resting on my elbows on the top of the bin. It didn't feel too stable. He took hold of my legs separating and moving between them. I was half-reclining, watching him, open, ready to be fucked. Was this what I really wanted? It made no difference, it was too late to avoid this anyway. As he leaned forwards with his cock. I drew my thong to one side exposing my pussy fully, splaying apart my pussy lips to show him my inviting pinkness, while clutching the money in my other hand.\n\nI watched him with my eyes wide, desperate, wanting him yet still fearful. I was whimpering now, little convulsions going through my body. He slid two fingers into my vagina causing me to cry out as my secretions ran over his hand. He bent down and licked the length of my dripping slit, before standing again between my spread legs. Oh my God, I didn't care who it was, and I reached forwards taking hold of his cock and guided it to my wet vulva, drawing it between my labia. I rubbed it against my clitoris and shuddered at the bolts of pleasure.\n\nI hooked my legs around his waist - oh God! I was such a slut -- and pushed myself onto his cockhead, my secret channel opening to welcome this stranger. I gasped as I impaled myself on his turgid dick. Now he leaned forwards and began pushing his penis deeper into me, forcing open my pussy muscles until he was buried in my body. He jerked forwards causing the bin on which I was reclining to rock precariously. I was resting back on my elbows again, looking into his face in the dim light, my legs parted, crossing them around him as he fucked me.\n\nThere was no delicacy in his movements, it was quite painful as he sought his own pleasure, caring nothing for the feelings of the little slut whose body he had bought. I was subjected to his raw animal lust, and I wanted this. I wanted to be fucked as the low street hooker I had willingly become, clutching his money in my hand, the price of my body. I wanted to orgasm skewered on his penis. Oh my God, this is so wrong a voice said in my head, and tears welled in my eyes as I winced at the pain, and yet I revelled in the debauched pleasure I was also feeling. He grunted as he pounded me in time with my whimpers. Oh God, please let me come, I'm close, I want it so much.\n\nSuddenly his groans reached a crescendo, I could feel him tensing, and then shoving his body forwards jerking me back on my precarious perch, his cock throbbing deep inside me. He uttered what I guessed were Thai expletives as he spurted out his lust while I clung desperately to him, with tears in my eyes. But it was over too soon and he pulled his penis from my vagina with an audible wet plop leaving me whimpering in unfulfilled desire, and the bin on which I was sitting rocking back. Realizing I was about to be pitched backwards, I shrieked, and was amazed as he lunged forwards to grab me. My unlikely saviour, he pulled me forwards off the bin and unsteadily to my feet. I leant against him regaining some composure if not dignity.\n\nHe said something in Thai to me which sounded like a compliment and then tossed a couple more bank notes at me which floated to my feet, and was gone without a word. I half sat against the bin, tears streaming down my cheeks, breathing heavily and sobbing quietly, while my whole body was humming... wanting... needing.\n\nI stood up, wiping my eyes and looking round the deserted alley. I didn't want to hang around here. My thong was soaked, but my dress wasn't in too bad a state. I rearranged it, and smoothed my hands through my hair.\n\nI bent down and picked up the bank notes. I looked at them; two twenties!.. 40 Baht. The money he had already given me... 250 Baht. My total pay? 290 Baht... That's about $9 or just over \u00a36.00. I wasn't even a ten-dollar whore, and suddenly I found this funny. I burst out laughing. I suppose it was the release of pent-up emotions, my body shaking with uncontrollable laughter and although still not satisfied, bizarrely, I was actually now feeling quite pleased with myself, having added cheap street hooker to my CV.\n\nI wandered back towards the side alley as another girl with a customer passed me heading into the alcove. Pausing, I looked back and was impressed to see her already on her knees. I turned and continued on my way. Once in the side alley, I joined two other girls. I had hardly a moment to gather my thoughts, when my arm was taken by another man. He said something I didn't understand, was it Japanese? Korean? He slipped his arm around my waste and took me back to where I had been moments before. The other girl was still sucking her customer, and I didn't have much choice but to take my place next to her.\n\nHe handed me some money and I knelt down quickly undoing his zipper taking out an already erect rod. I put my lips to his glans and sucked him into my mouth. My slurping sounds merged with the muffled wet noises from the other girl only a few feet away. We were two cheap street hookers, side-by-side servicing our johns. My guy had grasped my hair and was pushing me onto his cock. I heard the other guy cumming into my slutty sister's mouth, and was aware of her rising to her feet beside me. From the urgent way my customer was using my mouth it was evident he didn't want to hang around. I clearly wasn't going to get any satisfaction from this guy. Oh well, better get this done!\n\nI worked his shaft with my hand while I sucked. He came suddenly, jetting his cum to the back of my throat groaning noisily. Here it was: the now familiar sensation, part of a sluttish whores daily life, of gooey sperm welling up and bathing my tongue, my teeth. More jets spurted into my throat filling my mouth with his taste. I continued to wank him as he came. I sucked on his glans, and slowly, firmly moved my hand progressively up the shaft feeling more cum squeezing out of the tip onto my tongue. Oh God, I was still frustrated with no sign of getting my longed for orgasm.\n\nI moved back on my heels holding his cock in front of my face. We were both breathing heavily. Looking up at him I swallowed hard, gulping several times. The globs of his ejaculate slid down my oesophagus to my stomach. I moved my tongue around my mouth, between my teeth and lips, swallowing again to clear the last of his slimy cum. Drips of sperm emerged at his tip, and I took him back into my mouth, using my tongue to clean his dick.\n\nHe tidied himself and walked away quickly. I realised then that the other girl had waited for me and we walked back together giggling and chatting.\n\nLeaving her with a smile, I made my way past the other whores, but as I approached the plaza, I noticed the police were still standing nearby. I leaned back against the wall out of their sight next to another girl who nodded at me. Kindly she offered me her lipstick. Holding her pocket mirror, I applied it carefully; cheap and gaudy, my lips shone with a wet and succulent scarlet gloss. She passed me some chewing gum, which I took gratefully wanting to take away the strong taste of cum. As I chewed the residual sperm in my mouth mixed with the gum. I couldn't help smiling as I wondered if it might catch on... sperm-flavoured chewing gum?\n\nI raised my knee up, to rest one heel against the wall just like the other girls, in what I knew was an utterly sluttish pose. I tossed my hair, then gathered it again over one shoulder. I guessed that chewing my gum, in my sluttish dress, with leg perched up, probably revealing my thong, among the small cluster of other whores, I was very obviously a depraved, shameless street hooker. I admit it, I enjoyed the feeling leaning against the wall with my slutty sisters in the heat of a Bangkok night. I was feeling hot all over. Fucking and sucking my customers had only increased my overwhelming need for a cock. I hoped the wetness trickling down my thigh wasn't too obvious to passers-by. James would be at least another 20 minutes I guessed. I wanted more. Several men walked into the alley looking us over. Just like the other girls, I tried to catch their eyes, smiling encouragingly, and leaning forwards to show my boobs under my neckline. It was so humiliating, but I was desperate to be chosen.\n\n'Sawatdee Kaaaa.' I chorused with the other girls, with a lingering, whining final syllable.\n\n'Hello, big boy.'\n\n'You like boom boom?'\n\nApproaching one guy, I draped myself on his arm,\n\n'You like Kitty? Have good time?' He reached down and squeezed my ass, but chose my neighbour. I did my best to attract others but after scrutinizing my sluttish wares, they all walked on to other girls, usually with bigger boobs than mine. I was so disappointed.\n\nI resumed my pose leaning against the wall with bent knee, and caught the eye of a pair of Western female tourists as they watched me trying and failing to get a customer. They looked at me in pity, while I flashed a smile at them. They paused momentarily to take a pic of us. I noticed other people taking pics as I looked around, and then saw another guy approaching with phone held up in front of his face capturing a video, I was determined to hook this guy.\n\n'You got time? Love long time? Please?' I purred, smiling seductively at him.\n\nHe lowered the phone from a final pic, and the smile froze on my face. It was Clive! Oh, no! Not again!\n\n'Well, well! If it isn't my pretty little hooker... so you turn tricks here too?' He said with a slight sneer, looking at me and my companions.\n\n'Yes sometime.' It was a bit late to deny it.\n\n'So, working as a bar hooker is actually a step up for you! I guess the clubs here are a bit upmarket for a girl like you?' He indicated the plaza behind him. 'I doubt those girls would work the streets, although you're better than some of the skank there.'\n\nWas that a compliment? I half-smiled back at him. As he spoke, we both noticed another guy coming back up the alley with another girl, both adjusting their clothes.\n\n'Hahaha, so it's the back alley for you girls, is it?' He raised his phone taking more pics of me and my sisters and from the way he panned, another video too. One of the girls shouted at him when she saw this.\n\nI looked away, aware of his intent stare. I knew I looked hot, rather regretting it now. I had been surprised the last few guys had chosen other girls as I felt I was much better looking than them. As I looked back I noticed the police were walking back our way. I really didn't want to risk their attention. Hardly thinking, I reached out and rested my hand on his chest.\n\n'It so nice to see you again, Sir.' I simpered at him, pouting my shiny scarlet lips to blow him a kiss. He couldn't resist, and took my arm.\n\n'Lead on fair lady.' He said with an ironic tone. My mind was whirling. I so wanted to be fucked, but Clive, again? Was he going to take my pussy again? Was I really going to let my husbands boss fuck me again? I knew I was likely to meet him, with my husband in the future, how could I ever face him? But I was getting wet again at the thought. I hadn't felt satisfied by my last customer, and I wanted a man. Oh God I thought, I'm just a whore, just get to work.",
        "'This way Sir.' Taking his arm, I led him back down the narrow lane, turning into the dark back alley, just as another whore, adjusting her clothes, emerged from the alcove with her John. Now it was his turn to look doubtful. But the lure of using my pussy again clearly was enough to overcome his inhibitions. I smiled into his eyes, putting my arms around his neck and drew him backwards, seductively between the bins, into the recess behind. Unfortunately, I stumbled over some rubbish, destroying my attempt at being an elegant femme fatale.\n\nHe laughed at the humiliating end of this ridiculous pretension... and I saw the funny side too. Elegant femme fatal!... I was a fucking street hooker! In a moment I was pressed up against the wall again, beside the same low bin of my previous shame. I put my bag on the bin while he put his hands on me, running them over my curves. I shivered with guilty desire at his touch, my body coming alive, tingling all over. I raised my mouth to kiss him, while he brought his mouth close to mine and then turned away. I wasn't sure if he smelt cum on my breath! He kissed my neck, my throat, my chest. I felt so turned on by his attentions and was already moaning with undisguised desire.\n\n'Such a slut.' Was all he said. God it was so true. I couldn't control my slatternly behaviour.\n\nI knew my place by now and sank to my knees in front of him, fumbling with his zipper. It was fairly dark and difficult to see in the shadows. I couldn't get it open.\n\n'Oh for fucks sake, girl. Let me.' Clive said impatiently, pushing me away. He unbuttoned his trousers and drew down the zip. 'Well don't just sit there, get on with it.'\n\nHe hadn't got any nicer I thought, but it was too late to back out now. I could see a large bulge in front of my face. I took hold of the waist band of his boxers and drew them down a bit at the front. His cock immediately flipped up, turgid, bulging. I reached up and enclosed it with my fingers, my finger tips not quite meeting. I tossed back my hair and drew his cock into my mouth. I salivated over his glans, matching the dripping from my pussy. I licked and sucked him, taking him all the way to the back of my throat, before pulling back gasping for breath. Craning my neck to one side, I licked his balls and then all the way up his shaft to the tip, before swallowing his cock again. I bobbed my head back and forwards wanking him as I did so.\n\n'Oh yeah, fucking whore! That's a good girl.'\n\nI worked his cock from top to bottom enthusiastically. Before he took hold of my head.\n\n'That's enough. Stand up now. Condom? I'm certainly not going to bareback your whore pussy again.' I reached for my bag, holding it between us. I found a condom packet as he looked into my bag.\n\n'Oh! Business card? I'll have one in case I want you again.' And he reached into my bag taking several of my cards.\n\nOh hell I thought, but I suppose he's already got my pics. He held up the card, straining to read it aloud in the dim light.\n\n'Girl number 43, Kitty...' he read from the card, 'oriental supergorgeous Kitty... is available for full service. She very gentle and submissive... all her holes welcome for your pleasurable experience.' He opened the packet and put on the condom. While I stood watching, then looked up questioningly at his face. He handed me $10 which I accepted with a weak smile.\n\nNot wanting to delay any longer, Clive grabbed my shoulders then spun me around pushing me so that I was leaning with my hands, against the wall, my ass sticking out towards him. Completely shameless, I pushed my ass out towards him moving it seductively, offering myself to him. My short dress had ridden up to my waist. I was only protected by my thong. I hated the fact that he was my husband's boss, that he had treated me badly before in the brothel, but I was desperate to feel a man inside me, any man, even him. He delivered a sharp slap to my bare ass cheeks making me squeal. I didn't care, I had no pride...\n\n'Fuck me... please... fuck me... fuck me!' I whined at him.\n\nTaking hold of my hips he pulled me back towards him so that I was now leaning even further forwards outstretched hands against the wall. He forced my legs further apart with his knees. I reached behind me, finding the thin string of my T-back and drew it to one side offering myself to him. His fingers ran over my ass, finding my pussy lips. My panties were sodden, my pussy sopping. I could hear the liquid sound as his fingers slipped into my vagina, slopping in and out.\n\nHe laughed at my shame. I just shivered in sluttish anticipation. I was going to be fucked again in this dirty back alley, I was a debased street hooker ripe and juicy for this humiliation, but I didn't care, I wanted his cock. I wanted Clive inside me now, this guy who had paid a few dollars to fuck me against the wall in this deserted alley.\n\nNow I could feel his hard tumescent cock slick with my saliva pushing between my legs. Pushing into my thigh-gap. It slid over my ass hole before finding my labia gliding back and forth over my liquid opening, rubbing against my clit. I felt weak at the knees, and impatient to be penetrated his rock hard penis.\n\n'Pleeease, come inside... I want...' I whined desperately wriggling my ass against him pressing my lubricated clitoris down harder onto his sliding shaft. It was so pathetic. I was squealing with sluttish desire at the exquisite sensations as his cock rubbed against my clit.\n\n'Fuck! You gorgeous little slut.' He said hoarsely.\n\nHe pushed at my entrance. The muscles of my introitus offered brief painful resistance causing me to gasp. He pushed hard and his glans forced entry into my vagina as I moaned loudly, the friction of my narrow channel eased by my slimy wetness. My vaginal muscles gipped on his penis, clasping him tightly as he progressively forced them apart, sliding firmly, progressively up inside my small, yielding, liquid body. I whimpered as he pushed up into me deeper, each thrust jerking me against the wall.\n\nAt last I had taken the full length of his fat penis and I could feel his tip pressing against my cervix making me cry out. He pulled back then thrust forwards again and again, my whole body jolting at each impact. He took hold of my hips and manoeuvred me sideways, then pushed me forwards, bending my small, slender form over the bin. My fingers sought the metal rim and I held on. Hard, hard, his body pounded into me, into my sucking hole, the squelching wet sounds from my pussy accompanying the moaning and squealing escaping my lips.\n\n'Oh fuck! Ohhhh...Ohhhh! Oh! Fuck!' I felt disoriented, in a state of shameful bliss. I was enraptured as my body, surely meant only for my husband, was ravished, violated, impaled by his boss.\n\nOh my God, it was so shocking, I really was a whore, I felt exultant, I was a dirty street hooker being fucked, bent over a bin in a dark back alley... I was possessed by feelings of sheer lust. I felt like a pint-sized sex-doll, skewered by the tumescent dick of this great white towering body that loomed over me. His big hands were inside my dress massaging my small boobs, squeezing and pinching my nipples sending new bolts of electricity through me, adding to the squalid, rapturous, sensations that were driving me out of my mind.\n\nI pushed back now as he paused, standing still. I squirmed against his cock, a complete wanton tart, thrusting backwards, driving his cock in and out of me, whimpering at the piercing, terrible feelings of pleasure that were suffusing my body. It was shocking, unbelievable, delirious. I was writhing in his grasp bucking back against him. My body seemed possessed, I was a succubus, desperate to orgasm, jolting again and again against him, my ass slapping against his thighs.\n\nHe delivered a sharp stinging smack on my ass. I cried out again, my head jerking up and I gripped onto the edge of the bin in front me as his heavy frame once again began jack-hammering my slender body. Like the sluttish whore I was, I could feel the pressure growing, rising, starting to overflow... I couldn't contain myself much longer, I was desperate. I could feel a scream rising deep inside. The feeling was rising, growing, I couldn't hold it.\n\nHe was fucking me for all he was worth. It was painful, but I wanted it... him, I wanted everything. My eyes were watering, my pussy was sloshing, the metal bin was rocking now, banging against the concrete repeatedly as I was bumped against it, impaled by his cock ramming up into my cunt. He was grunting loudly now, and I was beyond caring what I was saying. We were both wet with sweat. I was brazen, I was crazy, I was almost incoherent as he fucked me. The piercing joy couldn't be contained any more.\n\n'Oh God, Unngh!...Yes, yes, yes!... Unnh... fuck me... unnnh... nnngh!... Oh God...' I was so close, 'Oh my fucking God!... Unnnh! Yes! Oh God... Oh!...Oh God I'm coming! Ahhhhh!'\n\nAnd I screamed out in ecstatic abandon. In the dark alley, a blinding orgasmic light hit me. I spasmed against him in sheer joy, squeezing on his penis, squeezing him as he continued thrusting in and out of my body with cresting urgency, until he too groaned loudly.\n\n'Oh fuck! Fuck! Yesss! Oh my God.'\n\nHis throbbing cock, gripped deep inside me spurting out his seed. I could feel the jets against my cervix through the condom's latex. He jerked several more times against my body, as I clamped down on him, trying to hold him tightly inside, waves of blissful, golden warmth still reverberated through me. I shuddered again, my spasms gradually lessening. He let go of me and pulled back, his cock plopping out of my pussy.\n\nHe pulled off the soggy condom tossing it aside. I slumped against the bin, my ass still exposed, breathing heavily and feeling my heart still pounding. Clive stepped back and pulled up his trousers, as I pushed myself up and turned leaning for support against the bin. He was still a jerk, but I was delighted by the way he had fucked me. I smiled at him.\n\n'I have to say that was just amazing. God! You are a total slut, but you have one sweet pussy.' He conceded. 'Pity I'm leaving tomorrow. No chance for you to love me long time! You know, you could make a lot more money if you came over to the UK... girl like you could do really well over there.'\n\n'Thank you, Sir.' I was surprised when he handed me $20. He must really have liked me!\n\n'Well, look forward to seeing you again sometime. Bye now.' He turned and walked back towards the plaza.\n\nI rearranged my thong and dress and tidied my hair as well as I could. Back in the alley, one of the other whores let me use her brush. I realized James would be there soon. Thankfully the police had moved on so I made my way over towards the jewellery shop. I stopped at a stall to buy a can of Pepsi. I swirled it around my mouth, tasting a pepsi and sperm cocktail, and swallowed it washing down all traces of cum. I really didn't want James to smell sperm on my breath. Along the road I noticed another stall selling jewellery I walked over and looked at the actually rather attractive pieces. I picked up a thin chain with a small jade-like pendant. Haggling briefly I bought it with my earnings, putting it round my neck. I My body was still humming but I was calmer now. I couldn't wait to see James."
    ],
    "authorname": "zoeleong",
    "tags": [
        "asian",
        "chinese",
        "asian whore",
        "chinese whore",
        "whore",
        "prostitute",
        "brothel",
        "pregnancy risk"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/chinese-girl-adrift-in-bangkok-ch-07"
}