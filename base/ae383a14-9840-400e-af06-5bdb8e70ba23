{
    "title": "Louise Ch. 06",
    "pages": [
        "Nathan didn't move except for to envelope her hand in his. It hadn't occurred to him that the breakthrough would happen while Louise was asleep but it was still a breakthrough and he would take it no matter how it came. He wondered how she would react in the morning when she woke up and found him in bed with her even though he was fully dressed. For a brief second he though about slipping away before she woke up but decided to stay where he was. It was time to stop coddling her so much and to begin treating her for what she was, a beautiful woman that he intended to spend an eternity with.\n\nSlowly so he wouldn't wake her, Nathan moved closer to her on the bed stopping when she muttered something in her sleep, moving again when she quieted. Several minutes later, he was next to her, his leg touching hers, her hand still in his. As she slept, he began to plan how he was going to tell her about his family and then decided that he needed some guidance. Out of respect and love, he decided that he would talk to his father first and then Patrick. He knew that in the end it would be up to him to decide how he told her. First, the issue of that damned Barb had to be settled and then he would have her undivided attention.\n\nIt seemed as though he had just closed his eyes when he heard a startled gasp and then felt Louise fly off the bed.\n\n\"What are you doing here?\" she asked.\n\n\"Resting.\" Nathan replied not moving.\n\n\"How long have you been here?\"\n\n\"Since we got back, it's early yet, come back to bed.\" Nathan urged.\n\n\"Ummm no thanks and I think that you should leave.\" Louise replied,\n\nNathan started to push a little but thought better of it. He wanted to talk to his father and uncle first. He got out of the bed, walked over to Louise, bent down, kissed her lightly on the lips, and left the room before she could react.\n\nLouise stood speechless. Her heart pounded as she watched Nathan walk out of her room. Part of her had really wanted him to leave but part of her didn't. She thought about calling Kevyn, picked up the phone to do it but lay it back in its cradle. It was time for her to start accepting a few facts no matter how far fetched they seemed. The biggest fact was that Nathan Sinclaire cared about her. It didn't matter that she wasn't fashion model beautiful; he cared. The second fact was that she liked him too... actually, she more than liked him and that was why she had gotten so angry with Barb.\n\n\"So what now?\" she asked herself as she sat down on the bed.\n\n*******\n\nNathan went into the room that adjoined Louise's suite and lay on the bed. It would be another few hours before Patrick surfaced but he knew that his father was up. He took out his phone and hit speed dial.\n\n\"How's it going dad? Really? But mom is alright? Good...do you have a minute?\"\n\nBy time the conversation was over, Nathan's cell phone battery was nearly dead but he had a new appreciation about how difficult it had to have been for his parents. However, it was the end of the conversation that concerned him. His parents were concerned about his younger brother Joseph. While never a big talker, he had become even more withdrawn since Patrick found Kevyn and now Louise was in the picture. When asked what was bothering him, he gave the same one word answer, \"nothing.\" Nathan promised that he would talk with him to see if he could figure out what the problem was although he thought he already knew- the damned Sinclaire legacy. He would call him later but he had to deal with Louise first.\n\nHe found Patrick an hour later in the small movie theater in the basement. He was setting up the concession stand in anticipation of spending the evening watching the sports channel with Kevyn.\n\n\"You and Lou can join us if you like.\" Patrick said.\n\n\"I'll ask her... Uncle Patrick, can I ask you a question?\"\n\n\"Sure... shoot.\"\n\n\"How did Kevyn react when you told her about us?\" he asked.\n\nPatrick sat down and indicated that Nathan should as well.\n\n\"It's something that I never want to go through again although I know that I'll have to if and when we have children. She was angry, hurt and I think for just a little while scared of me even though she wouldn't admit it. Her going back to Pennsylvania was an attempt to distance herself from me although in the end it was a good thing that she went. It took a lot of talking and I won't lie to you, we're still working our way through it. You're going to tell Lou about us aren't you?\" Patrick asked.\n\n\"Yes but I wanted to talk to you and dad first.\" Nathan replied. \"No offense, but I'm glad that I can at least tell her that I've never raped anyone.\"\n\n\"None taken but you may want to wait for a few days. Kev is planning to meet with Barb and Louise at her old apartment. They need to hash out whatever the root of the problem is between them. I doubt that it will change Barb but it may change their relationship.\n\n\"I was thinking about that.\" Nathan said, \"Not about their meeting but about waiting until the issue with Barb being settled. Do you mind if I stay here? I want Louise to get used to having me around.\"\n\n\"I was wondering when you would think of it.\" Patrick replied, \"But the answer is of course you can stay as long as you need and want to, you didn't have to ask.\"\n\n\"Thanks... when is this meeting with Barb going to happen?\" Nathan asked anxious for it to be done and over with.\n\n\"Tomorrow I think but Kevyn hasn't talked to Lou about it yet.\" Patrick replied. \"Be prepared, they could be gone for a couple of days.\"\n\n\"Actually, that's good.\" Nathan said, \"It'll give me some time to think of how to tell Louise the ugly Sinclaire truth.\"\n\n\"I understand but Nathan, don't think about it too hard.\" Patrick advised. The important thing is that she knows that you love her and that you will do anything to ensure that she is happy and safe. And one more thing, don't try to justify what we are and what we've done. For one, there is no justification for it and two, it won't help.\"\n\n\"That's the same advice dad gave me.\" Nathan said. \"And her being away will give me a chance more work done on the house that I'm building for her.\"\n\n\"Sounds good... the games start in about an hour if you want to come down.\"\n\n\"Thanks.\" Nathan said realizing that there was so much he didn't know about his mate.\n\n*******\n\nBarb fumed for the rest of the night into the early morning hours not answering her phone when it rang. Every time she thought about what she considered an intervention, she got angry. \"Just who in the hell do they think they are?\" she asked the air \"Miss high and mighty and Miss mousy\" she grumbled. She had no intentions of meeting with the; she had nothing to say. As soon as she got the paper, she would start looking for a job and a place to live and that would be that.\n\nThe phone rang again and this time she snatched it out of the cradle.\n\n\"What?\" she snapped.\n\n\"I was calling to see if you needed assistance with anything.\" Hans replied ignoring the harsh tone,\n\n\"No.\" Barb said, hung up and remembered that she wanted the paper.\n\nSomeone else answered when she called back.\n\n\"Yes ma'am?\"\n\n\"I want a paper with my breakfast and this time don't overcook the eggs!\" Barb said and hung up not giving the person on the other end a chance to respond. Breakfast was delivered a short time later delivered by none other than the woman that she had yelled at the day before.\n\n\"Where would you like your break...\"\n\n\"How many days have I been here?\" Barb interrupted, \"and you ask the same question! Over there by the window!\" she said in a very impatient tone.\n\n\"Nadine, please excuse us.\" Hans said softly as he stepped into the room. When Nadine passed him, he touched her arm and murmured something to her. After she was gone, he turned his attention to Barb. For several minutes, they stared at each other neither one of them speaking.\n\nThe longer Hans looked at her, the less he liked her. He could feel her disdain for him and anyone else that she felt was beneath her. In her mind, he and others were meant to serve her. Barb's thinking reminded him of the vampires of old who felt that the only use for humans was for servitude and food. Barb, he thought, would have fit right in. He also decided that he wasn't going to claim her, at least not as she was now but that didn't mean that he couldn't and wouldn't hold her responsible for the way that she treated his staff.\n\n\"That didn't sound like an apology to me.\" he said quietly breaking the uncomfortable silence.\n\n\"Apologize? What for?\" Barb asked.\n\n\"Have you even been told how beautiful you are?\" Hans asked changing the subject.\n\n\"Yes, so?\"\n\n\"Have you also been told how incredibly ugly you are?\" he asked.\n\nBarb's mouth dropped open in shock.\n\n\"It's true,\" Hans said, \"You are a very beautiful woman on the outside but the inside is so ugly that it ruins what is on the outside. I don't know what happened or didn't happen to you to make you this way but I'm going to warn you once more. If you so much as raise your voice or mistreat another one of my staff, you will be escorted out of the hotel. And before you bring up Patrick Sinclaire, he is well aware of the situation and I have his support.\"\n\n\"You're lying.\" Barb said.\n\n\"Am I?\" Hans asked, \"Mistreat another one of my people and we'll find out. Enjoy your meal.\"\n\nHe walked out without saying another word leaving Barb speechless. When she recovered, she called Kevyn and made a few demands.\n\n\"I want him fired!\"\n\n\"Barb, calm down and tell me what happened.\" Kevyn said although she already had some idea. She listened as Barb ran down the list of offenses committed by the hotel staff against her and then began to address them.\n\n\"So let me get this straight,\" she said, \"You didn't call the woman who was nice enough to leave her home early to do you a favor a stupid, incompetent bitch?\"\n\n\"Yes but...\"\n\n\"And you didn't tell Ollie who's been nice enough to take you wherever you wanted to go that his car was a piece of shit?\" \n\n\"Yes but...\"\n\n\"And you didn't try to get an extra spa treatment and use Patrick's name to threaten the staff when they told you no? You know what this sounds like to me? It sounds like you owe a few apologies.\" Kevyn said.\n\n\"They are supposed to meet my needs!\" Barb snapped.\n\n\"Yes but within reason.\" Kevyn replied, \"and they aren't there to be your whipping staff which leads me to why I'm glad that you called. Ollie will be at your door at four, be ready and you might want to pack a bag.\"\n\n\"Why? Where are we going?\" Barb asked.\n\n\"He's bringing you to my apartment. You said that you wanted to spend time with your sisters so here's your opportunity and Barb? No isn't an option, I'll see you later.\"\n\nThe line was dead before Barb could reply. She had had enough of people getting in her face and it was time for it to end. She picked up the phone and dialed Hans' direct line.\n\n\"I don't know who in the hell you think you are talking to me like you just did! I am soon to be the sister in law to Patrick Sinclaire and it would do you well to remember that! I want an apology and I want it now!\"\n\n\"Have you apologized to any of the staff yet?\" Hans asked.\n\n\"No and I'm not going to!\" Barb replied.\n\n\"Then there will be no apology made to you. In fact, there wouldn't have been an apology anyway. I don't apologize for speaking the truth as I see and know it.\"\n\nThis time, Barb hung up on Hans. The more she thought about Kevyn's order, the angrier she got and decided that she wasn't going. She wracked her brain trying to remember the name of Jonesy's restaurant and finally got online searching until she found it. \n\nShe called the number and listened to it ring several times before it was answered.\n\n\"Jonesy here!\" a chipper voice said.\n\n\"Hello! This is Barb Simpson. I don't know if you remember me from the other night... I was with Patrick Sinclaire?\"\n\n\"Yes, I remember.\" Jonesy said his tone considerably cooler, \"what can I do for you?\" \n\nBarb ignored his cool tone and told him what she wanted.\n\n\"I thought that maybe we could go out for drinks tonight if you aren't busy.\" \n\n\"I'm not busy but here's the thing.\" Jonesy said, his voice even cooler, \"I don't like being the back up plan and you've made it very obvious that you had no interest in me when my card was found ripped up in the trash. I saw the way that you were snuggled up to Nathan Sinclaire even though it was obvious where his interest lies. It doesn't take a rocket scientist to see what your game is... have a nice rest of your vacation.\"\n\nBarb hung up hurt and angry at the way that she had been shut down. No man had ever been able to resist her even if they knew what her primary agenda was and hadn't cared and here was a rare animal that did. If she knew of another man to call or had a place to go, she would have made herself scarce. She could have taken a cab somewhere but didn't want to spend the money and asking one of the staff was out of the question.\n\nShe looked at the now cold breakfast and heated it in the microwave. When it was hot, she stared at it. The temptation to throw it away hit her but she didn't. She ate every bit of it and looked forward to the day that she wouldn't have to eat leftovers. After she finished, she left the cart where it was even though she could have pushed it out of the door. Angrily, she grabbed the smallest bag that she had and packed it. It seemed that she had no other choice then to spend time with her sisters.\n\n*******\n\nHans sat in his office with his head in his hands. He didn't want the bitch who only thought of herself. He wondered if there was a way to convince the fates to change their minds and started by saying a simple prayer that included swearing not to ask for another mate if only they would take this one from him. Not knowing whether they heard him or nor, Hans repeated the prayer two more times and then set about his work for the evening.\n\n********\n\nLouise was ready to go by three. She was anxious to find out why Barb hated her so much and what she could do to fix it. She had already spoken to Nathan who had made it clear that they had issues of their own to discuss and no matter how hard she tried to get him to tell her, he would only say that she needed to deal with her family issues first.\n\n\"Keep your phone close.\" he told her, \"I'll be calling to make sure that everything is alright.\"\n\nInstead of feeling irked, Louise felt unsettled and cared for at the same time. She also admitted that she didn't want to leave but knew that he was right, she had to talk to Barb and then she could move forward. She jumped when she heard a tap on her door.\n\n\"Sweetheart, it's me.\" \n\nLouise opened the door to Nathan and stepped outside the room. He hadn't been in her room since she woke up with him in her bed.\n\n\"Did you want something?\" she asked.\n\n\"Do you want an honest answer to that question?\" Nathan asked as he stepped even closer to her.\n\n\"I... we're getting ready to go.\" Louise replied dodging the question.\n\n\"I know,\" he said, \"I just wanted to see you again before you left.... Louise know that you are cared for.\"\n\nLouise heart hammered in her chest as Nathan took her face in his hands, bent down and kissed her. It wasn't the light touch of the lips that he had given her before; it was a real kiss that could be interpreted in only one way, as was his intention.\n\nLouise, albeit shyly, returned the kiss much to Nathan's delight. He wished that she wasn't going; he was thoroughly enjoying the kiss and wondered how far she would let him go. His instincts told him that he wouldn't get far but it would have been fun to find out. He broke the kiss, hugged her and told her to hurry back. \n\nLouise nodded and then realized that her arms were around Nathan's waist. She didn't remember putting them there but she must have. She felt lightheaded and held on tighter so that she wouldn't fall. She wanted to say something but she didn't know what.\n\n\"Lou! You ready?\" Kevyn called up the stairs.\n\n\"Umm yeah, I'll be right there!\" she called back suddenly not wanting to go.\n\n\"I'll be here when you get back.\" Nathan assured her. \"Go and take care of business.\"\n\nLouise went into her room and grabbed her overnight bag. Nathan took it from her and carried it down the stairs for her.\n\n\"Take care of her.\" Nathan said to Kevyn as he and Patrick walked them to the car.\n\n\"I promise.\" Kevyn replied and turned to Patrick. \"No wild women and no parties while I'm gone.\" she teased.\n\n\"Damn!\" Patrick teased and then turned serious. \"Call me if you need anything and be careful.\"\n\nA few minutes later, Louise and Kevyn were headed to Kevyn's old apartment that had been stocked with every kind of comfort food there was plus the ingredients for several meals. Kevyn looked over at Louise noticing that she was much quieter than usual.\n\n\"Are you alright?\" she asked.\n\n\"Kev... how did you know that you were in love with Patrick?\"\n\nKevyn thought about her answer and hoped that she wasn't crossing any boundaries.\n\n\"It took me awhile to admit it because I had pretty much decided that after Lonnie I didn't want to be with anyone else.\"\n\n\"What changed your mind?\" Louise asked.\n\n\"I don't know if you've noticed, but the Sinclaire men are pretty persuasive when they want something. Lou, are you falling for Nathan?\"\n\n\"I don't know what to call it.\" Louise replied.\n\n\"Ok... do you miss him?\"\n\nLouise hesitated, \"Yeah but I haven't known him long enough to feel this way about him.\"\n\n\"The timing doesn't matter.\" Kevyn replied, \"What matters is what you think. You are so good with the emotions of others because you've had to be and for the most part, you've put yourself on the back burner. Its time for you to start thinking about you. I can tell that Nathan cares about you and I think from what you're not saying that you care about him too. All I can say is what I've said before, trust your instincts as far as he's concerned.\"\n\n\"Kev? Why does Barb hate me? If I'm so good at other people's feelings, why didn't I sense it before?\" Louise asked changing the subject.\n\n\"I don't know to both questions.\" Kevyn replied, \"But maybe we'll find out tonight.\"\n\n********\n\nBarb stared out of the window as Ollie drove her to Kevyn's apartment. Hans' words kept resonating through her mind, \"has anyone ever told you how beautiful you are....\" and then the rest of it. \"Fuck you.\" she thought as the car sped to wherever they were going. She had tried to get Ollie to take her somewhere else but he had flatly refused.\n\n\"My instructions are to take you to this address and nowhere else.\" Ollie replied.\n\nNo amount of cajoling and offers of money could change his mind and she didn't miss the relief in his voice when he told her that they were close. It seemed as though he sped up after making that announcement but Barb made no comment, she was as anxious to be out of the car as he was to have her out of it.\n\n\"There it is.\" Ollie said pointing at the building where Kevyn had lived before meeting Patrick.\n\n\"Here? She wants me to stay here?\" Barb asked appalled.\n\n\"I don't know ma'am.\" Ollie replied not seeing what the problem was. It was obvious that it wasn't luxury living but the building and the surrounding areas were clean and well kept. He parked the car, got out and got Barb's bag out of the back seat before offering his hand to help her out. He blushed with embarrassment when Barb looked at his offered hand with disgust and got out on her own. Anger followed the embarrassment and before he realized what he was doing, he thrust her bag into her hands, got into the car and drove away. It was either that or hit her and he chose to leave. \n\nAs he drove away, he called Kevyn's number.\n\n\"She's in the parking lot.\" He said and hung up.\n\nBarb paused, looked around and realized that she didn't know which apartment was Kevyn's. Ollie had taken of before he told her. The honking of a cart horn caught her attention. She turned to see Kevyn pulling into a parking spot driving a 2010 Hyundai. In a way, she was disappointed. She had fully expected her to show up in a BMW or a Porsche, a Hyundai was so ordinary. ",
        "She waited until Kevyn and Louise reached her before she spoke.\n\n\"You live here?\"\n\n\"I used to but the rent is paid up so it's still mine.\" Kevyn replied. \n\nLouise and Barb followed Kevyn to the stairway and followed her up. By the time they reached her floor, Barb was a sweaty, irritable mess. Louise and Kevyn chattered good-naturedly about the hike irritating Barb even more. As soon as they were inside, Barb dropped her bag and looked around. The bedroom in her house was bigger than this!\n\n\"Make yourselves at home.\" Kevyn said as she put her bag next to Barb's knock off designer bag.\n\n\"This is so cute!\" Louise exclaimed ignoring the dark, angry looks that Barb had on her face.\n\n\"Well, it was home for the three years. It's nothing fancy but it was affordable and the property owner kept it up... are you guys hungry? There's stuff in the fridge for sandwiches or we can go out...\"\n\n\"What do you want Kevyn?\" Barb asked sharply, \"This isn't a reunion a reunion of three sisters who give a rat's ass about each other so cut the bull shit!\"\n\n\"Barb....\" Louise said softly.\n\n\"And you goodie Miss two shoes who everyone thinks is so innocent, what do you want?\" Barb asked.\n\nLouise and Kevyn looked at each other and then at Barb.\n\n\"I was hoping that we could have a nice evening together before we talked but I guess not.\" Kevyn said. \"Sit down.\"\n\nBarb started to protest but sat down. Maybe it was time they got a few things straightened out. The three sisters looked at each other for a long time before one of them... Louise spoke.\n\n\"Let's just step back for a moment.\"\n\nAnd just like that, the tension in the room decreased to a more manageable level. Even Barb noticed but she made no comment. Instead of bringing up the subject at hand, Louise shifted gears to something less tense... things that she considered pleasant memories.\n\n\"Do you guys remember how mom used to make those donuts out of the canned biscuits?\"\n\n\"Oh my god!\" Kevyn exclaimed, \"We used to swear that they were better than 'Dunkin' Donuts'! I loved those things!\"\n\n\"And with the hot chocolate they were the best.\" Louise said. \n\nThe conversation continued without Barb's participation. She couldn't believe that Kevyn and Louise were seeing the memories as pleasant ones. The final straw came when they talked about their Christmas trees that were always decorated with the ornaments that they made at school and from the ornaments that they made at home. Part of the decorations included things that they could pick off the tree and eat such as the tiny candy canes and the garlands made out of whatever they could run thread through including cookies. Christmas dinner was the one dinner that their mother started shopping for weeks before the actual event. Each payday she would buy another part of the meal instead of all at once. \n\nThat day, all of them from the oldest to the youngest helped with the meal preparation even if they didn't want to. It was always Barb that had to be ordered to join in preferring to sulk instead of having a good time. What Louise and Kevyn remembered with fond memories, it only served to remind Barb about what she didn't have.\n\n\"You two are unbelievable!\" she said. \"How can you sit there and pretend that you were happy? We were poor! The highlight was when the fire company came and left gifts on the porch!\"\n\n\"Is that why you're like this?\" Louise asked, \"Is it because we didn't have everything that you wanted?\"\n\n\"They abused us! Maybe not physically but mentally and you're sitting here and acting like it didn't happen!\"\n\n\"Because it didn't!\" Kevyn shot back. \"Do you think that we were the only poor ones on the block? We weren't abused and I'll tell you something else, mom and dad struggled for us! They did without more times than I can remember but you know what I think? I think that you're using our background as an excuse. It's easier to blame mom and dad instead of admitting the truth about yourself.\"\n\n\"Really Miss. High and rich... why don't you enlighten me, tell me about myself.\" Barb hissed.\n\n\"Kevyn...\" Louise said when she heard the underlying tone of fury in Kevyn's voice.\n\n\"Want to know what I think?\" Barb continued, \"I think that the both of you are just as money hungry as I am. The difference is that you hide it. By the way, do either of you give lessons?\"\n\n\"You conniving, selfish bitch!\" Kevyn said standing up. \n\n\"Stop.\" Louise said softly but Kevyn and Barb paid her no mind.\n\n\"Speaking about money, what was wrong with Clay? Wasn't he rich enough for you?\" Barb asked. \"I never understood what he saw in you anyway.\" she added.\n\n\"I told you, I saw him kill someone and not only that, you know where his money came from...\"\n\n\"So what?\" Barb shot back. \"And are you saying that if his money hadn't come from what he did as a living that you would have given him the time of day?\"\n\n\"NO! I was never interested in Clay even when he had money but what I'm trying to understand is why money means so much to you. I'm trying to understand why it means more to you than your own sister... Explain that to me. Where did you learn that it was all right to hurt your family? I know that it didn't come from mom or dad so where did it come from?\" Kevyn demanded.\n\n\"You know,\" Barb said not answering the question, \"You think that you're so damned perfect but you left Louise alone to care for mom. You can tell me until the cows come home that you helped and maybe you did but I also think that your bringing her back with you was a guilt thing. I also maintain that you're only with Patrick Sinclaire because his money and little miss over there is with Nathan Sinclaire for the same reason...'\n\n\"Stop.\" Louise said again, just a bit louder.\n\n\"And you... \"Barb said turning her full attention to Louise, \"You wanted to know why I don't like you... You have no backbone, for years, you let people push you around and then you hid behind Kevyn or Leon. You had a chance with Lombardi and you were too chicken to take it. You started out the new school year with new clothes, you weren't teased and called names because you wore hand me downs. You might have been teased but it was because you were and are nothing more than a mouse. You sat there and let me try to take your man away from you. In my opinion, you don't deserve him. Having said that, I don't get it. What he sees in you I mean, you're not ugly but you're not pretty either. If I were you, I'd keep an eye on him...\"\n\n\"Leave him out of this.\" Louise said softly.\n\nKevyn was silent, watching Barb as she badgered Louise and willing Louise to fight back.\n\n\"Have you even kissed him yet little mouse? You know what? It doesn't matter.\" Barb said. \"I'm done here.\"\n\n\"Sit down.\" Louise said in a voice that she hardly recognized as her own. \"Kevyn you too.\" she added.\n\nHer sisters looked at her and made no move to sit.\n\n\"I said, sit down.\" she repeated.\n\nWhen they were sitting, she started with Barb.\n\n\"I don't understand you any more now than I did before but you have to know that if I did or said anything to hurt you, it was unintentional. I don't get the abuse thing but I guess it comes down to perception and I guess to some degree I can see how you would feel that way but I ask you, what were they supposed to do? Lose the house so that you could live in you make believe world of if I had money? Would you have been happier if we had gone on welfare? Don't answer, you and both know that you would have been livid. \n\nOne of the things that mom talked about before she died was you. You have no idea of how much you hurt her when you accused them of abusing you. But let's talk about how they abused you... that prom dress? It wasn't completely paid for when Dad brought it home. He was making small payments on that dress long after the prom was over and not once did you thank them or any of us that sacrificed so that you could have your dream that night.\n\nYou're right; I let people walk over me because at the time it was the path of least resistance. I should have demanded more help with mom and so I accept my part in not having a life but Barb, you're still responsible for how you treat me and other people. I also agree with Kevyn when she said that you're using our poverty as an excuse and I think that until you admit that, you won't be happy. As far as you hating me, I'm sorry that you feel that I took something from you but you're still my sister and I love you even though I don't understand or agree with the way you think or act.\"\n\nLouise took a breath and waited for Barb to respond. When none came, she continued.\n\n\"Nathan Sinclaire is off limits and that's all I'm going to say about it.\" \n\nWithout realizing it, she gave Barb a hard mental push that made Barb's head hurt. Kevyn seeing what was happening, distracted her.\n\n\"Lou?\"\n\n\"And you...\" Louise said, \"I want you to stop feeling guilty about leaving. I wasn't and am not angry about it. You had to leave for your own safety. I want the three of us to act like the sisters that we're supposed to be even if we don't agree on things and that includes Juliet. I'm tired of the fighting and mom and dad wouldn't have wanted this.\"\n\n\"How sweet.\" Barb said sarcastically her headache receding, \"should we do the group hug thing and pretend that we're all friends?\"\n\n\"I'm not saying that it will be easy,\" Louise said, 'I'm just saying that maybe we could try, all of us... Gene, Juliet and Leon too.\"\n\nBarb smiled, leaned forward and spoke looking directly at Kevyn.\n\n\"Alright, then lets have a show of good faith shall we?\"\n\nLouise's heart ached, she already knew what Barb was going to ask and she knew what Kevyn's response would be.\n\n\"What do you want?\" Kevyn asked.\n\n\"Introduce me to some of the single Sinclaire men.\"\n\nKevyn started to laugh, \"You can't be serious!\"\n\nShe stopped laughing when she realized that Barb was indeed serious.\n\n\"No, I'm not doing that and here's why, I'm not going to enable your trolling for dollars nor am I going to basically pay you for what you should be doing for free... getting to know your family and trying to help us make amends.\"\n\nBarb smiled as if she had expected the answer that Kevyn gave her.\n\n\"Kevyn, stop.\" Louise said. \"We're not going to win, her head is so filled with the idea of what she needs and wants to be happy that there's nothing that we can say that will make any difference. Am I right Barb?\"\n\nKevyn started to object and realized that Louise was right but she gave it one last try.\n\n\"Apparently we disagree on a number of things and that's fine but can we at least agree on the fact that we need to get past this thing between us?\" she asked.\n\n\"This thing?\" Barb asked. \"I come to visit and you tell me to catch a cab. You put me up in a second rate room at a hotel where the staff treat me like crap and lets not forget the food allowance. The way I see it is that you owe me an apology!\"\n\n\"I owe you what?\" Kevyn yelled. \"You're the one who decided to come visit without taking into consideration that we might not have been ready for visitors! You're also the one who showed up three days early so hell no! I wasn't going to change my plans for you! As far as your room goes, you're lucky that we paid for it. How much of a food allowance did you think that you needed? Or did you forget that you could be buying your own food? If anyone is owed an apology, it's us but I know that's not going to happen. Barb, what's wrong with you that you can't think beyond your own needs? Tell us how to help you with this...\"\n\n\"I don't want or need your help.\" Barb snapped.\n\n\"You may not want our help but you need it.\" Louise said softly. She wasn't feeling well, the room was spinning and she had broken out into a cold sweat.\n\n\"Lou? Oh shit...\" Kevyn said.\n\nShe woke up a few minutes later feeling queasy and weak. Kevyn was at her head and Barb was at her feet with a worried expression on her face.\n\n\"Why do you keep doing that?\" she asked, \"Maybe we should take you to the hospital to make sure that you're not sick.\"\n\n\"No, I'm fine.\" Louise said as she drank the glass of apple juice.\n\n\"But you keep fainting!\" Barb exclaimed.\n\n\"I'm fine really; I just need another glass of juice.\" Louise said as she handed the empty glass to Kevyn\n\nLouise's fainting was enough to calm both Kevyn and Barb down as they tended to her. Louise fell asleep after drinking the second glass of juice leaving the two remaining sisters in an awkward silence.\n\n\"Do you really hate her?\" Kevyn asked.\n\nBarb looked down at Louise, then back up at Kevyn, and shrugged.\n\n\"Maybe a little.\" she confessed. \"For all of our lives, all I ever heard was how special she is or what an angel she is. When she started taking care of mom, it only got worse.\"\n\n\"And no one noticed you.\" Kevyn said quietly.\n\n\"And then you bring her out here and a not even two weeks later she finds someone and not just anyone, a rich someone.\"\n\n\"You're jealous of her.\" Kevyn said.\n\n\"Maybe but that doesn't change the way that I feel about mom and dad.\" she replied.\n\n\"I think that mom and dad is a subject that we have to agree to disagree on.\" Kevyn said. \"Let make some sandwiches, Lou will be hungry when she wakes up.\"\n\n******\n\nNathan threw himself into the building of the house to keep from calling Louise. He walked around the area that would be the kitchen and visualized them making meals together for themselves and family. Nathan stood in the middle of the imaginary kitchen did a slow three-hundred and sixty degree turn. As he turned, he made small mental recalculations of the room. Satisfied with the slight change in plans, he nodded to himself, moved to the next room and repeating the procedure until he had been in every room in the 'house'.\n\nHe spent more time in the bedroom than he did in any other room in the house. After doing the three-sixty turn, he stood in front of where the bed would be and closed his eyes. He thought about the kiss, her reticence and the knowledge that beneath all of that shyness was a very sexual woman just waiting to be released and she was his.\n\nUnable to help himself, he dialed he number and left a voice mail when she didn't pick up. It didn't alarm or surprise him when she didn't answer, he assumed that the sisters were in the midst of whatever their issues were. He left the soon to be bedroom via what would be the patio doors and walked down to the beach wishing that Louise was with him. He hoped that by the end of their time together, that they would have at least come to some agreements about how they would proceed. The one thing that he knew wouldn't change was Barb and her cravings for money. It wouldn't have surprised him to know that Barb was going to ask for an introduction to the family, he would have been surprised if she hadn't.\n\nNathan knew women like Barb. They stuck around as long as there was money or until the man cut her off. Women like Kevyn and Louise were in it for the long haul, the money was immaterial. He found himself feeling sorry for the poor bastard that Barb Simpson got her claws into and hoped that there was a prenuptial agreement. As for himself, there wouldn't be any such agreement. None of the Sinclaire's had prenuptial agreements. To do so implied that the mate wasn't trusted and implied selfishness on the part of the mate who wanted such an agreement.\n\nAfter sitting by the water for several minutes, Nathan got up, walked back to the site of the house and made a few phone calls all in regards to the house. During the last call, a feeling of sudden weakness came over him. It didn't last long but he knew what it was. He waited until the room stopped spinning and called her number and then Kevyn's phone when she didn't answer.\n\n\"Kevyn? Is Louise all right? You're sure? All right, when she wakes up tell her to call me no matter the time. Yes, thanks.\"\n\nHe hung up fighting the urge to go to her, \"She's fine.\" he said to himself as he left the site and headed back to Patrick's house.\n\n*********\n\nHans finished his work for the night and went to his suite where he repeated his prayer that Barb Yancy Simpson be taken away as his mate. He simply couldn't see his way clear to accept her as she was. He had come from a family of workers and the mates of his family were workers as well. It wasn't that they couldn't be wealthy, they could but their philosophy was that money was an unnecessary distraction. However, it was more than that; they all enjoyed working for what they had and enjoyed all that went with it.\n\nAfter saying his prayer, Hans got ready for the days rest without giving Barb another thought, confident that the fates would grant him what he wanted- to be rid of the woman they had chosen as his mate.\n\n*******\n\nLouise woke up almost an hour after she fainted to the sound off hushed conversation. She sat up on the sofa, looked around and went to the kitchen where Barb and Kevyn were sitting in the cramped kitchen.\n\n\"Hi.\" she said sheepishly.\n\n\"Are you alright?\" Kevyn asked.\n\n\"Yeah... sorry about that.\" she replied.\n\n\"I still think that you should go to the hospital.\" Barb said. \"You keep fainting and that can't be good.\" she added as she moved so that Louise could sit down.\n\nAs Louise passed her, she had a flash of insight and understood Barb a little better. She knew that no matter what they did that Barb would be Barb but she was willing to try her idea. Louise sat down and accepted the offered glass of cola but declined the offer of something to eat, she was anxious to see if her theory was right.\n\n\"Barb, can I ask you a question?\"\n\n\"If it's about any of the previously discussed topics, then no.\" Barb replied, \"Kevyn and I have been talking and it's something that we agree to disagree about and by the way, I don't really hate you. Jealous of you? Maybe, but I never really hated you.\" \n\nLouise was shocked, for Barb to admit to an emotion such as jealousy was a major step. \n\n\"I'm glad to know that but my question isn't about the past but the present, can I ask?\"\n\nBarb gave her a suspicious look and nodded her head. Kevyn sat back, watched as Louise quietly, gently manipulated Barb to where she wanted her to be, and then closed the trap.\n\n\"Ok... you know that I have no experience with men and don't take this wrong but you do.\"\n\nKevyn sat up straighter and watched Louise work. She looked at Barb waiting for her to shut Louise down and was surprised to see that while she was wary, she was also intrigued.\n\n\"What's the question?\" Barb asked taking the bait. \n\n\"I don't know how to ask this without it sounding bad so I'm just going to ask... how do I keep women like you away from someone that I'm interested in?\"\n\nKevyn tensed, waited for the fallout from the \"women like you\" comment and was relieved when Barb seemed not to have noticed it. She was coming to the same conclusion that Louise was and wanted to see if they were right.\n\n\"Are we talking about men in general or are we talking about Nathan Sinclaire?\" Barb asked.\n\nLouise hesitated. This would be the second time that she admitted to someone that she had feelings for Nathan and that second person was someone who would try to take him away from her and not bat an eye.\n\n\"Nathan Sinclaire.\"\n\n\"What you did just now?\" Barb said, \"Leaves him open for someone like me. I knew that you had a thing for him, it was obvious but you made no claim on him. Would that have stopped me? Probably not but I may not have put so much effort into it. Let me ask you this, do you want this guy? Because if you don't or you're not sure I'll step up to the plate.\"\n\nLouise didn't react as she digested the information.\n\n\"And I'll tell you something else,\" Barb continued, \"it's all well and good to be shy and all of that but Lou, sometimes you have to fight for what you want and it doesn't matter who the opponent is. You know better than anyone that family can be the ones to screw you over faster than anyone else.\"",
        "Kevyn listened to Barb and wondered if she realized that she had just admitted to being a gold digger.\n\n\"Have you told him how you feel about him?\" Barb asked. \"If not, then why? What are you waiting for?\"\n\nLouise didn't reply. She let Barb talk until she fell silent.\n\n\"Thank you for helping me with that.\" Louise said softly. She had to admit that there was a lot of merit in what Barb said and it was well worth considering.\n\n\"You're welcome... You sneaky little mouse!\" Barb exclaimed half amused, half angrily. \n\n\"Don't you feel better?\" Louise asked as she reached for the glass of cola that Kevyn had already poured for her.\n\nBarb laughed, \"They say that you have to watch the quiet ones.\"\n\n\"I really did want your advice.\" Louise said. \"But I think that while you believe the things that you said about mom and dad, there was more to it and you know what that is without me saying it... you admitted to it while you were talking. I'm not judging, it's your life but I'm going to use a piece of the advice you offered now.\"\n\nBarb and Kevyn looked at Louise and waited.\n\n\"I want you to stay away from Nathan. I don't know where we're going yet but I want to find out without you complicating things. Did I state my position clearly enough?\" she asked in a clear, strong voice\n\nKevyn almost dropped the bottle of cola that she was holding, Barb just stared at her as the verbal, and psychic command hit her making her head ache again.\n\n\"I get it.\" Barb said rubbing her temples. \"Damn my head hurts again, maybe I need to go get checked out.\"\n\nThe sisters spent that night and the next in the apartment and had a conference all with Juliet twice during that time. By the end of the second night, they had reached an understanding. Kevyn wasn't going to introduce Barb to any of the Sinclaire men but what she did was her business. It was then that Barb informed them that she did not intend to return to Pittsburgh or Connecticut.\n\n\"I hate the weather there and I love the weather here. I have to find a place to live and unfortunately a job until I meet someone but I have enough money to live on for a few months.\"\n\n\"The rent around here is pricy.\" Kevyn said, \"Just how much money do you have?\"\n\nBarb didn't answer but looked around the small efficiency apartment. \n\n\"How much for something like this?\" she asked.\n\n\"This was nine-hundred a month plus utilities but I thought you considered it a dump.\" Kevyn replied.\n\n\"I still do but it will do for the time being. When is your lease up?\" Barb replied.\n\n\"It's paid up for another six months but Barb; there are jobs available but not the kind that you would want.\" Kevyn said.\n\n\"There's got to be something other than what you did.\" Barb hesitated, \"Look, I know that you didn't want me here and that I have no right to ask for any favors but could I stay here until the lease is up? I really want to stay in California. There really is nothing for me back home.\"\n\nKevyn looked over at Louise who she knew was listening to Barb's every word trying to detect a lie. She didn't trust Barb any more than she did. \n\nWhile Barb waited for an answer, she thought about the conversations of the past days and wondered how Louise knew the things that she did. She had to admit that she felt better but that didn't change the fact that she still believed that she was entitled to the things that both Kevyn and Louise had. As for Louise, she would keep her word and stay away from Nathan but she would keep watch for any signs that things weren't working out. She jumped when she realized that Louise was looking at her.\n\n\"Alright, I don't see why not.\" Kevyn said. \"But I would be remiss if I didn't tell you to be careful. This isn't that quiet little town that you lived in back east.\"\n\n\"I know that.\" Barb said a little tersely showing that she was still there.\n\nKevyn was going to warn her about the property owner but decided not to. He wouldn't put up with Barb and her demanding 'the world owes me' attitude but she would warn him. She wished that she could be a fly on the wall to watch their first confrontation. \n\nThey took Barb back to the hotel themselves instead of calling Ollie. Barb settled in the front seat and looked at the dashboard.\n\n\"Nice car but why aren't you driving something new? He can afford it.\"\n\n\"Why do I need a new car? This one is fine and the one that we usually use.\" Kevyn replied.\n\n\"Oh I see,\" Barb said, \"rich but trying not to look it.\"\n\n\"So Barb,\" Louise said changing the subject, \"what kind of job are you going to look for?\"\n\n\"Something in an office I think which reminds me, I have to have someone pack up and send me my clothes.\"\n\nThe problem was that she had no real friends and her best friend really wasn't a friend at all. They just had the same goals and if she asked her to pack up her things, she would show up on her doorstep just as she had shown on Kevyn's and that simply wouldn't do. The house wasn't a problem, she could sell it and it would be all profit after all of the fees were paid. Warren Simpson her ex had paid cash for it and had given it to her just to be rid of it and her. She began to make a mental list of what she needed to in order to make the move. She decided to call the realtor first and then Juliet to ask her to pack up her clothes and ship them. She would have to pay her but she would go pack up her clothes and send them without too much fuss.\n\nOnce at the hotel, she got out of the car, grabbed her bag and walked away without as much as a goodbye. She had gotten what she wanted. She could feel Kevyn's glare on her back and she simply didn't care. She could and would play nice when she had to.\n\nKevyn almost called out to her but Louise stopped her.\n\n\"She isn't going to change so choose your battles carefully.\"\n\n\"She manipulated us!\" Kevyn replied.\n\n\"She thinks that she did.\" Louise replied, \"You were going to offer her the use of it anyway weren't you?\"\n\n\"Yeah, but why does it feel like she got over on us?\"\n\n\"Because she didn't give you the chance to make the offer.\" Louise replied.\n\n\"You know, Barb is right.\" Kevyn said, \"It is the quiet ones that bear watching. I don't know about you, but I'm ready to go home, I miss Patrick.\"\n\n********\n\nPatrick and Nathan took turns peeking out of the window looking for the Hyundai to pull into the driveway. It had been a long two nights and the frequent but short phone calls did nothing but to make them miss the women even more. Of the two of them, Nathan was having the harder time only because he and Louise hadn't mated and they couldn't communicate telepathically. During the time that Louise was gone, he had gotten the foundation of the house laid doing quite a bit of the work himself.\n\nAs soon as he got the phone call that Louise and Kevyn were going to be back in the morning, he rushed to the florists, ordered bouquets of various kinds of flowers and arranged for an early morning delivery. The next thing was to enlist Patrick's help in making a welcome home breakfast.\n\n\"Breakfast?\" Patrick asked incredulous. \"Food is the last thing on my mind.\" he added but then apologized. \"I'm sorry; I forgot that you and Lou aren't at that point yet. So what's on the menu?\"\n\n\"No, I'm sorry.\" Nathan replied, \"I wasn't thinking.\"\n\n\"Nathan, there's nothing to apologize for so... how about that breakfast casserole?'\n\nIt was two hours before Nathan spotted the car as it pulled up to the gate. It seemed that once he saw the car, time slowed. The car appeared to be moving in slow motion as it cleared the gate and moved toward the garage. He and Patrick were in the garage long before the doors opened.\n\nAs soon as the car was inside, Patrick was at the driver's side and he was at the passenger side opening the door, pulling Louise out and into his arms.\n\n\"I've missed you.\" he murmured with his lips pressed against the top off her head. \"Never again.\" he added, \"we will never be apart like that again.\"\n\nLouise heard him but made no comment, she had missed him too. When he pulled back and looked down at her, her breath caught at the intensity of his gaze. \n\n\"I missed you.\" he repeated before kissing her. As before, Louise found her arms around his waist with no memory of putting them there. When they broke the kiss, they found themselves alone in the garage. Louise blushed and then looked back up at Nathan. \"I hope that you're hungry, we made breakfast for you and Kevyn.\"\n\nKevyn and Patrick were already gone by the time they reached the kitchen. The remainder of the casserole was on in the oven waiting for them.\n\n\"I still don't get how you guys can eat so much and not be as big as a house.\" Louise said when she saw the size of the pan that the casserole had been made in.\n\nNathan looked at her and made a decision.\n\n\"Sweetheart, are you up for a talk?\"\n\n\"Sure... I feel better now that things are more settled between us and Barb.\" Louise replied.\n\n\"I'm glad to hear it.\" Nathan said, \"Sit down and tell me about it while I fix our plates.\"\n\nWhile they ate, Louise gave him the highlights of the time spent with Barb.\n\n\"So anyway, I think she feels better too and you don't have to worry about resisting her charms.\"\n\n\"That was never a problem.\" Nathan said, \"But how do you feel about her moving here?\"\n\n\"I think that as long as we accept her for what she is and don't try to change her, it'll be fine.\" Louise replied. \"We all know that she'll continue to search for that rich man to take care of her and all we can do is to warn her to be careful.\"\n\n\"You and Kevyn are good sisters but what about the other one? Juliet? What is she like?\" Nathan asked stalling but also aware that Louise had never been this free with information about her family.\n\n\"Juliet is kind of like Barb but not as bad. Her attitude is that if it happens it happens. She has two kids that I used to baby-sit for on the weekends...\"\n\n\"In addition to taking care of your mother?\" Nathan asked.\n\n\"Yeah well, mom liked having them around; they took her mind off of dad.\"\n\n\"Did Juliet help you with your mother?\"\n\n\"No, not really, she worked and had the kids...\"\n\n\"I'm sorry,\" Nathan said, \"if she could find the time to go out, why couldn't she spend a few hours with your mother? Of your siblings, who did help you?\"\n\nLouise wasn't prepared for the anger that she felt coming from Nathan but she answered the question. \n\n\"Other than Kev and my brother who died, I would have to say Leon. I didn't call him as much as I should have because he worked nights at the steel mill and picked up all the overtime that he could but when I called, he came without question, if I needed help in paying for mom's prescriptions, he did it and never asked to be paid back. There was Gene but he had his own issues and I tried not to call him unless I had no other choice.\"\n\nNathan was silent for a few minutes before he spoke again.\n\n\"Do you have any idea of your true strength?\" he asked.\n\n\"That wasn't strength,\" Louise replied, \"It was doing what needed to be done.\"\n\n\"I beg to differ, from what I have heard and seen, you have always handled any situation that you found yourself in with dignity and grace. You blamed no one for your circumstances and you harbored no ill will toward the siblings that did nothing to help you. You didn't turn to hu... vices such as drugs or alcohol; you drew on an inner strength. I think that you are ready to hear what I need to tell you. But first, let's get a few basic's out of the way, what's your favorite color?\"\n\nTwo hours later, Nathan knew that Louise's favorite color was green, that she abhorred lima beans, she liked most kinds of music and that she had always loved cooking. He told her that his favorite color was blue, he hated green beans, he liked all music but favored the blues and that he enjoyed cooking.\n\n\"Why don't we go to the den?\" he asked when there was a lull in the conversation, \"I want you to be comfortable for this.\"\n\nLouise helped clean up the kitchen and followed Nathan to the den. She knew that whatever he was going to tell her, it would be even more life changing than her move to California.\n\nNathan made sure that she was comfortable and sat down beside her. \"Wait, I'll be right back.\" he said and rushed off toward the kitchen. He came back a few minutes later with an ice chest filled with ice and juices. He had no idea of what her reaction would be and he wanted to be ready.\n\n********\n\nHans knew that Barb was back only because the atmosphere of the hotel had changed. The staff was back to being on pins and needles with several of them refusing to take care of her at all. Ollie confessed to him that he left her alone in the parking lot of Kevyn's apartment building and explained why.\n\n\"She looked at me as if I was the worst smelling shit that existed and I'm not driving her stuck-up ass anywhere else.\"\n\nHans understood and didn't argue with him. He also wasn't going to assign her another driver, if she wanted to go somewhere, she'd either have to walk or take a cab. At night, it would fall to him and he wouldn't take her any place that he deemed unsafe no matter how angry she got.\n\nThere was still the matter of an apology to Nadine. She still owed the staff as a whole an apology but her treatment of Nadine had been worse than the treatment of the others and he knew why. Nadine was quiet and easily moved to tears and it gave people like Barb Simpson a feeling of power knowing that they could hurt someone so deeply. Before Barb left, Nadine was going to have her apology.\n\nHans was keenly aware that while he wanted Barb to be safe, he really didn't care about her as a mate should in fact; he felt nothing. Hans sighed and got ready for his days rest... maybe....\n\n********\n\nBarb tossed her bag on the bed and began making her phone calls starting with the realtor. The next call was to Juliet.\n\n\"Jeesh! Yes, I'll pay the gas and yes, you can stay at the house while you pack my clothes but keep the kids out of my room...yes you can take the food... absolutely not! Sleep in the guest room with the kids and make sure that you clean up your mess. Her next call was to check on the status of her 401k, she planned to keep from working as long as she could. \n\n\"That much?\" she asked surprised, \"I want to cash it out... yes... I know, just do it.\"\n\nShe added up her asserts and including the alimony payments from Warren, the projected sale of the house, her 401k money and what she had in the bank, she could wait a year to look for a job; longer if she was careful. That she wouldn't have to pay rent or utilities for six months was a big bonus... all she had to do now was find the man who would take care of her without complaint.\n\nThe last phone call that she made was to the credit card company. She paid off the balance and now had something to fall back on in case of an emergency. Things were beginning to look up. She admitted that she was still jealous of Kevyn and Louise and admitted that she would never change unless the hand of god himself reached down and touched her but she was fine with that. The mouse had been right, it was something that she needed to admit, own up to and accept.\n\nShe flipped through the menu and planned her meals for the day and evening before flipping through the television channels and setting the reminders for her favorite shows for the evening. Tonight was going to be a stay in and relax kind of night; she could only imagine what was happening in Kevyn's bedroom. She didn't think about Louise, she just couldn't see her as someone that a man would want sexually or even her being brave enough to allow a man to touch her. In the back of her mind, she held hope that Nathan Sinclaire would tire of Louise's insecurities and turn her loose.\n\n*******\n\nNathan took Louise's hands in his and played with her fingers unsure of where to start. Then he decided to start with what he was and to go from there.\n\n\"Louise... I'm not human. Neither is Patrick ... no one in my family is human.\"\n\nSilence.\n\n\"I... we all look to be in our thirties to forties but some of us are much older than that. Uncle Patrick is several centuries old as is my father and well you get the picture. We stop aging anywhere from our twenties to our forties and in human years, I'm in my early forties.\n\nSilence.\n\n\"Most of us have mates that we never know when or where we're going to find them and for the most part the mates are human. Kevyn is Patrick's mate and you are mine.\"\n\n\"Kevyn is a vampire?\" Louise asked.\n\nNathan let out a sigh of relief that she didn't seem upset about the vampire revelation.\n\n\"No, she is immortal and will always be as she is.\"\n\nLouise was at a loss for words, she didn't know what to expect but this wasn't it. It never crossed her mind that he was lying to her, he wasn't, but she has never really thought about the existence of vampires or other beings.\n\n\"Louise? Are you alright?\" Nathan asked.\n\n\"I... I just wasn't expecting this, I don't know what I was expecting but it wasn't this... this is why you don't go out during the day isn't it?\" she asked as things began to make sense. \"And why the drapes are drawn until the sun goes down but... but you can eat.\"\n\n\"Yes, but there are those who can't.\" Nathan replied. \"So you believe me?\"\n\n\"Yeah but... how? And why me?\" Louise asked.\n\n\"No one knows.\" Nathan replied, \"But Louise, had I been human, I still would have chosen you. And like now, there would have been nothing that Barb or any other woman could have done to change that. You are mine just as I am yours, you only have to accept me.\"\n\n\"Accept you? How?\" Louise asked nervously.\n\n\"For now, a simple yes will do.\" Nathan replied not wanting to overwhelm her.\n\nLouise didn't know what to say. Part of her wanted to do as Barb had suggested and claim what was hers but the shy reticent part of her held her back. \n\nSuddenly, she felt overwhelmed as understanding dawned on her. She had read enough vampire novels to know what Nathan was getting at- he was asking her to marry him.\n\n\"I know that this seems sudden,\" Nathan said, \"but I knew who you were from the moment I saw you and whether you know it or not, you knew me. I fully understand if you need time to think about and process what I've told you and I will answer any and all questions honestly.\"\n\n\"Does Kevyn know?\"\n\n\"About us? Yes and I asked her not to say anything before we had a chance to talk.\" Nathan replied.\n\n\"I think that I need to go to my room.\" Louise said softly, \"I have to think about this... I'm not saying no but....\"\n\n\"Louise,\" Nathan interrupted, it's all right, take all the time that you need. Talk to Kevyn if it will help but remember that in the end, the decision is yours and mine alone.\"\n\nNathan stood, pulled Louise up to him and kissed her before leading her up to her suite. At the door, he stopped her from going in, \"Louise, it's alright to be frightened but know that I would never harm you in any way and that you can come to me no matter the time and talk.\" \n\nLouise slipped into her room, leaned against the door and slid down to the floor. She knew that Nathan was standing on the other side of it; she could feel his concern for her. Slowly, she stood up, turned toward the door and opened it. "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "louise",
        "patrick",
        "barb",
        "vampires"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/louise-ch-06"
}