{
    "title": "A New Way of Seeing Things Pt. 03 Ch. 14",
    "pages": [
        "Standard disclaimers.\n\nThis is a story about sexual exploration and, open relationships. Open relationships can and do happily exist; but they are not for everyone. If you do not believe it is at all possible for open relationships to exist without damage to any and all involved parties, please do yourself a favor and don't waste your time reading this.\n\n. \n\nAlso, this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental.\n\n*****\n\nThey made love again the next morning, the memory of the previous night's adventure fueling their desire. A locker-room blowjob\u2014the plotline of a porno\u2014was definitely driving Tim's energetic fucking, but Natalie's discrete \"panty-passing\" maneuver had affected him as well. The idea she knew what they were doing, and where they were doing it excited him, almost as if he and Gwen had been putting on a show for yet another person.\n\n\"Was that Natalie's idea last night?\" Tim grunted as he lay between Gwen's widespread legs.\n\n\"Uh-huh,\" she panted, pulling him deeper to grind against his pubic bone. \"It sounded like a dirty game of hide-and-seek to me. She and Adam did it first\u2014she said they've done that before, sends him a picture of herself in a spot that gives him a clue where to find her. She had me take the picture this year. I think I messed up, though-I told him where she was rather than letting him find her.\" \n\n\"Huh,\" Tim replied in time to his next hard thrust. \"I'll bet they weren't too mad. I know I wasn't after Nat helped me.\" The reward he had gotten for finding Gwen was fresh in his mind as he filled her a moment later. \n\nThey lay together for only a moment before the Lady tartly reminded Gwen there were things to do now that the her lust had been temporarily satisfied. Tim volunteered to start the coffee but delayed, standing at the kitchen window watching his wife cross the yard to the barn. She was dressed in jeans, t-shirt and muck boots, the same outfit she always wore for turning out the horses, and he had seen her take that walk countless times before but still stopped to admire that cute little ass swinging back and forth. Those cheeks had looked especially good as she lay on her stomach on the locker room bench the night before, her head right at cock level...\n\nLooks like it's gonna be a nice day, he thought as he tore himself away. Much rather be out on the boat seein' if I could get that ass naked rather than going into town with Charlie to look at one of his jobs. Something more mundane from the previous evening's dinner popped into his head. Ed Masterson's wife had discretely asked him to inspect her husband's recent water heater installation, fearful the tank might rocket through the roof and into low orbit. Tim had promised he would do so and asked her to text Gwen to add it to the schedule; Ed's house was not too far from Charlie's jobsite, maybe just drag him along and do it now before The Mastersons made the local news? Gwen's phone was on the counter, where she had left it when they had returned home; he should probably text back and warn them he was planning on stopping by. Tim grabbed for her phone. The Nelsons locked their phones, more for the sake of their customers' privacy and security than anything they themselves had to hide, but they occasionally had need of the others' messages and contact information and knew how to get in. \n\nHe almost dropped the device when the screen came to life. There was the message he had gotten last night, a picture of Gwen from the neck down, sitting on a bar with a black dress hiked up about her waist and legs wide open. Except his brain and his cock instantly knew this wasn't Gwen\u2014the body wasn't quite so petite while the completely shaven sex featured very prominent pussy lips. Natalie! Tim stared at the image, letting it burn into his memory while wondering what to do next. He briefly considered forwarding it to his own phone but hesitated\u2014he was sure he hadn't been meant to see it in the first place and to save it for himself felt like an invasion of their privacy. The accompanying message-\"Would you like a snack before dinner?-made it apparent Natalie and Gwen had also played a game of hide and seek together. He'd have to ask about that, but in a roundabout way...despite his earlier exertions, the thought of his wife sitting on a barstool, her head between those widespread thighs caused his member to stir. Ain't you a greedy bastard, he chided himself with a chuckle. You got the show of a lifetime a week ago and you wanna change the channel? Tim got the information he needed and returned to Natalie's photo for one more look before finally placing the phone back on the counter. \n\nTim slid into his truck and glanced at the underwear that swung from the rearview mirror. He couldn't believe Gwen had let them hang there in plain sight while he stopped to get gas last night, or let them remain after they had gotten home; she might have had something else more urgent on her mind just then, he thought, proudly remembering the promised orgasm he had delivered. She had obviously forgotten about them for now but would soon remember and ask to have them returned. He liked the idea of leaving them on display, like a teenager's trophy of sexual conquest\u2014he remembered Charlie doing that a few times when they were younger, at least until the owner of the underwear demanded them back. It might be fun to send a message to his friend that Tim Nelson was capable of getting into a woman's pants, and that Gwen Nelson might not be the frigid stuck-up bitch Charlie thought she was. Common sense won out, and with a rueful shake of his head he threw them in the glove compartment.\n\nTim pulled into his friend's driveway a half hour later. The big man amble out his front door and to the truck. \n\n\"Hey.\"\n\nCharlie settled himself into the passenger seat with a combination wheeze and groan. \"Hey.\" Tim looked over his shoulder to back out and could see his friend patting his pockets. \"Got something to write on?\" he asked, reaching for the glove compartment to help himself to whatever he could find. Tim wanted to stop him, but it was too late; what excuse could he give for not going in there anyway? \"What the hell?\" The big man withdrew the lacy garment almost reverently, unfolding the panties and admiring them. \"You steal these from a job, you perv?\" \n\nTim glanced over at the man holding his wife's panties. \"Put 'em back, and I didn't steal 'em.\"\n\nCharlie's expression changed to one of understanding and he grinned. \"No shit! You finally got smart and got yourself a piece on the side! 'bout fucking time! You're cheaper than I thought if you're fucking around in the front seat of your truck instead of getting a room, but hey, at least you're getting some.\"\n\n\"I'm not getting any on the side, you asshole!\"\n\nThe big man's grin disappeared and he gingerly grasped the edges of the underwear between thick fingertips as if the fabric had suddenly become radioactive. \"They, uh, one of the girls?\" \n\n\"What the fuck is wrong with you? Those aren't my daughter's underwear!\"\n\n\"Alright, alright...so whose are they? Any one I know? And why do you have 'em in your glove compartment?\"\n\nTim smiled. \"They're Gwen's, you nosy bastard.\" \n\nCharlie looked at him doubtfully. \"Bullshit. She wears longjohns, and they're made of steel.\" \n\n\"It's not bullshit, and how the hell would you know shit about her underwear? They're hers.\"\n\n\"She know you took 'em?\" \n\n\"I didn't take 'em, she gave 'em to me\u2014last night at the dinner.\" Tim knew he was revealing way too much, but didn't particularly care at the moment\u2014it was fun to turn the tables on his friend for once. \n\n\"Bullshit.\"\n\n\"No shit.\"\n\n\"What the hell for? Don't tell me she gave you your semi-annual pipe flushing here in the truck, cuz' I sure as hell ain't believin' that.\" Still, the big man spread his thighs and glanced down between them, looking for any tell-tale stains on the seat cover. \n\n\"We didn't do it in here. We did it in the locker room at the Country Club.\" \n\n\"Now I know you're just makin' shit up, and you suck at it.\" Charlie brought the lace up and inhaled deeply. \"Mmm, perfume and the smell of bitch in heat. Fresh, too. Okay, maybe you did get laid last night. What's the occasion, she tryin' to get knocked up one more time?\" \n\n\"What? I told you to put 'em back,\" Tim yelled, snatching the underwear out from under his friend's nose and stashing them between his own thighs, a place he knew Charlie wouldn't dare go to try and retrieve them. \"No, she's not trying to get pregnant. She just wanted to have sex.\" \n\n\"Gwen Ice Queen Nelson wanted to get laid in the locker room of the Country Club,\" Charlie carefully stated, trying to make it obvious how unlikely that sounded. \"I still call bullshit. So how did her panties get in your truck?\"\n\n\"She said I could hang on to 'em for her after.\"\n\n\"So she was walking around without underwear all night? She was wearing one of those sensible pantsuits she wears to Chamber of Commerce meetings, right?\" \n\nTim laughed. \"She was wearing a dress, a hot-looking little black one.\"\n\n\"No shit,\" Charlie breathed, really wanting to believe what he was hearing. He had imagined that stuck-up-bitch in a lot less over the years, but the idea of Gwen Nelson strutting around in a short dress and bare pussy was pretty hot, especially if it was true. \"You sure she ain't tryin' to get one in the oven before the kitchen closes?\"\n\n\"Some guys are better at talkin' about fuckin' than doin', and some are better at doin' than talkin'. You're really good at talkin',\" Tim said with a grimace and a laugh. \n\nCharlie tried for quite a while for more details, but Tim wouldn't say anything more, an annoying smile plastered to his face as he tormented his friend. \"Fuck you then, you probably ain't talkin' cuz you couldn't get it up.\" the big man grunted to signal his debate victory and finally fell into silence. \n\nCricket arrived mid-morning, long after Tim had left on his errands. She and Gwen were sweating freely by the time they had finished saddling their mounts and the older woman surprised her companion by stripping off her shirt and jogbra before leading Dart out of the barn. Her undergarment was hung on a nearby nail to dry before she stuffed the shirt in her saddle bag. Grasping the saddlehorn, she swung a practiced leg over her mount. \"Ready?\"\n\n\"Uh, yeah...\" Cricket looked at the topless woman, weighing her choices. \"Wait for me.\" Her bra was quickly hung next to Gwen's, and the two riders started up the hill. \"Do you ride this way often?\" the young woman asked after she had caught up. \n\n\"Sometimes,\" Gwen admitted, \"more often when the weather's nice. Do you mind?\" \n\n\"Oh\u2014no, it's nice,\" she decided, \"just different.\" \n\n\"I found it's a good way to be reminded to maintain proper riding form, keep my upper body quiet and in sync with Dart's cadence,\" Gwen said, looking down at her chest. \"If I don't, my breasts get too much of a workout and they end up sore. I think they prefer to be out in the fresh air anyways.\" Despite the heat, Gwen's erect nipples seemed to agree, the arch of her back proudly pointing them up the path. \n\n\"Don't you worry about being seen?\"\n\n\"By who, the deer and squirrels? Have you seen another human during our rides yet?\"\n\nCricket smiled at the truth of the statement. \"You look so natural like that,\" she said after a few moments and several glances. \"It seems so...I dunno, like you not having clothes makes you and Dart more like equals, or something. Sorry, that sounds stupid, but I don't know how else to put it.\"\n\nFirst Mrs. Danning and now you, Gwen mused with mild exasperation. What is it about be being naked on a horse? \"No, not stupid,\" she said quietly, \"I'm...flattered, thank you. But maybe I see what you mean. You look very natural ...like that...too.\"\n\nThe pair rode for several hours, the quiet rhythm of softly thudding hooves inviting their thoughts to wander into considering what the rest of the day and evening might bring, neither brave enough to openly discuss or plan with the other. Tim was already back and on the tractor moving manure when they rode back into the clearing. He brought the diesel to a low grumble as his wife dismounted and approached while Cricket hung back, suddenly very aware she was still topless and out in the open while admiring Gwen's self-confidence as she casually stood bare-breasted by the vehicle. \"I'm going to run down to the grocery store for a couple of things for dinner after I turn Dart out,\" Gwen announced when she returned and led the horse into the barn. She reached into her saddlebag to retrieve her shirt and toss it over her head, reaching back into the loose collar to pull her ponytail out. \"you can stay here and take a swim if you want.\"\n\n\"No, I'll go with you,\" Cricket replied, hurrying to find her own shirt. She glanced at her bra hanging on the nail, noting that Gwen had not grabbed hers and both were left to be collected later. Her nipples rubbed sensuously against the warm fabric of her top as they worked to groom their mounts and then again as the truck bounced down the country road. She glanced over at the driver and could see Gwen's shirt remained open as far down as it could go, the zipper peeking from below where the seatbelt crossed over her cleavage. The sight reminded her shirt was open as well, risking exposure, and pulled the zipper up in a belated bow to modesty \n\nThe sudden transition from the heat of the parking lot into the chill of the store's air conditioning made Cricket shiver, her nipples coming to attention from the shock. The two women did not go unnoticed by the other shoppers, particularly the men, as they made their way through the store still dressed in their tight riding breeches and knee-high leather boots. Cricket was painfully aware of the hard little points beneath the sheer fabric of her top while Gwen's shirt hung loosely enough to soften the effect without opening too much as to reveal what lay beneath. They made a stop in the beer aisle at Tim's request, Gwen selecting a carton from a bottom shelf and carefully loading it under the cart. The older man in the aisle with them did his best to be discrete, but it was obvious to Cricket his complete attention was on the space between her friend's hanging shirt and breasts. She straightened, and the satisfied customer quickly found a particularly interesting 12-pack to study. \n\n\"Gwen, your shirt might be a little open,\" Cricket whispered urgently after they had moved away. \"I think that guy back there could see down it when you picked up the beer.\" \n\n\"I had no idea,\" the older woman said with a smile while making no effort to cover up. \"Did he seem upset? I mean, he didn't have to look, right?\"\n\nCricket smiled. \"No, I don't think he was upset. He didn't stop staring until you stood up again.\" \n\n\"Huh.\" The memory of the first time she had \"accidentally\" exposed herself in this store was never far from Gwen's mind whenever she shopped here, and it had been the subject of several masturbatory fantasies after; she had even seen that nice young man in the meat department several times since, always wondering if she had similarly inspired him. They came to a sudden halt short of the meat section, Gwen smiling and reaching for Cricket's zipper despite the young woman's mild protests. \"Can you get us some chicken?\" she asked. \"Get some breast\u2014they're at the bottom of the case. Make sure you point out the ones you want.\"\n\nCricket looked back at her, wide-eyed. \"Like this? Now my shirt's wide open!\" she growled. \n\n\"It's not wide open,\" Gwen corrected, \"just a little open.\"\n\n\"Wide open,\" Cricket repeated in a low voice, \"and besides...\"\n\n\"You keep saying men don't notice you. Let's see.\" \n\n\"This is different!\" \n\n\"Let's see,\" the older woman repeated, \"if you get noticed.\"\n\nCricket looked at her doubtfully and took a couple of steps towards the counter before looking back. Gwen returned her gaze, eyebrows raised slightly. \"Chicken?\" She said, and the young woman wasn't sure if it was a reminder or a dare. She continued on.\n\nA red-faced older man, balding with a silver crown of hair, stood waiting while he retied his bloodied apron. \"Can I help you Miss?\"\n\nShe could feel the flush of her cheeks. \"Uhh, yes, I'd, umm, like some chicken breasts.\" Cricket slowly bent over to look at them, concentrating on the cuts of meat before her, very aware her nipples were free of the fabric now hanging below them.\n\n\"Which ones?\" Her head came up to find the man looking back at her through the glass of the case, just in time to see his stare come up from a spot further down her body. \n\n\"Umm, the biggest ones, please. Three?\"\n\nThe butcher took his time, his gaze darting between Cricket's request and the mounds dangling free inside her shirt. Small but firm, he noted, too small to get smothered by but big enough to wrap around my dick if she pushed 'em together. The young woman, cheeks ablaze, held her pose while he worked, intent on making sure her choices were correct. He eventually ran out of reasons to delay and finally straightened to put the selections on the scale. \n\n\"Thank you,\" Cricket squeaked as she took the package from him, unable to make eye contact.\n\n\"Any time.\" He watched her walk back to the cart, dimly aware of the other similarly attired waiting for her, taking a moment to admire the tight little bottom hurrying away. \n\nGwen just smiled and waited until they had moved down the next aisle. \"Well, I'd say you got noticed! I'm surprised you got chicken and not beef.\" \n\nCricket just blushed in response and said nothing until they had paid for the groceries and gotten in the truck \"I can't believe I did that,\" she blurted out. \"I think he saw my boobs!\" \n\nGwen laughed. \"Oh, I'm pretty sure he did. Think he minded?\"\n\n\"Not a bit,\" she laughed. \"But it was so embarrassing to let him see me like that!\"\n\n\"But exciting too, right? Come on, you can admit it. Men really like to look. Sometimes it can be fun to let them think they're getting away with something.\" \n\n\"Alright, yes it was exciting,\" Cricket admitted. \"Still, it would be nice if I could get that kind of attention from a man without looking like I'm advertising for a good time.\" \n\n\"You are looking for a good time, just not with him. I'll bet you made his day, though.\" And gave him a story to tell in the back room, the Slut added. \"It doesn't hurt to practice your advertising for when you do meet Mr. Right.\" And now you sound just like Natalie, the Lady cautioned. \n\nThey all swam before dinner, the need for bathing suits no longer even mentioned, their casual nudity becoming increasingly easy to dismiss as somehow normal. Shorts and t-shirts were the dress code for preparing and sitting down to their meal, relaxing on the deck as the shadows grew long across the yard. \n\n\"I see what you mean about getting sore if you don't stay in sync in the saddle,\" Cricket whispered to Gwen as Tim took some plates back into the house. \"I don't think I did such a good job. My breasts are pretty sore from all that bouncing.\" \n\n\"Maybe the hot tub might help?\" her friend suggested. \"Tim, we're going up for a soak before bed. Are you joining us?\"\n\n\"Yup,\" came his voice from the kitchen. \"I'll be right out.\" \n\n\"We'll meet you up there,\" Gwen replied through the fabric of the shirt she was already pulling over her head. \"Can you bring towels, please? We've got our wine.\" The two women were neck-deep in the steaming water when Tim arrived and hurriedly shed his clothes, Cricket noting the curious state of his penis, somewhere between soft and cuddly and hard and menacing. It soon disappeared under the surface as he settled himself with a contented sigh.",
        "It was quiet for some time, just the hum of the pump motor and the forest at night. \"How's your soreness?\" Gwen asked, her voice loud against the stillness.\n\n\"A little better,\" Cricket replied softly, hesitant to discuss in detail the afflicted parts with Tim so close. \"Just have to be a little more careful tomorrow.\"\n\n\"Let me see if I can help. Come over here and sit in front of me.\" Gwen shifted and brought an arm out of the water, waiting to gather the young woman in. Cricket hesitated, glancing at Tim before accepting the invitation. Gwen chose her spot for her, gently taking her by the shoulder and guiding her into a sitting position between her legs. Soft yet firm hands began at her neck and shoulders, caressing, kneading, and Cricket closed her eyes and relaxed into the reassuring comfort. The hands gradually worked lower, under the water's gently roiled surface, closer to her breasts, then to them. Gwen took the mounds and continued her caresses, slowly beginning to knead and squeeze as she might a sore calf, fingers occasionally brushing over the young woman's areolae and erect nipples, circling them before moving away. \n\nTim didn't even bother to pretend to avert his stare as Gwen worked, the water's surface only partially obscuring his view, and he saw enough to know Cricket's breasts were her focus. A rumble came from the young woman's throat as her eyes fluttered and she slumped against the body behind her. His hand crept to his alert staff and began to idly tease and stroke as his wife's left hand was again on the move. Cricket gasped and opened herself wider to the finger now delicately probing between her legs.\n\nGwen kissed and nibbled at her friend's exposed neck and ear while Cricket thrust her hips to meet the advance of the digit that teased her clit. Gwen obliged by firmly planting her palm on the flesh above the tingling button and sliding her finger into the slick opening further below. The young woman gasped again, then moaned softly as her hips alternated between pushing against the firmness above her clit and sinking down on the finger deep inside her. She was aware Tim was watching and welcomed the attention; awash in the excitement of the effect their little show must be having on him. She wanted to see if he was touching himself, but opening her eyes was too much effort...she briefly imagined that the man in the grocery store would be doing the same if were here right now...he wasn't at all handsome, but that wasn't the point. \n\nHer climax built slowly, in no small part because Gwen could sense it too and controlled its arrival, eventually deciding the time was right to let it explode over her young friend. Cricket's body bucked and twitched, frantically working to increase the pressure on her clit and the penetration of her friend's probing finger while she urgently hummed \"mmm-mmm-mmm\" in time to the violent thrust of her hips. \n\nCricket lay her head back against her friend and panted as her orgasm spent itself. Gwen let her rest for some time, sensing just the right level of touch to give the young woman as what she would want herself, finally murmuring in her ear, \"think you're okay to get out? We've been in a long time...\"\n\nThe young woman smiled and nodded, then rose on unsteady legs. Gwen steadied her and stood as well to gently guide her up on to the pool deck before looking back at Tim. He gave an apologetic smile and stood to reveal an impressive erection. Gwen smiled back and led the way down the hill. \n\nThe Lady seized this moment to exert what little control she still retained, declaring if Gwen was to go through with the incredibly crazy and perverted idea the Slut had infected her with, it would be done in a controlled and orderly manner. \"Sleep with us tonight,\" Gwen called over her shoulder as they entered the house, the words her young friend had hoped to hear. Gwen led the procession to their room and lay back on the bed, making it evident sleep was not first thing on her mind. Tim joined her on one side and Cricket the other, both very willing to let Gwen call the shots. She resolutely moved forward with her plan. \"Think you could you help me a little now?\" she asked the young woman. \n\nCricket rolled to her side, eager to oblige. \"Of course! What can I do?\" \n\n\"Well,\" Gwen replied slowly, spreading her legs as wide as the bodies on either side of her would allow, \"do you think you could kiss me down there...you feel so good, and I think Tim would like to see that.\" \n\nHe blushed but didn't disagree with her assertion as the wide-eyed young woman nodded and hurried to the space between Gwen's thighs. \"I don't want you to feel left out,\" Gwen said, gently grasping and shaking his slick erection. \"Can you bring this up here?\" He got to his knees and shuffled to put his bouncing cock in reach of her lips, positioning himself to watch Cricket orally pleasure his wife. \n\nFor Gwen, receiving that unique pleasure a woman best understood how to give while she paid loving homage to her husband's penis was everything she imagined it would be, feeling as though she were the conduit connecting three sexual beings. For some time this had been the stuff of masturbatory fantasies, always assuring the Lady even as her orgasm approached that it would never become reality. And yet the Slut had continued to suggest it as possible, finally convincing Gwen that she had the power and the right to make it happen. Still, the plan had not come together until the hot tub; having her hands on the body of a sexually-charged young woman while her husband watched had infused her with the bravery to turn fantasy to reality. \n\nNeither Cricket nor Tim had any issue whatsoever with Gwen taking control; to him in particular it just seemed a natural extension of the woman he had known for so long. Their attention was on each other, Tim fascinated by the face buried between his wife's legs making her hips grind and twitch, Cricket peering up the body before her and focusing on the length sliding back and forth between of her friend's lips. \n\nHe wanted this to last, to at least wait until Gwen had climaxed, but the visuals and the overall situation, not to mention the talented mouth engulfing his cock, took its toll. \"Gwen honey,\" he muttered, looking down at her, \"I'm close.\" \n\nThe woman sucking him opened her eyes and met his gaze. \"Mm-hmm,\" she murmured around his cock. Cricket's tongue slowed, distracted by what she was certain was about to happen, not wanting to miss any of it. \n\nI tried, Tim thought, letting Gwen's tongue take him that last little bit to the edge before his own hips took over. She recoiled slightly then held herself still as Tim stiffened and let out a strangled groan, and Cricket imagined what she had seen erupting from him last week now flooding her friend's mouth. His hips twitched to mark each volley, little movements meant to get him deeper without choking the woman receiving his seed. Satisfied, He sank bank on to his haunches with another groan, Gwen letting his shining cock emerge from between her lips. \n\nCricket watched her throat flex as she swallowed her husband's offering, then looked dreamily down at the woman between her legs as if to encourage her to resume. The young woman smiled apologetically for having stopped in the first place and renewed her efforts. What she had seen had affected her as well; she felt the need for another orgasm growing, and thought about reaching between her own legs to bring it about. She brushed away another idea, an even more perverted idea, but it would not be dismissed so easily. The young woman began to kiss her way up Gwen's body, across her stomach, taking first one nipple, then the other, between her lips. Cricket continued on until her mons was firmly pressed against her friend's. Her hips began a slow grinding and had made it to Gwen's neck when she was stopped.\n\n\"I don't think you want to kiss me,\" her friend warned. \"I mean, I just had Tim...\"\n\n\"It's alright,\" Cricket replied with a smile. \"I don't mind. I mean, unless you do.\" Gwen hesitated, giving her friend one last chance to reconsider, then gently took the young woman's head in her hands. Their lips pressed together while hips continued to move with and against each other. Not unfamiliar, Cricket thought as their tongues began to dance, realizing she had tasted this on Gwen's lips before, a little stronger this time, saltier, a little bleachy...masculine. Gwen tasted herself, knew where those lips had just been, and thrust up to firmly press her clit against the young woman on top of her. She was the first to climax, aware that Cricket's hips had stopped to allow her to find the most satisfying spot to press against, their tongues still exploring. The young woman followed her into orgasm soon after. They came back to earth together, Cricket rolling limply off to the side, her body pressing against Gwen's right while Tim held her from the left. Sleep came easily for all of them. \n\nThere was no repeat performance in the morning; Tim was up and out of the house before the women he had shared his bed with had even risen, on his way to the lake for a day of fishing with Charlie and another story he wouldn't tell. Gwen and Cricket rose a bit later, flashing knowing smiles at each other as they worked in the barn, both surprised at how little regret and guilt they felt, and how things just seemed right. \n\nThey were on the trails early, Cricket choosing to remain in her shirt and bra due to lingering soreness, but promising to give her \"new riding exercise\" another try the next time she came over. Gwen remained clothed out of sympathy, despite being mildly annoyed by how unnatural her top now seemed to feel. \n\n\"Sorry if I went too far last night,\" Cricket said after they had skirted the first low ridge. \"I got a little carried away.\" \n\nGwen laughed. \"Carried away? What do you mean?\"\n\n\"I think I forced myself on you-I really wanted to rub against you...and kiss you...I was curious. Sorry about that.\"\n\n\"Curious about what?\"\n\nCricket's cheeks went from pink to scarlet. \"The, umm, you know...\" her voice trailed off, \"taste.\"\n\nGwen laughed again. She realized laughing had become so much easier over the past year, even over subjects she would have found violently disagreeable not too long ago. \"You can't say I didn't warn you. It takes some getting used to.\" \n\n\"You don't think it was over the line?\"\n\n\"I'm not sure what line you mean...\"\n\n\"The 'look but don't touch' line?\" \n\n\"I really hadn't thought about it like that.\" Gwen thought for a moment. \"No,\" she said, coming to her decision, \"a taste is not a touch. You can have all you want, but I'm guessing you got more than enough last night.\" \n\n\"It wasn't as bad as I thought it would be,\" Cricket replied quietly, \"although judging from what I saw last week I'm sure I didn't get nearly as much as you did. It just seems like such a nasty thing to do\u2014like something only a slut would do,\" she continued. \"I think I like being a slut sometimes, at least under the right conditions.\" \n\n\"It can be fun under the right conditions,\" Gwen agreed. \"I never would have imagined it until N\u2014\" she caught herself just in time\u2014\"my friend showed me that it's possible to have a public side and a private side.\"\n\n\"Just like you're showing me?\" her companion said with a smile. \"The student becomes the teacher...\"\n\n\"The student is still a student,\" Gwen replied with another laugh. \"A student with a lot more to learn, I bet.\" \n\n***\n\n\"Mind if I skip the swim and head straight to the shower?\" Cricket asked as they walked back to the house after turning out their mounts. \"I'm feeling pretty grimy from all that dust, and I haven't washed my hair since I got here.\"\n\n\"Of course not,\" Gwen replied. \"Use the one in our bedroom.\"\n\n\"Thanks...we can share, right?\"\n\nThe older woman smiled. \"We can. More than enough room.\" \n\nThe number of nozzles meant neither woman was ever out of the stinging spray unless they chose to be, each luxuriating in the wet warmth. \"Wash your hair?\" Gwen offered, stepping behind the other naked body and reaching for the shampoo. Her fingers sensuously worked the lather while Cricket luxuriated in the feeling of decadence. \"Let me get the rest of you,\" her friend murmured, beginning to soap her shoulders and back. \"How are your breasts today?\" \n\nWith great effort, Cricket raised her arms to cup the pert mounds. \"Sore,\" she admitted, \"my bra helped, but we were out there quite a while...\"\n\nGwen hummed in agreement, her hands already beginning to repeat the previous night's massage. Her fingers also eventually found the young woman's sex, the sensations making it difficult to stand. \"Bed,\" Cricket gasped, reluctantly moving away from the body behind her, \"you're going to make me fall down.\" Gwen stopped her outside the shower stall long enough to dry the young woman off, then let her lead the way to the next room. \n\nThey lay down together after Gwen had retrieved her vibrators and dildos from her nightstand drawer, actions unhurried but intentions clear. Cricket's head start towards her hoped-for orgasm did not prevent her friend from quickly catching up. The young woman's lips pulled away from her friend's even as a finger circled her alert clit. \"You really like it when I kiss you down there?\"\n\n\"Mmm-hmmm,\" Gwen affirmed, her hips rocking. Cricket smiled and began to work her way down the older woman's body, over erect nipples and smooth skin to the small patch of hair on her mons. Gwen's legs opened wide in invitation as she reached for a nearby dildo. A soft tongue began to tease and she turned to look at the open legs next to her head. The dildo was placed where it was meant to go, and with a soft push split the young woman's sex. \n\n\"Ohhh,\" Cricket groaned into Gwen's pussy, welcoming the invasion and the finger circling her clit. The older woman slowly pulled it in and out, watching the incredibly erotic scene with fascination as her friend's labial lips seemed to grasp at the length, reluctant to let it go as it withdrew, trying to follow it deeper as it returned. She wondered if her pussy looked the same when it was filled with this impossibly large penis, or if it looked any different when Tim was doing the filling...big and thick is nice, the Slut admitted, but the real thing, being driven into her by a masculine pair of hips, is even nicer.\n\nThe dildo inside her and the finger tormenting her button put Cricket over the edge a short time later. Gwen wanted to believe she could see her friend's sex flexing and grasping at the invader just as her own did the same in these moments. The activity between her legs stopped while the orgasm spent itself, only the heavy breathing of the woman between her legs to be felt. \n\nThe tongue and the kisses began again, slowly at first as Cricket regained her senses, then with more energy. The Slut decided she had had enough, and her body agreed, forcing the body beside her on to her back while she straddled the young woman's face. Her own climax would not be denied, and she was not gentle as she ground against the tongue and lips beneath her.\n\nThey lay together for some time basking in the afterglow, Cricket in no hurry to leave, almost hoping Tim might come home and discover them there, perhaps even join them..."
    ],
    "authorname": "BusyBadger",
    "tags": [
        "wife",
        "husband",
        "friend",
        "lesbian",
        "toys",
        "blowjob",
        "shower",
        "hot tub"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-03-ch-14"
}