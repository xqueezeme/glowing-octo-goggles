{
    "title": "George and Sophie's Autumn Vacation",
    "pages": [
        "Arrival Day\n\nAbout an hour into our 3-hour drive, the sun broke through a four-day autumn gloom and lit up a dazzling display of autumn color. My wife, Sophie, and I had lucked out as the next three days promised to be crisp and cool in the evenings and warm and sunny during the day for our fall getaway. It seems that money had always been too tight to take a non-family getaway. Even though two nice promotions had raised our income bracket, a mortgage and 8 years of college tuition kept us scrimping and economizing. But now both kids have graduated, gotten decent starting jobs, and they are finally off the books. For the first time in years, we had some disposable income. So, we had booked a room at the historic Jacht Huis Inn and Spa. \n\nThe Jacht Huis was the former hunting lodge for a wealthy robber baron from the gilded age. The two square miles of virgin Appalachian forest surrounding the lodge had been turned into a state park many years ago, but the lodge has always been privately owned and the recent addition and renovations to the historic lodge by the new owners have been very favorably reviewed. The new rooms have a fireplace and jacuzzi while the historic rooms have been refurbished (all with ensuite bathrooms and balconies) and outfitted with late 19th century antiques and art. We booked a 'jacuzzi room' and were really looking forward to some biking, some canoeing, partaking in the award-winning cuisine and, I hope, more than a little romance. \n\nThe Jacht Huis was situated on a forested hillside overlooking the confluence of two rivers and provided a panoramic view of the vibrant autumn colors of the surrounding forest. Next to the river was a picturesque two-lane country road. Truly breathtaking. \n\nWe started to remove our bikes from the car rack, when two women exited a small shed near the parking lot and walked toward us. Both were our age, perhaps a bit younger, but remarkably well preserved. I am 6-2 and one was nearly my height, willowy, blonde with Scandinavian features, and small breasts with pointy nipples that could be rather easily discerned beneath her blouse. The other was a little shorter than Sophie, 5 foot 6 or so, athletically built with an olive complexion, dark hair, Mediterranean features, and a perky bounce to her step. They gave us a key on a heavy chain and told us that they were told to put their bikes in the shed and that we could do the same. They told us to turn in the key when we checked in. We thanked them and they went to the only other car in the parking lot with a bike rack to retrieve their suitcases. Both women were stunningly beautiful for their age. The svelte, leggy, blonde looked great from behind in her capri pants but the shorter one had the most perfect ass I had ever seen on a woman of any age. \n\nSophie saw me staring and said, \"Put your tongue back in your mouth and help me remove the bikes and unload the car.\" \n\nAfter checking in and then unpacking, we toured the grounds near the Inn and decided to take the hiking trail down to a small restaurant about a mile away near the confluence for lunch and a drink. As we were finishing our lunch, the two Sirens from the parking lot walked by our table on the veranda. We exchanged pleasantries and commented on the beauty of the day and view of the river. \n\nSophie pointed out that I was I was again staring at their backsides as they walked past us, and she suggested that, \"They are probably a couple.\" \n\nWe walked the uphill mile back to the Inn, had a 'toes up' for an hour or so in our room, and then decided to change our clothes for our 7:30 dinner reservation at the Inn. My plan included a few glasses of wine in the quaint pub located in the room adjacent to the Inn's restaurant, get Sophie a bit tipsy, enjoy a wonderful meal, and then have a good romp in the hay. Sophie seemed to be more than willing and had been giving little signals all day that she was in the mood. She even squeezed and pinched my butt on the walk back from the river and she didn't swat my hand away when I returned the favor and then let my hand linger and massage her butt a bit. She even suggested that I give her a back-rub this evening. Everything about the Inn and the surrounding forest was better than advertised...and we caught the peak of the autumn colors. Truly a sensual setting. \n\nWhen we arrived at the cozy pub, there was real wood fire in hearth...perfect for the evening chill that was already descending. We took the last of the seven rustic oak tables. As our bottle of wine was arriving, the Sirens stood at the door looking for an open table. \n\nSophie saw their predicament and waved them over and said, \"You are welcome to join us.\" They happily agreed. I motioned to the waitress to bring two more wine glasses as we made introductions. \"This is my husband George and I'm Sophie.\" \n\nThe dark-haired Siren smiled and replied, \"I'm Angela and this is Ingrid\". \n\nOver the next hour and half, we killed two bottles of wine and the women talked non-stop. Sophie told them of our plans to bike down the River Road for nine miles the next morning to a picturesque town with a couple of art galleries, a couple of interesting restaurants, and an historic town square. Sophie had clearly done her internet planning and invited them to join us on the ride. The Sirens quickly agreed. Angela and I both stated that an 18-mile round trip was at the upper limit of our interest in biking but Ingrid and Sophie, who were more practiced riders, made tentative plans to do a larger bike loop the following day. \n\nAs the wine flowed and the women chatted, I learned that Angie and Ingrid were teammates on the same college volleyball team as well as roommates for their sophomore through senior years in college and lifelong dear friends. Angie had two kids that were now adults and one was married with a child. Her husband died unexpectedly of heart attack five years earlier. Ingrid had two boys. Both living the good life on the West Coast and enjoying their bachelorhood. Ingrid divorced four years ago when her husband had a sordid affair with a female politician that made the local papers. Ingrid got the house and a sizable sum of money. According to Angie, Ingrid's house is spectacular and situated in an established wealthy neighborhood. \n\nAt that time of Ingrid's divorce, Angie was newly widowed and living in a town about two hours away from Ingrid and working as a hospital operating room nurse/technician. When a job opened-up at a hospital near Ingrid, Ingrid insisted that Angie sell her house and move in with her. Both of Angie's children were out of the house and she was thinking about downsizing anyway. The upkeep and yard work were too much, especially given her long hours at the hospital. Angie said with a laugh, \"Ingrid was rattling around in her mansion like a bee-bee in a boxcar.\" They were thoroughly enjoying being roommates again.\n\nMy job during this chatter was to fill glasses, nod, and smile occasionally. Soon, we were all decidedly buzzed, laughing too loudly, and smiling too broadly. The Sirens seemed to be very close. They finished one another's sentences and frequently touched one another during their conversations. During one of the rare lulls in the conversation, I asked, \"Are you a couple?\" \n\nImmediately three things occurred simultaneously. Sophie kicked me in the shin.\n\nAnd Angie said, \"Yes!\"\n\nAnd Ingrid said, \"No!\"\n\nAngie and Ingrid looked quickly at each other and simultaneously, \n\nAngie said, \"No!\"\n\nAnd Ingrid said \"Yes!\"\n\nI cocked my head and said, \"Ooookaaay, that clarifies things\" and we all laughed. \n\nAs I refilled the glasses, Angie said, \"This probably deserves an explanation.\" \n\nAccording to Angie, they were just roommates in college and probably the only girls on the volleyball team who didn't experiment with same sex relationships, but such things were not as open in the late 70's and early 80's. When Angie moved in with Ingrid three years ago, they each had occasional dates with single men but the pickings were rather slim. About a year later, Angie started going out regularly with a guy named Bob who was a CPA. She even spent the night with him after some dates and they did a long weekend in NYC together. Ingrid figured that Bob was getting serious and they discussed what Angie might do if Bob proposed marriage. \n\nAngie told her that, \"Living with you would be more fun than living with Bob and that sex with Bob was good but nothing special.\" \n\nIngrid, who was clearly tipsy, chimed in saying, \"This means he didn't give her ass enough attention.\" \n\nAngie stood up, turned her ass toward us and said, \"He just wouldn't take any hints, or worse, he didn't have any interest in my bottom.\" \n\nSophie said, \"You better sit down before George's eyes pop out!\" \n\nI exclaimed, \"Was Bob blind? Gay? Or just pathologically boring?\" \n\nAngie was clearly pleased that I appreciated her derriere and wiggled it a couple of times. As Angie sat back down, she continued her explanation as to whether they are a couple. Angie said, \"I told Ingrid that the only part of my relationship with Bob that I would really miss was the long cuddle after sex. But, the actual sex and my climax's were much better with my toys than with Bob.\" \n\nIngrid then continued the story, \"I told Angie that I too missed the cuddling and pillow talk after sex. My toys are great, but they aren't very cuddly!\" \n\nAngie quickly added, \"Ingrid has every hand-held sex toy known to womankind and does so much business with EverReady that I bought stock in it.\" \n\nAngie went on with the story. \"So, we decided to cuddle after we separately enjoyed our toys in our rooms...but getting the timing right was awkward. Eventually, whoever finished first would assist the other to finish. At first, the assistance was limited to some petting and kisses. Then later we added fingers or a second toy, and eventually, there were no holds barred. Soon, our 'alone time' evolved into 'together time.' So, to answer your question, we are not a couple, we are lifelong friends who have recently added benefits.\" \n\nSophie and I were surprised by their openness and honesty. Ingrid noticed our astonishment and said, \"This is the first time we have admitted our 'friends with benefits' relationship to anyone. Even our children and closest friends have no idea. I guess we are out of the closet. But what the hell! This works for us, and our friendship has flourished. Neither of us have sworn off guys, but I must admit, Angie really knows how to push all of my buttons!\"\n\nWe shared a table at dinner, ordered more wine and the Sirens thought that I needed a half-dozen oysters as an appetizer. I told them that \"Oysters were overrated as an aphrodisiac.\" When asked why, I told them, \"Last Saturday night I ate six and only the first five worked!\" Angie was taking a drink of water and laughed so hard that water came out her nose. Ingrid almost choked and I was pleased that I had found a new audience for such an old joke. \n\nSophie told the Sirens, \"Don't encourage him by laughing at what our kids called 'dad jokes' ...which rhymes with 'bad jokes'.\" \n\nAfter the main courses, we all shared a piece of cheesecake and the women made a great show licking the rich dessert from their spoons. Angie winked at Sophie and slurred, \"If that sixth oyster works and you need some help tonight, let me know.\" \n\nIngrid said, \"What about me?\" \n\nAngie responded, \"I thought you were recharging Big Bart's batteries.\"\n\nSophie looked at the Sirens and said, \"Big Bart sounds fun too. Let me know when it is my turn with him!\" \n\nI informed them, \"Sophie has a bit of a toy fetish, too.\" Sophie slapped my arm as I motioned for the check.\n\nOn the way, to our room Sophie asked, \"Did you enjoy having two attractive women flirting with you?\" \n\nI replied, \"There three attractive women flirting with me and I loved it. Did you like having two attractive women flirting with you?\" \n\nSophie thought for a second and asked, \"Do you really think they were flirting with me too?\" \n\n\"Wellll\", I said, \"the three of you did stare at one another and make great use of your tongues when you lapped the cheesecake from your spoons. I thought that was pretty suggestive.\" \n\nI opened the door to our room and before the door even closed, we were snogging like teenagers. Soon Sophie snaked a hand below my belt and urgently stroked my dick through my pants. I slipped my hands into the back of her pants, cupped her ass and then ran my fingers between her legs. She was positively steamy. Sophie humped my fingers a few times before pushing me away. \n\nShe told me to turn on the gas fireplace and turn off the lights. She retrieved a small velvet bag from the bathroom containing her 'vibrating egg,' massage oil and lubricant. She then opened the drapes, letting the nearly full moon shine into the room. In the moonlight, she did a slow strip tease revealing her new and rather sexy lingerie before encouraging me to remove them. She then crawled onto the bed and sprawled out with her face down.\n\n\"Still interested in giving me a backrub?\" she asked. \n\nSophie maintains that I give a superior massage and I enjoy giving them as they always end in enthusiastic sex. Sophie inserted the vibrating egg into her pussy, and I straddled her legs and poured oil onto her back. As my hands stroked and kneaded her neck and shoulders, Sophie cooed, \"That's wonderful!\" \n\nI worked my palms between her shoulder blades and down the sides of her back while my fingers massaged the sides of her breasts and my fingertips lightly tweaked her hardened nipples. I marveled at Sophie's beauty. At 5 foot 8, 150 lbs. she wasn't as willowy or striking as Ingrid. Nor was she as curvaceous and perky as Angela but her avid gardening, biking, yoga and reasonable diet kept her fit and Miss Clairol kept dark blonde hair as youthful as the day we met. Most importantly, she was young at heart, adventurous, and willing to try new foods, new theater and music, explore new ideas, and she was uninhibited in bed. Moreover, we were great friends with a long history who knew, and accepted, one another's foibles. We had no secrets and were confident in our love. I found this to be an immense turn-on even after 33 years of marriage. \n\nAs I massaged her lower back, soft moans escaped her lips and her hips subtly rose to meet my full mast dick. I dribbled more oil onto her bottom and palmed and massaged her globes. I then slid my hands forward to shoulders once again which caused my dick to slide between the cheeks of her ass. She cooed and lifted her bottom imperceptibly to meet me. I could feel the vibrations of the egg in her pussy. Each time I slid my hands from her ass to her shoulders, my cock slid from her pussy lips through her ass cheeks. Again, I palmed her ass but this time I let my thumbs massage the rim of her pucker. Sophie lifted slightly and her rosebud opened a bit. I slid my left hand down to the entrance of her pussy and it opened and swallowed my thumb which joined the vibrating egg in her pussy. The fingers of my left hand reached down and teased her clit as my thumb pumped slowly in and out of her pussy. \n\nSophie was climbing rapidly toward climax when she turned beneath me onto her back. I was still straddling her legs and she leaned forward and swallowed my dick whole, gently massaged my balls, and she slid an oily finger into my ass. She looked into my eyes and requested that I make this 'a deluxe backrub' which was her way of asking for anal sex. \n\nI started to reach for the lubricant and Sophie said, \"Use your tongue,\" and got onto all fours and dropped her head to mattress. \n\nI got behind her and used my palms to separate her cheeks, blew softly on her rosebud, then took several long firm tongue laps from her pussy to her rosebud before working my tongue around and around the rim. I then buried my tongue inside her. Both holes were completely open as my thumb once again slid into her pussy and my tongue worked her ass. She pushed back onto my face. As I lapped and poked with my tongue. I could feel the egg vibrating through the walls of her ass. \n\nHer hand went to her clit and started to rub. I pushed it away as I did not want her to orgasm until my dick was buried in her velvet confines. Sophie, in an uncharacteristic outburst of vulgarity, pushed my face from ass and urged me to slam my dick up her ass. As she sunk down to mattress, she reached back and pulled her cheeks apart. \n\nI paused and admired the wanton beauty as I squirted massage oil onto my dick and her open ass. I then slid my well-oiled cock smoothly into her well-oiled ass. She reached her hand down between her stomach and mattress and began to work her clit. This raised her ass to a perfect angle to plow her...and plow her I did. The egg vibrating through the walls of her pussy added to my and her sensations. \n\nSoon, Sophie's legs straightened, and her toes curled, her whole body started to vibrate and squirm, and I lunged forward and shot the first volley of cum deep into her bottom. She moaned and when I plunged into her again and shot the second volley into her ass. Sophie panted, \"Oh god, it's so good. I'm cumming, don't stop.\" Her moaning filled the room, and when I unleashed the third volley her squirming nearly dislodged me. Her entire body tensed, and her ass, with me on top, rose 8 inches off the bed and convulsed as I pumped a final spurt deep into her. We then collapsed onto the bed. \n\nAs our breathing slowly returned toward normal. I rolled onto my back and Sophie quickly pulled the egg from her pussy and turned it off as it was now just too much for her. \"I may have to borrow extra batteries from Ingrid,\" she said.\n\nI replied, \"THAT was a great fuck! I hope I can still peddle a bike tomorrow.\" \n\nDay 2\n\nWe met the Sirens at 8:30 for breakfast and ate heartily. Sophie and I then returned to our rooms, filled our water bottles, and quickly changed into our biking gear. Angie and I loaded our bikes onto my car, and we drove down to the river road as we did not want to bike an additional mile up a good sized hill at the end of a long (for us, at least) ride. Ingrid and Sophie, who were more experienced riders, wanted to start and end at the Jacht Huis Inn. \n\nOur ride along the river road was glorious. It was a bit brisk when we started, but near perfect temperatures for the rest of the day. Twice, large gaggles of geese passed low overhead in V formation. We stopped for water break near a small bridge, where a creek emptied into the larger river, and saw an active beaver dam 50 yards up the creek. \n\nThe views of the river and the autumn colors were truly breathtaking although, I must admit, that most of the time my eyes were focused on the backsides of the three women riding in front of me. Ingrid and Sophie often rode side by side and chatted, then Angie, and then me. I was convinced that Angie was teasing me as she would periodically stand up to peddle and wiggle her ass back and forth as she peddled. \n\nThere was no really no reason to stand up to peddle as the river road had no real hills. One time when she was standing up and peddling, she looked over her shoulder and caught me staring at her wiggling tush. I gave her the OK sign with my thumb and forefinger and then pursed my lips for a kiss that I directed toward her ass. She laughed, did a couple of exaggerated fanny wiggles and then sped up a bit to join Ingrid and Sophie. \n\nShe told them that I was staring at their butts. When they looked over their shoulders at me, I let go of the handle bars, raised my hands above my head, and bowed toward them like a worshipper in a Mosque. After a brief chat among themselves, all three stood up to peddle and wiggled their asses at me. I let go of the handle bars again with the intention of bowing again but almost lost control of the bike and came close to wrecking. ",
        "They laughed and Ingrid said, \"Keep your eyes on the road and your mind out of the gutter!\" which prompted another laugh from them. \n\nThe town of Barton's Run was an interesting mixture of millennial chic and backwoods funky. There was an art gallery where a guy who looked like Santa Claus in bib overalls was using a chain saw to carve owls, bears, eagles, and beaver out of four-foot logs. The carvings were quite good, and it was interesting watching him do both the rough and fine carving. In another shop, five female artisans made bird houses and various kitchen utensils out of dried gourds while new age electronic music played softly in the background. On the front page of the local paper which I purchased at a vegan restaurant and coffee shop, there was a picture of the high school homecoming king and queen. \n\nWe ate elk burgers and smoked trout for lunch at the Elk and Trout pub, which had a sun splashed patio overlooking the river. There we watched a kingfisher dive repeatedly into the river for minnows then return to his perch. As we were leaving the Elk and Trout, Angie was walking backwards while talking effusively, and stepped off the curb awkwardly and wrenched her back a bit. \n\nDuring the hour and a half return bike trip, we stopped for water, took scenic pictures, and we think that we saw river otters near the opposite bank. I could also see that Angie was frequently rubbing her lower back, but it didn't stop her from occasionally teasing me with her stand-up peddling and fanny wiggles.\n\nWhen we got back to the Inn, Ingrid and Angie joined us in our room for a beer and some cheese and crackers. The ladies decided that we should take a two-hour rest, and then have dinner at 6 PM. After dinner, the ladies would then use the jacuzzi in our room, as the jets would soothe Angie's lower back. \n\nSophie decided that I would be exiled to the billiard-dart-TV room near the pub and restaurant \"to watch some game on the tube\" because none of the women brought bathing suites. \n\nWhen Ingrid and Angie returned to our room at 20 till 6, Ingrid announced that they had one more confession to make, \"We brought a joint and wondered if you would like to smoke it with us?\" Sophie and I thought it would be a perfect addition to an already splendid day. So, we all went out onto our small balcony to watch the sunset and to get high. \n\nAt dinner, I had a beer, but the ladies ordered a bottle of white wine. After dinner, they took the remaining half bottle back to the room to drink while lounging in the jacuzzi. While I would have gladly sold my soul to join Sophie and the Sirens in the jacuzzi, it was still pretty nice to have a good buzz, a cold brew in my hand, and Game Two of the World Series on the tube. Moreover, I was hopeful that Sophie would be motivated by our 'splendid day' to have another evening of inspired sex. \n\nIn the bottom of the third inning, I received a text from Sophie, \"Bring another bottle of Pinot Grigio to the room,\" followed by a second text that read \"Please.\" \n\nWhen I got to the room, I knocked and said, \"Room service,\" which gave them a few seconds to 'get decent' and then strode into the room. The fireplace cast a warm glow to the room and the humidity from the jacuzzi gave the room a feel not unlike a tropical evening. As my eyes adjusted to the dim room, I noticed only two heads in the jacuzzi. Sophie reached out for the wine bottle and then pointed to the bed. Angie was face down and naked on the bed with a small towel over her hips. \n\nSophie said, \"The jacuzzi jets helped her back a lot but she now needs a good backrub.\" \n\nAngie chimed in, \"Sophie has been raving about your skills as a masseur. Hope you don't mind.\" My mind went into overdrive. Don't mind! Hell, I would turn over my 401K to run my hands over her for an hour or so! \n\nI also stole a quick glance at Ingrid's tits...they were shaped like ski slopes capped by pencil erasers. Her pointy nipples were clearly aroused. Sophie's more modest nipples, but larger breasts, also seemed to be aroused. I fought the urge to reach out and cup Sophie's tits while latching my mouth onto Ingrid's beckoning nipples. Sophie motioned with her eyes toward the bed. I turned and started to crawl onto the bed. \n\nSophie barked, \"Take off your dirty shoes for god's sake and lose the pants too. They are the only pair of dress slacks that you brought on the trip and you are going to get massage oil all over them.\" So, I dropped trou. I was grateful that my initial response to the breasts on display in the jacuzzi made my 6 and a half inch package look quite acceptable in my underwear. \n\nI straddled Angie's legs between her knees and towel-covered ass and poured some massage oil onto my hands to warm it up. I then did a slow lap with my hands over her back and quickly found a large knot in her lower back to the right of her spine. \n\nAngie whispered, \"Yes, that's it...you're on it\" and I concentrated my efforts on that spot. She yelped slightly when I occasionally dug into the knot. \"God, that hurts so good,\" she mewled. As the knot loosened, I worked my hands on the trapezius muscle up to the shoulders and then back to the now receding knot. Angie whimpered, \"That's sooo good, don't ever stop. I tingle all over.\" \n\nAfter 20 minutes, Angie seemed to melt into the bed and the knot was almost completely gone. I was delighted that I was able to provide her with some relief. I was completely into the therapeutic aspect of my duties. Without thinking, I rolled Angie onto her back and bent one leg so that her foot was near her knee and pushed her bent leg over the straight leg. Her backbone rippled and cracked, and I repeated this with the other leg. \n\nAngie looked at me with her big brown eyes and said, \"Holy shit, I've experienced a miracle cure! My back feels great, every tension is gone. I feel like jello, actually horny jello.\" \n\nThat is when I noticed that the towel was no longer hiding anything. Angie's legs were slightly parted. Her pussy was bare except for a thin landing strip of dark hair, and her labia was damp. Then my eyes traveled upwards to her dark areolas and puffy nipples, and eventually to her wanton glassy eyes. \n\nI looked at Sophie and Ingrid in the jacuzzi, they were side by side and kneeling at the near edge of the jacuzzi and facing the bed. The bubbles were frothing at the surface between their bodies and the edge of the jacuzzi causing their breasts to bounce and jiggle. I could tell that the jet was aimed right at Sophie's pussy. Ingrid's arm was draped over Sophie's back and her hand was on Sophie's ass. Although I couldn't see Ingrid's fingers, the movement of her hand suggested that her fingers were busy stroking Sophie's asshole and pussy. \n\nSophie then shocked me by saying, \"I think Angie needs a 'deluxe' back rub!\" It took a second to sink in, but I realized that Sophie had just given me permission to not only have sex with Angie but to have anal sex with her! \n\nAngie then pushed me off my knees and onto my back and started to crawl over me. Obviously, Angie knew the meaning of a 'deluxe back rub.' As Angie crawled over me, I stopped her when her tits and dark puffy nipples were hanging near my mouth. I feasted on them. \n\nEventually, Angie straddled my ears, lowered her pussy to my mouth, leaned forward and fondled, stroked, licked and sucked my cock to its fullest extent saying, \"You are the perfect size for what I want you to do with me.\" I didn't think it was possible, but my dick got even harder.\n\nI worked my tongue into her pussy and lapped as it opened. I then nibbled gently on her clit until the pearl hardened, and finally I raised my head slightly to view her magnificent ass. Angie lowered her hips a bit. I lapped her rosebud and worked her rim with my tongue until it loosened and opened slightly. \n\nAngie cooed, \"I love your tongue in my ass. This is truly deluxe!\"\n\nAfter several minutes, Angie scrambled off me, got onto her hands and knees, and said, \"Get your dick nice and wet in my kitty.\" I got onto my knees behind her and buried my dick in her pussy in one smooth stroke as Angie said, \"Oh yes, so goddamned nice, pound me hard!\" as I built up speed and started to slam into her. \n\nI had lost track of Sophie and Ingrid for a while, but while on my knees, I saw that they were out of the jacuzzi and drying each other with towels. When dry, Sophie got onto her back and maneuvered and scooted herself under Angie. When situated, she lapped at my balls while Angie suckled Sophie's tits.\n\nSophie's legs dangled over the edge of the bed and Ingrid dropped to her knees and began to lick and finger Sophie's pussy and ass. Sophie pulled my cock out of Angie's pussy and placed it at the entrance to Angie's ass. I slid it in slowly as I wanted to relish every moment of this paramount experience. \n\nAngie dropped her pussy onto Sophie's mouth. I looked down and saw my dick sliding in and out of Angie's perfect ass. My hands palmed her globes which shook and jiggled each time my body bounced against those heavenly cushions. I also saw my wife eagerly lapping at a cunt for the first time in her life. And I saw Ingrid bury two fingers up Sophie's ass while nibbling and licking and rapidly flicking her clit. \n\nSophie was the first to cum. She opened her mouth to scream but nothing came out but a rush of air. Then her legs clamped tightly around Ingrid's head and she pumped her hips up and down posting on the two fingers in her ass and forcing Ingrid's tongue to focus on her clit. Sophie then collapsed and slid off the edge of the bed. She and Ingrid kissed deeply. \n\nWith Sophie no longer under her, Angie dropped her head to the mattress and urged me to pound her harder. The sight of her luscious tush twerking on my dick combined with the tight velvet confines of her ass soon had me on the brink. When Angie slammed her knees together and her ass spasmed around my cock, I began to unleash deep within her. I reached around and grabbed her tits and pulled her to her knees and pumped the remainder of my load into her welcoming ass. I held her tightly as her body quivered and shook repeatedly. Eventually, she turned her head toward me, and we kissed. \n\nSophie then urged Ingrid onto the edge of the bed with her face up and her long legs touching the floor. I bent down and my mouth latched onto a long, hard nipple. My hand fondled her other breast and my fingers tweaked and rolled her nipple. Each time I tugged on them she moaned and when I lightly pinched her nipple she whispered, \"Harder.\" I was eager to oblige. \n\nAs I Hoovered and stretched her nipple with my mouth, I saw Sophie's mouth engulf Ingrid's clit. Sophie looked at me and said, \"Her clit is as large as her nipples. It's like sucking on a little cock.\" \n\nAngie was now kneeling beside Sophie and spreading lubricant from her wrist to her finger tips. When Angie's hand was good and slippery, she worked two, then three fingers into Ingrid's pussy as Sophie continued to suck and lick Ingrid's clit.\n\nIngrid breathlessly urged Angie for \"More\" and Angie soon worked four fingers into and out of her pussy as Ingrid humped her hips against the four fingers. \n\nAngie looked at Ingrid and asked, \"More?\" \n\nIngrid responded, \"Oh god yes, yes, give me more, I want it all.\" Angie curled her thumb into her fingers and slowly slid her entire hand into Ingrid's pussy and held it still for a few seconds. Angie then started to slide her hand back and forth in Ingrid's pussy. \n\nAngie's other hand still held the tube of lubricant and she squirted some onto Sophie's fingers. With her mouth still fellating Ingrid's clit, Sophie slid first one and then two fingers into Ingrid's ass. I tugged and stretched her nipples with my mouth and fingers. Ingrid's head pressed into the mattress and her back arched and then her legs began to vibrate uncontrollably as she moaned, \"Oh my fucking god, oh god\" and then shouted, \"yes, Yes, YES\" and clamped her legs together around Angie's arm. \n\nAs Angie slowly slid her hand out of Ingrid's pussy, she instructed Sophie to keep licking and sucking. Angie quickly slid two fingers back into Ingrid's pussy and rapidly massaged her g-spot. Ingrid's feet shot toward the ceiling, as she frantically pushed Sophie off her clit, she gushed and squirted onto Sophie's and Angie's faces. Ingrid then clamped her legs together as her whole body convulsed, and finally rolled to her side and into a fetal position. Ingrid's whole body spasmed repeatedly for thirty seconds or so as Angie, Sophie and I gently ran our hands over her back and side. \n\nAngie said, \"That was a killer orgasm!\" \n\nIngrid replied, \"The best EVER! I've never cum so hard. I'm so embarrassed. Thank you, thank you.\" \n\nAngie hugged me and placed little kisses on my neck, chest and nipples saying, \"Your deluxe backrub was extraordinary. Sophie is a very lucky lady.\"\n\nAs the four of us hugged and cuddled, Sophie said, \"I had a night of many firsts and a mind shattering orgasm that left me limp, but Ingrid's explosive orgasm was truly a site to behold!\" We all laughed, kissed, cuddled and eventually said goodnight.\n\nDay 3:\n\nAt breakfast the next morning, Angie and I lobbied for a canoe rental from Jack's Canoe and Kayak Rentals. Ingrid and Sophie, however, wanted to load the bikes onto the cars; drive to Barton's Run and the do a 31-mile loop that was described in a brochure as the 'most beautiful country road bike loop in the Eastern US.' But 31 miles seemed excessive to me, even if the loop is relatively flat. Besides, I was secretly hoping to save some energy for the evening and whatever adventures that may bring. Ingrid and Sophie, who were far more avid cyclists than Angie and me, tried to convince us to 'challenge ourselves'. \n\nAngie said, \"I'm already saddle sore from yesterday's ride. I'd rather save my ass for something more fun.\" \n\nI chimed in, \"I like your attitude and couldn't agree more.\" So, we decided to split into two groups of two for the day's activities. \n\nAfter breakfast, Sophie and I returned to our room to change our clothes. I put on a pair of hiking pants that could zip off into a pair of shorts, a T-shirt, and a windbreaker. As Sophie was struggling to pull on her spandex biking shorts, I came up behind her and rubbed my dick against her panties and squeezed her breasts. She turned her head and we kissed. She asked, \"Are we playing with fire? We've never done anything remotely like last night.\" Then she quickly added, \"But it all seemed so organic and natural and FUN last night...not at all dangerous to our marriage or relationship.\" \n\nI tried to ease Sophie's mind by saying, \"I would not make love to Angie, or any other woman, without obtaining your consent, but I can't guarantee that Angie and I won't do some teasing and flirting.\" After a few more kisses and some petting, we agreed that we should just enjoy the day and be open to any adventures that might occur in the evening.\n\nAfter a few moments of silence, Sophie said, \"I can't believe that I licked and fingered both Angie and Ingrid. Did that bother you?\" \n\nI thought for a moment, then said, \"I was a bit surprised by your enthusiasm at it, but it really didn't bother me. The fact that you were really enjoying it, added immensely to my pleasure. As you said, it all happened so organically.\" \n\nSophie reached back and rubbed my semi-hard cock through my pants for several seconds, then stepped away and said, \"Save that for tonight. I'll take good care of it, even if they are uninterested in an encore performance.\" \n\nI was pleased to hear that Sophie was not opposed to an 'encore performance.' I filled a couple of water bottles, took a few granola bars and stuffed them into a small backpack. We then headed down to the reception area to meet the Sirens. \n\nIt turned out that Jack's Canoe and Kayak Rental was managed by a girl in her early 20's named Lois. Lois and I loaded a canoe onto a truck, and she drove us upstream to a landing. She said it's a 3 to 4-hour downstream paddle back to Jack's. Lois was about 5 foot 3, with a pale complexion and henna colored hair which she pushed back over her ear revealing multiple ear piercings. She wore a scoop neck T-shirt which showed off her peach sized breasts. She was clearly bra-less as her perky breasts bounced and wobbled as she walked. \n\nHer breasts were also clearly on display as we unloaded the canoe, paddles, and life jackets from the truck. When Lois and I bent at the waist to position the canoe onto the landing, Lois caught me staring down her blouse at her tits. She whispered in a voice loud enough for Angie to hear, \"See anything that you like?\" \n\nI responded, \"Sorry, and yes, I do see a couple of things that I like...the perky and firm breasts of a lovely young woman.\" \n\nLois caught Angie's attention and said in a voice loud enough to be overheard, \"What would your wife say if she knew you were looking at my tits?\" \n\nI replied, \"My wife is off with Angie's girl-friend to god knows where, but Angie probably appreciates your brazen honesty. Personally, I thank you for reminding this older gentleman of the perfection of a firm, youthful tit.\" As her breasts were still on display from our kneeling position, I startled myself by asking if I could feel them. She leaned her torso a little closer to me and I reached out with my left hand and fondled her hanging tits for several seconds. I withdrew my hand and then said, \"thanks, now let's get this puppy into the water because I want to stare with impunity at Angie's ass for the next for the next 3 hours.\" \n\nLois replied, \"The river and autumn leaves are worth a look too.\" And off we went.\n\nWhen we got onto river and fumbled our way into a reasonable paddling rhythm with Angie 'fore' and me 'aft', we waved goodbye to Lois as she drove back to Jack's Canoe and Kayak Rental. As we drifted downstream, I said, \"I can't believe that I actually grabbed a Lois' tits within minutes of meeting her. I have NEVER done anything like that... never even seriously contemplated doing anything like that. In this #MeToo era, perhaps the County Sheriff will be waiting for me when we get back to Jack's...or maybe Jack will just bloody my nose. But,\" I added, \"it would be worth it.\" \n\nAngie replied, \"You didn't just grab. You asked politely, and she consented. For a large fee, I would testify to that in court.\" She then turned her torso toward me (we were both facing the front of the canoe), lifted her T-shirt and lowered the cups on her pale orange, lacy bra. She asked, \"Are her tits really that much better than mine?\"\n\nI said, \"Let me see. Lift them up with your hands.\" With a devilish grin, she complied with my request. I then suggested that she should fondle and arouse her puffy nipples. Again, she complied while staring directly into my eyes for several seconds as she tweaked her nipples. \n\nEventually, she demanded, \"Well, are they?\" \n\nI pondered for a few more seconds, then said, \"Yours are bigger and your puffy nipples are spectacular but Lois' tits have a youthful firmness. You should keep in mind that I never said that Lois has better tits than you, I only commented favorably on their firmness. You didn't want me to give the young lady an inferiority complex, did you? Lois extended a favor to me, and I thanked her and returned a compliment. It would have been rude to mention that your tits are far superior to hers.\" \n\nAngie readjusted her bra and said, \"You are quite the gentleman.\" She then turned around and once again picked up her paddle. \n\nAbout an hour later, we spied the river otters near the shoreline and glided over to get a closer look. We took our phones out of the water tight containers to take some pictures. We each snapped dozens of shots hoping to capture this magical moment. Mostly our pictures were near misses...lots of pictures of ripples in the water where an otter had just submerged...or pictures of an otters back that could easily have been a floating branch or twig...but Angie got one super picture which she texted to me. ",
        "It showed an otter on the shore getting ready to slide into the water next to a floating yellow, red and orange maple leaf which was just behind the face of an otter sticking out of the water and watching us closely. The water surface was glistening with the dappled sunlight of the overhanging trees. I raved about the picture and noted \"It is definitely suitable for framing.\" I then added, \"Great art always makes me horny.\" \n\nAngie responded, \"The creative process has gotten all of my juices flowing!\"\n\nWe texted the picture to Sophie and Ingrid. A while later, we received a return text from Sophie. \"Wow, very neat!\" followed by some emojis that I didn't understand. Below the text was a picture of Ingrid standing next to her bike overlooking fields of goldenrod and purple asters on either side of winding country road, with cows grazing on a hillside pasture near a barn and silo, and brightly colored trees at higher elevation. If it was a painting, it would just be too cheesy to put on a wall. But with Ingrid in the picture, it demonstrated that the beauty of the countryside was real. We responded with 'ooohs and aaahs' and then proceeded downstream.\n\nWhen I grabbed some water and a granola bar from my backpack, Angie twisted around and said, \"Pass me some water and snacks, too.\" \n\nI responded, \"What's the magic word?\" \n\nInstead of saying 'please', Angie raised up slightly from her seat, pulled down her shorts revealing a sexy pair of pale orange 'boy shorts' that matched her bra and said, \"Is this enough get me a granola bar?\" \n\nGod did she have a perfect bubble ass. I made a licking motion with my tongue and said, \"No, but it makes me hungry enough to eat a second granola bar. Boy, are they good and I was parched. The cool water really hits the spot.\"\n\nShe then peeled down her panties, reached back and separated her glorious globes and exposed her pussy and ass to me. When she looked over her shoulder, my mouth was agape, and my eyes were wide and laser focused on her display. She made an oohing sound, turned her head forward and wiggled her ass slightly. I swear that her ass winked at me. I quickly snapped a picture before she turned her head again to look at me. \n\nWhen she did turn toward me, I reached into the backpack, saying, \"Yeah, that's definitely worth a granola bar and bottle of water!\" and tossed them to her. A few minutes later, I texted her the picture of her ass with the caption, \"Full Moon over an Appalachian River.\" \n\nWhen her phone dinged and she looked at the picture and text, I could tell that she was surprised that I had taken the picture. She examined it for a few seconds, and then said, \"Maybe tonight you will get a chance to see the dark side of the moon!\"\n\nWhen we finally paddled into Jack's after 3 hours on the river, we were low on water and ravenous. I helped Lois pick up the canoe and carry it to a rack. Before bending down, Lois looked at Angie and winked. My eyes were focused on her dangling peach breasts and said, \"a vision of loveliness, would it be too much to ask if I could wrap my lips around them once?\" \n\nLois looked at me and said, \"It would, but thanks for asking.\" \n\nAngie kicked me in the leg and said, \"No young women wants a lecherous old man gawking and pawing at her.\" \n\nOver lunch at the Elk and Trout, I asked Angie if it was true that no woman wants a lecherous old man taking an interest in her. Angie replied, \"No Young Woman wants that but women over 50 are less particular, especially if the lecherous old man is not horribly overweight, has some hair, and can still get it up.\"\n\nI whooped and said, \"check, Check and CHECK! That is so reassuring as I am really hoping that Sophie would let me have another go at your ass tonight.\" \n\nRight then, we got a text with two pictures...one of a parking lot with 7 grungy pickup trucks, two bicycles, and a sign that said, 'Claude and Emma's BBQue' and a second picture of two plates with giant mounds of pulled pork, a massive platter of curly french fries, and two bowls brimming with Cole slaw. The food platters sat on a linoleum covered table next to napkin dispenser. Angie responded, \"That should put some meat on Ingrid's skinny ass.\" \n\nI responded, \"I wonder what a dozen guys with pick-up trucks would do to two women in tight spandex shorts?\" \n\nSophie replied to my text, \"Emma's big enough to keep 'em in line!\"\n\nAfter lunch, we returned to the Jacht Huis, went to our separate rooms to shower, and then I dozed off while checking my emails. Sophie returned some time later. Grabbed a quick shower and then crawled onto the bed with me. While rubbing my cock through my pants, she asked if I had a good day. \n\nI said, \"It was marvelous, but Angie teased me mercilessly and left me extremely horny.\"\n\nSophie sarcastically replied, \"You poor thing,\" and then added, \"but I am sure that problem will be solved later.\" She then headed out to the Sirens' room, ostensibly to check out the antiques and historic paintings that adorned their room in the historic section of the Jacht Huis. I decided to take a Viagra. \n\nI may have dozed off again while listening to an audio book and checking emails when I heard a knock on the door. I was lying on the bed in my underwear and the Viagra had given me a semi-stiffy. I thought that Sophie had forgotten her key, so I opened the door without thinking. \n\nAngie walked in, looked me up and down, smiled, and said, \"Ingrid wants to show Sophie some of her toys and Sophie sent me down to keep you company and to get you in the mood. They will be down later.\" She then stepped closer, dropped her hand to my underwear and lightly stroked my dick. \"Looks like it won't be difficult to get you in the mood.\" \n\nI put my arms around her, dropped my hands to her luscious ass, and massaged it through her tight yoga pants, and kissed her neck. After a few seconds, I asked, \"What would you most like me to do?\" \n\nAngie stepped back and I sat on the edge of the bed while she started to unbutton her blouse. I applauded and she started to do a strip tease for me. First the blouse came off. When she unhooked her bra and let it fall to the floor. She then moved between my knees and put her tits with their big dark areolas and puffy nipples right in my face. I wrapped my lips around one and after a minute or so, I moved to the other. My hands slid down the back of her yoga pants and rubbed and squeezed her ass while licking her nipples. Angie's hand moved softly over my still encased cock. Eventually, my fingers found their way to her now juicy pussy and when they were good and wet, I moved them to her rosebud and ran them around her rim. Angie then moved closer to me and we kissed. \n\nShe then backed away and turned around, bent at the waist and with her head near her knees, she pealed her yoga pants down over her ass. She looked up between her legs and said to me. \"Worship it!\" I dropped to my knees and began to kiss, nibble and lick over the entirety of her wondrous globes. Eventually, my tongue found its way to her pussy where I licked and probed until her hole was dripping and her clit emerged from its hood. I buried a finger in her pussy and dragged my tongue up to her pucker which smelled deliciously like apricots. As I licked over and around her ass, her rosebud started to open, and I circled the inside of her rim with my tongue. \n\nAngie was making the most delightful cooing sounds and whimpered, \"Oh god yes,\" and \"That's it, don't you dare stop. I need this sooo much, so heavenly.\" Her pussy was positively leaking onto my hand and wrist. \n\nAfter several minutes, Angie straightened up and said, \"Let's take this to the bed.\" \n\nShe crawled onto the bed on her back with her head dangling over the edge. She opened her mouth and I stood next to the bed and slid my entire 6 and a half inches through her mouth and into her throat. I slowly fucked her mouth while her fingers fondled my balls and my fingers tweaked and rubbed her nipples. When I leaned forward to get my fingers into her pussy, my cock came out of her mouth. She then pulled me forward until my balls rested in her mouth and she gently licked and sucked each one. When I slid my fingers out of her pussy, she tilted her ass up and brought her knees toward her chest which gave my fingers access to her rosebud. Her tongue then slid across my perineum and licked my ass. This was a first for me and god did it feel good! \n\nAfter getting my ass laved for a few minutes while my finger tip skated around the rim of her ass, Angie squirmed out from under me and got onto all fours, dropped her head to the mattress and pleaded, \"I need more ass worship!\" \n\nI got onto my knees behind her, placed my hands on her perfect globes, and pulled them apart. Her ass was gaping, and her pussy was open and literally dripping. If men have 'hard-ons,' this woman had a 'wide-on.' She was open for anything. I buried my face between her cheeks and feasted on her ass while Angie whimpered and moaned and urged me to, \"Eat it all! You're so good at it!\"\n\nJust then, Sophie and Ingrid walked into the room and witnessed Angie's wanton display. When I reluctantly pulled my face out of Angie's welcoming ass, I asked Sophie if she was all right with this. \n\nSophie replied, \"Of course, I sent her down to you.\" She then added, \"Ingrid put a vibrating dong in my ass and fucked my pussy good with her strap on.\"\n\nI confessed that, \"Angie just sucked my balls and licked my ass and now she is pleading to get reamed.\" \n\nAs Ingrid pulled her top over her head revealing her pointy nipples and ski sloped breasts, I placed my dick at the entrance to Angie's wet ass. Angie wasted no time pushing back and impaling herself. \"Oh yes,\" she screamed. \n\nAs I rocked to and fro in Angie's ass, I watched Ingrid drop her tailored trousers revealing a strap on with a realistically sized dildo. Ingrid said to me, \"Pinch Angie's tits and roll onto roll onto your back.\" \n\nI did as Ingrid instructed, and Angie was now lying face up on my stomach with my dick still buried in her ass and my hands on her nipples. Angie pulled her knees up toward her shoulders as Sophie sucked Ingrid's 'cock' getting it nice and wet. Ingrid then climbed between my legs, rubbed her dick up and down Angie's slit, and then sank it into Angie's pussy. \n\nWe lay still for a moment letting Angie acclimate to the dual invasion. Soon, Angie began to whimper as she moved her ass up and down on my cock. When she moved up, Ingrid's cock went deeper in her pussy, when she sank back down on my cock, Ingrid's dildo would roll across her clit as it pulled out. Back and forth we went for several minutes with Angie sometimes call us, \"Bastards,\" and sometimes saying, \"I have never been so thoroughly stuffed\", and eventually shouting, \"Harder you bastards.\" \n\nShe then placed her feet next to my hips and a raised up a few inches. This allowed Ingrid and I to both really slam into her. Angie panted, \"Oh yes, oh yes, oh yes...don't stop...Oh god...Yes, Yesssss, I'm cummmminng.\" She then snapped her knees together and convulsed twice and collapsed onto my chest. When Ingrid pulled out, Angie shuddered again and then rolled off my stomach and curled into a fetal position and shuddered a few more times whimpering breathlessly, \"Oh god that was good...oh god...sooo good.\" Eventually, the full body convulsions became occasional shivers, but her breathing became less ragged. \n\nSophie then piped in, \"Ingrid still needs to cum.\" She started to remove Ingrid's harness and strap on while telling me to \"Wash your dick, we're gonna need it.\" \n\nWhen I returned from the bathroom, Sophie was tightening the harness around her hips and the dildo in the harness had been replaced with Big Bart! With the strap on secured, Sophie got onto the bed on her back. \n\nAngie had recovered somewhat. She got onto her knees then began to swallow as much as she could of Big Bart, as Sophie pointed her giant 'cock' toward Angie's mouth. \n\nI crawled between Ingrid's legs and began to lap at her pussy. I took her enlarged clit between my lips and sucked on it like it was a little dick as it continued to enlarge in my mouth! Ingrid then used both hands to hold my head tight to her pussy while she moved her pussy over my tongue and mouth. She was obviously in heat. \n\nAngie then grabbed the lubricant and put a generous amount on Big Bart and rolled Ingrid onto Sophie and onto Big Bart. Ingrid and Sophie were now face to face with Ingrid on top. Ingrid's pussy was four inches above Sophie's hips with half of Bart buried in Ingrid's pussy. Ingrid slowly slid down to Sophie's hips, swallowing an impressive portion of Big Bart. Ingrid then slowly pulled her pelvis up until Bart was nearly out...and then more quickly slid back down. Each stroke picked up speed until Sophie and Ingrid were slamming together. \n\nAngie grabbed the bottle of lubricant and squirted a generous dollop onto her fingers and then worked them into Ingrid's asshole and coated it well. Angie then squirted another dollop onto her palm and coated my dick with it. \n\nI grabbed Ingrid's hips and held them still as I mounted her from behind. With Big Bart in her pussy, her ass was tight around my cock. Sophie and I soon got into a rhythm sliding into and out of Ingrid's pussy and ass. Angie straddled Sophie's head and lowered pussy onto Sophie's mouth. \n\nIngrid whimpered \"Oh god I am stuffed, This is soooo good, oh god, don't stop.\" As Angie reached for and lightly twisted her nipples, Ingrid pleaded \"Harder, harder,\" and then \"Pound me...harder...I love having a dick up my ass...I love Bart...oh god I'm gonna cum... don't stop!\" \n\nAngie then let her fingers slide to Ingrid's engorged clit and rubbed it furiously. With my dick still buried in her ass, Ingrid raised up and Big Bart slipped out of her pussy and, with Angie rubbing her clit furiously, she arched her back and sprayed on Angie's hand, Big Bart, and Sophie. Ingrid tried to push Angie's hand away, but Angie continued to rub furiously. I pounded into her ass again and shot my load deep into her. This triggered another torrent of spray from her pussy...but Angie continued to rub her clit and I plowed into her ass again and again shooting my seed. Ingrid squirted profusely and then managed to push Angie's hand off her pussy and slide forward dislodging my dick from her ass. Ingrid locked her lips onto Sophie' mouth. As multiple after-shocks rippled through her body, Ingrid panted, \"Oh jeez, oh god that was intense, I really made a mess, oh fuck that was good!\" \n\nSophie held her tightly and whispered, \"That was so amazing! You are so beautiful when you cum!\" \n\nWhen Ingrid finally rolled off Sophie, Angie removed the strap on from Sophie and scrambled into a 69 with her. They frantically licked each other into shattering orgasms while I knelt behind Angie's ran my fingers into her gaping ass. \n\nI then sprawled onto the bed, and while rubbing my hand over Sophie's thigh, Sophie took my hand and kissed it tenderly and said, \"Who would have thought that we would ever do that!\"\n\nEpilogue\n\nSophie and I had breakfast the next morning with Angie and Ingrid and all of us admitted that our three beautiful days at the Jacht Huis produced unexpected memories, and new friendships. After breakfast we hugged, said goodbye, loaded our bikes onto our cars, and then checked out and departed. On the way home, Sophie and I vowed to keep ourselves open to new sexual adventures whenever we traveled...and to do more traveling."
    ],
    "authorname": "500George500",
    "tags": [
        "anal sex",
        "fisting",
        "group",
        "mature",
        "mfff",
        "toys",
        "group sex"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/george-and-sophies-autumn-vacation"
}