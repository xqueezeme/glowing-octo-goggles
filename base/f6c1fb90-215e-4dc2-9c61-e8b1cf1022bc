{
    "title": "Witch of Rutland",
    "pages": [
        "Disturbing Content Warning: This is my submission for the 2021 Halloween Contest. It's an extreme magic-filled fantasy with gratuitous supernatural sex. If you're offended or disturbed by sex with demonic vampires, revolted by blood-thirsty vampire orgies, or annoyed by the inner monologue of a hot, sexually liberated witch, you will likely not enjoy this dirty tale. However, if you decide to read it and discover you enjoy it, please take a second to vote and maybe leave a comment. Happy reading!\n\nTwo days until Halloween:\n\nIt was official. I, Gilda Sprig, was the new witch of Rutland. I was sent to watch over the picturesque farming village so the villagers could enjoy a safe Halloween. If an area stagnates in negative energy, it could drown in plagues and supernatural attacks. I wanted the townsfolk to know a new Witch Warden had taken up residence to prevent that from happening. It was short notice, but I was there.\n\nIt didn't take much to start witch rumors and stoke the interest of the locals. A few naked wanderings along the edge of a field under a full moon did the trick. If not a witch, what else could a beautiful and mysterious woman that lived alone be? Horny. I was definitely horny, and my infatuation with cocks and cum could put a succubus to shame. It ran in my family. Sadly, my closest companion at the moment was a well-oiled ear of corn. It sorta did the job on lonely nights when an unsuspecting man wasn't available. Living alone was an ancient tradition of the Witch Wardens. We were a coven of witches trained to supervise all supernatural activity that could influence human life in the realm, and the elders claimed that living alone helped our magic and senses stay sharp. Living alone made me horny and deviant.\n\nI moved into my secluded forest cottage during harvest season. I had two whole days left to find a spirit host and gather the energy I needed to welcome the Spirit of Halloween. Halloween was the one night of the year the veil between the land of the living and the realm of the dead was thinnest. It was truly a night of great possibilities. Sadly, the harvest was exceptionally blessed that year, and most of the men were too busy to wander. They were going home exhausted and straight to bed instead of to the taverns for a drink. It was harder to lure them into the woods when they didn't wander around the town high in spirits. My body was hungry after a month of traveling rural roads to reach the village. I would have to get creative to fulfill my needs.\n\nRutland was a charming village. The cobblestone streets and storefronts were welcoming. The town square was decorated with hay-stuffed scarecrows and large jack-o'-lanterns on every doorstep. The mood was already favorable for a spirit visit in spite of the village being without a witch for the last six months. I sensed very little negative energy as I wandered into town late one night to hang my medicinal advertisements on the bulletin boards. If I couldn't be outright mischievous, I would be helpful. Don't get me wrong. I don't hurt people. I'm not that kind of witch, but leaving confused villagers in my wake was always fun. Everyone loved a little magic. Like I stated earlier, I was sent to keep Rutland healthy. An overly peaceful village could stagnate in a heartbeat. An excess of comfort doesn't fortify the human spirit. It makes it weak.\n\nI nailed my last note to the board in the town square and was about to head home when a young man crashed right into me. I'll admit I was probably hard to see in my plum-purple velvet cloak as I whimsically danced out of the shadows and into his path. I simply wasn't expecting any foot traffic at that hour. We both let out a surprised \"Owe!\" as we spun from the collision and fell to the stones. My fall was cushioned by the man's body as I fell flat on top of him. My face was close to his as I raised up and looked at him in the moonlight. He was surprisingly handsome. He had big gray eyes and messy brown hair. He had the beginnings of a short beard along his jaw, making me think he was close to twenty.\n\n\"Good heavens, I'm so sorry, miss. I didn't hurt you, did I?\" he asked worriedly. He was searching my face, trying to make out details under the dark shadow of my hood.\n\n\"No, I'm fine. You just startled me,\" I said and climbed off of him so we could stand.\n\n\"I'm terribly sorry for my haste. My father is gravely ill and has taken a turn for the worse. I was going to retrieve the doctor,\" he explained.\n\n\"Really? I'm a bit of a doctor myself,\" I said and pulled my hood back, allowing the young man a good look at my face, hair, and cleavage in the moonlight.\n\n\"Oh,\" he breathed as he looked at me in surprise.\n\nI was a witch of nature, and the mystical powers of the moon glorified my beauty. My skin was pale and striking in contrast to the long dark hair that flowed in waves around my youthful face. My lips were full and inviting. I often reddened them with a blend of beeswax and wild berries. My eyes were dark blue and sparkled with starlight. My appearance at night had a powerful effect on men and women. I looked good in sunlight, but moonlight literally made me spellbinding. I watched the spell take effect as his expression relaxed and his eyes went sleepy. I could easily lure him into a secluded field at that point and satisfy the sensual cravings my magic left coursing through my body. I ached between my legs at the thought of pinning him under me in the tall grass so I could ride his cock in the moonlight. Just as exercise made a body crave food, using magic made my body crave sexual gratification, but I couldn't indulge when someone needed help. A good witch almost always puts her villagers first.\n\n\"I'm Gilda Sprig. What's your name?\" I asked, breaking the effects of the spell for a moment.\n\n\"Oh, uh, I'm Glen Thomas,\" he stammered, blinking the mist out of his eyes.\n\n\"Take me to your father, Glen. I believe I can help him.\"\n\nFifteen minutes later, we arrived at a simple cottage on the outskirts of town. The Thomas family managed a small farm. A wheat field stretched out behind the house on the left while a herd of sheep slept on the right. A big, slobbery sheepdog was watching over the flock from a small hill. I smiled at the pumpkin patch beside the front path as we approached the front door. Glen invited me right into his cozy home and quickly directed me into Micah Thomas's room. The middle-aged man was propped up on his bed with his arm in a sling. He was sweating and having trouble breathing. Even in the dim light of the candle, I could tell he was handsome, but he held no resemblance to his son. I found that strange.\n\n\"What happened?\" I asked as I carefully unwrapped his arm to examine it. It was purple and swollen from his hand to his elbow.\n\n\"Something bit his hand when he was pulling a sheep out of the pond the night before last. We fear it was a snake. Toby, our sheepdog, was barking up a storm for us to come help. The sheep are always getting into trouble, but I don't understand why they have taken a liking to the back pond recently. Two have drowned in it this fall. It's the strangest thing, and then this happens to Papa,\" he explained, shaking his head at their misfortune.\n\nMy heart beat a little faster when I saw the shape of the puncture marks on Micah's hand. The Thomas family had a very nasty, ancient creature hiding in their back pond, and it was growing stronger as Halloween approached. It was feeding on the sheep and draining Micah's energy from a distance as it slept in the mud below the water. I needed to deal with it immediately.\n\n\"I know what did this, and I know how to cure it,\" I said as I straightened up and looked at Glen.\n\n\"Really? That's wonderful, Gilda. Thank you,\" he breathed in relief.\n\n\"Don't thank me yet. Your father was bitten by a fledgling succubus. Left unchallenged, it will grow into a powerful monster. It's an odd thing to find in a farm pond. The demonic creature is usually pulled across the veil by great misfortune. Besides drowned sheep, has something tragic happened in that pond?\"\n\n\"Besides Papa falling ill, I can't think of anything.\"\n\n\"Forgive me for asking, but where is your mother?\"\n\nHis expression darkened after that question.\n\n\"About ten years ago, after I turned eleven, she fell ill. The sickness was slow and mysterious. It drained her energy by the week. She disappeared one night and never returned. She left a note on the kitchen table, saying she wanted to die in the hands of nature. We were heartbroken and had no clue what that meant. She always loved the woods behind the pond. We searched for months and found no trace of her.\"\n\n\"Did you search the pond?\"\n\n\"Of course. It's not very deep. I dived in myself to look for her. There was nothing but mud.\"\n\n\"Forgive me for pressing the matter, but how deep did you search? Did you dig under the mud and look for her body?\"\n\n\"No. Why would she be under the mud?\"\n\n\"Because certain creatures would have hidden her remains there. I believe the timing of your mother's disappearance and the disturbance in the pond are related. It takes ten years for a fledgling succubus to emerge from hell and begin its nightly reign of terror. If I don't stop it tonight, your father won't live to see the sunrise. After its first human kill, the demon's power doubles, and it will have enough power to leave the pond for good.\"\n\nGlen gulped and nodded. His night was getting darker by the minute.\n\n\"I would like to offer you comfort, Glen, but there will be none until I investigate that pond and face whatever is hiding in it.\"\n\n\"Of course. How can I assist you?\"\n\n\"There isn't much you can do without magic. I'll give you some of mine for safekeeping. When the time is right, you need to return it to me. Take me to the pond.\"\n\nThe moon lit our way across the back field and over to the edge of the woods, where a small pond rested under an eroded bank. A gnarled old oak tree sat on top of the bank, hunched over the pond like an ancient guardian. The moon and tree were reflected on the black mirror surface of the still water.\n\n\"Well, it's time for a very chilly swim,\" I announced and threw my cloak off.\n\n\"Are you serious?\" Glen asked as he watched me untying the bodice of my dress.\n\n\"I have to remove the tragic remains of any human from the pond to break the demon's connection to it. It's going to be messy, and she will likely show up to defend her home. If I can hold her long enough, I can channel her powers away. She'll wither and die after that. The spell drains me too. I'll need you to revive me afterward,\" I explained as I pushed my dress off my shoulders and down my body so I could step out of it.\n\nGlen immediately averted his gaze to avoid staring at my naked body in the moonlight.\n\n\"Miss Sprig, how am I supposed to revive you?\" he gulped.\n\n\"Glen, look at me. I need your full attention.\"\n\nHe timidly looked at me in the moonlight, and the seduction spell took hold of him again. The more flesh I exposed to his eyes, the more irresistible the draw of the spell became. Sometimes, it was my favorite part of being a witch.\n\n\"Do you like what you see?\" I asked as I reached up and gently squeezed my ample breasts.\n\nThey felt as nice as they looked. I squeezed the soft flesh and pinched my nipples for Glen's enjoyment. They were hard pebbles between my fingers thanks to the brisk night air. Then I ran my hands down my smooth stomach and over my thighs. His eyes followed my hands as I caressed my skin. I smiled as I slid my fingers through the little patch of dark hair on my mound until I found my clit. I shuddered with tingles as I massaged the little sensitive bulb, drawing my moisture out and exciting my magic. I stared at Glen's handsome face as I worked up a proper arousal. I was eager to get his breeches off his thighs so I could admire his cock in the moonlight. I wanted his cum in my mouth and dripping out of my cunt, but I had to wait. I would use his pleasure to restore my power after my encounter with the fledgling. Glen's eyes had gone sleepy with arousal as he watched me stir my magic.\n\n\"You're more than ready to take my energy now, Glen. Keep it safe for me,\" I whispered as I approached him and wrapped my hand around the back of his neck.\n\nI pulled him forward and touched my lips to his. His lips parted for my kiss as magic flowed between us. He tasted and smelled wonderful. He brightened up as my power entered him, exciting his senses. To my surprise, his tongue slid into my mouth, and he kissed me back with growing passion. I'd never had a virgin respond to me like that before, and Glen was definitely a virgin. His pull on my magic was strong. It made me want to suck the life out of his cock. I quickly pulled away when his draw became too eager. I needed him aroused, not satisfied. My magic wouldn't cling to him if he wasn't aroused. We looked at each other in surprise for a moment. I was beginning to understand why supernatural creatures were attracted to his family. Something was different about them.\n\n\"Glen, whatever happens, don't approach the pond while I'm engaged with the fledgling. I need her attention on me. Keep my magic safe for me. You'll know when to use it,\" I whispered.\n\nHe nodded before I turned and waded into the pond. I gasped as the cold water shocked my skin. As my toes sank into the mud, I felt the draw of the negative energy pulsing like a heartbeat at the center of the pond. I took a deep breath and dived under. I swam down and began shoving handfuls of mud aside, searching for the energy source. Then my fingertips hit something hard. I dug around until I pulled a skull free of the muck. I had found the remains of Glen's mother. The negative pulse faded as I swam back to the surface and tossed the skull in the grass.\n\n\"What is that?\" Glen called from behind a tree a good distance away from the pond.\n\n\"Part of what I was looking for. I have more to dig up,\" I called right before something seized my ankle and jerked me under.\n\nThe fledgling was awake, and she was pissed. I wanted to scream as sharp nails stabbed into my ankle and dragged me along the muddy pond bottom, but I needed to save my breath. I dragged my hands into the mud, slowing us down, then I kicked my foot free of the creature's grip. I was floating for a confused second, then a hand went around my throat as the face of a woman appeared close to mine through the murky water. Her hair was as black as her eyes against shockingly white skin. Her fangs were stained green as she shrieked at me. She was horrifyingly beautiful. Her touch made my skin crawl and tingle. I drew back and punched her right in the nose, causing her to recoil from me for a moment. I took the opportunity to kick her ribs right below her pale tits. The kick gave me a good push through the water towards the bank. I scrambled in that direction, landing another kick to her face as she tried to grab me again.\n\nI scrambled out of the pond and onto the grass before she dived on top of me. She wrenched me onto my back and shrieked in my face, hitting me with foul breath and dark magic. Her slimy tits were pressed against mine as we slid and fought against each other. I could feel her magic invading my skin where she touched me. It was like a tranquilizer. Once I was weakened, she grabbed my hair and kissed me, attempting to steal more of my potent life energy through my breath. I knew she would drain my energy before she drained my blood.\n\nHer seductive magic was similar to mine. I could feel it saturating my body and making me ache with arousal between my legs. I hated how much I had in common with the bloodsucking monster as I breathed her foul breath. My body felt hot and was getting eager as my heart pounded with excitement. That's when her hand went between my legs so she could bury her cold fingers deep in my vagina. I tensed and squirmed with tingles as she massaged her slippery digits inside me, provoking unnatural arousal all over my body.\n\nI groaned and whimpered as she worked moisture out of me, coating her fingers and sliding them deeper. My will to fight was getting weak as she worked her claws deeper inside my swollen cunt while massaging my anus with her little finger. I gasped against her deadly kiss when she pushed a finger into my anus and began massaging both of my holes. I relaxed under her spell and enjoyed the pleasure between my legs. Even a fledgling succubus could overwhelm the flesh with erotic sensation. She massaged me until the heat and tingles were unbearable. Then an orgasm jolted my body, causing me to writhe and shake. I gasped against her kiss and almost choked on the dark energy that was pouring out of her mouth into mine.\n\nMy graceless plan was working. She would exhaust herself while attempting to subdue me like I was a normal human. Had she been a fully formed succubus, I would have been in serious trouble, but my power would outlast hers. As my hips bucked and my toes curled, I gripped the monster's hair and forced pure earth magic through her mind, thinning the concentration of dark magic inside her. She shrieked and convulsed as the opposing magic tore her mind apart, severing the demon's connection to our world. Her body shriveled and collapsed on top of me, and the battle was over. I soon realized I had become a pale spirit, standing beside my naked body by the pond. I wasn't dead, but I was close. My soul had lost its grip on my flesh as my magic escaped. I looked to the left to see Glen watching the horrible scene from behind a tree. He had to know it was time to use the magic I gave him.\n\n\"Gilda? Are you alright?\" he called.\n\n\"No, dummy, I need you,\" I grumbled in my spirit form.\n\nTo my surprise, he flinched at my words. That wasn't normal. Glen was sensitive to supernatural powers, and he needed to get his cute ass over to my exhausted body and help me. He eventually took a shaky breath and approached me. As he touched the dead demon, he cringed in revulsion before he quickly shoved it off of me. It flopped onto the muddy grass like a rotten pumpkin.\n\n\"Gilda?\" he whispered as he wiped the mud off my face.\n\nI could feel his warm touch through the disconnect of my being. He was pulling me back, but it wasn't enough.\n\n\"What do I do?\" he whispered as he held my face between his hands.\n\n\"Kiss me, Glen,\" I whispered close to his ear, stirring his hair with my ghostly breath.\n\nHe didn't hesitate. He held my neck and kissed me with just as much passion as he did before the fight. Power rushed into my body from his lips, snapping my spirit back where it belonged. I gasped and coughed, causing him to back away in shocked relief. I groaned and rubbed the pond water out of my eyes. I felt blurry, assuming that was a feeling. The fledgling had thoroughly drained me. It was abnormally strong. An ancient creature spawned it inside of Glen's mother. I still needed to pull the rest of her bones out of the mud to prevent negative energy from gathering in the pond again.\n\n\"Are you alright, Gilda?\" Glen stammered as he helped me sit up.\n\n\"My head is spinning. That thing was powerful for a fledgling. We need to burn it, then I need to rest,\" I whispered as the world spun a little faster. A few seconds later, the night went completely black.\n\nI awoke sometime later on a bed of hay. There was a wool blanket under me and one on top of me. I was dry and clean. My clothes were stacked in a neat pile to my right, and Glen was napping on a stack of hay across from me. We were in the small barn behind the cottage. An oil lamp was burning low in the middle of the floor, casting a warm glow over Glen's handsome face. I groaned as I pushed myself into a sitting position. I hurt all over. Glen stirred when he heard me. He sat up quickly and rushed to my side.\n\n\"Gilda, thank God, are you alright?\" he whispered as he brushed my hair away from my eyes.",
        "\"I think so. I was reckless with my energy and gave too much to you before the fight. I haven't been taking care of myself as often as I should,\" I sighed and pushed the blanket aside for a stretch.\n\nGlen quickly averted his gaze from my naked form, and I smiled at his modesty.\n\n\"Gilda, I want to thank you for saving my father. He woke up after you defeated that monster. I burned its shriveled corpse like you said.\"\n\n\"Excellent. I still need to cleanse the pond,\" I said as I rubbed my eyes again.\n\nI couldn't get the blurriness out of them. Glen ventured a quick glance at my face before he looked away again, blushing.\n\n\"Forgive me, Gilda, but you don't look well, and I feel it's my fault. Did I not revive you fast enough last night?\n\n\"Don't worry about me, Glen. I'll be fine after my payment.\"\n\n\"Oh, right. I'll get the money,\" he nodded, preparing to leave.\n\n\"Where are you going? I don't want money.\"\n\nHe stopped and looked at me with his brow furrowed.\n\n\"Then how shall I pay you?\"\n\n\"Glen, I'm very weak. Can you give me some of your energy?\" I whispered as I searched his big gray eyes.\n\n\"Of course. How?\"\n\nI smiled as I lay back on the blanket and spread my legs. His eyes went wide as he watched me slide my fingers through the moisture gathered along my swollen labia.\n\n\"I need you inside me, Glen. Pleasure yourself and me, and it will restore most of my energy. That's what I want as payment. Can you do that for me?\"\n\nHe gulped and hesitated for a moment. I wondered what he thought of the crazy witch that was offering her body to him. He eventually nodded. I smiled as I watched him crawl closer and kneel between my legs. I admired him as he unbuttoned his breeches and pushed them off his hips, revealing his thick erection. His eyes were roaming up and down my body and often settled on my cunt as I playfully spread my juices over my lips.\n\n\"Shirt off, please,\" I instructed, pulling his eyes back to mine.\n\nHe nodded and quickly pulled it over his head and tossed it aside. He had a handsome, lean chest. Farmers often had appealing muscle tone. He held his cock and stroked it above my pussy as he watched me massage my tits and pinch my nipples.\n\n\"Push your penis inside me, Glen, and I'll let you suck my tits while you fuck me. Would you enjoy that?\" I grinned.\n\nHe nodded and pressed his plump tip against my wet cunt, rubbing it through my moisture until his glans glistened. I groaned when he finally pushed inside me, stretching my horny muscles open. He let out a shaky breath as he pumped his cock inside me, indulging in my tight warmth. He closed his eyes and concentrated as he fucked me harder, shaking my tits with his eager thrusts. It felt wonderful. I could sense his pleasure, and it was exciting my magic, lifting me out of my blurry haze. I could also feel how close he was to orgasm.\n\n\"Allow me to help with that,\" I whispered and used a little magic to give him more control.\n\nHe opened his eyes and looked at me in amazement for a moment.\n\n\"That's incredible,\" he breathed as he slowed his thrusts and reveled in what he was feeling. \"You are breathtaking, Gilda,\" he whispered as he leaned down and caught my right nipple between his lips.\n\nI ran my fingers through his hair as he hungrily sucked the soft flesh of my tit into his mouth while pumping his cock into my pussy. I groaned as he pushed me closer to orgasm. He released my tit and kissed my mouth as he settled down on top of me. He caressed the back of my neck and worked his tongue against mine, exciting my heart with his passion. I could feel what he was feeling, and hearing my groans and whimpers made him ache with arousal. He enjoyed my pleasure as much as his own, and it was melting my heart a little. I hadn't made love to someone as earnest as Glen in a long time. I was riding his passion when an orgasm tightened my cunt. I cried out and squeezed him against my breasts as he pumped my inner muscles through the spasms.\n\n\"Oh God,\" he groaned as he tensed with pleasure a second later.\n\nHe gasped and shook as his cum splashed hot between my twitching muscles. I groaned and squirmed as the wet heat made the tingles sharper. He massaged his cock deeper inside me as the pleasure played itself out. Then he groaned in satisfaction as he relaxed against my breasts. His chest and neck were sweaty, making him smell extra yummy. I smiled as I ran my lips along his jaw and neck, tasting and appreciating him. His cock was still jumping with little aftershocks inside me.\n\n\"Thank you, Glen. I feel so much better.\"\n\n\"You're welcome. Thank you too, Gilda, for everything,\" he whispered as he raised his head and searched my eyes.\n\n\"I'm only doing my duty. Rutland is mine to protect.\"\n\nHe looked at me curiously for a moment, then he nodded as if he didn't quite believe me. We snuggled together under the wool blanket and spoke for another hour. It was the most pleasant thing I had done in years. I rarely wanted to stay close to the men I fucked, but there was something about Glen that drew me to him.\n\n\"Gilda, I saw the skull you found in the pond,\" he whispered as he admired a dark lock of my hair as he gently pulled it through his fingers.\n\n\"You realized who it was?\"\n\nHe took a deep breath and nodded.\n\n\"I'm sorry, Glen. I'll need to recover the rest of her bones and burn them to purify the remains. The negative energy could draw more dark creatures to the area.\"\n\n\"I understand. I'll help in any way that I can. What creature did that to my mother?\"\n\n\"I suspect it was an ancient incubus. They're a type of vampire that feeds on blood and sexual energy. Some are terrifying monsters, and others just want to be treated like humans. They mostly are humans that were altered by demonic magic. Their powers vary greatly. They can produce almost normal human offspring with human women, or they can produce a hybrid, or they can pass a cursed seed of a demon spawn into their lover's womb that will slowly kill them.\"\n\nI could feel Glen's heart beating faster as I spoke.\n\n\"Are you saying my mom was in love with a vampire?\" he asked.\n\n\"Not necessarily. He could have been taking advantage of her while she was under a spell. Witches use similar spells sometimes. You knew she had a lover?\"\n\n\"I knew. A strange man would come to the farm when Papa was away. Mama would always treat him kindly. I didn't know what to think of him. He always seemed cold and distant. She became melancholy and sickly after the last time he visited ten years ago. Then she disappeared, and I never saw either one of them again. Could that man have been an incubus?\"\n\n\"Possibly, he could have also been your real father,\" I whispered.\n\nGlen let out a tired sigh that tugged at my heart. He knew I had noticed his lack of resemblance to Micah.\n\n\"I take it Micah knew what his wife was doing?\"\n\n\"He did. Mama told me Papa couldn't give her children. So, he gave her permission to build a family with someone else if she could keep it a secret. Papa loved me and raised me as his own. He's my true father, but I doubt he knew Mama was sleeping with a monster. She probably didn't know it either. Do you think I'm a monster too?\"\n\n\"You're stable from what I can tell, but that could change one day.\"\n\nHe gasped and sat up in alarm at that suggestion.\n\n\"What do you mean? How could I change?\"\n\n\"Dark entities could learn about you from your real father. The possibility of you having vampire magic makes you valuable to darker souls. They would capture you and call your magic forth. Then they would force you to use it for their gain.\"\n\n\"How do I prevent that?\"\n\n\"I can help you stay safe. It's my duty as the Witch of Rutland. If you're brave enough, I can test you for incubus magic right now.\"\n\nHis eyes filled with horror at that suggestion.\n\n\"Test me how?\"\n\n\"I can call the magic forward if it's actually inside you.\"\n\n\"Can you make it go away?\"\n\n\"No. Once it manifests, it's there for the rest of your life.\"\n\nHis complexion went a little green at that point.\n\n\"I don't want that to happen. I don't want to change.\"\n\n\"Glen, it's nothing to be ashamed of. You didn't choose your parents. Also, it's better to discover dormant magic with my help instead of by accident or at the hands of a demon. I have been sensing something special about you all night. You have a mystical pull on my power. Here, I want you to taste my blood and see how it affects you,\" I said and crawled over to my clothes and pulled a small dagger out of my boot.\n\nI returned to Glen and pricked my finger. He grimaced as I squeezed a thick drop of blood out, allowing it to drip down my skin.\n\n\"Taste it and see if you enjoy it. Witch blood is a delicacy,\" I grinned and offered him my hand.\n\nHe looked scared and repulsed as he held my wrist and carefully guided my bleeding finger into his mouth. I watched him carefully as his tongue made contact with the blood. An instant later, his breathing went shallow as his grip tightened on my wrist. Then he sucked hard on my finger, drawing a proper mouthful. He groaned and shuddered as he swallowed it. Then he started to do it again.\n\n\"Glen, stop,\" I ordered, hitting him with psychic pain.\n\nHe gasped and released my hand as the illusion of agony pierced his mind. I immediately eased off. I didn't want to jar him more than he already was. He was panting as he looked at me with pale eyes and wide dark irises. He was aroused and hungry after tasting my blood.\n\n\"I don't believe it,\" he whispered as he gazed at me like a predator.\n\nIt was unnerving and arousing. I enjoyed dangerous men, and Glen had just become one.\n\n\"Now you know what you are and what that man did to your mother. He may have done it by accident. I need to track him down and find out. \"\n\n\"I'll help you find him if I can, but I can't focus right now. I need you again,\" he said as he caught my mouth for a kiss.\n\nI gasped as he pushed me backward on the blanket and climbed between my legs. I groaned as he pressed his hard cock against my cunt. I had awakened a different kind of fledgling monster, and it was thrilling. He pushed his meat inside me with a groan. His senses were on fire with new powers and cravings. My blood had called forth the dormant incubus magic hidden in the depths of his soul. His humanity kept it buried for twenty years. He kissed me hard as he plowed his cock into my swollen cunt, jarring our bodies in his excitement and fueling our magic. Sex with a hybrid incubus was a treat. We could endlessly feed each other's magic and passion. He was panting against my neck as I clutched at his arms with my nails. Then I felt his new fangs scrape over my skin. \n\n\"Can I feed on you, Gilda? I'm starving,\" he purred against my neck.\n\n\"You'll get drunk on my blood. You will also owe me an abundance of cum in return,\" I chuckled.\n\n\"Sounds fun,\" he grinned before he sank his fangs into the nape of my neck.\n\nI gasped and arched my body into his. The pain was short and quickly washed away from the magic flowing out of his skin. An incubus's bite was intensely erotic. My eyes rolled back as he sucked blood from my neck. Then an orgasm crashed through me like a scorching wave. I gasped and whimpered as he pumped his cock through my twitching muscles, turning my mind to mush. He let out a carnal groan as an orgasm raced through his cock. He sucked more greedily as his cum burst hot inside me and came dripping out of me. I knew his orgasm was good. I felt it through his skin as he trembled on top of me and inside me. He groaned in satisfaction as the pleasure played itself out. He stopped draining me at that point and licked my neck, quickly closing the wound. I smiled as I indulged in the relaxing waves of magic pulsing with his heartbeat. We were both sated.\n\n\"Oh boy, I was not expecting to find something like you in Rutland,\" I purred as I ran my fingers through his soft brown hair.\n\n\"What am I exactly?\" he breathed as he snuggled his face into my hair, indulging in my scent.\n\n\"You're a wonderfully balanced incubus hybrid. You didn't want to kill me. You just wanted food and pleasure. I can likely train you to use spells.\"\n\n\"So I'm not human?\" he whispered.\n\n\"You're more human than anything else. That's where the balance comes from. You're not like that demon that came out of the pond.\"\n\nHe was silent for a moment as he considered my words.\n\n\"That thing was my sister, wasn't it?\"\n\n\"It's unfair to you to call it that, but yes. A demon was spawned inside your mother's womb from your father's corrupted seed. Your father was either reckless or malicious. He should have sent your mother to a witch for treatment with each pregnancy. We can detect a corrupted seed and purge it before the mother falls ill. The thing in the pond was a demon succubus. Its ancient soul was channeled across the veil until it could fully merge with a corporeal body. Your mother's death was the blood sacrifice that opened the pathway between our worlds. That's why I need to cleanse the pond. The weakness in the veil is still there, and with Halloween approaching, something else nasty could slip through it.\"\n\n\"Was my father a hybrid like me?\"\n\n\"I don't know. An incubus needs humanity to experience and express love. If he was simply using your mother to breed children and demons, then he was also a demon. Once a demon breeds a true hell-spawn, he abandons the host and lets the powers of Hell use it as a portal.\"\n\n\"Why would a demon do that? What does he get out of spawning another demon?\"\n\n\"A powerful, immortal family. That fledgling succubus would have been an understudy and a lover to its incubus. There is safety in numbers. They would help each other survive.\"\n\n\"Ugh, it would have been his daughter and his lover?\" Glen said in revulsion.\n\n\"Demon families don't work like human families. They can't breed together, so it doesn't matter who they fuck.\"\n\n\"It's still wrong.\"\n\n\"There is nothing right about a demon living in our realm. They're parasites in our world.\"\n\n\"That seriously doesn't help me like what I am,\" he whispered.\n\n\"You have a soul, Glen. You're not a demon. Your body was simply altered by demonic magic. It's like adding sugar and fat to bitter cocoa to make chocolate. Nature cooked up something special in you and me. My mother was a hybrid succubus. That's where my power came from. The Witch Wardens trained me to use it for good.\"\n\nHe raised up and looked at me in wonder after that revelation.\n\n\"Do you crave blood too?\" he asked curiously.\n\n\"No. I don't have strong vampire traits. My magic earned me the label of a nature witch. I do crave cock and cum like a succubus. Sex and arousal rejuvenate my magic. When I'm sated, I can channel all kinds of powers with my mind and body.\"\n\n\"Do I have powers like yours?\"\n\n\"Yes, but I'm not sure of your range. That's why I'm inviting you to my cottage for some magic lessons. If you have the gift of channeling, you could become a recognized warlock.\"\n\n\"Incredible. I thought I would be a simple farmer for the rest of my life. Then I crashed into you. I've never felt more alive,\" he whispered as he ran his fingers through my hair and gently kissed my mouth.\n\n\"That could be the intoxicating effect of my blood talking,\" I mumbled against his kiss.\n\nHe shrugged and rocked his hips, massaging my wet cunt with his hardening erection. It was turning out to be a very good morning.\n\n\"I ache for you, Gilda. Is that normal?\" he purred before he sucked my lower lip between his teeth.\n\nHis fangs were extended again. I could feel them pressing into my skin as his cock pushed deeper inside me.\n\n\"Are you still hungry?\" I asked.\n\n\"No. The pressure on my teeth feels good. They're also hard to retract when I'm aroused,\" he smiled, revealing his sharp canines.\n\nThe fangs made his handsome face look fierce and seductive. Seeing them made my cunt tighten on his cock, and that made him chuckle.\n\n\"I'm glad they arouse you too,\" he whispered as he rocked inside me.\n\n\"It's easy to arouse me. Being a descendant of a succubus leaves me craving sexual attention more than anything. It also left me addicted to cum.\"\n\n\"You're welcome to all of mine,\" Glen smiled as he flexed his cock inside me. His groin muscles were strong.\n\n\"That's an offer I can't refuse. Will you allow me to cast a potency spell on you?\"\n\n\"Sure. What will it do?\"\n\n\"It will prolong your orgasms and increase your cum flow. It's the naughtiest spell I know. Trust me, we'll both enjoy it.\"\n\n\"And that's an offer I can't refuse,\" he grinned.\n\nI smiled as I raised up so I could see his attractive sex organs. I grabbed his wet cock and gently stroked it as I reached down and massaged his plump testicles. He moaned as I fondled him.\n\n\"Look into my eyes, Glen. I'm going to massage your cock and scrotum while I recite a spell that will make you extremely potent for a month. Once the incantation is pressed upon your mind, you can't escape the effects until it runs its course. Do you still want it?\"\n\n\"Yes,\" he breathed and licked his lips.\n\n\"Very well... fertile spirits of nature, bless this man with abundance in order to satisfy my bodily cravings. My body is eager for you, Glen. My womb swells for your seed. I want you to pleasure yourself inside me. Massage my birth canal with your pulsing rod. I drip with sweet nectar to coat your meat when it plows into my tight warmth. Touch your milky white tip against my pouting cervix, let them share a salty kiss. My hunger welcomes your passionate thrusts. My belly, tits, and cunt throb for your abundant offering. My body needs your salty milk, hot and thick inside me. My shiny pink trench will overflow with your flood, and in ecstasy, I'll lay hot, wet, and breathless,\" I spoke as I felt his balls and cock swelling. He groaned and shuddered from the excess of arousal my magic was stoking in his groin. \"Bless the white tide as it flows into me. Give me your semen, Glen,\" I ordered and took his cock into my mouth.\n\nI stroked his shaft with my lips and caressed his tip with my tongue, finishing what the spell started. He groaned and shook as an orgasm rocked through his muscles. My pussy ached and tightened as a thick load of cum drenched my mouth. I groaned and gulped it down before another hot burst almost strangled me. I was struggling to swallow the creamy flood. I held his throbbing meat as it flexed again and again, spitting warm semen into my mouth. I sucked him dry as the last kicks of orgasm worked through his groin.\n\n\"Oh my God... that was wild. I can do it again, too,\" Glen groaned with a smile as he gently thrust against my tongue.\n\n\"I want it in my cunt next,\" I ordered as I reclined on the wool blanket with my legs spread wide.\n\n\"Gladly,\" he breathed as he climbed over me and sank his cock into my swollen cunt again.\n\nHe was insanely hard. He fucked me slow and deep, building pleasure with loving strokes. He watched my eyes as I panted under him. He was in perfect control, and it was intensely arousing. It was rare to find a fledgling incubus that could control his wild nature so soon after discovering it. He was also under a powerful fertility spell that increased his energy. Not to mention he was as high as a kite on my blood. Glen had a naturally strong focus, and that could lead to powerful spell casting.\n\n\"Your control is impressive, Glen. How do you do it?\" I groaned as I rocked into his thrusts, taking his cock deep into my abdomen.\n\n\"Papa always said I had the patience of a monk,\" he purred as he pumped a little faster, hitting my bladder with his tip.\n\nMy eyes rolled back as I indulged in the stimulation.\n\n\"Fuck me harder, Glen. I need it,\" I begged.\n\nHe laid down on me and slid his tongue into my mouth before pounding me breathless. I cringed with pleasure as he feverishly massaged my trembling cunt. My body convulsed under him as my pussy squeezed his meat. He groaned a second later as an orgasm raced through his cock, quickly filling me with a flood of hot cum. He held the back of my neck and sucked my tongue as he shook with pleasure and pumped me full of semen. The rush of hot, slippery liquid pumping into my vagina was feeding my orgasm. I groaned and gasped as his juices gushed in and streamed out of me, dripping down my crack and into a puddle under my ass. We groaned and trembled against each other for a sweaty minute, then the pleasure finally subsided. Glen sighed in satisfaction before he relaxed against my tits. I ran my fingers through his sweaty hair and kissed his cheek as our hearts pounded against each other. I felt revived, soaked, and a little drunk. Glen was sharing his magical buzz with me through his skin.",
        "\"Can you hide your fangs now?\" I grinned.\n\n\"I can. Thank you,\" he whispered.\n\n\"We need to plan to see each other every week, so I can help you adjust to your new powers and take advantage of the potency spell. When will you have free time?\"\n\n\"Now that Papa is well, I can probably visit you a few times a week. Is that good?\"\n\n\"That will be perfect. I'll also visit the farm as often as I can. I have to keep my eyes on you. I don't want any demons trying to claim you while the veil is thin. A powerful creature buried your sick mother in mud ten years ago. It was obviously hoping to claim the demon this Halloween.\"\n\n\"Gilda, I know Halloween is special, but why does it determine when demons are claimed?\"\n\n\"Halloween represents many different harvests. For humans, Halloween occurs during the peak of their food harvest. Thus, it's a time deserving of celebrations. It's also the one night of the year the air grows thick with all matters of magic, and supernatural beings can harvest it. My power will be at its strongest that night. I plan to guide the Spirit of Halloween into our village so it can bestow its blessings. If I'm successful, Rutland will be fortified against all matters of misfortune for an entire year.\"\n\n\"How, exactly?\" Glen asked in confusion.\n\n\"The farmlands will be healthier and produce more food. Humans will be healthier and get sick less often. Your last witch did a fabulous job claiming the harvest blessings last year before she moved west. I plan to do it again.\"\n\n\"I understand that part, but how do you wrangle a spirit?\"\n\n\"You offer it a human host to use for the night. I can channel the town's festive energy through a person until the spirit is drawn to it. If it likes the host, it will possess it for the night to join the festivities.\"\n\n\"Yikes... that sounds like demonic possession,\" he gulped.\n\n\"It's very similar, but the Spirit of Halloween is a fertility spirit that also delights in friendly mischief. Beneficial and harmful spirits can drift through the veil to visit the land of the living on Halloween. The village should focus on generating positive energy with merry-making to lure the good spirits in.\"\n\n\"So, I'm guessing the opposite can happen if we don't celebrate the harvest?\"\n\n\"It can. Negative energy can draw dark spirits here. Demons and monsters delight in suffering and gain power from it. That's why I need to purge the dark energy from the pond and find who put it there in the first place. I have a lot of work to do. I'm really glad it started with you, Glen. It's good to have a new friend in a strange place.\"\n\n\"I'm glad, too. You saved my father's life and showed me what I am. I will happily give you a few weeks of my life in return. This entire village will benefit from your work. I'm honored to help.\"\n\n\"I was hoping you would say that. I'm officially making you my new apprentice. We can sustain each other as we work to prepare the village for Halloween.\"\n\n\"Speaking of sustenance, how often will the blood cravings hit me? In spite of my focus, they're hard to manage,\" he confessed.\n\n\"You'll have to wait and see. Don't worry, Glen. I'll help you manage it. Eating normal food can help with the cravings, but you will have to feed your second nature to keep it tame. Depriving yourself can make you weak and wild. I've been deprived of cock for weeks thanks to rural traveling and a busy harvest. It affected my magic and left me extremely weak after my fight with the fledgling. I should have taken the time to fuck you beforehand.\"\n\nOne day until Halloween:\n\nGlen and I finished removing his mother's bones from the pond as the sun rose over the wheat field. Micah looked healthy and ready to catch up on neglected chores as we joined him for breakfast. Before I left Thomas Farm, Micah ordered Glen to be a gentleman and escort me home.\n\nWe strolled through the southern meadow on the edge of town until we entered Rutland Forest. A twenty-minute walk into the woods along the forest stream led us to my simple stone cottage. Glen stopped on the edge of the front lawn and gazed in wonder for a moment. My recently revived garden had caught his attention.\n\n\"How do you keep flowers and shrubs blooming so late in the season? Your yard looks like spring just arrived.\"\n\n\"Being a nature witch has its perks. I know many spells to keep herbs and spices fresh throughout the year, even when it snows,\" I smiled and plucked some fresh sage leaves for tea.\n\nI led Glen into my home and tossed my cloak on the back of a chair. He smiled as he looked around the cozy cottage. It was well lit from the large inset windows on every wall. My bed was in the back corner, close to the open hearth. The kitchen took up most of the right wall and had many shelves packed with ingredients for potion-making. A copper tub sat next to the fireplace across from my oak desk. It was the prettiest cottage I had ever lived in. Tonya, the previous Witch of Rutland, had put a lot of work into it.\n\n\"Have a seat, Glen,\" I instructed and tapped one of the chairs next to my breakfast table. \"Before we begin magic practice, I would like a glimpse into your memories.\"\n\n\"Why?\" he asked as he sat in the chair and watched me retrieve my favorite yellow teapot from the stove.\n\n\"I'm hoping to see your father. It will be easier to track him down if I know what he looks like,\" I explained as I used a boiling spell on the water in the pot.\n\n\"That could be difficult. I can barely remember his face.\"\n\n\"The tea will make it easier to recall,\" I said and tossed a clove, one star anise, fresh sage, a dried hibiscus flower, condensed willow tree extract, dried poppy sap, dried star jasmine, and a special dried mushroom into the teapot.\n\n\"This is my favorite dream tea. It will allow me to see one of your memories. I want you to focus on your most vivid memory of the man that visited your mother while Micah was away. Think about him as you drink the tea. Then close your eyes and concentrate on the memory,\" I explained as I poured two cups full of the fragrant tea and sat down in a chair in front of Glen.\n\nHe took a deep breath and blew on his tea before he took a small sip. He smiled in approval of the delicious taste and continued drinking it. I did the same. Then he set the cup on the table and closed his eyes. I finished my tea as I watched him. I could feel his mind drifting on the edge of sleep, pulling the world of dreams and memories closer. I set my teacup down and climbed into his lap so I could hold our foreheads together. I breathed in his delicious breath and let our energy combine through our skin.\n\nA few seconds later, I was gazing out the back window of Glen's home. The wheat was tall and beginning to bend. It was sunset. The sky was orange as the sun sank below the trees on the horizon. In the fading light, I could see a beautiful woman with long brown hair. She was sitting in the grass with a blurry figure of a man across from her. They were enjoying a picnic. I stepped through the memory and circled the man and woman. Glen's mother appeared in perfect detail, but the man was a blur at every angle. I couldn't even make out his hair color.\n\nI sighed in frustration and leaned away to break the effects of the dream. I stared at Glen's handsome face as he rested in the spell. His father was smart and powerful. He knew how to protect himself from witches. That was a bad omen. He was likely an enemy of the Witch Wardens. I would have to deal with him fast or risk a disaster on Halloween, and I was suddenly worried about Tonya. Her departure from Rutland was sudden and ill-explained. We all assumed she fell in love and wanted a few years to enjoy her new mate, but now I felt an urgent need to check up on her.\n\n\"Shit... an evil, ancient incubus has to cause trouble when I have less than a day to prepare for Halloween,\" I groaned and climbed off of Glen.\n\nIt was time for a more dangerous memory spell to catch a glimpse of Tonya's life. I needed to know if she was alright before I did anything else. Leaving Glen asleep in the chair, I went about whipping up the most complicated potion I knew in my favorite cast iron pot. It required the essence of the witch I was trying to see. I went to the mirror over the mantle and found an old beeswax stick Tonya used to apply berry pigment to her lips. Every witch had at least three of them lying around at any given time, and it likely had a little bit of her essence on it. I melted the outer layer of the wax into the concoction and spoke an incantation through the steam billowing out of the stove pot. Then I crushed a handful of dried forget-me-nots into the mixture, instantly turning it blue and filling the room with a sweet fragrance. It was ready.\n\nI filled a teacup with the potion and carried it over to the rug in front of the hearth. I sat in the middle of the rug and took a deep breath before I began to drink. I concentrated on old memories of Tonya from the Witch Warden Academy as I drank the sweet potion. She had platinum blond hair, a cute round face, bright green eyes, and a perfect pink smile over an abundance of eye-catching cleavage. I could feel the spell taking effect as I finished drinking the potion. I laid on my back on the rug and let my spirit be pulled towards Tonya.\n\nDisconnecting from my body was always a shock and fairly dangerous. A witch could lose her soul in the ether and leave her body behind to die or get possessed by a demon. Certain spirit channels were safe to travel in over long distances, and a witch's magic effortlessly attracted the soft blue channels. I could see the rushing energy around me as I flew through it towards Tonya. I struggled to catch a glimpse of the corporeal world beyond the channel, but it was almost impossible without stepping out of it, and that could be deadly. My spirit could have gone two miles or a hundred as I rushed to the end of my journey. Blackness met me at that point, and then a flood of ecstasy.\n\nMy spirit had found its way into Tonya's body, giving me an exciting glimpse and feel of her being. Surprisingly, Tonya was blindfolded, gagged, and chained to what felt like a cushioned table as a thick cock pumped into her swollen cunt. A delicious-smelling man was lying on top of her as he worked his horny meat inside her. The shock of pleasure and the man's intoxicating scent jarred my spirit, sending waves of arousal back to my body. Tonya was panting and biting the gag as the sharp pleasure swelled her genitals. Her emotions were distressed. She wanted the man to stop while also wanting him to satisfy the horny burn in her abdomen. Then I felt it. Seductive magic was pouring out of the man's skin and into her body, teasing her senses with pungent arousal.\n\nI loved and hated the wild tingles stabbing through Tonya's vagina. It felt like it was happening to me too. I wanted the man to hurt us with his cock to satisfy the horny itch. A normal man couldn't provoke that kind of violent arousal in a woman. The man suddenly groaned in ecstasy as a hot burst of cum flooded Tonya's vagina, then his fangs sank into her neck. We tensed with pain and pleasure. The bite helped us hit orgasm. Tonya cried out against the gag as she fought her bonds. Violent, unnatural pleasure raked every muscle in her body as the vampire drank her blood, magic, and life. Tonya was at the mercy of a powerful incubus, and I feared he had enslaved her. Her body and mind were exhausted. Her magic was stunned, and neither one of us could escape his bewitching seduction. Our minds were trapped by his spell. The leather straps weren't even needed at that point.\n\nI was in serious trouble. My spirit couldn't escape Tonya's body while under the incubus's spell. I would be trapped there until my body died on the floor of the cottage, breaking my spirit's link to the land of the living. Then I would fade from existence, leaving behind a horrible mystery. It was hard to feel sorry for myself as Tonya and I writhed in ecstasy under the incubus. His meat was still rock hard as it throbbed and dripped inside us. It felt too good. I wanted him to pound us more. Suddenly, I felt a familiar tug on my spirit and then a soft yet powerful kiss against my corporeal lips. Someone was calling me back to the cottage.\n\n\"Glen,\" I groaned in relief as his magic pulled my consciousness free of the incubus's spell.\n\n\"Who the fuck is Glen?\" growled the incubus against Tonya's neck.\n\nFuck. I had spoken through Tonya in my moment of relief. Her spirit must have been extremely weak to allow that to happen. I needed to get the fuck back to my body so I could find her, but I had no clue where she was. Glen's pull on my spirit was getting stronger as he kissed me passionately, waking up my bodily senses and strengthening my magic. Glen had just given Tonya and me a fighting chance. I could jump back to him and my body at that point, but I had to look outside of Tonya before I escaped. I needed to see who had enslaved my friend and fellow witch.\n\nAs Glen's magic surged into the spirit channel through my body, I pulled on it and lurched forward, bringing my eyes through the blindfold and face to face with the owner of the cock that was throbbing inside Tonya's vagina. He was absolutely beautiful. His eyes were a striking mix of silver and green. They were fierce gems adorning the face of an angel. His pale skin complimented the flowing caramel-colored locks that fell carelessly around his large eyes.\n\nThe room around us was made of gray stone and lit by torches. A wall of bars cut the room in half. It reminded me of a dungeon. There was a strange circular symbol carved into the beam over the door to the right. It was the only distinctive thing about the place. Suddenly, the magic in the vampire's breath saturated my spirit as he breathed on Tonya's face. My soul easily absorbed it without my body in the way. I could feel the arousing effect it had on my body through the spirit channel.\n\n\"Hmm, how did one witch become two witches? That's kinky,\" he purred as he thrust hard inside of Tonya, jarring us both with orgasmic tingles.\n\nI released my hold on Tonya at that point. I was lingering too long outside of my body. If Glen decided to stop kissing me, I wouldn't be able to get back. The world rushed around me for a terrifying second, then I felt a kick in my chest as my soul reconnected with my body. I gasped against Glen's mouth as my flesh pulsed with pain, arousal, and cold, sleepy tingles. I shuddered to feel my blood pumping through my veins again.\n\n\"Thank God, Gilda. You scared me half to death. I thought you were dying,\" Glen breathed as he cradled my face between his hands.\n\n\"I was,\" I coughed as I reached up and pulled his warm body on top of me. \"Fuck me, Glen. I need it,\" I groaned as I reached down and rubbed the bulge in his pants.\n\nThe only part of me that wasn't cold was my swollen cunt. I had pulled the ancient incubus's magic back to my body with my spirit, and the horny itch it caused was severe. I wanted to scream and stuff myself with every cock within a ten-mile radius. Glen could sense the strange magic pulsing inside me. He knew I wasn't joking. He quickly yanked my dress up and tore my underwear off before he pulled his cock free of his breeches. I cried out as he plunged his meat inside me, stretching my horny pussy around his girth. I squeezed his hard shaft with my inner muscles as he began to pump inside me.\n\n\"Fuck yes. Harder, Glen. Make it hurt, please,\" I whimpered as I clutched at his arms with my nails.\n\nHe laid down on me, stuck his hands under my ass cheeks, and squeezed them hard as he pumped inside me like a wild man.\n\n\"Oh fuck, yes!\" I cried as I indulged in the frenzied penetration.\n\nHe was finally massaging the torturous erotic itch out of my vagina. I groaned in relief as pleasure radiated through my cunt with every stroke. Horny juices quickly dripped out of me and onto the rug.\n\n\"How the fuck do you smell like another incubus?\" he groaned as he panted against my neck.\n\n\"A risky spell. I'll explain later. Cum in me, Glen. I need it,\" I begged as my legs twitched in anticipation.\n\nHe grunted and shook as an orgasm raced through his cock, sending a flood of hot cum gushing between my trembling inner muscles. I loved feeling him lose control inside me. The wet shock of it made my eyes roll back and helped an orgasm tightened my cunt. I gasped and cringed as I rode his hard meat through the pleasure. The potency spell increased his volume five fold. I quickly pushed him off of me and down on his back on the rug so I could get his twitching cock into my mouth. He groaned and cringed as I sucked two more satisfying mouthfuls out of him. His cum relieved the horny ache in my body like a soothing dip in the stream. The fact that he was an incubus hybrid helped. Glen wasn't as powerful as the monster that was feeding on Tonya, but his cum was more potent to me because it wasn't evil. Also, Glen's cum tasted like salted honey mixed with fresh cream.\n\n\"Ease off, Gilda. Most of it went in your cunt. I need a minute,\" he gasped as I sucked out the last drop.\n\n\"Sorry, I need more. I got caught in an ancient incubus's spell when I spirit jumped to check on Tonya. His magic clung to my soul like cobwebs. I feel dirty,\" I whimpered as I released his cock and quickly untied the corset stays on my dress.\n\nHe propped himself on his elbows to watch me strip like I had ants in my dress. My skin was itching like I did. I hadn't had a magic trip that bad since I accidentally jumped into a murderer that was being burned alive. This time was worse. I brought residual magic home with me and got it stuck inside my body. I needed to purge it before the incubus used it to do something terrible to me. He could easily rip my soul out of my body again if he knew what he was doing.\n\n\"Drench me with your magic, Glen. Flood his magic out of me, please,\" I begged as I quickly crawled over him and guided his cock back into my cunt.\n\n\"Of course, how?\" he asked as he watched me frantically unbuttoning his shirt.\n\n\"Lot's of skin touching and fucking. You have to want me to want you. Your magic will make it happen. An incubus's touch is powerful and dangerous because of that,\" I explained as I used my legs to bounce on his cock.\n\n\"That's easy,\" he breathed as he sat up and tossed his shirt aside.\n\nHis arms went around me, crushing me against his warm chest. He pulled me down on top of him so he could easily pump his cock into my cunt while working his tongue into my mouth. Good magic flowed out of him like a tasty summer breeze. I groaned in relief and arousal. I took a deep breath just to fill my lungs with his scent as he exhaled. I was finally filling up on Glen's magic, pushing the evil magic out of my soul and into my skin where it could be washed away by sweat and cum.\n\n\"Mmm, I need you to cum on me, Glen. I have plenty inside me. Now I want it all over me,\" I panted as I ran my fingers through his soft hair and pulled our foreheads together.\n\n\"Gladly,\" he breathed and suddenly rolled us over, trapping me against the rug.\n\nHe fucked me hard a few more seconds, working up a proper sweat, then he quickly climbed off of me to finish removing his pants. I admired his handsome body as he crawled over me again and straddled my ribs. His thick, glistening cock was hovering over my blushing tits. He smiled as he lowered it between my soft hills, letting me feel the weight of his slippery cock on my chest. Then he grabbed my breasts and squeezed them around his shaft. He moaned softly as he began to pump between them. I groaned and helped him squeeze my tits on his throbbing meat. My cunt was tingling as I admired his muscles as he thrust vigorously towards my face. I rarely had my titties fucked. I definitely needed to do it more often.\n\n\"You are so beautiful, Gilda. I'm about to cum,\" he panted as he admired my face and tits.",
        "\"I want it everywhere,\" I groaned as I squirmed under him.\n\nHis breathing went shaky as he squeezed my tits and grunted. I opened my mouth for the impressive stream of cum that doused my face, hair, nose, and neck. I shuddered with tingles as it dripped into my eyes and splashed into my mouth. I swallowed the creamy mouthful and wiped my eyes so I could witness the rest of my cum bath. Glen groaned and shook as he slowly climbed down my body, pumping thick streams out of his cock as he went. He drenched my tits with three bursts each, sending it dripping down my sides and into the gully between them. I groaned and massaged the warm mess all over my tits, making them glisten. He smiled and chewed his lip as he continued downward, making a stream down the center of my ribs and an impressive white pool in my belly button. I spread my legs wide as he knelt between them and pumped another hot pool into my pink trench. I groaned and fingered his cum inside me. He pushed my hand aside and plunged his cock deep into my cunt. I was impressed to feel more cum spilling inside me as he fucked my horny pussy. I massaged my clit as he slowly rocked against my tight muscles. I could feel him shaking with little aftershocks of pleasure. I watched his face as I worked myself to orgasm. I gasped and cringed as my cunt squeezed his hard meat. He studiously fucked me through the spasms until I finally relaxed. My chest was heaving under my glistening tits. The thick puddle in my belly button was beginning to thin and drip. I was a perfect mess and finally free of the dark magic.\n\n\"Wow,\" Glen breathed as he looked me over. \"Seeing you naked is wonderfully arousing, but seeing you naked and covered in cum is exceptionally arousing. I already want to fuck you again.\"\n\n\"Go for it. I'm really close to falling asleep, though,\" I chuckled.\n\n\"I'll wait then. Would you like for me to heat some water and fill the tub for you while you rest?\"\n\n\"Please do,\" I yawned.\n\nI took a short nap on the rug as Glen heated some water and filled the copper tub. Then he lifted me off the floor and gently placed me in it. I groaned as the hot water caressed my skin. I brightened up as Glen lathered up his hands and began scrubbing my back, shoulders, and breasts.\n\n\"What on earth happened, Gilda? One minute I was dreaming about my mother. The next minute I found you dead on the floor. Your skin was turning blue. It scared me half to death. I didn't know what to do, so I kissed you like I did by the pond. Did that bring you back?\"\n\n\"It did. Thank you for that, Glen. You truly saved my life. I was using a spirit jumping spell to find Tonya, the previous Witch of Rutland. I was worried about her after seeing the blurry memory of your father. He knows how to protect himself from witches, and that's a red flag for a Witch Warden. He's going through great lengths to stay hidden. That implies he is up to something evil. I jumped into Tonya as he was feeding on her. I felt her pleasure, pain, and weakness. He's holding her prisoner somewhere. He sensed me there when I moved forward to catch a glimpse of him. That's when his seductive spell stuck to my soul. I thought I was a goner, but you pulled me back.\"\n\n\"Yikes... please wake me up before you do anything else like that.\"\n\n\"Sorry, I'm used to doing things on my own.\"\n\n\"I can tell. What do we do now?\"\n\n\"Well, I need to test your magic, search for a spirit host for Halloween night, check with all the vendors in the village to make sure they're planning a spectacular Halloween festival, and search for evil energy throughout the village. All that needs to be done while I also desperately search for Tonya.\"\n\n\"Great. What a nightmare. Do you have any idea where Tonya is?\" Glen asked as he began washing cum out of my hair.\n\n\"Not really. Grab my sketchbook and a quill for me, please.\"\n\nHe quickly dried his hands and retrieved the requested items. Then he watched curiously as I drew the strange symbol carved in the beam over the door in Tonya's stone cell. It was a circle with twisted vines running up each side and a dagger symbol at the center.\n\n\"Does this mean anything to you?\" I asked and gave him the book.\n\n\"I've seen this symbol in town before. It's carved on a public well in front of the old Rutland Monastery.\"\n\n\"You have monks in this village?\" I asked in surprise.\n\n\"We have for centuries as far as I know. They work with the church to feed the poor and help farmers when they're down on their luck. Abbot Ren often visited the farm after Mama disappeared to check on Papa and me. Ren tried to talk Papa into sending me to the monastery to become a monk's apprentice. Getting me out of the way would have helped Papa find another wife, but he refused. Papa knew he couldn't have children, and he wasn't about to abandon the closest thing he had to a real son. So, here I am, a witch's apprentice instead of a pious monk, and I'm not complaining,\" he grinned.\n\n\"Interesting... Witch Wardens and the church are at odds most of the time, but they know managing demonic forces without us is a fool's errand. I need to visit the church and the monastery to introduce myself. They need to know the mischief of Halloween will be successfully managed.\"\n\nGlen graciously assisted with my bath while I tested his magic. He learned five basic spells within an hour. He was a natural, and his pull on energy was almost as strong as mine. I was already planning to make him Rutland's spirit host for the festival. I figured I would break the good news to him on Halloween. He was still adjusting to having magic and dealing with a horny witch. I didn't want to burn him out before the big night.\n\nGlen and I dressed and headed into the village to get started on my Halloween festival checklist and to start my search for Tonya. We stopped by every bakery and candy shop to check their inventory and recipes. I gave everyone ingredient recommendations to help make their treats more potent for Halloween night. Certain spices revealed themselves to be favored by the Spirit of Halloween. The flavor shifted every year. Ginger root and caramel were glowing orange in my vision that fall. Adding small traces of those flavors into the festival foods would lure in the good spirit and increase its blessings. The chefs and bakers welcomed me with smiles of relief. They were getting nervous about food planning in the absence of a witch. Bad food combinations could repulse a good spirit and invite a bad one into the village. Getting the food and candy sorted out was a huge relief. Lousy candy would lead to disappointed children, and nothing repelled a good spirit more than disappointed children. Keeping the kids happy also made the parents happy. It was a win for the entire village.\n\nEvening was approaching as we made our way to the monastery on the north side of the village. Glen led me to the well in front of the tall stone building and showed me the symbol from my drawing. It was carved into a step just below the fountain. I shuddered as I looked at it. I wanted to say I had seen it many years ago, but I hadn't. Negative energy was floating about the area, but I couldn't pinpoint where it was coming from.\n\n\"Glen, something isn't right here. I feel scattered negative energy. It's bizarre,\" I whispered as I stared at the simple gray stones of the monastery.\n\nIt looked like an old orthodox cathedral that had been stripped of its ornamental features. The domed roofs were covered in gray slate instead of the usual red tiles. It looked cold and ominous instead of inviting. The only colorful thing about the place was a little smiling statue standing to the right of the front door. It was a garden gnome with a blue jacket and a pointy red hat. The more I stared at him, the more sinister his little smile became.\n\n\"I can introduce you to Abbot Ren. He's friends with my father. He will happily help us if he can,\" Glen said as he walked up to the large wooden doors and knocked.\n\n\"If you say so. Witches are usually on their own in matters like this,\" I sighed and stepped up behind him, keeping a wary eye on the creepy gnome to my right.\n\nI was considering knocking the thing over on its face when the door was pulled open. A man in a brown hood and cloak stepped outside and bowed low to us. Glen automatically bowed in return. Following his lead, I rolled my eyes and did the same. Silly formalities like bowing annoyed me. The ancient monk practice of always hiding their eyes under their cloaks annoyed me too. Holy men shouldn't have to hide anything. Demons often hid because they were up to no good. It wasn't an honorable tradition to follow.\n\n\"Glen Thomas, it's wonderful to see you,\" the man announced in a handsome voice before pulling Glen into his arms for a brotherly hug.\n\n\"Abbot Ren, it's wonderful to see you too. It's been months since you visited the farm. Have you been well?\" Glen asked as he drew away from the man.\n\n\"I have. The holy brothers and I have been busy helping the villagers with the harvest. Is your father well?\"\n\n\"He fell ill a few days ago, but he's well now, thanks to my new friend Gilda. Abbot Ren, I would like for you to meet Gilda Sprig, the new Witch of Rutland.\"\n\n\"How wonderful! A new witch has arrived just in time for Halloween. Welcome to Rutland, Miss Gilda Sprig,\" Ren said and offered me his hand.\n\n\"Thank you, Abbot Ren. It's a pleasure to meet a man of the Brown Robe Order,\" I grinned as I stepped forward and grabbed his hand.\n\nA frigid shock of cold energy pierced my mind when I touched him. It scared me half to death and left me reeling. I yanked my hand back and stepped away from the abbot. My head was suddenly throbbing, and I couldn't see straight.\n\n\"Gilda, what's wrong?\" Glen asked in concern.\n\n\"Oh no,\" Ren sighed as he stepped past Glen and touched my shoulders to steady me.\n\nI wanted to dash away from him, but I was still stunned by the cold shock. All my efforts were focused on not falling down.\n\n\"I'm sorry, Gilda. I shouldn't have touched your skin after performing death rights for a funeral this morning. Members of the Brown Robe Order wield runes in their hands that stun magic and ward against energy channels. The markings are still on my palms. It protects us and the recently deceased from encountering magic channels that could trap their souls,\" he explained as he helped me over to the steps so I could sit down.\n\nI groaned and propped my face in my hands. I couldn't catch a break that day.\n\n\"Will she be alright?\" Glen asked worriedly as he sat next to me and held my shoulders.\n\n\"She should be fine in a few minutes. She got a dose of caustic energy from the rune markings. Witches have abundant stores of all kinds of energy. Order runes burn it away. I rarely encounter witches. I completely forgot to be careful about touching her skin. I'm terribly sorry for hurting you, Miss Sprig,\" Ren said.\n\n\"Don't mention it,\" I grumbled. \"My head is clearing a little already. I was unaware that monks used such magic. May I see the rune markings?\"\n\n\"Of course,\" he said and showed me his palms.\n\nThe circle and dagger symbol was painted across his palms with faded black ink. I was astonished that I had never encountered something like it before. A power that could stun a witch should have been well documented by the Witch Wardens.\n\n\"I've never seen this before. Do all monks use runes?\" I asked as I looked up at Ren's face.\n\nMost of it was hidden under the shadow of his hood. What I could see of his lips and jaw told me he was too young to be an abbot, but I didn't know enough about monks to question it. Witch Wardens thought of monks as weak and harmless. They weren't supposed to be a threat to witches or magic channels, but Abbot Ren almost knocked me on my ass with a handshake, and he smelled of a burnt herb that was stinging my nostrils.\n\n\"These runes are distinctive to our monastery. We're the only monks that use them that I know of. My predecessor, Abbot Clarence, taught me how to use them over twenty years ago. He recently crossed the veil to join the High Father in his heavenly realm. God give rest to his pious spirit,\" he whispered and used his hand to draw the symbol of the circle and dagger over his face and heart.\n\n\"I'm sorry to hear about the passing of your mentor. Please, tell me more about him. I'm still too tired to stand,\" I noted, playing up my weakness with a tired sigh.\n\n\"Abbot Clarence had a powerful soul. He was a blessed member of the Brown Robe Order. He was born with the ability to channel negative energy that negated any other energy he touched. Abbot Clarence studied under a wizard to discover what rune represented his unique power. That's where this symbol came from. It's the only rune capable of guiding the negative channel. With dedicated training, all the monks here have learned to use it.\"\n\n\"That's fascinating,\" I nodded. \"I wish I could have met Abbot Clarence. He may have been a warlock as well.\"\n\n\"He was definitely something special. His body rests in a glass coffin in the catacombs below the monastery since he was a revered member of our order. You're welcome to visit him and pay your respects if you like, Miss Sprig.\"\n\n\"I'll have to do that later. I don't feel up for it at the moment.\"\n\nWe spoke with Abbot Ren on the monastery steps for a few more minutes, allowing me to recover my bearings. Glen informed the abbot that I had discovered his mother's remains in the pond by the woods, and he planned to place them in the catacombs with her next of kin.\n\n\"Well, It was wonderful meeting you, Abbot Ren,\" I announced and pushed myself back to my feet. \"Glen and I need to get back to our errands before it gets dark. Take care.\"\n\nGlen and I made a quick exit after that. My body still felt strange after touching Ren, and I didn't buy his story. Only witches and warlocks could channel power like that.\n\n\"Glen, how long have you known Abbot Ren?\" I asked as we passed through the busy village square. The air smelled delicious as bakers and candy makers worked on their Halloween offerings.\n\n\"All my life. Papa and I consider him a family friend.\"\n\n\"Have you ever seen his face?\"\n\n\"No. He's a monk. He always wears his hood. Even the times he helped Papa harvest the wheat.\"\n\n\"How weird,\" I grumbled.\n\n\"Gilda, he's a friend. I have no reason to doubt him.\"\n\n\"I trust you, Glen, but I don't trust the monks. I saw that rune carved in the beam over the door in the dungeon where Tonya was being feasted on by that monster incubus. I also felt negative energy below the monastery. It was scattered, but it was there.\"\n\n\"Well, we can investigate the catacomb tomorrow after Papa and I place Mama's bones there for her final rest. It's hallowed ground. I thought demons couldn't dwell in a place like that.\"\n\n\"Not all demons are alike. The scariest ones can do almost anything a human can do and wield catastrophic dark magic. I'll feel better after I have a look around. Glen, I hate to put this on you so soon, but I was hoping to offer you as the host for the Spirit of Halloween. I trust you not to offend him, and I'm running out of time to find someone else. You're the only person I've had the chance to get to know.\"\n\n\"Yikes... is it safe to be a spirit host?\"\n\n\"Of course, Glen. It's an experience of a lifetime. You'll be inhabited by a powerful spirit for an entire night. Your mind will be opened across the veil. You can call on the spirit's magic and help guide its blessings throughout the village. I'll be by your side the entire time if I can. I would be the host if I could, but I'm new to Rutland. It's not a part of me yet. You've dwelt in the energy of this village all your life and lived off the food grown in its soil. It's literally in your flesh. That makes you an excellent host.\"\n\n\"Oh, okay. I'll do it,\" he nodded.\n\n\"Excellent. Thank you, Glen. I want you to head home now, check on your father, and get a good night's sleep. I'll meet you at the monastery in the morning for your mother's ceremony.\"\n\n\"Alright. Um, do you need my services before I go?\" he smirked as we stopped at the edge of the woods.\n\n\"Hmm, maybe. Do you need mine?\" I asked as I stepped closer to him and ran my fingers down the side of my neck.\n\n\"I'm not craving it yet, but if you're offering, I'll take it.\"\n\n\"I see. One good hit of blood a day may be all you need to stay sane. But, just in case, let's have a quick romp.\"\n\nI pulled Glen into the shadows of the trees and laid down on a soft bed of moss. He watched me pull up my dress and spread my legs, revealing my lack of underwear. He licked his lips as he knelt between my thighs and pushed his breeches off his hips. He was already raging hard. He guided his cock into my cunt and crawled over me. He pushed hard inside me, filling me up with his girth as he slid his tongue into my mouth. I groaned as he settled down against my breasts and fucked me like a lover. The taste of his mouth and the smell of his breath washed away the strange feelings caused by the cold rune. His hard meat massaging my birth canal invigorated my magic. He was getting more aggressive as he kissed down my neck, often sucking on the skin. His fangs were extended and eager to stab their way to sustenance.\n\n\"I love how your pussy squeezes my cock,\" he groaned with hot breath against my neck.\n\n\"I love feeling it push through my muscles when I squeeze it. Fucking is a passionate struggle. Bite me as you cum,\" I panted.\n\n\"As you wish,\" he breathed and fucked me harder.\n\nI felt his orgasm tense his groin as he pushed deeper inside me. My mind went blank when he sank his teeth into my neck. I cried out with an orgasm a second later. My hips bucked against the ground as hot cum gushed inside me. The sound of wet fucking accompanied Glen's shaky thrusts as orgasm wrecked his rhythm. He groaned in ecstasy as his carnal cravings were satisfied. We squirmed and shook as the pleasure subsided. Soon my ass was sitting in a warm cum puddle.\n\n\"I love potency spells,\" I grinned as Glen licked the wound on my neck, healing it in a matter of seconds.\n\n\"Me too, but I fear it will dehydrate me. I'm not drinking enough blood to restore it,\" he chuckled.\n\n\"Drink plenty of water tonight. Witch's orders.\"\n\n\"I will. Thank you, Gilda. I'm already looking forward to seeing you again tomorrow.\"\n\nGlen eventually climbed off of me and returned his cock to his pants. Then he gave me a sweet kiss goodbye as we bid farewell for the night. I watched him from the edge of the woods as he disappeared over the hill in the southernmost meadow. Then I donned my purple cloak for my return visit to the village. I wanted to investigate the monastery while Glen was safely away from it. Glen trusted the powerful abbot too much for my comfort. I planned to write a detailed letter about their use of magic runes and send it to the head of the Witch Wardens. Any use of magic among humans needed to be monitored. Witches made good efforts to remain open about our magical practices. We had nothing to hide. The monks would have to do the same if they wanted the realm to trust them.\n\nThe stars and harvest moon were shining high overhead as I approached the monastery. The streets were less busy as folks sat down for supper with their families. Candles were burning in the monastery windows as I approached the front doors. I rolled my eyes at the little garden gnome's sinister grin before I knocked. Abbot Ren greeted me a minute later.\n\n\"Oh, Miss Sprig, I'm surprised to see you again so soon. Is something wrong?\" he asked.\n\n\"I'm not sure yet. I sent Glen home so I could question you without distraction. Forgive me for not shaking your hand. It went poorly for me last time.\"\n\n\"I'm terribly sorry about that, Miss Sprig. It won't happen again. I simply feel awful for hurting you. Please, come in out of the cold. My brothers are just sitting down in the refectory for supper. I have an hour of free time to give you while they're occupied.\"",
        "\"I hate to interrupt your supper. You're welcome to join your brothers while I explore the catacombs. I get along just fine with the dead,\" I smiled as he led me into the simple candlelit foyer of the old monastery.\n\n\"I'll be fine, thank you. I owe you my attention. I'm currently fasting in preparation for the Halloween festival. I'm a surprise judge for the pie baking contest this year. Don't tell my brothers,\" he grinned as if it were the scandal of the century.\n\n\"Oh, that sounds delicious.\"\n\n\"I'm counting on it. So, would you like a tour of the catacombs?\"\n\n\"I would, thank you. Lead the way.\"\n\nAbbot Ren was chatty and always ready to smile as he led me down the back corridor of the monastery and into a spiraling stairwell. Ren's friendly demeanor and Glen's trust in him put me at ease, but I didn't drop my guard. I was a young witch, but I wasn't stupid. The stone passage was cold and well used, judging by the wear on the steps. I noticed the circle and dagger rune carved into the beam above the entrance to the stairs. It worried me less since I understood how it worked. Besides, I began fortifying my skin with an energy spell while I was fucking Glen in the woods. If the abbot attempted to touch my skin, he wouldn't be able to penetrate the energy layer for a solid thirty seconds, giving me plenty of time to fight back. I kept him in my line of sight as we entered the candlelit corridors of the catacombs. At least twenty stone corridors branched out from the landing at the bottom of the stairs. To my dismay, another creepy gnome statue with a pointy red hat was standing against the wall, smiling like he was up to no good. I ignored it as I opened my mind and searched for the negative energy I felt earlier, but it was still scattered on the edges of my perception. The whole area felt calm and safe.\n\n\"Rutland is a small village, but you wouldn't guess it by the size of the catacombs,\" Ren said as he pointed to a map etched into the wall at the base of the stairs. \"There are two main levels that expand in all directions from this point. Each level has its own map close to the stairs. I've gotten lost in here a few times over the years. Just keep wandering if that happens. You will eventually find your way back to the stairs.\"\n\n\"Good heavens... are all those little dots grave markers?\" I asked as I ran my finger over the textured map.\n\n\"They are. I reckon about forty thousand graves are down here. Abbot Clarence once said an ancient battle to the north of Rutland helped create the first level of the catacombs. The village wasn't even established then.\"\n\n\"Why is there another staircase with an arrow pointing down? Is there a third level?\"\n\n\"There is. It's a sacred chamber where we entomb revered abbots and bishops. Abbot Clarence was the most recent holy man to be laid to rest there. His body is well preserved in a glass coffin if you would like to pay your respects.\"\n\n\"I think I would like to visit such a well-respected abbot. Please, lead the way, Abbot Ren.\"\n\nRen smiled and retrieved a handful of ceremonial incense from a shelf for us to burn in memory of Abbot Clarence. Then we began our trek downward. Many more stone corridors branched out from the second landing where another smiling gnome statue stood sentinel. Ren counted four doors from the right of the stairs and waved for me to follow him into a dark hall. He was lighting candles as we walked, revealing shelves upon shelves of stone coffins to our right and left. Another staircase was at the end of the hall. Ren pulled a small torch off the wall for our last trip downward. The third landing was a single corridor that went on for another hundred steps. It ended with a locked door. Ren used a key on his belt to open it, revealing a long chamber that smelled of burnt spices.\n\nRen turned his attention to lighting more torches along the back wall, bringing a warm glow into the holy chamber. The floor was decorated with a soft burgundy rug. Cushioned benches lined the walls between the torches. Glass coffins on stone pedestals were ornately decorated with preserved flowers and golden hinges. Finely dressed corpses in different states of decay were eternally resting inside the fancy boxes. Each tomb was partitioned with stone walls, and a stone altar sat before the coffin for burning incense.\n\n\"Abbot Clarence is resting at the end of the chamber on the left. I'll join you as soon as I replace the torches that won't light. My understudy has been neglecting his chores again,\" Ren sighed as he gave me the bundle of incense and pointed to the left.\n\nI watched him open a storage closet on the opposite corner to find some fresh torches. The energy in the holy chamber felt tranquil. I could easily recline on a bench and take a nap in the blissful silence, but I had investigating to do. So, I wandered to the left to catch a glimpse of the legendary Abbot Clarence. I couldn't see much of his face from behind the incense altar. I lit the herbs and dropped them in the copper bowl before peeking over my shoulder to check on Ren. He was busy wrapping the end of a new torch, so I crept over to the coffin and climbed the steps beside it. I leaned over the top to see the corpse's face, and my heart almost jumped into my throat. Abbot Clarence was the handsome incubus with caramel-colored hair. He was the one feeding on Tonya when I jumped into her body. He also looked like an angel when he slept.\n\nI clapped my hand over my mouth to keep from blurting out a curse as I quickly backed away from the glass coffin. My heart was hammering against my ribs as I tried to understand what was happening. I sensed nothing from Clarence's body. He had no good or bad energy about him. He felt dead, but he didn't look dead. I glanced at Ren to see him busily wrapping a second torch. I wondered if the friendly monk knew his late mentor was actually a monster in hiding.\n\n\"What's wrong, Miss Sprig? Your breathing sounds upset,\" Ren called without looking up from his work.\n\n\"I uh... need to be leaving now,\" I stammered and hurried towards the door.\n\nTo my dismay, two more cloaked monks stepped through it at that point, blocking my exit.\n\n\"Ren, what the fuck is going on?\" I demanded as I backed away from the men, preparing to release a torrent of psychic pain into the room.\n\n\"Master Clarence wanted to meet you in the flesh, Miss Sprig. It's a tremendous honor. You should be proud. He'll be awake soon, and he'll be hungry,\" Ren said as he lit the new torches and placed them in the empty holders on the wall.\n\nI glared at him as he stepped around the new monks and approached me. He stopped a few steps away and smiled like a sneaky devil.\n\n\"I knew there was something off about you, Ren. Instead of serving the village, you harbor a monster in your basement that will ruin it. How long have you been lying to Glen and Micah? Did your master kill Glen's mother after spawning a demon in her womb?\"\n\n\"He did. Glen's mother died an honorable death to serve Master Clarence. Micah was supposed to die as well. His death would have helped bring our powerful sister into the world, but you came along and killed her before she could leave the pond. Thanks to you, Glen's mother died for nothing. How do you think Glen will feel when he learns that? Had you not interfered, Micah would be dead, our sister would be with us, and our little brother would have finally joined us. Glen belongs here, not on a farm. I live to protect my family, Miss Sprig, and you seriously fucked up our reunion,\" Ren growled.\n\n\"Glen is your little brother?\" I asked in astonishment.\n\n\"He's OUR little brother,\" he snapped and pulled his hood back.\n\nThe men behind him did the same. I stared open-mouthed as they revealed their familiar brown hair and bright gray eyes. They all had a striking resemblance to Glen. Ren could be his twin. They were all children of the monster sleeping behind me. Suddenly, an evil chuckled from the back of the room revealed that he wasn't sleeping anymore. My blood ran cold at the sound. To say I was in trouble was an understatement, and to say I was simply scared was a bigger understatement. I had walked into a hidden nest of evil that was a century in the making. No one would have seen it coming.\n\n\"Gilda, it's lovely to see you in your own flesh,\" purred a handsome voice from behind me.\n\nI felt his breath on my neck, and my stomach dropped. He was way too fucking close to me, and I hadn't even sensed him yet. Evil energy should have been billowing out of him like smoke, but there was nothing.\n\n\"Why can't I sense you?\" I whispered.\n\nI jumped when strong hands grabbed my arms. He held me still as he ran his nose along the side of my neck, breathing me in and pushing through the protection spell on my skin. The spell fled at his touch. Then he dosed me with incubus magic. Tingles raced through my insides as moisture gathered between my legs.\n\n\"Mmm, you smell delicious,\" he breathed against my neck. \"You're shaking like a leaf, Gilda. Relax. If you cooperate, I won't kill you or hurt you. As for your question, an old wizard trained me in the art of caustic flow and helped me develop my very own rune to wield it. All I have to do is think about the incantation, and it activates the rune in my hand. He also helped me collect the corpses I needed to widen the caustic void channel. It swirls through these catacombs like a hungry monster, ready to devour the energy I nudge into it. It also makes it impossible to sense me without touching me,\" he chuckled before he jerked me around to face him.\n\nMy heart sputtered at the sight of his brilliant gray-green eyes. He was wearing a simple white linen robe held closed by a red sash. Clarence was a beautiful monster that could slap magic aside like an insect, and he lured me right into his trap.\n\n\"Where is Tonya?\" I demanded.\n\n\"She's safe. You eavesdropped on us at the best possible time. Did you enjoy it?\" he whispered as he trailed his fingers into my hair.\n\nI gulped and tensed, waiting for the cold shock I felt when Ren shook my hand earlier, but it never came. Seductive warmth radiated out of Clarence's hand as he massaged the back of my neck and kissed my forehead, intensifying the erotic tingles and growing wetness between my legs. I needed to act fast before he convinced me that I was enjoying my abduction. I released a psychic scream from my mind that should have sent every person in the room straight to the floor in agony, but it was met with chuckles. I gasped and looked at Clarence in disbelief.\n\n\"I was hoping you would try that. It tickled,\" he grinned.\n\n\"What the fuck? How are you doing this?\" I demanded.\n\n\"It's not me. Well, not directly. The void vortex created by the catacombs disrupts spell casting channels. Any magic projected into the channels is absorbed into the void, but I can still seduce you with a touch. Our bodies aren't affected by the void. That's why I needed the rune. The rune on my palm can temporarily push the void right into a person's skin. Then it sucks the energy right out of them. My sons can do it too.\"\n\n\"Are all the monks your offspring?\"\n\n\"They are. Male children are plentiful and often hybrids. Females are rare and more likely to be demons.\" \n\n\"So you built a supernatural army in the middle of a human village. Why?\"\n\n\"Why not? I'm safe from the world down here. My family will soon purge the village of anyone that despises our kind. My sons have been expanding the catacombs for a century. We're ready to harvest thousands of new corpses to expand the vortex. Every dead body that I mark with my rune will strengthen the void. Soon, the entire village will be a part of it. Not even the Witch Wardens will be able to stop us then. Rutland will become a city led by vampires. Humans that want to serve us are welcome to stay. After all, being a vampire subjugate has its perks. Who doesn't enjoy mind-blowing sex?\" he purred as he leaned in and kissed my mouth.\n\nI shuddered as he pulled my lower lip between his teeth, scratching it with his fangs. His mouth tasted really good, and the erotic energy flowing out of his skin made my cunt drip. I needed to stay focused.\n\n\"I uh... like sex... but you would probably put a demon spawn in my womb,\" I countered.\n\n\"I could if you wanted me to. It's an unholy and intensely erotic experience. I would have to hold you down and pump you full of cum for days. It's the most exhausting and most rewarding ritual an incubus can perform. I've never done it with a witch before. Sacrificing a body as powerful as yours could open a proper gate to Hell.\"\n\n\"Is that what you're trying to do with Tonya?\"\n\n\"No, I was using her to lure you here. She offered to be submissive if I would continue to torment her with wild sex. Witches are a cum-thirsty bunch. It's not surprising. Having a vampire hybrid for a parent predisposes a majority of witches to cum addiction,\" he whispered as he began untying the stays on my bodice.\n\n\"Why were you trying to lure me here?\" I asked in confusion.\n\n\"I need two nature witches to help me expand the void on Halloween night. Do you see the vines on each side of my rune circle?\" he asked as he showed me the tattoo on his palm. \"They symbolize nature witches. Tonya draws power from the sun like you draw power from the moon. You both will be placed in chambers on the outer edges of the underground tunnel that make the new rune circle. The chamber we're currently in represents the dagger at the heart of the rune. When the veil is at its thinnest point tomorrow night, I will cast a spell to activate the new rune, and it will punch a hole in the veil and expand the void to the edges of town. The Witch Wardens will be defenseless if they enter my town after tomorrow night, and you're going to help me realize my dream. You owe me that after killing my daughter. I wanted her to be the first queen of Rutland.\"\n\n\"You built a subterranean rune circle that will negate magic from the entire village... that's fucking brilliant,\" I breathed as Clarence freed my breasts from my bodice and caressed them with his warm hands.\n\n\"Your breasts are fucking brilliant. They would feel amazing on my cock. Ren, are Gilda's bed chambers ready? I think it's time we christened the sheets.\"\n\n\"They are, Master.\"\n\n\"Excellent. Lock her in the inner chamber for now. I don't want her outside of the vortex where she can spirit-hop to find help. Gilda is more powerful than Tonya. We have to be extra careful with her. Once she's properly weakened, strap her to the table in the outer chamber and prepare her for the ritual. Halloween night is almost upon us,\" he smiled as he searched my eyes.\n\nRen and his brothers seized me at that point and dragged me through a door on the far right wall of the holy chamber. After a minute-long walk down a dark hallway, we passed through another door into a stately bedroom that was cut in half by a wall of bars. I rolled my eyes to discover another creepy gnome statue standing beside the door. An oversized round bed covered in red satin sheets sat in the middle of the room. It was a luxurious dungeon. Beyond the bars, standing alone in front of a stone wall, was a black-cushioned table covered in leather straps. I knew Tonya was in a similar room on the opposite side of the rune circle. I was able to jump into her when she was strapped to her table beyond the bars. The outer chamber was positioned just outside of the vortex so our magic could be used during the spell, but after Halloween night, the vortex would grow to encompass the entire village. Rutland was doomed to be ruled by vampires if I couldn't get out of the catacombs before the festival.\n\n\"Welcome to your new home, Gilda. Strip for us, please,\" Ren ordered and nudged me towards the large bed.\n\n\"Why should I strip for you, minions?\" I asked with an eyebrow raised.\n\n\"Because it will be easier for us to pleasure you if you're naked.\"\n\n\"I thought the master was going to fuck me, not you three. I'm sure he's better at it.\"\n\nThe men chuckled and exchanged amused looks.\n\n\"Gilda, did you enjoy fucking Glen? I can smell him all over you. You definitely fucked him more than once.\"\n\n\"I did. What does that have to do with anything?\"\n\n\"Well, fucking us will be like fucking three of him at the same time. Our incubus powers are the same. Would you not enjoy that?\"\n\nI stared at Ren with my mouth open for a moment. I would definitely enjoy fucking three Glens.\n\n\"That's very tempting. Are you going to feed on me too?\"\n\n\"Of course, we're starving, and witch blood will strengthen us for the Halloween ritual. It will also weaken you, so you can't hurt Master Clarence.\"\n\n\"Ha! It's going to take more than three hybrid vampires to weaken me,\" I laughed.\n\n\"I know,\" Ren smiled as the chamber door opened behind him.\n\nI watched in disbelief as twenty more monks filed into the room and pulled their hoods back. They all resembled Glen in one way or another. I was shamefully wet and tingly as I admired the crowd of vampires that intended to fuck me. Little did they know, I would feast on them too. Clarence knew I was stronger than Tonya, but I doubted he knew how sex and cum excited my magic and sustained my physical form. Clarence and I were both getting our fantasies fulfilled for Halloween. Well, Clarence wouldn't get his if I could prevent it, but the next few hours were looking distracting for me.\n\n\"Gilda, strip for us, please,\" Ren ordered again, pulling my attention back to him.\n\n\"Certainly,\" I grinned.\n\nI finished untying my dress and slowly peeled it off my tempting curves. The tension in the room was delicious as I stepped out of my clothes and proceeded to massage my tits, working my nipples into suckable peaks. Even without moonlight, my exposed flesh was a feast for the eyes and cast a spell of seduction. The vortex didn't interfere with vision spells. The men would have to be blind to avoid my tempting body. I could see the spell working in their curious expressions, and it gave me an idea. Making sure I had everyone's attention, I began concentrating my magic into my skin, enhancing the vision spell.\n\n\"Mmm, I love being the center of attention in a room full of horny men,\" I purred as I ran my hands down my smooth stomach and over my thighs, guiding their gazes.\n\nMy left hand cupped my tit as I slid my fingers through the little patch of hair on my mound. The men's eyes were sleepy and full of mist as they watched my fingers slide between my thighs. I groaned and shuddered as I massaged my clit and squeezed my left breast, provoking more arousal in them and myself.\n\n\"Everyone, strip for me,\" I ordered as I slid my fingers through my swollen labia and into the slippery arousal that had collected there.\n\nI watched the men untie their robes and let them fall to the floor. My inner muscles twitched with want at the sight of their erect cocks. I groaned and slid my fingers into my cunt as I looked among their faces. I could tell their fangs were extended and just as eager to penetrate me as their cocks, but I was in control at that moment. They would have attacked me if I weren't. My cunt tightened on my fingers as I imagined what I would do to them. I was getting high on the sexual tension alone. Lining the men up and sucking them off one by one would have me buzzing with magic. I needed to keep them entranced. My fingers were soaked when I finally slid them out of myself and held them up for everyone to see. They glistened in the torchlight.\n\n\"Ren, would you like a taste?\" I whispered and beckoned him forward with my wet fingers.\n\nThe handsome vampire stepped closer and took my fingers into his mouth, and gently sucked them. He moaned as he enjoyed my flavor and scraped his teeth over my skin. The touch of the incubus's lips intensified the arousal aching in my cunt, and my thoughts went a little blurry. The exchange of magic through our skin made the pull of the vision spell stronger. I could hear the excited breathing of the vampires as they slowly stepped closer to their entrancing feast. My feast was also about to begin. I could easily collect their copious amounts of sexual energy and use it to make my blood intoxicating.",
        "\"I know you're all hungry, but some of you will have to wait for your meal. Take turns like gentlemen. The longer you wait, the sweeter and more satisfying my blood will become. If you please me, there will be seconds. Five men on the bed at a time is reasonable, but we'll start with three. Do not waste your cum, or I'll be angry. Your first offerings go inside me. After that, you're welcome to leave it on my skin if you can't find an available hole. The closest three go first. Come and satisfy yourselves,\" I ordered.\n\nRen smiled and bared his hungry fangs before he shoved me onto the bed and climbed over me. I couldn't resist his seductive touch as his tongue went into my mouth, and his cock plowed into my swollen cunt. He fucked me like he was starving. I felt him shudder from the potent magic exchange flowing through our blushing skin. I also felt two more men climbing around us on the bed. Ren quickly rolled us both over, putting me on top of him as a hard cock appeared above my head. I raised up and pulled the thick meat into my mouth. I groaned as salty precum hit my tongue. Then I felt someone's hands squeezing my ass cheeks right before a hot tongue invaded my anus. I jumped from the strange sensation. Then my eyes rolled back as his tongue explored inside me. He was working pleasure and moisture into me. The tongue withdrew a few seconds later and was replaced by the tip of a swollen penis. I groaned as he pushed against me, stretching my tighter hole open with his tip. He went slow at first, giving me time to adjust to the intrusion. As soon as I relaxed, he proceeded to enter me with his throbbing shaft. I went shaky with pleasure to be stuffed with three hard cocks. The stimulation and the incubus magic flowing out of their skin sent my magic buzzing.\n\nThe vampires fucked, licked, bit, and massaged me into a horny daze. Ren was drinking his fill from my neck as his cum burst hot in my pussy. The heat of his orgasm sent pleasure racing through my cunt. I shook and tensed as the other cocks inside me grew harder. Hot semen poured inside my anus, followed by a juicy burst on my tongue. My mind turned to mush as I indulged in the magic the men were giving me. They found different places to feed on my blood before they exchanged places with a fellow vampire. I was shuffled between their horny bodies until I was lying on my back against someone's chest. A new cock quickly pushed into my slippery ass, making me gasp. My opened mouth was quickly filled with a new raging hard penis dripping with precum. I gave it a welcoming suck as another thick cock sank into my pussy.\n\nMy hands were guided to eager cocks on my right and left. I happily stroked them as the cock in my mouth began to thrust into my throat. The shafts in my ass and cunt were already working me towards another orgasm. I was brimming with magic as I enjoyed the multiple penetrations and the hot bodies around me. My muscles trembled, and my tits bounced as the men moved me with their passion and hunger. I groaned as another thick load of semen burst in my mouth. I swallowed it and promptly guided the cocks in my hands closer to my face. They knew what I wanted and took turns reaching orgasm against my tongue. I lovingly stroked and sucked their trembling shafts until they gave me every last drop. More cum flowed into my anus and pussy as men tensed and groaned around me.\n\nMy body soon hit a state of wet ecstasy. I was absorbing their salty passion with ease. The excess of magic added to the euphoric pleasure inside me, and I was craving more. New magic was awakening in my mind, and it needed to be fed. In the middle of the mad fucking, my own words to Glen came back to me. \"You're stable from what I can tell, but that could change one day.\" My succubus ancestry wasn't as stable as I first thought. I also never had an orgy with a monastery full of hybrid vampires. My body was being saturated with their magic, and it was fueling my second nature. I needed to feed it, or I would go mad. I quickly sucked the last drops of cum out of the cock in my mouth and pushed it away so I could speak.\n\n\"I need more cocks and cum inside me. Six men on the bed, please. Two cocks in my pussy, one in my ass, and three over my face,\" I ordered.\n\nThe men obeyed me instantly. I was lifted and shuffled as new raging hard penises arrived on the bed to replace the spent ones. I groaned and tensed as an exceptionally thick cock thrust into my soaked anus while strong hangs squeezed my breasts. Then two more cocks took turns stretching my slippery vagina. The man on top of me strongly resembled Glen around his eyes. I pulled him down for a kiss as the third cock forced its way inside my stuffed vagina. I gasped and twitched as orgasmic tingles tightened my pussy on the meaty rods. I pushed the man on top of me away from my face so I could see the dripping cocks gathered over my head. I was trembling and panting as the men inside me began to thrust. My mouth was quickly filled with another thick penis, and my eyes rolled back as I enjoyed the overwhelming penetration. I grabbed the remaining two cocks and stroked them, enjoying their hard lengths in my grip.\n\nThat's when I felt it. Succubus power had completely awakened in my mind. It was a dominating force that I could push into the bodies around me through my skin. It had been hiding in the depths of my consciousness all my life. Being drenched in vampire magic and cum had awakened it, and I was ready to test it. I pulled the cocks in my hands closer to my face, then I used my new magic to force every vampire touching me to cum in unison. The men gasped, groaned, shook, and cursed as powerful orgasms raced through their bodies. Then semen exploded inside my cunt, anus, down my throat, and all over my face. I shuddered with pleasure as the hot milky flood dripped out of my various holes, down my face, and into my hair. Once I drained the men touching me, I literally shoved them back with my magic in spite of the void. They collapsed in an exhausted pile around me, allowing me to see my next victims. The men were crowded around the bed, seduced by the arousing magic pulsing through my skin. They desperately needed to give me their cum.\n\nI beckoned six more men onto the bed to stuff my horny body. They scrambled over their exhausted brothers to shove their cocks into my pussy, ass, mouth, and hands. I encouraged them to fuck me harder and harder. The brutal stimulation satisfied the intense arousal pulsing inside me, but my thirst for cum was still strong. I pulled the cocks in my hands closer to my face, then I forced all the men to orgasm. I could control the pleasure as it spread through their groins and into their cocks, pulsing like hot water inside their muscles. I loved feeling them lose control inside me as they gasped, tensed, grunted, and cursed with each explosive burst of semen. The pleasure coursing through their veins was exhausting. I made sure of that. They soon fell away and collapsed next to their brothers on the bed.\n\nMy body was high on pleasure and magic as I stretched out in the middle of their sweaty pile. More men were eagerly waiting around the bed for their second summons. I knew what I wanted at that point. One by one, I touched the men that were resting around me, infusing their bodies with arousal and energy. They all jumped to their knees with their cocks standing at attention.\n\n\"Surround me and drown me,\" I ordered, prompting the rest of the men to climb onto the bed.\n\nThe men squeezed together in a circle around me, ten at a time, eagerly pumping their cocks. I guided one cock into my mouth and another into my cunt, and they pleasured themselves inside me as the rest of the men pumped their cocks over me. The men's shoulders and arms were touching, giving me a link through all their bodies. I pulsed my horny magic through them like a flash of light, and they tensed with orgasms. I groaned as milky streams of semen splashed onto my tits, face, stomach, and thighs. I shook with orgasm again as the men in my mouth and cunt pumped me full of more salty cream. Once the first group was spent, they backed away and made room for the second group.\n\n\"Wait, I want my pink trench flooded. My ass too,\" I panted as I spread my legs wide and pulled my knees to my chest.\n\nThe men gathered around my raised cunt and began pumping over me three at a time. I watched as milky white streams shot out of their tips, drenching my labia and dripping down my perineum and into my anus. I groaned and flexed my inner muscles, encouraging the thick white pool between my swollen lips to ooze into my birth canal. More men crawled forward to replace the spent cocks. They quickly pumped fresh jizz into the white puddle on my cunt and anus. I groaned as I used my fingers to massage the mess deeper inside my pussy and ass. I grabbed the cocks that were close to my elbows and encouraged them closer so I could stroke them over my tits and mouth. Soon, more streams of cum were pumped onto my tongue, soaking my tits and splattering my pussy. My body was drinking their semen, sating the cravings they had awakened. I was also exhausting them, and soon they were collapsing around me, unable to keep up with my demand.\n\nMy pale skin was glistening with spunk as I crawled over the pile of men, eager to drain anyone that had anything left. Ren was lying on the edge of the bed, trying to rub mist out of his eyes, when I crawled over him. He gasped when I grabbed his cock and forced arousal into it, making him stiff and half an inch thicker. I didn't know I could do that, but I was thrilled to discover it. He groaned as my hot pussy sank down on his altered cock. I smiled and shuddered to have his raging hard meat inside me. I pulled the mist from his eyes as I began to ride him. I wanted him to see what he and his brothers had created.\n\n\"Gilda... you're entrancing,\" he groaned and squeezed my tits as he admired my cum soaked skin.\n\n\"You stupidly fed a monster that could destroy you. Your brothers will be out for days. Be happy I didn't kill them,\" I grinned as I clamped onto his cock with my inner muscles.\n\nHe gasped and tensed to have his cock trapped in the death grip of a freshly awakened succubus. Succubus hybrids were often more powerful than incubus hybrids. Thanks to the vampire orgy, my power rivaled a demon at that moment. I watched Ren's eyes widen as I stroked his aching meat in the vice grip of my cunt. He tensed with every brutal stroke. He knew he was in trouble and completely at my mercy. Lucky for him, I wasn't evil.\n\n\"If you cooperate, I'm only going to hurt you a little, and you'll enjoy it,\" I purred as I laid down on him and scraped my new fangs over the nape of his neck. My mouth ached for a taste of blood.\n\nHe shuddered, and his cock flexed helplessly in the grip of my birth canal. He could feel what I was feeling, and it aroused and scared him.\n\n\"I'll give you anything. Just name it,\" he breathed.\n\nHis heart was pounding against my tits, reminding me of the copious amounts of blood flowing millimeters away from my teeth.\n\n\"How do I subdue the master? What is his weakness?\" I whispered as I loosened my grip on his cock so I could massage him with loving strokes.\n\nHe groaned, and his eyelids drooped. He was enjoying my mercy as I drained his energy.\n\n\"I'm not sure,\" he breathed as he squirmed under me, rocking his hips as my pussy bounced against his base.\n\n\"Is Clarence a demon or a souped-up hybrid?\"\n\n\"He's a demon. Direct sunlight will burn him, but it won't kill him. Please, let me cum,\" he groaned.\n\nI could feel his swollen shaft throbbing inside me, needing release.\n\n\"Ah, that's what I thought. I'll need help dealing with him. Even in my awakened state, I can't overpower a living demon inside his nest. Thanks for the information, Ren. You can cum now,\" I purred before I sank my fangs into his neck.\n\nOrgasms hit us both at that point. Ren cried out and tensed as his cum burst hot inside me. I groaned and sucked greedily on his neck, satisfying my new cravings. I bounced on his meat as the orgasm rocked through my cunt. I may have growled a little as pleasure rolled through my body. I was breathless and satisfied as I relaxed on top of him. Ren groaned on the edge of faint as I licked his neck, quickly healing the wound.\n\n\"Gilda, whatever you do, don't kill my brothers. We're slaves to our father. He'll be here soon,\" he whispered before he lost consciousness.\n\nI stared at his handsome face in pity for a moment. I could almost imagine he was Glen. Glen was in danger of becoming a slave, too, if I couldn't stop Clarence from expanding the void. In spite of my new power, I needed help. Fighting an ancient demon alone in his nest of dark magic and death would only lead to more death. \n\nHalloween Day:\n\nI climbed off of Ren and slid off the sticky bed. Carefully stepping over unconscious vampires, I found Ren's discarded robe and his key ring. I unlocked the door that led into the outer chamber and quickly stepped out of the invisible void created by the catacombs. My senses buzzed as I reconnected with familiar magic channels in my new powerful state. I smiled and leaned on the cushioned table, absorbing the festive energy of Halloween.\n\n\"It's Halloween morning!\" I gasped in realization.\n\nI was seriously running out of time. I dashed to the main door of the chamber, ready to knock it down if I needed to, but I couldn't touch it. Ren had cast a void spell right in the center of it with Clarence's rune. I could see it glowing black against the wood. Only a rune-wielder could open it. If I tried to open it, I would receive a cold shock from the void and lose my magic for God knows how long.\n\n\"FUCK!\" I huffed and kicked over the little gnome statue by the door. It fell to the stones with a satisfying thump. \n\nI ran back to the outer chamber and locked myself inside the cell. Then I laid down on the black-cushioned table. I didn't know how long I had before Clarence arrived, so I needed to work fast. As a safety precaution and a sense of false security for Clarence, I locked my ankles into the leather straps and loosely looped the smaller leather straps around my wrists. It looked convincing enough and would hopefully buy me some time as Clarence tried to figure out what the fuck happened to his sons.\n\nTaking a few deep breaths, I forced myself to relax and concentrate on my magic. Lacking potion supplies, I would have to attempt a dangerous spirit jump. Potions could strengthen my connection with the spirit channel and help my body stay alive while I was out of it. Without a potion, I would have to rely on the hoards of new magic flowing through me, and that was like running a marathon after downing five shots of mushroom-laced whiskey. If I survived it, I would have one hell of a hangover. I had to find Glen. He was the only person close enough and powerful enough to help the town before the void expanded.\n\nTapping the spirit channel with my mind, I let the erratic energy seep into my body and loosen my spirit's hold on my flesh. The jarring sensation was sickening without the smoothing effects of the potion. My body convulsed as my spirit fought against the magic. It felt like I was dying, and I honestly was. If I couldn't get back to my body in ten minutes, my residual magic wouldn't be able to keep me alive. The jump was worth the risk. My alternative was being locked in the catacombs for the rest of my life as part of Clarence's rune formation. The Witch Wardens wouldn't be able to safely enter the town to rescue anyone after Halloween night.\n\nThe spirit channel was loud and shifty around my soul as I tumbled through it, desperately searching for Glen's familiar aura. The jump was ten times harder without the potion. Finding Glen and latching onto his soul would keep me from flying into oblivion, I hoped.\n\nGlen was fast asleep in his small bed at home when I crashed into him, knocking him across the room. We crashed into the wall together.\n\n\"What the hell?\" he gasped as he scrambled to his feet, ready to fight whatever hit him.\n\n\"Glen, it's Gilda. I'm anchored to your soul,\" I spoke inside his head.\n\n\"WHAT? How? Are you dead?\" he stammered as he rubbed his eyes.\n\n\"Not yet. Listen carefully, Glen. The fate of the village is in your hands. Abbot Ren led me into a trap in the catacombs under the monastery. He's a hybrid incubus like you. All the monks are vampires. Your father is hiding there. He's a demon incubus, and he's planning to expand a magic-eating void throughout the village. It will prevent the Witch Wardens from entering the town to help the humans. After tonight, Rutland will be overrun with vampires. You have to go to my cottage and find a spellbook called 'Spirit of Halloween' and follow the instructions within. It's in a hatbox under my bed, along with the supplies you'll need for the ritual. It will help summon the spirit into your body for tonight's festival. Go now!\" I ordered.\n\n\"Wait! Gilda, how are you in my head? Are you safe?\"\n\n\"No. I'm taking a big risk with my soul. I'll be at the demon's mercy until you contact the Spirit of Halloween. The spirit is the only one powerful enough to stop your father before he completes the spell tonight. Rutland is fucked if we can't stop him. Find the book and follow the instructions. I trust you. Glen. I...\"\n\nMy parting wish was cut short by a rush of dark magic. It surged through the spirit channel from my body and wrapped around me like black tentacles. Then it yanked my spirit out of Glen. I screamed all the way back to my body. Reentry was painful. The kick in my chest was more like a boulder crushing my ribs. I sucked in an agonized breath as mist swirled through my eyes and thoughts. I coughed and sputtered the remnants of the dark magic out of my body so I could breathe again. Then I slumped against the cushioned table, fearing I might vomit.\n\n\"What the fuck have you done, Gilda?\" growled an angry voice close to my ear.\n\nI groaned as I forced my eyes open and looked to my right. Clarence's handsome face was scowling down at me.\n\n\"Not much. I was barely gone for a minute,\" I groaned.\n\n\"I wasn't asking about the spirit jump. I know you didn't get out of the village, thankfully. I caught your spirit on the edge of town. I want to know how you drained my sons?\" he demanded.\n\n\"It was their fault. They fed me cum until my succubus magic emerged. I didn't know that would happen. My mother was a blood-drinker, but no one thought I would develop that trait. Then your vampire boys came along and fucked my brains out. Now here I am. A brand new succubus, strapped to a table for the rest of my life,\" I grumbled.\n\n\"Your new magic better not interfere with my spell,\" he hissed as he began unbuckling the leather straps on my ankles and wrists.\n\n\"Don't worry. I'm still a witch. What are you doing? Are you letting me go?\"\n\n\"I'm letting you go back into your room so you can wash at the basin. Your skin is crusty with cum. I want to enjoy you while you're covered in my cum, not someone else's,\" he explained as he finished freeing me from my bonds and pointed at the door of the cage.\n\nI grinned and hopped off the cushioned table. My head swam with vertigo a second later, causing me to stagger right into Clarence. He grabbed me before I hit the floor, scooping me into his arms like I weighed nothing.\n\n\"Fuck... that spirit jump was a bad idea,\" I whimpered.\n\n\"It was stupidly brave of you. Who were you trying to find?\" Clarence asked as he carried me out of the chamber.\n\n\"Anybody that could help, but you dragged me back before I could blink.\"\n\n\"Sorry. Just trying to protect myself and my future kingdom,\" he grinned as he sat me in a cushioned chair beside the porcelain basin.\n\nI watched the ancient demon use an ornate white pitcher to fill the basin with water. He grabbed a washcloth off the shelf and dropped it into the water. Then he set the basin on the floor next to my chair. He picked up the washcloth and squeezed out the excess water before using it to wipe down my right arm.",
        "\"You are very beautiful, Gilda. I haven't met such a spirited witch or succubus in centuries,\" he mused as he carefully massaged the wet cloth around each of my fingers.\n\n\"Thank you, Clarence. I haven't met a vampire as pretty as you since... ever,\" I shrugged.\n\nI was still a bit drunk and hungover from the jarring spirit jump. It caused me to babble.\n\n\"I'm flattered. I want you to know that my prisoners are treated well. If you earn my trust, I might allow you to see the sun again.\"\n\n\"I don't have to stay in this room for the rest of my life?\"\n\n\"Not at all. Once the vortex reaches a self-sustaining flow, it doesn't matter if you stay or leave. I do plan to keep you here until that happens, obviously. But after that, who knows?\" he shrugged as he began wiping down my right leg.\n\n\"You baffle me, Clarence. I've never met a demon with so much... humanity.\"\n\n\"Indeed. I'm a very old demon. I've learned my manners. I was extremely vicious and blood-thirsty in my younger days. Living like that prevented me from gaining the power of a king. I learned patience from an old wizard. My mentor, Grand Wizard Sudwin, summoned me from hell and enslaved me over a thousand years ago. He wanted to reform me and make me his familiar. He could siphon my power and use it to enslave a nation. He tried and failed. His fellow wizards stopped him. I greatly admired him. He helped me master the void rune and patience before he died in the battle of Ten Thousand Souls. I harvested the bodies from that battle to begin building my nest here. I used what Sudwin taught me to build the vortex. It took me a few hundred years, but I figured it out,\" he grinned as he washed the cum off my left leg.\n\n\"I'm impressed. You avoided the Witch Wardens for hundreds of years while building a family of hybrid vampires in a human village.\"\n\n\"Don't be too impressed. Manipulating horny humans is easy. I've lured many women to their deaths and enslavement. Then, when I thought it was finally safe to summon my lover through the veil, you showed up and killed her,\" he hissed as he glared at me from under his handsome brow.\n\n\"I was just doing my job,\" I shrugged.\n\n\"I know. Now I have to lift my vampire kingdom out of the shadows without my mate. She would have been a queen and an enforcer. Demons fresh out of hell are unstoppable foes. They're not spoiled and set in their ways like me. These days, I enjoy being served instead of hunting. I like my meals brought to me in chains,\" he purred as he pushed my knees open so he could kneel between them.\n\nHe drew closer to me and began washing the dried cum off my breasts. I gulped from the arousal his touch and proximity stoked in my body. His magic was chasing the dizziness out of my head, making me more aware of him.\n\n\"Mmm, the heady smell of an aroused witch is entrancing. Or is that your succubus magic enhancing your scent?\" he grinned as he squeezed my breasts and massaged my nipples with his thumbs.\n\n\"Both, I guess,\" I gulped.\n\n\"You're an exceptional feast, Gilda. Magic eagerly flows through your body. I can feel you absorbing mine. Energy channels are drawn to you like bees to nectar. You should be proud of such a rare gift. But if you try to attack me with it, I'll let the void drain you,\" he whispered before he leaned in and kissed my mouth.\n\nThe smell and taste of his skin made my pussy ache with want. I gasped when I felt the tip of his swollen penis press against my wet opening. It was eagerly peeking out of his white robe.\n\n\"Mmm, I simply want to ravage you for hours. Your sexual pull is almost as strong as mine,\" he breathed as he spread my legs wider and massaged his tip against my opening, gently parting the tight muscles within.\n\nI shuddered and groaned to have his cock threatening to enter me. His touch was electric with arousal. I knew my mind would be subdued once the full effect of his seduction spell took hold. I would simply be his plaything for hours on end, and I would enjoy it. Rutland's future was in Glen's hands. I hoped I would see him again, but I wasn't sure of anything as Clarence's cock suddenly thrust inside me, stealing my breath. My inner muscles hungrily stretched around his thick meat. I was feeding on the torrents of arousal flowing out of him.\n\n\"Aren't you going to fuck me in the outer chamber?\" I panted.\n\n\"Eventually. Nightfall is many hours away. I plan to exhaust you here before the ritual. You're dangerous outside of the void,\" he smirked and began pumping into me.\n\nI groaned and went shaky with pleasure. My mouth salivated as my fangs extended. I was craving cum more than anything, but vampire fangs popped out when their owner was horny. Glen was right about pressure feeling good on new teeth. Clarence chuckled when he saw me chewing my lip.\n\nThe sun was rising over the trees on a fine Halloween morning as Glen Thomas sprinted through the southern field towards Rutland Forest. The townsfolk were busy decorating the village square with jack-o-lanterns, ghosts made of sackcloth, scarecrows, fake cobwebs, colorful streamers, and tables stacked with tasty harvest foods. Children were running through the streets dressed as pirates, faeries, witches, monsters, and all kinds of creatures that brought them joy throughout the year. They would play all day with their friends as they celebrated the harvest, and when night came, they would go to every house in the village and ask for treats. If treats weren't promptly given, they could invoke the right of the trickster and cause mischief for all the grumpy Rutland citizens. Stingy neighbors could earn a cow pie on their front step or frogs in their shoes. A bed full of spiders, caterpillars, or snails was common once the trickster was involved. Worst of all, if Glen failed at his mission, blood-sucking monsters would be entering everyone's home before the dawn.\n\n\"What is all this?\" Glen mumbled as he rummaged through the large hatbox he pulled out from under Gilda's bed.\n\nInside the box, he found an old leather-bound book, a neatly folded tuxedo jacket with a matching top hat and slacks, white and black makeup, red chalk, and a jar full of Halloween caramels that smelled like rum and pumpkin spice. Glen flipped open the ancient book and began reading the 'Spirit Summoning' instructions.\n\n\"Paint the left side of my face like a skull,\" he whispered as he picked up the makeup and quickly painted half of his face white, being careful to make a perfect line down the middle.\n\nThe book had detailed instructions that included drawings of how he should appear when he was done. The Spirit of Halloween would be looking for a host that showed life and death on his face and had the smell of festive treats on his breath. Glen went to the mirror over the mantle to paint the skin around his left eye black, outlining the socket of his skull. Then he painted the left side of his nose black along with the outline of his jaw. Then he drew some skeletal teeth on half of his lips and smiled at the creepy result.\n\nAfter the makeup, he put on the tuxedo jacket, slacks, and hat. He was impressed by the perfect fit. Then he had to use the red chalk to draw a pentagram on the floor in front of the fireplace. He pushed the rug aside and used the picture guide in the book to construct an elaborate star with runes at every point. When he was happy with the sketch, he sat in the middle of the pentagram, holding the candy jar and spellbook. His next instructions were to eat the candy while silently reading through sixty pages of channeling incantations.\n\n\"God, this will take all day,\" he sighed as he opened the candy jar and popped a chewy pumpkin-flavored caramel into his mouth. \"Mmm,\" he hummed and began reading.\n\nBack in the catacombs, Gilda had lost all sense of time as Clarence pumped his thick cock into her swollen cunt. He had fucked her in the chair by the basin, on the bed, on the floor, and eventually on the cushioned table in the outer chamber.\n\n\"Please, cum inside me, Master. I need it,\" I groaned as he pounded my uterus for the thousandth time that day.\n\nI was feebly fighting the leather straps on my wrists and ankles as he refused to cum inside me. He knew it would strengthen me. He had drained a few pints of my blood by that point. My only sustenance was the magic pouring out of his skin and the tiny drops of cum dripping from his tip.\n\n\"Believe me, Gilda. I want to flood all your slutty holes with cum, but I can't risk strengthening you enough to fight back,\" he groaned as he quickly pulled out of me and wasted his cum on the floor.\n\nMy pussy ached with want as I watched him tense with pleasure.\n\n\"You're a fucking monster,\" I whimpered.\n\n\"I know. I'm sorry,\" he grinned as he relaxed against my breasts. \"Don't worry, Gilda. After we expand the void, I'll give you as much cum as you can handle. Judging by the sticky massacre around the bed, you're insatiable.\"\n\n\"I'm insatiable, starving, horny, and I'm about to faint. One ejaculation would keep me conscious. That's all I need. Please,\" I whispered. \n\n\"My cum is extremely potent. I can't trust a witch like you with it at such a critical hour. Your hunger will influence the void's expansion. Tonya's starving for cum and food in a chamber just like this one on the other side of the rune circle. I'll feed you both once the spell is complete. I promise,\" he grinned and kissed my cheek.\n\nSuddenly, I sensed a faint pulse of comforting energy overhead. Halloween night had arrived, the veil was thinning, and help was finally on its way. But, in the meantime, I needed to distract Clarence.\n\n\"The veil is rapidly thinning,\" Clarence also observed, sensing the power surge in the magic channels. \"I'll have to leave you soon to initiate the rune's activation spell since you rendered most of my help unconscious.\"\n\n\"How long will Tonya and I have to suffer for you?\" I whispered as I searched his gray-green eyes.\n\n\"Not too long. I almost feel ashamed tormenting something as beautiful as you. Your beauty rivals my own,\" he purred as he pushed his cock inside me again.\n\nI gasped softly as I enjoyed his hard meat inside my exhausted cunt. I needed to prolong the intercourse somehow, but I could barely think through the exhaustion. Speaking random thoughts was about all I could do.\n\n\"Your sons are beautiful like you, Clarence. Your daughter was extremely beautiful and just as arousing. She had me squirming with an orgasm as she killed me. It was a miracle I survived. I felt bad having to destroy such a spellbinding creature.\"\n\n\"Oh, it was an orgasmic struggle to the death? Fascinating. Tell me more,\" Clarence purred as he pumped faster inside me, dousing me with more erotic magic.\n\nI groaned and twitched as he worked sharp tingles into my cunt.\n\n\"I was trapped under her in the mud by the pond. She was incredibly strong. She grabbed my hair and kissed me, flooding me with dark magic and arousal. I couldn't resist her. I didn't want to,\" I panted as I watched the intrigue in the incubus's eyes.\n\nI had found a sordid topic that aroused him; the violent death of his succubus daughter as she fingered me in the mud. Demons were a kinky bunch.\n\n\"Please, go on,\" he urged.\n\n\"Her skin was slimy against mine,\" I groaned as I rocked my hips into Clarence's trusts, desperately feeding on his energy to keep my mind clear. \"Her breasts were hot and wet as they pressed against my own tits. Our nipples were hard as pebbles. I loved feeling hers chafe against mine. Then she reached between my legs and slid her fingers inside me. My cunt desperately clutched at her clawed digits. She was making me drip. I gasped when she pushed her little finger into my anus. I fell limp under her after that. She massaged my wet holes and fed on my energy. The heat and tingles between my legs were overwhelming. I thought I would faint when an orgasm jolted my body. She massaged me through it as my juices poured on her fingers. It was utter madness. I used the last bit of my energy to fight back. I blasted pure earth magic into her mind until it severed her connection across the veil. She ripped my soul out of my body as she died, trying to drag me with her, and she almost succeeded,\" I whispered as I looked over Clarence's shoulder to see a beautiful man stepping through the door of the inner chamber.\n\nIt was Glen. Half of his handsome face was the skeletal reflection of death and inhabited by the Spirit of Halloween. He gave me a seductive smile as he tilted his top hat in my direction. Then he straightened his tuxedo jacket and silently strolled towards the door of the outer chamber. Thanks to the void, Clarence was unaware of the powerful visitor. He was too distracted and aroused by my story to care. Clarence slowed his thrusts as he indulged in my slippery cunt. He was trying to hold back an orgasm that was tensing his muscles. His cock was raging hard and threatening to cum against my cervix. I wished he would. I was about to faint.\n\n\"That was an arousing story, Gilda. I might give you a little cum as a reward for sharing it with me. Tell me, how did you survive?\"\n\n\"Glen,\" I breathed as my savior stepped into the outer chamber.\n\n\"Who the fuck is Glen?\" Clarence demanded, right before he felt the energy of our guest.\n\nClarence's head snapped to the left as Glen's hand grabbed the front of his throat, pinching his windpipe. The demon couldn't even gasp as he stared into the smiling face of his possessed son.\n\n\"Hello, father,\" Glen said with his head tilted to the right.\n\nThen his head suddenly tilted to the left, and he smiled like a trickster.\n\n\"Hello, Clarence. It's been a while,\" chuckled the Spirit of Halloween.\n\nI could feel the terror that seized Clarence at that point. He was outmatched, and he knew it. The ancient incubus tensed as Glen tightened his grip on his throat. Then he hauled Clarence off the table and across the room in a blink, slamming him against the wall hard enough to crack the stones. My head was spinning with weakness and relief as I watched Glen pull an iron torch out of its holder on the wall. He used it to stab through Clarence's left shoulder, pinning the demonic incubus to the wall.\n\n\"Sleep, Clarence. I'll deal with you later,\" Glen whispered and touched the vampire's eyes, instantly putting him to sleep.\n\nMy mind was slipping as Glen turned his handsome gaze on me. He smiled as he approached the table and began loosening the leather strap on my left wrist.\n\n\"Thank you for coming, Glen. I thought I was a goner,\" I whispered, fighting to keep my eyes open.\n\n\"You're welcome, Gilda. What do you need?\" he whispered as he finished freeing me and touched my cheek with his warm hand.\n\nI looked between his eyes for a moment. Glen and the Spirit of Halloween existed in perfect harmony. I had never seen such a flawless possession. The host's soul was usually too weak to remain present.\n\n\"Kiss me, Glen,\" I whispered.\n\nHe leaned closer and pressed his lips to mine, and a jolt of magic rushed into me. I gasped against his kiss and wrapped my arms around him, pulling him down on top of me.\n\n\"On second thought, I need your cum,\" I growled as I pulled his lower lip between my teeth, eager for a bite.\n\nHe chuckled as he gently pushed me back and climbed onto the table between my legs. My body was throbbing as I watched him stand on his knees and free his cock from his black slacks.\n\n\"I haven't done this in a while. It's always a privilege visiting a horny witch,\" purred the spirit through Glen.\n\nMy insides tingled at his words. I didn't know the spirit offered that kind of blessing. My heart was pounding as he crawled over me and guided his tip against my swollen cunt. My insides tingled as he dipped into my moisture, gently exploring my labia with his glans. I wasn't sure who was about to fuck me. I felt the spirit more than Glen. He even smelled different. He gently pressed his mouth to mine again, and I groaned as the sweet taste of caramel, pumpkin pie, and whiskey hit my tongue. Then he thrust inside me, sending a rush of magic and tingles racing through my cunt and up into my chest. My eyes rolled back as I enjoyed the exquisite sensation. He settled down against my breasts and proceeded to make love to me, body and soul. Overwhelming warmth and satisfaction were massaged into every part of my being. He was literally making me feel loved. It calmed my blood cravings and energized my spirit. I loved it. A second later, a hot wave of pleasure rolled through my muscles as an orgasm tightened my cunt. I gasped and arched my body into his delicious thrusts. He massaged the back of my neck and groaned as his cock flexed with an orgasm. A hot flood of cum filled my vagina at that point, adding to the overwhelming warmth flowing through my body. We both panted and shook as we shared each other's pleasure. Exquisite relief was mine again as I relaxed under my lover. I smiled and ran my hands down his back and squeezed his ass, pulling his cock deeper inside my soaked cunt.\n\n\"Happy Halloween, Gilda. It's lovely to meet you,\" the spirit whispered against my ear.\n\nI looked at him in amazement for a moment. He had completely manifested inside of Glen, making his skin glow like firelight. Glen was there too. His tender gaze was easy to recognize.\n\n\"It's lovely to meet you too, Spirit. What shall I call you?\"\n\n\"Spirit is fine. It's not proper for the living to use my real name. Shall we escape these ruins and join the festivities?\"\n\n\"We shall. What about Clarence?\" I asked as he helped me down from the table.\n\n\"Give me a moment. I have an idea,\" he grinned and stepped back into the inner room.\n\nI watched as he retrieved the little grinning gnome statue and looked at it for a moment. Then he carried it back into the chamber and placed it on the floor at Clarence's feet.\n\n\"Malus spiritus, hanc statuam intra, ligatus in aeternum,\" he commanded.\n\nBlack smoke suddenly spewed out of Clarence's skin and collected at his feet, then it was promptly absorbed by the grinning garden gnome.\n\n\"There, that will limit his power for a few hundred years. I'll also place a magic curse on the monastery to prevent his sons from escaping for a few months. That will give the Witch Wardens time to investigate the incident and reform his hybrid children. The sons are not evil. They were led astray by their father. We should rescue Tonya now. I sense her magic fading.\"\n\nWe hurried to the cell on the opposite side of the holy chamber and found poor Tonya in rough shape. She had been strapped to the table in her outer room for a few days. The spirit gave her a gentle kiss and instantly revived her.\n\n\"What the hell happened, Gilda?\" Tonya groaned as we helped her down from the table.\n\n\"An ancient demon was trying to enslave the village. How long have you been down here?\"\n\n\"I'm not sure. It feels like a year has gone by. Who are you?\" she asked as she warily eyed Glen.\n\n\"I am the Spirit of Halloween, wearing a handsome meat suit called Glen Thomas,\" he grinned and bowed graciously.\n\n\"Oh, it's lovely to see you again, Spirit. It's Halloween already?\"\n\nThe Spirit wrapped us in simple robes and guided us out of the catacombs, casting spells behind him as he walked. I could feel magic channels strengthening around us as the void dissolved. Tonya and I basked in the soft glow of the harvest moon when we finally stepped out of the monastery. Then we walked with the spirit into the town square to join the hoards of costumed revelers dancing and playing games to win food and prizes. Children excitedly ran to Glen and threw their arms around him. They could sense his wholesome magic. He laughed and knelt among them. He reached into his jacket pockets and pulled out handfuls of caramel candy. He made sure every child in the square received one. Then he ordered the children to take extras and give them to every child in the village. The magic in the candy would fortify their bodies and spirits for an entire year. It scared me to think how close they came to being enslaved by vampires. Glen saved all our asses by being his fantastic self and summoning the spirit like it was a walk in the moonlight.",
        "\"Thank you for everything, Gilda,\" Tonya sighed as she and I stepped back to watch Glen.\n\n\"Just doing my job,\" I smiled and hugged her shoulders.\n\n\"You always go above and beyond, just like our school days. You risked your life to find me the instant you suspected something foul. No other witch would have been brave enough to do that.\"\n\n\"I can't take all the credit. Glen saved me three times already. Rutland would be doomed if it weren't for him. He is officially my new apprentice... and my new plaything,\" I whispered with a wink.\n\n\"Speaking of playthings, I need to check in with Collin. He's the innkeeper's son. I was dating him before Clarence abducted me. I hope he waited for me. I'll catch up with you later, Gilda!\" she called and hurried through the crowd.\n\nShe stopped by Glen and gave him a kiss on the cheek before making her exit. The spirit blew her a parting kiss that landed on her shoulder like a glowing butterfly. The children oohed and aahed at the simple spell.\n\n\"Now, children, before you go, I need to give you trickster coins,\" Glen announced, pulling their bright eyes back to him.\n\nHe removed his top hat with a spin and presented it to the children. It was full of gold coins. Each side was stamped with a different jack-o-lantern face.\n\n\"If a grumpy soul darkens your Halloween, leave one of these coins on their doorstep, and the spirit will deal with them accordingly,\" he grinned.\n\n\"Oh, what will happen to them?\" asked a little girl that was dressed like a sheep.\n\n\"It depends. A greedy soul will discover all their doorknobs sticky with honey. A sour soul will taste nothing but sour flavors for a week. The list goes on. Use them justly, or the curses will bounce to you! Also, unused coins will turn into chocolate by morning.\"\n\nThe children giggled and collected as many coins as they could carry before scattering through the square. Then I accompanied the spirit all over the village and through the surrounding fields. Healthy magic flowed out of him like mist, drenching the houses, the ground, the people, and the animals. Rutland would reap the benefits of that night for years to come. As midnight approached and the veil began to thicken, the spirit walked with me back to my cottage.\n\n\"Thank you for helping us, Spirit. You saved Halloween and Rutland. I hope we didn't demand too much of you.\"\n\n\"You're plenty welcome, Gilda. Thank you for indulging me in the catacombs. That was a rare treat,\" he grinned.\n\n\"It was for me too. It felt like pure love,\" I sighed, remembering the exquisite feeling.\n\n\"A lot of that was coming from Glen. I simply enhanced it.\"\n\nI looked at him in surprise as we stopped on the front lawn of my cottage. Glen's skin was still glowing with the power of the spirit. My heart felt strange as I stared at him. I had known Glen for three days, and in that short time, he proved himself a hero, a gifted warlock, and a passionate lover. I was planning to keep him around for a long time.\n\n\"I must be going now, Gilda. The veil insists. I won't soon forget you or Glen,\" he whispered as he leaned in and kissed me.\n\nI felt a burst of warm magic and sweetness from his lips before the spirit slipped away, leaving me kissing Glen. I wrapped my arms around his neck and kissed him hard as the emotions of that night caught up with me. He pulled me against him and held the back of my neck as he worked his tongue against mine. We were both breathless a minute later. Glen pulled away first and took a deep breath. His eyes looked a little glazed after harboring a powerful spirit for six hours.\n\n\"I feel drunk and buzzed,\" he breathed.\n\n\"The Spirit of Halloween has that effect on people,\" I grinned.\n\n\"Shall we wash up, go to bed, screw, and take a week-long nap?\"\n\n\"Yes, please. I'll heat the water for the bath.\"\n\nAs we stepped into the cottage, something new caught my attention. Standing in the middle of my kitchen table, wearing a pointy red hat and a creepy smile, was the little ceramic garden gnome from the monastery. I clapped my hand over my mouth and stared at it in horror. Glen gasped when he saw what I was looking at.\n\n\"How in the fuck did he get out of the catacombs?\" he demanded.\n\nSuddenly, we were startled by the giggles of children outside the kitchen window. Glen ran over in time to see them running away from the cottage. \n\n\"What the hell?\" he grumbled as he picked up something shiny from the window sill and carried it over to me. It was a trickster coin.\n\n\"Oh shit!\" I gasped. \"I accidentally committed a sin against the Spirit of Halloween! I didn't leave any candy by the door for the children while I was away. They rightly left me a trickster coin.\"\n\n\"What are you talking about? You were held hostage underground! And you still helped save Halloween and the village from vampires. You don't deserve a curse for that,\" Glen protested.\n\n\"It doesn't matter. I'm a witch! I'm supposed to uphold the festive spirit of Halloween at all costs. It's like Santa Clause forgetting to put up a Christmas tree! The least I could have done was leave some candy on my doorstep so I didn't disappoint a bunch of children. Now I have to watch over a demonically possessed garden gnome for the rest of my life,\" I grumbled.\n\n\"Well, look on the bright side. How much trouble could a little statue be?\" Glen shrugged. \n\n\"You had to ask,\" I sighed and pointed at the empty kitchen table.\n\n\"Where the fuck did he go?\" Glen gulped.\n\nThat's when we heard something rolling across the floor. We looked down to see the red chalk from the hatbox bump into Glen's shoe. I gulped and looked towards the fireplace. I gasped to see the little gnome standing in the middle of the pentagram Glen had drawn earlier. \n\n\"Oh fuck,\" I gasped right as Glen's hand went around my throat.\n\nHe shoved me against the door and glared at me for a moment. \n\n\"Hello again, Gilda. What an interesting turn of events,\" he purred as he got right in my face. \"It's not wise to leave a spirit summoning spell drawn on your floor that's attuned to your boyfriend. A demon might come along and abuse it. By the way, I'm horny again. You should take me to an orgy.\"\n\nThe end.\n\nEpilogue:\n\nMany orgies later, Gilda managed to force Clarence's soul out of Glen and back into the gnome statue. She tried, again and again, to destroy the statue and send the horny demon back to hell, but he always found his way back to her. She learned to live with and sometimes enjoy his sexual mischief until her dying day. The possessed gnome fell into obscurity after that. Witnesses claim the statue reappears after a hundred years to claim a new keeper and cause sexual mischief on Halloween, but as soon as the Witch Wardens catch wind of him, he vanishes again, leaving a sticky mess in his wake."
    ],
    "authorname": "chloehunt",
    "tags": [
        "straight sex",
        "cum addiction",
        "supernatural sex",
        "blowjob",
        "vampire orgy",
        "mmmmf"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/witch-of-rutland"
}