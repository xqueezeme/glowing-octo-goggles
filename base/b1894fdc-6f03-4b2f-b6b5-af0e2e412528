{
    "title": "Jack Earns a Treat after Work",
    "pages": [
        "Author's note: The characters in these stories are the same and you can read them in order to get up to speed with their relationships. However, each story will also make sense if read as a stand alone text. Please enjoy and feel free to make any comments or suggestions for the next instalments. Thanks.\n\n*****\n\nSaturday\n\nIt had been an unexpected long first week for Jack in his new job. He assumed he would be expected to ease into his new role and new office at a steady pace but the directors had very different expectations.\n\nHe slumped onto his sofa and stared out at the empty TV screen in front of him. His lounge was quiet and the low light started to relax him.\n\nHe had to put some hours in at the office today. He hated working on a Saturday and he had told Anna (his girlfriend) he would be back by 11am this morning. It was now 6:30pm and he had just got home. Anna was out. She had sent him a message earlier in the day explaining that she was going out as she was tired of waiting in for him.\n\nHe thought carefully about how he would spend the rest of the evening. He was thinking that a take away meal and an earlier night would improve his mood. Maybe a movie too. Yes, that would do it.\n\nSuddenly, his phone beeped. \n\nA message. \n\nFrom Anna.\n\nHi Jack, get something nice on and join us at the Chez Lounge. ASAP...please.xxx\n\nJack read the message a second time and wondered where on earth was this lounge. He was aware of most of the bars around the town but he'd not heard of it.\n\nHe sighed, stood up and shuffled his way to the bedroom to change. He kept his grey suit trousers on and changed his shirt into something that resembled a 'nice' look. Jack grabbed the car keys from the kitchen counter and - whilst finding the postcode for Chez Lounge on his phone - made his way out the door to his car. He quickly inputted the postcode into the in-car SatNav and set off. \n\nJack arrived at his destination exactly 22 minutes later. He had been wondering what the place was and was left feeling none the wiser when he arrived.\n\nThere was a small neon sign above a door with a large, burly doorman standing to attention. There were other cars in the car park so Jack had to search hard to find a space. He stepped out of the car and headed to the door.\n\nThe doorman looked him up and down, critically assessing him as he walked towards the door.\n\n\"Evening,\" Jack brightly said.\n\n\"\u00a320 tonight, sir,\" the big man explained whilst looking down at Jack.\n\nJack nodded and smiled. The doorman opened the thick wooden door, stood aside and ushered Jack inside.\n\nThe door shut solidly behind Jack and he was face to face with a small, neon lit booth where and a pretty middle aged woman smiled at him. \"\u00a320 tonight sir. Did Bruce explain?\" She smiled. Jack thought she had pretty eyes but it was hard to look away from her breasts. She had a low cut v-neck vest on that plunged where her cleavage formed. The swell of her breasts could be seen through the thin material of her vest.\n\nJack fished his wallet out of his tight trousers, \"busy tonight, I hear,\" he said whilst handing over the cash and glancing once again at her breasts.\n\n\"Yes,\" she explained, \"it regularly is here at the weekend. Enjoy your night,\" She motioned towards the door leading inside the building and handed Jack a ticket stub.\n\nHe thanked the beauty in the booth and pushed open the door. \n\nThe first thing that Jack noticed was the low hum of music. A heavy continuous bass was pounding with simple melodic electric keyboards sounds played over the top. The place was dark with the odd neon light flashing around. There was a low red light too which made it easy for Jack to find his way to the bar.\n\nOnce there, he ordered a whiskey and lemonade (because he was driving) and turned to look at the rest of the building. \n\nHe saw a stage darkly lit with a pole in the middle. Jack looked across and saw a petite, young woman wearing just a matching red bra a panty set. She was chatting to a small group of three men who were sat transfixed whilst she spoke.\n\nJack knew where he was.\n\nHe continued his search of the dancing strip club and found another seven or eight women doing the same thing with different groups around the room. All the men were staring at the beautiful women who were strutting around.\n\nSuddenly Jack's phone vibrated in his pocket. He reached in and opened the message.\n\nWhere are you? Are you here yet? I want you to cum!\ud83d\ude09\n\nJack looked quickly around the big room once more and failed to see any women other than the few that clearly worked for the establishment. Then he noticed a small neon sign above a purple velvet curtain. There was another big burly doorman standing to attention by the curtain. \n\nJack looked down at his phone and replied to the text: I'm at the bar x\n\nHe popped the phone away and took a swig of his drink. It perked him up a little and started to lifted the tired feeling. \n\nShe had spelt 'come' wrong, he thought. Normally her spelling and grammar was very good, why had she got that wrong? Unless...\n\n\"Jack!\"\n\nHe turned around after he had heard his name called.\n\nAnna was standing just outside the curtain, beckoning him over.\n\nJack grabbed his drink and wandered over to the purple curtain where Anna stood.\n\nShe looked stunning. Her brown hair was down around her shoulders and framed her pretty face. She wore a tight white t-shirt that accentuated her perfectly, pert breasts. The v-neck drop on the collar showed the beginning of her cleavage. Jack could just make out the outline of her bra underneath the thin white cotton. The t-shirt was tucked into a pair of tight, black denim jeans. They hugged her toned, shapely legs which were parted as she stood. She wore tall black stiletto heels and had placed one hand on her hip. Her big brown eyes flashed when she saw him.\n\n\"You came,\" she exclaimed, \"thank you.\"\n\nShe embraced him and kissed him hard, slipping her tongue into his mouth, playfully.\n\nShe broke away and looked directly into his eyes. \"I bet you've had another hard day,\" she said above the music.\n\nJack nodded and smiled, \"Sorry about today. I just couldn't get away.\"\n\n\"Don't worry about it,\" she replied, \"I knew you would be busy so I thought I'd arrange a treat for you.\"\n\nJack noticed her eyes widened as she said the word 'treat' and a smile formed across her sexy lips.\n\n\"Follow me,\" she moved behind the curtain whilst grabbing Jack's hand.\n\nJack was bustled by the burly doorman into a dark corridor. On either side of the corridor were closed curtains. Anna dragged Jack by his hand into a curtain on the left.\n\nThere was a comfortable-looking curved, black, leather sofa facing a pole and small dance floor. Opposite the sofa were floor to ceiling mirrors. The music was quieter in here and the lighting was low with a warm red glow that lit the shapes in the room.\n\n\"Sit down Jack,\" Anna commanded.\n\nJack moved around the sofa and, with his back to the curtain, sat facing the pole and saw his reflection in the mirror as he slumped down onto the sofa. It was a deep piece of furniture and forced him to be nearly laying back as he sat in it.\n\nAnna moved around and sat next to Jack and turned her body to face him. \"I know how hard you've been working after your promotion,\" Anna said, \"so I wanted to get you something special because of all your hard work.\"\n\nJack felt a slight growing feeling in his groin.\n\n\"I'll just go and fetch it,\" she continued, \"back in a moment.\"\n\nAnna stood up and Jack watched her pert sexy arse wiggle its way across the dance floor to the curtain they had entered through.\n\nJack saw his reflection in the mirror and he could hear his heart beating loudly as he waited in anticipation. He tried to sit up but just ended up shifting himself into a different low down position.\n\nJack heard heels clicking along the corridor. Once more he tried to sit up but the sofa made it difficult to be in any other position than laying back. \n\nAnna walked in and sat down next to Jack - she was smiling and was looking up at the two women who had followed her in. Jack followed her gaze and gulped at the sight in front of him.\n\nThere were two unbelievably sexy women standing in front of the sofa.\n\nThe first woman had striking red hair, beautiful green eyes and full red lips. She had breasts that were bigger than Anna's (only by a small handful). They were pushed up and out so they were bursting out of her emerald green lacy bra. Jack could make out her nipples through the silky material. She was toned and clearly she kept fit because her midriff was shaped to perfection. Her hips, somehow, kept a very small g-string on her body. It was emerald green (to match the bra) and had a very high cut up past her crotch. Jack could see a mound under the small material so she must have just been neatly trimmed down there. She wore green high heels and they made her athletic legs really show off. Her tight thighs and toned calves were fully accentuated in those heels. Her whole tight body glistened like she had been rubbed with oil or glitter. Red (as Jack had called her) looked directly at Jack and licked the top of her teeth.\n\nJack's eyes wandered to the girl standing next to Red. She was a little shorter but just as striking. She had striking blonde hair around her shoulders. It was wavy and hung loosely around her neck. She was tanned and her pretty face was highlighted with fine cheek bones and a pretty nose. Her blue eyes glistened as she watched Jack look over every inch of her body.\n\nShe had the biggest breasts of the group. They were more than a handful, Jack assumed. She wore a white cotton vest with no bra underneath (the nipples showing though made it obvious). Blondie (Jack thought) wore a very short, pleated, dark blue skirt. The skirt barely covered her groin. She swayed her hips to the music and the skirt flicked up at the sides revealing a white flash of panties underneath. Her legs - despite her height - seemed to go on forever. They were well tanned and shapely and her white high heels forced Blondie forwards: her back arching and thrusting her breasts out. Again, like Red, Blondie seemed to have covered herself in an oily, glittery substance that made her skin - particularly her legs - glisten in the light.\n\nRed moved over and sat the other side of Jack. She moved in close and whispered directly in his ear.\n\n\"Hey Jack,\" she breathed out onto his ear, \"we are going to have some fun tonight.\" \n\nJack closed his eyes as she spoke. She had a direct tone, someone who knew what she wanted. He felt his cock stir as he felt her hot breath on his ear.\n\n\"The rule we have here,\" Red continued, \"is that you are not allowed to touch us. We can touch you, if we choose, but you have to watch and not touch. Got it?\"\n\nJack kept his eyes shut the entire time she spoke. He gulped and then nodded.\n\n\"Good,\" Red said, \"Now, open those eyes.\"\n\nJack opened his eyes to see Blondie dancing directly in front of him. She was swaying to the time of the music and flicking her hips to the side. Jack could see her breasts bouncing with every movement and the soft muscles on her long legs tensing with every step. Jack looked across at Anna - who was still sat next to him - and she was transfixed by the hypnotic movements.\n\nWhen Jack turned back to Blondie, she had turned around and was now slowly bending over. The short skirt instantly rose up and Jack saw that Blondie was wearing a very small white thong. She had tanned, pert arse cheeks. Blondie kept her knees straight and bent at the hip - slowly revealing her perfect arse. Jack thought it was on a par with Anna's but this one was more tanned. Blondie looked back over at Jack and slid a finger in her mouth.\n\n\"Wow. Jack, look at her arse,\" Red whispered in Jack's ear. His cock was now starting to grow to a full erection. \"I know my friend loves to suck cock, Jack,\" Red continued, \"she loves to make a man cum hard over her pretty face. She keeps her eyes open as she teases and swallows a man's cock. Hmmmm.\"\n\nJack's mouth suddenly went very dry. He tried to shift his position so that his cock could move from its sideways position in order for it to fully grow in his trousers.\n\n\"I can just make out her tiny puckered hole, can you?\" Red questioned.\n\nBlondie turned back around and moved over to Jack. She placed one leg either side of his knee and thrust her hips forward. It caused her skirt to flick up and Jack could see that the front of her white thong was a frilly see-through material. Blondie repeated her movement again and on third time she quickly whipped one of her legs over, spun around and gently lay back on Jack's chest.\n\nBlondie's face was now very close to Jack's as she looked sideways at him. Jack looked down and he could see right down her thin cotton vest. He could clearly make out her full breasts and her nipples. The were very erect. Blondie wriggled her sexy arse right over Jack's crotch. She then thrust backwards three times. Jack met her thrusts and on the last two he forced his crotch up to meet her attention. His hands moved up Blondie's waist and snaked their way round to her breasts.\n\n\"No touching Jack,\" Red commanded, \"remember?\"\n\nJack silently swore and placed his hands at his side.\n\n\"I know, Jack,\" Red continued with her commentary, \"those breasts are fantastic aren't they? Look at how hard her nipples are right now. Watch.\"\n\nRed then moved her right hand up over Blondie's top and squeezed her breast. Blondie groaned out loud and Red moved her fingers on top of the material and located a nipple. She tweaked the nipple causing it to stand to attention even more. \n\nBlondie continued to move her hips over Jack's crotch. Jack automatically met each thrust with his own thrust upwards. \n\nSuddenly Blondie spoke over him to Red, \"he's so fucking hard right now.\"\n\n\"Are you Jack?\" Red enquired, \"has she made you hard. I love a hard cock Jack. Hmmmm...she has such a fantastic arse doesn't she?\"\n\nBlondie then got up and spun around so she was facing the couch. She continued to move and sway to the music and slowly she eased her arms behind her back and undid her skirt. She looked at Jack and then directly at Anna and let the material slide down her long legs.\n\nJack turned to see Anna. She was wide eyed and smiling. Jack could see a redness around her neck and he knew that meant she was aroused too. He swiftly used his hand to adjust the position of his cock into a more comfortable position.\n\nWhen he looked up Blondie was standing in her see through panties staring at Anna. Blondie moved one leg either side of Anna's knee and then repeated her thrusts forward.\n\nJack looked at Anna and she was watching Blondie's crotch with utter fascination. Jack looked too and he could clearly see she was clean shaven and Jack could make out her pussy lips, he knew Anna could too. He gulped.\n\nThen Blondie repeated the same movement and flipped herself onto her back, laying across Anna. Blondie started to grind her arse into Anna's crotch. Jack could see that Anna was meeting the thrusts with her own.\n\n\"She's grinding on your girlfriend now Jack,\" Red whispered into his ear. Her breath was making Jack's cock start to pulse in his trousers. \"I bet Anna is just as turned on as you are right now,\" Red continued, \"I'd love to watch you two fuck. Your sexy girlfriend bent over as you slide your cock deep into her wet pussy. Mmmmm...that would get me so horny.\"\n\nBlondie got up from Anna and, whilst keeping her back turned to the sofa, she lifted her white vest off and spun around. Her breasts were revealed and they were full and pert. Blondie's nipples were fully erect and she squeezed them between her finger and thumb.\n\nBlondie then moved back over to Jack and sat on him with a leg either side of his crotch. He could feel the warmth of her pussy on his cock. \n\n\"Open your mouth Jack,\" Red demanded.\n\nHe did.\n\n\"Remember the rule Jack,\" she reminded him.\n\nBlondie then tweaked her nipple and placed it into Jack's open mouth. He could feel the warmth of the skin and he was desperate to slide his tongue over the erect nipple. Blondie then removed her nipple from Jack's open mouth and shifted her body over to Red. Red looked directly at Jack and smiled. She then stuck her tongue out and slid it over Blondie's nipple. It glistened and a line of spit caught across the trailing tongue and soft skin of the hard nipple. Blondie groaned and involuntarily thrust her pussy down onto Jack's hard cock.\n\nJack groaned too.\n\n\"Watch me lick the other nipple now Jack,\" Red instructed, \"I bet my friend is getting so wet down there.\"\n\nRed softly grabbed Blondie's other breast and slowly sucked the nipple whilst watching Jack. She swirled her tongue around the nipple and slid it over one last time. Blondie groaned again and started to grind her pussy into Jack's cock.\n\nBlondie then got up quickly and stood on the sofa. She placed one leg over the side of Anna and the other leg across the other side. Anna was now laying back between Blondie's legs. Blondie lowered her pussy down towards Anna's face.\n\nJack watched wide - eyed, taking in every detail. Anna stared intently at Blondie's crotch. Blondie thrust her hips forward in time with the music and her silk see-through panties brushed against Anna's chin. Anna began to open her mouth involuntarily and Blondie repeated the light brushing on Anna's pretty chin.\n\nJack looked down at Anna's hands. Her fingers were gripped tight to the side of her thighs.\n\n\"I bet she is so fucking aroused right now Jack,\" Red whispered in Jack's ear. Jack shifted in his seat to make his rock hard erection more comfortable. Red looked down at his clearly visibly erect cock. \"Here,\" She said, \"let me help you\". Red snaked her hand across Jack's upper thigh toward his cock. She then expertly placed her fingertips exactly over the tip of Jack's cock. Red then delicately shuffled his cock to a more comfortable position in his trousers. She used her entire hand to grip the sides of his cock and squeezed. Then she rubbed her palm down and back up the entire length and removed her hand.\n\nThe attention to his cock had made Jack groan and he was thrusting his cock up to meet her attention.\n\n\"Jack, you are very hard,\" Red said, \"I bet you're desperate to cum, but wait...look...\" \n\nRed raised her eyebrows towards Anna and Blondie.\n\nJack turned back to see Blondie had moved her covered pussy directly over Anna's mouth. She then started to rub over the soft material covering her pussy.\n\nAnna looked up at Blondie and they both stared intently into each other's eyes. Anna slowly opened her mouth and her delicate tongue slowly slid out towards Blondie's pussy. It snaked forwards to the area where Blondie was rubbing on her panties. \n\nJack held his breath. Red was now using the palm of her hand and brushing circles over the head of Jack's cock. He started to move his hips to meet the light attention.\n\nSuddenly Blondie moved her body backwards and, whilst still standing above Anna, she swayed and wriggled her hips again to the music. She moved her hands up her body and stroked both breasts before pinching each nipple. \n\nBlondie then moved back above Jack. She placed one leg either side of his body and lowered her hips so her panty-covered pussy was hovering in front of Jack's face. She then slid her hands down to her pussy and rubbed over her clit again. Jack could feel the warmth of her pussy and could see that a wet patch had gathered on her panties near her pussy lips.\n\n\"Is she wet, Jack?\" Red whispered. She had moved her hand from Jack's crotch and he was starting to ache for some attention on his cock.\n\nBlondie then slowly slid aside her panties to reveal her wet pussy. The lips protruded a little and they glistened in the low light. Blondie placed her fingers at the base of her pussy lips and started to stroke. Her eyes rolled up to the back of her head as she touched herself. Anna, Jack and Red watched this sexy show without blinking.",
        "Blondie then stopped. Waited a heartbeat and slowly slid two fingers up into her pussy. Her hips moved forwards greedily. She groaned aloud. Jack also heard Red moan softly next to him. He was transfixed with the attention Blondie was giving to her own pussy.\n\nBlondie slid her fingers in and out three times. Each time was slow and deliberate in her tease. She then removed her fingers and brought them to Jack's lips. He opened his mouth tentatively.\n\nRed shuffled up next him. He could feel the warmth of her body on his shoulder. \"Suck them Jack,\" she instructed, \"taste that pussy...hmmmm.\"\n\nJack opened his mouth wider and Blondie slid her fingers inside his mouth. He sucked and tasted the juices from her pussy. Blondie smiled and then withdrew her fingers. She then moved backwards and stepped over to Anna again. Jack's cock strained, he felt the head bulging against his trousers.\n\nBlondie stood above Anna (who was now between her legs) and lowered her pussy again to Anna's face. Blondie slid her panties aside and resumed her stroking directly in front of Anna's face. Anna slowly licked her lips and Blondie started to stroke her pussy again. Jack could clearly see how wet Blondie's pussy was now; her fingers were slippery as they brushed up over her pussy lips and circled her clit again and again. \n\n\"Fuck Jack,\" Red whispered into his ear, \"I'm really fucking aroused watching this. Is your cock still hard?\" She placed her hand back on Jack's cock as it strained against his trousers. \"Oh, yes. You are so hard.\" Red started to use her palm again against Jack's bulging cock. He exhaled from the attention and moved his crotch up to try and force more pressure. He groaned aloud and closed his eyes, hoping for release. But Red kept her circling very lightly on his cock. \"You like that don't you Jack?\" she whispered to him. \"Do you want me to get that cock out and slowly stroke it? Maybe long slow strokes or quick short strokes up and down you hard cock,\" she bit her lip, \"I could stroke it whilst you watch that.\" Again she motioned towards the two girls.\n\nAnna had slid her tongue out again and she was now lightly licking Blondie's knuckle as she started to stroke faster. Jack watched as Anna slid her hands down to her own tight jeans and slowly unclipped the button and pulled the zip down. Jack caught a flash of lilac panties. Anna continued to watch Blondie pleasing her pussy just inches away from her face. Anna then pulled apart her open jeans and slid her own right hand down into her panties. Jack knew she had given herself some pleasure because Anna closed her eyes for the first time.\n\n\"Ohhhhh, ffffuuckkkk,\" she groaned as her fingers seemed to hit the spot underneath her panties and tight jeans.\n\nSuddenly Blondie stepped down from near Anna's head and sat with one leg either side of Anna's thigh. She rested her now wet panty covered pussy on Anna's thigh and slowly but steadily started to grind her pussy into Anna's thigh. Anna and Jack watched intently as Blondie really started to grind her pussy into Anna's tight black jeans that she wore.\n\nBlondie lifted her hand and grabbed around the back of Anna's head so that she really build up some speed. This pulled Anna closer to Blondie's chest and she stared up at the beauty bringing herself off on her leg and groaned as she started to speed up her own pleasure with her fingers.\n\nBoth women stared at each other and moaned loudly.\n\n\"Hmmmm...ffffuuuuckk,\" Blondie groaned, \"just there...ohhhhh.\"\n\n\"Oh Jack,\" Red broke the tension - her palm still teasing Jack, \"it looks as though these two are going to cum soon. Look at my friend grinding her pussy into your girlfriend's leg. Fuck that is hot. I'm getting wet right now watching this. I can feel the soft material of my panties on my pussy lips. Hmmmm... Do you want me to stroke your cock faster Jack?\"\n\nJack moaned aloud but Red never changed her speed. He looked over and Blondie was really starting to grind faster now. But she was edging closer up to Anna's hand. Anna was moving her own hips as her hand was furiously rubbing her clit. \n\nJack's cock was pulsing and desperate for a faster and harder stroke from Red. He lifted his hand on top of Red's and pushed her palm down to create the friction he craved.\n\n\"No touching Jack, remember?\" Red scolded him and removed her own hand.\n\nBlondie and Anna looked across at Jack squirming in his seat. Anna smiled and arched her back upwards. Blondie shuffled back, unsure what was happening. Anna slid her tight jeans down to just over her knees. Jack could clearly see her lilac silk panties now. They were soaking wet.\n\nBlondie smiled, knowing what she needed to do. She ground her own panty covered pussy into Anna's crotch. They shuffled and wriggled for a second or two to find the right spot then they both started grinding their pussys against each other.\n\n\"Oh god. That's...so...fffffucking...goooood,\" Anna squirmed.\n\nBlondie's face was now nose to nose with Jack's girlfriend and the two beauties stared into each other's eyes.\n\n\"Cum with me. I want you to cum with me,\" Blondie whispered without breaking eye contact with Anna.\n\nAnna bit her lip and nodded.\n\nJack looked to his right at Red. She was transfixed too. Her right hand, now off Jack's crotch, was circling her own nipples involuntarily. Her other hand was stroking the inner thigh as she watched.\n\nJack couldn't take anymore and he slowly unzipped his trousers and looped his pants down below his balls. He grabbed his cock and moaned aloud as he squeezed the shaft. The pressure had been building and just the feeling of it in his hand felt unbelievable.\n\n\"Oh Jack,\" Red whispered, \"look how hard your cock is. Is that...is that pre cum?\"\n\nIt was - Jack was so hard and ready to cum.\n\nHe held his cock still in his hand and looked back over at Blondie and his girlfriend dry humping each other to orgasm. \n\nBoth of the girls had sped up now. Anna was lifting her hips off the sofa to meet Blondie's thrusts.\n\n\"Oh god, I'm so close...ffffuuckkkk. Don't stop!\" Anna begged.\n\nBlondie thrust down again and again and again. Their eyes never breaking contact. Their lips were so close to kissing. \n\n\"K-k-kiss me. P-p-ppplllleeeease?\" Begged Anna.\n\n\"Oh god! Cum with me. Ready...\" Blondie instructed.\n\nThe two of them locked lips passionately.\n\nJack saw their mouths close in a passionate open mouthed kiss. They were having to breath deeply through their noses and Jack could tell they were cumming.\n\n\"Hhhfffff,\" Anna exhaled. Her hips raised one more time as Blondie ground down into her pussy. Both sexy women were breathing heavily as a powerful orgasm overcame them. \n\nBlondie unlocked her lips from Anna's.\n\n\"OHHHHHHHH..FUUUUUCK!!\" Blondie screamed as her final thrusts placed the pressure on her clit and drove her over the edge. \"FUCK ME, FUCK...YEEEEESSSS!\" She groaned.\n\nJack had started stroking his cock whilst the two women came on each other.\n\nRed placed her hand on top of his and broke the momentum. \" Jack, stop. You deserve to cum for being so good. But only when and where I say so.\"\n\nJack exhaled deeply. He was close. Five long strokes would have done it.\n\nRed got up for the first time that evening and Jack once again looked over her body. She was so sexy. She bent over in front of him and he groaned when he saw her perfect arse again. She got up on the side and lay down on her back with her head on the arm of the sofa at the end. Her legs now were pointing at Jack with the heels on her shoes against his thigh.\n\n\"Get on your knees in between my legs Jack,\" Red instructed.\n\nJack did so, his solid cock bobbing in front of him as he positioned himself between her legs. He looked down at her toned stomach again and her full breast trapped in her bra.\n\nShe watched him position himself and saw him looking at her breasts. \"Do you like my body Jack? Does it make that cock harder? Look at my breasts. You could slide your cock right there between them. Hmmmm,.\"\n\nShe placed a hand on each breast and squeezed. It caused her breasts to push together in her silky bra.\n\nJack felt movement behind him where Anna and Blondie had been pleasing themselves. He felt Anna's body squeeze up against his back and he could feel her breath in his ear. \n\nMeanwhile Blondie had moved her way around to Red's head. They both kissed sensually. Jack saw Red's tongue dart into Blondie's mouth. They both groaned.\n\nAnna's hand had stroked its way down towards Jack's cock. She brushed passed the tip of his cock, down the steel shaft and under his balls. She started the stroke and caress his balls.\n\nJack closed his eyes and groaned loudly - his cock strained upwards.\n\nThis noise broke the kiss that the two women were enjoying.\n\n\"God I need to cum really hard and really fast,\" Red said to Blondie. Red reached her hand down and slid it inside her panties. As soon as she did, her back arched as her fingers found the attention spot that she craved. \"Ooooh, yes, that's it.\"\n\nBlondie smiled and rose up onto her feet. She then slid her panties down her long tanned legs and stood up again.\n\nThe sexy blonde then climbed up onto the sofa towards Jack. He was on his knees with Red masturbating under him. Blondie shuffled over to Jack and parted her pussy lips with her fingers. He could see her wet pussy lips just inches from his face now. Again, Jack could feel the heat coming from Blondie's pussy.\n\n\"God, that pussy is so hot Jack,\" Anna was whispering in his ear. \"I want to taste it so much. Look at how tight it looks.\" Her hand was still stroking his balls but now it was starting to edge up his shaft.\n\nBlondie then started to slide two fingers into her tight hole.\n\n\"Fffuuuck! I need to cum again.\" She groaned, looking down at Jack.\n\nRed watched and licked her lips. She then looked up at Anna and winked. \"Jack,\" Red whispered through her shortened breaths, \"I w-w-want you to cum with me.\"\n\nAnna placed her hand around Jack's hard cock and created a tight circular grip around his shaft. She kept her hand still.\n\nJack looked down at Red now moving her hips to meet the attention from her fingers. He could see the top of her mound and flashed of her red pubic hair. Her toned stomach moved as her hips ground down into her hands. She was speeding up.\n\n\"Oh god,\" Red moaned, \"I going to c-c-c-cum really hard. Shiiit. Jack, fuck that h-h-h-hand. I want to see you fuck that hand. Hmmnnn.\"\n\nJack didn't need telling twice. He thrust his cock forward and Anna's tight grip created enough friction for Jack. He groaned as his foreskin was pulled back over the head of his cock. His eyes closed from the long overdue pleasure. His cock instantly leaked pre-cum from the tip.\n\n\"That's it Jack,\" Anna whispered, \"fuck my tight hand. That's it, thrust forward. My pussy juices are all over my fingers still. Yes, that's it. Thrust again.\"\n\nJack did. The head of his cock passed through Anna's tight fingers. It pulsed as he thrust. \n\nRed groaned loudly. She was starting to buck her hips up now to meet the concentrated attention from her fingers. \"Jack, oh god. I'm sooo close.\"\n\nJack looked down at her body and thrust his cock backwards. He knew he was close too. His eyes raised up to Blondie's pussy in front of him. She had two fingers buried into her pussy. She was using her other hand to rub her clit. Every now and then she moved her hips forward as she stroked closer to her second orgasm of the night. Her lips parted where her fingers were deep in her wet hole and Jack was centremetres away from her wet lips now.\n\n\"Mmmm, that pussy tastes good Jack,\" Anna whispered deeply in his ear, \"go on, lick it. She wants you to lick it.\"\n\nJack thrust forward again and exhaled loudly. He started to feel his balls stiffen.\n\n\"Oh ffffuuuucckkkk! Jack. I'm ready...shiiit! Ready? I'm going toooo...mmmm...c-c-c-count down fom three.\" Red moaned.\n\nJack pulled his cock back through Anna's hand. She hadn't moved it once but it felt incredible. Red's hand was working furiously inside her panties. Her hips were gyrating fast now. Jack could make out her stomach muscles as she ground her hips.\n\n\"Lick it Jack,\" Anna whispered again.\n\nJack thrust his cock forward again. He felt his cum building. He was so close.\n\n\"Two,\" Red groaned, \"ffffuucking hell!\"\n\nBlondie suddenly stopped stroking her clit and pushed her whole crotch into Jack's mouth. \n\n\"Mmmm make me cum...shiiit!\" Blondie groaned.\n\nJack instantly found her clit with his tongue and Blondie started bucking against it. She ground her clit into Jack's tongue and grabbed the back of Jack's head to get a better grip.\n\nJack felt Anna moan in his ear, \"That looks so hot Jack. Lick her pussy. Hmmm,\" she whispered breathlessly. \n\n\"FFFFUUCKKKKK!\" Blondie screamed, \"I'M CUMMING! OH GGGGGOD! I'M CUMMING IN YOUR MOUTH! YES, YES...\" she ground down and rubbed the orgasm out of her body for the second time tonight.\n\nJack thrust forward again and felt the head of his cock grow, he knew he was going to cum. He moved his mouth away and Blondie stepped backwards. Red was furiously stroking her clit under her green silk panties now and her hips were bucking around.\n\n\"One, Jack! Ohhhh...I'm going to cum!\" She managed to moan. C-c-cummmm with meeee...\"\n\nJack thrust back again and his cock slid easily through Anna's fingers. He felt the cum building up and thrust forward once more. \n\nAnna made a tighter hole with her fingers and whispered, \"Cum over her Jack...that's it. Cover her with cum!\"\n\nThe warm white liquid erupted from Jack's cock and spurted over Red's stomach.\n\n\"NNNNNNNGGGGGG! OH GODDDD!!\" She groaned as she felt Jack's hot cum land on her tightly toned stomach.\n\nJack pulled his cock back through the tight hole Anna had created with her fingers and he thrust forward again, this time more aggressively. More cum spurted out of his cock and landed on Red's panties, dribbling onto the green silky material - instantly soaking her panties.\n\n\"Fuuuuck,\" Red groaned as she rubbed her fingers over her clit to ease out every moment of her orgasm, \"ohhh yes. Fffuck that feels so good.\"\n\nAnna kept her hand wrapped around Jack's cock as thrust forward once more. The last dribble of his cum drizzled down over Red's inner thighs.\n\n\"That was so sexy,\" Blondie smiled as she said it. \"Ive not cum that hard in ages,\" she giggled.\n\nJack looked down at Red and her eyes flashed at him as he once more explored her sexy body.\n\nAnna released his cock and gently stroked her fingertips over his balls, whilst kissing his ear.\n\n\"Well Jack,\" Red said, \"we'd love it if you could come here again sometime.\"\n\nJack smiled and nodded, 'absolutely,' he thought to himself."
    ],
    "authorname": "EnglishTongue",
    "tags": [
        "mutual masturbation",
        "cum over me",
        "dirty talk",
        "strip",
        "lesbian",
        "female orgasm",
        "fffm",
        "dry hump",
        "pussy grind",
        "cum on panties"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/jack-earns-a-treat-after-work"
}