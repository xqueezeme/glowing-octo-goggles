{
    "title": "A New Way of Seeing Things Pt. 03 Ch. 15",
    "pages": [
        "To all that privately expressed concern, my apologies over the delay in chapters. Life has not returned to normalcy as quickly as I hoped and time for this hobby has been limited. Please know I'm still having fun writing this story and have no plans of stopping just yet, I just want to make sure I'm publishing content that at least passes my standards, as low as they may seem to others. \n\nStandard disclaimers.\n\nThis is a story about sexual exploration and, open relationships. Open relationships can and do happily exist; but they are not for everyone. If you do not believe it is at all possible for open relationships to exist without damage to any and all involved parties, please do yourself a favor and don't waste your time reading this.\n\n. \n\nAlso, this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental.\n\n*****\n\nGwen had been awaiting the phone call with nervous anticipation, but it still caught her off-guard \"Mrs. Nelson?\" the man on the other end began. \"Danilo Castigalli. I understand Mrs. Danning told you I'd be calling?\" \n\n\"Oh, yes, she did. Uh, thank you for calling?\" \n\n\"Thank you for agreeing to take this job,\" he replied. \"Mrs. Danning indicated you don't have a lot of modeling experience but is convinced she made the perfect \"find\" for this project and was very pleased you said yes. I'm sorry it's taken me so long to contact you, but I wanted to firm up my schedule before I made arrangements.\"\n\n\"She's right, I really don't have any experience at all.\" She wondered whether he knew the circumstances under which she had been \"found\". He doesn't sound very old or very Italian, Gwen thought, and the mature European gentleman she had imagined was replaced by a younger man, late-twenties or early thirties, maybe.\n\n\"I just arrived here in New York,\" he continued, \"and I was hoping to make it down to the Atlanta area later this week. I was wondering if I might meet with you this weekend? I'm sure your time is very valuable, I promise to try and not take too much of it.\"\n\n\"Oh\u2014I didn't realize we'd be doing\u2014this\u2014so soon...\"\n\n\"Oh, no Mrs. Nelson, I just want to meet with you, get some ideas for the direction this might go, a few test shots at most. The actual shoot will be sometime later, once everything is arranged and the weather looks like it will cooperate.\"\n\n\"Oh,\" Gwen repeated, this time with a small sense of relief. \"I suppose I could make it to Atlanta this weekend to meet with you...\" Perhaps Natalie could go with her, maybe they could stay with Liz...\n\n\"I wouldn't dream of inconveniencing you like that,\" the young man assured her. \"I understand you stable your horses at your home?\"\n\n\"Well, yes...\"\n\n\"Then if it's alright with you I'd like to meet with you there. Get to see you interacting with your own horses, watch you ride...would you mind?\"\n\n\"Not at all, yes of course you're welcome here, but I also don't mind coming to Atlanta. I'm sure you're a very busy man.\"\n\n\"Not too busy to accommodate Sylvia Danning's wishes,\" he said with a laugh. \"Would Saturday morning at 9 be alright?\"\n\n***\n\n\"What time?\" Tim asked when Gwen told him about the photographer's visit while they prepared for bed that evening. \n\n\"9. Is that alright?\" \n\n\"Well, yeah, but uhh, Bob and Yvette asked us to come up to the lake on Saturday for a day out on the boat. I kinda wanted to go...I could just go alone, I guess.\" \n\n\"No, don't,\" she replied, slipping beneath the sheets to lie next to him. \"I don't want to be here alone with a complete stranger. I mean, if I'm still going to be posing the way Mrs. Danning had originally planned, he might think I'm, I don't know, the kind of woman who will do more than just pose? I've heard stories about casting couches...\"\n\n\"Casting couches are for auditioning and you've already got the part. Hell, if you're worried that he's gonna try something, I gotta guess that would piss off the billionaire that was so hot to hire you, and he'd have to be an idiot to take that kind of chance.\"\n\nGwen wanted to believe that too, but the Lady demanded caution, reminding her the billionaire had helped herself to that young couple at the mansion. \"I know, but I'd still rather you be around...maybe can we go out to the lake together after? Please?\"\n\nHe laughed and hugged her close. \"I'll let 'em know we'll be up around noon. That gives your photographer about two hours.\" Tim hesitated. \"Can I, uhh, ask you something now?\" \n\nGwen looked up from where she was nestled under his arm. \"What?\"\n\n\"Well, I, uhh, the picture Natalie sent you,\" her confused look made him hurry to continue. \"I, uhh, saw a picture on your phone\u2014sorry, I was looking for the Masterson's number\u2014just like the one you sent me at the Country Club, but it wasn't you.\"\n\n\"Oh that\u2014\"\n\n\"Did you two get together at the dinner?\" \n\nGwen knew what \"get together\" meant and opened her mouth to clear the confusion. She stopped, sensing the look in her husband's eyes was not anger or betrayal but excitement. \"Would you be mad if we did?\" she asked, looking down to rub his stomach above the sheet over his midsection.\n\nHe shifted. \"NO-no, I just, uhh...was, wondering if you did and what happened, is all.\"\n\n\"Do you really want to know?\" \n\n\"Well, yeah...\"\n\nGwen reached down and flipped back the blanket to expose his already-potent erection, her finger delicately tracing a line from balls to tip. \"If you're sure you want to know...\" \n\nThe Slut was given complete control for the next twenty minutes, fabricating an incredibly lurid and pornographic fantasy to satisfy Tim's inflamed imagination while her hand took care of his physical need. Gwen was surprised just how perverted the story became, of how she had straddled Natalie's face while her sister-in-law lay on the same locker room bench she and Tim had used, of how impossible it would have been to explain had they been caught. The telling of the tale had an effect on her as well, and she ground against her husband's hip while she stroked him, gently telling him to just lie back and let her take care of everything when he tried to return some of the pleasure he was getting. \n\nGwen could tell her words and touch had brought him close to the edge, his breathing becoming labored, his cock red and angry-looking as he thrust it through her slowly tightening fist. She could feel the heat radiating from his blood-engorged shaft and anxiously awaited the first pearl jet of his seed, a little embarrassed by the pride she felt in being able to so effectively summon it at will. \"Show me how much you have,\" she breathed as he drew close. I love seeing you shoot. Cricket does too-she still talks about it.\"\n\n\"Really? She liked seeing that?\" he asked through gritted teeth.\n\n\"Uh-huh...thought it was so masculine...\" The young woman's positive review of his performance put him over the point of no return, Gwen happily accommodating his release, quickly angling his cock up to turn it into an obscene fountain as white pulses arced and splattered his chest and stomach while he growled and twitched. Gwen waited until his final explosive exhale, then gave the mysterious thing in her hand an affectionate shake and went to get a washcloth. Her rabbit was retrieved from the nightstand after he had been thoroughly cleaned, and Tim watched attentively as she brought herself to orgasm a few moments later.\n\n***\n\nGwen was glad that Natalie had been able to make it Friday morning. The chance to be out riding was never a bad thing, but she had come to truly appreciate the opportunity to spend time with her sister-in-law, to be able to let her guard down and talk freely without fear of judgement. \n\n\"Are you excited?\" the curvaceous blonde asked after Gwen had told her about the photographer's visit the next day. \"I can't believe my own sister-in-law is posing at the request of one of the richest women in America!\"\n\n\"More nervous than excited. Especially if they stick to the plan...\"\n\n\"Know what the plan is yet, exactly?\"\n\n\"No. I'm hoping he at least gives me a clue tomorrow.\"\n\nNatalie smiled. \"Maybe it's some sort of Lady Godiva-theme kinda thing. You know, naked beauty on horseback?\" \n\nGwen shook her head as a fresh shiver of fear-driven excitement ran through her. Would he really make her ride naked in front of a crowd? \"It can't be that. Lady Godiva was blonde and beautiful with big breasts.\" \n\nHer companion chuckled. \"I don't think there was any press allowed at the first event, so who knows what she looked like? Lady Godiva can be anything you want her to be. Brunette with a ponytail, firm tits that don't make her look like she's too top-heavy to sit straight on a horse...but you are beautiful, so you've got that angle covered no matter what.\"\n\nGwen snorted dismissively. \"I'm a working mother with a husband and two kids. I am NOT a model.\"\n\n\"Mrs. Danning obviously thinks you've got the qualifications for the job. You should really stop being so hard on yourself.\" \n\nGwen let it go, using her time on the trail as she usually did, thinking, mulling over the photographer's visit as well as other pressing matters. \n\nThe heat of the midday sun made a swim after they returned a necessity, and the women made their way first to the kitchen for a drink, then the pool, tossing their sweat-soaked riding gear on the nearby deck chairs.\n\n\"I wanted to let you know,\" Gwen said softly after both their heads had broken the surface and they began paddling. \"I'm really sorry, but Tim saw the picture you sent me the other night. He was looking for a customer's phone number and...well...\"\n\nNatalie grinned. \"What, the one of me on the bar? Oh yeah? Did he like it?\" \n\n\"I'm sure he did,\" Gwen replied in surprise, \"but doesn't it bother you he saw it? You're not mad or embarrassed? I should have deleted it, I'm sorry.\"\n\nThe blonde laughed. \"No, I'm not mad, and I'm only embarrassed if he didn't like it. Are you alright with him seeing it?\" \n\nYou've been showing him a lot more of Cricket, the Slut laughed. \"I was more worried how you would feel about it...I thought you might want things like that kept just between us.\" \n\n\"He's seen naked women before\u2014\" the Lady's paranoia suggested Natalie knew about their recent bedroom antics\u2014\"and I've got nothing to hide...he did like what he saw, right? You can be honest with me. Has he been able to get it up since?\" The blonde took her companion's hesitation for confusion. \"Get it up? You know, get an erection? I didn't scare it away, did I?\" \n\nGwen shook her head and chuckled. \"Now who's being hard on themselves? I'm being honest-I'm sure he liked it, and it definitely had a positive effect on his, uhh, performance. Tim thought that you sent me the picture for the same reason you sent it to Adam, and that you and I...\"\n\n\"Oh-ho, he thought we got busy first? Was he disappointed when you told him we didn't?\"\n\n\"He always likes to hear about it when we do, so...I lied a little and made something up I thought he'd like. Sorry again.\" \n\nNatalie laughed. \"Oh you dirty girl you! Don't be sorry-glad to help you get laid. And what did we do together, exactly?\"\n\n\"The things we do,\" Gwen answered evasively, \"only in the lounge, and in the locker room. Somebody could have come in and seen us, that kind of thing.\"\n\n\"Makes sense\u2014good bedroom talk has to have some believability. Tim's a really nice guy, but he's still a guy and therefore has his fair share of kink in him...of course he likes the idea of two girls getting it on. His wife and sister-in-law? Even kinkier.\" \n\nIf you only knew just how kinky he and I have gotten, Gwen thought. \"Natalie,\" she asked after a few moments' silence, \"can I ask you a question?\"\n\n\"'Course.\" She looked back expectantly. \n\n\"You told me that when you were in college, you and your roommates used to, you know, sometimes you'd share in the bedroom?\"\n\n\"You mean sleep with each other?\"\n\n\"Well, yes, that, but the boys you brought home...\"\n\n\"Oh, you mean sharing the rod? That's what we called it when we shared guys. That's what you mean, right? It definitely made things interesting and educational for a bunch of always-horny college girls. Why do you ask?\"\n\n\"Oh, I was just wondering...I never really imagined people did that until you told me...did it ever bother you to see the guy you were with doing that with your roommate?\"\n\nNatalie smiled and shook her head. \"Not really, no. I always have liked the whole group play thing\u2014it just feels so nasty to have a different set of hands on you! I think a lot of the times my roommates and me were just showing off our latest catch. And I know it sounds conceited, but I liked seeing how excited a new guy would get over me, and how they'd try to impress me with their cocksmanship. It was funny how hard some of those guys worked to get me to come. It was just so outside what I had always been taught good girls are supposed to do...girls are just as kinky as guys, I guess.\"\n\n\"Was it different when it was Adam?\"\n\n\"I'll admit I got a little jealous the first time I saw him with Liz because I knew how much I liked him and he looked like he was really into her whole taking charge thing in bed. I worried he might like her better after, but I'm the one he kept asking out, so I figured sex is only one small part of mutual attraction. And besides, he shared me with other guys\u2014and girls-and didn't freak out or get possessive, so it wouldn't be fair if I did. Why the sudden interest in this?\" \n\nGwen hesitated before answering, carefully organizing her thoughts. \"I feel like I should be more upset that Tim thinks about you and me...doing what we do...but I'm not. And then I think that he should be way more upset with me for doing that, but he's not. To tell you the truth, I still feel guilty sometimes that I'm cheating on him, but I don't want to stop.\"\n\nNatalie eyed the naked woman and shrugged. \"Cheating's when you do it without his permission. And that doesn't just go for sex\u2014you could be spending time somebody with else without ever touching that person and still be cheating if you hide it from the person you love. But Tim knows and approves and likes what you're doing, apparently. If you like it and Tim likes it, and I like being part of it, and Adam knows and is okay with it, then everybody wins and it's nobody else's goddamn business what us four like.\" \n\nGwen nodded curtly. \"Makes perfect sense,\" she smiled, \"but ever since you started being a bad influence on me, my emotions have been overriding sense. I wish the two would just agree on this.\" \n\n\"Cold logic Gwen and feelings Gwen are a lot closer to equal now than when I started coming over here,\" Natalie said with a grin. \"I'm predicting they'll be hand in hand in no time, and then look out! Just do me a favor?\" she continued. Gwen looked up, anxious to do anything for her friend. \"Promise you'll tell me if you catch Tim jerking off to my picture? I'd consider it quite the honor. Well, this little talk has gotten me really worked up.\" The blonde moved to the pool steps. \"Can I borrow your bedroom for a few moments? Might make work a little more pleasant.\" \n\n\"Oh\u2014certainly, of course. Do you want me to uhh, help?\"\n\nNatalie reached for her towel and grinned. \"I thought you'd never ask.\"\n\nGwen led the way down to the house and into the bedroom. Natalie followed along, eying the firm butt bouncing before her, embracing her sister-in-law from behind when she paused at the bed. Her hands began to roam, first turning circles on Gwen's stomach before one took the motion up to her breast while the other dipped between her legs. \"You feel wonderful,\" Natalie murmured as she kissed Gwen's neck, \"but I'm in the mood for something filling today. Could we use some of your toys?\"\n\n\"Of course,\" the woman in her grasp murmured back, but the arms about her did not retreat just yet. Natalie ground her mons against the base of Gwen's spine as her fingers danced over nipples and clit and her tongue teased an ear...she finally released her with a pat on her ass and casually lay down, waiting for the toys to be retrieved.\n\nGwen joined her on the bed and reached for her sister-in-law's side. \"I remember when Liz and me had a guy with us, she\u2014oh yes, that's nice, right there- liked to sit on my face so she could watch him fuck me,\" Natalie said while her nipple was gently tongued. \"How about you play the part of Liz and this\u2014\" she rolled on to her back and grabbed one of the dildos\u2014\"can be the lucky guy?\"\n\nGwen looked up from her breast. \"Oh\u2014okay.\"\n\nNatalie rolled on to her back. \"C'mon up\u2014climb aboard. Aww, I think it's trying to say hello,\" she joked as Gwen carefully straddled her sister-in-law's head, cautiously settling back against the tongue already splitting her slit. The legs below her spread and the giant phallus was positioned between them to slowly push against abundant scarlet-purple folds while a muffled \"ohhh, yesss\" reverberated against her own. Natalie's hand patted the bed next to her, searching, finally locating the Magic Wand and handing it to Gwen before pulling on the thigh next to her cheek to bring pussy more firmly into contact with tongue.\n\nGwen shuddered at the feel of her clit being tickled, managing to thumb the switch on the vibrator and apply it to Natalie's. A soft groan of approval vibrated against her sex and the embedded penis began to saw in and out, changing angles and driving deep before retreating enough for Natalie's lips to grasp at the bulbous head as if trying to prevent its escape. I can see why Liz liked this, Gwen thought, relishing the physical and visual stimulation, imagining what it would be like if there was a real man between her sister-in-law's splayed legs. His face would almost certainly be just inches away from hers, or maybe he would be alternating kisses between her breasts...just a fantasy, the Slut calmly assured the Lady, just a fantasy. \n\nGwen grew less concerned about smothering the woman below her as her arousal intensified, reasoning that Natalie had asked for her to be there in the first place and could ask her to move any time she wished. Her hips rocked back and forth against the face below her, one hand now on the bed supporting her body while the other worked the vibrator in the ways she knew she enjoyed. I doubt I could get it down there with a man in the way, she reasoned, imagining a masculine midsection grinding against her sister-in-law's mons, teasing the tingling nub threatening to peek out the top of her slit. \n\nNatalie was first, suddenly grabbing the hand holding the Magic Wand with her own and helping to both steer and mash it into her clit while the dildo was slammed as deeply as it could go. The tongue in Gwen's cleft stopped while the body below shuddered and convulsed, then went limp. Give her some air, the Lady insisted, and she obliged, gently rolling to her side.\n\nNatalie smiled weakly.\"Whoo, good one!\" She reached out to pat the knee next to her shoulder. \"You deserve a good one, too. C'mon-on your hands and knees.\" \n\nGwen hurried into position, looking back over her shoulder while the blonde retrieved the vibrator, unsure what was to come next. \"Like this?\"\n\n\"Uh-huh.\" Natalie kneeled behind the crouching woman and gently spread her legs a bit more, then reached around the front of Gwen's thigh and the brought the Magic Wand up into her crotch and on to her sex. She bucked at the sudden sensory overload radiating from her clit, but Natalie steadied her with a firm hand on her presented ass. A finger up dragged slowly up her slit, collecting her wetness to deposit and spread it around her puckered ring. She shivered, both from the vibrator and the touch against her most forbidden place, waiting to be penetrated, silently admitting she wanted it to happen. \n\nNatalie did not disappoint, her middle finger slowly pushing against the strong muscle while her thumb came down to effortlessly slide into her other opening. Gwen came with both fingers deep inside her, soft squeaks escaping in time to the contractions as she tried to simultaneously rock against both the invaders and the buzzing on her clit. The fingers stayed inside her as she sank to the bed, finally withdrawing to allow the hand they were attached to a moment to caress her naked backside.",
        "***\n\n\"Mrs. Nelson?\"\n\nGwen descended the deck steps towards the rental car in their yard as the driver got out and straightened. He looked even younger than he had sounded, impossibly young, too young to be a noted artist, a slim, handsome boy with skin tone that belied a Mediterranean heritage. A shock of unruly black curls sat above a handsome face and easy smile. \n\n\"I am.\" She offered her hand. \"You must be Mr. Castigalli?\"\n\n\"Dan.\"\n\n\"Please, call me Gwen.\" The young man smiling pleasantly but said nothing, his silence unnerving her a bit. \"You must have gotten on the road early this morning. Can, I uhh, get you anything? Coffee, some water?\"\n\n\"Coffee would be great, but only if you already have some made.\" The smile never wavered and his eyes never left hers as he waited for her to lead the way. \n\n\"I do, please come in.\" She turned, hiding her blush, and led him back up the stairs and into the kitchen. \"My husband Tim is out in the workshop,\" Gwen felt the need to volunteer. \"I'm sure he'll be along shortly.\" She imagined his eyes on her back as she turned to the counter and could not shake the feeling that she was somehow being evaluated, like a buyer might size up a horse for sale. Not that she had not sized him up as well, the Slut reminded her. KD's age, maybe even younger, she guessed. Must be a prodigy to have caught Mrs. Danning's eye. Was it even legal to pose nude for a teenager? \n\n\"I'd like to meet him,\" Dan replied, taking the mug from her. As if on cue, there was the sound of boots on the deck. \n\nGwen whirled to face the door, thankful for her husband's appearance to help break the stress she imagined, the Lady hoping that it was obvious to Tim that there was nothing inappropriate about being in the kitchen with the young man. He smiled easily at the young photographer and extended his hand. \n\n\"Tim Nelson.\"\n\n\"Dan Castigalli. It's nice to finally meet Gwen and yourself. You folks have a beautiful place here.\" \n\nTim smiled. \"We try to run a reputable home for wayward horses.\"\n\nDan returned the smile and turned to Gwen. \"Speaking of horses...I know your time is very valuable, so I'll try not to waste it. I was hoping we could start out in the barn? I'd like to see you interacting with them...maybe take some test photos of you grooming, saddling and riding, if that's alright.\" \n\nTim led the trio out the door and down the stairs. \"I doubt you'll be wanting to see my skill with a front end loader, so I'm going to head down to the shop. Let me know if you need anything.\" Their paths diverged, one to the shop, the young man to his car to retrieve his camera, and Gwen to the barn. \n\n\"Your barn is immaculate,' the photographer remarked upon joining her in the cool shade of the barn's center aisle and looking about. \"You must have a very attentive staff.\"\n\nGwen laughed. \"No staff, just me and my friend. She boards the Thoroughbred there\u2014\"she nodded to where Marvin stood with Dancer and Tigger in the middle of the paddock, eying the stranger warily while Dart ambled towards them\u2014\"and she does most of the work on weekends. My daughters pitch in when they come over, and my husband does the heavy lifting, bless his heart.\"\n\n\"Well, that's impressive,\" he said truthfully. \"Most of the owners and riders I associate with wouldn't be caught dead with a manure fork in their hands. Are the others your horses?\"\n\n\"The other two out in the paddock are my daughters. Dart's mine,\" she said, walking over to where the horse stood at the gate to rub his neck, her nervous tension forgotten now that she was in her sanctuary. \n\n\"Seems pretty confident. I see he's the only one brave enough to come up and check me out.\" \n\n\"He's probably just looking for a handout,\" Gwen said dismissively. \"But yes, he's a brave boy...\" the rubbing of his cheek had turned to an affectionate stroke. \n\nShe sensed he now had the camera up to his eye and turned to confirm her suspicion. \"Oh\u2014uhh, sorry, what should I be doing now? Am I supposed to pose, or something? I'm so sorry, but I haven't done this before,\" she told him again.\n\n\"You're doing fine, just keep what you're doing, and no, no, don't pose\u2014pretend I'm not even here\u2014just do what you normally do when you're out here, when you're doing chores. Maybe go through your routine for getting ready to ride? What do you do then?\" \n\nShe grabbed the halter and lead hanging by Dart's stall, resisting the urge to ignore the photographer's instruction and look at him or more exactly, the camera up to his eye. \"I, uhh put a lead on him so I can groom him first, check him for anything that might make riding uncomfortable for him.\" Dart was happy to accept the bit and halter, knowing it meant some time together with his human, and walked on his own to where he was always tethered and saddled after the gate was opened. The other horses watched with interest, but came no closer. \n\nGwen went through the routine she had repeated countless times, checking for sores or tenderness in the big animal's muscles as she curry combed, looking for weight shifts that might indicate lameness or hoof problems. The camera clicked, catching the muscle memory she had been acquiring since high school. \n\n\"You need help with that?\" Dan offered as the petite woman hefted the saddle off its stand and carried it to the horse, unsure such a small woman would be able to handle the task alone. \n\n\"No, but thank you,\" she laughed, surprising the young photographer just how easily she managed to get it into place on the patient animal's back, impressed the horse had even dipped a bit to help. \n\nEverything ready, Gwen finally risked a glance at the camera, greeted by more clicks. She quickly turned away. \"What should I do now?\"\n\n\"Well, if you wouldn't mind leading him out into the field below the trees...\" the photographer followed, camera still to his eye, as woman and horse walked together. \"Nice...okay, maybe you could mount him?\" With much-practiced ease her left foot found the stirrup before the right leg saw swung over the big animal. \"Great. Now, can you dismount, then re-mount?\"\n\nGwen looked down at the photographer, concerned she had done something wrong, and repeat the process. Dan moved about taking pictures from several angles, having her repeat the motion again and again until she found herself slightly winded. Finally satisfied, he left her in the saddle and asked the pair to \"move around a bit.\" \n\nHorse and rider were put through their paces for the next half-hour, trots, gallops, more technical aspects from the world of dressage, as well as just standing and being. Tim came out from the shop to briefly watch and wave, Gwen seeing but not acknowledging him as she connected with her horse, not knowing exactly what the young photographer was looking for but anxious to not to embarrass either her or Dart in the process of giving it to him. He finally called a halt to the team's efforts, still taking photos while the process of getting the horse ready to ride was reversed. \n\n\"You and Dart appear to be very much in tune with each other,\" Dan told her as they walked back to the house. \"I can definitely understand what Mrs. Danning sees in you.\"\n\n\"It's all him. Dart and I, well, I trust him completely and I think he trusts me,\" she said with a grimace. \"I'm sure I won't be the same with the horse she picked out for this. Do you know anything about him\u2014or her?\"\n\nDan seemed a little distracted, his mind elsewhere at the moment. \"Him,\" he announced, bringing himself back, \"and yes, I've met him. Very spirited, maybe even a little brash, I definitely wouldn't trust him with a lesser rider. He is very handsome, though-I'm sure you'll do fine.\"\n\nThe young man's confident, easy going nature seemed to wane after they returned to the kitchen. \"So, uhh, Gwen,\" he asked after taking a sip of water, \"forgive me for asking, but did Mrs. Danning, did she uhh, tell you that part of her idea for this project involves, uhh both you and the horse posing without clothes?\" He smiled apologetically at the weak joke. \n\n\"She did...\" Despite her embarrassment, Gwen looked him square in the eye, determined to show calm confidence in a way even Miss Ritter would have deemed sufficient.\n\nThe young photographer mistook her confidence for icy annoyance, but continued on. \"And, uh, again, forgive me for asking, but does, uh, your husband know?\"\n\nGwen could see him grow even more nervous with the second question, and impassiveness turned to compassion. \"He does,\" she told him with a smile, \"and he's okay with it. I have to admit I'm a little nervous about it, though.\" \n\nDan grinned sheepishly. \"You and me both. Sorry, I'm a little nervous, too. You'll be my first professional nude.\"\n\nGwen's eyes widened in surprise. \"Really? But you're a professional photographer\u2014\"\n\n\"Of horses,\" he said, cutting her off. \"And their riders, who wear clothes. I did a couple of nude portfolios in college, though,\" he added quickly, \"and a couple more private portfolios of girlfriends.\" His blushed at this admission. \"So I at least know what girls look like. To be honest, I wasn't sure why Mrs. Danning chose me for this, but she kept saying something about the way I capture a body in motion, and that it can't be that much of a stretch from the equine form to the human, so...\" he shrugged and smiled again. \"So you're stuck with me, I'm afraid.\"\n\nGwen smiled, his admission somehow comforting, as if it had returned some small amount of control to her. \"Mrs. Danning had a very good reason for asking you to do this, I'm sure. How long ago did you graduate from college?\"\n\nHe smiled. \"Four years ago. I know, I know, I look young for my age, but trust me\u2014I'm twenty-five. I can show you my passport, if you don't believe me.\" \n\nNot a teenager, at least, Gwen thought, but still young. He must think I'm ancient. \"No,\" she said with a blush, \"that's not necessary.\"\n\n\"Which brings me back to the next thing on my to-do list,\" he continued, now avoiding eye contact. \"I'd like to, umm, get a couple test shots\u2014of you, without clothes-if that's alright?\" \n\nGwen hesitated. \"Well, yes, certainly, I suppose we have to get to that sometime. Now's as good as never. What would you like me to do?\" \n\n\"Like I said, I don't have much experience with this...my girlfriends were already in the right way to be photographed,\" Gwen thought it cute that his blush deepened at what was being implied. \"The models in school started out in robes until the instructors asked them to, uhh, disrobe...if you have a bathrobe, maybe you could change into that?\" \n\nShe smiled in acknowledgement. \"I'll go change and come back out here?\"\n\n\"I think that's best, yeah...maybe just take the pictures in the living room? Or would that make you uncomfortable? These are just test shots, I promise. They won't get around.\"\n\nShe rose from the table. \"I'll trust you to make sure they don't. I'll take a shower and get changed.\"\n\n\"No,\" he said suddenly, \"no shower\u2014please. I'd rather see you natural, like you just came in from riding, if you know what I mean.\"\n\n\"If you mean sweaty with caked-on dirt, then yes I know what you mean.\"\n\n\"Natural,\" he corrected. \"I want to show an equestrienne in her most natural form, showing the effects and results of her passion. Sorry, I know that sounds hokey, but it's really the look I'm hoping for here...please?\"\n\nGwen smiled. \"Would you like me to go roll around in the paddock for effect?\"\n\nDan laughed. \"No, just like you are is fine.\"\n\nShe turned to leave but he stopped her again. \"Oh\u2014Tim...I know you said he knows, but he's not going to get upset if he comes in and sees me taking pictures of you, is he? I'd really hate to be chased off your property.\" \n\nGwen reversed direction towards the kitchen door. \"I doubt that will be an issue, but I'll go warn him just in case.\" She waited patiently at the shop door until he had finished a weld. \"Dan is going to take some test pictures of me,\" she announced matter-of-factly. \"Without my clothes on. I wanted to warn you in case you came up to the house.\" \n\n\"Oh yeah?\" he replied with a smile. \"Should I be there to chaperone?\" \n\n\"If you would like. Just try not to scare Dan, okay? I think he's a little nervous about it.\" \n\n\"I find that hard to believe.\" He flipped the welder's mask down. \"Let me get one more tack down and I'll be up.\"\n\n\"Please don't burn yourself.\" She didn't wait for him, crossing the yard on shaky knees, re-entering the kitchen to find the young man still at the table, looking up at her anxiously. \"Be right back,\" she announced, walking by him and down the hallway.\n\nShe had only been gone a moment when Tim followed along, cautiously opening the door as if trying to avoid interrupting something, instead finding the young photographer adjusting his camera.\n\n\"Hi, Tim,\" he said cautiously, looking up from his efforts. \n\n\"Hey.\" \n\nDan cleared his throat. \"Gwen's certainly the accomplished rider. Beautiful to watch on horseback. Smooth and flowing, not at all technical-looking, like it comes naturally.\"\n\n\"Yeah, she loves those horses...I pity the person that gets between her and them. Or her and our kids.\" \n\n\"I could see that...\"\n\nThere was an uncomfortable silence, both men very aware of what they were waiting for. Gwen returned a moment later, her bathrobe wrapped about her. \"You said the living room?\"\n\nThe photographer rose from his chair, again checking his camera. \"Uhh, yeah, okay.\" She stood between the two rooms, arms at her side, facing the young man. Dan glanced at Tim, worried how he would react to his wife getting naked, then looked at Gwen \"Okay, uhh, whenever you're ready, you can take the robe off.\" \n\nGwen looked at Tim as well, raising her eyebrows to silently ask for his permission, or at least his acceptance. His smile was enough for her and quickly undid the sash with shaking fingers. She hesitated, taking a breath, the Lady scolding her to at least not make it seem like a striptease, then flipped the robe open, letting it slide off her arms and to the floor.\n\nShe saw the young man's eyes widen slightly and resisted the urge to giggle at his flustered reaction. His eyes swept from her feet up to her face, quickly stopping there and focusing as if to make it clear he was not checking her out. \n\nDan smile was meant to be reassuring but came across as nervous as he again looked at Tim, his own patient smile the only reaction while he leaned against the kitchen counter with arms folded over his chest. The photographer hurriedly raised his camera to his eye where he stood, intent to be seen as working and not gawking, apparently unsure as to whether it was appropriate or safe to move any closer to the naked woman before him. \n\nThe young man's nervousness was obvious, a fact which somehow greatly reduced Gwen's. She felt a sense of her power and control over the situation despite being the only naked one in the room, a feeling she decided she definitely liked. \"Should I do something?\" she asked again, arms hanging by her side, nipples hardening in the cool air. \"Pose?\"\n\n\"Nope, no posing, you're fine. But, uhh, could you take your hair out of the ponytail?\"\n\nShe reached back to undo the band, her breasts pushing out towards the camera as she reached back. \"Let me go comb it.\"\n\n\"No, don't comb it\u2014just let if fall. Natural, remember?\" \n\nGwen laughed. \"Now you're really asking a lot! There's natural, and there's just plain messy!\" She allowed the dark locks to fall down between her shoulder blades, quickly running her fingers through it.\n\n\"No, it looks great, really. Okay turn to the side, give me a profile, please.\" She concentrated on her posture, shoulders back, chin up, her instructor's voice in her head. No slouching, stupid girl! Stable hands slouch! More clicks. \"Turn again, so I can see your a...uhh, backside. Her buttock muscles flexed reflexively after she had turned her back to him, and Dan wondered if that had been for him. \"One more turn please, other profile. Beautiful!\" he lowered the camera and looked at her for a second before dropping his eyes to intently study the camera in his hands, as if to avoid being accused of staring. \"It's so obvious you're a rider. You have the muscle tone of the show riders I've seen, uhh, well, without their clothes on. Tight abs and thighs, firm, uh, backside, even your back muscles and shoulders have tone to them. \n\nGwen's lip curled mischievously. \"I thought you haven't photographed any riders\u2014like this\u2014before?\"\n\nHis blush freshened. \"I didn't have my camera when I saw them like that. We were, well, you know...\" The young man hurried to deflect. \"It's even more amazing you look like that after two kids. My mom has five, and she doesn't look like that\u2014I mean, I've never seen my mom naked\u2014\" he stammered, desperate to correct the misunderstandings he was creating-\"but I have seen her in a bathing suit, and she looks more like a, uhh, I don't know, a mom.\" \n\nGwen wondered if she had to wait for permission to put her robe back on, but realized she didn't want to just yet, even if permission was given. \"I'm sure your mother is beautiful. She has five children, I've only got two,\" she reasoned. \"Is she an equestrienne? Is that how you got into the horse world?\"\n\n\"I wouldn't call her that, but she is a horse lover. She was an actress from Iowa, Dad's a film producer from Rome. They met at an audition, got married. Mom liked to drag me to horse shows when I was a kid. I'd take pictures for something to do, people with more money than sense told me how much they liked them and gave me money, so I got the idea I might be good at photography and went to college for it.\" He looked at his watch. \"And I've taken way too much of your time.\" He looked up and realized there was still a naked woman standing in front of him waiting for instructions. The photographer averted his eyes. \"You can go get dressed now, Gwen, I'm done with pictures. Just a couple more things.\" He turned and sat at the table, fishing something out of his pocket to write on. \n\nGwen smiled, leaving the robe where it was and joined him. \"I'm fine. What else do you need?\"\n\nHe glanced at the small tuft of pubic hair next to him just below the table's edge and then quickly away again, his train of thought derailed. \"Uhh, yes, well, you'll need wardrobe. If you could contact this Equestrian Supply outfit in Atlanta, they can come out and do some measurements and fittings at your convenience. It will be on Mrs. Danning's tab, of course.\"\n\n\"Wardrobe? I thought this\u2014\"she motioned to herself\u2014\"I won't be wearing this after all?\" A part of her worried that she had failed the test.\n\nDan smiled. \"Only part of the time. For the rest, you'll need something a bit more...traditional for riding.\" \n\nGwen looked down. \"Alright...well then, I can go to Atlanta for this,\" she said taking the card from him. \"I have something else I need to do there\u2014I can get both done in one trip.\" \n\n\"You're more than welcome to, but if you change your mind, just give them a call and they will come to see you. Do you think you could see them in the next couple of weeks?\" \n\n\"Is next weekend soon enough?\" \n\n\"Absolutely.\" \n\nOh\u2014and the last thing.\" His blush freshened as his eyes swept from her midsection up over her breasts to her eyes, then away again. \"Your, uhh, hair. Could you let it grow until we do the shoot?\" \n\nGwen nodded. \"I can do that. Do I need to have it styled?\"\n\nDan wouldn't look at her. \"No, I'd just like it as long as possible. And uhh, if you could let your other hair grow as well...we can style either or both if we need to before the shoot.\" \n\nIt was her turn to renew her blush. \"You mean my...?\" She glanced down at her crotch, but his focus was intentionally elsewhere and it was missed. \n\n\"Your pubic hear\" he mumbled. \"It looks like you keep it trimmed up, but, uh, natural, right?\" \n\nHe rose from the table, only briefly making eye contact with her as he said his goodbyes. To the young man's surprise, she didn't bother to redress before escorting him out to his car and seeing him off, and he felt it safe to keep his eyes on the rearview mirror and the nude woman in it waving goodbye until he turned down the tree-lined portion of the driveway. ",
        "\"Gwen Nelson,\" Tim admonished once they were back inside, \"were you teasing that poor young man, running around naked like that?\" \n\n\"No! I just wanted to show him that he didn't have to be worried about me being shy when the time came for me to, uhh, pose.\"\n\n\"Uh huh.\" His hand went to her crotch, inserting his middle finger between her lips before withdrawing it and holding it up for her to see. \"You're wet.\"\n\n\"Alright, maybe it was a little exciting...that's okay, right?\" \n\nTim laughed. \"Ain't you full of surprises. But hell yeah, it's fine. Unfortunately, we can't do anything about your, uhh, condition right now, or mine for that matter. The McCallums are expecting us up at the lake, remember? We're already running late.\"\n\nShe hugged him around the neck. \"But when we get home?\"\n\n\"Game on.\""
    ],
    "authorname": "BusyBadger",
    "tags": [
        "husband",
        "wife",
        "lesbian",
        "toys",
        "handjob",
        "nfcm",
        "photos"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-03-ch-15"
}