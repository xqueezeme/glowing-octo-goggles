{
    "title": "The Master and the Ring Ch. 03",
    "pages": [
        "The guards had come from the room where the willing woman was being violated over and over by the other guards. They had had their turn before they went to check on Henri. This was another reason they didn't feel the need to take Yvonne and Serena. They returned to the room to watch the last few men climax inside the woman's sex. Below her on the table and floor was a copious amount of semen from each man. They were amazed the woman still lived but they saw nothing in her dim cloudy eyes. Her mind was gone. As the last man called out his climax and spewed his load forth, the woman fell lifeless on the table.\n\n**\n\nThe Master had pleased the ring. The willing woman's essence pacified its hunger and had infused the ring with power. The Master stood before the mirror and viewed his massive body vibrate with energy. Slowly his considerable shaft fell flaccid after the climax and he removed the ring, shrinking down to his normal weak form. The ring pulsed in his hand with life and felt cool to the touch as it was appeased for the time being. Placing it on a chain around his neck, the Master dressed as a guard and left his chambers to walk unnoticed around his conquest. He saw hate and anger in the faces of the people he had conquered. They all wanted him and the rest of the guards dead it was obvious. It was the fear of the Master that kept them in check.\n\nHe had a copy of the orders he had given Henri, the same list of women he was to prepare before the Master called upon them. There weren't enough 'willing' women to supply the Master and the ring. The only reason he had Henri 'prepare' the women from Mentula was because without the preparation they would undoubtedly perish under the width and length of the Master's cock. This gave the guards nothing. He prepared the women so they would possible survive and appease his men along with the ring.\n\nAs he viewed the list, he tried to recall the first two women. Sisters he remembered. Both very lovely he was sure... an Yvonne and Serena. He remembered them both vaguely as he had seen so many of the countries women during the classifications. He found their room on the map and decided to pay them a visit in his human form... to jog his memory of the two sisters and to see how Henri was preparing them.\n\nHe recalled Henri easily; he had been the most endowed of all the men during the classifications and was why he had chosen Henri to prepare the woman worthy of Mentula. If Henri had followed orders, he should be with the sisters that very moment. The Master strolled among the halls in no particular hurry toward the sister's chamber.\n\n**\n\n\"I did not think I could feel greater pleasure than I had yesterday. But I was mistaken,\" Serena began. \"My climax surpassed that of the candle. With your penis in my forbidden orifice, I climaxed to the extent I never knew existed.\"\n\n\"I admit I myself felt great pleasure as we peaked together. I apologize for falling forward onto you and embracing you in my desire.\"\n\n\"Do not, kind sir... I will not hear your apology for making my pleasure greater.\"\n\n\"Are you two finished?\" Yvonne cut in.\n\nHenri and Serena looked at her. \"We don't have time for your ramblings. We all know the forbidden act has caused great pleasure for each of us. We cannot deny it nor can we afford to. We must embrace the pleasure now and prepare for the coming of the Master.\"\n\n\"Very well, sister.\"\n\n\"I see your wisdom in this as well,\" Henri said.\n\n\"Now, are you able to continue yet?\" Yvonne asked him.\n\n\"I do not know,\" he replied.\n\nYvonne came around the lounge and sat on the other side, reaching out to Henri. With her hands, she pulled him by the hips toward her, lifting his soft, wet cock to her mouth. Henri sighed aloud as her warm, velvety mouth encapsulated his flaccid shaft and she took his sagging member deep inside. She did not seem to care of the semen he still had on his member. She seemed determined only to have him erect again. Life returned quickly to Henri's cock as Yvonne began to suck the limp shaft until it was hard enough to begin to stroke with her hand. Soon Henri's manhood was fully erect once again and throbbing from Yvonne's expert talents. She stroked and sucked him for a few moments more for good measure before releasing him to speak.\n\n\"There, now you are ready.\"\n\n\"Madam, you are very skilled in this art.\"\n\n\"I was taught by the best, sir.\"\n\n\"Mother?\" Serena asked.\n\n\"Yes and you were taught by me.\"\n\n\"And where is your mother now?\" Henri asked as his cock throbbed and pulsed in the cool air. He wanted to meet such a woman that could teach her children this skill. He couldn't help but wonder what the master could do.\n\n\"She passed two years before the war began,\" Yvonne said, lying down on the lounge chair.\n\n\"I'm sorry.\"\n\n\"Enough talk. You must prepare me,\" Yvonne said, starting to play with herself.\"\n\nBefore Henri could get into position, Yvonne rolled over onto her stomach and lifted her backside into the air with her legs spread wide. The new view of her body caused Henri's hard cock to spasm with a jolt of pleasure. She had her hands under her sex, fingering her vagina and grinding on her clitoris. He was so taken aback that he froze in place and watched her. Her large breasts were smashed against the red velvet lounge, her incredible back arched to her shapely behind and her tight rosebud stared directly at him. She turned her head and looked at him; he was mesmerized and did not hear her the first time.\n\n\"Are you going to just stare at me or prepare me with your mouth as you did my sister?\" Yvonne asked, louder.\n\n\"My apologies, Yvonne,\" Henri said, blinking and moving forward.\n\nHe opened his mouth as she turned back to face forward. His tongue found her tight hole above her moving fingers. He licked around the snugly puckered skin, adding saliva to her body before pressing the tip of his warm tongue into her forbidden hole. She moaned softly as more of Henri's tongue descended into her hot bowels. He was not aware of her soreness from yesterday, and her quite moans gave no clue to any discomfort from his tongue. Suddenly, as his head was buried in her backside, he felt a hot, wet mouth on his cock. Serena was sucking him and keeping him not only hard but lubricated for the time he would penetrate Yvonne. The sensation on his cock from the younger sister was very similar to Yvonne and he knew she had taught the younger well.\n\nHenri prepared Yvonne's ass for a few more minutes as Serena constantly sucked and licked his cock. He never swallowed and had deposited a plentiful amount of saliva on and in her tight orifice. Not really wanting to change what he was doing, Henri sat up anyway before Yvonne said something again. Serena was forced to stop sucking him and Henri positioned himself behind Yvonne. His cock was straining with blood and excitement once again. It was difficult to get the correct angle as hard as his shaft had become. With a little effort, he bent his member down and placed the head at the wet entrance to Yvonne's pulsing hole. He reminded himself to not rush into her this time, feeling that was the major difference between Yvonne and her sister from yesterday to today.\n\nGently he moved forward and watched her tight ring open up around his red wet head. Slowly he moved, expecting the resistance to give way again unexpectedly but was surprised when he eased in without a noticeable release. Once his head was in he stopped, seeing the sides and back of Yvonne rising quicker. She had not uttered a word and had her face pressed in the back of the lounge. Serena stood next to them and watched, ready to assist if needs be.\n\nHenri could feel Yvonne's ass pulsing on his shaft. The tight ring of her outer anus palpitated around his wide shaft, just below the head of his cock. The sensation felt wonderful and continued for several seconds before the stress began to ease on his cock. He knew she was adapting to his intrusion and was okay to move forward once again. This was a new position they had not tried and the stimulation was slightly different on his cock with the woman on her stomach instead of her back. The view was spectacular, her large breasts smashing out the sides of her body and her sexy curved spine visually stimulating his senses. Henri's cock eased slowly forward into Yvonne's body, inch by inch. This caused her to moan into the lounge and began to play more vigorously with her sex under Henri's slowly moving cock.\n\nAs he neared totality, he felt her fingers jostle his testicles as she played and fingered her moist sex. He was fully buried inside her hot bowels once again, remaining that way from several minutes as she once again adjusted to his width and length.\n\nBefore he could pull out the door to the chamber opened and a guard Henri did not recognize entered the chamber. He was shorter and scrawny compared to Henri. The first thing Henri thought was how easy he could kill the man with his bare hands and how foolish the guard was for being alone. Henri watched the man immediately walk up to them like he was the Master himself and look upon Serena and Yvonne with hungry eyes.\n\n\"Can we help you?\" Henri said with his cock still buried deep inside Yvonne's ass.\n\n\"Carry on. The Master sent me to check on your progress with these two. I see you're preparing their rectums well.\"\n\nHenry saw the weasel of man adjust himself and lick his lips, rubbing his hands together. He was directly next to Henri and Yvonne, his face actually bending toward the connection of their bodies. Henri almost reached up and rung the man's neck like a chicken but stopped because disposing the body would prove difficult. Serena had backed away, covering her nakedness with her discarded clothing and keeping her distance from the man. Yvonne had lifted her head to view the disgusting man and glare at him but Henri saw the guard did not care, standing there waiting for Henri to proceed.\n\n\"Must you watch us, sir?\" Henri asked.\n\n\"Yes, I must. I have to report back to the Master you are doing your duty. Now proceed and pound the wench properly.\"\n\nThis caused Henri's face to flush red with anger. He wanted nothing more than to dispatch this whelp right then and there. He was about to when Yvonne spoke up, stopping him.\n\n\"Do as he asks, Henri... give him the show he desires.\"\n\n\"Yes, yes... give me my show!\" the man cackled in a high pitch screech.\n\nHenri was fuming but he suddenly felt Yvonne clench her muscles around the shaft of his penis, urging him on with her body so he wouldn't do something foolish. Henri turned to her and looking down saw the pleading in her eyes for him to continue for all of their sakes. Trying to ignore the disgusting, greasy haired man, Henri withdrew his long shaft from Yvonne's body, her tight ring gripping him strongly each and every inch. She had him so snug her body had scraped off all of Serena's saliva upon withdrawal. His cock dried quickly in the open air. When Henri proceeded to reenter her, he felt the binding dryness and saw Yvonne flinch with discomfort.\n\n\"Serena, your sister needs you,\" Henri said.\n\nSerena reluctantly walked to the other side of Henri and Yvonne, across the chair from the man and bent over to begin licking Henri's shaft, using her hand to smear the needed lubrication around his extensive girth.\n\n\"Oh how nice... the younger sister eases the pain!\" the Master's shrill voice called out.\n\nHenri clenched his jaw, focused on Yvonne's body and descended into her again with a noticeable difference. Even with the evil guard watching, Henri could not deny the exquisite pleasure that gripped his cock as he descended once again into Yvonne's body. She also had turned back to the lounge, placing her face into the soft velvet. Henri pulled out slowly again and Serena licked his shaft. Pleasure surged through Henri's cock as it withdrew and was bathed in Serena's saliva. He tried to weigh which sister's body gave him more pleasure. It was difficult to determine but he felt Yvonne pleasured him more.\n\n\"Faster! You can go faster than that!\" the Master disguised as the guard screamed.\n\nHenri ignored the man, but descended again a little faster and his pleasure spiked considerably as the new speed sent a rush of pleasure through his cock and body. He pulled out equally quick and heard a moan from Yvonne. It was muffled and he knew not whether it was pleasure or discomfort. Serena did her best to lick the shaft as he withdrew and again Henri drove his cock deep into Yvonne's bowels. His balls actually making a slapping noise as they hit her body from the speed of his descent. Hot, tight bliss enveloped Henri's large cock as he repeatedly drove it home while Serena licked and spit on his fast moving shaft. \n\n\"That's it... give it to her... prepare her for Mentula!\" the man screamed, watching Henri thrust over and over. Henri was lasting longer because of the intense climax with Serena but nothing would keep him from another climax as fast as he was thrusting and withdrawing in and out of Yvonne. He could hear Yvonne panting, her chest rising rapidly as Henri looked down upon her. Serena had her head constantly down close to her sister's tight hole, licking letting her saliva dribble out of her mouth onto his moving shaft as it sawed in and out of Yvonne's body.\n\n\"I'm going to climax!\" Henri said, nearing his ultimate pleasure.\n\n\"Deposit your load into the sister's mouth!\" the guard yelled over Yvonne's panting.\n\nHenri was shocked at what he had heard and turned to look at the guard in disgust. Serena, having heard the guard, lifted her head in shock and confusion giving the guard an equal stunned glance.\n\n\"Do it! Or the Master will hear of your disobedient. I can tell him anything I want.\"\n\nHenri want this man dead more than any man before, glaring at him with fire in his eyes. He couldn't stop his climax now, decided it better not to disobey this man for the moment. Letting his cock come completely free of Yvonne's body, Henri took hold of it as the man screamed again and turned it toward Serena.\n\n\"Open your mouth, wench! Get down closer!\" \n\nShe jumped with fright but obeyed and opened her mouth wide just as Henri sprayed his first large burst of semen forth. It sprayed into her mouth and she reacted in surprise, gagging on the thick salty effluent as it found the back of her throat, forcing her to close her mouth on instinct. Henri, overcome with pleasure, stroked his cock until the next burst hit Serena in the face, curling up to her forehead.\n\n\"Open! Open!\" the Master screamed.\n\nSerena sobbed at his yells but opened her mouth and kept it open as Henri finished his climax in and around her mouth until he was spent. Her face was a mess, her mouth full of white ejaculate and she sobbed with her mouth open, breathing through her nose. She was afraid to close it.\n\n\"Very good, wench... now swallow it!\"\n\nHenri was so taken aback by pleasure and shock of what this guard was doing he was frozen in place. He stared down at the beautiful woman covered in his sticky semen. A strange sense of pleasure gripped his body as he view what he had done to her. With shock he watch Serena close her mouth and swallow the plentiful semen filling her mouth.\n\n\"Excellent! The Master will be very pleased with your efforts... all of you!\"\n\nWith that, the man abruptly turned and left the chamber, leaving Henri and the two sisters stunned and speechless.\n\n**\n\nThe Master's little penis was throbbing his guard pants. What he had just witnessed and forced the three prisoners to do, had excited him beyond anything he could remember as a normal man. Watching the large cock of Henri driving in and out of that beautiful woman, and making him spill his seed into her equally luscious sister's mouth was glorious. The Master knew he had chosen Henri well. He would prepare all the women the Master had chosen and many would survive Mentula after Henri was finished with them.\n\nThe Master quickly went back to his chamber, hoping for a new willing follower to be waiting him. As he looked around the divider, he was not disappointed. A beautiful raven-haired woman lay naked on the newly covered bed. Her hands were exploring her own body and he could see her fingers glistening with her juices from across the large room. Turning back, he quickly removed the guard garb and the ring from the chain. His little penis throbbed between his scrawny legs and he dropped the ring in his rush to place it over his tiny head. As it fell, it began glowing blue as it neared his member. Its descent abruptly ended, hovering in the air near the Master's small cock. He watched in amazement as the ring pulled his shaft to the side by itself, moving his entire body until the ring was fully around the base of his cock. The ring had not moved, the man had. The change took effect quickly and the Master smiled at his enlarged and strong body. Turning the corner, he went quickly to the black haired beauty with Mentula already fully erect.\n\n**\n\nSerena was sobbing. Yvonne was seething with anger. Henri did not know which to console first. Another loud sob came from Serena and he went to her.\n\n\"I apologize, Serena I had... no... choic...\"\n\n\"Do not apologize for that monster,\" she cut him off. \"I do not cry because of what you did but because of what he did. Do you not remember I told you I have pleased men with my mouth before? I've had them ejaculate without warning and have tasted and swallowed their seed on more than a few occasions. It does not bother me. But the evil man yelling frightened me.\"\n\n\"She is quite innocent, Henri... she'll be fine,\" Yvonne spoke up.\n\nHenri was again surprised. He thought for sure she was crying because of the semen he had ejaculated into her face and mouth. To learn it was not, relieved him but also made his curious. Serena had stopped sobbing and had walked over to the washbasin to cleaning her face off.\n\n\"And what of you, are you well?\" Henri asked, Yvonne.\n\n\"As well as expected, you lasted longer and went much faster into me. It was good preparation.\"\n\n\"You act so hardened, Yvonne... can't you tell me the truth and your true feelings?\"\n\n\"What benefit will this have? You were sent to prepare us and nothing more.\"\n\n\"So you feel nothing for me?\" Henri asked.\n\n\"Sir, I've only known you for less than a full day. What would you have me say?\"\n\n\"The truth!\" Henri blurted.\n\nThis caught Serena's attention and she returned to them. Yvonne did not respond when Serena joined them. Henri, frustrated with everything, departed and walked to an alcove across the room to think. He could hear the sisters whispering but could not understand what they said. He was in an impossible situation; ordered to essentially stretch the sister's anal cavities in preparation for them to be violated by a monster. He kept thinking about that new guard and how much he wanted to kill him for what he had just done. The image of him ejaculating into Serena's face came back into Henri's mind. Her mouth wide open, is long ropes of white semen spraying out and falling onto her tongue and face. It was something he couldn't stop thinking about. The forbidden act, the sensations it caused, all of these new experiences confused and frightened Henri. He found himself craving them, wanting anal sex over the proper way, wanting to spray Yvonne's face with his semen the next time he took Serena. \n\nShaking his head and the images from his mind he returned to the women.\n\n**\n\n\"Yes! I wish to merge with Mentula! I've prepared my entire life for this,\" the new women with the raven hair said.\n\nThe Master smiled down at the maiden. She was well endowed once again; her heavy breasts plump on her chest with dark areolas the size of her large eyes. Deep brown eyes that looked up at him adoringly.\n\n\"And how have you prepared for Mentula?\" he asked, taking his time with this one.",
        "I've prepared my body for you, increasing my ability to receive Mentula.\n\n\"What have you used to do this?\" he asked, his cock throbbing over the young woman's head as she looked up at him.\n\n\"Large objects, vegetables mostly.\"\n\n\"And have you taken some as large as Mentula?\" he asked, skeptical.\n\n\"Yes, my Master... my vagina is able and willing.\"\n\n\"Your vagina?\"\n\n\"Yes, Master.\"\n\n\"Oh my poor daughter... it is not the vagina that Mentula desires.\"\n\nThe expression of excitement and anticipation quickly left the young woman's face and was replaced with fear.\n\n\"What does thou meanest? What does Mentula desire?\"\n\nThe Master laughed. \"He desires your bowels my daughter... my foolish daughter.\" Reaching out to take hold of the young woman's left leg she tried to scoot away but he grabbed her quickly.\n\nShe screamed with fear and he laughed, picking her up with ease to dangle from one foot in the air.\n\n\"You prepared the wrong hole, such a shame,\" the Master said, sticking a long wide finger into the woman's wet and sloppy sex.\n\nShe had indeed prepared herself for him. She was very loose and her secretions flowed heavy from her vagina. His finger easily fit so he added another. The woman moaned with pleasure, suspended upside-down in the air by the Master's other hand.\n\n\"Please, Master! I've prepared so long for Mentula, please take me the proper way I beg of thee.\"\n\n\"The proper way? But what of this orifice? Has nothing entered here?\" he asked, bringing her to his mouth so that his tongue began to probe her tight sphincter.\n\n\"No, Master... nothing has... I will be torn asunder.\"\n\n\"That is your failure my daughter. Did you not know what Mentula craves as his follower?\"\n\n\"I... I... did not believe the rumors. I did not think Mentula would desire this.\"\n\n\"And now you will pay the price,\" he said, forcing his tongue deep into the woman's rectum.\n\nShe screamed and struggled in his tight grip. With the other hand he took her free ankle and spread her legs wide, forcing his tongue deeper still into her virgin ass. The taste and tightness was like ambrosia to his senses. She had been foolish, the first of his followers not to have practiced the forbidden act before their time with Mentula. He relished her tight hole, the anticipation of taking her made his cock throb and leak copious amounts of his pre-ejaculate secretions. A flowing stream ran down the length of his shaft, dripping off his heavy testicles. He could feel how tight she was, squeezing his tongue with her straining muscles. She would not survive... the guards would be denied once again.\n\n**\n\n\"Will that be all for today, Sir?\" Yvonne asked Henri as he returned to them.\n\n\"What? No... I was ordered to spend the entire day preparing you.\"\n\n\"Yes, but are you able to?\" she asked, looking down at his flaccid manhood.\n\n\"I will require a little respite and some drink, but I'm sure I'll be of further use, Madam!\"\n\nSerena looked as if she did not know what was going on. She did not understand the small confrontation between Henri and her sister. Serena was enamored by the strong man... had felt pleasure she never had known before with him. She did not understand her sister's attitude toward such a perfect man.\n\n\"We have drink, sir... please follow me,\" Serena said, ignoring her sister's look.\n\nHenri glared at Yvonne and followed Serena to their small makeshift kitchen. They had been supplied by the guards with all manner of food and drink. The Master wanted them strong and healthy, feeding them well. She supplied Henri with food and wine at he sat at their small table eating bread and cheese. Serena nibbled on a few grapes, watching him and seeing to his desires. Her sister had remained by the lounge chair, not helping.\n\n\"Henri, sir?\" Serena asked. He looked up at her and she continued. \"What if the Master does intend to take my virginity? Wouldn't it be safer if I was prepared there as well just in case?\"\n\n\"I do not believe he will. We should focus on the forbidden act. You should save yourself for one you care for deeply.\"\n\n\"I may not survive... I do not wish to die without knowing a man in the true way.\"\n\nShe could see the conflict on his face and he hesitated to answer. She wanted him to be the one that took her for the first time and without just saying so she hoped he would see her meaning. She knew men would consider this a wonderful gift and she knew his integrity would make it difficult for him to accept such a gift. What he didn't realize is how much she had come to adore him in a short amount of time. This situation they were in had not been very conducive to romance and feelings of affection, but she had felt them, especially when he had fallen onto her and held her during their climax together. She wondered if he had felt the attraction as well. His hesitancy may be her answer, and he had not felt the same as she had.\n\n\"You will survive, Serena. We have to prepare you to do so. We do not have time enough to prepare you in both ways. The Master prefers the forbidden act and we must focus on this.\"\n\n\"As you say, my lord... I will do as you wish.\"\n\nHenri finished his small meal and stood up, which brought Serena to her feet as well. Her eyes drifted down his strong naked body to the large flaccid cock handing limply between his legs.\n\n\"Can I assist you in your readiness?\" she asked coming around the table quickly to stand in front of him.\n\nShe grew closer until they were inches apart, staring into each other's eyes. The heat between them aroused her and her hand moved forward touching Henri's leg. Her heart raced, her hand moved slowly toward his manhood across his strong thigh. Upon finding it, she felt it move at her touch, on its own accord. Caressing it softly with her palm, she felt it begin to stir and rise slowly, plumping under her soft hand. Keeping eye contact, she slowly descended to her knees, lifting his growing shaft and opening her mouth with her eyes locked to Henri's. He moaned as she took his head into her mouth, while looking at him still.\n\nHe was salty from use but this soon went away as she was able to take much of his long cock into her mouth before he hardened fully. She felt the blood pulsing in his member as the width and length grew together, forcing her to remove portions of it as he became too large for her mouth. She sucked upon removal and began stroking the blood-coursing member as her sister had taught her. Using her tongue, she twirled it around his smooth head before taking him into her mouth again. She never looked away from his face, seeing the effect her talents had upon him.\n\nHis erection grew strong and powerful under her aptitude but still she continued to stroke and suck the man she adored, ignoring the pain in her knees on the wooden floor. She felt her nipples and clitoris grow erect together, her sex moisten with her arousal. She began lightly sliding a finger over her wet clit and lips as she continued to pleasure Henri with her mouth.\n\n\"Serena, I think Henri is of the proper stimulation,\" Yvonne suddenly spoke, interrupting Serena's enjoyment.\n\nRegrettable, she took him out of her mouth and saw that her sister had come to stand beside her without her knowledge.\n\n\"Yes... my apologies for wasting time,\" Serena said, standing. \"I will prepare myself on the lounge and await your assistance.\"\n\nShe needed no preparation. She was wet and ready, feeling her secretion running out of her body, threatening to drip from her newly shaved sex. She laid on the lounge and spread them around her anus, fingering her tight hole with a single digit before adding another. She could hear Henri and her sister talking quietly from where she left them. \n\n**\n\nRemoving his tongue, the Master took the young raven-haired beauty by the waist and lowered her body to his dripping cock. She was on her back in his hand and he could see the fear in her eyes. She began pleading for him to spare her life until she was able to prepare for Mentula the proper way he desired, but the Master paid her pleading little mind. With his free hand, he bent his enormous cock down toward her saliva soaked anus and began pressing himself into her. She was exceptionally tight, showing great resistance to his head. So much so that Mentula slipped upward and suddenly rushed into her open and wet sex. The force was so great that the Master's cock completely entered her in great haste. The woman moaned with pleasure for she truly had been prepared to take him all.\n\n\"Yes! Master... take me... take me like this!\"\n\nThe sensation of her wet prepared hole, did not interest the Master. As quickly as he had entered her he withdrew Mentula. His cock bathed in her juices, glistened in the candle light.\n\n\"No Master, please return Mentula!\" she begged.\n\nTaking the head of his cock in hand this time, the Master did not let it slip away, forcing his giant, bulbous head into the virgin ass of his follower. The young woman shrieked, struggling to pull away from the intrusion that was surely going to destroy her.\n\n\"Yes, my daughter! Feel Mentula's head, for that is only the beginning.\"\n\nTightening his grip on her waist and hips he pulled her down onto his raging cock, forcing Mentula deeper into her body. The breath left her body in a gush, but no scream was heard. Her sex opened, stretched tight as the massive shaft rushed in below. The maiden's big brown eyes rolled back into her head and she lost consciousness.\n\nThe pleasure was like nothing the Master had felt before. He had never had a follower so tight and had always prepared his prisoners beforehand. This was exquisite. The heat and grip the woman's body presented was staggering. This coupled with his already excited frame, the Master climaxed inside the unconscious woman before two cycles of entry and withdrawal. Mentual exploded into her, distending her abdomen again like always before he removed her and dropped her on the bed, thinking her dead for sure.\n\nThe power surged through him, the ring glowed bright white once again and his body vibrated with energy and pleasure he could not fathom. She had pleased him beyond recent memory. Looking down upon her, as his seed flowed heavy from her still body he smiled, shaking off Mentula over her breasts. His seed spotted her body as the last of his load oozed out of his large slit. He soon turned away and left her for the guards to dispose of.\n\n**\n\n\"If you couldn't tell, my sister is infatuated with you,\" Yvonne began, as Serena went alone to the lounge.\n\n\"I'm not an idiot, my lady,\" Henri replied to the older sister.\n\n\"She has lived a very sheltered life. I do not believe she fully realizes the peril she is in,\" Yvonne said.\n\n\"I'm afraid she will soon find out.\"\n\n\"Yes, and you must prepare her, as you've been saying.\"\n\n\"I do not pretend to dislike my orders. My arousal speaks for itself,\" Henri said, looking down at his erect cock.\n\n\"But you hide behind those orders.\"\n\n\"What do you want me to say, Yvonne? That I've very much enjoyed my time with you both? I have. But that does not change the fact that the Master is coming. I've been more open than you about this situation. You cannot stand there and say you have not enjoyed our time together as well. Be honest.\"\n\nYvonne's face grew hot, betraying her. She had very much enjoyed the time with Henri. Not only was he strikingly handsome he had given her pleasure she had not known before with a man. She did not want to tell him this. If the situation was different than maybe she would confide in him but with the Master coming for them what was the point? She knew the fate that awaited her. It would be easier for Henri to follow his orders if he was not attached to his assignments. She was going to facilitate this nonattachment as best she could, even though her feelings grew for him by the minute. Now if she could only convince Serena to do the same.\n\n\"You are a means to an end, nothing more,\" she said. \"Is that honest enough for you?\"\n\nShe saw Henri's eyes slightly widen from her pronouncement and a hurt look quickly crossed his face before he turned away from her. She felt the guilt of the lie sting her heart as she watched him walk naked across the room to Serena, lying on the lounge, preparing her forbidden orifice for him.\n\n**\n\nWhen the guards entered the Master's chamber, they found the young maiden cold and without life. Cursing, they removed the body of the beautiful woman and spread the news to the other guards. They would have to wait until another follower made the journey to the Master, or the Master decided the sisters Henri was preparing were ready for him. Either way they had to wait.\n\n**\n\nHenri sensed that Yvonne was not being truthful. He thought he knew why. She probably didn't expect to live much longer and was hiding her feelings for him to protect herself. As he walked toward Serena, he again tried to figure out a way to change the outcome of this situation but nothing came to his mind.\n\n\"I'm ready to receive you,\" Serena said as he found himself standing over her in deep thought.\n\nHenri looked down at the young buxom sister, fingering her anus with three fingers. She had rolled to her stomach and was reaching over her back with her hand. Any thoughts of escape or rescue left Henri's mind as he viewed the spectacle before him. She was wet with desire and her nipples were taunt aloft her breasts. He experienced a twang of pleasure grip his hard cock and his lips parted as he watched her remove her fingers for him to replace them with his oozing head. Her anus remained open, pink and inviting. She began playing with her virgin sex and ripe engorged clitoris. She pushed her backside toward him and as he moved forward to take her, Yvonne appeared next to Serena to attend to her.\n\nBefore he could do anything more, Yvonne took hold of his throbbing shaft and bent it downward, pulling him forward and into Serena's tight and hot hole. Serena let out a long moan as his cock entered her up to Yvonne's hand. Releasing him, Henri pushed forward, descending into the younger sister's steamy insides. Serena's grunt was muffled by the lounge and her hand frantically ground at her sex.\n\n\"Yes, sister... take him all... you are doing well,\" Yvonne spoke. \"Open to him.\"\n\nTight, hot, bliss enveloped Henri once again and he thought for certain he would never grow accustomed to the sensations of the forbidden act. His balls met her moving hand as he held himself as deep as possible. His eyes found Yvonne's. She quickly looked away back to her panting sister. He could have sworn he saw envy and lust on Yvonne's face as he looked at her.\n\n\"Very good, Serena. Sir Henri's going to need to go faster this time to prepare you properly. Focus on the pleasure and accept him.\"\n\nWith that, Henri pulled out to his head before rushing into her once again. Serena screamed into the velvet lounge, her chest heaving for air as all of his length rushed into her body quickly. The sensation was stunning, flooding his entire shaft and head with hot, creamy bliss he could scarcely imagine. The next withdrawal, Henri found Yvonne licking his shaft and adding saliva to her sister's tightly stretched anus. This only made the pleasure greater as the binding lessened and his cock slid blissfully into Serena's bowels.\n\nIn his rush to withdraw again, Henri went too far and his cock flipped out of Serena's ass, hitting his stomach with an audible smack. It surprised everyone. Henri looked directly into Serena's open and red hole, watching her ass quiver and struggled to stay open. Suddenly, Yvonne grabbed his shaft again, sucked his head, leaving her saliva on the tip, and pulled him back into her sister's body. He went in very easy after not much time had passed for her sphincter to close. Yvonne released him once again and he thrust quickly into Serena.\n\nThe younger sister was panting and moaning from the width and speed Henri was driving his cock into her. Each time his body hit her, her large breasts would mash further into the lounge chair before rebounding as he withdrew. Over and over, Henri drove his cock into the young woman as Yvonne supplied as much saliva as she could muster. He was lasting much longer with the emptying of his testicles earlier. The sensation was no less glorious and the pleasure drove him on, pounding away at this gorgeous backside and arched back before him.\n\nEven Serena's climax did not bring Henri to his own orgasm. He felt her body tighten, felt her tight outer ring clench spasmodically on his shaft over and over as she reached the pinnacle of her sexual climax. Her breathing was just small gulps for air and her body shook and contracted on the lounge chair until she fell forward off his cock in fits of pleasure they had seen before. Henri's cock throbbed and pulsed high in the air above her. He had brought her to a stunning climax and prepared her at the same time without his own orgasm surging forth.\n\nTogether, Henri and Yvonne watched the younger woman quiver and pant for air for over a minute. The power of her climax had her spent and exhausted.\n\nLooking to the window, Henri saw the light from the sun had turned red and sunset approached. He had been preparing Serena for longer than he had either of the sister's prior. He felt a great desire to climax, and had been approaching his orgasm before she fell away from him. He looked at Yvonne, watching her sister, and she turned to look at him as his eyes were on her.\n\n\"The sun is almost down... my time with you is short for today.\"\n\n\"You did not ejaculate?\" she asked, looking at his throbbing cock.\n\n\"No, not this time.\"\n\n\"You could prepare me one last time before you go then,\" she said.\n\n\"If you wish.\"\n\nYvonne sat perpendicular across the lounge chair quickly, bringing her legs up over her perfect form. Henri saw that she was aroused and wet from helping her sister and watching Henri prepare Serena.\n\n\"I'm sufficiently lubricated, sir. Enter quickly before the sun sets.\"\n\nHe wasted no time, bending his wet rod down and among the folds of her sex. Rubbing his head between them, he spread her secretions onto his crown and lowered his purple head to her forbidden orifice.\n\n\"Take me the proper way first,\" she suddenly whispered, stopping him from pushing into her anus.\n\nHe looked up into her beautiful blue eyes and knew she had been hiding the truth of her desire for him. Looking quickly at Serena, Henri saw she was still face down on the lounge and not paying them any mind. Raising his cock an inch, he spread Yvonne's sex with his wide head, rushing into her hot, creamy womanhood. The sensation was different, but glorious as he buried his entire shaft deep into her womb. She cried out in ecstasy, reaching forward and pulling him onto her naked body. Their flesh met... breasts against strong chest and face to face. The emotional link surged between them and this only heightened the pleasure surging in Henri's loins. Her legs wrapped around his hips, pulling him further into her body and not allowing him to move. The embrace lingered, breathing synchronized as they stared into each other's eyes with his cock buried deep inside her sex.\n\nNo words were exchanged. None were needed.\n\nAfter a few moments, Yvonne released her grip, allowing Henri to move in and out of her. They remained connected; he basked in the sensation of her firm breasts smashed against his chest, her hardened nipples prominent. Her wet insides coated his shaft and her lips clung to the width of his member as he slid slowly in and out of her, making love more than preparing her for Mentula. The pleasure rose in both their bodies and together they approached orgasm. Yvonne climaxed first, as she was incredibly aroused and taken by Henri. She began to pant and tremble as the pleasure overtook her frame. By then, Serena had recovered from her orgasmic coma, and turned over as she heard her sister's cries of passion and the shaking of the lounge. ",
        "Henri was too overcome with the sensations gripping his cock from the convulsing sex of Yvonne, that he did not notice the younger sister watching them. He did not notice the look of jealously on Serena's face as she could clearly see where Henri's member was. Yvonne's climax had nothing to do with preparation for Mentula. Serena watched her sister shake and climax as Henri continued to thrust his large penis into Yvonne's sex. Serena yearned for the same, desired more than life to have Henri in the proper way.\n\nHenri suddenly saw Serena watching as Yvonne's climax began to ebb. Hurriedly, Henri pulled out hoping he had been quick enough and Serena had not noticed his penis inside Yvonne's sex. He did not want to leave her wonderful womanhood, though, and was on the cliff of his arousal. Yvonne, realizing what had happened, opened her eyes and they broke their embrace. Henri carefully eased his cock into Yvonne's anus and with all her secretions, coating his shaft, he easy descended to his testicles. She cried out in pleasure from the new sensation. Her tight ring, clinging snuggly to his shaft, kept his pleasure strong, bringing him closer to climax with only the initial plunge into her hot bowels.\n\nIt did not take long. His balls rose against his shaft and his climax was imminent. He intended to ejaculate deep within her but Serena had a different idea. He figured after, it was to prove she was not upset about him ejaculating into her mouth and face earlier.\n\n\"Sir! Spill your seed in my mouth again!\" she suddenly said as she knew he was soon to climax.\n\nHe looked at her surprised but she only dropped to her knees and opened her mouth. Henri looked up at Yvonne and she only nodded for him to do as she wished.\n\nThe desire to do so had never left Henri and the idea brought his pleasure to a head. He pulled out quickly, holding his release with clenched muscles. Turning to Serena's open mouth, he let his load forth, spraying a grey blast of semen into her mouth like a geyser. The amount of semen he had expended this day had diluted his seed into a runny grey liquid that sprayed from his cock over and over into the young woman's mouth, hitting her face on occasion. She let it run out of her mouth and down her body. Her breasts glistened in the dying light of the sun, covered from his climax as he finished himself off with his hand.\n\nThe only thought in Serena's mind, as she knelt their covered in Henri's seed, was to do anything she could to have him take her the proper way and give her virginity to him. "
    ],
    "authorname": "jasliz",
    "tags": [],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-master-and-the-ring-ch-03"
}