{
    "title": "Past, Present and Future Ch. 05",
    "pages": [
        "<p align=\"center\">A short tale of sugar relationships,<br>a stand-alone tale but following from and building on earlier chapters in the series. <br>Please enjoy yourself. </p>\n\n<p align=\"center\">\"In my arms you'll find your harbor, In my arms you'll find your home.\" - Mary Fahl</p>\n\n<p align=\"center\">+</p>\n\nAs usual, Pi woke me up by doing the feline walking-on-the-spot routine on my tummy. I swept my hand over her head, along her back, up her tail. I whispered a good morning to her and eased out of bed to make myself a tea.\n\nTony had slept in, was still asleep when Marcy had arrived. I'd been in the pool and was drying myself off when I heard the muffler of her old car. Rather than go around the outside of the house to meet her in the farmyard, I walked back through the building. I giggled a little at the trail of wet footprints behind me on the flagstone floor.\n\nGetting out of the car, she wordlessly held her arms out for a hug. It felt strange. Yes, we'd hugged before, many times, but always clothed. OK, full disclosure - and once, just once, with both of us totally bare. We'd started an instinctive, comforting hug after a tough moment the day before, but had jumped apart with major blushes as soon as it hit us that neither of us was wearing anything more than a suntan. But now it seemed Marcy was open to it even if I was starkers.\n\nI was of course always nude here. It was part of the deal.\n\nTo me, the main thing was her happiness at seeing me. I felt good about that; we'd been friends a long time and I didn't want to risk jeopardizing our friendship.\n\n\"Would you like a tea? Tony's still in bed.\"\n\n\"Wore him out, did you?\"\n\n\"Marcy!\"\n\nShe just grinned, irrepressible as ever. \"I'd love a tea, thanks.\"\n\nWe sat on the deck for a few minutes before I cleared my throat. Marcy was looking over at the farmlands stretching into infinity beyond the deck. I reached out, caught the corner of her blouse collar, tugged slightly. She turned, gave me a small smile.\n\n\"You said he's still in bed.\"\n\n\"That's not the point, Marce.\"\n\nShe shrugged, made a little moue. Putting her modesty aside, she simply peeled in front of me, folding and piling the clothes on another chair as she went. Marcy was a small girl, but even so, it wasn't a large pile.\n\nI smiled at her. Time to make her happy in return.\n\n\"What do you charge for your paintings, Marcy?\"\n\n\"Um, I haven't actually sold any yet. Why?\"\n\n\"Tony's kind of interested. He likes what you've done so far, the one of the fields over there. It's his favourite view. Think about it for when he asks.\"\n\n\"Oh. OK.\"\n\nThe sun had become warmer. I looked at her, noticed she was still pale in some places, tan-lines and such. I myself had enough of a tan that I thought I could wait until Tony woke up, but I figured I should ask.\n\n\"Do you want some sunblock?\"\n\nHer eyebrows rose a touch as she considered that. Instead of answering directly, she looked down at her naked breasts, belly and sex, replied, \"I feel really weird like this, like really vulnerable.\"\n\n\"I know.\"\n\n\"And he likes that?\"\n\n\"Don't overthink it, Marcy. He's just a guy who likes to look at naked girls. But I get it; it felt weird at first for me, too. It got easier once I realized that I could trust him. He's as honest as they come, Marcy.\"\n\n\"You love him, don't you?\"\n\nI didn't have to think this time.\n\n\"Yes.\"\n\n+\n\nTony and I had, entirely by chance, been assigned as biology lab partners. It was an elective for me, nothing whatever to do with my Music degree; Tony was a mature student, learning for the fun of it. He'd been a godsend for me - intelligent, analytical and patient, he'd helped me with my lab reports, week after week without complaint. He'd been quite reserved and I'd known next to nothing about his personal life. Despite his standoffishness however, he was always well-mannered and his sense of style was impressive, his white beard and hair always perfectly groomed, his clothes stylish and always ironed, shoes shone, nothing ever out of place.\n\nOne Friday, intrigued by his panache, I'd overdone my juvenile flirting, gone well over the line and found to my embarrassment that an irritated Tony didn't play well with others, not in that context. Instead of just refusing the invitation I'd been angling for, he'd thrown my antics back in my face and countered with a wildly different invitation, to spend the weekend at his place in the country - and don't bother bringing any clothes. The unstated but obvious alternative was for me to be written off as a self-centred brat, too immature for him to waste his time with in future.\n\nIn her day, my mother would have slapped his face. Instead, I'd tried to dodge but Tony could stare down a Siamese cat. Twenty minutes later, I was in his convertible on the road to his farm near Watford. I'd been impressed with the way he'd beautifully renovated the farmhouse and with the amazing view from his back deck. I'd still hoped to keep a little of my dignity intact, but Tony was playing hard-ball. Pride being stronger than prudence, I'd bowed to his reminder that I'd agreed to either do whatever pleased him at the moment or -- and it was totally up to me -- be sent home in a taxi with only my tattered self-image for company.\n\nHe'd wanted two things right then. The first was for me to leave my clothes in a closet. Well, even before I'd got into his car, I'd pretty well accepted that I'd wind up knickerless sooner or later, but his second instruction floored me. Having peeled, I was supposed to sit on a stool in front of him and serenade him with my flute while he prepared our dinner.\n\nScarlet, I'd complied. He'd been utterly polite, had made no move to touch me. Indeed, he'd barely acknowledged me as a very pretty, very naked young woman and that left me confused, hurt and upset. I'd been livid when he'd bluntly told me his expectations if I came here, but, now in my birthday suit in front of him, I became even more irritated at his ignoring my openly-displayed nudity in favour of a frying pan full of capers and chicken.\n\nIt was an introduction to another side of Tony, one of endless patience, coupled with a Zen master's calm serenity.\n\nOf course, when he eventually stopped ignoring me and made his move, Tony proved to be an exceptional lover. Strong, gentle, perceptive and generous, he'd had given me the most mind-blowing orgasms I'd ever had.\n\nMany of them.\n\nOnce I got past my initial embarrassment at being naked, the only strain that weekend was his attempting to give me a very expensive silver necklace. I'd been awestruck by its beauty, by the way it enhanced my own, but I'd refused it on principle, saying that I wasn't for sale. After much discussion, I'd agreed to wear it whenever I was at the farm.\n\nSo. It'd had been a pretty good weekend, a bit odd in many ways, but in terms of sex, far, far better than my previous fumbling experiences with college boys my own age. Later, Tony had thrown me for a loop by offering to be my sugar-daddy, to support me through school until I graduated. All I had to do in return was to spend my spare time at his place, naked for his visual pleasure. And, if you don't mind, join him in some more sizzling-hot sex.\n\nI'd always scorned young women who let themselves be used like that and it had taken me a long time to decide. As I got to know Tony better, however, I realized that this was hardly a seedy financial transaction. Tony was a gentleman in the true sense of the word. He cared for me, treated me graciously and, while I'd been initially uncomfortable with being constantly nude in front of him, he'd never once demanded anything which would have humiliated me, make me despise myself later. There was a difference.\n\nIn many ways, the time I spent at the farm with Tony was pretty normal, even for dating couples my own age. We went for walks in the country, had picnics, did schoolwork together. The only odd thing was my doing all those things unclothed.\n\nAnd, despite being initially almost paralyzed by timidity, I had come to like the feeling of warm breezes on my skin, even on long walks around the farm, sometimes half a mile away from my clothes. I'd idly wondered how comfortable I would be at a naturist resort or nude beach, surrounded by other bare people. No matter.\n\nAt the same time, I found myself becoming fond of Tony and a bit more. I'd also found myself growing more confident, surer of myself, more daring at times, more desirous of showing my happiness by finding new ways to please him.\n\nI'd hit a minor speedbump when Marcy, my roommate back at the university, suffering some serious residence blues and, desperate to get off-campus, begged to be allowed to join me for a day at the farm. I'd been concerned about Tony's attention being diverted by her, but it had worked out. Marcy, who knew our arrangement, came to the farm, undressed and, despite her nervousness, spent a happy afternoon doing watercolours of the surrounding countryside for her painting class. As the day ended, she'd asked to come back to finish them.\n\nI'd been very happy that Tony had asked me before agreeing.\n\n+\n\nMarcy had her paints out and I had begun reading a dreadfully dull assignment when Tony finally appeared, dressed as he usually did on arising, bare-footed in simple white cotton pyjama bottoms.\n\nShirtless, he looked less than his age, more like a fashion model. He spent enough time in the gym to keep a decent six-pack and good definition. Even just out of bed, his blonde-turned-prematurely-white hair and beard were brushed, impeccable. The pyjamas hid the web of scars on his legs, souvenirs of the helicopter crash that had cost him his career as a firefighter.\n\nDespite his age, I found him gorgeous, desirable and arguably the most thoroughly masculine man I'd ever met - in the best sense of the word. I felt my own heart do a slow barrel roll and giggled inwardly when I saw the impression he was making on Marcy. She tried to be nonchalant in her bareness, pretty much failed. Her eyes flicked briefly to me. I could see the curiosity in her eyes about last night. That Tony and I were lovers was a given, but every girl wants the details.\n\nHis smile was as charming as could be.\n\n\"Good morning. Nice to see you again, Marcy. How did you sleep?\"\n\nThe question was clearly aimed at me. He crouched down beside my chair, wrapped long fingers through my hair, pulled my face upwards towards his, paused for my answer.\n\n\"Good,\" I whispered. With that, fingers tangled in my hair, he pulled me into a long, gentle, sweet, sweet good-morning kiss. When he broke away, I was breathless, and, yes, more than a little aroused. Looking over his shoulder, I saw Marcy staring open-mouthed. She saw me, blushed furiously and began rooting through her paints again. I didn't think Tony had noticed.\n\n\"Would you like some breakfast, Stephanie?\"\n\nTony's breakfasts usually centred on expresso, sweet biscuits and fresh fruit. The mention of it made me realize that all I'd had was a tea. I was suddenly very hungry.\n\n\"Oh, yes please! May I help?\"\n\n\"No need, thanks.\" He looked at Marcy, his eyes openly roaming over her delectable form, but in much the same way as he often examined the pastoral scene from his deck, in simple appreciation of its prettiness. \"Will you join us?\"\n\nMarcy, flustered, tried to smile at him. Failing, she blushed, shook her head.\n\n\"Thank you, but I ate at the Zoo before I came. Maybe a coffee? Please?\"\n\nHe continued to examine her for a few seconds and her blush deepened.\n\n\"Of course.\"\n\nTony turned and went back into the house. Marcy's eyes flipped over to mine; I could see a sudden edginess in them.\n\n\"You OK, hon?\"\n\nShe closed her eyes, nodded, then opened them, her blush starting to fade.\n\n\"He really isn't like the boys on campus, is he?\" She was trying a slight smile, not quite succeeding.\n\nI heard the espresso machine inside; Tony would not be long in returning. We had another minute or two. I walked over to where she had begun to set up her easel. She eyed my nudity, but not like Tony. I got the impression she was looking for backup, for some solid evidence her world was still making sense.\n\nI crouched beside her, swept my hand over her hair reassuringly. \"You sure?\"\n\nShe shrugged. Even though nothing had happened yesterday, I could see she was still nervous.\n\n\"You know you can leave, right? He won't mind.\"\n\n\"I know, but it'd make me feel... kind of... I don't know, Steph, like a quitter? Like a little girl who can't fit into a grownup discussion?\"\n\n\"I'll tell you one thing, Marcy. He wants you to enjoy yourself while you're here.\"\n\nHer eyebrows rose.\n\n\"He wants me to enjoy myself? Like this?\" She waved a hand over her bareness. \"And I don't even thinks he sees me as a woman, Steph! It's like I'm a framed painting in a gallery or something. It's almost creepy.\"\n\nI kissed her cheek. \"I know exactly what that feels like. My first night, getting undressed was hard; sitting there naked in front of him, that was harder. I was seriously pissed because he wasn't&hairsp; perving out over me. Does that make any sense?\"\n\nThose dark eyes turned to mine. \"That's it! Exactly!\"\n\nI heard Tony putting dishes on a tray. We only had a few seconds.\n\n\"Like I told you, Marce, he's going to look. That's part of the deal for us being here. But it's cool. Just say the word...\"\n\nTony took that moment to emerge, tray in hand.\n\n+\n\nMarcy and I cleaned up after breakfast. Afterwards, she returned to her painting; Tony and I had agreed to spend the morning on homework.\n\nI had come to accept the incongruity of a constantly-naked knockout blonde co-ed sitting next to a fully-clad man three times her age, in this case under a gazebo and doing a report on smooth muscle peristalsis.\n\nYet the morning wasn't entirely spent on things academic. His eyes spent a lot of time admiring me beside him and Marcy seated a few paces away.\n\nFrom time to time, when Marcy's attention was elsewhere, his hand would almost absent-mindedly stretch out, fingers sliding gently through my hair or down my back or sweeping up over my waist to cup a full breast, softly swirling his thumb around its nipple until it stiffened in response. It made it harder for me to concentrate, but on the other hand I was happy to be able to provide such uncomplicated pleasure for the man I now knew I loved.\n\nIf being male and female isn't supposed to be fun, then we should do away with sex altogether and switch to binary fission or something. Tony's caresses cost me nothing and pleased him; that to my mind made it entirely worthwhile. I'd never felt such feminine strength as when I was with Tony. Who cared what the dour, anxious covens back on campus would think?\n\nFinished with our report, he moved on to another subject and I plodded through the sere, lethally boring reading assignment before digging out my flute. I had practising to do.\n\nToday, I sat in the gazebo instead of standing by Marcy while I played. I was mainly working on some Telemann variations and he seemed to enjoy the music.\n\nPeriodically, he'd get up and examine what the diminutive painter had accomplished, mainly meticulous, surprisingly detailed landscapes. He also spent time quite candidly admiring the artist. Marcy, if not entirely comfortable with that, at least seemed to have her blushes under control.\n\n\"May I?\" he asked, picking up a piece of paper from a number of those littering a table beside her.\n\n\"Um, OK, but they're just sketches, nothing serious.\"\n\n\"I think it's rather good. Thank you.\"\n\nInstead of coming directly back to his seat this time, he walked slowly around her, his eyes fixed on her breasts and bum before resuming his place. Seated, he smiled at me, laid his hand on my thigh in a soft gesture. To my surprise, I found that any initial concerns over Marcy's beauty had passed. I was happy about that.\n\nHe showed me the paper in his hand, a quick pencil sketch of me. Having just paused my playing, I'd lowered my flute and my happy expression had been clearly captured; I was pleased to see that she'd focused on my smile instead of my nudity. It was impressive, especially for just a quick scribble. Marcy was, I had to admit, pretty good.\n\n\"I like it!\"\n\n\"So do I.\" He put it carefully on the table.\n\nI pushed my schoolwork to one side.\n\n\"I don't know about you, Tony, but I'm hungry. Do you trust me to make lunch?\"\n\n\"I have some things ready. How about I help you?\"\n\nThat got a knowing smile from Marcy. She knew my cooking abilities -- or lack of them.\n\nOK, I really did make lunch, but I haven't been so carefully 'helped' since Mom set me to making sloppy joes at eight years old.\n\nIn the end, I fear that Tony was rather shocked at how badly I could mess up even something as simple as croque monsieur&hairsp; sandwiches. Even Marcy rolled her eyes a little. I could see that Tony would continue doing the cooking in future.\n\nWe relaxed after lunch. I did some diving practice off the board into the pool and was pleased to feel the long-dormant skills from years of Saturday morning lessons slowly coming back. Tony definitely enjoyed watching me; it was, he had said, just one more way for him to appreciate my beauty. He joined me in the pool after a while, but his swimming and diving skills were about on par with my cooking abilities. We had fun and that's what mattered.\n\nEventually, we climbed out of the pool and sat in the sun. I looked at myself and smiled at what I felt was a fairly decent all-over tan, another benefit of being at the farm. The afternoon passed quickly. I even dozed for a while.\n\nI could feel Tony's eyes on me as he sat next to me, clad in swim trunks and sunglasses. I saw his approving smile, felt my tummy tighten as his gaze lingered on my breasts and legs.\n\nMarcy, paintbrush in hand, sat to one side of us, barer than me by one necklace and one ring. Even knowing Tony would be watching her, assessing her, enjoying her nudity, she seemed less uneasy now. I looked at him; he certainly was enjoying the view.\n\nI took his hand in mine, squeezed tenderly for a moment.\n\n\"I'll be right back,\" I said. I returned a minute later with a flat, gift-wrapped package. I sat down again, handed it to him\n\n\"Happy birthday, Tony,\" I said softly.\n\nHis head turned to mine. \"Birthday?\"\n\n\"Birthday,\" I said. \"50 years. Today.\"\n\nI squeezed his hand again.\n\n\"I don't think I ever mentioned that,\" he said quietly.\n\n\"No, but you let me text Marcy a photo of your driver's licence that first time, in case, I don't know, you were a serial killer or something.\"\n\n\"Damn.\"\n\nMen.\n\n\"In any case, Tony, many happy returns. I hope you're enjoying yourself.\"\n\n\"Oh, I am,\" he said. \"Very much so. Your being here already was a very nice birthday present, Stephanie.\" He lifted the package. \"You didn't have to do this.\"\n\n\"Just a token, dear sir.\"\n\nHis smile was pretty special, I thought. His fingers -- how I loved those fingers&hairsp; -- found a seam, gently pulled the paper away.\n\nHe turned the frame, looked at the photo. His jaw dropped, just slightly.\n\nThe image had taken 'boudoir photography' to a new level, I thought. I'd been resting on Tony's deck, dressed in sterling silver and a sleepy smile. When he'd raised my phone as if to take a photo, I'd cooperatively put my hands behind my head, arched my back a bit to emphasize my boobs. My phone had a good camera - the image showed the sheen of perspiration on my body; my face had that unmistakable, wildly-contented, just-laid look he'd put there minutes before.\n\nAt the time, Tony hadn't even looked at the image, merely put the phone down and taken me back to the bedroom for Round Two.\n\nOr had it been Round Three? Time sometimes got a bit hazy around Tony.",
        "I'd printed it and framed it myself. \"That's a nice one, dear,\" the middle-aged clerk at the local framing shop had smiled when I'd taken a pre-made frame to the checkout desk. \"Are you sure you don't want us to mount your photo for you? Our rates are quite reasonable.\"\n\nShe hadn't understood why I'd blushed that way. There was no way I could have risked letting a stranger see that photo.\n\nThen I noticed her smile had changed, just slightly. Maybe she did understand. Maybe she'd had really good times in her life, too, maybe there'd been a special photo of her for a special lover.\n\nEven now, having looked it many times, I still was amazed at how sensual I looked, how utterly desirable. My nipples tightened just a little, both at the memory of his lovemaking that day and now at seeing the subtle shifting in the fabric of his swimming trunks as he looked at the picture.\n\nBulls-eye!\n\n\"It's beautiful!\" he breathed. His eyes could be cold, hard as flint; now they were almost misty. \"Nothing could have pleased me more, Stephanie. Thank you.\"\n\nHe examined the photo again, ran his fingertip over it, then leaned over and, kissed me.\n\n\"I'll have to think of a good place to hang it.\"\n\nI'd thought about presents, gratitude and our agreement. I'd thought about it a lot. It was, I hoped, time to seal this relationship in amber.\n\nI took a deep breath, tried to work up my courage. I looked at the diamond on the ring he had given me. It served not only as a physical token of our agreement, but also -- so typical of the thoughtful nature of the man -- allowed me to publicly pretend to be his fianc\u00e9e vice merely his sugar-baby.\n\n\"As to that, Tony, I'd thought of something else to go with that picture,\" I said gently. I put my hand on his arm, squeezed tenderly. He turned from the picture, looked at me.\n\nMy gaze shifted to the bare form of Marcy in front of us. I watched her bite her lower lip in concentration as she painted. Tony's eyes followed mine.\n\n\"How about a hall pass?\" I said softly.\n\nHis head snapped over to stare me in the eyes. His eyes were with surprise.\n\n\"Are you joking, Stephanie?\"\n\n\"I would never joke about something like that, Tony.\" I kept my eyes on Marcy, tried not to be jealous, tried not to scream at myself for having made that offer.\n\nShe certainly was beautiful. Petite, but with a striking figure, Marcy had endless long hair, dark eyes with amazing lashes, a smile to die for. Limber, athletic and spunky, Marcy turned heads, even when she wasn't in her purple-and-white cheerleader uniform.\n\nI knew any man would want her.\n\n\"Stephanie...\"\n\nI cut him off.\n\n\"Tony, despite your stern demeanour, you are, I think, a man who could have half the woman on campus eating out of your hand if you ever smiled at them.\n\n\"You didn't buy me, Tony, but you did buy some things. One of them is my loyalty.\"\n\n\"Steph...\"\n\nI again cut him off, put my finger on his lips. \"My turn, Mr. diRossi.\"\n\n\"Loyalty means different things to men and women, Tony.\"\n\nI stroked his cheek with my hand. \"Yes, in this case, it means fidelity, faithfulness, that I'm going to keep my panties on when you're not around, but it also means that, so long as I wear this ring,\" I held up my left hand, \"you get my support.\"\n\n\"Support?\"\n\n\"In whatever pleases you, dear. Our deal was that I would do whatever pleases you until either one of us decides it's time for me to go home.\"\n\nHe stared at me.\n\nI nodded towards the delectable figure in front of us.\n\n\"Tony, we women can't help being jealous; it's the standard factory setting. But possessive women can be just awful, Tony, and you don't deserve that. So, here's where loyalty kicks in, for me at least, so long as our agreement stands.\"\n\nI squeezed his arm, again nodded towards Marcy.\n\n\"Tonybabe, you're a force of nature and there'll always be a pretty girl around somewhere if you let her. So, all I ask is that you don't try to hide it, don't try to keep it a secret from me.\"\n\nI leaned over, laid my head on his shoulder.\n\nMarcy, sensing movement, turned to look at us. She smiled, turned back to her work.\n\n\"I'm not agreeing to take part, Tony,\" I said. \"I'm a boy girl, not a girl girl. But I won't try to stop you and I won't ever bitch at you or nag you for that. I promise. Just don't lie to me, please.\"\n\nI'd practised those words, trying to get them right. I still wasn't entirely sure, but they felt like what I was feeling in my heart. There was, I thought, room to share.\n\nI saw his eyes change, saw a warmth in them and felt my own heart melt at the sight.\n\nHe leaned down, kissed my lips tenderly.\n\n\"You really mean that, don't you?\"\n\n\"Of course.\"\n\n\"You're an amazing woman, Stephanie,\" he said. \"I'm very lucky to have you.\"\n\n\"I know,\" I smiled, \"but it cuts both ways.\"\n\nMarcy stretched a little, trying to relieve a stiff neck perhaps. The movement threw her breasts forward, long pink nipples prominent. She rolled her shoulders and her boobs swayed in the warm sunlight.\n\n\"For instance, don't try to pretend you didn't notice that,\" I snickered.\n\nLaughing, Tony hugged me. \"No,\" he said. \"I couldn't possible pretend that.\"\n\nMarcy turned towards the sound of his chuckle. I smiled at her and she went back to her painting, oblivious to the topic under discussion.\n\n\"She's delicious, Tony. I know that. And I can understand that men have a different... viewpoint about such things.\"\n\nHe was silent.\n\n\"Would you like me to go inside now, Tony?\" I asked softly.\n\nHe wasn't the only one who could drop a bombshell.\n\nSilly as it sounds, the silence that followed was so deep that it almost echoed.\n\n\"No.\" His voice was low, gentle. His hand reached over, clasped mine.\n\n\"Stephanie...\"\n\nThere was a new tone in his voice, something I'd never heard before. I turned to him. His eyes darted towards Marcy for instant and I thought again for a moment he was going to take me up on my offer. I held his hand in mine, took a deep breath.\n\nI'd meant it, after all, but that didn't mean I was looking forward to it.\n\nHe looked at his watch. Late afternoon.\n\n\"Marcy.\" His call to her was clear, not particularly loud.\n\nMarcy again turned and looked at us. Seeing the look on Tony's face, her own eyes opened very wide, as if she had just stumbled into an age-old mystery.\n\n\"I'll take Stephanie into town with me tomorrow morning in time for her first class. You needn't wait.\"\n\nTony was a gentleman. His dismissals were always soft, polite, kind.\n\nEven so, I could see in her slight, almost-hidden impish smile her absolute certainty of where my afternoon was headed.\n\n.\n\nNo sooner had the sound of her car started to fade than Tony had me in his arms, his lips on mine, almost ferocious in his urgency.\n\nA moment later, still locked in a passionate kiss, he plucked me from my chair. As he carried me inside, I could sense his unwillingness to take the time for the two dozen steps to his bedroom.\n\nInstead, he lowered me onto my back on the heavy kitchen table, my bum almost on the edge.\n\nI understood the look in his eyes now. What was that high school book - The Call of the Wild?&hairsp; That phrase suddenly took on a new meaning. Primeval lust bayed in the forest and I felt my body answer the call; I was suddenly ready, my breasts heavy, nipples hard as bullets, my lower lips swelling, a surge of wetness on them. I watched him tear off his clothes, buttons flying in his eagerness.\n\nThere was none of the measured, careful, gentle loving Tony had gifted me with before. This was not love or tenderness. My offer had clearly unleashed something deep within him. His cock found my opening and he slid his full length into me without a moment's hesitation.\n\nA more modern table would have shattered under the fury of his lunges. This one was old, heavy, handcrafted generations ago when styles were solid and good hardwood cheap. He stood between my legs, holding my thighs in his hands as his hips hammered his length into me. I could hear the table legs squeal on the slate floor as his pounding shifted the table, saw a coffee cup skid, topple over the edge, heard it break in some far distance.\n\nNot thinking of me or my pleasure now, his eyes were shut, total concentration on his face, driving him towards his own orgasm, raw desire ruling his very being.\n\nFor half a second, I wondered if I should be afraid, discarded the thought the next moment. I would need never fear Tony. He'd been unfailingly kind, gentle, considerate. He'd pleased me so often, showed me undiscovered joys, taken me to heights I'd never imagined. He'd never taken anything I hadn't been willing to give.\n\nSo, if this was what he needed, well, I was his woman. It was my turn now, time to focus on his&hairsp; needs for a change.\n\nEspecially as I was the one who'd lit this particular fuse. That was something else.\n\nThe room echoed with a flat slapping sound each time our bodies collided. My breasts shimmied with each impact of his hips, wobbling back and forth like jelly. Tony's hands clutched my legs as he drove into me, long fingers sinking into my flesh, holding my body in place for his lunges.\n\nI felt a weight growing within me. My pussy was stretched by his engorged rim, caressed by his plunging shaft; they fed a white-hot fire, growing hotter and brighter with each thrust. I heard a moan escape my lips and slid my hand between us, found my button with a fingertip, rolled it in time with his driving cock.\n\nTony grunted deep in his chest, froze, his manhood throbbing and jerking inside me. I pressed harder on my pearl and felt time stop. Blazing waves of ecstasy flowed through my body, surged back and forth between my boobs and my pussy.\n\nTony fell across me, panting hard, his weight a happy, welcome burden. My orgasm slowly died, the odd spark bursting loose from the embers.\n\nToday it was Stephanie leading an exhausted Tony to bed instead of the other way around. I tucked him into bed, had a quick shower, did a couple of dishes. Rummaging through the refrigerator, I put together a small snack for myself, left its twin on the table for Tony when he woke up.\n\nI smiled the whole time.\n\nHe was still asleep when I slid into be next to him.\n\n+\n\nI woke spooning behind him. The sun had gone down and it was pitch-black; I had no idea of the time.\n\nI could hear his breathing in the darkness, feel it in his body -- awake now. I put my hand to his cheek. He rolled to lie on his back and I shifted, put my head on his shoulder.\n\n\"How's my guy?\" I whispered.\n\nHe was silent. His hand came up, stroked my face.\n\n\"Stephanie,\" he started,\" I'm sorry...\"\n\n\"Don't be silly, Tony. You're a man, not a plaster saint. It was funny - and it was fun, too.\"\n\nI giggled, hugged him. \"You're full of surprises, Tony.\"\n\nHis silence spoke to me. I guessed what he was thinking.\n\n\"You want her, don't you?\" I think I kept the tremor out of my voice.\n\n\"That's hardly a fair question, Stephanie.\" He shifted in the darkness; I could feel his breath on my face. \"Do you think me that shallow?\"\n\nI traced his jawline with my fingers, felt the stubble on his cheek above his beard.\n\n\"It's not a question of 'shallow', Tony. Give me some credit, dear.\"\n\nI took a deep breath, hugged him again, let my fingers trail through his chest hair.\n\n\"I have nothing to fear from Marcy,\" I said, hoping it was true.\n\n\"Stephanie...\"\n\n\"Give me a moment, Tony. I know where I stand in your life and I can, I hope, depend on that much.\"\n\nI took a deep, deep breath, tied the bungee cord about my ankles, felt for the edge and leapt...\n\n\"I don't expect you to say you love me, Tony.\"\n\nHis head rose in protest. My hand pressed him down gently.\n\n\"It's OK, Tony. Truly it is. You can, if you wish, tell me you love me another time, but not tonight. When you do &mdash; if you do &mdash; I'll believe you, I promise. But tonight is not about love.\n\n\"Women want to be the only one in a man's life and, yes, I do. But I also know that that's not how men think, not how they're programmed. Love and desire are two separate things for a man.\"\n\n\"Stephanie...\"\n\n\"If you open your lips again, Tony, let it be either to kiss me or to tell me it's time for me to take off my ring and leave you. Otherwise, please, let me speak.\"\n\nHis hand slid over my hip, down my thigh, cuddled. I smiled at the touch.\n\n\"Tony, if you want Marcy, I mean if you want&hairsp; her &mdash; want her in your bed, bucking and squealing with the delight you are so damned good at giving a girl &mdash; well, I understand that. She's lovely, dear and you're all man. And I've said Yes to it, with the only condition being that you be honest with me.\"\n\nHe was silent in the darkness.\n\nPlease, please, please, let him say No... Let him say he wants only me, that he wants me here beside him forever, 'forsaking all others'...\n\nIt was a foolish, adolescent prayer, I knew that. But I loved Tony and I'd meant every word I'd said about loyalty. Reconciling those two things would be my problem. I thought I could manage it.\n\nI knew that I wouldn't love him any less if he made a play for Marcy, and I'd steeled myself against the hurt it might bring, but my offer had been unsolicited, freely given. It hadn't been a spur-of-the-moment thing either and I wasn't going to take it back.\n\nI lay there, quiet now, listening to the night breezes outside and our combined heartbeats in the darkness. My head rose and fell with Tony's breathing.\n\nI felt his hand sweep over my waist, caress a breast, fondle my shoulder, trace along my arm. Taking my left hand in his, he lifted it to his mouth. My heart almost danced as he gently kissed his ring and the finger that wore it.\n\n\"Thank you,\" he said softly. I couldn't be sure if he meant for my offer or for wearing his ring.\n\nThen, silent in the night, he rolled, came to rest on top of me, his lips searching, warm, very gentle now. His tongue swept over my lips; I opened to welcome it and him. His tongue drifted between my teeth and lips, explored inside, played with mine, slowly, softly.\n\nThe kiss went on and on. I realized with a pang that he had not otherwise touched me, then felt that disappointment dissolve into nothingness as his mouth moved, tongue tip following my jawline, dropping to my shoulder, circling a nipple without quite touching it.\n\nI dropped an arm, felt for his hardness, but couldn't quite reach it. I gasped as his tongue circled inwards to my nipple, hard now, expectant. His other hand swept ever so gently over my stomach, paused over my mound to shift it, roll it beneath his palm. I could suddenly feel wetness on my ladybits.\n\nHappy, delighted, I whispered his name, hissed lightly as his teeth nipped very gently at my nipple, stretched it away from my body, released it. Again his tongue began to circle, wider now, this time over my other breast.\n\nHis hand moved down my body again. To my chagrin, it bypassed my sex, his fingers instead stroking the skin of my thighs with the gentlest of touches.\n\nMy arousal grew with each soft caress. I again tried to reach his cock, but he shifted his weight and all I could do was to run my hands over his back and sides, pull his head in against me.\n\nHis kisses became the gentlest possible touches on my lips, but they never stopped, never ceased feeding my arousal.\n\nWith a last inviting touch on my inner thigh, his hand returned to my shoulder to begin all over again. His head moved to my chest and, while his mouth teased and aroused one breast, his hand cupped and mounded the other. He sucked in a nipple between his lips and began to flick its tip with a fast-moving tongue; at the same time, he caught my other nipple between two fingers and stroked its tip with his thumb.\n\nI thought my head would explode.\n\n\"Tony,\" I moaned softly. \"Tony. Enough.\"\n\n\"Quiet, woman,\" he whispered. \"I'm having fun.\"\n\nHis mouth returned to mine; his hand drifted south again. My breasts were practically quivering now, my labia swollen, slick with my dew. I could hear my pulse in my ears, feel each heartbeat in my nipples.\n\nAgain his hand found my bare mound, shifted it beneath his palm against my pelvis. My labia and hooded clit were softly pulled, dragged against each other and I groaned with pleasure.\n\n\"Please...\"\n\nHe ignored me. Again his hand passed by my waiting pussy, began to caress my thighs. He knew how sensitive those were, knew very well how to use that sensitivity to drive me mad.\n\nI tried to shift, roll away, to get a chance to please him&hairsp;, but those long arms were too strong.\n\nOnce more his head dropped to my boobs, his lips and tongue and teeth playing them, driving me to the very brink.\n\nI sobbed with joy as a long finger finally &mdash; finally&hairsp; &mdash; traced through the welcoming wetness of my ladylips, hissed with need as it moved back to fondle my legs. It returned, touched me softly, briefly, and it occurred to me that Tony diRossi was in his own way a musician, too, one capable of playing my body like a fine instrument.\n\nHis hand swept up over my stomach, gently caught a boob. His thumb and finger softly pinched and pulled a nipple before again sliding down to explore my swollen labia. My body was shaking with anticipation, with hope, with waiting for his next touch. It was hard to breathe in anything but gasps.\n\nI shivered, moaned as he slid away from me. I moaned louder as I felt his whiskers on my stomach, on my knees.\n\nHis tongue wiggled its way up between my legs, touching one inner thigh, then the other, back and forth as it moved closer and closer.\n\n\"Tony!\" It was all I could think of, all I could say.\n\nI felt his nose probe between my lips, followed by his moustache, his lips, the tip of his tongue. His hands continued to stroke my inner thighs as his lips found my pearl, kissed it softly, sucked it in from under its hood. Holding it between his lips, his tongue swept over it, dumping a pail of liquid oxygen onto my fires.\n\nMy hands clutched at his head, pulling him in towards me, clinging to him like the last lifesaver on a sinking ship. He pulled back, stretching my nub slightly, released it, began to lick the full length of my lips, broad strokes, slow, devoted.\n\nI was crying words now, words that made no sense, even to me. They became shrieks when a long finger found my opening, slipped in, stroked, probed.\n\nI exploded, shouting, writhing under his hands, under his lips, under his still-searching tongue. It went on and on and...\n\n\"Stop! Tony, stop! You'll kill me!\"\n\nHe pulled away, moved to lie back beside me. I lay panting, gasping, overwhelmed with the sheer enormity of my climax. I could just see his white teeth smiling in the darkness. His hardness nudged my hip, but I was still lost in glory, drifting through endless ripples of ecstasy.\n\nHis hand stroked my waist, my hip, slowly, gently, then he rose from the bed, returning with a glass of fizzy salvation. He held my head up and I gulped it thankfully.\n\n\"How's Stephanie?\" His voice was so very, very gentle, I thought. How could I even have thought of being frightened?\n\n\"I love you, Tony.\" My hand found his, squeezed it to reinforce my words.\n\nHe was silent for a moment, then, \"Still with me, Stephanie?\"\n\n\"Oh yes, oh yes. You're good to me, Tony, so very good. Thank you.\"\n\nHis lips came close to my ear, kissed it. His laughter was plain now as he rolled on top of me, fumbled for his cock with his hand, moved it until it found my cleft.\n\n\"Oh god, Tony, wait! A girl needs to catch her breath!\"\n\nIgnoring me, he found his aim and slid slowly down into me. His cock fully seated, he kissed me tenderly, then silently began to ease his hips back.\n\nThe sensation of his length moving inside me was heavenly. As he took his second stroke into my depths, my orgasm took off again, shouting and shrieking its way through my entire body. It rebounded from my fingers and toes, swept around and around my boobs. I tried to roll my hips to meet his strokes but was too lost in pleasure.",
        "Still the man continued to slide in and out of me, gently, carefully. There was none of the hard, pounding lust of the afternoon. He was treating me like a first love, a first time.\n\nMy hands clutched into his back, pulled him down onto me with every stroke, deepening my orgasm, pushing me further up into joy no other man had ever given me.\n\nI felt Tony slow, pause, then his cock began to surge and pulse inside me as he filled me with his own joy. His weight came down on me. A big man, he felt like a treasured doll, weightless and welcome.\n\nPi had to work extra hard to waken me the next morning.\n\n+\n\nMarcy wasn't in our room when Tony dropped me off at the residence. I'd showered before leaving the farm and only needed to change my clothes and grab the right books for my first class.\n\nI missed her at lunch, too, but she was there waiting when I came back at the end of the day, a broad grin on her face.\n\n\"So?\" she smiled. \"Mission accomplished, sugar-gal?\"\n\n\"I hate it when call me that, Marce! But,\" and here my grin grew to match hers, \"but yes. Mission, erm, accomplished.\"\n\nShe stepped towards me, brought me into a hug. As we stood there, arms around each other, it suddenly hit each of us that we were both fully clothed this time. I'm not sure why, but it tickled us both. I giggled, which turned into a laugh on her part; the two of us wound up lying on our beds, almost breathless with laughter.\n\nI eventually sat up. \"Did Tony ever ask you for a painting?\"\n\n\"No,\" she admitted. \"We never quite got around to that. It'll wait.\"\n\nI thought for a moment.\n\n\"Would you paint one for me, Marcy?\"\n\n\"Paint what? You want one of my landscapes? You can have one of those, Steph, once I get them graded.\"\n\n\"No. Not a landscape. Do you think you could work from a photograph?\"\n\nI smiled. Tony had taken other photos with my phone.\n\nMarcy's eyes opened very wide.\n\n<p align=\"center\">+</p>\n\n<p align=\"center\"> Thanks for reading.<br>If you enjoyed this tale, please remember to vote or comment.</p>\n\n<p align=\"center\">+ + + + +</p>\n\nFor those who have enjoyed Stephanie's tale so far, a sample of Chapter 6:\n\nBending over, I strapped on the shoes and took a moment to examine myself in the mirror. The heels made my legs look endless. I ran a brush through my hair and checked my makeup. I pulled my shoulders back, smiled as my boobs shifted. I thumbed my nipples gently, smiled again as they stiffened a little. In the mirror, I thought I looked centerfold-ready\n\nI started a reasonably good strut down the hall, my shoulders back and straight, my head up and my brightest smile on my face. The low click-click-click of stiletto heels on stone floor was distinctive.\n\nTony was still focused on his homework when I came into the room. His head suddenly came up, his attention searching for the unfamiliar sound. I put a little more sway into my hips.\n\nHe spun in his chair, turned to look at me. For the first time, I saw Tony diRossi disconcerted. \n\n\"Every girl likes to dress up once in a while, Tony!\" I grinned. \n\nI spun before him, dressed in high heels and silver.\n\n\"You like?\" I asked."
    ],
    "authorname": "TarnishedPenny",
    "tags": [
        "cmnf",
        "nudity",
        "outdoor nudity",
        "sugar-daddy",
        "table sex",
        "co-ed",
        "college girls",
        "hall pass"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/past-present-and-future-ch-05"
}