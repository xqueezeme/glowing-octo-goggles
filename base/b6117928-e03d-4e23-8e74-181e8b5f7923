{
    "title": "Camp of Blessing Ch. 07",
    "pages": [
        "One thing was clear: Aisha, Sister Beth, and Valery were all addicted to Kristanna's cum. They practically lived for it, not much else had been in their minds the past three days, except when to get their next dose. Aisha was very much aware of who to go for when she needed cum. But for Beth and Valery it was just a cock on the wall. None of them questioned who had such a giant cock and how that hole on the wall came to be there in the first place. By the third day, they didn't even care anymore.\n\nIt turned out that the lock on the door of the Secret room was very old and rather simple. Aisha was able to essentially make a fake, improvised key that could lock and unlock the door whenever they wanted. She gave the key to Kristanna, the room stayed locked until the evening when the redhead sneaked in there. Sister Beth even managed to ease the patrol of the guards on her corridor so that she could also sneak Valery in her room and both of them could scream and moan without the risk of being heard.\n\nThe past three nights, after dinner, Kristanna went in the Secret room and waited for Sister Beth to \"summon\" her, which the nun did without failure. She stuck her cock in the hole on the wall to begin the fun. The nun brought Valery each time, apparently \"cleansing her of sin\" took time and several sessions.\n\nTonight was different, however. Kristanna had the idea in her mind all day to reveal her identity to both Valery and Sister Beth. The sex through the wall was getting old and repetitive. She thought about it from every angle, talked to Aisha about her intentions. She felt like at this point they were addicted to cum enough that they would end up rationalizing it in some way. Beth especially, as she was pretty deep into her \"angel\" narrative, beliving Kristanna to be some kind of divine power. The uncertain variable was Valery. Once the blonde girl knew about Kristanna's secret, she could get bold and decide to expose her as a freak to the entire school and the nuns. The redhead wasn't sure if just the fascination for her cock and cum would be enough to retain Valery from doing something like that. After all, she was an annoying cunt, to begin with. Used to bulling others for the fun of it.\n\nOn the other hand, Valery was also afraid of her schemes with doctor Schubert being exposed by Beth. She had just a few more months until graduation and would finally get out of this hole, back to her life as a rich, spoiled brat, \"Maybe this is motivation enough to keep her in line\", Kristanna voiced to Aisha as they both talked, sitting on the edge of the bed in the Secret Room. The Hispanic girl shrugged, \"It's your choice, girl. I honestly don't mind if things stay as they are, there is plenty of that cock for all of us.\"\n\nAs they laughed together, Kristanna realized that she would probably never be more assured than she was right now. The situation was complex and anything could happen. She took a deep breath and let out a sigh, \"You know what? Fuck it. I will show my face to them and \"wing it\" from there. What could happen? I end up branded as a freak in here? That ship has already sailed! Let them talk! Or maybe the nuns expel me back to the Smiths? I'd love it if they did that! I have little to lose.\"\n\nAisha lowered her head looking a bit distressed, \"I don't want you to leave me though.\" Kristanna smiled softly and placed a hand on her friend's shoulder, \"Don't worry hun. There is life after this damn Camp. We will find each other.\" Aisha nodded, but there was worry in her eyes still. She launched herself on Kristanna hugging her.\n\nIn their embrace, both of the girls heard muffled noises coming from the wardrobe, someone was in Sister Beth's room. The time had come.\n\n-------------------------------------\n\nEARLIER THAT DAY\n\n\"Stop it! Stop it! Please!\" Mary begged as she crouched, naked and crying at the corner of the locker room. The girl was younger, insecure and overweight, always a target for Valery and her crew. This time they were surrounding her after the shower and making pig noises while laughing at her. Julie and Renata were the most vicious ones, actually cornering the poor girl. Valery was behind them, but her expression did not show much enjoyment.\n\nSince she had been caught by sister Beth and taken to her room, Valery had gone into some sort of small existential crisis. The past three days she had been questioning the point of it all. She was never a strong believer, but Sister Beth's constant talk about \"cleansing her of sin\" and her so-called \"impure soul\" was affecting her.\n\nAll her life she had misbehaved. Her parents never seemed to have loved her. They didn't care much, always at work. When Valery did something wrong, they scolded her. But they always talked about how she had embarrassed THEM. Little it mattered what Valery reasons were. \"The Krieger family is better than this!\" They would say, always placing on her the responsibility to live up to their name. The family name was what they cared about.\n\nFrustrated, and most of all angry, Valery didn't accept that she wasn't a true Krieger. So she surrounded herself with those who looked up to her, saw her as beautiful and strong. And she bullied the weak, to prove how much better she was. But it never seemed to be enough for her parents. Throughout her childhood she kept that up, her behavior always escalating. Until her teenage days, she ended up sending a girl to the hospital with a badly planned prank. So her parents sent her to Camp of Blessing to finish her last year of High School, where she couldn't embarrass them anymore.\n\nAt the Camp, Valery just did more of the same. In her mind, she was showing everyone how much she didn't care, how far she would go from what they expected of her. Sister Beth had been the first who showed her a different path, who had seen her as somehow \"worth saving\". As fucked up as the nun was, she wanted to help, and in her way that is what she did. Over the past days, Valery had experienced sensations she had never before imagined. She gave the nun and that mysterious cock on the wall immense pleasure. It felt great to do it, better than abusing others in the school. Valery had started to see the whole bullying thing as a waste of energy. She looked at all those girls, crying and running away from her, and somehow saw herself taking it from her abusive parents.\n\nThe cries from Mary drew Valery out of her thoughts and back to the locker room. She stepped in front of Julie and Renata and pushed them back, \"Enough! Jesus, the girl is having a breakdown!\" Julie and Renata looked at each other, puzzled at first. But as they saw Mary take the chance to grab her towel and run out of the locker room their expression turned to anger towards Valery. Julie questioned in an intimidating tone. \"What is your problem, Val? The past days you are killing our buzz, yo! Ruining our fun, feeling bad for these idiots!? Are you turning into a fucking pussy?\"\n\nRenata complimented her friend's remarks, \"Yeah man! Do you have a problem with us?\" Valery was still too proud to back away, \"What if I do, hmm? What are you gonna do?\" Both girls looked at each other, and without warning Julie ran into Valery, shoving her against the metal lockers. The blond girl tried to push back, but Julie's shoulder was brushing against her nipples, making her legs weak. Any other day before her encounter with sister Beth, Valery would have won that fight. But no she didn't have it in her anymore. Most had not noticed, but Valery's body had changed quite a bit in the past days from her repeated exposure to Kristanna's cum.\n\nThe hips and ass she never had before started showing, making her much more feminine. They were nowhere near Kristanna's or Aisha's, but the minor changes made a visible impact. Some pants she had would barely fit her wider hips. Her breasts were the ones to be most affected though. While they were big before, they had practically doubled in size, each one now bigger than her head. Her areolas stretched to match, and her nipples would be up to two inches long when hard. Their sensitivity was often overwhelming, certainly distracting.\n\nJulie's pressure against Valery's newly grown tits was too much to bear, she moaned with discomfort and couldn't fight the girl back. Julie pulled away, Valery lost her balance, leaning against the locker to try and stand. Her towel fell and her tits were exposed. Both Julie and Renata were confused to see Valery's nipples fully erect and dripping milk on the floor. The blonde covered herself with her arms, she blushed, moaning and trying to get ahold of herself. Julie and Renata burst out laughing, \"Hahaha what the fuck? Look at this fucking cow! Mooo!\" Both began to mock and degrade Valery, who just wrapped herself on the towel again and stood there, with no reaction.\n\nThe \"party\" ended as one of the nuns rushed in the locker room, probably alerted by Mary who had managed to run out a minute ago when Valery intervened. All three of them ended up confined to separate chapels, without dinner until they completed an unreasonable amount of prayers. Kneeling at her small altar, Valery felt tears rolling down her cheeks. She kept seeing flashes of all those times when her parents scolded her, \"You are ruining the Krieger name! I don't know what to do with you!\" Then she saw the girls just now in the locker room, \"Big-titted bitch! Fucking cow! Mooo!\" And lastly Sister Beth, \"You are corrupted, your soul needs cleansing!\" Maybe they were all right, maybe she did deserve it all.\n\nIt was clear not even her friends liked her. She never got anything from her friends at the former school, not even a letter. Julie and Renata were quick to turn against her. They never liked her, they just feared her, like everyone else she bullied. They followed her out of convenience, and once they no longer feared her then they treated her like all the losers they bullied. She called her victims pathetic and weak, but now she saw how she had always been the weak one. Valery stepped on others so she would feel better, but that had never worked. The only time when she felt truly amazing was in Sister Beth's room. The first time that she experienced happiness, bliss even, was when being \"cleansed\".\n\nA hand touched Valery's shoulder, she looked up to see sister Beth standing beside her and speaking with a calm voice, \"Enough penitence, my child. Come with me for true salvation.\"\n\nFor the first time since all of this started, Valery believed in Sister Beth's words. With a smile in her lips, she stood up, dried her tears and followed the nun to her room.\n\nAs usual, Valery stood at the center of the room as sister Beth lit up her candles and prepared the altar to \"summon the angel\". When she finished saying the words and pulled the cross from the wall, the hole remained empty. Instead of the cock that usually emerged, only the whispering voice echoed, \"It is time you know who I am. Walk to the old room next to this one, the door is unlocked.\"\n\nSister Beth was euphoric, she covered her mouth with both hands in disbelief, \"Dear Lord! Finally! Come, Valery, let's do as instructed!\" Both of them walked out of sister Beth's room and towards the next door. The nun turned the knob slowly, her heart racing. She pushed it and walked in, Valery followed closely. The room was completely dark, but as the door closed behind them a switch flipped and the faint light of the lamp in the room came on. Standing next to it was Aisha, by the foot of the bed stood Kristanna, already naked. Her massive cock and balls hanging from her crotch, unmistakable.\n\nThe nun immediately fell on her knees, \"You! The new student! Praise the Lord for blessing us with your presence!\" Behind the worshiping nun stood Valery in disbelief. She stared at Kristanna's body, her impossible curves, the unreal dick she had learned to enjoy so much. But she didn't say anything, there were no words for her surprise. Kristanna broke the silence, \"Valery, I know we have our differences, but I think there is no reason for us to fight, I certainly never wanted to fight you\"\n\nFor a moment, Valery just looked around at the soundproof walls, that big bed and the weird configuration of the room. Lowering her head and staring at the floor she finally spoke, \"I... I don't want to fight you, or anyone. I'm done fighting. Sister Beth is helping me see who I am, and so are you.\"\n\nKristanna was surprised, to say the least. She expected some snarky comments. That wasn't the Valery she knew, something had happened. Sister Beth stood up and caressed Valery's face softly, \"I am glad you see it that way\", she then turned back to Kristanna, \"I have a million questions! Were you born like this? How is it possible?\"\n\nKristanna didn't want to explain herself, she didn't even have the answers. \"I think there will be time for these questions. But does it matter, Sister? I know who I am and what I want, you can see it, they can see it.\" Kristanna pointed at Aisha, then Valery. \"I just want to make my stay in this place enjoyable. I want to explore, evolve. You can go through this with me, as you have so far.\"\n\nThe nun had tears in her eyes, she nodded, trying to keep her composure. \"Yes! Yes, of course! Thank you!\" She could barely speak any longer. \n\nAs Aisha witnessed that scene she sent a couple of stares towards Kristanna, moving her lips to say silently, \"She is intense!\". The redhead had to hold back her laughter at the remark. She cleared her throat regaining composure and walked towards sister Beth, cock and balls swaying left and right with each step, \"Now, you know why you are here. Let's get rid of these clothes, you won't be needing them.\"\n\nThe nun was the first to begin removing her habit, except for the headpiece. Through the constant consumption of Kristanna's cum in the past days, sister Beth's dick had grown to reach the mark of thirteen inches when hard, being as thick as (and certainly longer than) her forearm. Each of the nun's balls hung heavily in her sack, as big as a pear. They swelled bigger during sex before releasing her load, which had also more than doubled in volume at this point. Furthermore, she had grown at least three inches taller to reach 5'8\", and her body was much more well-shaped. Even at the age of forty-five, she had a perfect, athletic body that belonged in a fitness model. Her legs were toned, her ass firm and round. Above her flat abdomen, her perky breasts were flawless, like two firm oranges with rosy, puffy nipples. The modest habit she wore every day kept all of these changes hidden. But when she was naked her beauty was undeniable.\n\nValery also stripped, revealing herself for the first time to Kristanna. The redhead bit her lower lip and stroke her cock softly watching those huge melons bouncing free. She looked around to see everyone getting naked. Aisha quickly got rid of her uniform. The body of the Hispanic girl had also gone through changes in the past days. Her ass got bigger, much more round and firm than before. Her hips also got wider, it seemed her entire bone structure at the waist area changed to accommodate the growth. On top of that, her clit reached the size of a very thick middle finger when hard. She could even stroke it when she masturbated thinking of Kristanna.\n\nImmediately after undressing, sister Beth was already kneeling in front of Kristanna, her hands hesitated to touch the girl as she looked up looking for permission. The redhead just nodded and the nun immediately placed her hands on Kristanna's ball sack, cupping each testicle in her palms. She massaged them tenderly, mesmerized by the fascinating body she had never had the pleasure to see through the wall, \"You are divine!\" Soon she licked the skin of Kristanna's scrotum, watching her massive cock grow to reach its mighty twenty inches. The nun's tongue traveled along the base of the shaft, licking the underside.\n\nThe cock worshiping session continued as Valery joined. Kneeling next to sister Beth she grabbed Kristanna's shaft with both hands. She stroke it and placed soft nibbles on the head, taking in the oozing precum. Aisha positioned herself behind the redhead sucking on her clit and massaging her ass cheeks. Kristanna let herself be absorbed by the moment, throwing her head back allowing pleasure to course through her. She could feel precum pouring out of her cock slit into Valery's mouth. As the blond girl filled a mouthful of the thick nectar, she moved towards sister Beth and shared the load in a passionate kiss.\n\nAffected by Kristanna's fluids, all three women moaned started to make out with each other. Taking turns between kissing and caressing the redhead's balls, thighs, cock, ass, and pussy. With a shiver and a sense of eagerness flowing into her body, sister Beth turned her focus to Valery. She kissed her neck, squeezed her massive breasts with both hands, getting diving in the girl's body. Her touch became more aggressive until she practically grabbed Valery by the neck and began lifting her, taking the willing girl to the bed next to them. Kristanna just watched with a smile as the nun crawled over Valery on the bed. She then spread the blonde's legs wide in the missionary position, adjusted her cock against her cunt and pushed it inside with a grunt.\n\nKristanna turned around to face Aisha now, she grabbed the base of her thick cock swinging it up and down. The underside of her prick slapped against the girl's face, thick strings of saliva and precum connecting them. Aisha had her tongue sticking out of her mouth, licking that cock with eagerness.\n\nOn the bed, sister Beth held Valery's arms up above her head, forcing the blonde's huge tits to be fully exposed. Gravity pulled the huge melons, causing them to lean naturally to each side of her torso. The nun's hips moved like a separate part of her body, forcing more and more of her prick inside Valery's cunt.\n\nValery had a blank stare, looking at the wall next to her. She seemed to have given up, letting herself be used and dominated. As the nun gained speed and rhythm she heard Valery's faint voice whisper, \"Harder... please...\" Leaning forward into the girl the nun asked, \"What did you say, my child?\"\n\n\"I said... harder... punish me, p-please,\" Valery spoke louder this time. The nun smiled and with a harsh thrust broke inside the girl's womb. Valery arched her back and moaned, feeling her belly bulge. She had never felt more pleasure in her life, \"Slap me! I deserve it! I'm filthy!\" she began crying between her moans. Sister Beth grunted in ecstasy, smashing her pelvis against Valery's. The nun raised a hand and slapped her partner across the face. She heard the girl cry, but then she slapped her again. A hunger surged in sister Beth's eyes as she tasted that power, that control. Watching Valery beg and cry hit a button inside the sister that she didn't know were there. She wanted more, she NEEDED more.\n\nWith her giant dick lodged down Aisha's throat, Kristanna watched what happened on the bed, how sister Beth punished Valery. She saw the nun begin to pinch and slap the girl's jiggling tits, making her cry louder. The redhead saw an opportunity to send Beth over the edge. She pulled back from Aisha, leaving the girl coughing on the floor, \"Hang in there, I gotta do this\"\n\nKristanna hopped on the bed, positioned herself behind sister Beth and pointed her dick down, slowly bending her knees. Sister Beth felt a warm, wet member touch her ass cheeks. She looked over her shoulder to see Kristanna positioning herself, \"M-my angel...\" The redhead did not let the nun finish her sentence, \"Keep fucking her\" She commanded as she found the sister's pussy lips and pushed against them. The nun began to resume her hip thrusts, but when she pulled back now she felt Kristanna's dick spreading her pussy open. As she increased her speed, Kristanna's dick went deeper inside her pussy.",
        "A minute later Kristanna was completely mounting sister Beth from behind while the nun pounded Valery underneath. Feeling lonely, Aisha just moved to the head side of the bed and sat on Valery's face, facing the wall and holding on to the bed frame while she rubbed her swollen clit and lips all over the blonde's mouth. Valery drowned in juices, the strong musk of Aisha's cunt flooding her nostrils and taste buds. Sister Beth watched Aisha's massive ass twerking in front of her, she took turns between playing with Valery's tits and slapping Aisha's ass. The nun arched her back, going all the way deep inside Valery. Kristanna plunged her cock inside the sister's cunt, impaling her.\n\nThey formed a mass of wet bodies, smashing against each other, fucking, moaning and grunting. Kristanna began to drain the energy in the air, it was more than she had ever consumed. She opened her eyes, the sea-green iris glowed brightly and her pupils were elongated like a lizard's. The voracity of the thrusts just grew as time passed, until Kristanna finally came in sister Beth's cunt.\n\nAs the thick jizz flooded the nun's womb she let out a scream. She placed both her hands on Valery's tits, putting all her weight on them as she felt the turmoil in her womb, cum sloshing in and filling her up. Valery's nipples squeezed through the Sister's fingers, squirting milk all over her hand. The nun couldn't help but also reach climax, shooting her load inside Valery.\n\nSister's Beth expression was one of pure bliss and ecstasy. She stuck her tongue out, desperate screams going through her throat, a mix of agony and pleasure on her face. The area surrounding her eyes became increasingly darker as if she wore strong make-up. Dark veins began appearing around them as if some form of paint had dripped in her eyes. The nun's iris turned completely white, with just the small black pupil in the center. As she took Kristanna's load in her womb the nun examined her fingers, seeing that her nails had grown into dark and long, resembling claws. Sister Beth's mind was clouded as if a veil dropped on it. The pleasure was all that mattered, all she desired. The energy surging through her made her feel invincible as if she could fuck until the end of times.\n\nAisha saw the soulless eyes in sister Beth looking over her shoulder. She was too horny to care, busy shoving her giant clit inside Valery's mouth. Her cunt erupted like a geyser as she came, drowning the blond girl in fluids. The Hispanic girl convulsed, her massive ass cheeks clapping against each other, trembling like a full bowl of jello. Underneath her, Valery could barely breathe, restrained, fucked and abused. The blonde came so hard she felt like she was gonna die. Her breast immediately squirted milk more powerfully, showering sister Beth. Valery's mind melted as her womb swelled with the nun's load.\n\nPulling back after a minute, Kristanna knelt on the bed. Two final cum shots flew out of her dick onto sister Beth's ass and back. She looked down to see her scrotum still swollen, each testicle easily reaching the size of a cantaloupe. She knew she was far from done, and so were all other girls. This was just the beginning, \"Come here, Aisha!\" The redhead commanded, sitting on the edge of the bed. Her dick pointing up like a tower of flesh coated in cum.\n\nAisha knew exactly what to do, moving in front of Kristanna and stepping on the bed. She flexed her knees adjusting the massive cock between her fat ass cheeks until the glans kissed her asshole. All she had to do was let gravity do its job, pulling her weight down and causing her to engulf that thick monster with her asshole. The way she just took it all inside sitting on Kristanna's lap was obscene, her belly bulged out, but she didn't seem to care. She mumbled incoherences as her hand caressed the bulge on her belly. \"Y-yes. Come home... tear me apart, ravage me!\" She then began to bounce on Kristanna's lap, her movements aided by the redhead's arms that gripped her ass. \n\nBehind Kristanna on the bed, Sister Beth lifted Valery's legs and folded her in half, making her ankles go above her head. The nun crawled over her and grabbed her neck with both hands. With her soulless eyes and a wicked smile, she choked the girl while pounding with violence. Valery rolled her eyes, she could barely breathe. With the little chance she had the girl still managed to speak between her grunts, \"Break me... fuck me! U-use me!\", The nun didn't even need encouragement. She kept pounding the girl's cunt with vengeance, \"Your soul is dirty, impure. My holy rod will cleanse it of all sin!\"\n\nThe stamina on Sister Beth seemed to have no end. She kept hammering her hips against Valery with unending resolve. When she seemed to be taking a break, she was just switching holes. The nun watched a torrent of jizz pour out of the blonde's cunt when she pulled her dick out, only to immediately shove it up Valery's asshole, resuming her thrusts. The nun's ball sack swung like a pendulum, smashing against Valery's ass and lower back.\n\nIt wasn't long before both Kristanna and sister Beth both erupted in another orgasm. As the nun tensed her body and pounded, her ruined cunt still expelled some of Kristanna's cum lodged in her womb. Valery was pinned to the bed, she barely noticed what was happening around her, stuck into a multiple-orgasm loop. She just rolled her eyes, lactating all over the place and asking to be punished. Aisha, on the other hand, began to smile as she finally felt the gallons of spunk pumping inside her belly. She milked Kristanna's cock as tight as she could, rolled her eyes and threw herself back. Her arms wrapped around Kristanna's neck as Aisha just sat on her lap, her abdomen increasing in diameter by the second. The redhead held on to her, nipples also squirting milk all over Aisha's body. At this point the Hispanic girl just showered Kristanna defined abdomen with her cunt juices, her mind drowning in permanent ecstasy.\n\nTowards the end of her climax Kristanna stood up, powerful jets flying back from her cunt splashed on the bed behind her. She still held Aisha in front of her, who promptly wrapped her legs around the redhead's waist, her ankles resting above those fat ass cheeks. It was easy to hold on to Kristanna with that hourglass figure. The redhead turned towards the bed, grabbed Aisha's ass cheeks and spread them apart, \"Come fuck her with me, sister!\"\n\nThe nun finished cumming inside Valery, leaving the girl practically unconscious, bloated belly, lying on a pool of her milk. Sister Beth then turned her head slowly towards Kristanna. The dark circles around her white eyes gave her a terrifying look, \"As you wish, my angel\" She whispered with a sensual tone, hopping off of the bed and approaching Kristanna. One of her hands immediately caressed Aisha's ass, she stared at that marvelous backside as if it was the most delicious thing in the world, licking her lips with excitement.\n\nThe nun grabbed her dick with one hand, it was bigger by a couple of inches. She guided the head to Aisha's hole, even if there was no way anything would fit in there with Kristanna's mammoth dick inside. But the nun didn't care, her desire was unquenchable. With persistence and force, the nun found a way to stretch Aisha's asshole enough to place her cock head inside. Aisha protested, her hands scratched Kristanna's back. But it was short-lived as sister Beth wrapped a hand around the girl's mouth and used the other to pull her hair back, violently submitting her.\n\nBoth cocks began to take turns sliding in and out of Aisha's asshole, rubbing on each other. Chunks of Kristanna's thick cum occasionally poured out, lubricating the double anal penetration and aiding on the complete violation of that asshole. It stretched impossibly wide, almost prolapsing at times. Kristanna mostly stood still, holding Aisha and thrusting her hips slightly, with limited freedom to move. Meanwhile, the nun pounded with much more vigor from behind, doing wide thrusts, pulling over half of her dick out before shoving it in again. She felt her ball sack swing and smash against Kristanna's when she went all the way in. Aisha just stared at the ceiling with a blissful expression. Placing her hand on her distended belly and feeling the dicks churning inside, fighting for space and trying to poke out of her torso.\n\nThey must have pounded in Aisha's asshole for over five minutes before reaching another orgasm. Kristanna shoved her face on Aisha's breasts, grunting and thrusting involuntarily, her entire body spasming with bliss. When the redhead came it was like an explosion of fluids in all directions. Sister Beth also came, feeling her dick engulfed in the mix of warm cum inside Aisha's asshole. The chunks of white goo dropped constantly to the floor under Aisha, overflowing out of her gaping asshole. She couldn't do much but let herself be filled, losing count of how many times she had already come. Aisha's body gradually became limp, leaning towards sister Beth or Kristanna depending on who had hammered her last.\n\nSister Beth feel back on the bed, panting and delirious, a permanent smile stuck to her face. Kristanna stumbled a bit and placed Aisha next to the nun, watching her ruined asshole pouring constantly. She swore she could almost fit her head in that distended hole, it looked more like a cave, spasming softly as Aisha tried to flex it.\n\nAs the redhead stood there she watched her three lovers on the bed, all exhausted, all bloated with cum. The veins in her dick bulged thicker, making it throb. It was still hard, and so was sister Beth's. Valery suddenly began to crawl out of the bed, she fell on the floor next to the lamp and slowly made her way to the door. Seeing this, the nun quickly got herself up and stumbled ahead of the blonde, blocking her way. She grabbed Valery by the hair and dragged her to the side of the bed. The blond girl looked up in fear while sitting on the floor, leaning her back on the bed. Stroking her dick, sister Beth looked down in anger at the blonde, You're not getting away!\" She aimed her cock at Valery's face and forced it past her lips.\n\nThe nun held Valery's head with both hands, gripping her hair with her newly acquired claws, \"If you truly repented, you wouldn't try to run! You're still a sinner, child. Unholy!\" Kristanna watched that scene with a smile, her dick drooling cum on the floor.\n\nSister Beth kept fucking Valery's throat, she looked up towards her angel, \"Am I helpful, my angel? Is this good enough to purify them?\" There was something uncanny and excessively cheerful in sister Beth's voice, her newly changed eyes had a dark glow to them. At the center of the nun's forehead, a small inverted pentagram was formed, like an emerging tattoo with a dark red hue. Kristanna just nodded, \"You couldn't be more perfect, dear.\"\n\nTonight was going to be long and hard."
    ],
    "authorname": "Kristanna",
    "tags": [
        "orgy",
        "excessive cum",
        "double anal",
        "futa on futa",
        "corruption",
        "transformation",
        "domination",
        "squirting",
        "lactation",
        "futanari"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/camp-of-blessing-ch-07"
}