{
    "title": "Lacy Underwear, or Not",
    "pages": [
        "YES! \n\nAnother sweltering shift at the giant warehouse store was finally through, and after lifting a thousand dirty boxes all night I was filthy and starving. I used to clock out an exhausted heap after all the strenuous exercise, but lately I'd been feeling more stimulated after work, physically and mentally. \n\nI'd been at this job for a couple years to get me through college, as the early morning hours coordinated well with my classes. Being in the midst of summer break however, my schedule was more relaxed and my days were actually free, so I headed straight home. \n\nAs I unlocked the door to my apartment around 8:30 in the morning, I was greeted by a bright and sunny, \"Good morning!\" bouncing my way from down the hall. It was my roommate Lacy, who was often just waking up when I trudged in from work. \n\nLacy was an ex-girlfriend from high school, (not to mention the couple of flings we'd had since then), but after too many fights and a hundred petty differences, I was thrilled to call her 'just a friend', and somehow . . . my roommate. \n\nAs the lease ran out on my previous place I was desperate for a quick renter to help with expenses. Lacy happened to be searching as well, and suggested we split a place together seeing as how we both had steady partners. It seemed ridiculous at the time, but the fact that we were otherwise attached was the only reason I had even considered it. There was no way in hell I'd have ever agreed to us living together as anything other than friends. \n\nLacy was definitely a great friend though, and we got along famously when we weren't emotionally involved; I had to figure there was a chance we could make it work. We each assured our significant other the arrangement would be totally platonic, despite our intimate history, and that we just needed a good living solution for a while. \n\nMy girlfriend Samantha, who lived outside of town, was hardly thrilled in the slightest. The girls knew each other from school, and didn't really see eye to eye. Sam actually warned me if I ever hooked up with Lacy while we were living together she'd have me hunted down, drawn and quartered. She wasn't joking. \n\nSo, with that delightful image keeping my head about me, we moved in. \n\nIt actually worked out well as we got settled. Lacy worked in the afternoon and went out with her boyfriend or friends after work. I would hit the sack early in the evening and was up around 3:00am. The only time we even saw each other was on the weekends, or early on summer mornings. \n\n\"What smells so good?\" I called down the hall. \n\n\"I'm making breakfast,\" Lacy shouted back, \"so I'm glad you came home.\" \n\nI'd often stop at a local pub with some workmates for eggs and coffee in the summer, and wouldn't finally roll in until closer to 10:00. \n\n\"Well I'm starving,\" I voiced back, \"thanks for cooking!\" \n\nI set my things down in the hall and considered a quick shower. I was excessively grungy, and I'd typically hop right in after walking through the door. \n\n\"You're welcome, and it's almost ready so don't shower,\" she said, reading my mind. \n\nI walked into the living room and sat on the couch, flipping on the small TV and rambling through some channels. \n\nLacy padded out in her bare feet and a long baggy T-shirt, flopping down next to me on the couch. \"So how was work?\" she asked, looking clean and fresh, especially compared to me. Her short blonde hair was damp and smelled like flowers. She pulled her bare legs up underneath her and looked at me for a reply. \n\n\"Same as usual,\" I sighed. \"Carl from receiving asked if I wanted to jam with him and his buddies this weekend, so I think I'm heading over there tonight.\" \n\n\"Sounds cool,\" she said, \"What does he play?\" \n\n\"I hear he has a pretty impressive drum kit,\" I said, getting excited thinking about playing with some new musicians again, \"and he was actually in the Drum Corps Elite marching squad for a time, if you can believe that.\" \n\n\"You're kidding, that's amazing!\" she said, placing a hand on my leg with her eyes wide, \"they're awesome!\" I knew she was speaking from experience because not only had Lacy been in marching band through most of high school, but her older brother also taught Drum Corps at a local level. \n\nI felt a little awkward tension appear as her hand stayed on my leg for longer than normal. I didn't think much of it really; she was just a touchy person. That was how she talked to people, and I was well aware of it. \n\nI glanced down at her hand, which she moved a little to let me know she realized it was there. My eyes also registered the fact she wasn't wearing much under her shirt, as her bare leg kept going as it crossed underneath her body. Was she sitting there in just a T-shirt and underwear? \n\nIt figured. Lacy was hardly self-conscious and could be pretty casual around the house, believe me. She would often take advantage of having a roommate she knew had seen her in all her glory, and would forego certain civilities she'd typically have in place for anyone else. In the mornings she knew it was just us, a couple of good friends who could hang out in whatever they happened to be comfortable in. \n\nI had to steer my focus back to the conversation. \n\n\"I'll need to grab some new strings and fix my pickups if I'm going to play with them this weekend,\" I said, trying to keep my eyes to myself. \n\nWorking at the warehouse store was like an intense exercise every day, so my blood was warmed and my skin was sensitive to every input. The strange combination of her soft hand on my thigh and the sight of her smooth bare legs started getting to me. \n\n\"Where are you going then,\" Lacy asked, completely unaware of my racing mind, \"to play I mean.\" \n\n\"Carl, lives on campus,\" I half gulped, \"just down from fraternity row. They soundproofed the walls in the basement so we should be able to get pretty loud.\" \n\nShe rolled her eyes at that one. Lacy wasn't a fan of rock music, and constantly mocked my tastes. Not that I didn't give it right back, teasing her about her ever-changing infatuation with whoever was the hot flavor of the week. Our little conversations always gave us gentle reminders of why we were just friends, and never fared well as a couple. \n\nShe finally withdrew her hand and crossed her arms next to me and looked at the TV. \n\n\"The breakfast casserole should be just about done,\" she said with a hint of pride to her voice, \"I sure hope you're hungry in there . . .\" \n\nI looked down at myself and shuddered at how much dirtier I got in the summer months with all the sweating and lifting we did at work. I was amazed again at the stunning contrast of Lacy's clean shirt and smooth legs right up next to my grunginess. Glancing down, I noticed something else. \n\nOnce Lacy had folded her arms, the lowest edge of her shirt rode up and I could see more of her hip, like, all of it, and it was completely bare! Now I had to wonder if she was sitting next to me without anything on under there. The thought really got to me, because even for her that was a little much. \n\nShe kept talking but I stopped listening. My jeans were getting tight and I felt my throat drying up. I knew I'd seen it all from her a thousand times, but there was something about the morning sun and my sore muscles that made it that much more sensual to me. \n\nI was sure she thought nothing of it. I mean, I know for a fact she was well aware she was sitting next to me in just a T-shirt, but to her it didn't mean anything. She was just padding around our place like it was home. \n\nI felt bad for noticing and thinking it was sexy of her to sit around with no underwear on. My girlfriend Samantha was gorgeous, but definitely not as open about her assets as Lacy had always been. I started to smile on the inside, thinking I was pretty lucky to have such a carefree spirit for a roommate, and one who even cooked breakfast! \n\nThe timer rang over the oven, to which she placed her hand on my thigh again to boost herself up. I followed her with my eyes, and the shirt fell quickly into place, covering everything I thought I had seen. \n\nWas I hoping for a peek at her bare ass or something? \n\nI tried desperately to get her near-nakedness out of my head by staring at the television, but I couldn't do it. I was feeling strange and inappropriate, wanting to hit the shower to get my mind off of her, but it was too late. \n\n\"Oh you're going to like this Michael,\" she sang from the kitchen. \"Come take a look!\" \n\nI hopped up easily, like one does after an extensive workout, and strode into the kitchen in my steel toed boots. I felt ten feet tall as I stood next to her petite form. She waved her hand over the shallow pan of molten food, wafting enchanting smells in my direction. \n\nThere was definitely bacon, eggs, maybe some maple syrup, hash browns and something else I couldn't quite place buried in that dish of pure succulence. It was a breakfast buffet in a single pan! I was so hungry I could have kissed her for joy. \n\nLacy put a couple cooling stands on the kitchen table and leaned over to set down the steaming pan. As she did, the neck of her shirt dropped silently away and my eyes wandered in without thinking. Sure enough, she wasn't wearing a stitch of god damn clothing under there! Her breasts hung naked off her chest, and a little tuft of curly fur was peeking up just beyond them, barely visible from deep inside that teasing shirt. \n\nIt was gone in a flash as she straightened and turned toward the oven, but man, my heart was racing! \n\nMy fingers shook as I picked up a spatula and started cutting sections from the dish as Lacy brought us some clean plates and forks. \n\n\"Wow Lace, this smells insane,\" I honestly groaned in admiration of her cooking prowess, while simultaneously trying to keep my mind off some of her other admirable qualities. \n\n\"Thanks Michael,\" she beamed as she sat down across from me, watching as I dished us both a plate, \"you know how to make a girl feel appreciated.\" \n\nShe stared at my hands as I pulled the succulent concoction from the pan. The mystery ingredient was definitely cheese, and it stretched from the pan to the plate like a rubbery web. \n\nI pushed a piping plateful across the table to her and began a sizeable portion for myself. Once my plate was towering with food, Lacy smiled a satisfied grin and took her first bite. I knew she liked it when I filled my plate; it meant I was really looking forward to her homemade cooking. \n\nI sat down and started immediately digging in, hot or not. \n\n\"Mmmmm, this is incrwwdbww!\" I mumbled across a mouth full of delicious food just before I swallowed. \"Where did you learn to make this?\" I asked, pulling another heaping forkful into my ravenous maw. \n\n\"Mom used to feed everyone before swing choir practice,\" she said as she swallowed a more human-sized bite. \"We'd all meet around six at our house and eat this same breakfast dish before heading out in the morning.\" \n\n\"Sounds like a good memory,\" I said honestly, wiping some cheese from my chin with a napkin. \n\n\"A great memory, actually,\" she beamed, half in remembrance and half proud of recreating another one of her mother's fine dishes. Lacy's mother Meredith had passed away 2 years prior from a surprising health related issue. I knew this was a soft spot for Lacy so I made sure to tread cautiously. \n\n\"She really knew how to cook, didn't she?\" I asked, poised to down another fork full of deliciousness. \n\n\"She was the best,\" Lacy replied with a positive light to her voice, \"I'm so happy I get to cook for us every once in a while. Kevin doesn't really appreciate it that much.\" \n\nLacy's boyfriend was an okay guy. He was a DJ at the local Top 40 station, and was one of the few I'd met that didn't have 'a face made for radio.' In other words he was actually a decent looking guy. The only thing that drove me crazy about him is that he was always 'on'. He never really kicked back and let his guard down, not that I'd ever seen anyway. \n\nHe would come to our place only on rare occasions. Since Lacy worked near the station, they would often stay out, and as a result I rarely saw them together. Maybe he didn't feel comfortable coming over with me around, or maybe they just enjoyed going out all the time and socializing in the 'scene'. \n\n\"You know he can come over any time Lace,\" I said, swallowing another mouthful of nourishment, \"I'm happy to find other places to keep myself amused if you need some time together here.\" \n\n\"I know, and you've always been great about that,\" she said, \"he's just never keen on the idea of coming over. He never says why . . . or at least he has a good reason every time it comes up.\" \n\n\"Sorry, I didn't mean to bring it up,\" I tried to change the subject, \"I for one count myself lucky to be the primary recipient of your fantabulous cheffery!\" She chuckled at that and we made small talk as we ate, drinking her succulent French press coffee as we did. \n\nAfter we finished I rose with my empty plate and contemplated filling it again; I felt like I could eat forever. I left it alone though and grabbed the pan, bringing it to the counter to cool before packing it away. \n\n\"Thank you for cleaning up Michael,\" she said over her cup of coffee. I turned to look, and from the side her shirt had pulled up casually around her waist again, like a T-shirt normally does. The way it was sitting on her legs made it very apparent she was indeed bottomless, sitting there with her bare butt right on the chair. She wasn't looking at me, just sipping at her coffee and staring ahead. \n\nI wanted to capture that moment, as it was pretty dirty in my own head. I knew she appreciated my tact about her casual demeanor, so I played it off as if it were the most normal meal we'd ever shared. \n\nWe definitely shared a lot over the years, and as we got older, our tastes drifted and our goals and dreams became canyons apart. Even though I always had a soft spot in my heart for Lacy, I knew it would never work out for us in the long run. \n\nShe loved action and change, moving with the pace of the world. Nothing stayed in her mind's eye for very long before she was off to the next shiny thing. She had always been that way, and it drove me crazy. \n\nI, on the other hand, could rarely find something that even sparked my interest, but once I did, I'd dive into it head first. I loved to read and research, exploring ideas and subjects thoroughly when I found something fascinating. Lacy was one of those fascinating subjects once, and I knew everything about her. What her favorite musical number was, who her favorite authors were, where she liked me to concentrate my skillful tongue at night . . . \n\nWe both realized we would never work together, but I had also been her go-to for sex between relationships as well. I rarely had a steady girl during those times, but I always welcomed her into my bed when a friendly visit turned intimate. \n\nSex with Lacy always seemed to begin as a subtle game during our relationship and afterward. For example, she would stop by to discuss something 'important'; then eventually she would have to show me the new bra she had purchased, or something just as signaling. She would casually lift her shirt to show off her bulging cups, and I would softly touch along their surface, appreciating the fine 'quality of fabric'. \n\n\"It feels like it'd be very comfortable in there,\" I would say, \"the material is so smooth.\" \n\n\"This is definitely the best one I own,\" she would say, trying to keep on subject, \"I mean you can't even see my nipples through this one.\" She would press her finger right there and push in a couple times, rubbing in a small circle where her nipple would be. Then she would drop her hand and wait expectantly for me to see what she meant. \n\n\"No, you sure can't,\" I'd say with my finger pressing in, \"Are they hard?\" \n\n\"A little I think,\" she'd reply, \"I guess I haven't really tested them that far.\" \n\nSo then I'd tease her nipple through the soft pad and pinch it a couple times to see if I could put it through the paces. I took my time with it, making sure I was really giving it the old boy scout try, while she just sat and watched my fingers press and pinch and squeeze and rub against her encapsulated breast. \n\n\"I still don't see any nipple through there,\" I would say after a time, \"either this is one sturdy bra, or it's not even hard.\" \n\n\"Oh it's hard Michael,\" she would reply, \"see?\" and with that she would pull her cup down and show me the knotted red nose on the face of her lovely naked breast. I would of course reach up and test it for hardness by tweaking it a little and looking intently while I did. \n\n\"Wow, I see what you mean,\" I'd say and start to toy with it a little more softly in my fingers. As I concentrated on the bare button, she would pull the other cup down to show me how both her nipples were actually hard. I would pay equal attention to both, tweaking and pinching her stiff buds in appreciation. \n\nWhen she stopped talking altogether and just breathed under my petting hands, I would slowly lean in and take a sweet nipple into my mouth. I wouldn't lick it, I wouldn't suck on it, I'd just leave her tender tip inside my mouth as I caressed the soft sexy skin around it with my hands. \n\nAt this point Lacy would reach back and undo her bra completely, making some excuse for it like, \"it even releases nicely without snapping back.\" Not even she cared about that. \n\n\"Mmmm,\" is all I would say around her wet nipple, sucking as much of her naked tit into my mouth as I could possibly fit. \n\nAt that point we were definitely going to be having sex, and very quickly she would just pull me up for a long sensuous kiss while we worked on shedding our clothes. \n\nSex with Lacy was always fantastic, and I think she liked having it as often as any man. Her tastes were a little risqu\u00e9, but not overly kinky. She liked to play games in the bedroom, and I always found it to be highly stimulating to say the least. She would willingly trade oral favors, and always had an orgasm during our little trysts, sometimes many. \n\nI could continually depend on memories of our encounters to get me erect if I needed something hot to think about on a solitary bout. Having Lacy living in my own home was a constant reminder of these times for sure, but we had also spent so many periods of being strictly friends with zero benefits, it was easy to see her as just a great friend as well. \n\nI couldn't help but wonder this morning whether she was just being extremely casual around me, or if she was seeing what I would do if she let it hang out a little in front of me. Probably the former; it was more than likely I was just worked up from all the exercise. \n\n\"Okay, now I really need to take a shower,\" I said. \n\n\"Yes you do,\" she said, \"I haven't seen you looking that dirty in a long time.\" She sipped her coffee while looking me in the eye and winked. \n\nNow I knew she was toying with me. I had to get out of there before I did something stupid, like saying what came out of my mouth next. \n\n\"Yeah, I keep forgetting how dirty you've seen me get,\" I said as I walked out of the kitchen and headed down the hall. \n\nI knew for a fact I would get a snappy reply, and her predictable nature shone through like a beacon as I heard her call after me, \"I seem to recall you having a thing for getting pretty dirty for a while there.\" \n\n\"You know me well Lace,\" I called back as I closed my bedroom door firmly behind me. I chuckled to myself. I really liked the playful banter we always shared. Too bad it always had to end up in some kind of crazy dramatic bullshit whenever we got together. \n\nI put on some music and started to peel the thin layers of grimy work clothes off my body. It felt so good to be free of them after a long sweaty morning of lifting dirty boxes. I grabbed a clean towel from the dresser and headed out to the bathroom. ",
        "I hurried past Lacy's room in my underwear, as I noticed she was back in there again. She was across the room digging through a pile of clothes on her closet floor. She was bent at the waist with her feet apart, and as I walked by I swear I saw her full moon naked butt sticking out! \n\nI stopped dead in my tracks past her door and leaned my head back to see around the frame again. \n\nWhoa . . . that was intense! Her creamy calves and thighs were full length on display as her shirt was covering none of it. I could almost see her lips between her bare ass cheeks due north, and as I looked harder I noticed her shirt had actually slipped to her shoulders, her pale naked breasts hanging free and upside down. \n\nShe was clearly searching for something and I dared not linger, staring at my platonic roommate in all her exposed glory. I made my way quickly to the bathroom and closed the door behind me. \n\nHoly shit . . . that was something else! Again I knew I had seen this girl a thousand ways, but that wasn't one of them. I couldn't get the image out of my head. Suddenly I had to run a cold shower! \n\nI climbed in and started the water running. The vision of Lacy bent at the waist was burned in my mind, and I started getting hard; very, very hard. I wanted badly to take care of it right away, but I just couldn't do that with her right across the hall. \n\nIt quickly occurred to me that since my bedroom door was closed, it also made a distinct noise when I popped it open. It also occurred to me that even though Lacy looked to be very concentrated on her task of digging for clothes, she must have been keenly aware she was basically bent over nude as my door popped open. \n\nShe wanted me to see her like that! She might have even set it up to be in that compromising position as I walked by, hoping I would catch her, no . . . knowing! \n\nI realized quickly what I was up against, and it wasn't looking good for me. I knew how weak willed I got around women, and so did she. What I wasn't sure of was whether she was just playing cat and mouse or if she was seriously trying to get with me. \n\nI thought about it while I showered and came up with a quick plan to find out. \n\n\"Hey Lace, can I borrow you for a second?\" I called out from the running shower. \n\nI heard the door open and saw a blurry head through the smoked glass door appear. \n\n\"What is it? I'm trying to get my laundry together,\" she told me. \n\n\"Well, you don't have to do this, but I could use a little help.\" I spoke evenly. \n\nShe entered the bathroom and closed the door behind her. Now, knowing her as well as I did, I knew for a fact was she was trying to stare a hole through that foggy glass door to get a look at me. \n\n\"Okay, well what is it?\" she said simply. \n\n\"It's kind of weird. I totally wouldn't ask if I could think of anything else,\" I dragged her along, knowing how her curious mind worked. \n\n\"You can ask me anything, I don't mind. Do you need help with your hard-on or something,\" she teased. I expected this, as she was trying to turn the tables on me. \n\n\"Ha ha Lace, you wish!\" I teased back, \"I just need you to scrub my back really hard with this loofa. After working out so much in the dense heat every day, my back is drying up and driving me crazy. I have no way to get to it, and I'm desperate. I know it's weird and all, and you can wait until I'm out of the shower if you want.\" \n\n\"Don't be dumb Michael,\" she replied, \"You need some good soap and probably an exfoliating scrub for that. Hold on.\" \n\nI smiled as I knew my idea would get her. I listened intently as she started digging around in one of the overflowing drawers of beauty supplies in the vanity. \n\n\"What are you doing?\" I asked, trying to sound annoyed. \n\n\"I told you I need my exfoliating scrub,\" she replied. \n\n\"I don't need any of your lady potions,\" I joked, \"I just need a good chunk of tree bark or something.\" \n\n\"Ha ha Mr. Funny Guy,\" she snorted, \"this isn't a potion, it's a scrub that's full of emulsifiers for removing dead skin.\" \n\n\"What the hell is an emulsifier?\" I continued with my charade. \n\n\"Jeez, it's like liquid soap with sand in it. It'll really scrape at your back,\" she said in a huff. \n\n\"Oh, that sounds okay,\" I said, \"Should I just sit on the edge so you can foliate my back?\" \n\n\"Ex-foliate.\" \n\n\"Whatever.\" \n\nI turned off the water and cautiously slid the door open. Lacy was standing there with a shiny white tube of something in her hand. She waved it at me and gave me a \"Well?\" look. I opened the door wider and kept my body behind the protective cover of the glass, laying a wash cloth over the sharp door track. \n\n\"Good idea,\" Lacy said, \"hand me your loofa.\" \n\nI reached my hand out with the spongy ball, and then turned around and sat on the edge of the tub with my back facing out. \n\n\"Wow, you really do need this don't you? Poor guy,\" she said as she inspected my exposed back with her light touch. She dragged her fingers up and down my rough and peeling skin, which had honestly been driving me insane. \n\n\"You aren't going to be looking at anything else are you,\" I asked with a wry twist. \n\n\"Just your back, Mr. Paranoid,\" she quipped at me, \"and anything else you might leave hanging out.\" \n\n\"That's what I was afraid of,\" I shot back. \n\nI heard the sink turn on behind me and the water splashing around. Then Lacy returned with a wet loofa dripping down my back. \n\n\"Let me get some of this on you first,\" she said, completely businesslike. \n\nI felt the first squeeze of cream drip out onto my upper back and then she spread it around, working its way down to my lower back. It was thick and felt like peanut butter. \n\n\"There, that should be plenty, now this might hurt a little,\" she warned and started dragging the scratchy cream around on my back, starting between my shoulders. It was very abrasive, and the way she moved the loofa I could tell she was adept at using this type of product effectively on dry skin. \n\nAt one point I felt a hand resting on my lower back while the loofa in her other hand worked its magic. \n\n\"How's that, does it hurt?\" Lacy asked. \n\n\"Not really, but I can definitely tell it's working,\" I said, trying to keep my balance on the edge of the tub. \n\n\"Well this should really peel that junk off of there for you,\" she added putting her back into it. \n\n\"Thanks for doing this, I know it's awkward,\" I said. \n\n\"Oh please Michael,\" she said as she pushed downward using two hands now, \"It's nothing, now lean forward a little.\" \n\nI leaned over and felt her hands rubbing the lotion around on my back without the loofa now. \n\n\"This should sit for a minute before we scrub it out,\" she mentioned, and then I smiled knowingly as she chirped, \"Oh shit!\" \n\n\"What?\" \n\n\"I got it all over my shirt,\" she said. \n\n\"Well rinse it out,\" I suggested, knowing this was most likely her intention anyway. \n\n\"No, I'd have to take my shirt off,\" she feigned, \"you're already naked and I would be topless. \n\n\"Why, aren't you wearing a bra?\" I slyly asked. \n\n\"Well, if you must know . . . I'm not.\" \n\n\"What!? You mean to tell me you're on the loose?\" I said in mock contempt. \"Well, I don't think you should be in here like that. In fact, maybe you should just leave; I'll take care of it.\" \n\n\"Please, like I'm that much of a prude I wouldn't pull my boobs out in front of you,\" she proudly stated, \"There's nothing here you haven't seen before.\" \n\n\"True. Go ahead then, I don't mind.\" I said. \n\n\"Well, there's something else,\" she muttered. \n\n\"There is?\" \n\n\"Yes . . .\" \n\n\"Well?\" \n\n\"I'm actually only wearing this shirt,\" she said matter-of-factly. \n\n\"What!?\" I feigned disgust, \"So you're naked under there.\" \n\n\"It's just that I'm out of clean everything and I'm getting ready to do the laundry now,\" she quickly explained. \n\n\"Well, I guess that is a little much,\" I resolved, \"that's okay Lace, I'll take it from here.\" \n\n\"What if you promised not to look,\" she suggested. \n\n\"I could do that for a couple minutes I guess,\" I said, \"This is just between us then? I wouldn't want Kevin getting all pissed that his girlfriend was giving her ex-boyfriend a naked back scrub.\" \n\n\"Please,\" she retorted, \"Kevin gets hugs and shoulder rubs and who knows what else from all the radio groupies that are always climbing all over him. I wouldn't care if he did find out. What about S-a-a-m?\" she sang her name out like a child. \n\n\"Sam is Sam I guess. I'm not sure what's going on there,\" I revealed honestly, \"I mean I've been giving it a try, but I'm not really expecting much.\" \n\nWhile I was talking I heard what sounded like a piece of clothing coming off. \n\n\"Lace?\" \n\n\"What.\" \n\n\"Are you naked?\" \n\n\"Yes Michael,\" she replied with a familiar hint of playfulness to her voice, \"now don't go getting all excited, this is strictly business and just between friends.\" \n\nYeah right. I knew better, and her dander was definitely up at this turn of events. I stayed leaned over looking at my feet in the tub while I heard her rinsing out her shirt in the sink. When she was done she came back and rubbed her hands into the lotion on my back. \n\n\"Oh, that's definitely working, just a little more,\" she said as she placed a hand on my shoulder. \"So not expecting much huh? That doesn't sound promising.\" \n\n\"I know, and it seemed so good at first,\" I said, trying to keep my mind away from the fact that Lacy was standing behind me completely nude. \n\n\"I could tell she was no good for you . . .\" she stopped, quickly correcting herself, \"I mean, what I meant was, she doesn't deserve someone like you.\" \n\nI could feel her leaning a little closer now, her hand still on my shoulder. Something, a bare hip perhaps was up against my back. She started rubbing my shoulder and stammering on. \n\n\"You need someone who will be there for you a hundred percent,\" she was absentmindedly stroking my neck now. \"If I didn't know better, I would say you've already moved on, in your head at least.\" \n\n\"That could be,\" I agreed, \"I'm just never sure in these situations. I just seem to get caught up for too long.\" \n\nShe let go of my shoulder and moved back to the sink to add some water to the loofa. When she came back I felt the water dripping down my back and butt onto the washcloth under me. \n\n\"I know you do,\" she said as she started scrubbing my back again with both hands, \"You seem to be unable to have an uncomfortable conversation when you need to. You just have to level with Sam about where the relationship is going; seriously.\" \n\nHer vertical scrubbing turned into quick swirling circles on my back. \n\n\"I know, there's just never a good time,\" I confessed, \"we're always around other people. When we're finally alone I'm too exhausted from having been up so early that I have just enough energy to, well, I'm sure you can guess.\" \n\n\"Have sex Michael?\" she blurted out, \"I know what you do, I can hear you two going at it in there.\" One of her hands left the loofa and rubbed my bare skin on its own while she continued to drag this out. My back was clearly exfoliated by now. \n\n\"You can?\" I asked, \"Sorry about that.\" \n\n\"Don't be sorry,\" she said, \"We're roommates, that how it goes sometimes. Just turn up your music a little louder next time.\" \n\nMy face burned and I chuckled, \"Okay, I'll try to remember.\" \n\nThen Lacy was done with my back and said, \"That should do it. Now stand up while I rinse this out. I need soap in here next to get that scrub off.\" \n\nShe turned to the sink behind her and I took that opportunity to get my naked body behind the screen. My erection wasn't full or anything, but I still wanted to keep this game going. It was kind of fun to see how far I could push it. \n\n\"Okay, you're going to have to rinse this,\" she said, \"The sink isn't getting the lotion out.\" \n\nI turned the water back on and put my hand outside the door for the loofa. She placed it in my hand and I could see the cloudy silhouette of her naked body behind the glass. I ran the loofa under the stream of water and turned the dial head to massage. That was working, but also spraying water out the open sliding door. \n\n\"Hey,\" she started, \"You're getting me all wet out here.\" \n\n\"Sorry,\" I said over the sound of the water as I finished. \n\n\"Now put some body wash on there and hand it back,\" she said to me. \n\nI squirted a good amount of wash onto the loofa and worked it into a frothy lather. I held it in front of the open door, but inside the shower. \n\n\"Perfect,\" Lace said grabbing the soapy implement from my hand, \"Now back over to me so I can reach.\" \n\nTentatively I turned to face away from the door and backed over to it, knowing full well that she could see my naked butt as plain as day now. I decided to stay a bit into the shower so she would need to reach for it. \n\nShe quickly began to soap up my back and remove the thick lotion without saying a word. I knew her mind was racing with how naked we were. I was in a safer position because I couldn't see her nudity. She didn't have that luxury, and she was basically soaping up my bare body just above my naked butt, knowing she was doing it in the nude. \n\n\"Ah,\" she said frustrated, \"the water's spraying all over the floor, back up would you?\" \n\nI took a step back to the door and then she started really soaping up my entire back. It felt so good and she was so gentle. Her soft hands roamed all over my back and started getting most of my sides and then easing gently down to the top of my butt. Shivers ran up my arms. The smooth soapy strokes were getting to me and I could feel myself getting harder underneath the spray of the showerhead. \n\nShe soaped above my ass and set both hands on my hips for a moment. I knew she needed a reason to continue touching me, but we were done. There was no reason for her to linger, but I knew she wanted one. \n\n\"Are you finished back there,\" I asked, seemingly impatient, \"I'm standing here naked you know.\" \n\n\"So am I Michael,\" she came back, \"in case you've forgotten.\" \n\n\"Oh I haven't forgotten Lace,\" I replied, \"I am well aware that we're both totally naked in here now. Can I rinse off?\" \n\n\"Yep, all done,\" she said handing the loofa around my waist to me, \"that wasn't so hard was it?\" \n\n\"I wouldn't say that,\" I said, turning to the side to rinse off my back, showing clearly the erection she had caused with her soapy lathering. \n\n\"Michael!\" she announced, \"you've got a hard-on!\" \n\n\"No kidding, you were really soaping me up back there Lace,\" I said through the water spray with my eyes closed. I knew if I stood in the spray it would allow her plenty of time to get a good look at my mostly erect cock. \n\n\"Oh, uh sorry about that,\" she said, still lingering naked in front of the open door to the shower, \"I didn't realize it was having that . . . effect.\" \n\n\"That's okay,\" I said, \"I'll just take care of it myself once you're gone. Thanks again!\" \n\n\"Ew, all over the shower?\" she acted very offended. \n\n\"No, not all over the shower,\" I retorted from under the spray, \"I just cum in my hands, and then I run it through my hair for extra body.\" \n\n\"Yeah right,\" she said, knowing I was teasing her, \"I don't think so.\" \n\nI peered quickly over at her and her eyes were glued to my cock, making it swell even more. Her eyes widened slightly. I peeked at her shapely breasts and bushy cleft through my watery squinted eyes. That wasn't helping. \n\n\"So tell me something Lace,\" I said in a conversational tone. \n\n\"What?\" \n\nI could sense her enjoyment of my question keeping her right where she stood. \n\n\"Why are you checking out my cock?\" I asked, looking her right in the eye. \n\n\"What?\" she caught herself and stammered, \"I wasn't checking it out, I mean I didn't mean to look, I was just . . .well you were standing there and I couldn't help . . .\" \n\n\"Haha, it's okay Lace,\" I smiled and let my eyes wander unapologetically over her entire bare body. \"I kind of like it. I mean, you've seen it all before right?\" \n\n\"O-of course,\" she said diverting her eyes and turning quickly to the face the sink. She caught my gaze again in the mirror however, and I let her see me look down to admire her naked ass in front of me. \n\n\"I know we're playing with fire here Lace,\" I continued, \"and I didn't mean for it to get all weird. I just want you to know something.\" \n\nShe turned back around to face me; I think her nipples were as tight as I'd ever seen them. \"What?\" \n\n\"This remains just between us, right?\" I asked. \n\n\"Of course Michael,\" she replied, \"what is it?\" \n\n\"I want you to know that you can look whenever you want to Lace,\" I said seriously, \"Any time we're alone and you want to see, just let me know.\" At that I turned to face her, my hard cock standing straight out in front of me. \"Is that too much for you?\" \n\n\"W-what?\" she stammered off-guardedly, glancing from my eyes to my cock and back. I definitely got her at her own game, if she had been playing one anyway. \n\n\"I mean it,\" I continued, \"You just say, 'let me see it', and it's out; just like this,\" I said looking down. She looked at my wet cock again and there was a faint grinding of gears going on in her head. She looked up quickly. \n\n\"Okay, that's just weird Michael,\" she said as she snapped out of it, putting her hands on her hips, \"I'm going now, and leaving you with your hard-on, to do . . . whatever. Jeez!\" \n\nWith that she grabbed her T-shirt from the sink and opened the bathroom door, stomping out of the steamy room. \n\nI smiled wide to myself as I knew I got her, and also that she would absolutely bring it up again. That was the game, and she wouldn't be able to let it go. Her mind would busily work on a plan for whatever reason. There was never any logic to her mind games, which is why our relationship never worked. I was too logical, and her little games only worked with me in the bedroom. \n\nI finished washing up and didn't feel the need to jerk myself off, I was too proud of my work. I dried off and strolled naked out of the bathroom with my towel over my shoulder to my room. Lacy was nowhere to be seen, so I just closed the door and got dressed for the day. \n\n*** \n\nI hadn't seen Lacy again that morning, and I assumed she was doing laundry as a way of avoiding me. I created an awkward rift between us and I knew it. I was okay with that, because I also knew she was very good at confronting an awkward situation once she knew how she would handle it. I couldn't imagine what she'd come up with, but I did know she would escalate things rather than downplay them. What I didn't know was why I even wanted that. \n\nI headed out with my six-string in hand to the guitar shop and then to Carl's house to play some music, drink some beers and see where the weekend took us. I ended up having a great time with the guys, and crashed on their couch overnight on Friday. We played music all day on Saturday and got pretty loaded Saturday night. Having no desire to wake up in the same clothes again on Sunday, I grabbed a cab and made my way home. \n\nI unlocked the apartment door to the sound of music and the smell of lemons. I knew immediately Lacy was home and in cleaning mode. This was common on a Saturday night, as Kevin would be on the air until about 1:00am. \n\nI stumbled in feeling fairly inebriated and set my guitar case by the door. \n\n\"Hi Michael,\" I heard Lacy call from the kitchen, \"how was Carl's?\" \n\n\"Hey Lace,\" I replied, rounding the corner to see her scrubbing the kitchen sink in her typical cleaning overalls and a hot pink T-shirt. \"It was cool; those guys really know how to play. Who knew my classical training would actually come in handy one day?\" \n\nLacy was looking back at me occasionally over her shoulder while she continued to scrub. She dropped her sponge after a minute and rinsed her hands in the sink as I continued. ",
        "\"In fact, I think we found a great style, combining Carl's technical drumming with my heavy riff . . . riffing . . . riff, making, ness . . . \" \n\n\"You're wasted Michael,\" she said with a sly smirk as she looked me over, noticing the obvious impairment of my mental and motor skills. \n\n\"True,\" I said, knowing she was well aware I would often stumble in as such on a Saturday night while she cleaned. It was getting to be a bit of a ritual. \"What do we have to eat?\" \n\nShe wiped her wet hands on a towel and opened the fridge, leaning inside. I liked her work overalls because they had holes in places that allowed me to see bits of skin peeking out. Even though it was mostly leg, there was something about it I found intriguing. \n\n\"I suppose you could make a sandwich,\" she said, digging around in one of the drawers, \"we have everything you need.\" \n\nA sandwich sounded perfect in my current state, and I walked up behind her and peered into the fridge over her shoulder. \n\n\"That shounds great,\" I sort of slurred out, realizing I did as soon as it came out. \n\n\"Jeez you're buzzed,\" she said as she stood up and turned to face me. Her nose came to about my chin as I looked down at her. I knew she had no sense of personal space, so her close proximity didn't faze me as she looked up. \n\n\"I know,\" I said, \"I'm so ashamed.\" I put my head down in mock despair. \n\n\"Yeah right,\" she said with a gleam in her eye. I knew she loved having a position of power in a situation; and with me on the cusp of being actually drunk, she knew she could have fun with me. \"Make your sandwich,\" she said reaching up and tapping a row of dainty fingers against my cheek. \n\nShe stepped aside and picked up her cleaning gear again as I reached in and started gathering ingredients. I filled my arms, which in my current state was a struggle, and I thought I had it under control until a squeezable jar of mayo slipped from the bottom and crashed to the clean floor. \n\n\"Crap!\" I exclaimed as I brought the rest of the foodstuff to the adjacent counter, stepping over the bottle. \n\n\"You klutz,\" Lacy said as she came back by me to retrieve the fallen condiment from her freshly cleaned floor. \"You're lucky it didn't break. Here.\" She handed me the bottle and I thanked her sheepishly as I turned in my daze to fabricate of some semblance of a sandwich. I could feel her eyeing my every move, watching to see if I'd even be able to build one in my stupor. \n\n\"You better let me do it,\" she said as she saw me struggling just to get the twist tie off of the bread bag. \"I can't even imagine what you'd end up with if I let you go wild in my clean kitchen with all this stuff.\" \n\nShe held out her hand and I placed the bread in it, stepping to one side to watch her easily pull out a couple slices. \n\n\"Thanks Lace,\" I said, blushing at my inability to function at simple tasks. \n\n\"That's okay . . .\" she said, and I knew there was more. \"I don't mind taking a break from cleaning our kitchen to make you a sandwich. Let's just say you owe me one.\" \n\n\"Of course, I'll clean the next time,\" I offered as a way to make myself useful sometime in the future. It was all I had. \n\n\"I like cleaning,\" she replied, spreading the mayo across the face of the crusty white bread, \"what else you got?\" \n\nNow I knew where this was headed. She wanted me to sweat while I watched her doing something for me. I couldn't really think straight, so I just went with, \"Okay, what do you want?\" \n\nShe was silent for only a moment, and then softly said, \"Let me see it.\" \n\n\"Huh?\" \n\n\"Let me see it, you know,\" she looked up into my eyes and then down to the front of my jeans. \"You told me to just say the word, and now I am. Let me see it.\" \n\nI couldn't believe she was using this night to get back at me so quickly. She had me mentally on my heels and I could hardly form a complete sentence. I must have looked like a deer caught in her headlights because she set the knife on the counter and turned right toward me, putting her hands on her hips. \n\n\"I mean it Michael,\" she said with the mischievous gleam she'd often get in her eyes, \"Let me see it and I'll finish your sandwich. You're the one who put it out there, and I know you weren't drunk when you said it. Let me see it.\" \n\nI was caught in my own web. I had been trying to get her to flinch in the bathroom the day before, and it worked. I really didn't expect her to come back at me with my own teasing game and call me out in the kitchen the first chance she got. \n\nShe stared at me. \n\nFortunately my inhibitions were down from the beers so I shrugged my shoulders and reached for my zipper. Lacy's eyes were on my hands, her raised eyebrows framing an expectant look as if she was waiting for me to get out a hundred bucks I owed her. \n\nMy pants were undone and my boxers were all that remained between her keen eyes and my naked cock. I knew I couldn't get out of showing her, and it was a little different than when I did it in the bathroom. In there she was naked as well, and I had a hard-on which helped me to look more . . . notable. Now it was just my drunken cock on its own, for whatever end. \n\n\"Well?\" she said, \"I know you don't need help here, you're always pissing when you're drunk. Let's see it.\" She knew she had me, and I knew it too. I pulled the front of my boxers down and there it was. I wasn't completely flaccid, thankfully, and my cock emerged as Lacy's eyes widened. \n\n\"Ah, there it is,\" she said as she stood and stared at my stuff for few long seconds. \"I have to admit Michael, I thought you were full of shit yesterday, but you did it.\" She pulled her eyes away, turned, and just continued with my sandwich. I stood there with my right thumb pulling my boxers down and my cock out for no real reason. I figured I did what I said I would, so I covered back up. \n\nLacy started piling on cold cuts and said, \"Kevin is working extra late for the Funky Freaky Dance thing they're doing, so I'm hanging here tonight, is that cool?\" Her eyes were on the sandwich. \n\n\"Sounds good to me Lace,\" I managed, zipping up my fly. \"I don't know how much longer I'll be of much company but we can hang out if you want.\" \n\n\"Either way, I'm going to finish cleaning before I do anything,\" she said as she folded the bread over, finishing the sandwich. \"Here you go.\" \n\nShe turned and handed me the plate with the scrumptious looking sustenance atop it. I took it from her and she kept my gaze. \n\n\"Thank you for showing me,\" she said politely, \"you have a very nice cock Michael.\" \n\n\"Oh, uh, thanks Lace,\" I started, not sure what to say, and off my game completely, \"any time.\" \n\nAny time? Did I just say that? I took my sandwich and sat down to eat while Lacy continued tidying up in the kitchen. I watched her ass stretch against the thin overalls as she bent over to clean the cupboard doors under the counter. I was admiring the bits of thigh peeking out as always and my brain seemed to be fixated on her body as I ate. \n\nShe looked back, seeming to catch me staring at her and asked \"How is it?\" \n\n\"How is what?\" \n\n\"The sandwich dummy,\" she chuckled, \"what did you think I meant?\" \n\n\"Fantastic!\" I blurted out, steamrolling right over her question, \"I've never tasted anything so good.\" \n\nShe smiled knowingly at me and turned around again to finish her work. \n\nEventually I finished eating and Lacy had cleaned her way into the next room. I put my plate in the dishwasher and wandered into the living room where Lacy was dusting. I stood there wondering if should sit; I couldn't very well help, and she seemed to sense this and looked at me. \n\n\"Are you going to watch something?\" she asked, carefully wiping the top of a lamp with a dirty cloth. \n\n\"I'm not sure,\" I said, slightly swaying in place. \"I feel like I should be helping.\" \n\n\"Don't be ridiculous Michael,\" she said, \"You would do more harm than good. Besides, I like cleaning. It's my Zen time, and you don't have to feel guilty about letting me do it. Why don't you go get comfortable and I'll be done in here in a minute.\" \n\nIt was a great suggestion and I nodded, turning my heel and making my way down the narrow corridor to my room. As I passed Lacy's room, I noticed that there was a pair of her panties on the floor right inside the door. This was quite typical, as oddly enough her bedroom always seemed to be the messiest room in the house, but it caused my mind to flash back to the image of her bending over and digging through her laundry. I started getting aroused again, and moved quickly into my room to escape the reminder. \n\nKnowing Lacy was busy, I didn't close the door and just unbuttoned my shirt and pants, looking for my sweat shorts. I couldn't find them so I just grabbed a T-shirt and threw it on. She had already seen my dick tonight; I should be fine in my boxers I figured. \n\nI wandered back out and Lacy was just finishing her dusting and putting away her things. She looked up at me, gave me a once over, and said, \"Perfect, I'll be back in a minute.\" \n\nWith that she hoisted her cleaning products carrier up and made her way to the kitchen closet to tuck it away. I sat on the couch and found the remote on the gleaming coffee table. I was pretty lucky to actually live with someone who enjoyed cooking and cleaning. I would never ask her to do any of these things of course, being perfectly capable myself . . . well, sober anyway. \n\nShe walked past and down the hall to her room, and I flipped through the channel guide to see what was on. I found a documentary on giant construction equipment, and put it on to be funny, although it turned out to be quite interesting. \n\nWhen Lacy came out, she still wore the same pink shirt with short socks, and I couldn't tell what else. It was probably either just her underwear or nothing again, as all I could see was leg to the hem of the long shirt which came to about mid-thigh. \n\n\"What the hell are you watching?\" she said, sitting on the couch near me but comfortably distant. I was happy for the space as my cock started to harden as I pictured her naked again and smelled her sweet perfume settling over me. \n\n\"Just a documentary,\" I said, trying not to stare at her bare legs. She reached over and flipped off the main lamp, and the TV lit up the darkened room. \n\n\"Give me that,\" she said, holding out her hand. I handed her the remote with a smile, and her eyes met mine. They had a hint of mischief to them and she glanced down to my boxers. I looked down to see they were starting to tent and leaving little to the imagination. \n\nI looked back up and she was already aiming the remote at the cable box and flipping through the channels. After a minute she finally stopped on an old movie and said, \"Oh, here we go. Let me see it.\" \n\n\"Sure, we can watch this,\" I said, and then, \"wait, what?\" \n\n\"You heard me Michael,\" she said looking me in the eye as she set down the remote. \"You said any time. Let me see it.\" The look in her eyes was challenging. \n\nI knew right then that I was paying dearly for my mistaken cockiness in the bathroom. I really didn't think she would even take me up on my teasing offer, let alone rub my nose in it. \n\n\"Fine,\" I gave in, having little resolve left anyway. I found the open front of my boxers and reached in, finding my naked cock in a semi-erect state. I pulled it through the opening and lay it out in my lap for her to see. \"How's that?\" \n\n\"Very nice Michael,\" she said, eyeing up my growing cock. I was getting more aroused than I had hoped. \"You seem to be kind of excited.\" \n\nI looked at my bulging cock, \"It would seem so. Have you seen it now?\" \n\n\"I don't know,\" she said with the sly and teasing tone I knew so well. \"You could put him away, but I'll probably just ask you again, so why don't you just leave him out for a while to save us the trouble?\" \n\nNow she was playing with fire. She wanted to me just sit there and watch TV with her, my bare cock lying out the whole time! \n\n\"Are you serious right now?\" I asked incredulously. \n\n\"Dead serious Michael,\" she looked me in the eye with a challenging stare. \n\n\"I'll take my chances,\" I muscled up my last remaining nerve and tucked my member back inside my shorts. \n\n\"Fine by me,\" she said and looked back at the screen. We sat there for a while as the movie played, and honestly I couldn't have cared a wit about it. It was some black and white romance thing from the 40's or 50's, and I just never got those. I watched it though, waiting nervously for what I knew was sure to come. \n\n\"I'll let you change the channel if you show me again,\" she said out of the blue after about 10 minutes. I couldn't believe she was being so bold, and I was the one who had opened this door, all because I saw her bent over with her ass sticking out. \n\n\"Jesus Lace, what's with you tonight?\" I had to ask. \n\n\"Show me Michael, I don't need to explain myself. If I want to see your cock you have to show me, so let's see it.\" \n\nI was in deep shit now, and I could only respond by lifting my ass up and sliding my boxers down my hips and to my ankles. \"There, happy?\" I retorted as she openly turned to stare at my nude lower half. \n\n\"I guess,\" she said simply. \"Nice cock. Do you still stand behind what you said in the bathroom?\" \n\nThanks to the sandwich I was able to think about that one. It was a little thrilling to be sitting there with my cock out around her. I knew that neither of us could breathe a word of this to anyone, but we were also adults. \"I do.\" \n\n\"I'm glad,\" she said and handed me the remote, glancing down to my cock again. I took the controller and started to surf channels, stopping on a movie I knew we would both enjoy, and it had just started. \n\n\"Oh that's a good one,\" she said, turning back to the screen. We watched for a few minutes, and then I saw her look at my lap again. She saw me notice and smiled sweetly. She was really getting off having my cock next to her to look at. My bulge had subsided, and I was a little happy for that, but not for long. \n\nShe must have noticed too, because she leaned back on the couch and pulled up a knee to her chest, allowing her t-shirt hem to drop down her thigh, exposing nothing but bare skin all the way to her naked ass cheek. Fuck. She had been sitting there again with a completely bare ass, and I had only just caught up when I dropped my boxers. The thought traveled instantly to my manhood and I felt it begin to inflate at a furious rate. \n\nThe little vixen! I saw her smirk and peek to the side to see if her little show had the intended effect, and of course it did. Now she really let me have it. \n\n\"Holy shit Michael, are you getting hard right now??\" Damn it. I pretended not to hear, or that I had no comment, and she continued to push me. \"What's getting into you? I mean this movie isn't that exciting, is it?\" \n\nShe wanted to see me squirm, the way she squirmed in the bathroom, the last time both of our privates were out in the same room together. \n\n\"Did you just realize that I'm not wearing anything under here again? Is that it?\" She knew it was. \"My god, you're totally hard, look at you! You really like knowing my pants are off don't you? You're so bad!\" \n\n\"Me?\" I finally said, \"You were the one wearing almost nothing on Friday morning when I came home, and now?\" I should have kept my fool mouth shut. \n\n\"Is that it? Is that what this was all about? Did I turn you on running around with just a shirt on in my own place Michael? What, were you thinking about my tits while you ate my home cooked breakfast?\" \n\nI was a little too annihilated to come up with a coherent response. \n\n\"You were!\" a look of shock and accusation crossed her face as I looked away. \"You can't hide it! Is that why you called me into the bathroom? Did I get you all worked up Michael?\" \n\n\"You didn't have to stay, or take your shirt off you know,\" I was able to construct an intelligible sentence out of somewhere. My mind was still aware I was in hot shit. \n\n\"You liked that though, didn't you? Did you get a good look?\" \n\nI knew where this was going, and I didn't want to fight with her sitting there with our pants off, so I tried to turn the tables. \"Show me.\" \n\n\"What!?\" \n\n\"You heard me. Show me.\" \n\n\"Oh no, you don't get to say that. Only I do. That was your idea,\" she squinted, her challenging eyes on me. \n\n\"I never said it was just for me to say, and it's only fair. I've shown you, and now I'm totally out here. Don't think you can handle the tension? Come on Lace . . . just show me.\" \n\nA slow and silent resolve crossed her face, and I knew I got her thinking. \n\n\"Fine, just a peek,\" was all she said, leaning back and dropping her foot to the floor. From there her legs slowly crept apart, the shirt still covering any view between her legs. \n\n\"I can't see anything.\" \n\nShe spread her legs wider, one of them touching my own bare leg as it moved. Her shirt crept higher until I could just see her curly little hairs and the protruding lips of her . . . a HA! . . . fully aroused pussy! \n\n\"Mmmm, that a girl,\" I murmured in a cocky tone, and she instantly snapped her legs together. \n\nI definitely recognized the telltale puffiness between her legs in my momentary glimpse, the shine of the television lighting her up. I'd seen Lacy in this highly aroused state so many times, and it meant I was back in control. I knew how stimulating everything was to her once the heavy weight of arousal set in, so I decided to change my strategy. \n\n\"Oh, you're wearing panties,\" l said, knowing full well she wasn't, \"I thought you weren't.\" \n\n\"I'm not, genius,\" she said, her playful look telling me everything I needed to know. I sat silent for a minute, waiting for the next move, which came as quickly as expected. \n\nSlowly her legs parted again, and the empty space between her bare thighs began to grow. This time she reached down and raised the edge of her shirt, clearly showing me her private tuft of wily fur in the process. She gently tilted her hips so her swollen lips puckered out clearly from underneath again. \n\n\"See,\" she snorted, with as much of an act as she could muster. I knew her heat was rising. She loved the fact that my naked cock was right next to her and pumped full of steam. I was sure she knew she'd have me pull it out again, even while she was in her room changing. Her pussy was probably already soaking wet while she decided to come out in just a shirt. The horny little minx! \n\n\"Oh my god,\" I said softly, \"you're serious.\" She let me stare between her legs for a minute, looking down there herself. \"Look at that beautiful pussy,\" I said, knowing compliments would keep it out a bit longer for me. \n\n\"Don't get any ideas mister,\" she said, keeping her eyes fixed on her own distended labia. \n\n\"Like what?\" I asked with a hint of drawing her out in my voice. \n\n\"Like whatever ideas your hard-on is having there,\" with that she turned her head and stared right at it. I looked at my cock and it was long and quivering with excitement. \n\n\"What, this hard-on?\" I asked softly, wrapping my fingers around it and slowly pumping it up and down next to her. \n\nHer mouth stopped working for a second as she watched me blatantly holding and stroking my naked cock in the bright glow of the television. Her eyes were hooded and she seemed mesmerized by my movements. \n\nShe just watched in silence with her legs open and her bare pussy out, until her words finally appeared, \"What are you doing?\" \n\nI didn't answer, I just kept looking between her legs and slowly moving my cock skin up and down my erect shaft in the dim light. \n\n\"I can't help it,\" I finally whispered, \"I'm too hard.\" \n\nShe seemed to snap out of it, and slowly pulled her thighs back together until they touched in front of her. Her shirt was still up however, and the curly hairs between her legs formed a little brown shrub in the middle of her deep crevice. ",
        "\"Well help it,\" she said quietly and somewhat begrudgingly. She had always loved watching me stroke my cock for her. Something about it made her drip, I knew this almost instinctively. \n\n\"Fine,\" I said, and slowly backed my hand away. My bare hardness pulsed with anticipation and excitement, lightly swaying of its own accord in my pantsless lap. She could hardly force herself to look away, but did so and crossed her legs, folding her arms under her obviously unencumbered breasts. Her pointy nipples were so hard that a mere t-shirt was hardly a challenge for their aggressive prodding. \n\nI knew better than to make any additional comments or take further action, as just my throbbing cock out next to her was surely driving her deeper into her own perverted fantasies. What we were doing was completely wrong, and against everything we swore to when we agreed to be roommates. We hadn't crossed any physical lines, except maybe for the naked back scrubbing in the shower . . . shit. We were already way over the line. Even my own cock knew how close it was to being submerged in the slippery pocket between my ex-girlfriend's legs. \n\nI had to focus on the screen and forget about the blatant innuendo pulsing in both of our laps. We were horny, that was certain. I should have gotten up and walked away, but the tension was delicious. I loved that we were sitting together without pants on, unable to act on what we both had in mind. \n\nWe sat in an uncomfortable silence for a while as the movie played. Finally I had to say something. \n\n\"God Lace, I wish we were single,\" I admitted truthfully. I knew she felt the same way at that moment, but the fact remained . . . we weren't. \n\n\"Why's that Michael,\" she said with a curt but playful edge to her voice, \"do you want to fuck me or something?\" \n\nI had to groan at her words, as she knew I loved hearing her say it out loud. I grabbed on my cock again and started squeezing it. \n\n\"Stop that,\" she commanded. \n\n\"I can't,\" I said truthfully. \n\n\"I just wanted to see it, not watch you fondle it,\" she said, uncrossing her arms and pulling the hem of her t-shirt lower on her legs. \"If I thought you'd be uncontrollable about this I would have gone to bed.\" \n\n\"Sorry,\" I said, stopping my motions and loosening my grip. The next move, I decided, was hers, and it took a while. After about 15 minutes she finally looked at my cock again and I watched her eyes tracing it up and down. \n\nFinally she said, \"God . . . that looks so nice.\" \n\n\"It does?\" \n\n\"Fuck. Of course it does!\" she said as if I was crazy, \"why else would I have you keep pulling it out? I miss what we had, a lot. No one else can compare, and for whatever reason sex was always great with us. Why do you think I kept coming back?\"  \n\n\"An easy lay?\" \n\n\"Okay, that's true, but it was more than that.\" \n\nShe turned her body to face me, her arm and shoulder against the back of the couch. \n\n\"I always felt like I found my perfect fit with you,\" she continued, looking me straight in the eye, \"and everyone else gets compared, well . . . to this!\" She gestured toward my protruding cock. \n\nI looked down at myself and couldn't help but feel a little surge of pride. \n\n\"But even though I would love to feel what we had again, I know it would only make things worse,\" she admitted. \"I was getting better, forgetting about what we had, but having you around all the time in such a personal environment . . . well, maybe it wasn't such a great idea.\" \n\n\"We both knew our torrid history Lace,\" I said, turning to face her as well and letting my appendage lay where it may, \"the odds were never in our favor.\" \n\n\"I know,\" she said, placing her hand on my arm, \"and I think I liked it that way. I think I liked fantasizing about you more than I wanted to actually do anything about it, although right now I'm not so sure.\" \n\nHer eyes burned into me with a fiery lust that made me want to push her backwards and let our bodies do what they were fully prepared to do. \n\n\"I know what you mean,\" I said instead, trying to keep my ever-loving cool. \n\n\"Michael! Are you saying you fantasized about me?\" she asked with a playful twinkle. \n\n\"I don't think I've ever stopped,\" I admitted. \"I know you too well. We've been together too many ways.\" \n\nHer eyes darted back and forth between mine. \"What do you think about?\" \n\nI knew this was trouble. I was inebriated and logic was not my friend, and any fantasy I laid out could surely come back to bite me. Unfortunately I was too turned on to care. \n\n\"Sometimes I think about the time we went to the amusement park with your friend Edgar,\" I revealed, \"and how you wore those same overalls as tonight, a t-shirt and nothing else.\" Her mouth twisted into a wicked grin. \n\n\"You had your hands in my pants the entire day,\" she laughed, \"I thought they were going to kick us out of there! Then, back in the hotel room, I bet Edgar's new girlfriend had no idea the kind of sex filled night she was in for when she agreed to come along.\" \n\nI laughed at that. \"I tried to be sneaky, but you're just too loud.\" \n\nShe blushed and looked down, her gaze settling on my bare cock again. It was suddenly silent in the room as she stared at it, her mind quietly unraveling in front of me. \n\n\"God I want you so bad right now Michael,\" she practically moaned with her eyes on my swollen cock. \n\n\"You'd love that, wouldn't you?\" I asked, knowing her twisted mind and the way it worked. She looked up at me. \n\n\"yes.\" \n\n\"My thick, burning cock . . . sliding in . . . filling that empty space between your legs.\" \n\nI couldn't help it. All of our bedroom games came rushing back. I had forgotten them, forgotten how crazy in lust they made us, but in that instant it all came back to me like riding a bike. \n\n\"You asshole,\" she whispered, not even close to being angry with me. The air was excruciatingly heavy with sexual tension and her breathing started to deepen. \n\n\"We can't do it Lacy,\" I said back to her, \"we just can't.\" \n\n\"I know.\" \n\n\"Take your shirt off,\" I said, knowing she would. We both took ours off at the same time and sat nude together on the couch, the blue glow of the television reflecting across our newly bared skin. \n\n\"I love your tits Lace,\" I said in honest appreciation of them again, \"but you really shouldn't be showing them to me.\" \n\n\"You asked for it mister,\" she replied, grabbing a handful of her breast and lifting its weight up to me, her twisted bud aimed right between my eyes. My cock swelled, wishing we would just get it over with already. \n\n\"God, I want to taste you so badly right now,\" I said honestly, practically drooling down my chin over the sight of her bare breasts. \n\n\"You can't,\" she said, staring deep into my soul with her heat filled gaze, \"I have a boyfriend.\" \n\n\"Don't remind me,\" I said, turning directly toward her on the couch. We sat face to face, our bodies naked and exposed to each other in the flickering darkness. \"Tell me something Lace . . . does he eat your pussy? I mean, the way you really like it?\" \n\nThe heat in the room was insane as my question caused Lacy's legs to slowly part and her free hand to slide lower on her bare body, down to her unfolding sex. I watched her fingers spread her wet lips apart and find her clit, massaging it with slow deliberate circles. I almost bit off my lower lip as I watched her touch herself in front of me. \n\n\"This pussy?\" she teased as my eyes climbed between her legs and tried to get inside for a closer look. \"He tries, but no one really enjoys the taste of me as much as you did. Do you still remember?\" \n\nFuck. Of course I did. I was practically smelling it again with the heat she was giving off. \n\n\"You know how much I love . . . used to love, your pussy,\" I corrected myself, \"and I used to keep loving it until you had to push me off, remember?\" \n\nLacy moaned out loud this time, her fingers digging harder into her swollen lips, rubbing larger circles between her spreading legs. I looked into her ravenous stare and recognized a raw need. \n\n\"You want me to eat your pussy right now, don't you?\" I asked, knowing the answer. \"You want me to suck your little clit and push my tongue in there. Should I? Should I actually suck you off right here on our couch Lacy? Suck your wet pussy in my mouth until you explode all over our living room?\" \n\nWe were back to our old games again, and as she leaned back on the couch, her naked body splayed before me with her legs open wide, I knew why we had missed it so much. It was the mental connection; the understanding we had for what the other really needed to experience on a sexual level that was so strong. \n\n\"God damn you Michael,\" Lacy moaned. Her fingers were frantically masturbating her pussy with one hand and tugging a taut nipple with the other. \"You're really turning me on.\" \n\n\"I can see that,\" I said, staring at her blurring hand making swirly finger paintings across her pussy. \"You used to like it when I'd watch you masturbate, didn't you?\" She did. \n\n\"Fuck.\" \n\n\"We can't.\" \n\n\"I know,\" Lacy groaned, pushing her body backwards to the other end of the couch and sitting up, her hand not exactly done wading through the rushing river between her legs. \n\n\"You're evil, talking to me like that,\" she said breathlessly, \"your girlfriend probably wouldn't like you talking about eating my pussy you know.\" A smile crept across her face. \n\n\"No, she wouldn't,\" I admitted, the realization of this fact having zero impact on the lust coursing through my body. Lacy's eyes dropped into my lap again, finding my naked dick and staring hard. \n\n\"Does she suck your cock,\" Lacy asked, knowing full well how much I liked to hear her say it like that. \n\n\"Not like you did,\" I admitted with a groan. \"Your boyfriend must be a pretty lucky guy.\" \n\n\"He is,\" she said with a smirk, \"but he definitely doesn't react as well as you always did to having his balls in my mouth.\" \n\n\"Oohhhh Jesus,\" I moaned, remembering how well she was able to keep me raging hard forever while she toyed with my scrotum and balls. \n\nI leaned back and pushed my erection upward \"You always knew how to keep me harder than I ever thought was possible.\" \n\nWith that I ran a finger up and down the side of my cock, watching her eyes follow my lazy touch. \n\n\"You should really put that away Michael,\" she said without a hint of seriousness in her voice as her eyes devoured my cock, \"I might be tempted to put it in my mouth. What would your girlfriend say about that? Can she take you all the way like I can? Can she choke on your cock and still keep it buried while you cum down her throat?\" \n\nDefinitely not. I was practically crying with the memory and realization. \n\n\"You better stop talking about sucking my cock Lace,\" I said with exasperation as I started stroking it in front of her leering gaze. \"I might ask you to do it again, just for old time's sake.\" \n\nI rose to a knee and pointed my dripping rod in her reclined direction. \n\n\"I wouldn't do it,\" she said with her hand mashing her pussy around, \"I have a boyfriend.\" \n\n\"So you keep saying,\" I responded, \"but you haven't stopped playing with your pussy since you stripped naked in front of me.\" \n\n\"True,\" she said, making sure I saw her slowly ease two long fingers deep into herself. I stared in amazement. \"Mmmm, god I'm soaked,\" she tortured me by saying, \"I bet you could get your whole cock in here in one . . . long . . . push. Would you like that?\" \n\n\"More than anything,\" I admitted, wondering how we had let ourselves get to this point. \n\n\"Well keep it together,\" she said, pulling her fingers out and sucking them into her mouth one at a time, \"we're roommates now. No fucking.\" \n\n\"How about sucking?\" I asked hopefully, waving my wand in front of her. \n\n\"No sucking; and definitely no touching. We're taken!\" \n\n\"Damn,\" I said, sitting back down on the couch and staring at her gorgeous bare body again. My mind was conflicted, and I knew exactly where we were headed. She could hold back for now, but she needed release as much as I did. We could probably get ourselves off with some mutual masturbation or something, but I didn't think either of us wanted to end the night with an embarrassing mess on the couch, having to slink off to our separate rooms. I had to think. \n\n\"Okay, how about we cuddle?\" I decided to go with. \n\n\"Nice try, no touching.\" She seemed adamant all of the sudden, so I shifted tactics. \n\n\"What if I just wanted to look?\" \n\n\"Look all you want,\" she replied, \"Why? Do you like my body or something?\" \n\n\"I love your beautiful body,\" I said truthfully. \"Your legs are smooth and sexy, and your hips are perfect.\" I started leaning in her direction on the couch, closely inspecting the pale skin of her leg, careful not to touch. \n\n\"Easy there,\" she warned, \"no touching. My boyfriend doesn't like me to lay with naked men you know.\" \n\n\"I bet not,\" I said, \"I can see why naked men would want to lay with you though. Your thighs are mouthwatering.\" I moved my head closer between her legs, my breath warming her inner thigh. \"You smell like a flower,\" I said, inching even closer, \"and you look like a goddess with your legs open like this.\" \n\nAs I pushed in closer I could feel the heat coming from between her legs, and the permeating scent of her undeniable arousal was spinning my mind. \n\n\"Don't get any ideas Michael,\" Lacy warned, my mouth inching closer to her enchanting pool of liquid honey, \"you shouldn't have your face so close to my . . . my . . .\" \n\n\"Pussy?\" \n\n\"Yes, that.\" \n\n\"Why not?\" \n\n\"Because it's not yours,\" she said, unconvincingly. \n\n\"Not mine to what?\" \n\n\"Not yours to . . . \" \n\n\"Lick?\" \n\n\"Yes.\" \n\n\"Suck?\" \n\n\"You bastard.\" \n\n\"Not mine to ravish until your body explodes from the soul splitting orgasm I rip from your dripping wet cunt?\" \n\nHer hands flew up and pulled my head forcefully between her legs. \n\nThe next thing I knew my face was buried deep between the wide rubbery lips of my ex-girlfriend's soaking pussy! She couldn't help herself. I knew for a fact she had to have it, and that I was the one who could give it to her the way she truly needed it. I plunged in face first with abandon. \n\nInstantly she was gasping and writhing on my tongue, whimpering under the insistent pussy eating her body so desperately craved. I pushed a couple fingers inside and fucked her wet hole while I pulled her rigid clit into my mouth. I had forgotten how rapidly her arousal would build. I felt her orgasm coming already, so I pulled my fingers out and wrapped both arms around her thighs, locking my mouth over her twitching center. And then she came, harder than I ever remembered . . . \n\nFor four minutes she gasped for breath and clutched my head. \n\nFor four insane minutes she shook in convulsions and bucked her jerking pussy into my mouth. \n\nFor four fucking minutes this girl came, unleashing every ounce of orgasmic energy she'd stored inside, squeezing the feeling right out of my head. \n\nWhen it finally subsided, she lay back exhausted. I lifted my reddened face from between her strong thighs and watched her lovely tits heaving up and down on her chest for a time. \n\n\"Tell me your boyfriend does that for you,\" I mustered, trying to get a rise out of her again. \n\n\"Not . . . even . . . close,\" she managed with a smile, struggling to drag her body up on the couch a bit. \n\n\"Well, I guess you needed it then,\" I said, rubbing my hands up between her thighs and back down. I sat back toward the opposite end of the couch to admire her splayed and panting body. \n\nSuddenly she was sitting up and quickly moving my way. I watched as her open lips approached mine and hit with a force of passion I hadn't experienced in forever. Our tongues burst from our mouths and tried to out-wrestle each other. I knew my face was covered in her essence, but that had never stopped her before. We kissed and frenched and made out passionately. I felt her hands running up and down my body, and I did the same to hers. \n\nWe were naked on our couch, consuming each other's mouths like we were teenagers, and my cock was a rigid log between us . . . well, like we were teenagers. I felt her delicate fingers wrapping around my surging pole, and she broke off our kiss, relishing in the tactile feel of it. \n\n\"God I missed this,\" she moaned as she started pulling the skin up and down my erection. The feeling was immediate, and I remembered how well she did even that. It was so fluid and natural. She had stroked my cock to hundreds of orgasms: in the prop room, at a restaurant, on the bus on our way to camp. She knew my cock like no one did, and was reminding me of just how well as our hot tongues snaked together again. \n\nAfter a few angelic minutes of manual ministrations, she pulled back. \"I hope your girlfriend doesn't mind I'm sucking your cock tonight,\" she lowly whispered, jacking me. Her tongue reached out and licked my upper lip . . . my cheek . . . my ear, her voice whispering through my veins, \"I'm going to suck your cock Michael. I'm going to lick your balls. I'm going to push you so far down my throat that I'm about to cum again just thinking about it.\" \n\nI moaned as her tongue pushed into my ear and drove a sensation through my body I never knew I missed so badly. I was going to cum myself if she kept lusting into my ear like that and milking my throbbing cock in her hand. \n\nSensing I was on the edge she ran her lips down my neck, shivering my limbs and pounding my heart. I closed my eyes and relished the feel of her tender lips caressing their way across my chest, licking my nipple and biting it. She let go of my cock and held her chest over me. Her breasts swayed, and another repressed memory sprang to life as her nipples slowly lowered down and lightly grazed the skin to either side of my twitching cock. \n\n\"Does she drag her tits all over you the way you like it,\" Lacy asked in the most seductive voice I ever remembered coming from her. \n\n\"Fuck no,\" I swore under my breath, feeling the tender touch of her aroused buds tantalizing my bare skin. Up and down her nipples drew lazy lines of lust onto me, dragging across my bare skin. How had I gone without this blissful torture for so long? \n\nAll at once her soft warm breasts settled down heavily and captured my cock beneath them. Her milky tits dragged down my shaft, and before I knew it my platonic roommate's hot breath was cascading over the tight skin of my cock. \n\n\"Don't do it Lacy,\" I pleaded, \"That's going too far. You have a boyfriend, and he doesn't want my cock in your mouth.\" \n\nShe shook her head, staring at my pulsing penis. \"You're the one who pulled it out,\" she whispered, \"reminding me how I used to like to kiss it.\" \n\nWith that she lightly pressed her soft lips to the skin of my cock. \n\n\"Don't,\" I said. \n\n\"How much I liked to lick it,\" to which she dragged her tongue from the base of my twitching rod to the very tip, pushing shivers up my sides. \n\n\"How I much I liked to run my mouth along it, like this . . .\" \n\nI groaned as her lips parted and covered the underside of my cock. Her mouth was so soft and tender, and when she stared sliding it up and down my length, I groaned outward into our living room. She slurped her way to the tip and suckled on the head for a minute, keeping me in her mouth as she nursed on it. She worked her way down to my balls, and took one and then the other in her mouth, and started the whole thing again. She wasn't even sucking me and I was about to scream! \n\nShe sat up a little and looked me in the eye. \n\n\"Does she let you cum in her mouth?\" \n\nI slowly shook my head, to which she rolled her eyes in exasperation. \n\n\"Would you like to cum in mine?\" \n\nI nodded, and slowly brought my hand up to her head and gently pulled it down. She simultaneously lifted my cock upright and wetly engulfed my entire cock into her warm and delicious opening. Her lips slid down my length like a ring, and my cock kept sliding in. I remembered how deep her mouth went, how my cock would keep going further than I ever thought possible. In I went, and once I eased past her loosened throat muscles I bottomed out, her lower lip nudging my balls. Oh my fucking GOD!! ",
        "It was the most pleasure I'd had in forever, and the building intensity of the night instantly caught up with me. All at once my body flipped a release button and my ejaculating muscles started pumping hard, filling my body with the most intoxicating chemicals nature ever invented. Gush after glorious gush of pent up seed erupted from the end of my buried cock and into the sweet and bottomless mouth of my totally naked ex-girlfriend, right on our couch. FUCK! \n\nMy body shook and shuddered, and she kept her head still, draining every drop of juice from my creamy cock like it was nothing. \n\nAfter the mind blowing rush of my orgasm, she slowly pulled off of me, a loud pop and an inhale of breath sounding off like a clap. Her breathing was ragged, but her smile was one of pride. She came back up to me and laid her soft body on top of mine and we kissed again. This was nothing new, and the fresh cum in her mouth was barely noticeable as we shared a passionate embrace. \n\n\"What did you just do?\" I asked incredulously. \n\n\"I sucked your cock Michael,\" she replied in a hungry whisper, \"I swallowed your cum. I got you so horny you shot off in my mouth in like 10 seconds.\" \n\nI smiled wide with the most satisfaction I had felt in many months. \"That you did.\" \n\nI gently held Lacy's familiar body again as she lay across me, her soft breasts piled on my chest. The round bare cheek beyond the small of her back was a familiar landscape for my fingers to graze. \n\n\"What are we doing?\" she asked quietly, her nose brushing against my cheek. \n\n\"Not getting caught?\" I ventured, saying what was surely on our minds. \n\n\"Yes, but why?\" She laid her head next to mine. \"Why is it so right between us?\" Her fingers twirled my hair and I felt her breath against my neck. \"I am so comfortable here, just like this, with you.\" \n\n\"We've been over it a million times,\" I began, \"and we just don't work this well in the real world. We're polar opposites . . . who happen to be really awesome in bed.\" \n\n\"Don't remind me,\" she softly whispered. \n\nWe lay with each other in the darkish room, naked across our couch. My mind played movies of all the great times we'd had. Weekends we'd spent locked in a room and fucking our brains out until we were sore. Days we spent apart, resulting in some of the most passionate and aggressive sex I could remember ever having. \n\nWe both considered sex a core part of who we were. Finding someone who shared this intense constant desire and who was also compatible for the long run seemed impossible. For a while we were happy to just seek each other out as a distraction from the sometimes painful real world. Sex was a blanket, and wrapping each other in it was something we both needed, maybe on a deeply emotional level. \n\nMy thoughts were bringing back so many memories; vivid, naked, fucking each other memories and I felt my cock start to harden again. She felt the movement and pushed against it. \n\n\"You realize we're probably going to do this, right?\" I said, realizing what we both were thinking. \n\n\"I know,\" she said, almost inaudibly. \"I just want to feel you against me for a while longer.\" \n\nLacy wrapped my head in her arm and started softly kissing my neck. Her lips were barely touching my skin, but the connection was immense. I sighed out a long breath of air and squeezed her tightly. The soft, wet tip of her tongue dragged along my neck and traveled slowly upwards to my jawline. \n\nHer every contact point with my body suddenly drove a rush of passion into me, jutting my growing cock into a red hot poker between us. She felt my surge and dragged a knee up my stomach and moved the same foot over the edge of the couch. My fingers rounded her smooth cheeks and dove between them, finding the familiar damp pool I was dying to plunge my cock into again. \n\nI rubbed around her pussy as she pushed her thigh against my erection, saying into my neck, \"I think I wanted you ever since you asked me to move in.\" \n\nI thought about this for a minute, and admitted to myself that my noble intentions were never far from the hidden truth. \"I honestly loved the idea of being able to see you every day,\" I said, pushing a long finger into her moist tunnel. \"I think having you around was good for my sex life. You reminded me of great sex, and I took that to bed with me.\" \n\n\"Me too,\" she admitted, \"and I can't help loving you like this,\" she moaned and started grinding her thigh harder into my cock, her mouth sucking on my neck. \n\n\"I still love you Lacy,\" I responded, knowing it was the truth, and as painful as it was for all involved, it was the god damn truth. \n\n\"I love you too Michael,\" she said almost desperately, \"I always long for what we had, no matter where we are or who we're with.\" \n\nHer hips started tilting around, grinding on my finger inside of her. \n\n\"Oh my god Lacy,\" I moaned in her ear, \"we're actually going to do it again, are you ready for that?\" \n\n\"I've been ready Michael,\" she returned into my ear, \"I want this. Please, do it before I change my mind. Put it in,\" Her panting was getting intense. \"I mean it.\" She lifted herself up on all fours above me, staring into my longing face. Her beautiful tits were hanging, and I could see my cock sticking up, waiting for the inevitable plunge. \n\nAnd it was so natural that neither of us looked or aimed or anything. Her hips descended and I felt my cock easing right into Lacy's warm and glorious fit. \n\nIt was a mind blowing instant of sexual interconnectedness and blissful wonder as my cock buried itself as deeply inside Lacy's hollow cunt as it's ever been. We both exhaled immensely, and in that very instant, we were back. \n\nHer mouth hung open as I bottomed out, and the look on her face was one of pure passion. I'm sure mine was no different as I ran my hands up her thighs and around her back, grabbing that sexy woman as tightly as I could. \n\nWe pushed against each other in a frantic connection of sex and lust. It was an idyllic rift in time as our souls became singular again. Neither of us could back away, and we started shifting our lower bodies in subtle circles of intimate connection. My cock was deep, and her pussy captured me so completely that I was content to simply exist inside of her. \n\nBack and forth we ground into the other. I heard her gasp, so I slowly sat us up on the couch. She clung to me like a lost puppy, and her body was shaking from the pleasure. \n\nThen I realized she was actually crying, right into my shoulder; tiny little sobs that had me confused and worried. \n\n\"What is it Lace?\" I gently asked, pushing back the hair from around her ear and wiping a tear from her cheek. \n\n\"You . . .\" she sniffed, \"feel so amazing. I just . . . forgot how intense it really was . . .\" \n\n\"I know,\" I soothed, \"I feel the same way. We've got it, right? The magic touch? Let's just enjoy this as much as we can while we have it again . . . okay?\" \n\nThat seemed to cheer her up a little as she nodded her head. \n\n\"It's not over yet,\" I breathed, reaching my cock into her and then pulling out a small amount, \"far from it.\" \n\nLacy smiled and looked right into my eyes, her tear stained lashes blinking quickly. \"I do love you, you know, and I always . . .\" with that she squeezed her inner muscles around my nestled shaft, \"always, will!\" \n\n\"I love you too, my sweet caboose,\" I said throwing in an old nickname and grabbing her butt, \"and now we're going to make this night worth every minute of regret we might face afterwards.\" \n\nWith that Lacy leaned back and onto the couch, pulling me with her and reaching down to grab my ass cheeks and squeeze them. \n\n\"So then fuck me already,\" she said so matter-of-factly that I had no choice but to pull my cock almost completely free from her warm embrace, and then slam it back home with enough force to loosen teeth. \n\n\"OH . . . GOD!!\" she yelled, louder than I ever remember her being, which was saying something. \"FUCK that's good!\" \n\nI put my forehead against hers and locked in my stomach muscles, allowing my hips to start taking long delicious strokes in and out of her body. Every push and pull was luxurious and familiar and daring all at the same time. I knew just how she liked it. I knew what got her body and her mind really excited. She knew the same about me as well, which is why she pulled my face down and pushed her tongue in my ear. \n\nThe warm sensation had a direct line to the muscles in control of my blazing erection, and I started to really pump it into her with passion. \n\nHer lusty voice in my wet ear sounded better than I ever remembered, \"Oh . . . Oh . . . yeah . . . fuck . . . Oh fuck . . . Oh god . . . fuck . . . that's it . . . mmmm . . . mmmm . . . Michael . . . that's it . . . fuck me . . . oh . . . oh . . . Oh . . . Michael . . . we're fucking . . . oh god . . . Oh SHIT . . . OH . . . OH . . .OHHHHHHH,\" her voice trailed off into grunts of pleasure as she hugged me tighter. \n\nMy cock was sliding in and out of her like an oiled piston, and the liquid noises of sex were squelching out into the room. I realized I was quickly building up a new head of orgasmic steam, so I eased back into a more casual pace. Every bit of her scrumptious pussy was sliding across every inch of my solid cock as we connected through long slippery strokes of sex. \n\nEventually Lacy loosened her grip and held me still, stopping our movements but holding my cock deep inside. Her eyes were wild. She was hungry, and right in the middle of a juicy meal. \n\nSoftly she spoke, \". . . from behind.\" \n\nI smiled as I remembered how she liked it that way. I slipped my wet cock out of her, and backed slightly away. She slid off the couch and put her knees on the floor, bending her naked figure over the cushion. \n\nI admired her bare ass in front of me again. It was so familiar; so right. A thousand memories came rushing back as I instinctively ran my hands over her nude butt and up her spine as I moved in close. \n\nI bent over her body with my wet cock wedged upright in the crack of her cheeks and started whispering in her ear. \n\n\"This is how you really like it, isn't it Lace?\" \n\nA slight whimper emerged, and she moved her ass against me in earnest, but I wasn't about to slip into her just yet. \n\n\"You remember how far I can reach from back here, don't you? \n\n\"You know I do,\" she softly replied. \n\n\"Tell me something you think about with me around,\" I teased, easing back from her ear, and rubbing her shoulders and neck, \"something hot.\" \n\n\"Don't . . .\" she pleaded. \n\n\"It's okay Lace,\" I soothed, \"just tell me one thing you fantasized about. It's only going to turn the heat up.\" \n\nA long silence appeared, and I slowly eased the underside of my cock up and down her crevice as I patiently waited for her inevitable reply. \n\n\"Fine,\" she started, lifting herself up onto her elbows, \"Sometimes . . . I imagine myself cleaning. God this is embarrassing.\" \n\n\"Just tell me.\" \n\n\"Fine. I'm cleaning, and I'm . . . naked,\" she revealed. \"And then you come home unexpectedly, maybe you've been drinking, and you sit down and just watch me cleaning in the nude. You're staring at my body and telling me how good of a job I'm doing, how you appreciate how clean I keep our place.\" \n\nThis was incredible, and now I was logging every word into a fantasy file I could use later as well. I reached around and started toying with one her tight nipples. \n\n\"Mmmm, that's nice,\" she moaned, humping her bare cheeks against me. \"I keep looking over and your eyes are always on me, on my body, staring at me. Then, while I'm cleaning a counter, or bent over in some way, you come close and start touching me, softly, even though I ask you to stop. You don't. You touch my breast, you cup my ass, you stroke my neck; you're hands are all over me.\" \n\nI groaned to myself and rubbed my hands over her body to match the story, feeling every sensational inch of her bare form under my fingers. \n\n\"Oh god, you really know how to play this,\" she admitted, and then continued. \"You start asking me why I'm naked, and if I was just trying to get you excited. I would insist that I just liked to clean in the nude in my own apartment, and that I should be able to if I wanted. But inside I knew it would drive you crazy, and that you wouldn't be able to resist.\" \n\nLacy started sliding her bare ass up and down the length of my nestled cock as she continued. \n\n\"You would touch me and tell me to keep cleaning. I wouldn't notice, but at some point you'd pull out your cock, and I would feel it against me, hard . . .\" \n\nI took that moment to reenact her tale, pushing the head of my cock down between her cheeks. \n\n\"I would act shocked and offended, but you'd push into me . . .\" \n\nWhich I did. \n\n\"OOOOH god!! Just like . . . that,\" she moaned as my cock ran home, \"that's so much better than I imagined!\" \n\nMy cock slid into her, and I pulled on her shoulders to help get it in deep. I leaned over again and started talking into her ear as I softly began to fuck her from behind. \n\n\"Is this what you wanted? Hmm? Parading around in the nude. Did you think I wouldn't react?\" \n\nI kept sliding my cock in and out of her deep passage, bringing loud moans and sighs. \n\n\"Did you think I would just sit and watch your sexy body bouncing around our apartment in the nude and not want to touch it . . . to taste it . . . to have it? How dare you tease me like that? Now you're getting what you really wanted, aren't you?\" \n\nI grabbed her hair playfully, \"Aren't you?\" \n\n\"YES,\" she moaned, pushing her ass back against my thrusts and hanging her head down low as I released her hair. \n\n\"And now your roommate, your ex-boyfriend, is actually fucking you! He's finally fucking you after all this time, and you were secretly hoping it would come to this, weren't you?\" \n\n\"Yes!\" she squealed as her torso dropped and her head turned to the side. \n\nI grabbed her wide hips and started bouncing my body off of hers in a forceful fuck to last us a lifetime . . . or another long time anyway. \n\n\"You really need to be fucked like this, don't you Lace?\" I asked with heat and passion in my voice. \n\n\"Mmm . . . mmm . . . mmm,\" is all she could manage. I kept the aggression level high, because I knew she liked it, and I pushed her head softly into the couch. \n\n\"Am I deep enough,\" I started, \"can you feel it all the way, my cock, fucking you? It's good right? I could fuck you like this every day you know. You'd love that, wouldn't you? A live-in fuck partner to really give your hot pussy the hard attention it desperately needs.\" \n\nHer heavy gasps of air were answering my questions on her behalf. \n\nI decided in the moment to take it a step further. \"From now on I want you to be ready for my cock in the morning. Keep this little pussy neat and clean for me, I'll be checking it first thing. I want your body smooth and smelling nice. I want to know you will be clean and soft when I come home dirty and hard.\" \n\n\"Oh my god,\" Lacy moaned in a torrent of sexual frenzy as I pounded her cunt. While I wasn't serious with my suggestions, and I was sure she knew I was just heating us up, there was an edge of real desire to it for both of us. I released her head and smoothed her hair as I slid in and out of her slick grip. \n\n\"Start looking forward to a nice hard cock in the morning. Won't that be nice, a pussy filling fuck to start your day?\" \n\nI continued to thrust and shake her ass cheeks. \"I like your new look by the way, one big shirt with nothing underneath. How hot did it make you, knowing you were practically naked next to me in the morning?\" \n\n\"It felt . . . mmm . . . naughtier than I . . . thought it would,\" she managed as I continued my vaginal assault. \n\n\"I bet it did,\" I continued, \"so naughty that you needed to let me see your whole body bent over in your room with your bare ass sticking out.\" \n\n\"Oh shit,\" she moaned as our thighs smacked together, \"I don't know why . . . I did that.\" \n\n\"Because you wanted this,\" I said, happily fucking my ex-girlfriend from behind on the floor of our living room. \"How did you feel when I called you in to watch me shower?\" \n\n\"Excited,\" she admitted a little too quickly. \n\n\"I know you did, and now it's out, isn't it? You've been secretly lusting for my cock, and now you're getting it.\" \n\nI glided into her a few more times and then slowly withdrew my long slippery rod from her body. She put her head down and started to catch her breath. I sat on the floor and turned over, my head between her quivering thighs. I pulled her dripping bush right into my mouth. \n\nShe raised her body up and kneeled over me, holding the couch for support. I could see the undersides of her breasts, and couldn't help but reach up and squeeze one as I found her stiff clit with my mouth and sucked it right in. \n\n\"Oh F-F-FUCK!\" she yelled as my tongue immediately began wearing the finish off of her hot button. I sucked her clit and pinched her nipple, sending her body into a shaking fit. I looked up and into her eyes, just in time to see them roll back as she started to shudder. \n\nI knew one or two orgasms would never be enough, and I was almost positive she wasn't getting this kind of attention from her boyfriend. She needed it on a physical and emotional level, and I was finally giving to it her again. \n\nHer moans became screams as she pushed her pussy into my face, sliding it around, building up another sand castle of cum for me to kick over. Her hips began pushing my head into the couch, and she ground her creamy cunt against my face like I was some kind of humping pole. I grabbed the clenched cheeks of her ass and held on for the ride as her body began to shudder. \n\nThen it came . . . and when she unleashed I thought the police would be called, as it sounded like I might have been killing her. But as quickly as the screaming started, it disappeared, and she quietly shook and came all over my juice slathered face. \n\nI finally sensed the full weight of release wash over her, and a trail of her cum dripped down my chin as I held her up. A huge smile grew across her face and she whispered down at me, \"You son of a bitch. I haven't felt one of those in a looong time.\" \n\nLacy leaned down and actually licked my cheek. Then she pushed her tongue deep in my mouth and we kissed for a minute until she broke off and said, \"I've taught you well.\" \n\n\"That you have,\" I agreed, and watched as she spun around, her hand going for my cock. I felt her small fingers grabbing me tight, and then she leaned forward, her mouth slurping my meat like a melting popsicle. I felt her mouth softly sliding up and down my length. \n\nWe used to love to 69, so I slid down and pulled her legs over me again, diving my face between her legs. The sounds of sucking and smacking, moaning and devouring were over the top as we frantically ate each other out. Her legs started shaking as another climax was about to rain down on me. I wanted to cum so badly, but I also wanted to fuck this amazing woman again. \n\nI stopped eating her pussy, and pushed her off. \n\n\"Damn it,\" she whined, \"I was so close.\" \n\n\"What, again!?\" I asked in mock surprise. \n\n\"Yes again, and I now I might need to borrow that tongue of yours to lick my poor pussy to sleep every night.\" \n\nA ravenous hunger boiled from my brain and I pushed her back onto the floor. I climbed between her legs and licked a long line from her soaking flame and all the way up to the side of her neck. By the time I got there, my cock was already pressing through her open folds and tunneling deep inside her pussy again. \n\n\"Oh my fucking god,\" she wailed as I sunk home, my lips on her neck driving her insane. Just as quickly though, I backed out again, retracing the same liquid line down her splayed body and started another oral assault. This time I was held in place as her legs crossed behind my head and her cunt pushed up and down my face. She was ready, and I held on tight as I worked my magic. ",
        "This time the ungodly screaming arose, and as she flew over the edge, her ranting was perverse, even insane! \n\n\"Ohhh, GOOOAAHHHHHDDD . . . ahh FUCK!! . . . you got a . . . mmmm, FUCK . . . A FUAAAAHHHH . . . EAT IT!! . . . Yeah, eat my damn PUSSY . . . FUCK!! GOD it's . . . OH my god it's . . . FUCKING HELL!! . . . You fucking BASTARD . . . EAT IT!! OHHHHHHHHHHHH!!\" \n\nI was simply holding on for dear life as she went through some kind of transcendental experience. It would have been almost scary, if it hadn't been exactly what I was going for. \n\nShe came so hard I almost felt sorry for her; it was intense. Her body convulsed and she could hardly gasp for air as the orgasm ripped through her soul and all over my face. \n\nAs she finally settled down around me, I felt the grip loosen on my head, and her hands unwrapped themselves from my hair. Her breathing was hard and a little raspy. \n\n\"That . . .\" she breathlessly began, \"was what I have been missing. How could you do that to me?\" \n\nI climbed up next to her on the floor. \"I just remembered how you always wanted it.\" \n\nThe smile plastered on her face turned to a look of wonder as she shook her head, and then a sly smiled unfolded, \"And now I remember what you always wanted.\" \n\nI honestly had no idea what she was talking about, until the very instant she pushed me away and sprang to her feet, running naked down the hall. \n\nA hungry smile immediately found my face, and I jumped to my feet and ran after her, my erection so hard from my dirty thoughts that it barely moved as I did. \n\nI rounded the corner toward the light from her room, greeted by a soft glow from her reading lamp beside her unmade bed. On the floor beside the bed was the most luscious and hungering sight my mind could have imagined. \n\nLacy was on her elbows and knees, climbing under her bed. Her bare ass was up and fully facing me, and she was saying something from underneath. \n\n\"Oh good, Michael, can you help me find my phone, I think it dropped on the floor somewhere.\" \n\nJust her pale ass was sticking out, and her wide pussy was practically begging me closer. I walked up slowly behind her and got to my knees, reaching out to stroke the soft skin of her naked ass. \n\n\"Can you see anyth . . . hey, what are you doing? Help me look!\" she snapped. \n\nI let my fingers roam her glorious backside as I lightly found her dripping center. I started to rub it around and push my fingers over her clit. \n\n\"Michael! Stop it!! Don't touch me like th . . .\" her muffled voice trailed off as two of my fingers plunged into her wet orifice. \n\nShe groaned and then said a muffled, \"Knock it off, and let me out of here Michael. Don't even think about it!\" \n\nIt was too good, and she was really playing it up for me. I pulled my fingers out and grabbed my raging cock, eying her gorgeous bottoms-up. \n\nThen a muffled, \"Thank you, now help me out of here. Michael. Michael no!!\" \n\nI watched the head of my cock push her juicy lips aside and ease inside, her wet channel putting up little resistance. I sank my long cock all the way into Lacy's upturned ass, her wet pussy licking the entire length of it along the way. \n\n\"You fucking bastard,\" she yelled from under the bed, \"how could you do this to me??\" \n\nI started working my cock in and out of the disembodied ass on legs in front of me, making sure I was listening for our old safe word, (Calamari). \n\nThe moans from under the bed were soft but growing. Lacy's luscious rump was milking my cock as I pumped her harder. I had to wonder if she had actually fantasized about this very thing. \n\nAfter the thrill of taking advantage of her compromising position wore off, I slowed my pace and tentatively pulled out of her. Lacy weaseled her butt back and forth, squirming out from under the bed. As soon as her head was free she sat up on her knees and the look on her face was one of pure lust and playfulness. \n\nI suddenly felt her full naked body weight slamming into me, throwing me to the floor. My head landed in a pile of her dirty clothes, and I looked up to see her face appear in my view, \"Don't you ever fuck me like that again!\" she warned, pushing off of me and jumping to her feet. I watched her nude body quickly disappear out the door. \n\nI smiled wide as I remembered our games, and loved how easily we were picking back up with them. \n\nI jumped up and happily bounded out of the room, wondering where my sexy naked roommate had vanished to. I instantly saw her across the hall in the brightly lit bathroom, and I walked slowly in. \n\nShe was leaning over the sink with her face in the mirror, applying some kind of lip something as I often saw her do, except this time she was completely nude. \n\n\"What are you doing in here?\" she asked my naked reflection in the mirror, \"can't you see I'm busy?\" \n\n\"Sorry, you left the door open and I really have to go,\" I played along. \n\n\"Fine, but sit down,\" she said looking back at her own pink lips, \"I don't want to hear it while I'm having some girl time.\" \n\nI walked to the commode and sat down, knowing I was unable to actually use it in my hardened state. I looked over at Lacy next to me; her wonderfully pendulous breasts were slightly swaying with her subtle movements and her twisted nipples looked thrilled to be part of our game. \n\n\"What are you looking at?\" she asked without turning her gaze to me, \"do I need to wear a robe or something in my own house?\" \n\n\"No, sorry,\" I replied, lifting my eyes to her mouth, \"I was just watching what you were doing.\" \n\n\"Why, do you have a thing for lipstick or something?\" she teased, \"You can have it when I'm done.\" \n\n\"Very funny,\" I said as I stood, pressing the handle and rushing water into the clean bowl. I walked up behind my roommate and said \"I just need to wash my hands.\" \n\n\"Be my guest,\" she said quickly, \"but I'm not moving. I was here first.\" With that she widened her stance and took up the entire front of the sink. \n\n\"Fine,\" I resolved and moved in behind her. The first thing to touch as I moved in close was my cock against the top of her ass. \n\n\"Hey buddy,\" she warned, \"watch your cock.\" \n\n\"Well it's not like I've got a lot of room here,\" I playfully whined, \"don't mind my reach.\" I wrapped my arms around either side of her and pushed forward, our bodies in full naked contact as I leaned forward to reach the water. \n\n\"Well, this is awkward,\" she said to her own reflection in the mirror, \"hurry up.\" \n\nI pushed the handle on the faucet and got my hands a little wet. I leaned over for the soap and dropped a gold puddle into my palm as I pushed the top. I rubbed my hands together in front of Lacy's naked waist, enjoying the feel of her entire body against mine. \n\nAs my hands foamed up, I lightly clapped them together, launching clumps of suds into the air, some in her direction. \n\n\"Hey!\" she cried, \"watch it! You're getting soap on my boobs.\" She could hardly keep her grin contained as she feigned offense and stood up straight to show me the mess in the mirror. \n\n\"Oops, hold on,\" I said, watching my hands in the mirror lightly touching the spots of bubbles on her breasts, leaving many more sudsy dabs in their wake. As I looked at her naked reflection, I could see large clumps of bubbles all over her chest. She just watched as I tried wiping them away, but the more I tried the soapier her bare tits were getting! \n\nI tried to keep up the act, but soon I was soaping them up with purpose, sliding my fingers around the smooth skin, rubbing across her nipples, grabbing her slippery globes tight and squeezing them together. I was getting extremely aroused, and my cock strained against her back. \n\n\"About done?\" she asked, hands on her hips now as if she was just waiting for me to finish fondling her chest. \n\n\"Almost,\" I huffed into her ear. I pushed my soapy hands down her body and pulled us back. Bending my knees I dragged the tip of my cock down the naked backside of my roommate. With almost no effort I pushed forward and submerged my entire cock into her dripping tunnel, and watched her face in the mirror as it slid home. \n\n\"OOOOooohhh fuck . . .\"she breathed as I pushed in, adding an exasperated, \"What are you doing?\" \n\n\"I'm just washing my hands,\" I replied as I moved my hands back up to her slippery tits and held them in the mirror while I humped my bare cock in and out of her pussy. \n\n\"Oh GOD!!\" she belted out as I pushed in deep, \"Are you fucking me Michael? We . . . mmmmm, we talked about this. No fucking!\" She was looking at me in the mirror and grabbing the side of the sink as I continued pushing and pulling my cock in and out of her. \n\n\"Oops,\" I said, \"are we fucking?\" My thighs smacked against hers more loudly. \n\nI watched Lacy drop her head down to enjoy our little romp for a time, and then she pushed me back with her hips, quickly stepping forward and escaping my insertion. She spun around and pushed me back against the wall next to us, getting right up in my face. She grabbed my chin and stared right into my eyes. \n\n\"Well just watch yourself mister,\" she said with a commanding tone, grabbing hold of my wet dick, \"don't let this big cock come between us.\" With that she started stroking me hard, her fingers slipping easily up and down my lubricated shaft, pumping me faster than I was expecting . . . and making her point. \n\nI looked into her eyes and enjoyed her hand masturbating my cock between our bellies. Her soapy breasts were barely touching my chest, and her nipples kissed my flesh. I was in blissful heaven, and was seriously about to erupt when she stepped back, releasing my cock and grabbing the towel hanging on a hook next to me. \n\nShe quickly wiped the soap from her chest and handed me the towel, saying simply, \"The lipstick's all yours,\" and walked out into the hall, bare-assed and smiling. I quickly turned to rinse the soap from my hands and wiped them with the towel, hanging it back on the hook. \n\nI turned off the bathroom light and the entire place suddenly dropped into darkness. There was no light from the direction of her room, or from the living room. Figuring she must have turned off the TV, I felt my way through the dark and down the hall into the main room. \n\n\"The power's out,\" I heard her say from near the front window. I looked in that direction and could just make out her silhouette against the dim lights shining in from outside. I slowly approached. Being naked in my own dark apartment was nothing strange, but knowing Lacy was in there with me, just as undressed, waiting for me to fuck her again, was the most thrilling sense of erotic anticipation I could remember. \n\n\"I can't find a candle or flashlight,\" she continued, \"so I'm just standing by the window until it comes back on.\" \n\nI walked up quietly behind her and saw that she was looking out the window. I put a hand on her shoulder and ran my fingers down her bare back and over her ass. \n\n\"You're naked,\" I said softly, stroking her flesh with a tender touch. \n\n\"I know. I was about to jump in the shower when it went dark. Don't.\" She pushed my hand away, and brushed against my erection in the process. She stopped. \n\n\"Are you . . .?\" she turned toward me and ran her hand up my body, \"Oh my god. So we're . . .\" \n\n\"Both naked here in the dark,\" I finished, \"We're in for a big surprise if the lights come back on.\" \n\nShe backed away from me in tentative hesitation and paused for a moment before saying, \"Why, you've seen me naked before.\" \n\n\"I know, but its different now,\" I said, \"we're not supposed to see each other . . . you know, like this.\" \n\n\"Well . . . I can't see anything,\" she breathed in a husky whisper, her body mere inches from mine, \"can you?\" \n\n\"Definitely not,\" my voice shook a little. We stood face to naked face, drinking in the thick anticipation and allure of the moment. \n\nWe inched closer, and I felt the softest touch folding slowly around my excited manhood. I exhaled heavily. \n\n\"What's wrong,\" her voice asked tenderly. \n\n\"Something's touching me,\" I admitted. I loved this so much. \n\n\"Really? What does it feel like?\" \n\n\"Like a soft hand, on my . . . ohhh yeah,\" I whispered, feeling the grip tightening and moving up and down. \n\n\"That's so strange,\" she said with a smile in her voice, \"do you think we have ghosts?\" \n\n\"If we do, they really . . . hhhhh, like me,\" I said, as another touch moved in to softly cradle my balls. I closed my eyes, not that it made much difference in the dark, and suddenly a warm wetness wrapped around the head of my cock, moving quickly downward along it like a wet mouth sucking my cock. \"Ho-o-oly shit!\" \n\nThe unexpected pitch black sensation took me by surprise, and I nearly lost it. I felt her throat open and my cock slipped inside for a second, and then she pulled completely off, leaving my cock to balance wet and alone in the dark. I opened my eyes and saw Lacy's dark figure outlined in front of me again. \n\n\"Something . . . really likes me,\" I said, unsteady on my own legs. \n\n\"Well keep it to yourself,\" she said, \"your moaning is making me uncomfortable.\" \n\nI stepped to the side and softly put my hand out, feeling for some bare skin and finding it. Knowing her body well I traced my way down her side and around the front of her thigh, feeling it open for me. \n\nMy fingers brushed past her curly hair and I didn't need any light to know how turned on she was. My fingers pushed across her excited clit, and I felt her body reacting to my touch. \n\n\"You okay?\" I asked with a grin. \n\n\"I-I see what you mean,\" she breathed heavily; \"I'm feeling a little . . . felt.\" \n\nI reached around in the dark and grabbed a handful of bare tit flesh, squeezing it gently in my fingers. \n\n\"Just let it happen,\" I whispered in her ear, \"we don't want to upset any dark spirits.\" I worked a couple fingers in between her legs and started slipping them into her. \n\n\"Oh my god,\" she said, leaning on the window sill, \"something's . . . pushing into me!\" \n\n\"Seriously?\" I asked as I plunged between her loose lips, \"What does it feel like?\" \n\n\"Hhhhhh . . . ohhhhhh god . . . a hand,\" she moaned, \"fingers, reaching!\" \n\n\"Does it hurt?\" \n\n\"No it's . . .\" she paused, \"strangely thrilling.\" \n\nI felt her hips grinding around on my hand, pulling me deeper. \n\n\"It sounds really good,\" I admitted hearing her heavy breathing and sultry moans, \"I'm getting pretty turned on here. You sure you're okay?\" \n\n\"Michael?\" \n\n\"Yes?\" \n\n\"I'm afraid.\" \n\n\"Of what?\" \n\n\"That something in here is going to actually fuck me, and I won't be able to stop it,\" she breathed as I twisted my fingers around inside her burning bush. \n\n\"What should we do?\" I asked, keeping the game alive. \n\n\"I hate to . . . hhhh, ask,\" she breathed. \n\n\"You want me to put it in?\" I offered, now brushing my cock along her bare back. \n\n\"Would you? Just to be safe?\" \n\nI slid my fingers out of her wet pool, and bending my legs I let my cock find her juicy hole. I eased it all the way in, and she groaned as I entered and stood breathless against the window . . . impaled. \n\n\"Like this?\" I asked, holding my cock still inside of her. \"Do you think anything else could fit in here?\" \n\n\"Definitely . . . not,\" she said softly, tilting her hips and edging my cock around inside her. I ran my hands up her naked sides and weighed her bare breasts in my palms. The feeling of her soft thighs against mine as I cupped her bosom caused me to involuntarily push in a little deeper. \n\n\". . . no fucking,\" she whispered, obviously using every ounce of her fiber to keep from encouraging me. \n\n\"I'm not sure I can help it,\" I pleaded, \"you feel so amazing.\" \n\n\"But I have a boyfriend,\" she said, pushing her hips back to keep my cock fully seated. \n\n\"My body doesn't know that,\" I said, pinching her bare nipples and pushing in so deep I could feel myself bottom out. I was awash in the soft feelings of her insides thoroughly soaking my prick, and I could tell our little game was about to break. \n\n\"I'm just going to, adjust myself,\" I whispered, slowly easing my length out about an inch, and then pushing it back in, \"like . . . this.\" \n\n\"Oh god,\" she breathed, \"you can't do that . . .\" \n\n\"Why not?\" \n\n\"It feels like sex.\" \n\n\"It's not sex,\" I assured her, pulling slowly out until just the head of my cock hovered inside the entrance to her tunnel \"This is sex.\" \n\nWith that I pushed my hips forward and thrust a series of deep plunges into her, sliding easily in and out. Slap, slap, slap, slap . . . \n\n\"Oh oh oh oh st t t t top!\" she managed as her thighs loudly smacked against mine. I pushed in all the way in and held it there, hugging her bare body tightly below me and finding her ear in the dark. \n\n\"Feel the difference?\" I whispered. \n\n\"You bastard,\" she whimpered, \"you have to stop.\" \n\n\"Didn't you like that?\" I asked. \n\n\"I . . .\" she started and then stopped. \n\nI finished her words, \"You loved it.\" \n\n\"Fuck you.\" \n\n\"My pleasure,\" I said as I proceeded to intentionally slide my cock in and out of that sweet girl's naked pussy in the dark like I owed it a favor. My long and sensual strokes were slow but rhythmic. I knew our game had ended as I heard her groan out a familiar sound, one of pure ecstasy, and she began to match my deep plunges thrust for thrust with her hips. It was fantastic. This was no simple fuck; this was hot, deep, lubricated intercourse between two experienced sexual beings. \n\nAfter a few sublime minutes of pitch black communion with Lacy, I eased my twitching cock out of her for the . . . fourth? . . . time that night. I turned her around and felt for her face, sucking the inside of her soft mouth into mine. Our bodies came together as we smashed my sloppy cock between us like a jelly sandwich. The heat in the room was unbearable as we both were practically out of our minds with lust. \n\n\"My room . . .\" is all I said after painfully pulling us apart. \n\n\"Now.\" she agreed, pulling me quickly in that direction. I followed her lead in the dark, and we bumped our naked bodies along the wall in a hurry to get there. Once inside, I found the plug to a small string of lights, which washed the room in enough dim light to see the naked girl sprawling across my bed like a seductress. \n\nWe squinted at the light, but her eyes were on my body, crawling up and down, a look of hot lust burned onto her face. \n\n\"Come here,\" she said curling a finger at me. \n\nI didn't hesitate. I crawled over her body, staring into her eyes with the awareness we were lovers once again. For a brief window in time we let ourselves go to enjoy the familiar fruits of our bodies and minds. \n\nOur lips met again and this time it was gentle, inviting, almost intoxicating as the soft wetness of our mouths settled into a playful erotic dance. Her legs were wide and drew me in with a tractor beam of passion and warmth, of excitement and playfulness; of lust . . . and love. \n\nI stopped kissing her for a moment and looked deeply into her eyes, she read my thoughts immediately. \n\n\"I know that look Michael,\" she said, running her fingers through my hair. \"We just can't.\" \n\nI didn't answer because I knew she was right. I knew the logic involved. I knew the pain we'd repeatedly felt. I knew the way our personalities worked against us at every turn when we were together. \n\nI didn't fucking care. \n\n\"I know . . .\" I conceded as always, saying the words but feeling the twinge of remorse behind them. \n\n\"We're so good at this,\" she said, reaching between her legs and guiding my throbbing ache into her warm intensive care. She hugged me tightly to her chest as I sank it home, breathing heavy air into my ear. \"Ohhhh, gaaaaahhhhhddd! Yes, that's it, you feel so good . . . pull it out . . . ooooh, yeah . . . come back . . . mmmmmmm.\" ",
        "I felt her nipples pushing into me as my hips worked the action between us. I wanted to hold back and make it all last forever, but her body was too sensual, too lustful . . . too perfect. \n\nI started moving faster, making her squeal with delight at my increased vigor. The bed started shifting beneath us as the sounds and smells of sex were broadcast throughout the cozy room. \n\nI was up on my hands again, watching her body take me, her soft tits wobbling on her chest. Her mouth was open and her eyes bore into mine, urging me on. Our frantic sex was gaining steam as her legs hugged me tightly and tried to help me fuck her, like really fuck her with everything I had. \n\nI started to get wild, and words just poured out of my mouth, like we should have known they would. \n\n\"Do you like my big cock in there Lacy Marie?\" I was in a mental trance and everything felt familiar again, like knowing how much of a turn on her middle name was. \"Do you like a good fuck?\" Her head nodded and her eyes were eating mine alive. \"Does it make your pussy wet to feel my cock fucking you so hard?\" \n\n\"Yes,\" she softly moaned, \"keep fucking me . . . oh god daddy, fuck me!\" \n\nAnd there it was. \n\nI had all but forgotten, but it came out of her just like that, mere moments before a shocked look spread across her face. Adorable. I slowed for just a second and grinned wickedly into her eyes as they darted with fear. \n\n\"You like your daddy's big cock, don't you baby?\" I growled at her, just the way she liked it. \"You're so good for your daddy, a good girl with a wet pussy, aren't you?\" \n\nThe conflict on her face was apparent, but short lived. Quickly she reached up and pulled me down to her, our bodies frantically fucking again. Her tongue went in my ear and out the end of my juiced up cock as it pumped into her. \n\n\"Oh god daddy, give it to me,\" she moaned into my soul, \"make love to me, please. I need you. Can you feel how wet you're making me?\" \n\nI was struggling to hang on, it was all too intense. I felt my passion reaching a peak with our most personal and private game playing out after all this time. I had no choice but to settle the hell down . . . \n\n\"Hold on baby,\" I said as I slowly pulled out of her against the strain of her legs trying to keep me in place. \n\n\"No,\" she said, \"don't go!\" Still I pulled away and rolled over, lying next to her. I was breathing heavy and sweating. \n\n\"I'm exhausted honey,\" I moaned, \"let daddy get some rest okay?\" I closed my eyes with my arm over my face, knowing for a fact my aim to get her on top was immediately received. \n\nLacy climbed over and straddled me, quickly descending her hot pussy over my soaking cock and picking up right where we left off. \n\n\"Mmmm, what are you doing honey?\" I moaned as she swallowed my cock with her body in the most desperate way possible. \n\n\"I need you,\" she said as her butt started to bounce her soft pussy up and down the length of me as she lay on top of me, \"I have to feel you . . . inside me . . . fucking me . . . daddy,\" she whispered in my ear. \n\nWith a surge of passion she sat herself upright, my cock fully seated inside of her. Watching her sitting above me I admired her milky breasts as she stared into my eyes. I reached up and took a handful of each and pushed them softly together. She looked down at me with a mischievous smirk, and then something else settled onto her face. . . \n\n\"Michael . . .\" she started to say, slowly grinding her pelvis into my pubic bone and swirling my cock around inside of her. No more words came however as she placed her palms flat on my chest and pushed against me, shifting her hips and stirring her insides with my deeply reaching cock. Her rocking became pushing, and her pushing became sliding. Soon she was lying against me again, quickly and frantically fucking my brains out. \n\nOur bodies slapped together as our moans devolved into grunts. I felt Lacy's hot breath in my ear again, and her words this time were some of the most wonderful utterances my soul could ever have dreamed. \n\n\"Michael . . . oh . . . this is so good, and . . . god, you're so incredible. Mmmmmm. You're everything to me, and anything you're not . . . mmmm . . . tough shit. Ohhhhhhhh gggod, keep fucking me . . . yessss. This has to be, the last time . . . uh huh, keep going . . . the last time we, fuck around on other people, okay?\" \n\nI barely started to reply. \n\n\"Shhhh,\" she continued as her pussy slid up and down my deep erection, \". . . mmmmm, let me finish . . . This is the last time, because from now on, there are no other people Michael . . . hahaha . . . that's right . . . because, I want to be yours again. I want us to be together, forever this time . . . Oh. Oh. Oh. Oh. Ohhhhh . . . ohhhhhhh . . . you like that, don't you baby? It's okay. Tell me.\" \n\n\"I fucking love it,\" my voice burst out as my cock thrust into her bouncing body. I had hold of her hips and was pulling her back down to me each time she pulled away. \n\nFinally I slowed our bodies down to an easy pace and looked hard into her eyes. \"And I love you Lace.\" I lifted my hands and held her face in them as our bodies slowed. \"What the hell have we been doing all this time?\" I had to know. \n\nShe didn't answer at first, and just looked into my eyes as we stopped, our souls keeping the sultry flames connecting us alive. Then she told me, and it made perfect sense. \n\n\"Making sure.\" \n\nOh, I was sure. I was absolutely sure there wasn't another person on the planet that could come close to the connection I felt with this human being. I wanted nothing more in that very moment than to follow her to the ends of the world and throw everything I called my own into oblivion. \n\nI was hers. Lacy's . . . and I had never been happier. \n\n\"And you're sure?\" I asked tentatively. \n\n\"I've never been more sure of anything in my life Michael,\" she said, her words falling out between panting breaths. \"I love you more right now than I thought was possible.\" \n\nI pushed deeply into her body, this time to form a concrete joining of our souls. She pushed back and I instantly felt every other time we had merged together wash over me as if they had all just happened in an instant. We locked together in a quiet, emotional embrace. \n\nHer forehead dropped onto mine, and our noses slipped alongside each other. It was a moment lost in time, and one I will never forget as long as I live. It was the moment I knew who my soul mate was, who my wife would be, who would eventually mother my children, and where I would spend the rest of my mortal life. \n\nLacy's soft body was an extension of mine in that moment in time. We started to hug tightly in our coupled position, twitching slightly from the emotional and physical reception. \n\nOur bodies started to ignite again, but without any physical movement. It was a strange feeling, like we were fucking, frozen in time. \n\nShe looked at me and I felt her pussy start to tremble around my cock. Then it twitched again, and I felt a rumble in my body. Her arms began to shake, and her mouth opened in an expression of deep pleasure. It was so beautiful and enchanting that I felt a wave of passion extend my cock into her further. \n\nHer eyes widened in disbelief, as her legs began to join the chorus. I held on to her tightly and just throbbed inside of her, feeling every pulse of pleasure that was building around it. Her chest began to twitch, and she sucked in a deep breath, clinging to my body and digging her nails into my skin. \n\n\"OOOOOOHHHH . . . MY GODDDDDDDD,\" she shuddered with a shaky moan, and I looked up at her face, which she had pushed forward in a grimace of intense concentration, and I knew Lacy was about to burst. \n\nThe wall of energy that slammed into her body caused every muscle of hers to clench, gripping me tightly beneath her and jerking us both with her sudden heaves. I held on tightly and just let her come around me with everything she had, feeling her pussy convulsing and twitching on my cock, drinking in the waves of pressure and release washing over us. \n\nWithout warning the feel of her throbbing contractions and her intense climax caused my cock to swell and vibrate. The feel of her liquid release washing over me and the erotic spectacle of her orgasm was enough to start my own, and when it came . . . it came hard. \n\nWe were lying still, but I quickly felt all control let loose. My balls began to lurch, and a wave of thrilling exhilaration rushed through my nervous system, throbbing out a wave of cum into her body as my muscles grabbed her tightly. My creamy jets lurched into Lacy's delicious cunt as her inner walls milked my erupting cock of each electric burst. They kept pumping out of me, pulse after pulse, for what seemed like an eternity . . . \n\nIt was immediately the most intense sexual feeling I had ever experienced, and there hadn't been any movement; only our tight naked connection and our newly ignited passion and love for the other. We lay there panting, both of us with looks of disbelief and sheer wonder on our faces. \n\n\"What the hell . . . was that?\" she asked finally, her body sweating and still snugly wrapped around my own. \n\n\"The best sex we've ever had?\" I offered slowly, feeling my cock finally letting go of the firm pressure it had been holding all night. \n\nHer heavy breathing was coming down and she lifted her body up onto her arms to look into my eyes, a satisfied grin and something else across her face. \"By far the best sex we've ever had,\" she agreed and paused, her gaze drinking in my soul for a moment, \"I think we should give it another go.\" \n\n\"Holy crap,\" I exasperated, unable to actually move my body another inch, \"I think I might need the night to recover.\" \n\nShe smiled and rolled her eyes, \"Not that dummy . . . us.\" \n\nThere was no question, no hesitation in my mind. Our subconscious minds kept bringing us together over the years for what we finally came to realize was our true connection. We couldn't stay apart, and for better or for worse . . . we wouldn't. \n\n*** \n\nIt was three days after our wedding, which took place about 2 years from that momentous day. As fate would have it, Kevin actually broke if off with Lacy the following morning. Her tears were real that day, and although she had been ready to do the same, it was still an emotional step. \n\nIt took longer for me to break it off with Sam, but only by a few days. It wasn't nearly as emotional, and it almost seemed as if she knew it was coming. \n\nI looked down and my feet were tucked in the sand on a private beach in Spain. Lacy was next to me, reclining in the afternoon sun and looking ravishable in her one piece suit . . . the bottoms. \n\nI stared at my new wife's bare breasts glistening in the sunlight, and traced a visual line down to the small chunk of peach fabric tucked neatly between her bronzed legs. \n\nWe had been going at it like animals since we'd arrived, and yet I couldn't help but stare longingly at her mostly bare body. My board shorts were beginning to rise, and I started feeling like we'd been in the sun long enough, for a couple reasons. \n\nI looked around the beach and noticed most of the guests at the resort were pretty involved with themselves, as was the case most places we'd been so far. It wasn't exactly a nude beach, but it was clear that going at least topless was the norm in this part of the world. \n\nI adjusted myself in my chair and prepared some extra space in my shorts for my growing desire. Hearing the movement, Lacy turned to face me and lifted her head. \n\n\"Enjoying the view?\" she asked, as if she really needed to. She pushed her sunglasses to the top of her head and sat her chair up. \n\n\"I still can't believe how easily you adapted to this whole topless thing,\" I admitted honestly. \n\n\"These people probably grew up with it,\" she said, \"so it's not even interesting. I on the other hand am completely getting off on how exposed I feel.\" \n\n\"Really?\" \n\n\"Mmhmm, and knowing how excited you keep getting about it is making me even hotter.\" \n\nI swallowed hard, thanking my lucking stars for about the thousandth time since we had first gotten back together for the wonderful woman I'd finally married. \n\n\"Should we head back to the room?\" I asked, mostly as a formality. \n\n\"Not yet,\" she said, reaching for a tube of sun lotion and popping open the cap. I watched in fascination as she squeezed a few dollops of oily cream onto her sun soaked chest, and proceeded to slowly and deliberately coax the shimmery fluid over every inch of her exposed upper body. \n\nMy cock was at full mast and pushing into my shorts. Her eyes barely left my lap, as my mine barely left her chest. I saw her lower lip disappear into her mouth, and I knew our time at the beach was nearing an end for the day. \n\nThen she said something that both shocked and excited me to no end. It had happened so many times since that first night in our apartment I had almost lost count, but I probably should have expected it. \n\n\"Let me see it.\" \n\nAnd even as my shaking hand went for the drawstring on my shorts and I pulled my aroused cock out for her at the beach, I knew I would never regret making her that original offer in the shower. I also knew she would never, ever let me live it down."
    ],
    "authorname": "ChancesAre",
    "tags": [
        "roommate",
        "ex-girlfriend",
        "deep throat",
        "roleplay",
        "shower",
        "dirty talk",
        "games",
        "sexual tension",
        "cheating",
        "bathroom"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/lacy-underwear-or-not"
}