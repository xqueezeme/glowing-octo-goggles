{
    "title": "My Saving Grace Pt. 08",
    "pages": [
        "Please read the Author's Notes at the end of this chapter. I hope you enjoy! - CM\n\n\n\nThe embrace between Kelly, Grace, and I, lasted for a few minutes; long enough for us to understand how each of us felt. When we parted, Grace took my hand in hers and stood close to me. Kelly wiped the tears from her face and gave the two of us a watery smile.\n\n\"Thank you \u2013 both of you,\" she said softly. \"I've wanted to get all of that off my chest for a long time! Now that it's done, and we're friends again, I feel so much better, and...I don't know...almost lighter somehow. Does that make any sense?\"\n\n\"Perfect sense,\" I said, shooting Grace an amused look. It was ironic that Kelly's feelings mirrored the ones I'd had after I'd blown up at her in front of Mom, months ago. \n\nKelly smiled happily. \"I'll leave you two alone, now.\" Her smile faded a little as she gestured toward where my tablet was sitting on the tray table. \"Kevin, I'm not trying to sound melodramatic or anything, but I hope the two of you are taking steps to protect yourself. The man in the video is a real piece of work!\"\n\n\"I'm pretty sure I know who it is, Kels, but thanks. I appreciate you bringing it to us. And I appreciate you telling me the truth, and apologizing. Like Grace said, the past is the past. From now on, we are friends.\"\n\nKelly's face lit up again, and she quietly took her leave, closing the door to my hospital room behind her. Grace and I stood for a moment longer, savoring a moment of closeness, before I steered her back to my bed. I settled myself off on one side so she had room to lay beside me. When Grace was nestled comfortably against my side, I lifted my tablet, found the file, and tapped play.\n\nThe video, at first, was an unintellible miasma of noise and action. I managed to make out some familiar voices in the chaos, but it was impossible to make out what was being said. After a few moments, the picture resolved itself. We were looking at the Hospital ER, and it was a symphony of controlled chaos. Doctors, nurses, orderlies, and security officers moved around and past each other, each on a mission. \n\nThe video quickly centered on two men. I felt Grace's body tense up next to me as we both recognized Trent as one of the men. Grace draped an arm across my chest, as though she could protect me from what we were watching. In spite of the sense of foreboding I felt, I couldn't help a tender smile at this unconcious gesture from her.\n\nThe man standing with Trent was shorter than him, balding, and chubby but not fat. He looked to be roughly the same age as Trent. He wore a dark navy blue topcoat over a dark suit. The gold-colored shield clipped to his coat pocket identified him as a police officer. He was holding a note pad and digital recorder of some kind. I couldn't quite make out what they were saying at first, but then Kelly moved a little closer and their conversation became audible. \n\n\"-telling you, Billy!\" Trent was saying. \"This is something you need to act on!\"\n\n\"Trent, man, I was sent out here to look into a possible assault. Everyone I've talked to agrees it wasn't assault. So, on that note, I'm leaving! I'm already an hour past the end of my shift, and it would be nice to spend some time with my wife,\" the detective said, wiping his eyes tiredly. \n\n\"For God's sake, Billy! I bring you evidence of a crime, and you're just going to go home to the little wifey?!\" Trent asked, incredulously.\n\n\"Oh come on, Trent! You have no proof of your allegations! The girl certainly doesn't look abused to me! And, the desperate way she tried to get in to Kevin's cubicle just now doesn't jive with someone who's been abused, either!\" the detective replied.\n\n\"I didn't say she was abused, Billy!\" Trent said, as though he were speaking to a child. \"I said they were fucking each other! That's incest!\"\n\n\"Yes it is,\" Billy said, in a deliberately cool tone. \"But do you have any proof of that, Trent? You and me, we go back a very long time, but that doesn't mean-\"\n\n\"I've got video, damn it! I've got the two of them fucking on video!\"\n\n\"Yeah, I'm sure you do! But how did you obtain it? Was it recorded in a public place with no reasonable expectation of privacy? Or was it obtained from inside a private residence without the homeowner's knowledge and consent?\" Billy shot back. \"And before you answer that, think carefully, Trent! If you show me something that one of your professional Peeping Toms took without consent, not only will it not be admissable, it could be used as grounds for a complaint against YOU!\"\n\nTrent looked as though he couldn't believe what he was hearing. \"That wasn't the way you were talking when YOU hired my agency, Billy! You didn't seem all that concerned about the legal ramifications then, were you? In fact, if I remember right, you got yourself-\"\n\nBilly moved like lightning, much faster than I would've expected a portly fellow like him to be capable of. He was instantly in Trent's face, and his voice and tone were like hammered steel.\n\n\"Don't forget who you're talking to, Mr. Collins!\" he said quietly, but dangerously. \"You will never bring that shit up again, do you hear me! If you do, you and I might not be able to remain...friends. Do you get me?\"\n\nThe two men stayed like that for several long moments, seemingly oblivious to the people flowing around them, busy at the task of saving lives. Suddenly though, two men in the uniform of Hospital security appeared at Billy's side. \n\n\"Is everything alright, Detective Kowalski?\" the taller of the pair asked.\n\n\"Yeah,\" Billy replied. \"Mr. Collins here is just upset over the injuries his nephew suffered. Perfectly understandable, of course. Right now, he's going to go take a second to cool off, before he ends up in the back of my car.\"\n\nHe might have been speaking to the security guard, but his eyes never left Trent's face, and his meaning couldn't be more clear. The unspoken warning came through loud and clear to me, anyway, and whatever else I'd say about Trent, he wasn't a total idiot. \n\n\"Okay, detective,\" the guard replied, also giving Trent the eye. \"Should we see him out to the waiting room, to make sure he doesn't get lost, considering the emotional turmoil he must be feeling?\"\n\n\"I think that might be best, Officer Adams. Thank you. I'll be sure to mention your attention to your duties to your supervisor.\"\n\n\"Thank you detective,\" he replied. To Trent, he gestured toward the doors to the waiting area. \"This way please, sir.\"\n\n\"I know the way, you fucking rent-a-cop!\" Trent snapped, as he turned towards the doors.\n\n\"How nice for you, sir,\" the guard said, one hand resting on the heel of his baton. The other security guard positioned himself so that he could support his fellow if Trent should decide to take a swing at him. \n\nFor his part, Billy turned and left the camera's field of view without so much as a backward glance. Kelly gave the Trent and the two security guards a two-minute head start, and then followed them to the ER waiting room. While we watched, the two guards explained to Trent that he could leave the hospital any time he chose, but if he tried to get back into any part of the hospital BUT the waiting room, he would be detained for tresspassing. They didn't seem at all impressed with Trent's swearing, or his opinion on their ancestry and level of education. Frankly, they were way more patient than I would've been in their place. \n\nOne of the pair \u2013 the tall one who'd spoken to Billy \u2013 left, while the other found a seat next to the clerk in the waiting room. Kelly didn't risk moving any closer to Trent. Judging from the change in the angle of the shot, she must have been standing partially behind something, not that it would've mattered. Trent wasn't paying attention to anything but his own rage. \n\nHe paced back and forth in front of a sofa in the waiting room, mumbling under his breath. The ER clerk (and the others waiting in the room) eyed him nervously while the remaining guard spoke quietly into his radio. When Trent lost it, it startled me.\n\n\"That fucking PIG! He wants to start shit with me? After all I did for him? Fine! The gloves are fucking coming off now, motherfucker! YOU HEAR ME BILLY, YOU PUSSY!\"\n\nTrent lashed out, striking a trash can with his foot, causing it to crash loudly into the wall and scatter it's contents all over the floor. Instantly the guard was there, his baton extended.\n\n\"Out,\" he said firnly. \"Now.\"\n\n\"Fuck you!\" Trent snarled. \"You're not a fucking cop! Get out of my face before I break your sad little ass in half!\"\n\n\"You're right sir,\" the guard replied, smiling nastily. \"I'm not a cop. You see, cops have all sorts of rules and laws that govern their behavior and prevent them from abusing their authority. They have to treat you with at least a modicum of respect. They have to observe your civil rights, and all that jazz.\"\n\nTrent looked at him in confusion, not seeing where he was going with this.\n\n\"Now, me on the other hand?\" the guard said, shifting the baton to his left hand and drawing a Taser with his right. \"Well shucks, I'm just a security guard. All those rules and laws and such that make cops behave? Most of them don't apply to me. I can't arrest you, that's true, but I can and will defend myself and the hospital against someone making threats. Oh, and for the record: I really couldn't care less about your civil rights!\"\n\nHe calmly extended the hand holding the Taser and squeezed the trigger. The two prongs, propelled by a charge of compressed air, flew across the scant few feet separating the two men and struck Trent squarely in the chest. Then there was a crackling sound.\n\nMany people confuse stun guns and Tasers, believing the two devices to be the same thing. They aren't! Stun guns require physical contact with the target, but are capable of rendering someone completely unconcious in less than a second. How long they stay that way varies from person to person. In some cases, it can cause the heart to stop, but that's fairly rare.\n\nThe Taser, on the other hand, is what they call a \"pain compliance\" tool. It doesn't cause unconciousness, it causes pain, by electrically stimulating the pain receptors in the skin where the probes hit. They can be used at a distance, so you don't have to be up close and personal with the target. Other than the two superficial puncture wounds that the probes cause, they don't leave any lasting marks on the body, but they cause some pretty severe pain. They too, can cause death in rare instances, usually when they are used over and over again. Or if the target has a heart condidition.\n\nFor better or worse, depending on whose side you're on, Trent was healthy as a horse. Right now, he was demonstrating the effects of a Taser strike for a live studio audience. He was on the floor, howling like a banshee and twitching like a certain politician at a Benghazi hearing. Grace and I watched the video in horrified fascination as the guard let the demonstation go on for a few moments, before letting off. \n\n\"The police \u2013 the real police, I mean \u2013 have been contacted, sir,\" the guard said in a polite tone, peering down at Trent. \"If you'd be so kind as to stay right where you are, I won't have to act in self-defense again. I strongly advise you to do just that. Stay where you are and wait for the cops, I mean. Unless, of course, you'd like another little jolt. Your choice, sir.\" \n\nTrent made the first intelligent decision of the evening: he stayed right where he was. He didn't even try to sit up. A few minutes later, the police arrived. They cuffed Trent, and then the video ended. \n\n\"Wow,\" Grace said softly.\n\n\"Yeah,\" I agreed. \"Trent doesn't have much of a singing voice, does he?\"\n\nGrace turned her head and stared at me for a moment, then she got it. Her eyes lit up with a touch of humor before she playfully slapped my shoulder.\n\n\"Be serious, love,\" she said, settling back against me and resting her head on my chest. I sighed, and stroked her beautiful chestnut hair back away from her forehead.\n\nAfter a moment, I picked my tablet back up again and saved a backup copy of Kelly's video to my Google Drive account, and to my Carbonite account. I wanted to be sure nothing happened to it. After all, one never knew when or how it might be handy to have access to it. \n\n\"Now we know the probable reason Trent hasn't tried anything while I've been here,\" I said. \"He's...occupied with other matters, at the moment.\"\n\n\"Yeah,\" Grace sighed. \"But, we can't count on that lasting for long.\"\n\n\"No, that's true,\" I replied, \"but it's enough to allow us a little rest tonight.\"\n\n\"Kevin, darling, the only two things that would really help me rest tonight are not allowed in the hospital!\"\n\nI looked at her quizzically. \n\nShe smiled sweetly up at me and tenderly kissed my lips before listing them.\n\n\"The first is sleeping next to you in your bed.\"\n\nI nodded in understanding and agreement. Even though we hadn't been able to sleep next to each other for very long, it was already difficult to truly rest without her there with me.\n\n\"The second,\" Gracie continued with a hungry look, \"is sleeping WITH you!\"\n\n\"That would be-\"\n\nI instantly forgot whatever it was I was going to say as her mouth locked onto mine. It was a loving kiss, yes, but this was hot, hungry, and needy. It wasn't the gentle, tender kiss from earlier! Almost of their own accord, my arms wrapped themselves around Grace and drew her closer to me. She responded eagerly to my touch, and I thrilled inwardly as I felt her soft sensuousness under my palms. \n\nGrace shifted in my arms until she was laying on top of me. I caressed her back as she cupped the back of my head with gentle hands. She teased my lips with her tongue, before delving her way into my mouth. She moaned in pleasure as I massaged the smooth muscles of her back, then she gasped softly as I cupped her ass in my hands. \n\nAs suddenly as it had begun, though, it stopped. Gracie pulled away from me slowly. I knew from her body language (and from basic good sense) that her pulling away wasn't rejection, it was self-control! Both of us were slightly out of breath as I moved my hands back to her waist. Her eyes were still smoldering with passion, but it was tempered with discipline now. \n\n\"I know, my love,\" I said, as she reluctantly climbed out of bed. \"But we won't have to wait much longer.\"\n\n\"It's a good thing, too,\" Gracie said with a very soft chuckle, and pointed down.\n\nMy pajama pants did nothing at all to conceal my manhood as it stood at full attention. \n\n\"Yes, it's a VERY good thing!\" I said with an equally soft laugh, as I pointed at her chest, where her own arousal was evident.\n\nIt felt good to share a laugh with her, after all the seriously heavy things that we'd had to deal with. I think we needed that almost as much as we needed to spend some time alone in private! When we settled down, Gracie grabbed a blanket and made herself comfortable on the recliner. Almost instinctively, we reached across the space between us and joined hands, and soon after dropped off into a restful sleep. \n\n###\n\nDr. Khan saw me first thing the next morning. To my everlasting relief, he told me I was going to be released! It was a damn good thing, too, because at this point I was perfectly willing to sign myself out AMA. I'd had enough of this place!\n\nGrace called Elizabeth and Fleur while I got my scant few belongings together and dressed. They arrived just as I was given my discharge papers, and the four of us made our way out together. Grace hadn't driven, so we rode with them. After we were all settled in their Trailblazer, Fleur turned in her seat and handed me a small nylon case. Inside, I found my Kahr PM45 pistol and my spare magazine. \n\n\"Thank you, Fleur,\" I said, as I checked the handgun and slid it into it's holster. Grace had told me that Fleur had taken it before Uncle James drove me to the ER. \n\nFleur smiled and winked at me, and then we were off. I turned to look at Grace, where she sat next to me. Once again, we shared an almost psychic moment with each other. Elizabeth watched in bemusement. \n\n\"Wow,\" Elizabeth said softly. \"Fleur and I do that, every now and then. I hadn't realized what it's like to see it from an outside perspective.\"\n\n\"What do you mean, Elizabeth?\" Grace asked.\n\n\"I know that look,\" she replied. \"You were debating about telling us soemthing, but you weren't sure whether to do it now or wait. If I get a vote, I'd say tell us now.\"\n\nGrace and I both shared a smile. I'd had no idea we were that obvious! \n\n\"Do you remember my ex-girlfriend, Kelly Harris?\" I asked.\n\n\"Oh yeah,\" Elizabeth said, \"I remember her. I also remember the way she treated you!\"\n\nI smiled at Elizabeth, and then gave her the short version of the conversation Grace and I had had with Kelly last night. I then went on to tell her and Fleur about the video Kelly had made. Afterwards, the four of us were quiet for a few minutes, alone with our individual thoughts. Not surprisingly, Fleur was the first to speak.\n\n\"Was Trent arrested?\" she asked. \n\n\"Yes he was,\" Grace answered her. \"It was the last thing we saw before the end of the video. We can give you guys a copy, if you want.\"\n\n\"Yes, please,\" Elizabeth said. \"I'd like to show it to Mom.\"\n\n\"I think that's a good idea,\" I said. \"She might know what the deal is between Trent and this detective. Knowing that might possibly come in handy.\"\n\nElizabeth handed me her tablet and I transferred the file. I had just enough time to make sure it transferred properly before we arrived at our house. I saw our parents' RV parked on the curb in front of the house. \n\nAs we were getting out, Elizabeth stopped us briefly. \"Call us in a couple of days, and we'll get together, okay?\"\n\n\"We will,\" I replied. \"You two take care. Thanks again for all you've done!\"\n\n\"It's no problem,\" Elizabeth replied, smiling sweetly. \"That's just what family does!\"\n\nInside the house, we found Mom and Dad waiting for us in the living room. I wasn't exactly doing cartwheels at the thought of having this conversation, but it didn't fill me with dread, either. The confrontations were all over and done with. Grace and I had staked out our position, and our parents had staked out theirs. All that was left now was to hammer out the details...and clean up the proverbial mess. \n\nGrace and I shared another of our wordless conversations and decided to get it over with now, even though we both really wanted a shower and a change of clothes (not to mention some alone time!). We joined hands and sat down on the sofa across from where our parents were sitting. Mom had set out coffee and some of Grace's favorite herbal tea. I gratefully took a mug of black coffee. \n\nAfter taking a long, appreciative sip (Mom brews coffee the old fashioned way, and it's superb), I set my mug on a coaster and settled back on the couch. As I did, Gracie curled her legs beneath her and leaned into my side, resting her head against my shoulder. Mom stirred uncomfortably and Dad grimaced slightly, but neither of them chose to say anything. I was sorry they were uncomfortable, but they might as well get used to it! A less cheritable part of me wondered, if they felt this awkward about a chaste expression of affection like that, how were they going to feel when Grace and I began living as man and wife? \n\nDad finally decided to take the bull by the horns, as it were. \"Kids, we, uh, we already discussed the basics of our agreement while you were at the hospital, but I want to go over them again to be sure we're on the same page.\"\n\nMom, probably unconciously, settled against Dad in exactly the same way that Grace had settled against me, and Dad wrapped a comforting arm around her, and kissed the top of her head. \n\n\"Unless, of course,\" Dad began, \"you've changed your minds?\"\n\nGrace and I gave him identical exasperated looks, and he smiled ever so slightly.",
        "\"I didn't think you would, but it was worth asking,\" he said with a sigh. \"Okay, then. When Grace graduates this May, the clock starts ticking. As soon as you decide which job offer you're going to take, your Mother and I expect you two to get your own place. We will, of course, give you a reasonable amount of time to find something suitable. We understand that you can't start looking until you know where you're going, and it takes a little time to find housing. Still, don't drag things out!\"\n\n\"We understand, Dad,\" I answered for both of us. \"Please go on.\"\n\n\"Kevin, your Mom and I agreed when you started college that we would pay your tuition and book fees. That hasn't changed. We don't want to hobble your future by jeopardizing your education. However, there won't be anything beyond that.\"\n\nI nodded my head in understanding. That was what I'd expected and it was fine with me. \n\n\"You both own your own cars free and clear already. You already pay your own insurance and gas, so no changes are needed there. As far as furniture goes, you're welcome to take whatever you want from your bedrooms. Additionally, like I told you before, we are willing to give you some minor household stuff to help you get started, like pots and pans, and the like. We can discuss anything I forgot to mention when the time comes.\"\n\n\"Alright, Dad,\" Gracie said.\n\nDad's gaze hardened slightly. \"There are some things I expect while you are still living here,\" he began. \"Breaking one of these rules will mean breaking the rest of our agreement, understood?\"\n\nWe both said, \"Yes, Dad.\"\n\n\"First, we will be sending you money to take care of the house, just like we have been doing. Except for bullet holes, you've done a very good job of maintaining things while we've been away. We expect that to continue!\"\n\nAgain, there was nothing new there. I took care of the lawn, paid the utility bills, and did most the minor stuff that didn't require a plumber or electrician. Gracie did the sweeping, dusting, and general cleaning. We took turns with dishes, and we each did our own laundry. \n\n\"No problem, Dad,\" I said.\n\nHe nodded. \"Second \u2013 and this is really the most important point \u2013 we expect you to confine your loving to your bedrooms! No funny business on the couch, or on the kitchen table, or-\"\n\n\"Michael!\" my Mom interrupted. \"I think they get the point, dear!\"\n\n\"Right...uh, sorry, Cathy,\" Dad said, chagrined. \n\nGracie and I merely nodded to indicate we understood. Dad looked down at the carpet for a minute, lost in his thoughts. Mom gently stroked his cheek, wordlessly offering her love and comfort. \n\n\"This new...relationship between the two of you...it's a little hard for me to deal with, kids,\" he said softly. \"For both of us, really. I don't have your Uncle James' ability to \"let go and let God.\" I'm too hands-on for that. I guess I can understand \u2013 in abstract terms \u2013 how it happened, but here in my heart? No.\"\n\n\"Actually,\" Mom said, looking up at Dad, \"there's a small part of me that isn't surprised.\"\n\n\"Huh?\" Dad said.\n\n\"Oh my dear Michael!\" Mom said, caressing him again, \"I love you with every fiber of my being, but sometimes you are so dense! I mean, look at the two of them!\"\n\nMom gestured at Grace and I with her free hand, an almost-smile on her lips. \n\n\"Honey, you know they've always been close \u2013 far closer than I ever was with my siblings. Even James, whom I've always loved dearly. In fact, they were closer growing up than any siblings I've ever heard of.\"\n\nMom shifted against Dad in order to press a little more of her body against his. She smiled to herself as she recalled a dear memory, \n\n\"Kevin, you were one collicky infant!\" Mom said. \"You cried incessantly, until one night...you just didn't! On that night, your Dad and I slept all the way through until it was time to feed you, and we were shocked. In fact, I was afraid, at first, that something had happened to you! You can imagine my surprise when I walked into the nursery to find Gracie curled up with you in your crib, holding you!\"\n\nMom shook her head, smiling at the memory. \n\n\"It's still one of the cutest things I've ever seen, the way she was holding you close. There she was, barely two years old, herself, and she'd taken it upon herself to comfort her baby brother!\"\n\n\"To this day,\" Dad chimed in, \"We haven't figured out how Gracie managed to get into that crib!\"\n\nGrace and I laughed softly. We'd heard this story many times over the years, but it was one of the few that I never got sick of hearing. \n\n\"Let's all hope she only uses her powers for good!\" I quipped.\n\n\"Yeah, no kidding!\" Dad replied, in a brief moment of real humor.\n\n\"We quickly learned,\" Mom continued, smiling faintly at my joke, \"that when we let Gracie sleep in your crib, you let US sleep! That discovery quickly nixed the thought of trying to get her to stop doing it.\"\n\nMom sighed again, and Dad pressed another kiss on the top of her head. It struck me then, just how many mannerisms, gestures, and habits Grace and I had picked up from our parents! Our affectionate nature, the way we laughed, the way we touched...I wonder why I'd never seen this before?\n\n\"And then, there's the day Gracie told me she was going to marry you, Kevin,\" Mom said, quietly.\n\nDad and I stared at her in shock. Grace blushed, and grinned self-conciously. Obviously, Mom hadn't even told Dad this story. I don't know whether I was more surprised that Mom hadn't told me, or that Gracie hadn't!\n\n\"Mom, what are you talking about?\" I asked.\n\n\"I've never told anyone this. Only Grace and I know, unless she's told someone since then.\" Mom paused, looking at Grace. When Grace shook her head in a negative gesture, Mom continued the story.\n\n\"Kevin, do you remember that boy \u2013 I think his name was Tommy Duncan, or something like that, red-headed kid and big for his age?\"\n\n\"Oh yeah, I remember that punk all too well,\" I said.\n\nTommy Duncan had been the same age as Grace. He'd also been a seriously nasty bully. He picked on everyone at our bus stop. Grace had to deal with him for two years before I started riding the bus to kindergarten. But finally, it was my turn to witness him in action. I'd innocently asked Grace, after that first encounter, why she didn't tell someone.\n\nGracie had patiently explained that she HAD told people: the bus driver, different teachers, lunchroom monitors, etc. It hadn't done any good, because no adult ever caught him doing anything wrong, and most of the other kids were too afraid of him to speak up. I decided then and there that he wasn't going to bother my big sister anymore. But what could I do about it?\n\nI pondered the problem over, one weekend, and I got the solution in \u2013 of all places \u2013 Sunday School! The story of David and Goliath was powerful inspiration for a kid who was already demonstrating a strong creative streak. \n\nThat Monday morning, we were running just a bit later than usual because Mom had had to find me before she could walk us to the bus stop. I'd been finding heavy objects all over the house and stuffing them in my backpack. I'd spent a few hours Sunday after church, experimenting with how much I could weigh it down and still swing. I was sure I had it right; one way or the other, I was about to find out.\n\nSure enough, as soon as Mom was safely out of sight from the bus stop, Tommy made his move. I'd known in my heart Tommy was going to do something, but I was taken by surprise at the scope of his juvenile delinquancy! He knocked Gracie over into the grass. Then, while another boy held her down, he lifted her skirt all the way up. \n\n\"Everyone can see your UUUUNDERWEAR, Gracie!\" he hollered gleefully. \n\nGracie struggled against the boy holding her arms and kicked, trying to get loose. \n\n\"Wow, My Little Pony underwear?! How old are you?\" Tommy taunted again, paying absolutely no attention to the enraged boy watching his sister being humiliated. \n\nThat bastard, Tommy, never saw me coming. I gave myself a running start, and swung my weighted backpack with all my might. It connected with the bully right on his ass! I found out later that I actually cracked his tailbone and delivered deep-tissue bruises. \n\nTommy hit the ground, squealing like a pig. His accomplice looked at me in complete and total shock. No one \u2013 NO ONE \u2013 swung at Tommy! By the same token, Tommy didn't huddle on the ground bawling like a baby; that was what his victims were supposed to do! The whole situation was, if I can borrow a line from one of my favorite movies, inconceivable! He was still looking shocked when I tackled him, like a seriously under-sized lineman! \n\nI managed to knock him off of Gracie. I even (somehow) managed to land on top of him. I landed a single clumsy punch that didn't do much, before he easily threw me off of him. He then proceeded to teach me, the hard way, why attacking someone bigger and stronger than you is usually a bad idea. It was a painful lesson indeed, but the broken nose and multiple contusions were worth it in my opinion. Far better that they should beat me than do that to Gracie!\n\nIt didn't occur to me until years later to wonder why Tommy didn't try to pound the daylights out of me himself instead of letting his partner in crime do it. He didn't though; he didn't even try! He huddled off to one side, crying and holding his ass, looking like a kid that had fallen off the swings. It was pathetic. In later years, of course, I learned that most bullies actually turn out to be cowards of the highest \u2013 or lowest \u2013 order. When someone fights back, they typically do just what Tommy did.\n\nSeveral things resulted from that day. For one, my parents gave me the first truly serious scolding of my young life, while at the same time praising me to high heaven for rescuing Grace. For another, Tommy's parents transferred him to a private school of pretty strict regime. They'd threatened my parents with a lawsuit, until several other children who'd been there found the courage at last to come forward. \n\nSeeing Tommy get his ass beat by a kindergartener was apparently enough to break his hold over the kids he'd bullied. After that, Tommy's parents quietly agreed to pay MY medical bills, and forced Tommy to publically apologize to Grace. I don't know what happened to the boy who'd held Gracie's arms down (and beat the snot out of me). I just know I never saw hide nor hair of him again. After that, kids tended to leave the two of us alone. We were known to watch each other's backs. \n\nMom broke me away from my memories as she spoke again. \n\n\"When we came home from the doctor's office the day you whipped Tommy's ass, Kevin, we immediately put you to bed. Gracie was in tears, because she thought you'd been seriously hurt! I explained to her that you'd heal up just fine, that the bandages were to make sure your nose healed straight. That night, she told me she was going to marry you, Kevin!\" \n\nGrace turned her face up to me. I gazed back, eyes overflowing with love for her. I'd never known about that, and it touched me very deeply!\n\n\"She told me,\" Mom continued, noting the look, \"that she was going to sleep in your bed with you from then on, because that's what married people did! We couldn't stop her! You probably remember that, Kevin.\"\n\n\"I do,\" I said, still staring into Grace's eyes.\n\n\"Gradually, that tapered off. She finally stopped when the bandages came off of your face, and she could see for herself that you healed just fine.\" Mom sighed again, before she continued. \n\n\"When Trent told us about the two of you...uh...being together...I had hoped that it was another, similar case and that it would pass. Now I understand what's truly happened. It wasn't a phase Grace was going through. What happened then MIGHT have been just a little girl's crush, but with what I know now, I think it was really the beginning of real love. That's when it all began, wasn't it, Grace?\"\n\n\"Yes Mom,\" Grace said, speaking to Mom but never once looking away from me. \"The feelings never changed a bit, I just buried them for a while. I was never sure if Kevin felt the same way. Then, in high school, he met Kelly, and I could tell he was head over heels in love with her. I resigned myself to having to settle for someone else. But I was okay with that, because if Kevin was happy, that was enough for me.\"\n\n\"You-\" Dad began, but stopped with something that sounded a lot like a sob. \"The two of you always sacrificed for each other, even growing up! Oh, that's not to say you didn't have your share of sibling arguments! But your Mom and I were always amazed at how quickly you made up with each other!\" \n\nDad surreptitously wiped his eyes, and gazed at Mom. \"Why didn't you tell me what Gracie said before, Catherine?\"\n\n\"Well,\" Mom began, \"Like I said, I was sure it was a phase she was going through. After all, Kevin had come to her rescue. It was only natural that there be a little hero worship there. She was a little girl, and little girls think that way! Besides that, who would take a statement like that seriously when they're hearing it from a 7-year-old? But also, I wasn't completely sure how you'd react.\"\n\nDad nodded in understanding. For my part, I was so caught up in the emotion of the moment, that I did what was natural. I leaned down and took Grace's willing mouth with my own, kissing her passionately, deeply, and wetly. I was drowning in her, when the sound of Dad loudly clearing his throat broke through the haze of passion surrounding us.\n\n\"Remember what I said about keeping it in your rooms?\" he said, gruffly.\n\n\"Yeah,\" I said, \"Sorry about that.\"\n\n\"It's...it's okay. I understand about losing yourself in the moment. Just...just make the effort, alright?\"\n\nThe four of us sat quietly together, able to enjoy a family moment in spite of all that had happened. Finally, Dad looked at his watch. \n\n\"Well, we've said what we had to say. It's time we hit the road.\" \n\nDad and Mom stood and hugged us both, and wished us Happy New Year. Then they were gone. Gracie and I watched them drive away. We stood at the front window, arms around each other, watching until the RV turned the corner at the end of our street and vanished from sight.\n\nGracie released me with a smile, and headed upstairs, shooting a suggestive look over her shoulder at me. I got the hint! I hurriedly made sure the doors were locked and the alarm set. Then I hurried up to join her! \n\nUpon reaching my room, I quickly stripped, grabbed a towel and ran for the bathroom I shared with Grace. She was already in the tub, scrubbing herself with her loofa sponge. I wasted no time slipping in behind her. As soon as I was settled, she leaned back against me, relaxing in my arms. \n\nI inhaled the mild floral scent of her moisturizing body wash, blended with her own subtle scent. After a moment, I picked up the shower wand and wet Gracie's beautiful chestnut-brown hair with the warm water. Then I picked up the shampoo bottle and squeezed a good-sized dollop in my hands. Gracie closed her eyes and moaned softly in pleasure as I massaged the shampoo into her hair and scalp.\n\nThere's something unbelievably sexy and intimate about washing a woman's hair. I don't really know how to explain it, it's just something I felt at that moment. Maybe it was the way Grace totally relaxed against me as I lathered her hair. Or maybe it was the complete and total trust she displayed, simply laying there and trusting me not to get it in her eyes. Like I said, I don't know why, I just know it was one of the most erotic moments of my young life.\n\nGrace luxuriated in the touch of my hands. I enjoyed touching her as much \u2013 if not more \u2013 as she enjoyed being touched. After savoring it for a few more minutes, I picked up the wand again and rinsed her hair clean. Then I squeezed out some conditioner and repeated the process, slowly working it into her lovely hair.\n\n\"Ahhhhh,\" Gracie sighed, contentedly, completely limp with pleasure. And she was the only limp thing in this tub, believe me! The sheer sensuality of the moment had me so hard, I was afraid I might drill a hole in Gracie's lower back! \n\nI finished working the conditioner into her hair. While I waited for it to set in, I gently stroked her wet skin with feather-light touches. This was Grace's favorite way to be touched: gentle, light strokes all over her body. I circled the sensitive flesh of her throat before moving to her even more sensitive collar bones. She shuddered as I touched the upper slopes of her firm breasts, and sighed when I veered away from her rapidly hardening nipples. \n\nI swept gentle finger tips over her abs, enjoying the warm softness of her belly. She gasped when I moved them through the neatly trimmed patch of hair over her womanhood, and again sighed when I veered away before touching her mound. \n\nI picked up the wand again and rinsed her hair until the remnants of conditioner were gone. \n\n\"Ooooooh,\" Grace moaned in delight, as I went back to caressing her. This time, I stayed away from the hottest of her hot spots. I didn't want to get her too aroused in here! I touched her more firmly now, massaging as well as caressing, working her firm, strong muscles with my hands as she cooed in pleasure. Gracie recognized the emotions behind each touch; she felt my deep love for and commitment to her. She felt my desire to pamper her. And she felt my desire to take her! Only my solemn promise to our parents stopped me from taking her right there in the tub. \n\nMy beautiful sister was so relaxed she was almost asleep, laying bonelessly against my chest. I gently kissed her forehead, and she smiled, proving she was still somewhat awake. Moving as carefully as I could so as not to disturb her, I washed myself and shampooed my own hair. At last though, I had to rouse her so I could rinse.\n\nGrace crouched at the opposire end of the tub as she watched me finish rinsing off in the rapidly cooling water. It was akward, doing it without getting the sutures in my left cheek wet, but I managed. \n\n\"There's something so erotic about you washing me, Kev,\" she said softly, not knowing (probably) that I'd been thinking almost the exact same thing earlier. I just nodded my head in wordless agreement before beginning to drain the tub. \n\n\"Just now, while you were washing and touching me...it was like I could feel everything you were feeling. Kevin, the way you love me...there aren't any words!\" she said, as I handed her a towel.\n\n\"But there is a word, and you just said it, Gracie,\" I replied, as I gently worked at drying her hair. \"It's love! Love, and dedication. It's always been there between us. Even Mom and Dad see it, now, although they may not like admitting it.\"\n\nI picked up her soft hair brush and started working it through her hair. Gracie keeps her beautiful hair at about shoulder length, so it was feminine but manageable. It was easy to run the brush through her tresses, and I enjoyed it. We watched each other in the mirror as I tenderly performed this task for her. \n\nWhen I'd gotten all the tangles out, she took the brush from me and set it back on the counter. \n\n\"No need to style it for me, love,\" she said playfully. \"It's just going to get all messed up again in few minutes.\"\n\nAnd with that, she took my hand and pulled me towards my bedroom (which had actually become OUR bedroom, really; I had a bigger, more comfortable bed than she did, so it made sense.) Once there, she made sure the curtains were tightly closed, then turned down the bed. She smiled and beckoned me to her. \n\nI pulled her close and she molded her body against mine as we kissed. I felt a strong tremor in my loins, and growled in frustration. I was so worked up and hot from our bath, that I was dangerously close to cumming already! Gracie slowly broke our kiss, nibbling my lower lip playfully as she did. Her eyes danced with love and delight, aware of, but not concerned by, my over-excited state. ",
        "Gracie slowly, sensually sank to the floor until she was kneeling at my feet. She looked deep into my eyes as she took her time running her warm, wet tongue down from my navel, following my treasure trail down toward my raging erection.\n\n\"Ooooh, Gracie!\" I moaned in pleasure. \n\nShe gazed up at me as she lovingly stroked my shaft with broad, flat licks; she knew me as well as I knew her, after all. She was well aware of how much eye contact turned me on! But there was that rapidly building pressure in my balls...\n\n\"Gracie, love...I'm sorry, but...I'm so close...I don't think I can hold back...\"\n\n\"Don't be sorry, my love! Enjoy it! I want to show you how you make me feel!\"\n\nShe gently stroked the ball of her thumb over the purple head of my cock, earning a gasp from me. She grinned impishly.\n\n\"Don't hold back, Kevin...\" she said in a breathless whisper, before taking my thick shaft in her mouth!\n\n\"Oooooohhhh, Grace!\" I moaned, urgently. \"Oh Baby...\"\n\nGracie took me as deeply into her mouth as she could, caressing my throbbing shaft with her tongue as she did. She added gentle suction on each upstroke, all while never taking her incredible eyes away from mine. Looking down at her as she pleasured me, I could see the deep love this woman felt for me. I sensed the sheer delight she took in giving me pleasure!\n\nMy orgasm hit me powerfully, the intensity of it weakened my knees and took my breath away. There was quite simply no time to warn my beloved; it was upon me! I cried out in bliss as I came. \n\nGracie swallowed my seed, her eyes smoldering with passionate fire. She STILL hadn't broken eye contact! Even though I'd just had an extemely intense and powerful orgasm, Grace didn't let up. She continued sucking my manhood and tugging ever so gently on my balls. She kept me rock-hard and excited. In fact, despite the force of my orgasm, I was more excited than before. But now I would have the staying power to show my beloved Grace just how good her deeply intimate and loving act had made me feel! \n\nI ran my fingers through Grace's hair, caressing her as I gently withdrew from her mouth. She gave my shaft a last, lingering lick before I pulled her to her feet and kissed her deeply. I stroked her back, her flanks, and then her breasts, as we hungrily kissed one another. It was good that Gracie had let me cum, I thought to myself. The touching and the full body contact were driving me to new heights of arousal.\n\nI could tell Gracie was feeling it too. Her eyes burned with her desire, her delicate nipples were like little diamonds beneath my palms, and the scent of her aroused womanhood was driving me wild! I wanted her so badly then \u2013 even more badly than I had wanted her our first time together, in fact.\n\n\"I want to try something,\" I said. An idea had suddenly occurred to me, and I thought Gracie would love it! She had treated me to some wonderful oral delights before, but this had been really special. It was so incredibly erotic, it made me throb just remembering! I wanted my beloved to feel the same way. \n\nI kissed her again, before moving down to gently flick her rock-hard nipples with the tip of my wet tongue. She gasped and moaned as I blew a soft stream of cool air across the moistened nubs. I knew how needy she was, so without further teasing, I slowly dropped to my knees at Gracie's feet. Her eyes glowed in anticipation. Oh, is she going to be surprised, I thought to myself, when she feels what I'm about to do!\n\nThis time it was ME holding eye contact with HER, as I kissed my way down her warm, silky belly. I paused long enough to circle her cute little belly button with my tongue before continuing down. I very, very gently tugged the soft curls of her well-trimmed bush, enjoying her shiver of delight! \n\nAt last, I reached the apex of her thighs, and pressed a gentle kiss directly on her mound. \n\n\"Mmmmm, Kevin,\" Grace whispered as I gently licked the lips of her sex. \n\nThe musky scent and taste of her excitement was a slice of pure heaven for me! I carefully moved my body into a solid crouch, so that I could support Gracie's weight without losing my balance. If this worked out the way I hoped it would, I'd need to be steady as possible. \n\nJust as eye contact is one of my big turn-ons, displays of strength are one of Grace's. This should do the trick, I thought, as I made my move! I slid my arms beneath her knees and lifted her calves over my shoulders. I cupped her gorgeous, round little ass cheeks in my hands to keep her balanced. \n\n\"OH!\" Gracie cried, as this new stance pressed her womanhood directly against my hungry mouth. \n\nI slowly stood up, still holding her in place. The extra time I'd spent on my workout routine paid off, as I straightened to my full height while holding my beloved tightly. The sutures in my left cheek painfully reminded me that they were still there, but I didn't care. Grace's electrified cry of pleasure was more than worth it!\n\n\"Kevin!\" she shouted, \"Ohhhhh!\"\n\nMy tongue slid eagerly over and through her feminine folds. I moaned at the musky taste and reveled in her scent; Gracie was truly a treat for all 5 senses! Then, I started licking her clit, alternating the broad flat of my tongue with gentle flicks using just its tip. Her toned thighs tightened against my arms and shoulders as her passion built, and I knew it wouldn't be much longer before she, too, came!\n\n\"YES!\" she gasped, \"YES, BABY!\"\n\nHer voice trailed off into wordless moans and cries as she came! I kept up the attention to her clit as she came, extending and deeping her orgasm. Soon though, I felt her hands on the back of my head, gently tugging my hair. I obeyed her wordless request and backed away from her clit, gently licking her inner lips. \n\nAfter disengaging from her delightful sex, I carefully set my beloved on our bed and moved on top of her. She held her arms open for me and pulled me close, kissing me. I stroked her body as we kissed, giving her a moment to come down from her orgasm. \n\n\"Kevin,\" she whispered, beaking the kiss. She didn't need to say anything more than that; I knew what she wanted.\n\n\"Oohhhh,\" she gasped softly, as I found her entrance and slipped inside of her. \n\nI let out a pleasure-filled moan myself, as I slid my full length into her. I took just a moment to savor the incredible wet, tight, heat of her womanhood surrounding me, before I began the steady rhythm I knew Gracie loved. Gracie wrapped her arms around my shoulders as we moved together, and lifted her head to kiss me. \n\nThis was only our third coupling, but I'd worked hard to learn what she liked; she'd done the same for me! As our lips parted, I leaned down to feast on her breasts. Once more, I teased each nipple with the wet tip of my tongue. Grace gave me a delighted laugh, and then gasped as I increased the pace of my thrusts. She felt amazing, and the love I felt radiating from her deepened the experience for both of us. As much as I didn't want this to end, I could feel my second orgasm building rapidly.\n\nSuddenly Gracie's eyes flew open wide and she gasped. I felt her feminine muscles grip my shaft, and I instinctively thrust deeply into her. Feeling her orgasm while I was inside of her was another thing I'd never tire of! She pulled me close as she rode the waves of bliss radiating from her core. \n\nThe pace of my thrusts increased again, as the pressure built in my loins. I slipped my right arm beneath her left knee and lifted it, changing the angle and allowing myself to slide in deeper. Her eyes flew open wide, and she had another, smaller orgasm. The feeling of my beloved cumming again was too much!\n\n\"Gracie, love! I'm CUMMING!\" I cried.\n\n\"Yes Kevin!\" she said, wrapping her arms around my neck and pulling my face closer to hers. \"Give me your cum, my sweet Kevin! Let it fill me, my love! I love you, Kevin! I love you!\"\n\nHer sweet words continued until I felt my seed spurt from me, pouring into her welcoming depths.\n\n\"Grace!\" I cried. \"I love you, Gracie, I love you!\"\n\nGrace rolled her hips, as only a woman can do, meeting my final, spastic thrusts. She pulled me in for another kiss as she did, drawing out the pleasurable feelings for me as long as she could. I moaned into her mouth as I my shaft quivered one more time, before slipping out of her. \n\nI carefully rolled off of Grace. She moved with me, keeping me close, until we were both laying on our sides, facing one another. When the kiss ended, she snuggled her face into my chest. I heard her giggle as my hairs tickled her nose. She turned her face back up, gazing at me with love. We held each other in the afterglow of our lovemaking, basking in the feelings. We shared a long moment of loving silence; two people so close to one another, that there was no need for pillow talk. The feelings washing over and through both of us were more than enough.\n\nI pulled the comforter over us, and tucked my drowsy sister into the crook of my shoulder, resting her sweet face against my neck. Her soft, steady breathing was a lullaby for me, too. In moments I joined her in the world of dreams, were no one wished us harm, and we were free to love each other without judgement.\n\n###\n\nI awoke to raw edged agony the next morning. My cheek burned and throbbed, and for once I had no temptation at all to rub my face.\n\n\"Shhh, love,\" Gracie soothed.\n\nI felt her gentle touch, and smelled the odor of rubbing alcohol, as she cleaned around the sutures.\n\n\"I'd hoped to finish changing the dressing before you woke up,\" she said, regretfully. \"I didn't want you to have to feel this!\"\n\n\"AH!\" I said, as the sting of alcohol in the wound increased the burning feeling. \"it's okay, honey,\" I said, gritting my teeth. \"It has to be done. It's sweet of you to do it for me.\"\n\nShe smiled down at me as she worked. \"Oh honey! It's not me being sweet! It's me taking care of my man! It's nothing more or less than you deserve!\" \n\nShe finished cleaning around the sutures, applied the antibiotic cream with a cotton swab, and then put on a fresh dressing. She disposed of the trash, and swiftly returned with ibuprofen tablets and a glass of water. \n\n\"I know the strong pain meds put you to sleep, so I brought some extra-strength ibuprofen tablets,\" she said. \"They should ease the worst of it, and if it gets too bad, then I'll give you the prescription stuff. And trust me, lover, you WILL take your meds if you need them!\" Her tone brooked no argument. \n\nI smiled, and gratefully swallowed the pills. Grace caressed my forehead.\n\n\"The bruising on the other side of your face is already starting to fade,\" she noted. \"With everything you've been through, Kev, it's a good thing you heal quickly.\"\n\nI carefully sat up and swung my legs out of bed. She tenderly kissed me on the top of my head. \n\n\"Go wash up, sweetheart, and I'll fix us some breakfast.\"\n\nI washed and dressed, and found my beloved in the kitchen. After a light meal of scrambled eggs and bacon, we talked about our future.\n\n\"Have you had any more ideas about which offer you might want to take?\" I asked her. (You might remember, I'd already told you she'd received several preliminary offers from some very good clinics and private practices.) \n\n\"Yes,\" she said, with a nod. \"I'd really like to stay here in Indiana, and there were several good offers. St. Vincent's is my favorite.\"\n\n\"Indianapolis or Bloomington?\" I asked, not that it really mattered to me. I could easily continue my own studies in either city. \n\n\"I'm leaning more towards Bloomington, I think,\" she said. \"The money is about the same, but I think we'll probably like living in Bloomington better. Plus, it's closer to Grandma and Grandpa, and it's close enough that Fleur and Elizabeth can come see us whenever they want.\" \n\n\"Sounds great to me,\" I said, \"I can finish up my degree at IU, it's a great school. Honestly though, wherever you are is where I'll be, no matter what!\"\n\nI stood up and kissed her, before starting to clear the table. Gracie and I did the dishes together. As I reached up to put our plates back in the cupboard, she caught me right on the ass with the dishtowel. The snapping sound was loud, and I'll admit, it stung a little. I jumped a foot, at least, and gave startled shout.\n\nGracie giggled girlishly, her eyes dancing with merriment.\n\n\"What, Kev?\" she asked, innocently. \"Did I snap the towel at you? Did I hurt your little tushy?\"\n\nI growled, giving her a fierce look that didn't fool her at all. When I turned fully around to face her, she read the intent in my eyes and squealed. Gracie took off like a rocket, laughing as I chased her through the house, just like we'd done as children. I finally caught her after a 6-minute chase through the house. I wrestled her to the floor and tickled her unmercifully! The sound of her playfull laughter was the sweetest music; it filled the house, driving away the dark emotional shadows that had been gathering since the day after Christmas. \n\nAfter she surrendered, I picked her up and put her over my shoulder, and carried her back to the kitchen. I set her down carefully, grinning as she straightened her clothes. She playfully smacked my upper arm. \n\n\"Barbarian!\" she said, teasingly.\n\n\"Arg,\" I said, pretending to scratch my balls. \"Me not get it...who Barbarian is?\"\n\nGracie giggled again, as she put away the last few dishes. I moved to help her when my cell phone rang. I looked at the screen and groaned. It was my friend Tony calling. Tony was my friend and shooting buddy, but he was also the call center operator for Jenkins Property Management, the landscaping business I worked for. Grace gave me a sympathetic look as I answered the call.\n\n\"Hey Kev,\" came Tony's voice. \"Please tell me you're released to work!\"\n\nI was tempted to tell him no, but I don't pull stupid crap like that. He wouldn't call me unless they were swamped. \n\n\"I'm cleared to work, Tony. What've you got?\" I asked, my irritation only partially in jest. \n\n\"You haven't looked out your windows this morning, have you, Kev?\" he replied. \"O'course not, cause if you had, you wouldn't be asking ridiculous questions!\" \n\nI stepped over to the french doors in the kitchen and parted the blinds so I could look out into the back yard. I was shocked! There was at least 6 inches of snow on the ground, possibly more. It was tough to tell with the wind swirling it around.\n\n\"Wow!\" I said.\n\n\"Tell me about it!\" Tony said. \"Anyway, Mr. Jenkins is calling all hands on deck (Mr. Jenkins probably put it exactly that way, too; he was ex-Navy, a 20-year vet, and he tended to say things like that.) I need you to come over, get one of the big trucks, and head over to Fairview Manors.\" \n\n\"Okay, what am I plowing over there?\" I asked, picking up my tablet from where I'd left it last night.\n\n\"Several places, but here are the highlights: The Miller place, the Dean's, the MacCallister's, and the Forster's. Oh, and the Fairview Country Club, too. I'm emailing the full list along with street addresses to you now. You got maps?\"\n\n\"Yeah,\" I said, bringing up my Maps app. In a few seconds, the email came through and I plugged the first address into Maps. \"Okay, those are all pretty big properties, Tony. That's gonna take me most of the day.\"\n\n\"I know,\" Tony said, a hint of apology in his voice. \"But look on the bright side: those are all in the most expensive neighborhood in the county, and Mr. Jenkins charges a little extra for rush jobs. You should get a handy bonus!\"\n\nI grunted in acknowledgement of his point. \n\n\"They're all on our regular contract service plan so it's the standard removal deal, plus sidewalks,\" Tony continued. \"The Country Club also gets all parking areas and accessways cleared.\"\n\n\"Yeah, I figured that one out for myself,\" I grumbled as I looked at the satellite image for the different customers' properties. With the amount of snow on the ground right now, I'd be lucky to finish before dusk, and that didn't include driving time! Oh well, I could sure use the money...\n\n\"Okay, Tony, put me on the board. I'll be at the garage in about 20 minutes or so,\" I said, resigned to my fate.\n\n\"Thank you, Kevin, you're a lifesaver!\" Tony replied, and ended the call. \n\nI turned towards my beloved. \"Gracie, honey, I've-\"\n\nA smiling Grace handed me my lunch box, a thermos of hot coffee, and my rucksack that I used to carry my tablet and a few other odds and ends when I was working. She winked at me, the gesture causing her nose to wrinkle in the cutest way!\n\n\"I knew, when your phone rang, what it meant! I packed you a couple of turkey sandwiches, some apple slices, cheese cubes, and bottled water. I also made some coffee. It's from the machine, though,\" she said, apologizing. \n\n\"Thank you, Sweetheart!\" I said, pulling her close and kissing her.\n\n\"I also made sure the chargers for your phone and your tablet are in your pack. I put the bottle of Ibuprofen in your lunch box. Oh, and your other spare magazine is in your ruck, too. You never know.\" Her face was more serious, now, and I nodded in agreement.\n\n\"Thank you, Gracie,\" I said again, leaning in to kiss her tenderly.\n\nShe stroked the right side of my face, after we parted, smiling at me. \"You're welcome, Kevin. It's the least I can do for you! Please be careful while you're working today. You know, better than I do, how many people have trouble driving in this kind of snow. I want you to come home to me!\"\n\n\"I'd move heaven and earth to make it happen, if I had to, Love,\" I said. \n\nI held her close for just another moment, before I hurried back up to my room. I put on my thermal base layer and socks, then my heavy work jeans, my steel-toed boots, moisture-wicking undershirt, and a light sweater. My holster and pistol went inside my waistband. Then I donned the new coat Grace had given me, along with my hat, scarf and gloves. My bright yellow contractor vest with it's reflective stripes went over the jacket.\n\nOn my way out the door, after grabbing my lunch box and rucksack, there was time for one last, lingering hug. It was damn hard to leave this woman, I thought to myself. I could hardly force myself to do it!\n\n\"Love you, Babe,\" I said.\n\nGracie smiled. \"And I love you, sweetheart!\"\n\nAs I drove away, I noticed that she watched me from the front windows until the house was out of sight. \n\n###\n\nIn spite of the fact that the city plow trucks were running behind, it didn't take me long to get to the company garage. I checked out one of the big F350 Superduty trucks. The garage crew had already mounted the snow plow and filled the salt spreader, so all I had to do was make sure the fuel tank was full and get moving. \n\nI propped my tablet up where I could see the screen and brought up Maps, and off I went. The first property, the Dean's, went quickly; it was just a driveway (a long driveway, but still just one) and the walks, which had to be done with a shovel, of course. Mr. Dean gave me a generous tip when he saw that I'd cleared the walk from the detached garage to the back door, without wrecking any of his kids' snowmen in the process.\n\nThe Miller's house was next because it was closest (this neighborhood was very spacious; the houses were all sitting on at least an acre-sized lot each, and some were a good deal larger). This property took a lot longer to plow. The driveway wan't any longer than the Dean's had been, but it was a great deal wider. It could easily have handled three lanes of traffic, I estimated. In addition, the Millers wanted both the front and back walks shovelled, plus the garden path! \n\nI balked at this last because that wasn't in the contract, but in the end, I went ahead and did it. They're paying customers, after all, but...damn! So, I got a good workout at that address. At least they, too, tipped well. That certainly went a long way towards taming my outrage. I had just finished when the CB radio in the truck crackled.",
        "\"Base to Unit 4,\" came Tony's annoyed voice.\n\n\"Go for 4,\" I replied, after picking up the mike.\n\n\"TX base,\" he said.\n\nI wondered what was so Secret Squirrel that he couldn't say it on the radio, but whatever. I picked up my cell and called in. He picked up after only one ring. \"Kev, what's your 20?\" he asked, still in that annoyed tone of voice.\n\n\"I just finished at the Miller place. I'm still sitting in their driveway. Why?\"\n\n\"Alright, haul ass over to the Forster place next, will ya?\"\n\n\"Okay,\" I said, picking up my tablet to check Maps. \"Tony, that takes me 20 minutes out of the way, it's going to throw off my schedule for our other customers. What's going on?\"\n\n\"Old Man Forster has been calling the office every ten seconds,\" Tony growled. \"The fucker is driving me insane! He wants his drive plowed now, so it will be cleared before his wife gets home. He doesn't want to hear anything about schedules! He-\"\n\n\"Okay, Bro, calm down!\"\n\n\"Sorry Kev,\" he said, after a minute. \"Look, please just get over there ASAP. I'll work something out with the other folks on your schedule, alright?\"\n\nI agreed and hung up. Sighing, I dropped the truck in gear and got a move on. When I made it to the Forster place, something instantly struck me as odd. The place had an attached garage that was easily big enough for four cars, yet there were three sitting outside in the drive way. I sighed, seeing that I'd have to do that part with a shovel. \n\nThe other thing that struck me as wrong was the cars themselves. They were older. They were in decent condition, but none of them was newer than 4 or five years old...and they weren't exactly BMW or Lexus, either! In most neighborhoods that would be perfectly normal, but this was Fairview Manors. The property values here were the highest in the county...hell, the highest in this part of the State! No one who made less than 6 figures (and HIGH 6 figures at that) could afford to even LOOK at a house in this neighborhood, much less buy one! \n\nIt just looked wrong. That didn't stop me from getting to work, though. I plowed as best I could with the three cars in my way. It was easy to see why they were still were they were. The City had plowed the streets here (it was Fairview Manors, and several city councilman lived here), but the big plows had left a ridge of snow at the end of the driveway that most average cars would have trouble getting over. The company truck I was in, with it's powerful Cummins Diesel engine, massive tires, and 4-wheel drive had no trouble, but my Subaru never would have. \n\nI finished the end, worked my way carefully around the three trapped cars, and plowed everything that was safe to do. Then I got to work with the shovel. Every time I looked toward the house, I noticed someone watching me. There was a middle-aged man, about mid 50s, and three much younger women in the front room of the ground floor. The man was staring unbrokenly as I worked. The women all looked nervous. The three of them wore what looked \u2013 oddly \u2013 like cocktail dresses. Strange garb for this time of morning.\n\nSomething clicked for me just then. Forster! I've lived in Highland all my life, so I know that name isn't all that common here. These people had to be related to Lance Forster! He'd said his family was \"Old Money,\" and he'd mentioned the Fairview Country Club...\n\nI shook my head at my train of thought. So what if this place does belong to Lance's family? Who cares? Just do the job as fast as you can, there are other customers waiting! I finished the drive, and started on the front walk. It was much shorter than the walks at the other places, thankfully! Even more thankfully, there wasn't a back walkway, just a deck.\n\nThen, to be nice (and hopefully get a good tip) I brushed the coat of snow off of the three cars, which I'm assuming belonged to the three ladies in the window. Afterwards, I trudged towards the house. As usual, I made sure my body cam was recording. After being involved in several lawsuits and damage claims over the years, Jenkins Property Management gave all of it's work crews body cams. Dash cams were standard for all company vehicles as well. If nothing else, it saved a lot of time in court! \n\nI walked up to the door and rang the bell. The man I'd seen earlier answered the door.\n\n\"About time you got here!\" he said rudely. \"My daughter and her friends have been waiting all night to get out! Not to mention the fact that my wife is due home very soon!\"\n\n\"We apologize for any inconvenience, sir,\" I said, politely, ignoring his tone. Mr. Forster struck me as the kind of person who wouldn't react well to politeness when he was angry...maybe I could kill him with kindness. I handed the invoice to him, and waited expectantly.\n\n\"If you're waiting there for a tip, the only tip you're going to get is 'don't eat yellow snow!'\" he sneered.\n\n\"No, sir, I was actually waiting for you to pay the invoice I just handed you,\" I said, politely. \"Jenkins Property Management has an immediate billing policy for urgent rush jobs. That fact was covered in the service contract you signed with us,\" I helpfully reminded him. That clause had been added at about the same time as the body cams. \n\nHe grimaced, wanting to argue the point. He apparently thought better of it when I made a point to look past him and smile at the three women.\n\n\"Good morning ladies! I hope you brought some warmer clothes to go home in!\" I said. \n\nForster glared at me. \"Wait here,\" he commanded, pointing at the doorstep, clearly not wanting me in the house. It was fine with me. I'd gotten such a workout from all the shoveling that I'd had to partially unzip my heavy coat so I didn't sweat too badly!\n\n\"So, which of you is Miss Forster?\" I asked, smiling. I had a suspicion, and if I was right...\n\nThe three women looked at me in confusion. That confirmed my suspicion: none of these women was any relation to Mr. Forster. The old goat was having a little get-together of his own while the wife was out of town. His pleasant morning-after had been interrupted by the discovery of all this snow. He must have completely freaked, knowing he had to get these women out of here before MRS. Forster got back!\n\n\"Uh, why did you think one of us was named Forster?\" one of the ladies asked.\n\n\"Well, Mr. Forster just said his daugher and her two friends were stuck here all night, and needed to leave. You're the only other people I see standing here. And your dresses, pretty though they are, are a little out of place at 11:30 on a Sunday morning. You were here all night, right?\"\n\n\"Yes-\" another woman said, before instantly shutting her mouth. She looked at me in absolure horror. The smile on my face faded as I made note of the fact that that particular lady was wearing a wedding band. Was that absolute proof of anything inappropriate? No. Did it look really bad? Oh HELL YES! Mr. Forster came back suddenly and slapped a check in my hand.\n\n\"Here!\" he said, snarling. \"Now get yourself out of here!\"\n\nHe slammed the door in my face. I looked to be sure he'd made the check out correctly, for the full amount, and signed it. Then I looked up at the closed door. \n\n\"Thank you for choosing Jenkins Property Management for all of your landscaping, trimming, lawncare, and snow removal needs! Have a nice day!\"\n\nAs I walked back to the truck, I made a decision. It was one of the easiest decisions I've made recently. I picked up my cell phone and the card I'd been given in the hospital.\n\nLance picked up after a couple rings. \"Hello?\" he said, in a cautious tone.\n\n\"Lance, it's Kevin Richmond. I think I have something that just might help you.\"\n\nHe was quiet for a second. Then, he said, \"What would that be?\"\n\n\"I don't want to get your hopes up too much, but I have some video I want you to see. If it's what I think it is, it'll be the start of getting some leverage that'll help you out of your situation. If it's not what I think it is, you'll have wasted a few minutes of your time. Nothing more.\"\n\n\"When and where?\" he asked, getting right to the point.\n\n\"I'm about to take a 30-minute lunch. Meet me at the coffee shop at 4th and Davis as soon as you can.\"\n\n\"I'll be there in ten,\" he said, and hung up.\n\n###\n\nThirty minutes later, my ribs were still tender from the bear-hug Lance had given me after looking at the body cam video. He'd confirmed that the man at the Forster house was, in fact, his dear old Dad. He'd also let me know that, while he had two younger brothers, he did have any sisters at all! I'll never forget the look on his face as he copied the body cam video to his laptop. He knew he'd need to do a little of his own legwork to iron things out, but this gave him a starting point. With this kind of leverage, he might finally be free!\n\nI finished the rest of my customer list, including MacCallister place, and the Fairview Country Club just before dusk. The people at most of the other places tipped well, I was happy to note. I returned the truck to the garage and signed it back in. Afterwards I trudged back to the office to turn in the office copies of my invoices, the checks, and to take my name off the duty board. I was still on-call for the rest of the week and the New Year's holiday, of course, but for now I could go home.\n\n\"Hey,\" Tony said, tiredly, stepping out of the office.\n\n\"Hi Tony,\" I mumbled, slinging my ruck over one shoulder. \n\n\"Was it bad, over at the Forster place?\"\n\n\"Better for me than it will be for him, I'll bet,\" I said with a smirk.\n\nHe looked at me in confusion, then shrugged. \"Whatever, as long as I don't have to hear from that asshole for a while. Later, Bro!\"\n\n\"Take it easy, Tony,\" I said, dropping into my Subaru. \n\nThe drive home was pretty quick, fortunately, as I was beat. The city's plows had had time to clear the major streets, and soon I was pulling into the driveway. Gracie was waiting for me at the door. As soon as I was in the house, she took my ruck and my lunch box. She put her arms around me and held me close, even though I'm pretty sure I smelled like...well, I couldn't have smelled very good with all the sweating I'd done. \n\nGrace kissed me, and I forgot my discomfort completely. When we parted she smiled, lighting my world right up!\n\n\"Go clean up, sweetie,\" she said. \"I'll get some dinner together for us.\"\n\n\"Thank you, Gracie,\" I said. \"That sounds great!\"\n\nI headed upstairs and took a quick shower. The warm water revived me, and the smell of whatever Grace was cooking reminded me it had been quite a while since lunch! She had made spaghetti with meatballs, and garlic bread. We shared a wonderful meal together, and cleaned up together afterwards. \n\nBy the time we finished, I was ready for bed. It'd been an exhausting day.\n\n\"Honey, I'm sorry, I know it's only 9, but I can hardly keep my eyes open,\" I said, apologetically. \"I'll understand if you want to stay up and watch a show, or something-\"\n\n\"Don't be silly, Kevin!\" Grace said. \"I've spent the whole day apart from you. I'm not letting you go to bed without me!\"\n\nWe headed upstairs and brushed our teeth. I stripped down to my boxers and climbed into bed. Gracie put on an old T-shirt of mine and climbed in next to me. She pulled me close to her, and I relaxed as she laid my face against her warm breast. \n\n\"I love you so much, Gracie,\" I whispered, inhaling her soft, subtle scent with every breath.\n\n\"And I love you, Kevin, with all my heart,\" she said. She ran her fingers through the soft hairs on my chest in a loving caress. \"Go to sleep, love. Your body is still healing, and you need it.\"\n\nI closed my eyes, warm and relaxed in her arms, with my face cushioned against her breast. In seconds, I was fast asleep.\n\n###\n\nThe next couple days leading up to the New Year passed very quickly for us. I had one more call, but this was for a brand new commercial property that had just signed with Jenkins. The parking lot was completely empty, making it one of the fastest and easiest jobs I'd done, despite it's size.\n\nGrace decided, finally, that the Bloomington campus of St. Vincent's Stress Centers was definitely the job she wanted, so we began making plans. I filled out my application for IU's engineering program for the fall semester, and looked up information on how to get my credits transferred. \n\nWe had a very brief conversation about what had happened at the Forster place. Gracie had smiled tenderly at me, and made a few pointed comments about Karma coming back around. I agreed. Cheating has consequences! And at least SOMETHING good might come from the situation: Lance had another chance to take control of his own life. I sincerely hope that this time, he used it well!\n\nYes, those two days were a joyous respite for us. We made love, enjoying each other to the fullest! There was so much for us to try. We had quickies, when the mood and opportunity presented themselves. We had longer lovemaking sessions where we explored one another's bodies, learning new ways to pleasure each other. We tried some different positions to see what worked and what didn't. \n\nGrace and I were both in excellent shape, and were willing to try just about any position \u2013 once, at least. That led to all sorts of interesting times. Some of the crazier positions just didn't do anything for us, though. I'm sure there are people who really enjoy bending themselves like pretzels while they make love, but I would never be one of them! Ironically, if I had to pick a favorite, it would probably be plain old \"missionary.\" I loved being on top of my beautiful Gracie, staring into her loving eyes as I plunged into her. The full body contact and unlimited opportunities to look into her eyes made it really hot for me!\n\nGracie loved being on top; she loved to hold my shoulders and ride me while I teased her sensitive nipples with my lips and tongue. Sometimes when she was really worked up, I'd gently strum her clit with my finger. She always came HARD when I did that!\n\nThe night before New Year's Eve, Fleur called and invited us to their place for dinner. Grace and I happily accepted. They were good friends, after all, and Elizabeth was almost as good a cook as Mom was. It promised to be a fun time!\n\nWe arrived at Fleur and Elizabeth's house at 7 that night. I parked my Subaru at the curb in front, and we headed in. Aunt Lily greeted us at the door with a smile and a hug. \n\n\"Hi Grace, Kevin!\" Aunt Lily said. \"Come on in, dinner is just about ready!\"\n\nWe stepped into the house. I took Grace's coat and hung it with mine. We followed Aunt Lily nto the kitchen, where Fleur was setting their dining table. The ringing of the doorbell was a surprise to all of us. Elizabeth and Fleur looked at each other in mild confusion and annoyance; they obviously weren't expecting anyone.\n\nFleur walked to the door and peered out the peephole.\n\n\"It's the police!\" she said, quietly, before opening the door.\n\n\"Good evening, ma'am,\" the police officer said. \"I'm Office Carey Lake with the Highland Police Department, and I'm looking for Mrs. Lily Collins. Do you know her whereabouts?\"\n\n\"I'm here,\" Lily said, stepping out into the living room with Elizabeth and Grace.\n\n\"Mrs. Collins,\" he said with a polite nod. He then looked at Fleur. \"May I come in, please?\"\n\n\"Of course, Officer,\" she said, stepping aside. \n\nAs soon as he was in, she closed the door and gestured towards a chair. Fleur took the love seat with Elizabeth. Lily, Grace, and I took the couch.\n\n\"What can I help you with, Officer Lake?\" Lily asked without preamble. \n\n\"We're looking for your husband, Trent Collins. Do you know where he is?\" he asked.\n\n\"No, I'm sorry, I don't,\" Lily replied. \"You probably already know that we're separated, pending our divorce. In fact, I haven't even returned to our house, except for a trip a few days ago to get my personal things and few family hierlooms of mine. I deliberately waited for a time I knew Trent wouldn't be there. I've not seen Trent since the day I left him.\"\n\nAunt Lily leaned forward slightly, looking concerned.\n\n\"I was givn to understand Trent had been arrested. Did he make bail? Why are you looking for him? What's happened?\"\n\nThe cop studied her face for a moment, probably making a judgement call about whether or not he was hearing the truth. After a brief pause, he said, \"Mr. Collins did make bail, ma'am, the morning after he was arrested.\"\n\nOfficer Lake paused yet again, as if weighing how much he wanted to say to Aunt Lily about her soon-to-be-ex husband. At last, he said, \"We'd like to speak with him about an assault that took place earlier today, on a Highland Police detective named William Kowalski.\"\n\n\"I know Billy,\" Lily said, in concerned tones. Looking over at Elizabeth, she said, \"You were probably too young to remember, but the Kowalskis were our neighbors when we lived over on Ohio Street.\" Turning back to Officer Lake, she said, \"He tried to help Trent get on the force, but there was some kind of test Trent couldn't pass, so he got his PI license instead.\" \n\nLily looked lost in memory for few moments before she shook herself. \"Sorry, I got off topic. My husband can be violent, that's true. But as far as I know, he and Billy Kowalski were friends. They went golfing together. He and his wife would occasionally join us for a couples night out. Why on earth would Trent assault him?\"\n\n\"I never said he did, Mrs. Collins,\" the policeman said. \"At this time, he's just someone we'd like to talk to. You're sure you don't know his whereabouts?\"\n\n\"No, I'm sorry, Officer. I really don't have any idea,\" Lily said, shaking her head sadly. \n\n\"Alright,\" the officer said, getting to his feet. \"If you happen to see him, or have any contact with him, please call the Highland Police Department.\"\n\n\"Of course,\" Lily murmured, as Fleur stood to walk the policeman to the door.\n\nI was shocked. Attacking a policeman was one of the dumbest things Trent could possibly do. He'd have every cop in the city, county and state looking for him! And in today's climate, all bets were off as to whether or not they'd bother trying to take him in custody. Speaking purely for myself, I hoped they just put him down! I hope that didn't make ME a monster...\n\nFleur opened the front door for the policeman and politely wished him goodnight. Because she was looking at the cop, she didn't see the two figures waiting just to one side of the front walk. The policeman did, but he took just a second too long to realize what was happening. By then it was too late. \n\nWhat happened next occurred so fast that it took me time, later, to piece together the sequence of events for myself. Two people entered the room, the first one in slammed a fist into Fleur's face: a brutal right hook. She went down hard and landed in a heap on the carpet, unmoving. \n\nThe long silencer screwed onto the end of the first intruder's pistol reduced what should have been a roar to a soft bark. The bullet slammed into policeman; Officer Lake stumbled backward, fumbling for his own weapon. The intruder's pistol barked three more times, and I watched in horror as the cop crumbled to the floor. \n\nThat broke me from my shock-induced stillness. I pulled Grace and Lily to the floor and drew my Kahr PM45 from inside my waistband, bringing it to bear against the threat. The endless drills from my instructor reverberated in my skull over and over again as the front sight aligned with the chest of one of the intruders. I pulled the trigger once, twice, three times, four... By some miracle, all four of my desperate shots connected. The masked intruder's pistol fell from his hand as he sank to the floor, and I turned from him, searching for the second intruder.\n\nNot seeing him, I dropped to one knee behind the pathetic cover offered by the loveseat. My hands were shaking with adrenaline, but thanks to the time I'd spent practicing, I was able to eject the half-empty magazine and replace it with my full spare. My ears were momentarily deafened from the noise of my own shots (I didn't have a silencer, after all), so I couldn't rely on my hearing to find the second intruder. ",
        "Knowing how insanely dangerous it was, I crawled to the far end of the loveseat and peered out from behind it. The man I'd shot was still where he'd fallen. The second one was standing in the doorway to the kitchen, hands empty at his sides.\n\nI stood quickly, my weapon on target, my finger just starting to apply pressure to the trigger...and then I paused. His hands were empty! He wasn't moving. Shoot or don't shoot? That can be one of the hardest decisions a person in a deadly force encounter will ever have to make. To me, with all the adrenaline flooding my system, and my instincts to defend myself and my loved ones howling commands at me, this moment seemed to last for hours. \n\nAt last, time seemed to start moving at it's normal rate. \"GET DOWN ON THE GROUND, NOW!\" I yelled. I could hear my voice \u2013 faintly \u2013 so at least my hearing was starting to recover. \n\nFor a second, I didn't think he was going to comply. But then, the black-clad person sank to is knees. Without being told, he slowly raised his empty hands and clasped them on top of his head. \n\n\"CROSS YOUR ANKLES AND DO NOT MOVE, OR I'll SHOOT!\" I commanded, still keeping him fixed in my sights. Damn, what I'd give to be holding my AR-15 about now...\n\nAgain, the remaining intruder obeyed me, crossing his ankles awkwardly while resting on his knees. I warned him again not to move, then I stepped forward and pulled off his ski mask with a single, violent tug. I was shocked to see Anthony's face looking back at me. He looked back at me, equally shocked. His cheeks were wet from tears, and his lips were trembling.\n\n\"Grace!\" I called out. \"Are you, Liza, and Lily okay!\"\n\n\"Yes!\" she called back. Some of the terrible tension in my chest eased. \n\n\"Grace, I need you to cover this guy!\"\n\n\"I'm coming up behind you right now!\" she said, steadily.\n\nI felt a thrill of pride and love as she stepped into view, her pistol on target, unwavering. Her stance was perfect! There was no visible trace of the fear and adrenaline that must be coursing through her. Grace was rock steady, and my heart almost burst with love and pride in this incredible woman. \n\nLeaving Gracie to watch Anthony, I hurried over to where the first intruder lay unmoving on the floor. I lifted the ski mask, not at all surprised to find Trent's face beneath it, staring lifelessly back at me. I felt for a pulse at his throat, just to be sure. There was nothing, and he wasn't breathing either. My stomach heaved, and I felt my gorge rising and brutally swallowed it back down. This was NOT the time, or the place! Satisfied that Trent was no longer a threat, I hurried to Fleur's side. \n\nShe was still laying against the wall by the door where she'd fallen. I slipped my pistol back into it's holster and cradled my cousin-in-law's upper body in my arms. An ugly bruise was already starting to form on her jaw, but her breathing was regular, and her pulse was steady and strong.\n\n\"Thank you, God,\" I whispered, as I felt the weight on soul lightened by one more life.\n\n\"Liza, I need you over here by the door!\"\n\nI reached over and tugged the ski mask back down to conceal Trent's death stare. Liza wasn't stupid; she had to know who it was. But I didn't want her to see her father lying dead on her living room floor...especially since I had been the one who- I firmly squelched that line of thought. Again, now wasn't the time! \n\nElizabeth reached my side in an instant, completely ignoring Trent's body. She was a strong one, my cousin. Her eyes were full of tears and terror, but that terror was not for herself: it was for the woman who had come to mean everything to her. Her cheeks were wet, but she didn't sob or whine. She was composed and in full control of herself. My heart swelled with admiration and love for my cousin, as she knelt next to me. Good God, the strength of these people!\n\n\"I'm pretty sure she's just been knocked out,\" I said, before she could ask. \"Her pulse is strong and steady, and her breathing is normal.\"\n\nElizabeth closed her eyes in brief moment of relief, before caressing her woman's brow. \"Give her to me, Kev. I'll hold her while you...\" she broke off. Unable to finish the sentence, she gestured wordlessly to where the policeman was lying, unmoving. I nodded in wordless agreement, and then I gently lowered Fleur's torso until she was laying on her back, with her head resting in Elizabeth's lap. \n\nAs I moved to get up, Elizabeth stopped me with her hand on my shoulder. When I turned back to look at her she pulled me close and tenderly kissed my forehead, letting her soft lips linger there for a moment. When she finally pulled away, I lifted my eyes to hers.\n\n\"No matter what gets said, later...no matter what happens in the aftermath, I want you to know how thankful I am, Kevin. You saved our lives!\" she said. \"I love you!\"\n\n\"I love you, too, Liza!\" I said, smiling in spite of myself. \n\nI moved quickly to where Officer Lake lay sprawled on the carpet. I reached down and squeezed the transmit key on his shoulder mike.\n\n\"Dispatch! Dispatch! Officer down, 2515 Cassidy Road! I repeat, officer down, 2515 Cassidy Road!\" I said. I heard the dispatcher talking, but the hand that grasped mine startled me so badly that I missed what was said.\n\n\"Down, yes, but not out yet, kid,\" the cop said, gasping for breath. \"Not quite, anyway. Gimme that mike!\"\n\nI was absolutely astounded! He took 4 rounds to his center mass! How was he still-\n\n\"Vest,\" he said, answering my unspoken question. \"Standard issue. Hurts to breath, though. I think I'll need an ambulance...\" He looked directly into my eyes and smiled, painfully. \"What's your name?\"\n\n\"Kevin Richmond, sir,\" I replied. \n\n\"You did good, Kevin, real good!\" he said. \"Thanks to you, I'll live to get my ass chewed by the Sarge!\" He grimaced, and I chuckled softly. \"Mrs. Lake will thank you too, take my word for it.\"\n\nOfficer Lake took over, calling in properly to dispatch with his report. Even though it was really only a matter of minutes, it seemed like hours before all the flashing lights arrived. I watched as the paramedics loaded the policeman and Fleur into ambulances. Elizabeth rode with Fleur, who was beginning to come around. As they passed me, Fleur reached out and grabbed my arm.\n\n\"Tell the bastard that hit me, I want a rematch!\"\n\n\"You'll kick his ass next time, Fleur!\" I teased her. She had just enough time to smile at me before they took off. \n\nWith the arrival of the police, and the departure of the wounded, I felt I could safely take a moment for myself. In the age-old tradition of true heroes everywhere, I threw up violently, tossing my cookies in the barren rose bushes to the left of the front walk. After I felt like I had nothing more to bring up, one of the paramedics gave me a wet wipe and a sympathetic look. \n\nThe detective who had arrived with the rest of the cavalry interviewed me first, and then moved on to Anthony. After Anthony was given a comfy seat in the back of a police cruiser, the detective moved on to Grace. While she gave her statement, Aunt Lily came to stand by my side. Her face was grief-stricken, streaked with her tears. \n\nAfter one look at her, I turned my face away in guilt. I'd just killed her husband. I'd killed Elizabeth's father. I'd killed my Mother's brother, my Grandparent's son...\n\n\"Don't, Kevin,\" Lily said softly. \"Don't do this to yourself!\"\n\nShe gently grabbed my chin and forced me to look at her. \n\n\"He was...I'm almost certain he was going to kill us all,\" she said. \"Even if he wasn't, he had already tried to kill a man right in front of you! No one could ignore that kind of threat, most definitely not someone like you! You did what had to be done!\"\n\n\"But Aunt Lily, I-\"\n\n\"No, Kevin,\" she said, shaking her head firmly. \"Even though I left him, I still love Trent. God help me, I love him with all my heart, in spite of everything! I gave him my heart, and I think in so far as it was possible for him to love me, he did! He gave me 5 children that I cherish...even Jack. In my own way, I guess the fact that I'm mourning the man that was probably going to kill me tonight means that I'm just as screwed up as he was! I feel horrible for loving him, but I can't help it.\"\n\nAunt Lily's face twisted with pain for moment before she went on.\n\n\"Kevin, nothing that happened here tonight, was your fault, and you must understand that! He came looking for us, not the other way around! If he hadn't attacked us, he wouldn't be in the back of that van right now! His fate is on him, not you! Kevin, we aren't perfect people, and we don't live in a perfect world. There are decisions we have to make that hurt us worse than any bullet, worse than any blow. Being able \u2013 more importantly \u2013 being WILLING to make those decisions, and then take the appropriate action, is what separates the strong from the weak. And sometimes, it's what separates the living and the dead.\"\n\nShe smiled at me again, as she wiped her face with a soft tissue.\n\n\"I'm not your Uncle James, but I do have my own faith in God. I believe that God put you here tonight, because he knew that you had the strength to do what had to be done. You had the strength, and the willingness, to stand up against the ones who want to hurt you and your loved ones.\"\n\nAunt Lily cupped my chin with a gentle hand.\n\n\"I may not know exactly what you're thinking and feeling at this moment, but I'd imagine there is at least some guilt and shame in there. Probably a good dose of self-doubt, as well. I'm not going to tell you not to feel those things. I wouldn't even if I could. Instead, let me ask you a few things. Do you think Trent had murder in his heart tonight?\"\n\n\"Yes,\" I said, softly.\n\n\"Do you think for one second that he would have spared anyone in that house?\"\n\n\"No.\"\n\n\"No, I don't think so, either. Now look deep inside yourself, before you answer this one. Was there anything else you could have done \u2013 anything at all \u2013 that would have stopped these things from happening tonight?\"\n\nI thought it through. There was no escape path that wouldn't have taken all of us right past the gunman. There was nothing \u2013 other than shooting back \u2013 that would have prevented him from systematically murdering each and every one of us. There was nothing in the room that would stop a bullet, no real cover to shelter behind. And, even if we'd called 911 the second the intruders walked in, there simply hadn't been enough time for help to arrive. Not enough time for someone else to save our lives...I'd known, both then and now, that if I wanted to live, I would have to save myself. And that meant pulling the trigger.\n\nLily must have sensed the course of my thoughts. She smiled slightly, and nodded her head. She released my chin and pulled me close, hugging me. \n\n\"Kevin,\" she said into my ear. \"Sir Edmund Burke once said, 'The only thing necessary for the triumph of evil, is for GOOD men to do NOTHING.' You aren't the kind of man to do nothing; so you acted. I will mourn my husband, but I will NOT turn my anger on you! You are a hero, Kevin, even though I know you don't think you are. I love you so much!\"\n\nShe lovingly kissed my cheek before releasing me. \n\n\"I love you too, Aunt Lily,\" I said. \"Thank you!\"\n\n\"No, honey, thank you!\"\n\n###\n\nThe aftermath of that night was, in a word, intense. With the testimony of Officer Lake added to that of my family, there was never any question about whether or not my actions constituted self-defense. Still, it was nice when the official word finally came down. A few days after I was officially cleared of any wrongdoing, I got a visit from Officer Lake, and his wife and children. Mrs. Lake was at least 7 months pregnant, and the two little girls he already had were the most precious things I've ever seen. Grace and I were touched at their gratitude. \n\nAnthony was given three years for home invasion. Much like Matt Segan had, Anthony had blabbed non-stop to the police who'd taken him into custody. Apparently, he had been told by Trent that they were just going to scare Lily into stopping the divorce. He told police that he hadn't even known Trent was armed. Then Anthony dropped the big bomb...\n\nAnthony stated \u2013 and a DNA test confirmed \u2013 that he was Trent's son! Lily, while surprised, wasn't as floored as the rest of us. She had always suspected Trent had been unfaithful to her in the past. But Anthony's age (he was only 10 months younger than Elizabeth) meant that he'd been cheating on Lily back in the days when they'd still been a happy couple. I think that fact hurt Lily even more than the affair itself. \n\nNo one else was sure what to do or think about that situation. Elizabeth felt a perfectly natural desire to get to know her half-brother, but at the same time, she was having a lot of trouble getting past what he did. In the end, she decided to wait until his sentence was up to make a final decision. \n\n\"After all,\" she'd said, somewhat bitterly, \"he isn't the first sibling I've seen hauled off to prison.\"\n\nWe did end up having a small (very small) service for Trent. I don't think I'm stretching things too much when I say, the people who showed up did so for Lily, not him. That was certainly true in my case! \n\nMy twin cousins Jeremy and Craig got leave time to attend. They had both joined the Marine Corps right out of high school, just to get away from Trent. Also attending was my cousin Daniel. He was a missionary in the Congo. My cousin Jack, who wouldn't be released from prison for another year, sent his mother a letter of condolence. That surprised me, but truthfully, I didn't know Jack very well. He was the oldest of Trent and Lilly's kids, and he'd been locked up when I was a sophomore in high school. I still don't know what it was he did that landed him in prison, and I don't plan on asking. \n\nMy parents attended, too. Mom and Dad were both stone-faced when they looked at the body lying in the plain casket, but they both greeted me lovingly. \n\n\"You did the right thing, son,\" they both very quietly told me.\n\nMy Grandparents were there, of course. My Grandfather shook his head, when he saw his youngest son's body. My Grandmother openly wept, not caring who saw her grief. \n\nWhen she embraced me, she said, \"Just so you know, Kevin, I'm crying for the son I remember holding as a baby. I don't blame you in any way for the death of the man lying in that casket. I'm not sure if he's my son in any sense beyond the purely genetic one.\"\n\nNot trusting myself to speak, I held her close for a moment and kissed her cheek. \n\nUncle James and Aunt Teela were very quiet when it was their turn to look at Trent. Aunt Teela hugged me tightly, and made sure I knew she thought I'd done the right thing. Uncle James did so also, but he was clearly grieved as much as Grandma had been.\n\n\"Don't misunderstand, Kevin,\" he said. \"Trent brought about his own downfall, as so many people do. As far as I'm concerned, you did what had to be done. My heart rejoices in the fact that you, Grace, Elizabeth, Fleur, and Lily are safe. Nevertheless, Trent was my brother, and I'm only human. I can't help feeling some grief right now.\" \n\n\"I understand, Uncle James,\" I said, quietly. \"I hope you can-\"\n\n\"Kevin,\" he interrupted, kindly, \"There's nothing to forgive! You acted to save the lives of the ones you love, and your courage won the day! I meant it: I'm GLAD you're okay! After all, I love you and your sister very much!\"\n\n\"Thank you,\" I said, quietly. \n\nKelly and her boyfriend, Grant, attended as well. Grace privately shared an amused look between us as we saw them approach. I'd heard Kelly mention her new lover's first name before, but I hadn't realized that the Grant she was with was the same Grant that Grace had been with a couple years ago. Small world we live in, huh? Grace and Grant had parted by mutual agreement and on good terms, so there was no bitterness there, fortunately. \n\n\"How are you guys holding up?\" Kelly asked quietly.\n\n\"We're okay, Kels,\" I replied. \"We're just feeling lucky to be alive right now.\"\n\nShe nodded, giving me a faint smile. \n\n\"I knew, when I saw and heard him that night, that he was seriously bad news,\" she said. \"But I didn't think...\" her voice trailed off into silence, and she shrugged helplessly. \n\n\"We know, Kelly,\" Gracie said.\n\nElizabeth, Fleur, and Lily had made it a point to stay close to Grace and I throughout the brief visitation and service. It was almost as if they were trying to shield us from any fallout from the rest of the family over what had happened. Fleur, in particular, looked grim. Her face was still badly bruised and swollen, and it was painful for her to chew, but other than that, she was fine. She was still pissed about the sucker punch, but there was no way she'd be able to get that rematch she wanted. I'd settled the issue first, after all. Elizabeth had been very worried about her siblings' reaction to Trent's death. It turned out to be needless. The twins, in particular, were quick to thank me for saving their mother sister, and sort-of sister-in-law. \n\nWhen it was all over, only Grace, Elizabeth, Fleur, and I were left. The staff of the funeral home hovered in the wings, patiently waiting for us to leave so they could take care of the behind-the-scenes stuff that families don't care to see. \n\nI was emotionally wrung out from the ordeal. I was glad to have survived, but much more glad that I'd been able to protect my loved ones. And yes, there was even a tiny, tiny bit of grief for Trent. It's weird, I know, but it was there.\n\nThe five of us left together. Grace and I promised to have the others over for dinner before the spring semester started for us. Maybe this time, there'd be no uninvited guests! As we walked toward my car, I felt Grace slip her hand into mine. She didn't say anything; as usual, she didn't need to. I could almost sense her feelings.\n\n\"I owe you my life again, Kevin,\" she said, softly.\n\n\"No, Gracie,\" I said. \"You don't owe me anything. I will always do whatever I can \u2013 whatever it takes \u2013 to protect you. I know you would do the same for me.\"\n\n\"I would,\" she said, firmly.\n\nI nodded my head and smiled at her. Grace gently pulled me in for a deep, loving kiss. After a moment, we parted and got into my car. The early January day was ending quickly, and sunset was mere moments away. In the gathering darkness, it would have been easy for my thoughts to take a dark turn. But when the parking lot lights blinked on, they reflected off of something. With a start, I realized it was the ring I had given my loving sister.\n\nThe orange-tinted light reflected from the beautiful rose that Theresa had shaped from the remains of the rifle bullet I'd used to defend Grace that very first time. I hadn't realized Grace was wearing it. She saw where I was looking and smiled.\n\n\"We're engaged, love,\" she explained. \"Our family knows our secret, so I see no reason not to wear this!\"\n\n\"I love you so much, Gracie,\" I said, my voice rough with emotion. \"You mean so much to me. You're my sister, my lover, my best friend, even my fiance.\"\n\nReaching over to her, I pulled her into my lap. She giggled as she squeezed awkwardly to fit behind the steering wheel. She leaned in and shared another kiss with me, showing me how deeply my words had touched her. She was my world, this woman!\n\n\"Kevin, honey,\" she said, somewhat breathlessly as we parted. \"You are my brother, my best friend, my lover, my fiance...and my HERO! I'll always be there for you, if God allows. We are going to have a wonderful life together. I'll give you as many children as you want! I will be all that you need me to be for you, Kevin, because I love you more deeply than I have ever loved anyone before.\"\n\nI pulled her close again, and she nuzzled my neck affectionately. It was really at that moment that I felt the burden of having taken a life start to lighten. I knew in my heart that I done nothing wrong, but convincing myself of that on an emotional level was something else entirely. Grace's love for me was the ultimate balm for my wounded soul, though. Holding her there in my arms, feeling her warmth and love pour over me chased away the last remnants of pain. I had known for some time now, but this feeling just drove home the point: she was above all else, My Saving Grace!",
        "Author's Notes:\n\nThank you all for reading my stories! This series has been a lot of fun to write! In some ways, it was even more fun than \"Hannah's Hero\" was. You readers are the reason for that! Without your comments and messages driving me on, I wouldn't bother to post anything. So thanks again!\n\nThis chapter will be the last one in the \"My Saving Grace\" series, but it WILL NOT be the last you hear about Kevin and Grace! I intend to start a new story line for this amazing brother and sister. I'm thinking of calling it \"A State of Grace,\" or something similar. (By now you should all know how much fun I have with puns, names, and word games!) I will be sure to put their names in the story description, so you will see. \n\nI'm doing this because, I feel that \"My Saving Grace\" was about the two of them discovering their love for each other and deciding it was something worth keeping \u2013 and fighting for! Their future, building a life and a family of their own, Kevin getting his degree and launching his career...I think that adventure deserves it's own, separate story line. However, as you should all know by now, I care what you readers think. So please let me know your opinions on the subject with your comments and P.M.s. \n\nFor right now, my real life is calling me, and I'll have to give it my full attention for a little while. Fortunately, I'm told that there is free wi-fi available at the job site, and it's pretty reliable. (That's pretty rare, in my experience, but it's welcome!) So just maybe, I may post something while I'm working. I have to do SOMETHING to keep my mind off of how much I miss my family, after all. So be safe, all of you, and I hope to post again ASAP!\n\n- CM"
    ],
    "authorname": "carbinemaster",
    "tags": [
        "romance",
        "brother",
        "sister",
        "brother-sister",
        "danger"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/my-saving-grace-pt-08"
}