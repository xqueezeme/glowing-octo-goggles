{
    "title": "Chris' Adventures Ch. 03",
    "pages": [
        "Meanwhile, the girls were pulling into Rob's driveway so Patty could get her bags out of the trunk. The concert they were going to go to tonight had been canceled due to illness with some of the band members so they thought they would come home and surprise the boys. The lights were off in her house now that Rob was next door.\n\n\"Hmm, looks like Rob went to bed early.\" Patty said to Christy. She glanced over at Christy's house and saw the lights were on in the living room. \"Looks like Chris is still up though.\"\n\n\"Probably watching one of his cheesy sci-fi movies that he likes.\" She rolled her eyes and they both laughed.\n\n\"Well since Rob is asleep you want me to come over and keep you company while Chris watches his movie? Since it seems I'm not going to be getting any tonight.\" Patty looked at her and frowned mockingly.\n\nChristy looked at her, tensed a bit, and then giggled. \"Is that an attempt to make another move on me?\" She asked, thinking about last night in the hotel room.\n\nAfter spending the night out dancing and having a quite a few drinks the girls had headed back to the hotel room and Patty suggested they relax in the hot tub that was in the room they reserved for the four days they were there. Christy said that was a great idea and headed to the bathroom to change into her swimsuit. When she came out Patty was naked and stepping into the tub.\n\nChristy blushed. \"Patty! What are you doing?\" She eyed Patty looking her up and down. Her large 36G breasts put her 38B chest to shame. But hers were more firm so she had that going for her. Patty's legs were taught like hers but her waist was narrower. Christy leaned towards more of an apple shape with her round hips and ass. Patty was more of a full hourglass with a small waist and rounded hips and ass. She could certainly see why guys were hitting on Patty more than they were her earlier that night, she looked great for her age. She had always been a little insecure about how she looked compared to other women and wasn't keen on being naked around someone, even a close friend, in such personal quarters.\n\nPatty turned around and looked at Christy in her swimsuit. \"Oh, I thought we were just going to hop in.\" She said. She turned around and her long brown hair cascaded over her breasts and shoulder, framing her lean face. She looked Christy up and down, even though she had a little weight on her she still looked good in a bikini. \"Why not join me? Or should I put on a swimsuit too? It is just us girls you know.\" She winked at Christy. \"Besides, a hot tub feels so much better naked.\"\n\nChristy blushed. \"It does?\"\n\n\"Oh yes,\" she said climbing in. \"So much better to feel the jets on your naked skin. And other parts she said with a grin and chuckle\"\n\nChristy tuned a deeper red as she watched Patty sink into the hot water. \"What was that last thing you said?\" She didn't know if it was the wine talking or if she actually heard Patty allude to masturbating in the hot tub.\n\n\"The jets feel sooo good on your pussy.\" Patty said bluntly.\n\n\"Patty!\" Christy called out. \"You naughty girl!\" She said with a bit of a slur form the wine they had drunk. The wine must be working on her because she moved closer to the tub and decided to strip. Why not? She noticed Patty was watching her as she stripped down and once she was totally naked her eyes roamed from her breasts to her bush and her mind began to wonder. She stepped into the water and let the hot jets wash over her. \"Mmmmm you are right. It does feel better with no clothes on.\" She sat back and relaxed. \"So you've actually gotten off in a hot tub?\"\n\n\"Oh yeah, all the time at home.\"\n\nChristy giggled. \"I've never tried it in ours.\"\n\n\"Are you serious? Do you even masturbate?\" Patty looked shocked and amused, she knew the answer to that already.\n\nChristy turned red.\n\n\"It's okay, we all do it.\"\n\n\"Well yeah. I do a lot when Chris isn't home. Even when he is I do it. Chris even likes to watch.\" She admitted turning a darker shade of red.\n\nPatty giggled. \"Yeah we've seen that.\" It was her turn to blush now.\n\n\"What?\" Christy looked shocked. \"What do you mean?\"\n\nPatty spoke in a hushed conspiratorial tone, giggling through an alcohol induced haze. \"We've seen you two through your window to your bedroom. \"You two put on quite a show with your toys and all.\" She grinned wondering if Christy was getting turned on like she was.\n\nChristy turned bright red. \"Oh my God! You've watched us?\"\n\n\"Well yeah, if you're going to leave your window shades open like that.\" Patty shot back chuckling.\n\nChristy's pussy tingled. She knew that Chris left the blinds cracked a bit. It turned her on at possibly being watched, she never thought that they could actually see through the blinds from their house. Knowing that her and Chris had been seen got her turned on. \"So, um, how much have you seen?\"\n\n\"Everything.\" Patty gushed. \"And I must say it's hot. Seeing you AND Chris playing with toys, watching him go down on you and you on him. Though watching him stroke with your lingerie and seeing him give himself a facial was quite the experience for Rob and I.\" She was getting turned on with all this talk and was pretty sure Christy was too. She could see that Christy was squirming in her seat so she decided to take it a step further.\n\n\"Wow. You guys have seen it all.\" Christy squirmed, her pussy getting hotter and wetter, and not just form the hot tub. She couldn't believe that they'd actually been seen. She thought that the blinds were never opened that much. \"I'm kind of embarrassed now.\" She paused then added, \"and a bit turned on. I'll admit being watched gets me hot and bothered. I just never thought it would be you two. We, or at least I thought Chris never opened the blinds that much.\"\n\n\"Well it's hot. \"Patty squeezed her thighs together and could feel herself getting wet. Having Christy here with her talking about sex made it even better. \"Both of you look great naked. Can I tell you something Christy? And you won't say anything to anyone?\"\n\nChristy gave her a puzzled look. \"Um, sure, I guess.\" She wondered where this was headed.\n\nShe moved closer to Christy putting an arm up on the end of the tub behind Christy. She leaned in quickly and planted a kiss right on Christy's lips. She felt Christy stiffen as she kissed her and felt resistance so she backed off seeing Christy with her eyes wide in shock. \"I'm actually bisexual.\" She blurted out. \"I'm sorry. That was probably a bit forward of me.\" She blushed and moved farther away in the tub, a bit embarrassed at reading the signals wrong.\n\nChristy was stunned when Patty laid her lips on her and began to kiss. The alcohol was wearing off but she still felt a little buzzed. She'd never done anything like that before and froze. It was a shock to her and she didn't know how to react before Patty pulled away and she sat there, eyes wide, staring at Patty and said nothing as Patty blurted out that she was bisexual.\n\nThis revelation was a bit of a shock to her and she didn't quite know what to say. After a long minute of silence she spoke. \"That was...um, unexpected.\" To her surprise she was still a bit turned on. \"I, I never knew that about you Patty. And yes, that was quite forward of you.\"\n\nPatty blushed.\n\nChristy looked at Patty and smiled. \"Oh no. It's not. It's not that. I have nothing against that. I just. I've never done that before. I've had boyfriends in the past ask for a threesome and it just didn't appeal to me. I wasn't sure if they were not satisfied with me and needed another woman or if they wanted to see me with a woman. I'm flattered that you want to get it on with me.\" She paused. \"I guess that's a compliment. I must look better than I think. She chuckled. \"It's just not something I've ever really thought of doing. Not that I have anything against it. Does Rob know?\"\n\n\"Yes he does. He's even watched.\" Patty confessed. So she doesn't have anything against it, Patty thought, maybe there's hope yet.\n\nChristy's eyes widened. \"Seriously?\" She couldn't believe what Patty was telling her. And she couldn't believe that she was still turned on thinking about all this. She wasn't sure if it was the watching part, or the other woman part. \"Wow. I, uh, I'm not sure what to say to that.\" Christy squirmed in her seat in the hot tub, partly because she was getting a bit turned on and partly because she was still a bit uncomfortable.\n\nPatty could see that Christy looked a bit uncomfortable, at least that's what it looked like. \"\"I'm sorry, was that a bit too much information?\" She said. \"You look put off.\" She moved a bit closer to Christy again.\n\n\"Just a bit.\" Christy blushed. \"And just a bit turned on. I didn't think that I would be but I am. I'm not sure if it's the part about being watched, which I like, or the other part.\" She just wasn't ready to vocalize to getting turned on at the thought of another woman. Patty moved even closer to her and she stiffened up a bit. \"I've never done anything like that before. Never really thought about it. I mean, I have.\" She blushed. \"But it never really got me going or inclined that way.\"\n\nPatty started inching closer to Christy again. \"Are you sure?\" She inquired with a gleam in her eye.\n\nChristy blushed again. \"Well... I'll admit I am a bit turned on right now.\" She slid a little closer to Patty. \"I'm not sure if it's the alcohol, or if I'm really wanting to do this.\" She tossed her damp hair to the side and tentatively leaned in. Patty took the hint and met her half way.\n\nChristy initiated the kiss this time and opened her soft lips to accept Patty's. Electricity shot through her as they kissed, lips moving back and forth, hands on each other's cheeks now. They held the other's face as they let their lips and tongues roam over each other mouths. Urged on by the alcohol in her system she was enjoying kissing Patty and wondered if she'd enjoy more. They sat there in the hot water kissing for what seemed like an eternity when Patty broke their liplock.\n\nChristy sighed. \"That.... Was actually quite enjoyable.\" She blushed. \"Though it still might be the alcohol talking.\"\n\nPatty knew that the alcohol wasn't making her do this but she didn't want to force it on Christy and looked her in the eye. \"I'll stop if you want. I don't want to force anything on you in the state we're in. I'd hate to ruin our friendship.\"\n\nChristy smiled and sighed. \"Oh, I think our friendship is fine. But, thank you. I don't know what I want now.\" Her eyes took in Patty in a whole new light now and thoughts were running through her head. She wasn't sure what she wanted now. Her head tilted back on the edge of the tub and she gave a deep sigh.\n\n\"But if you ever think about it and change your mind you know where to find me.\" Patty smiled and sank into the hot tub and let the jets wash over her wet pussy, sending shivers up her spine in small orgasms. She didn't press the subject any more the rest of the night. The conversation still revolved around sex and they playfully pawed at each other, Patty letting Christy take the lead but nothing ever came of it. After saying their goodnights and curling up in their beds Patty fingered herself to a quiet orgasm wondering if Christy was doing the same.\n\nNow they were sitting in her driveway and she was pondering her next move. She could tell that Christy was turned on last night and her advances definitely ignited a spark in Christy, she just wasn't sure it was a huge one. And now that they were home it looked like Christy was going to get some and she was going to bed with just her hand. \"Well I'll let you go. Looks like you're going to get some tonight.\" She chuckled. \"I'll have to be satisfied with the jets in the hot tub in the basement.\" She laughed.\n\nChristy laughed too. She was going to have to try that. She was to tired last night to do anything after they went to bed so she was definitely wanting some hot sex. \"No that's okay. If he did what I wanted him to do while we were gone he's probably beat and not up to some sex. Looks like it might be just me and my toys after he falls asleep.\"\n\nPatty laughed. \"Well if you want any help with that give me a call.\" She joked, secretly hoping that Christy might take her up on the offer.\n\nChristy giggled and blushed like she did last night. Patty really wants me it seems to go to bed with her it seemed. We kissed and fooled around a bit but nothing serious happened. Do I want it? It left god to kiss her. What would Rob think? Or Chris? She thought. Well she knew that answer. The guys would think that it's hot. What guy wouldn't? \"Come on over for a drink while Chris finishes his movie. Keep me company. Just not like what you're probably thinking.\" She grinned and shot a look at Patty that said 'maybe in the future'. They hopped back in the car and pulled out of Patty's driveway and into the garage of Christy's house.\n\nChris never heard the garage door open, they had one of those whisper quiet openers so if one of them was out late then they didn't wake up the other when they came home. Christy opened the door to the kitchen and heard groans coming from the living room. She couldn't see what was happening from the kitchen but heard groaning.\n\n\"Oh boy.\" She whispered and turned bright red. \"Sounds like Chris is watching a porno.\" She looked at Patty mortified.\n\nPatty stifled a laugh, but then tried not to look shocked as a thought crossed her mind, and whispered, \"That's okay. Rob does it too. Why don't we go back to my house and have that drink.\" She took Christy's hand, with no resistance, and led her to the door. Before her and Christy could get out the door they heard something that made them stop in their tracks. Christy though she heard Chris groaning and asking to be fucked and then they both heard Rob's voice saying Christy is a cheap slut.\n\nThey looked at each other with shock on their face. Patty had an idea at that point of what might be happening based on Rob's quest for some local cock. She just never thought it would be right next door. Christy slipped off her shoes and motioned to Patty to do the same so they wouldn't make any noise on the tile floor in the kitchen. They then walked to the dining room in the dark and rounded the corner to the living room. They both gasped when they saw Rob, in a teddy, fucking what looked to be another woman on the couch. Then Christy realized that the \"woman\" was her husband Chris.\n\n\"What in the hell is going on?!\" Christy said, dropping her shoes and staring in horror. The two men turn and face her, both red faced, eyes wide like deer caught in a headlight.\n\nPatty just stood there, her pussy getting dripping wet at the sight of Rob fucking Chris. Rob had told her about his experiences in college and while they were dating but had never seen him with another man. And the sight of him in the teddy she had bought for him while fucking Chris was an incredible turn on. A low moan escaped her lips.\n\nChris recovered from his shock, still feeling Rob hard in his ass. \"Um, uh, oh boy.\" Before he could say anything more Christy walked closer to the two of them. She shot both of them an angry look that could melt ice. \"Is this what you do when I'm gone?! Let the neighbor's husband fuck you?!\" She spat. \"In my lingerie and makeup no less!\"\n\nHe turned bright red and sheepishly said \"No. It, it just happened tonight.\" He moaned as Rob's cock throbbed in his ass and slipped out.\n\n\"So then what do you do when I'm gone!?\" Christy stood there with her hands on her hips. She was fuming and wanted answers. Patty had moved next to her, a look of lust on her face as she eyed the two men on the couch.\n\nChris knew there was no way out now. He had to tell her the truth. He turned around and sat on the sectional, hands folded. Rob sat next to him in silence. \"I, uh, usually just dress in your lingerie and play with your toys. I figured you might have an idea that I did that already, I've left lingerie and toys out and you've found them but never said anything.\" he confessed.\n\nChristy just stood there, mouth agape, not sure what to say.\n\nPatty looked at Rob with lust in her eyes and spoke up, hoping to possibly deflect some of that anger. \"Well when I told you a while back you should go looking for some local cock I never thought it would be this local. And you even slipped into your lingerie to do it. You are one kinky man.\"\n\nChristy looked at Patty incredulously. \"You mean you knew?\" She looked at Rob and back at Patty. \"He wanted to fuck Chris?\"\n\n\"Well, no.\" Patty replied, becoming defensive. \"Just, any man. But this.. is..\" She paused and took the scene in, here was Chris all dressed with makeup and a wig, getting fucked by her husband and she was getting all wet and hot. She started squirming where she stood and her hand moved to her groin and gently rubbed it.\n\nRob watched as his wife's hands worked their way to her lower abdomen and begin to rub herself through the skimpy dress she had on. He slowly ground his hips in response, his cock swaying, still hard.\n\n\"You like it!?\" Christy shot a look between the three of them, like they conspired to this.\n\n\"Yesss.\" Chris moaned, not caring at this point.\n\n\"I.. I knew you liked my toys and lingerie Chris. \"Christy stammered. \"I also had no idea you still slipped into my lingerie. I figured the stuff lying around was from you just pleasuring yourself with it like you do with me. I just never thought I'd come home to this. I'm not sure what to think.\" Christy waved her had towards the two men sitting on her couch as she stood there looking at her husband, dressed in some of her old lingerie, complete with makeup and a wig. She noticed that his cock hadn't even begun to flag, even after being caught in such a compromising position. He had said he wanted to go as a woman for Halloween once but they never followed through. He knew how she felt about it. She wasn't hot on it yet she did get off watching him use her toys and jerk off with her lingerie and she wasn't sure why. But now, seeing him there like this made her feel a bit hot in her pants. She was angry for sure. What to do now was the big question. Maybe all she needed was to see him all dressed up. \"So you admit to liking cock? Well that explains why you want me to do you with a strap on. And why you get off giving yourself a facial when you cum.\" Her pussy got wet at the thought of that, \"Yet I'll admit I think that's hot too. But this.\" She waved her hand over the scene before her. \"This is something else.\"\n\nChris groaned at the thought. So did Rob.\n\n\"It's something else all right.\" Patty intoned as she openly rubbed her pussy through her clothes. She wasn't even trying to hide the fact she was turned on. A little moan escaped her lips as she leaned in and gave Rob a kiss on the lips. \"Baby, this is so hot. Did you suck each other too?\" Rob nodded.\n\nPatty sounded more amazed than mad Christy thought as she watched her move towards her husband. She glanced at Patty and noticed she was rubbing herself through her dress. She was actually getting off on this. \"Did you do the same Chris? Did you suck his, cock?\" She paused before uttering the last word, totally flabbergasted that she was seeing this.\n\n\"Yes, I sucked him first.\" He admitted. \"And I swallowed his load.\" He smiled at her.\n\nChristy moaned. Partly out of embarrassment, and now, she found, partly because she was getting wet in her panties. She wasn't sure why, but something in her was getting turned on at the thought. \"I can't believe this.\" She shook her head and shifted from one foot to the other, trying not to show she was getting turned on. She looked over at Patty, who, on the other hand, was now obviously turned on based on the flush in her cheeks and her hands absently rubbing the front of her skirt. \"You like this Patty?\" She asked, somewhat in disbelief.",
        "Patty walked closer to Christy. \"Yes I do. Rob told me he's been with guys before. And it turned me on then and still does. He told me last year that he wanted to be with a guy again so I told him to go ahead and look. I just didn't think all he had to do was look next door.\" She looked at Christy and could tell she was clenching her thighs and ass. She had a hunch that the scene was starting to turn her on so she took a chance and took a couple of steps closer to her and rubbed her ass, hoping to spur her on into new territory.\n\nBoth Rob and Chris watched as Christy let out a sigh as Patty massaged Christy's ass.\n\n\"Oh! Patty!\" Christy exclaimed. Patty had playfully swatted her last night in the hot tub but nothing like this \"What do you think you are doing?!\"\n\n\"Taking advantage of the situation.\" She said as her hands roamed over Christy's round ass. She moaned as she felt Christy stiffen up and then melt into her exploring hands. That was a good sign.\n\nThe men watched as Patty started to come on to Christy. Their flagging cocks now started to harden again at the sight. Rob moaned, \"Go for it Patty.\"\n\n\"If the boys are having their fun, we should too.\" Patty whispered to Christy. \"You were getting kind of playful last night in the hot tub. Let loose, I think you want to. There's nothing holding you back now. Look how Chris is enjoying the touch of another man. You should get to feel the same with another woman. Don't deny yourself.\" All the time she said this she was rubbing against Christy's back, pressing her large breasts into her back and letting her hands roam over Christy's body. She could feel the heat building up inside her and wanted her to let it loose. Patty reached around front and cupped Christy's petite breasts through the dress she had on and heard a low moan escape Christy's lips.\n\nApparently she was liking it. This was one of the two spots they never touched each other last night and she was hoping to remedy that now. She leaned in close and whispered into Christy's ear, \"Besides, if they want to have a little man on man fun we should be able to do the same with ourselves. And who knows, you may get to take Rob's cock for a ride.\"\n\nBoth Chris and Rob watched Patty work on Christy. As they did their hands had grabbed each other's cocks and were stroking them, ready to resume their fun. They both groaned at the sight of Patty trying to seduce Christy and the feel of each other stroking the others cock.\n\nSomething in Christy's mind snapped at that comment. Yes, if this is what Chris wants, then this is what he'll get. And I should get something out of it too. She moaned a bit \"Yes Patty, you're right. I should.\" She said defiantly. She broke the embrace Patty had on her and walked over to where Chris and Rob were sitting. She looked first at her husband and then Rob. \"So this is what you want? You want another man's cock?\" Chris just nodded. \"Well then I think I can go along with that. But things are going to change.\" If you can have some cock then I can have some pussy.\" She said exasperated. \"I may as well give it a try, you seem to like it. Besides, Patty came onto me last night, kissing me and it turned me on, so much that we did it again and did a little petting of each other. It was a bit of a turn on.\" Chris moaned at hearing this.\n\nShe reached back and touched Patty's breast through her dress and sighed. \"I'm going to take that leap that I was hesitant to take last night. She heard Patty moan and push into the hand on her chest. She looked over at Rob and then his large cock in Chris' hand. \"And I may try some of that cock you've got in your hand.\" She looked over her shoulder at Patty for approval and saw that she just nodded. Instead of giving Chris a kiss she turned to Rob, took his head in her hands and kissed him, slipping her tongue deep into his mouth. Her pussy tingled at the feel of another man's lips on her while her husband watched. She was angry yet still turned on. She wanted a little revenge on Chris. She broke their kiss and smiled. Rob smiled up at her and looked at Patty.\n\nPatty now had her dress off and was standing there in her thigh high hose, bikini cut panties, and a demi cup bra that held her large 36G breasts. The bra pushed her breast up and made them appear even larger than they were. Her ass and legs were framed in a garter belt with black hose and a black satin bikini cut panty. She had her hand deep in her panties by this point and smiled at Rob when he broke his kiss with Christy. \"Mmmmm that would be hot Rob. I'll bet you'd like to feel what Chris has been getting all these years. We've watched them enough times that I know I want it.\"\n\nChristy grinned. \"Is that what you think when you've watched us?\" She asked looking at Rob and Patty. She noticed Chris had a puzzled look on his face. \"Patty admitted they've seen us fuck a few times when we've left the blinds open in the bedroom.\" She directed at Chris.\n\nHis cock throbbed as Rob gripped it tighter and he moaned. \"Rob told me about it yesterday. I guess Patty told you last night also.\"\n\n\"Yesterday? What? I don't get it.\" Christy looked even more puzzled now. She looked over at Patty and saw that she was standing there in her lingerie now and Christy's pussy got dripping wet. Yeah she'd seen Patty naked last night but to have her here, in this situation, in lingerie, was something totally different. And it was definitely turning her on now.\n\nPatty moved closer to her. \"They can explain it all tomorrow. Right now let's get down to having some fun.\" She reached up and unzipped Christy's dress and pulled it from her shoulders before Christy could say anything else. The dress fell away and revealed her pert 38b breasts in her lace bra. Christy helped Patty and shimmied out of the dress, kicking it to the corner of the living room. Now standing there in a pair of satin hipster panties, thigh high hose and her bra.\n\n\"Mmmmm you look lovely in that. But you know what? Before we get into this I should go home and get something to add to the fun.\" Why don't you help Chris with my hubby while I'm gone?\" She leaned in and gave Christy a peck on the cheek and was out the back door before anyone could say anything about her still being in lingerie.\n\nChristy looked over at Rob and Chris. She eyed Rob's huge cock. \"Well let's get Rob cleaned up. I'm going to try on what you were just getting Chris. Now go get a towel and a dish with some soapy water.\" She said sternly and shooed Chris away and sat next to Rob. Her hands reached out and tentatively stroked up and down his satin clad chest. Her pussy throbbed at the feel of the satin on his hard body. Ohhhh this feels so good. I think I was all wrong about not letting Chris enjoy his little dress up games. She thought to herself. She continued to let her hands roam around Rob's torso as Chris came back with the requested materials. She took the towel, got it wet and gently laved Rob's cock, scrubbing it clean so she could taste it and get her pussy stuffed with it. \"Oh my god! You are huge.\" Christy exclaimed. \"You sucked this monster Chris? I'm actually impressed.\"\n\nRob moaned as Christy stroked his cock clean. He wasn't sure what she had in mind but he didn't care. He was going to actually get to fuck his neighbor's wife. He watched as she carefully stroked up and down the shaft, cleaning off the towel every few strokes and getting it wet again. She then took a clean towel and dried him off. Then she took his cock in her hands and began to stroke it, making him moan.\n\nShe looked at him and smiled. \"Since you want this Chris why don't you come over here and help me get it ready for my pussy.\" She waved Rob's cock in Chris' direction, commanding him to perform for her.\n\nChris obeyed her wish. He knelt next to Rob's legs opposite Christy. \"You, you really want to see me do it?\"\n\n\"Yes. I want to see. If this is what you want to do, I want to watch. No sense in hiding it from me anymore. Now go on, be a good cocksucker.\" She couldn't believe she had just uttered those words. She wanted to see if she could humiliate him, finding all these secrets out in one night, she was going to have some fun with this. She took off her bra and began to play with her breasts as Chris took over sucking Rob's engorged shaft.\n\nChris leaned in slowly and licked the offered cock with his tongue. Rob sat back and moaned. Chris knew what Rob liked so he opened wide and swallowed it. Working it back into his mouth until he hit his wife's hand half way down. He couldn't see Christy but he heard her gasp. She must have been impressed, he hoped, because she took her hand away. He glanced sideways and saw that she just sat there mouth agape, hands cupping her naked breasts, not believing what she was seeing. With her hand gone he could suck more in, and he did, working all but two inches into his mouth. He heard Christy gasp loudly. After a couple of minutes he felt Christy's hand on the back of his head and she pulled Chris off his cock slowly.\n\n\"Are you sure this is the first time you've ben with a guy?\" She asked looking down on him, head still in her hand. She wasn't sure if she believed what he said earlier or not about this being the first time. She let go of his head and gently pushed him aside. \"Let me taste that monster. It's my turn now.\"\n\n\"Oh yeah. He's good with that mouth.\" Rob chimed as he watched Christy display her dominance of the situation. \"He took it all like a pro earlier, including my hot load, on his face and in his mouth. And yes this is his first time. He told me he'd never been with any guys last night.\"\n\nThe look on Christy's face was priceless. She couldn't believe that Chris was able to get that much in his throat, and then swallow it and take it on the face. \"Well I'll just have to see if I can match him.\" Immediately she got to work, opening her mouth and sucking Rob's head in. Inch by inch she got more of it in her mouth. But in the end she could only get about half of it down her throat. She bobbed up and down for a couple of minutes relishing the feel of another man's cock in her mouth while Chris looked on, paying him back for what he had been doing. She wondered what he was thinking. Was he enjoying it? Was he wondering if I liked it more than his own cock? She pulled off him and smiled at Chris, she didn't want him to come yet. She had other ideas. \"Oh my. I don't see how you did it Chris. Well I guess you're a better cock sucker than me.\" She giggled and shot him a look that dripped with lust for more, starting to really get into this. \"Right now I'm going to stuff my pussy with that thing. Why don't you take my panties off for me Chris?\" She looked at him with authority in her eyes.\n\nChris sat there obediently on his knees, reached up and pulled her boy shorts over her hips and down her legs. He watched as she stepped out of them, turned to face him in just her thigh high hose, and straddled Rob reverse cowgirl style and lined up the head of his cock at the entrance to her pussy. She eased back on it, taking in a couple of inches. His cock seemed to stretch her lips wider than ever and she only had a couple of inches in her. \"Oh God you're so thick. Thicker than Chris.\" She exclaimed as she kept her eyes on her husband and sank lower on the thick shaft invading her pussy. She would pause, raise up and then sink lower. Eventually she had his entire length in her pussy. Chris watched as his wife sat there with a look of ecstasy on her face, being stuffed as full as she was. Well more than he could ever give her. He was a bit jealous and wondered if she would ever feel satisfied with him again after this.\n\n\"Oh God! Yes!!!\" Christy gasped. \"My god you feel incredible. Now I know why you love this thing in your ass.\" She looked up at Chris and grinned a somewhat evil looking grin as she began to grind on Rob's hips. This was definitely a revenge fuck. She was going to enjoy this the most. After what he had been doing while she was gone she wanted to get back at him. She started to move up and down on his cock, raising up until just the head was in her and then sitting back down on him. She let out a loud moan while picking up her rhythm keeping her eyes locked on Chris the whole time, making sure he knew how much she loved it.\n\n\"Ughh yess Christy.\" Rob groaned. I can't believe you can get it all in you. Even Patty can't do that.\" He took her hips in his hands and helped guide her up and down on his shaft. She was so tight, as tight as Patty but the fact he could get in her all the way made it feel so good.\n\nHer eyes were half closed as Chris watched as she continued to move up and down on Rob's thick shaft. His cock was rock hard, seeing robs shaft disappear into Christy's pussy over and over was an incredible turn on. Her lips were spread wide and he could see her juices coating Rob's shaft. They were both groaning loudly. \"Can I join in? Or is this just a party for two?\" He asked.\n\nChristy opened her eyes and thought about it for a second. \"Mmmmmm. Sure. You've gotten to watch me get off long enough, but I'm not getting off this thing until I cum.\" She ground her hips into Rob's, squeezing her pussy as much as she could around his shaft sending shivers up her spine. \"Why don't you come over here and let Rob suck you for a bit.\" She was wanting to explore just what turned Chris on with a guy now. She was beginning to come to accept that this is what he wanted. She dismounted Rob for a second and turned around to face Rob. Before she sat back on his cock she looked over her shoulder at Chris and beckoned him closer. \"Now before you do that be a good boy and hold Rob's cock so I can sit back on it.\"\n\n\"Yes Ma'am.\" Chris answered. He took Rob's cock and held it at Christy's pussy lips. Kneeling down and licking her juices from his shaft while Christy began to lower herself back onto his cock. He heard both of them moaning. Eventually she sank low enough that he could lick his wife's pussy form behind and Rob's cock at the same time. The both gasped at the pleasure they were receiving when he heard Christy remind him that she wanted him up where she could see him. He scooted back and stood up to see Rob suckling her breasts while she bounced up and down on his cock faster now. He could see that her nipples were rock hard and she had a hand between her legs, probably playing with her clit.\n\n\"Ohh yess Rob, that's it, fuck me and suck my nipples. Mmmmmmmm.\" She moaned.\n\nChris got on the couch next to them and she opened her eyes and pushed Rob away. With her free hand she fished Chris' cock out of her panties that he had on. The feel of the satin panties against his cock felt wonderful. She should have given in to Chris' wishes earlier. She looked up at Chris with her wig and makeup on. The sight of him dolled up like that was a bit strange and she'd have to ask him about that. She stroked his cock before offering it up to Rob. \"Go ahead. I want to see you suck it up close. Suck this sissy's cock.\" Chris moaned when Christy called him a sissy and Rob obeyed, turning his head to the side and opening wide. Christy guided her husband's cock into the waiting mouth and watched as Rob greedily sucked it down his throat. She was amazed that he could get it all in his mouth. She could come close but not to the base without gagging. She moaned and fingered her clit faster as she watched Chris get his cock sucked. She was sure he could hold out a while since he'd apparently cum once tonight already so she wasn't worried about him exploding in Rob's mouth before this little adventure really got into gear. \"That's actually, pretty hot.\" She gasped as she leaned back and pinched her nipples.\n\n\"You think so baby?\" Chris asked, looking over at her and smiling through the makeup he had on, seeing that she was pinching her nipples and still fingering her clit. He figured she'd cum soon. He watched Christy grind her hips on Rob's pole as her orgasm neared. He could hear their skin slapping together as they fucked and Rob was obviously enjoying it, his hands were on her hips helping her and he was bobbing on him as well, moaning the whole time. In and out his pole slid, filling her to the brim each time she came down on his lap. Her pussy was dripping wet and every time she moved it would make slurping sounds, trying to suck his turgid member back into her wanting hole. As her orgasm mounted he heard the back door open and assumed it was Patty.\n\nPatty came walking into the living room holding a bag but no one noticed because they were all on the couch with their back to her. She saw Rob sucking Chris and Christy was bouncing up and down on Rob's cock. Her eyes widened when she saw that Christy was taking Rob's full length in her pussy. She'd never been able to do that.\n\n\"Christy! Oh my!\" She dropped the bag at one end of the sofa and walked over.\n\nChristy smiled up at Patty as the first waves of her orgasm were beginning to wash over her. Patty smiled down on her and leaned in taking Christy's head in her hands. Christy, lost in the moment leaned in and met Patty half way and kissed her. The feel of another woman's lips on hers while she was stuffed with a huge cock sent shivers through her and she began to shake with her orgasm. She fingered her clit furiously as Rob thrust his cock into her stretched hole. Breaking her lip lock with Patty she let out a scream, \"Oh Yes!! Yes! God I'm cumming so much.\" She shook and tossed her head from side to side as she had a nerve-racking orgasm. She finally came down the three others were looking at her and smiling.\n\n\"Now do you know why I was enjoying myself?\" asked Chris.\n\n\"Mammy yessss. God, he feels incredible!\" She ground her hips into Rob and he groaned around Chris' cock still in his mouth.\n\nPatty's pussy was dripping wet by this time. \"So did you enjoy it? It sure looks likes you did.\"\n\n\"Oh yesssss.\" Christy hissed through clenched teeth. \"I got some of what Chris was getting and it felt so good. God Patty, I don't see how you can fit this thing in your tiny body.\" Christy slipped off Rob's cock and laid back on the sectional next to Rob and Chris slipped from Rob's mouth and kissed him.\n\n\"I'm glad you like it. Seems you can take it easier than I can. Maybe I'll have to let you use him more often since I can't always accommodate his monster cock no matter how hard I try.\" She moaned. \"Want to see what I've got in the bag?\" She asked the three of them. They all nodded at her through half closed eyes. She backed up to the bag and reached in and pulled out a long thick dildo. It was bigger around than Rob was and just and long. It had thick veins and bulbous head. Attached to it was a harness.\n\nRob and Chris both smiled when they saw what it was. Christy gasped. \"Oh my. And just what are you going to do with that thing?\" She asked.\n\nPatty moved over to the couch and gave Christy a quick kiss on the lips. \"Well would you like me to use it on you? You took Rob easily enough. You should be able to handle this baby.\" Christy moaned. \"You mentioned earlier that Chris wanted you to use a strap-on with him. Now's your chance. Unless you want me to use it on you..\" She trailed off and had a big grin on her face.\n\n\"Maybe later.\" Christy said and stood facing Patty. \"Oh my, I feel empty after that.\" She giggled. \"Right now I think I want to experiment with you. See if all this,\" She waved her hand towards Chris and Rob and then at Patty and her, \"is all that you say it is. I want to explore this more. More than we did last night.\" She reached out to touch Patty's stomach and felt the heat emanating from her. Patty reached down with her free hand and took Christy's in hers and led her to the other end of the sectional sofa so they could watch the boys get it on while they did the same.\n\nPatty guided Christy to the couch and had her sit down first. She took of her bra and let her ample breast spill out onto her chest, spread Christy's legs, and knelt between them. She glanced over at Rob and Chris. They were rubbing each other, kissing and pawing each other intimately and would glance over at the girls, especially Chris. She guessed he wanted to see how his wife reacted. Well he was going to find out. She looked back at Christy and saw that she was watching her husband and Rob getting it on, a mixture of awe, pleasure, and disgust. \"Come on Christy,\" she said taking her head in one hand and turning it to face her while snaking her other hand between their legs to cup Christy's pussy, eliciting a moan from her. Patty leaned in and gently planted a kiss on Christy's full lips. Unlike the first time last night, Christy opened up and let Patty explore her house with her tongue right away.",
        "Christy moaned when Patty's lips touched hers. Even though they had kissed a bit more last night and fawned over each other last night playfully it was still so foreign to her. Especially with Patty's hand on her pussy. But then a moan escaped and she relaxed as Patty gently massaged her mound, making her melt away into the couch and relax completely. The feeling was glorious. For a moment she forgot all about her husband on the other end of the sectional with Rob. As they kissed she could feel Patty work her hands over her hairy mound and then slip a finger into her wet pussy. She gasped and opened both her lips and legs wider to give Patty access to her body, giving in to the familiar, yet new, sensations washing over her body. Her hips rose to meet Patty's hand as she felt another finger enter her and begin to wiggle inside her wet folds. \"Ugggh yesss Patty.\" Christy groaned as she broke their kiss and leaned back on the couch. \"You are so good with those fingers. I think I'm going to like this.\"\n\n\"Just wait until you see how good I am with my tongue.\" Patty interrupted.\n\nChristy let out a low groan and so did Chris. She wasn't sure if it was in response to what her and Patty were doing or if it was because of what the boys were doing. She glanced over and saw that Chris was now behind Rob, with him on all fours facing them. His cock was sliding back and forth in Rob's lace and satin covered ass crack. She could see that he was getting ready to fill Rob's ass with his cock. The sight was so foreign to her. Yet now that it was here in front of her, Patty fingering her pussy, and she was incredibly turned on. \"So you want it that way too Chris?\" Christy groaned as Patty moved lower, kissing her way to Christy's nether region.\n\nChris nodded as he watched Patty begin to lick Christy's dripping wet pussy, causing both him and his wife to moan in pleasure. \"Yesss. I want to fuck his hot ass.\"\n\n\"Then do it. Fill him with your cock and cum for me.\" Christy couldn't' believe those words were coming out of her mouth but they were. And it turned her on even more. One hand reached for her hard nipples and pinched them as the other snaked through Patty's long brown hair and held her tight to her pussy as she felt another orgasm wash over her so soon. These new, wonderful sensations were pushing her over the edge quickly to her second orgasm of the night. She moaned and tightened her thighs around Patty's head as she felt her close her lips around Christy's mound and lick furiously at her clit. Her breath came in short gasps as she moaned and bucked on the couch cumming for the second time tonight. Chris was really good with her tongue but Patty was even better. She groaned and gasped as her orgasm started to wash over her again.\n\nPatty was enjoying giving so much pleasure to Christy. It was always a thrill to give a woman her first foray into the world of making love to another woman. It was even better that it was her neighbor. Patty traced her tongue over Christy's wet pussy lips as she was guided by Christy's hands in her hair where she wanted to be touched. She let her tongue trail up and down Christy's slit and stopped to clamp her lips down on the engorged clitoris poking out from under its hood. This made Christy groan loudly and clamp her thighs to Patty's head. She could feel her body tensing up as another orgasm washed over her so she must have hit the spot. She continued to lash at it with her tongue, up and down side to side as Christy began to buck and gasp on the couch.\n\nChristy watched through half closed eyes as her husband sat up on the couch and Rob straddled him, ready to take his cock in his satin covered ass. She shivered at what was coming next. She'd had Chris fuck her in the ass but had never seen it from this point of view before. Rob lowered himself onto Chris and took him in easily. \"Ugghhhhh.\" She moaned, just as much from Patty's tongue as seeing her husband's cock disappear in another man's ass. As Patty worked her into an orgasmic frenzy she watched, her eyes fluttering as she came and Chris thrust up into Rob's ass, burying his thick cock deep in his ass.\n\nThey watched Patty and Christy on the other end of the sectional as Rob's wife began to give Christy what was probably one some of the best oral sex she's ever gotten. Chris leaned over and licked Rob's ear. \"Mmm looks like our wives are getting along nicely. I think I lucked out.\" He ground his hips hard against Rob's ass and rose back up as Christy spoke to them, asking if he wanted to fuck Rob. He replied he did, so to fulfill her wife's command and give her a good view he pulled away from Rob and sat on the couch. He held up his rock hard cock and waved it at Rob invitingly.\n\nRob took the hint and straddled Chris. He felt Chris line up his cock with his tight ass and gently push upward with his hips. Rob spread his cheeks and lowered himself onto Chris's thick cock. Rob felt Chris' thick head easily penetrate his waiting ass. As he sat there reveling in the feel of a real cock in his ass after so long Chris thrust deeper into his eager hole and he gasped.\n\n\"Ahh yessss.\" Rob hissed. \"Oh God I can't believe how much I've missed this. Fuck my ass baby. Fill me with cum.\"\n\nThey could hear Christy gasping and groaning with an orgasm behind them and smiled at each other.\n\n\"Ughh yessss. You are so tight Rob.\" He held Rob's hips as he eased into his rear passage. He'd felt Christy's ass around his cock a few times but this was different. Another cock and balls were bouncing up and down on him as he plowed Rob's ass. The feeling of it was wonderful. As he eased in and out Rob moaned and his cock bounced up and down between the two of them. \"God you feel incredible.\" He felt Rob's ass tighten around his stiff pole as they relished the sensation each was feeling. He took his hands and guided Rob's hips back and forth over his engorged cock. He continued to grind his hips slowly as Rob ground into him and groaned over and over. His eyes were closed and he was enjoying the feel of Rob's ass and satin clad body when he felt something round and cool touch his cheek. He opened his eyes to see Christy holding a large dildo in her hand and waving it back and forth and then he realized that she was wearing the strap on dildo that Patty had brought over. He moaned loudly.\n\nChristy looked down at Chris and grinned. \"My turn to fill your ass. I know you've wanted this for a while. So why not tonight? You've already had the real thing but I'm going to do this to show that I own your ass. If I like it I may do it again. \"She grinned as a low, long groan escaped from Chris' lips as he looked up at Christy with a big smile on his face.\n\n\"Ohhhh yessss Christy.\" He hissed. \"Mmmm Rob, looks like I get to feel your toy in my ass after all.\"\n\nRob opened his eyes and smiled. \"Oh you'll love it.\" He sat down hard on Chris' cock and moaned deep as he watched Chris open his mouth and try to work the shaft in between his lips.\n\nChris opened as wide as he could but wasn't able to get much more than the head into his mouth. Oh my god. He thought. Am I going to be able to take this in my ass? Before he could think about it anymore Christy had pulled back from him and was moving to the floor on her knees.\n\n\"Get down here so I can fuck that ass like you've always wanted.\" She commanded.\n\nChris and Rob looked at each other and grinned. Rob leaned in and whispered something to Chris as he pulled off his cock and Chris nodded. Rob got down on the floor on his back facing Christy. Christy gave him a puzzled look. \"What are you doing rob? This is for Chris tonight.\"\n\nBefore she could say anything else Chris got between the two of them and kissed his Christy. She kissed him back, slipping her tongue into his mouth and gasped. \"What do you have planned?\"\n\n\"I'm going to fuck Rob while you fuck me. How does that sound?\" he whispered as he turned around and got into position between Rob's legs, his cock lined up with Rob's ass again and slid right back into him.\n\nChristy watched as Chris eagerly slid into Rob's ass and started to slowly fuck him again. \"Oh so you want to give and receive at the same time?\"\n\n\"Well you did say you wanted me to cream his ass.\" Chris looked over his shoulder and grinned at his wife.\n\nPatty giggled and rubbed her pussy as she took the incredible sight in before her as she sat on the couch stroking her pussy.\n\nChris smiled at his wife and for the first time that night she leaned in and kissed him. He moaned as she ground her hips with the large phallus into the crack of his satin covered ass and their tongues danced over each other for a couple of minutes. In all the years they had been married he thought to himself that this had to be the hottest kiss they had ever exchanged.\n\nChristy slipped her tongue into Chris' mouth and kissed him passionately. She was beginning to love this new side of him and her new found sexuality. She'd always harbored suspicions about Chris ever since he confessed to like wearing lingerie but she was always afraid for some reason of giving in. Now seeing all this play out before her she realized how wrong she was. She pulled away from him and grinned, \"Mmmm that was nice. I'm glad you like to follow orders. This could lead to something interesting. But right now I want to fulfill your fantasy of having me fuck you. Think of it as payback for what I caught you doing. Because this is the biggest thing you'll have ever had.\" She sat back and lubed up the 10\" fake cock and pulled Chris' ass apart, separating the two thin strands of satin that snaked over his cheeks with the crotchless panties. She thought she'd have to get him some lingerie that actually fit him rather than have him wear hers now.\n\n\"Hold your ass apart baby. I'm going to need both hands for this monster.\" She watched as Chris obediently pulled his ass cheeks apart and stopped thrusting into Rob for a moment.\n\nChris moaned as he felt Christy line up the bulbous head of the dildo with his puckered ass. He heard her tell him to steady himself as she pushed forward and popped the head into his ass. He let out a yelp as the fat head penetrated him. \"Oh God!!\" He exclaimed. \"It hurts so good!\" He held still for a moment as his ass relaxed around the largest thing he'd ever had back there. The thick shaft was stretching his ass almost to it's limit. He wasn't quite sure if he'd be able to take much of it in his ass. Eventually he began grinding back and forth, moving into Rob and taking a little more o the dildo in his ass. Inch by inch he took more of it in.\n\nChristy reached down to help guide his hips as he moved back and forth on the dildo and in Rob's ass. Once they had a rhythm going she slid more of the phallus into him. \"That's it baby,\" she cooed, \"take more of it in. Let that panty covered ass swallow this monster. I'm going to fuck your ass hard! You want some cock, well I'll give you a large one.\" She was loving the control she had over him now. \"All dressed up in my lingerie. A wig and makeup to boot. Now you're getting what you really wanted all along aren't you?\"\n\n\"Ahhhhhh!\" Chris exclaimed as he paused his fucking of Rob. \"Oh my God I feel like it's going to split me open. But it feels so good.\" He hissed. His ass shook as she fed it into him little by little. He moaned and whimpered marveling at how he can take it.\n\nShe thrust forward sliding another couple of inches into his stretched ass, marveling at how tight his ass looked around the flesh colored dildo. Inch by inch she fed the large cock into his ass until it was buried deep in his bowels. She then pulled out to the head and thrust back in all the way in one motion.\n\n\"Ugghhhh. Christy. Ohh yess. yessss.\" Chris grunted between thrusts. \"God that thing is big! It hurts so good! Yes, fuck my sissy ass!\" he gasped. He thrust back at Christy as he leaned over a bit to kiss Rob. He rubbed his satin clad body against Rob's, rubbing and fondling him as the three of them fucked with abandon.\n\nAt this point Patty had abandoned her spot on the couch and moved next to Christy. \"Here, let me show you something.\" She reached down, slid her hand over Christy's round stomach, past the thick bush of her pubic hair and slipped two fingers over Christy's slit. Christy stopped thrusting for a moment and gasped. Patty's fingers moved and all of a sudden the harness she was wearing began to vibrate over her pussy. She retracted her hand and watched as Christy half closed her eyes and moaned.\n\n\"Ohh that feels good.\" With every thrust at Chris, Christy could feel the vibrations push deep into her body. She pushed harder and harder into Chris' ass, making him groan and grunt with pleasure and pain. He would stiffen up every now and then as she shushed more into his ass.\n\nChristy looked up at Patty and smiled. She wanted to reach out and touch her so bad now but she was deriving too much pleasure fucking Chris' ass. Patty apparently decided she wanted to get in on the action and straddled Chris facing Christy as she continued her thrusting in and out of her husband's ass. She pulled her panties aside and deftly spread her lips and slipped a finger deep into her wet cleft, eliciting a moan from her lips. She removed it and offered it up to her.\n\n\"Go ahead Christy.\" Patty urged. \"Taste me. You know you want to and I think you'll like it.\" She held out her finger, inches from Christy's lips, and wiggled it, beckoning her to lick it. Without a word Christy opened her mouth and took the offered digit between her lips. Both Patty and Christy moaned as Christy licked and sucked Patty's finger as if it were a cock.\n\nShe bobbed on it and ran her tongue around the offered finger, tasting another woman's juices for the first time. She'd had a hint of her own juices on Chris' lips after he had gone down on her and then given her a kiss, but it was nowhere near as strong and pungent as licking it right off another woman's finger. She loved the musky smell and taste as she gave Patty's finger a blow job. She licked it clean and pulled off of the finger, licked her lips and smiled. \"Very tasty.\" She exclaimed. She heard a moan escape Chris' lips after she said this, seems he approved. \"Could I get it right from the source now?\" She stuck out her tongue and wiggled it like she always liked to tease Chris when she sucked him, except this time it would be another woman's pussy.\n\nPatty didn't need a second invitation. She stepped close enough to Christy's face that she could tilt her head back and reach her pussy as she settled over her. It wasn't ideal but she was so close to cumming and she didn't want to interrupt the fun the other three were having. There would be time for more leisurely love making later, she hoped. \"That's it Christy. Explore me.\" She hissed as Christy's tongue roamed over the parts of her pussy she could reach.\n\nChristy licked tentatively at first, swiping back and forth over Patty's lips and then slowly licking up her slit, drinking in the juices she could get. Patty urged her to lick and explore, which she did. At this point she had settled into a slow grind in Chris' ass and Chris had taken over most of the fucking. She could feel him thrusting back and forth, pumping his own ass as he pumped Rob's. This was fine with her, she was engrossed in pleasuring Patty at the moment. She continued to lick and suck at her folds as best she could from the angle she was at. It was incredible. The softness of her pussy was so different from Chris' hard cock. Instead of her bobbing and Chris thrusting at her face it was gentler and relaxed, more sensual. She flicked Patty's hard clit and felt her stiffen and groan. She knew that meant she found the spot. Big surprise there, she reacted the same way when Patty or Chris licked her there.\n\n\"Ahhh yess Christy!\" Patty moaned. \"Keep that up. I'm going to cum. make me flood your mouth with my juices.\" Christy put more pressure on Patty's clit with her tongue and lashed back and forth over it. She reached lower and held Christy's head in place as she pushed hard against her face and shook with an incredible orgasm. Her body quivered as Christy licked her clit while shaking and moaning in ecstasy. For a first timer she really knew how to eat pussy she though as her legs began to turn to jelly and she pushed Christy's head away from her dripping slit. \"Oh my God that was wonderful!\" Patty exclaimed as she collapsed on the floor next to Rob and Chris, putting an arm around their gyrating, grunting bodies. She looked over at the two of them and smiled.\n\n\"Your wife is wonderful at eating pussy Chris.\" She then leaned in, brushed the hair of the wig Chris was wearing to one side and kissed him as he continued to pump in and out of Rob.\n\n\"Mmmm I'm glad to hear that. Ughh\" Christy thrust hard into Chris' ass again.\n\n\"Maybe I'll have to do it more often.\" Christy said as she grabbed Chris' hips again and thrust hard into him, burying more of the dildo in his ass. He had more than half of it in him now. The thick cock stretching his ass to new sizes. \"Seeing as how you seem to want dick more now. Maybe I'll have to get some more pussy.\" She slammed into Chris' ass making him fall forward into Rob's ass and he let out a low and long groan.\n\n\"Ugghhh, mmm, ohhh,\" he groaned as Christy fucked him hard and talked to him. \"Ahhh I'm going to cum!\" He shouted.\n\n\"Do it!\" the other three said almost in unison.\n\n\"Yes. Oh God yes!\" He tensed up and finally emptied his cock into Rob's ass. Rob moaned beneath him and had a look of ecstasy on his face as his ass was filled with hot cum. Chris slumped onto Rob, sweat dripping from his brow. He felt Christy pull from his ass and he was left stretched wide and felt so empty but felt so good. He could hear Christy panting as she pulled from his ass and he looked over his shoulder to see that she was sitting back, hand under the harness fingering her pussy.\n\nChristy was working her hand feverishly in her pussy. Watching Chris kiss Patty and then hearing him exclaim he was cumming in Rob pushed her close to the edge of cumming again. Now she needed to get one final release. She dug her fingers deep into her wet pussy and rubbed her clit with the palm of her hand. The combination of the two drove her to her last orgasm of the night. She shook almost violently and threw her head back, letting out a loud moan as she shook and slumped back on the floor smiling at the three others with her.\n\n\"Oh my God. I think I was wrong about all this.\" She panted. Patty was crawling to her and Chris had pulled from Rob's ass and they were now entwined in each other's arms next to her. Patty rubbed her leg slowly and cooed.\n\n\"I thought you might.\" She said, and kissed her again. This time there was no flinching or tensing, Christy just went with it and kissed her back.\n\nChris looked over and smiled. \"I hope we can do more of this again. It was incredible.\"\n\nRob nodded in agreement as he sat up and watched his wife make out with Christy.\n\nChris moved closer and pulled his wife to him, breaking the embrace she had with Patty. \"So am I free to play with Rob and Patty when I want?\" he asked, kissing Christy with a renewed sense of passion.\n\nShe smiled and trailed her fingers along the satin fabric of the satin top he was wearing. \"As long as I can play too. In fact I have some ideas that I want to run by Patty. See if she's up for some adventure, with or without the two of you.\"\n\nChris looked from Christy to Patty to Rob. They all smiled so he took that as agreement from them and he smiled too. \"Well it looks like we're all in for some fun.\" Chris beamed.\n\n\"Yes we are.\" Christy said as she reached down and gave Chris' flagging cock a squeeze. \"But right now I want to talk to Patty about a few things. Why don't you two boys take the guest bedroom tonight? You can do what you want while Patty and I plan on how to proceed with this little arrangement.\"",
        "Patty smiled and gave Rob a kiss. \"Go on baby.\" She patted his ass and urged him up off the floor. He did so and grabbed Chris' hand.\n\nChris stood. He looked at himself in the hall mirror as they walked to the guest bedroom. His makeup was a mess now along with the wig he was wearing and the teddy had cum drying on it. He looked like he'd just gotten done at a gang bang and he had been at the center of it. He continued on to the guest bedroom with Rob right behind him and they closed the door to do whatever they wanted while their wives were discussing what's next. He was floating on cloud nine.\n\nAfter Rob and Chris walked upstairs to the guest bedroom Christy stood up, strap on dildo swinging from her waist and sighed. \"Oh my God. That was, incredible. Did we just all do what I think we did?\" Her mind was swimming with the events that had just taken place. It was quite a shock to come home and find her husband getting fucked, in her lingerie no less, by the neighbor's husband. But then to have it end up in a foursome with Patty giving Christy her first complete girl on girl experience all while the guys got it on was just too out of this world to comprehend. It turned out that she enjoyed it quite a bit after the initial anger and shock subsided and now she was wondering where to go from here.\n\nPatty helped her with that decision. She sat up on the couch and helped unbuckle Christy from the strap on, letting it fall to the floor. Her hands played over Christy's round hips, massaging her soft skin, eliciting a moan from Christy's lips. \"Yes we did,\" Patty smiled, \"and it was wonderful.\"\n\nChristy looked down at Patty, her long brown hair cascading over her shoulder and reaching down past her pendulous breasts. A warm feeling stirred in her pussy at the sight. She was surprised at how seeing Patty like this made her feel. Up until a couple of days ago she'd never really given any thought about another woman this way before, yet it felt so good. She pulled Patty up off the couch and began walking up the stairs to the master bedroom \"Oh, yes it was at that. I want to play some more. I'm liking this newfound side of me. The things you made me feel were incredible.\"\n\n\"So what shall we do now?\" Patty asked as they entered the master bedroom. The door to the guest room was closed and she could hear the shower going in there.\n\n\"How about we get comfortable in bed like I suggested earlier?\" She grinned. \"We can talk, and who knows what else.\" She winked at Patty. Christy wanted to discuss what was going to happen between the four of them but she also wanted to have some alone time with Patty. She heard the shower running in the guest room and wondered what the boys were up to.\n\nPatty followed Christy down the hall to the bedroom and stood next to the bed. She could see out the window and peer into their house from here. \"Hmm, so this is what it looks like from this side.\" She giggled as she stripped her garter belt and panties off her hips and legs. Now she was completely naked like last night.\n\n\"Yes it does.\" Christy said as she gave Patty's ass a playful smack. \"So you've watched us a few times?\" Christy shot Patty a reproachful look as she sidled up to her and squeezed her tight ass.\n\nShe blushed a bit. \"Yes. I must say, watching the two of you is hot. Seems Chris really loves to eat your pussy.\" She grinned. \"I can't blame him.\" She said licking her lips.\n\n\"Yeah. He can't get enough of it.\"\n\nIt was Christy's turn to blush now as she let go of Patty and rolled the thigh high hose off her legs and tossed them into the corner of the room. She saw a pile of lingerie sitting there. \"Hmmm, looks like Chris had been having quite a bit of fun while I was gone.\" She surmised as she used her foot to push the pile around. Some of it still had wet cum stains on it and she made a mental note to ask him just how long he'd been into this later.\n\nShe'd always liked having Chris watch her play with herself in bed. She loved to shove a vibrator in her pussy while he jerked of with her lingerie wrapped around his cock so she guessed she had a bit of an exhibitionist streak in her. \"I never thought you'd see us with the blinds open. I guess I should have checked better.\" She giggled.\n\n\"Uh huh.\" Patty nodded. \"Like I believe that.\" She reached out and pulled Christy to the bed with her.\n\n\"\"It's true.\" Christy countered. \"Though the thought of being watched and not knowing it does seem kinky.\"\n\n\"Well,\" Patty paused, \"Just leave your drapes open. We don't mind.\" She grinned wide at Christy.\n\nChristy laughed. \"Only if you'll do the same.\" She playfully shoved Patty in the shoulder causing her to fall back on the bed. Her large breasts swayed and flattened out as she fell backward. Christy was taken aback at how beautiful she thought Patty looked lying in bed next to her. She crawled up to Patty and gently laid a single kiss on her lips, and then began to work her way lower, leaving a trail of kisses on her neck until she reached her breasts. They were large even when she way laying down. Her areola were about the size of a half dollar and her nipples were hard as a rock, poking out from her chest more than half an inch. She stopped, face in her hand and took in the sight of her, her eyes moving from Patty's breasts to her face.\n\n\"Don't stop.\" Patty urged her.\n\n\"I'm sorry. It's just all so new to me. And now that all the passion and anger of what happened downstairs has passed I still feel a bit shy about it. \"Christy sat up on one elbow next to Patty's reclining form. \"I'm still a bit hesitant at making the first move now that we're alone.\"\n\n\"Well,\" Patty replied softly, \"Where would you like it to go? Make the first move, do what you want. You know I'm obviously open to it. It seems you had some ideas running through your mind out there in the living room.\" She stroked Christy's shoulder. \"I know where I'd like it to go.\" Her hand moved lower and stroked Christy's naked breast as if to underscore her intent.\n\n\"Ohhhh.\" Christy sighed. \"Your touch is so soft. Yes I think I'd like more of that. It felt so right, and soooo good.\" She dragged out the 'so' to emphasize how good it was. \"I want to explore more with you. And Rob, if you'll let me.\" She rolled over and laid a soft kiss on Patty's breast, looking up at her hoping for a positive response.\n\n\"I think that can be arranged. Maybe it will give me a break. Seems you can handle his cock better than I can.\" She giggled. \"But what about Chris and Rob?\"\n\n\"The two of them? Together?\" Patty sighed. \"Rob has told me he had fooled around with guys in college and recently he'd wanted to do it again. So I gave him my blessing to start looking. So he'd been looking around online and in chat rooms.\" She drew in a deep breath. \"I just never dreamed that it would be with the next door neighbor. Makes things a bit easier. Especially since both of us caught them in the act last night.\"\n\n\"Hehe, yeah. That was, um, quite the shock to me. I guess not so much to you though.\" She sat up and looked at Patty lying next to her, taking in her large pendulous breasts and slightly round stomach, her thick bush, still glistening with her juices from their earlier activities.\n\n\"I never thought for once that this would ever happen. I mean, I knew Chris liked my lingerie and toys. I had suspicions that he was wearing my things when I wasn't around too, I was willing to brush that off since he never pushed it on me in bed after he'd brought it up once, but I never thought that he wanted a cock. But apparently he does.\" She sat there and pondered for a moment. \"But does he still want pussy? He didn't even make a move to want to fuck either me, or you.\" Her hands caressed Patty's thigh.\n\n\"Well then maybe you should have a talk with him.\" Patty suggested as she pulled Christy to her and gave her a kiss. You can always come talk to me and I'll be there for whatever you need. Whatever.\"\n\nChristy smiled as she looked up at Patty. \"When you say whatever, you mean anything right?\"\n\nPatty smiled back. \"Yes. Even if Rob is involved to satisfy any needs.\"\n\nChristy moaned at that thought. Being stuffed by him was amazing. Chris was great with his cock in bed but being stuffed so full by Rob was something else.\n\n\"Mmm. I think I like the thought of that. I love Chris' cock but your husband filled me up so much, oh God. I don't see how you do it, with your small frame.\" she stroked up and down Patty's body, caressing her breasts as she did, Patty squirmed at her touch and sighed.\n\n\"I don't.\" She responded softly, loving the feel of Christy hand on her breast. \"I can't take all of him in my pussy, he's too big for me. At best I can get a little more than half of him in me.\"\n\n\"Well maybe we ought to swap husbands in bed.\" Christy chuckled. She didn't exactly know if it would turn her on but she definitely wanted to get with Rob again. She wasn't sure how she would react seeing Chris plow Patty.\n\n\"Ohhhh, I think that can be arranged. After all I did come back over here and find you impaled on my husband. And I must say, the sight was pretty hot. Seems you can take care of his needs once in a while when he needs something more.\" She turned to face Christy, leaned in, and kissed her on the lips gently. \"I think this will turn out just fine.\" she pushed against Christy's hand on her breast and moaned.\n\nChristy kissed her back, opening her mouth to slide her tongue into Patty's and tangle with her tongue. Their hands roamed over each other's bodies as they made out on the bed like schoolgirls on a first date with their boyfriends.\n\nPatty was the first to break their embrace after a few minutes. \"Ohh Christy, you are a natural at this. You sure you've never done anything with a woman before?\"\n\nChristy blushed. \"Never. It just comes to me.\"\n\n\"Mmmm, well you are very good at it.\" Patty sighed. She heard Rob moan through the wall in the guest bedroom next door. \"Sounds like the boys are having one more go around before going to bed.\"\n\n\"Sounds like a good idea to me.\" Christy shot back and gingerly laid a kiss on Patty's soft, round breast. She still couldn't believe that she was in bed with another woman and her husband was one room over getting it on with the same woman's husband. It was like a scene from some of the stories her and Chris read from Pethouse.\n\nPatty watched as Christy bent her head lower and kissed her breasts, sucking in each of her hard nipples and eliciting a low moan from her mouth. \"Yesss. That it's explore my body Christy.\" She urged her on to other parts but Christy wanted to stay focused on her breasts.\n\n\"So what are you going to do next? With Chris, that is.\" Patty asked with a low moan as she stroked Christy's hair gently.\n\n\"Well I think the first thing I'm going to do is take Chris shopping.\" Christy said as she laid kisses on Patty's soft skin. Her tongue made circles around Patty's large areola. \"I don't need him stretching out any of my lingerie any more than he has already.\"\n\nPatty chuckled. \"Good idea. When Rob told me he was into wearing lingerie that was the first thing I did. And it was quite a turn on\" She squirmed as Christy nibbled on one of her nipples. She gasped at the pain and pleasure it caused. A new sensation for her.\n\n\"And I'm going to get him lots of panties.\" Christy sighed, seeing Patty squirming. \"If he wants to wear lingerie I'm going to have him in panties all the time. Seems only fitting.\" She bit down again on her breast, making Patty gasp as her face contorted in pain and pleasure.\n\n\"Ohhh I like that idea.\" Patty gushed and hissed with more pain/pleasure. \"Maybe I should do that with Rob.\"\n\nChristy stifled a moan. \"That would be hot.\" She thought about both their husbands in panties all the time, especially Rob and that huge cock of his straining at a tiny pair of panties. \"You think Rob could fit his monster into a pair of panties?\" She asked, her pussy beginning to wet at the thought of their cocks in satin and lace all the time, probably in a state of semi arousal too.\n\nShe giggled. \"Oh yeah! He's worn panties for years, just not all the time. He can fit that monster in there. Just not when he's hard.\" Her hand snaked down over Christy head and guided her lower, she wanted Christy feast on her pussy again.\n\nChristy moaned at the thought of Rob's cock poking out of the panties and the thought of Chris' cock hard and straining at the satin fabric wrapping his cock. \"That sounds so hot Patty.\"\n\n\"Oh it is.\" She intoned. \"Gets me all wet when I see it. Even when I think about it.\"\n\nChristy was moving closer to Patty's bush, near her belly button now, laying a sweet trail of kisses while her hands continued to massage her breasts and tease her nipples. Christy could smell Patty's intoxicating scent as she moved closer to what she wanted. She inhaled and was rewarded with the sweet and musky smell of Patty's wet nether region. Her pussy must be dripping wet. She thought to herself. Christy scooted down the bed and planted a kiss on Patty's glistening mound and made her moan.\n\nChristy looked up and blew a kiss at Patty. She was looking down at her with half closed eyes, lost in the softness of her touch. \"I want to see that next time. Both of them in panties and hard, stroking each other.\"\n\n\"In fact I'm thinking maybe Chris needs a new wardrobe.\" She blew softly over Patty's hooded clit, making her moan. She licked across Patty's pussy now tasting the juices that were running freely.\n\n\"Oh my. That sounds deliciously fun. Are you going to get him some dresses too? Get him all dolled up?\" Patty gasped. \"Your own panty boy all dressed up to go out with you for a girl's night out. You could even pick up a guy to bring home and share.\" She pushed against Christy's tongue, wanting more.\n\nChristy opened wide and lapped at Patty's dripping pussy as she pushed against her tongue. She was squeezing her thighs together as Patty talked about what she could do with Chris all dressed up. She wasn't sure about that. Lingerie was one thing but getting all dressed up was quite a step. The thought of picking up another guy at this point sounded like one hell of a kinky idea but she wasn't sure she'd want to go through with it. She knew Rob, a total stranger was something different. But she'd come this far in one night so who knew. She let her imagination run with it as she ate Patty out. \"Ohhhhh, I'm not sure about it, but I'll have to think about that little idea. Right now though I think I want to feed you my pussy again.\"\n\nWithout breaking her lock on Patty's pussy she spun around and straddled Patty's face. Patty opened up her closed eyes and saw Christy's glistening lips hovering over her. She grabbed her hips and pulled her closer so she could slip her tongue into the wet cleft presented to her. As she did she heard both Rob and Chris next door moaning loudly in what she could only assume was their last orgasm of the night. Not to be outdone she began to lap at Christy's folds while she did the same to her.\n\n----------------------------------------\n\nRob and Chris were in the guest room next door to the master bedroom. What had just happened was Chris' dream come true. He couldn't believe that Christy had gotten into it as well as she did, even if some of it was a revenge fuck for what she'd caught him and Rob doing. She'd told him so. She seemed to really get into having her first girl on girl experience with Patty and hoped it would continue. It felt so good having his ass filled by Rob's cock and then having Christy fuck him good and hard later with the huge strap on dildo Patty brought over. Right now though he wanted to get cleaned up before hopping into bed with Rob.\n\n\"Let me get cleaned up Rob and we can get comfortable for the night and see what comes up.\" He giggled at the pun he just made. Rob smiled and laughed.\n\n\"Oh I'm sure we can get something to come up again.\" Came his retort. He hopped on the bed and squirmed out of the tedddy he had on and tossed it in the corner.\n\nChris peeled off the lingerie and thigh highs he had on and tossed them into a corner. He wondered what Christy had in mind for him next and what she and Patty were discussing next door. He stepped into the bathroom attached to the guest room, took of his wig, and started to wash off the runny makeup from his face while the shower warmed up. Once the water was the temperature he wanted he stepped in and started to soap up.\n\nRob waited on the bed while Chris was getting washed up. As he did he heard the girls coming up the hallway and pass by the closed door to the room. They didn't stop to look in but he heard them talking. He didn't make out what they were saying but he was sure it dealt with him and Chris. His cock stirred at the thought of what the girls were dreaming up for them as he got up of the bed. He needed a shower too before they continued with one last romp for the night so he figured it would be a good idea to join Chris.\n\nChris was soaping up when he heard the shower curtain get pulled back. He looked over his shoulder to see Rob standing there, his flaccid cock hanging between his legs ready to hop in with him.\n\n\"Shall we do our part to conserve water and take a shower together?\" Rob joked.\n\n\"That sounds like a good idea.\" Chris laughed back. \"Come on in.\"\n\nRob stepped in and took the soap from Chris. \"Let me help you with that.\" He soaped up his hands and ran his them over Chris' smooth skin, eliciting a moan from both their lips. \"This is just as fun without the lingerie\" Rob said as his cock began to stir.\n\nChris sighed, turned around, and reached out to return the favor. His soapy hands roamed up and down Rob's smooth chest and down to his cock. \"Mmmm yes it is. Let's get this thing hard again so we can have some fun again tonight.\"\n\n\"I think that can be arranged.\" Rob said as he soaped up Chris' cock and stroked it until it became hard again. By now his member was rock hard too and he pressed his body up against Chris' and reached around to grab his ass. Their slick bodies ground against each other as Chris tilted Rob's head towards his and went in for a kiss. Rob opened his mouth and willingly accepted the kiss from Chris. It felt much slower and more romantic than earlier in the night and he was enjoying it. Not that he didn't' enjoy what happened earlier but this had a different feel to it. Slowly they ground against each other and made out in the shower, their hard cocks sliding between the two of them, moans emanating from the shower stall and open bathroom door.\n\n\"Let's finish up here and crawl into bed.\" Chris said as he broke their embrace. I want that piece of meat other places.\n\n\"Ugghhhhh yesss.\" They took turns washing soap off each other and turned off the water just as it was starting to get cold. After toweling each other off Rob pulled Chris from the bathroom and onto the bed.\n\nChris went willingly, wanting to suck Rob again one last time before bed. He mounted Rob and ground his hips into Rob's. Their freshly cleaned bodies rubbing, cock and balls sliding against each other. \"Ohhhhh I love the feel of this.\" he hissed.\n\nRob moaned too. \"See? See what you've been missing all these years? I know I have, and now that I've got it right next door it's even better.\"\n\n\"Oh yes!\" Chris excitedly replied. \"I just wish I'd found out about your sexual leanings sooner. We could have had so much fun.\" He kissed Rob again as they made out on the bed. \"I wonder what the girls are talking about next door?\"\n\n\"If I know Patty, she's probably getting it on with your wife again. She has that effect on women.\"\n\n\"I hope so.\" Chris responded and reached between their bodies and grasped their cocks in his hand and pumped. \"Ughhhh, mmmmmm. And Christy is probably figuring out what do with me. I just hope it's more of what happened earlier.\"\n\nRob moaned. \"Oh that would be so fun.\" He thrust into Chris's hand. \"Hopefully they let us play more with each other, without the two of them. Though I think she wants to make you into her little sissy around the house.\"",
        "Chris kissed Rob. \"That sounds kinky. I've often thought that would be hot. We'll see what happens. And yes being able to play without the two of them would be wonderful. We could play while the wives are away.\" He rolled over off of Rob and lay next to him. \"Who am I kidding? They don't need to be gone for us to play together. I'm sure we'll get to pay at least a whole week out of the month.\" He winked at Rob. \"You know what I mean?\"\n\nRob stifled a loud laugh. \"Yes I do.\" He rolled over so he was on top of Chris now. \"That would make for a great arrangement.\" He leaned in and kissed Chris on the cheek while holding Chris' hips. \"Mmmmm, I think we're ready for some more fun. How do you want to end the night? In my ass or my mouth?\"\n\nChris thought about it for a minute then answered \"In my mouth. We can 69. Please each other at the same time.\"\n\n\"That sounds like fun.\" Rob replied. \"Who gets top? you or me?\" He rubbed Chris' ass and squeezed it in his hands while Chris did the same.\n\n\"I think I should, don't want you trying to shove that thing down my throat while were' in the throes of ecstasy. I can't quite get it all in there.\" A loud moan came from next door. It sounded like Christy.\n\n\"I wonder if that was Christy getting or giving some pleasure?\" Chris asked as he rolled Rob off of him.\n\n\"Probably a bit of both.\" Rob said. \"She seemed to really get into it earlier after overcoming her initial shock.\"\n\nChris sat up next to Rob as he spun around so they were cock to mouth now. \"Yes she did. But I wonder if it was just a way for her to get back at me for being with you,\" he straddled Rob's face and stroked the large cock facing him, \"Or if she was really getting into it.\" He licked the shaft in his hands and moaned.\n\n\"Oh yesss.\" Rob hissed. \"That's it lick my cock baby.\" He thrust his hips slowly up and down. \"Let's hope it was the later.\" Rob gasped. \"I want to have more fun with all of us. Not just you and me.\" He licked Chris' cock. \"That is if the girl's let us. But I sounds like they're having fun next door.\"\n\nChris opened wide as sucked Rob into his mouth. \"Mmmhmm\" was all he could manage with a mouthful of cock. He sure hoped Christy was into fooling around with Patty. He bobbed up and down on Rob as he felt Rob engulf his own member with his mouth, making him moan. The thought of all four of them being able to explore more together, assuming tonight wasn't a fluke, was an incredible turn on, even more so than having just Rob fuck him while being all dressed up. Yet now here he was, sans makeup and lingerie and it was still quite a turn on, which he guessed answered a question that had been nagging him from Friday night that Rob had asked him. Lingerie or not, he still wanted this.\n\nHe sucked Rob deeper into his mouth, opening his jaw as wide as he could and taking all of Rob's cock in his mouth like a pro.\n\nRob now had Chris' cock all the way down his throat. He found that sucking cock was like riding a bike, you never forget how to do it. He was able to bob up and down on Chris' shaft, taking all 6\" in his mouth with ease. It felt incredible having a cock deep in his mouth and balls slapping his chin. Over and over he moved his head up and down to suck and lick the smooth, glistening shaft that was over his face.\n\nThey were a joined mass of hot flesh at this point. Hands roaming over each other's bodies, moths working frantically at stiff cocks, wanting to suck out that last orgasm of the night. Chris gasped as Rob took him deep over and over again. He pulled off Rob's shaft to give his mouth a break and moaned. \"Oh God you are such a great cocksucker.\" He nuzzled the base of Rob's turgid member and licked his balls, making Rob moan around him. He continue with the stroking and opened his mouth wider to take as much of Rob's balls in his mouth that he could from this angle. Rob seemed to be enjoying the sucking he was getting because he doubled his efforts on Chris' cock.\n\nRob loved having his balls sucked on while getting stroked. Chris licking the underside of his balls was pushing him closer to the edge of cumming and he wasn't sure how much longer he could hold out. Rob clamped down on Chris' cock and sucked harder and faster, hopefully urging him closer to his own orgasm. He wanted to cum at the same time as Chris.\n\n\"Ahhh yes Rob! That's it!\" Chris groaned, letting his balls loose form his grip. \"I'm getting close.\" He heard Rob moan and mouth something that sounded like \"good\" around his cock.\n\nChris licked the head of Rob's cock. He felt Rob tense up beneath him and guessed that he was about to get a faceful of cum. This time he wanted to swallow it all down. He clamped his head over the bulbous shaft and pumped furiously with his hand as he licked and teased the head. Soon he was rewarded. Rob grunted loudly and let loose with one last load of cum for the night into Chris' mouth. It wasn't as large as his first two but Chris thought it was still quite a bit. He sucked greedily, swallowing it all down as Rob licked and sucked at his own head nibbling a bit as he came. Chris gasped at this sensation and shot his load into Rob's mouth grunting and gasping as he swallowed and came one final time. When he had finished shooting his load he slid off Rob, their sweaty bodies, heaving from trying to catch their breath.\n\n\"Oh my God that was great.\" Chris sighed as he spun around to face Rob. \"You sure know how to suck.\"\n\nRob smiled. \"I told you I was good.\" He leaned in and kissed Chris. He could taste his own cum on Chris' lips as they stroked each other's bodies slowly, basking in the afterglow of some incredible sex. They rubbed and kissed as they started to doze off when they heard loud moans coming from next door, both Christy's and Patty's.\n\n\"Well I think that may settle the question of whether Christy was doing it just to get back at you.\" Rob giggled.\n\nChris snuggled up next to him, loving the feel of a warm body and cock next to him. \"Mmhmm. I think you're right.\""
    ],
    "authorname": "curiousone43",
    "tags": [
        "lingerie",
        "strap-on",
        "bisexual",
        "anal",
        "blowjob",
        "group sex"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/chris-adventures-ch-03"
}