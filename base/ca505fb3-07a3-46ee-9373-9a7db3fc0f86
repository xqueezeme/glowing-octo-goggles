{
    "title": "Don't Fuck the Flowers",
    "pages": [
        "\"Have you ever fucked a fish?\"\n\nEnnis Ezquerra chose to drop that little gem, casual-like, around the campfire during mess.\n\n\"Ezquerra, what the fuck are you talking about?\" Donald Finney asked.\n\nThe whole unit knew Ezquerra was a completely disgusting fucker with few, if any, redeeming social graces. Picture the greasiest excuse for a building super you could think of. You know, the kind of lardass that spends his days squatting in the basement of a part-firetrap, part-cockroach breeding factory in a white string vest covered in yellow food stains and fuck knows what else. You can see him now, right? Lank greasy hair combed over a bald spot. Flesh broiled pink like a slightly off lobster.\n\nThat would be Ennis Ezquerra's slightly more presentable brother.\n\nTo anyone looking at him, it would be a mystery why the military admitted such an obvious slob as Ezquerra, but that would be because they weren't looking hard enough. Beneath that pudgy flesh Ezquerra had muscle. Slabs and slabs of muscle. He was a quick fucker as well. Finney knew from their casual pigskin games you did not want to get hit by Ezquerra at full speed.\n\nEzquerra had played linebacker for his college. He might have gone all the way to the pro leagues if it hadn't been for that unfortunate incident with the college mascot.\n\n'She looked all purty with her long silky hair,' Ezquerra offered as explanation to anyone who asked.\n\nEveryone knew Ezquerra was a dirty fucking bastard who'd fuck anything so long as it had a hole. Alive and female preferably, but Ezquerra wasn't exactly picky.\n\nAny hole's a goal, as he was fond of saying.\n\n\"Okay, Ezquerra,\" Jack Richter said. \"Just how in the fuck do you fuck a fish?\"\n\nDid they really want the answer to that question? Finney thought.\n\n\"Well you catch it fresh,\" Ezquerra started. He was currently holding his combat knife. \"So it's still wriggling like crazy. You get your knife and you run it down its belly just like this,\" he mimed on empty air with his knife. \"Then you slide the little whore right over your boner. I tell you it feels fucking incredible with the little bitch wriggling away like a bastard, her guts sliding all over your cock.\"\n\nThe squad was shocked into silence.\n\n\"How do you know it's a she?\" Finney asked.\n\n\"Well I ain't exactly going to picture it as a he am I,\" Ezquerra said.\n\nPhil Sutherland, the new boy, looked like he was about to throw up.\n\n\"Not hungry anymore?\" Ezquerra said, eyeing up the other man's canteen. \"I'll take that then, Sonny.\"\n\nW.D. Kaufman shook his head. \"Ezquerra, you are one muthafuckin' disgustin' individual.\"\n\nAnd that was how Fish Fucker came to be called Fish Fucker.\n\n* * * *\n\n\"Zat your girlfriend back home?\" Ezquerra asked.\n\nFinney hadn't heard Ezquerra enter the tent. He was staring at a photo of him and Brooke Cartwright. They were standing against a railing with Niagara Falls in the background. He'd dug it out to get a little reminder of home.\n\n\"Yeah,\" Finney replied. It was the easy answer.\n\nThe reality was a little more complex.\n\nHe liked her. She was sweet. She had a hot body. But...\n\nShe was his first and only girlfriend. They'd been high school sweethearts. They'd been together nearly four years now. He hadn't planned for it to last that long. It was school. Practise. Now she was starting to talk the serious stuff\u2014marriage, kids, mortgages, that kind of stuff. Stuff that scared the shit out of him.\n\nHe stared at the photo.\n\nHe didn't think he loved her.\n\n\"Miss her?\" Ezquerra asked.\n\n\"Yeah,\" Finney said.\n\nAgain, it was the easy answer.\n\n\"Or do you miss the...oomph?\"\n\nEzquerra didn't really need to add the fist pump for Finney to understand what he meant.\n\n\"Fuck yeah,\" Finney replied.\n\nNow that was a truthful answer. He'd been out here for a month now. His sock had developed a crust no amount of washing would ever shift.\n\n\"Found something that'll fix that,\" Ezquerra said, displaying heretofore unseen levels of crypticity.\n\nFinney looked at him with a puzzled expression.\n\nEzquerra tapped his nose and led him out the back of the tent. Finney shook his head. He was probably going to regret this. He followed Ezquerra as he led him a short way out of the small camp, up a short incline and around a rocky bluff. There was vegetation here, if it could be called that. This wasn't Earth.\n\nYeah, that was the biggest complexity of all.\n\nHe'd told Brooke he'd been stationed out in the desert for manoeuvres. That was all he'd been allowed to tell her. It was partly correct. The part he'd neglected to mention was the desert didn't happen to be on Earth. The scientists called it H-Space. It was some kind of weird alternate dimension they'd busted a doorway into.\n\nIt sounded more exciting than it actually was. Once the initial wow! factor wore off it was the same old lugging heavy packs through rocks and dirt.\n\n\"Where we going, Ezquerra?\" Finney asked as they picked their way up a steep hillside.\n\n\"Sumfink I found,\" Ezquerra said. \"It's fucking awesome.\"\n\nEzquerra's definition of 'fucking awesome' included a wide variety of things, some of which were totally gross and disgusting. Finney followed him anyway.\n\nThe sky was a constant reminder they weren't on Earth. It was a roiling mass of purples and pinks, like bruised flesh. It always looked like it was on the verge of a storm, but Finney had never experienced one, or even seen rain.\n\nThe vegetation looked like clumps of grass and small shrubs, but it was red\u2014like blood\u2014instead of green. It also had a disconcerting habit of moving when not looked at directly.\n\nThe scientists said it was an optical illusion. One of the theories was H-Space had weird magnetic fields that screwed around with perception. They certainly screwed around with the equipment. Nothing electronic worked correctly out here. It was like being back in the nineteenth century\u2014grunts and shovels. They were about a week's hard slog from the entrance camp and they had to rely on guys on bicycles to courier messages back and forth. Crazy.\n\nThey rounded a rocky corner and Finney suddenly found himself looking down on an idyllic oasis. Pretty, he thought. A small waterfall emerged from about halfway up the sheer rock face and cascaded down into a small pool. Lush vegetation sprouted around the water. Again, it wasn't like Earth vegetation. The leaves and stems were coloured in fleshy tones rather than verdant greens. The colours leant a strangely erotic feel to the plants. There was something oddly sensual and sinful in the way the branches twisted and tangled over each other.\n\n\"Will you look at these beauties,\" Ezquerra said.\n\nHe stood next to a large bush. Large flesh-coloured flowers emerged from the dense tangle of vegetation on thick red stems. The back of each flower was bulbous and pinkish-red in colour. The petals were fused together into a circular shape about the same diameter as a soccer ball.\n\nFinney wondered why Ezquerra had taken an interest in them. He didn't exactly seem the horticulture type.\n\n\"Don't you think it looks just like a sweet little cunny,\" Ezquerra said, turning one of the flowers to face Finney.\n\nFinney suspected a lot of things looked just like a 'sweet little cunny' to Ezquerra. Surprisingly, on this occasion he was inclined to agree with him.\n\nThe flower looked like a woman's groin. The opening at the centre of the flower was a purplish-pink vertical slit lined with fleshy-looking flanges\u2014like labia. It lay at the heart of an inverted triangle that curved down and into a fold which looked like two thighs pressed tightly together. The resemblance was uncanny\u2014like someone had cut out the crotch of a life-size nude centrefold and attached it to a stalk. There was even what looked like a patch of brown fluff above the opening, about where the pubic hair would be on a woman.\n\nFuck, he really needed to get laid if he was seeing flowers that looked like women's privates, he thought.\n\n\"You know what,\" Ezquerra whispered. \"Feels like one too.\"\n\nThen, before Finney had a chance to look away or even steel himself, Ezquerra dropped his pants.\n\nFuck. That was a sight Finney didn't want to see. It was like a gruesome car crash. Finney couldn't look away. Ezquerra stood there with his stubby little cock growing from his crotch like an angry red mushroom.\n\n\"Dude! What the fuck?\" Finney said.\n\n\"Gonna fuck the flower, what do you think,\" Ezquerra replied as if it was the most natural thing in the world.\n\nHe spotted Finney's disgusted expression.\n\n\"It's awesome, dude,\" he said. \"It's like this is a magical sex toy plant or sumfink.\"\n\nHe grabbed one of the large flowers and steered it down to his crotch.\n\nHe noticed Finney was still staring at him. \"No gawkers,\" he said. \"It's a big bush. Go round the other side.\"\n\nHe turned his attentions back to the flower.\n\n\"Ooo, c'mere you slut.\"\n\nFinney shook his head. He moved off. He really didn't want to see Ezquerra hump the plant. No amount of bleach would be strong enough to purge that image from his brain.\n\nHe walked around the other side of the large shrub. Ezquerra did have a point. The flowers did look a lot like sex toys.\n\nSex toys growing on trees. What a fucked up place H-Space was.\n\nFinney ran a hand over one of the petals. Hey, that felt pretty good. Smooth\u2014like soft skin\u2014and warm too. He ran his hand over the curve of the flower and down under the inverted triangle. Weird. It really felt like he was caressing the private parts of a girl. It brought back memories of making out with Brooke, with his hand down in her panties.\n\n\"Ooo slut. You like it hard don't you, slut.\"\n\nFinney stifled a giggle. Fucking Fish Fucker.\n\nHe ran a finger along the fleshy flanges lining the slit. Just like labia. His finger moved down into the groove and then slipped inside a warm orifice with moist walls. It came away covered in some kind of slippery secretion. He brought it up to his nose. That was different at least. The substance smelt sweet. Like nectar or honey.\n\nFinney was surprised to find himself pulling down his trousers. There was a heavy scent in the air. He felt antsy. He was acutely conscious it had been over a month since he'd last got laid. He placed a hand around the fleshy bulb of a flower and brought it level with his already hard cock.\n\nHe paused.\n\nWas he really going to do this?\n\nWhy not? The flower was just a masturbation aid, no different from using a Fleshlight or other similar sex toy.\n\nHis doubts vanished the moment he pushed his cock into the orifice at the centre of the flower.\n\nOkay, so that felt considerably better than he was expecting. The tube inside the flower was tight, long and moist with slippery nectar. It was also warm and stretchy, properties he hadn't expected in a plant. It looked like flesh. It felt like flesh. It fit his hardon like a snug glove.\n\nFinney placed both hands on the bulb behind the flower to get a good grip and thrust his cock back and forth into the wet interior. The flower made squelching sounds as his cock plunged into nectar-filled depths. It was tight enough for him to feel a little suction on his cock every time he pulled back for the next stroke.\n\nOh fuck, this felt good. Really fucking good. Way better than a crusty old sock.\n\nPent up for weeks, it didn't take Finney long to start coming. The moment he felt his orgasm peaking he thrust his cock all the way into the soft squishy depths at the heart of the flower. He held it there and enjoyed the sticky clasp of the flower walls as his cock throbbed and pumped thick gouts of semen into the well of the unusual bloom.\n\nAhh fuck. He needed that.\n\nHe slipped his cock out and let the flower bob back.\n\n\"Told you it was fucking awesome.\"\n\nFinney jumped. Ezquerra was standing behind him and staring at him with a shit-eating grin on his face.\n\n\"Dude,\" Finney said, scrambling to pull up his pants. \"Didn't your folks teach you anything about privacy?\"\n\nEzquerra shrugged. \"Four brothers, three sisters. Small house,\" he said.\n\nHe rubbed a hand over a fleshy petal.\n\n\"Told you it felt like a woman's cunny,\" he said. \"What did you call yours?\"\n\n\"Call?\"\n\n\"I named mine Veronica,\" Ezquerra said. \"Reminded me of a big-titted slut back home.\"\n\nFinney shook his head.\n\n\"Ezquerra, you are one fucked up individual.\"\n\nThey headed back to the camp.\n\n* * * *\n\nAs he cleaned himself off later that evening, Finney noticed the flower had left a yellowish-orange residue on his cock. He got most of it off and thought no more of it until he was woken in the middle of the night by a raging itch in his groin.\n\nFuck you Ezquerra, Finney thought. If that fat fuck had talked him into shoving his dick into the extra-dimensional equivalent of poison ivy he was going to personally kneecap the greasy bastard. He spent an uncomfortable night tossing and turning in his sleeping bag.\n\nIn the morning he was dreading finding his cock had picked up a rash, or had turned red, or purple, or any other fucking weird colour. How the fuck would he explain that to the medics at Camp Helmuth?\n\nUh yeah. I thrust my unprotected cock into an alien flower because Fish Fucker told me it'd feel good.\n\nThankfully, his cock hadn't broken out in a rash. Or turned an unusual shade of colour. The itch hadn't gone away though, and he had an uncomfortable day trying to manoeuvre his junk into an arrangement that gave less irritation.\n\nFuck you very much, Ezquerra.\n\nThe itchy sensation was still present later that night, setting Finney tossing and turning again. It was the same kind of itch Finney got sometimes if he'd gone a long time without sex or masturbation, only a lot more intense.\n\nWell, he knew how to take care of that. He wrapped his cock up in a sock and imagined he was fucking a hot girl.\n\nIt wasn't Brooke, he thought with a tinge of guilt. It hadn't been Brooke for some time.\n\nInstead he rubbed one out to the image of a heavy-breasted blonde porn star bouncing up and down in his lap. It felt empty, unsatisfactory. The itch was lessoned, but it hadn't gone away entirely.\n\nLunchtime the next day and Finney found himself standing at the edge of that secret oasis again. He stared at the bush with the unusual flowers. There was something really unwholesome and lascivious in how the stems and branches twined around each other. A kind of unnatural pornography.\n\nThe itch was back again and Finney felt like his whole crotch was crawling with restless ants.\n\nHe pulled one of the large flowers towards him. He inserted a finger into the fleshy crevice at the centre of the flower and twisted it around, scooping up some of the nectar lining the insides. He pulled his finger out and examined it. Nectar. Thick, syrupy, clear yellow in colour. He dropped his trousers and rubbed his finger against the mushroom head of his cock, smearing the nectar against the tip.\n\nHis cock immediately sprang to full attention. Finney felt really fucking horny.\n\nWell, he knew how to take care of that, didn't he. Thanks Ezquerra, you degenerate fucker.\n\nHe plunged his erect cock right into the syrupy heart of the flower and shoved his hips back and forth until the pleasant friction took him over the edge. He grunted and spurted his cum right into the heart of the queerly-shaped flower.\n\nHuh? That was weird. For a moment it felt like the opening had tightened around the base of his cock. Was that him? Had he squeezed down harder on the bulb during his ejaculation?\n\nHe pulled his cock out and looked at the bloom in suspicion. It was a flower\u2014pretty, inanimate. Shaped like a woman's vulva maybe, but still a flower.\n\nFinney looked down at his spent cock. It was covered in a thick layer of yellowish nectar.\n\nThe good news was he knew how to get rid of the itch.\n\nThe bad news was he knew how to get rid of the itch.\n\n* * * *\n\nThe itch was back the next morning, as was the horniness. Finney had spent the night dreaming about fucking that big-titted blonde porn star. He'd awoken with a rock-hard boner and it didn't show any signs of wanting to go away anytime soon. Finney absently clawed at his crotch while they cooked up breakfast.\n\n\"Any sign?\" Richter asked Kaufman.\n\nThe other man was standing up and scanning the featureless plain down below them with a pair of binoculars.\n\n\"No,\" Kaufman answered. He put the binoculars down and sat down.\n\n\"That's two days now,\" Richter said. \"Reckon something's happened to him?\"\n\n\"What? There's nothing out here.\"\n\n\"That's not what I heard.\"\n\n\"All bullshit. Nothing but grunts winding each other up with scary stories around the fire. He's got a flat, that's all.\"\n\n\"Bullshit bikes. Mightiest military force on Earth and we're having to courier messages back and forth by fucking bicycle.\"\n\n\"It's a flat. What else would it be?\" Kaufman turned to Finney. \"Hey Finney, you think an H-Space monster has risen out of the dirt and gobbled up our messenger?\"\n\n\"Uh,\" Finney said. He'd zoned out most of the conversation.\n\nThe other squaddies laughed.\n\n\"Look at him,\" Kaufman said. \"I bet he's daydreaming about his girl back home.\"\n\nFinney wasn't. He was thinking about those fucking flowers.\n\nHe kept on thinking about them during the day while the itch in his crotch grew and grew.\n\nHe thought about flowers back on Earth. They were brightly coloured because it attracted birds and bees, and the plants needed to use them for pollination. He thought about the flowers here. They looked so much like a woman's sexual organs, right down to the little fluffs of pubic hair. Could it be deliberate?\n\nThat was a scary thought. If it was true it meant humans had existed here before, and for a really long time. That couldn't be possible.\n\nCould it?\n\nFinney was jarred from his reverie by Kaufman.\n\n\"Hey, you seen Fish Fucker?\"\n\nFinney shook his head.\n\n\"Motherfucker,\" Kaufman said, storming off.\n\nCome to think of it, Finney realised he hadn't seen that greasy fuck for the past day or so. The fat pervert was probably off in search of more wildlife to molest.\n\nThe itch continued to grow and grow until, when the darkening sky had announced a nightfall of sorts, it was a raging inferno of discomfort. Finney tossed and turned in his bag. Fuck. It was like being sixteen and perpetually horny all over again.\n\nHis sleep\u2014what little of it he managed\u2014was fitful and filled with pornographic dreams. This time the figure wasn't the nameless blonde porn actress. It wasn't Brooke either. It was an amalgam of the two. Brooke's blue eyes and sweet little button nose were framed by the actress's long silky blonde hair. The extravagant curves of the porn star's body were married to Brooke's slender legs. When she spoke, the dream woman alternated between Brooke's sweet whispers and the porn star's aggressive sighs of pleasure. In the dream she straddled Finney's body and they fucked in a lush, verdant grove.\n\nBehind her eyes the dream girl was something else entirely. Finney looked up into her face and saw neither Brooke nor the porn star, but instead a presence so alien Finney wondered how it could have entered his dreams in the first place.\n\nHe woke up.\n\nHis cock was rock-hard and eager to be attended to.\n\nHis hand wouldn't do it; there was somewhere else he had to go.\n\n* * * *\n\nFinney looked over the strange oasis tucked away up against the rocky bluff. It was dark. Not full dark like night back home, more a deep gloom beneath a churning purple-black sky.\n\nThe oasis was comparatively bright. There was a luminescent substance in the pool that caused it to sparkle. That same luminescence was also present in the vegetation and all of the plants glowed faintly in the darkness. It gave the whole grove an ethereal, fragile quality.\n\nIt looked pretty, but the only thing Finney cared about at that moment was satisfying the raging itch in his genitals.",
        "This was the last fucking time, he thought. He wasn't going to let his cock turn him into some kind of nectar junkie to a goddamned fucking plant.\n\nHe dropped his pants and his eager erection bobbed out in front of him. He abandoned his discarded clothes and stepped closer to the large shrub. Which flower this time? He reached for the nearest bloom, but as he disturbed the vegetation a much larger flower fell out of the dark centre of the bush. It looked like the others\u2014same weird pink petals arranged in a way that looked exactly like a woman's privates\u2014but the bulb behind the petals was larger and swollen, like a ripe melon in both size and shape. The lips lining the slit in the centre of the flower were thicker and fleshier looking. The whole flower was overflowing with nectar. It dribbled down the lower petals.\n\nFinney was disgusted to find that made him feel harder.\n\nHe was not a fucking pervert like Fish Fucker. It was a plant. It didn't have a name. He wasn't about to give it a name. He didn't love it. He wasn't about to fuck it. It was a masturbation aid. He was going to stick his cock inside it because it was a naturally occurring sheath, which\u2014through some bizarre quirk of evolution\u2014felt exactly like a woman's vagina.\n\nHe gripped the bulbous mass behind the flower and pulled it down until it was level with his crotch. It was a lot bigger; the stem was about the same diameter as his arm. Sighing in pleasure, he eased his cock into the tight orifice in the centre of the flower.\n\nFuck. That felt damn good.\n\nTight. Soft. Wet.\n\nThe interior was overflowing with syrupy nectar. As Finney thrust his hips back and forth it welled up and oozed out over his crotch. Oh yeah. That felt really good. The walls were still soft, but they felt a lot thicker than those in the other flowers. There was more resistance as his cock plunged back and forth between them. The suction was noticeable every time he pulled back for the next stroke.\n\nShit. He should take cuttings or seeds and try to cultivate this back on earth. He'd make a fortune.\n\nHe grunted and plunged his cock all the way in, right until the point where the silky smooth petals were pressed against his groin and his cock had forced through into some kind of membranous chamber deep within the flower.\n\nAt that point he realised he was stuck. He tried to pull out and couldn't. The fleshy material lining the opening had swelled to form a tight cuff around the root of Finney's equally swollen cock. He moved his hips back and the flower came with him.\n\nThis was embarrassing, Finney thought, having this thing stuck around his cock. He must have triggered whatever mechanism the plant used to close off the opening. No matter. Once his erection had subsided he'd be able to slip his cock out. He could always slice the flower open with his knife if he needed to.\n\nThe bulb throbbed.\n\nWhat was that? He didn't think it was him. The thick fleshy bulb had pulsed of its own accord and Finney had felt a ripple of suction travel up the thick cushioned walls wrapped around his cock. It felt kind of...nice.\n\nOh.\n\nThe bulb pumped again, tugging at Finney's cock with soft, fleshy suction.\n\nFinney lingered over going for his knife. Pleasure and curiosity made him hesitate. He let his hands fall to his sides. He didn't need them at the moment. The flower was actively sucking him off and it felt awesome. If he closed his eyes he could picture that gorgeous slutty blonde dreamgirl on her knees before him, giving him a spectacular blow job.\n\nThe fleshy bulb expanded, sucking Finney's cock deeper into the padded depths of the flower. He heard a strange gurgling sound, as if liquid was rushing up the thick red stem and filling up the swollen pink bulb.\n\nWhat\u2014\n\nWarm syrupy nectar filled the membranous chamber within the flower. The bulb contracted and thick, cushioned walls squelched up against Finney's cock.\n\nHe came. Explosively.\n\nOh shit.\n\nHe rocked back and forth on his feet as he gushed cum into the pulsing flower. The fleshy bulb continued to swell up and down, pumping cum from his cock with muscular pulses.\n\nFuck. Now that was how to relieve the tension in his balls. Fuck. He hadn't realised the plant could do this.\n\nThe stem gurgled again and the flower spat another wave of warm, syrupy liquid over his trapped cock. The thick walls contracted, smooshing the nectar into his erect manhood.\n\nFinney came again, this time with a shocked gasp. Muscles twinged as his balls spasmed. Too soon, they protested.\n\nThe flower didn't care. It was fastened around his cock like a hungry mouth. The great bulbous bell behind the flower pulsed like a heart. Finney felt the suction on his cock as the flower gulped down his ejaculate.\n\nHungry little cunt, Finney thought. Maybe he should get his knife out, just in case.\n\nThe fleshy lower petals curled up between his legs. Finney gave another gasp as they enfolded his scrotal sac. He felt a pleasant tingling sensation all across his testicles. An odd numbness crept into his balls.\n\nWhat was going on here?\n\nThe bulb sucked hard, like a vacuum, pulling his cock deeper into the fleshy interior of the flower. More gurgles and his erect member was bathed in warm, sticky fluid. The cushioned walls squeezed and undulated around him, rubbing the juices into his cock.\n\nFinney's mouth fell open as he came for a third time. That felt so good\u2014like a grenade wrapped in rainbow jelly had gone off in the back of his skull. He flopped down on his knees.\n\nThe bulb continued to pulse between his legs, sucking up the spurts of semen erupting from his cock. The silky petals clasped tightly against his body. That pleasant numbness spread to his lower abdomen. He couldn't move his arms. They hung limply at his sides, almost like he'd been injected with some kind of muscle relaxant. \n\nThe flower sucked and sucked, gulping down the unending stream of semen that seemed to be pouring from his cock. The thick red stem looked less like part of a plant and more like a pulsing artery. Finney watched as the vegetation parted and revealed a large pinkish-red pod about the size of a human being. Thick red roots at the base of the pod writhed and pulsed in time with the pulsations running through the bulb wrapped around Finney's cock. Finney watched as the long fleshy leaves of the pod started to unfurl.\n\nBrooke was inside it. What was Brooke doing inside it?\n\nThe girl turned her head and looked down at him.\n\nNo, it wasn't Brooke. Brooke's tits were never that big and round. Her hair was never that blonde or silky. Her figure was never quite so lean and svelte.\n\nHer pussy was never that red and lurid.\n\nIt was an amalgamation of the best parts of both Brooke and the blonde porn star he'd fantasized about. Apart from her eyes. They were an odd shade of pink and utterly devoid of compassion or any other kind of human emotion.\n\nAnd that pussy. God, that pussy. It gaped open and shut like a hungry maw, the movements synchronised with the licentious pulsations of the flower sucking at his cock. The glistening interior was deep deep red. As ghastly as it looked, Finney\u2014God help him\u2014still had the overriding urge to bury his manhood deep into that travesty of a woman's vagina. There was something irresistibly alluring about that livid red gash.\n\nThe alien girl stepped out of the pod. Her motions were at once both the epitome grace and so horribly wrong as to turn the mind, screaming, back upon itself. She stood on the bare ground and stretched her arms, examining her sensual form.\n\n\"Thank you for this form,\" she said. While melodious, her voice also possessed alien inflections that sent shivers vibrating through the auditory chambers in his skull. \"The other's mind was not suitable.\"\n\nShe glanced down to Finney's right. He followed her gaze and saw an arm lying partially obscured beneath thick, rust-coloured leaves. The skin was albino-white in colour and wrinkled up around emaciated flesh. Finney wouldn't have recognised it as Ezquerra's at all if it hadn't been for the crumpled outlines of a scorpion and dagger tattoo on the inside of the forearm.\n\nFuck!\n\nFinney tried to get to his feet. The fleshy bulb squeezed around his cock, crowding it with soft, plush tissue. Pleasing little vibrations wriggled up the outside of his shaft. The constant stimulation shivered through his body, turning his legs to jelly. Finney fell back down to his knees and stayed there as the flower continued to milk a constant stream of cum from his body with steady, licentious pulses.\n\n\"Don't fight it,\" the alien girl said. \"The draining process is really quite pleasant.\"\n\nShe walked around behind Finney and gently massaged his shoulders. He felt the soft weight of her breasts pressing against the back of his head.\n\n\"Why?\" Finney croaked.\n\nThe girl leaned over his shoulder and turned to stare at him with her unsettling pink eyes.\n\n\"Did you think you could come here and just take our soil,\" she whispered to him.\n\nFinney found it hard to think. That pleasant numbness was spreading further through his body, burrowing through his tissues with the finest of tendrils. The flower continued to suck on his cock with plush, fleshy walls and the sensation crowded out all other thoughts. Suck. Squeeze. Suck. Squeeze. On and on, pumping out all of Finney's fluids until all that remained was a dried up husk.\n\nThe girl stood up and sniffed the air. She looked back along the rocky bluff.\n\n\"Mmm, I can smell them. So much fertile flesh in which to take root.\"\n\nShe left Finney behind and walked down the slope in the direction of the camp.\n\n/***\n\nThis is an entrant for the 2011 Earth Day Contest. If you enjoyed it, please show your appreciation by voting (high! :) ).\n\nThanks\n\n*/"
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "flower",
        "plant",
        "succubus",
        "hell-space",
        "soldier"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/dont-fuck-the-flowers"
}