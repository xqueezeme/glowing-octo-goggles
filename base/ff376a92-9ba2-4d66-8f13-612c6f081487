{
    "title": "Equation",
    "pages": [
        "Author's note: First, thank you for the positive reception of my stories. I am humbled for the compliments bestowed. Second, thank you for your critiques, I can only wish it helps me become a better writer. I have noticed that a common complaint is the \"storybook\" endings my stories tend to gravitate to. I can only acknowledge the veracity of that complaint. Given the personal loss and tragedy I have suffered in my life I feel I've earned that prerogative. In any event I hope you enjoy the story.\n\n***************\n\n\"FUCK ME!\" she continued to wail as she slammed into me time and time again. I reached for her large gorgeous tit and pinched the proud nipple standing erect. The painful sensation caused her to arch her back as she rode me cowgirl style. The sobs of ecstasy emanating from her were exciting me and I could feel the stirrings beginning in my loins.\n\nWithout warning, I suddenly rolled her off me and followed through the motion until I was screwing her missionary style, all without missing a beat. Ignoring her pleas to be gentle I mercilessly fucked her. My cock was sliding in and out of her tight pussy. \n\nShe signaled her approval by wrapping her long muscular legs around me cradling my body. Her hands went around my neck and she stared into my eyes as I kept fucking her. Those large sensual brown eyes peering into my soul as we rocked away. It was almost enough for me to forget the lie those wonderful eyes told.\n\nTo keep from dwelling on that, I closed my eyes, as I thrust into her body, my testicles rapidly slapping against her ass. Her moans of pleasure drifted up to me. It was another inducement to follow the laws of nature and climax. Spill my seed into this lovely creature and impregnate her. Have this woman as my helpmate, my partner, my lover, my wife, the mother of my children. All the variables of life as simplified into one simple equation: a man and a woman and life.\n\nThe fantasy excited me as I went into the end stage of our love making. A few more thrusts and I would be finished. She could tell that I was due and begged me to come in ever increasing cries. The volume of her voice began increasing as well.\n\nThen in a well-ordered fashion, I reached my zenith and I could hold back no longer. I roared as I slammed into her a final time and my sperm shot out of my cock violently. I held my position as another stream followed, and then, another. She screamed in a climax as her body convulsed. I kept spurting until I couldn't spurt again and collapse on top of her. \n\nNot wanting to crush her, I rolled to the side and deftly maneuvered her on top of me. I felt her warmth and her heartbeat as I gently caressed her as we cooled down from our exertions. We remained silent. It didn't seem necessary to talk. I continued to rub my hands against her exquisite body in appreciation.\n\nFinally, as we cooled off, I felt her hand go up to my cheek. A gesture for my efforts. Then, she untangled herself from me and went to the bathroom. I soon heard the shower go on and I tried to visualize what her body would look like with water cascading down. \n\nFor a moment I entertained the notion of joining her, but, instead I remained prone on the bed collecting my thoughts. Then, the shower shut off and after a few moments the door opened with a fanfare of steam rushing out pronouncing her arrival. She stepped out, looking like a mythical Greek goddess as the bath towel barely covered her.\n\nShe came back over to the bed and smiled at me and again touched her hand to my cheek. I enjoyed the sensation as the fingers trailed way from me before she broke contact with me. She walked away and without embarrassment dropped the towel and began dressing in the clothes scattered on the floor. I silently watched as her lovely body began to conceal itself in garments. Then she walked over and sat by me as she adjusted her stockings and strapped her slingbacks shoes on her delicate feet.\n\nSatisfied with her efforts, she looked down at me and smiled. \"This has been fantastic. When will I see you again?\" I obliged and told her that I had her number and I would call her soon. Then she leaned toward me and then past me as she took the ten $100 bills stacked on the nightstand. There was a moment of hesitation as she spied the smaller stack of five $100 bills in a separate pile. She looked at me and I told her to take it as a tip. \n\nNow a large grin broke out on her face as she collected the second pile. Thanking me again, she thought to violate the code and kiss me on the lips. At the last second, her lips veered and I got a chaste kiss on my cheek. \n\nI watched as she walked toward the door. She opened it and stepped out, before she closed it, she leaned back in and said, \"Merry Christmas!\" The mercenary look on her face destroyed the remnants of my fantasy.\n\nThen I was left alone in the room. I tugged the condom off my flaccid cock and threw it in the wastebasket. There would be no love, no affection, no conception, no friend, no companion, no wife. Just a costly evening respite as I sat on a disheveled bed in a darkened hotel room in a Las Vegas casino.\n\n\"Merry Christmas\" I sadly told myself as I rolled over to go to sleep.\n\nWhen I woke, I took stock of the actions of the weekend. Despite succumbing to a biological need last night I still had a profit of $3500 for two days work at the blackjack tables. My goal was to have $5,000 by the end of the week. Obviously, that was going to be a little harder to achieve now given the ground rules I had set.\n\nEvery visit to Las Vegas meant an orderly and exact set of protocols to follow to achieve a predetermined goal. First rule, was to play blackjack exclusively. Second rule, was never to drink while gambling or play when fatigued. Third rule, was never to draw attention to yourself. Fourth rule, was to spread the action around the various casinos. Fifth rule, once you reached your goal to get out.\n\nThere were a few stratagems that helped me. One was to change my appearance for each visit. Another was to randomly decide what the goal of each visit would be. One visit, it might be $300; on another visit, it might be $2500. I never played at the big money tables. I usually preferred the $10 minimum with a maximum of $500. That kept me under the radar. Often, I would overachieve my goal and then make a show of ordering drinks and under the influence make boneheaded plays. I would walk away from the tables with everyone thinking I left as a loser. \n\nI never cashed in all my chips. I would always cash an amount that would not draw attention by the IRS or the casinos. There were a number of other safeguards I employed. All the same, I knew it was inevitable that I would be caught. The casinos had too much experience and technology on their side. When I was caught, I would be placed in the legendary blackbook of Las Vegas. I would be banished from ever playing there again.\n\nI always had a unique talent for numbers. I can instantly calculate the odds of a particular card being dealt at any given time. Coupled with a photographic memory, I could actually have the odds in my favor on any given hand. \n\nLas Vegas had a term for this, it was called card counting and in the eyes of the casinos it was tantamount to cheating and therefore not allowed. Card counters were discouraged from playing and if they continued they would be barred from playing. If they still attempted to play, well, there were the rumors of mutilations and unmarked graves in the Nevada desert.\n\nI'm not a particularly courageous person. Nor, would anyone consider me to be adventurous. It just happened that I discovered my ability at an ebb in my life when I was desperate for funds. Then it was a matter of survival, now it was simply an expedient way to replenish everything I lost.\n\nHow ironic to think I could replenish everything. Some things would never be the same. My job, my reputation, but mostly the core of my life, Laura, now all gone leaving a destroyed man in their wake.\n\nHow could I have gone from the summit of the academic world to chasing aces in such a short time? I thought back on my days of being a tenured professor of mathematics at the university. What pride I had, what arrogance, what hubris. I was a rising star in creating new theorems to be dissected and debated by great minds. Now, the only issue I debated was whether to stand pat or take a hit.\n\nAll the shame, all the humiliation, it all could have been borne had it not been for the betrayal by Laura. Why had she done it? I never did get a satisfactory answer. All that was certain was she was now in the arms of another man. A man that had schemed and plotted my downfall and had exceeded all expectations of ruining me.\n\nPerhaps it was fate that me and my rival would meet at the crucial juncture in our lives and events transpired whatever the variables would have been. The only certain thing was how the events did unfold over time and now the only guess was how the hand would play out.\n\nI thought back on my first day at the university which had hired me as an assistant professor. I was fumbling my way around campus trying to find the math department. A student took pity on me and directed me to the correct building. Then I had to delve into the labyrinth of offices trying to find the head of the department, Dr. Ben Stevens.\n\nI finally chanced upon the doorplate of Dr. Stevens and tentatively knocked on the door. A roar commanding me to enter was the response to my timid knocks. As I peeked in, I saw an elderly gentleman sitting behind a desk buried under stacks of files. \"Ah, you must be Reed. We've been expecting you! Are you hungry? I'm famished and I know a place that serves great food and Guinness at room temperature! By the way, it will be your treat!\"\n\nAnd that machine gun speech was my introduction to Dr. Stevens. The food was as he described and the Guinness was flowing. By the second mug he insisted on me calling him Ben. By the third, he was busy calling up everyone in the department to come join him in meeting the latest wunderkind. \n\nI was buried under a flurry of introductions and though I had a great memory, the noise and chaos and beer at the table had me worried that I would forget someone. When I woke up the next morning with my hangover, I wasn't sure who I was. Somehow I made it back to Ben's office and taking no pity on me began discussing loudly what class assignments I had for the upcoming semester. When he was sure I had the days and times down for each class, he began discussing the nuances of the school. For a solid three hours he held court on the various factions of the school.\n\nThe English Department was involved in a feud to the death with the Spanish Department. Nobody liked the French Department and damn few people could find the German Department. The up and comers were the Oriental Languages Departments who would one day take over the world. Chemistry got along okay with Biology, but not with Botany. Astronomy was laidback and caused no trouble. History kept to themselves and Poly Sci was fomenting revolution every day. The various sports teams were all inept and yet commandeered a disproportionate amount of the budget.\n\nFinally, Ben stopped and pronounced it lunch time and that it was my treat and took me to the seediest motorcycle bar I've ever been in. Bikers of all sort greeted him and engaged in conversations of various Harley models with him. It turned out that he was respected as a restorer of old motorcycles. Currently he was restoring a 1940 Indian Chief and everybody wanted to know when the big unveiling would take place.\n\nFor the rest of the afternoon, he held court at the bar and I was privy to hearing about the bikers and their bikes and their old ladies in that order of importance. When I was asked what bike, I rode Ben saved me by saying I had commissioned him to restore a bike, but, we wouldn't discuss it till it was finished.\n\nOnce again, I stumbled home to my apartment after Ben and I shared a cab after leaving the bar. I collapsed into bed as it revolved around and I wondered how long could my kidneys and liver keep up. When the alarm went off I groggily, got up and stumbled into the shower to wash away the alcoholic vapors. Again, I found myself outside Ben's door and again I was commanded to enter.\n\n\"Well, Reed, it was 50/50 on whether you would show up with a tattoo today!\" he said with a grin.\n\n\"Ben, I can't say one way or the other, my body is still numb.\"\n\nWith that he laughed and we settled into a more relaxed conversation. I was beginning to enjoy his company even if he did drink more than I cared for. We discussed the upcoming student orientation scheduled for next week opening the fall semester. Then he explained his management style for the department. I was impressed by the degree of autonomy each professor had under him. All he expected were our best efforts to educate our students and to continue to educate ourselves in our chosen field.\n\n\"Come on, let me show you where your office will be. Then we'll go get lunch, your treat.\"\n\nAs I followed him down the hallway, he began a running commentary on the advantages and disadvantages to each classroom, such as the poor acoustics in the classroom where most of the courses I was assigned to teach took place, but he assured me that all the students would stay awake in my classes due to the poor heat.\n\nAs we got further down the hall, he revealed a primary focus of office politics was space and location. The farther away from his office would be translated on where we stood in the pecking order. I noted that being the case he must really hate me as we continued on. He laughed, and reminded me that I was the newby on the block. If I didn't like it, publish some articles and bring some prestige to the department and see how fast I would be rewarded.\n\nAs we reached the end of the hall, I saw a maintenance worker busy painting something on a door. Ben had a puzzled look on his face and murmured, \"What the fuck?\"\n\nAs we approached, Ben became agitated as he read the newly painted inscription, ANNEX OFFICE OF DR. JASON FEDER. He addressed the maintenance worker, \"Tom, you knew what I told you to do last week. What happened?\"\n\nThe worried maintenance worker responded, \"Dr. Stevens, he told me you changed your mind. So I've been busy replacing all the furniture and equipment in this office. The last thing I gotta do is change out the locks and get the keys to Dr. Feder.\" \n\n\"Tell you what, Tom, unlock the office so I can see what is going on.\" Ben quietly said.\n\nTom complied with the order and opened the door for Ben's review. New plush furniture, chic art decor, and new equipment, including a state of the art computer system glistened in the office. Ben walked around and studied the entire layout.\n\nThen he turned to me and said, \"It appears that Dr. Feder has spent his entire budget this year updating your office, Reed. Congratulations!\" Then he turned to Tom and told him to change out the locks as ordered, but, under no circumstances was he or any of the maintenance crew to give a set of keys to Dr. Feder. No one was to remove anything out of the office without the express permission of Dr. Stevens, and finally, the sign on the door would be changed to Dr. James Reed.\n\nAs we walked away, Ben turned to me and said, \"I'm afraid, I've put you right in the middle of a powerplay by our associate professor. But, by God, I'll teach him a lesson!\"\n\nI frowned, \"I don't remember meeting him Monday.\"\n\nBen chuckled, \"You didn't. He ignored my invitation. Probably just as well seeing what a horse's ass he is.\"\n\nWe went to a local pizza parlor and I was amazed at the number of early arrival students that made their way to our table and chatted with their old professor. What was equally impressive was the joy and animation Ben got from interacting with the students. \n\nThursday, I had the dubious honor of meeting Dr. Jason Feder. While I sat quietly working on lesson plans in my new office, I heard the doorknob rattle and then a pounding on the door. I went to unlock it and stood face to face with a very upset man.\n\n\"What the hell are you doing in my annex?\" \n\n\"Good morning, I'm assuming you are Dr. Feder. I'm James Reed, the new assistant professor.\" I offered my hand for a handshake but he ignored me.\n\n\"I asked you what are you doing in my office!\"\n\nI drew a long breath and told him that Dr. Stevens had assigned me the office along with the furnishings. He went ballistic when I told him that and he ranted in the cavernous hallway for five minutes. I tried to remain calm as he hurled insult after insult on Ben.\n\n\"Well, I don't give a good goddamn what that old fool said. You are leaving!\"\n\nI looked him in the eye and told him that I would leave only if Dr. Stevens told me. He puffed up with that and assured me that in ten minutes time I would be out on my ass. With that he marched toward Ben's office. One of the witnesses to Feder's hallway rant was Ben's secretary, Mary, so I knew that Ben already had a headsup as Feder went to his office.\n\nI went back to preparing my lesson plans when I heard another knock on my door thirty minutes later. I sighed and got up and opened the door to a beet red Jason Feder. Gritting his teeth, he told me he was there to get his furnishings out of my office. Again, I looked him in the eyes and told him that Dr. Stevens had made an express order that only he could authorize the removal of any of the furnishings.\n\nThat started another temper tantrum, but, I remained steadfast that Jason Feder would have to get permission from Dr. Stevens. Finally, I told him that it was lunchtime and I was scheduled to dine with Dr. Stevens. Perhaps he would consider joining us and try to convince Dr. Stevens to release the furnishings back to him, I suggested.\n\nFeder told me to go fuck myself. Instead of retaliating I merely locked my office and went toward Ben's office. Ben had promised to show me the best burger joint in town...my treat.\n\nAs I bit into the humongous cheeseburger, I had to admit it was the best burger I ever had. I took a swig of beer to wash it down as Ben continued to regale me with the specifics of Feder's visit with him. As we compared notes, it was obvious that neither one of us would be getting a Christmas card from Feder anytime in the near future.\n\nSaturday arrived, Ben had scheduled a get together party for the faculty at his house. I arrived early and met his charming wife, Teri. Like the attractive Southern matron she was, she graciously accepted the bottle of wine I had purchased for them and took me by the arm and introduced me to everyone. \n\nWhen we were not conversing with others, Teri was telling me stories about Ben. Every bit of information endeared him to me even more. She told me they found out early in their marriage they would not be able to conceive. That tragedy allowed them to form a strong commitment to one another. Still they were haunted by what might have been. Then Teri gave me a wonderful compliment. She said Ben thought of me as a son. I was humbled and choked by that admission as I started wiping away tears.\n\n\"Damn, Boy! I thought I was the only one Teri could drive to tears!\"\n\nI was startled to see Ben behind us and he told Teri he wanted to show me his shop. I excused myself from Teri and we walked to the large building. As we entered, I was stunned to see how immaculate and pristine the shop was. It was the total opposite of the clutter in his office. \n\nThere in the middle of the floor was the antiquated Indian motorcycle in showroom condition. Ben began to explain how he came upon the body and motor in a junkyard and purchased it for next to nothing and slowly brought the bike back to life.\n\n\"Something this beautiful deserves a second chance.\" he explained.\n\nI had to agree with him.",
        "The party finally broke up and as I said my farewells, both Teri and Ben followed me out. Teri gave me a kiss on the cheek and an open invitation to dine with them whenever I felt like it. Ben told me that he already saw too much of me during the workweek and that he would be damned if he would allow me to bother him on the weekends. Of course, he said it with a twinkle in his eyes and then he suggested I come over on Saturdays and help him restore his bike projects.\n\nThat first semester I came to rely on Ben as questions or doubts would crop up to me. He patiently advised me and I soon came to consider him my mentor. Our schedules conflicted at noon except for Thursday. So we had a standing lunch date for Thursday. Interesting enough, after that first week Ben always insisted on treating me to lunch. Apparently that first week served as a hazing period.\n\nI started getting the hang of teaching my courses and started focusing a larger portion of time on various math theorems that had drawn me to the study of mathematics. I had always had a natural affinity to numbers which in high school quickly got me labeled as a nerd. As an undergraduate I blazed through every math course I could get. \n\nI had a number of recruiters looking at me at graduation, but, I wanted to continue my studies. In short time, I had my Master's and my Doctorate and again the recruiters came calling. My parents were livid when I told them I wasn't ready to enter the business world. After reviewing my options I applied for the assistant professorship even though I was overqualified for it so I could continue working on the equations.\n\nWith Ben's guidance, I began running equations by him. Many an afternoon we would spend scribbling equations on the blackboard and critiquing our work. After many hours of excruciating labor, Ben thought it was time we published our findings.\n\nThat paper, Variation and a Proposed Answer to the Hodge Conjecture took the math world by storm. Heated debates followed as proponents argued with detractors. Almost everyone agreed that while we may not have solved the Hodge Conjecture, we had taken a vital step in the eventual solution. Notice I said almost everybody agreed. Ben and I faced dissension within our own department in the form of Dr. Jacob Feder.\n\nNo sooner had we published than Feder threw together a hatchet job ridiculing our work and published it. His poorly thought out reasoning was evident to most serious scholars and they wasted little time lambasting our department for allowing the publication. This was the penalty under Ben's guidance of allowing autonomy to each professor.\n\nIn my second year, I continued to hone my theory and Ben served mostly as my sounding board as I went through tangent after tangent chasing the Conjecture down the rabbit hole. Still I could not provide any progress, but, some things did change. My assigned office was now next to Ben's. This was a sign that I was being groomed for Ben's professorship if and when he chose to take emeritus status. Another change was I was given tenure due to the publication of our paper. \n\nThat was not taken favorably by Feder as he levied charges of favoritism against Ben. Ben argued that it was necessary to expedite tenure as an enticement for me to remain at the university. A review by the Dean and an independent commission exonerated Ben of the charge, but the infighting was taking a toll on him. With my promotion to associate professor, the entry level position of assistant professor was once again open. \n\nIn an effort to forestall any hint of criticism Ben formed a vetting committee for all the applicants. Ben, myself, Jason Feder, and two other members of the department interviewed and argued over the prospects. Feder, as usual, did every possible thing to make the task as painful as possible. Any applicant that was favorable to either Ben or myself was automatically disagreeable to Jason.\n\nWe were narrowing through the last set of applicants when she walked into the room. Laura Simmons, impeccable credentials and a charming personality ensured that she had a comfortable interview. As I watched the tall lovely blonde leave the room I knew instinctively that Jason Feder was attracted to her as much as I was.\n\nBen and I shared a look and we allowed Jason to take the lead on evaluating her. He spent five minutes raving about her. Ben and I simply agreed with Jason's assessment and the remaining two members sensing a consensus quickly affirmed as well. And that was how Laura Simmons became the new assistant professor.\n\nAs Ben and I left the room, I told him that he needed to give my cold drafty classroom to Laura. When he asked why, I told him because with the way she attracted attention that every male student of hers would need a cold shower to get through class. He laughed and clapped me on the back. When I got the memo concerning room assignments I bemusedly noted that I kept my old classroom, but, I no longer had to teach any of the freshman's courses. A tradeoff I could live with.\n\nThe next time I saw Laura, she was standing alone with an empty wineglass in her hand at Ben and Teri's annual party. I thought to myself why truly beautiful women often had trouble in social situations. Perhaps, it was because other people did not deem themselves worthy to keep company with a beauty like Laura.\n\nSteeling myself, I approached her and I saw the look of recognition appear on her face and a small smile spread on her face. God, she could light up the room with a full smile, I thought. \"Hello, nice to see you here! Let me reintroduce myself. I'm James Reed.\" As we shook hands I looked into the blue eyes and I could only hope I could find the willpower to break away from her gaze before she judged me as a creep.\n\n\"Oh, hello Dr. Reed, what an honor it is to be working alongside you.\" \n\nThe melodious voice caused all the other generic noise from the party to abate as I focused on Laura.\n\n\"Please, call me James or if you like, you can follow Ben's lead and call me Reed.\"\n\nShe laughed and crooked her head as she studied me and said, \"Reed, suits you. Please call me Laura.\"\n\n\"Ah, Reed, I'm glad to see that you finally proved that you are worthy of something other than being a poor lunch companion.\" Ben laughed and then greeted Laura. \"Laura, let me give you the grand tour. My wife is somewhere in that mass of humanity, let's go save her!\"\n\nAs I watched Ben lead Laura away from me I was disturbed by the void I felt as she disappeared from view. All I knew was I wanted to spend more time with her. I made sure that I continued to bump into her at the party and engaged in small talk. I could tell we were getting more comfortable around each other. I excused myself to go get her another glass of wine.\n\nThen I saw her talking with Jason Feder. When I walked up to them I handed her the glass. She smiled and told me, thank you. Feder had a look of distaste as he excused me from their conversation. I debated remaining there but I didn't want to cause any problem for Ben or Teri. I walked over to Teri as she watched Feder and Laura continue to talk. She shook her head and told me this was the first time Jason had attended one of their parties. It was obvious what had enticed him to attend this one.\n\n\"Where's Ben?\" I asked.\n\nTeri responded, \"He got so disgusted on seeing Jason that he went to hide out in the shop. Are you going to join him?\"\n\nI pondered it for awhile, \"No, I think I'll head home. Tell Ben, I'll be at the office tomorrow and I'll drop by in the evening to help him bore out the engine block on that BSA bike.\"\n\nShe gave me a hug and kissed me as I left.\n\nSaturday morning, I spent all day in the office running through permutations, but, all I could focus on were images of Laura. Disgusted on wasting a day I finally left for Ben's shop and as I entered I heard a conversation going on.\n\n\"Reed, about time you showed up. I finally had to replace you with another mechanic.\"\n\nThen, I noticed Laura dressed in casual clothes and seeing how clean Ben was I knew that no work had gone on before I arrived.\n\n\"Laura and Teri have decided that we need to take them out to eat. I told Laura that I insisted that it would be your treat.\" Ben continued.\n\nLaura and I laughed as I agreed to the proposition. The four of us were soon seated at a fine Italian restaurant that ignored our snubbing the clothing requirement due to the long patronage of the Stevens. I winced when I got the bill, but, being seated next to Laura made it all worthwhile. From there we went to a small jazz bar and without too much prompting I asked Laura for a dance.\n\nI gathered her in my arms and we swayed to the soft tune. I breathed in her perfume and thrilled as various points of our bodies made contact.\n\nShe leaned away from me and said, \"I should be angry with you.\"\n\nPuzzled, I asked why.\n\n\"You left me with Jason Feder. He made my skin crawl. He had the audacity to tell me, not ask me, but, tell me to follow him home.\"\n\nI told her I was sorry. She told me I could make it up to her by taking her out on Friday. Then she snuggled against me and I would have agreed to anything right then.\n\nWe started dating and soon agreed to be exclusive. That didn't stop Feder from still trying to see Laura. Laura joined Ben and me in our little informal trivariate as we battled on the Hodge Conjecture and Feder would take every opportunity to interrupt us. Then he got so desperate that he offered to help. Try as he could, he wasn't successful in driving a wedge between me and Laura and after the school year, Laura and I were married.\n\nFor the next four years I was in bliss being married to the loveliest woman in creation. I loved my work and friendship with Ben. I finally helped restore a 1969 Harley-Davidson Electra Glide that I had purchased and now I had bragging rights whenever I went to Jocko's, the seedy biker bar that Ben introduced me to. The only fly in the ointment was that the Hodge Conjecture continued to elude me.\n\nOne day, I took a break from the equations. I was at a crossroad in my computations and it seemed whatever direction I took, the variables led into a one way direction to futility. I was beginning to despair that I would ever make another significant breakthrough in the Conjecture. I started to think that perhaps if I did not solve the Conjecture, perhaps I could teach the student that would solve it. That got me thinking on how lax our elementary levels were educating childrens. What was needed was a jumpstart that would get kids interested in math. I continued to germinate my idea until my entire idea was fleshed out.\n\nSaturday evening, we went over to Ben's to grill steaks. After we ate, we sat on the patio and relaxed. That was when I brought up the subject.\n\n\"Guys, I want to talk shop for a second.\" That brought on some groans but I forged ahead. \"Look, education at the preschool level and elementary levels are putting American children at a severe disadvantage in the field of math. We have to do something to reverse that trend. Now, due to our culture, the only way to keep children's attention is to entertain them. What we need is to script some shows that teach basic math principals in a way that kids will retain the knowledge and induce them to want to learn more. What if we used the university broadcasting system which piggybacks PBS and produce the shows? We invite celebrities to come on and spend an hour teaching math in a fun and enjoyable way.\"\n\nMy idea brought on some discussion and I could see Ben and Laura becoming enthused at the prospect. I hadn't told either of them, but, I was going to push for them to co-host the shows. Once all the preliminary issues were dealt with, the shows premiered and were a raving success. The broadcasts were syndicated throughout the country and brought in a revenue stream to the university.\n\nIt also enriched me and Laura and Ben. Laura and Ben became well known due to the show and I kept busy writing scripts for each week's show. That kept us busy for the next few years and frankly I was glad to be able to take a break from the Conjecture. I also co-authored several math textbooks. I was doing very well career wise and I kept discussing with Laura how I wanted to have children. It wasn't that she was against the idea, she just objected to the timing.\n\nOne day, out of the blue Ben announced that he had decided to take emeritus status. What that meant was he was retiring, but, would continue to guest lecture and host the show. He told me that he had put my name up to replace him. I was choked up thinking of the idea that I could ever presume to replace him.\n\nI prepared for the process, but, Ben told me it was just a formality. When I attended the open hearing headed by the Dean, I was prepared for any eventuality, or so I thought. There I was at the table facing the committee, Laura was seated behind me. I was ready for my coronation. Then Karen Hudgens intervened and destroyed my perfect little world.\n\n\"Dr. Reed, I'm afraid the committee has received some information that has cast some doubt on your ability to head the math department. We will now hear from a graduate assistant, Ms. Karen Hudgens that alleges some impropriety on your part.\"\n\nI sat dumbfounded as the weeping student testified how I had coerced her into having an affair for the years she had attended the university. I kept interrupting the testimony protesting my innocence, but, the Dean continued to allow the girl to continue. I kept looking at each committee member desperately willing them not to believe the lies being told.\n\nI looked back at Laura and grieved as I saw the tears running down her face. Somehow, I tried to convey that she needed to believe me. More and more allegations came from Karen Hudgens and I heard sobs coming from Laura. \n\nFinally Karen Hudgens stepped down. I was livid and shaking from anger ready to clear my name. Then the Dean had another little surprise for me. Two of Karen's roommates came forward to testify and corroborated every allegation that she had levied against me. I continued to reel from this Kafkaesque nightmare. I looked back again to see Laura and all I saw was an empty chair. I slumped down in defeat as the testimony finally finished.\n\nThen I watched as the Dean with a smug little grin announced that I could make a statement. With a stunned stammering voice I began to speak.\n\n\"I do not know why these individuals came forth today to tell all the lies and disparagements cast against me today. I categorically deny every allegation levied against me and ask that an investigation be conducted to ascertain why these slanderous statements were made. I also request that this hearing be put on hold until the results of that investigation are made known.\"\n\nThe committee retired into another room. Ten minutes later they came out with a unanimous vote not to promote me to Ben's position. I staggered out of the building as people began to avoid me. I went home only to find that Laura had hastily packed a suitcase and had left me. Not knowing what else to do I went over to see Ben.\n\nHe was ashen faced when I came into the house. \"Reed, I don't know what to say. I knew that the Dean disliked me for all the trouble that I caused him, but, I never had any idea that he would take it out on you. We will ask for a rehearing, we'll drum up support, get those girls to recant. We can make this right.\"\n\n\"Ben, Laura left me and I have no idea where she is. Right now my priority is to find her and get her to listen to me.\"\n\n\"God, Reed, I'm so sorry.\" Ben groaned.\n\nI went home and started trying to track down Laura. Every possible contact I had denied knowing where she was. Weeks passed by and still I had not heard from her. The university had made Jason Feder the interim department head. I soon discovered that I had been evicted from my office.\n\nThen one night I was woken by a call from Teri at two a.m. She was at the emergency room with Ben. I rushed down there only to find her crying. Ben had passed away from a heart attack ten minutes before I got there.\n\nIt was a surreal time as we struggled to get through the funeral. Laura did not attend. I kept by Teri's side trying everything I could to ease her pain. After the burial she took me aside and told me that she was leaving and moving to Florida to be with her sister. All I could do was to tell her I would miss her.\n\nWhen I saw her leave for Florida it was as though I had lost my last remaining support. Soon I heard that the university had expedited their hearing and promoted Jason Feder to Ben's position. He called me into his office for a meeting and made me wait for two hours before seeing me. I could tell he was enjoying putting me in my place. He wasted no time in telling me that I had been accused of plagiarizing someone's work. When I asked who was accusing me he grinned and told me my wife, Laura had brought the charge.\n\nI soon faced another committee chaired by the Dean looking into the allegation that I had stolen someone's work. This time I was represented by counsel and I nervously waited for Laura's appearance. She came in and fixed me with a look of sheer hatred. I began to call out to her only to be hushed by my attorney. She proceeded to tell the committee that for years I had stolen the work of one of my colleagues and passed it off as my own with the help of my friend, the late Dr. Stevens. The colleague that I presumably had stolen work from turned out to be none other than Dr. Jason Feder.\n\nTry as he could to shake her story my attorney failed to catch her in any major inconsistency. She left the stand not looking at me as I continued to call after her. I could tell the handwriting was on the wall as the committee deliberated. Sure enough, they soon came back and told me I was terminated for plagiarizing Dr. Feder's work. \n\nTwo weeks later I was served with the divorce papers from Laura. Again, I tried to see her to persuade her not to go through with it. At the deposition, I was threatened to be held in contempt by continuing to interrupt trying to get Laura to talk to me. Finally, the deposition was halted due to my efforts to talk directly to her. I was brought before the judge and cited with contempt.\n\nThe judge remembered that when we finally had the hearing. The divorce was granted and Laura was awarded 65 % of all our assets. She was also given the house and I was ordered to pay alimony for two years. When she walked out of the courtroom, she still refused to speak to me as Jason Feder put his arm around her to comfort her.\n\nThe last straw was when I was served with her lawsuit over the rights to the TV show. I just threw the paperwork down, hopped on my bike and began riding. I really had no idea where I was headed. I suppose she got a default judgment against me, but, I never went to look. All I knew was everything I had worked for; everything I had cared for was now gone. \n\nI hopped from town to town as I tried to figure out what to do. I couldn't get a job teaching with the shadow I had hanging over me. Nobody in the business world would touch me. I didn't have enough capital to start a business, and anyway I had no idea how to run a business. For all my intelligence I might be forced to do manual labor. I was at a coffeeshop on the outskirts of Las Vegas when I decided to go to a casino.\n\nI wandered through the glitz and the lights and the bells and noise observing all the games of chances. I began narrowing down my focus until I determined that blackjack was the game most favorable to a player. Sure, the odds were still in favor of the house, but, if you had a system you could turn the game to your favor. I continued to watch and learn as I saw how the casinos used multidecks in an effort to thwart card counting.\n\nWhen I felt comfortable I finally sat down at a table and began my education. I was quickly dispelled of the illusion that every player was a logical rational player as I saw time and again the action of one player negatively affecting the remaining players. Still by the time I got up six hours later I was up over three thousand dollars. $500 an hour profit. It was a eureka moment.",
        "I got a room at the casino and crashed. When I woke, I showered and went to eat breakfast. Then I went back to the table. I introduced myself to my neighboring players and told them that I was a novice and I asked them for advice. I soon knew how to heed or to discount the information I was given.\n\nI was introduced to the world of comps for meals and rooms. Courtesy cards that would tabulate and keep track of your play (a mixed blessing). The axioms of splitting aces and never splitting tens. The favorable times to double down. What casinos offered a higher payout on hitting 21. The debate on buying insurance.\n\nEach topic would bring as much passionate debate as an scholarly study. I continued to learn the nuances and prospered. I soon realized that if I were to succeed at my new profession that I would have to migrate from casino to casino, thus not overburdening one particular casino. And I found out that there were casinos all over the country.\n\nSo I began to travel from casino to casino. I quickly built up a nest egg to tide me over and bad runs of luck. I kept current on my alimony payments by postal money orders that I kept receipts on. Each postal money order included a letter begging her to call me. She never did. I opened bank accounts all over the country with minimal amounts, but, kept large sums of cash in safety deposit boxes.\n\nWhenever I flew across the country I would deposit the small change in the basket prior to going through the detection machines. When I landed, I would go to a coin shop owner and make a cash transaction at a discount favorable to the owner for the rare coins I transported. That kept me from being hassled at airports with large amounts of cash.\n\nOnly at my hometown bank did I keep any visible source of income to placate the IRS when I filed my return. I soon built up my funds, but, I was nowhere near to having \"fuck you\" money. That being a sum large enough that you essentially said fuck you to everyone. It had been three years since I left in shame. The court ordered alimony had ended. That was my status when I woke up the day after Christmas after my liaison with the beautiful escort.\n\nThe reason I decided to splurge on last night debauchery was I had made the mistake of calling Teri on Christmas Eve to wish her a Merry Christmas.\n\n\"Hi Teri, just calling to wish you a Merry Christmas.\" I said.\n\n\"Oh James, it is so good to hear from you. You need to come spend Christmas with me!\" \n\nI laughed, \"Sorry Teri, there is something terribly wrong about Santa and sand.\"\n\n\"So, how are you dear? I was worried about you when I heard the news.\"\n\nPuzzled over what new calamity must have fell, I asked, \"What news, Teri?\"\n\nThere was a long pause as though Teri was debating whether to divulge the information. Finally I heard, \"Forgive me, James, I thought you were calling to commiserate. Laura has remarried.\" She sobbed and I was stunned by the news. I had still held out hope that someday Laura would forgive me and we would have picked up the pieces of our shattered lives.\n\n\"Married? She's married?\" I heard myself asking Teri. It was like I was experiencing an out of body experience. I could hear myself conversing, but, I could not believe the conversation.\n\nI couldn't help myself, \"Who did she marry?\"\n\n\"It doesn't matter, James! Please let it go!\" She begged me but I was adamant.\n\n\"James, she married Jason...Jason Feder. They just had a baby last month.\"\n\nWoodenly, I told her I had to go and I hung up on her. I heard the phone immediately ring and saw that Teri was calling me back. I ignored the call and went searching for the first bar I could find.\n\nI told the bartender I wanted his best top shelf bourbon and then I asked what he could do to procure a woman for me; only the best escort would do. I had abstained for three years, still faithful to my Laura and I had no idea that she had moved on without me. I whiled away the time knocking down shots of bourbon as I waited for the escort to arrive.\n\nWhen she did, we quietly settled on the price and from her looks I knew she would be worth every penny. We went upstairs to my room and I proceeded to excise the rage that I felt. Four times I had climaxed and my companion had thought we were through. Each time I quickly showed her how wrong she was.\n\nAnd now, I was empty and hungover and had the stench of last night on me. I shuffled to the bathroom and took a steaming shower until my body began to prune up. After I had toweled off, I dressed and went to the bar in the lobby.\n\nAs I said, I normally did not drink and gamble. With all the alcohol I had imbibed last night I still suffered from the residual effects of the hangover. I would not be at the top of my game today; therefore, today would be another day off. Today I would quietly partake of the hair of the dog, then hydrate and wolf down aspirin and B-12 vitamins. I would go to my room and quietly watch TV until I went to sleep and woke ready and rested to hit the tables again.\n\nI sat at the bar and ordered a Bloody Mary. I kept to myself and quietly sipped away at the tangy drink. All around was the hustle and bustle of customers celebrating their wins and customers mourning their losses. Barmaids danced through the obstacle of chairs and tables with trays filled with alcoholic concoctions.\n\nThen my zone of comfort was disturbed. With all the empty spots at the bar someone elected to sit right next to me. I casually looked over to see who was committing this breach of bar etiquette. A long haired brunette was slinkily seated trying to catch the eye of the bartender. And she was attractive with a capital \"A\". Her outfit couldn't conceal how voluptuous her body was. Even though I was viewing her from a profile angle, I could see the light blue eyes focused on the bartender.\n\nUsually when this happened to me when an attractive woman sat next to me I could expect to discover that she was a prostitute and quickly turn her down and have her move on. That wouldn't be the case here. The woman was a blackjack dealer employed at the casino. More specifically, she was a dealer I was used to seeing on the rotation. \n\nHer name tag had told me months ago that her name was Kaye. She had proved to be a very competent dealer who ran an efficient table. At the same time I had witnessed her time and again trying to help rookie players overwhelmed on what to do. She was adept in handling belligerent and drunk players. And seldom was it necessary for the pit boss or security to intervene.\n\nI always enjoyed having her rotate to my table and I was always trying to sneak peeks at her without being too obvious. Of course, I wasn't alone since everybody would be staring and salivating over her. For the players that tried to pick her up she would gently let them down in a way that wouldn't bruise their egos.\n\nAnother reason I appreciated her play was because she was just good luck for me. I know logically it was a matter of odds, but, somehow I would always play better than usual with her dealing. I always made it a point to tip her well and usually I would play a hand for her as the dealer and increase her tips winnings.\n\nStill, we had kept things on a professional level and hadn't got into the habit of engaging in small talk. The closest we came to any interaction was when she was being relieved and clapped her hands and held them palms outward she would always look into my eyes. I wondered what she thought she saw there.\n\nNow, she was dressed in her pant suit uniform. Dark pants, a white long sleeved shirt, a dark vest with her name tag, and ergonomic shoes. I wondered if she was coming on duty or leaving. Noticing me staring at her, she turned and gave me a brief smile of recognition and turned again to the now free bartender.\n\n\"Hi Kaye, what can I get you?\" he asked.\n\n\"Hi Frank, can I get a 7-up with no ice?\" she inquired. \n\nThe bartender quickly provided her with her request and laid a cocktail napkin down on the bar and placed the plastic cocktail glass on top of it. As he moved away I noticed her taking another cocktail napkin and placed it under her drink. I didn't understand that action. Perhaps she was fastidious.\n\nIn any event she wasted no time with her drink. In two quick gulps she emptied the cup and slid out of the seat facing away from me and left. As she did so, her left hand brushed against her empty cup and slid it against my drink. I thought it was kind of rude on her part as she walked away. But with a derriere like hers a lot could be excused. As I turned my attention to my drink, I went to push away her empty cup. Then I froze. Visible through the transparent plastic was a message on the cocktail napkin:\n\nTHEY ARE WATCHING YOU\n\nI have to admit my fight or flight gene was working overtime as I digested the information. My pulse raced as I willed myself to remain seated and continue drinking my Bloody Mary. As casually as I could I moved the empty cup and draped my arm over the napkins. I signaled the bartender and he came and threw the empty cup away.\n\nI remained at the bar slowly sipping on my drink while I tried to figure out what to do. Eventually, I came up with the ploy of pretending my glasses needed cleaning. I took the message napkin and wiped my glasses down and then pocketed the napkin.\n\nI didn't know if I was under constant surveillance; I didn't know what form of surveillance, whether it was cameras or humans or both. As I threw down my money for the drink and tip I was wondering if I was going to be confronted as I left. Nothing happened as I walked to the bank of elevators and rode up to my floor. \n\nI opened the door and went to sit down on the bed that the maids had already cleaned my room. I brought the napkin back out and stared at the message. As much as I wished it to change the message remained the same. One thing was clear, somehow I would have to make contact with Kaye and find out what she knew.\n\nI went to the commode and flushed the napkin away. No sense in leaving it around to be discovered. I decided I would follow through with my plan to not gamble today. Maybe the disruption in my schedule would prompt the casino to prematurely act. After all, if they had any viable proof I would have already been picked up. If I forced their hand I could at least argue I wasn't a card counter.\n\nThe day and evening passed slowly as I made an attempt to focus on watching TV. It was amazing, over 100 channels and nothing worth watching. I just kept it on for the white noise factor. I had a fitful night sleep and woke up still undecided on how to proceed.\n\nIt was evident that I had to talk to Kaye but how could I do that while she dealt cards to a full table of gamblers and under the watchful eyes of the casino? The only solution was to contact her away from prying eyes and listening ears. \n\nI went to a bar located on the mezzanine level of the casino. From this vantage point I watched Kaye deal cards for an entire day. I noticed what time she left work and walked to a bus stop and waited patiently until she boarded the number 7 bus. The next day I took off again and watched as she waited at the bus stop ignoring all the buses until the number 7 rolled around.\n\nThat night I familiarized the bus schedules for the Strip. In the morning I left the casino looking like any atypical sightseer visiting Las Vegas. I rode various buses all day. If I was being followed I certainly didn't catch anyone that hopped from bus to bus with me. Twenty minutes before Kaye was scheduled to get off her shift I boarded the number 7 bus and went to the back.\n\nWhen we arrived at her bus stop she got on and sat wearily down midway in the bus. As we rode past the rows of casinos on the Strip, I got up and sat directly behind her and whispered, \"We have to talk.\"\n\nStartled, she quickly swivelled around and the shock of recognition caused her eyes to widen and her mouth agape. Without commenting she turned around and we rode for a few more minutes until she touched the indicator to be let off at the next stop. As the bus ground to a halt she got up and briefly made eye contact with me before she moved to exit the bus. I stood up and followed her off the bus.\n\nI continued to follow her until we entered an IHOP restaurant. She held up two fingers to the hostess and we were led to a table. When we sat down I realized I was at a loss on how to engage the conversation.\n\nI needn't have worried.\n\n\"I was wondering if you would contact me.\" She said after the hostess left us with the menus to contemplate our orders. \"After I hadn't seen you I figured that you skipped town.\"\n\n\"As you can imagine, I've got a lot of questions.\" I responded. \"First, who are 'they' and why are they watching me?\"\n\nShe leaned back and said, \"Okay you want to go the bullshit route. You know damn well who they are and why they are watching you. But to play your little game, the casino is on to you for counting cards.\"\n\n\"Then why haven't they come for me?\" I asked.\n\n\"Because they aren't quite sure yet. They want to watch you a little closer before they do anything about it. You don't fit the atypical card counter profile. You play the cheap tables. You don't make outrageous bets when the cards are in your favor. And occasionally you'll make a bone headed play and lose money.\"\n\nThe waitress interrupted us and we placed our orders. That gave me enough time to formulate some new questions.\n\n\"How did they spot me?\"\n\n\"Who the hell knows? All I know is that you are in their sights.\" she answered. \n\n\"Then how did you find out about me?\" I countered.\n\n\"They asked me to keep an eye on you.\" she replied.\n\n\"Why did you decide to warn me?\"\n\nShe reacted to my question and responded, \"I have to tell you a little story. When I first started working for the casino I was young and idealistic. I was just going to work long enough to save enough money to go to college. Then I met my boyfriend and he got me pregnant. After my baby was born, he turned abusive. So I left him and I started living in a fleabag trailer park with my child. Between daycare and the outrageous rent I was having to pay I was barely scrapping by.\n\nAbout two years ago, I started noticing this guy having an extraordinary run of luck at my table. I reported it to my pit boss. A couple of hours later security escorted him to the security office. The casino manager called me into his office and gave me a raise and told me to keep an eye out and I would continue to be rewarded.\n\nI was all happy about finding a way to help myself and then I started hearing rumors of what they did to that guy.\" She shuddered from the memory, \"I couldn't have another person on my conscience.\"\n\nThe waitress arrived with the food tray and started putting plates on the table. Before we started to eat I asked another question. \"How can I trust you with what you told me?\"\n\nShe looked at me straightforward and said, \"You can't.\"\n\nAfter we got through eating we ordered another cup of coffee.\n\n\"So what you're telling me is I'm on their radar but not to the point of getting thrown out and hurt?\" I asked.\n\n\"As near as I can tell\" she said.\n\nI slumped in my seat as I gloomily contemplated a life of manual labor looming before me.\n\n\"What's wrong?\" She asked.\n\n\"I'm pretty well screwed. Gambling was the last vocation available to me.\" I said.\n\nShe asked why and through the refills of our coffee cups I went into my life history and how my scandals precluded me from getting hired. She sat silent for a minute and said, \"Why don't you just switch to poker?\"\n\nI told her, \"I don't know how to play.\"\n\nShe was flabbergasted. \"Wait a minute, you just walked into a casino having never played before and you been winning at blackjack ever since, but, you don't know how to play poker?\" \n\nI explained, \"I saw blackjack was a very simple game. The object being to better the dealer's hand or allowing the dealer to bust. Even with a multideck shoe I could calculate the odds and play accordingly. But, I've never played a game of poker in my life.\"\n\n\"You do understand that in poker you aren't playing against the house? All you are doing is playing against other players. The only thing the casinos are interested in is their rake; that is, their cut from each hand played. They don't even care if you count cards and you only have to worry about one deck for each deal.\" She informed me.\n\nI immediately saw the advantages to her suggestion, but, how would I learn the game. Impulsively I said, \"Teach me!\"\n\nThat surprised her and I repeated my request. \"Teach me! I have a proposition for you. I will rent an apartment, you and your child will have free room and board. You won't have to worry about the two of you in that crime ridden neighborhood. You won't have to pay daycare because I'll look after your child. I can even start preparing your child for school. I'll put Nanny cams all over the apartment so that will alleviate any concerns I'm abusing your child. With no expenses, you could save up quite a sum.\"\n\n\"Yeah, I agree to that and teach you and then you just up and leave us in a couple of weeks!\" she scoffed.\n\nI could tell we both had major trust issues to deal with. \"Alright, I'll rent the apartment on a year's lease in your name with the entire year paid in advance. In addition, I'll pay you a stipend of $500 a month for lessons over a year period again payable in advance. So you will be guaranteed one year in a nice apartment, $6,000 immediately at your disposal, no costs accruing to you except for personal items and your child will have her own personal tutor.\"\n\nShe continued to look at me weighing whether I could be trusted and finally she took a leap of faith and said we had a deal. I made arrangement to meet her at her address the next day after she got off work to move her and her daughter out of the trailer park.\n\nAt 7 pm, I drove the large U-Haul van into the trailer park. It was unsettling to see the number of covetous eyes looking at the truck as a quick score. When I stopped in front of the dilapidated trailer, Kaye and a small child quickly ran toward the cab of the truck. Both were struggling with large duffel bags. Kaye threw both bags into the cab and then climbed into the passenger seat and held her child into her lap.\n\nWith a worried panicked look on her face she ordered me, \"Hurry!\"\n\nTaking her advice I quickly obeyed her and drove the vehicle out of the hellhole that the two lived in. The little girl continued to quake in fear and firmly grasped her mother to assure herself that she would not be abandoned. As she continued to burrow herself in her mother's embrace I asked Kaye where were their belongings. Her cryptic reply was that what they brought out was what was left after all the break ins at their trailer. That was my introduction into how harsh life had been for them.\n\nI quietly drove as Kaye whispered words of comfort to her child. After thirty minutes of driving I pulled up to the apartment complex that I had negotiated a deal earlier in the day. I turned off the truck and them handed Kaye her set of keys. I picked up the duffel bags and led them to the apartment. \n\nI unlocked the door and allowed them to enter first to discover their new abode. The little girl gawked at the large pristine barren room and slipping her hand away from her mother she started running through the rooms exploring. She was obviously excited by the stroke of good fortune from the evidence of her big smile.\n\nI dropped the duffel bags and turned to Kaye, \"Why didn't you have any furniture?\"\n\n\"Anything I had that was decent had long been stolen. All that was left in there was broken down crap that wasn't worth moving. From what I know of the trailer park owner I knew I would never get back my security deposit, so, let him earn it by moving out all that crap.\" She explained as she too started going into the various rooms to explore. ",
        "\"Mommy, only one room got any furniture!\" Kaye's child came back into the den to reveal the results of her exploration . \n\nKaye gathered her child in her arms and picked her up. \"Judy, I want you to say hello to Mr. Reed. We will be staying with him for a little while. The furniture in the bedroom belongs to him. You don't have permission to go into his room. We will have to sleep on the floor until I can buy us some furniture.\" The little girl looked at me warily as she tried to figure out how I would hurt her. As nonthreatening as I could, I told her hello and I was glad to meet her. She shied away from me. \n\n\"Kaye, I obviously thought you two would have more possessions to move in here. That is why I rented the truck. Its too late to get you any furniture tonight so you and Judy will sleep in my room tonight and I'll crash on the living room floor. Tomorrow, we'll go shopping to make this place livable for the both of you.\"\n\nShe eyed me and said, \"That wasn't part of our deal.\"\n\nI told her, \"Consider it a bonus and an incentive to teach me. Now go figure out a list of what you need and we will hit the stores before you have to go on your shift tomorrow.\" On that note, Kaye and Judy retired to my room and closed the door. I heard the lock latch behind them as I settled down on the floor for an uncomfortable night. \n\nI suppose parents are used to the experience but for a single male to wake up and see a five years old waif staring down at him is quite disconcerting. Apparently, it was the same for five years olds as well as she sprinted out of the room. As I slowly got up and worked the kinks out of my body Kaye walked in.\n\n\"Good morning, did you sleep well?\" Kaye asked with obvious concern. Judy hid behind her mother waiting to see how I reacted.\n\n\"Like a log.\" I factitiously replied groaning away the pain. I continued to stretch to get my body in working order. Before I could ask how they slept I heard the rumble of hunger pangs erupting from Judy. I realized that I had neglected to stock the kitchen with any food and now there was a hungry kid to tend to.\n\n\"Look, its too early to go and buy some furniture, why don't we head out to a restaurant and grab some breakfast. By the time we finish, we can do a furniture run and load up and then buy some groceries and set up the apartment. By the time we are through it should be time for your work shift.\"\n\nWe drove to a diner and it was like Judy hadn't ate in a week as she wolfed down her food. Kaye became embarrassed as she explained how hard it had been to stretch their money from paycheck to paycheck. I told her that she didn't owe me any explanation. I caught the glimmer of a smile on Judy as I suggested that we order some blueberry muffins to go. \n\nAs we drove to the store, I watched Judy sneak a muffin out of the sack she held in her lap and began nibbling at it. When she saw me looking at her, I winked and her face light up when she saw I wasn't bothered by her appetite. \n\nWhen we got to the furniture store, Kaye and I got into an argument as she initially went to the cheapest furniture possible. I kept insisting that she buy furniture that would be comfortable for her and Judy. She finally settled on a modest well built bedroom set that she and Judy could share. Judy's eyes were large in the anticipation of sleeping on the queen size bed and having a dresser to keep her clothes in rather than a cardboard box.\n\n\"Well, what about the livingroom and the kitchen?\" I asked.\n\nWhich led to another argument as Kaye insisted it wasn't necessary and I insisted it was. I finally told Kaye if she didn't pick out something that I would leave it up to Judy to select. That brightened up Judy and Kaye quickly forestalled that possibility and again bought some plain jane comfortable furnishings. As the salesman tallied up the damage, I was able to get a small discount since I was paying in cash.\n\nThen after the furniture was loaded up, I drove us to Costco so we could purchase kitchen items and linens and all the other various items needed. I noticed Judy looking wistfully at the home entertainment section as Kaye tried to rush her past it. I suggested that I purchase the full cart and load it in the van as she and Judy take another cart and purchase food and I would catch up with them. \n\nBy now Kaye knew it was no use trying to argue with me and she and Judy went off to get an empty cart to shop for groceries, As I finally caught up with them they were waiting in line to be checked out.\n\n\"Where have you been?\" Kaye asked, \"I kept going through the aisle and kept impulse shopping!\" She had a slight guilty look as she confessed. I told her not to worry about it and I was soon pushing the overburdened cart toward the van. As I proceeded to open the van door as a passerby jokingly commented whether I had bought out the entire store. Looking at Judy, I joshed back that it took that big a van to keep feeding the kid. My comment got a laugh out of her and I knew I would like to keep seeing her happy.\n\nWe were all busy little ants lugging all the purchases into the apartment. It was a struggle to get some of the bulkier items in but Kaye was deceptively strong and we managed to get it all in. \n\nI did have some trepidation as I began carrying in the home entertainment center I had purchased complete with a 42 inch flat screen TV with an Xbox and various child appropriate games and videos. \"So that was why you were missing for so long?\" Kaye mockingly glared at me as Judy danced around in anticipation.\n\nWith a straight face I replied, \"This is part of the teaching method I employ. When Judy learns her lessons she will be rewarded.\" It was mostly a bluff but I might as well show Kaye I was serious about teaching Judy. It certainly got Judy's attention as she eagerly held up each game in anticipation.\n\nKaye went into her bedroom to prepare going to work. When she came out clad in her uniform she looked down at me and Judy sprawled on the floor. I had opened one box of the unassembled furniture and had Judy sorting out the various nuts, bolts, and washers provided. I was having her count out each assembled mass until she got the count perfect. As I used the various components in the assembly I asked her questions based on how many had we used so far and how many were remaining on the floor. In that way, began our very first math lesson. Kaye stood watching amazed as Judy animatedly responded to my questions.\n\nI looked up at Kaye and said, \"I don't know why you look so surprised. All my life all I wanted to do was teach people.\" She shook her head as she said goodbye to Judy and went to walk the two blocks to the bus stop.\n\nFor the rest of the day, I continued to construct furniture and reenforce the math lessons Judy was learning. I knew it would just be a matter of repetition to instill the lessons. Each day I would have to find a way to make it fun to learn numbers. Luckily, I could delve into some schemes I had written for the old TV show.\n\nBy the time Kaye back from work I had all her bedroom set built and arranged in her room. I knew that she would re-arrange it to suit her, but, at least I made the effort. I had hamburgers grilling so all Kaye had to do was sit at the table and listen to Judy recount all she and I had done that day.\n\nAfter supper, Kaye had Judy take a bath and she excused herself to her bedroom. I went ahead and tidied up the kitchen. When she came back out, she was wearing an overly large T shirt with bulky gray sweatpants on and somehow she made it look enticing.\n\n\"Thank you for fixing up my bedroom. I hope you don't mind if I move things around.\"\n\nI laughed and told her I expected her to do that. As we sat down at the cleared off kitchen table I pointed out the Nanny cams I had installed and showed her how she could access the feed from the computer or her phone.\n\n\"Look, if I had any real suspicions that you would harm my child, we wouldn't even be here. Judy and I were at the end of our lifeline and your offer is a godsend, but still, if I thought you would be hurting her I would've preferred living in the hell we were.\" Kaye explained to me looking at me with such clarity from her blue eyes. \"Now, you've been teach Judy all day and it is time for you to go to school.\"\n\nWith that she broke open a deck of cards and began shuffling them. We started off with five card draw poker. Kaye explained to me the procession of winning hands from royal flush all the way down to high card. I immediately grasped that the procession was based on the rarity of completing a particular hand. In other words, odds. In other words, numbers. Something I was familiar with in computations.\n\nWe continued on into the night she dealing dummy hands for her to rotate around playing against me. I was getting a sense of frustration as she was consistently beating me. Finally she begged off saying she needed to get to sleep. I went to sleep upset that I wasn't an instant success at poker. I was somewhat placated by the lingering scent of Kaye's perfume on my bed linens.\n\nWhen I woke up the next morning it was to the smell of bacon and eggs. I dressed and staggered out of my room. There was Judy at the table with a large pile of Cheerios, loudly counting each one and then adding and subtracting them before they finally disappeared in her mouth. Kaye was smiling as she put the finishing touches to the meal and set the table.\n\nIt dawned on me that this was what I was missing in life. Simple domestication. Just an ordinary family sitting down to enjoy an ordinary meal. For the last few years all my meals had been bought and paid for. Good food, bad food, good waitresses, bad waitresses, always in a public setting, always alone. A sense of depression overcame me that I hadn't felt since Lauren left me.\n\nKaye spotted me and beamed a smile and then a look of concern on her face. I sat down trying my best to engage with Kaye and Judy. Still I could tell I wasn't fooling Kaye. I got through the meal and suggested to Judy we start with some new math games. By staying busy I avoided having Kaye ask me any questions. When she left to go to work she asked, \"Are you all right?\"\n\nI looked at her and said, \"I will be.\" Even though I didn't feel it.\n\nWeek after week passed by, the same routine, breakfast, then Judy's lessons, then Kaye going to work, more lessons, Kaye's arrival to a waiting supper, Judy's bedtime and then my poker lessons. We were going through all the variations of poker; draw, stud, and communities games like Omaha and Texas Hold 'Em. I quickly grasped the rules for each game. I would make the analytical correct play, but, still I was losing to Kaye. And if I was losing to Kaye that meant I would be losing to other players when I finally sat down to face them.\n\nI started getting discouraged and wondered if my business proposal with Kate was going to be a bad investment. Still I labored on trying to pick up the nuances of the game. We were at it late one evening playing hold'em. I watched as Kaye shuffled and dealt yet another one of the thousands of hands we had played. I got excited as I examined my hole cards; Ace and king of diamonds suited, big slick. Then came the community cards; queen, jack, ten of diamonds. I had flopped the holiest of holy. A royal flush. Before I could even begin to make a bet Kaye threw in her hand.\n\n\"Why the hell did you do that?\" I loudly asked in exasperation.\n\n\"Because you flopped a royal flush.\" She calmly explained.\n\n\"How the hell did you know?\"\n\nShe sighed, \"You told me. Without saying a word you told me exactly what you had. Why do you think I consistently beat you in these practice sessions. You display a particular mannerism when you have good hands and another when you have bad hands.\"\n\nThat was the start of my graduate school lessons in poker. We delved into tells, false tells, chip power, seating positions, bluffs, raises, and reraises for the next two months. Elsewhere, we had settled into a comfortable existence as I continued to educate and tend to Judy during Kaye's workshifts. Judy continued to show a healthy and voracious thirst for knowledge as we tackled the alphabet, words, elementary grammar, addition, subtraction, multiplication and division. Occasionally, I would throw out a little algebra and wouldn't you know it, she picked right up on it.\n\nKaye was worried that when Judy started school that she would become bored with her classes. I assured her that I was covering that issue with Judy and she would have no problem excelling at school and continuing her advance education at home.\n\n\"But, what if the other kids start to pick on her?\" Kaye fretted.\n\n\"Kaye, you are giving voice to what every parent in America thinks. Judy is a smart girl, she is starting to adjust positively to things. She will go to school and make lots of friends and be the teacher's pet in every class. That is a win/win situation.\"\n\nStill on that first day of orientation, Kaye took off work and asked me to accompany her. I did and Kaye nervously clustered around Judy like every other parent present did with their child. Judy and the other kids had a natural curiosity to meet and play with one another. Just before class convened, Judy ran up to me and reached up for me to hug her.\n\nIt surprised both me and Kaye but I leaned over and held that precious little girl and said, \"Go, get em, tiger!\" She broke the hug and smiled and ran off to join her classmates as they started one of the rites of childhood. As we left to go back to the apartment I noticed Kaye furiously trying to wipe tears off her face. I suggested that we go to a park and just enjoy the day instead of being cooped up in the apartment. She agreed and soon we were walking on a path in the park with ice cream cones.\n\nBy unspoken mutual consent we sat down on a park bench and watched the world go by. Kaye began to talk of what had transpired to put her and Judy in Las Vegas. I listened as she told me of how she grew up with an alcoholic father. He wasted no time kicking her out of the house when she turned eighteen. Then she decided to leave and go to Vegas. When she moved she met Charlie and she got knocked up. Kaye immediately found a casino job, but, Charlie was looking for the \"right\" job and laid around the house sucking down longnecks.\n\nJudy was two years old when Charlie's \"right\" job came along. Unfortunately, the job was cooking methamphetamine. Since Charlie kept sampling his wares, he had a tendency to go berserk and chase and beat Kaye for any number of imagined transgressions. That continued until the police got an anonymous tip and arrested Charlie after a controlled buy. Charlie screamed at Kaye to bond him out, not appreciating that she had nowhere near the money to put up for a bond. He threatened to get her and Judy once he got out.\n\nThat was the last straw. She and Judy moved unannounced into the hellhole trailer park and it had been her and Judy against the world. She started sobbing exclaiming that now she was losing Judy. \n\nI dropped the remnants of the ice cream cone and held her as she continued to cry. Curious passerbys eyed us, some obvious thinking I was the cause of Kaye's emotional outburst. I continued to console her letting her know that she would never lose Judy. I told her how proud she needed to be to overcome the odds against her. She was alive, healthy and beautiful and she would make whatever she wanted out of her life.\n\nAs soon as I said it I mentally began kicking myself. She stiffened up on me and broke from my caress. I looked at her red tear stained eyes as she looked at me questioningly, \"You think I'm beautiful?\" I was trapped.\n\n\"Yes, I think you are one of the most beautiful desirable woman on the face of the planet. I only wished that I had a chance with you\" My brain kept telling me to shut up!\n\n\"Why haven't you told me this before?\"\n\n\"How could I Kaye? I'm a nationally discredited professor. I'm having to scramble around casinos just to make a living. I have no viable prospects. I'm ten years older than you. You and Judy deserve better than me.\" I miserably explained.\n\n\"The only good part of my life left is sharing an apartment with you and Judy. You two have given me an anchor. You've given me something I can depend on and now I've put it all in jeopardy by telling you.\"\n\n\"Do you know what you've done James...For once you've gone against all that analytical awesome logical brain of yours and raised every chip you had...it wasn't the wrong call.\"\n\nShe raised up and I maneuvered down and our lips met in the middle as we clinched one another. I have no idea how long we were in that position, but, we were interrupted by a police officer asking Kaye if she was alright. Apparently some onlooker thought Kaye's emotional outburst warranted the police checking on her. After we satisfied the officer, our mood was totally over and we looked at each other and laughed. It was a comfortable laugh that had developed over the shared experience of living together.\n\nDid we go somewhere to bounce our bones? No, we were both committed to making this work. We continued to live as we had before, but, with a growing sense of intimacy despite the handicap of a precocious little girl. Judy had picked up on the trend between her mother and me. She insisted that we start doing all kinds of activities together. We tried to comply with all her requests when possible.\n\nMy confidence level rose as I started to understand human behavior better than I had in the past. Kaye finally pronounced that I was tell free and so the next day I accompanied her on the bus to the casino. I waited after an hour after she clocked in to go inside. Immediately, the tones and lights, and noises caused a reaction in me. I wanted to run to a blackjack table and start playing.\n\nThe I noticed a large hulk watching me. He had the small earbud that most of the security personnel wore on duty. I began walking to the gaming area and he walked ahead of me toward the blackjack tables. He was caught offguard when I veered toward the poker section. I stood observing all the different players, catching their mannerisms and spotting their tells. My security friend loomed around me as I continued to study the tables. An hour before Judy was due to be home from school I left to go back to the apartment.\n\nThat routine continued for a week as I discussed with Kaye what I saw at the poker table, We agreed that the casino had adopted a wait and see attitude toward me. As long as I aroused no suspicions at a blackjack table I should be okay. Still, Kaye insisted on our practice sessions continued as she jokingly called it earning her keep.\n\nI had picked up on something nagging at me as I watched her shuffle the cards but I couldn't place what it was. I thought it would eventually come to me. Kaye and I tried to spend time progressing from G rated activity to R rated activity when Judy went to sleep. The sexual frustration and intimacy was driving us both crazy as we tried to control our passions. I started suggesting that Judy needed to go over to a friend's house for a sleepover. Kaye informed me that we were about two years away from that happening.\n\nI let another week go by as I watched the poker action. I noticed several stereotypes. One, my least favorite was the large boisterous player that tried to bully every player at the table. Then you had the tight control freak that would only bet sure hands. You had your everyday pros that just quietly made a living. There were your superstitious players that would bet based on whatever their lucky charm told them. Then you had the vamps, good looking women that would try to charm their way to a win.\n\nI soon realized that I could pick up patterns and tells on most but a few pros still eluded me. As long as I eluded them I would have a chance. Still I watched and learned. I knew eventually I would have to enter a game. I still had resources, but, they were dwindling away without any prospect of being replenished unless my poker game came to fruition.",
        "I decided on Friday evening I would play. Kaye would be home and she had a rare Saturday off so she and Judy could go out and do something. I would enter a 10/20 hold em game. The ten and twenty denotes the blinds, or forced bets by the two players in front of the dealer. Since the deal rotated every hand all the players would eventually be subjected to the blinds.\n\nI went into the casino as rested and relaxed as I could be. My usual escort followed me to the poker table and observed as I notified the employee responsible for seating players. My request caused a conversation transaction by my security guy and he was soon joined by another security guy. I watched them hoping Kaye was right that the casino wouldn't bother me playing poker unless I was caught cheating.\n\nI was soon seated at a table, bought in my chips, and watched as the first hand was dealt. I took note of my fellow players. I was reminded of the old adage, If you don't spot the sucker at the poker table, then you are the sucker. I wondered who would turn out to be the sucker.\n\nSaturday afternoon I stumbled back into the apartment. Kaye and Judy were watching a Pixar movie. Kaye looked at me with concern and said, \"Well?\" I didn't respond, I just pulled out the envelope and tossed it to her. She whooped as she saw the stack of Benjamin Franklins. She jumped up and ran over and hugged me. Judy followed likewise. When Kaye kissed me, we both guiltily looked down at Judy but she hadn't noticed our little public display of affection.I told Judy we were going out for supper and she could pick the restaurant.\n\nI was soon regretting that decision as we sat at Chuck E Cheese. After we placed our order Judy ran off to play the games and Kaye sitting beside me threaded her arm around mine and asked me about my game.\n\n\"It was all mundane Kaye. You had prepared me so well that I could see the game unfolding like a chess match. I wasn't the big winner. That went to one of the pros I had seen before. He seemed to recognize my ability and we stayed out of each other way. And we both cleaned up on the other players. I kept alternating playing loose and tight at random. I performed some false tell traps that to the chagrin of one player fell for. But, I kept grinding away until I was ready to leave. But the best part was that security didn't hassle me. I cashed in my chips, minus what Uncle Sam took and here I am.\"\n\nWe continued to watch Judy as Kaye nuzzled up to me. \"There is one last thing Kaye. Half the money in the envelope is yours. I know we never agreed to it, but, you went above and beyond teaching me how to survive. As far as I am concerned we are partners. Whatever I have is yours for the taking.\" Kaye teared up and was about to say something when the food and Judy arrived at the table. I tried not to react as I felt her slip her shoe off and slid her foot slowly up and down my leg.\n\nTo keep my gambling from being too disruptive, Kaye and I established some ground rules. I could only play when Judy was occupied or tended to by Kaye. Never would she be unattended. I would only buy in a designated amount of chips. If I hit a bad streak I would not go chasing money. Any profit made would go into a joint bank account. At least once a week, we would commit to a family activity for the three of us.\n\nA byproduct of my success was that our petting sessions were getting more and more serious even though both of us had qualms going too far with Judy in the small apartment. But God, just to hold that body against me and kiss those lips sent me flying. I kept wondering when we would get to the next level.\n\nIt didn't take long to find out. I signed up for a satellite tournament and after the chaos of the weekend I left the winner. I had a payout of $25,000 and a entry ticket to the World Series of Poker. The World Series was a televised event on ESPN. It was a marathon unlimited Texas Hold'Em event that enticed tens of thousands of gamblers to make the pilgrimage to Vegas for the chance to be acclaimed the best in the world and to win millions of dollars.\n\nWe celebrated once again by going out to eat. This time I wisely allowed Kaye to select. After a perfect Italian meal we got back to the apartment and Judy went to bed. Kaye and I began our usual physical gymnastics on the couch when she announced that she wanted to play poker.\n\n\"Kaye, you've got to be kidding me! You've got me all revved up and now you want to play cards?\" I looked at her incredulously.\n\nShe lingered kissing me and her teeth tugged on my bottom lip as she got up to walk over to the kitchen table and got the deck of cards. As she began shuffling that nagging little thought came back to me. She noticed, \"What's wrong James?\"\n\n\"There is something bugging the hell of me everytime I see you shuffle a deck of cards and I can't figure out what it is.\"\n\n\"Well, this will keep your mind off that. We're going to play strip poker.\" She said in a matter of fact voice.\n\nShe just kept looking at me as she mechanically continued to shuffle the deck the only noise was the riffling of the shuffle. Automatically she dealt out the cards and announced she was all in, I told her I called her bet and showed her the deuce and trey she dealt me. One of the worst hand you could start with. She stood up and said I won and she slowly stripped before me.\n\nI eagerly waited each inch of flesh exposed until she was naked before me. How could I adequately describe that voluptuous body. Her long hair spilling across the top of her breasts. The light pink areolas with nipples jutting out. Her torso accented by her ribcage and flat abdomen. The waist expanding to her hip connecting her long muscular legs. The small tuft of pubic hair above her vagina. \n\nThe main thing that attracted me was her eyes. Those wonderful eyes were looking at me with anticipation and vulnerability as I returned the favor and undressed before her. Whatever description you want of my body you'll have to ask her. All I know is that she appeared satisfied with what she saw. I walked over to her and gave her a light kiss, which was followed by another...and another...and another. Then we went to my bedroom and I carefully placed my prize on top. Then I slowly descended down her body to view her pussy and I carefully and softly began to lick it like a kitten.\n\nMy efforts were being rewarded by gasps and moans of satisfaction and occasionally a spasm as a particular nerve was gratified. \"Oh God, James, this is wonderful\", she crooned as her hands held my hair tight to ensure that I wouldn't stop. \n\nThere was little danger of that as I continued to tease her to a climax. I would build her to a crescendo and then lightly back off. I did that several time until she had my head captured by her muscular thighs begging me for relief. \n\n\"Please, baby, you got to let me come!\" She exclaimed in a voice loud enough to wake Judy. Realizing that she stuffed a pillow across her face and her muffled screams continued as I finally allowed her to come.\n\nAs we relaxed I lightly ran my fingers over the lips of her vagina. Soft, warm , moist, pink lips as I paid homage to her. For close to half an hour I continued to play with her as she recovered. Finally she shifted around until my erect cock was close to her face.\n\n\"James, forgive me if I don't do this right. The only person I ever did this with was Charlie. With that her soft lips encased the bulb of my cock and she slowly devoured my dick. How could I tell her that I wasn't what you called overly accustomed to beautiful women giving me blow jobs. Whatever you call her technique I was soon on the verge of coming and I warned her so she could remove my cock before the climax. Instead she gripped my thighs and held on as she swallowed load after load from me. I was gasping for breath as she cuddle up to me for a kiss.\n\nWe continued to caress one another and miracle of miracle I had another erection. This time she climbed on top of me and rode me cowgirl style. We were both connecting with the right spots as we amazed each other.\n\n\"Baby, I need you to come with me!\" she cried. I needed no prompting as we both exploded into heaven. I was in bliss, that was the only way to describe it and I thought what a poor substitute the escort had been on Christmas compared to this woman. We cuddled and engaged in some postplay and I was ready to go again, but, Kaye said she need to go to bed with Judy since it would soon be time to wake up.\n\nI had a sense of frustration seeing her leave, but, knowing this was only the beginning of our relationship. How incredible it would become as we became familiar to each other wants and desires. \n\nSure enough, morning came way too early, but, the smiles we gave each other made it all worthwhile. Each evening became a wonder lab of sexual discovery as we explored each other. The level of our compatibility was astounding and needless to say I seldom went to sleep frustrated in any way.\n\nWe still thought we were keeping the secret from Judy and we continued to talk about how best to broach the subject with her. That worry went away one night we had a bad thunderstorm. We were just settling down in bed when my door opened and Judy in a scared voice asked if she could join us. I told her to come on to bed with us and I thanked God we were still in our clothes. \n\nJudy carefully crawled between us and Kaye and I took turns whispering words of comfort to her as I reached around to hold my family to me. Morning found us in the same posture as I protected my family. As we gingerly addressed the issue at the breakfast table, Judy blithely told us that she had known for weeks that we were sleeping together. The only thing she couldn't understand was why her mom couldn't stay in one bed for a whole night. The incongruous comment was enough to set me and Kaye off in peals of laughter. Judy just looked at us with a look saying that adults were weird people.\n\nI was preparing for the World Series and I was nervous. ESPN was notorious for wanting to give back stories on various players. I didn't want to be in the spotlight and expose any of my history to Kaye and Judy. More importantly, I didn't want them exposed in the harsh media scrutiny.\n\nLuckily, I dodged the bullet as I wasn't approached beforehand by an associate producer with a film crew. They were more interested in the established poker stars. So when I sat down at my first table I was a stranger among strangers.\n\nIt was unbelievable on the first hand I flopped pocket aces. My pulse raced as I screamed not to signal a tell. I decided to merely call the bet in an effort to solicit more money in the pot. It was like everyone was wanting to mark their territory with a win on the first hand. Person after person called the bet and an aggressive player reraised. Then came the flop. The remaining two aces and the king of clubs. I had four of a kind, the only way I could be beaten was by a straight flush.\n\nTo my surprise the first bettor went all in. Then the second bettor did as well. Holy crap, twenty thousand dollars on the table and we hadn't even gotten around the table. Third and fourth bettor quickly folded. Fifth bettor continued to weigh his options and the reluctantly followed suit and went all in. Then all eyes were on me as I considered what the hell was going on. I decided the first two bettors were trying to run a bluff and steal the first pot. Number five had a hand that was too good to lay down but not bullet proof. All I had to worry was that no face cards showed on fourth street and the river to complete a straight flush. I had to go in so I also pushed my chips in the middle of the table.\n\nThe hoopla from all of four of us going all in drew the attention of the cameras. Great, first hand and I was already on public view. I sat there stoic as the remaining players folded. Then we were told to show our hands. As I thought the first bettor had nothing, second bettor had a pair of eights, the dead man hand, how appropriate. Fourth bettor was green around the gills. He had a pair of kings, a full house, kings over aces. A good hand, but, not good enough. The two remaining cards dealt was anti climatic as I received false congratulations from my fellow players. In the very first hand I quadrupled my stake and I was in a position of power to dictate play at the table. And I kept my foot on everybody's neck as I took pot after pot with everyone folding to keep from risking their remaining chips. I continued to overbet to insure that only players with a very strong hand would call. I got burned a couple of times but by the end of the day I was ranked among the chip leaders.\n\nI was exhausted when I got to the apartment, Kaye was excited by my news and had me fed, massaged and in bed before I knew it. As I returned for my second day of action, I was transferred to another table. I was still clearly in the lead among this table and I started throw my weight around. I could sense frustration among them, especially after I stole the blinds with a seven and jack off suit and showed the cards to my fellow players.\n\nThat encouraged them to call me on strong hands and my stacks continued to grow. Finally, we got the signal for the end of another day. I heard veiled curses and threats muttered my way as I left. Day after day continued as I steamrollered over people. By now I drew attraction and an associate producer told me during a break that they wanted me for an interview after the conclusion of the day. I ignored the request and went back to playing.\n\nNext morning I was taken aside and reminded that I was contractually required to cooperate with the TV crews. I would be giving an interview that evening if I survived. My irritation was evident that day as I stepped up my bets and took pots. When I arrived at the booth they had set up they put makeup on me and began what had to be the most painful interview ever aired on ESPN.\n\nI was aloof, abrupt and laconic with my answers. The interviewer was quickly on the defensive and I wasn't giving her an inch of hope salvaging anything out of the interview. Finally, they gave up on the ordeal and I stepped away from the camera. I heard one producer telling a staffer to find out what my problem was.\n\nI got to the apartment and warned Kaye that the shit might be hitting the fan. She told me not to worry and just concentrate on my cards. That was what I did for the next two days and then the report came out.\n\nA former professor accused of sexual harassment and plagiarizing a colleague's work was leading the World Series of Poker. They took no prisoners as I was discussed across the nation for my poor character. This was worse than the first time since mostly only the world of academia was affected then. Now I was a national referendum as debate waged whether I should resign from the competition.\n\nThey tracked down Laura and she gave a no comment. Jason Feder, on the other hand was happy to oblige telling any and all of my shortcomings and failings. I tried to compartmentalize the events so I could continue on. Now everyday I was subjected to snide comments by players trying to get me upset and tilt me. I countered as best I could by continuing winning.\n\nThen came the low blow where a news crew ambushed Kaye and Judy as they stepped out to get Judy to school. The male reporter threw innuendo after innuendo at Kaye and Judy cried as Kaye finally took her back into the apartment. The doorbell ranged incessantly as the reporter demanded answers. It was probably a good thing I had already left that morning or I would have killed the cocksucker. That day we continued playing until an announcement came on and said we had reached the magic number. Here on out every player would be entitled to a cash award based on their ranking.\n\nI was excited when I got home and told them the news. I didn't know at the time, but, they made a pact not to tell me about the events that morning. I could tell they were under stress, hell, we all were, but the end was approaching and hopefully things would resume to normal.\n\nKaye was called into her boss office and questioned whether a conflict existed due to our relationship. They would have to let legal sort it out to see if Kaye could keep her job. Judy was subjected to the taunts and jokes from her classmates. God, if only I had known what they went through to protect me. But, I was involved in quietly and ruthlessly climbing the ladder. \n\nWord got around that I wasn't outwardly affected by the jibs and most laid off me and we continued to dwindle down. Four tables, then three, then two, and I blinked as the news came that we fortunate few comprised of the final table. \n\nThe tournament would take a short hiatus as the TV regrouped to get into even more background on everyone. When a associate producer had the audacity to ask if I would cooperate at first I thought why the hell should I. But then I told him I would cooperate by giving a statement. An all encompassing statement that would delve into the controversies. I wouldn't answer questions, take it or leave it.\n\nThey hurriedly agreed and I found myself in front of a camera as I started from the beginning and tracked the history of my life. I told it factual, warts and all. Then I apologized for my earlier interview and I explained that I only wanted to protect Kaye and Judy. I started choking up then and tears were coursing down my face as I ended my statement with the simple request to leave Kaye and Judy alone.\n\nI went back to the apartment where we all began decompressing from the stress. The days passed and we all seemed to recover with the knowledge that the payday would be a substantial one. Meanwhile, my interview had grown a life of its own. TV station after TV station passed it among themselves. An enterprising reporter tracked down Teri Stevens who corroborated my entire story.\n\nThen the search was on to track down my three accusers of sexual harassment. But I wouldn't find out about that till later. All I wanted to do was spend time with Kaye and Judy. The end of the hiatus was upon us when I suggested that we took a trip to the Grand Canyon.\n\nWe packed a picnic and spent the day observing God's wonder. All was well as we approached the apartment. Judy ran up and went inside first as Kaye and I gathered the things out of the car. Instinctively I sensed something out of the ordinary. How did Judy get in the house? Before it could fully register, I heard Judy screaming inside.\n\nKaye was just a few feet away from the door when Judy screamed. Like a mama bear protecting her cub she rushed inside and I immediately heard her raised voice added to the cacophony erupting inside. \n\nI had dropped everything I was carrying and sprinted toward the apartment. I hardly had time to register the broken door jamb as I hurried inside. There a tall scrawny unkempt man was struggling to keep Judy from escaping his grasp, he was handicapped in his efforts due to the large hunting knife he held in his hand. Also complicating things, was Kaye screaming and struggling with him to release Judy.\n\n\"GODDAMMIT BITCH, I'LL KILL HER IF YOU DON'T GET OFF ME!\" he roared. Hearing the threat, Kaye immediately retreated and begged for her child's life.\n\n\"Please Charlie, please don't hurt Judy!\" She sobbed making her plea to the uncaring father who held Judy's fate in his hand.\n\n\"I want the money your boyfriend won at the tournament! You give me all the money and you and this little shit will live! I'm still gonna mark you, but, you will live, you fucking whore!\"\n\nKaye desperately tried to explain that the huge stacks of millions of dollars of chips were just for show. No one had gotten them yet. It wasn't registering in the meth addled brain of Charlie. All he knew was he had finally made parole, found that Kaye and Judy had disappeared and escaped his vengeance. Then he saw them on TV and went to hunt them down. He broken into the apartment ransacking it in his quest for the money. And out of nowhere, that cunt showed up with her kid. Oh yeah, somebody was going to pay!",
        "I could tell that Kaye's effort to appeal to his logic was only causing him to become more agitated and his threats toward Judy were becoming more pronounced. I had to force his attention on me to give Judy a chance.\n\n\"Hey Charlie, I'm the one you need to deal with. I'll give you everything I've got just so long as you don't hurt Judy. Let her go, and you and I can make the deal and everybody can walk away from this.\"\n\nAll the time I was talking I was inching toward him in as non threatening a way as I could. I couldn't help by notice the fear of Judy's face. The light of recognition appeared on Charlie's face.\n\n\"Yeah, I know you. You're the sorry son of a bitch who took this slut away from me. Yeah, you want her, you're gonna have to pay me for her.\"\n\nJudy tried to break free and he brandished the knife near her throat. It was now or never. My hand shot forward and gripped the wrist of his knife hand. I quickly brought my other hand to bear the knife away from Judy. \n\nSurprised by my move, Charlie had to let go of Judy to defend himself against my attack. Judy scrambled free and ran to Kaye. \"Run!\" I yelled to Kaye and I turned my attention to Charlie as we continued to struggle for the knife. It was an unfair contest, I had spent my life in sedentary lifestyles and Charlie, bulked up from prison exercising was making a mockery of my efforts.\n\nThe knife flashed and I gasped from the pain and the spray of blood from my arm. I quickly retreated to the door. I had to buy time for Kaye and Judy to get away. As long as I guarded the exit, the better their chances were. Charlie was only concerned with hurting me as he came toward me. I had to disobey the old adage that you run from a knife fight. If I ran away, Charlie would catch Kaye and Judy. I couldn't let that happen.\n\nAgain the knife swiped me and I felt the warm stickiness of my blood oozing on my shirt from the wound in my torso. Then again another cut and another as Charlie was enjoying maiming his prey. I was starting to feel woozy. Still I held my ground and now Charlie sensed like a trapped animal the need to escape. He rushed me and bowled me over. I clinched him and rode down to the floor with my tackle. Desperately, I was holding his knife away from me with both hands and Charlie was using his free hand to smash repeatedly in my face.\n\nI was losing, I had failed. Just like I had failed all my life. I had lost Laura and now I was going to lose Kaye. My vision was blurring as my strength ebbed away. Nothing was going to stop the inevitable. My last view was the triumphant look on Charlie's face as he prepared to slide the knife into my body and finish me.\n\n\"DON'T HURT MY DADDY!\" I heard Judy yell and the words pained me more than any of my injuries as I felt a painful electrical shock and everything faded to black.\n\nIt was that irritating beep that brought me around. My fuzzy brain was trying to locate the source and I couldn't place it. My consciousness was swarming like a beehive as I opened my eyes and saw the strange sight of white tiles on the ceiling. I heard someone say, \"He's coming around\" and activity and motion were swirling around me.\n\nThen I knew, I just knew that Kaye was there and I held up my hand and I felt her familiar warm soft hand gripping mine as she cried over me. I was trying to talk and she just shook her head as she smiled down on me. Then everything disappeared again.\n\nWhen I woke back up, Kaye was still there, still holding my hand. From the room, the machines I was attached to, the hurried bustle outside it was clear that I was in an Intensive Care Unit. I started worrying how bad I was hurt. Kaye alleviated my concerns telling me that I had lost a lot of blood, and had a number of stitches and it would be a while before my face completely healed. The police got there and had tazered us both before Charlie could perform the coup de grace. I should be okay I was scheduled to be moved into a regular room as soon as one became available. I kept trying to talk but I couldn't form the words and I found myself going back to sleep.\n\nUpon the next awakening I was in a different room, but with the same beautiful Kaye despite the wear of the ordeal. \"You need to go home, Kaye and get some rest.\" She shook her head and said she and Judy were fine up here.\n\nThe mention of Judy brought to mind the last thing I had heard and the pain was evident on my face as Kaye asked what was wrong.\n\n\"The last thing I heard was Judy begging me not to hurt her daddy. It's just I had built up this impression that we were a family and to have that taken away from me was the worst thing that happened to me.\" I said sadly as I mourned the loss of my delusion.\n\n\"Listen here!\" Kaye said sharply to me, \"We ARE a family! When you heard Judy crying for her daddy, she was. Her daddy is you! She was crying for you! You know how else I know we are a family? You told me to go home to rest. To home! Not, to our apartment, but, to our home mister! And you better know right now that anywhere we are together, that is home!\"\n\nBefore I could respond a fifty pound typhoon launched herself onto the bed crying \"Daddy! Daddy!\"\n\nI couldn't help myself. I began bawling as I held Judy as best I could. The three of us were crying and the nursing staff huddled wondering what to do. The head nurse shepard them away and allowed us a moment together.\n\nAfter we all calmed down, Kaye caught me up on the news. Charlie's antics had been captured by our Nanny cams and he was assured a long prison stretch. The police had released the video and it was being played nationally in my ongoing saga. The World Series had reached out to Kaye to ask if I would be able to continue. She told them that I would make that decision.\n\n\"What do you think Kaye? Should I continue or should I give up? Tell me what you want me to do.\"\n\nKaye only smiled and said, \"I'm just happy that you asked what I thought. This is for you to decide and whatever you do, know that your family is behind you 100 per cent.\"\n\nThat is how I found myself seated at the final table. Weathered and beaten and still apparently a glutton for punishment. I played low key and I watched the others battle among themselves. I kept losing amounts as the blinds increased. But still I bided my time.\n\nAs the table shrunk down, I began paying particular attention to one player. The classical bully stereotype, all he did was taunt and insult everyone. He had taken advantage of the hiatus and researched all of us. That made his barbs that much more effective. He wanted so bad to launch into me, but, as I was folding every hand he had to hold back.\n\nWe finally butted heads on a hand and I started getting an inkling what I was in for as he mentioned how I was a cheater, how my wife left me, how I hung around methheads. I could've stopped it. The World Series will penalize a player for abuse, but, if I did then the Bully would know he got to me. So I bore it in silence.\n\nWhen I lost the hand, the Bully made a big production of getting up and doing a victory dance for the enjoyment of the audience. I just watched as a million of my chips slid across the table to him.\n\nPlay continued to drone on and a couple of times I was able to take the blinds and hang on.\n\nThen there were three of us, the Bully, myself, and a guy with a short stack that would soon be forced to go all in. Which is exactly what happened and I took the chips as the third place finisher left the table. Then we had to pause while the show biz aspect had to be observed. Las Vegas showgirls carrying trays of $100 dollars stacks dumped in a mountain on the table accented by the huge mounds of stacks of chips.\n\nYou want to know why there are mountains of chips between the two final contestants? It makes for a better visual than if you designated a $1,000,000 chip so that you would only have a handful of chips to show on TV. Who would want to watch that?\n\nNow the battle was mano a mano and the Bully unleashed everything in his arsenal. I was called every insulting term possible as we continued to play. Then the Bully went over the line claiming I was shacking up with a methhead slut. He could tell that remark did some damage from my reaction. I told him he could say whatever he wanted to about me but leave my family out of it. He sneered at me. \n\nI tried to counter by thinking of something unrelated, for the first time in years I dredged up the Hodge Conjecture and a familiar nag was tugging at me. What is this about? All the Bully's blustering was for naught as continued to play shielded from his harm. When I took half his chips with a full house, I asked if he was going to do a victory dance.\n\nHe lost it and started throwing insult after insult about Kaye. I was climbing over the table to get after him when the TV crew caught me and the melee caused a pause. I looked at Kaye and Judy in the casino audience to see how they reacted. I could tell they were upset that I was upset.\n\nWhen peace was restored and play resumed I could tell he had finally accomplished his goal. All I wanted to do was crush him quickly. I knew I couldn't allow passion to dictate my play, but, he had tilted me and I was desperate to find a way to calm down.\n\nI closed my eyes and thought of the most calming thing I could. The sight of Kaye shuffling those cards when we played strip poker. When we consummated our love. The shuffling of those cards... constant values in a field...yet, forever randomly shifting...but each progression would vary from another shuffle...how does the Conjecture fit in? My mind raced as equations burst in my head as I calculated the results.\n\nHow long I remained transfixed oblivious I have no idea. All I know was I was gently shaken aware that the hand had been dealt, my hole cards were before me unlooked at and five million chips were in the middle of the table bet by the Bully waiting for my response. Instead, I looked toward the audience picking out Kaye, I yelled, \"The Conjecture!\"\n\nKaye was puzzled but knew me well enough that if I had that reaction it had to be big news. Suddenly, I didn't care about playing. Second place money would suit me fine. I reraised the bet my hole cards unseen. It flustered the Bully insisting that I look at my cards before I be allowed to bet. Then came the flop and I declared all in, still no idea what my hole cards were. I got up from the table and walked over to Kaye as she sputtered \"James!\" and I held her over the uproar of the Bully's calling of the bet and the dealing of the cards which resulted in me hitting a jack high flush against a straight by the Bully. Sometime it all comes down to luck.\n\nPandemonium erupted around us as I continued to hold on to Kaye. Eventually, I was persuaded to go back to the table for the winner's presentation. The Bully had stormed out raging against my \"unprofessionalism.\" I stood there with the mandatory shit eating grin and made a few glib remarks. I was able to prevent them putting the champion's bracelet on me. No way would such a garish ostentatious piece of jewelry ever be worn by me. I would settle for nothing less than the paper bracelet Judy had made for me in class.\n\nKaye decided she wanted to celebrate and we were offered a penthouse at the hotel/casino where Kaye worked. I was informed that I would be welcomed in all areas of the casino. I guess celebrity status forgave all sins.\n\nWhen we finally got settled in, Kaye made all the trials and tribulations worthwhile as we dismissed the world. When I finally came up for air I called room service to bring up several legal pads, pens and a laptop computer. I told Kaye I had to get to work.\n\nThree months later in a small but well respected educational journal, an article appeared. \"The Solution to Hodge's Conjecture by the Varonsky's Shift.\" Authored by Dr. Ben Stevens and Dr. James Reed, it caused a tsunami in the world of math. It was finally accepted that the Conjecture had been solved and Teri Stevens and I were awarded the $1,000,000 prize for the solution.\n\nAll the hoopla brought the attention of CBS' Sixty Minutes to do a feature on me as \"the motorcycle riding bad boy genius of math.\" I suppose all the nerds out there would see me as some sort of outlaw. What the world didn't see was me tucking in Judy and reading her a story at bedtime. So much for my bad boy image. \n\nThe film crew had me go through my whole story again and I wondered why. Turned out they had tracked down Karen Hudgens and my other two accusers of sexual misconduct. It didn't take much to get one of them to crack and confronted with the truth the other two recanted their stories. \n\nTurned out that there was sexual impropriety going on at the university, but it revolved around Jason Feder and his buddy, the Dean. For years, Jason traded grades for sex and videotaped the performances. The coeds were blackmailed into continuing to perform for Jason and the Dean until they were abandoned for fresh bait.\n\nKaren and the two girls were pressured to make the accusations against me in exchange for their freedom and the videos given back to the girls. A heavily edited snippet appeared on the feature which clearly showed an aroused Jason and his friend, the Dean sampling the girls. Then the feature went back to a tearful distraught Karen Hudgens begging for my forgiveness. The next thing to be shown was a shot of Jason walking away from a news crew crying out, \"No Comment!\" Then there was the comment from the reporter that the university's Board of Trustees was opening an investigation. Then came the image of that watch ticking away.\n\nNo sooner than the show was over the phone rang off the wall. I had to monitor the calls ID's to keep from dealing with people I didn't want to hear from. Most were my so called friends and colleagues who had abandoned me in my time of need who now were going to assure me that they knew I had be innocent all along. Then my parents called. I decided I should at least hear them out even though they too were quick to judge me. The only person I was happy to hear from was Teri Stevens. We cried together knowing that vindication had come at last, but, at what a price at the loss of Ben.\n\nThen the Board of Trustee reached out and invited me to return so they could offer their amends. I flew back with Kaye and Judy and spent a day fielding various offers for me to return. All I could tell them was I would discuss it with Kaye and let them know.\n\nI was standing in the VIP lounge at the airport for the flight back and watched as she walked toward me. Even the years that passed had done little to diminish her beauty. \n\n\"Hello Reed.\"\n\nGod, the flashback of that voice greeting me caused my knees to go weak. Somehow I croaked out \"Hello Laura.\"\n\n\"I had so many ways I had prepared to start this conversation Reed and now my mind is a complete blank. I thought about crashing the Trustees' party for you but seeing as how the Dean, Jason and I are persona non grata I thought that would be a little too gauche. Unofficially, we've all been notified that we are going to be terminated.\n\nApparently, girls are coming out of the wood works to report themselves as victims of Jason's little scheme. Some of whom he engaged with during my marriage with him. I left him, Reed. I'm going to go back home with my son and regroup and try to start over.\n\nI know I don't deserve it, but, I want you to consider us, Reed. We were perfect together for so many years and given time, we could be again. You have to understand that I loved you so much and when I heard that awful testimony all I could think about was your betrayal. It clouded my judgment. God, how it clouded my judgment! All I could think of was to lash out and hurt you.\n\nYou'd love my son if you met him, Reed. If you never knew that Jason was his father all you would see would be a beautiful little boy. If it isn't too late, would you be willing to do that?\n\nIf you can't, I understand. I'd like your forgiveness. I know, I know, I don't deserve it, but still I'm asking. I know you've got a big heart. I know you are capable of giving me that relief. Please consider it.\"\n\nI just stood there not believing what I was hearing.\n\n\"Laura, I watched you walking up and I still can't get over how beautiful you are. And when you started speaking all I could think of were the happy memories we shared. In a perfect world, I would say yes and we would walk out of here and start all over.\"\n\nLaura brighten up as she saw a potential breakthrough.\n\nI continued, \"But, we aren't in a perfect world. We are in this fucked up unperfect world where things don't make any sense. Compared to you, Kaye is an alley cat. But the thing is, she is MY alley cat. I know if I get in trouble, she would be there to the very last to help and to protect me. Kaye and I have forged our relationship and there is nothing that you or anybody else can say or do that is going to change that.\n\nWe are going to continue to love each other for the next forty or fifty years and the only thing that will stop us is when one of us go to our grave. And I pray to God that I go first because I don't want to live in a world that she isn't in.\"\n\nThe realization that she had lost me made her face fall as I continued to speak.\n\n\"As for forgiving you; for what you've done to me, yes, I can forgive you because ultimately it caused me to meet Kaye. What I can't forgive you was your treatment of Ben. He loved you like a daughter and when you left me, you left him as well. You didn't attend his service or reach out to Teri when she needed it. And then you participated in academic dishonesty by lying about him . You knew how Ben cherished knowledge and education and you besmirched his memory when you engaged in Jason's little witchhunt. \n\nSo, no, Laura I can't forgive you. I can only hope you and your son can get on with your lives and be happy, but, it won't be with my blessings.\"\n\nI watched as Laura started to cry before me and a flight attendant came up to tell me that my companion, Ms. Varonsky and our daughter had already boarded the plane. Laura looked up at the mention of Varonsky and recognition came to her for my credit to Kaye by mentioning her maiden name in my paper. I turned around without saying goodbye and walked toward the Gulfstream jet waiting for me.\n\nOne of the enticement to come to the Trustees' party was the use of the private jet of one of the alumni. I was soon settled in my seat cruising at 30,000 feet with a little Munchkin in my lap. She was busy at work and I closed my eyes for a minute trying to get the residual pain once and for all out of my heart with my closure with Laura. \n\nI felt a nudge and opened my eyes and looked down. Judy was demanding my attention to her crayon scribbling in the margins of her coloring book. I looked at the algebra equation and told her it was correct. She smiled up at me and then went back to work on the book.\n\nI looked over at Kaye amusedly watching us, shaking her head and bringing her attention once again to her laptop shopping for a baby bassinet needed for our new home.\n\nAs I closed my eyes again I thought what a fucked up unperfect world it was. But every so often, you come across someone you have to risk all to complete your world. And when you find that person and you bet your heart and soul on them, the prize is an eternity of love with your soulmate. And that makes every play of the game worthwhile.\n\nThen I felt a nudge from the little Munchkin."
    ],
    "authorname": "oshaw",
    "tags": [
        "casino",
        "blackjack",
        "motorcycle",
        "university",
        "cards",
        "math",
        "apartment",
        "professor",
        "brunette",
        "blonde"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/equation-1"
}