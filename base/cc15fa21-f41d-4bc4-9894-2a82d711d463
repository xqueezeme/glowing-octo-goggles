{
    "title": "The Morrisons Ch. 25",
    "pages": [
        "I want to thank Fat_Dad from the bottom of my heart for taking his valuable time to edit this chapter of \"The Morrisons.\" \n\nMy original intent for The Morrisons was for the story to be about an All American family of means. Although they are wealthy I wanted them to be compassionate towards others they meet, and assist others wherever and whenever possible. I also wanted The Morrisons to be a loving family and I believe the previous chapters show that to be the case.\n\nThe Morrison story line is going to change slightly from my original plan, to include Dr. Marshall Mitchel and the Turner Securities. Fat_Dad and I are going to be using each other's characters in our own stories and we will be coordinating our stories. We've interlinked some situations and even though you'll be reading two separate stories, it is our hope that the transition between them will be smooth and consistent. We've had unbelievable positive response to the integration of story characters and aligning our story lines\n\nFat_Dad and I have spent hours talking to each other on the phone and even more time messaging one another tossing ideas back and forth so we'll have something interesting for you to read. We have become friends even though we've never met in person and we're separated by a few thousand miles. \n\nWith express permission and assistance from Fat_Dad, I have incorporated the story characters from \"A New Life for Dr. Mitchel\" into \"The Morrisons.\" I have a complete character list on the last page of this chapter. Each of us has contributed something to each other's story. If you haven't read \"A New Life for Dr. Mitchel\" yet, please search for it here on Literotica and I'm sure you'll love the theme.\n\nAgain, a profound thank you goes out to Fat_Dad for all the hard work he's invested in editing and assisting me. I know Fat_Dad is only a phone call away.\n\n~ ~ ~ ~ ~ ~ ~ ~\n\n**Author's Note: The Morrisons is a continuing story where each chapter builds on previous chapters. If this is your first encounter with The Morrisons, I'd like to suggest you read the previous chapters prior to reading this one. Please enjoy! \n\n~ ~ ~ ~ ~ ~ ~ ~\n\n**PLEASE NOTE: \n\n**Before you read this chapter, be advised that it contains very graphic depictions of raw sex and/or love-making between two or more consenting people. IF such depictions upset you or make you lose sleep, PLEASE don't read any further. You may not enjoy reading a particular portion of the story; that doesn't mean other readers will dislike that same portion. It's a different-strokes-for-different-folks kind of story. \n\nFor the sophisticated intellectuals who read incest/taboo stories on Literotica expecting to find professional authors with perfect everything, including but not limited to, punctuation, spelling, dialog, characters with only sophisticated actions, etc., please pass this chapter by, you won't find that here! We do our best to correct all typos and spelling errors but some may still slip past us.\n\nI appreciate hearing from readers, and I want to thank all those who took time to send me a public or private message. However, please don't leave a derogatory comment, if you willingly overlook THIS WARNING. \n\n~ ~ ~ ~ ~ ~ ~ ~\n\nFor the record: All characters engaging in sexual activities are of legal age!\n\n~ ~ ~ ~ ~ ~ ~ ~\n\n****************************\n\nChapter 25\n\nTony picked up the phone when Ted called to ask them if they wanted to go to Hawaii. Tony controlled his emotions very well and stayed calm during his conversation with Ted. However Ted could hear the three girls squealing in the background when Tony repeated what Ted was saying. Patty, Beth and Barbie were jumping up and down saying, \"Tell him yes, tell him yes!\"\n\nTony was laughing when he answered Ted, \"I'd be killed instantly if I said we couldn't go because we have plenty of work to do. So, I guess you'll have to count us in.\"\n\nTed advised Tony to have the girls pack lightly and bring at least one set of casual clothes. Ted went on to describe the resort they'd be staying at, based on what Marsh had told him. Tony thanked Ted for calling him and they exchanged goodbyes.\n\nWhen Tony hung up the phone, all three girls attacked him asking, \"What did Ted say?\"\n\nTony looked at his wife and sisters before he said, \"Aww, not much really.\"\n\nThe girls went wild and started playfully pounding on him when he finally said, \"Ok, ok he told me all three of you can pack your clothes in one suitcase. You only need one set of casual clothes to wear in case we leave the resort for some reason. He also said you can leave your bras and panties at home. And the best part is we can be nude while we're there. We have to be ready to fly in a helicopter from the Morrison's house tomorrow at one o'clock in the afternoon.\"\n\n\"How are we going to get to Hawaii?\" Beth asked.\n\nTony replied, \"Ted didn't say, he just told me the helicopter would land at the Morrison's tomorrow and pick us all up and take us to the airport.\"\n\nAll three girls rushed to their bedrooms to collect the clothes and items they thought they would need. Each one packed their individual items in a small carry-on bag. \n\nTony tossed some shorts, tank tops, sandals, shave kit and a set of casual clothes into a small bag and zipped it shut before he announced, \"I'm done packing, I'm all ready to go. What's taking you girls so long?\"\n\nPatty slapped Tony's arm and said, \"Get out of here, go watch TV or something.\"\n\nThe three girls talked excitedly as they compared notes and took at least a half hour putting items they thought they'd need in their bag. Finally they finished and gathered out in the living room with Tony. Once again Tony laughed as he asked, \"What took you guys so long. It's only a quick four day trip and you can't need that much for that short time.\"\n\nBeth walked over and stood directly in front of Tony before she asked, \"Do you see an item or items on this body that you love to play with?\"\n\n\"Yes I do,\" Tony replied, \"I see your beautiful \"C\" cup titties and that wonderful tight, bald pussy, I love to slide this bad boy into. Why do you ask?\"\n\nWith a smirk on her face she said, \"If you want to continue to enjoy those things you cherish, I'd suggest you cut us some slack. We are supposed to be able to take extra time to decide. It's part of our nature, as females.\"\n\n\"I was only joking Beth,\" Tony countered, \"Ghezzzz, can't ya take a joke? How about you coming over here and plant that beautiful pussy right here on my lips and I'll show you how much I appreciate you.\"\n\nBeth didn't have to be asked twice, she bounded up on the chair Tony was sitting in and with her feet on the arms of the overstuffed leather chair and her knees pressed into the back of it; with her pussy right in front of Tony's mouth. \n\nTony didn't waste any time reaching up and cupping his sister's \"C\" cup titties and rolling her brown nipples between his index finger and thumb. Beth moved her hips forward until she felt Tony's tongue on her clit. He attacked her clit with a vengeance and soon had Beth worked into such a frenzy he had to move his hands down and hold her hips so he wouldn't lose contact with her pussy. \n\nTony felt something warm and moist around his cock head an instant before the sucking began. Beth was moaning and shrieking in ecstasy while massaging her own boobs and pinching her nipples so roughly it looked like she had a little masochist in her. Soon her orgasm peaked and her breathing came in gasps.\n\nMeanwhile down below, whoever was sucking Tony's cock was doing a great job and he pulled away from Beth's pussy in time enough to exclaim, \"OH FUCK, I'm going to cum!\"\n\nTony tried his best to hump the mouth that surrounded his cock but he couldn't move that well. He didn't have to worry because the person sucking him sucked him dry. By the time Beth moved away from Tony's face, Patty and Barbie were kissing so he couldn't tell who it was that did such a great job sucking his cock.\n\n\"Come on; let's go to bed so we can even out the orgasms.\" Patty declared.\n\nBeth moved off Tony's chair and Tony stood up and told the girls to head into the bedroom and he would close up the house before he came in. With Patty in the middle, all three girls turned and headed towards the bedroom. Tony watched the three lovely asses jiggle until they disappeared.\n\n****************************\n\nAfter Joe and Mary left the airport Mary looked at Joe and said in a quiet voice, \"Sometime between now and tomorrow morning, we have to go to your house and pack a bag for you.\"\n\nJoe looked suspiciously at Mary before he asked, \"Why do I need to pack a bag? I thought you wanted me to spend the weekend with you. If I do that, we'll be naked all the time. I'm confused.\"\n\n\"But you are going to spend the weekend with me,\" Mary smiled as she continued, \"Ted talked to me earlier this evening and asked me to not say anything in front of the Morrisons. Since they've left, now I can tell you. Tomorrow, we're going to get on a helicopter and fly to the airport and take a short trip to Hawaii. We are going to be at the same resort as the Morrisons, just in a different place.\"\n\n\"You sure are full of surprises Mary, my dear. What makes you think I want to go to Hawaii?\" Joe inquired.\n\nMary looked at Joe's face and saw a smile spread on his lips so she said, \"I told Ted, we'd go so we won't be the only ones left behind at the Morrison's house.\"\n\n\"Hummm,\" Joe mumbled, \"We might get in trouble, being in that big house all alone. I guess we'd better go with everyone else. How are we getting there?\"\n\n\"Marsh has a plane,\" Mary replied, \"He's taking us. He owns the resort we're going to.\"\n\n\"But, that's tomorrow,\" Mary stated, \"Tonight I want you to pull over in that rest area coming up. I want you to pull up in the front and park for a few minutes.\"\n\n\"Why are we going in there?\" Joe asked.\n\n\"You know Joe,\" Mary began, \"You ask too many questions. What is your wildest fantasy Joe?\"\n\n\"I don't know,\" Joe stated, \"I guess a fantasy would be, like many limo drivers, would be to have naked women ride in the car. But Kim and Beth have already made that fantasy come true and now you're sitting here in the front seat with me, completely naked, so that's even more than I've ever thought about. To tell you the truth, I don't have much of a fantasy world.\"\n\nWhen Joe came to a complete stop in front of the rest area building that housed the bathrooms, Mary looked at Joe and simply said, \"Joe, take off your clothes.\"\n\nJoe's head snapped around as he stared at Mary. \"That's right, I said, take off your clothes. All of them, even your shoes.\"\n\n\"I ... can't ... umm ... this is a company limo and ....\" Joe stuttered.\n\n\"Yes you can,\" Mary interrupted him, \"I'm a cop and I'm sitting here completely naked. If I can do it, you can too.\"\n\n\"But ... what if ...\"\n\n\"I know what you're going to say,\" Mary interrupted again; \"You want to know what if we get stopped. You'll have to drive more carefully if we get stopped you have to remember, I'll most likely have to work with the person who may or may not see me naked. I want to suck your cock while you're driving. I know a small park, not far from here, where we can go. We can spread out a blanket and make love while we're looking down at the city lights. And we can make love in the back of your car so after tonight, every time you open that back door, you're going to remember the fun we gonna have.\"\n\nJoe smiled and started removing his clothes. When he was completely naked Mary lay across the seat and gently took his hard cock in her hand as she said, \"Yummmmy! I'm going to rock your world tonight.\" \n\nMary looked over the dash board and gave Joe some directions with the instructions to let her know when he made the last turn she gave him so she could finish the directions. Then she leaned forward and swallowed Joe's cock. He gulped in surprise and swerved a little to the right before bringing the limo back to his lane. Mary teased his cock relentlessly and every time she felt his legs stiffen, she pulled back and waited until she knew he wouldn't cum.\n\nJoe reached the point of the last direction and let Mary know. She popped her head back up and directed Joe where to turn until they turned into a small gravel parking lot that was on top of a hill overlooking the city. After Joe backed the car into one of the few parking spaces, he put the car in park and turned off the engine.\n\nMary sat up, opened her door and the interior light came on. Joe jumped and tried to cover his cock. Mary giggled and said, \"Don't worry about covering that thing; you're going to get out and walk around. There's no one here but us and we're going to have some fun.\" \n\nMary didn't wait for Joe; she got out and closed the door. When Joe got out, he was holding his cock in his right hand. \"Let it go and let it swing,\" Mary said, \"I love to watch a man's cock swing as he walks.\"\n\nReluctantly, Joe released his cock and in the moonlight, Mary could see his cock bob and weave as he walked around the front of the car. Mary pulled Joe into a hug and they stood with their bodies pressed tightly together. \"Isn't it peaceful here?\" Mary asked.\n\nJoe looked down into the valley, at all the lights below, and before saying, \"Yes, it's so peaceful and the view is wonderful. How do you know about this spot?\"\n\n\"I've been coming here since I was a teenager.\" Mary said, \"The first time was with a boy in my class and as much as he tried to get into my panties, I refused him. We had a great time watching the fire flies after he found out he wasn't going to get lucky.\"\n\n\"Speaking of fire flies,\" Mary said, \"They're flying all over.\"\n\nJoe started laughing and when he could calm down a little he asked, \"Does that mean we're going to stand here naked and watch the fire flies and I'm not going to get lucky?\"\n\nMary slapped Joe's bare ass cheek before she asked, \"Do you want me to make you scream again? No one will hear you out here.\"\n\nJoe immediately changed the subject saying, \"Oh Mary, look at all the fire flies, there must be thousands of them. This place is so surreal. I've never dreamed I'd be standing in a public place, completely naked. I'm very nervous being out here. What happens if someone comes?\"\n\nWithout any further hesitation Mary carefully squatted with her knees wide apart and she reached out and grasped Joe's cock and brought it to her mouth. Joe let out a huge sigh when he felt Mary's warm mouth around his cock. She put her hands on Joe's ass cheeks and pulled him forward until the head of his cock was embedded in her throat. She swallowed a few times which caused an indescribable sensation to the rim of Joe's cock head. She held him in her throat for almost thirty seconds and when she pulled back and ran her tongue around his cock head, Joe groaned very loudly. \n\nMary sensed Joe was close to cumming so she buried his cock deep in her throat a second time and on the second time she swallowed, Joe gripped the sides of her head and pushed his hips forward at the same time he pulled on Mary's head and blew his load straight down Mary's throat. \n\nJoe was still cumming when another car turned into the parking lot and their headlights seemed bright as day. Joe immediately tried to push Mary's head backwards but she didn't budge. They heard some male and female shouts, hoots and giggles from the other car before it slowly moved forward and pulled up beside the limo where the driver shut off the lights and the engine.\n\nJoe whispered to Mary, \"What the fuck do we do now?\"\n\nMary pulled off Joe's cock and whispered, \"They're most likely here for the same thing. I don't think they'll cause us any problems.\"\n\nJoe looked over his shoulder and in the moon light he could see they were kissing. \"I think you're right,\" he whispered, \"They're kissing. I think there's another couple in the back seat too. I've got goose bumps.\"\n\nMary stood up and hugged Joe as she said, \"As I told you, I come up here at night to think. It's so quiet and peaceful I've even brought my sleeping bag and slept on the ground behind my car. Of all the times I've been here, someone else has showed up only a few times. I used to come here a lot, before I got the detail at the Morrisons.\"\n\nThe car door opened on the passenger side and the interior light came on so Mary and Joe had a perfect view of the two girls who got out of the car. Both of them were giggling and said, \"We'll be right back.\"\n\nThey closed the door and started walking towards Mary and Joe. When they were next to them one of the girls paused and said, \"We're sorry if we interrupted you. We came up here to make out with our boyfriends too. Hey, are you rich and famous or something, that's a pretty fancy car?\"\n\nMary laughed and said, \"Nope neither one of us are rich. My boyfriend has a friend who let him borrow the car for a little while tonight. We didn't think anyone would be here because this place is not well known.\"\n\nOne girl said, \"I know, that's why we come up here.\"\n\nThe other girl said, \"Come on, I've got to pee, let's go.\"\n\nBoth girls walked over to the edge of the parking lot and pushed down their pants and panties so they could pee. In the moon light Mary and Joe could still see them. They weren't that far away from them so they were able to hear what the girls were saying. One of the girls wanted to take all her clothes off and walk back to the car naked while the other girl was hesitant. The first girl said, \"Hey look, when you get in the back seat again, you're going to be naked anyway so take everything off out here.\"\n\n\"What about those other people, they'll see us when we walk back past them.\"\n\nThe first girl replied, \"So, they're naked already, what are they going to say or do to us?\"\n\nThey watched both girls get undressed but the second one said, \"I'm going to hold my clothes in front of me so they can't see me when we go by them.\"\n\nThe first girl said, \"Come on, the guys will think we got lost.\"\n\nJoe and Mary watched the two girls walk towards them and when they were about ten feet away the car door opened again and this time both guys got out. Mary looked quick and saw they were only dressed in their boxers. \n\nMary had been stroking Joe's cock while they listened to the girls and he was almost back to full staff again. Mary saw the guys coming around the back of the car she turned slightly so her front was facing both the girls and the guys if they came close to them. Mary turned her hand around and continued to stoke Joe's cock.\n\nIn the moon light the guys saw the girls coming back so they stopped just before they passed Joe and Mary. One of the guys called out, \"We thought you got lost.\"\n\n\"We didn't get lost; we talked to these nice people before we went over and peed. I thought we'd save you some time so we took off our clothes after we peed.\"\n\n\"Oh wow, that's so cool, both of you are already naked?\" one of the boys asked excitedly. \n\n\"Yes,\" the first girl replied as she spread her arm out away from her body, \"See, I'm naked and Charlotte is holding her clothes in front of her. But she's naked too!\"\n\nThe guys looked at Joe and Mary as the girls walked past them and the second guy said, \"Baby, move your clothes from in front of you, I can't see ya.\"\n\n\"That's the idea; I didn't want to show everyone my naked body.\" Charlotte replied.\n\nBut we're going to see it anyway and those people are naked and you don't see them gettin' all upset and covering up, now do ya?\" he countered.\n\n\"I don't see anything on you! You still have your boxers on, you ain't naked.\" Charlotte replied.\n\nIn a flash her boyfriend pushed his boxers down and stood there with a hard-on that looked real good sized in the moon light. \"There, now let's see the goods.\"\n\nTimidly, Charlotte moved her clothes out of the way of her body and she asked a bit sarcastically, \"Is this what you want them to see? Should I walk over to him and give him a kiss too?\"",
        "The boyfriend stood still for a few seconds contemplating what to say when suddenly he said, \"You wouldn't dare to do that.\"\n\nJoe jumped when he heard the guy say that. He looked at the girl and saw her drop her clothes on the ground and made a bee line for Joe. When she was standing in front of him she looked at Mary and asked, \"May I kiss your boyfriend?\"\n\n\"We're not married,\" Mary quickly replied, \"So you'll have to ask him if you can kiss him.\"\n\nThe girl looked at Joe a few seconds before she finally got up enough nerve to ask, \"May I kiss you? My boyfriend over there wanted you to see me naked so here I am. He likes it when I show my little titties and my pussy to other guys.\"\n\nJoe was stunned and finally able to say, \"Please, do whatever you want to do. This has never happened to me before and I'm not sure I'm ready, but I'll do the best I can to respond.\"\n\nCharlotte reached out and put her arms around Joe's neck and stepped forward and pressed her naked body against him as she puckered up her lips and kissed Joe. Soon she slipped her tongue between his lips and the tongue duel was on. She moved her hand down and grasped Joe's cock in one hand and with the other; she pushed Joe's hand towards her pussy. Joe got the idea and let his hand wander down and when it was between her legs her slick slit was so inviting he dipped his middle finger into it and she moaned. Actually, she moaned several times and pumped her hips on Joe's finger. \n\nThe kiss lasted for more than a minute and when she pulled back, she looked at Joe saying, \"For this being your first time, you sir, sure know what to do to make a girl feel good. May I have another kiss?\"\n\nHer boyfriend was laughing as he said, \"Make his day baby, make his day!\"\n\nMary walked the few steps over to Charlotte's boyfriend saying, \"This ain't my first time, do you want to find out what experience feels like?\"\n\nThe young man gulped as Mary took him in her arms and pulled him close to her. She reached down and cupped his balls in her right hand and began to squeeze and roll them in her hand. He finally begged, \"Please don't hurt me.\"\n\n\"Oh, I'm not going to hurt you. What I want to know, does it turn you on to see your girlfriend over there playing with another man's cock and kissing him?\"\n\n\"My buddy and I have double dated before and we've swapped girlfriends if that's what you mean. Yes, I guess it does excite me to see her with someone else.\"\n\n\"You have a nice cock,\" Mary said as she stroked all the way out to the tip of it. \"Would you like to put that in my pussy while you girlfriend let's my boyfriend put his cock in her?\"\n\n\"I can only answer for myself, not my girlfriend. She would have to decide if she wants to do it with him.\" The boyfriend stated unequivocally. \n\n\"Ok that sounds fair,\" said Mary, \"But would you be jealous of her if she had sex with my boyfriend?\"\n\n\"Absolutely not,\" he clearly stated, \"I told you, we double date with my buddy and his girlfriend over there, we've watched each other when we swap girlfriends.\"\n\nMary pulled him into a hug and pressed her bare titties in his chest as she whispered in his ear, \"Are these two girls the only ones you've had sex with?\"\n\n\"Yes,\" He replied when he moved his lips close to Mary's ear, \"You don't have to worry; we don't run around and have sex with everyone. Life is too short not to explore what life has to offer. All four of us are the same age and we lived on the same street and grew up together.\"\n\nMary smiled and kissed him before she said, \"If you want to put this lovely tool of yours inside my pussy, I'll tell you I'm also clean.\"\n\n\"Did you bring a blanket with you?\" Mary inquired.\n\n\"We have two sleeping bags with us. We were going to spend the rest of the night up here.\" He replied.\n\nGo get one and bring it back here, \"I'll take you over to the place where I sleep when I come up here to sit and meditate.\"\n\nHe pulled the sleeping bag out of the car and said to Charlotte, \"Let's go with her, we'll open up the bag and lay it flat, you two can have the other half.\"\n\n\"His name is Joe and my name is Mary. What's your name?\" Mary asked flatly.\n\n\"My name is Josh and our friends over there are named Cody and Jean.\"\n\nJoe and Charlotte joined hands and followed Mary and Josh over to the spot where Mary always lays out her sleeping bag. When they got to the spot the young man exclaimed, \"Was that you who was here a couple of months ago sleeping behind your car?\"\n\nMary thought about it before she answered, \"Yes, I spread out my sleeping bag right here and sleep behind my car so no one will run over me. The last time I was here was possibly a couple months ago.\"\n\n\"We were here that night. We saw you and didn't want to disturb you so we left.\" Josh said.\n\n\"I have a job that takes most of my time now, so I haven't been able to get back up here until tonight. I'm glad I decided to come now. If you want, we can exchange numbers so we can text each other.\"\n\nCharlotte finally spoke up saying, \"For adults, you guys are pretty cool. I think I'd love to be around you more. I'll give you my number too. But for right now, I want this man's cock to fill my pussy.\"\n\nJoe hugged Charlotte close to him then helped spread out the sleeping bag. Soon the other couple came over with their bag and spread it out beside Mary. All three couples were down on the sleeping bags within seconds. Mary didn't waste any time before she had the young man on his back and riding this hard cock.\n\nJoe, on the other hand, was lying on his back letting Charlotte take her time to slide her very tight pussy down over his cock. She was quick to tell Joe that she was on the birth control shot so he didn't have to worry about her getting pregnant.\n\nIt wasn't long before both Joe and Charlotte were moaning and breathing in gasps. Their hands wandered over each other's body. Mary looked over at Joe and watched him a few moments before she said, \"Joe, didn't I tell you I was going to rock your world tonight? Little did I know I was going to have help.\"\n\nNeither Joe nor Charlotte could say a word. Both of them were beyond caring who was watching them, as their bodies simultaneously escalated towards mind boggling orgasms. The young lady screamed in orgasmic heaven and Joe pulled down on her hips and held her tight against his cock while he buried his cum deep inside her.\n\nMary and Josh weren't far behind Joe and Charlotte as their orgasms of epic proportions released the flood gates and the young man blew his load deep inside Mary as he released his very loud guttural sounds while Mary spasmodically continued to grind her clit against his pelvic bone and extend her orgasm.\n\nCody and Jean enjoyed their orgasms at the same time as Mary and Josh. The three people on top soon fell off their partner and all six people lay side by side as they recovered from their euphoric bliss.\n\nWhen everyone recovered, Charlotte broke the silence by asking, \"Can we do this again? I am so fuckin' turned on it's unbelievable. I never thought sex could be this good with an older person. Thank you so much Joe, for allowing me to take my time, to get used to your cock. I want to do that again after I go pee and get some of what you put in me, out.\"\n\nAll three girls stood up in the moon light and Mary held out her hands to Charlotte and Jean as she said, \"Come on, let's go over there and pee.\" The three girls walked hand in hand over to the side of the parking lot about twenty feet away from the guys.\n\nIn the moon light they could still see the guys so Jean suggested, \"Let's turn around and pee so the guys can watch us.\"\n\n\"Oh you kinky lil girl,\" Mary giggled, \"I knew there was something about you I loved.\"\n\n\"You have no idea,\" Charlotte exclaimed, \"She gets me to take off my clothes and flash my pussy or tits in more places than you can imagine. I get nervous and keep telling her we'll get caught but she says that's half the fun.\"\n\nThe three girls squatted with their legs spread wide and all three of them let go a stream of pee that splashed the gravel before it sunk in. None of them had any paper to wipe with so they stood up when they were finished. \n\n\"Charlotte,\" Jean said, \"You know you love it when we show off. That old guy we took the picture with tonight probably hasn't seen a couple of naked girls, like us, in years. I'll bet he went home and yanked his cock.\"\n\n\"Yeah, then what do you have to say about that young couple in the park?\" Charlotte inquired.\n\n\"It's not my fault they were skinny dipping in the pool. And it's not my fault the guy wanted to look at me more than his girlfriend.\" Jean added.\n\n\"It sounds to me, like you girls have had an active night.\" Mary added.\n\n\"Not like last night when we took a naked walk in the park on the other side of town. Jean convinced me to take off my clothes and have Josh lock our clothes in the car. Then, we must have walked five miles completely naked with the guys following us for protection. I was so turned on by the time we got back to the parking lot; Josh did me while I was bent over the hood of the car on one side and Cody did Jean on the other side.\" Charlotte said.\n\n\"Like both of you did tonight, we didn't stop when a car pulled into the parking lot. We were lucky it was some kids we know but it could have been the cops and we could have gotten arrested. That's why we came here tonight, there's usually no one here.\" Charlotte added.\n\n\"I don't want to break up this party but we have to get going. Joe and I have to get that car back home before it gets daylight. Come here, I want to hug both of you. Thank you for making our night very special. As much as I hate to say it, we do have to get going; I don't want him to get into trouble. If you'd like we can exchange phone numbers and you can text me and if I'm not working, I'd love to do this again.\" Mary said.\n\nAll six of them walked over by the limo where they stood and added each other's number to their cell phone contact list. When they finished, Joe and Mary gave hugs and kisses to the girls while Joe only shook hands with the guys. With last second goodbyes, Joe and Mary got back into the limo and drove out of the parking lot, leaving the other four behind.\n\nJoe didn't bother getting dressed so both of them rode in silence for almost a minute before Joe asked, \"Can you fucking believe it? I don't get laid for a long time and suddenly I get two willing and different girls in less than twenty four hours.\"\n\nMary smiled saying, \"Your twenty four hours aren't up yet so there may be more pussy for you before that time has passed. I'm not done with you yet and then there's Shelly, Marion, Ashley, Debbie, Patty, Beth and last but not least Barbie. And all of them are going to stand in line behind me!\"\n\nJoe looked at Mary with a surprised look before he could say, \"Are you serious? Would you share me with all those other girls?\"\n\n\"Those other girls,\" Mary giggled, \"Will be more than happy to spend some time on the end of your tool Joe. At the Morrison's house, all of us share, but only if the participants are willing.\"\n\nJoe pulled up to the security gate and pushed his code number into the keypad. He drove up and parked in front of the house. The two of them sat in silence for a few minutes looking out the windshield before Mary asked, \"Has it really been a long time since you've been with a woman?\"\n\nJoe smiled as he looked down at Mary, cuddled against his bare chest, under his arm, \"Yes, between this job and being a comedian and being out almost every night until early in the morning, I only go home and collapse on my bed, alone. I don't have much of a love life, or at least I didn't.\"\n\n\"Come on, let's go in and get into bed. I want to get a couple of hours of sleep before we get on that plane. I want both of us to join the mile high club while we're on the way to Hawaii.\" Mary said in almost a whisper.\n\nThey got out of the car and Joe reached back in and picked up his clothes before he locked the limo and both of them walked up on the porch. Mary unlocked the door and both went inside. \"I want to check the house and set the alarm before we go upstairs, you can wait for me by the stairs.\"\n\nMary took a quick tour through the downstairs before she went into the office and turned on the alarm. When she came out of the office she met Joe at the bottom of the stairs and they ascended the stairs together. Mary didn't want to disturb Shelly so she walked past her bedroom to the master bedroom. Joe put his clothes down on the chair and Mary said, \"Come on; let's take a shower before we go to bed. I have to douche anyway.\"\n\nBoth of them took care of all their bathroom needs and then showered before returning to the bedroom where Mary turned down the sheet and crawled up on the huge bed. Joe followed her and once they spooned together in the center of the bed, with Joe behind Mary, and his arms around her pulling her close to him, they fell asleep immediately.\n\n****************************\n\nAshley's cell phone rang and she saw it was Ted Johnson calling her and she immediately thought something bad had happened at the Morrison's house. She grabbed her phone and in a concerned voice she quickly asked, \"Hello Ted, this is Ashley. Is everything alright?\"\n\nTed was quick to reassure Ashley there was nothing wrong. He smiled when he heard Ashley say, \"Whew! They've been through enough; they don't need any more trouble.\"\n\nHe agreed with Ashley before he said, \"The reason I'm calling you is I want to ask you if you, your brother and his girlfriend Sarah want to take a trip for the weekend. I know you brought your brother Paul and his girlfriend Sarah to the last party we had at the Morrison's estate. However you've never mentioned whether or not you have a boyfriend. If you have a boyfriend, you can bring him too.\"\n\n\"Where are we going Ted?\" Ashley inquired\n\n\"Marsh, our nearest neighbor, has invited us to go to his resort in Hawaii.\" Ted replied in a normal voice.\n\n\"WHAT?\" Ashley screamed, \"You're asking me to go to Hawaii for the weekend as calmly as if you'd ask me out to dinner? OH GOD, YES! YES, I'll go, oh shit, how exciting!\"\n\n\"We will be staying at a private resort where nudity is encouraged but not mandatory so you can pack whatever you want. You'll need at least one set of casual clothes in case we travel some place outside of the resort. When you come to work in the morning, bring your travel bag with you. The helicopter will be here at one o'clock tomorrow to pick us up.\" Ted explained.\n\n\"You mean to tell me we are going to fly all the way to Hawaii in a helicopter?\" Ashley questioned.\n\nTed laughed as he said, \"No, no! The helicopter will pick us up and take us to the airport where we'll get on one of Marsh's planes. Then we'll fly to Hawaii.\"\n\n\"Do you think you; Paul and Sarah can take the time off to go? Also if you have a boyfriend, bring him too.\" I need to know so I can give Marsh a number of people.\" Ted inquired.\n\n\"Yes,\" Ashley said, \"Paul is out with Sarah right now, so I'll have to call him on his cell phone and ask him. We'll have to get someone to fill in for us but that shouldn't be a problem since we have some other friends in the cleaning business.\"\n\n\"Please let me know as soon as you can so I can get back to Marsh.\" Ted said.\n\n\"Thank you for thinking of us Ted. Talk to you soon. Bye.\" Ashley said.\n\n****************************\n\nTed hung up from Ashley and dialed Debbie's number. Because Ted normally didn't call either of the house cleaners after they left the Morrison's house, Debbie also answered the phone with a certain amount of concern in her voice. Ted reassured Debbie nothing was wrong and went on to ask her if she and her family would like to go on a weekend trip. Once again, Ted intentionally withheld the trip destination until he was asked. Like Ashley, Debbie went wild when Ted told her the trip was to Hawaii. \n\nThe only difference between the two calls, Debbie, Joe, her father Gus and her mother Heidi were on the couch. Her mom Heidi was riding Joe's cock and Debbie continued to ride her father's cock, while talking to Ted.\n\nDebbie asked Ted to hold on a second as she talked to Joe and her parents. Debbie didn't cover the mouth piece on the phone so Ted could hear the whole conversation. They openly discussed who they could get to cover them while they were gone. Within a few minutes they solved their coverage problem and Debbie said to Ted, \"Yes, we can go. We have some family members who will take care of our business for us, while we're gone.\"\n\n\"You can bring Abby with you as well.\" Ted added.\n\n\"Ok, this will be so wonderful. Ted, please add Abby to the list, I'm sure she will go. I'll call her in a few minutes.\" Debbie squealed. \n\nFinally Debbie said, \"Ted, thank you so much for asking us.\"\n\nTed reminded Debbie that Marsh was sponsoring the trip so she could thank him when she saw him. Debbie reminded Ted, \"I've never met him Ted, so you'll have to do the introductions when he gets there.\"\n\nTed gave Debbie a brief description of what to pack for the four day trip. They talked a little longer and then Ted said good night and goodbye to Debbie and then hung up the phone.\n\nDebbie looked at her mom and dad asking, \"Can you believe this? We are going to Hawaii! Oh my God, this is so cool! Boy I'm glad we got the Morrison account.\"\n\nGus spoke up saying, \"Yes, the money is good and always on time, unlike some of our other accounts. I wish they'd all pay like the Morrisons do.\"\n\nDebbie reminded her parents, \"Don't forget, when they have a party, they include us and that's something the other accounts don't do.\"\n\nAll four of them settled back into their rhythm and all of them experienced wonderful orgasms.\n\nAfter showering and getting cleaned up, Debbie called Abby and as Debbie predicted, Abby wanted to go. Debbie told her to be at the Morrison's estate around noon time. When she hung up the phone, everyone busied themselves by packing a bag for their trip. \n\n****************************\n\nTed made another call to Bill Smith the pool cleaner and after talking to him for a few minutes, he found out Bill reluctantly couldn't go. Ted reminded him that he'd most likely miss a good time.\n\nBill replied, \"We are right in the middle of building a giant pool and there's no way I could take off because we've been working every weekend for the past three weeks. So for me, I'd have to be away from my job for four days and the boss wouldn't like that.\n\nBill thanked Ted for remembering him but it just wasn't possible for him to go. They shared goodbyes and both men hung up the phone.\n\n****************************\n\nTed had to go out to the kitchen to find the next number he wanted to call. Sue Taylor was the delivery person who was such a joy to have around. The last time she delivered pizza she even brought some extra food to share in anticipation of being invited to stay.\n\nHe found her number on Terri's important number list and dialed Sue's cell phone. When Sue saw the call was coming from the Morrisons she quickly pushed the icon on her cell and said, \"Well, good evening. Are we going to have another party soon?\"\n\nTed cleared his throat before he said, \"As a matter of fact, yes we are going to have a very big party and you're invited. But the real question is would you be able to take off the next few days to attend the party?\"\n\n\"WHO IS THIS?\" Sue asked.\n\n\"I'm sorry, Terri usually calls you. Hi Sue, this is Ted Johnson at the Morrison's residence.\"\n\n\"HOLY SHIT!\" Sue exclaimed, \"Ted ... what kind of party are we having that would require me to take off a few days?\n\nWith on smirk on his face Ted replied, \"A party to crash a party in Hawaii. Do you think you want to go and be part of the excitement?\"\n\n\"Does a bear shit in the forest?\" Came Sue's reply.\n\n\"Of course I want to be a part of crashing a partyyyy .... HEY! ... WAIT A MINUTE! .... Did you say in HAWAII?\" Sue shouted into her cell phone.",
        "\"Yes, that's what I said; the party we are going to crash is in Hawaii. Do you want to go with us?\"\n\n\"How are we getting there?\" Sue inquired.\n\n\"Do you remember that doctor who was here the last time we had pizza and salads delivered?\"\n\n\"Yes.\" Replied Sue\n\n\"Come to find out he has a large plane and all of us are going to fly to Hawaii tomorrow. If you want to go, please be at the Morrison's house tomorrow around noon. We are going to be picked up at one o'clock and taken to the airport. I need to know if you want to go so I can give Marsh a list of people going.\"\n\n\"Oh my God yes, of course I want to go. I might be looking for another job or jobs when I get back but hey, I've never been to Hawaii and the chances of me going on my own are slim to none. Yes Ted, count me in. I'll be there will bells on.\" Sue added.\n\n\"Oh WAIT ... wait,\" Sue suddenly realized there was something missing.\n\n\"How much is it going to cost for this trip to Hawaii to crash Dan's party?\" Sue inquired.\n\n\"The trip is free; Marsh isn't going to charge us for the flight or the resort since he owns both. We're going to be staying at his private resort which is clothing optional with the option leaning toward no clothes. So pack light and you'll really only need one set of casual clothes or dress in case we wander off the resort for any reason. Sue I'll see you tomorrow around noon out here. I have to make a few more phone calls so I have to go.\" Ted finished saying.\n\n\"I can't believe we're going to Hawaii but I'll be there tomorrow. See ya and thanks for remembering me.\" Sue said before he pushed to red icon on her phone that ended the call.\n\n****************************\n\nTed had to pause and look up Jeff Simpson's new number and when he called it, Tina answered the phone.\n\n\"Hello Ted,\" Tina said, \"How may I help you this evening?\"\n\n\"I'm doing very well Tina, and I think after we talk, you'll be feeling excellent.\"\n\n\"What's up Ted?\" Tina asked.\n\nTed responded, \"Is Jeff around so he can get on an extension phone? If so, please ask him to pick up.\" \n\nTed listened as Tina called to Jeff and told him to pick up his phone in the computer room. She told him Ted was on the phone and wanted to talk to him.\n\nWithin seconds Ted heard Jeff say, \"Hello Ted, what may I do for you tonight?\"\n\nTed laughed before he responded in his best God Father (Marlon Brando) voice by saying, \"Tonight I'm the guy who's going to make you an offer, you can't refuse.\"\n\nEveryone laughed for a few seconds before Ted followed it up with, \"So pack up a couple of suitcases with shorts and tee-shirts or tank tops and at least one set of casual clothes for each one of you and be at the Morrison's house tomorrow before one o'clock.\"\n\n\"That's a good one,\" Jeff said, \"What do you really want Ted?\" \n\n\"What you don't believe me?\" Ted inquired. \"I'm hurt.\"\n\n\"Ok Ted, let's back up here. First I have to work tomorrow.\"\n\n\"Would it be possible,\" Ted asked, \"For you to take a half a day off tomorrow and all day on Monday? So you can have almost a four day weekend.\"\n\n\"I suppose anything is possible but let's talk about why you want me to take the time off.\" Jeff stated.\n\nTed laughed as he said, \"Ok, without going into all the details on this call, I received a call from Marsh Mitchel, he's our neighbor over here, he owns the resort in Hawaii where Dan is going. Marsh offered to take all of us to his private resort for the weekend. He has his own plane so it won't cost you anything. That's the deal, all you and your family have to do is be at the Morrison's house tomorrow before one o'clock.\"\n\nTed heard Tina squeal and scream into the phone and he had to hold his phone out away from his ear. When she calmed down Ted listened to Jeff and Tina talk back and forth to each other. It was clear that Jeff had to be convinced to take the time off. Finally Ted broke into their conversation and reminded Jeff that his boss was taking a four day weekend and if there were any problems with him doing the same, Dan could straighten that out on Tuesday.\n\nJeff took a few more minutes to convince before he finally agreed to take off all day on Friday and Monday. When he announced he would take off Tina quickly said, \"Bye Ted, I've got to go hug my man.\"\n\nTed and Jeff were talking when Tina rushed into the computer room and started kissing Jeff and thanking him for taking the time off. Jeff listened to the last bit of information from Ted before he said, \"Yes, thank you for thinking about us and we'll be there tomorrow. Ted, I've got to go, there's a woman here attacking my body. Have a great night, bye.\"\n\nWhen Jeff put the phone down, Tina wrapped herself around her husband and hugged him tightly. She kept thanking him for taking the time off so they could go on the short vacation. She was making so much noise all three kids came running into the room to see what was happening. When Tina told them where they were going, John and Abby were the only two who really understood where they were going. Deana was excited because everyone else was excited. \n\nThe family talked for a little while longer and then the kids went back to the living room to watch TV. Jeff and Tina walked out to the deck and talked quietly about the trip. Jeff said he would call his supervisor first thing in the morning.\n\n****************************\n\nAmy White looked at the alarm clock with half open eyes and suddenly realized they had over slept. She rolled towards the middle and said, \"Ken, it's late we have to get up.\"\n\nKen opened his eyes when Amy said, \"It's almost seven o'clock! Wow, of all mornings to oversleep! I have so much to get done before ...\"\n\nKen quickly sat up in bed and rubbed the sleep from his eyes before he bailed out of bed. Both of them went into the bathroom and Ken lifted the toilet seat and took a leak while Amy started the shower. When he was finished Ken moved quickly over to the shower while Amy put the seat back down so she could sit down and pee. She washed her hands and left the bathroom for a few minutes so she could start the coffee. When she returned to the bathroom she stepped into the shower just as Ken was finishing. Amy had to wash the outside of her body and she had to douche to get all of the cum out of her, especially after all the activity last night.\n\nAmy smiled to herself as she re-called all the events of the prior evening. Especially how Hank had chosen to sit next to his mom during dinner and his hands were busy doing other things besides eating. June had a surprised look on her face when Hank slipped his left hand between her thighs, while he continued to eat with his right hand. She surprised herself when she spread her legs further apart and gave him full access to that area of her body, even though he was only rubbing his hand back and forth a couple inches of her mid thigh. \n\nIt became apparent that June wanted to be touched. She slid her ass forward and opened her legs further in an attempt to get her son's hand closer to her pussy. She didn't care if he only bumped his finger against the outside. She longed for him to touch her like he had earlier in the day. Remembering what he did to her, was now driving her wild and making her pussy even wetter. \n\nWith dinner finished Ken got up and went into the living room and sat down in his recliner while everyone else pitched in and cleaned up the table and the dishes. June volunteered to wash the dishes and Hank volunteered to dry them. Working side by side with his mom, he kept bumping his hard cock into her. Amy remembered the look on June's face the one time he hugged her from the back while he waited for the dish she was washing. Hank's cock slipped into the space between the top of her thighs and he reached around in front of her and cupped her breasts, one in each hand and gently squeezed them. At the same time he pushed his cock forward so it nestled in her feminine moisture.\n\nJune looked over her shoulder at Hank asking, \"Do you know what you're doing to your poor mother?\"\n\n\"Mom, I'm not going to beat around the bush, I know you like what I am doing because you're pussy is leaking. Sarah and I know you miss dad and it's been a long time since you've had any male companionship. Mom, Sarah and I really appreciate the sacrifice you've made to raise us by yourself but both of us are old enough now and it's time for us to give something back to you.\n\n\"We've been saddened many times when we heard you in your room crying. We've also heard you when you've had orgasms; we know the different sounds you make.\"\n\nHank continued with, \"Mom, when you allowed me to take your panties off this afternoon and I finally had the chance to see how totally beautiful you are, I meant what I said. I want to continue doing what I'm doing and I want to do more with you. I want to make love to you and show you how special you are to me.\"\n\nTears escaped June's eyes and Amy was quick to give a tissue to her. June dried her hands and turned to face her son. She stood leaning up against the counter with her feet parted and Hank stepped forward to wrap his arms around his mother. At the same time his cock rested in the crack of her pussy lips as he said, \"Mom, I didn't say that to hurt you, I love you and I'd only wished I told you sooner. You are a beautiful woman and I really would like it if you became my lover.\"\n\nJune cried into Hank's shoulder as she repeated, \"I love you son.\"\n\nHank pulled back a little and changed the angle of his hips and slowly moved forward. His cock penetrated the outer lips of his mother's pussy. He looked into his mom's eyes and said, \"Mom, I am at the entrance of your body. I want to make you my lover but not like this. Can we go home?\"\n\nJune blinked a few times and wiped the tears from her eyes before she said, \"Yes ... yes I want you to take me home. If I'm going to make love to you, I want us to be in my bed. I love you son and I appreciate you stopping.\"\n\n\"Amy,\" June said, \"We have to go home. Thanks so much for all you've done, but I want to take my son home and make love to him. I hope you understand.\"\n\n\"June you don't have to apologize or explain anything to me. I told you to follow your heart and it seems both of you have more feelings for each other than you've ever expressed before.\"\n\nJune looked at her son saying, \"Come on lover, I have plans for you. I'm only going to wear my tank top and my shorts home, Amy do you have a bag I can put my underwear in?\"\n\nSarah came out to see what was happening and when she found out her mother and brother were going home she asked Angela if she had a sleep shirt she could borrow so she didn't have to get dressed. Both Sarah and Angela went to her room and found a sleep shirt that barely covered Sarah's pussy. It did little to hide her ass cheeks.\n\nThe three of them kissed and hugged Amy and Angela. Brain and Andy also got hugged and kissed by June and Sarah but they only shook hands with Hank.\n\nAmy opened the door and the three of them rushed out and were almost running when they got to the sidewalk. Amy and her kids watched them disappear past the neighbor's house before she closed the door. Brian said, \"I think Hank is going to have his hands full tonight.\"\n\nAmy vividly remembered as soon as the door was closed Angela said, \"Let's go to my room Brian. I have an itch that needs to be scratched.\"\n\nShe also remembered Andy standing next to her with his arm around her waist as they watched Brian and Angela scamper away holding hands. Andy looked up at his mom and said, \"Come on mom, let's go watch a movie. We can sit on the couch together.\"\n\nAmy smiled, \"Would you be so kind and go get a couple of towels for us to sit on.\"\n\nAndy ran to the cupboard and pulled out a couple of towels and caught up with his mom as she walked into the living room and dimmed the lights. They walked over to the couch where Amy took one of the towels and spread it out over the cushion at one end of the couch. Andy pulled the coffee table closer to the couch so the remote control was reachable. When he looked, he saw his mom was sitting at an angle with her upper back against the arm of the couch. She purposely spread her legs so Andy had an unobstructed view of her open pussy. Her right leg was bent at the knee with her foot flat on the cushion, while her left foot was also on the cushion but her bent knee rested on the coffee table.\n\nAndy looked at his mom's pussy before he looked up at her face to see she was smiling at him. \"Spread your towel out right down there,\" Amy said, \"I want you to sit between my legs.\" \n\nAndy spread his towel out between his mom's legs and smiled broadly as he moved closer and settled right next to the object of his desire. He looked down, \"Mom,\" Andy asked, \"Your pussy looks so small but I've seen you take dad and Brian's cock in there, how do you do it?\"\n\n\"Honey,\" Amy replied, \"My pussy will accommodate a very large cock as long as the owner of that cock goes slow and allows my pussy to adjust to the size.\"\n\n\"All I know right now is I love seeing you and the other females nude. My cock gets so hard and I have to jerk off and make it cum.\" Andy said. \n\nAndy could smell the delicious aroma of his mom's pussy and when he looked down at it, he could see her feminine moisture making her pussy shine. He looked up at his mother asking, \"Does it excite you to have me sitting here between your legs? Your pussy looks like its leaking.\" \n\nAmy smiled at Andy and said, \"Girls are almost like guys, we get excited too. However, instead of a girl getting a hard-on we secret fluid that will lubricate our pussy to help a cock slide in.\"\n\nAndy moved closer to his mom until his hip was pressed against her open pussy. He could feel the warmth and the moisture against his skin.\n\nThey had been sitting there for about a half hour when the phone rang. Andy moved so his mom could get up and answer it. \n\nAmy picked up the phone and after greetings were exchanged, Shelly asked Amy if Ken could pick up the extension phone so both of them could hear the news together. She walked to the bedroom where Ken was sitting up reading a book when she entered. Amy said, \"Your sister is on the phone and wants to speak with us together so pick up the phone.\"\n\nKen picked up the phone and greeted his sister warmly and they talked about a little bit of everything before Ken asked, \"Sis, why did you call?\"\n\nShelly hesitated before she asked, \"Ken, ummm, do you think you can get off tomorrow before noon and take off on Monday too?\"\n\n\"Whatever for?\" Ken asked. \"That's really short notice.\"\n\n\"Well,\" Shelly started, \"I just talked to Ted and our new neighbor Marsh Mitchel and it seems Marsh is going to take a short trip over the weekend and has invited us to travel with him. I talked to Marsh and asked him if I could invite all of you along on the trip and he said I could. So, do you want to go away for the weekend?\"\n\n\"Shelly, where's this trip to?\" Ken asked, \"I'm sure I can take the time off but I need more information.\"\n\n\"Marsh is taking us to the north shore of Oahu, Hawaii.\" Shelly replied flatly.\n\nAmy was the first to ask, \"WHAT DID YOU SAY? Did you just ask us to go to Hawaii?\"\n\n\"Yes, that's where we're going and if you'd like to come along, I need to know so I can tell Ted.\"\n\nShelly continued by saying, \"If you are going, you'll need to be here at the Morrison's around noon or a little after so all of us can get on the helicopter and fly to the airport.\"\n\n\"Shelly do you realize you are calmly asking us to go to Hawaii as if you were asking us to take a drive to the \"Show Me\" state?\" Ken inquired.\n\n\"Yeah, well I was pretty excited when I was first asked about going too, but since I've been living here at the Morrisons, I've come to learn that anything can happen at any time so I've got to be ready to make the change.\" Shelly replied.\n\n\"If you want to go, make sure everyone has at least one change of casual clothes in case we go somewhere other than the private resort, where we'll be staying.\" Shelly added.\n\n\"OK, so now you've fed us the story about a trip to Hawaii and the private resort,\" Ken stated, \"How much is all this gonna cost us?\"\n\n\"Oh yeah, I forgot to tell ya,\" Shelly said with a giggle, \"The trip is free! Just be here in time before the helicopter comes to pick us up.\"\n\n\"Are you serious?\" Amy inquired, \"We're going to Hawaii for three days and it's not going to cost us anything? Not even for the resort?\"\n\n\"That's right Amy,\" Shelly replied, \"Pack your bags and be here tomorrow with the kids, we're going to enjoy the sun and surf.\"\n\n\"I can't believe you sis,\" Ken said, \"You're full of surprises lately. Thank you so much for thinking about us. Thank whoever is responsible for making the trip possible. I love you.\"\n\n\"Yes,\" Amy added, \"Thank Marsh for including us, we'll be ready to go.\"\n\n\"Get a good night's rest and get ready to party. Talk to ya tomorrow. Have a great night, good bye.\" Shelly replied.\n\n\"Goodnight sis and thanks again.\" Ken said\n\nAmy looked at Ken with a twinkle in her eyes as she said, \"Oh Ken, that's fantastic, I can't wait. We'll wait and tell the kids in the morning, I don't want them to be up all night. I wonder if we'll be allowed to be nude on the beach. I'd love to enhance my tan.\"\n\nKen put his book on the night stand and motioned for his naked wife to walk towards the bed. He rolled up on his side and pulled Amy's hips close to his face and planted a kiss on her pussy. Amy purred before she asked, \"Is that the beginning and end or is there more?\"\n\nKen pulled his wife down on the bed and he moved until he was between her spread legs. Without a word he buried his face in her pussy and attacked it like a wild cat. Amy survived three explosive orgasms before Ken came up for air. When he did, his face was coated with his wife's juices and without hesitation he kissed her.\n\nFor the next hour and many different positions later, both of them were totally exhausted. After a brief rest both of them made it to the bathroom to pee and then came back to their room and collapsed on their bed. They fell asleep in each other's arms almost immediately.\n\n****************************\n\nI woke up when my bladder was about to overflow. I unbuckled the bed belt and my movements caused my two companions to stir and then wake up. We greeted each other and then I got out of bed and headed straight for the bathroom to take a leak.\n\nI was standing before the toilet draining my bladder when I felt two warm bodies, one on each side of me, hug me. I looked at each of them and then shook my cock a few times when I finished peeing. I quietly asked, \"Whose next?\"\n\nKim sat down on the toilet as I stepped away and into the loving arms of Beth. We hugged and avoided kissing since I had a very bad case of dry mouth. We watched Kim wipe her pussy and stand up. Beth was next to sit while Kim and I hugged each other.\n\nI excused myself and went out into the bedroom and made a call for Linda. Jenny told me she was not available at the moment and asked if she could help me. I asked Jenny to come to my room.\n\nI went back into the bathroom to brush my teeth and saw Kim and Beth showering together. While I was brushing my teeth, Jenny called out, \"Dan?\"\n\nI stepped to the bathroom door and held up one finger and then changed my mind and waved for Jenny to come into the bathroom. I stepped back over to the sink and finished what I was doing and then rinsed my mouth. Meanwhile Kim and Beth were talking to Jenny.\n\n\"Is everyone sleeping?\" I asked.\n\n\"Everyone in the lounge is sleeping.\" Jenny replied.\n\n\"We have a couple of hours before we land. During that time we have a buffet we want to serve so we can get the galley cleaned up.\" Jenny reported.\n\n\"You said Linda is unavailable, what's she doing?\" I asked.\n\n\"Ummm... Mr. Banks asked her to come into his room shortly after he went in. She hasn't come out yet.\" Jenny said hesitantly as if I would be upset.",
        "\"Ok, I would like you to wake up everyone sleeping in the lounge. Tell Terri, Hanna, Kelly and Allison they can come in here. We'll need some additional towels if all of them want to shower.\" I said.\n\nJenny said, \"We have a large supply of towels right over here.\" Jenny opened a little door and showed me a stack of white towels.\n\n\"Ok, tell the ones I mentioned, they can come in here to get cleaned up. The others can use the bathrooms and showers down the hall. Then I'd like for you to call each bedroom and ask the occupants to get up because we'll be serving the buffet in a half hour. Call Jerry and tell him so he can be ready. Let me know if you have any problems.\"\n\nJenny left our room and a few minutes later, there was a knock on our door and Kim called out, \"Come in.\"\n\nTerri led Hanna, Kelly and Allison into our room. All four of them had to pee so while I showered they took turns peeing. I told them if they wanted to shower, there was time before the buffet was served. Within a few minutes all four of them were naked. I finished my shower and got out and let them have it.\n\nAfter all of them finished showering, they got out and dried off. They came into the bedroom and realized they didn't have clean clothes to put on. Kim said, \"I'm only going to wear my blouse and shorts. I'm going to leave my bra and panties in here. All of you can do the same if you want to.\"\n\nI slipped back into my shorts without my boxers and then pulled on a tee shirt. Beth watched all of us get dressed and I noticed she seemed a little nervous. I asked her if she wanted to wear something and she replied, \"Dan, I'm nervous but when we meet Leyanni in a couple of hours, she's going to be completely naked. Both of us agreed it might lessen the shock for the others, if I did my presentation in the nude. You aren't forcing me to do anything so don't worry. However, I think I want to go down to the dining room now while the others are getting ready. That way I can greet everyone as they come into the room.\"\n\n\"I'll stay naked if you want me to.\" Kim added.\n\nSuddenly all the girls in the room said, \"I'll stay naked too.\"\n\nBeth looked around the room and smiled as she said, \"Thanks for the offer guys, but I can handle this.\"\n\n\"BULLSHIT!\" Allison yelled before she added, \"You don't have to do anything alone. I'm part of this team, so fuck these clothes. I'm staying naked too.\" Allison tossed her clothes on the bed.\n\nSuddenly clothes were flying through the air towards the bed. I stood there stunned that every one of the girls stood naked and determined to support Beth. I started to take off my tee shirt and Kim stopped me by saying, \"Dan, you know there's a double standard. Men can't get away with what women can. All of us in this room know you were in support of our actions by your attempt to undress, but keep your clothes on for now.\"\n\nBeth looked around at all the nude females and said, \"I love all you guys, thank you so much for your support.\" Suddenly all of the females joined together in a group hug. I watched for a few seconds and then Terri reached back and offered me a chance to join them, which I did willingly.\n\nA few minutes later I opened the door and looked out. I didn't see anyone so all six women walked out of the room. We walked down the stairs and met Jenny when we opened the dining room door. She was helping Jerry set up for the buffet. When she saw the girls were naked she asked, \"What are you doing?\"\n\nAllison quickly explained why all of them were nude and Jenny said, \"When I finish setting up, I'll join you. After all, I'm here because of Beth, and I support her completely.\"\n\nWe mulled around and fixed coffee and smelled the wonderful smell of cooked bacon when Jerry brought out a pan and set it in the chafing dish rack. There was a large selection of juice, fresh sliced fruit and yogurt. When the door opened all of us looked towards the door and saw Jenna, Kevin, Audrey, Frank and Katie walk in. Audrey, Frank and Katie stopped dead in their tracks and looked at the six naked women.\n\n\"WOW! I didn't know we could be nude on this flight.\" Jenna said, \"Count me in.\"\n\nWithout hesitation Jenna peeled her shirt and shorts off in less than a half a minute. Kevin looked around before he pulled his shirt off and just as he was ready to drop his shorts Kim said, \"Hold that thought Kevin. We don't want to embarrass Audrey or Katie.\"\n\nAudrey asked, \"Why are all of you naked?\"\n\nBeth opened her mouth to speak when the door opened and Joanna, Tom, Janet, Tom Jr., Faith, Brenda and Linda walked into the room. The only one who didn't stop and stare was Joanna. She walked over to the coffee and poured herself a cup. \n\nEveryone else came to a halt and the only other one who took everything in stride was Tom Sr. I watched him without staring as he looked at Beth and then at Kim. Jenna walked over and stood next to her mother and Tom's eyes fell on Jenna's naked body and he openly stared at her. The smile that spread across his face told me that he really loved the view of all the nude females. \n\nFaith turned a very deep red and buried her face in Tom Jr.'s shoulder. Janet was the first one to recover enough to ask, \"What the hell is going on here?\"\n\nBeth was already facing everyone so she held up her hands saying, \"Please have a seat and I'll explain.\"\n\nJenny appeared out of the kitchen holding a stack of towels but more importantly she was also nude. There was some mumbling between Faith and Janet but they finally took a seat and didn't stomp out. Everyone who was nude took a towel from Jenny and spread it out on their chair before they sat down.\n\nBeth moved the chair out of the way and stood at the end of the table in full view of everyone. She wanted her whole body on display while she talked. Beth even parted her feet so there was a space between her upper thighs and her bald pussy was mostly on display. I noticed Tom, Tom Jr. and Frank were staring at Beth's nude body. I looked at Faith and saw she was looking anywhere except at Beth. I stepped over and stood beside Beth before she began to speak. Once everyone was seated she said, \"I want to thank all those who are naked for their support while I give this speech.\"\n\n\"Dan mentioned earlier there was a fire at the resort, on the North Shore of Oahu, where we had our original reservations. However, I purposely didn't give him all the information I learned about our second resort reservations because I was trying to figure out how to tell all of you. The best kept secrets are the ones you don't tell anyone.\" Beth stated.\n\nI saw Tom Sr. smile because he knew different.\n\n\"I will confirm,\" Beth said before she paused, \"The cabins I had originally reserved, at the first resort, were on a private beach. Sometime yesterday, a fire sweep through one or more of them, resulting in the resort calling me and cancelling our reservations. That was yesterday at lunch time.\" \n\nJanet gasped and said, \"I hope no one was injured by the fire.\"\n\n\"Actually Janet,\" Beth said, \"Three people were air lifted to the local burn center and two young people on their honeymoon were killed in the fire. There's an investigation into what caused the fire, so the whole resort is closed.\"\n\nFaith finally looked towards Beth saying, \"That's absolutely terrible news.\"\n\n\"Yes it is,\" Beth replied, \"And I feel very bad for the families of that tragedy. It must be devastating for them.\"\n\n\"We were at lunch with executives Dr. Marsh Mitchel and his fianc\u00e9 Becca Andrews of The Turner Company, when I received the call. After the call, I thought we were going to have to cancel this trip, at least for now until I could find other accommodations. My sadness over the fire and the turn of events was registered on my face and when I returned to the table I whispered to Dan what the call was about and Becca overheard me. So I confirmed our reservations had been canceled.\"\n\n\"Dr. Mitchel recently took over Dr. James Turner's companies and is the new owner. Much to our surprise, Becca informed us The Turner Company owns a private resort on the island of Oahu. Without any hesitation she called the resort manager, Leyanni Lau and asked her if she had any open cabins. To make a long story short, she has eight cabins, in the coconut grove, on a very private beach. Those eight cabins are now reserved for us.\" Beth looked around the room as she finished the sentence.\n\n\"Now for the reason I'm standing here nude and all these ladies are nude in support of me.\" Beth said as she pushed her chest out a little more and sucked in her tummy, \"When we arrive at the resort, we will be greeted by a beautiful Hawaiian lady named Leyanni Lau. She will be nude. When I called her to tell her how many people we have on this trip that are coming, she informed me that she is a nudist and she will be nude when she greets us. She also told me that she doesn't like textiles and will encourage all of us to leave our clothes in the cabin and enjoy the freedom of nudism while we are at the private resort. I don't want to scare any of you into thinking you have to be nude because you don't. Leyanni told me all of you can wear clothes if you want to. She is not going to force her lifestyle on any of you.\" Beth stated clearly.\n\n\"The cabins we're going to be staying in are luxury cabins in a secluded part of the resort. If we see anyone, it's likely to be someone from our own party. Leyanni did not rule out completely that one of the people on R&amp;R, staying at the resort, won't wander through. However there won't be a line of them. Each cabin sleeps six people comfortably and we have access to eight cabins, as I said. Since we have only twenty four people on this trip, I think we can figure out who we want to share a cabin and or a bed with.\"\n\nBeth continued by saying, \"Unlike the original resort where we had reservations, we won't have to take an hour bus trip from the airport to the resort. Leyanni will have Turner Company helicopters at the airport to transport us from there to the resort. Captain McGrath won't have to worry about this plane while we're on the ground. It will be serviced by the Turner Company ground crew, while we are enjoying the sun, beach and water.\"\n\n\"Now, while we're at the resort Leyanni told me she is going to have a couple of surfing instructors and a couple of dive boats with guides available to us. Leyanni is offering us far more amenities than the other resort had to offer. The main lodge at the resort has a cafeteria where we can eat, or there's a restaurant with world renowned chefs to prepare our meals. For those of you who choose to be nude while we're at the resort, you'll be happy to learn that you won't have to worry about being dressed to eat in either of the places I mentioned. All of this is being given to us as a gift.\"\n\nBeth looked around the room at everyone's face. Suddenly it registered in Tom Sr.'s brain first. He asked in an astonished voice, \"Are you saying, the Turner Company is going to allow us to stay at their resort for free, all we have to pay for are our meals?\"\n\nBeth smiled and looked up at me then back around the room, \"No Tom, what I said was, staying at the Turner Company private resort, is a gift to us. We are going to be the guests of The Turner Company. Our meals and lodging along with all the amenities I mentioned, oops I forgot to mention the championship eighteen hole golf course, are part of the gift and are free of charge. The only thing this trip is going to cost the company is the use of this plane and the salaries of the flight crew.\"\n\n\"Tom jumped up and pulled his shirt off as he said, \"HOLY SHIT! For an offer like that, I'll be naked as well.\" Tom didn't stop until he was naked.\n\nI looked at Kevin and nodded my head slightly and both of us were naked in a heartbeat. Tom looked at his family and said, \"I don't know about you guys but I don't have that much longer to experience this stuff. I'm not going to tell any of you what to do but I sure hope all of you will join me in this once in a life time adventure.\"\n\nBrenda, Audrey, Tom Jr. and finally Janet stood up and started taking off their clothes until each of them were naked. Audrey ran over to her father and hugged her naked body against him saying, \"Daddy, I love you and I'll do anything to make you happy for the rest of your life. I'll stay naked and we'll play on the beach and make memories both of us will cherish.\"\n\nTom Jr. looked at his wife Faith asking, \"Won't you join us dear? I'll help you undress since I know how bashful you are.\"\n\nFaith looked up into her husband's face before she rose from her chair on unsteady legs. In an unsteady voice, just above a whisper she said, \"If your father wants me to join him, he'll have to be brave enough to come over here and undress me. That's the only way I'll remain naked while we're in Hawaii.\"\n\nAll eyes fell on Tom Sr.. Tom was stunned ... no ... in mild shock would be more like it. He looked at his wife Janet and then at his son before he looked at Faith. Slowly, Faith side stepped away from the table where there was more room. Her eyes never left her father-in-law's eyes. It was like watching TV in slow motion as Tom stepped past his wife and daughter and with his hard cock leading the way; he walked over to stand in front of Faith.\n\nWithout looking down, Faith reached out and wrapped her small hand around her father-in-law's cock. Faith held her eye contact with Tom as she slowly moved her hand back and forth on his shaft. Everyone in the room was quiet as a church mouse, watching Tom and Faith.\n\nHolding eye contact with his daughter-in-law Tom reached out with visibly shaking hands and tucked them under the hem of her tee shirt. Slowly he began to lift it up and automatically Faith let go of his cock and raised her arms above her head to allow her father-in-law to remove it completely, from her body. Faith put her arms back down and immediately reached out her right hand once again. She wrapped it around her father-in-law's cock and stroked it slowly. She didn't even attempt to cover her pink lace bra as Tom Sr. tossed her tee shirt in the chair beside them. You could have heard a pin drop in the room as they stared at each other.\n\nFinally, Tom reached down and unbuttoned her shorts and pulled the short zipper down. That's when he broke the silence by asking, \"Faith, are you absolutely sure you want me to do this for you?\"\n\nWithout hesitation and in a clear voice all of us could hear, she responded, \"I will remain completely naked for the rest of this trip ... only if ... you undress me completely right now.\"\n\nTom looked at his son but there was no visual warning or consent showing in his face. He looked back at Faith and said, \"I want you to remain naked. You are a beautiful woman Faith and I want to enjoy all your beauty.\"\n\nTom pushed his thumbs into the waist of her shorts and pushed downward. Faith aided him by doing to side to side movements and when her shorts cleared her wonderfully shaped butt cheeks they fell to the floor. Faith stepped out of one leg then lifted the shorts up on her other foot so Tom didn't have to bend over. He took the shorts and put them on top of her tee shirt in the chair. Again with their eyes locked on each other Tom reached around behind Faith and with a couple of quick moves with his fingers her bra was unfastened. He reached up to her shoulders and drew the straps down her arms and the cups of the bra fell away from her beautifully bronzed \"C\" cup breasts. It was very evident to all of us, either Faith used a tanning bed or she sunbathed outside topless.\n\n\"You know, if I'm going to take off your panties, you'll have to let go of my cock.\" Tom said to Faith.\n\n\"Dad,\" Faith began, \"When you take off my panties, you are going to expose my whole body to all these people. The only male, other than my father when I was little, who has ever seen what I have under those panties, is your son. Before you pull my panties down, I have something important to tell you. Tom and I were going to wait until we were on the beach, but - now - seems a much more appropriate time. Please get down on your knees.\"\n\nTom moved slowly until he was on his knees before his mostly naked daughter-in-law. He looked up into her eyes as Tom Jr. stepped over next to his wife. Tom could see his son's hard cock standing out in front of him only inches from his face. Faith's panties matched the bra Tom had taken off her a few moments before. Her panties came to a very pronounced \"V\" in the center between her thighs and Tom could only see a hint of a camel toe.\n\n\"Please hook your fingers into my panties and start to pull them down. When you get to the point where you can just see my pussy, please stop.\" Faith requested.\n\nAgain, I noticed everyone was quiet in the room. I was riveted back to Tom's hands pulling down his daughter-in-law's panties until he stopped moving. He looked up and said, \"I can see the beginning of your slit.\"\n\n\"Mom, please come over and stand by dad.\" Faith requested.\n\nJanet moved quickly and soon stood in front of her son and neither one of them hide their naked body as they looked down at Faith's pubic mound. \n\n\"Go ahead dad and pull them down a little more.\" Faith said.\n\nWithout hesitation Tom pulled them until he could see all her slit and then he stopped. Faith parted her feet a little so he could see between her legs. Her tight, yet puffy pussy lips were completely visible to Tom before she said, \"Dad, you are looking at the place on my body where your grandchild will be coming out, in less than five months.\"\n\nThe meaning of those few words caused Janet to wail with joy. Her immediate reaction was to step closer and pull her daughter-in-law into a motherly hug. Janet didn't mind Tom Jr.'s stiff cock pushing into the crack of her ass as he hugged his mother from behind. Audrey rushed to Faith's other side and wrapped her arms around her and hugged her.\n\nTom pulled Faith's panties down the rest of the way and Faith stepped out of them one foot at a time. He wrapped his arms around her legs and hugged her pussy to the side of his face as tears erupted from his eyes and freely ran down his cheeks. He turned his face towards Faith's bald pussy and kissed it several times, not in a sexual way but in a loving way. The grandchild he might never see was going to come out of Faith's lovely pink slit. Tom was so overwhelmed with joy, without even thinking he reached up and cupped her pussy with his hand. When he did, Faith immediately moved her feet further apart and gave him free access to the treasure between her legs. Tom rubbed his hand back and forth over Faith's lovely bald pussy as gently as if he was rubbing a baby's head.\n\nUntil now, no one had noticed the small baby bump in Faith's lower abdomen. As Janet hugged her daughter-in-law with her right arm, her left hand rubbed Faith's baby bump.\n\nJen rushed over and handed everyone some tissues and then stepped back.\n\nAll of us heard Janet ask, \"Why didn't you tell us sooner?\" \n\nFaith quietly explained, \"Tom and I were trying to figure out a \"right time\" to tell you but with the doctor appointments, both of you had a full schedule. There just wasn't a right time until right now. I didn't even know I was going to say something until dad took off my bra. When he was going to pull down my panties and see all of me, seemed like the best time. I think I'm right.\"\n\nTom Jr. reached down and helped his father stand up and all of us saw a man who was filled with emotion both good and bad. Tears freely rolled down his cheeks as he clung to his daughter-in-law and repeatedly said, \"I love you so much Faith.\"\n\nFaith's voice was barely audible when she said, \"Dad, I want you... I want you to make memories with me. While we are on this trip, I want you to ... Oh God, Tom ... honey, I want your father to enjoy my body, is that alright with you?\"",
        "\"Yes sweetheart,\" Tom Jr. replied, \"Anything you want to do will be fine with me. Besides making him a grandfather, I couldn't think of a better gift you could give dad.\"\n\n\"Dad, I know it's not normal but Faith wants to make love to you and I fully agree with her decision.\" Tom Jr. said.\n\nI've known Tom Banks as a hard diving man who never took no for an answer. Now my heart was aching for him because he just found out he was going to be a grandfather but he also realized there was a slim chance he would not live long enough to see the baby.\n\nEveryone except Kim and Beth stood in place and watched the family rejoice to the wonderful news. Kim made her way over and stood on the opposite side of me and hugged me as Beth was doing on her side. Finally Beth whispered, \"I hope someday soon, I'll be able to tell both of you that we're going to have a baby.\"\n\nAbout five minutes later Tom pulled it all together and lined up his family with Faith on one side of him and his son on the other. Tom looked around the room and said, \"In case you didn't hear, I'm going to be a grandfather in less than five months. I'll be damned if I'll leave this earth before that happens.\"\n\nCheers rose from everyone in the room. Every one of us took turns hugging all five of them as we congratulated Faith, Tom, Tom Jr., Janet and Audrey who stood side by side, completely naked, and no one cared. \n\nLinda came out of the kitchen completely naked and said, \"I love a good love story but to make that baby grow, its momma has to eat, so please get a plate and fill it up with some of the food Jerry cooked for you.\"\n\nAs everyone got in line I saw Katie look around at the various naked bodies without trying to get caught. At the same time Frank openly stared at all the naked women. They were the only two who had clothes on. They called Audrey over to them and they talked for a few seconds and it became obvious to me that both Katie and Frank were having trouble deciding to join the rest of us and be nude. I'm not sure what the problem was but I wanted to help if I could.\n\nI made my way around the room until I was standing next to all three of them. I looked at Katie and then at Frank before I whispered, \"Everyone will be sitting down soon so if you want to slip out the door while everyone is standing up, let's go.\"\n\nAll four of us slipped out the door unnoticed, and once I closed the door I asked, \"I know there's a problem from watching all of you from across the room. May I inquire what that might be?\"\n\nKatie blushed; bright red and Frank hung his head. I said, \"Look I have a daughter so I know about girls in general and I'm a guy so I have an excellent handle on guy problems. If there's anything I can say, do, or give some advice about something that will help you, I'm willing to give it a shot.\"\n\n\"My dick isn't as big as the other guys in that room.\" Frank blurted out.\n\nI looked at Frank and said, \"The guys in there are older than you and your dick grows as you get older. Don't worry about having a short dick at your age, it will grow, I assure you.\"\n\n\"I have a hard on and I'm embarrassed.\" Frank volunteered.\n\n\"Frank, did you notice that all of us have a hard-on, even me. It's normal for a male to get a hard-on when there are beautiful women in our presence. I don't want to mention names but there's a very beautiful nude young lady standing right here with us.\" I said with a grin as I reached down and stroked my cock a few times to emphasize my point. All three of them looked down at my cock and were able to clearly see I was hard.\n\n\"I continued, \"Look, we are going to be spending time on a private beach, both of you can wear a bathing suit if you want to or you can be nude. It really doesn't matter. If you don't want to stay fully dressed, you can take off whatever clothes you want. It's totally up to each of you to decide, as long as I'm around, no one is going to make you do anything you don't want to do.\"\n\nKatie looked up at me before she asked, \"Do you mean that sir?\"\n\n\"Yes Katie, I mean every word of it.\"\n\nKatie mumbled something I didn't hear so I asked her to repeat it and she asked me to walk away from Frank a few steps and she'd tell me. So we walked away from Frank and Audrey and when we stopped Katie wanted me to lean down so she could whisper in my ear. She said, \"Sir, my boobs are real small and I'm embarrassed by them. I'm wearing a padded bra. Even Audrey who is the same age as me has bigger boobs.\"\n\nI whispered back, \"I don't like to point fingers and I don't want you to stare but when you go back into the dining room, look at Jenny. She is much older than both of you and she has perfectly sized small boobs also. I love small boobs. Actually, before we went to Germany, Jenny was just like you. She was embarrassed because she has small boobs. She found out that it doesn't matter what size they are, people, especially guys will look and stare at your boobs.\"\n\n\"Katie, if you get a chance, please have a talk with Jenny and she'll tell you all about it. But for now, you don't have to take off anything if you don't want to.\" I said.\n\n\"I'll take off my shirt and shorts if I can go in my bra and panties.\" Katie replied.\n\n\"If that's what you want to do, go ahead, take them off.\" I added.\n\n\"Will you help me and take them off?\" Katie asked.\n\nI reached out and lifted the bottom of her tee shirt and pulled it up over her head. She immediately raised her arms so her shirt came off in one swift motion. I knelt down in front of her and unbuttoned and unzipped her shorts. I didn't see any sign of panties when I pulled the zipper down so I looked up into her eyes and asked, \"Are you sure you want me to do this?\"\n\nKatie stared at me for a few seconds before she replied, \"Oh shit .... dammit, I forgot, I took off my panties when I showered. I didn't want to put them back on. They're in my pocket. Oh shit .... what do I do now? ...\"\n\n\"Sweetheart,\" I said, \"You don't have to do anything. If you want to keep your shorts on, you can. I don't want you to feel pressured into doing anything you don't want to do.\"\n\n\"What the hell,\" Katie said after a long pause, \"Go ahead and take them off sir, if Audrey can let everyone see her pussy, I guess I can too.\"\n\nI hooked my fingers into the waist of her shorts and tugged on them only a little bit so they barely moved, before I asked, \"Is this what you really want?\"\n\nKatie looked over at Audrey and Frank before she looked back down at me and nodded her head yes. Without any hesitation I pulled her shorts down and before my eyes I saw her beautiful bald pussy. When she lifted each foot so I could take her shorts off her feet, I was treated to the lovely view of her hairless pussy opening and closing. Without even thinking, I leaned in and kissed her pussy. I quickly pulled back and looked up into her surprised face. Katie finally said, \"Thank you Mr. Morrison, now please take off my bra.\"\n\nWhen I stood up, my hard-on was at full staff. I reached around Katie and unhooked the single bra hook and pulled it forward off her arms. Her small bumps came into view and I asked, \"May I cup those beautiful boobs of yours?\"\n\nAstonishment filled Katie's face as she once again only nodded her head yes. I not only cupped them in my hands but I leaned forward and sucked each nipple between my lips before I kissed each one and then stood up. I looked into Katie's face and said, \"You are a very beautiful girl. I hope, while we're in Hawaii, you remain naked just like you are now.\"\n\n\"Mr. Morrison, are you sure my boobs are perfect for you?\" Katie inquired.\n\n\"Yes Katie, not only are your boobs perfect, your whole body including your beautiful bald pussy is perfect. I don't want you to take this the wrong way but you can sit on my lap any day and I'll be very proud to have you there.\" I said.\n\n\"May I hug you sir?\" \n\nI leaned forward and wrapped my arms around Katie and she did the same to me. She stepped forward and my stiff cock slipped between her open thighs and nestled itself between her open pussy lips. As we hugged Katie whispered, \"You know, your cock is the first cock that's ever been between my legs. If you moved just right, you could be the owner of the first real cock to ever slide inside my pussy.\" \n\n\"Don't get me wrong, I'm not a virgin. I didn't want some boy to force his cock into my virgin pussy and hurt me so I used my mom's dildo, one afternoon and took care of my virginity.\" She softly giggled and pressed her naked body against me.\n\nOut of the corner of my eye, I saw Audrey was helping Frank out of his pants while Katie actually moved her hips back and forth causing my cock to rub against her wet pussy. One time my cock caught and almost went inside her and she stopped and quickly glanced up to see what I was going to do. I stood still and let her decide.\n\nKatie pulled back a little and when she came back forward, my cock slipped past her opening. I smiled and said with a smirk on my face, \"Danger avoided. Whewwww! That was close.\"\n\nKatie stared into my eyes a few seconds before she simply said, \"This time. Maybe it won't, the next time.\"\n\n\"Do you want a next time?\" I asked.\n\n\"Yes!\" barely escaped her lips, \"Will you be the one to take me where I've never been? Will you make it a memorable occasion for me?\" Katie asked in a very soft voice.\n\n\"If that's what you want.\" I replied.\n\n\"Sir, you are the very first male to have his bare cock this close to my pussy. Even when you had the chance a few seconds ago to slide it inside me, you didn't capitalize on the opportunity. All you had to do was press forward and you would have been inside me and yet, you let me choose. Yes, you are the man I want to make me a woman. Oh and in case you're going to have second thoughts later, I'm legal so you don't have to worry. I'm hungry; let's go get something to eat. Frank's naked and I'm naked. Let's go.\" Katie said with a laugh.\n\n\"Thank you Mr. Morrison for helping me. I'm still going to be bashful when we walk back in that room full of people but with you beside me, I'll be ok, I think.\" Katie said in a soft voice.\n\nKatie picked up her clothes and held them in her hand at her side as we walked back over to Audrey and Frank. We took turns hugging each other and I re-assured each of them that they should be proud of their body. I reminded them, \"There's only one like it, it's an original and originals are perfect.\"\n\nFrank picked up his clothes off the floor. When he stood up he reached out his hand and we shook hands, as he said, \"Mr. Morrison...\"\n\n\"Call me Dan.\" I interrupted him.\n\n\"Umm, Dan\" Frank said, \"Thank you. I truly appreciate you talking to us as if we were young adults and not just a couple of kids. Far too many people dismiss what we have to say because we are young. Thank you again.\"\n\nThe four of us walked over to the conference room door, after I opened it, Katie and I walked into the room with Katie holding my right arm and carrying her clothes in her right hand. We were closely followed by Frank and Audrey. Frank proudly walked into the room, holding his clothes in his hand, with his small hard cock bouncing with each step he took. Everyone looked at us but not one word was said as Katie and Frank deposited their clothes on a chair and then came back and joined Audrey and me, as we selected what we wanted to eat. We got our breakfast and took our seats. We joined the conversation and everyone talked and added something. No one mentioned our absence or our return.\n\nCaptain McGrath and Sam came into the dining room. He stopped and looked around at everyone before he said, \"I love my job. We'll be landing in a little while. I've already been in contact with the Turner people. Once we're on the ground, they've cleared us to taxi to their hanger. Their helicopters are already on the ground at the airport so we'll get off this plane and right into their choppers. I don't know what their protocol is but if you ladies wear at least your panties and bra or a shirt, I think you'll be fine. Guys, boxers will do for you.\"\n\nBob McGrath and Sam loaded up a plate of food and then disappeared. A few minutes later Tom the co-pilot came into the dining room and filled up a plate before he left.\n\nI looked around the table before I said, \"I want to thank all of you for coming along on this trip. Had we not been canceled from our first reservations, I'm positive all of us would have been clothed now. I hope each of you, given this new freedom, will explore anything and everything you want to do, while we're at the resort. I never expected this and neither did Beth when she starting setting up this trip. However, I can't say I'm sorry it happened. Tom and Janet received some very good news from Faith and Tom Jr. This is the trip to make memories, please don't hold back, this is truly a once in a lifetime vacation.\"\n\nTom stood up before he said, \"On behalf of myself and my wife, I want to thank Dan and Beth for this opportunity. I'm not sure if all of you know, but at least my family knows I have stage four pancreatic cancer and I've been given only six months to live. I'm not sorry that I'm standing here completely naked in front of my family or their friends; it certainly is out of character for me.\"\n\nHe continued with, \"It saddens me to learn a young newly married couple died in the cabins we were going to occupy and three others are suffering in a burn unit, but had that not happened, we would just experience a regular short vacation.\" \n\n\"However, this weekend is truly a once in a lifetime experience for me and I'd like to ask all of you to join me and remain nude. I've recently learned that life itself is priceless and should not be wasted totally on work and making more money. We have to learn to live outside our comfort zone and explore and this resort is going to provide that opportunity. Please enjoy yourselves this weekend.\" Tom finished speaking and everyone applauded him.\n\nWe finished up with breakfast later than Linda, Jenny and Jerry wanted so they started to rush around trying to get everything done before we landed. Suddenly Terri jumped up from her seat and said. \"Jenny, let me help you with that.\"\n\nThose few words are all it took to get the avalanche of people jumping up out of their chairs and helping, Tom and I included. Within a short time we had everything cleaned up and the dishes washed and put away. Jerry finished up cleaning his galley and all of us came back to the dining room and sat down, naked of course. We talked until Captain McGrath said over the loudspeakers, \"We will be landing in approximately fifteen minutes. Please make sure you are seated and your seatbelts fastened.\"\n\nSince all the chairs around the board room table were equipped with seatbelts, we stayed right where we were and continued to talk until we felt the plane touch down. \n\nWe stayed seated as Captain McGrath taxied off the runway to the hanger. There was a brief halt and then the plane moved slowly forward for another few minutes. Once the plane stopped all of us unbuckled our seat belts and stood up. \n\nCaptain McGrath's voice came over the speaker saying, \"I want to welcome you to Honolulu International Airport on the island of Oahu, Hawaii. I hope you've enjoyed your flight as much as we have. I'm sure all of you are looking forward to spending some time relaxing in the surf and on the white sand. The temperature outside currently is 93 degrees and 75 percent humidity.\"\n\n\"I've been in contact with Leyanni Lau who is the manager of the resort where we will be staying and she has a couple of helicopters here at the airport waiting to take us to our destination. She will be meeting us when we touch down at the resort.\"\n\n\"Ladies and gentlemen, it is customary to wear clothes at the airport but since we have been moved to a Turner hanger, I will leave that up to your discretion. Our plane has been nosed into the hanger so the only people who will see us, is the Turner ground crew. As I mentioned when I was in the board room, I believe panty and bra cover the same area as a bikini. When you disembark from this plane the Turner ground crew people will guide you to the helicopters. We need to finish a few things here in the cockpit and then we will be joining you.\" Captain McGrath finished saying.\n\nBeth stepped forward asking, \"May I have everyone's attention?\"\n\nEveryone turned and looked at Beth before she said, \"I know some of you girls have a bra and panties to wear but there are a few of us who didn't pack either one. I have a bikini in my bag so I'll have to wait to get off the plane before I get something to put on. If you girls, who have panties and bra want to put them on, please feel free to do so. Guys, I'll leave it up to you on how much you want to cover up.\"\n\n\"Beth, are you going to put on your bikini when you get off the plane?\" Faith asked.\n\n\"Actually, I'm going to use one of our large white towels to wrap around my waist. Captain McGrath already said the plane is nosed inside the hanger and we're going to get off the plane right into the helicopter. I'm not going to worry about a few guys seeing me topless. I don't think it would be beneficial for me to search my bag for my bikini, so I'm not going to do it. We are going to be landing at a resort where the manager is going welcome us in the nude.\" Beth replied.\n\nSuddenly all the girls started talking amongst themselves and finally Janet said, \"Beth, we're with you. All of us will take a towel instead of getting dressed. That way we will be nude when we get to the resort.\"\n\nLinda said, \"I'll go get some towels.\"\n\nOnce again several girls spoke up at once and said, \"We'll help you get some towels.\"\n\nWithin a few minutes everyone had a large white towel to wear around their waist. Even the other females in the group went topless.\n\nWhen Captain McGrath, Tom and Sam finished their post flight check and filled out all their paperwork, they came back to the lounge. Captain McGrath stopped and looked around at everyone before he said, \"Wow, I sure love your new fashion. I think all of you should pose for a group photo so we have a record of the best dressed arrivals at Honolulu. Tom, I must say you sure are looking great in your new suit.\"\n\nSuddenly I saw a side of Tom I've never seen before. He stepped forward and said in a voice that would equal any radio announcer, \"Ladies and gentlemen, I'd like to direct your attention to the young man center stage. He is adorned in a white terrycloth towel with sewn end seams and the terrycloth is long enough to wrap casually around the waist. In case of an emergency hard-on, the terrycloth can be discarded like this, allowing for unencumbered wild sex.\" \n\nTom bent over and picked up his towel while everyone applauded. He stood up and took a couple of bows before he turned to Captain McGrath asking, \"Did you get that on film or is that part going to end up on the cutting room floor?\"\n\nCaptain McGrath laughed and said, \"I think it was perfect and that will live on in our personal memories forever.\"\n\nTaking that as a cue, I stepped forward and asked for everyone's attention. When everyone stopped talking I said, \"All of us, except the flight crew are standing here nude, I want to say, whatever we do or happens between us, I'd like to think each and every one of us will keep our activities in the strictest of confidence. There is no reason for anyone outside of our group, here assembled, to know anything. Can we all agree to that simple rule so no one's reputation is put in jeopardy?\" Everyone tried to speak at once but everyone was in agreement.\n\nLinda walked over to the main cabin door, unlatched it and swung it open. She saw the plane had been nosed into a very large hanger and the stairs were up against the plane. There were many people on the ground dressed in blue with the word TURNER in yellow on the back of their shirt. One man was halfway up the stairs when Linda opened the door.",
        "He continued up the stairs and greeted Linda and then Captain McGrath who had followed Linda to the door. He introduced himself as Ron and told Captain McGrath he was one of the helicopter pilots. He said he'd like to talk to everyone for a few minutes.\n\nThe three of them walked back into the lounge where all of us were standing and Captain McGrath introduced Ron to all of us. Ron started out by welcoming all of us to the island of Oahu and said he hoped we would enjoy our stay. He went on to say, \"I have two choppers in the hanger next to this hanger. We wanted to be prepared in case you brought more people with you.\"\n\n\"My Sikorsky S-92 is a lot more comfortable than my Sikorsky CH-53E so here's what I'm thinking. How many females are in this group?\"\n\n\"There are fourteen of us, sir. And including the flight crew there are nine males on board.\" Beth responded.\n\n\"That's great because I have an idea to run by you. Unless there is any thrill seeking females in this group, I was thinking of having all the ladies ride in my S-92. Then we can load your entire luggage in the CH-53E. If the guys want to; they can fly in the CH-53E. To make the trip more interesting we can put a harness on each of you and we can fly with the ramp down. That way you'll be able to stand up and walk around as we fly. I guarantee you; you'll get a whole different view of the island looking out of the ramp door in the back. I'll leave it up to you what you want to do. This is your vacation and I want to make it memorable for you.\"\n\nJenna was the first to ask Ron, \"Can a girl choose to ride in your CH whatever helicopter?\"\n\nRon laughed and said, \"Sure, we can put everyone in the CH-53E if they want to experience that ride.\"\n\nThat spurred more conversation while Ron talked quietly with Captain McGrath. He told them the ground crew would service his plane and have it ready for his return flight.\n\nFinally Jenna said, \"I want to ride in the 53, who else wants to go with me?\"\n\nTerri, Beth, Joanna, Audrey and Katie were quick to add their names to the list of females who wanted to ride in the 53-E. Ron looked at the guys asking, \"Are all of you guys into riding with the tailgate down?\"\n\nI raised my hand and when I did, each guy raised their hands except for Captain McGrath, Tom (the co-pilot) and Sam (the navigator). Faith turned to Tom Jr. saying, \"Don't you dare fall out of that helicopter.\"\n\n\"Ok, ladies and gentlemen,\" Ron began, \"Your luggage has already been loaded on the chopper so when you walk down the stairs just follow our ground crew to the choppers in the next hanger. For those riding in the 53E, my people will be there to secure you in a harness. You can't do it yourself because I want to make sure you don't come loose during my flight. I am your pilot in the 53. I'm guessing there's nothing under those towels, so as a last minute warning so you can back out if you want to. The harness all of you will be wearing goes around your shoulders and waist plus there are leg straps that go around your upper thighs next to your crotch. My guys will be touching you in your crotch area. Anyone who wants to back out can just get on the other chopper and nothing more will be said.\"\n\nTom Sr. exclaimed, \"There's always a first time for everything.\" \n\nWe followed Ron through the door and the minute we stepped through the door, we felt the heat and humidity. We walked down the steps and saw the ground crew dressed in blue shorts wearing a shirt which said TURNER across the back. We followed Ron through the hanger and then a covered passageway to the hanger next door. I stopped and looked at the large helicopters in the entry way of the hanger and then the few other choppers the guys were working on.\n\nBoth helicopters we painted in the same color scheme as the helicopter Becca flew. There was someone there to help the ladies up into the one helicopter while the rest of us who were going to fly in the 53E walked up the ramp into the helicopter.\n\nWe were followed in by four guys dressed in the blue uniform. Each one of them greeted us and the one guy explained they were going to secure us in a Delta Tower Climbing Tongue Buckle Leg Harness. He looked at all of us before he asked, \"Is there any underwear under your towels?\"\n\nI spoke up saying, \"No, all of us are naked except for the towel and our shoes of course.\"\n\nHe smiled and looked at all of us again before he held up a harness and said, \"Ok, here's what the harness looks like. It is mandatory for each of you to wear one of these harnesses during our flight today. Each of you will have to remove your towel prior to putting on your harness. The shoulder and waist straps shouldn't be a problem for any of you, even the girls. However, each of you will have to step into the leg straps and my guys have to make sure the straps are snug around your upper thighs right next to your privates before we put the rest of the harness on you. Does anyone here know why the thing between your legs is referred to as \"privates\" and not Lieutenants, Captains or Colonels?\"\n\nAudrey spoke up saying, \"Because what I have between my legs is private and no one is supposed to see it.\"\n\n\"No, that's not it,\" Ron said with a smile, \"Anyone else care to guess?\"\n\nJenna spread her legs and looked down before she said, \"I don't see anything private down there.\"\n\nRon laughed and said, \"Ok, it goes like this. It's an old military joke. The privates are the ones who do all the work and it's the Lieutenants, Captains and Colonels who take the credit for the work that's been accomplished.\"\n\nEveryone laughed but I'm not so sure the younger people knew enough about military rank to get to full effects of the joke.\n\n\"Back to the task at hand,\" Ron said, \"We need to get these choppers in the air so if you're going to stay and ride with me, step right up and get into your harness. Once you step into the leg straps, pull the strap up and then spread your legs wide so my guys have room to work. Again, if anyone has any doubts about wearing a harness, you can ride in the other chopper. Who's first? We can do four at a time.\"\n\nJenna and I stepped forward at the same time followed quickly by Joanna and Beth. The four of us stood facing the others and the guys held up the harness behind us. Each of us stepped into the leg straps and then reached down and pulled them up. Each of the Turner people had us hold the waist strap portion while they moved around in front of us and kneeled down and made sure the legs straps were secure at the top of each thigh. The guy who positioned my leg straps on me was un-phased with my cock and balls and gently pushed them out of the way while he worked. We chatted while he worked. I'm sure the guy wished he was putting the harness on one of the girls, instead of me. \n\nWhen my leg straps were positioned in the right place, my guy stood up and went around behind me and held up the rest of the harness for me to slide my arms into. He came back around in front of me and fastened my waist straps and then my chest strap. He finished by tugging on the strap in several places. \n\nI glanced over a few times when the guys were working on Jenna, Joanna and Beth. Neither one of them seemed to have a problem when it came time for them to spread their legs. I'm sure the guy kneeling in front of them enjoyed the view of their pussy as well as touching it a few times while he worked. Not one of them said a word as the leg straps were secured around their legs. \n\nWhen the guy was finished working on me I asked Ron, \"You said it takes about ten minutes to get to the resort from the airport once we're airborne, would it be ok to take the scenic route since we're going to be strapped into the harness?\"\n\n\"Absolutely Dan,\" Ron replied, \"We can do whatever you would like to do. Hell, I can even have my other pilot fly the 92 sideways so the girls can see all of you standing on the ramp.\"\n\n\"Now that would be interesting,\" I said, \"That would make them all jealous they didn't ride with us.\"\n\nThose of us already in our harness stood and watched the four men work on the others. Finally all of us were properly harnessed and the four men set about hooking us up to individual tether lines. The tethers were long enough for us to be able to walk to the back of the ramp but not past it. In other words, we couldn't fall out of the helicopter.\n\nBefore going up to the flight deck our pilot told us we were safe to walk around but he asked us to stay up near the front during lift off and landing. One of the men directed us to deposit our towels in a basket like thing, which hung on the wall. \n\nI reached out and held onto my tether as we heard the engines turn and the rotors start to whirl. Soon we were moving forward. The four guys who worked for Turner watched us as we lifted off and then motioned to us that it was ok to walk around. Jenna looked at me and said, \"Come on Dad, let's go see the island.\"\n\nWe started to walk towards the ramp when all the others joined us. Joanna, Jenna and I were the first to go to the end of our tether and stand just a couple of feet from the end of the ramp. When I first looked down I got this really weird feeling in my balls. I'm sure other guys can relate to that weird feeling if they've ever looked down from a height. It only lasted about a minute but it's a feeling I'll remember for the rest of my life.\n\nThe view from standing on the ramp and looking out or down was spectacular and breathtaking. Our pilot took us over to the coast line and we were flying at a level which was close enough to the ground so we could see people on the beaches, yet high enough that we didn't disturb them. And we could see the other helicopter flying off to our left side, not too far away. \n\nTom and his two children stood side by side along with Katie on the right side of the ramp and they talked between themselves. We couldn't hear what they were saying but I did see Audrey wipe tears from her eyes a few times. \n\nIt was heartwarming to see a father bond with his children. I know I'll never forget what I witnessed that day. I made a silent promise to myself to always be available to my children and to not only tell them I loved them, but I'll show them I love them.\n\nOur pilot slowed the forward travel and the pilot of the 92 turned his helicopter sideways and we were able to wave at the people inside. All too soon the four Turner people told us we would be landing soon so they wanted us to move back towards the front of the helicopter.\n\nWe moved back and stood where we did when we took off. We could see and feel our decent during landing and we felt the small bump when the helicopter touched down. The four men who rode with us said we could start unbuckling our own harness and they would assist anyone who needed it.\n\nMost of us started to unbuckle but Jenna walked over to one particularity handsome young man and said, \"My buckle seems to be stuck. Would you be so kind as to help a lady in distress?\"\n\nI saw the young man do a once over of Jenna's body as a smile spread across his face before he said, \"Yes, no problem. What seems to be stuck?\"\n\nJenna leaned against him saying, \"I don't think I can get out of it without your help.\"\n\nThe young man looked around before he reached for the buckle between Jenna's small titties. She was all smiles when he bumped against them. When the buckle was unfastened Jenna purrred before saying, \"I think the strap is stuck between my legs, would you mind helping me down there too?\"\n\nOnce again he looked around before he kneeled and reached out to pull down on the strap but Jenna's actions were very quick. She spread her legs, grabbed his hand and pressed it tightly against her pussy saying, \"That's where it's stuck, right there.\"\n\nAlthough the young man had a bronze complexion all of us could see his face glow red. He allowed Jenna to use his hand to rub her very wet pussy for a few seconds before he tried to pull his hand away. After a few seconds longer, Jenna let him have his hand back as she let the harness drop off her shoulders and the leg straps slid down her legs.\n\nWhen all of us were out of our harnesses we walked down the ramp and over to all of the people who rode in the other helicopter. We hugged and exchanged some excited words. Ron came over and told us our luggage would be taken to the cabins in the coconut grove and Leyanni was waiting for us in the large building near the landing pad. All of us walked down the stairs to the building. \n\nAs we approached the building a very beautiful Hawaiian young lady opened the door and motioned for us to enter. We entered the air conditioned building and there stood a nude Hawaiian Goddess, with bronze skin color. Her green eyes were framed by her raven colored hair that hung all the way down her back past her ass cheeks. Her body and legs were very well toned and her abdomen rippled with a six pack. Her small \"B\" cup breasts stood proudly from her chest with brown areola the size of a quarter, with a small nipple centered on them. Leyanni's pubic was waxed or shaved completely bald and her pussy slit bulged slightly for her clit hood to show. Her body was enough to give a blind man a hard-on.\n\nShe was flanked by alternating young males and females with bronze colored skin and raven colored hair. Like Leyanni, the young ladies wore a purple orchid in their hair on the left side. There were four nude males and females who were all model material. All eight of them had waxed or shaved pubic area. Each guy's cock wasn't exactly hanging but stood at about half erect. The young ladies had small perky breasts with brown areola. When each of them smiled their pearly white teeth shone so brilliantly. \n\nLeyanni stepped forward and Beth stepped forward from our group. They greeted each other with a hug then stepped back from each other. Leyanni had one of the young men step forward and he also hugged Beth and then placed a double Orchid with Tuberose lei around her neck before saying, \"Aloha, welcome to Hawaii.\" \n\nBeth stood off to the side and motioned for Tom and me to step forward next. When we came forward, Leyanni asked us our names. We found out Leyanni has a photographic memory. We watched as each person came forward, gave their name and received a hug and welcome from Leyanni. For each female who received a hug from Leyanni, a young man stepped forward and gave her a second hug before presenting and adorning her with a lei. The young ladies with Leyanni hugged the males in our group before they put the scented lei around their necks.\n\nAfter everyone had received a lei Leyanni said, \"Welcome to our resort. While you are here, we will make every effort to meet all your needs. I am overjoyed that we will get a chance to serve each and every one of you but I am sorry you were referred to us only after the fire at the other resort. That was truly a tragedy.\"\n\n\"I want to congratulate Beth for conveying my message that we operate as a clothing optional resort. I personally do not like to wear clothes and as you can see by the young people with me, they also choose not to wear clothes. Each of you is encouraged to leave your textiles in your cabin and enjoy a new experience while you are here. I'm inviting each of you to enjoy any and all the activities we sponsor here at the resort.\"\n\n\"Speaking of activities, I have arranged for a couple of surfing instructors to be available to you for anyone who may want to try surfing. We have one area of our resort where the water is perfect for surfing. Also if anyone wants to try snorkeling or diving, I have two licensed dive instructors who will give you a short class and then take you diving. Please let me know if anyone wants to try those two sports.\"\n\n\"We have tennis and basketball courts. There is always someone around looking to play so please don't be bashful while you're here. I see you have some young people with you so I'll tell you we also have a very large recreation hall with a video game room that's open twenty four hours a day. For those of you who want to work out, we have a huge gym with every imaginable piece of equipment available. The gym is also staffed twenty four hours a day. For those of you who love to golf, we have an eighteen hole championship golf course available to you. Don't worry about clubs; we have large variety you can choose from. I think I'll stop there and tell you I'll give each of you a map so you can see where each place is.\"\n\n\"You'll be staying in the luxury cottages over in the coconut grove. The cottages are situated on a private stretch of beach. It is unlikely you'll see anyone on the beach except members of your group but there's always a possibility one of our employees may jog through. Each cottage has two four person golf carts parked in front of it. If you find you need additional carts, please let me know.\"\n\n\"You are going to be here for four days and I'm sure you'll want to eat during that time. For all of you who have eaten at the restaurant \"The Hole\" I want to brag a little and tell you, the food you'll eat here is much better.\" \n\n\"First, not far from your cottages, you are welcome to use our cafeteria style food service. However, you won't find our kind of food in any other cafeteria. Everything you eat there will be fresh. The cafeteria is open and serves food twenty four hours a day. We have employees passing through here at all hours so we make sure they are fed well at any time of the day.\"\n\n\"On the other side of the resort from your cottages is our restaurant, the Lava Pit. We have world renowned chefs ready to prepare any type of meal you can dream up. Every meal is prepared separately to your individual specifications. Please don't hesitate to tease your palette like never before.\"\n\n\"Finally, because I encourage our guests to enjoy the nude lifestyle while they are visiting us, there will be towels for you to sit on at each location on the resort. That way you won't have to carry a towel from one place to the next. The closets where the towels are kept are clearly marked. Please enjoy yourselves while you're here. If anyone has any questions, I'll be happy to answer them.\" Leyanni finished her short speech. \n\n\"Leyanni, on behalf of my family, I want to thank you and your staff for allowing us to stay at your resort. Beth did an excellent job telling us about the resort but being here is such a wonderful experience.\" I said.\n\n\"Yes, I also want to thank you on behalf of my family and friends. When Beth came to the buffet this morning surrounded by her other nude family members, I didn't realize what you were going to provide for us during our visit. I'm so overwhelmed by what you've told us, I'll need to sit down on that beach you described.\" Tom said as everyone laughed.\n\n\"Leyanni,\" Terri said, \"I'd love to try snorkeling and diving.\"\n\n\"Very well then,\" Leyanni said, \"I know you've traveled all night so once you're settled into your cabin, call me and I'll send over an instructor. Our instructors are former Navy Seals and they will make sure everyone stays safe. Anyone who's interested in diving must take a short mandatory course before they can dive.\"\n\n\"Leyanni you said we can be nude wherever we go on the resort. Will others we see be nude also? I don't want to feel out of place if we go to some place and everyone else is dressed.\" Faith asked.\n\n\"Faith, you will encounter clothed people while you are here. Our employees are on security assignments all over the world and when they pass through here, they are on R&amp;R. (rest and recuperation) I can tell you from experience, while they are staying here, most generally they are nude. However, when they first arrive or when they're ready to leave, they will be dressed. Please don't feel uncomfortable if you see them clothed. Our employees are made up of former and current military and former government staff, like you, they need some time off once in a while.\" Leyanni explained.",
        "\"Does anyone else have any questions for me?\" Leyanni asked.\n\nAfter a few seconds of not hearing anything, Leyanni said, \"Ok, if you think of anything later, there's a phone in each cabin. A number is listed on the front of the phone that will come right to my cell phone. I am available to you twenty four hours a day. While we were talking, your luggage was delivered to one of the cabins. You can decide who stays in which cabin. I have some people outside with golf carts who will take you to the coconut grove. Please enjoy yourself and don't be afraid to use our resort to its fullest. Goodbye for now and I'll stop down later to make sure everyone gets settled in.\" \n\nI noticed Leyanni signaled to Beth as we started to walk out the door. I was almost to the door, when Beth called to me and asked me to come back to her and Leyanni. I looked at Kim and Tom, \"Go ahead and go to the cabins, Beth and I will catch up with you.\"\n\nI walked back to Leyanni and Beth and Leyanni offered for us to sit down in comfortable chairs. One of the young ladies brought us some towels to sit on. Once we were seated Leyanni said, \"Dr. Mitch ..... Marsh, called me and he told me he would like it if all of you enjoyed your Hawaiian experience. I mentioned to Beth, when we talked, we can plan a luau. I have made plans to host a huge luau for tomorrow night. We are going to do a traditional roast a pig and we'll have dancers. I wanted to give both of you a heads up so you can enjoy your activities tomorrow but get some rest in the afternoon. Our luau can and most likely will go into the early morning hours.\"\n\n\"While we're meeting, I want you to know if your group wants to go to the Pearl Harbor, World War II museum, I will gladly make all the arrangements for that to happen. You have young people with you that need to know our history. Let me know and I'll take care of all the details.\" Leyanni said.\n\n\"Leyanni, I really appreciate all that you've done and are planning to do. Is there any way I can repay you for everything?\" I asked.\n\n\"Have a great memorable vacation is all I ask. Since it's only the three of us here, I understand Mr. Banks has cancer and this trip is really for him. I want to help you make his trip, the trip he and his family will remember and cherish. Come to me if you need anything and I do mean anything. I think both of you need to get down to the coconut grove. I'll take you down in my cart.\" Leyanni replied.\n\nWe stood up and Leyanni said, \"Bring your towel to sit on.\" \n\nBeth and Leyanni walked towards the door and I followed them. I've always loved to look at beautiful women and Leyanni's nude body was one that would give a dead man a hard-on.\n\nWe walked outside and followed Leyanni to a beautiful cart that was wide enough to sit three people across each of the three seats. Leyanni spread her towel out on the driver's seat as she said, \"Beth you can sit next to me. No offense Dan, but Beth's beauty in enchanting to me.\"\n\nBeth blushed as she replied, \"Oh Leyanni, your beauty is captivating. I've been struck by your beauty since we arrived. Your body is so ....\"\n\n\"Thank you Beth but in my eyes,\" Leyanni interrupted, \"There are some beautiful women with you but you stand out in your group. You girl, are stunningly beautiful. Dan you're a very lucky man to be surrounded by such beauty.\"\n\n\"I know I am but I have to agree with Beth's assessment. If you don't mind me saying, it would be a sin to cover your magnificent body. As a male, I've already checked you out and find you to be exceptionally beautiful. Your beautiful bronze skin color is far more radiant than the pictures we see in the Hawaiian advertisements. If you posed for those ads, I believe Hawaii would sink into the ocean from all the people flocking here from the mainland.\"\n\nLeyanni laughed as she inserted, \"Dan would you come and save me from drowning if my island started to sink?\"\n\n\"Yes, even if I had to swim most of the way.\" I replied. \n\n\"You sir, are not a typical male. I look forward to seeing more of you and your group. I don't know if Marsh told you yet but he's already told me to welcome you back anytime you want to come. He said something about you and your group are family.\"\n\nI smiled to myself as we rode along. A couple minutes into our ride, I noticed Leyanni drove with her left hand on the wheel and her right hand rested on her thigh but she was touching Beth's thigh. I also noticed when we hit a bump; Beth allowed her legs to open a little so her thighs pressed against both Leyanni and my thighs.\n\nWe arrived in the coconut grove and both Beth and I were struck by the beauty of the cabins nestled in amongst coconut trees and the pure white sand beach framed by turquoise blue ocean water. Leyanni said, \"The forecast is for knee to thigh high NE wind swell for the morning going more SSE during the day.\"\n\n\"This is so beautiful,\" Beth gasped, \"In my wildest dreams I couldn't imagine anything more breathtaking.\"\n\n\"You can come back and enjoy this anytime you want.\" Leyanni said.\n\nKim came running out of a cabin when she saw us and said, \"Oh Dan, you have to see inside the cabin, it's simply breathtaking.\"\n\nI laughed saying, \"Beth just used the word breathtaking a few seconds ago when she saw the outside of the cabins, beach and ocean.\"\n\n\"Oh Leyanni,\" Kim exclaimed, \"You have such a gorgeous resort. I love it.\"\n\n\"Thank you Kim,\" Leyanni replied, \"We really enjoy having people here to enjoy themselves even though it makes more work for us. While I'm on the subject, I forgot to tell you our maid service will be cleaning each cabin daily. Unlike in a hotel, our maids will come to your cabin and do their work even if you are in the cabin. Also, unlike in a hotel, our maids are nude. Given the fact that they have seen just about everything, they aren't bothered if they see someone in a, let's say, compromising position.\"\n\n\"So what you're saying,\" Beth added, \"If we're having sex, in any combination, they will go about doing their work without being offended.\"\n\n\"I couldn't have said it better.\" Leyanni said with a smile.\n\n\"Ok,\" Beth said, \"I'll let the others know they don't have to worry when the maid arrives at their cabin.\"\n\nAs we were talking we saw Tom, Janet, Tom Jr., Faith and Audrey walk off their cabin porch, across the sand to the beach. Tom was between his wife and daughter, while Tom Jr. and Faith walked beside Janet. All of them were holding hands as they strolled to the edge of the water and then stopped. Beth looked at me and I saw the moisture forming in her eyes as she said, \"That's what this trip is all about. Look at them; even though they didn't expect to be nude in front of each other, they are taking everything in stride. That is a picture for their family album; I wish I had a camera.\"\n\nLeyanni giggled before she asked, \"Can you keep a secret?\"\n\nBeth, Kim and I looked at Leyanni before each of us said, \"Yes.\"\n\nLeyanni held up her watch and pushed on the stem. \"There you go, I'll email the picture to you Beth. You can have it printed and give it to them.\" \n\nI looked at Leyanni's watch and now instead of the watch face, we saw the picture she just took of the Banks family. She said, \"If you'd like, I'll discreetly take some pictures of the family enjoying this vacation and we can transfer them to your laptop so you can print them or burn them into a disc for the family.\"\n\n\"I think that would be an excellent idea,\" Kim blurted out.\n\n\"I wasn't even thinking about taking pictures,\" I added, \"But I guess you're right, that would be an excellent way to document the good times so they'll have them to remember.\"\n\nLeyanni looked at all of us before saying, \"I can feel the love all of you have for that family. I think all of you are very special for wanting to do something for your former boss. There aren't many people like you, now-days.\"\n\n\"I'll tell you what, when we do the luau, I can have a couple of our surveillance techs video the luau. It's a Hawaiian party like none other you've ever experienced. Even though you'll know it's being recorded, none of you will know who's doing it. Our people are very discreet.\" Leyanni added.\n\n\"I can't think of a better gift to them when we get home.\" I added, \"Would it be possible for your techs to discreetly video what we do on this trip. Like if we go surfing or diving and while we are enjoying the beach. Whatever they can get, would be great.\"\n\n\"Ok,\" Leyanni said, \"I'll get some surveillance techs right on it. They'll be out here in a few minutes. I'll also include some on any trip or event you do. So if you see someone extra in your group, I'll leave it up to the three of you to make sure that person or persons are included in your activities.\"\n\n\"Will your techs be nude also?\" Beth asked.\n\n\"Oh, of course they will.\" Leyanni replied with a giggle.\n\nLeyanni said her goodbyes and the three of us walked over to the cabin Kim had selected. Our cabin was flanked on one side by Tom, Janet, and Brenda and on the other side of us Joanna, Terri and Hanna. The cabins were spread out in the grove so people staying in them wouldn't necessarily bump into each other unless it was intentional. There were picnic tables spread out in the grove also. \n\nBeth immediately wrapped her arms around my neck and kissed me passionately before she said, \"This is where I want to come on our honeymoon. I love this place.\"\n\nKim walked over and hugged both of us saying, \"That's an excellent idea, a honeymoon in paradise.\"\n\nKelly and Allison both hooted and cheered as they walked over to us and joined us in a group hug. I looked around my little harem before saying, \"Ladies, I want all of you to feel free to enjoy yourselves while you're on this trip. All of you have probably noticed there's more than one cock in our group. You'll have to get permission from each individual owner to use it but as beautiful as all of you are, I don't think any of you will have a problem.\"\n\nKelly and Allison decided to go explore the resort and soon after they left, Beth said, \"Honey let's go out on the beach and see if we can make Dan Jr. For some reason, I want everyone to see me making love to my future husband.\"\n\n\"OH yes!\" Kim exclaimed, \"I'll even help aim his wonderful cock at your delicious pussy sweetheart.\"\n\nWe grabbed some large beach towels off the rack and the three of us headed for the beach. As we walked off the porch I noticed immediately Beth was going to get her wish. All of Tom's family was on the beach along with our flight staff and crew.\n\nBeth was holding my hand on one side and Kim on the other as we walked right down to the beach chairs and Beth selected the one closest to Tom Jr. and Faith. Audrey, Frank and Katie were on the other side a couple of lounges away. I spread my beach towel out on the lounge and then reclined the back of the lounge down a little ways. \n\nAs I was standing up Beth was sinking to her knees in the white sand. Without any hesitation she swallowed my cock until her bottom lip touched my balls. I stood there a few seconds enjoying the sensations of her warm mouth before I looked over at Tom and Janet. Both of them were smiling so I reached down and held the sides of Beth head and started to fuck her mouth.\n\nI was enjoying myself way to much when suddenly Beth pulled off my cock and said, \"Lay down mister, I've been waiting all night for that hard cock of yours. I hope you don't mind our audience, I'm horny!\"\n\nI did as I was told and my cock was standing up as rigid as a flag pole. True to her word, Kim reached between Beth's legs when she straddled me and aimed my cock at Beth's hairless pussy. As the mushroom head of my cock disappeared inside Beth, those watching sighed right along with Beth. Slowly and confidently Beth lowered her pussy down my cock until she had it all and she sat on my groin, fully impaled.\n\nAfter a few seconds, she began to slowly undulate her hips in small circles. The circular hip movement became more demanding as the intensity of her shear ecstasy raced throughout her body. Beth threw her head back as the surge of her first orgasm hit her like a brick. Her hands were braced on her thighs and she spasmodically moved in whatever direction she wanted. Her moaning turned to soft screams and finally to loud orgasmic screams of pleasure.\n\nI was almost ready to blow my load when Beth slowed her movement and then stopped. She smiled down at me saying, \"God, I love your cock.\"\n\nI looked over and saw Tom was lying flat on his lounge and Janet was devouring his cock in front of the rest of his family. Brenda was sitting on the lounge next to Tom and Janet with her legs spread with her fingers moving rapidly over her clit.\n\nTom Jr., Faith, Audrey, Frank and Katie watched in awe as Janet stroked and sucked Tom's cock for the first time in front of anyone other than Brenda and Linda. Tom Jr.'s eyes were glued to his mother's exposed pussy and asshole from her kneeling position. Frank was trying hard not to get caught looking at his girlfriend's mother. However, it was difficult for anyone on the beach to miss Janet's natural double \"D\" titties with dark pink areola, swinging back and forth while she milked Tom's cock.\n\nLike Beth, Janet sensed that Tom was almost ready to cum so she moved up and squatted over Tom's cock and eased herself down on it until she had the whole thing inside her. Janet looked around and saw her children looking at her. \"Tom, I think the cat's out of the bag.\"\n\n\"What do you mean,\" Tom queried, \"Audrey has seen us making love many times. She learned how to peek into our bedroom, from her brother.\"\n\n\"Are you kidding me?\" Janet shrieked, \"And you didn't tell me?\"\n\n\"There was no need to tell you sweetheart,\" Tom said with a huge smile, \"You never caught them. That would have been very awkward to say something like, keep sucking honey; your daughter is learning how to give a blow job. Then there were times when we had sex with me behind you and your son was glued to that little space when we didn't close the door all the way, watching every move we made. I guess it didn't turn out so bad; we're going to be grandparents soon. How am I doing Tom?\"\n\n\"That's about right dad,\" Tom Jr. replied, \"But seeing mom sucking and fucking out here in broad daylight where everyone can see her delicious naked body is a real change from watching her through your mostly closed bedroom door, into the dim lighted bedroom. Right.... Audrey?\"\n\n\"Yes mom,\" Audrey added, \"You look much better out here sucking dad's cock. Oh God, I never thought I'd ever admit to watching you. I'm so wet from watching you ride dad's cock, and Frank has a hard-on, so you look good to him too.\"\n\nJanet paused for a moment and looked at her husband before she asked, \"Why didn't you tell me they were watching us?\"\n\n\"That's easy sweetheart,\" Tom said, \"Both of us had such hectic schedules and we were only with our children briefly in the morning before we left for work, I figured a few peeks wouldn't hurt anything. Besides, as far as I know, they never asked us those questions that most parents dread. I don't think it hurt anything for them to see the real thing instead of reading about it in the sanitized books at school.\"\n\n\"Actually mom,\" Tom Jr. said, \"IF you weren't my mother, I'd ask your husband if there was a chance for me to pleasure you. Maybe even offer him a chance to swap partners.\"\n\n\"Where did you learn about swapping Tom?\" Janet demanded\n\n\"Mom, I'm married now. I've learned many more sexual things since I've lived at home. Faith is the excellent partner. I won't go into any details but she keeps things interesting in everything we do.\" Tom Jr. added.\n\n\"Come on honey,\" Tom said, \"We've watched long enough, let's go lie down over there and enjoy ourselves.\"\n\nFaith and Tom Jr. chose to lie down on the lounge on the other side of us. Faith laid down on her back and spread her legs. Tom didn't hesitate to crawl up between her legs kissing each leg as he moved closer towards her slick pussy. Faith lifted her legs and let them fall over the arms of the lounge, giving her husband full access to her glistening pussy. Tom moved slowly and deliberately until his lips touched Faith's puffy pussy lips. Attentively, Tom stuck out his tongue and licked Faith's clit only a few times. Then he moved in and attacked her clit with tender nibbles before he captured it between his teeth and held it. With expert use of his tongue on the tip of the trapped clit Faith experienced her first of many orgasms in front of their group.\n\nThe lounges on the beach were extra wide so they could accommodate two people, side by side. Audrey, Frank and Katie moved two lounges together; it was like having a huge bed. The three of them got on the two lounges with Frank in the middle. Audrey and Katie had been best friends since the second grade so they were almost like sisters. Although Frank was Audrey's boyfriend, with the current changes, Audrey was more than willing to share him with Katie.\n\nJanet watched her daughter move down Frank's body until her face was near his cock. Audrey reached out and gently grasped her boyfriend's cock before she lowered her head and took the whole thing into her mouth. Janet didn't know her daughter even knew how to give a blow job so she watched in fascination while her daughter's head moved up and down on his cock. It became apparent to Janet that Audrey was either a fast learner from watching her give her father a blow job a few minutes prior or she'd been experimenting for a long time.\n\nKatie wasn't going to be outdone so she leaned over and planted a kiss on Frank's lips at the same time she cupped his balls and rolled them in her hand. Frank started to moan and move his hips in time with Audrey's motions. Katie moved between Frank's legs and moved up until she could kiss his balls. Finally she opened her mouth and gently sucked one inside. She began to move her tongue around it and Frank groaned loudly. Both girls worked together to give Frank another first time experience.\n\nTom looked at his daughter sucking her boyfriend's cock and said, \"Damn honey, your daughter looks like she's enjoying herself as much as you do when you suck my cock. Remember all those times you came to visit me in my office and you sucked my cock and the wonderful times I fucked you over my desk?\" \n\n\"I remember the first time I walked in on you two fucking on the desk,\" Brenda injected, \"At first I didn't know if I should stay and watch until you were finished or run. Tom, I was so embarrassed for walking into your office unannounced.\"\n\n\"I remember that!\" Janet added, \"That was the beginning of our beautiful friendship. I remember how Tom waved for you to close the door and come over to the desk. You took baby steps all the way from the door. Your eyes were as wide as saucers. Oh yes .... I remember.\" \n\nAudrey's moan brought Janet's attention back to her daughter. Frank had inserted his finger into Audrey's pussy and was finger fucking her while she sucked his cock. Unbeknown to her mother or father, Audrey sucked Frank's cock often, to keep him happy. The difference today was everyone could see her kneeling next to Frank's legs, with her ass in the air. Even her parents and her brother watched as she took his stiff cock in her hand before she lowered her lips to the head of his cock and began to suck it. She knew some of the other members of her group were moving around the beach behind her so she spread her knees apart giving anyone behind her an unobstructed view of her virginal pussy.\n\nAudrey was smart enough to know Frank had needs and the last thing she wanted was for him to persuade her to allow him to fuck her. Therefore she was more than willing to give him hand jobs and blow jobs almost any time he wanted one. Now, with Katie's help, a guy would have to be out of his mind to turn down a chance to be with two naked girls at the same time. ",
        "Audrey was still a virgin, so to speak. Like Katie, she had broken her own hymen but she'd never had a real cock inside her body. Both Audrey and Katie had made an agreement to wait for that \"special man\" before they would allow a cock inside their body.\n\nBob, Tom (the co-pilot), Sam, Linda, Jen and Jerry were enjoying the water and watching the activities up on the beach. They were a little more than waist deep in water when Joanna, Terri and Hanna raced across the beach and ran into the water. They were soon joined by Jenna and Kevin who immediately began to horse around and splash water.\n\nUp on the beach Beth rode my cock to two minor orgasms until her screaming orgasm got everyone's attention. Beth collapsed on my chest gasping for breath. Faith was the first one to speak saying, \"Honey, I want what she had.\"\n\nJanet looked at Beth and me before she asked, \"Have you two been making love very long?\"\n\nKim spoke up saying, \"Actually no they haven't. It was only after Dan slipped up when they packing for the trip to Syracuse that Dan unintentionally revealed his family members were nudists and he wouldn't need to pack pajamas. It was only then that Beth revealed to Dan that she had been raised as a nudist. One thing led to another and Beth spent some time at our home before the first time they made love to each other. The three of us were in the same bed when they made love for the first time.\"\n\nTom queried, \"Dan, all those years that Beth was your secretary and you didn't touch her, even when you two stayed so late in the office working?\"\n\n\"No sir,\" I replied, \"I never once had any sexual thoughts about Beth while she worked for me. That doesn't mean I didn't notice she is very pretty and has a body to die for; I have a beautiful wife with a super great sex life at home. And between our little group here assembled, Beth is in the process of changing her name to Beth Morrison. Beth and I can't be married officially but all three of us, Kim, Beth and me, have agreed we will live and love together as one family.\"\n\n\"Are you shittin' me?\" Tom exclaimed, \"Are the three of you going to really live together as married, three ways?\"\n\n\"Actually,\" Beth added, \"I want our wedding and exchange of vows to be right here at this resort.\"\n\n\"Holy shit, are you serious about this?\" Tom inquired, \"May I be your best man Dan?\" \n\nI looked up at Beth and then at Kim before I asked, \"Are you up to exchanging vows on this trip?\"\n\n\"OH MY GOD YES, DAN!\" Beth exclaimed. \"Oh this is so much more than I ever dreamed it would be. I was going to have my sister Emily as my Maid of Honor? Because of our unique situation I'd love to have my sister Carrie Kim and Jenna, as my bride's maids so our family is united as one?\"\n\n\"OH SHIT! MY PARENTS ... MY FAMILY!\" Beth screamed, \"What about them?\"\n\n\"I think we'd better ask Leyanni if we can have a wedding here before we plan too much.\" I said.\n\n\"Kim, would you please reach in my bag and get my cell phone for me.\" Beth asked.\n\nWhen Kim handed Beth her cell phone it was easy to see Beth's hands were shaking with excitement as she dialed Leyanni's number. She listened and then asked, \"Leyanni, can I bother you long enough to ask you to come down to the coconut grove? No, there's no problem, but I have to ask you a very important question and I prefer to do it in person. Ok, see you in a few minutes.\"\n\nBeth ended her call and looked at me asking, \"Are you sure you are ready to have two wives?\"\n\n\"Beth,\" I said, \"We've talked about this, our family and friends know what our plans are, and I want this more now than I ever have before. I love you and I want to be your husband any way I ....\"\n\n\"Yes Beth,\" Kim interrupted, \"I want you to be Dan's wife. I want us to continue to share our love for each other. I'll consider it to be an honor to be a bride's maid with our daughter.\"\n\nAudrey, Katie, Brenda, Janet and Faith had stopped doing whatever they were doing and listened to our exchange. I looked at them and each one had tears running down their cheeks. I looked at Tom saying, \"WOW! I hope you don't have a problem with all of this.\"\n\n\"Dan,\" Tom said in his strong voice, \"I've never doubted you in anything you've ever done. I'm not about to start.\"\n\nTrue to her word, Leyanni drove out onto the beach in her cart and parked it a short distance from us. She walked the last few feet over to our lounges. A quick look at us told her we were enjoying ourselves. She looked at Beth saying, \"It looks like the setting here on the beach is going very well for all of you. What may I assist you with?\"\n\n\"You said we could ask you anything.\" Beth started, \"I have a couple of questions that you may or may not be able to assist us with.\"\n\n\"The suspense is killing me,\" Leyanni said, \"Tell me what you need and it's yours.\"\n\n\"Leyanni, it's a long story so I won't bore you with all the details other than to tell you that Dan and I are in love and we want to exchange vows and be married. Legally we can't be married but if you have a minister or a chaplain here who would perform a nondenominational service for us that would be so wonderful.\" Beth said.\n\n\"AND,\" Beth continued, \"If we can exchange vows, the other problem we have is, my family is at home on the main land. I think Dan can have a pilot friend fly down here but we'd have to make emergency arrangements to make that happen.\"\n\n\"Let me make a phone call.\" Leyanni said, \"I'll call Marsh and see if he has a plane coming this way.\" Leyanni kept a straight face so she wouldn't let on that she knew Marsh and a rather large group of people were already coming. \"\n\nTom Jr. jumped up and moved a lounge chair in between the one he was sharing with his wife and the one I was sharing with Beth and Kim. Leyanni thanked him. She sat down and found Marsh's number and called him. We could only hear Leyanni's side of the conversation but what we heard was interesting.\n\nShe greeted Marsh by saying, \"Hello boss, I think I need your help in solving a small problem.\"\n\n\"Yes, they arrived and we're sitting here on the beach enjoying the sun and some of them are out playing in the surf. Everything worked out perfectly. Their plane is being serviced by our guys and from what I've heard; they really enjoyed the trip Ron gave them from the airport to the resort.\"\n\n\"Ok, now here's what I've got to talk to you about. I want to know if you have a plane coming this way real soon, one that can be here no later than tomorrow morning. She paused while she listened to Marsh. No, I'm only curious about the plane because we have a couple of people who want to get married, like tomorrow before we do a luau to celebrate.\" \n\n(After another pause to listen to Marsh) Leyanni said, \"Oh you know both of them very well, they are Dan Morrison and Beth Thompson. Yes, I'm going to have them get married over in the flower garden, it's a perfect setting for a wedding. But boss, the reason I'm calling you is, Beth's whole family is there on the main land and she wants them here for the wedding. I know you've pulled a rabbit out of the hat before, can you pull an airplane off the main land and send it to us with her family in it?\"\n\n\"No I don't think she's called them yet because I'm the first one they asked because they wanted to make sure we could do a wedding here. Ok, boss I'll tell her to call them and alert them so they can be packed and ready to fly. Here's Beth to give you their phone number and their address.\" Leyanni said. \n\nLeyanni handed her phone to Beth and while Beth was talking to Marsh, Leyanni said, \"He's got a plane he can divert to pick them up and bring them here. He said congratulations to both of you.\"\n\nWhen Beth finished giving Marsh the information she handed the phone back to Leyanni. We heard Leyanni say, \"Ok, give Beth fifteen minutes or so to talk to them before you call them. Hey boss, thank you so much for your help. Any time you can get away from the office, I have a special place for you to stay right here at the resort. Take care Marsh, talk to you later.\"\n\nLeyanni asked Beth how many were in her family and Beth replied, \"If everyone comes there will be ten of them.\"\n\nLeyanni thought for a moment and then said, \"There's enough room in the eight cabins here in the coconut grove for your group that's here now and for your family. Everyone will have to share the space. From what I've seen of your group so far, I don't think sharing is going to be a problem.\"\n\nJanet quickly said, \"Oh, sharing isn't going to be a problem at all. I think all of us have learned a little something in just the short time we've been here.\"\n\nKim spoke up saying, \"I can't believe our dream is going to come true. Will someone pinch my titty and see if I'm dreaming?\"\n\nLeyanni reached over and rolled Kim's nipple a little harsh and Kim squealed saying, \"Nope, I'm not dreaming but that felt good, do you want to do that to the other one?\"\n\nI looked at Beth asking, \"Do you want me to make that call to your parents?\"\n\nBeth looked at me saying, \"Dan, I'm so nervous. My stomach has butterflies and look at my hand, I'm shaking.\"\n\n\"Honey come over here and sit with me for a few minutes, I'll see if I can calm you down.\" Leyanni said.\n\n\"Is there room for three?\" Kim asked, \"I'd love to help too.\"\n\n\"Sure sweetie,\" Leyanni said, \"Come on over, the more the merrier, I've always said.\"\n\nBeth ended up being cuddled between Leyanni and Kim. Both women took turns kissing her and both women were stroking her small breasts. Within seconds, Beth was purring like a kitten.\n\nI tapped on Beth's parent's number and it rang about four times before I heard Kathy say, \"Well hello sweetheart, I was wondering if you when you were going to call me.\"\n\nI cleared my throat and said in a high pitched voice, \"I love you too mom.\"\n\n\"Ok, so where are we going now Dan?\" Kathy asked.\n\nWithout even blinking I said, \"Get the whole family together and pack lightly for a trip to Hawaii. You'll be getting a call in less than a half hour telling you what time to be at the airport.\"\n\nKathy started laughing. Actually, she laughed so loud I had to hold the phone away from my ear and even Beth and Kim heard her. They giggled and I said, \"Kathy, this is not a drill, this is real. A plane will be at your airport soon to pick all of you up and bring you to Hawaii so you can witness Beth and I getting married tomorrow.\"\n\n\"DAN MORRISON!\" Kathy yelled, \"DON'T YOU EVEN JOKE ABOUT THAT!\"\n\n\"I'm not joking Kathy, that's Kathy with a \"K\". We are here on the north shore of Oahu, Hawaii at a private resort and your daughter proposed to me. I said yes and tomorrow we're going to be married.\"\n\nThere was a long pause when Dan didn't hear anything until suddenly Kathy screamed, she screamed so loudly everyone near me heard her. I waited for her to calm down before I put the phone back to my ear and asked, \"Kathy, are you alright?\"\n\n\"I'm going to kick your ass Dan Morrison! You hauled my daughter to a far-away place and then you have balls enough to call me and tell me she proposed to you. What kind of son-in-law are you going to be, making my daughter make all the hard decisions?\" Kathy admonished.\n\nI laughed and said, \"Tell Jake I love him too and I'll look forward to meeting the rest of the family.\"\n\n\"WAIT!\" Kathy yelled, \"Don't you dare talk to me like that and then run like a scared rabbit. Where's my daughter, I want to know who really caused this mayhem?\"\n\nI handed the phone to Beth saying, \"She can't believe you proposed to me, she wants to hear it from you.\"\n\nBeth's side of the conversation was, \"Hi mom, how are you today?\"\n\n\"Oh mom, you know Dan he's as excited as a little kid at Christmas.\"\n\n\"Yes I did tell him this is the place I wanted to get married.\" \n\n\"Well, yes I guess what I said could have been construed as a proposal. I love him mom, you know that.\"\n\n\"That's right, we won't get married until you get here, call the kids and get them ready to get on the plane when it arrives. I love you mom, bye.\"\n\nBeth handed the phone back to me saying, \"She wants to talk to you again.\"\n\nI put the phone to my ear and said, \"Hello Kathy, did I tell you how much I love your daughter?\"\n\n\"Dan, you're incorrigible. We have to arrange for our help to be here while we're gone, how long is this trip going to last?\" Kathy asked \n\n\"We'll be coming back some time on Monday so if you go right home, you'll get there on Tuesday. However, you know you're family is welcome to stay extra time at The Morrisons.\" I said.\n\nKathy said, \"When I see you, I'm gonna lay a lip lock on you. I'm so happy; I can wait to tell the others. I love you Dan and give our love to Beth and Kim. Good bye, see you soon.\"\n\nI ended the call and looked around before I said, \"Beth, I think your mother is pissed that you didn't give her more notice.\"\n\n\"Dan, when she gets here, she won't stop crying, so get ready.\"\n\n\"OH SHIT! What am I going to wear and what are you going to wear? Oh God, we have my parents coming and we don't have anything to wear. That will make great wedding pictures.\" Beth exclaimed.\n\n&quot;Shhhhhhh, sweetheart,\" Leyanni said quietly, \"I'll make sure all of you are dressed properly. Let me ask, would anyone be opposed to having their breasts exposed during the wedding?\"\n\nKim, Beth, Janet, Brenda, Faith Audrey and Katie joined a conversation before Beth said, \"Let's get the other girls up here and get a consensus while everyone is here.\"\n\nTom Jr. stood up and went down to water's edge and called to all the girls. He asked them to come out so they could participate in the conversation. Everyone including the males came out of the water. When everyone gathered around Beth said, \"Dan and I are going to get married and exchange vows tomorrow. We are here in Hawaii and all of us are nude. However, the question has come up if the girls will be opposed to being topless for the wedding and the wedding pictures. I want each of you to think about it and let me know so we can plan what to wear tomorrow, if anything.\"\n\nLeyanni spoke up saying, \"Girls I'm sure you're familiar with a sarong and here in Hawaii there is a sarong type wrap called the te p&#257;reu. Both are just wrap around which the girls can wear covering top and bottom or just wrap it around your waist and cover the bottom. If you want to decide right now what to wear, I'll have plenty of them here in an hour for you to choose which Hawaiian floral pattern you like. Or so you know all the options, we can get Hawaiian shirts and some tan shorts if any of you feel the need to cover both the top and the bottom. Either way, all of you can be dressed the same way, ladies and men. At least you won't have to be in those stuffy gowns and tuxes. I'll even have one our staff photographers take pictures for a wedding album for you. It's totally up to you what you want. We can make it happen.\n\n\"Is there a way we can see a te p&#257;reu to help us decide?\" Tom Jr. asked.\n\nLeyanni picked up her phone and sent a quick text message then looked at Tom Jr. saying, \"One will be here in less than five minutes. The young man who is bringing a couple of samples will be wearing one.\"\n\nEveryone was still talking as a group when Allison and Kelly arrived back from their adventure. When they found out what was happening, both of them squealed with joy. The young Hawaiian man drove his cart over to the group and parked a few feet away. When he walked over to the group wearing his very colorful te p&#257;reu, everyone started ooooing and awwwing. Leyanni stood up and took one of the te p&#257;reu from the young man. She had Beth stand in front of her as she demonstrated the variety of ways to wear the cloth.\n\nThe large group broke into two gender groups. The males had the young Hawaiian guy with them as they watched him take it off and put it on again. Leyanni stayed with the women so they could try the variety of ways to wear the te p&#257;reu. \n\nThe guys were the first to decide they would wear the te p&#257;reu covering the lower half only, that is, if the girls decided to wear one that way too. I said, \"If we all are going to wear a te p&#257;reu, then I think all of us, girls and guys should wear our te p&#257;reu the same way with matching sandals. I think that would look exceptional. We can order a te p&#257;reu for everyone who is coming from Beth's family since one size fits all.\" I said.\n\nTom looked at me before saying, \"All those years we worked together, who would have thought our two families would be standing here completely naked, side by side and enjoying ourselves. You know Dan, when the word gets around that Beth is Beth Morrison you'll be raising some eyebrows. I can run interference for you with the board and smooth the rough spots. I want you to know I support what you and Beth are doing.\"\n\n\"Thank you Tom,\" I said, \"I really appreciate your endorsement. We've already talked to our lawyers and questioned them about Beth and me getting married. We also found out that it would be easier for Beth to go through the court system and just change her last name to Morrison. So a nondenominational ceremony with a chaplain will give Beth her wedding day. We were only slightly worried what others would say. I felt as long as we continue to do our job the way we always have, the rumor mill will pass quickly.\"\n\nBeth spoke up and asked all the women to make a decision by taking a vote. The options were to wear a te p&#257;reu covering the lower half of the body with matching sandals or to wear a Hawaiian shirt and tan shorts. The vote of each woman was taken and in the end it was unanimous everyone would wear matching sandals and a te p&#257;reu on the lower body only. \n\nLeyanni was overjoyed that the women had decided to go topless for the wedding. Right away she went into planning mode saying, \"Let me make a couple of phone calls. I'll have someone bring a couple of racks of the te p&#257;reu out here so we can choose the style and everyone can have to same one. I also know a shop that I can get to bring out sandals for everyone. Please excuse me while I make some calls.\"\n\nThe young Hawaiian guy got back on his cart and left while Leyanni talked on her phone. When she finished she walked back to the group and said, \"I called both shops and they will be arriving shortly with everything you need to choose from. For the family of the bride, we need to find out what size feet they have so we can get sandals for them.\"\n\nI walked over to Leyanni and quietly said, \"I'll go up and get one of my credit cards so we can put everything on one bill.\"\n\nLeyanni looked at me and in an almost whisper she said, \"Marsh told me whatever you wanted when you are the guests at this resort, you could have it at no cost. He didn't mention any limits and I suspect he meant everything.\"\n\nLeyanni raised her voice to normal without even missing a beat saying, \"I called our chaplain who is a nondenominational leader. He'll be here in a few minutes to talk to Dan, Kim and Beth. He told me he doesn't have any problems marrying two people who are deeply in love, even if there are mitigating circumstances. He said he'd like for Kim to be present so he can be assured that she consents to the exchanging of the vows.\"\n\n\"So, if Dan, Kim and Beth are going to be busy with the chaplain,\" Leyanni said, \"How about I call my dive instructor to come down here and give you to that mandatory course so you'll be ready to dive? We can interrupt them when they come out from the shops with the te p&#257;reu and the sandals.\"\n\nThe younger people in the group thought that was a great idea so Leyanni made the call and then she turned to everyone and said, \"Two former Navy Seals will be teaching you about diving. The normal course for diving is much longer and much more involved but when you get ready to go into the water, each of you will have a former Navy Seal by your side to assist you. So even though you'll get to dive, you won't be alone.\""
    ],
    "authorname": "RecHiker",
    "tags": [
        "mother son incest",
        "mother",
        "sister",
        "daughter",
        "brother",
        "father",
        "brother sister sex",
        "incest",
        "nude",
        "exhibitionism"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/the-morrisons-ch-25"
}