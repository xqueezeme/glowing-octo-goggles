{
    "title": "Hazel Ch. 02",
    "pages": [
        "I am so sorry for the wait! Life got in the way and I had to steal time here and there to finish this much-awaited final chapter of Hazel. If you have not read the first one or Magical Desire I suggest you do as there are things that might be hard to follow. As always, please leave a comment! \n\nXOXO SkylerLuv \n\n****** \n\n~Hazel~ \n\nSomething is wrong. \n\nI try to concentrate really hard on my last train of thought but I can't. I keep hitting a wall. I groan and slump back on my bed. This last week has been filled with my memory fogging up at random times throughout the day. I haven't told anyone because we have bigger problems to worry about. But the blurred visions are becoming worse. It is only a matter of time before I have to tell someone. I will try to hold off as long as I can. The time on my watch says I should leave now to get to Amelia on time. \n\nI decide to wear a casual royal blue dress that hangs off my shoulders. It's long enough to cover all that it should but I probably shouldn't bend over to pick anything up. I smile at the look I know I'll get from Amelia. She doesn't try to control her attraction to me. It is entertaining to watch her always be ready to jump my bones. We have been getting a little careless lately but I always have it under control. Petting each other above clothing is perfectly acceptable. A couple of hungry kisses are more than fine. If it were up to me I could die happy now, not Amelia though. She always tries to sneak in some extra touches on my neck, a little below my belly button, across my lower back...I should leave now. \n\nI transport to the university's gymnasium. The air is mixed with male sweat and rubber weights. I ignore the stares from the guys, they always stare and their thoughts are always written on their face-very unoriginal. I walk straight to the back, where Amelia is leading a Zumba class. She's filling in for a friend of hers who got sick last week. I look through the window catching sight of her. Her hair is up in a high ponytail causing a little poof at the end. She's wearing purple leggings and a blue sports bra that is barely containing her breasts. My heart skips a beat. I know she's wearing those colors just for me and the way she is moving her hips has me hypnotized. Her eyes begin to search until the finally see me, her heart also skips a beat. Her smile lights up and she moves with more precision. Two dances later I am a dripping mess, my underwear is soaked and I have to catch my breathing. It is probably not a good thing that a full moon is only a couple of days away. The last full moon I had to go out of the state before I ruined everything we had worked for. \n\nA couple of people stay behind to thank Amelia for the class. I walk in just as a guy gives her an overly friendly hug. Now that I think of it there are a lot more guys in the class than there had been before. I didn't know Zumba was all the rage for the guys here. When he pulls back I walk up to wrap my arm around her waist to assert my role as the doting girlfriend. That immediately backfires when I feel the hunger deep in her gut radiating off this innocent touch. I briefly kiss her lips but it is enough to send a shiver up her spine. The other guys waiting to say goodbye look between us and walk away, dejected. \n\n\"All of the guys want you.\" I point out amused. \"And who could blame them?\" \n\nShe gives me a breathless smile. Her emerald eyes are a few shades darker. \"Well I only want one person.\" She grabs two handfuls of my dress and pulls me closer. \n\nI place my hands on her shoulders. There is a light layer of sweat but the physical contact is almost unbearable. \"Easy there. We have things to do remember?\" Once we start kissing there is usually no time for anything else. \n\nHer pout is adorable. \"Can we just sneak in five minutes? I won't be able to think straight if I don't cum now.\" Her pleading tone does weird things to my insides. My breasts tighten and I have to bite my lip. Her full lips are begging to be sucked on. \n\nI look behind me and see the halls are cleared through the windows. I wave my hand, quickly locking the door and adding a protection spell that won't allow others to see us in here. \n\n\"Five minutes.\" I try to be stern but end up smiling. \n\nShe beams up at me and is instantly kissing me. Her hungry lips start assaulting my own. I wrap my hands around her waist, which is also slick with sweat. Her hands wrap around my neck and she moans when my tongue sneaks into her sweet mouth. She stands on her tippy toes until our breasts are rubbing up against one another. Then I feel her pulling me down until we're both on the floor, me covering her with my body. She opens her legs and greedily pulls me down between them. I snuggle closer kissing her a little too roughly. \n\nHer hand slowly runs down the front of my body, lightly squeezing each breast, until she reaches the hem of my dress. With urgency, she pulls it up from between us until her hand cups my covered pussy. She can feel how wet I am and groans. I sneak my own hand down her body paying extra attention to her sensitive nipples until I am at the edge of her leggings. We kiss harder and her fingers begging to run over my swollen clit. I stick my hand inside her leggings without thinking twice and groan out loud when I am met with her bare, slick pussy lips. \n\n\"Amelia,\" I groan against her lips. \"Why aren't you wearing any underwear?\" I try to pull my hand back but she forces me to keep it there. We moan in unison when my middle finger snuggles right in between her lips. Her center is blazing hot. \n\n\"Because I want to actually feel you against me. I can't wear underwear knowing this feeling is literally at the tip of your fingers.\" I see my eyes glowing brown eyes reflecting off her emerald ones. \n\nAny time we fool around we always do it above layers of clothing. I can't risk hurting her. The rings Everette has given us have been helping us but they don't stop all the magic that travels within me. There have been times when Amelia has been lightly burned but she claims to be fine. \n\nI pet her pussy a couple of times and try to pull back again. \"I can hurt you. You know how close we are to a full moon.\" I lean my forehead against hers. \n\nShe pulls my arm closer and her own hand covers mine. She begins to move against my hand and uses her free hand to push me against her clit. Her slick juices coat my hand. Her other hand moves at a faster pace against my covered clit but I feel the effects. We kiss again and I can't hold back anymore. I move my fingers against her clit in circular motions and pick up the speed when I see she is getting close. Her fingers mimic mine and in a matter of seconds we are cumming all over each other's fingers. \n\n****** \n\n~Amelia~ \n\nI can't believe it worked. \n\nJuliet suggested I take a bold step if I wanted things with Hazel to progress to the next level. If I had known not wearing any underwear would have given me this response I would have done it months ago. Technically I did and she ate me out like a champ but that was before we were actually together. I know she's probably going to give me a stern lecture about it but it was definitely worth it. Making out with her is delicious but I already know what her tongue feels like between my legs and I dream about the day when she will do it again. I have felt the undeniable pleasure her touch has given me in the past. I can't take the heavy petting over our clothes anymore. \n\nI'm hanging on to my backpack straps to avoid reaching out for her hand. I would be lying if I said our little rendezvous didn't leave me a bit disoriented. When things get too heated between us I can feel my breath shorten and light shocks of electricity travel throughout my body. Hazel sometimes sees my reaction and immediately pulls back but in the moment I want nothing to stop. If she knew that she hurt me in the slightest I would have to kiss all of this goodbye and I can't do that. Right now I just feel a little lightheaded. \n\nHazel turns to look at me with concern eyes. \"Your heartbeat is irregular.\" \n\nI pull my hair out of my ponytail and run my fingers through it. Avoiding her inquiring look I shrug. There is no way in hell I'll tell her there is anything is wrong. That would definitely stop her from touching me ever again. \n\n\"It was an intense workout.\" I look at people passing us on the sidewalk. Their eyes follow Hazel. Her long brown hair flows freely. Her loose dress does nothing to cover her curves. I blush as I imagine what she looks like underneath. \n\n\"Amelia, you would tell me if something was wrong right?\" She pulls my hand between hers. I want to pull it back but refrain. I can feel her powers are right there on the surface. My hand feels like it is burning up. If I show any weakness right now I will blow my cover. \n\n\"I'm fine.\" I don't know if she completely buys it but we continue walking. I pretend to fix my hair to remove my hand from hers. The electricity radiating off her fingertips are a little bit more than I can bear at the moment. \n\nShe pretends not to notice but I feel her mood shift. \n\n\"We'll pass by your place dropping your bag off. Unless you want to stay?\" She doesn't look at me as she talks. \n\nI bite my lip. I hate having to hold anything back from her. I tug on her hand and pull her to a nearby tree. I pull her face down to mine and kiss her for a long time. We both pull back panting. \"Of course I want to come with you.\" \n\nShe gives me her killer smile and my heart leaps. \n\n****** \n\n~Hazel~ \n\nLeo is looking down at a piece of paper when we show up in his room. \n\nJake is on his bed, staring at him completely forgetting the notebook on his lap. He's wearing a white t-shirt and black basketball shorts. The room is stuffy. I try not to guess what they were up to. He looks embarrassed at being caught staring at Leo. Amelia goes straight to him and gives him a hug. My hands itch to pull her back but I turn to Leo instead. Ever since Jake grabbed her roughly in his room I have hated seeing him put his hands on her, he has apologized many times but I am not willing to trust him so easily. And my jealousy sometimes gets the better of me. \n\nLeo looks over at them as well and I can see his own jealousy just under the surface. I smile, glad that I am not alone. \n\n\"So what is the news?\" I stand next to him. \n\nLeo scratches his long beard and begins to go over the paper he is looking at. \n\nHe points to the map that appears before us. On the map he closes in on Colorado and I see faint figures pulsing on and off on the map. \n\n\"Looks like the rebels were last seen here. The Firetrail Coven gave us a heads up as soon as they spotted them. All of the Coven leaders from this region are getting together with their region in a couple of days. They're going prepared in case things turn serious.\" His yellow eyes look up and begin to glow. I follow his gaze. \n\nJake and Amelia are laughing at something on Jake's phone. I would prefer if they sat on opposite sides of the bed but as long as I can see where Jake's hands are I don't mind. I often find myself pushing back images of them together from the past. \n\nI place my hand on Leo's shoulder. \"Easy there, tiger. Just old friends.\" I have to remind myself too. \n\nHe grunts and looks back down. \n\n\"So what is in Colorado?\" I think out loud. \n\nHis gaze shifts again and he begins to look uncomfortable. \"Rachel.\" My mouth drops and so does his voice. \"But no one has said anything about it yet. I feel like we can be there when the Rebels plan to attack.\" \n\nMy eyes are wide. \"Why would you not share this information with everyone else?\" I want to yell it at the top of my lungs hoping someone of importance will hear it. This seems like something everyone should know and be prepared for. \n\nHe stands from his desk and motions for the window. Jake and Amelia look up from their phones, following us with their gazes. \n\nLeo stands in front of the window, I move next to him. The sun is setting. The view is breathtaking. Deep orange and purple hues paint the sky. The trees in his backyard are bare, showing the birds sitting upon them. Shouldn't they be in the south now? \n\n\"By the time I get the word out all of their plans have to change, it will back the trip up at least another week or so and by then who knows what will happen.\" Leo crosses his arms. His black hoodie tightens around his arms. \n\n\"So what? You plan on taking them down on your own?\" The look he gives me stops me short. \n\n\"Everette is in if you are.\" \n\n\"Leo!\" He shoots me a look and then looks back. Both Amelia and Jake have not stopped staring at us. I turn away and cross my own arms. Lowering my voice I continue, \"Are you crazy? We will all end up dead. There are too many of them.\" My mind races as I think of all the ways they will kill us and then move on to harm our soulmates. \"And if we die who is going to take care of Amelia and Jake?\" \n\n\"We have the element of surprise. We just need to get close enough to incapacitate Elise-\" \n\n\"No!\" I cut him off. There is no way I am risking my life over a witch that has proven to be extremely powerful on her own. \"She will be surrounded by her clan of Rebels and if we even make it past them our element of surprise will be ruined. Leo I don't think you've thought this through. You saw how powerful she was, you felt how powerful she was.\" I shake my head again. \n\n\"We are powerful too. And we're getting stronger each day we are with our soulmates.\" \n\n\"Nowhere near as powerful as her though.\" \n\n\"Hazel,\" He sighs, defeated. \"If anything happens to Rachel they will overthrow me and most likely make me pay with my own life. I was the one who sent her there without running it by the leaders first. It is my life on the line either way. At least this way I have control of how I am fighting for it.\" He runs a hand through his dirty blond locks. \n\n\"Fuck!\" I grind my teeth. \n\n****** \n\nAmelia opens her front door, kicking her shoes off at the entrance. \n\nHer round ass greets me as she bends over to place her shoes aside. I want to follow her into the apartment but there are so many preparations I have to take care of. On the walk back she let me brew in silence. I hate to leave her out of it but I can't have her knowing what Leo plans to do. If she was able to find me in my own home when we had stopped talking for weeks I can't imagine what she would do once she found out I was risking my life. Her overprotective personality will only get her in trouble. \n\n\"You coming in?\" She holds the door for me and frowns. \n\n\"I actually have some things to prep for.\" If everything goes as planned we will leave for Colorado tomorrow and be there right before the full moon. I pointed out that not only would we be stronger then but so would Elise. Leo said he had it covered. \n\nShe nervously bites her bottom lip and I feel the lower part of my stomach tighten. \n\n\"I had a surprise for you.\" Her green eyes stare at me up and down. Her hunger is evident. I wonder if being close to a full moon affects her as much as it does me. \n\n\"I have to do some packing. I'll be going out of town while there is a full moon.\" At least there is some truth behind this. The only good thing about this suicide mission is that I will be nowhere near her when my powers are at their peak. \n\nHer face drops. \"But-\" She turns away and I hold the door open before it slams in my face. \"You can't.\" \n\nI sigh, debating on staying on this side of the door, the safe side, or crossing over and throwing caution to the wind. \"Amelia, please come here.\" I will lose my internal war if I take one step inside. \n\n\"I thought you were getting better control and that you would be able to stay with me.\" She still doesn't turn around. I see her arms wrap around themselves and I almost break. Her heart feels heavy. \n\nI stare up at the ceiling. If there is a God up there, please help me. \"I'm not strong enough yet, love. You know that. I saw how today affected you.\" I knew she tried to hide it from me but I know Amelia better than I know myself sometimes. I know she was hurting today and she hid it from me. \"And I can't trust you to be honest with me when I need you to tell me if you're hurting.\" \n\nShe whips around and her hands drop to her waist. \"Today was amazing! Feeling you against my skin was heaven. Don't turn it into something that it's not.\" She is on the verge of tears. I want to kick myself but I also want to keep her safe. \"Hazel if you leave me tonight because you can't deal with being around me under a full moon, then...\" \n\nShe lets the threat hang over us. \n\nI grind my teeth and narrow my eyes. I know they're glowing. We haven't had a real argument like this before. I need to keep my emotions in check. I breathe in through my nose and out through my mouth. \n\n\"Amelia I won't be here during a full moon and that is final.\" I feel her heart accelerate. I worry that it will become too much one day or that she will have heart problems in the future. Her heartbeats so fast sometimes I worry it will give out. \n\n\"Fine!\" She yells, I guess Juliet isn't home because that would have caused her to come out of hiding. She points behind me. \"Get out! I don't want to see you.\" \n\nFear and anger begin to float to the surface and I stay rooted. I can't leave her angry with me. \"Amelia...\" \n\nShe runs to me and pushes me against my chest. \"Get out!\" \n\nMy hands wrap around her and I kiss her, all of my self-control slipping out of me. She tries to push against my chest but I pull her tighter and kiss her harder. I push us into her living room until we're at her couch. Her hands finally wrap around my neck and she pushes me back so she's straddling my hips. \n\n\"Brat.\" I say in between kisses. She has me right where she wants me. \n\nShe pulls my hair roughly and I moan against her mouth. Her hips thrust against me and I can't help but wrap my hands around her perfect, round ass. She pulls my hair until our lips part then leans back far enough so my lips are inches from her neck. I lick her neck and she shivers. Her hand still has a hold of my hair. The rough way she is handling me makes my pussy pulse. I am usually the one with the upper hand in these situations. \n\n\"If you're not going to stay here during a full moon you have to make it up to me.\" She's breathless and it is hard to hear here over our irregular heartbeats. Blood rushes to my ears. \n\n\"What do you want?\" If I keep letting her get her way she will begin to use it to her advantage. If she finds out all she has to do is pout and drive me insane to get what she wants I will be screwed. \n\n\"I want to feel your tongue-\" I lick her again and she hisses. \"Against my pussy.\" \n\nI groan and pull back. Fuck I'm in trouble. I try to regain control over the situation. \"I will not put your life at risk. You know we can't.\" \n\nShe moves against my lap and huffs. \"Don't you feel my heart beat going crazy? It will literally burst out of my chest if I don't cum all over your tongue.\" \n\nMy mouth waters as I think back to the last time I ate her out. Her sweet juices coated my lips...but she also fainted as soon as it happened. \n\n\"What if you faint again?\" She has to see reason. She can't recklessly put her life in danger over her carnal feeling. \n\n\"Let me. Hazel you treat me like I am some expensive china when all I want is for you to take me to bed and make me yours.\" She kisses me and bites my lip. My glowing eyes meet hers. Her eyelids are getting heavier and her heartbeat isn't slowing. Her cheeks are pink and there is a thin layer of sweat on her forehead. Shit, I need to hurry and do something. This is the longest that we've touched each other with no breaks in between. I don't think she can take much more, even if she is too stubborn to admit it. \n\n\"Fine.\" I push her off me. She pouts. \"I will lay on the couch and you will lower yourself onto my face. But no other physical contact, just my tongue against you okay?\" ",
        "She beams up at me and instantly rolls off the couch. I roll my eyes. I lost, again. She really is a spoiled brat. \"But we need to make this quick. I can see you're already hurting.\" I point to her bottom lip noting that it is slightly bruised. At this point she has to be a masochist. \n\nShe nods eagerly and allows me to lie on the couch. She removes her shirt and takes off her bra. Her dark chocolate nipples are erect. My mouth waters at the thought of taking them in my mouth, rolling my tongue against the little pebbles. Her breasts are so perfect and perky. My hands itch to squeeze them. She removes her leggings and hops on the couch putting one knee on each side of my face. Her dark, bare pussy lips are glistening with her own creamy juices. She rubs her fingers together and slowly lowers herself against me. Her hands are under her chin, fingers interlocked. Each arm holds one breast in place. She looks nervous and excited. My eyes meet hers and I hear her breath catch. My tongue comes out and my eyes roll back when I get the first taste. Her womanly scent and delicious juices assault my senses and I groan. I feel her hips slowly thrusting back and forth against my tongue. \n\nI open my eyes again to watch her reaction. Her mouth turns into a little 'o' as I flutter my wet tongue against her clit. Without realizing it she begins to tug on one of her nipples and I nibble on her clit with excitement. I rub my own legs together and clench and unclench as I continue to lick her perfect pussy. Her juices begin to coat my face and I lick faster paying more attention to her clit. Her small hands squeeze her breasts and her head falls back. She beings to coo and say incoherent things. Her face starts moving from side to side, her eyes brows pull in and then she lets out a long and satisfied moan. I slow my tongue hoping she will get up and remove herself. With one final yelp she falls back against the lower half of my body, officially fainting in style. \n\n****** \n\n~Amelia~ \n\nI am disoriented. \n\nI know my eyes are closed but my eyelids feel like lead making it impossible to open them. Something tickles my breasts and I moan when I feel a tongue flutter against them. I finally open my eyes and see Hazel's glowing eyes looking up at me. My hand comes up to each side of her face and watch in amazement as her cheeks cave in as she sucks on one of my breasts. \n\nI moan and push my nipple further into her mouth. \n\nI finally realize I'm on a bed, in her room, still naked. \"How did we get here?\" She pulls back to speak but I pull her face down again and shake my head. \"I don't really care.\" I don't want her to stop. \n\nShe moves on to my other breast. Her pink tongue flicks against my dark nipple. I have to be dreaming. She wouldn't be doing this without me asking her to. She is too selfless to do something that might risk me getting hurt. I look down and realize she is not touching me, just letting her mouth assault my tender breasts. I'm not dreaming then. I moan when she lightly nibbles. \"I love you.\" I breathe out. \n\nShe chuckles and pulls back for good. I groan in frustration when she doesn't let me pull her back down. \"I have never gotten a good look at your breasts. They're perfect. Mouthwatering. It makes it really hard not to want to lick them all night.\" \n\n\"I'm not complaining.\" I run my hand over them but they're really sore. \n\n\"Not complaining yet.\" She raises an eyebrow to see if I contradict her. I don't want her to lose her trust in my so I just keep my mouth shut. \"Thought so.\" \n\nShe gets up and pulls the blue dress over herself. She's wearing no bra and sexy nude lace underwear. Her caramel nipples are hard, I want to lick them too, but I don't want to push her too far. I already got more than I could have possibly imagined tonight. I didn't think Hazel would ever budge because she has amazing self control but I guess she finds me as irresistible as I find her. It is hard to wrap my head around that. \n\nI stretch, allowing her approving gaze to run all over my body. She turns away when I giggle. She puts on some sweats and a t-shirt which don't ruin her perfect look at all. \n\n\"You need sleep. I am going to be in my father's study preparing for this small trip.\" She leans in and kisses my forehead. \n\nI pout. \"You don't have to go. You can just stay here and I will stay at my place. We don't have to see each other that night if you don't want to.\" \n\n\"If you are within a fifty mile radius I will come for you.\" Her tone is serious. She tries to smile and play it off but I feel our good mood slipping away. \"Come on, I thought giving you an earth shattering orgasm is what you wanted.\" \n\nI sit up and wrap her blanket across my body. \"I did, and thank you. But that doesn't mean I'm still okay with you leaving.\" \n\n\"I promise I will be back as soon as I can. Now go to sleep. I have to leave early to drop you off before catching my flight.\" \n\n\"How far away are you going that you need to catch a flight?\" I hear the disbelief in my tone. I wish I didn't have to give her such a hard time but I feel my anxiety levels go off the charts at the thought of being parted from her. We are meant to be together all the time. I only trust her to protect me and I can't be sure she is safe if I don't know where she is going. \n\nShe seems to think before speaking. \"Just know that I will be safe. Leo is coming with me. He needs to be even more careful with Jake.\" She kisses me. \"Please don't hang out with Jake alone. \n\n\"He won't hurt me.\" Any time I defend Jake I can see her jealousy seep through. She has to realize I have known him for a while now and know he won't hurt me. The last time we were alone together he did not have control over his emotions. It was because of Leo that he got angry and now that they are together. I don't see the threat. \n\n\"Promise me.\" She leans down so we are at eye level. \n\n\"I promise.\" I find myself drowning in her warm brown eyes. \n\n\"That's my girl.\" She disappears, leaving me naked in her bed. \n\n****** \n\n~Hazel~ \n\nI place the phone on the desk putting it on speaker. \n\n\"I really hope we don't have to even contemplate moving on to plan b.\" I am going through some of my father's spell books looking for the one Leo described earlier. He thinks there is a hidden spell in it that might help us sneak up on the Rebels. It has been two hours and I haven't had any luck. My father has hundreds of books in his study. At least it has given me some time to go over the plans with Leo and Everette. \n\n\"Worst comes to worst my plan is still on the table.\" Everette chimes in. His plan consists of causing mass destruction that could possibly put human lives at risk. \n\nI walk to the other side of the room and continue to look through the books on the shelves. \"Everette why are you doing this?\" Ever since Leo and I found our soulmates Everette has been there every step of the way making our relationships that much more durable. \"I mean no offense but putting your life at risk when you don't have to is concerning.\" \n\nThere is a short silence. I wonder if Leo has thought about it too. \n\n\"I don't really have a choice.\" \n\nLeo clears his throat. \"What do you mean?\" \n\n\"The ancestors are going to help you guys through me. I will be some sort of a guide.\" He sounds embarrassed and scared at the same time. \n\n\"I'm sorry.\" I stare at the phone. I can't imagine having to put my life at risk without having a say or even a reason to be involved. \n\n\"This is bigger than us. This is about all those missing humans and the Rebel's next target.\" \n\nI stop walking and stand still. \"Leo, what was the color of the emblem again?\" \n\n\"Ruby red.\" Leo says. I know he caught the shift in my tone. \"Did you find it?\" \n\n\"A red dragon. I found it.\" \n\n\"Thanks goodness.\" He sighs. \"Hazel transport it to me as soon as you can and go straight to bed. We have a long day ahead of us tomorrow.\" \n\nEverette hangs up first. \n\n\"I'm sorry you have to do this.\" Leo says, quietly. \n\n\"Like Everette said, this is bigger than us.\" \n\n****** \n\n\"Bring her now!\" I sit up clutching at my neck. \n\nThe dream I had is slipping through my fingers. Like water, it is impossible to catch. Why did I feel like I was being choked? Was it a woman in my dreams? All I can remember is green. Green scenery, green grass, trees, bushes, people...What? \n\nI look over and see Amelia curled up next to me. I am glad I did not wake her. I look at the clock. I should start getting ready. Her warm heat begs for my body to curl up next to her. No matter how much time we spend together or how many times I kiss her I will always want more. I want more hugs, more kisses, just more. Will she ever get tired of me? \n\n\"Stop looking at me you weirdo.\" Her sleepy eyes blink a couple of times until they focus on me. \"What are you doing up?\" \n\nI lean down to kiss her. \"I have to start getting ready. You have five more minutes.\" \n\nShe sighs against my lips and turns over going right back to sleep. \n\nI take a quick shower and decide to wear some comfortable clothes. Everything is packed. I double check to make sure I have my ID and emergency cash. I kiss Amelia again to wake her. She also takes a quick shower. I am tempted to sneak in and make her cum again but I know I shouldn't. There is not enough time and I've probably touched her more than enough times in this lifetime. I can't have her fainting every time we have sex. I wonder if there is anything more Everette can do to help. \n\nWe eat some leftover pasta the cooks made. I stand next to her on the kitchen island. Amelia keeps staring at me, probably because I can't shake the feeling the dream left me with. I feel some fear but mostly an imbalance in my psyche. I look at her again as she takes another forkful. Her cheeks turn slightly pink. I smile slightly intending to ask what she is thinking about but my mother walks in. \n\n\"Amelia,\" She goes to her and kisses her head. Amelia hugs her back, making sure to only touch her over her clothing. Because my mother doesn't have a ring she can hurt her without meaning to. Her purple robe is wrapped right around her. She has her hair in a loose braid. \n\n\"What are you doing up so early?\" I ask as I clear our plates and walk them to the sink. Usually the housemaids take care of it but no one is up yet. \n\nShe comes to kiss my temple. \"Just wanted to wish you a safe trip.\" \n\nI avoid looking into her eyes. She is more perceptive than Amelia. If she gets any whiff that we are planning to take down Elise on our own the whole thing will be ruined. I will most likely have to step down and they will probably never trust me again. I have to stop thinking of everything that I am putting at risk. I can't afford to second-guess myself now. Plus, Leo really needs me. \n\n\"Thank you, mother.\" I kiss her cheek and move closer to Amelia. \"I'll see you in a couple of days.\" \n\n****** \n\n\"I can't explain it.\" Leo is sitting next to me on the plane. \n\nEverette is on his other side sleeping. I have tried closing my eyes but something is off. \"It is like I had this unshakable urge to bring her with me today. I know what we're about to do is dangerous but it is almost like I didn't have a choice as to whether I want to keep her safe or have her by my side.\" Speaking my thoughts out loud make me realize I am crazy. Maybe Leo can shed some light. \n\nHe nods, \"I get it. I had a really hard time leaving Jake today. But it's the full moon. Our bodies are literally begging us to stay with them.\" \n\nI lean my head back and close my eyes. I want to tell him that it feels different. Last month I wanted to be with her during the full moon but it was mostly sexual. This feels like more than lust. It is a need. I need her to come with me. Leo wouldn't understand. He also has a lot to worry about. I need to be focused. \n\n\"So as soon as we land we're heading to the woods?\" My eyes are still closed but I need to find a distraction. \n\nLeo's voice is raspy. He is probably as tired as Everette but his nerves don't allow him to rest. \"Yes. It is all going to have to happen pretty quick. I give us maybe less than an hour before they can sense your magic along with Everette's. My ring will keep me out of their radar but they'll sense my magic as soon as I get close enough.\" We sit in silence a while longer. If everything doesn't go as planned we will be fucked. \"Try and rest. I'll wake you guys when we're 30 min out to go over last minute details.\" \n\n\"What did you say to your parents?\" \n\nI feel his eyes on me. I open mine and notice his sullen face, the only other time I saw that look on his face was when he stayed away from Jake for that long period. The black clothing he is wearing makes his skin look more translucent. \"I left a note saying I was going out of town with you for the full moon. They are too busy planning for the meeting with the other region leaders to notice me gone.\" \n\n\"If we make it out alive you owe me-big time.\" I smile a little. \n\n****** \n\n~Amelia~ \n\nJake calls me when he gets out of class. \n\nWe decide to meet back at my place to hang out for the night. It is a full moon. We're both feeling at odds with ourselves. This is the first time Jake and Leo have been separated since they hooked up. We both want to be with our soulmates but know this is probably best. I am doing better than I thought, mostly because I keep thinking about what it is going to be like next time I see her. I need to taste her. I feel myself getting turned on at the thought of licking her wet pussy. \n\n\"Stop thinking about her.\" I feel a crumpled paper hit my forehead. \n\nI stick my tongue out him. \"I can't help it. You obviously know what it feels like.\" \n\nHe shakes his head and continues reading his textbook. I feel slightly guilty that we are alone together after promising Hazel I wouldn't be but Juliet should be home soon and Jake shouldn't have to go through this full moon alone. \n\n\"Have you talked to him?\" I find their relationship endearing. Leo is constantly reaffirming his feelings towards Jake while Jake tries to keep it in his pants. It is hard to believe both of them tried to fight their feelings in the first place. \n\n\"Not today. And I don't want to make it harder on him than it has to be.\" His thick eyebrows pull in together. \"Is it weird that they're together?\" \n\nTwirling my pencil between my fingers I look down at my notes. \"We're together. And we actually have history.\" \n\n\"Yeah but nothing will happen.\" \n\n\"You think something will happen between them?\" The pencil falls from my fingers and I bend over to pick it up. I haven't looked at Leo as a threat since I knew they were not actually dating. \"I don't think Hazel would ever do that.\" \n\nHe sets his textbook aside and leans back against the couch. I'm sitting on the floor next to the coffee table. \"I mean, they're both fighting the sexual urge to be with us...together.\" \n\nI tug on my striped shirt, I don't like where this is going. \"Don't you trust Leo?\" \n\nHe is looking down at his phone. \"One of his exes came up to me a couple of days ago.\" \n\nI feel my eyebrows rise. \"What?\" \n\nHe nods. \"Yeah, I know. Leo has talked about his past and he has slept with many girls, but this one was different. He didn't say much about her but she sought me out after one of my lectures and told me some stuff.\" \n\n\"Have you talked to him about this?\" How would I feel if one of Hazel's exes came up to me? Does Hazel have any exes? We haven't really talked about that before. We're usually too busy focusing on our constant need to pleasure each other. How long is the honeymoon phase supposed to last? \n\n\"I didn't know how to bring it up. I've never been good about talking about my feelings. And Amelia, I had a lot of feelings after she was done talking to me. She basically told me Leo hated humans, thought we were a waste of space and finds it really hard to believe he can feel anything for me.\" \n\nI scoff. \"Jake, she sounds insecure. I think you should talk to Leo about that as soon as he gets back. I don't think he'll take lightly some random witch seeking you out.\" Hazel would not like that at all. Now I am curious about her exes. \n\nThe door opens and I see Juliet's raven hair flow in. \n\nEver since she has kept contact with Adam, Juliet is back to her fun bubbly self. Her cheeks are always pink and she can barely contain her feelings for him. I would take this Juliet over the one that was a walking empty shell any day. She is just getting back from the gym. \n\n\"Hey Jules,\" Jake greets her. He picks up his book, officially dropping the subject of Leo's exes. \n\nShe takes off her sneakers and waves at us. Walking to the kitchen she throws her gym bag on the floor. \"Let me grab some water.\" \n\nI pick up my pencil again but the notes before me are hard to focus on. How could that girl find Jake? I thought the ring protected him from being found. Is she a stalker? \n\n\"What are you guys up to?\" Jules stands before us, drinking out of her cup. \n\nI point at the books around us. \"Trying to study.\" I pat the couch next to me but she shakes her head and points to her wet clothes. \n\n\"I'm going to take a quick shower. And then I think we should all go out for a drink!\" Her blue eyes light up with excitement. \n\n\"I don't think that is a good idea.\" Being drunk and wanting to sleep with Hazel while she is nowhere around sounds like pure torture. \n\n\"I agree.\" Jake nods his head. \n\nJules pouts. \" Guys I need a distraction. Unlike you lucky bums I have not had any type of physical encounter with Adam. So basically I am a walking bitch in heat and nothing I do will make it better. Trust me I have tried.\" \n\nI try not to laugh. \"And you thinking going out to drink will help?\" \n\nShe sighs dramatically. \"It's either that or masturbating all night long.\" \n\nJake shakes his. \"TMI Jules. Okay, fuck it. I'm down.\" He looks at me. \n\nI bite my lip. I can hear Hazel's disapproval in the back of my head. \"Sure, why not?\" \n\n****** \n\n~Hazel~ \n\nThe moon is almost at its peak. \n\nLeo is lying between Everette and I. We are all on our stomachs looking below. We opted for black cloaks hopefully hiding us from immediate detection. We're looking down about a mile and a half out to the bonfire the Rebels have created. They have been sitting in a circle for the last fifteen minutes but there is no sign of Elise. Lying on the ground we can feel the energy pulsing just beneath us so she has to be near. My body is so tense from not moving a muscle. \n\n\"As soon as she appears we transport there. I'll set a fire around us so the Rebels can't interfere and each of you guys take a hold of her so we can transport back to the nearest Coven.\" Leo goes over the plan one last time. I want to ask how the nearby Coven would feel about us bringing the most powerful evil witch to them. They probably won't greet us with open arms. \n\nThe air around us begins to pick up. The chanting from the Rebels gets louder. The branches from the trees rustle. I clutch at the grass beneath me. The power radiating from the bonfire is getting more intense. The air gets thicker. The moon rises up a little more and I know we are seconds away from a full moon. \n\n\"Get ready.\" Leo has to yell over the wind. \n\nElise appears right above the fire. Her dark green cloak floats around her. Thunder is heard in the distance. I bite back my fear and shake my head. No time to panic now. She slowly lowers her body until her feet and firmly planted on the ground.  \n\n\"Now!\" Jake stands and we follow. \n\nWe all transport to the center of the circle. In a blink I am standing in front of the most powerful witch I have yet to encounter. \n\nInstead of seeing shock in her eyes, she is smiling like she has just seen an old friend. \n\n\"Hazel,\" She purrs my name \"Nice of you to join us.\" \n\nMy eyes go wide. I turn to look at Leo and Everette, both of them are frozen mid transportation. They look like ghosts hanging in the air. ",
        "She snaps her fingers and they transport near us. The ground opens up beneath them and they are swallowed from the neck down. They're both coughing and spitting trying to catch their breath. \n\nI snap my eyes back at her. \n\n\"Now where is Amelia?\" Her smile is there but her eyes are hard. Her blood red lips make my skin crawl. \n\n\"Safe.\" I respond. My voice is small. Why would she assume Amelia was with me? \n\nHer head falls to the side causing her platinum hair to fall of her shoulders. \"Now that was not what I asked you to do.\" Her smile turns into a frown. Her perfectly plucked eyebrows pull in. \"When I ask you to do something Hazel I expect you to do it the first time. You'll learn I guess.\" She shrugs. \n\nThe Rebels around me begin to shift from side to side. I can't see their faces but I can tell they sense chaos coming. \n\n\"What are you talking about? I haven't seen you since that night in October.\" My lips are dry. \n\nHer smile reappears and she takes a step closer to me. The waves of energy coming off her almost put me to my knees but I stand tall. \n\n\"I will only ask you one more time. Bring me the girl!\" Her growling punches me in the gut and I bend over. My hands come up to push her away but something else happens. My powers begin to go haywire and I start to scream. The power coming off my fingertips feels like red lava running through my veins. I hear Leo and Everette in the background trying to get my attention but the burning sensation only makes me see red. \n\nIt is not until my vision clears that I see Amelia standing before me. \n\n****** \n\n~Amelia~ \n\nI can't breath. \n\nI am clutching at my neck and chest but nothing is working. I was just in the bathroom, of the bar, looking at myself in the mirror when all the lights started to flicker. The only reason I knew I was transporting was because I couldn't breath and the last time I felt that way we had just left the bowling alley. Only this time it felt like I was transporting through space for hours. My lungs are burning. Hazel is standing in front of me but she can't see me. Her usually warm brown eyes are red. Her soft hands have red veins covering them. I begin to see black spots around the edges of my vision. I'm going to die. Even in my last seconds of being alive I think about Hazel and her safety. What is wrong with her? \n\n\"That's enough.\" A voice behind me orders. \n\nThat is when I am able to breath again. I fall over on my knees and take a lungful breath of air. I cough and try to breath in between the coughing. \n\n\"Amelia? Amelia!\" It's Hazel's voice. \n\nI lift my head and see Hazel staring at me in horror. \n\n****** \n\n~Hazel~ \n\nIt has been a couple of minutes now. \n\nI can't move and Amelia is still fighting to catch her breath. The tears burning in my eyes have yet to fall. Leo and Everette are staring at Amelia with the same concerned look on their face. I just transported her thousands of miles through space. She shouldn't even be alive right now. Why did I do that? \n\n\"Amelia, I'm sorry.\" I choke back a sob. Now what? How did Elise get me to bring her here? \n\n\"She'll get over it.\" I hear Elise say. I turn to look at her. \n\nShe brushes some dirt from her cloak and smiles at me. \"Go ahead, hug her.\" \n\nAs soon as I feel myself move I rush to her side. Amelia looks up at me barely containing her fear. She begins to shake and pulls me closer to her. I pull her tight against me, running my hands up and down her spine. \"I'm sorry.\" I keep saying over and over. My eyes never leave Elise. Surely if I am able to transport Amelia here I can make her go back. Her smile gets bigger. \n\n\"No funny business.\" Elise deep voice mocks me her forefinger moves back and forth in front of her. She gets closer to us. I step back bringing Amelia with me. \"Now, ask her if she is okay. Make sure she is completely fine. Touch her.\" \n\nI don't know why but I begin to do as she says. \n\nI pull Amelia's face back and look at her tear stained cheeks. I involuntarily place my hands right against her cheeks. Her green eyes look at me. \"Are you okay?\" \n\nShe nods her head. Her hands come up over mine and I can tell she's trying to pull my hands away from her face. I am probably hurting her. I try to pull hands away but they're glued there. \n\n\"Hazel, that hurts.\" She bites her lip and tries to move her face away. \n\nMy eyes widen, and I begin to cry. What am I doing? Why am I hurting her? I have no control over my hands. They are glued to her face and there is nothing I can do about it. My anxiety level rises with each second. I begin to shake. \n\n\"Hazel, please stop.\" She begins to push against my body. \n\n\"I'm sorry Amelia I can't.\" I try to regain control of my body but I can't move a muscle. \n\nAmelia finally seems to understand and she can't hide how scared she is. She just nods and begins to breath quicker. She closes her eyes and tears start flowing. \n\nOh God, I'm killing her! I'm hurting her! \n\n\"Please stop.\" I look at Elise who is watching us with excitement. \n\nAmelia begins to scream and I see my fingers burning into her skin. \n\n\"Stop!\" I look at Elise again. \n\nShe shrugs and snaps her fingers again. \n\nI push Amelia as far away as I can. She lands in front of Everette and Leo. She moves back until she is behind them. She tries to touch the burn marks on her face but can't. It doesn't look like she is healing either. \n\nI look away disgusted with myself. What did I do? \n\n****** \n\n~Amelia~ \n\nI remember Elise. \n\nShe looks as fearsome as the last time. This time I actually see what she is capable of. My face burns but I can't even touch it. The worst part is the look in Hazel's eyes. She is blaming herself for it but I know she has no control over her actions. I wish I could comfort her but I don't want to get close again until we are far away from this evil bitch. Are we going to make it out of here alive? \n\nLeo and Everette are both buried to the ground from the neck down. How did they all end up here? \n\n\"Are you okay?\" I hear Leo whisper to me. I lean closer to him and respond yes as quietly as I can. \n\n\"Just a few minutes longer guys.\" Everette says. \n\nWhat does that mean? We'll be dead in a few minutes? Why wait? \n\n\"Where is Jake?\" Leo's voice drops an octave. I can see the fear creeping in. He knows he's just a step away from repeating what Hazel just did. \n\n\"We were at a bar. I was in the bathroom and I-\" \n\n\"Stop talking!\" Elise's voice breaks through the air. \n\nMy lips pull tight and I can't open them. My hands come up to my face but I can't get my lips to open. I control my breathing and turn way so Hazel doesn't have to look at me. I have to let her focus. If Everett has a plan I have to stay in the sidelines and not call any attention to myself. And if for some reason this is the end of the road for us I have to let Hazel believe everything is fine with me. She can't see me suffer. \n\n\"Amelia dear, you might want to hear what I have to say next. This is going to be quick so just turn around and sit tight.\" Elise sounds like a teacher trying to get her class under control. \n\nMy body flips around and I land roughly against the floor. My arms and legs cross and I am facing them. \n\nHazel isn't looking at me. Her eyes watch Elise closely. \n\nHer platinum hair flows around her as she rises from the ground. She levitates around the fire, giving us a show. I just want her to get on with it. My body feels fatigue, I'm probably going to faint soon. I don't want Hazel to see that. \n\n\"When I first saw you, Amelia, I knew you looked familiar.\" There is a small smile on her lips. The Rebels around us start to shift back and forth, their black cloaks moving with the wind. The air around us picks up and drops a couple of degrees. \"Your mother was beautiful.\" \n\nI stop shaking, my ears perk. \n\n\"Such a shame I had to do what I had to do.\" \n\n\"Amelia, stop listening.\" Hazel shouts in the distance. \n\nBut I am caught under her spell. I am listening and imagining just what she wants me to hear. \n\n\"Greg, one of my most powerful right hand men, found his soulmate, Kate.\" I feel the hairs on my back stand. My mother's name was Kate. \"Yes, don't look so shocked. Your mother fell in love with him too. She was actually one of the first to advocate for humans to have relationships with us magical creatures. She volunteered her soul so she could be with Greg in the afterlife.\" She is saying everything so fast. It is hitting me like a train going full speed. \"I had plans for you,\" Her eyes narrow briefly but then she smiles\" But Greg got to you before I did and he planted the hospital scenes in your head and expected you to move on with your life. He is the reason you moved all the way over here across the U.S. It took me a while to track you but when I found you I was ecstatic. And the best part is you're following in her footsteps! You have found yourself a witch!\" \n\n\"Stop!\" Hazel turns towards her. \"She's had enough.\" The concern on Hazel's face is evident. She's no longer trying to hide the fear she feels for me. All of this is becoming too much. I think I'm going to get sick. \n\n\"So,\" Elise continues, without blinking an eye, \"I killed her and Greg and made it my mission to find you. You see your soul is one of the purest I have found in years. Should I have it, I can gain even more powers.\" Her smile is calculating. \"But any who, history will repeat itself. You want to be with Hazel correct?\" She doesn't wait for my answer. \"So I'll kill you first, then Hazel and then you guys can life together in the afterlife. I'm really doing you both a favor.\" I see the hunger in her eyes. She wants my blood. \n\nMy mother was killed? She knew about witches and warlocks and was willing to die for one of them? I start hyperventilating. Elise has been looking for me specifically, wanting my soul? I am going to die. I won't make it out of here alive. The only comfort I find is that there might be a chance I will see her in the afterlife. But I don't want Hazel to die. She is so young and has so much to look forward to. I want to speak up, trade my soul for hers. My mouth is still shut tight. My body feels like every molecule is frozen in place. Hazel calls me in the distance but it is too late. The black dots around my vision become more pronounced until I can't see anything before me. \n\n****** \n\n~Hazel~ \n\nAmelia's body goes limp right next to Leo and a piercing scream breaks out of me. \n\nThe connection between us is getting weaker and weaker by the second. I'm losing her! I want to run to her side but my feet are glued to the ground. I can't do anything! There is a slight tugging against my chest but it is barely noticeable. In a matter of seconds I see red. I want to kill Elise. The ground beneath me begins to shake. The dirt bounces up and down around us. Is this my anger? Or does Elise have another trick up her sleeve. The silence that falls around us, is interrupted by the grumbling beneath us. \n\n\"Now!\" Everette yells. I snap my head towards him wondering who he's talking to. \n\nThe ground beneath us shakes even more and I see Elise's eyes go wide. This isn't her doing. With the distraction I rush to Amelia's side. Everette's body shoots up from the ground and the Rebels around the circle begin to drop one by one. Leo claws himself out of the ground and points his palms towards Elise. \n\nShe is frozen into place. She looks around her but she does not move. Her arms are open wide and I see faint outlines of, what I think, are ghosts- each one holding her in place. Everette's hand goes into his robe and he pulls out a green crystal. He chants some words, I have never heard before, they are foreign. Elise screams over his chanting. Her body shakes even more pronounced than the ground beneath us. A blinding light comes from the green crystal in Everett's hand that I have to look away. My body is covering Amelia's. When I no longer feel the ground rumbling I look up to see Everette holding up the crystal in his hand. There is a small light inside of it that flashes on and off. \n\nThe dust around us begins to settle. The Rebels all begin to moan and try to stand. \n\n\"Hazel, we need your help getting all of us out of here and to the next town over.\" Everette says to me. He holds Leo's hand. \n\nI look down at Amelia, I would rather not have to transport her again but I need to get her somewhere safe and quick. \n\n*** \n\nI haven't moved from her side. \n\nIt has been three gruesome days but I have not let her out of my sight. \n\nI turn my neck to try and get the kinks out of it. I've been sitting in this position for too long. The room they have her in is separate than where they have witches that need healing. My guess is we're in deep shit and they don't know what to do with us just yet. I don't care as long as they let her walk away from this. I rub my eyes. They burn. When was the last time I ate? I need to pee but what if she wakes? I don't want to miss it. \n\n\"It might be days before she wakes.\" The healer said when he brought me to her room a few days ago. \n\nWe are in the Wonderfield Coven, about three states over. I would have never been able to transport that far away if it wasn't for my desperation and bond to Amelia. I would have never been able to drag others with me. The Wonderfield Coven leaders and their people have been hospitable but they are just awaiting orders from the Star Dust Coven. They all seem on edge when they are around us. \n\nI stare at the white older lady in the corner of the room. She's wearing a red and white robe. Most of the Coven members have red hair and fair skin covered in freckles. Since I've been here I have learned that they are healers like the Knight Coven but they use more spiritual methods than natural ones. We have probably ruined any plans they had to have a spiritually healing next couple of days. \n\nThere is a purple layer of fog surrounding Amelia, The lady, Gina I think she said her name was, explained that they would usually give a witch or warlock some potion they could drink or have injected into their system to speed up the process but because she is human they have to get it into her system by inhalation. It has to be monitored because anything above what is recommended could cause her more harm. Hence, why Gina has to be in the room when they are giving her the predetermined dose. \n\nIn the passing days I have seen Amelia's sickly ashen skin go back to its normal color. Her hair is shiny again and the dark circles around her eyes are less noticeable. I just want to hold her. I almost lost her. Elise almost killed her like she killed her mom. Oh God, when she wakes up it is all going to hit her like a train. The best I can do is be here for her. \n\nLeo walks in through the double doors, in reality those doors are guarded by a spell and only those with access can come in. This must be important if Leo was able to come in without announcing himself. \n\n\"Get ready, your parents and mine are minutes away from arriving.\" He throws a black, leather bag on my lap. I open my mouth to argue but he puts his hand up. \"I will make sure the room is sealed shut and if she wakes they will let us know immediately. For now you need to change. Eat the power bar that is in the bag and meet us in their audience room.\" \n\nLeo is also dying to have his soulmate in his hands. All of us have been too caught up in giving all of our versions of the events that occurred with multiple Star Dust members to talk to any of our loved ones. I know my parents are going to chew me out and I will probably be demoted. Leo still has to get through all of this before he can even call Jake. They confiscated our phones as soon as we arrived here. \n\n\"If she wakes while we're in the meeting I will have to leave.\" I warn. \n\nHe nods and leaves the room. \n\n*** \n\nThe leaders of the Wonderfield Coven are sitting side by side in their 'thrones' looking down at the three of us. \n\nThey are an older couple, probably mid sixties. The gentleman has more blonde than red hair cut close to his head and his wife has long red and silver hair down her back. They have piercing blue eyes. I feel like we are being scrutinized all over again. \n\nIt is a room very similar to the one we have back home. People come here, voice their concerns-most likely in front of an audience- and get their answers right away. The windows high above the walls let in the deep red and orange hues, the sun must be setting. There are guards in red robes at every corner. It is close to being nighttime. It has taken a while for our parents to get here. They would have probably been here sooner if they did not have to deal with the instructions from the Star Dust Leaders. I wonder if Everret's parents came too. \n\nI hear the door behind us open up. We all turn to see our parents walking in. \n\nI want to rush to my mother's side but she shakes her head when I make a move. Leo's parents also have their hands behind their body's showing no indication that they would accept a hug. I'm surprised to see Everette's leaders walk through the doors instead of his parents but I guess that makes sense. All of their faces are grave. Behind them are the leaders of the Star Dust Coven. I have never seen them in person. I look down out of respect as they walk by. The Wonderfield leaders move out of their seats and offer both to them. Our parents come to stand next to us. \n\n\"There is much to address so let us begin immediately.\" The translucent woman says. Her voice is loud and clear, she looks frail but it has no correlation with her amount of power. Her eyes are just like Adam's, dark with random lights making it look like the universe is in them. Her white hair is kept short. \"You three have done the impossible task. You have captured Elise, one of the most vile and evil beings in our Universe.\" It is hard not to look away. So much power radiating off them both has me feeling weak. I probably should have eaten more. \"Along the way you have put at risk the lives of humans, nearly got yourselves killed, and have caused natural disasters around the site where the incident occurred that we have had to cover up.\" \n\nI bow my head. We have been stupid. I was dumb to think they would be kissing our feet for getting them the person they have been tracking for years. \n\n\"But,\" The man next to her stands. I peek up at the sound of his voice. \"Were it not for your bravery and grit, we would have lost many more human lives and many of our own as well. And for that we would like to give you three the honor of becoming part of the Star Dust Coven.\" \n\nI fully look up and can't hide my shock. This is unheard of. Star Dust members are born into their roles, not picked from different Covens. I look over at Leo and Everrette who have the same look of disbelief on their faces. Is this real? This is truly the biggest honor anyone could have given us. My father has tears in his eyes and my mother finally holds my hand. \n\n\"We do not need your answers at this very moment, we know you have personal matters to attend to but please do have your answers ready by next week.\" The woman looks like she wants to smile but quite can't. \"We will drop by your Covens then. And if we have any more questions in regards to the events that transpired three nights ago we will reach out.\" \n\nThey both move away from the chairs, towards the Wonderfield leaders and speak and hushed voices. \n\nI turn to my parents and allow the pressure of their hands and bodies to calm my erratic heartbeat. \n\n*** \n\nI lie her down on my bed. \n\nThe healers at the Wonderfield Coven assured me Amelia was good to come home with me after the meeting with the Star Dust leaders. They said she would wake by tonight and if for some reason she did not they would come to take a look at her. I carried her the whole way. The car ride felt like an eternity. My parents both gave me a lecture most of the car ride but I could hear their admiration along with fear in their tones. They gushed about the honor we were given by the Star Dust leaders but I barely paid attention. All I could focus on was Amelia in my arms, her heartbeat matching my own. The beat is steady and the connection between us feels the same but there is something more I can't pinpoint. I guess almost losing her has made me appreciate each beat that much more. I love her so much. ",
        "I put a thin blanket over her. I take off my robe and stretch my body. I feel more at ease in my own home. I have barely slept since I've been gone. I can't wait to be in bed next to her soon. I look over at her again, she hasn't moved. I guess a quick shower won't hurt. \n\nI let the hot water run over my skin. I scrub as hard as I can. Trying to erase images of that night away. I was so close to losing her. I rub away the tears from my face. I didn't lose her. She's right in my bed. I will not let her out of my sight. The Gods themselves could never pry me from her. \n\nI stand in front of the mirror. There are some bruises on my arms. My eyes look like they have sunk into my skull, I need to eat. I shake my wet hair away from my face. I dry myself off with a towel and hang it up on the rail. I put on my royal blue robe and shut the bathroom light off. I imagine my baby blue underwear on my top drawer and move my hand in the air to open the drawer across the room very quietly. Before I can open it completely I hear her shift on the bed. I slowly turn, my heart-her heart-skips a beat. She is sitting up on her elbows, her emerald eyes taking me in. She doesn't look tired or out of it like I expected. I know all she's wearing is my white tank top and nothing else underneath. I can't fight the deep-rooted want that almost knocks me to my knees when we make eye contact. She is hungry, but not for food. \n\nI rush to her side and cover my body with hers. Kissing her deeply, I feel encouraged when she moans into my mouth. Her eager tongue sneaks out and licks my bottom lip. I groan and deepen the kiss. Her arms wrap around my neck and she pulls me closer to her, I settle in between her legs. I feel her perky breasts through the thin cloth against my own. I want to lick them like I have done before. This is usually the part where I pull away and put some distance between us to let us cool down. But nothing can tear me away from her at the moment. I want to forget just for a second that I almost came home without her. I let my tongue wrap around hers. She kicks off the sheet that is between us and tugs my robe off. \n\nShe gasps. \"You're so beautiful.\" Her lids are heavy but she's looking down at my body. I feel ten feet tall and kiss her with even more hunger. \n\nSomething is urgent about her. This is one of the most intense kisses we have ever had. I feel her sexual frustration match mine. It should scare me but it only gives me more incentive to get closer. The usual fear that I feel about hurting her is nowhere to be found. I know I shouldn't be reckless and push her too hard but her heart beat sounds strong, the blood pumping in her veins is steady. I feel like I am close to finding the answer to what is different between us when I hear her frustrated moans. \n\nHer hips begin to roll against me. I know what she wants. I lick her bottom lip and bite it. She moans again and tugs on my hair. I let my hand run down the side of her face and down her neck. I take a handful of her covered breasts and slightly squeeze it. A shiver goes up my spine at the gasp that escapes from her lips. My hand trails lower until I sneak it in between her legs. She is soaking wet. She gasps and her head falls back. I stare down at her as I spread her pussy lips open and allow my fingers to be coated with her juices. She moans even louder when I let my middle finger flutter against her clit. Her t-shirt is bunched up around her hips but I can see my hand buried deep into her folds. \n\n\"Please,\" There is desperation in her tone. \n\nI stick my middle and ring finger into her wet hole. Her hips come up to take me in. \"Ah,\" She yelps. She grinds into my palm and I know it is only a matter of seconds before she is coming. I cover my lips with hers and swallow her moans as she shakes beneath me. I pump in and out at a faster pace until she is clawing at my back. Her body stills and she practically screams as the waves of pleasure take her under. I let her ride it out on my hand, anticipating what she will taste like. I just want to lick her now. I pull my hand out and start to remove the shirt she's wearing. Once I do I kiss her lips. \n\nHer eyes flutter open. \n\nI'm mildly surprised she didn't faint this time. That is a first. I should probably be taking it easier on her but my body wants to taste her, fuck her, and forget about the rest. \n\nShe looks at me with wonder. Her emerald eyes are shining with lust. \n\n\"Hi, love.\" I smile tenderly. \n\nShe looks shy all of a sudden. \"Hi.\" \n\nI expect her to say more but she doesn't. I expect her to have questions or comments. But maybe she doesn't want to remember either. \n\n\"How are you feeling?\" I feel her heartbeat all over the place. \n\n\"Good.\" She sits up and puts some space between us. I sit back and allow her all the space she needs. In reality I would rather have her in my arms but I don't want her to feel suffocated. \n\n\"I'm sorry but...who are you?\" she whispers as she pulls the covers over herself. \n\n****** \n\n~Amelia~ \n\nI can tell the question upset her. \n\nI want to take it back. She looked so happy and peaceful just a few minutes ago. Her gorgeous intense brown eyes make my insides feel mushy. Her long brown hair felt so soft under my hands. And her amazing body is to die for. I can't stop staring at her breasts. I feel my mouth water and my already soaked pussy is getting the sheets beneath me drenched. Even though she just gave me a mind blowing orgasm, I have no idea who she is. Or why I am here, or who I am. I bite my lip and control my breathing. I can't be in danger because I don't feel like I am. She doesn't look like the bad guy, but then again, how would I know what a bad guy looks like? \n\n\"Amelia,\" Her sweet tone interrupts my mental breakdown. \n\n\"Yes?\" I automatically answer. I sit up higher. I guess that is my name. \n\n\"What is the last thing you remember?\" She grabs her robe from the floor and puts it on. \n\nI feel irrationally upset to see her covered up. I want her to kiss me again, but she just asked me something. \n\n\"Um,\" I close my eyes and try to focus on my last memory. I think harder but come up short. \"I don't remember.\" I look at her under my lashes. I want to kiss her again. \n\n\"So you don't know who I am?\" \n\nI shake my head. \n\n\"Why did you kiss me?\" She is confused. \n\nI shrug. \"I don't know. I can't explain it. I just saw you there and I wanted to kiss you so I did. It just feels right.\" \n\nThis seems to make her happy. She walks over to my side of the bed and sits next to me. She brushes a curl out of my face and places it behind my ear. I shiver at the contact. Every time she touches me she is pulling at strings in my lower belly, no matter how innocent the touch. Her knuckles brush against my cheek. I feel the hunger creeping in again. I want her to kiss me again. My heart skips a beat when her eyes land on my lips. \n\n\"What do you feel when I touch you?\" She looks into my eyes. \n\nI lick my lips. She is so sexy. \"I feel an intense connection. Like, electricity flowing through your fingers. But it doesn't necessarily hurt. It feels good when,\" I bite my bottom lip embarrassed at how honest I am being. \"It feels really good when you touch me.\" \n\nShe smiles, but I can tell she is still worried. \n\n\"Okay,\" She stands again and begins to pace. \"So you obviously still feel the connection between us. You have no idea who I am and you can't pinpoint what your last memory is?\" She seems to be talking to herself. \n\nI feel tired now. When I first woke up I felt hungry and tired and I meant to ask her for some water but when she turned to look at me I felt this pull between us and I wanted nothing more than to kiss her. Now I feel the tiredness creeping in. \n\n\"I'm sorry, what is your name?\" \n\n\"Hazel,\" She pretends not to be hurt by my question and I regret making her upset again. \n\n\"I'm sorry Hazel but I'm getting really tired.\" My eyes begin to droop. \"Is it okay if I take a nap here?\" I lay back and start getting more comfortable. \n\nShe comes over to tuck me in. \"Yes, of course you probably need more sleep.\" I close my eyes and the last thing I feel is her lips against my forehead. \n\n****** \n\n~Hazel~ \n\nAs soon as her breathing begins to slow I jump off the bed and put on a fresh change of clothes. \n\nFuck! Shit! Fuck! What happened? I tried to play it cool and not freak out in front of Amelia but I can't hide it anymore. How did she lose her memory? Is it something Elise did before disappearing, or was the whole experience so traumatic that her brain would rather forget? I put my damp her in a bun and stuff my feet into some shoes. I probably have an hour tops to figure something out before she wakes again. \n\nI look over at her again. I can't believe she lost her memory and the first thing she wanted to do was kiss me. I smile and shake my head. At least she doesn't seem scared of me. \n\nI close my eyes and transport to Leo's place. I make sure to transport outside his room in case Jake is over. I knock on the door. It takes a while before he opens it. He only has some basketball shorts on. Pretty sure they are Jake's since he is more of a kick boxing kind of person. \n\n\"Hazel?\" He looks confused and tired. \n\n\"Sorry to bother you Leo but I have a dilemma.\" I feel my nerves on edge. I want to shout and run for two miles, run all of these emotions off but right now I just need someone who can help. \n\nHe closes the door behind him. \"Sorry, Jake is sleeping and he really needs to recover.\" \n\nI want to make fun of him for not letting Jake rest because of his ridiculous sexual frustration but I skip to the root of my problem. \"Amelia doesn't remember anything.\" \n\nHe has his arms crossed and his eyes only blink. \"What do you mean?\" \n\n\"I mean she doesn't remember me!\" I start to pace the halls. \"I mean, she didn't even remember her name or what her last memory was.\" \n\n\"Okay.\" He looks fully awake now. \"We need Everrette's help.\" \n\n\"I don't want to keep bothering him.\" But that is exactly who I want to see next. \n\n\"We definitely owe him. But trust me, he is our best bet. I will get ready, give me five minutes.\" \n\n\"I'm sorry!\" I say when he opens his door. \"I know you just want to be with him right now.\" \n\nHe shrugs. \"I owe you one.\" \n\n*** \n\n\"I can't help with that.\" Everette says once he meets us by the sycamore tree. \n\nHis dampened, brown robe looks almost black. He was just getting back from his jog when we called him. I wish we could just let him live his normal life. Instead we keep expecting him to come through for us when we really have done nothing to deserve it. But I swear on my life if he ever finds his soulmate I will make sure they end up together no matter what. \n\nI can't help it when my face falls at his words. I know we have bothered him too much. But I secretly hoped he would have some answers. \n\n\"But I think I know someone who can.\" He smiles at my relief. \n\nLeo laughs and I flick him off. \n\n\"This is serious.\" I point out. \n\n\"Hazel, she woke up and sought you out. Even with her memory gone your connection is still there.\" He smirks. \"You guys will get through this just like you have gotten over all of your other problems.\" \n\nI can't help but smile back. This is what I need to hear. I look down at my watch. I have less than thirty minutes left. \n\n\"Okay when can we arrange this? Amelia will be up soon and I need to be there.\" \n\nEverrette is looking down at his phone. He types something and waits while staring at the screen. I hear it vibrate and hold my breath. \n\n\"He can meet tomorrow afternoon.\" \n\nI would rather not wait that long but I have no choice. I grab Everrette and hug him tight, this is the first time I have displayed this form of gratitude and I can see it catches him off guard. I should probably do something more for him. Once I get over this hurdle I will find a way to repay him. \n\nLeo pats his back. Before we transport away Everette stops us. \n\n\"Are you guys going to take the deal?\" \n\nLeo doesn't look at me. \"No.\" He doesn't offer any more explanation. \n\nI am not surprised by his answer. When we were first offered positions as Star Dust members we were grateful and would have probably given it much more thought if it didn't mean that we would have to leave our soulmates behind. Everette is lucky. He has a clean slate and no reason not to say no. Leo and I, on the other hand, would have to leave Amelia and Jake being that Star Dust members cannot have soulmates, especially human ones. Soon after realizing that I never gave it a second thought. I think my parents know what my answer will be but that won't stop them from bragging about the opportunity that was granted to me. \n\nI shake my head. \"I could never live without her.\" \n\nHe smiles and nods his head. \"I figured as much. Guess it'll be up to me to look after the both of you from up there.\" \n\nI smile ruefully. \"You've been doing great so far.\" \n\n****** \n\n~Amelia~ \n\n\"Where is she?\" I turn to the girl who's name is Juliet. \n\nShe's supposed to be my childhood friend but I don't remember her either. I was meant to come back to my dorm and meet her and Jake, I think is his name, to jog my memory but so far nothing has helped. Looking through photos, videos, and even reading some embarrassing diaries I can't remember anything. I would be lying if I said I wasn't distracted by thoughts of Hazel and her soft lips or magical fingers. When she announced that she had to leave for some meeting I felt my anxiety creeping in. Being away from her leaves me restless and upset. Even if I don't remember her, my body does and she is the only person I feel comfortable around at the moment. I met Leo briefly when he came to pick her up and I tried not to feel jealous when I saw her leave with him. She seems to like me a lot too. I comfort myself with that thought. \n\n\"She should be getting back in an hour or so. It has only been thirty minutes.\" Juliet is looking down at her book. She's reading some old novel for one of her English classes. She's spread out on the couch and Jake is on the recliner watching T.V. I'm sitting on the floor next to the coffee table, something about this feel like deja vu. \n\nJuliet is a beautiful girl, with dark hair and blue eyes. Even now wearing a plain gray shirt and black yoga pants she looks like a model. She told me about how we met and eventually became inseparable but it is still hard to believe someone as gorgeous as she would want to be friends with someone like me. Jake is also insanely attractive with his dark skin and physically appealing body. His dark hoodie and work out pants plays into the whole jock look. How did I end up dating him? I'm mildly curious but mostly trying to find ways to distract myself. \n\nI wish I had some school work to take my mind of everything but according to Hazel I am probably just going to take some time off from school until I'm back to my old self. I tried not to let that get me down. Did she miss the old me? What if I never remember? Will she decide to leave me? \n\n\"I feel bad for you. It all must feel really new to you. The separation anxiety is probably worse than it's ever been.\" Jake says and looks down at me with sympathy. I love his skin color and his thick lips but I don't feel any attraction to him anymore. \"You were getting really good at distracting yourself when Hazel wasn't around.\" \n\n\"Does she leave often?\" I can't hide my concern. I can't imagine having to deal with this over and over again. And to be honest I don't know if I want to get used to the idea of not having her around. I feel my heart beat go crazy at the thought of having to go days without seeing her. Surely that will never happen. Right? \n\n\"You're going to chew your bottom lip off.\" Jake points out. \n\nI stand and begin to pace the living room. \"I don't know what to do. This emotion just feels so intense. Everything about her feels intense.\" \n\n\"Tell me about it.\" Juliet snorts. \"I only get to see my soulmate once a week and we don't even get to touch.\" \n\nI cringe. I could never. I forget that these two are probably the only ones who actually understand what I am going through. Juliet does have it the hardest, I'll admit that. But this ache I feel in my chest is not something I think I can every get used to. \n\n\"You know there was a point in time when you and Hazel didn't see each other for weeks.\" Jake says. \n\nI feel my heart skip a beat. \"Why?\" \n\nJuliet puts her book down and gives him a look. He shrugs. \n\n\"I think Hazel should tell you the story of how you guys met and everything that happened afterwards.\" She's trying to play it down, but I want her to be honest. Maybe she doesn't think I'm ready for this conversation. \n\n\"I just wish she was back already.\" I know I sound like a whiny child. \n\n\"Her heart rate is probably through the roof right now with you pacing back and forth.\" Jake smirks. He tugs on his diamond earring. \n\n\"How? What do you mean?\" I stop mid pace. \n\nJuliet pushes Jake's arm. \"Don't listen to him. Hazel will be back in no time and you will be able to breathe just fine.\" She kicks her feet off the couch and stands. \"I think you need a distraction. Alcohol has always been our best friend. Do you want to stay in or go out?\" \n\nI nibble on my bottom lip again. I drink alcohol? I remember the taste of alcohol. I don't see how it can be my best friend. How can I remember that but not anything actually important? \n\n\"I don't know if being around people is a good idea.\" Jake stands as well. \"But I think we have drank this place dry.\" \n\nJuliet purses her lips. \"We definitely finished the last bottle last night. I guess going out it is.\" \n\n\"Are you sure?\" I cross my arms. \"What if she gets back and she can't find me?\" \n\nThey both stare at each other and laugh. \"Oh trust me, she'll find you.\" \n\n****** \n\n~Hazel~ \n\nI am two seconds away from calling it quits. \n\nMy heart is close to popping out of my chest and I know this is all Amelia's doing. I should trust that Jules and Jake have this under control but why would her heart beat be so off balance? \n\nReggie, Jake's friend who is helping me come up with a solution is looking down at an ancient spell book. We're in his study. He's probably in his mid thirties and from what I gather he hasn't found his soul mate either. I'm sitting on a chair across from his desk. Everette is next to me and Leo is off walking around the study amazed by all it has to offer. More than once Reggie has asked him not to touch any of the books. He looks like a kid in a candy shop. \n\nReggie, like Everette, has dark rich skin. His hair is in locks and comes down to the middle of his back. He's wearing a suit, which is rare in our Covens, but I think Everette mentioned he was an actual lawyer in the human world. It is not rare for some of us to try and work or live alongside humans. Now that I have Amelia, I will probably consider it. \n\nHe turns to the next page. My leg bounces up and down, I want to ask how much longer but don't want to interrupt his concentration. Just then the book moves slightly away from him. He sits back and the book shuts itself. \n\nI jump back. \n\n\"I need a moment with Hazel.\" His deep voice commands. \n\nLeo and Everette leave. I chew on my bottom lip. \n\n\"I don't know why but the ancestors have had the answer all along, they were just asking me to buy time. They had a lot to say.\" He slowly rises and goes to a shelf near the back of the study. He digs in all the way in the back and pulls out a small glass container with blue vile inside of it. \"This is the answer to all of your problems.\" \n\nHe doesn't hand it over. Instead he comes to sit next to me and crosses his ankle across his knee. \"The ancestors did want me to deliver a message as well.\" \n\nI sit straight. I should have guessed the ancestors would be here. I try not to feel like they are scrutinizing me on the other side for bothering Everette so much. ",
        "\"You have been given an amazing opportunity.\" I don't think Everette is the one who told him about our conversation with the Star Dust leaders. \"According to the ancestors you will have many successes along the way if you take it.\" \n\nI wait for him to continue, but I already know what my answer will be. \n\n\"They know your mind's made up but they know all that you are capable of and know you are exactly what the Star Dust Coven needs to shake things up.\" \n\nI bow my head. This is in reality the truest form of praise I could ever receive. I have people on the other side basically telling me I am the chosen one for the Star Dust Coven. And here I am choosing love instead. \n\n\"She doesn't remember anything.\" He points out. My head raises and I look at him. \"They think that should make it easier on you.\" \n\nFor a split second I consider it. Me going off to be a Star Dust member, overlooking Covens around the U.S. and assuring that they are doing their best to protect humans. I would probably get more responsibilities than if I stay in my own Coven. Amelia would move on and living a normal human life. She would never be at risk of being hurt or targeted by anyone for being with me. She could eventually forget me. I hurt just to think of it. Seeing her happy with someone else, seeing them start a family. Because I know if I ever walk away I would never forget and I will always look over her. But can I really sit idly by as she falls in love with someone else. With a heavy heart I sigh. I don't think I can. I feel the shame wash over me for being so selfish and ignoring the wishes of the ancestors but I can never live without her. I love her so much she is basically a part of me. A part I cannot leave behind. \n\nHe turns his head to the side. \"You're still going to choose her aren't you?\" He doesn't sound like he's judging me. He looks almost amazed. \"Well here.\" He hands me the bottle. It is small enough to fit in my palm. I put it in my bag. \n\n\"When you give this to her, make sure you are ready for the flood of emotions that will rush back to her. She will remember everything and it might be too much for her to handle so don't be alarmed if she needs a minute.\" He stands and I follow him to the door. \n\n\"Do they know what happened to her? Why she doesn't remember?\" If they know so much about my abilities and what my future holds surely they would know what caused this. \n\n\"They mentioned some healing vapor used by the Wonderfield Coven.\" I can't hide my worry. \"But it's okay, apparently it did more good than harm. Have you noticed how she is not as sensitive to your touch as she once was? They don't know if it is permanent or if it will wear out but enjoy it while you can.\" \n\nI feel embarrassed but it all starts to make sense. The reason she didn't faint last night, the way I can touch her and I don't feel like I am hurting her. This purple fog took her memory away but gave me the ability to touch her in ways I only ever dreamed of. I get excited about the prospect. \n\n\"Again, give her some time to recover after you have given her the potion.\" He pats my arm and opens the door for me. \n\nI blush but nod. \n\n****** \n\n~Amelia~ \n\n\"Why would she say no?\" I yell over the chatter around us. \n\nWe're at a nearby bar where everyone seems to want to be tonight. Don't these people have classes tomorrow? Jake was just explaining that Hazel and Leo were given this amazing opportunity to be part of an all powerful Coven but that both would reject it. It doesn't make any sense. Who would turn that down? \n\nSome would be freaked out to learn the person they fell in love with have magical powers but I couldn't care less. As soon as I laid eyes on Hazel I knew we were meant to be together. She could be an alien for all that I care. \n\n\"Star Dust members can't have soulmates.\" Jake looks around making sure no one around could be listening. \n\nI sit back and let it all settle in. Hazel doesn't want to take the opportunity because she would have to leave me behind? Does she want to go? My heart contracts at the thought of her leaving me forever. But I can't ask her to do that. If this is a life changing opportunity I can't be the only reason she stays back. With dread deep in my gut I try to imagine letting her go so she can pursue being a new member to this coven. I have to give her the choice, let her know that I can find my way if she decides to leave. Juliet rubs my arm. \n\n\"Here,\" She hands me another shot or clear liquor. \"Let's take another one. We're supposed to be here to distract you not make you feel sad.\" She gives Jake a pointed look. \n\nHe puts his shot glass up and smiles apologetically. \"Sorry. Okay here's to our junior year of college.\" \n\n\"Here's to me taking summer classes to make up for this lost semester!\" I chime in, pretending to be unbothered by the looming thought of Hazel leaving me. \n\nWe all laugh and push our glasses against one another. The drink burns down my throat. I bite the lime in front of me and shake off the feeling to throw it back up. We talk about Jake's football season and how his mom loves Leo. I try to pay attention to everything he's saying but the liquor is just making me more distracted. I can't stop thinking about her. \n\nA random guy walks over to our table and shakes hands with all of us. Jake and Juliet look on guard. He leans his arm against my side of the table and stands a little too close for my liking. Even semi-drunk I don't feel anything when he leans in to call me beautiful. My first instinct is to push him away and ask him to leave us alone. I look him in the eyes ready to make a snarky remark when I suddenly feel my blood buzzing. It is not the liquor it's something else. The tips of my fingers feel tingly. I look away from the guy. \n\nMy eyes search the bar. She's here. I don't know how I know that but I can feel it. I press my legs together and looking throughout the whole bar. Then I see her and my breath catches. She's walking through the crowded bar to get to our table. She's wearing a baby blue blouse with tight dark jeans and black boots. Her hair is up in a ponytail. She looks so good, I'm left breathless. \n\nThe guy in front of me moves his head so he blocks my view. I feel my annoyance creeping in. \n\n\"Hey, I think you might want to leave her alone.\" Jake interjects. \n\nThe lights above us start to flicker. \n\nHazel's hand comes up to the guy's shoulder. \n\n\"You have three seconds to walk away from my girl.\" Her threat sends shivers down my spine. Whether from being turned on or scared for the guy, I don't know and I don't care. \n\nThe guy shoots me a frightened look and his skin goes pale. \"Sorry.\" He murmurs and scurries away. \n\nI get up from my chair to hug her. My body leans into her, basking in her warmth. No matter how hard I try, I can't stop myself from kissing her deeply. I sigh against her lips. This is exactly what I need. Her arms wrap around my hips and I pull her face closer to mine. Even with my eyes closed I can hear the flickering of the lights above us. This must be her doing. \n\n\"Easy Hazel.\" I hear someone say in the distance. \n\nAll too soon Hazel pulls back and looks at me with a breathtaking smile. \n\nI look around to see most of the bodies in the bar looking at us. I give her another hug and hide my face into her neck. \n\n\"Glad to see you guys are properly distracting her with liquor.\" Leo says. I look out again and most people have looked away. He is sitting next to Jake, holding his hand. \n\nJuliet offers him a shot but he shakes his head. \n\n\"And trying to push Amelia on to other love interests.\" Hazel looks down at me in question. \n\n\"He was nice.\" I bite my cheek to stop myself from smiling. \n\nHer hand comes down to my ass and she squeezes it. \"I can be nice.\" She purrs into my ear. \n\n\"I want to get out of here.\" I whisper back. I'm supposed to be playing it cool and pretending to know how to flirt but I can't even manage that. I just want to be alone with her right this second. \n\nShe nods. \"Your place or mine?\" \n\n\"Wherever.\" As long as we're together I want to add. \n\n****** \n\n~Hazel~ \n\nI'm holding the glass bottle in my hand. \n\nAmelia is in my shower. She'll probably be out soon. \n\nI need to give her this soon. And then I need to be there for her when she remembers everything, including all the hurtful things Elise revealed that horrible night. It hurts me to realize she's going to have to remember everything about her mother's death again. I wish I could take the pain away along with the memories but unfortunately it doesn't work like that. I'm tempted to put it off and just keep enjoying how she looks at me or how she can't keep her hands off me but I know I can't. It is not fair to her and she needs to begin to heal. \n\nThe water faucet stops running. It's now or never. \n\nAmelia comes out in my royal blue robe. \n\nHer curly hair is parted down the middle. Her light brown skin glows with water droplets. My mouth waters at how innocent she looks. She looks shy. I smile. I will never get used to that look. \n\nI open my arms to her and she comes to sit on my lap. I expect her to sit on my thigh but she straddles me instead. My hands wrap around her hips. She kisses me and I kiss her back. I'll give her this one kiss and then I'll mention the potion. The kiss starts to heat up. Her heated center gets closer to my lower belly. She moans when my tongue slides against her own. Her arms come up to my chest and she tries to push me back. \n\n\"Amelia,\" I try to gather my strength to stop this before it is too late. \n\n\"I love when you say my name.\" She moans against my lips. \n\nI groan and bring my hands to each side of her face. Her damp hair smells like my brown sugar shampoo and I feel myself getting dizzy. \"Amelia,\" I try again. \n\nShe pulls back and looks down at me. Her heavy lids barely open. \"What's wrong?\" \n\nI catch my breath. \"We need to talk.\" I close my eyes. \n\nShe doesn't say anything. Something in my eyes makes her sigh. She places both hands on my shoulders and gets off my lap. I want to pull her back against me but I can't think straight when she is so close. I just need to get this over with. When I open my eyes to look at her I see her standing before me with a worried look on her face. \n\nI pat the spot next to me but she shakes her head. It is my turn to sigh. \"We haven't really had time to catch up. But I think it is important that you know a couple of things.\" \n\nShe looks uncomfortable. I don't know why and I will make sure to get this over with as soon as I can so she can stop looking at me like that but I can't delay this conversation any longer. \n\n\"I've been given the opportunity to be part of a great Coven.\" \n\nShe bites her lip. \"I know.\" \n\nMy eyebrows pull in confusion. Why does she look so troubled? I haven't even said anything. \n\n\"Hazel, I know it is a great opportunity and I understand that you can't pass this up. I will support you completely and I understand that this is what you have probably been looking towards your whole life.\" \n\nI stand to interrupt her but she puts her hand up. \n\n\"I just want you to know that I will be fine.\" Her voice shakes. My heart begins to feel heavy, or is it her heart? It's getting harder to distinguish between the two. \"I will just need time to get over you, and I know you'll have to move so that should make it easier-\" \n\n\"You want me to leave?\" There is a mixture of disbelief and pain in my tone. \n\nShe turns away. I hear her sniffle. \n\nI'm rooted to my spot. This is not at all how I envisioned this conversation going. How did she find out about the Star Dust Coven's opportunity? And how did she come to the conclusion that I could take it? \n\n\"I think you should take it.\" \n\nI lick my lips and ball my hands into fists. I want to reach out to her, pull her into my arms but she doesn't seem to want me near her. My heart beats at an excruciatingly slow pace. How did it come to this? How did I have not see this coming? \n\n\"Amelia I need to hear from your lips that you don't want me around anymore.\" My eyes are brimming with unshed tears. If this is what she wants, I need to hear it. My mind starts to think of all the possible reasons she would want me to leave. She probably wanted a quick fuck and then live her life as if nothing happened. I probably scared her away from wanting to have a future with me. What did Jake and Jules say to her? My hands goes up to my chest, this hurts. \n\nShe turns around, her own eyes full of tears. \"I want what is best for you.\" \n\nI walk towards her and grab her arms. \"Say you don't want to be with me anymore.\" Fear is gripping at my throat. If she says it, our connection will be over. If she doesn't want me what am I going to do? I find it hard to breath. \n\nShe shakes her head and looks down at the ground. \n\n\"Tell me you don't love me and I will leave you alone.\" I find myself shouting. I shake her out of desperation when she doesn't answer. \n\n\"I can't!\" She yells back and with that she breaks down and begins to cry against me. I pull her tight and feel my own relief. \"I can't.\" She says more defeated. \"Oh God, please don't leave me.\" My tears roll down my eyes and I take deep breaths. \"I'm so sorry.\" She sobs into my chest. \"I can't imagine my life without you. I can't let you go. I know it's selfish but-\" \n\n\"Shhh.\" I pull her closer and kiss the top of her head. \"I'm not going anywhere.\" \n\nFor once the world feels like it's back on its axis. \n\n****** \n\n~Amelia~ \n\nI wake up her the dark room. \n\nHazel's arm is around my stomach. I'm lying on my back and she's on her side. The moonlight shines through the window onto her face. How can I feel so deeply about someone that I just met? Her face looks serene, her soft lips slightly open. It's probably 3 in the morning but I feel reenergized. She's not leaving. She said she loves me and that she would not leave. My heart skips a beat at the thought of our future. \n\nAfter my embarrassing breakdown Hazel took me to bed and just held me the whole time. She talked about her decision to reject becoming a member of the Star Dust Coven and how she could never live without me. She went on to tell me about our own story of how we met and how everything played out. If others had it their way we wouldn't even be together at the moment. I shudder at the thought. \n\n\"You okay?\" Her sleepy voice interrupts my thoughts. \n\nI look into her eyes and smile. \"I'm perfect.\" \n\n\"Your heart beat it says otherwise.\" She yawns and pulls me closer. \n\n\"How do you...?\" \n\nShe smiles. \"My heartbeat is synced to yours. A soulmate quirk.\" \n\nI must look shocked and then it dawns on me. \"So that's what Jake was talking about.\" \n\nShe rolls her eyes. \"Can we not talk about your ex while we're in bed together.\" \n\n\"Sorry.\" I peck her lips. \n\nHer breathing gets even again. \n\n\"Hazel?\" \n\n\"Hm?\" \n\n\"What were you going to say earlier?\" \n\nShe groans. \"We should probably wait until we're both up.\" \n\n\"Is it bad?\" I worry again. \n\nShe looks down at me for a while. \"I have a potion that will bring back all your memories.\" \n\n\"Oh.\" I'm stunned. Do I really want to remember? Yes, I do. I want to remember my first kiss with Hazel, the first time I laid eyes on her. I want to remember out first date and what we did to end up together even though the cards were stacked against us. \n\n\"Don't worry, I'll be here to help you through it.\" She kisses my forehead. \" I love you, Amelia.\" \n\nI sigh. \"I know it's crazy because I feel like I just met you but I love you too, Hazel.\" \n\nShe smiles and leans down to kiss me. \n\n\"You are my world.\" \n\n****** \n\n~Hazel~ \n\n\"Is this your final answer?\" Both of the Star Dust leaders are looking at me like I have lost my mind. \n\nI bow my head. \"Yes.\" \n\nI wish my parents were here. They're currently standing outside my father's study waiting for us to wrap things up here. It has only been fifteen minutes but they came on a mission. I wonder if they went to Leo's Coven yet. Did they expect our answers? Surely they are fully aware of my relationship with Amelia. \n\nAmelia, I sigh. I can't wait to get back to her. She's probably in class right now trying to catch up on all the work that she has missed. She's lucky she has a pretty smart tutor. I want to chuckle. \n\n\"Do you understand what it is you are saying no to?\" The woman before me says. \n\nI look up and nod. \"Yes, I am fully aware.\" \n\nShe seems more shocked than I would have expected. \n\n\"Well, we wish you and your soulmate the best.\" The man says. He doesn't smile. \n\n\"Hazel, you could have done great things.\" \n\n\"I will do great things.\" I correct her. \n\nShe puts her nose up in the air and stands with the man. \n\nThey leave the study, not saying anything to my parents along the way. And just like that I know I have made the right decision. I could never be one of them. I am meant to be here, looking after my people with the love of my love by my side. \n\nMy father walks through the door first, my mother right behind. \n\n\"We are proud of you.\" My mother says. She comes to hug me and kisses my head. \n\nI look over at my dad, expecting some disapproval. He has not been a fan of my relationship with Amelia since the beginning and he has had to take a lot of backlash from other Covens for allowing me to be with her. Now that I have said no to the highest form of honor, he is probably even more disappointed in me. \n\n\"Charlotte, please let me speak to Hazel alone.\" \n\nMy mother kisses me one more time and then kisses my father on the lips. \"Be easy on her. Imagine if you were asked to leave me behind all those years ago.\" \n\nHe lips go into a grim line. \n\nShe closes the door behind her and I am left alone with him. \n\n\"You know I do not approve of your relationship with Amelia.\" He is still standing. \n\nI shift uncomfortably in my seat. \n\n\"But I do admire your grit.\" His disapproving brow says otherwise. \"Hazel, I just want you to be happy. And I know she brings you happiness. So I can't do anything more than give you my love and support.\" \n\nI feel my bottom lip quiver. \"I love her so much father.\" \n\nHe nods. \"I know.\" He comes over and pulls me into a hug. \"You have made us so proud. Not once has your integrity or feelings been wavered in the face of all of the obstacles you have had to face. Many would have given up long ago. I am proud to call you my daughter. And I can't wait for Amelia to become my daughter in law.\" He smiles at my shock. \"I couldn't think of anyone else more worthy of your love.\" \n\nI jump into his arms and feel the tears rolling down my face. \n\nHe has just given me the one thing I didn't know I was waiting on, his blessing to make Amelia mine for the rest of my life. \n\n\"We can have the ceremony any time you like. Just pick a date and your mother and I will make preparations.\" \n\nI look at him and smile. \"Thank you so much. You have just made me the happiest daughter in the world.\" \n\n****** \n\n~Amelia~ \n\nShe's here. \n\nScrub the conditioner out of my head and speed through the showering process. It has been two full days since I have seen her. I can't wait to be in her arms again. \n\nThankfully Jules is out visiting Adam, who should be out by next month. Now that Elise is captured, he is free to leave. I was happy to hear the Roderick Coven, all thanks to Leo, was taking him in. Now Adam could be with Juliet and still be part of a Coven. Leo didn't mind teaching him the tricks of the trade. I snicker at the thought of Adam being a badass like Leo and his father. This should be interesting. Jake decided to stay on campus for his last semester before moving in with Leo. I think all of us will eventually move in with our soulmates, I am just waiting for mine to ask. \n\nI wrap a towel around myself and rush out of the bathroom. \n\nHazel's toned body greets me from my bed. She's wearing a purple sundress with yellow flowers all over it. She smiles when she sees the look on my face. My mouth is watering. ",
        "\"That was quick.\" She smirks. \n\nI rush to the bed but she puts her hand up. I stop right at the edge of the bed. \n\nShe sits up and scoots closer to me. \"I have something important to ask you.\" She grabs my hands and my heartbeat accelerates. It feels amazing to touch her without the underlying shocks of electricity running through her fingers. Even after drinking the potion and remember everything that happened between us I still can't get over this feeling. She has told me that she is not sure if it is permanent or if it will eventually wear off but I am just enjoying the ride. \n\n\"Now that you have your memory back, I need you to be honest.\" \n\nI nod and look down at her. Her deep brown pools have me captivated. \n\n\"Why were you asking me to take the position with the Star Dust Coven?\" \n\nI frown. I don't know what to say. This happened when I had no memory of us and I can't justify what I said. \n\n\"I just need you to be honest.\" \n\n\"I thought you were only staying because I wanted you to.\" I bite my lip. \n\nShe nods. \"It had nothing to do with you trying to find a way out of this relationship?\" Her tone is playful but I can tell the question is serious. \n\nI shake my head. \"Hazel I never want to be away from you.\" I want to kiss her and show her how much she means to me but I think needs to hear this. \"I love you, so much. I need you like I need air. I can't imagine me living my life in a world where you don't exist. You're my everything, can't you see that?\" \n\nShe looks serious. \"Perfect. That is all I needed to hear.\" She pulls me down for a kiss. \n\nI want to deepen the kiss but she pulls back. \"Now, get ready, we have a very important meeting in an hour.\" \n\n\"One more kiss.\" I pout and lean down again. \n\nShe sighs. \"You know I can't say no to you.\" \n\n*** \n\nTransporting through space doesn't hurt like it used to. \n\nThere is an uncomfortable lack of air but nothing like what is was before. \n\nHazel turns to look at me to make sure I'm okay when we make it to her room. \n\nI smile and lean in to kiss her. She kisses me. \n\n\"Can we please just stay in bed and make out like teenagers?\" I try again. I just want her to take me to bed. Ever since I found out her touch doesn't hurt me like it once did I can't stop thinking about all of the possibilities. All of the way she can make me hers and all of the ways I can make her cum. My stomach tightens at the images in my head. \n\n\"I promise we will after this meeting. You'll love it. Trust me?\" She asks for my hand. I place my own in hers and shrug. \n\n\"As long as we get to come back to bed, I'm game.\" \n\nShe chuckles and leads me out her bedroom door. \n\nI hear people down the hall. We round the corner and I am greeting with a breathtaking sight. \n\nAt the bottom of the stairs every surface is covered in roses. Candles are floating around, giving the room a very warm hue. There gold ribbons and decorations all over the place. People are also standing around holding glasses of champagne in their hands. All of them look up to us and greet us warmly. I see her parents, Jules, Leo and Jake, Leo's parents, Evertte and a couple of others that I have seen around. What are they all doing here? \n\nI turn to look at Hazel in shock. What kind of meeting was this? \n\nHazel raises her hand and the crowd dies down. \"I want to thank everyone for taking their time to help me plan this amazing night for the love of my life.\" She squeezes my hand. \"Tonight will be the night that Amelia and I will be marked as soulmates for the rest of our lives.\" She turns to look at me and says more quietly. \"That is if you will have me?\" \n\nMy hand goes up to my mouth but I am nodding like a madwoman. \"Yes!\" I wrap my arms around her. The crowd below roars at our contact and I hide my face into her neck. \"A little warning would have been nice.\" \n\nShe laughs. \"I thought you would enjoy this surprise.\" \n\nWe make our way down the stairs, which are covered in rose petals. The room smells warm and sweet. I hug and greet all of our guests, many of them congratulating Hazel and me. The adrenaline pumping through my veins keep my nerves at bay. I try not to think about what the future holds and live in the moment. Hazel never lets go of my hand. After we have all hugged and talked her father calls everyone's attention to the edge of the room. \n\n\"Amelia, we are very grateful for the unconditional love that you have given our daughter. It is with very open arms that we welcome you into our family. We know that you two are meant for each other and we cannot wait to see what the future has in store for you both.\" Everyone claps. Hazel pulls me close and kisses my temple. \"Now, if you could all follow us to the next room, we will gather around to watch the soulmate ceremony take place.\" \n\n\"What if I don't know what to do?\" I give Hazel a nervous look. \n\n\"I'll be there to guide you.\" We walk past the crowd and walk into the next room. \n\n****** \n\n~Hazel~ \n\nAmelia is still staring at the mark on her inner wrist in wonder. \n\nThe mark is a mixture of both of our names in old Wildorian language. Something the primitive witches used to use back in the day before spells became more evolved and intricate. She's lying in my bed tracing her finger over it. I would be lying if I said I wasn't a bit terrified to have her branded. We have never done that to a non-magical being so I didn't know how it would go. Besides an occasional hiss, she did not complain. My own mark does not hurt, and I will always wear it with pride.  \n\nI lie next to her and snap my fingers to lower the lights in the room. \n\nShe jumps at the change in lighting. I'm usually more careful around her when it comes to doing magic. I don't want to scare her off or make her think that it'll be too much to handle. But in this moment I am so happy and giddy at the amazing day that we have had today, I am letting my emotions guide my actions. I wrap my arms around her and pull her close. We face each other staring into our eyes. \n\n\"I feel like the luckiest girl alive.\" She bites her lip. \n\nI smile. \"You have made me the happiest girl alive.\" \n\n\"So does this mean till death do us apart?\" \n\nI frown. \"You humans are so grim. But yes, I guess.\" I kiss her nose. \n\n\"Does that mean we can get married now?\" \n\n\"We can do whatever you want. I can buy you a ring, give you my last name, or take on yours...\" I leave it hanging in the air. She could ask for anything right now and I would give it to her. \n\n\"What will happen when you have to take the throne?\" She sounds nervous. I should probably mention that wouldn't be for many years. \"How do people feel about lesbians? Or a human being one of their leaders? I don't know much about your world. And-\" \n\nI brush my lips against hers to stop her from talking. \"One step at a time, love. For now we will enjoy the rest of the night.\" I peck her lips. \" I am going to make you cum so many times you will be delirious.\" I peck her again. \"And then tomorrow we can begin your moving process, I will help you pack your stuff so we can finally live together.\" \n\n\"What if I don't want to live with you?\" \n\nMy heart skips a beat. I pull back and see a playful smile on her lips. \n\n\"I could always make you. But I think I can show you what you would be missing out on if you don't decide to move in.\" I grab her wrists and straddle her legs. Once she is under me I kiss her deeply until she is moaning. \"On second thought, maybe it is too soon for us to move in together. What was I thinking?\" I try to move away but her hands capture my head. \n\n\"Oh no you don't!\" She kisses me again and sighs. \"I love you, Hazel.\" \n\n\"And I love you, Amelia. I can't imagine being parted from this day forward. I promise you that I will never stop fighting for our love.\" \n\n\"I promise the same. Now about this thing you were going to show me...\" \n\nI chuckle against her neck and push myself against her. Where to begin? For the first time since we met I don't feel any rush. I have a lifetime to show her all that this relationship has to offer. I will make her mine over and over again like we have both wanted from the first movement we met. \"Don't mind if I do.\""
    ],
    "authorname": "SkylerLuv",
    "tags": [
        "drama",
        "girl on girl",
        "interracial",
        "lesbian love",
        "lesbian seduction",
        "magic",
        "pussy eating",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/hazel-ch-02"
}