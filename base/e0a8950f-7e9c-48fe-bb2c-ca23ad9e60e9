{
    "title": "Hurricane Ch. 02",
    "pages": [
        "Authors Note: Well guys, it's only been two years in the making! I first of all have to apologize to anyone who was waiting for a follow up. School, work, faulty computers and life in general all seemed to conspire to get in the way of my writing! But, without further ado, here's chapter 2 of Hurricane! Saturated with my blood sweat and tears! Enjoy it and tell me honestly what you think! Comment! Vote! Subscribe! all that good stuff!\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\"Look what this girl done did to me, she done cut me off from her good good love. \n\nshe told me that those days were gone.\n\nNow I'm sitting here going half crazy, cuz I know she still thinks about me too.\n\nAnd it ain't no way in hell, that I can be just friends with you.\" - Trey Songz\n\nSo much had changed in the almost three years since Alejandro Delgadillo moved to Los Angeles. Thinking back, he could actually pinpoint the exact time his life had been altered. It was the moment he stepped off the plane. The airport was way too crowded for his mood at the time, and he found himself glaring angrily at everyone. They were all too happy or else faking it well, with their spray tans, bleached teeth and bleached hair. He longed for things to go back to the way they were before when he and Sean were nothing but happy. Back when all they had was each other and that was more than enough. \n\nHe wanted to sleep. He wanted nothing more than to curl into a ball in his hotel room and never leave. Just sleep until he became a new person. He hadn't slept in days and out of sheer exhaustion he almost did on the plane, but that too was thwarted by the loudmouthed couple sitting behind him. They proceeded arguing about any and everything they could think to argue about. At one point they argued about the air-conditioning and who it was blowing on, then they argued about the leg room and whose legs were longer. \n\nThe only thing that had him even slightly intrigued was the fact they were speaking in Spanish. And not the American or even south American Spanish, proper Spanish like back home. He found himself becoming nostalgic, and missing his family even though they were partly the reason he was on this plane. So when everyone de-boarded the plane in Los Angeles and he found them at the ticket agent arguing yet again, this time over their connecting flight, he decided to help. \n\n\"Alguien que hable Ingles!\" the man yelled, clearly frustrated that no one was understanding him. \n\n\"Si!\" he called to them as he made his way over. Repeatedly he asked himself why he was doing this. He took a good look at the tall and skinny man with thin hair, graying at the temples. His thin tan colored v -neck sweater was carefully rolled up to his elbows, showcasing forearms that looked strong yet he could tell from his cream linen slacks and matching loafers that this was a man who was meticulous about his appearance. Typical of most spanish men he knew. He didn't even bother looking at the woman; after his ordeal in New Orleans he couldn't bring himself to look any woman in the eyes. The only thing he did see was long flowing hair and a backless sundress and turned away.\n\n\"Thank you! They're saying we aren't even on the flight list, stupid fuckers! We paid for first class seats! And this is what our money gets us!\" the man yelled in Spanish. \n\nAlejandro turned to the ticket agent who was turning redder and redder by the moment. \n\n\"I speak perfect Spanish!\" she fumed. \"I know exactly what they said about me, and I'm about to refuse them both!\"\n\nAlejandro took a deep breath and expelled it slowly. He was too tired for this. \n\n\"Are either of them on your list?\" he asked as patiently as he could muster. \n\n\"Yes, they both are! I never once said they weren't but they are not in first class! There is no first class with this airline! Everyone flies coach, they're not going to Honduras for vacation or something. They're flying right into La Macabre!\" \n\nAlejandro turned his tired, heavy, sleep deprived head and looked at the two spoiled brats and suddenly remembered why he left Barcelona. Because of pompous buffoons like these. \n\n\"There is no such thing as a first class, so there's no way you paid for it. Just shut up and take the damn seats they've provided before they too are no longer available to you!\" \n\nHe turned and walked briskly away. As much as he'd missed speaking in his native tongue, he regretted that conversation immediately. Rich assholes like them had no idea what the world was really like. Looking back, he realized the reason they angered him so much was because they were a mirror image of himself ten years ago. He didn't know why they were flying into Ma Macabre and he didn't care, he just hoped they got the reality check they deserved when they landed. \n\n*******\n\n\"Hey!\"\n\nGregory Daniels waved Alejandro over and rose from his seat in the directors chair with a smile. \n\n\"Come on over and take a look. What do you think?\" \n\nAlejandro took a seat and watched the playback for his last last take. He had to admit; it looked fantastic. He couldn't believe his own eyes; that was him running through all those explosions, narrowly escaping death,and in Ferragamo shoes no less. He didn't know he had the cojones, he never ever dreamed he'd be here. Okay that's a lie, he'd always dreamed he'd be here but never thought that dream would come to fruition. \n\nNow here he was, on the verge of superstardom. \n\n\"Its amazing!\" Alejandro cried, eyes glued to the tiny screen in front of him. \n\n\"Absolutely fantastic!\" he said turning to his director who was smiling just as hard as he.\n\nAlejandro slowly eased himself out of the director's chair and walked to his marker. He knew without asking that they were going to try for one more shot. Even though the last one was as near perfection as it probably could get, he knew Greg would want absolute perfection. So he steadied himself, evened out his breathing in an attempt to calm his racing heart. He waited quietly, eyes closed and patiently tried not to think about how he was risking his life for a stunt. He tried not to think about the pre-laid explosions awaiting his heavy footsteps to go off once again and attempted to empty his mind. \n\nIt was always then though, in the quietest and calmest moments that she would come to his mind. It was more like she dominated his thoughts at those times. It would start with a single image of her opening her eyes in the morning and smiling at him, or her stretching as she got out of bed and looking over her shoulder at him. He'd see her laughing, dancing, zipping up her black dress, putting on her earrings in the mirror as she looked up at him, slowly sliding off her pumps letting it glide along the arch of her foot until it finally slips from her hands onto the floor, her slowly unzipping her black dress as she walked to him and finally letting it fall to a heap at her feet. All of it was too much. He tried his absolute best to keep her out of his head. He'd usually thwart any and all thoughts of her before they even became one because they'd only lead to self destruction. His life was way too good now, on the verge of becoming something exceptional if he let it. He had no intentions of going back down that well worn path, so he'd close her off and reserve thoughts of her to times of self reflection. Now it was like she consumed him like a flash fire and he was powerless to stop it. He was being ridiculous; it had been nearly three years since that night; nearly three years since he watched her leave. Her suitcases dragging behind her. Nearly three long years since he closed off his heart and vowed to never, ever let another woman have so much of him because there was nothing left over in the end. \n\nHe'd begun constructing himself slowly but surely again to try and find the man that flew into New Orleans and try and remember his dreams but that man was gone. A completely different person was what remained and he just had to learn to deal with who he was now. He could still feel her burning in his veins, and he waited for his need for her to subside, for her to fade. She didn't. It was almost like he could smell her now in the desert air, the spicy sweet scent of her. \n\nSomething told him to open his eyes and he hesitated, listening to the sounds of the crew setting up the charges for the next shot. He needed to get it together, and stop thinking of her so damn much. Three fucking years? And you still can't stop thinking of her? He thought back to the day in the LAX airport. He just wanted to get to his hotel. He wanted to close out the Californian sun, he wanted to buy a very large bottle of Jack Daniels and not leave until he could form a thought that didn't end in her. A sentence that didn't revolve around her. An anything that didn't have to do with her. He was walking briskly towards the baggage pickup bumping into people here and there; he didn't give a damn. This was her fault! She discarded him like yesterdays news, paid him off, gave him one last piece of ass and disappeared. How could she be so heartless? Like everything they shared together was nothing? And the last little bit about her not wanting to break up his family? She knew! She knew there was no family to break up! His parents cared more about public image than him. And a son who gave up the opportunity to become a very rich business mogul to follow his \"dreams\" didn't fall into the image they were trying to portray. The relationship was broken long before a hurricane. And long before a fucking voicemail was left. \n\n\"Excuse me!\"\n\nAlejandro turned to see the man in the tan get up, rushing towards him. Shit! He turned and began to jog away from him. He could honestly only take so much. If he had to go another round with him he was sure he wouldn't be able to contain himself, he'd had his fill of pomposity for the day. \n\n\"Wait! Please, just wait a second!\"\n\nHis hand was now on his shoulder. He was apparently a lot faster than he looked. Alejandro shrugged out of the strange mans touch and turned back to face him. He was smiling a pleading smile and Alejandro let out a defeated breath. \n\n\"Yes?\" he asked in English. \n\n\"This may sound like an absurd question, but are you an actor?\"\n\nThe first thought that entered his mind is that no one was who they said they were. The confusion must have been written all over his face because he smiled again and put his hand up in explanation. \n\n\"I had to be sure it was you, I mean you are Alejandro Montez Delgadillo right?\"\n\nHis eyes turned to saucers. How the hell did this man know his name? His father? He was obviously from Barcelona, and judging from the Gucci shoes he wore he was apparently not hurting for money. \n\n\"Okay before you start thinking up some grand scenario in your head about me, I shall explain all. But first I need a drink.\" \n\nHe began to walk towards the airport bar, realized that Alejandro wasn't following and turned back. He looked at him for a moment like he was going to say something, waved him on instead and disappeared into the bar. Alejandro thought about just checking into his hotel, but his curiosity led him into the hotel bar. \n\nIt wasn't until after he gulped down the cheap whiskey and had another one placed in front of him that the strange man who identified himself as Ram\u00f3n Arroyo, explained that he had been looking for him for a few years and couldn't believe his luck when he just got on the same plane as him. He'd written an entire film with him in mind. It was called Esperanza, and it was about a man who drives across South America to rescue his wife from kidnappers. The film was to be as much about South America as it was about the kidnapping and he planned to both showcase the beauty of the countries as well as the danger. It was perfect for him; he got to get even further away from here, star in a film, and to make it even better, the part was written just for him. \n\n\"It looks as if you've made up your mind then,\" Ram\u00f3n stated.\n\nHe shook his head.\n\n\"One more question before I do this,\" Alejandro paused and finished his drink. He could feel the warmth of his first drink spreading through him. He wondered if he'd be allowed on the plane if he continued to drink at this pace. \n\n\"You said you were looking for me?\" he asked pushing away his empty glass and sliding two twenty's on the bar. \n\n\"Yes, I asked your father about you but-\"\n\nAlejandro put his hand up to silence him. \n\n\"Say no more.\"\n\n******\n\n\"You ready to go again cowboy?\" \n\nThe sound of the thick southern drawl brought him directly out of his reverie. He opened his eyes and surveyed the red markers signifying the explosives. \n\n\"This is all the bomb juice I got left so you better make it good sugar.\" \n\nHe stared at Vicky as she walked away. She turned and winked when she saw she had his attention. He grinned at her, knowing what his grin did to her and turned his attention back to the task at hand. As soon as he did his mind was flooded with images of her. Again. It was her damn perfume. Someone here was wearing her perfume and it was making him insane. \n\n\"Alejandro are we ready?\" Greg called out bringing a collective hush to the crowd. He nodded his consent. \n\n\"Okay, roll playback!\"\n\nHe took a deep breath and steadied himself, once again trying to banish her from his mind. Focus. He had to focus. Just focus.\n\n\"Action!\"\n\n******\n\n\"Cut! Cut! Beautiful baby, beautiful! That is a wrap guys!\" \n\nLoud cheers broke out all around him but he couldn't take part. That last take had almost been the end of him. They moved the charges and didn't tell him. He almost ran directly into it. Fucking imbeciles! His heart was beating so fast he felt like it could leap right out. \n\nGregory came up and clapped him on the back in congratulations. \n\n\"Great job man, great fucking job! That was the take I was looking for,\" he turned around to the crew, \"We are wrapped People!\"\n\nMore cheers and hollers. Alejandro walked away from them towards the trailer because if he didn't someone was going to get a mouthful of his fist. \n\nAnd that's when he spotted her.\n\nHis eyes had to be deceiving him. That last explosion must have knocked his brain around a little or something was loose because he was hallucinating. He closed his eyes and counted to five. \n\nOne.\n\nTwo.\n\nThree. \n\nHe was going crazy.\n\nFour. \n\nFive.\n\nHe opened his eyes again and there she was. Except this time she was walking towards him. She looked completely different. First her hair; that long thick curly hair that he loved was all gone. It was straight and styled in a really short cut that suited her face so well; he wondered why she'd never done it before. The short pieces were swirling upwards in a sleek yet sexy way and left her face completely open. She wore no make up at all and he was sure she had never looked more beautiful than she did in that moment. She'd put on weight too. A good 15 pounds of it and God it went to all the right places. But he had to say the most striking thing about her was color. She was wearing color for the first time since he'd laid his eyes on her that day in Louisiana. It was a bright yellow dress that tied at the waist and stopped just above mid thigh. She looked like sunshine, as tired and clich\u00e9 as it sounds. She was pure sunshine. \n\nHe couldn't move, and he couldn't contain his heart that was once again drumming the samba in his chest. There she was in the flesh; the only woman he'd ever loved and the only woman he'd been completely open and honest with. The only one he'd ever given his everything to and the only woman who'd broken him. She'd destroyed him, left him as less than half a man, took everything of worth and gave him a plane ticket in exchange. And now that he'd finally put together some semblance of a life, now that he'd become a success here she is. Knocking the air out of him again. \n\nNo.\n\nShe was less than ten feet away, and he could smell her; Ginger and honey. He steeled himself. He wouldn't let himself fall into her trap again. He couldn't fall for her again, she was bad news. Bad news in a '67 chevy convertible. This was like the synopsis for a terrible movie: bad chick, baaaad car, bad news. Except he already saw how this movie ended. The guy just gets his heart stomped on; end scene, roll credits, that's it. The good news is that guy no longer had to be him. He'd changed just as much as she did. Maybe not physically, but on the inside he was a completely different man than the one that boarded a plane from New Orleans almost three years ago. That man was long dead and the man that stood before Sean Williams today was a stronger, wiser man. One that wanted to know where the fuck she gets off showing up like this out of the blue, trying to disrupt the serenity in which he lived his life. \n\n\"Hi.\" \n\nHer greeting was barely a whisper and she wrung her hands nervously as she approached him. He made no move. He didn't extend his hand, didn't shift his weight, just stared. She looked away from him at the now setting sun. She swallowed long and then turned back to him, a look of anguish on her face. \n\n\"You look...\" she looked down at her toes and then back up at him. \"You look so, good Alejandro. I... I hope life is treating you well?\" \n\nHe continued to stare. He couldn't give her the small talk she was looking for, the 'how've you been' song and dance. All he could give her was a single nod. \n\n\"That's good! I'm glad. I uh... I came here to see you-\"\n\n\"Why?\" he asked abruptly, finally finding his voice. \n\nShe looked down at her toes once again and chewed her bottom lip. The dimple in the bottom left corner of her mouth became more pronounced. She was trying not to cry.\n\n\"Cause... because I needed-\" She turned away and sucked in a breath. Alejandro started daggers into the back of her neck. She must've felt it because she began to massage that exact spot trying to regain her composure. If she thought for one second that she'd find sympathy here she was dead wrong. That ship had long sailed and he had nothing but hard feelings. \n\n\"I needed to see you, that's... what brought me here. I needed to see you for myself. I needed to know if you... damnit!\"\n\nShe was crying and Alejandro wanted to slap her. The nerve! Coming back here after all this time and for what? To see if he still looked the same? Felt the same? Well of course he felt the same! He had the same burning anger in him, that same hurt she left him with. \n\n\"Save it.\"\n\nAlejandro walked past her in the direction of the trailer. Fuck her and the horsepower she rode in here with. He needed a shower, but more than that he needed to get a clear head and as he stalked off, he realized there was no chance in hell of that happening. \n\n*******\n\nHe stayed in the shower well after the water had turned cold and only left when it became painful. He wiped away the remaining steam on the mirror and stared at his reflection. He had no clue what he was going to do. How long was she here? A week? Two? Could he put up with her for that long? God she looked good! No, she looked beautiful but what did that change? He still spent almost three years nursing his broken heart because of her. What did she expect coming here like this? That he'd greet her with open arms? Too many questions were left unanswered. The one question that kept popping in his head was the most important: what was he going to do? Did he still have feelings for her? He looked down at his left hand, the hand her tears fell onto as she kissed him goodbye. He closed his fist and stared at it. Of course he still had feelings for her, but he couldn't allow himself to go back there. To try and find the depth of those feelings again because if he did she would surely be his undoing. \n\nHis thoughts were interrupted by his cell ringing. He rummaged though his pockets until he found it. ",
        "\"Yes?\" He said, his voice betraying his agitation. \n\n\"Well that doesn't sound like the voice of someone who just wrapped on a blockbuster, now does it?\"\n\nAlejandro released a deep sigh. It was Winston Montgomery his agent. He, of course, was about as caring as a hornet's nest. \n\n\"Tell that to Greg and his faulty bomb squad. They nearly killed me Win, and that does not make a very happy client.\"\n\nThe phone went silent.\n\n\"Don't worry about that I'll handle it. You just make your way down town; meet me at red by nine. I have a car service on the way to get you, before you make any excuses.\"\n\nAlejandro smiled. This man knew him well. \n\n\"There is no need for a car service. I'll meet you there no problem I have a ride waiting outside for me right now. Until then my friend.\"\n\nHe hit end and tossed the phone on the bed. Quickly, he dressed himself in a white t-shirt and jeans. As he passed the mirror, he realized he had changed. Jeans three years ago? Not on your life. Today? He wore what made him feel good. \n\nHe walked out of the trailer past the rambunctious staff celebrating the film they'd all worked so hard on. Someone had burst out singing \"Alejandro\" by lady gaga and he took that as his cue to leave. Not much good came from sleep deprivation, alcohol, and Gaga; nothing good at all. He was making a beeline to Sean reasoning to himself that he was just going to hitch a ride back into the city with her and that it didn't mean anything. It's not that he couldn't find another way back in, Winston had only seconds ago offered a ride, but he felt like he had to investigate this situation that had been presented to him. When would he ever get the opportunity to explore this any other time? To ask the woman he once saw his life with, why she didn't feel like fighting for it? Or maybe it was just the fact that they were both seemingly brand new people. Maybe he had to find out why he couldn't release her. Why even after so much had changed, after his life had completely changed she was still a part of it. No matter how hard he tried to dispel her. Was it because he didn't get the closure he wanted? Was it because it was too abrupt? \n\nHe needed answers and the only person who could provide them was leaning against that gorgeous car, the flare of her hips exaggerated by her relaxed position making them appear even shapelier. Her hands, however, twiddled nervously betraying her true feelings about being alone with him and as he strode towards her he wondered if he should be feeling the same. \n\n\"Keys,\" he stated. His hand was stretched out towards her and he could feel the hard expression on his face. \n\nShe paused and seemed to consider it. He again remained in the same position; hand extended to her until she reached around and retrieved the keys from the ignition. She placed the keys in his hand careful not to touch him and that angered him further. \n\n\"Move,\" he said sounding like a caveman even to himself. She again complied rounding the vehicle to the passenger side. As he opened the door he took a deep breath to calm himself. Big mistake. Once again her scent bombarded him and relentless memories of times long gone flooded his mind. He sat and tightly gripped the steering wheel as he looked off into the distance at the almost setting sun. Collecting himself, he slammed the door and revved the engine getting a feel for the car. He could feel her watching him. Her curious eyes pouring over him and he refused to give in and meet them. Instead he peeled out towards the main road, leaving a cloud of dust in their wake. Her head snapped back against the head rest and she gripped the seat in trepidation. She never spoke a word but he knew she was scared and a satisfied grin crept over his face. He shifted gears and sped up even more. \n\nHe was entering dangerous territory but it was as if someone else had taken control of him. He could see she was afraid, it was pouring from her in waves and he was waiting. He geared up again and the speed increased on the deserted two lane stretch of road. He glanced at her and saw her jaw clenched. She was staring straight ahead and he considered drifting into oncoming traffic. He looked at the speedometer and saw he was doing 165 in a 90 mile zone. \n\n\"Please stop this Lee.\"\n\nIt was a whisper and he was surprised he'd heard it over the cars' engine but he had. His hand was on the gear shift and he was slowing down without even realizing it. \n\n***********\n\nAs the twosome entered Red, Alejandro pondered how to introduce Sean. He couldn't exactly call her a friend when he held nothing but contempt for the woman. He really didn't want to call her his ex because he felt it was giving her a power she didn't deserve. Or maybe it's because they never really had closure. Either way he knew there was little more than civility between them and although they most definitely weren't together or anything close to it, there was something about knowing she was the woman that created the womanizer he was today. That's why he's kept her around becau-\n\n\"Who the hell is this?\"\n\nWinston interrupted his thoughts effectively pinning him against a wall with his question. \n\nAlejandro watched as his agent regarded Sean for the briefest of moments before returning to his conversation on his ever present blackberry. He knew without a doubt that this man had in mere seconds undressed, fucked, married, divorced and fucked Sean again for good measure. \n\nHe turned to Sean and watched as she regarded the opulence that was Red. White linen on every table, dark wood flooring vaulted ceilings with a mosaic of artwork so stunning Michelangelo himself would be envious. All of this had become second nature to him in time gone by and in recent times as well. As they approached the table he almost pulled out her chair for her. Old habits die hard. He sat across from Winston giving Sean the opportunity to plop her behind wherever the hell she saw fit. He tried not to watch her. Not to notice how she slid into her seat with such grace and shuffled her seat forward to the table on her own. He wished she hadn't worn that damn perfume and exactly why the hell was she back again?\n\n\"Excuse me Jos\u00e9, most people find it rude if you stare. By the way I've introduced myself to your friend here during your little intermission.\"\n\nThe way Winston spoke was an art form. He somehow managed machine gun speed with clarity. \n\n\"Sean.\"\n\nThere was something about the way he said her name as if there was some familiarity, and entitlement. He couldn't help the bristling reaction even as he chastised himself. Winston said everything with a sense of entitlement, names included. He glanced at Sean and saw her polite half smile and watched her jaw twitch. A telltale sign she was uncomfortable. Good. What the hell was she doing here in the first place? Alejandro could feel Winston's eyes darting back and forth between the two of them as if he were watching a high intensity tennis match. \n\n\"How exactly do you two know each other? You know what, never mind. Doesn't matter. What matters is that you've wrapped this project and we're gonna move full steam ahead to the next. I got screenplays stacked on my desk like Tony Montana had cocaine.\"\n\nAlejandro cocked an eyebrow.\n\n\"Have you read any of them?\"\n\n\"Are you kidding me? That's what interns are for! They find the good ones, and I have them read em to me while I burn calories.\"\n\nHe watched as his agent glanced suggestively at Sean.\n\n\"Tell you what you wanna burn some calories a little later I got a room at the Ramada inn sweetheart, all the sausage you can take. Excuse me bud,\" Winston said as he waved over the bus boy clearing a nearby table. \"You mind taking our order here? I'm starving!\" \n\nAlejandro glanced to Sean who was all out mad and biting her tongue. He decided to speak up.\n\n\"Winston, watch your damn mouth. You're a happily married man for Christ's sake!\"\n\n\"Married yes, happily? That's up for debate. What about you? Flaunting your southern hospitality when you know how Rosalinda gets.\"\n\nThere it was. The true evidence that he'd moved on. He wondered how she'd took the news, and as he'd once again glanced at her out the corner of his eye he spotted the topic of their conversation making her way over to them. He felt his heart beat loudly in his chest as he wondered how this would play out. Strangely, even through the hurt he felt fear and apprehension and he realized it was because deep down he didn't want to hurt Sean. Rosalinda had her eyes locked on his and yet he knew she was still innately aware of the stares and looks she was getting as she crossed the restaurant. \n\nRosalinda was a 5'7 Hispanic goddess with legs for days. She was a model, walking the runways for some of the most prestigious fashion houses like Fendi, Gucci, Dior, Channel and Marchesa just to name a few. She was one of the most beautiful creatures he had ever laid eyes upon. She was also one of the most self centered, insecure, narcissistic people he'd ever met, and he'd met a lot of egomaniacal assholes in his time.\n\n\"Mi Corazon,\" she breathed as she reached the table. She leaned into him and he knew she was going to put on a show for Sean's benefit. Even though she never once took her eyes from Alejandro he knew she had silently sized her up as competition. As her red lips descended upon his, her hand lost itself in his hair. Nails scratched against his scalp as she devoured him with her kiss. He wasn't kissing her back with the gusto he normally would, he was just going through the motions with her, the way he was in their 'relationship' if you could call it that. She sensed the difference in him and moaned, to play up the kiss, entirely for Sean's benefit he was sure and that's where he called a halt. He pulled away from her slowly as his lower lip was caught between her teeth and cleared his throat. \n\n\"Rosalinda, always a pleasure,\" Winston stated with a grin.\n\nShe straightened and greeted his agent with civility. \n\n\"Winston,\" she said as she slid into the seat opposite Sean. When Alejandro looked back at Sean it was as if the color drained from her face.\n\n\"Oh, don't be like that!\" Winston said trying to thaw the cold front she was sending his way. \"I thought we were friends? Matter of fact I was just about to introduce you to-\"\n\n\"Excuse me,\" Sean said abruptly rising from the table. \"I-I'm sorry, I'm really not feeling well. Probably still jetlagged from my flight this morning.\" She forced a smile and Alejandro continued to stare. \n\n\"Winston it was nice to meet you,\" she said as she snatched her keys off the table. She backed away from the group and almost bumped into a waiter with an arm full of dinner plates. Turning, she manoeuvred her way around the fumbling waiter and made a bee line to the door. As Alejandro watched her retreat he wondered at his whirlwind of ever changing feelings. \n\n\"Nice to meet you too!\"\n\n***********\n\n\"I'm going to miss you, are you sure you can't come with me?\"\n\nAlejandro lay in the rumpled sheets of his bed listening to the sounds of Rosalinda preparing to shower. She was leaving for Paris in a very short while and he couldn't wait. It's fashion week which means she will be preoccupied with runways and parties and champagne and not him. He shifted away from the open window and shielded his eyes from the sun. He hadn't heard from Sean since she ran out of the restaurant three days ago. He had absolutely no luck finding which hotel she was staying in which left him waiting for her to just show up again. If she ever did. \n\nThere was a string of Spanish curse words coming from the bathroom and Alejandro decided it was time to get up. He strode naked to the ensuite bathroom connected to the master bedroom. Rosalinda was rushing frantically around the huge bathroom tearing open cupboards and knocking their contents all over the spacious bathroom. Everything was everywhere and he wondered how he ended up with so much of her belongings in his house. \n\n\"You know I cannot come with you,\" he stated. \"What the hell are you looking for?\"\n\n\"My other make up bag, I left it here after the Tony's last year. It has my favourite international lipstick in it. I cannot go to France without it!\" \n\nHis expression was tired as he walked past her into the shower. He turned the water on hot, just under scalding and stepped under the spray. Vaguely, he heard a high pitched \"found it!\" and ignored it, cocooning himself within the protective barrier of the steam surrounding him. The shower door suddenly swung open, tearing him from his safe haven and he turned to see Rosalinda now sporting soft pink lips.\n\n\"I must go now, leave me with a kiss?\"\n\nHe leaned against the shower door, water running down his sculpted chest in rivulets. \n\n\"You said it backwards, I should be the one asking to be left with a kiss; I'm the one left behind.\"\n\nThe gravity of his statement hit him and once again he was back in Louisiana, his tears running down his arm, her tears on his palm and plane tickets on the nightstand. He shook the memory from his mind and took Rosalinda's face in his hand. He did care for her, more than he admitted to himself. As egotistical as she was and for all her flaws, she cared deeply for him, he knew that to be fact. She'd told him she loved him on many occasions but when he was completely honest with himself he knew beyond a shadow of a doubt that he did not love her. Not the way she claimed to love him and not one iota close to the way he felt for Sean. He leaned his wet forehead against hers and vowed that once she returned from France he would end it with her, once and for all. \n\nAs he leaned away again he looked into her dark eyes. He could see in that moment that she loved him and even though his conscience was telling him he should tell her now, a bigger part of him didn't want to send her on a plane with the same broken heart Sean had left him with. Instead, he kissed her softly and sweetly. She moaned and returned his kiss with passion that just could not be faked. \n\n\"I love you,\" she breathed as she broke the kiss. \"And I'll be back before you know it!\" she said rushing again. She grabbed her bags and ran out the bathroom leaving it a complete mess. Alejandro sighed and went back to his shower.\n\n*************\n\nAlejandro was wandering his house again. He left the mess in the master bathroom for the maid to clean, changed into linen slacks leaving his chest bare and was once again wandering his spacious and modern home. There was glass and marble everywhere, it was sleek, it was stylish, and it was him. He was proud of himself, this house and everything in it was his. With no help from his family, or Sean. He'd transferred her money back to her account and ended all dealings with that bank altogether so she wouldn't try anything like that again. He'd even transferred the money for his ticket as well. He wanted nothing from her. That was a lie; he actually wanted everything from her. Starting with why she came back into his life in the first place. He was interrupted from his thoughts by a knock at the door. As he bent to open it he paused momentarily feeling a modicum of hope bloom within him that it was Sean. \n\nHe wasn't disappointed.\n\nThere she was. A vision in blue this time around. Her sky blue dress clung to her bust showing just how much fuller it now was. The dress loosened at her waist and fell to her toes. Such a simple dress, simply cut, no designs or logo's but absolutely beautiful. He caught the words before he said it them aloud. \n\n\"Hello Sean.\" He drank in the sight of her once again like water in a desert. \n\n\"Hi,\" she returned, her eyes roaming his body. \"Can I come in?\" she asked. \n\nHe moved from the doorway and ushered her in. He heard her gasp, and watched her eyes roam over every surface in his house. Without realizing it he hoped she would like his house, like what he'd done with it. He silently hoped she was jealous, of what he had, who he'd become. He hoped she was regretting letting him go. \n\n\"Your house is...\" she trailed off taking in the 12 foot ceilings, and this was just the entryway. \n\n\"It's lovely, I hope your happy here Lee.\"\n\nShe turned to him and he could see the sincerity in her eyes. It upset him. He nodded in response and led her through the dining area, past the large glass dining table with seating for twelve that had never been used. Past the spotless stainless steel appliances and granite countertops, out through the French doors to the large back yard. He pointed to the wicker lawn furniture and she took a seat. \n\n\"Did you want anything to drink?\"\n\nShe shook her head no in response and he took a seat next to her. They sat in silence for what seemed like hours and Alejandro agonized over what to say. The angry part of him wanted to just snap at her, yell scream, but the bigger part of him, the hurt part of him wanted answers and he knew he wouldn't get them \n\n\"Why Sean...\" He started, trying to find his words. \"After all this time why? Why come here? To me?\" he finally spoke breaking the tension. \n\nShe stared out at the expanse of green earth in front of them, a rueful smile hinted on her lips. \n\n\"I asked myself that same question over and over. Why? Why go back and stir up a disastrous pot. It's not like I don't know how you're doing. Not like I ain't followed your every move since you left the French quarter, left New Orleans, left Louisiana.\" She paused, seemingly considering her next words. \n\n\"I followed your career like a bloodhound you know that? I sought out anything I could find on you. After you left, I saw and heard nothing from you for almost a year. I was so worried. Worried you'd given up on your dreams. Then one day I flipped on the TV and there you was. Doing a damn Colgate commercial!\" \n\nShe grinned then nervously chewed her lower lip. \"The second my eyes landed on you my heart stopped beating. For almost 15 seconds I didn't breathe, didn't move a muscle; just stared. The uh,\" she paused to clear her throat. \n\n\"The commercial was popular and aired all the time. Each time that ad came on, I had the same reaction. That same breathless feeling took me.\"\n\nShe shifted in her seat and leaned her head back staring up and the clear blue sky.\n\n\"A few months after that you were on an episode of CSI, you remember? Playing a widower whose wife was killed by debris from a plane crash. You were excellent. And I'm not just saying this to you because I'm biased. I mean that. Other folk must've seen it too cause your career just took off. After that I started hearing buzz about a small independent film called Esperenza, about a man who drives across South America to rescue his wife from kidnappers.\" She smiled genuinely, staring out into her own memories. \"It was a huge success at Sundance and there were even whispers of an Oscar nomination.\" She paused again, emotion gripping her as she tried to speak once more.\n\n\"I could not have been more proud of you!\" she whispered, he voice thick with emotion. \"When I watched Esperenza I cried uncontrollably the entire time; it was that good. I loved everything you did, from the little guest spots to the big ones. Like the movie, this movie you're working on. This huge blockbuster you're doing, it's going to be big Alejandro. Your star is about to take off, you're about to be a-a mega superstar baby! I knew it. Knew you were going places.\"\n\nAlejandro just stared, waiting for her to continue reading his resume. \n\n\"Baby, do you know how big it is to be nominated for an Oscar on your first film?\"\n\n\"There's no official nomination as of yet,\" he stated, her terms of endearment not lost on him at all. She turned in her seat to face him, her face streaked with tears she probably hadn't noticed shedding. \n\n\"But even the mentions, the fact that people are saying you deserve an Oscar for this role! Do you understand what that means?\"",
        "\"Of course I do Sean,\" he stated quietly. \"It's what I've wanted my whole life. What we worked so hard for on that film.\"\n\nHe waited, once again for her to continue. \n\n\"I just...\" she trailed off burying her face in her hands. Finding her voice again she continued. \n\n\"I saw you, doing an interview. You were on a talk show or something talking about Esperenza...\" she trailed off frowning. \n\n\"You were different. Your body language, your tone was completely different. I remember, they asked you if you'd ever been....been in-in love like that. I remember I watched waiting and hoping. For what? I don't know. It ain't like I expected you to say my name or anything but I just... I-I guess I just hoped you'd say something good. Instead you said 'love like that does nothing but bring a world of hurt.' said you thought you loved someone like that but it turned out to be the opposite. Do you really believe that? You can't honestly think that. Because I know I have never, ever in my life loved anyone the way I-\"\n\n\"So you flew across the country to make sure I was... adjusting to single life?\"\n\n\"No! I flew out here because I can sense a change in you Alejandro. You have so much success in your life, so many doors open to you now but are you happy? That's.... kind of why I'm here, I just need to know that you don't regret leaving. That you're happy with the way your life turned out!\"\n\n\"Are you fucking kidding me? You mean you're here to clear your guilty conscience! You have a lot of nerve coming here after you threw me away like trash! After my parents disowned me for being with you! You decide to add gasoline to the fucking flames and you leave me! Well look how well this trash bag has done for himself! All of this was without you! Without your money, without your support!\"\n\nShe looked like she'd been slapped. Fresh tears filled her eyes and threatened to spill over. He felt his blood boil.\n\n\"I... I guess you're right; it is a bit of guilt. I mean I feel guilty over the way things ended. Because it was so... abrupt neither of us had a chance to come to terms with it. I just always hoped and prayed you'd know that I loved you. And what I did wasn't because I didn't... I mean I love you so much. Still.\"\n\nHer words hung heavy in the air around them as he sat fuming. She was openly crying now, her sobs forcefully interrupting her.\n\n\"I just want you to be happy baby. I-I-I wanted your dreams to come true! I wanted you to have everything! Everything your heart desired and more! Everything I could never give you! I even-\" \n\nHer sentence was interrupted by her own sobs again and she wrapped her arms around herself in an attempt at self consolation. \n\n\"I wanted you to love again!\" she cried. \"I wanted you to find someone who was worthy of you! Someone who was right for you, better for you than me! Someone you could bring home to your family! Not a-a swamp rat!\"\n\nIt's funny how things can change in an instant. Your life, and the way you live it can change at the drop of a dime. Everything can change in a split second. Her words, his father's words all of it was bouncing around in his head on a loop making him understand in an instant. None of this was due to any lack of love for him. Although he tried to convince himself otherwise, he knew innately that none of this was easy for her. It must have been hard for her hearing his father cut him off like that. It must have been hard to be the reason. But that wasn't true at all. He had never gotten along with his father and at that time she was just an excuse for his father to cut all ties. The man was an overbearing, controlling sadistic power hungry asshole. But that had nothing to do with Sean. How could she not know that? He'd called her a swamp rat that day. It was the only message he'd left in English and the meaning behind it wasn't lost on him. Except it was, up until today. He realized by leaving he gave his father exactly what he wanted. \n\nHe stood suddenly in the grass, feeling it beneath his bare feet as he stepped towards her and scooped her into his arms. She went willingly and it was as if something snapped inside of him. As soon as he touched her; as soon as she was in his arms he felt it. The feeling of smoking embers turning into a roaring inferno. It burned him from his heart outwards seemingly engulfing them both and he couldn't stop himself. He tilted her chin up to his and he kissed her as if his life depended on it. She faltered a bit, her knees giving out on her but he was there with a steady hand to catch her. He held her soft and pliant body tightly to his unabashedly pressing his apparent hardness against her stomach. His kiss was urgent and needy, passionately capturing her lips and stealing entry into her mouth with his tongue. Sean weakly returned his kiss and in the back of his mind he noted her trying to pull away from him. He wouldn't allow it, pulling her even closer if possible, never once pausing in his kiss. Her hands moved to his bare chest and he growled. It had been so damn long since she'd touched him like this. His hands moved from her back down her waist to the exaggerated flare of her hips to finally cup her full and very plump ass. Dear God. It took everything in him not to rip her dress off and make love to her there in his back yard. \n\nIt was then that he realized that Sean was forcefully pulling away from him, pushing against his chest in earnest. He slid one hand up her back to pull her back in close to him. The other stayed firmly planted on her backside, palming and squeezing. He couldn't let her go. His mouth continued to plunder hers as he held her in his vice like embrace. It wasn't until she kicked him hard in the shin that his grip faltered and as soon as it did she wriggled from his grasp and slapped him soundly across the face. \n\nHe could hear her gasping for breath and sputtering, could still feel the ghost of her handprint on his cheek. He couldn't meet her eyes, didn't have an explanation.\n\n\"Rosalinda? Your girlfriend? You forget about her? Because I sure ain't!\"\n\n\"She means nothing to me,\" he practically whispered. \n\n\"Well she sure as shit feels something for you. And as much as I want you... just let myself go, I can't.\"\n\n\"Yes!\" he cried holding her gaze. \"Yes you can!\" He couldn't believe the words coming out his mouth.\n\n\"No, Alejandro I can't. Just look at this place!\" She cried gesturing towards the house. \n\n\"Look at your life! Everything is beautiful restaurants, beautiful cars, beautiful home and an even more beautiful woman. An ex girlfriend from Louisiana doesn't fit this picture, how can I compete with that? You're supposed to have a tall gorgeous model as your girlfriend; you're an up and coming actor with his shit together. You're not supposed to be with a Creole legal aid from New Orleans! You're supposed to find someone and love her more!\"\n\nShe held him briefly with her stare then went up on her toes and kissed him softly. \n\n\"I just don't fit into your new life,\" she whispered softly against his lips. \n\n\"Then I'll make room.\"\n\nShe sighed, releasing him and wiping the tears from her cheeks. \"My flight leaves in two hours, I have to pick up my bags, drop this car off and then it's back to reality for me. Back to my real life.\"\n\nShe stared off into the distance again, lost in her own mind.\n\n\"Been living on memories Lee. Memories of what used to be, what was, who I thought you were, who I thought you'd become. Everything has changed, even New Orleans has changed. Transformed. There's this new liveliness, not quite what it was and it won't ever be the same again but... there's this feeling of hope. Change, everything is different but the same. I know it don't make sense, and it won't unless you see it for yourself. I'm just trying to change with it. That's what all this,\" she gestured to her hair and clothing, \"is about. I realized I can't mourn anymore for a city that ain't dead! Can't cry no more for folk dead and gone. And most importantly I can't sit on pause waiting to feel for someone else what I feel for you. I... gotta learn how to release you.\"\n\nAnd with that he watched her walk out of his life for the second time.\n\n**************\n\nAlejandro couldn't believe the way things had turned from being completely black and white to a fuzzy grey. As soon as he watched Sean pull out of his driveway he felt choked. He turned back into his home which before felt modern and sleek now felt cold, sterile and lifeless. It stood as metaphor of sorts for what his life had become. He was going through the motions, doing the things expected of him but there was no heart in it. It seemed in taking steps to become someone better he'd actually gone backwards into someone worse. Someone who led a woman on for close to a year. The first thing he did was call Winston and let him know he'd be out of town for a few days.\n\n\"You do realize that we're on the verge of building a legacy! It would be crazy to just disappear right now! No! It would be career suicide to just disappear right now! When will you be back? Cause the media blitz I have planned will have you on the tips of every tongue in America, from my 80 year old grandmother to my 6 year old niece. Everyone and their granny will know your name. You do not want to miss this opportunity my friend so you have your ass back in sunny California by Friday capiche?\"\n\n\"Understood, and Win? Thanks for not asking questions on this one.\"\n\n\"I have a strict don't ask don't tell policy. You wanna run off and bang German hookers? That's your prerogative. You wanna go off on a cocaine binge for a week? Dive into a mountain of it like scrooge Mc. Duck? Go right ahead. As long as you've checked into Promises Rehab Facility and have been discharged by Friday I don't give a flying fuck. Just... you know... take care of yourself.\"\n\nIt was as close to caring as Winston Montgomery was going to get. It was almost touching. \n\nThe next thing he did was book two flights. The first, a flight to Paris. Which would be 22 hours long with an hour long layover in Moscow. A small price to pay for not handling his business sooner. Once he finally landed in France he hailed a cab and told them to take him to the Hotel Shangri-La where Rosalinda was both staying and working. She was about to hit the runway for Alexis Mabille and he wanted to catch her beforehand. As the taxi navigated the streets of Paris he thought of his parents whom he hadn't spoken to since leaving Louisiana. As the car pulled up to the grand hotel he was at once filled with a sense of dread and purpose. It isn't often that one is put in the predicament where you have to break someone's heart. She didn't take it easily either. \n\n\"Are you breaking up with me?\" she asked staring at him incredulously. \n\n\"Yes,\" he whispered.\n\n\"Why?\"\n\n\"I think you know why Rosalinda.\"\n\nShe collapsed from where she stood onto the bed behind her.\n\n\"Because you don't love me? Not like you love her?\" \n\nHer voice was so small and broken betraying the strong and confident front she put on. Finally he saw the flawed and vulnerable girl inside the woman. He could now see what others couldn't in her narcissism; she needed to make others see her as the person she portrayed so she could believe it too. It was sad, but not as sad as the fact that he'd taken advantage of it, manipulated it and hid behind it too as a way for him to hide from his true feelings, his true self. If he hadn't put off this break up for as long as he did, he wouldn't be here, now. Quite possibly ruining her career by breaking up with her before some of the most prestigious shows of her career. \n\n\"This is all my fault and I can't begin to tell you how sorry I am to do this to you now. I do care for you Rosalinda and I wish nothing but the best for you. I just cannot keep up this charade any longer.\"\n\nShe yelled at him then screamed. Called him names he deserved to be called. Yelled in English, Spanish and Italian, which he had no idea she could speak. He stayed and took it all. Only leaving her suite when she asked him to in a defeated voice gripped with emotion. It was one of the hardest things he ever had to do but as soon as it was over he felt a weight lift off his shoulders. He was free now, to do and love as he pleased and it was with this new sense of rejuvenation that he boarded a one way flight to New Orleans.\n\n***********\n\nIt wasn't until he was sitting in the '99 Ford driving the streets of N.O. that he fully understood what Sean was trying to say. Everything had changed. It wasn't so much in the appearance of the city because even when he'd left enough time had passed to repair the damages Katrina had left. No, the change was in the city itself. It was as if everyone had come of the same collective understanding that they could survive anything and the resiliency had breathed new life into every aspect of the city. \n\nHe decided to take his time getting to the French quarter again and tour the city he once called home. He knew her parents had a home on Governor Nichols Street but he decided to take his time getting there, it was still early and he wanted to explore. He took a trip through Audubon park, sitting for a while and people watching. He drove through the garden district, taking in the classic architecture that was unique to this city, the archways and balconies overlooking beautiful lush gardens. It was June and it seemed everywhere he looked he saw green. \n\nIt was early afternoon when he stopped in Caf\u00e9 Beignet and had, you guessed it; beignet's. He hadn't planned on staying long but the mixture of the music, the atmosphere, the food it held him captive for hours. By the time he was back in his car the sun was just going down over the horizon and he felt a magnetisizm pulling him to the house. As he parked in front he could faintly hear music drifting from the open windows and through the screen door. As he approached the door he could hear soft voices singing in unison. He almost didn't want to knock and interrupt them but he wanted to be invited in. Wanted to witness the music himself so he knocked on the door and waited. \n\n\"One sec!\" he heard someone call. \n\nHe watched as a huddled figure slowly made its way down the hall. As the figure came closer he recognized him as Sean's father. He approached the screen door and went to open it but hesitated with his hand on the handle. \n\n\"Yeah?\"\n\n\"Hello Mr. Wright?\"\n\n\"Yeah?\" he repeated still not allowing him access. \n\n\"My name is Alejandro; I'm a friend of Sean's? I was wondering if you could tell me wher-\"\n\n\"Jes a minute,\" the said elderly man said interrupting him. He turned around and yelled up the stairs. \n\n\"Sean! Yo boyfrien at the door!\"\n\nHe watched as the hunched figure shuffled back down the hallway and listened to the faint sounds of the house. He could hear a child fussing, saw her sister cross the hall, and heard a woman's voice trying to soothe the child. He watched Sean's figure approach with the child on her hip. He knew the moment she recognized him, her body froze just feet from the screen door. He still couldn't see her clearly; the sunlight continued to beam directly on him, causing everything within the house to fall into shadows. She moved forward again to the door and peered out at him. \n\n\"Alejandro?\" she asked her voice uncertain. \n\nHe smiled at her, shielding his eyes from the setting sun. She placed her hand on the screen door handle and hesitated. The child, a little boy dressed in a cowboy onesie had his face hidden in her neck. \n\n\"Aren't you going to invite me in? Who is this handsome young ma-\"\n\nHis words died in his throat as the boy turned his head to look at Alejandro. His throat went completely dry and he moved slowly up the two steps and pulled the door open to look directly at the mirror image of himself. \n\n\"It's... He's your son.\""
    ],
    "authorname": "c8er2u",
    "tags": [
        "new orleans",
        "hurricane",
        "creole"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/hurricane-ch-02"
}