{
    "title": "Awakening Ch. 08",
    "pages": [
        "Awakening 8\n\nIt was mid-morning. The nurse that brought my breakfast said Saturday morning to be exact, but you couldn't prove it by me. My daughter had called the last two days but hadn't been able to come to the hospital after work the last two days because of the distance. She was planning on coming later this morning, so I was just relaxing and watching TV, listening to Jan in the bed next to mine, trying to breath with the oxygen mask. She'd pull it away to talk, but I discouraged it. Her pneumonia seemed to be getting worse, not better. The morning duty nurse was hanging another bag of something on her IV rack and checking her vitals. Word had gotten around the nursing staff to remember to wear gloves when they checked my vitals, which had significantly reduced the number of incidents. I found it amazing the range of fantasies that women had hidden away. Some I found extremely interesting, others, not my cup of tea, but then I was along for the ride either way. I think I had more sex in the last three days than I'd had with my wife in an entire year.\n\nThe cheerful little brunette walked around Jan's bed and over to mine, taking her time to take my vital signs and punch them into her little tablet device. \"How's Jan doing?\" I asked quietly.\n\nShe set her lips in a fine line that said a lot more than her words. \"She's doing alright.\"\n\n\"Why don't I believe that?\"\n\n\"I can't really tell you anything,\" she said. \"Patient confidentiality.\"\n\n\"Yeah. I know. But I also lay here and listen to her breathing getting worse. Her first night she had a little oxygen thing in her nose, and now? A full mask? I'm worried about her. We've gotten...um...kind of friendly.\"\n\nShe nodded softly. \"It's not good, but we're still hoping she'll turn the corner. This isn't the first time she's been in.\"\n\n\"Chronic?\"\n\n\"She was involved in a fire years ago. She's really susceptible to viral infections in her lungs now.\"\n\n\"Ohhhhh. I didn't realize that. Thanks.\"\n\n\"For what? I didn't say anything,\" she said with a small smile, as she pulled the covers off my cast covered leg to check it. \"I hear this is coming off later today!\"\n\n\"Oh sweet. I was hoping,\" I answered with a huge smile as I watched her pull off one of her gloves and pull a whisp of hair from between her face and her glasses before reaching back down to my leg again. I watched in surprise as she lifted my hospital gown to uncover my cock and then reached out with her bare hand and wrapped her fingers around it.\n\n\n\nI looked down from above looking at what I guessed was an operating room, medical equipment lining the walls of the room surrounding an oddly shaped hospital bed. The huge high intensity light was the only light in the room, streaming its harsh glare down onto the white sheet covering the bed. I could see movement, someone entering the door. She walked to the bed and ran her hand up and down the smooth sheet before laying something on it, a small dark blue object maybe an inch in diameter and seven or eight inches long. I could see her, her long brown hair hanging down her back as she slowly pulled the scrub top off, leaving her naked from the waist up. Her pants went next, sliding down her legs until she could use her feet to step on them and work them over her stocking feet. Completely naked now, except for her tiny anklet socks, she stepped to the end of the table and pushed herself onto it. She scooted backwards, carefully moving the object she'd set down, out of the way until she could lay back on the table with her knees in the air and her feet resting on the table near her butt. She let her knees fall apart, exposing her completely shaved mound and pussy to me as I looked down. Her breasts, easily a full C cup, lay flattened on her chest, her nipples hardening in the cool air, her areola puckering around them sexily.\n\nShe lifted the item and pressed it to the grayish inner labia protruding from her full round outer lips, sliding the tip up and down slowly. I could see the tip glistening in the harsh light as she spread her juices on it before sliding it down and holding it at the entrance to her vagina. She moved her finger and pressed the button on the end, her mouth opening and her eyes closing at the change in sensation. She slowly pushed the blue torpedo shaped device into herself. I couldn't hear her through the heavy glass window I was looking through, down onto her, but I could easily imagine the sounds she made as she started to push the vibrator in and out of her wet pussy. I stared, stroking my own cock as I watched her below me, pleasuring herself, one hand sliding the vibrator in and out of herself and the other moving from breast to breast, pulling and twisting her nipples.\n\nI stroked my cock as I watched her, her hips starting to lift and rock in time with her strokes, the vibrator teasing her insides. I could almost feel her excitement build, the heat of her excited pussy spreading through her whole body. Little drops of perspiration formed on her chest. I could feel them start to slowly collect into larger droplets and roll down her chest and around her big soft nipples. I closed my eyes and felt the tingle of her clit radiating out, spreading through her body. I could tell she was close. She pulled the vibrator from her pussy, arching her back up and pressing the device directly to her clit.\n\nI couldn't hear her, but I could see her cry out in pleasure as her body convulsed, mine convulsing with hers, shooting shot after shot of cum out onto the window between us as her body squirted fountain after fountain of her cum into the air. I climaxed with her at least half a dozen strong spasms before our bodies began to relax.\n\nI could see her face flushed red as she pushed off the bed. I could sense both excitement and embarrassment in her as she pulled her pants on over her still dripping pussy. She slipped her shirt on and then, looking up at where I was standing, smiled. She blew me a kiss and then, taking her vibrator, disappeared from the room. \n\n\"Oh my God,\" she gasped as she held my rock hard cock, cum oozing from the tip as she held it, my thighs and stomach splattered with what had to be several squirts worth of the white cream. I was breathing as heavily as she was, looking over at her as she was looking back at me. I looked down at her past the bed rail, her pants apparently around her knees or ankles as she slowly stroked her bare shaved pussy with one finger. \"I'm sorry,\" she whispered, moving her whole hand to her mound and curling her fingers to cover her pussy, her face flushing pink. \"I had to know.\"\n\n\"Know what?\" I asked in a breathless whisper.\n\n\"What it was. My secret fantasy. That's what it is, right? You some-how show us our deepest fantasy?\"\n\n\"I don't know what it is,\" I admitted quietly, still trying to catch my breath.\n\n\"The girls. They say that's what it is. Some of them don't even realize what it is until after they see it with you, then it's like, God yes I want to do that so bad.\"\n\n\"Well. As long as it's what you wanna see,\" I said. \"But next time, ask first please.\"\n\n\"I'm sorry. I was afraid you'd say no,\" she said a little meekly as she let go of my cock and then pulled her hand back. She bent over and pulled her pants up. \"God I wanna fuck you so bad right now.\"\n\n\"You do?\"\n\n\"Uh huh. They said to expect that. All the girls that have done it felt like that.\"\n\n\"So, who is it? The guy you want to watch you?\"\n\nShe blushed again as she stood, looking down at the floor. \"Just a friend.\"\n\n\"I hope you get a chance to show your friend what you showed me. I'm sure he'll enjoy it as much as I did.\"\n\n\"Thanks,\" she said as she pulled a small package of wipes from her pocket and used them to clean my softening dick and the cum that splattered all around it. Cleaned off, she smoothed my covers back in place and then leaned over to give me a soft kiss before walking out of the room.\n\n\"Well. You're getting popular,\" Jan said from the other bed, coughing painfully after even the short comment. \"I wish I didn't have this oxygen, or I'd come over there and fuck you for real again.\"\n\n\"Right now, you need to rest and get better. There'll be time for fucking later.\"\n\n\"Not if you check out before I do.\"\n\n\"I don't think you're going home before I do,\" I said with a frown.\n\n\"That isn't what I mean.\"\n\nI thought about it a few seconds and then shook my head. \"I don't think I'd like that to happen.\"\n\n\"Me either. But maybe you can give me one more good one before you go home.\"\n\n\"I promise.\" I nodded.\n\nI was resting with my eyes closed, listening to the TV one moment, and standing in a tent the next.\n\nI could feel the breeze blowing through the open windows as I stood there, completely naked, drying myself, my wet swim suit laying on the tent floor in front of me. I didn't move as the tent door unzipped, wishing to see my wife step through, but instead seeing my nineteen year old daughter wearing the miniscule green bikini my wife found so inappropriate. If my wife had been here, she would have objected and probably not allowed her to wear it, but with her out of the country I relented far too easily. She stood for a few moments, letting me look her up and down while she did the same to my bare body. The triangles that should have been covering her breasts were so small they barely covered her nipples and areola, and sometimes, like right now, not even all of that. The strings and triangles were clearly no match for even her late teen chest. She turned and bent over to zip the door closed, the thong swimsuit bottom leaving her entire ass bare as she pushed it out at me. The green material barely covered her pussy lips, which I could tell she had shaved smooth. The tiny triangle of material and the string holding it had slipped, either on purpose or on accident, between her full round teen age pussy lips, exposing much more of her than she should be. She stood back up, my cock now sticking out like a flag pole after watching her ass and pussy for even such a short time. She stood in front of me and reached to her neck, pulling the tiny string's bow behind her flowing brown hair, letting the two miniscule triangles fall down to expose her nipples and areola. I could see the dark pink rings around each nipple, slightly puffed out, covered in tiny bumps. While I stared at her jutting nipples, she pulled the second string, dropping the top to the tent floor. I opened my mouth to say something, and froze, as she pulled the two strings on her hips at the same time, pulling the tiny triangle from between her legs, leaving her completely naked as the day she was born. She stepped towards me and knelt down in front of me, reaching out with one hand as she did.\n\nI stared, unable to say a word as she closed her lips around my mushroom head, sliding it into her wet mouth. I knew it was wrong. I knew we shouldn't be doing this, but for some reason I couldn't stop myself. Instead, I watched as she slowly slid her lips along my shaft, working about half of my length in and out of her mouth. I groaned softly as her lips caressed my shaft, her tongue rubbing around under my head with each stroke. I lost track of how long she sucked on me before reaching for my hands and pulling me down, coaxing me onto one of the air mattresses covered with the light weight blankets that we were using in the extremely warm nights. She coaxed me down onto the mattress, laying me onto my back as she crawled over me, her surprisingly large breasts for her age hanging down between us, her nipples dragging along my stomach and chest as she eased over me, crawling on top of me until she held herself over me on her hands and knees, her eyes looking down into mine.\n\n\"You always said I should wait for a man that loves me to do this, but you're the only man that really loves me and I don't want to wait any longer,\" she whispered softly as she moved one hand between us. I felt her hand find my dick and wrap around it moments before I felt her hot wetness rub around my engorged head. I watched her face as she stared back at me, her pussy enveloping just my mushroom head at first and then, slowly, more. I felt her body expand and saw her eyes close as the sensations overwhelmed her body. \"Ohhhhhhh fuck,\" she moaned softly, trying to stay quiet as she let more of her weight down on me, slowly feeding my saliva coated cock into her tight vagina. Her walls caressed my dick as she pushed further, not stopping until my head was pressing against her cervix, deep inside her. She held herself over me, opening her eyes again to look down at me as she started to rock, pulling her pussy on and off my dick. Her tits swung in time with her strokes, her nipples brushing my chest with each swing, teasing both of us as they brushed around and over my own nipples.\n\nIt took long minutes, quiet minutes, enjoyable minutes as she slowly worked her body towards climax. As much as I wanted to, I knew I shouldn't and wouldn't, but I would allow her to feel her fist climax on a dick around mine. \"Almost there daddy,\" she whispered. \"So close now.\"\n\n\"I can tell,\" I whispered, sliding my hands up and down her bare back, stroking her smooth soft skin all the way to her bare ass.\n\n\"Almost,\" she panted, \"Almost there!\"\n\nI felt the first tremors of her orgasm start deep inside her, her pussy soon spasming around me as her legs and arms trembled. She collapsed on me, and I wrapped my arms around her, holding her to me as she climaxed, her pussy squeezing and clenching around my hard cock. I struggled to hold back, not wanting to empty my desire into my own daughter. Her mother would be appalled at what we were doing, but I knew that neither of us would ever tell her. It would be a secret between the two of us.\n\nMy eyes flashed open and my brain tried to process the sudden change in environment. My body was still telling me that I was moments from climaxing, my brain fogged by the sexual euphoria of a building orgasm. My eyes focused on the closest face, that of my own daughter, looking back at me in confusion, her lips only fractions of an inch from my face where she had apparently kissed me on the cheek. I saw her eyes start to focus again on me, the startled expression clear on her face as she started to pull away.\n\n\"Good to see you awake Scott!\" I heard Amanda, my daughter's mother-in-law, say as she reached out to touch my bare arm.\n\n\"No. Wait....\" I barely got out before everything changed.\n\n she stood in front of the sink in her red high heels, her short red dress, covered in large white polka dots, looking incredibly sexy on her. I stepped from the hallway to the kitchen, my kitchen, barefoot, wearing nothing but a towel wrapped around my still damp body. I'd seen her in this dress before; the last time she had been to the house months before. I remembered her long blonde hair cascading down her back in a long single ponytail, as it was now, her full round butt wiggling side to side as she scrubbed a dish in the sink. I stepped behind her, sliding my arms slowly around her waist, startling her slightly but also causing her to stop scrubbing. She reached out and set the dish and scrub pad down in the sink, as I slid my hands slowly all the way around to her stomach before sliding them upward, cupping her large soft breasts through the dress. She closed her eyes and sighed softly, enjoying the sensations of my fingers stroking her nipples through the dress and bra, something she hadn't felt in far too many years.\n\nI found the buttons on the front of the dress and slowly started to undo them, one at a time, starting at the v of cleavage and working slowly down. She pushed her hips away from the counter to give my fingers room to work lower, my hands finding their way further and further down her dress. I pulled the hem of the skirt up to reach the last button and then dropped it after I had it undone. I slid my hands up again, running my fingers gently up the gap, my fingertips finding her soft inner thighs and then her panty covered pussy. The tips of my fingers stroked slowly up the satiny material, across a tiny strip of velvety soft skin before bouncing over a rough lace band. I felt her smooth soft stomach as my fingers stroked higher, eventually finding my target, her large soft breasts contained in a satiny smooth bra. My fingers teased along the cups a few inches each way before they found the small plastic clasp between them. I flicked the fastener with my fingers, and in moments I could feel the soft skin of her breasts pushing the cups aside. I let my fingers push the cups further away, my hands replacing both satin cups, her hot soft mounds now cupped in my hands. I let my thumbs stroke up her soft skin until I found her nipples and then bounced up and down over them. Amanda let out a soft gasp as my thumbs bend and stroked her hard nipples, my growing hard-on pressing against her dress covered ass through my towel.\n\nI felt her hands move from the sink, slide around behind her and find the towel between us. Her hands easily pulled it apart and let it fall, my rock hard cock now easily grasped in her bare hands. Still cupping her breasts, I pulled her back from the sink and then gently turned her around to face me, my hands pushing the dress apart as I did so. In moments I had the bra and dress, both sliding down her arms, falling to the floor, leaving her in nothing above her waist, but below, a lace garter belt, stockings and silky smooth bikini cut panty. I looked down at her body, surveying her breasts for the first time, taking in the soft smoothness, the tiny bumps of her excited areola and the hard protruding nipples. I could see the few small freckles on her chest and the tiny mole on her left breast, all of these imperfections making her look even more sexy.\n\nI slid my hands to her hips and pushed the garter down, catching her panties at the same time. As much as I loved how she looked in them, what I wanted now, what I needed now, was for them to be gone. I pushed them to her thighs and then gripped her hips, lifting her and setting her now bare ass on the kitchen counter next to the sink. I stepped back and pulled the garter, panties and stockings down her legs unceremoniously, her high heels falling to the floor with two loud clomps.. I tugged the stockings all the way off and tossed all aside, my eyes glued to the small clump of blonde curls between her legs. As much as I love licking and sucking pussy, what I wanted, what I needed was to feel her pussy around my cock. I lifted and spread her legs, looking at the inner labia protruding from her full round lips, as I used my hips to guide my rock hard shaft toward her. I didn't waste time. I knew she wanted it as much as I did. Even without hands I was able to settle my head at the entrance to her vagina and then slowly push into her. We groaned in unison as I pressed myself deep into her. I let go of her legs and let her wrap them part way around me as I reached for her luscious tits, cupping and squeezing them as I started to stroke my fat hard cock in and out of her. It had been so long, so many years since either of us has felt something like this. I could almost feel her enjoying my thrusts, my cock sliding in and out of her. I could almost feel the two of us climbing towards climax together. I felt my own urgency building in my groin as I pumped my shaft in and out of her, but also the tingle of her clit racing through her body, the warmth of her own urgency. She started to rock her hips in time with mine, adding another sensation, another feeling, another urgency. She lifted and spread her legs, pushing them high and wide, allowing that sensation to grow. It started as an urgent tingling inside her pussy each time I drew my head back along her vaginal tunnel and grew into an undeniable demand. It shouted at me, screamed at me, come! Climax with me!",
        "I felt our bodies spasm together, my cock pumping gush after gush into her pussy while hers clamped around me and gushed her own juices out towards me. \n\nI lay there panting, looking at Amanda as she sat on the edge of the bed, one of my hands between her legs, pushed all the way to the crotch of her definitely soaked panties, and the other pushed into the top of her dress, two buttons popped off or torn off to give my hand access. I looked down at myself, one of her hands pulling on the hospital gown, pulling it aside to leave me almost naked, the other wrapped around my cock, my softening dick oozing cum, long strings of it across my stomach and chest. I looked up to her eyes, seeming to just now be starting to focus, her eyes going to my cock in her hand first and then, as she jerked her hands back as if burned, my hand was between her legs.\n\n\"What the hell just happened?\" she asked breathlessly. \"What did you....we....do?\"\n\n\"I tried to warn you,\" I gasped. \"I'm sorry.\"\n\n\"Warn me?\" she asked, confusion and maybe even a little fear on her features.\n\n\"About touching me right now.\"\n\n\"What? I don't understand.\"\n\n\"Something happened to me. Something while I was in the coma. When people touch me, they see, we see their sexual fantasies...together.\"\n\n\"So, what I just saw?\" my daughter asked, a look of shock on her face.\n\n\"A sexual desire or fantasy. Maybe a wish?\"\n\n\"But...\"\n\n\"Yeah. I know,\" I said, pulling my hands back from where they were still holding Amanda.\n\n\"So what I saw, what I felt... I mean. I...We... you and I....\"\n\n\"Uh huh. In just a few seconds we had that. You and I both orgasmed together.\"\n\n\"But I felt like I could feel you. You were real. I could feel your cock sliding in and out of me as if we were really there, doing it!\" she said in a loud whisper, looking around to see who might hear.\n\n\"Uh huh. And I felt your orgasm every bit as much as mine. I felt your climax build and wash over both of us,\" I said quietly. \"Trust me, it's as unnerving for me as for you. They've been doing all kinds of brain wave thingies trying to figure out what it is, and why it is. All I know is that it's intense.\"\n\n\"And this happens...\"\n\n\"With anyone that touches me.\"\n\n\"Even men?\"\n\nI nodded. \"Yeah. they did one test, and I watched a guy live out his fantasy with three female co-workers in just a few seconds.\"\n\n\"And the nurses...\"\n\n\"Yeah. Them too. In some ways I've become kind of popular.\"\n\n\"Oh my God,\" my daughter said, looking down at me. \"And this is going to go away?\"\n\n\"God, I hope.\"\n\n\"I'd think you were in heaven,\" Amanda said. \"All those sexy images.\"\n\n\"I get them even if they aren't my cup of tea. Lesbian, bondage, you name it. I can tell you which nurses have fantasies about which doctors, or neighbors or well...you get the idea.\"\n\n\"So, any time you're touched? Even by accident?\"\n\nI nodded. \"It's muted a little right after I get off. But so many of the women that have it happen to them want to jump my bones right after. There seems to be a pretty strong physical desire coupled with it.\"\n\n\"I guess that explains it.\"\n\n\"Explains what?\" I asked, looking at Amanda curiously.\n\nShe leaned towards me, careful not to touch me. \"I want to take off all my clothes and sit on your dick,\" she whispered.\n\nI whispered back, \"And I want to watch you take them off and do it just as badly!\"\n\n\"Geeze mom!\" my daughter said with a scowl. \"Really? You wanna fuck my dad?\"\n\n\"Well, it's been a lot of years since that part was used and it felt so real. Yeah. I want to feel it again,\" she said with a smile. \"Besides, your dad isn't a bad looking guy. I didn't mind dancing with him at all at the wedding.\"\n\n\"MOM!\"\n\n\"What?\"\n\n\"Really? My dad?\"\n\n\"It's okay Amanda. She's just embarrassed about what went through her mind when she kissed my cheek.\"\n\n\"Ohhhh? Do tell?\"\n\n\"DON'T YOU DARE!\" my daughter snapped at me.\n\n\"I won't. But you need to realize that those are coming from YOU, not me. Even that one last time.\"\n\n\"Well. It looks like you have some company!\" a little blonde haired nurse said as she pushed a wheelchair into the room.\n\n\"I do. This is my daughter and her mother-in-law,\" I said. \"This is Chrissy. She's my nurse today.\"\n\n\"I am. And he's been such a bad boy today that I'm going to have to steal him away for a while,\" she said with a grin.\n\n\"Did you...You know?\" my daughter asked.\n\nI saw Chrissy blush brightly.\n\n\"She had to go change her panties after she checked my vitals early this morning,\" I said. \"I wasn't awake to warn her until it was too late.\"\n\n\"I heard that there was this guy that made you come in seconds, just by touching you?\" she whispered. \"But I didn't believe it until I touched his hand. Oh my God did I come hard. Which is why...\" she said, holding up her hands with gloves on them.\n\n\"Smart move,\" I chuckled. \"So where are we off too?\"\n\n\"To get rid of that cast!\" she said brightly. \"I bet you're more than looking forward to that!\"\n\n\"I'm looking forward to a shower! Someone told me I haven't had anything but a sponge bath in eleven weeks now.\"\n\n\"Well. I don't know that I'll be able to let you, but we can see if the doctor changes your orders once the cast comes off,\" she said as she started putting the rail down on the bed to help me out. I slid off the bed, my gown pulling aside to expose most of my body. \"Well. maybe we'll have to try harder. It looks like someone's been having fun while I was gone.\"\n\nI chuckled and nodded towards Amanda. Chrissy looked up at her and grinned. \"Well, that must have been interesting. At least if I don't have time, maybe she will since you two know what each other looks like naked now. I mean it's not exactly in the rules, but if I get you in there and she happens to help you, I can't stop that.\"\n\n\"Oh dear,\" Amanda said softly.\n\n\"Well, we can talk about that after. For now, let's go get you cut open. You're welcome to wait. It'll be about half an hour,\" she said, looking over at Amanda and my daughter.\n\nChrissy settled a blanket over my lap to cover me and then wheeled me out.\n\nThe trip down to orthopedics wasn't long, but the wait was annoyingly so. I sat getting cold in the waiting room for almost fifteen minutes before a heavy set, rather stern looking nurse came out to collect me. \"Can you get on the table yourself?\" she asked curtly, stopping the chair by an exam table you might find in any doctor's office.\n\n\"I suppose I can,\" I said, pushing myself up from the chair, balancing myself on one foot. I twisted around, trying to swivel around on my one good foot, nurse grumpy holding my arm to help balance me. I did okay until she let go with one hand to push the chair back just as I twisted, intending to sit my butt on the edge of the table. She was there quickly, reaching for me as the chair went rolling across the room, both hands gripping my upper arms and my body leaning towards hers.\n\nThe noise was almost deafening, between the loud music, the cheering of all the girls and the clapping in time with that music. As seconds ticked by, I realized I was part of that deafening chorus. My hands clapped to the music and each time the male stripper stopped at another of the ladies in the room, who pulled her top down for him, I cheered with the rest. A blonde haired woman grabbed the big black dick that was flopping in front of her face and wrapped her hand around it, moments later leaning her face towards it and wrapping her lips around the head. On and off his cock she pumped her face, sucking his long fat cock until it was hard again. He pulled away to the cheering of the rest of the girls and moved around the room again, carefully avoiding me, but at the same time, watching me, watching my reactions as he came close to me. He let a number of young women suck and stroke his cock, each time coaxing them to flash him their tits or even in a couple cases, their pussy, or more.\n\nA couple young ladies not only flashed him their pussies, but allowed him, no encouraged him, to rub his dick between their legs, grinding their bodies together. Shelly took her dress completely off her annoyingly petite body and was rubbing up and down his sweaty body before he pulled his dick from between her legs to move on to another girl. Around the room he worked, stopping at Donna, sitting only two women down from me, and coaxed her to pull her shirt up, quickly rubbing his long dick around her nipples before she grabbed it and drew it to her mouth. I cheered and clapped, but inwardly felt jealous. Yeah, I'd definitely had too much to drink, but right then I didn't care. I wanted his cock in my mouth, it was, after all, my party.\n\nHe pumped his hips and worked his cock in and out of her mouth for almost two minutes before pulling out, dancing back to the middle of the room and then bouncing his dick at all of us in the circle, shouted out over the music for them to point out the bride. Fingers pointed to me from all around the circle as he turned to face me, as if he didn't know that I was the bride with the tiny fake tiara on my head and the white feather boa. \"Does she wanna get fucked?\" he shouted, to which all the girls cheered.\n\nHe danced his way over to me, his cock longer than I'd ever seen before, well in person anyway. He jerked and bounced himself so his cock bounced up and down in front of me, offering me his cock as he moved closer inch by inch. I hesitated. I didn't want to hesitate, but I did. I wanted it. God, I wanted it in my mouth, I wanted it between my tits. I wanted it in my pussy. I reached out and grabbed it, wrapping both hands around it and pulling it toward my mouth.\n\nHe climbed onto the sofa to push his pelvis in my face, letting me stroke and suck his cock greedily. I could taste his precum as he became more excited, almost as excited as my pussy already was. I could feel the dampness in my panties and the tingles racing through my body. He stepped back, reaching for my hands and pulling them from his cock. \"NO!\" I almost shouted as he pulled his cock from me, but instead he pulled my hands, pulling me off the sofa. I stood up and followed him to the middle of the room where there was a big, cushioned hassock. He stopped me in front of it and looked at me questioningly. I knew what he was asking. I knew what he wanted me to do. In moments I was pulling the top of my dress down, exposing the big heavy bra that contained my 44F tits. I reached behind me and unfastened the clips, letting the bra snap around me and then fall to the floor, freeing my big tits. I didn't care who was looking. I wanted that cock between my tits.\n\nI knelt down on the floor in front of him and reached for his cock. He stepped towards me and I pressed his long dick between my tits, using my hands to press them around it. He started to hump his hips up and down, driving that long cock up between my breasts. His skin stroked the soft smooth skin of my boobs, caressing them. I could feel the motion of his body sliding against my nipples, making them tingle, making them want more. I tilted my head down and let him push his cockhead into my mouth with each stroke, my saliva lubricating him again as he pushed up and down the soft confines, his body rubbing my sensitive nipples, sending little tingles through my body, especially down to my God so wet pussy. I could feel how wet my panties were as I released his cock from between my tits and stood up.\n\nIt only took a moment to push my dress down over my hips, letting it pool around my high heels. I didn't care who saw my pussy as I pushed my panties down, forcing them down over my thighs. He reached a hand out to balance me, his touch burning hot on my arm as he supported me while I clumsily worked my panties over my shoes. I was briefly worried that he might think I'm too fat, not good enough looking. But that thought evaporated as he knelt in front of me and sucked one of my hard nipples into his mouth, his fingers sliding up my thigh and between my legs. I could feel his fingers spread me, one finger slipping between my lips as he rubbed it back and forth. Little shocks of excitement raced through my body as he teased my clit with his finger, his sucking and nibbling of my nipple seeming to have a direct connection to my pussy.\n\nI don't know how long I stood there, moaning loud enough I could even hear myself over the music. I opened my eyes when he pushed me gently back, laying me across the padded hassock. He lifted my legs and knelt down between them as I held them up and apart for him. He looked down at me, grinning slightly as he rubbed his dick head between my sopping wet lips. I could feel the heat of his cock as it touched my labia, his mushroom head sliding up and down my lips. I felt him press it between my lips, and then the pressure builds for a moment before it slid easily into my vagina. I could feel it stretch me as he pushed into me, sliding deep into me. The sound of the girls cheering was nearly blocked from my mind as he started to stroke in and out of me, his head banging into my cervix with each stroke. Little jolts of excitement like little shocks radiated out from my pussy as he pressed his thumb against my clit, determined to make me climax around his long fat dick.\n\nI lifted my hands to my own tits, grabbing my nipples and pulling and twisting them, sending more sparks through my body. I could feel my own hips moving, unable to stop them as he stroked in and out of me. My hips rocked of their own accord as he plunged in and out. I could feel it building, an urgency, a desire, a need! I felt my body shudder and then my stomach spasm as my body convulsed around his cock. I could hear the cheering grow louder as my body spasmed over and over.\n\nThen I felt it, his big cock pumping cum into me. I could feel his heat, and the power of his ejaculations into me, filling my pussy as he held himself deep in me for a few moments. Only one or two shots surged into me before he pulled out, leaving me suddenly empty. I could feel his cum landing on my stomach and shaved mound as he coaxed it from his cock. Then back in again, filling me again, pushing deep into me as my own climax started to slowly fade. I rubbed my hands in his cum on my stomach, spreading it around and rubbing it into not only there but my tits as well. I could hear cheering and clapping as my mind slowly returned to reality. Eddie would never be able to know. \n\nI sat on the table panting, the nurse leaning against me, holding onto me as her body continued to tremble slightly. One arm was around me, holding me to her, pressing her body tightly to mine, while her other hand had found my dick under the gown. I felt her hand pull from my dick. I couldn't see down her body the way she was holding me, but I could feel motion; I could feel her legs moving as she held me, panting. I felt her push me further back on the table and then one leg lift, moving across me. She pressed her hips towards me as she grasped my cock again. I felt my head bump and rub around her hairless mound and then the hot wetness of her pussy. She groaned loudly as she pressed me to her vaginal entrance and then arched her back, pushing herself down my shaft. With one leg on the table across my lap, and the other on the floor, she started to rock her hips, pushing herself on and off my engorged cock. I could feel her hot wet depths caress my shaft as she worked herself on and off of me. On and off me she rocked, her moans growing as her orgasm pushed ever higher. I was going to come too, in only moments.\n\n\"JESUS CHRISTEN!\" I heard a young female voice cry out in surprise behind nurse grumpy.\n\nShe seemed to startle, shaking her head and then suddenly pulling back from me. She pulled herself off my cock with an audible wet slurp. She looked down at herself, her scrub pants and panties around one ankle, the rest of her naked from the waist down. \"OH SHIT! What am I doing!?\" miss grumpy cried in surprise.\n\n\"Jesus Christen!\" the young woman said again as she pushed the door closed. \"With a patient?\"\n\n\"I didn't....I wasn't...God! What was I doing?\" Christen asked, clearly confused as the young woman stepped around into view. I recognized the face, but not from here, but from the party that I had just attended as Christen. She was one of the young ladies at the party, the one that pulled her dress all the way off and ground herself against him, no doubt hoping he'd do more than fuck her mouth with his long dick.\n\n\"Jesus Christen,\" the petite brunette said yet again, apparently unable to find other words to express her dismay. She stepped past Christen and reached out to pull us apart, Christen's arm still around me, her hand resting inside the back of my gown.\n\nShe stood in front of the table; the room practically dark. Only a small lamp on the desk across the room lit the space at all. She pulled her scrubs off and dropped them on the table, looking at her watch nervously. It was almost time. She looked down at her nude body and stroked her fingers across her nipples, sending little tingles through her body. She stood, teasing her nipples, making her pussy even wetter with anticipation. It had taken her a long time to build up enough courage to do this. She knew she wanted it, but it was still hard. She could feel the butterflies in her stomach as she picked up the note and read the few lines directing her to do this. Her heart pounded as she stood looking at the exam bed, the same bed she had so many patients lay on as she worked on their casts. Like all exam beds it had the requisite attachments for pelvic exams, though in this clinic they were fitted with adjustable supports to rest legs and arms upon. She pulled the arms out and up, setting them apart as far as they would go. She crawled onto the table and lay on her back, scooting her butt to the very edge of the table before lifting her legs and resting her legs on the supports. She took a deep breath, her heart pounding hard in her chest. If anyone would happen to come in... if anyone saw her like this... She took a deep breath and then followed the final instruction. She placed the black eye cover over her eyes and secured it around her head. Now all that was left was to wait.\n\nShe waited, nervously, her stomach rolling and churning in both anticipation and fear. Finally, it beeped. She moved her right hand to her watch and pressed the button, turning off the alarm. It was time. She'd done all that was asked of her. Now it was time to see if he would come. If he would accept her offering. Her offering of herself.\n\nShe heard the door open and close, and resisted the temptation to look, to lift the eye cover and peek. She still had no idea who it was. She wanted badly to know, but it wasn't allowed yet. He had made that perfectly clear. If she wanted what he had to offer, it had to be on his terms. She had to offer herself to him willingly. She had to be ready to provide pleasure for him when HE wanted it. In exchange, he would pleasure her in ways that she had yet to feel. She knew it would be worth it. She had said it was more pleasure than she could remember feeling, but to get there, to reach that point she had to prove herself. She had to prove to HIM that she was worthy of it, that her body was his to enjoy. Only then, only after she had proven that her body could satisfy his needs, would he include her, draw her into his circle, fill her desires as he filled his own.\n\nIt was almost a shock when she felt it. There was no preamble, but she had expected that. There was no foreplay, she had been instructed to provide that for herself. She was expected to be wet and ready, and she was. She could practically feel her pussy leaking and dripping with anticipation, anticipation that would now be fulfilled. She felt his cock spread her vaginal opening, stretching her, as he pressed himself against her. She moaned at the sensation of fullness as his head pushed into her just beyond her opening. She had no idea how big or long he was, but she knew it was enough to satisfy more than one woman. She wanted to be one of those women. She felt him start to push deeper, working his fat shaft into her until his head bumped the end of her vagina, bumping against her cervix.",
        "\"AHHHHH!\" she cried in both surprise and pleasure as her nipples were pinched, hard. The lighting jolt of pain gave way moments later to pleasure. Her desire built. She wanted to beg for him to fuck her, to start pumping that incredibly sexy feeling cock in and out of her, but the rules had been specific. She would accept what he gave, when he gave. She waited, feeling his pulse in her vagina through his cock. She waited and then he moved, pulling out and then in again, stroking his cock to tease her vaginal walls. In and out he thrust, his strokes growing longer and more powerful with each passing moment. He squeezed, twisted and pulled her nipples, not gently, but roughly. The little jolts of pain served to drive her approaching climax along more quickly. In and out he thrust, his cock jamming hard against her cervix. She couldn't help herself. She was supposed to be silent, but she couldn't help the moans of pleasure that escaped her lips. She couldn't help but arch her back and buck her hips towards his cock as she used her feet on the supports to lift herself towards him. She didn't know what he looked like, but it didn't matter. All that mattered right then, right that second, was her orgasm as it washed over her.\n\nHer whole body shuddered and trembled as her pussy gushed her juices out, coating his cock and more. Over and over her stomach spasmed, pumping what felt like gallons of her cum out at him, his strokes never slowing. In and out he pumped while she climaxed, her clit riding along the top of his fantastic cock driving her even higher.\n\n\"Uhhhhh\" was all she heard as she felt his cock swell even larger inside her moments before feeling the first surge of cum lance into her. She felt his hot cum filling her, pump after pump, driving her ecstasy even higher, even further. She felt her climax peak and then slowly start to slide down the far slope, his cock still embedded in her, twitching and oozing more cum into her depths.\n\nThe touch of his hands changed on her tits. No longer gripping and pulling her nipples, his grip was now tender and gentle, teasing her perky little boobs and stroking over and around her nipples, the change in sensations drawing her orgasm out a few seconds longer. Finally, he pulled from her, a sudden feeling of emptiness left behind. Still, she remained still, her pussy spread wide open, dripping their combined cum down to the floor. She could feel it leaking from her, running down over her puckered rosebud and then dripping to the floor. She wanted to lift the blinder, see who it was, see what he looked like. But not yet. She still had to prove she could be trusted, that she could follow his directions, that she could be his to use. She could hear him moving around and then the door open and close again.\n\nShe wondered how long she should wait. How long she should lay like this, completely exposed. She worried about what would happen if someone came in. True there were no appointments on the schedule, but still, if anyone were to walk in with her like this, in this position, in this incredibly compromising position... but then that was part of the test, right? To see if she could follow directions and if she could be worthy of more of what he had just given her? She heard a small timer ding once. One of those old-fashioned egg timers that gave just a single metallic chime. She lifted her hands to her eye cover and removed it. The lights in the room were on, bathing her in their harsh glare. She looked down at her body and smiled. She liked how she looked, she liked how her pussy looked and smelled after being fucked. God, she wanted it again, she wanted it more. She wished he'd come back and fuck her more, but she knew he wouldn't. She looked around the room for something, anything to push into her pussy again. It suddenly didn't matter if anyone came in. She NEEDED to come again. She NEEDED to feel her pussy filled again. She NEEDED to feel a cock in her pussy again as she lay there. \n\nI was almost breathless as I sat there, my cock sticking up exposed as I looked at the young woman. She stepped back and started undressing, pulling her scrub top up and then off, tossing it aside to reveal a tiny lace bra that was more to cover her nipples than hold anything. She reached behind her and then slipped the bra off, exposing her small perky breasts. Her nipples pushed out hard and excited as she bent to push her pants down, along with her tiny panty. In moments she was naked except for her athletic shoes. She stepped towards me, pushing me back, making me lie down on the bed. She pushed the gown aside so that I was naked from my chest down before she crawled onto the bed. She moved over me, using her knees alongside my hips, crawling up over me until she had her pussy rubbing against my rigid shaft.\n\nShe lifted herself and my cock, aiming me for her pussy before setting down again, driving her sopping wet slit down my shaft. \"Oh fuck!\" she gasped as she drove herself down on me. I felt her sink down until her clit pressed against the base of my shaft, her eyes slowly focusing on me as she started to lift and drop on my cock. She was seeing me, but I wasn't sure she was seeing ME. Up and down she rode, little gasps and moans slipping from her as she pounded herself up and down my cock. I could feel her pussy spasming around me, her climax working on her as she continued to drive down on me. \"Oh God. Please come in me. Please Master. Please come in me,\" she moaned as my climax raced towards completion. Between feeling Christen's orgasm and then Shelly's, it didn't take long to drive my real orgasm to its peak. My body bucked under her, pumping a gush of cum into her.\n\n\"FUCK YES!\" she cried as she felt me surging into her, jamming her body down on mine to feel the full surge into her. Slowly, ever so slowly, she seemed to return to reality. I'd seen and had a number of women want to have sex with me after, but this was the first time I felt like the woman on me was still under the spell, under the illusion of her dream or fantasy. Clearly Shelly felt compelled to ride me as part of her dream state. She looked down at me and then at herself, sitting astride me, nude. She looked at Christen, standing next to us, her hand still on me, on my arm, her fingers of her other hand sliding in and out of her pussy as she pushed herself toward climax.\n\n\"OHHHH SHIT!\" she gasped as she climaxed on her fingers, leaning her head down to my chest as she panted for breath.\n\n\"Oh my God. What did we do?\" Shelly gasped as reality set in on her and she started to grasp the enormity of her position. She looked down at her own pussy, my cock still impaled in her, almost as if to prove to herself that it wasn't a dream. She shakily pulled up off of me, our combined cum leaking from her pussy, dripping down onto my softening cock. \"Oh God. Tell me I didn't...Oh God Christen. What did I do?\"\n\n\"Get fucked,\" Christen whispered back breathlessly.\n\n\"I know, but. I mean... Oh God. Christen. Dan. I mean. He won't...\"\n\n\"He won't ever know,\" Christen answered her. \"Because neither of us are going to tell him.\"\n\n\"But Christen! I'm not... You know.\"\n\n\"Yeah. I know.\" She nodded, reaching out to help her friend off the table. \"You better get dressed.\"\n\n\"Yeah. I better.\" Shelly nodded quietly before looking at me, almost as if she was just realizing that I was really there. \"Um. You wouldn't say anything, about...I mean... this could cost us both our jobs.\"\n\n\"I'm not saying anything,\" I said quietly, adding almost as an afterthought, \"as long as you stay naked.\"\n\n\"What?\" she said, snapping her head up to look at me, her panties in her hands as she was about to step into them.\n\n\"You heard me. You want to buy my silence, that's my price. You too Christen. I'd like to see those tits in person.\"\n\n\"NO! Absolutely NOT!\" she snapped back.\n\n\"No? Huh. Okay. Well. I wonder what your boss is going to say about you trying to fuck me right here on this table? It wasn't bad either by the way. Definitely not the worst pussy that I've been in,\" I said with a slight shrug.\n\n\"I don't believe this. That wasn't my fault! I couldn't help it!\" she snapped angrily while Shelly stood, still naked, staring at me.\n\n\"So tell me. Did you want the stripper to fuck you and he didn't, or did you really go all the way with him?\"\n\nChristen stared at me open-mouthed, unable to speak for long seconds. \"How do you know about that?\"\n\n\"Does it matter?\"\n\n\"Yeah, it does. If one of the girls spilled the beans...\" she said angrily.\n\n\"So he did. Does your husband know?\"\n\n\"NO!\" she snapped.\n\n\"Well, then. Why don't you just take this off,\" I said reaching over and tugging on the scrub top, \"and you two can get to work getting this fucking thing off my leg.\"\n\nI saw the two of them look at each other for long seconds before she reached for her top and pulled it off. She undid the industrial strength bra holding her tits in place and tossed it aside, leaving her as naked as Shelly. With an angry look on her face, she moved closer to me again, raising the back of the exam table for me to lean against before helping me slide back against it. I looped an arm around her waist and pulled her to me, her tits pressing to my face, one nipple and big pink areola nearly pressing into my mouth. \"You know. You do have a spectacular set of tits,\" I whispered before opening my mouth and drawing her right nipple in.\n\n\"Oh fuck,\" she grunted softly as she closed her eyes. I couldn't see what she was dreaming or thinking, our recent sexual coupling having muted it, but I could tell her mind was definitely going some place as she softened herself and pressed her tits more tightly to me. I could \"feel\" some of her desire as I sucked her sensitive nipple. Her hand made its way to my lap, gently teasing my cock and causing it to slowly grow as Shelly worked on cutting my cast off my leg. Christen moaned softly as I sucked on her nipple, her hips pressing against the side of the table, almost as if she wanted to climb back onto me.\n\n\"Done,\" Shelly said, pulling the cast off my leg, the cool air caressing my skin for the first time in weeks.\n\n\"Oh good,\" Christen moaned, lifting her leg up and over me, trying to get my cock to her pussy again. \"Give it to me.\"\n\n\"Christen! Really!\" Shelly asked loudly.\n\n\"Uh huh,\" she moaned. \"God look at that cock. Bring it here honey. Oh God yes. That's it. Just take 'em off. I don't mind. Ohhhhh God look at that cock. I want it in me. I want you to fuck me with it.\"\n\nShe pushed herself over the edge of the table further, aiming my cock at her pussy as she tried to lift herself onto the table. She finally swung herself up enough to get both knees on the table, my cock in her hand as she straddled me much like Shelly had only minutes ago. I felt my fat head rub between her full round outer lips and then slip into her wet depths again. She started to bounce up and down, her big soft ass slapping loudly on my thighs each time she dropped on me. Her tits bounced wildly in front of me, my hands not nearly large enough to capture the huge mountains of flesh. Up and down she rode, bouncing herself closer and closer to climax.\n\n\"Oh fuck!\" she cried as her body shuddered. I could feel her climaxing around me, her pussy squeezing and gushing her juices around me. I held her tits, gently kissing them in turn as she slowly relaxed, her body softening and her trembles and shudders fading away. Slowly she looked down at me, a look of confusion again in her eyes that slowly faded. \"Oh Jesus. Tell me I didn't...\"\n\n\"You did,\" Shelly said, now dressed again.\n\n\"Oh my God,\" she groaned, pulling off my still hard cock. \"I don't believe I did that. I mean... oh my God.\"\n\n\"Yeah. Tell me about it. I rode him until he came in me.\"\n\n\"Oh Lord,\" Christen said quietly as she climbed off of me. \"I have no idea what came over me. I mean I just couldn't stop myself, but it wasn't... I mean... It wasn't you,\" she said, looking directly at me. \"It was...It wasn't you. Why would I do that?\"\n\n\"Well, why don't we keep it our little secret?\" I said, looking at both of them. \"I don't think anyone needs to know that you both got naked and fucked a patient.\"\n\n\"No. No one needs to know that,\" Christen agreed as she shakily bent to pick up her panties. I watched her dress, almost disappointed to see her cover her tits. With them both dressed, Shelly made a phone call and they helped me back into my chair again, only now without that darn cast. Ten minutes later I was on my way back to my room.\n\n\"Well, look at that! No cast!\" my daughter said brightly as I climbed back onto the bed by myself, turning down help from the little brunette that pushed me back.\n\n\"Yeah, definitely no cast! And does it feel good!\" I said with a smile. \"Now they can't refuse me a shower!\"\n\n\"I'll let your nurse know you're back,\" the brunette said as she wheeled the chair out of the room.\n\n\"So. Mom went to get a bite for us to eat. She should be back soon.\"\n\n\"That sounds good.\"\n\nShe looked around and then quietly asked. \"Can we talk, privately?\"\n\n\"Yeah. Sure,\" I said. \"Jan knows, so even if she's not asleep, she won't say anything.\"\n\n\"Knows what?\"\n\n\"What happens. It happened to her, and she slept with me overnight.\"\n\n\"She did? You did? I mean, together?\"\n\n\"Yeah, together. I know what you're going to say. Yeah, I know I said I'd never do it, but I did, and I don't regret it.\"\n\n\"Okay. So, before mom comes back. About us. About what happened...\"\n\n\"I know it never happened, so that means it was a fantasy,\" I whispered. \"I never knew you thought about me that way.\"\n\n\"I didn't, but then, I did. I mean I thought about doing just that. In fact, I stood outside the tent and could see you inside. I just couldn't bring myself to do it, to come in and do it.\"\n\n\"It's alright.\"\n\n\"But I WANTED to. That's wrong, right?\"\n\n\"You know, a lot of girls fantasize about their dads. It's kind of natural. I'm not worried about it,\" I said to her, my dick getting hard just thinking about how she looked completely naked, knowing that was exactly how she looked to herself.\n\nShe nodded and sat in the chair by the bed, careful not to touch me as we chatted.\n\n\"Here we are! Lunch!\" Amanda said as she walked in with a large McDonald's bag. \"I figured you'd like something real for a change. Well, at least as real as fast food can be,\" she said with a smile, pulling the little bed table over and setting the bag on it. She quickly pulled out containers of fries, and one of my favorites, a quarter pounder with cheese. The three of us demolished the food in record time, with me eating up any leftovers from the girls. We just finished eating when Doctor Shakari walked in.\n\n\"Well, Scott. I see we got your cast off. Shall we take a look?\"\n\n\"Sure Doc,\" I answered, letting her pull the blanket off my leg, the end of the blanket pulling far enough off to let my flaccid dick lay exposed. It wasn't like she hadn't seen it before, so I ignored it as she checked my leg with her gloved hands, running them up and down the bones.\n\n\"Feels good here. Just going to take a while to regain your strength there. Lift your leg for me,\" she coaxed, holding a hand out over my foot. I lifted my leg until it touched her palm and then pressed against it with all the strength I could, which was apparently not much, given the look on her face. She reached down, leaning over the bed, grasping my ankle and squeezing it, her thumb measuring my pulse. I saw her eyes flutter slightly and then the room faded.\n\nI looked around, confused for a moment. I hadn't ever recalled feeling disjointed like this. It had always felt as if I was suddenly \"there\". I found myself standing near a pool, the wide flagstone patio around it almost hot on my feet as water dripped from me and my suit. I was still trying to get my bearings when Doctor Shakari walked past me in a tiny purple bikini, water streaming from her body and hair. I felt compelled to follow her, walking along behind her until she stopped in the shade of a pergola and bent to pick up a towel. I stepped right behind her and reached for her nearly bare ass, cupping each firm smooth cheek in my hands. She jumped slightly and cried out.\n\n\"Ooooooh,\" she said, looking over her shoulder at me, almost as if she wasn't expecting my touch. I slid my hands around her body to her stomach, pulling her gently back into me, our wet bodies pressed together as I eased my hands up her body, slowly, teasingly, sliding across her firm stomach until my fingers reached the purple triangles of the bikini top. With a grin to myself, I let my fingers push the top up, sliding the wet material up over her perky little boobs, her hardening nipples providing the only resistance. \"Are you being naughty?\" she asked, without looking back, but also making no move to stop me. \"If you keep doing that, you're going to have to do a lot more. You sure you're prepared for that?\"\n\n\"Are you?\" I found myself asking as I pushed the top all the way up her chest to expose both firm little breasts. I cupped one breast, gently squeezing her nipple between my thumb and finger while I slipped my other hand down again, across her firm smooth stomach to the top edge of the bikini bottom. I used my fingers to push the bottom down, forcing it down between her thighs, the tiny strings coming loose as she pulled the small bows on either hip.\n\n\"Oh fuck yes,\" she moaned softly as my fingers slipped between her legs and stroked her soft exposed lips. Her bikini bottom dropped all the way to the flagstones when she let go, leaving her in nothing but the small top pushed above her tits. I felt her hands work between us, finding the tie to my own swim trunks and tugging it, working it loose so she could work my trunks down over my butt. I felt my swimsuit slide down my legs, my now exposed hard-on pressing between her bare ass cheeks. \"Oh God. Fuck me. Please fuck me.\"\n\n\"You sure that's what you want?\" I ask with a grin, already knowing it is.\n\n\"Oh God you are such a tease,\" she moaned before I turned her around to face me. She wrapped her arms around my neck and pulled her face to mine, pressing her lips to mine in a long wet erotic kiss. I lifted her up, her slender frame light in my arms. She broke the kiss only long enough for me to find her pussy with my cock and settle her down on it. She pulled our faces together again as I held her by her ass, using it as a handle to pull and push my cock in and out of her pussy. In and out I stroked, her moans forced into my mouth as she continued the embrace. \"OH FUCK!\" she cried after only a few minutes of her sweet pussy stroking on and off my fat cock. \"I'M COMMMMING!\" she cried into the air as she leaned back as far as her arms would allow without releasing from behind my neck. She ground her pussy hard into my body as she trembled and shook. I lowered her down, kneeling down onto the flagstones and laying her on the lounge chair in front of us. She lifted and spread her shaking legs, knowing what I wanted next, wanting it as well.\n\nI started pumping in and out of her, slapping my body against her wet ass with each stroke. In and out I went, caressing her vagina while it clamped and spasmed around me. I could feel the urgency, the need build. I knew I was moments away and continued to pump myself into her over and over, faster and faster until it happened. \"AHHHHHH!\" I grunted loudly as my cock surged the first gush of cum deep into her pussy. Over and over I came inside her, my body jerking, her legs and arms trembling as her climax was teased back up again for a few additional moments.\n\n\"Oh my God. I love feeling you fuck me like this.\"\n\n\"What if your husband finds out?\"\n\n\"He won't, as long as we're careful, like today,\" she whispered back. \"How about next time we just forget the suits altogether?\"\n\n\"That could be difficult. Aren't we all having dinner together next week? Not that I wouldn't mind seeing you running around the yard naked, but my wife might object.\"",
        "\"Hmmmmm. Interesting idea. Maybe I can get her to try on one of my new bikinis and have it accidently fall off in the pool? How would you like to see both of us running around naked?\"\n\n\"I wouldn't mind seeing you both naked at once as long as I can fuck you.\"\n\n\"Never know. If we can get naked it might just happen to slip in there in the pool or something. Not like Ariel would ever know. He'd be too busy staring at your wife's tits to notice your cock in my pussy.\"\n\n\"I'm game if you are,\" I chuckled. \"Now you want me to fuck you again?\"\n\nI sat there chuckling softly, looking at Doctor Shakari, her hand still on my ankle, but her other hand squeezing one of her breasts through her white coat and the dress she had on under it. I stopped chuckling when I looked and saw Amanda and my daughter, Diane staring at me.\n\n\"What?\"\n\n\"What you said,\" Amanda said quietly.\n\n\"What did I say?\"\n\n\"Your exact words? I wouldn't mind seeing both of you running around naked at the same time as long as I get to fuck you. Unquote,\" Amanda answered quietly. I looked back at the Doc standing at the foot of the bed, looking uncomfortable, acting like she was pressing her thighs together.\n\n\"Oh fuck,\" she moaned moments later, her legs and arms trembling. She stood panting and shaking for long moments before she opened her eyes and looked around at us. I could almost see panic in her eyes as she stared back at me, her chest heaving as she tried to catch her breath. \"I'm terribly sorry. I don't know what came over me. I kind of zoned out for a moment,\" she panted, trying not to admit that she just climaxed in front of a patient. \"Will you excuse me please?\" she said as she quickly scurried from the room.\n\n\"What happened?\" my daughter asked after the doctor had left.\n\n\"What do you mean?\"\n\n\"You were like gone for almost two minutes. I shook your shoulder, and you didn't answer. Then you blurt out about wanting to see us running around naked and fucking me.\"\n\n\"Minutes? Not seconds?\"\n\n\"No. It had to be at least two minutes, maybe more.\"\n\n\"Damn. No. It was her...hell, I don't know. Fantasy or idea or maybe memory. I'm not sure. But all of a sudden I was standing next to a swimming pool dripping wet. When she walked by, I just knew what I had to do. I walked up behind her and pushed her swimsuit off and had sex with her. It was me. I mean I knew it was me, but I was acting like someone else. Someone that I think she'd cheating with. That's what the comments were. She was going to try and get my wife to wear a bikini and then have it come off in the pool so that they were both running around naked, and while her husband was staring at my wife's tits, she was going to fuck me in the pool.\"\n\n\"Jesus,\" my daughter whispered. \"and you saw all that in a couple minutes?\"\n\n\"Uh uh. I lived it. I have every bit of memory as if I were really there doing it, how she felt, how she tasted as she kissed me, how the wind blew across our naked bodies, everything. For me, I was there. It was as real as if I just walked back in from doing that, having sex with her by the pool.\"\n\n\"But doesn't it only take a few seconds?\" Amanda asked with a look of concern.\n\n\"It does. Maybe it was different because she had gloves on.\"\n\n\"But she touched your leg earlier and it didn't do anything.\"\n\n\"I dunno. Maybe it's because of where she was touching? The last time it happened with her she had gloves on too, but she was holding my dick. I don't know. It's frustrating. They're getting so real that I'm not sure I'll be able to tell where the fantasy ends and where reality starts!\"\n\n\"Well, she clearly wasn't done when you were back with us. I mean she stood there and climaxed right there in front of us.\"\n\n\"Yeah. When I went down to get my cast off, the two nurses there both ended up having sex with me. I don't mean the seconds long thing. When they were done, they just kept going and had real physical sex with me. I don't know what's happening to me. Am I going to have to go off and hide myself away? Is this going to happen any time I bump into anyone out in public?\"\n\n\"I don't know Scott. I mean, I've felt it. It really feels real at the time. I just don't know what to tell you,\" Amanda said quietly rubbing my leg through the blanket.\n\n\"Yeah. Me neither,\" I said, looking towards my daughter, who hasn't said a word. \"The way it's going, I won't even be able to kiss my own kid goodbye or hug her or anything. Hell, I can already tell she's afraid to touch me.\"\n\n\"I'm not Dad, honest,\" she said, without moving any closer. \"I'm just being cautious.\"\n\n\"I suppose it's pretty unnerving to suddenly share your sexual fantasies with your dad.\"\n\n\"That's one way to put it,\" she answered with a frown. \"It's not like I have that many, but, well, they're private.\"\n\n\"Yeah. I know sweetie,\" I answered as my nurse, Chrissy walked in.\n\n\"Good morning! How are doing now, better?\" she asked as she rolled the little blood pressure machine my way. \"Last set of vitals for me today.\"\n\n\"Oh? Headed home?\"\n\n\"I am. Just as soon as I'm done with you. I saved the best for last!\"\n\n\"Uh huh. You just don't want to walk around with wet panties,\" I said quietly, making her blush as she wrapped the cuff around my arm.\n\n\"Well, I have to admit my boyfriend is going to get one hell of a fucking when I get home,\" she said with a grin as the little machine started pumping the cuff up. She took my temperature. She waited for the machine to finish and then noted the numbers on her little tablet. She reached up and tugged the sliding curtain, pulling it out and around until she, Amanda, my daughter and I were curtained off from the rest of the room and the hallway. \"You know. I'm off the next few days, and you'll probably be gone before I get back,\" she said as she reached to help me sit up. She reached to untie my gown and then pulled it off. \"You don't mind, do you? I mean I guess you three have seen each other naked already, at least virtually,\" she said as she let me lay back down and then pulled the blanket down to my knees, leaving me basically naked. \"I want to say, you've been the most interesting patient I've ever had. And yes, I mean that exactly as it sounds.\" She grinned. She grasped the rail of the bed and lowered it, dropping it down into its stowed position. She stepped next to me and pulled the bottom of her scrubs down to her knees, exposing her pantiles bottom and curly patch on her mound. She bent over, pulling her pants off over her shoes so that she was naked from her waist down. She pulled her top up, skimming it quickly off, exposing that she had taken off the bra she had on earlier, showing me both her big soft breasts, bright white triangles on the front of each where the bikini she wore when she tanned, prevented the sun from reaching. Essentially naked, she climbed onto the bed over me, her knees straddling me but careful not to touch me anyplace the blanket didn't cover.\n\n\"What the hell are you doing?\" my daughter asked sharply, stepping over to reach for the little nurse and pull her off my lap. She grabbed Chrissy's arm just as Chrissy settled herself down on my lap, pressing her pussy against my partly hard cock.\n\nI recognized the room. I'd seen it before, but from high above instead of here. I turned around, seeing only equipment along the walls, expecting to see Chrissy here as well. The door to the room pushed open and Chrissy walked in, completely naked, followed by my daughter, wearing just as much as Chrissy was. She walked past me to the table and climbed onto it, laying back and spreading her legs as she had the last time. She pulled her knees up and hooked them on the edge of the table, pushing her knees even further apart.\n\n\"Fuck me,\" she moaned softly, rubbing her hands around her body. \"I've been waiting all day. I want to feel your cock in me. I want to feel you sliding in and out of my pussy and I want to feel you cum in my pussy instead of all over that window. Come and take me.\"\n\nI walked wordlessly over to where she lay, my cock now rock hard, pointing towards her pussy as I stood between her legs.\n\n\"Go ahead Dad! Fuck her. You know you want to,\" my daughter said, stepping behind me and running her hands up and down my naked body, stroking my back and chest and then sliding her hand down to my dick. She wrapped her hand around it and then pulled it towards Chrissy's pussy, rubbing my head up and down her wet slit before pulling again, this time coaxing my head into her vaginal opening. \"Push into her. Fuck her hot little cunt. Make her come on your big fat cock!\" my daughter practically whispered as she leaned herself against me, my right arm pressing between her big soft tits.\n\nI leaned towards Chrissy, drawing a soft moan from her lips as my cock pushed slowly into her wet depths. I felt Diane's hand press against my ass, coaxing me to push back into Chrissy. In and out I started to stroke, sliding my cock in and out of her pussy over and over, her hips rocking in time with my strokes. I could feel her growing wetter, hear her moans growing louder. In and out I stroked, feeling the softness of her walls as I reached up for her tits. I grasped them, squeezing, but not too hard. She moaned in pleasure as I pumped in and out of her.\n\nDiane moved from next to me, climbing onto the table from the other end, crawling on her knees until her pussy was hovering over Chrissy's face. She spread her knees and lowered her pussy to Chrissy, who reached up for my daughter's hips, and pulled her down towards her face. \"That's it Dad. Fuck her hot little cunt while she's licking mine. Do you like that little slut? Do you like having my dad fucking your hole while you suck mine? Yeah. You do. Lick that clit. Ohhhhhhh yeah! That's it slut. Lick my cunt. Make me come all over your face.\"\n\n\"Oh God,\" I groaned at the combination of sensations and visuals. I looked at my daughter, completely on display, her hands sliding up her smooth young body to her tits, lifting each one, almost as if to show them off to me. I looked up to her eyes and saw that she was staring at mine, looking to be sure I saw what she was showing me. Her pussy was nearly shaved smooth, just a tiny patch of blonde hair, her full outer lips framing her protruding inner labia. Her pussy reminded me of her mother's, so soft and sexy. Mom never trimmed, but I didn't mind, and I wouldn't mind Diane trimming hers.\n\n\"That's it Dad. Fuck her hot little cunt. Give it all to her. Fill her up with cum.\"\n\n\"Oh God,\" I groaned as I pumped in and out of her, feeling her insides tense and start to squeeze around my thrusting shaft. In and out I went, my climax growing closer my by the second. I looked past Chrissy's big soft tits, shifting and rolling on her chest with each stroke I made into her, to where she was licking my daughter's pussy. Diane moaned that she was coming, and Chrissy seemed to lick even faster.\n\n\"Oh damn!\" I grunted as my body jerked, jamming my cock hard into Chrissy. My first surge of cum forced into her, squirting deep in her pussy. I could feel her climax, which had been hanging oh so close, suddenly wash over her body, her pussy spasming around my cock. I could feel the sense of euphoria as she climaxed around my cock, the little tingles, the sensation of fullness, of desire, of need. I could feel her arms and legs tremble as she moved her legs around me, pulling me deeper as my second shot of cum lanced into her. I looked up at Diane, gasping for breath as she too climaxed, her whole body shuddering and threatening to fall off the table. Three more times I felt my cock surge in her, pumping more cum deep into her before my body started to relax. I stood there, my cock softening slowly inside her as she moaned and sighed with contentment unwilling to let me go.\n\nFinally, after what seemed like an hour, she released me, and I stepped back. Diane crawled off the table and stepped around to me. \"See Daddy. You did want to fuck her. You fucked her hot little cunt so hard! I hope you fuck me like that later. I wanna feel you fuck me like you fucked her, driving your cock deep into my naughty little pussy. Oh yeah. Come on Daddy. Let's go find a place to fuck!\" my daughter said softly as she took my arm and pulled me towards the door of the room. She pushed it open, and we slipped into the darkness beyond. \n\n\"Oh my God yes,\" Chrissy moaned on my lap as my mind cleared enough for me to look around again. Chrissy was still sitting on me, only my cock was deep inside her and felt like it had just pumped a load into her. Clearly this wasn't seconds. It had to be long enough for her to get me into her. I looked around and saw Diane, standing by the bed, her blue jeans undone and pushed down to her thighs, the small patch of curls on her mound matching the ones I'd seen moments before. She stood with her eyes still unfocused, one hand between her legs, slowly stroking her pussy, which was dripping onto the crotch of her panties and jeans, while the other resting on my stomach inches from where I was coupled to Chrissy.\n\n\"Shit. How long?\" I asked Amanda breathlessly.\n\n\"Long enough for your daughter to get you inside your nurse friend,\" she answered quietly with a disapproving scowl. \"Two or three minutes?\"\n\n\"Damn. I knew it felt different,\" I swore quietly as Chrissy lowered herself to lay down against me, her bare tits pressing against my chest.\n\n\"You know. I've been having orgasms since I was a teenager. But in all my thirty four years, I've never had orgasms as intense as the ones you've given me this week. Thank you,\" she whispered before pressing her lips to mine in a long soft kiss. She pushed herself up from me as my daughter, once again focusing on her surroundings, blushed red and started to pull her pants up. Chrissy pushed herself up and climbed off of me and the bed, her pussy leaking our copious combination of cum. She dressed quickly, having to pull on only her scrub bottoms and top. She leaned towards me, kissed me once again and then pulled the curtain back. \"Have a great day!\" she said brightly as she wheeled the blood pressure machine out of the room with her.\n\n\"I'm glad it's you and not me,\" Amanda said with a frown. \"All that sex with all these different women? If it were me and men, I don't know that I could handle it!\"\n\n\"Sometimes I don't know that I can. I mean, some of the things I see, they aren't exactly what I find enticing,\" I said as I pulled the hospital gown back over me. \"Would you mind tying me?\" I asked as I leaned forward, trying to flip the stupid hospital gown back around me.\n\n\"Yeah. Sure,\" she answered, carefully reaching behind me, trying not to touch me as she tied the little bows.\n\n\"You're good at that,\" I joked. \"You have something you wear that has lots of bows?\"\n\n\"Maybe,\" she whispered as I noticed her face blush pink. She worked her way from the top to the middle and then the lower, the gap between the bed and my back tighter. I was about to warn her to be careful when I felt her hand brush my back.\n\nShe stood in front of the full length mirror in the hotel room, admiring herself in the reflection. She wasn't young any longer, but even for late forties she looked pretty good. All those aerobics and yoga classes were good for something, not that there as anyone to look at her that way any longer, that had gone by the wayside many years ago. Tonight though, tonight maybe someone would. She stepped to the end of the bed and looked down at the packages laying out. She knew where to start. She opened a package of black silk stockings. Not cheap polyester wannabes but real honest to God silk. Nothing felt as sexy on her body as silk. She sat on the edge of the bed and rolled the stocking down into a doughnut and then slowly, carefully, she let the doughnut unroll as she slowly slid her fingers up her leg. She pulled it up her thigh, stopping only inches from her pussy. She could already feel herself getting wet just thinking of these being slowly taken back off of her later, hopefully not by her own hands.\n\nShe pulled the other stocking up as well, sliding it along her smooth freshly shaved legs, tugging the top up all the way until her fingers brushed her equally shaved pussy. She smiled to herself and bent to pull on her high heels, standing in the six inch high stilettos in front of the mirror. She smiled to herself. If she could get him to go this far, then she knew that there would be no stopping him from going all the way, but that's what she wanted. She stepped to the bed and picked up the black lace garter belt and put it around her hips. She took her time pulling the four hanging straps into place and snapping the clips on the silk stockings. She turned to look at the panties, considering if she should or not. Her pussy was already so wet that if she sat long on the dress that she'd probably leave a wet spot, but she wanted him to be able to feel her wet lips. She wanted to coax him to slide his hand up her silk covered thighs, either in the restaurant or at the symphony, telegraphing to him that she was more than ready for anything he wanted to suggest. Bedroom, car, park bench. She didn't care. She'd been without for so long that she would welcome a man's touch, but not just any man. It had to be a man she could respect, who matched her desires and beliefs. She'd waited to find a man like that, only to find him in the most unexpected place. She wasn't sure he would, but she wanted him to, if only he would, if only she could coax him to.\n\nThe lace bra came next. She hoped it would be strong enough to support her, to hold the girls in place without breaking the thread thin straps, but she knew how it would look. She stepped to the mirror again, wiggling her upper body to see how each big soft breast would sway and wiggle. She was sure he was a tit man. She'd seen him look at her, trying not to look as if he were, but he was. He could see his gaze drop down to the deep cleavage she had in that dress that day as they danced. Since then, she wanted to show him more, let something slip, let most of or maybe even all of one breast accidently slip into view. The dress would have allowed it. She had misgivings about wearing it but had anyway. She was glad she had. She watched his eyes look down her front and even though he was keeping an appropriate distance from her, she managed to occasionally bump her pelvis into his growing bulge. She wanted to let her breast slip out, cause her to have to press her body against his to hide it from the rest of the guests. It would only take a few small shoulder shrugs and the dress would slip enough. She hadn't, she couldn't screw up the courage to do it before the slow song ended, but she wanted to. She wanted to see his reaction, she wanted to see the look of desire in his eyes. She wanted to feel his obviously growing erection press against her body. She wanted to feel his hand slide down to her full round ass and pull them together, even for a moment.\n\nShe took a deep breath and lifted both breasts in the almost too little bra one more time before turning to the bed once again. She pulled the little black see-through top up her arms. She settled it over her shoulders before pulling it around her. It didn't close around her front until it was well below her tiny bra, extending down to her hips and slightly further. She turned to the mirror and saw that her shaved mound just peeked out under the bottom hem of the top. She stood, pleased with the look as she tied the first of half a dozen tiny red ribbons that contrasted with the black see-through silk. One at a time she tied the little ribbons, single bows only, not wanting to make it too difficult for him. She wasn't sure it would happen, but she wanted it to, and if it did, she wanted it to be easy for him.\n\nWith the last bow tied, she looked at the end of the bed and the sexy little silk panties. She wanted to feel the silk against her pussy, stroking her lips, teasing her, but at the same time, she wanted him to feel her wetness, her heat, her desire for him. She wanted to be able to slide his hand under the hem of her dress and pull it up until his fingers found her wet lips. No, the panties would stay off. She was sure she'd be staying more than wet enough just thinking about having him touch her out there in public. No one would know. It would be their secret. She could slip his hand under at the table and no one would know. He could eat and play with her pussy at the same time. She wondered if he'd keep a straight face or if he could carry on the conversation while she was pressing his fingers to her wet sex.",
        "She stroked her own lips for a moment, closing her eyes and imagining it was his fingers. She let one finger slip between her lips and find her clit, little tingles racing through her body as she teased her finger over and around it. No. She had to stop. If she kept doing that, she really would be too wet to go without panties. She didn't want that.\n\nShe pulled her fingers from herself and walked to the little closet. She opened the door and pulled out the perfect dress. She'd thought about this a long time. What could she wear that would be easy for him to get into, or her out of, if he decided to take her right there? Not that he would. He'd never do it in public like that, but damn, it would be so worth it if he did. Imagine standing there, in full view of everyone in the room, unwrapping the dress from around her body, letting it fall to the floor, leaving her in just the sexy black outfit she had so carefully put on. Would he kneel down and lick her pussy? Would he just push her back onto a table and pull his dick out and slide it into her? It didn't matter. She'd be too nervous for it to matter. All that mattered is that he'd push his dick into her, filling a place that hadn't seen one in many, many years. If not, maybe in private, the back seat of a car. It had to be something easy to open in the tight confines of the back seat. It wouldn't be exactly romantic, but at this moment, she didn't care. Romance could be overrated. Hard cock in wet pussy was NEVER overrated.\n\nMaybe they'd take a walk along the river. It wasn't far from the hotel. Only a few short blocks. The walkway had all these nice little semi-secluded benches in little stone walled nooks that stuck out into the river. The trees made them secluded. She bet that if he wanted to, he could practically undress her without anyone seeing. Take her dress off and leave her in this little nothing she worked so hard to make perfect. She could sit on the edge of the wall and let him slide his cock right into her wet pussy, the night's darkness being all they needed for seclusion. Yes, maybe he'd take her for a walk. Maybe she should suggest it? Coax it? Or was that too forward?\n\nShe carried the thin black dress towards the mirror, stepping in front of it until she could see herself in it. She slipped her arms into the material and then wrapped it around her body, crossing the left over the right. There were two ties, one on each half, but if she left the left tie undone, it would be so much easier for him to get into, even sitting at one of the tables he could easily slide his hand between the layers and find the thin silk she had on under it. If he did, she could suggest an invitation to see what it looked like, all he'd have to do is take her someplace and open her dress. But no. If she left it lose the dress would slip and she'd be unable to adjust it without being obvious, and if she didn't, she'd look like a slut trying to show off too much of her body.\n\nBut she wanted to show off her body, at least to him. She tied the tie and then crossed the front over and wrapped the belt around herself. That was all there was holding it on, one belt and one tie. It would be so easy for him to take it off of her. She hoped he would. She hoped he'd want to. True this wasn't a date, but then...one had to be bold if she wanted to capture his attention. She briefly wondered what her son and daughter-in-law would think of her. Going after him in such an obvious way? Trying to catch his eye right in front of them? Did it matter? It was only hours away, and already she was nervous. She wanted him to see her, to touch her, to make love to her. It had been too long for her, but only a few short years for him. She pulled the hem of the skirt up to look at her pussy in the mirror. She didn't have to pull it too far. She hoped he'd pull it far enough.\n\nShe closed her eyes and envisioned him standing behind her, slowly undressing her, slowly caressing her body, slowly teasing her big soft tits and her so excited nipples. In a few hours, just a few short hours he could be, he could be holding, touching, caressing her. Her pussy was almost electric, wanting to feel him push into her, wanting to feel his body pressed to hers, wanting to feel him climaxing with her, filling her. It had been too long and now, she wanted it, but she wanted it with him. She could almost feel his hands on her breasts as she let her hands slide down to her pussy. She slipped one finger between her lips, unable to wait any longer, unable to hold back. She stroked her finger across her clit, gently rubbing it just exactly the way it needed to be touched. She was so turned on. She'd planned this for so long. She wanted this to happen, wanted to feel his hands on her, wanted to feel his hard member slide into her. It wasn't right before, it took time, she had waited since the wedding. She had watched him, given him hints, even made sure he saw as much of her body as she could get away with. But now it was time. It had been long enough. Diane knew he needed a woman in his life again, she just didn't know she wanted it to be her. It was time. She moaned loudly as her finger pushed her climax to the tipping point, her body shuddering and her juices squirting out onto the carpeted floor. God, she wanted to feel his cock inside her as she came. \n\n\"Amanda?\" I asked as I looked at her, looking back at me. She was almost breathless, her chest heaving almost as if they had been making love, but this one, this fantasy, this dream, this... it wasn't that. It was something else, desire, longing, hunger... for him. She never pictured his face, whoever he was, but somehow, he knew, HE was the he she was longing for. \"When?\"\n\n\"Diane's birthday dinner,\" she whispered.\n\n\"My birthday dinner what?\" my daughter asked quietly, looking between the two of us as Amanda suddenly blushed.\n\n\"The day of my accident. That night. You were getting ready for that night... and he, was me?\"\n\nShe nodded, still blushing and moved back, letting me lay back in the bed as she retreated to the small chair she had been sitting in.\n\n\"Does someone want to tell me what you're talking about?\" my daughter asked with frustration in her voice. \"It's not like I don't know what happens when you touch, and I KNOW you touched. I saw mom climax.\" I saw Amanda look at her, almost as if to protest, stopped only by my daughter's words. \"Don't tell me you didn't Mom. I can tell, okay?\"\n\n\"Well, what if I did?\" she said with a shrug.\n\n\"So, what about dad?\"\n\n\"Nothing sweetie. Just a little fantasy he and I just shared. I'm sure you know about those.\"\n\n\"Yeah,\" my daughter answered, suddenly blushing. \"I do.\"\n\n\"Well, good morning!\" the young blonde said as she walked in. \"Remember me? Amy? It's time for your sponge bath. If you ladies want to wait outside, this won't be long.\"\n\n\"Hey! Wait! Sponge bath? What happened to a shower when I get my cast off? It's off!\" I said quickly.\n\n\"Oh. Well, the doctor didn't change the orders,\" she said almost apologetically.\n\n\"Well, we can do the shower anyway, right?\" I asked. \"Come on. Help me out here!\" I practically begged when she gave me a frown.\n\n\"Okay. If you promise not to tell on me. I have to wash your room-mate too, so if I get you in the shower on the stool, can you wash yourself?\"\n\n\"If I can't, I know someone who can help!\" I said, looking at Amanda pleadingly. \"Come on. It's not like you haven't seen me naked already.\"\n\n\"I'm not dressed to do that,\" she protested quietly, looking at my daughter for help.\n\n\"So? Take your dress off. It's not like I haven't seen you naked either.\"\n\n\"But you haven't.\"\n\n\"Yeah. I have.\" I nodded. \"Trust me. Amy here knows exactly what I mean and so do you.\"\n\nI could see her hesitate and then nod, my daughter looking at her almost shocked. \"Mom? Really?\"\n\n\"Unless you want to sweetheart?\" Amanda asked my daughter.\n\n\"Hell NO!\"\n\n\"Well, who's going to help him when he goes home?\" Amanda asked. \"Is he coming home with you? Because no way can he fend for himself until he gets some muscle back into his body. Unless you want to take him home with you, I'm planning on taking him to my house.\"\n\n\"Well. No. I can't take him home,\" my daughter said quickly, taking a slight step backwards, her eyes almost the size of saucers. \"I mean. If I...if we...I can't... No. That wouldn't work,\" she finally got out, looking at me almost in fear.\n\n\"It's alright honey. I wasn't expecting anyone to take me home anywhere. Not with this....thing that happens,\" I answered her.\n\n\"But I wouldn't mind a hand in the shower from Amanda. God, I want a shower so bad.\"\n\n\"Alright it's settled. Amanda, is it?\" Amy asked as she stepped to the room door and closed it. She pulled the curtain around us so we were blocked out of the rest of the room if someone stepped in. \"So, if you want to get undressed?\"\n\nAmanda looked at me and then smiled slightly. \"I guess I hadn't exactly planned on you seeing me naked the first time like this,\" she said as she started undoing the buttons on the front of her dress, at least the ones that I hadn't accidently popped off when she first got here. She stepped out of the dress and pushed her thigh high stockings down her legs, stepping out of her shoes and dropping them and her stockings on top of her dress. She paused a moment to look at me and then undid the back of her bra and shrugged it off. I looked at her breasts, seeing them in every bit of detail that I had earlier, the sight making my dick start to harden under my gown. She held her breath as she pushed her panties down, exposing the small patch of curls on her mound and her otherwise shaved lips. \"There you go!\" she said, standing straight and holding her hands out for me to look at her. \"Like I said. Not how I planned on you seeing me naked the first time, but...\"\n\n\"I think you look just beautiful,\" I said with a smile.\n\n\"Alright. Well, should we get you to the bathroom then?\" Amy asked, dropping the side rail of the bed. \"Okay. The only way I'm going to let you do this is to put your arm around my shoulders and let me help you there.\"\n\n\"You know what that'll mean, right?\" I asked as I slid to the edge of the bed and let my legs dangle over the side towards the floor.\n\n\"I do,\" she said quietly. \"But what else can I do? It's my job to make sure you're taken care of.\"\n\n\"Well, help me get this off then,\" I said, trying to twist the gown around to get to the ties that Amanda had tied such a short time ago.\n\n\"Let me,\" Amanda said, climbing onto the bed behind me and reaching for the bows. She carefully pulled each bow until Amy could pull the gown off.\n\n\"Looks like someone else is happy about getting to the shower,\" Amy said with a grin. \"Or was it looking at your daughter's mother-in-law?\"\n\n\"Could be,\" I said sheepishly, not really letting on which.\n\nAmy took a breath and then moved closer to me. \"You ready for this?\"\n\n\"If you are.\" I nodded.\n\nShe slipped against me and I felt her bare arm slide around my back as she lifted my left arm to hook it over her shoulders.\n\nShe sat watching the tv, tired from work, staring at the mindless Christmas special on the big screen. The tree sat in the corner, blinking and twinkling in the otherwise dark room. Some light from the street filtered in through the living room window, a light coating of snow reflecting the blinking lights from the house across the street. She felt his hands on her shoulders, touching gently before grabbing more firmly, rubbing her sore shoulders. \"Hey Jeremy,\" she said quietly.\n\n\"Hey yourself sis,\" he answered, rubbing the stiffness from her shoulders. \"Tough day?\"\n\n\"Aren't they all?\"\n\n\"Most,\" he agreed as his hands slid down a little further than her shoulders, rubbing her upper chest gently through the thin nightshirt she had pulled on after work. \"But there are ways to get rid of the frustration.\"\n\n\"Yeah?\"\n\n\"Uh huh,\" he said as he rubbed his fingers a little lower, stroking the tops of her full C cup breasts. His strokes slowly worked lower, reaching her quickly hardening nipples and stroking his fingertips up and down over them. \"Last time I checked, sex was a great frustration vent.\"\n\n\"It is?\"\n\n\"Yep. You know it is.\"\n\n\"How would I know that?\"\n\n\"Doesn't it get rid of your frustrations?\"\n\n\"I don't know. I've never done it.\"\n\n\"Never had sex?\"\n\n\"With whom? You know I haven't had a boyfriend since high school.\"\n\n\"Didn't Sid take your cherry?\" Jeremy asked quietly, letting his hands slide down further and cup both large soft orbs.\n\n\"He wanted to,\" she whispered softly, her breath suddenly hard to come by.\n\n\"But you didn't let him?\"\n\n\"No. That's all he was looking for. I didn't want to let it go just for a quick fuck.\"\n\n\"That's why he dumped you?\"\n\n\"Yeah,\" she said, feeling his hands squeeze her tits, making her pussy tingle with sudden desire.\n\n\"Ass hole,\" he whispered, letting go of her tits to slide his hands down further, his fingers grabbing at and bunching her nightshirt up to try and pull it up. He tugged on it but could only get it part way up because of her weight. She shifted her body and let him pull the thin material from between her butt and the sofa cushions, the nightshirt now easily sliding up all the way to her chest. \"Lift,\" he whispered, pulling the nightshirt higher, trying to pull it all the way off.\n\n\"Mom might be home soon,\" she breathed, feeling the cool air of the room teasing her bare skin.\n\n\"Yeah. It's okay. We have time,\" he whispered.\n\n\"For what?\"\n\n\"To get rid of some frustration,\" he said, still pulling gently on the bunched up nightshirt.\n\nShe thought about it for a few moments and then leaned forward and lifted her arms, letting him pull the nightshirt all the way up and off. He dropped it on the sofa by her and then moved his hands back to her tits, cupping and kneading them gently as she sat in nothing now but a very small thong panty. He stood behind her, stroking and rubbing and massaging her tits, making her so damn horny she wanted to scream. Instead, she leaned her head back, closed her eyes and moaned to let him know how fantastically superb his hands felt on her bare skin.\n\n\"You like that?\" he whispered softly.\n\n\"Oh God yes,\" she moaned softly.\n\n\"Then you'll love this,\" he said in her ear before leaning over the sofa even further. She felt his breath on her right breast before she felt his lips. Little kisses, over and around her puffed out nipple, working slowly all over her puckered and engorged areola.\n\n\"Oh my,\" she breathed as he closed his lips around her whole areola and tried to suction it into his mouth. She could feel the heat of his tongue teasing her soft skin, little glittery tingles flowing through her body, most of them seeming to lead straight toward her pussy. She couldn't help herself. She reached down as she spread her legs and began to rub her fingers across the tiny patch of material covering her lips. Her fingers pressed the material to her lips, trying to force it between them to reach her wanting clit.\n\nShe felt her hand stopped by his, moved aside and then his fingers replacing hers. She could feel the strength of his finger as he rubbed up and down her slit, pressing the material slightly between her lips, her pussy leaking juices and soaking the tiny slip of material. \"Nooooo,\" she moaned as his finger disappeared, only to come back again, this time pushing the tiny bit of cloth aside. She could feel the heat of his finger as he stroked up and down her soft delicate inner labia that protruded so slightly. His finger moved up and down, stroking softly, working ever so slowly between her lips, dipping deeper and deeper until she could feel his finger tease both the opening of her vagina and then all the way up to her excited clit. She reached for the panties and forced his hand out of the way as she lifted and bent her legs to pull her panties off, leaving her completely naked. She lay her legs down again spreading them wide, waiting for his finger to come back and tease her again.\n\nShe felt his lips leave her nipple and gasped out a long 'nooooo' again.\n\n\"Shhhhhh,\" he whispered. \"Patience. Just keep your eyes closed and think how good my finger felt. It'll be right back in a second,\" he added as he kissed her cheek lightly.\n\nShe waited, unsure for what, but kept her eyes closed. She felt his lips come back again, only this time different. The angle was different. He moved in front of her instead of behind. She smiled to herself and let out a gentle moan of appreciation as he teased her nipple again, stroking his tongue over and around it. She pushed her legs further apart, wanting him to touch her again, to stroke his finger up and down her slit. She wanted him to make her come, to help her get rid of the new frustration that was building inside her. Then she felt it, his finger again, rubbing up and down teasingly, just brushing her protruding lips. Then harder again, spreading them apart, but this time different, wider, bigger. He rubbed up and down her slit, teasing both the entrance to her aching vagina and her excited clit. She felt him press against her entrance, pushing hard, trying to force something much bigger than his finger into her. She opened her eyes to look down at him, his cock pressing at her entrance, only to close them again and moan in pleasure as his cock slipped into her a couple inches. She could feel his fat head, wide and hot, so much hotter than the toy she used so many times. She felt him push deeper, her body expanding to accept him, just like it did for her toy, but this felt so much different, so much more real, so much more erotic.\n\n\"Oh God yes,\" she moaned as she felt his hands on both of her tits, squeezing and kneading them as he started to stroke himself in and out of her, using little, short strokes at first, each one allowing his shaft and her lips to re-lubricate before pushing slightly deeper. She felt his engorged head caress her depths, tease her in places and ways she didn't ever remember feeling. She finally felt his head press against her cervix, her clit grinding into the base of his shaft as he pressed tightly to her body. He let go of her tits long enough to loop his arms under her legs, lifting them high in the air as he brought his hands back to her tits.\n\nIn and out he began to stroke, driving his shaft in and out of her, each stroke smashing against her clit and cervix, sending little tingling jolts through her whole body. \"Oh yes Jeremy! Fuck me! Ohhhh God it feels so good. Don't stop. Don't ever stop,\" she moaned loudly. \"Pinch my nipples. Please. Oh God it feels so good!\"\n\n\"Scott!\" I somewhat heard Amanda say to me through the haze of my extremely sexually aroused state. I could hear her but couldn't seem to tear myself away from the sight of the cock sliding in and out of her pussy, MY cock sliding in and out of her pussy. I could feel not only the sensations on my cock but also the sensations it was causing inside her pussy. I could feel the pressure on her breasts, the squeezing of her firm breast and the tingle of her nipple being pinched slightly. \"SCOTT!\" I heard louder.\n\n\"AMY! SCOTT! What the hell are you doing?\" I could hear mom shout at the two of us as I pumped my cock in and out of my sister's incredible pussy. We were both naked, so there wasn't any denying what we were doing, and I didn't want to stop. I slowed my strokes as I looked up to see mom walking into the room, staring at the two of us. \"What are you two doing?\"\n\n\"Fucking Mom!\" Amy moaned. \"Oh God it feels so good.\"\n\nI looked back and forth between my sister's pussy and mom, staring at the two of us, more specifically, my cock sliding in and out of my sister rhythmically. In and out I stroked, my hands on Amy's tits squeezing and kneading them, occasionally squeezing her puffed out areola and nipples, but watching my mom watch us, one hand seeming to press against the front of her skirt while her other moved from one huge blouse covered breast to the other.",
        "Her hand on the front of her skirt began to slowly hike the hem up as she rubbed, her fingers intent on getting the material out of the way to stroke between her own legs. Without breaking her stare at my cock sliding in and out of Amy, she moved both hands to the back of her skirt. In a few quick movements she had it sliding down her legs. She stepped out of it as she began unbuttoning her blouse, quickly working it all the way open and then pulling it off. She dropped it on the floor and reached behind her, unclasping the back of the heavy duty bra holding in her massive tits. I nearly came in my sister when my mom's tits came into view, each massive, large, well to my estimation anyway, tit swaying and bouncing. Nearly a third of the front of each huge mound of sexy breast was covered with a dark puckering areola, a large protruding nipple sticking out at me as she lifted and rubbed each breast.\n\nShe only rubbed her breasts for a few moments before she moved her hands to her hips, hooking her fingers into the waist of her pantyhose and panties, pushing them both down together. Her tits swung below her sexily as she bent over to work her high heels, pantyhose and underwear off her feet, leaving her as naked as Amy was. I didn't know what to expect as she straightened and stepped toward us. In one easy motion, she stepped across Amy's legs, facing me, her mound, with its neatly trimmed patch of blonde curls, pushing right into my face.\n\n\"Lick my pussy son. Make me all wet and ready, and after you make your sister come, I want you to fuck me until you make me scream,\" she said in a low growl as she pulled my head towards her pussy with one hand. She moved one foot onto the sofa to spread her legs apart and coaxed my face between them. I reached out with my tongue to stroke the inner labia protruding from her fat round outer lips, licking up and down like my girlfriend had taught me. The moan my mom made let me know that she liked that too, liked feeling my tongue slip between her wet lips and find and flick her hard little clit.\n\n\"OH FUCK! I'm going to come!\" Amy cried from behind her, my hips still rhythmically pumping my cock in and out of her sexy pussy. In and out I pushed, feeling the beginnings of her orgasm, her deep wet tunnel seeming to grow even tighter as her legs and arms shook. I could feel her juices start to flow and her pussy contract even harder around me as she cried out in pleasure again. \"OHHHH FUCK YES!\" she screamed, no longer worried about being quiet. \"OH GOD YES! I'M COOOOOOOOMIIIIIING!\"\n\nI felt her pussy gushing her juices around my dick while I continued to slide in and out, doing my best not to cum in her pussy, at least not yet. Someone else wanted me to fuck them. I might have thought about fucking my sister, might maybe have jacked off once or twice peeking on her dressing, but mom? I'd never seen her naked, never thought about her naked, until now. Now I just wanted to slide my cock into her pussy and see her big soft tits bouncing on her chest. God, I loved seeing tits moving. I loved fucking my girlfriend from behind and seeing her tits swinging in the full length mirror on the back of her bedroom door. And mom's tits are soooo much bigger. God, I wanted to fuck her so bad.\n\nMom pushed my face back and then pushed me boldly back, forcing my cock out of Amy's pussy, forcing me back until I had to lie back on the carpeted floor, her body moving with me, her hand reaching for my pussy juice covered cock, guiding me, in one smooth motion to her pussy. I was still rolling onto my back as she followed me down, ending on her knees with my cock aimed straight at her wet, freshly licked pussy. I watched my cock slide easily into her as she settled on me, her hands, now free of my dick, reaching for my chest to both push me back and to also give her balance. I felt her ass touch my thighs and then lift again, her body already starting to ride up and down on me. Her big tits pushed out between her arms at me, her eyes filled with desire and hunger for my cock. Up and down she started to bounce, her tits bouncing wildly on her chest as she drove herself down over and over onto me.\n\n\"Oh fuck yes. Let me show you how a real woman fucks! Do you like this? Do you like feeling me riding you? Driving you to new heights? Does it feel good to you?\"\n\n\"Oh shit yes Mom.\" I groaned as she pounded down on to me.\n\n\"Now you wait. I want your cum, but I want you to wait, wait until I come around you and then come with me. Make me feel your cock spurting your cum into me while I'm coming. Are you getting close? Are you ready to fill your mama's cunt?\"\n\n\"Oh God yes.\" I groaned, my legs trembling as I tried to hold back the flood that was building inside me. I could feel my cock getting fatter inside her as it became harder and harder to hold back.\n\n\"Now son. Now...\" she gasped, still banging down onto my bare body with hers, her tits slapping as loudly as her ass on my thighs as her pussy started to contract and spasm around me. It was just too much.\n\n\"AHHHHHH FUCK!\" I shouted at the ceiling as my body bucked hard, shooting a massive gush unto her harder than I could ever remember climaxing. My body bucked time and again, pumping shot after shot of cum into her as she trembled and shuddered on me, no longer riding me, but just sitting and panting.\n\n\"Damn that was incredible.\" I heard Amy say. \"I didn't know a guy could come that hard!\" \n\n\"Huh?\" I asked, shaking my head for a moment, looking around. I looked at Amy, still pressed against me, my arm around her shoulders. I looked down and saw that her pants were wet, looking like she'd peed them, but I was sure that wasn't what made them wet. Then I looked at Amanda, standing in front of me, completely naked, her face and her big soft tits covered in cum. She looked at me, breathing hard, her body still twitching and shuddering from her own climax, one hand between her own legs and the other on my now shrinking cock.\n\n\"I said I didn't know a guy could come that hard,\" Amy said quietly. \"I think that she needs a shower now too.\"\n\n\"Oh my God,\" Amanda said, letting go of me and stepping back, holding her cum covered hand up to look at unable to see just how much I'd apparently shot all over her face and chest.\n\n\"I think that shower would be really appropriate right now,\" I panted, looking around and settling on my daughter's stunned face. \"What?\"\n\n\"You three. I mean, it wasn't seconds this time dad. It was longer, much longer.\"\n\n\"How much longer?\"\n\n\"Long enough for me to hear Amanda begging you to fuck her and fill her. It sounded like she thought she was your mother or something.\"\n\n\"I was. I mean I wasn't, but I was. And Scott was...what? Son?\"\n\n\"My brother,\" Amy said quietly. \"I'd never done that with him, never had sex with him, but there were times I wanted to. Times when I knew he'd seen me in the bathroom that made me so horny I had to make myself come, wishing he'd come in and do it, but he never did.\"\n\n\"Yeah. I see that, but what happened with me? How did I get in the middle of this?\" Amanda asked, rubbing cum from her face with her bare hands.\n\n\"I've had that happen before. A second person touches and kind of falls into the middle of the thing that's happening. I'm sorry. I mean, I should have warned you about that. I just didn't expect you to touch me, at least not yet.\"\n\n\"Not yet?\"\n\n\"I mean, I knew you would in the shower. I was kind of hoping that what I knew was going to happen with Amy here that maybe it wouldn't happen then. Sometimes it doesn't after I come.\"\n\n\"And if it did happen?\" Amanda asked.\n\n\"I honestly was kind of looking forward to having virtual sex with you,\" I said with a sheepish little shrug.\n\n\"DAD!\" My daughter cried in surprise. \"Really? With mom?\"\n\n\"Well, the way she looked in that little outfit the last time she touched me. Hell yeah. She looked damn sexy. Maybe even sexier than she looked in that dress at your wedding.\"\n\n\"DAD! You weren't supposed to be looking at her like that! I mean mom had only been gone a little over a year. How could you?\"\n\n\"Don't be mad at your father dear. The dress was intentionally provocative. And before you ask, YES it was intentionally directed at your father. I liked him, even back then. He was kind of sexy and he raised such a wonderful daughter, how could I not be interested in him?\"\n\n\"MOM!?\" my daughter almost shouted.\n\n\"Okay, before we get into a family squabble, how about we make our way to the bathroom?\" Amy interjected. \"You ready to stand Scott?\"\n\n\"Yeah. Let's go for it,\" I agreed, pushing off the bed with her. Amanda backed up and pulled part of the curtain back so we could move to the bathroom. We walked in and Amy led me to the little stool type chair in the small shower stall in the back of the bathroom. There wasn't a shower curtain or anything, the whole bathroom was tiled so it didn't matter if it got wet. She reached for the shower wand and pulled it off its holder on the wall and held it out for Amanda.\n\n\"I only have one little towel for the two of you, so when you get done, let me know and I'll bring it to you,\" she said as she stepped to the door and out.\n\n\"Well, shall we?\" Amanda asked as she stepped into the shower to start the water, her pussy practically in my face.\n\nI reached out and stroked my fingers up her thigh, causing her to jump in response, but then stand there, adjusting the water while I teased her wet pussy lips with my fingers. \"I wasn't kidding you know.\"\n\n\"About?\"\n\n\"About how you looked in my mind in that little black outfit.\"\n\n\"I see,\" she said as she used the wand to wet my body down and then started or rub her hand around my body. \"I wasn't kidding either.\"\n\n\"About?\"\n\n\"About the dress I wore at the wedding. It was provocative and I did want to tease you. I hoped that it might entice you to want to do more than just dance. Not that we would have told the kids, but I wouldn't have minded if we did.\"\n\n\"Is that what I saw that first time we touched? You wanting to flash me in that dress? Was that your fantasy?\"\n\nShe blushed and shrugged slightly. \"Actually, until right then, I hadn't thought about it since that night. When you didn't respond to the dress I kind of let the idea of getting with you that way slip away. But now. Now I really would like to feel you inside me for real. God, I want to fuck you so bad right now,\" she said as she turned to look at me, the look on her face one of pure lust. \"I think if I were wearing that dress right now, I'd stand right in the middle of the dance floor and take it off for you if that'd get you to fuck me.\"\n\n\"What's stopping you now? We're both naked.\"\n\nShe raised her eyebrows and then grinned. She stepped across me and sat down on my lap. Using the water wand and the little bottle of soap, she began washing me, doing my chest and dick, then my back and my dick then my thighs and my dick and then... well, my dick again. She turned off the water wand on the little knob on it and set it aside. She reached down between us, her hand dipping into the space between our spread legs again finding hardening cock. She wrapped my hand around it and rubbed it for a few moments before rubbing my head against her wet lips. I could feel it sliding back and forth between her lips, feeling for her vaginal entrance. I felt my head dip into her entrance and then feel her slide her hands down to my butt, pulling us together and my cock into her hot wet depths. I closed my eyes as I felt myself slide into her, her hips rocking slowly, rhythmically, little groans and moans of pleasure slipping from her as we quietly fucked. I opened my eyes to look at her as I felt my body tingle slightly. As I looked at her, I could feel the shower stall fade away.\n\n\"It's so pleasant out here,\" Amanda whispered as we walked down the cobblestone path side by side.\n\n\"It is,\" I answered, trying not to be obvious, but also trying hard to see how her body moved in the incredibly sexy looking dress. The body of the dress was snug to her form, showing all her curves, except for the top of the gold dress, which was loose fitting even around her big soft tits. I loved how they moved in the cups, almost trying to slip out or flash me a little side view of a nipple as the tiny strings holding them up over her shoulders struggled to keep the cups in place. I reached out and quickly grabbed an arm around her waist, pulling her to me and helping hold her from falling as her high heel sunk into the gap between two stones. I pulled her to me, looking down to see that her slip had let the left shoulder string slide off her shoulder and down her arm, her breast now slipping out of the restraint of that side of the dress. She made no move to cover it or fix the slipped strap as I pulled her more closely to me, my quickly hardening cock pressing against her hip through my pants.\n\n\"Thank you. I almost fell,\" she whispered, her eyes looking at mine, almost searching to see if what she hoped was there, was there.\n\n\"Good thing I caught you,\" I whispered back. \"Part of you wants out of that dress.\"\n\nShe looked down at her now exposed breast and then back up at me again, still making no move to fix it. \"Is that a complaint?\"\n\n\"Most certainly not. As much of you that wants to fall out of it can, as far as I'm concerned.\"\n\n\"Really?\" she asked with raised eyebrows. She reached to her right shoulder and pushed the little strap down off her shoulder. \"Better not let go of me, or the other side might slip down too.\"\n\n\"Is that so?\" I asked, reaching around her back and shifting my weight so that my right side was now pressed to her body, allowing me to roll my left side away from her. Sure enough, the tiny strap slid down her arm and with it, the smooth cup holding her breast into the dress. I lifted my left hand to her chest, cupping and lifting her breast. \"Look at that. Maybe I better cover it up?\"\n\n\"If you feel the need to,\" she said, almost pouting in disappointment.\n\nI leaned my head down and lifted her breast at the same time, closing my lips around her hard nipple. I sucked it and much of her areola into my mouth and teased over and around the nipple with my tongue. \"Ohhhhhhh. You keep doing that and my panties are going to be soaked,\" she moaned softly.\n\n\"We can't have that,\" I answered, releasing her nipple and straightening. I looked around and with a grin, turned her to walk down the path again, this time with my arm around her waist and both big soft tits hanging completely out of the dress.\n\n\"Oh my. You are bad, aren't you? What if someone sees us?\"\n\n\"Then they'll know for sure that someone is going to get fucked tonight. One way or another.\"\n\n\"I hope it's me and I hope it's the right way,\" she whispered, reaching over with one hand to undo the belt of my suit pants. I reached down and grabbed my pants as they started to slide down, the front of my pants hanging open and part way down my thighs. It didn't take her long to push my briefs down so my hard cock was sticking straight out the front of me. \"There. Fair's fair,\" she whispered with a smile.\n\n\"I can't argue with that,\" I agreed, sliding my left hand from her left hip to the middle of her back. I slid my hand up to the top of the back of the dress and found the zipper, pulling down on it enough to inch the zipper down a couple inches.\n\n\"You wouldn't, would you?\"\n\n\"I wouldn't put it past me.\"\n\n\"I don't think you would.\"\n\n\"And if I did?\"\n\n\"Then I guess I'd be walking in just my underwear and stockings.\"\n\n\"That could be awful nice looking.\"\n\n\"I wouldn't mind you seeing me that way, but is that how we want everyone else to see me?\"\n\n\"What everyone else?\" I asked, pulling the zipper down a few more inches. \"We're almost alone out here.\"\n\n\"Almost, but not quite all alone,\" she whispered as a young couple walked toward us in the near darkness, only the silvery half moon casting its light down upon us.\n\n\"Afraid of what they'll think of us?\"\n\n\"Afraid of getting arrested.\"\n\n\"I don't think that'll happen,\" I answered her as the young couple walked past us, his eyes glued to her soft tits and her eyes equally glued to my hard cock swinging side to side with each step. I heard the girl giggle and looked over my shoulder to see the young lady pushing the guys pants down as they walked. \"Nope, not going to happen from them,\" I chuckled.\n\nWe walked only a little further and we came to what I was looking for. The path wound along the river shore and every so often was a little man-made rock outcropping, a small rock wall hanging out over the river so you could look up and down the shoreline without getting your feet wet. I steered her down into the little well of the outcropping and turned her to face me. I let my hand pull the zipper the rest of the way down and let her dress fall around her feet, letting go of my own pants to do the same. I looked at her sexy body up and down before reaching for her panties. I squatted down as I pulled them down, leaning my face towards her and gently kissing her thighs and then as much of the top of her pussy as I could reach. I stood back up and gently pushed her back, setting her now bare butt on the rock wall. I bent to push her panties off one foot and then used my hands to lift and spread her legs while I stepped between them.\n\n\"This what you want?\" I asked quietly, moving my cock with my hips until my head was pressing against her soft pussy lips.\n\n\"Is this what you want?\" she asked back.\n\n\"Tonight, it is,\" I answered, leaning towards her and pressing my lips to hers as I pressed my engorged head between her pussy lips. She wrapped her arms around my neck and pulled us together, pressing her bare tits against my chest as she kissed me back, a long wet erotic kiss while I slowly stroked my cock in and out in little, short strokes, forcing her body to accept the intruder little by little.\n\n\"Oh God,\" she moaned as she broke the kiss and lowered her forehead to my shoulder, leaning her head on me as I started to stroke in and out of her. \"Ohhhh so good.\"\n\n\"I agree.\"\n\n\"But you haven't been thinking of this for weeks.\"\n\n\"You have?\"\n\n\"Since the cake tasting. You felt so strong against me as you caught me when I stumbled, like you did just a little bit ago. When I'm in your arms, I feel so safe. I wanted to feel that again. I wanted to feel this, you inside me, you making me feel full again. I wanted to feel you make me come and I want to feel you come too,\" she moaned softly as I pumped my hips, driving in and out of her, stroking my cock deep into her with each thrust. In and out I plunged, my pace quickening as I felt us both rushing towards climax. It had been well over a year for me since I even thought about wanting it, but right now, I wanted it. I wanted it a lot and I wanted it with HER.\n\n\"Oh God Scott. I think I'm going to come,\" she panted as I thrust in and out of her. \"Make me come. Make me come on your dick.\"\n\nIt didn't take many more strokes before I could feel the first little tremors in her legs and her pussy. It took even fewer before her pussy started to spasm and camp around me as her whole body shuddered. The sudden extra tightness did what it was supposed to do, and I felt my own orgasm race toward completion. In and out I continued to plunge, unable to will my body to stop even if I wanted to, and I DIDN'T want to! My body jerked hard, pushing my cock deep into her as the first surge of cum lanced into her waiting excited pussy. Over and over I jerked, my body pumping more seed deep inside her with each jerk.\n\n\"Oh God yes. That's what I wanted,\" she panted. \"That's what I wanted to feel.\"\n\n\"I'm glad I could oblige,\" I panted as she wiggled her hips around, moving her pussy on my still hard cock even though our climaxes had started to fade away.\n\n\"I didn't think that happened after you'd already had virtual sex that way,\" she panted as my cock twitched inside her.",
        "\"It hasn't before,\" I whispered breathlessly. \"Did you climax for real that time too?\"\n\n\"Oh yeah,\" she said, as she grinned and squeezed herself around my softening shaft. \"I think we both did. For real this time.\"\n\n\"So, you two done in here?\" Amy asked as she opened the door and stepped into the bathroom, seeing the two of us sitting there, my cock buried in Amanda's pussy as she held herself against my bare body, her tits pressed to my face as she wiggled herself on my slowly softening dick. \"Oh. I guess you are at that,\" she said with a giggle. \"Come on, help me get him dried off.\"\n\n\"Yeah,\" Amanda said as she pulled off my dick, letting a gush of our combined cum ooze from her to drip to the floor. The two of them took turns drying me off until they declared me done. Amy coaxed me up with an arm around her shoulders again. She helped me out of the bathroom and back to the bed, Jan looking over at me from her bed now that the curtain between our beds was pulled back to allow me access to the bathroom.\n\n\"Looking good,\" Jan said weakly through the plastic oxygen mask.\n\n\"Felt even better,\" Amanda said with a grin.\n\n\"OH damn Mom. Tell me you didn't!\"\n\n\"Okay. I didn't,\" she said with a shrug. \"But I really did.\"\n\n\"OH God mother!\" she said with a scowl before finding a way out of the curtained area and out of the room.\n\n\"Don't worry, she'll be back. I'm driving!\" Amanda said with a grin.\n\n\"Well. I'm going to let you finish taking care of him while I go change into some dry scrubs,\" Amy said with a grin. She started to turn and then turned back leaning towards me. She pulled one of my hands to her chest and pressed it to her right breast as she leaned her face towards mine. She pressed her lips to mine in a surprisingly long wet kiss. She slowly broke the kiss that left us both panting for breath. \"You know. I wouldn't mind coming back later and letting you undress me. I wouldn't at all mind feeling that cock in me for real,\" she whispered before she pulled away and pushed her little cart out of the room.\n\n\"Looks like you're getting all you can handle,\" Jan said raspilly from her bed. \"But I understand exactly how they feel. I wouldn't mind feeling you in me again either.\"\n\n\"I think you need to concentrate on getting better. I'd hate to be the one that made you kick the bucket,\" I chuckled.\n\n\"Oh honey. I can't think of a better way to go that in the middle of an orgasm,\" she said, with a laugh that started a choking fit.\n\nDiane finally did come back, although she looked unhappy with her mother-in-law, and of course me. Fortunately, a nurse came in to inform us that I was scheduled to have one more test right after lunch and then I was going to be released that afternoon. Amanda offered to go to my house and get me some clothes since what I had worn in the motorcycle accident wasn't quite serviceable any longer. I was glad my daughter decided to go along with her. Hopefully the two could talk this out. Lunch came and went before the Neurologist came into the room with a wheelchair.\n\n\"Well Scott! I hear they're going to let you go today.\"\n\n\"That's what they tell me. Are you the test they mentioned?\"\n\n\"I am. I was able to get some time on the PET scanner. I really want to do what we can while you're here to diagnose your condition.\"\n\n\"Well. I should tell you, it seems to be changing slightly,\" I answered. \"It's taking longer now. Not just a few seconds, but sometimes a minute or two. And for me, it's a LOT more physical. I'm not just watching one person, sometimes I can feel both people. Sometimes it's me and sometimes I'm in someone else's body. Or at least that's how it seems to the other person.\"\n\n\"I see. I wonder if that's a sign that this is going to fade or if it's mutating into something different.\"\n\n\"I dunno. You're the brain doctor.\"\n\nShe chuckled as she pulled on gloves. \"Well, let's get you into the chair and downstairs,\" she said with a cheerful smile.\n\n\"Just so you know. Gloves aren't total protection any longer either.\"\n\n\"No?\"\n\n\"Uh uh. The doc took my pulse in my foot with gloves on and we...um...connected.\"\n\n\"Oh? She didn't say that when I talked to her.\"\n\n\"I don't imagine she would have, given what I saw and felt.\"\n\n\"No? Hmm. And otherwise?'\n\n\"Seems like touching my hard-on even with gloves, will cause it.\"\n\n\"Well, then I guess I need to just be careful,\" she said as she dropped the bed rail down. \"So. Slide out here?\" she coaxed, working the chair towards me. I got myself out of the bed and into the chair, after which she covered my lap with a blanket.\n\nThe trip down to the imaging lab was short, though chilly. She wheeled me into the PET lab and a technician waited by the long bed sticking out of the giant doughnut shaped machine like a long tongue.\n\nThey helped me move to the bed and lie back on it. After securing my head to a little fixture so I couldn't move it, they motored me into the machine until my head was inside the doughnut. \"Okay Scott. We're going to start the test. I want you to just relax and close your eyes. We need to get some baseline data and then we're going to let someone touch you and see what happens, okay?\"\n\n\"Anyone I know?\" I asked back.\n\n\"Maybe. I want it to be a surprise so that everything happens naturally.\"\n\n\"Okay,\" I said taking a deep breath. I lay there, listening to the sounds of the machine, doing my best to relax and think about something soothing, like laying on a beach. It brought back memories of my wife and I the time we went to a beach and didn't realize it was clothing optional until we were there for some time, the beach having been nearly deserted when we arrived. I chuckled to myself at the thoughts of how she reacted when the first nude couple wandered by us.\n\n\"Come on Scott! You're being a slow poke!\"\n\n\"I'm not,\" I answered, hurrying my pace to try and keep up with the young woman in front of me. I'd been trying to get Jennifer to come hiking here with me for at least a year and was practically jumping for joy inside when she agreed to. Little did she know that I was planning on getting her naked out here. Little did I know that those hopes were going to be dashed when she showed up at my front door this morning with two friends. True they were both girls, and both DAMN good looking ones at that. Not that they could beat Jennifer in looks. To me, she was definitely supermodel quality. Curvy in the butt and hips, nice big tits, but not TOO big, nipples that seemed to always poke her shirt out slightly when she was near me. I often wondered if it was only when she was with me, or if it was all the time. Oh well, at least I got to look at that incredible ass in those way to small shorts as I hiked up the hill behind her, panting a bit. Too much desk work will really slow a guy down!\n\n\"Coming Scott?\" she called again, followed almost immediately by her friend Lisa.\n\n\"Come on Scott. Race you to the top of the hill!\"\n\n\"And If I win?\" I called from nearly twenty yards behind the two, only Trish hanging back anywhere near as far as I was.\n\n\"Like you're gonna.\"\n\n\"Just say I do?\"\n\n\"If you do, we'll all strip for you!\"\n\n\"Oh yeah?\"\n\n\"Yeah! Butt naked,\" she called. \"I know you want us too.\"\n\n\"How do you know that?\"\n\n\"Why else would you ask Jennifer out here?\" she answered. \"Unless you were planning on getting her naked up here and having sex with her?\"\n\n\"LISA!\" Jennifer snapped.\n\n\"What? It's the truth. You knew he was going to. Why else did you ask us along? Come on Scott! I'll bet you can't catch me before we reach the top.\"\n\n\"I think you have a head start!\" I called back, knowing damn well that with the bulk of the pack, the folded blanket and food, there was no way I was going to catch her.\n\n\"Too much of one?\"\n\n\"Way too much of one! And I'm carrying all the weight!\"\n\n\"I know what to do!\" Trish, the tiny little brunette hiking just ahead of me called to her friend. \"Make it interesting!\"\n\n\"Yeah? How?\" Lisa called back.\n\n\"Stop and take off your clothes. You can't run until you're naked!\" Trish called back.\n\n\"Why would I do that?\"\n\n\"You're offering all three of us naked if he wins, don't you think you should put out first then? Come on Lisa. Be a man!\"\n\nLisa laughed loudly. \"Alright. You're on. But if he loses you have to strip and give him a blow job!\"\n\n\"Deal!\" Trish called before looking back at me. \"You better start running if you wanna get Jennifer naked!\"\n\nIt wasn't a sprint. No way I could run that long that fast, but I was ahead and stayed ahead of them the last quarter mile up the hill, Lisa running into the clearing at the top of the hill, panting as much as I was, sweat running down her body and dripping from her nipples as she stood, bent over, with her hands on her knees, panting. \"Guess I won,\" I said between breaths, looking at her tits wiggling and swaying as she stood a few feet from me, naked except for her shoes and socks.\n\n\"More than you know,\" she said with a grin.\n\n\"Yeah?\" I asked as we waited for Jennifer and Trish to reach us.\n\n\"Oh yeah. Jennifer guessed what you wanted and asked us along to throw a little water on the idea. But between us, she really needs a good fucking, and I think you're just the guy to do it. So, I hope you're serious about fucking her, cuz Trish and I plan on making it happen.\"\n\nI looked at her stunned, not at all sure what to think.\n\n\"Just take off your clothes and let us do the rest,\" she breathed, standing up and putting her hands on her hips, which allowed me to see her completely shaved mound and the start of her pussy, which looked equally bare and sexy.\n\n\"Now?\"\n\n\"Now,\" she nodded.\n\n\"Alright,\" I answered, dropping my day pack off my shoulders. I pushed my t-shirt up and pulled it off. My shorts went next, revealing the significant bulge in my briefs.\n\n\"Well?\" She asked as I hesitated to push my briefs down. \"Unless you want me to do it for you?\" she asked seductively, stepping towards me. She leaned her chest to mine, pressing her big soft tits against my chest while she reached her hands to my hips and started to push my briefs down. \"So just how big is it?\" she asked in a whisper as she let go of my briefs around my thighs and moved both hands to my hard-on. \"Oooooooo! Big,\" she whispered as she stepped back enough to look down at her hands around my hard-on.\n\n\"Damn Lisa!\" I heard Jennifer say.\n\n\"Hey. Don't blame me. You still gotta get naked. I'm just taking advantage of what's here,\" Lisa giggled.\n\n\"Naked?\" Jennifer asked quickly. \"I thought you were just kidding!\"\n\n\"Does it look like I'm kidding?\" Lisa answered, letting go of my dick and stepping aside so both other girls could see my hard-on sticking out lewdly. \"Time to get 'em off.\"\n\n\"For a cock like that? Hell yeah!\" Trish answered with a grin, pulling her tank top up and off. She started pulling her bra off, leaving only Jennifer, who I really wanted to see naked, still dressed. \"Come on,\" Trish said, as she pushed her shorts off. \"Deal's a deal.\"\n\n\"Oh hell. Alright,\" Jennifer finally said with a scowl. She pulled off her t-shirt and pushed her shorts down, stepping out of them, leaving her in just a bra and panties. She shook her head as she undid the back of her bra and then released her incredibly sexy boobs. They weren't as big as Lisa's tits, but they were even more incredibly sexy. Each firm orb, maybe as large as a coconut, stood out on her chest without support, sagging only a small amount. Her nipples were protruding out towards me, each surrounded by a bright pink areola that covered almost half of the front of each breast. I was still staring at her tits as she bent to push her panties down, revealing the small, trimmed clump of blonde curls pointing almost like an arrow down between her legs.\n\n\"There. Happy?\" Jennifer asked as we all stood naked.\n\n\"I'm sure he is. Now who gets his cock first?\" Lisa asked. \"You Trish?\"\n\n\"Uh uh. Not that I don't want it, but Jennifer invited us. She get's first dibs.\"\n\n\"Wait! The idea was for you two to keep this from happening, not help him!\"\n\n\"Why shouldn't we help him. We all know you have the hots for him and he sure as hell has the hots for you,\" Lisa said as she dug into my pack and pulled out a blanket. \"And look at this! He even brought a blanket to lay on! Tell me he wasn't planning on getting you naked and fucking your brains out!\"\n\n\"Oh he was. Definitely was!\" Trish agreed, stepping the short foot or so over to Jennifer. \"And while she doth protest, her pussy is practically dripping. I can smell it from five feet away!\"\n\n\"It is NOT!\" Jennifer protested.\n\nTrish quickly slipped her hand down to the juncture of Jennifer's legs and slipped two fingers between her legs. She pulled them out and held them up, glistening. \"Oh yeah. Not wet here! No way! Liar.\"\n\n\"Ohhhhh HELL!\" Jennifer answered as Lisa coaxed me to lay on my back.\n\n\"Come on. You know you want this!\" Lisa coaxed, as she knelt down next to me and reached out with both hands for my cock. \"You know. I might just try this on for size myself,\" she cooed as she moved to swing one leg over my body. She looked down at me and grinned and winked as she rubbed my cock head back and forth between her pussy lips smearing her juices around my cock head. \"Ohhhhh. This is going to feel sooooooo good. It's so nice and fat and hard. How about it Jen? Going once...going twice... You sure you don't want this for yourself? Cuz if I sit on it, I'm not stopping until we've both come.\"\n\n\"Oh hell. Alright!\" Jennifer said snippily. Some friends you are!\"\n\n\"Oh trust me honey. We're GREAT friends. If we weren't, I'd have had his cock in me five minutes ago,\" Lisa said as she swung back off over me to give Jennifer room. She stepped over me and squatted down while Lisa, still holding my cock with one hand, guided me towards her lowering pussy.\n\n\"Ohhhhh damn,\" Jennifer groaned as she settled down onto me, my fat head stretching her pussy as her wet depths slowly accepted my fat intruder. She settled until her ass was touching my thighs and then began to lift and lower. \"Ohhhh my God yes,\" she moaned loudly as she started to stroke up and down on me. I could feel every ridge and ripple of her vaginal walls as she caressed my cock with her pussy, teasing both of us along towards climax. Up and down she bounced, my hands sliding up to squeeze and play with her firm tits. Lisa swung her legs over my head and started squeezing her thighs together to keep my head from moving, pressed her pussy to my face.\n\n\"Lick me. Lick my hot little twat,\" she cooed softly, practically grinding her pussy into my face. I reached out with my tongue and teased it between her protruding inner labia, licking her wetness and searching for the hard little nub of a clit. \"AHHHH FUCK!\" she squealed as my tongue found her clit and flicked over it several times.\n\nAs much as I liked the pussy on my face and the sight of her big tits swinging over my face, my real pleasure at the moment was the sensations and sounds of Jennifer pushing us both towards climax. Her little grunts and gasps were egging me ever closer to pumping the pent up load deep into her. Up and down she stroked, the urgency inside me building by the second. I didn't know how much longer I could withstand the double sensations of Jennifer's pussy and Lisa's pussy on my face.\n\n\"Oh damn,\" I groaned into Lisa's pussy as my body reached the point of no return. I felt my cock swell inside her just as her pussy started to spasm around me, the two of us jerking almost in unison. I felt my cock gush up into her as she jerked and shuddered on my lap. Over and over, I pumped cum up into her until I could do little else besides lay on my back with Lisa trapping my face between her thighs.\n\n\"Ohhhhhh damn.\" I heard Trish say from near us. As Jennifer groaned out a long contented sigh. \n\n\"Ohhhh God yes.\" I heard a young lady moan as she wiggled herself on my lap. The restraining device held my head immobile, and I had no idea who was actually on my cock. All I could do was sit there and gently squeeze the pair of bare tits I had in my hands. Slowly the table began to withdraw from the machine, and Andria stepped over next to me to undo the Velcro straps holding my head in place. With my head free I looked down to see a young woman I didn't recognize, but also couldn't help but notice that both Andria and another lab tech were every bit as naked as the young woman on my lap.\n\n\"Well, that was...interesting. \"I've never participated in a multi partner adventure before, but right now, that's exactly how it feels. I felt like you were actually licking my pussy. To the point that I almost climaxed with you doing it.\"\n\n\"You've climaxed with me before,\" I said a little breathlessly.\n\n\"Yes. I have. In seconds. But this... you've been in the machine almost ten minutes, so at least five of those were with the three of us on that hilltop. THAT is definitely different. I mean look at us. All three of us are completely naked. That didn't happen before. This lasted long enough for us to all undress and for Sophie to actually have sex with you during the whole thing.\"\n\n\"Yeah. Well, I said it was changing,\" I answered her as the young woman on my lap began to gain a bit more awareness as she looked around. She looked down at me and seemed to realize that she was naked and sitting on my shrinking dick.\n\n\"Oh my God. What did I do?\" she asked no one in particular as she blushed brightly. She slowly pulled off of me a little wobbly legged, her body still recovering from her intense orgasm. I could see our combined cum dripping from her pussy as she stood next to the narrow bed, holding the edge as she worked to catch her breath.\n\n\"It's alright,\" Andria said with a smile, stepping next to her. \"I didn't expect this, but I think the results will be incredible. I wish I could get a PET of someone going under his spell. I'd like to see how it relates to where real stimulation activates the brain.\"\n\n\"I don't think I can do that, at least not right now,\" she panted.\n\n\"I will,\" The other young lady said, quickly.\n\n\"Trish? Really? You know what that could mean, right?\" Andria asked the young woman.\n\n\"Uh huh. I do,\" she said as she stepped to the bed. \"But God, I'm so fucking horny. I need to get off.\"\n\n\"How about we do that for a start?\"\n\n\"Okay. If you want. But I really want to be fucked!\"\n\n\"Well, Scott. How about we get you back to your chair then?\" Andria said as she walked to where the wheelchair sat across the room. She pushed it back and helped me off of it before the other young lady lay down. Andria fastened her head into the little retainer and then motored the bed into the machine. She motioned to the young black woman in the control room to start the machine up. \"Okay, Trish. Why don't you play with yourself while we get some baseline scans?\"\n\n\"Okay,\" she said, reaching down to her own pussy. Her fingers dipped between her legs, and she stroked her soft exposed inner labia, her fingers glistening in the harsh light of the imaging lab as she dipped them over and over into herself. It took several minutes before the operator indicated the scan was done.\n\n\"Alright Scott. You can touch her now.\"\n\n\"I don't think that's going to do it,\" I said as I rolled myself next to her. \"Not this soon after having sex for real.\"\n\n\"Well, let's try it anyway,\" she said as I shrugged and reached out to touch the young woman's leg. It was no surprise to me that nothing happened. \"Hmmm you're right. So, what now?\"\n\n\"Only one way I know,\" I said.\n\n\"And?\"\n\n\"Earlier today, I'd climaxed with the nurse helping me to the shower and...um...I had sex with Amanda. While we were having sex, I mean real sex, we both kind of drifted off into that state.\"\n\n\"So, you think that if you have sex with Trish for real it'll happen?\"\n\n\"It's that or wait a while.\"\n\n\"We only have the PET for a little while. Trish, how about it? You up for having sex with him?\"",
        "\"Oh fuck yes.\"\n\n\"And you aren't worried about what your husband will think?\"\n\n\"He doesn't need to know,\" she answered, taking her fingers from her pussy and spreading her legs.\n\n\"Alright then,\" Andria said. \"Let's do this.\" She helped Trish lift her legs and spread then and then Andria and Jennifer helped me to sit astride the bed, my flacid dick pressing against Trish's wet pussy lips. Trish lowered her legs down and wrapped them around me. \"So, what now?\"\n\n\"Gotta get hard enough to be inside her. At least that's when it happened last time. When Amanda put me inside her it happened.\"\n\n\"Well, guess we'll find out then,\" Andria said, reaching between Trish's legs and gently grasping my soft dick. She leaned against me, pressing her tits to my arm as she played with and stroked my cock, trying to coax it harder. \"You know,\" she whispered. \"Right now, I wouldn't mind at all getting this into me. I know what she means about wanting to be fucked. It's even more intense than that time in the elevator or the lab. I came both times, but after, I didn't want it nearly as much as I do right now.\"\n\n\"I only have one dick,\" I chuckled.\n\n\"But you have hands,\" she whispered, leaning more tightly to me and using her free hand to coax my right hand around her. She lifted one knee onto the table behind me and leaned herself fully against me, allowing me to reach between her legs from behind and stroke my fingers along her wet pussy. \"Mmmmmmm much better,\" she cooed softly as she rubbed her hand along my now hardening dick. \"Maybe we should try and put this into her?\" she whispered, pushing my dick down towards Trish's pussy. I watched my head disappear between her wet lips and then felt my head slip into her slightly.\n\n\"Oh, fuck yes,\" Trish moaned, pulling on me with her legs, forcing me deeper into...\n\nThe noise was almost deafening. I wasn't used to music this loud, but Trish seemed unphased, bouncing and dancing in front of and against me in the middle of the crowd. My hands slid up and down the skintight dress, encouraging her to press herself against me as she danced. She pulled my hands up to her tits, pressing my palms against her small firm tits, her nipples hard against my hands. She pressed her back against me as her hands left mine, sliding down her own body. I felt them slip between us, her fingers fiddling with the front of my pants until she had the zipper and snap open, my pants held up only by my still fastened belt buckle. One hand snaked into my open pants and in moments she had my mostly hard dick out of my pants, the slick material of her dress all that remained between my growing hard-on and her bare ass. She pulled the dress up her thighs and butt, seemingly uncaring about who might see us. But then, we certainly weren't the only ones doing it. I could see at least four other couples with dresses pulled up or down to expose body parts and one couple clearly fucking as they danced.\n\n\"Fuck me,\" she moaned to me as she pulled her dress up, allowing me to feel her bare ass against my hard-on. \"Right here, right now. Fuck me and give me your baby.\"\n\nI didn't need to answer. Pulling my hips back and squatting down to let my cock slide between her thighs was all the answer she needed. I felt her fingers find my head and press me up between her wet lips, working me into just the right place. I felt her pussy slide down around my head, her pussy wetter than I could ever remember. I thrust my hips towards her, driving my cock fully into her as I slid my hands off her tits. I moved my hands to her shoulders and slipped the straps of the dress off her shoulders and down her arms. I expected resistance, but instead she pulled her arms out of each strap, moving her hands after to my hips, giving me tacit permission to do what I wanted. I slid my hands back to her chest and coaxed the material down over her tits until I had each one cupped in my bare hands, her hard nipples pressed into my palms.\n\nShe ground and bounced herself up and down with the music, sliding her pussy up and down my cock, pushing both of us towards climax, even though I was more than a little nervous about being so exposed.\n\nI felt a hand on my back and saw a woman, slightly older than either of us, moving around us. She had on a short sexy little dress but seemed much more intent on what she saw in front of her than the band playing on the stage. I watched her look into my eyes and then smile before reaching behind her. She unzipped the sexy little dress and let it fall down her body, leaving her standing in just high heels. She squatted down spreading her legs to show me her pussy as she picked up the dress. She reached it up and around my shoulders, hanging it on my shoulders as she danced herself, nude, in front of my wife. She gently pulled a hand from my wife's tits, guiding it down her body as she stepped around next to me, helping me curl my fingers between her legs and into her pussy.\n\n\"That's it. Fuck her but make me come too,\" she whispered as she pressed herself against me, her tits pressing to my bare arm. She placed one hand on my back, and then her other on my wife's chest, teasing and squeezing one of my wife's tits. She let go long enough to push the top of my wife's dress down to her stomach before sliding up to play with her tit again. I watched as she leaned over and sucked one of my wife's nipples into her mouth, making her moan in pleasure as she continued to grind against me, seeming to not care that the newcomer had not only made her essentially naked, but also was playing with her body.\n\nHer hand, which had been on my wife's tit, slid down to pull the skirt the rest of the way up, leaving only the bunched up dress around her waist. She slid her fingers down to my wife's mound, stroking the little curls there before sliding her fingers between her legs. \"Oh fuck yes,\" my wife moaned, making her grind harder against me as the newcomer teased and stroked my wife's lips and clit. \"Shit. I'm going to come. Come with me baby. Fill me with your cum,\" she moaned over the din of the music.\n\nI felt my wife start to climax, her pussy tightening around me even more, drawing me even closer to climax. I held my hand between the newcomers legs, my fingers in her pussy, letting her bounce and wiggle herself on them as I grew closer to climaxing in my wife's pussy.\n\n\"Yes. There.\" The newcomer moaned as my fingers found her clit and started to rub it. \"Right there! OH GOD! HERE IT COMES LOVER!\" she cried loudly, drawing the attention of several couples around us. Then it happened.\n\nI felt my body jerk, shoving my cock deep into my wife's pussy as I pumped the first shot of cum into her. Over and over my body bucked, oblivious to the couples staring at the three of us as I emptied shot after shot into my wife. \"Oh God yes,\" my wife moaned as she stood against me, her whole body shuddering and trembling as the three of us climaxed together. \n\n\"Oh fuck yes,\" Trish moaned from on the bed in front of me. I looked down and saw myself still inside her, my cock still twitching after my own orgasm, Andria's thumb gently stroking over and around Trish's clit while her hand rested on Trish's curl covered mound.\n\nAndria leaned against me, panting, as I slowly, absentmindedly, stroked her wet pussy, sliding my fingers between her lips, along her pubic bone from her vaginal entrance to her clit. \"Not as good as getting fucked, but I needed that,\" she panted as she pressed her body against mine.\n\n\"I know I needed that,\" Trish moaned.\n\n\"Okay. Trish. I have to know. Fantasy or memory?\"\n\n\"Some of both I think,\" she answered breathlessly. \"I really did have sex with my husband at that concert, but he didn't undress me that much and there certainly wasn't another woman there touching me.\"\n\n\"Interesting,\" Andria said, making no move to pull away from me, her gaze clearly still watching my cock where I impaled Trish.\n\n\"I think I need a break,\" I finally said, feeling surprisingly drained. I felt as if I'd just run a 5K. My body was wet with sweat and I felt surprisingly weak, even though what had happened had to have passed in only a few short minutes.\n\n\"Oh. Yeah. How silly of me,\" Andria said quickly, finally pulling herself away and then moving the bed out of the machine and lowering it down to help me into my chair. I couldn't help but notice the cum leaking from Trish's pussy as she moved her own hands up to unstrap her head from the restraint.\n\n\"Can I ask a question?\" I asked Trish as she sat up on the bed.\n\n\"Yeah. Sure,\" she answered as she swung her legs over the side of the table to face me.\n\n\"Did you ever get that baby?\"\n\nShe looked at me started a bit. \"You know?\"\n\n\"I heard you ask me or him to give you a baby. Did he?\"\n\nShe frowned a little. \"We're still trying. But no luck so far.\" I looked down at her crotch, her gaze following mine. She spread her legs apart and a trickle of creamy white cum leaked from her pussy. \"Ohhhh. Damn,\" she said as it sunk into her that she wasn't on birth control and I just pumped more than a little cum into her.\n\n\"Just thought I'd ask,\" I said softly, reaching out to touch her leg.\n\n\"I probably better do something about that,\" she whispered.\n\nI looked at her and stroked her knee. \"I could feel how badly you wanted that. If you don't do anything about this. It's okay,\" I whispered while Andria dressed next to us.\n\nTrish slipped off the bed and leaned over to kiss me on the cheek and whisper a thank you before Andria pushed me away, taking me back up to my room. Once I was settled into my bed again, I fell asleep, feeling damn exhausted."
    ],
    "authorname": "m_storyman_x",
    "tags": [
        "mind control",
        "mother-in-law",
        "daughter",
        "multiple partners"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/awakening-ch-08-1"
}