{
    "title": "My Crazy Girlfriend Pt. 02",
    "pages": [
        "I rolled over the next morning to find her gone, but heard the shower running but it cut off shortly thereafter. She came out, wet hair flung across her bare shoulders and her slim torso wrapped in a towel. She smiled when she saw me awake and dropped onto the bed.\n\n\"You're always so pretty right out of the shower.\" I said. She leaned over and kissed me.\n\n\"You're such a ham.\" She said back.\n\n\"What's our plan for today?\" I asked. She laughed. \"What?\"\n\n\"There are no plans, my parents are leaving for their little vacation and its just us here now.\"\n\n\"So, what are we doing?\" I asked.\n\n\"Mostly this.\" She said gesturing to the bed. \"Laying around.\"\n\n\"Sounds great.\" I said smiling.\n\n\"It also means the game is about to hit hard mode.\" She said, her turn to smile.\n\n\"Hard mode?\" I asked.\n\n\"Maggie, you, and I, all alone for a whole day and a half?\" She smiled harder, \"Anything could happen.\"\n\n\"That's different than what's been happening so far?\"\n\n\"Yep, because this afternoon, I have to run an errand.\" I stared at her.\n\n\"Ok, I have no problems with an errand.\" I said.\n\nShe leaned over and put her nose to mine. \"You can't come.\" She smirked. \"Here, all alone, with just Maggie.\" She looked down at me, copper hair draping around her face. \"Think you can hold on?\"\n\n\"You, my love, are certifiably insane.\" I said.\n\nShe gave a wicked laugh and kissed me. \"You love it.\" She said.\n\n\"I love you.\" I replied.\n\nHer face fell into a serious expression, \"I know it's not your thing, but you are having fun, right?\"\n\n\"Truthfully, letting myself be tempted by my girlfriend's sister has been a challenge. But you did pick some very tempting bait.\" I said.\n\nShe smiled, \"I'm so glad you agree.\"\n\nI reached up and pulled on her towel, but she held it in place. \"Why not?\"\n\n\"Because my folks are gone dummy. Why do it up here when we can do it somewhere exciting? Like on the couch, where we could be seen.\"\n\n\"You are so right.\" I said sitting up. She raised up and climbed off the bed.\n\n\"How risky do you think?\" She asked.\n\n\"Depends, do you want Maggie to crash the party?\" I asked.\n\n\"Good point, I'll dress for furtive mischief.\" She said pulling out a knee length skirt and dropping the towel.\n\nWhen her naked, lean body came visible, I climbed out of bed and hurried over to her, running hands over her ribs and stomach. She laughed and leaned back. \"I can't get dressed if you're touching me.\"\n\n\"You know I can't help it.\" I said.\n\n\"You don't have to, you just have to wait.\" She said through another laugh.\n\nI slid a hand between her legs and felt her bare pussy which was already slick. She panted and whimpered when she felt my fingers. I stroked her folds and teased her sliding my finger in and out. She moaned quietly and leaned back against me holding my neck. I fingered her gently, feeling her breast with the other hand.\n\n\"Downstairs... we were...\" She panted breathlessly, as her hips moved.\n\nI shushed her and said, \"Think of this as thanks for yesterday.\" She looked up at me when I said it and recognizing what I meant, panted and kissed me. Her body squirmed and rocked, and she moaned into our kiss. My finger slid in and out of her wet pussy, dragging across her clit.\n\nShe broke the kiss and gasped, \"I'm gonna cum...\" She started to jerk and shook, moaning through an open mouth, holding on to me as her knees buckled and her pussy leaked down my fingers.\n\nShe panted against me regaining her composure. I slid my finger out of her and she sucked all the fluid off it.\n\n\"Now you can get dressed.\" I said, slapping her ass. She gave me a look and grabbed her skirt from the ground.\n\n\"What should I wear?\" I asked looking through my bag.\n\n\"Nothing with a zipper.\" She said.\n\nI grabbed a t-shirt and workout shorts and put them on. I didn't bother with boxers. Liv had put on a shirt, sans bra, and just as soon as it was on grabbed my hand and pulled me out the door.\n\nWe made it downstairs and she shoved me onto the couch climbing into my lap and kissing me hard. On top of me, she reached under her skirt to pull my shorts away from my cock. I lifted up and lowered them to help. She licked her hand and stroked my cock with the wet palm for a moment before angling it under her and pushing down.\n\nShe moaned, burying her face in my shoulder, \"Oh, fuck,\" She panted as my cock dug into her inch by inch. She kissed me, crying into the kiss as she bounced up and down starting to fuck me. She bounced faster, jamming my cock into her, barely keeping her moans muffled. She buried her face in my shoulder and groaned forcefully as her butt rocked and bounced.\n\nI heard something and tapped her shoulder. She looked at me and I whispered, \"I think someone is coming.\" She collected her hair and face, reclining on me, my cock buried to the hilt in her. She leaned in and kissed me.\n\nHer mom walked around the corner in a hurry, carrying a bag. \"We're going!\" She said entering the room. She stopped. \"What's going on in here?\"\n\nLiv, who was beat red from fucking, made an embarrassed face. \"Just a little making out mom,\" She said bashfully, as her pussy leaked down my thigh. \"We thought you were gone.\" Her mom rolled her eyes. \"Keep it PG you two. Alright we'll be back Tuesday!\" She said giving me a look and exiting out the front door.\n\nAs soon as it closed behind her mom, Liv resumed grinding her slick pussy on my cock groaning through her gritted teeth. I lifted the front of her shirt and palmed her breasts as she bounced.\n\n\"Fuck,\" I panted, \"You're so tight...\"\n\nShe smiled in satisfaction, \"Cum in me baby,\" she whispered, keeping her grinding steady.\n\nI shook my head, trying to keep control against the feeling of her tight pussy wrapped around my cock. \"It's too soon.\" I said, hands around her tapered waist. She giggled through a rough, pant for breath.\n\n\"I don't have time for you to make me cum until you're satisfied, just let me feel your cock burst.\" She said breathlessly. She leaned in and bit my ear and whispered, \"Think of it as 'thank you' for yesterday.\"\n\n\"You-\" I started to ask, but she interrupted with a long kiss as her hips stroked my cock with slow, tight strokes. I could feel the heat start to build and I couldn't control my breath. She knew it too.\n\nShe giggled between whimpers, \"I can make you cum whenever I want.\" She said panting as she fucked.\n\n\"L-Liv...\" I stammered. She nodded, half smiling as I suddenly shuddered and groaned, my cock shooting cum out forcefully in long bursts quickly flooding her pussy which was so tight, my cock was fried, spurting until it was empty. Liv slid off and sat in my lap giving me a soft kiss.\n\n\"I have to get ready for my errand now.\" She said.\n\nI panted and wiped a sheen of sweat from my brow. \"Where are you going?\"\n\n\"I have to meet with an advisor at the Community College for summer.\" She said.\n\n\"And I can't go?\" I said regaining my composure. She shook her head with a devious look.\n\n\"I'll be gone a few hours.\" She said and kissed me again before climbing off the couch. I pulled my shorts up when she did.\n\n\"What am I supposed to do?\"\n\nShe shrugged. \"Whatever you want.\" She turned and left, walking different trying to keep cum from leaking out.\n\nI stayed on the couch until she came back down, wearing the same skirt but I more appropriate blouse. I walked her to the door and we kissed as she left.\n\n\"Be good.\" She said blushing and left. I laid on the couch for nearly twenty minutes to try and figure out what to do. Part of me wanted to leave so Maggie couldn't pull anything, but part of me thought that was a little 'extra'. It was after all, Liv's game.\n\nI settled on a shower, and nothing. I expected my shower to be interrupted but it wasn't. After the shower, I put my boxers on and laid in bed. I was browsing Reddit when there was a knock at the door. \"Come in,\" I said. The door opened, and Maggie came in. She was wearing a shirt about a hundred sizes too big that fell to over her knees.\n\n\"What's up?\" I asked.\n\n\"Nothing, I wanted to show you something.\" She said. I looked up. \"Relax, not that.\"\n\nI sat up and swung off the bed. She left, and I followed. We went to one of the bedroom, which immediately made me suspicious. She sat down against her bed, knees folded under her and motioned for me to sit next to her. I did.\n\nShe pulled a paper off her bed and handed it to me. It was a picture of the two of them dressed up like Indians, with pigtails and leather outfits that showed plenty of midriff. \"What's this?\"\n\n\"Well, it's really offensive.\" She said, referencing the outfits. \"But it's my senior year. I had gotten dumped and she brought her boyfriend home. I was super annoyed at first but then it got kind of weird. She insisted we play spin the bottle. Me, him and her. I did and I don't know why. But she made sure that me and him landed on each other way more than she and him did. The joke was on me though, because I'm pretty sure he got the best lay of his life afterward.\"\n\nI looked at the photo and then at her. \"That's how the game started.\"\n\n\"It's like gasoline on a fire. It makes her crazy, and that's when she learned that.\" Maggie said.\n\n\"Why is she so into it?\" I asked.\n\nMaggie shrugged. \"Don't know. I think some of it is insecurity. It tells her she's with someone desirable. I think some of it is just kink. But she gets out of control. One time I commented on a trip that the guy she went on a date with was cute; she masturbated, like, the whole trip.\"\n\n\"That's pretty out of control.\" I replied.\n\nMaggie nodded with widened eyes. \"She held onto me in the car, so she didn't make noise once.\"\n\n\"Wow.\" I said surprised.\n\n\"Yep.\" Maggie continued. \"She's as obvious as I am, all that squirming and noise. She came so hard thinking about me commenting about her date.\"\n\n\"What's the most you've ever done with one of her boyfriends?\" I asked.\n\n\"Well,\" She said, \"We've never done this much before. But before you, it was that night. I made out with her date and he felt up my leg, under my outfit while I stroked him through his pants. If we'd had more time he'd have busted for me first.\"\n\n\"Did he get to feel you?\" I asked.\n\n\"No, he was too chicken.\" She said rolling her eyes. \"If he had I'd have fucked him right there probably.\"\n\n\"And what do you get out of it?\" I asked, trying to hide how aroused the chat was making me.\n\n\"I love wearing them down and feeling them fight themselves.\" She shifted to a sitting position with her legs up. \"I love knowing how bad they want it but won't let it happen.\"\n\n\"Then you must be loving this.\" I said pointing between us.\n\nShe laughed and smiled. \"As though you're not.\"\n\n\"What does that mean?\"\n\n\"Like you're not turned on talking about how frantically horny your girlfriend gets thinking about you and me together.\" She looked at me with a smirk. \"You don't get rock hard knowing that every time you look at my ass or notice my neck,\" She flipped her hair back to expose it, \"She gets all wet and excited?\" Her eye caught mine.\n\n\"See that?\" She said pointing, \"You, trying not to look at my neck and down my shirt. That's what drives her crazy and what I live for.\" She leaned forward so her shirt gaped showing off her cleavage. \"She'd be dripping wet right now watching me do this to you. She'd be dying for you to finally sneak a glance. But what's so fun is watching you try so hard not to.\"\n\n\"Does it turn you on as bad as Liz?\" I asked.\n\nShe smiled, and rose on her knees and leaned over me, \"Find out for yourself.\" She said softly before leaning for a gentle kiss. I kissed her back and her tongue played with mine. I felt her hand move up my leg to my stiff shaft and stroked it. She felt it flex against her touch through my shorts and smiled into the kiss.\n\nI reached up and slid my fingertips along her thigh and under the shirt hesitating briefly. She smiled again and whispered, \"Don't chicken out on me.\" I let my finger slide against her panties which soaked through at my touch. She whimpered softly into the kiss as I stroked her wet folds. As I touched her she pulled out of the kiss and took the shirt off, her bare breasts sliding out from under it.\n\nI leaned her forward and sucked one of her pink nipples which brought a moan from her throat. I leaned her on her back, laying her out on the floor and slid my hand into her panties feeling her wet pussy and starting to finger her.\n\n\"Fuck, you're so good at this.\" She said whimpering and squirming on the floor. Her pussy was so tight around my finger as I watched her flat stomach clench in pleasure. She reached up and palmed my shaft through my pants, rubbing.\n\nShe sat up and yanked down the waistband of my shorts and wrapped her lips around my cock and began to bob up and down. She moaned around my shaft as she sucked sloppily. Her pussy made wet sounds competing with her lips as I stroked my fingers into her quickly.\n\nI eased her away from me and laid her on her back again. She slid her underwear off and tossed it aside. I pulled her legs open looking at her cute, bare pussy. It was messy and pink. I moved between her legs and started to lap at it. She cooed loudly, moving her hips as I licked her clit and folds.\n\nThe tan girl rocked her hips and torso moaning as I tickled her cunt, she grabbed her breast the other hand gripping the carpet. \"Fuck,\" She groaned. I ran my tongue across her wet pussy teasing her clit and folds trying to lick it clean. \"Fuck!\" She said louder, \"I'm gonna cum...\" I kept eating her relishing the feel of her body tensing around me until she moaned louder, and her hips bucked against my face. She covered her mouth as she came, screaming into her palm, her little body twisting and seizing on the floor.\n\nShe panted for breath and I leaned up on to my knees. After several moments she sat up and leaned into me giving me a hot kiss. She pushed my shorts down stroking my cock. I worked in spite of her kiss and stroking hand to pull my shorts down to my calves. I wanted to pull them all the way off, but she wouldn't relent her kiss. I put my hands on her waist and slid one around to feel her ass.\n\nFinally, she broke the kiss and said breathily, \"Does Liv call you daddy?\"\n\nI shook my head no. \"Can I?\" She panted.\n\n\"Yeah,\" I said back softly. She made an approving noise and moved away. She turned around and flared her hips, so her ass stuck out. She turned around looking at me over her shoulder and held up her hand wagging a finger to 'come here'. I did, shedding my shorts and boxers (finally)\n\nShe pushed her ass around my cock and stroked me with her hips leaning back to kiss me while I felt her full breasts and ran hands across her stomach. She broke the kiss and said quietly, \"Fuck me, daddy. Please. I won't tell, I promise.\"\n\nI didn't respond, pushing her down onto all fours where she eagerly stuck her ass in the air with her legs apart. I moved in and felt her slick cunt sliding along my shaft. She panted softly at the feel of me. I slapped her ass and she cried, her elbows bending. I slapped again, and she whimpered enthusiastically. I adjusted the angle of my cock and put it against her folds and slowly pushed in.\n\nI groaned feeling how tight she was, she moaned as I slid in. I started pulling in and out and she moaned loudly grabbing the carpet. My shaft buried in her wet cunt, I started to pound her. I fucked her hard, all the lust driving each thrust as I watched her tight ass bounce off my stomach and her torso flex and strain to keep her breath. I grabbed my hair in her fist and yanked back. She yelped and her pussy clenched. Holding her hair tight, I spanked her again and she cried in pain and satisfaction.\n\n\"Fuck, daddy, don't stop...\" She moaned. I leaned forward reaching around her hips and felt the hood of her clit, rubbing it gently. She cried louder and protested. \"No, it's too much... I'm gonna...\" She screamed, covering her mouth, her body seizing again, her pussy clamping down on my cock. She pulled forward, my cock prying free of her insides as she shook. Fluid dripped slowly off her pussy as she regained composure and she turned around.\n\n\"Lay down,\" She said with a low voice. I did and she climbed on top of me. I was looking up at her petite shoulders and breasts that shook as she swung her leg over. She leaned down and kissed me, teasing my cock with her pussy as she did. I felt one breast then the other, enjoying the sounds she made when I played with her nipples. She parted the kiss and said.\n\n\"You're so much fun I may not give you back.\" She said rubbing her pussy folds on my tip.\n\n\"I don't think that's how this works.\" I said and she smirked.\n\n\"You're not saying no now.\" She said and leaned back lowering herself onto my cock with a satisfied moan. I watched her teen body tense and start to rock, fucking me. Her breasts shook, and I held her ass and hips as she moved, grinding on my cock. Her cute face turned pink and she covered her mouth as she moaned.\n\nI grabbed her sides and groaned, feeling heat start to build in my abdomen. \"Fuck yes,\" she said aggressively, pushing down on my hips with hers, \"please, cum in me, please.\"\n\nI put a hand on her stomach, \"S-slow down.\" She didn't listen, fucking and grinding aggressively. It didn't take long before I lost control and my cock erupted in her, dumping cum into her tight pussy. She moaned and kept rocking on me forcing each spurt out with force as I groaned and jerked under her. When I was too sensitive to continue and my cock was empty she pulled herself off me and laid on the ground.\n\nShe rolled over and gave me a soft kiss. \"Now, that wasn't so bad was it?\"\n\n\"I finally fucked my girlfriend's sister.\" I said, she laughed.\n\n\"Mmm, fucked her good too.\" She said with satisfaction. \"So much cum...\" She slid a finger into herself and pulled it out, covered in white creamy fluid and sucked it off.\n\n\"Now what?\" I said.\n\n\"I don't care,\" Maggie said brushing hair out of her face. \"You can fuck me whenever you want.\"\n\n\"Isn't the game over?\" I asked.\n\n\"It should be,\" She said dismissively, \"But I don't want to be done with your cock.\" She spread her legs and rested on her knees looking over her shoulder. Cum had begun to drip out of her. \"The question is, are you done with my ass?\"\n\nTruthfully, I didn't want to be, but I didn't want to be spent when Liv got home. So that's what I told her. She made a disappointed face. \"Too bad,\" She said with a shrug and picked up her panties. \"If you change your mind, I can keep a secret.\" She smiled devilishly, covered herself with her shirt and left.\n\n\"Isn't this your room?\" I asked after her.\n\n\"It's Liv's old room.\" She said back with a chirp. I fell back, great I thought. I slowly collected myself and returned to the guest room, unsure of what to think about finally banging Maggie in Liv's childhood bedroom.\n\nI laid in bed, having resigned myself to whatever was coming, back on reddit. Eventually the door opened and closed downstairs. Liv was home. She came upstairs and into the guest room casually.\n\n\"Hey, I'm back.\" She said.\n\n\"Welcome home.\" I said sitting up.\n\n\"Mm-hmm\" She said casually dropping her purse and climbing up on to the bed. \"And how was your day?\"\n\n\"I spent it waiting for you.\" I said.\n\nHer eyes sparkled with intrigue. \"Do anything while you waited?\"\n\n\"I manage to stay entertained.\" I said. She giggled.\n\n\"Oh yeah?\" She asked with a smirk. \"Entertained by who?\"\n\n\"I didn't say I was entertained by someone.\" I said back\n\n\"Entertained with someone.\" She said climbing close to me.\n\n\"I didn't say that either.\" I said.\n\n\"You're being evasive.\" She said her face close to mine.\n\n\"You're being weird.\"\n\n\"You're acting guilty.\" She said turning pink.\n\n\"No, I'm not.\"\n\n\"You did it\" she whispered.\n\n\"Yeah,\" I said defeatedly. I expected her expression to change but it didn't, her devious smirk only deepened.",
        "\"So,\" She said almost playfully, crawling into my lap. \"Did you get bored and go looking or-\" She leaned forward straddling me, \"Or did she find you, and you just couldn't take it anymore?\"\n\n\"She came and found me and got me worked up talking about your relationship.\" I said. Now her face sank a little.\n\n\"What? You wanted me to go looking?\" I asked. She nodded.\n\n\"Well she came and found me and told me about the games you used to play and how frantically horny it made you.\"\n\n\"She was dressed slutty, wasn't she?\" Liv asked, starting to move her hips.\n\nI nodded. She bit her lip, \"Got you worked up while making you look at her tight little body.\"\n\nI nodded again. \"Did you make her work for it?\" She asked.\n\n\"Oh, no, she played me like a fiddle. I was so lost listening to her talk about you and looking at her legs under her shirt when she made her move that was it for me.\"\n\n\"Did she lead you to bed with her ass?\" Liv asked panting through the question.\n\n\"Didn't make it to the bed.\" I replied. She whimpered loudly like the noise caught her by surprise.\n\nI reached up and unbuttoned her blouse. She let me. \"Did she call you daddy?\"\n\nI nodded as the shirt fell behind her shoulders. I rolled her over on her back and pulled the skirt down with her panties. A long thick string of fluid clung to her pussy and collapsed on the bed as I pulled her clothes off. She frantically yanked down my boxers and I pulled them off.\n\nOnce free she was trying to drag me on top of her. Her legs were around me and she moved beneath me already trying to fuck. \"I hope you fucked her hard.\" She said in a pathetic voice. \"I hope you pulled her hair and left hand prints.\" I pushed into her dripping wet pussy and started to fuck her. Her body heaved and she cried into my shoulder as my cock slid in and out of her.\n\n\"She moaned like a whore the whole time.\" I told her pink, moaning face.\n\n\"While you fucked her tight pussy...\" She moaned forcefully out loud. She leaned up and kissed me hard, tugging on my lip with her teeth before collapsing back to the bed and groaning. \"Fuck I'm cumming!\". She moaned louder and louder her body tensing and convulsing as her pussy clenched down on my cock.\n\nHer moans muted as her orgasm subsided, but she grabbed hold of me encouraging me to keep going. \"Tell me more...\" She whimpered, \"Tell me...\"\n\n\"I got to finally watch her work that ass from behind. Watched her cute body squirm on the floor while I fingered her.\" I said breathlessly, pounding her gripping cunt.\n\n\"Fuck!\" She screamed. I covered her mouth and tried to quiet my frantic girlfriend down. She pulled my hand away, \"I don't care, let her hear me cumming to your sloppy seconds.\" She tried to grab my back as a moan ripped through her chest, \"Oh fuck... fuck...\" She came again\n\nHer bra strap had fallen, and one breast was partially exposed. Her pussy had leaked across her ass and my legs leaving a spot on the bed. Her make up had smeared and there was a sheen of sweat across her chest and shoulders.\n\n\"Shit, shit,\" I groaned\n\nShe grabbed my neck and strained vocally, \"Cum on my face, cum, cum on my face...\"\n\nI fucked her for a few more seconds then pulled out, she scrambled from under me and put her face against the underside of my cock, submissively licking the shaft and tip. My third load of the day blasted her across the cheek and nose with splattering force. Several more spurts hit her lip and forehead before she kissed my shaft as the rest erupted out smearing in a large mess across her face.\n\nShe whimpered licking my slick shaft and rubbing her face on my cock. Cum dripped off her chin and leaked down her neck. She wiped cum from her face and licked it off her fingers. Covered in cum that leaked across her chest now she sat up and kissed my neck with panting breaths.\n\n\"Is the game over now?\" I said as she made sounds against my nape.\n\n\"The game?\" she said quietly, \"Yes. But please don't be done fucking my sister, fucking anyone I ask you to. Please.\"\n\n\"Seriously?\" I asked. She pulled away from my neck and looked at me nodding.\n\n\"I know you liked it. Finally getting to plow her little body.\" She made a little chirp and pulled hair from sticking to the cum on her face. \"Please? For me?\"\n\nI sighed heavily. \"Let's not make a habit of it.\" I said. \"Your face is my favorite one to cum on.\" She gave me a long kiss and smiled.\n\n\"I'm going to clean up.\" She said. She kissed me again and whispered, \"I love you.\"\n\nShe climbed off the bed. She cleaned up and then I took her to dinner. Dinner was fun, but strange. It was like nothing had happened over the last two days. We stayed up and talked over a movie and went to bed. A normal evening to a very strange day.\n\nThe next day started weird. Well, it was actually hot. I didn't wake up on my own, it was early and the sun had just started to glow in the window. I felt the mattress moving and rolled over. Liv had pulled the blankets off of her and had her knees bent up, laying on her back. The shoulder strap of her nightgown had been pulled down and her breast was visible. She was grabbing it and feeling it, while her other hand was reached under the hem.\n\nHer face was pink and her eyes were shut as her mouth whimpered and panted. Her sleek figure moved and rocked with pleasure in the soft light. I had only watched for a few minutes when she shot her hand from her breast to her mouth and moaned into it, shaking as orgasm shot through her. When it subsided her eyes parted open and I closed mine.\n\nI don't get to watch her masturbate very often and it's so hot when she does. I felt shifting and peeked again. Her legs had been pulled open wider and I could see the gown's hem pulling up to her stomach. Her pussy made slick sounds as she fingered herself and her hand cupped her mouth to hide moans. Her head rolled over as she cried into her palm and her eyes saw me looking. Crap.\n\n\"Sorry!\" She panted, \"Did I wake you up?\"\n\n\"Yeah, but please don't stop.\" I said quietly.\n\nThe sound of her fingers at work continued and she gasped, \"I don't think I can.\"\n\nShe rolled over and pulled the blanket off me exposing how hard I was. Her hand moved mine to my shaft tenting my boxers. Once I had myself in my hand she laid back and resumed her fantasy, moaning softly and rolling her hips. I stroked myself through my boxers as my adorable girlfriend cried and her flat body clenched in pleasure. She came again, moaning forcefully into her hand, her knees pulling up off the mattress and her torso curling in place.\n\nAs she seized with the orgasm I saw where she had leaked onto the sheets in a damp spot, which darkened through the orgasm. Pre-cum soaked through the fabric of my boxers as my cock strained watching pleasure rip through her. She collapsed moments later, panting for breath. She pulled her hand from between her legs and watched long strings of fluid stretch out from her pussy as she did.\n\nI leaned over and took her wrist pulling it to my lips and licking her wet finger clean. I let the finger fall from my lips and she put her hand on my shaft feeling it. \"You're so hard.\" She said quietly.\n\n\"What were you thinking about?\" I asked. She turned bright red and her hand slowed. \"Well?\" She looked away and hesitated.\n\n\"I had a thought, that I came to your dorm and found you fucking Melanie, your neighbor. I thought about watching and just lost control.\"\n\n\"You made quite a mess,\" I said leaning over and pulling her legs open to look. She blushed again. If she was this into her fantasy, I decided to make it worse. I leaned closer and ran my finger along her thigh and she winced.\n\n\"What was I doing, when you discovered me?\" I said letting my fingers feel her folds. She whimpered and moved her hips. I teased her, and she moaned quietly.\n\n\"She was laying totally naked on the floor with her legs open, you were on top fucking her.\" I slid my finger into her and she moaned covering her mouth.\n\n\"Did she like it?\" I asked fingering her faster watching her face flush and her body squirm.\n\n\"She moaned like a whore...\" Liv moaned.\n\nI rubbed her clit with my thumb and watched her bite her lip and jerk in response. \"Did you join us? Did I get to fuck you both?\"\n\nShe gasped for breath between moans, \"I- I lapped your cum out of her\" She cried Her body started to clench and shake as orgasm ripped through it again. My hand was soaked and dripping and the spot on the bed had gotten bigger. She heaved for breath laying disheveled on the bed before sitting up. She grabbed my boxers and yanked them down wrapping her mouth around my cock.\n\nLiv really enjoys oral and takes pride in how much thought she puts into the sensations she can create. But now, she reminded me of Maggie; shoving my cock into her mouth and throat fucking me with it. She took me in to the hilt and her throat seized. She pulled away gagging and coughing, saliva dripping off her chin before she grabbed me with her lips again.\n\nShe bobbed violently, sucking on my shaft and forcing her face down to my stomach until she choked and pulled back off. I was uncomfortable with out rough she was being with herself, but she was so eager to do it I played along. I grabbed her hair and held her head, jamming my cock into her mouth, fucking her face. She grunted and groaned around me, gagging when I put my cock back into her throat. Her neck and chest were slick with spit.\n\nI pulled back from her mouth and motioned for her to turn around. She did, laying on her stomach, legs out towards me. I grabbed her hips and pulled her up on her knees, her face staying on the bed. Her ass and thighs were wet from how messy her pussy had gotten. I slid a finger into her cheeks and pushed against her asshole. She moaned into the mattress as it slid in with her own lubricant to the second knuckle. I leaned in and started to tongue her wet pussy. She moaned loudly grabbing the sheets as I tormented her pussy folds with pleasurable laps.\n\nStrings dripped out of her slowly as her pussy ran with overwhelmed stimulation and she cried helplessly from my mouth. I fingered her ass slowly for several minutes. I slid my finger out and pushed her hips back down. I leaned over and let my slick shaft slide against her ass teasingly before pushing it against her pussy and sliding in.\n\nShe groaned with approval and moaned, her hips pushed back, and I held her ass as I started to fuck. \"Pull my hair,\" She moaned, \"Pull my hair, I want it rough.\" I did, grabbing her thick red locks in my hand and yanking. She yelped, and I started hammering her insides. She moaned through her throat, grasping at the sheets.\n\nHer ass smacked my stomach, fucking her as she lay flat against the mattress. She cried helplessly, her ass smacking my stomach with each thrust. Our bodies had started to sweat with effort. I slapped her ass again and she cried into the sheets. She raised her face and moaned through her lack of breath, \"I'm cumming again...\"\n\nShe shook, her shoulder blades flexing out and she leaned down screaming into her hand. Her pussy gripped me like a vice as orgasm tore through her. She came so hard she was nearly crying when it subsided. Still shaking she tapped my leg and I slowed and slid out. She rose to her knees and looked back at me with a vacant but determined expression.\n\n\"It's my turn to fuck you.\" She said patting the bed. I laid down like she wanted.\n\n\"Sure, you can keep going?\" I asked, noticing her weak shaking.\n\nShe climbed onto me leaning forward. Sweat beaded on her face and her hair line was dark with sweat. She ignored the threads of copper hair that clung to her cheek and fell in front of her eyes. \"I don't think I can stop.\" She lowered herself on to me and pushed me in with her weight. She covered her mouth moaning as she started to bounce and rock.\n\nShe cried into her hand moaning loudly as her b-cups shook, her arm pressing one flat as she held her hand to her face. I felt hot pressure suddenly well up inside me and I grabbed her hips. I didn't have to say anything, she leaned over and kissed me hard, grinding my cock with her hips until it exploded with audible force jetting into her. I groaned vocally as cum flooded her pussy and my cock ached from massive force until it was empty.\n\nPanting and sweaty she lifted off me and collapsed. Her pussy had leaked across my waist and her thighs, everything was slick. She heaved laying on the wet sheets, not moving. I rolled over next to her and moved hair from her face. \"Ready to stop yet?\" I whispered running my nose across her head. She shook her head weakly. \"I'm too tired to keep going.\" She whispered. And then was asleep again.\n\nI slept until almost 9, Liv was out until well after 11. I got up and showered while Liv slept in exactly the same spot and position. What was different was that when I got out, Maggie was waiting in the bedroom. She was in a nightgown that wasn't long enough.\n\n\"What are you doing in here?\" I asked as quietly as possible.\n\nShe smirked, \"I had to listen to her scream all night and this morning; what do you think?\"\n\nI felt myself blush, \"Sorry, but this,\" I pointed to both of us. \"Can't happen.\"\n\nShe giggled quietly and got closer, pushing her chest against me and kissing my neck. \"It's already happening.\" She said softly tracing a finger along my rock-hard shaft under the towel. She leaned up and kissed me softly putting her hands on my shoulders and delicately moving her tongue against mine.\n\nShe made quiet noises into the kiss as my hands felt her dainty sides and moved to her hips. She broke our kiss with a submissive whimper and bit my neck. \"Please daddy I need it so bad.\" She turned around and pushed her ass against me. \"I can be quiet I promise.\" She whimpered in a low whisper.\n\nFeeling her ass against me through the towel and looking down her low-cut neckline at her soft breasts broke me. The little blonde's body screamed with nubile sexuality and I couldn't take it. My hands moved against my better judgement around her waist and up her flat stomach, cupping one of her full breasts through the gown.\n\nShe gasped as my hand palmed her breast and my fingers squeezed gently. She leaned back pushing her ass against me harder, turning her head to playfully bite my jaw. I reached under the gown feeling up her thigh which prompted cute noises from her before I felt her wet, exposed pussy. She moaned vocally and covered her mouth as I played my finger against her.\n\nShe moaned into her hand as I teased her and giggled, \"I'm such a slut.\" My finger slid into her and her knees drooped. She leaned against me panting and whimpering. She reached back shoving her hand into my towel which pulled it loose and grabbed my shaft. She stroked it eagerly, struggling to focus.\n\nShe leaned away from me and my finger slid out. She turned around and pulled one side of the gown off her shoulder then the other, letting it fall away. Her spectacular tan body was completely naked. She wiggled her hips, looking over her shoulder with a smirk, taunting me with her ass. I turned her around and lowered onto my knee pulling her closer. I took a pink nipple in my mouth and sucked. My hand felt her ass and wrapped under it sliding into her pussy from behind.\n\nShe cocked her hips to let my finger work, leaning on me with one hand and moaning into the other. My finger swept over her clit, teasing the hood as I nibble her nipple and cleavage. \"No, fuck, I'm gonna cum!\" She hissed. She grabbed my hair and collapsed onto me as she started to clench, moaning loudly into her hand trying to mute her voice. Her pussy clenched around my finger like a vice.\n\nAs she came down, I lowered her to the floor, still giving slight shudders. On her back she reached up and pulled me down hanging on my neck. Her fit legs were pulled up and open her knees hugging my sides. Leaning on one hand I filled the other with her breast. Her hips slid her slick cunt along my shaft as I tried to process the view I had of this doll-faced slut in heat.\n\nShe pulled my face down and kissed me hard, holding me with her legs. Kissing her back, I struggled to angle myself but managed to push into her. She was so tight, my cock slid in slowly. She moaned aggressively into her kiss, grabbing my hair and pulling it. Sliding in and out slowly at first, I started to fuck her. She moaned hard holding my neck and digging nails into my back as she tried to keep her voice down.\n\nShe broke our kiss and bit my neck hard moaning into me. I knew the bite would leave a mark, but I couldn't care. Her pussy felt so good. I felt her little body flex under me, and her voice was hoarse with effort to stay quiet. She let go of me and covered her mouth.\n\nI slid my cock out and she panted for breath, whimpering to me. \"Does daddy want some ass?\" She giggled and rolled over laying flat on the carpet. I ran my hands over her soft, firm ass and she watched over her shoulder. I ran my hand down her back and moved forward, my legs straddling hers.\n\nMy shaft rested on her cheeks and she moved her hips stroking it with her ass. I leaned over and she met my lips with hers and we kissed hotly as I pulled my cock across her ass and let it hang between her legs. She whimpered in anticipation, grabbing my hair. My tip slid in her folds until I found her opening and pushed in.\n\nHer head yanked away from mine and she moaned into her hand and tried to grab the carpet. I kept myself elevated above her, driving my cock into her pussy. Her ass slapped my stomach with successive pops. She cocked her hips up, pushing into me and I grabbed her hair and yanked. She yelped and covered her mouth, but I didn't care anymore.\n\nI tugged her hair and she raised off the floor and I moved her to the bed. She leaned her arms on the mattress, knees still on the carpet. I leaned in behind her and she arched her back, so my cock could find her pussy again. I covered her mouth with my hand as I pushed my cock in, forcing her walls apart. I groped her breast as I fucked her and moved my hand from her mouth to between her legs teasing her clit.\n\nShe shoved her face into the blanket and moaned into the mattress, I grabbed her hair and pushed her down. The scream faded momentarily but then she started to shake and seize as her pussy clenched on my cock and fluid dripped down my balls. The orgasm tore through her violently for several moments. When it passed I let her head raise up.\n\nShe panted breathlessly still stroking my cock with her hips. She turned and kissed me softly. \"You've got to be close.\"\n\nI ran my hand across her body, \"I'm holding on--but I can't stop.\"\n\nShe giggled, \"Don't hold on for me daddy,\" She said quietly, \"I live to feel you cum.\" She smiled playfully moving her hips and fucking me. \"Fill me up daddy, I need it.\" She reached back and ran her hand through my hair. I sawed in and out faster fucking her back. She moaned, biting her lip. I didn't want to stop, I held on to control of the pressure in me while I kept fucking but couldn't. My cock erupted, I groaned louder than I wanted jerking as cum shot out of me into her in jet after jet. I thought it would never end but I hit empty and slowly pulled myself out of her, cum draining from her pussy as I did.\n\nShe panted with satisfaction and turned to kiss me when I had finished. She raised up, more cum squeezing out as she did. \"Fuck you cum so much.\" She said. \"I'm filled to the brim.\" She smiled at me and put a finger to her lips, and left, cum dripping down her leg.\n\nI looked up across the bed. Liv hadn't moved at all. I didn't investigate, but part of me wondered- if I looked, would she be leaking wet from listening?"
    ],
    "authorname": "DragonLairReads",
    "tags": [
        "cuckquean",
        "cheating",
        "blonde",
        "redhead",
        "skinny",
        "sharing",
        "creampie",
        "reverse cuckold",
        "freckles",
        "holding the moan"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/my-crazy-girlfriend-pt-02"
}