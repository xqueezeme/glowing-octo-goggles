{
    "title": "Busy Fingers",
    "pages": [
        "Hayley and I first met when she and Mike moved in next door with their children almost nine years before. Paul figured it would be polite to invite our new neighbours around for 'get to know you' drinks, and firm friendships were forged between us all on that very night. Mike and Paul found they shared the same slightly dry and ironic sense of humour, an obsessive love of all things automotive, and the same desire to sit on wet river banks and try to drown worms, and so they became buddies on the spot, while of course Hayley and I shared the same affectionate tolerance of our spouses' habits. \n\nAs for the kids, well both Hayley's twin boys and my own son, Andrew, soon seemed to take it for granted that they had two mums and that both houses could be called home. It was difficult, if not at times impossible, to keep them apart long enough to eat, something that occasionally resulted in the crafty little horrors enjoying two dinners. Apart the usual tiffs, when kids swear that their former best friend is now their most hated enemy, their friendships were as solid as those of their parents and seemingly heading for being just as long lasting. They were always together and with only seven months between them they could almost be mistaken for triplets, except that Andrew's hair was just one shade of blond lighter.\n\nBecause of the close bonds between our children, both juvenile and adult, it would have been impossible for Hayley and me not to be friends even if we had wanted it, which of course we didn't. A couple of years older than me and naturally more assertive, Hayley became like a surrogate older sister to whom I could spill all my worries and heartaches and who would burden my shoulders likewise.\n\nThe strange thing is that, even though she is the pushier of the two, she is physically so much smaller than me. She has always reminded me of a little blonde pixie, just clearing five foot tall and with a willow wand figure and a cheeky face, she was like a real life Tinkerbelle with added glasses. She seems so delicate, far too delicate to have the iron determination and resolve that I've seen in her on occasion, and in fact have relied on more than once. She turned into my best friend, my buddy, and a very good one too.\n\nDon't get me wrong. I don't mean that we lived in each others pockets or wandered in and out of each others homes without so much as a polite 'anybody home?' before entering, but we became very close even though we maintained our mutual privacy. That is, until one Sunday when she and I were left alone because the men-folk decided to get all fatherly now that the kids had all become officially teenagers, and take all three on their first fishing expedition. They would be gone all day and well into the evening and so it seemed natural that Hayley and I would also spend the day together.\n\nWhen I called around I found the strains of Bill Haley's 'Rock around the clock' blasting from the open window and it took several knocks and calls before I finally got her to answer. She looked different somehow, but I put that down to a new slim-fit white top and tight pale blue jeans. As usual I was in old grey jogging bottoms and a loose shirt. Not the most elegant attire, I'll admit, but it fitted my laid back mood.\n\n\"Sorry Sue.\" She apologised. \"I've just come across some cd's that Mike put together to play in an old car years ago. I bet we haven't played these since the twins were little.\"\n\n\"Now that I can believe.\" I told her as Fats Domino began to sing of Blueberry Hill.\n\n\"We used to love rock and roll.\" She grinned. \"Music from our parent's time, this is, but I still like it.\"\n\n\"So do I.\" I told her truthfully. \"Seems to just fill you with sheer fun, doesn't it.\"\n\n\"Can you jive?\" She asked suddenly.\n\n\"Well, yes, but not very well.\" I looked at her tight stone washed jeans. \"And you'd better be careful if you're going to jive in those.\n\n\"I don't know why not, they always used to. Let's try anyway.\" She jumped up and rolled up the rug before turning to me expectantly.\n\nHer enthusiastic grin and extended hand were all it took to persuade me, and we spent the next forty minutes spinning and twirling to the sounds of Elvis, Little Richard, Chuck Berry and all the other greats of the late fifties, laughing like drains at our own antics and wondering if we would get ourselves committed if anyone saw us.\n\nEventually the cd ended, and the years started had to tell anyway, so two thirty-something teenagers collapsed giggling and panting side by side onto the supple brown leather of her sofa.\n\n\"Phew!\" Gasped Hayley. \"I'm thirsty after that, how about you?\"\n\nI nodded between breaths and she bounced lightly to her feet once again, leaving me wondering at her stamina as she bent over the player to change the disc on her way to the kitchen.\n\n\"The trouble with Mike is that he wasn't all that good at labelling. There are a couple of discs here that don't give even a hint of what's on them.\" She waved a pair of home recorded cds at me before slotting one of them into the player. \"Never mind, let's play them anyway, that way we'll find out.\"\n\nAs she straightened the unmistakable sounds of 'Tiger Feet' issued from the speakers.\n\n\"Yeah, that'll do.\" She headed for the kitchen, throwing a comment over her shoulder. \"Must be the seventies cd that he thought he'd lost.\"\n\nNow, when Hayley had spoken of needing a drink I had images of a nice hot morning coffee, or maybe even tea, but she came back with two glasses in one hand and a bottle of white wine trapped under her arm, waving away my unspoken protest with a quick imperious flick of her other wrist.\n\n\"Yes, I know.\" She put the bottle and glasses down and went to the cabinet in search of a corkscrew. \"I know it's still morning and we haven't eaten yet, but regard this as the sort of liquid lunch that our hubbies have at work and you'll see that it doesn't matter then.\"\n\nI couldn't argue with that, especially when a plate of pretzels appeared beside my wine, and so I shut up and drank up. By now Slade had replaced Mud and there was no way I could prevent my foot from tapping to their wild invitation to 'Take me back home'. T-Rex followed Slade with 'Get it on' and Hayley refilled my glass.\n\n\"I used to think T-Rex had such a sexy sound.\" She told me.\n\n\"Don't you now?\" I asked.\n\n\"Yyesss.\" She said hesitantly. \"Maybe I just don't like to admit anymore.\"\n\n\"Oh, I don't mind.\" I smiled. \"I'll readily confess that any music that throbs will have me doing the same in short order.\"\n\nHayley laughed. \"I've never heard it put like that before, but I know what you mean.\"\n\nSeventies classic followed seventies classic until disc and bottle were finished and Hayley got up to refresh both. Once again my protests went unheeded, but by then I wasn't protesting too loudly anyway. The music was now pumping classic rock and the wine was generating a nice warm glow, and so what if I was getting very slightly squiffy, I didn't have to drive anywhere. And in any case the conversation was getting sillier than it would normally have done and both of us were laughing more loudly by the minute. \n\nThen Hayley started a seated version of head-banging in response to ZZ Top, and I suddenly realised what was different about her appearance. Her hair was shorter, more a pale straw mop top than anything else now.\n\n\"Have you had your hair trimmed?\" I asked her in surprise.\n\n\"You mean you can see through these jeans?\" She replied, giggling madly.\n\n\"Silly girl.\" I tried to answer before dissolving into laughter, but the rest of the reply was punctuated by fits of giggling. \"I meant the hair on your head, not that down below.\"\n\nWhen our laughter finally subsided and ZZ Top had given way appropriately to Queen's 'Don't stop me now', I just had to ask....\n\n\"But do you trim your pussy hair?\"\n\n\"No, do you?\"\n\nI had to admit that I did, because for a blonde I have quite a luxuriant growth when it's left to its own devices and I quite like wearing bikinis when I can.\n\n\"Well, yes.\" I frowned a little at having to divulge such personal information. \"If I didn't it would show around my bikini, doesn't yours?\"\n\n\"No.\" \n\nThe exceedingly innocent look that accompanied her too brief answer made me suspicious.\n\n\"Okay, I'll buy it. Why not?\"\n\n\"I don't have to trim it, because I shave it.\"\n\nNow that was an answer I didn't expect. I thought only porn stars and models did that.\n\n\"Really! Why?\"\n\n\"Well for one thing I think it's more hygienic, you don't get so sweaty and yucky in summer, and for another thing....\"\n\nShe paused briefly, her face colouring slightly before she went on.\n\n\"And it's so much nicer when Mike touches me, especially when he goes down on me.\"\n\n\"I bet that second reason is the real one.\" I told her laughingly, wondering silently what it would be like.\n\n\"I refuse to answer that question on the grounds that I might incriminate myself.\" \n\nWe both fell apart giggling, me harder than Hayley because I could see her red face.\n\n\"Now don't be shy.\" I waved an admonishing finger at her, trying to pretend I was serious. \"If you like oral sex, just say so. You don't have to hide your little foibles from me.\"\n\n\"I do, I do!\" She laughed. \"I just love a tongue in my trough.\"\n\n\"Me too.\" I told her. \"Makes me cum like an express train.\"\n\nIt must have been the wine combined with the music, but I was feeling much more candid than I should have been.\n\n\"How do you like it done? Do you like your clit sucked, or a tongue inside you?\"\n\n\"Either or both. Having my pussy licked gets me going however it's done.\"\n\n\"Can he make you cum, or is it just a lead up to a good fuck?\"\n\n\"Such language Sue!\" She replied on mock horror. \"The answer is both again, and will you kindly stop talking about it; I'm feeling bloody horny as it is without you making it worse.\"\n\nIt was the wine and the music! Hayley went to fetch more wine while Boston told us it was 'More than a feeling', much to our mutual amusement. When she returned she opened the bottle, refilled our glasses and sat herself down beside me again.\n\n\"Now you tell me what you like. It's only fair.\"\n\n\"The same as you.\" I admitted candidly. \"When Paul puts his tongue in me, or when he licks my clit, he can very easily have me climbing the wall.\"\n\n\"Must make sex difficult with you halfway up the wall!\" She chuckled.\n\nObviously the conversation was not going to get serious, even though the subject was getting more and more personal. I didn't mind, the mirth took the edge of any embarrassment as, for the very first time since we'd met, we openly discussed our sex lives.\n\n\"Haven't you tried it?\" I asked in mock surprise. \"It's brilliant so long as you hang on tight to the picture rail.\" \n\n\"Humph! The next time you try it let me know and I'll come around and watch.\"\n\n\"Ooh! Kinky!\"\n\n\"What else do you like?\"\n\n\"Do you want to know my darkest secret?\" I asked her, filled with a sudden urge to admit to anything.\n\n\"Go on then. You tell me yours and I'll tell you mine.\"\n\n\"I love having my bottom smacked.\"\n\n\"Really!\" She sounded intrigued though clearly surprised, but I didn't care.\n\n\"Really. Sometimes when we're messing about Paul will put me over his knee and spank me, and that gets me so damn randy I'll let him do anything he wants.\"\n\nEven thinking about the delicious pain that came from a good spanking was getting to me, and I could feel my pussy beginning to respond.\n\n\"Mike wouldn't do that to me.\" She shrugged. \"There's something else I'd like to try that he won't do either.\n\n\"What's that?\" For some reason it seemed that she needed me to ask.\n\n\"You know we were talking about when he goes down on me?\" \n\nI nodded encouragement.\n\n\"Well, sometimes he likes to finger me while he sucks my clit because he knows it really get me going, and the best thing he's ever done was one day when he put two fingers up me and then accidentally shoved another one into my bottom. He let it stay there while he licked my clit, and it made me cum really, really hard.\"\n\nThat did surprise me, but there must have been more to it and so I waited for her to continue.\n\n\"But what I'd really like is for him to do it in my bottom, you know what I mean?\"\n\nI thought I did, but I couldn't actually believe she meant it.\n\n\"You mean...?\" I let the question hang.\n\n\"Yes, I'd just love it if he would put his cock in and fuck my bottom properly.\"\n\nShe shuddered as she told me and I saw her subconsciously run her hand hard across the crotch of her jeans in answer to the sensations in her pussy. Talking like this was getting to Hayley just as much as it was me. We sat in silence for a minute or so.\n\n\"Have you ever done it?\" She asked me.\n\n\"No, But I think I might like to try it sometime.\" Actually, that was only a half truth because anal sex wasn't high on my sexual wish list, even though the idea had crossed my mind once or twice.\n\n\"If you do, tell me what it's like, because Mike just won't even try it once.\"\n\n\"I promise.\" I told her, wondering if I ever would.\n\n\"Sometimes I fantasize about it when I masturbate.\" She confessed unexpectedly, once again running the flat of her hand across her denim covered pubes.\n\n\"I'm not sure what I think about when I'm doing that.\" I told her truthfully. \"I usually just get carried away with what I'm doing.\"\n\n\"That tends only to happen to me when I use my vibe.\" Hayley gazed off into the distance.\n\nHer breathing was becoming noticeably heavier from an obviously growing arousal and one hand was now resting provocatively between her legs, just gently cupping herself, the other lying loosely on her thigh. I watched with interest, especially because I too was getting hot under the collar.\n\n\"How do you do it?\" She asked me suddenly.\n\n\"How do I do what?\" I asked unnecessarily, knowing exactly what she meant and feeling embarrassingly willing to explain.\n\n\"How do you bring yourself off? I mean do you use a vibe, or your fingers, or what?\"\n\nI considered what to say, mainly because I don't have a vibe, or even a preferred technique, it's just whatever I feel like doing at the time, although lying with my legs apart and two fingers massaging my clit is by far my most common method. Hayley interpreted my pause as reluctance.\n\n\"I mean, I love to play with my clit, but sometimes, when I'm nearly there I like to cram a couple of fingers right up inside myself.\"\n\nShe stopped talking, but her fingers were clutching firmly at herself through the material of her jeans actually, and I couldn't help but watch.\n\n\"God, but Mike's in for a session when he gets home.\" She exclaimed. \"I feel so bloody horny I can hardly wait.\"\n\nHer hand had now begun actually massaging her pussy through her clothing.\n\n\"Sometimes.\" She returned to the subject of masturbation, her voice sounding tighter from her arousal. \"Sometimes I like to roll on my side and push a finger inside my pussy from behind, and then reach between my legs with my other hand and put another finger up from the front. Does that sound too weird?\"\n\n\"No, it sounds like fun actually.\"\n\nI'd never tried it, and I'm not sure I have the required suppleness, but I can see how it would work. \n\n\"If you do it, pull your hole open with the two fingers when you cum and you'll keep cumming for ages.\"\n\n\"I'm not sure I could reach.\" I told her, the idea triggering all sorts of beautiful feelings inside me.\n\n\"Try it.\" She was rubbing her crotch quite unashamedly now, playing with herself through her clothes and staring into the far distance. \n\nWe sat there in silence for a while as I watched Hayley stimulate herself, rubbing and massaging her pussy and occasionally licking her lips, her breathing now clearly audible. I didn't know what had triggered all this with her, but she was turning me on something awful, and Paul was also going to be in luck tonight. I could feel my own lower lips opening and dampening the insides of my cotton briefs.\n\nI thought at first that she would play for a minute or two and then sort of realise what she was doing and stop, looking embarrassed and guilty, but as the seconds ticked away I came to the conclusion that things had taken over and that she was caught up in her own need. \n\nThat was an awkward moment. I didn't know if I should say something, if only to remind her that someone was there, or to just let her get on with it and see what happened. I watched her actions with a flutter of envy in my chest, but then I noticed that my own hand was cupping my breast over my shirt, and then I just kind of let things ride. Anyway, it felt so damn sexy to touch my own breast while someone else was present, even if it was over my clothes. \n\nAs I watched Hayley closed her eyes and leaned her head back on the sofa, letting her feelings take over entirely and ignoring me completely as she squeezed and massaged herself. I wondered how far she would go, and if she just might bring herself off that way. The idea that my friend just might make herself cum while I was there gave me a mini adrenalin rush, making my heart beat faster and my mouth go dry. My other hand wandered down between my legs.\n\nIt happens that I'm left handed, and because I was sitting to Hayley's left I was able to stroke myself without the movements attracting her attention, and I sat beside her surreptitiously doing exactly what she was doing so much more overtly. While ever she had her eyes closed I thought I could play with myself without embarrassment, though I suppose it that was really me justifying my actions to myself. I would, I told myself, stop the second her eyes popped open.\n\nGod, but it felt so damn good. My jogging bottoms are thin and soft and it was almost like feeling my naked flesh as I sat there. I could feel that my pussy was swollen and gaping and I just knew that I was sopping wet. It was so exciting, so daring, and so sexy to have one hand on my breast and the other between my legs and not be caring that I had company. Soon I was carried away just as much as Hayley.\n\n\"Oh Sue.\" \n\nHayley's voice sounded almost guilty, and as my eyes swivelled around to look at her I saw a slightly apologetic look on her face as she watched my hand playing between my legs. My fingers stopped abruptly and I gazed at her in shocked embarrassment, but then a little smile fitted across her features and I noticed that she hadn't even paused in her play.\n\n\"Don't stop Sue.\" She pleaded quietly. \"Then I won't have to.\" \n\nI nodded and we both knew that we would keep going to the end.\n\nI looked over at her wondering what was going to happen next, but then, still looking straight at me she unbuttoned her jeans and pulled the zip down. I wanted to look down at her but she had me pinned in eye contact and I just stared straight back into her face as, out of the corner of my eye, I saw her hand find its way inside the pale blue panties revealed in the vee of her open zip. She hadn't pulled her jeans down at all, she just burrowed her way inside until a little gasp and a tremor in her face told me that she had found her pussy. I felt adrenalin surge through me once more as she leaned back again, closed her eyes and started to play.\n\nThere was no mistake now; Hayley was masturbating, her fingers moving inside her clothes with the express intention of giving herself pleasure, and if she was doing it there was very little reason why I shouldn't give way to my own urges and follow, if only I could get up the courage.\n\nI wasn't feeling quite as uninhibited as Hayley, not at that moment anyway, and I'm not sure if I could have coped with having to do something as blatant as unfastening jeans and pulling a zip down, but I was able to slide my hand discreetly under the waistband of my joggers without having to do anything that could possibly be interpreted as undressing. I know that might sound silly and pathetic, but with my heart racing at my own boldness already, it probably made the difference between me following suit and backing away from the whole scene.",
        "My hand found its way first under my waistband, paused a moment while I gathered my nerve, and then wormed its way inside of my briefs, the sensation of my pubic hair on my fingertips feeling suddenly so much more intense. I paused again with my fingers resting in my fuzz as I looked carefully at Hayley, wondering if she realised what I was doing. Her eyes seemed to be still closed, though it was difficult to know for sure through a window reflected in her glasses, but her mouth was slightly open and she showed no sign of feeling anything outside of the sensations she was generating in her pussy. I pushed my hand deeper into my briefs, letting out a tiny involuntary gasp as I finally found my target. I shot another anxious glance at Hayley before letting my fingertips begin to play earnestly with my clit.\n\nIt was confusing and exiting, part of me not caring about trying to make myself cum in Hayley's presence while another part of me was already squirming with shame and embarrassment at what I was doing. Looking closely for any sign that Hayley might open her eyes I began my customary circular movements on my button, rubbing softly around and around my hood to tempt my clit out from under its cover.\n\nHayley moved her free hand from her leg, the sudden movement making me jump nervously, but she was only doing it to touch her breast, just as I was already doing. But while I was simply holding my boob cupped in my palm, Hayley immediately began kneading and massaging hers, clutching it tightly in her fist before pressing the flat of her hand against it as if to make her pert little breast smaller still. \n\nOnce again I followed suit, pressing my hand harder onto my own breast, squeezing and manipulating it, feeling my nipple hard and erect beneath my clothes. I wanted to do more and, still looking carefully sideways at Hayley, I slid first one finger and then two under the fabric of my shirt and into my bra. My flesh felt hot and eager to be touched, and I pushed my fingers further in, finding and rubbing my bullet of a nipple. The sensations were fantastic, both mentally and physically, and I slipped my entire hand inside my bra to enhance the feeling. Now the fingers of both hands were busy, rubbing and stroking the different parts of me simultaneously, and my breathing began to deepen as arousal took over.\n\nAgain Haley's hand moved, and once again I flinched, this time guiltily pulling my hands from both between my legs and from my bra, but once again it was a false alarm. Her eyes remained closed and she ignored my presence, seeking to work her hand under her own top and to fondle her breast. \n\nBut her top was much tighter than my shirt and she had to push it up in order to get beneath it, bunching the cloth into a band under her bra. That didn't make things any easier and, after struggling for a few moments to wriggle her hand under the constricting material, she finally gave up and pulled it back down. \n\nI felt a twinge of disappointment at her apparent admission of defeat, and this was turned into one of momentary alarm when she also withdrew her hand from her jeans. My own hands were now folded innocently over my stomach because I didn't have the nerve to continue alone, but I was so damn randy and I really didn't want things to end. My mind was caught between trying to figure how to make her continue and how to get up the nerve to do it myself if she didn't.\n\nBut once more I needn't have worried. Still keeping her eyes firmly closed, as if being unable to see her companion allowed her to pretend she was alone, she removed her glasses and placed them carefully but blindly on the table beside her, her fingers cautiously walking the gap between sofa and table, then she crossed her arms and grasped the hem of her top, pulling it up and over her head in one smooth movement and the discarding the unwanted garment on the floor beside her. I watched in delighted amazement as she then leaned forward to unhook her bra, letting that also fall onto the floor. \n\nShe opened her eyes for just a moment to look across at me and flash me a shy little smile before closing them and resting back on the sofa once again to leave me staring at her naked torso with surprise and pleasure. Yes, we'd been friends for a long time and yes, I'd seen her topless before, but that was on a beach and in an entirely innocent context. This time the context was sexual and the fact that she was able to be that free in my presence made me feel good inside. Don't get me wrong, I'm straight so I didn't fancy her, but it was still exciting and daringly intimate in a strange but nice sort of way.\n\nI was seeing my friend in a new light, looking at her from a completely new point of view, and I was immediately struck by her tan, almost as if I'd never noticed it before. It wasn't a heavy browning, but a kind of vibrant golden tone that beautifully set off her blonde locks and the white mark of her bikini outlined breasts. Her nipples were small with a well defined dusky pink aureole and suited her build exactly. She was beautiful by any standard, and I suddenly saw in her a very sexually alluring woman.\n\nShe thrust her right hand back inside her jeans, raising her bottom briefly to get herself some room, working her fingers under her panties and sighing quietly as she found her pussy once more. Her other hand had now found her naked breast and was rolling the nipple between her fingers, squeezing and tugging it slightly to turn her breast into a lovely little pink capped peak.\n\nI watched unashamedly, relieved to be pushing my own hand back under my waistband and into my briefs, searching for my wet and puffy cleft again and the pleasure I knew it would give me. My two fingers found my button and I began rubbing it gently, unconsciously matching my movements with those of my companion.\n\nFor a few minutes we sat side by side, silent apart from occasional little gasps of pleasure and excitement, and played with ourselves. Hayley sat with her head back and her eyes shut, making the leather of the sofa creak by wriggling occasionally against the constraints of her jeans, while I sat gazing at what we were both doing and taking defiant enjoyment from our sudden lack of inhibitions. Then, opening her eyes and looking directly at me for just a second, Hayley took her hand from inside her panties, gave a slightly embarrassed shrug, hooked her thumbs into her jeans and pushed them down before raising her legs into the air and pulling them off completely.\n\nI thought for one delicious moment that she was about to strip off completely, because when she straightened from discarding her jeans she hooked her fingers into her panties as if that last wisp of a garment was about to join the rest. But instead she hesitated and then, as if courage had suddenly deserted her, simply adjusted them, seating them more snugly around her pussy. Even so, dressed in just tiny blue panties that were hardly more than a thong, she was all but naked and very, very beautiful. \n\nOne hand now lay over those panties, cupping her pussy, letting her fingers mould and fondle her flesh, while the other went back to doing likewise to her naked breast. Her legs were spread wide now, as far open as she could get them while seated next to me and so wide that her knee was bumping softly and regularly against mine as her hand created movement. I deliberately opened my own legs that little bit wider, just to ensure that the tiny erotic contact continued, strangely hoping that Hayley could feel it too.\n\nIt was difficult to reach right down inside my undies to find my entrance, so I settled for playing with my clit, a little bud that was now peering hard and aroused from under its hood, skittering my fingertips over it as lightly as my panties would allow, pushing them away with the back of my hand as I played. I could feel just that vague warmth building within my pelvis, a beautiful little fire that I wanted to stoke into the fierce blaze that could soon consume my body. I wasn't sure how Hayley would react, or even how I would feel, if I climaxed beside her, but I knew it just might happen.\n\nHayley's breathing was deepening, happily revealing that she too was feeling the effects of arousal as she rubbed hard along the length her pussy, pushing her fingers and her panties a little way inside herself and tightening the flimsy blue material until it outlined her labia. I couldn't help myself, I leaned forward to watch, nearly trapping my own hand between my legs but feeling a tingle of excitement at the sight of Hayley's busy fingers.\n\nI leaned back, the image of her outlined pussy clear in my mind, and opened my legs once more, battling with the restrictive waistband as I felt for my pussy once. It was so difficult to masturbate effectively under layers of clothing and I wondered if I had the courage to do as Hayley had done and strip down to just my own underwear, though even that had it's limitations. Then I wondered if Hayley had intended to take everything off, but had been put off by my still being dressed. I gathered my nerve and determined to do something about it.\n\nIt took me a few moments and several deep breaths, but then I began to undo the buttons of my shirt, still stupidly trying hard not to let Hayley know what I was doing. Why I felt the need to do that I'll never know, after all, she was bound to notice the minute she opened her eyes. I could hardly hide the fact that I'd taken most of my clothes off, could I? \n\nBesides, I had already admitted to myself that I was doing it as much to persuade her to take that last piece of clothing off as I was for my own benefit. But then, I also don't know why I so wanted to see her naked, because girls don't turn me on. The only thing I can think of is that it was the childlike thrill of being naughty, of doing something that we shouldn't be.\n\nWith my buttons finally unfastened I took a sideways look at Hayley and leaned forward to slide it from my shoulders and pull it loose. Another quick look to make sure she had her eyes still closed and I reached around to unclip my bra. By now my heart was pounding so much I was sure she'd feel the movement through her seat, but I managed to do it and my bra joined my shirt in a heap beside the sofa. I felt so daring, so bold and yet so vulnerable. I was determined to go further, but it took me all my bravado to stop myself from covering my breasts with my hands and just sitting there frozen.\n\nHayley sprawled beside me, her head resting on the back of her seat, her eyes closed but her lips slightly parted, sitting with her legs spread as wide as she could and with her fingers still kneading her pussy through the thin material of her panties. I looked at her hard, making sure that she was still unaware of my actions, and at the same time plucking up the courage to lose my joggers. She looked beautiful, so serene and so sexy, giving tiny gasps of pleasure as her fingers massaged her vulva. I retook the decision; I was going to do the same.\n\nOne last look and one last deep breath. I hooked my fingers into my waist, lifted my bottom and pushed, intent on getting my joggers out from under my behind in one go, so that I could remove them completely. But the gremlins struck and as I pushed I felt the fingers of one hand snag in the top of my panties, dragging them down at that side, and doing it too quickly for me to react. I sat down in a panic, the jogging bottoms gathered at mid thigh but with a crumple of red and green stripes bridging them to my hip where just one half of my briefs had tried to follow. I prayed that Hayley wouldn't look.\n\nShe sat with glamorous blue silk covering her shaven pussy, relaxed and tranquil, while I crouched beside her, my eyes wide with alarm, and with my sensible striped underwear pulled down to reveal a good portion of my pubic fuzz to whoever wished to look. The contrast could not have been greater. \n\nFor a few seconds I froze, heart pounding and mind racing, wondering how best to quietly get out of the mess I was in. I wasn't sure which way to go, but there was really only one practical answer and, bizarrely, as soon as I recognised the fact I knew it was the solution that I wanted anyway. I lifted one hip slightly and then raised my legs to slide both joggers and briefs down together, pulling them from my feet before lowering them, throwing my clothes to the side and to allowing myself to rest back, totally naked and panting with fearful excitement.\n\nI cupped my breast in my hand, squeezing hard and sending a shiver of enjoyment down my spine, resting my other hand flat on my stomach, wanting to touch myself again, but not yet able to take that last step. My mind raced, proud of my boldness but scared of what was happening, and my heart hammered with pure exhilaration, but most of all my pussy throbbed with need, wanting to be touched, to be rubbed, massaged, or pretty much anything that would make my embryonic orgasm a reality.\n\nBeside me Hayley moved and my head shot around to find her eyes open and gazing at my body, a delighted smile on her face. She immediately hooked her fingers into her waistband and eased her panties down, lifting first one leg and then the other to remove them, not caring that in doing so she revealed the pale shaven lips of her pussy and the deeper pink of her slit. She was so at ease with herself that I no longer worried about her looking at me, we were just two women being naked in each other's company.\n\n\"Thank you.\" She told me as she tossed that last remaining garment away. \"I wanted to, but I just didn't have the bottle to do it first.\" \n\n\"I didn't think that I had either.\" I told her, more truthfully than she realised.\n\n\"Can we both go all the way?\" She asked unexpectedly, catching me completely wrong footed.\n\nI stared at her, confused and anxious, half wondering if she meant what I dreaded she might.\n\n\"No!\" She said loudly, suddenly comprehending. \"I didn't mean that. I mean do you think we can make ourselves cum while we're together.\"\n\nI giggled at my own mistake, happy and reassured that she wasn't a closet bi after all, and now wanting without doubt to do just as she had suggested.\n\n\"I thought that's what we were going to do anyway.\" I told her.\n\n\"Me too, but I was just checking.\" \n\nWe smiled at each other. Nothing mattered now. We had explicitly admitted to each other what we wanted to do and so both guilt and embarrassment promptly disappeared.\n\n\"Shall we?\" I asked, still not quite confidant enough to take the lead.\n\n\"Let's!\" \n\nHayley settled herself in her seat, opened her legs once more and, with me looking freely at the visible top part of her smoothly shaven slit, she ran the flat of her hand down her body until her fingers disappeared over the edge of her pubic bone. I could only see the top of her labia and her rhythmically moving knuckles, but I knew she was rubbing her clit and I finally got the nerve to follow suit.\n\nThere was no holding back anymore, we both watched each other play, our gaze roaming openly up and down each others bodies. Sometimes we would make eye contact and we would give each other a little smile of pleasure and encouragement, but mostly we watched what we were each doing, the visual stimulus adding to the sensations generated by our fingers. \n\nBoth she and I were had our other hands over our breasts, reaching across our chest to the furthest one; Hayley playing mainly with her nipple, tugging and rolling it as she had before, while I massaged the whole full globe, gripping the soft flesh between my palm and my fingers, squeezing and manipulating it, feeling the lovely sensations add to those in my pelvis.\n\nWe sat like mirror images, one hand below and the opposite one on our boobs, silent except for tiny noises of enjoyment and still but for the motions caused by our fingers and the tiny all over tremors those fingers generated. We were both absorbed in what we were doing and excited by not doing it alone for once. \n\nI began to get hot -- God did I begin to get hot. The sensation of my fingers rubbing increasingly hard and fast at my clit and the gorgeous hurt that my hand was causing in my boob as I twisted and pulled at it, were getting me higher and higher, even without seeing Hayley twitching and moaning beside me. I'd never had an experience like it. I knew I wasn't going to cum very quickly, maybe I was still a bit too shy for that, but it had all the makings of an earth-shaker when it did arrive. \n\nWe sat there, our legs sprawling half open, knees touching and preventing us from spreading them fully wide but at the same time providing the sensation of a special contact, of an almost innocent intimacy as we brought ourselves closer to cumming. But it wasn't quite enough. Both of us wanted better access, more freedom for our flying fingers and we were pushing against each others knees in an instinctive need to open wider.\n\nI'm not sure how, maybe I lifted my leg slightly, maybe Hayley wriggled hers below mine, but suddenly her thigh had burrowed under mine, stretching wide apart and letting me open mine also. For a moment it was uncomfortable and I wondered if my weight was hurting Hayley, but then my heel found purchase on the leather between Hayley's legs and I planted my foot there, lifting the weight of my thigh from her but letting it fall further open to rest against hers higher up. I looked at my foot, resting so close to Hayley's pussy, and glanced up at her face, seeking reassurance that it was alright to be there. She caught my glance and smiled, giving just a barely discernable nod of assent as we settled into our new and closer position.\n\nInstinctively we shuffled slightly nearer still until our bodies came into contact, our hips just touching lightly and my upper arm moving against hers as we played with our boobs. The contact was wonderful than before, making our masturbation a kind of joint venture instead of just something we each were doing separately but in each others sight. I felt a thrill of intimacy from the contact, a daring naughtiness that made me even hotter. \n\nSoon Hayley's breathing got short and harsh, little gasping breaths as her orgasm came closer. She closed her eyes, squeezing them tight, grimacing and licking her lips as I watched. Her fingers were flying over her clit, rubbing frantically as the sensations became stronger, her body moving jerkily of its own accord, the movements turning me on even more as I watched her get ready to cum.\n\nThen she leaned forward a little to reach further, her fingers thrusting deep into her, the little wet noises easily audible as they moved so rapidly in and out. She let go of her breast, reaching out automatically and grabbing at my leg as it draped over hers, strong fingers biting high into my thigh two thirds of the way from knee to crotch. I watched with amazement mixed with both alarm and thrill, feeling her hand on my skin only inches from my own naked pussy.\n\nI could feel the beginnings of my orgasm, the warm spot inside me just beginning to expand getting ready to burst and erupt into climax. It would be lovely if I could come with my friend's hand still resting on my thigh, and even better if we could both cum together. I rubbed harder at my clit, gripping it between my two fingers as they rubbed up and down, trying to make myself cum, looking across at Hayley's face at the same time.\n\nShe was obviously nearly there, her eyes were screwed up tighter than ever and she was biting at first her lower lip and then her upper, her mouth opening and closing to vent the little gasps of pleasure that she was now continuously making. \n\nI let go of my breast, placing my hand over hers as she continued to grip tightly onto my leg in an instinctive effort to maintain the contact. I didn't want her to touch me, that wasn't my thing, but I was getting such a kick from having her fingers so close to my pussy that I wanted to be sure in continued. I even slid my hand sideways from over hers to bridge the gap between her fingers and the closest of my pubic hair, making a kind of proxy contact and feeling wickedly pleased at the sensation.",
        "We were both in a race to the finish, Hayley ramming her fingers hard and deep into herself while I rubbed frenziedly at my clit, and both of us now gasping and whimpering with pleasure. We were so nearly there.\n\nIt was Hayley who came first, jerking forward suddenly and letting out a long groaning cry as she pushed her fingers right up inside her, slamming them repeatedly into her pussy, her cupped hand pistoning back and forth to reveal then hide her fingers as I looked down over her pubes. Even her palm was glistening wet with her juices and the noise of wet hand smacking against wet pussy sounded beautifully sexy. Her eyes now shot open as she came and stared out into the distance, the glaze of sexual release preventing her from focusing her sight on anything specific. She jerked and shuddered, crying out loudly, unrestrainedly, as waves of pleasure ran through her, the cries tapering of to little whimpering moans as her orgasm ran its course and slowly subsided. \n\nEventually she let out a long moaning sigh and her grip on my leg relaxed to signal the end of her climax. She looked over at me and smiled languidly. I'm not sure, but I think it was that slow, sexy, dreamily happy smile that did it for me and my own abruptly orgasm erupted inside me.\n\nIt was, as I had expected, a massive orgasm, my whole body seemed to be flooded with sensations as surge after surge of white hot pleasure ran through me. Like Hayley I cried out, a single long cry of pleasure that rose and fell with the waves of ecstasy I was feeling. I arched my back, my mouth falling open and my toes curling tightly, the fabulous sensations making me dig my fingers into my breast as hard as I could to mix the pain with the overwhelming pleasure. I thought it would never end, wave of sensation followed wave until I felt myself nearly borne away on them, only vaguely aware of my surroundings, but always sharply aware of Hayley's very welcome presence. \n\nEventually the waves declined in intensity and I returned reluctantly to the real world, feeling spent and exhausted, but intensely happy and proud of myself, grinning like the proverbial Cheshire cat as my orgasm gradually faded away.\n\nFor several minutes we sat panting, half laying half sitting, side by side on the sofa. I was both struggling to get my breath back and at the same time fighting to cope with the myriad thoughts and sensations that flooded through my mind. I'd never in a million years have dreamed of masturbating in anyone else's presence, but I just had, and not only that but it had given me the biggest thrill I'd had for years. \n\nI let my hand relax on my pussy, as if too lazy to move it, my other hand sliding from my breast to lie by my side, resting between both mine and Hayley's hips, in contact with both but deliberately touching neither. My leg was still draped over hers, and I still enjoyed the contact, but then she began to wriggle it out from under and I reluctantly lifted it away, understanding and not wanting to continue her discomfort. Her hand lost contact with my thigh, and then, as we settled more comfortably side by side, I felt her fingers interlace themselves with mine between our two bodies, and gave me a sort of quiet companionable feeling.\n\nWe sat like that, holding hands and still naked, for what seemed a long while, each deep in their own thoughts, trying, on my part at least, to come to terms with what had happened and not wanting to talk about it until we understood it. \n\nWe shot glances at each other from time to time, and all of a sudden our sight locked and we gazed directly into each others eyes. Hayley's eyebrows raised in a kind of 'how the hell did that happen?' look, and I grinned my own lack of an answer in return.\n\n\"Wow!\" She exclaimed all at once. \"I didn't expect that.\"\n\n\"Me neither.\" I agreed.\n\n\"Good though, wasn't it?\"\n\n\"Oh, it was good alright.\" I told her, my chest still heaving slightly from the effects.\n\n\"Good enough to do again?\""
    ],
    "authorname": "Otazel",
    "tags": [],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/busy-fingers"
}