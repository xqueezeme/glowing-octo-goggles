{
    "title": "We'll Go No More a Roving",
    "pages": [
        "I try to post a story every 4th, to honor those who've served. This one cuts a little closer to the bone than most. The usual shoutout to Rick at Bluedevil, who gives me good ideas and I hope you all enjoy - DT \n\n*****\n\nWE'LL GO NO MORE A ROVING\n\nIt was pitch-dark as a 160th Special Operations \"Night Stalker\" MH-53J Pave-Low ghosted in and fast-roped three squads of special operators down to the Iraqi desert floor. I was covering the action in an AH-1E Cobra. \n\nI was a thirty-eight-year-old CW2 Army Reserve snake-driver, called up because Saddam got greedy. It was my first real combat mission and I was excited. I had been flying the Cobra since my active service days. But until the call-up for Desert Storm, the most perilous place I'd ever invaded was the tropical island of Granada. \n\nThe AH-1E was an upgunned version of the old Vietnam era Huey Cobra. The three-barreled M197 20 mm Gatling put out 700 rounds per minute and the two M261-19 tubes under its stubby \"wings\" spewed gales of 2.75-inch rockets. Needless to say, my snake could deal out serious hurt. \n\nThe mission was supposed to be clandestine. At least, that's what the people at CENTCOM had in mind. So, you'd think they would have noticed the regiment of Republican Guard parked in the drop zone. Still, as they say, military intelligence is to intelligence as military music is to music. \n\nThe Iraqis came swarming out of their bivouac like ants out of a kicked over anthill. The Night Stalker in the Chinook had guts. He saw that he'd just deposited twenty-seven snake eaters in the middle of a thousand utterly astonished Iraqis and he hurriedly landed; ramp down. \n\nOur guys needed time to board. I bought it for them. The Cobra's rockets and fragmentation rounds kicked up a sandstorm as they walked through the Iraqis. Their return fire felt like I was on the receiving end of a Fourth of July celebration. An RPG eventually got my tail rotor and the snake began to spin down like a sycamore seed. \n\nI saw the Chinook lift off. But there was no way out for me. My last thought was, \"Jane.\"\n\n*****\n\nI joined the Army because I was an unmotivated loser. I'd spent four years working to a single goal - graduation. I hadn't thought through any next steps. A lot of kids are like that. They don't have a clue about adult life. So, they just plod along like they're nine years old, waiting for somebody to tell them what to do. \n\nI chose general studies because I didn't want the education process to get in the way of my gaming and smoking the ganja. The problem was that employers are not exactly beating down the door to hire kids with a bachelor's degree in nothing useful.\n\nI spent the summer after graduation hanging out with my old gang. Then my parents started asking me uncomfortable questions like, \"How do you plan to support yourself?\" They reinforced their message by cutting off my money supply. \n\nMy friends got tired of me sponging off them and so at the end of the summer I drifted into a recruiter's office. I liked easy answers back then. I figured I could kick the can down the road far enough to grow up a little. \n\nThe Army was not a popular choice in the post-Vietnam era, and they were having a hard time filling their quotas. My score on the ASVAB rang the bell. So, they gave me my choice of specializations. I was a college grad and I had also gotten a ninety-seven on the Army's Flight Aptitude Selection Test. Of course, I signed on the dotted line for Army Aviation. How cool was that??!! \n\nThe first three weeks were rough. But I was six-two and a hundred-and-ninety-pounds of hunka-hunka-burnin' love back then. The physical part was no problem. But, the lack of sleep nearly killed me. I actually enjoyed being told what to do, usually at the top of a beefy sergeant's lungs. I really had no alternative anyhow. So, I threw myself into becoming all I could be - to coin a phrase. \n\nAfter ten weeks of Basic and six more of Warrant Officer Candidate school. I found myself at Fort Rucker. My fledgling ten months in flight training taught me a few important things. First and foremost, I discovered that I wasn't a total waste of oxygen. I could do things that I had never guessed I could do. \n\nThat experience helped me see where I fit in. I had better than normal vision and my nerd-like obsession with technical detail made me an excellent rotary wing pilot. I knew that I was accomplishing something meaningful. And because of that, I didn't feel like such an unmotivated loser. \n\nNow, suddenly I had respect. I could fly a helicopter with the best. That really was the first time that I viewed myself as a worthwhile human being, and perhaps my lack of self-esteem was what had inspired my extensive assortment of bad habits. \n\nThe Army gave me a choice of airframes and there was an AH-1 Cobra attack helicopter slot open. I was top of the class, So, I grabbed it. I mean, what isn't there to love about an aircraft that packs a multi-barrel Gatling and pods full of Hydra rockets. It took some time to get up to speed. Then I was assigned to the 229th Aviation Brigade at Fort Campbell. It was part of the 101st back then. \n\nThe senior guys called us new WOs \"spots\" as in, \"Put my coffee in that spot, son.\" But I was a genuine army aviator and I was totally full of myself. What did I know back then? I had only just turned 23. \n\nThe 1980s were a boring time to be a snake driver. My only \"combat\" experience was on the island of Grenada. The rest of it was practice and drill. We rehearsed every type of joint operation and of course we honed our flying skills. \n\nI got the automatic bump up to CW-2 after a year. It took me out of my role as squadron manservant and brought me a nice increase in flight pay. I did the minimum six years and then transitioned into the reserves. I had been in for a total of seven and a half years. But those years had changed me from a boy into an almost 29-year-old man; with a basic sense of purpose. I could thank the Army for that.\n\nMore importantly, I knew how to take control of my future. I liked mentoring and leadership. College teaching seemed like the best way to live that life. It was familiar territory for me, and it paid a lot better than Army aviation. It also gave me tons of personal freedom. \n\nI got a veteran's-preference, fast-track doctorate in business from a little Institute on the Charles River. I had always been smart enough. But getting a degree from a place like Sloan would have been inconceivable back in my general studies days. \n\nStill, there is nothing like self-discipline and six years of decision making in life-or-death situations to give you the confidence to succeed. The degree opened the door to my future, a junior faculty position at Wharton. I was king of the world at the ripe of old age of 33. \n\nI had been teaching for two years and I had built up a cult amongst the students. A good looking, 35-year-old prof with a MIT pedigree and swashbuckling credentials had a unique cred with a certain type of student, both male and female. \n\nJane was one of those students. I first laid eyes on her in a graduate honors seminar on policy science. That was my area of alleged expertise. She was beyond perfection. \n\nEvery guy has an image of their ideal mate. It's a compilation of experiences, tastes and desires and it's different for every man. Sitting in front of me was a woman who ticked every one of my personal boxes. \n\nShe had a flawless, perfectly proportioned face. She was wearing an expensive and very tasteful outfit. And more pertinently she had a body that you wouldn't imagine existed in the physical universe; only your fevered dreams. \n\nMy attraction to her was instantaneous and absolute. I wanted her in \"that\" way. Of course, I knew \"that\" way was totally out of the question. \n\nThe university had a strict \"fraternization\" policy and I would've found myself out on the street without references if anybody guessed what was going on in my mind. So, the shields slammed down, and I was a rock and an island; impervious to the threat that this unearthly beauty represented. \n\nUnfortunately, Jane sat in my class for an hour a day three days a week. And, it was hard to breath around her, let alone interact. So, I couldn't bring myself to call on her, even when she had a question. I know that sounds weird. But that was the effect she had on me, and it was my only way of coping.\n\nWorse, I had to do an individual \"working\" session with her each month. It was an honors class and I was supposed to give every student personal feedback. I might have been a little too hard on Jane during those meetings. But it was pure agony staying intellectually detached with the erotic scent of her perfume wafting around me. \n\nSo, she and I struggled through distant conversations and outright irritation, garnished with a subtext of pure yearning. She was used to men laying themselves at her feet. And my lack of responsiveness was read as cold, arrogant, patronizing S.O.B. In return she was a total raging bitch. \n\nThe semester ended and the summer began. Jane graduated. So, she was fair game. But she was also out of my life. Still, I couldn't stop thinking about her. I kept telling myself that she was a canoe and I should move on. But I wasn't kidding myself. I knew that I would regret it for the rest of my life if I didn't at least try. \n\nSo, after a few surreptitious inquiries I found out that she lived above a watering hole near the Penn campus and that she hung out there most nights. I put on my best \"older dude hanging around a college bar without trying to look too much like a pervert\" duds, white linen shirt, whip cord khaki pants and an old Harris Tweed sport coat. That coat had been my comfort blanket for as long as I could remember. \n\nThen I hopped into my Mustang and went down to the bar. Of COURSE, Jane wasn't there. There is no comparable experience to standing around a neighborhood watering-hole while the locals check you out. I hesitated, trying to figure out where to sit. \n\nLuckily several of my former students were at one table and they called me over. We sat under the brick arches and killed several pitchers while we discussed international market positions for emerging technologies and other fascinating topics. \n\nNobody but a Wharton student could be that nerdy. \n\nIt was getting late and Jane hadn't showed. I was ready to drop four twenties in the pot when she made an appearance. Unfortunately, she was clinging to the hand of the Greek god Adonis himself. \n\nI don't know where she found a dude like that. He was so perfect he didn't look real. Maybe she bought him directly off the pages of GQ? \n\nI have always been a believer in the benefit of situational awareness, and this was a great chance to scope out the competition. The two of them made their way over to a private table in the corner. I sat back down and ordered another pitcher. \n\nMy table was full of students. It made excellent camouflage. I was only ten years older, so I blended right in. Not that I needed cover since those two were so clearly into each other that there was nobody else in the room. \n\nJane was doing the leaning-in, deep attentive looks, overt sexual body language and all the other little touches women use when they are spinning their web. The odd part was that I could have sworn that she would glance in my direction every once in a while. \n\nThe guy was clearly hooked. He kept grabbing her hands across the table, gazing deeply into her eyes and at one point he actually kissed her fingers. I thought to myself \"this is serious\". \n\nThey seemed to be having an earnest conversation about art, or literature, or some of the other philosophical rubbish that guys spin to convince a girl of Jane's caliber that he is the sort of sensitive fellow that she ought to spend the night with. \n\nJane was dressed informally for a change, in skintight jeans tucked into a pair of expensive knee-high boots, with a simple red cashmere V-neck sweater that showed off about a half foot of cleavage. \n\nHer date was most probably a student. The dude was gracefully tall, willowy, incredibly handsome and clearly an aristocratic blue blood, none of which I was. He had on the full Ivy League regalia, topped off by topsiders and no socks for God's sake! \n\nMeanwhile, I sat there in the middle of all the background noise doing a damage assessment. They talked as they drank. They consumed a couple of pitchers as the evening wore on and they seemed very much in love. \n\nShe leaned across the table several times for a lingering, tongue swapping kiss and he was massaging her tightly encased upper thigh throughout the entire time. \n\nI thought, \"Did she just glance at me again?\"\n\nI was about at the end of my rope watching that show. But I knew that a stunning creature like Jane wasn't going to be an easy catch. After an excruciating period, they got up and left; with her clutching his arm between her two magnificent breasts. Since her place was right upstairs, I was pretty sure that they wouldn't be walking far. \n\nThere were no lights on in her apartment. But I heard loud moaning as I made my way back to where my car was parked. That dampened an already dark mood.\n\nI was back at the same bar bright and early the next evening. Jane was there with a different guy. I saw a theme emerging. My guess was Penn football, big, muscular and ruggedly handsome, with the three-day stubble favored by all of the young studs. \n\nIt was a relief In some respects, since it meant that last night's lover wasn't exclusive, but Jane obviously had her pick of the campus litter. She seemed to dress for whatever accessory she had on her arm. \n\nTonight, it was full-out sorority babe. She was in a very short mini dress and a skintight foot wide elastic strip that was designed to serve as both bra and the only thing covering her upper body. It nicely displayed her bare, well-muscled shoulders and a foot of her toned tummy, with the little piece of jewelry attached to her belly button. \n\nNeedless to say, with those big tightly restrained tits, that particular ensemble was meant to suck the air out of the room. \n\nShe flirted outrageously with the guy and several of his friends, she bought rounds, she moved from table to table laughing and kidding around. The sole exception was my table, and the now much larger group of students that were sitting at it. \n\nI thought that she might be avoiding us because we were animatedly nailing down the implications of information technology in third world economic development. But I got the distinct impression that it might have been because I was sitting at it. In fact, at one point I caught her looking at me and I could see irritation and even outright anger in her eyes.\n\nWell!! In the immortal words of the great American philosopher Steven Sills, \"If you can't be with the one you love - love the one you're with.\" There was a little Jewish stunner sitting across the table who had been cutting me adoring glances from the minute I sat down. She was maybe five feet tall, had a bigger rack than Jane's and one of those super round zaftig bodies that are built for sex. \n\nI began to concentrate on her in the way that you do when you are homing in on a particular target for the night. She was more than happy to oblige. We got cozier as the evening got drunker. \n\nMeanwhile Jane was across the room making a very public display of seducing the football player. She was sitting on his lap swapping open mouthed kisses. I was sure that his hand would have been under her top if it wasn't so skintight. Instead he was massaging the bare flesh of her flat stomach. \n\nThen, to my total astonishment she made a point of catching MY eye. Nobody else noticed. Since the entire room was watching her antics with the dude. \n\nWith a theatrical gesture, she spun cat-like off the guy's lap, took his hand, looked seductively at ME and led him out the door by the tie; making it obvious that the ball was on the one-yard line and he was about to score. The room erupted in cheers like Penn had just won the Ivy League Championship. \n\nI was flabbergasted. What the heck was THAT!!\n\nI had planned on bringing my little Jewish friend back to my place. But suddenly my heart wasn't in it. Frankly the whole romantic pursuit thing seemed pointless and not a little bit stupid. Jane was clearly enjoying her life way too much to even consider a guy like me. So, I dropped a wad of twenties into the pot and excused myself. \n\nThe light in Jane's room was off as I made my way up the deserted street. Then, I heard a sexual shriek from upstairs. Seriously??!! I knew that the object of my obsession was up there, getting her brains fucked out. I also knew that I wasn't coming back to that place, ever! \n\nI'd splurged on a GT Cobra convertible. I thought the name gave things a little symmetry. It was a nice fall evening and so I dropped the top and took a leisurely drive back to my place. I looked up as I crossed the South Bridge and the harvest moon and the Getz wailing from the superb Bose sound system provided a perfect counterpoint to the blue mood that I was in.\n\nThe landline was ringing as I got into the entrance hall. I scrambled into the kitchen without turning on any lights and bashed my hip on the counter. The stinger from that put the cherry on top of the whole ghastly evening. \n\nI grabbed the phone and barked \"WHAT!\" There was total silence on the other end of the line. I said \"HELLO??\" a couple of times, still silence. \n\nI hung up and started fishing around on the wall to find the light switch. The phone rang again. This time I picked it up and said frustrated, \"You had better have a good reason for calling me at this hour Chuck!\" Chuck was a guy I knew. He fancied drunk dialing.\n\nA female voice said, \"This isn't Chuck.\" I knew I had heard the voice before, but I couldn't place it. So, I said as neutrally as possible, \"Can I help you?\" \n\nThe voice said angrily, \"YES! You can stay out of the Tavern, permanently!!\" \n\nEXCUSE ME? Then it struck me. It was JANE. \n\nI said in my most tightly controlled voice, \"I beg your pardon?\" \n\nShe said with rising anger in her voice, \"the Tavern is my hang out and you have no right to be in it.\" \n\nI said, still keeping my voice neutral, \"And what is it about my presence that upsets you?\" I resisted the urge to add, \"So much so that you need to fuck the male population of the University of Pennsylvania.\" \n\nShe said, \"Just BECAUSE it DOES and let's LEAVE IT AT THAT!\" \n\nI wasn't going to LEAVE IT AT THAT. That was for certain sure. I said, \"What makes you think that you can dictate where I can and cannot go?\" \n\nShe hung up on me. \n\nI star 69'd her. \n\nShe answered like she was crying, \"Hello?\" \n\nI started in on her. \"It is obvious that you don't like me. I don't know what I did to deserve that, but I accept it. So, let me assure you that YOU WILL NEVER SEE ME AGAIN!!\" \n\nThere was a long pause at the other end of the line and some sniffing. She said in a small voice, \"Can we talk tomorrow?\" \n\nOkay, that was promising. I said, \"Of course we can. Should I pick you up? Or would you rather meet me someplace?\" \n\nShe said, with a voice dripping with sarcasm, \"You already know where my place is, so you can pick me up at 10 AM?\"\n\nThe problem was what to do with her. She clearly wanted to just talk, so I wasn't going to be taking her back to my place and I was pretty sure she wasn't inviting me up to hers. But I also didn't want to conduct a serious conversation sitting around a Starbucks. \n\nI have many vices, but my boat is by far the most expensive. They say that you need to stand fully- dressed in a cold shower and tear up hundred-dollar bills if you want to experience the true joy of sailing. But I made good money and I had very little to spend it on. \n\nI had been sailing on the Great Lakes since I was a kid and the bank was willing to set me up with a loan for a North American 40. I kept it in a slip at the Philadelphia Marine Center. That way I could do a little solo sailing on the Delaware any time I wanted. ",
        "It had a beautiful and roomy quarter deck that is extremely public. I hoped that would dispel any of Jane's notions about my motives. The ambiance was also pleasant in a good clean nautical way. It was the best neutral ground I could think of and it was not far from her place.\n\nShe was standing outside when I rolled up in the Mustang. I thought, \"Hmmm, Doesn't even want me to darken her doorstep.\" \n\nShe was dressed for business, not pleasure - literally. She was wearing one of those classic worsted grey pantsuits that all of the no-nonsense women in corporate America favored. It was topped off by an extremely expensive white pure-silk blouse with the big bow that substitutes for a tie with a woman. \n\nI read her message loud and clear. \"I am a totally sexless creature, so no hanky-panky.\" But even dressed like Hilary Clinton she couldn't disguise those hips and that perfect round ass and her panther-like grace as she climbed in. \n\nI had the top up on the Mustang because I wanted to make a statement myself, which was that I was not on a joy ride. Both of us were nervous so we limited the conversation to general observations about the weather during the short trip across the Schuylkill.\n\nShe had not asked where we were going, and she was surprised and looked more than a little irritated when a short time later I parked at the Dave and Busters that fronts the marina. She was NOT a Dave and Busters kind of girl. \n\nI had packed breakfast in a small hand basket, just a thermos of Earl Grey and some scones with a container of clotted cream and the Dundee Orange marmalade I favor. I popped the trunk and took it out. She looked at me quizzically. \n\nWe proceeded through the marina gate without talking and stepped onto the dock that fronts the slips. That was when she figured out where we were going. She said in a really angry tone of voice, \"I'm not going out on a boat with YOU.\" \n\nI said, \"I know that. It was just that there was no way you would be willing to come up to my place and I hate coffee shops. So, THIS seemed like the best neutral ground.\" And with that I gestured to the quarterdeck of my boat. It was the first time that I had known Jane that she actually looked delighted. \n\nWe stepped down into the cockpit, which in an NA 40 is pretty roomy, and I began laying out the cups and scones and pouring the tea. She watched my preparations with an amused look; sitting with her legs tucked gracefully up under her on the port side navigator's bench. \n\nWhen I was done, I handed her a steaming china cup and hitched the taller helmsman's chair over to the table in front of her. I said curiously, \"So what do you want to talk about?\" \n\nShe looked flustered then said with a nervous laugh, \"What? No foreplay?\" \n\nI told her that I was neither smart enough, nor sophisticated enough, to beat around the bush with somebody like her. So, would she please tell me what the problem was, thinking to myself, \"the ball's in your court sweetie pie!\"\n\nShe looked pensive. I thought to myself, \"She really has a beautiful, wide, sensual mouth.\" Then the words came tumbling out. \n\nShe said, \"I've felt like there was something very special between us from the second that we met.\" \n\nI thought, \"No Shit!!\"\n\nThen she said, \"That's why I can't understand why you've been such a total asshole to me.\"\n\nI knew exactly what she was talking about, in terms of the \"special\" part, but \"ASSHOLE\"? So, I said rather heatedly, \"I felt the same absolute connection, but I don't understand why you thought I treated you badly. Explain THAT\". \n\nShe was really getting into it - angry now. She said, \"You were cold. You ignored me and you talked down to me every chance you got. I know I'm not a professor, but I'm not STUPID, and I will not be condescended to, no matter how much smarter and more sophisticated you think you are.\" \n\nSo, there it was!! She was undeniably correct. That was exactly how I had treated her.\n\nMy inner self was throwing things around in my head and yelling, \"I hope you're happy you fucking moron! You acted like a patronizing d-bag because you didn't have the balls to tell her how you REALLY felt about her.\"\n\nThat explained all the hostility and acting out. It as pure resentment. Jane felt belittled. So, she was making the point that she had plenty of other men in her life. She didn't need me. It was perfectly logical behavior. That is - if you're a female.\n\nBut she couldn't keep up the pretense. So, she'd mustered her courage and called me. That took guts.\n\nForget witty comebacks. I knew that I would never be able to live with myself if I didn't tell this brave little woman exactly how I ACTUALLY felt about her.\n\nI said, \"I have never come close to experiencing anything like the way I feel about you. And I have felt that way since the moment I laid eyes on you. To me you are the epitome of everything I have ever wanted and desired in a woman.\"\n\nI looked her directly in her big intelligent eyes and added, \"If I was disrespectful to you, or was not as forthcoming as you wanted me to be, it was because of what you do to me. I want to be with you like I have never wanted to be with any other woman in my life.\"\n\nD'oh!! That was a stupid thing to say - honest yes - but an utter romantic faux-pas. I expected Jane to go stomping back up the dock. But instead she flopped back on the bench like I had hit her.\n\nI truly believe that the species wouldn't have survived if it weren't for women. Men are just too simple minded. I was a full ten years older. I had been an army helicopter pilot and everything that needed to be said had now been said. Yet I was still sitting there with my head hanging down like an embarrassed eight-year-old. \n\nSo, Jane took the initiative. She thought for a couple of seconds and then pushed decisively off the bench, walked around the table, took my head in her beautiful little hands and laid a kiss on me that had steam coming out of my ears. \n\nI stood up still kissing her and embraced that magnificent body, hanging on to her like she was the only thing keeping me from falling down a very deep and dark hole. \n\nPeople talk about skyrockets going off when you kiss the woman you are destined to marry. That didn't happen to me. Instead it felt like all of the missing pieces had suddenly and irrevocably clicked into place and I was whole for the first time in my life. \n\nI pushed her back, looked at her lovely face and saw that she was crying and even shivering a bit. \n\nEmotion is a funny thing. It comes in a lot of contradictory forms. You can laugh bitterly when you're angry and when you are unbelievably happy you cry. And men don't come close to the emotional depth of your average woman. Jane was no average woman and I could see the major forces that were bouncing around inside her. \n\nI had not planned any seductions and frankly I wasn't sure what to do next. The obvious step was the cabin with its double-wide bed. But although every fiber in my body was screaming to seal the deal, I didn't know how she would interpret that move. So, I hesitated. \n\nShe looked amused and said, \"Does this place have a bed?\" Aye, aye skipper! \n\nWe more-or-less fell through the cabin hatch, with me tugging her coat and big silk bow off as we stumbled along toward the bed. She was agitatedly yanking at my belt. \n\nThe NA 40 has hull mounted bunks for serious racers, but I had converted mine so that there was a relatively large bed at the end of the galley up against the forward sail locker. We both had dropped our shoes as we fell into it. \n\nI had unbuttoned most of the buttons of her silk blouse by that point. Her boobs in their fancy lace bra emerged. I gazed at those wondrous peaks like the first white man who had ever seen the Himalayas, fucking awe inspiring! \n\nShe shed her blouse and reached frantically behind her to unsnap her bra. I am glad she did because there were at least two extra hooks on the thing. I wouldn't have known where to begin. What fell out were two of the most beautifully shaped breasts a woman has ever possessed; huge, firm and very high- riding on her chest. \n\nThe nipples were something special, big and brown and rock-hard. I took the time to worship each one individually, licking and nipping, which gave both of us the opportunity to clear the decks below. \n\nWe were now completely naked, and I was on one elbow next to her gawking at her perfect body. Her wide hips screamed womanly with both hip bones and her mons jutting an amazing distance above the plane of her belly. \n\nHer legs were incredible, full and muscular and perfectly shaped with every muscle group clearly defined from her hips down to her feet. But it was her face, now totally lost in her own desire that turned her exceptional beauty into something far beyond perfect. \n\nI moved between her legs which she gracefully raised off the bed to the classic fucking position. As I did so I could smell the fragrance coming off her hair and the skin of her upper body. It was the smell of good health and unaffected beauty, almost tangy but with overtones of woods, fields and sun. \n\nIt was erotic as hell; while her womanly scent would drive any man wild with lust. I hesitated because I wanted to savor the moment, but Jane doesn't work that way. She reached between us and impatiently inserted me into her. \n\nPeople talk about a woman opening herself to a lover but until you have experienced what Jane did you will never understand what that means. Jane gave herself to me totally at that instant. \n\nShe spread and raised her legs even wider and rotated her hips so that I was touching bottom deep inside her. At the same time, she was kissing me with a fully open mouth that invited me inside the other end of her body.\n\nIt was one of the most intimate things I have ever experienced. Her pussy was pure silk, with little tweaks and flutters like distant lightening on a stifling summer evening on the prairie. The heat was incredible, almost inhumanly hot. \n\nShe gasped loudly as I slid into her and then began to move emitting little squeaks and \"Ohhhs\" with each stroke. Then she started to breathe slowly and deeply leading up to regular moaning. \n\nThose moans and gasps continued for a short time and then she came. It was nothing spectacular, just a loud groan, a tightening of the grip of her thighs on my hips and the clenching of her internal muscles. \n\nIn the meantime, I had picked up the pace. When she stopped coming, she went back to moaning loud enough that anybody walking past on the dock would have heard her. Her legs, which were now widely spread eagled, began to move around restlessly above me, as if she was winding up to another much bigger orgasm. \n\nI kept pounding away accompanied by groans, pants and loud moans. Then she began to yell, \"Ahhh yes, Mmmmm!! Fuck me baby!! I'm YOURS!! I'll ALWAYS be YOURS!!\" \n\nThose words drove me over the edge and into a long sunny canyon. I came until my balls nearly fell off. The voice in my head kept repeating, \"She's mine she'll always be mine!\" \n\nMeanwhile Jane was in the grip of some kind of nuclear orgasm. She was bucking all over the bed, grunting gasping and panting beneath me, while her pussy convulsed with spasms of ecstasy as she wildly clawed my back. Her contractions and rapturous shaking went on for several seconds.\n\nBoth of us took our time coming back. Her legs were flat on the bed and I was supporting myself between them lying on my elbows and trying not to crush her. Her pillow tits were squashed between us. I had shrunk out of her. I rolled off and lay next to her listening to her cry with emotional release. \n\nI suddenly flipped over onto my side and said, \"You meant, that right? You're mine forever?\" \n\nShe looked at me like she couldn't believe how stupid men could be and sniffled, \"No I say that to everybody I fuck\". \n\nMy heart sank. She laughed. \"For such a smart guy you are incredibly dense when it comes to women.\" My heart soared. \n\nWe got cleaned up as best we could. All of our stuff was more-or-less trashed. So, we tucked things in and made our way back to the car. We didn't talk. But we didn't need to. \n\nNaturally, I wanted to find out what this all meant. That is, once we had put ourselves back together. So, I dropped Jane at her place and told her I'd be back in an hour. We didn't say much in between. I went around to my place and changed into a shirt and tie. I was thinking we should sort this out at a nice place like Spago. \n\nThis time I parked on the street and rang the buzzer. A disembodied voice from the speaker said, \"Come on up the door is open\". I walked up the mahogany steps which were surprisingly upscale and expensive for a student apartment, knocked on the only door up there opened it and went in. \n\nI knew she had money. But I was stunned. The apartment was a good 1,500 square feet of open-plan, exposed brick and wall to ceiling windows. \n\nThe d\u00e9cor was not what you would imagine for a 25-year-old single college girl's place. It was all tasteful natural wood and chrome; minimalist, with very expensive but comfortable furniture, real art on the walls and Brubeck playing softly in the background from invisible speakers. \n\nThe rug on the floor must have set her back ten or fifteen thousand alone. She was sitting on a fine-leather couch in a Peacock Alley robe looking elegant, with her incredible dancer's legs folded neatly under her. Nonplussed doesn't describe the look on my face. \n\nJane said, \"Grab a drink and sit down. We need to talk.\" My heart sank. Shit! She had thought it over and come to her senses. \n\nI walked over to her built-in bar thinking, \"what kind of twenty-five-year-old girl builds a full bar into her apartment?\" I poured myself a generous helping of Redbreast thinking, \"What kind of twenty-five-year-old girl keeps vintage unblended Irish whiskey in her bar?\" \n\nI said awestruck, \"This is an amazing place.\"\n\nJane said matter-of-fact, \"I like it. I own the building.\"\n\nSeriously??!! She owns the bar that she hangs out in??!! I knew right-then-and-there that I was miles out of my league!! \n\nI walked over and sat down opposite her, balanced my drink on my knee and waited for the inevitable torpedo to hit me right in the heart. \n\nShe started out with, \"You can see that I don't need any man's money to support myself, right? I come from a very rich family and I have a huge trust fund.\" \n\nI looked around her elegant place and nodded sadly. \n\nShe added, \"And you have probably noticed over the past three days that I do not lack for male attention.\"\n\nI did everything but actually dissolve into a pea-green puddle at her feet. \n\nShe said grimly, \"So, we have to have an understanding right here and now\". \n\nI sighed, HERE IT COMES. \n\nShe said with tension showing in her voice for the first time, \"I have known many men\". \n\nI thought, \"Jesus Christ lady!! Would you stop rubbing it in and get on with it!!\" \n\nShe said with a little sob in her voice, \"But I have never come close to feeling what I felt with you today.\"\n\nWHAT DID SHE JUST SAY?\n\nJane continued blithely on, \"So, if I marry you, I want you to understand that I am committing myself to you totally and exclusively, out of my own free will, for the rest of my life. If you cannot make the same commitment, I want you to walk out that door and never come back.\" \n\nPARDON ME? Did I hear her right? Did this magnificent creature just use the words \"commitment\" \"marriage\" and \"me\", in the same sentence!!??? My brain exploded! \n\nHere I was hoping that I might be allowed to woo her in some exclusive manner, with the long-term prospect of her maybe finding me acceptable enough to possibly consider partnering with me at some indeterminate time in the future. \n\nHere SHE was, sitting there as regal as the Queen of England, proposing marriage right here and now - to ME. And we hadn't even had our first date??!! \n\nThere has never been a time in my life that I have EVER believed more in a higher power. Back on the boat, I had recognized that Jane was always going to be the only person in the world for me. Incredibly, she must have come to the same conclusion. \n\nBut no mortal female would have acted on that decision without a lot of beating around the bush and loads of games. Instead, this magnificent creature was cutting to the chase for both of us. I thought to myself, \"My God what a woman!!\" \n\nShe looked a little concerned, maybe because it was hard for me to hide the hurricane of emotion that was sweeping across me. \n\nI said as calmly as I could, \"Make no mistake. I know that you are the only person in the world for me. I have probably known that from the second I saw you.\"\n\nI continued with, \"As far as I'm concerned, any time we waste before we formalize that commitment is lost time. The one thing I pledge to you is that you will never regret that you gave yourself to me.\" \n\nThe look that spread across her face was relief tinged with sheer joy. Needless to say, we didn't get to the restaurant that night. \n\nWe were married before the end of that year. I would have eloped on the spot if that's what it would've taken. I come from a small family. So, I had very few people sitting on my side in the cavernous Cathedral of Saints Peter and Paul, except my folks and a couple of my colleagues. \n\nJane is from important society folks and she had an entire entourage of relatives to satisfy; parents, grandparents, uncles, aunts and half a battalion of campus friends including the Greek god Adonis himself. He looked sad. TOUGH!! Jane was mine and nobody would ever take her away from me.\n\n*****\n\nI moved up in the intervening three years; or down, as Jane who was a Wharton grad viewed it. I was at the Graduate Management School at Yale. We were living just west of Mystic, in a big old sea captain's house on a hill, It had an incredible view of the Atlantic from the widow's walk. \n\nI'd drive the forty-five minutes over to New Haven three times a week for class. The rest of the time I just stayed in my office writing. A university faculty member's reward system is geared to publish-or-perish. So, that's the real job for an academic. \n\nBecause I was around the house all the time, Jane and I were never far from each other. Most married couples would find that excruciating. But our relationship is what sociologists call \"binary\". We were so tightly bound to each other emotionally that we didn't need, or want, other people's company. \n\nBecause neither of us actually had to go into \"work\" per-se, we had the luxury of only doing things that we could do together. For example, if I spoke at a conference, which is another thing that academics do to get along, Jane would go with me. The merchants of whatever city we visited loved to see her arrive. Since, she'd pillage the local stores like the Goths sacking Rome.\n\nJane earned her money though. When I first met her, she was actively involved in the management of her trust; hence the Wharton connection. Watching my gorgeous wife control a ravening pack of Wall Street lawyers through sheer force of her will became one of my favorite spectator sports. \n\nSpeaking of sports, that was one of Janes more endearing quirks. My preppie princess got slightly rowdier than a drunken factory hand at any sporting event. And, the sex that followed a last minute, game-winning touchdown, or a walk off home run, burned more energy than the athlete who scored it. That was the paradox that was Jane.\n\n********\n\nThe serving girl brought me my morning khubz and eggs. I wouldn't eat again until late afternoon. The Republican Palace wasn't a bad place to be imprisoned. But the September temperature was still around 100 degrees. \n\nThe room where they kept me wasn't air conditioned and it was hard to work up an appetite in all that heat. I had a small space with a sleeping palette and table with a little light on it. There was a ratty old overstuffed chair next to the light. That was it.",
        "The isolation was almost total. I could walk around the interior courtyard. But access to the outside world was strictly forbidden. Once in a while they'd let me get a book. But there were no newspapers.\n\nI frankly didn't know what I was doing there. My first cogent memories after the crash were in a dusty Iraqi hospital in Samawah. A group of Bedouins had found me and gingerly transported me to the nearest chunk of civilization\n\nIt wasn't because they were humanitarians. In fact, they were among the most primitive people I encountered in that godforsaken place. But Saddam was offering a substantial bounty for any American captured alive. So, I was dinars on the hoof for them. \n\nThe Iraqis I'd met during my time in the hospital were reasonable, if not exactly friendly. Of course, most of them had been educated in the U.S. I had broken bones and some internal injuries. The doctors stabilized me and then they loaded me in an ambulance and rushed me up to Baghdad. \n\nTheir hurry was inexplicable at first. Then I heard the concussions. It was obvious that the Coalition was finally coming for Saddam and he wanted a bargaining chip. That was me.\n\nI spent time healing in a much nicer room in the Palace. It was impossible to tell what had been going on in the larger world. I didn't see any American faces. So, I knew that whatever had eventually occurred, nobody friendly had made it all the way up Highway 1. \n\nMy interrogators were polite. But they weren't asking the obvious questions, the ones that you'd normally want a prisoner of war to answer. So, either they'd won, or there'd been a comfortable accommodation. \n\nSince nobody was beating down the door, I also guessed that my presence in the Palace was a well-kept secret. Iraq has been at the center of the world's trade routes for a mere five thousand years. So, the Iraqis know how to bargain. That includes never throwing away anything that might be useful. \n\nIt took a year for my injuries to heal. Then they buried me in my little downstairs room. I was like the classic stuffed moosehead. People don't know why they bought it. But they don't want to part with it. \n\nAs you might imagine, my day-to-day existence was excruciating; with a few sides of desperation, hopelessness and despair tossed in. But the other option was hanging myself and I couldn't work up the courage to do that. So, I hunkered down and endured.\n\nI had way too much time on my hands and all I could think about was what I had sacrificed. My overwhelming regret centered on my separation from Jane. I missed her - intensely. In fact, the dim possibility of being able to hold her again was the only thing that kept me from ending myself.\n\nI knew that I was in this mess because of my over developed sense of duty. I had been inactive reserve for a couple of years when the war kicked off. But I knew I was going to be activated the moment that I heard about Saddam's invasion of Kuwait. \n\nThe Cobras were nothing compared to the big brutal Apaches and most of the active duty hotshots had transitioned into the AH-64. So, the Army pawned off their AH-1's on the Marines. The jarheads would fly anything. \n\nBut there were still a few Cobra squadrons in the inventory, and I was one of the last experienced snake drivers. Hence, I got the letter telling me to report to the 159th Aviation Brigade. That was back at my old stomping grounds in Clarksville.\n\nI was relatively ancient for a combat pilot. Hence, I might have been able to fight my callup. But in my mind, that would have been a dishonorable thing to do. On the other hand, it's hard to take comfort in abstract notions like honor and duty when it's 118 degrees and you haven't been able to bathe for a month.\n\nThe callup was devastating. Jane and I had only been married for three and a half years and my life with her had been perfect. We were just talking about the baby when I got the notice. \n\nThey gave me a week to report. The Army doesn't like the people whose lives they've stolen to have time to think about it. That's probably prudent. Still, most of us would show up no matter what. The sense of obligation is built in. \n\nOur final night together was bittersweet. We both knew it would be a few months and in all the time that we'd been married we'd never been apart more than a few days. Our parting was both poignant and passionate. \n\nJane was like a woman possessed. She is normally very enthusiastic. But she outdid herself that final night. She was on a mission. It was like she wanted to reassure both of us that I'd never forget her. Which, or course, wasn't going to happen. \n\nWe started out lying on the bed fully clothed. I looked into her incredible amber cat-eyes and she was looking back at me as if we were one soul. It was so sexual that I felt the overwhelming urge to mount her and fuck her like some classical hero going off to battle. But that was NOT why we were there. So instead I caressed her much adored face. \n\nHer mouth fell open and she began to pant, fast deep breaths. I pulled her upright and we worked together to strip her to the waist. Her magnificent breasts were swollen with passion. \n\nHer nipples are always very prominent, and they are usually my favorite thing to feast on. But today they were looking intimidatingly functional; standing up very tall and hard with their little tiny openings clearly visible. I worshiped them instead. \n\nShe was panting and moaning loudly. It was time. So, I made us both naked. I gently got between her legs. Usually she tells me in very explicit terms what she wants me to do, but she was still only moaning tenderly and panting loudly, holding her legs up and slightly bent apart with no effort whatsoever. \n\nI placed myself at her entrance and slid up into her. I could feel her welcoming me, almost pulling me in. I touched her cervix supporting myself on my arms so as not to crush her. \n\nShe was moving very slightly, rhythmically but not really fucking back. I withdrew and she gasped and then pushed ahead gently again. It was a slow fuck, like we wanted it to last forever. \n\nJane can be extremely impatient once her engine gets going. But today she was totally wide open and accepting, meeting my thrusts with a gentle rock of her hips and a little moan each time I bottomed out in her. \n\nI continued to look into her eyes, willing her to see how much I loved her. She began to get more agitated as we moved together in a gentle motion. Her legs elevated higher. Her knees were widely spread in a graceful classic female fucking position. \n\nFinally, she began to vocalize, \"Ahhhh, Ahhhh, Ahhhh, Ohhhhh, Ahhhh, Ahhhh, Ahhhh, Ohhhhh!\" Those cries rose in intensity until she couldn't take it any longer and she came wildly. \n\nHer insides were as white hot as usual, but they were literally tugging on my cock like she wanted to hold it inside herself forever. That caused me to blow up like the Death Star. \n\nI was not rational for some period of time, nor was she. But when I finally came back to my senses, I was lying on top of her, still supporting myself on my arms. With her huge tits squashed between us and I had not lost the slightest stiffness. It was like I never wanted to leave her.\n\nIn an amazingly short time, we began to move together again. This time we were much more forceful. She was bucking under me like she usually does, and I was ramming her like I couldn't get far enough into her. \n\nShe had a crazed look on her face, as she fucked me with every ounce of strength she had. It probably matched the look on mine. I was wildly humping her but that couldn't last long, and we came powerfully together again. The simultaneousness rarely happens twice. \n\nI rolled off her to lie on my back looking at the ceiling. She was weeping softly next to me. I said with profound sincerity in my heart, \"I will love you forever.\" \n\n********\n\nMy captivity had stretched into years. I knew that because I was beginning to see grey hair in the little piece of mirror that a sympathetic servant had given me. I was pretty certain I'd die there, and I couldn't wait for it to happen.\n\nThe mechanics of my confinement were simple. My room was in the basement of the Palace, off a little internal courtyard. The courtyard appeared to be an architectural device, rather than a gathering spot. It was designed to let a bit of light into the innards of the building. \n\nThere was a single stairway leading out. It was always guarded at the top. I might have been able to work my way past the guard. But all that would have done was deposit me in the middle of a huge building chock-full of military types and bureaucrats. Somebody would be bound to notice a scruffy American wandering around in ragged clothes and bare feet.\n\nTo be fair, I wasn't mistreated. I had been a husky one-hundred-and-ninety pounder the night I was captured. I was closer to one-hundred-and-sixty now. But my weight had stabilized, and I got medical care if I really needed it.\n\nI could exercise as much as I wanted. Every morning I'd walk 8,000 steps clockwise around my courtyard. Then I'd turn around and walk 8,000 steps in the other direction. I figured at two-feet-per-stride I was walking six miles a day. The exercise temporarily took my mind off my troubles and kept me fit.\n\nI could occasionally take books out of the Palace library. I read everything written by Edgar Rice Burroughs, Zane Grey, Kipling, Hemingway and Conrad; anything to get my mind outside the stone walls that surrounded me. \n\nStill, the isolation and loneliness was killing me. Every night I was tortured by thoughts of Jane. I wondered what had happened to her. \n\nI could keep rough track of the passing of the years by the temperature. There was always a period when the heat wasn't totally oppressive, and I assumed that was that the Iraqis called winter. Twelve of those periods had come and gone when I was rolled out of bed by Armageddon. \n\nThe military scientists call it \"Shock-and-Awe.\" Neat term, but they weren't on the receiving end. Imagine undergoing an endless series of teeth rattling concussions until all you want to do is just crawl in a hole and die. And, I was inside the building down at the basement level. I can't imagine what it was like out there in the open. \n\nI assumed that our guys were finally settling up with Saddam. \n\nIt was total chaos for the next few weeks. I could have probably walked out then. But that would be crazy, given the shit that was going on around me. So, I stayed in the Palace. \n\nThen a collection of 3rd ID Humvees rolled into the circular drive and under the big portico. They disgorged infantry squads who began to infiltrate the building. Our guys were coming up the main hallway moving carefully from doorway to doorway, M-4s at the ready. \n\nI happened to be raiding the pantry next to the Palace ballroom. The whole building was more-or-less deserted during the transition. So, I'd been sleeping in a translator's booth. The booth was air conditioned, at least when the electricity was on in Baghdad. It was the first good night's sleep I'd gotten in years. I stepped out into the middle of the room hands raised, shouting DON'T SHOOT I'M AN AMERICAN. \n\nOur guys saw a stinking scarecrow, with lank hair well past his shoulders and a beard down to his chest. I didn't look hostile or threatening. So, I was arrested and processed. My captivity had lasted twelve years and three months, roughly 4,500 days. I had been thirty-eight years old on that fateful day. Now I was fifty. \n\nIt wasn't a record for POWs. That was some Japanese dude who held out on the Island of Lubang for twenty-nine years after World War Two. But then again, I really wasn't a prisoner of war. I was just a negotiating chip and maybe Saddam's personal pet.\n\n*****\n\nIt was a quick and secret journey from the Republican Palace to DC, via Landstuhl. The colonel in charge of the scout brigade heard my story, made a phone call and the next thing I knew I was on a C-20 to Germany. They checked me out and found me surprisingly healthy, if not a little undernourished.\n\nThe trip ended at Andrews, all on private jets. They stashed me in a room at the Washington DC VA Medical Center. I wasn't exactly under guard. But they made it clear that they didn't want me to leave, or talk to anybody, until they decided what to do with me. \n\nI kept asking to see Jane. She had been the only thing keeping me alive. Now I was dying for her touch. \n\nThey told me, \"All in good time.\" \n\nI told them I was going out the window if she wasn't produced forthwith. \n\nThey told me that it was complicated. \n\nThe guy who was interfacing with me was clearly my appointed \"keeper.\" He seemed like a decent sort. He was one of those transposable units that they turn out of a little Academy high above the Hudson, just north of Peekskill. \n\nHe had an open earnest Midwest face and a manner that was so warm and sympathetic that it made me wonder how he'd survived being a Cadet. It was clear that he had a future in Army PR. I instinctively liked him. But that was the whole point of putting him in charge of me. \n\nStill, there were way too many moving parts to trust anybody. \n\nHe fixed me with his most compassionate look and said, \"Wait until this afternoon. The Undersecretary will explain. Just be patient. We'll make it right.\" That sounded ominous.\n\nThe first guy into the room was clearly there to tell me where it was at. I knew from the grey suit, the steely glance and the well shined pair of oxfords. The next guy was the accountant. He looked like a gerbil in corduroys.\n\nThey both pulled out chairs, radiating camaraderie. My handler made the fourth. The three of them were acting like we were sitting down to have a beer and watch the Skins play the Giants. \n\nI said pissed-off, \"Look, let's cut to the chase. You've stolen a dozen years of my life, and I need to see my wife.\" \n\nThat's when I learned what it meant to be one of the living dead.\n\nI'd already guessed that I was an extreme embarrassment to the people who'd left me behind. The first guy had made his reputation on the painlessness of that little scrap and the son was POTUS now. \n\nIt looked really bad to have a dude show up from lo-those-many years ago; like they'd lost the family cat on vacation. It made the Army bureaucracy seem a bit unfeeling perhaps; and definitely a whole lot incompetent. \n\nIn fact, they would have probably dropped me over the Atlantic if the press had gotten any inkling that they'd dug up a Gulf War POW during the \"regime change.\" So, an entire section of the U.S. military was now devoted to disappearing me. \n\nThe guy with the spiffy shine started out on the attack. He said, \"We would have looked for you but the biggest tank engagement since the battle of Kursk went right over the spot where you crashed. We found your gunner. He was crisped and we just assumed the other body was you.\"\n\nI just sat there looking at him with a, \"No excuses!!\" stare. \n\nHe glanced furtively at the gerbil and said, \"You are going to be a very rich man; back pay and some recompense for all you went through.\" \n\nI thought to myself, \"Aha, a bribe - how interesting. I must have real leverage on those guys.\" \n\nHow could I know!!?? I'd been buried in a basement for the past twelve years. I'd never heard of the internet; or the word \"viral\" as it applied to stories that rattled around that mysterious place. \n\nI said, \"I don't care about any of that. When do I get to see my wife?\"\n\nAll three exchanged meaningful glances. Then the Cadet said in his most sincere and sympathetic tone, \"Let me catch you up on a little history my friend. You were declared KIA in 1992.\"\n\nThat was a shock. I didn't have the time to process the implications because the kid was still talking. He was saying ruefully, \"A year is standard doctrine when we have probable cause to assume a missing soldier was killed in action. Everybody on the Chinook saw you go down and the fireball afterward.\"\n\nSeriously??!! I'm officially dead. I sat there looking stunned. \n\nBut that wasn't the worst of it - not by a long shot!!\n\nMy handler said with genuine sympathy. We found human remains at the crash site. They appeared to be yours. But military casualty DNA testing was in its infancy back then. Your wife was devastated. \"\n\nHe looked me steadily in the eye and said, \"You were buried with full military honors at Arlington with a Silver Star and a Distinguished Flying Cross. You saved a lot of lives that night.\" \n\nI continued to just sit there... imitating a fish out of water. \n\nThe Cadet looked like he was bracing himself. Then he said, \"Your wife was in deep mourning for a few years, almost like a recluse. She obviously loved you deeply. But she is a tough woman and she turned her life around.\"\n\nI thought proudly, \"That's my girl!!\" Of course, I'd missed the important point. I was DEAD.\n\nIf I wasn't dead, the next words would have killed me. The handler shook his head sadly and said, \"Jane remarried eight years ago. She has two children seven and five. Her husband is a U.S. Congressman.\"\n\nEvery drop of adrenaline dumped into my bloodstream. My mind went into hyper-drive and time slowed to a crawl. \n\nMy brain said reasonably, \"You were dead. Did you REALLY expect your young wife to throw herself on your funeral pyre? They outlawed suttee a long time ago.\" \n\nJane was in her early 30s and she loved life. She was a beautiful and vibrant woman. Of course, she'd remarry.\n\nBut my heart was utterly destroyed. The only thing keeping me marching through that eternal dark night was the thought that someday I would get to hold her. That hope had been snatched away by cruel fate and I was adrift in an endless sea of misery.\n\nNeedless to say. I didn't react well. Specifically, I tried to strangle the Cadet. There was no particular reason for that. But the Devil was my Master now, and chaos was my only friend. So, it just seemed like a good idea at the time. \n\nIt took two burly guards and several milligrams of Thorazine. Then, I woke up in the classic padded cell. But I knew what their pressure point was. So, I started yelling, \"I'm going straight to the Washington Post if you don't let me out of here.\"\n\nThat got the expected reaction. An hour later the door opened, and three MPs walked in. The big guy who was clearly the leader said, \"Sit down and shut up. The Secretary wants to talk to you.\" \n\nHe emphasized it by smacking the palm of his hand with an Asp Talon. I sat. \n\nThe Secretary of the Army was your usual smooth-talking political appointee, majestically tall, greying hair, which was gelled back in the style of the time and the soulless eyes of a snake. \n\nOf course, he was smiling cordially as he extended his hand. He said, \"Now that you've heard all of the bad news, let's get to the good part.\"\n\nI said miserably, \"There IS no good part,\" I couldn't hold it in any longer. I plopped my face into my hands and started to sob. The loud wailing went on for a minute or so. Even I was thinking, \"My God!! What a pussy!!\" It was fucking humiliating. \n\nWhen I raised my head, they were looking at me like I was the countdown timer on a nuclear device and the number had gotten down to a single digit. I got better control of myself, dried my eyes and said, trying to sound wanly humorous, \"I'll stop blubbering now.\" \n\nThe Secretary said kindly, \"I can't begin to comprehend the suffering you must be going through. But we can give you some positive things to help you recover.\"\n\nI looked at him wearily and said, \"Like what?\"\n\nHe said, \"First of all we can provide some financial recompense. I know it won't make up for the years you lost, or your wife. But it will ensure that you will live in the lap of luxury. That's the least we can do.\"\n\nSeriously??!! How the fuck could I replace Jane with money!? \n\nI was going to start crying again. But the feelings of mortification from the first time grew me a set. I said with some heat, \"Explain that to me. What are you talking about?\"",
        "The Secretary said, \"We plan to give you a lump sum of...\" and he named an amount that was so astronomical that I gulped. Then he went on to add, \"We also plan to pay you a yearly stipend of...\" which was clearly the bribe to keep my mouth shut. \n\nIt was an unbelievable amount of cash. Still, I was a member of the faculty of a prestigious Business School, at least I had been before I became Robinson Crusoe, so I could count. I knew that the amount they were talking about was just a simple rounding error to the Army's budget.\n\nNaturally, there was a big \"but\" coming. \n\nThe Secretary shifted to the warhead end of the discussion. He smiled indulgently and said, \"Of course you are no longer the man who was buried with honors at Arlington. You are going to have to become a totally different person.\"\n\nHe added with warning in his voice, \"And you can never contact anybody from your old life, most self-evidently your wife. I know you will be tempted. So, to anticipate any meeting by happenstance, you are going to sign a contract. Then you are going to live someplace where there isn't the remotest possibility you will ever meet.\" \n\nI knew what he was talking about. Her husband was an important guy. They didn't want any blowback. Specifically - if I showed up on Jane's doorstep. But frankly he didn't need to tell me that. I am not THAT totally selfish. \n\nI loved the woman. She was everything to me. Forcing myself back into her life would be the purest form of self-indulgence. \n\nIt was the classic Chinese finger trap. Her profound grief at my death had proven her love. But she had risen above her pain. Now she had two kids by another husband. I couldn't make her choose. I was more of a man than that. \n\nIf she could do it, then I could too. I said unhappily, \"So what happens now. Give me the details.\"\n\nThe details were what you'd expect. I was a guy named Jim Edgerton, born and raised in Eau Claire Wisconsin and a wealthy entrepreneur with time on his hands. \n\nThey had the entire backstory, and all of the credentials, including a passport. It wasn't witness protection. But it was pretty damn close.\n\n*****\n\nMoney was never going to be a problem. But I didn't have an identity. THAT was a serious problem. People are who they are, because of a lifetime of doing something. I had BEEN a well-respected university professor. But that history belonged to a guy currently residing in Arlington Cemetery. \n\nI'd had problems with feelings of worthlessness before the military gave me a purpose. Now I was a manufactured entity. I'd never actually done any of the things that were recorded for me. So, in essence I was a hollow man. Self-pity wrapped itself around me like the San Francisco fog.\n\nI could actually feel the encroaching tendrils of hopelessness and it pissed me off. I suppose that the decade long holocaust that I'd endured gave me a perfectly good reason to quit. But I'd promised myself I would never be one of the walking wounded. That wasn't going to happen.\n\nIn life, you can choose to either march or die and I'd made the choice to march, no matter how heavy the burden on my heart. It was a matter of personal pride. The Army taught me to take responsibility for my actions. So, to me, life's victims were just weak people looking for any excuse to validate their own failure. I wasn't that sort of fellow.\n\nBecause I had chosen to serve my country, I had gone from a happy and productive life with a wonderful woman to the misery of an Iraqi prison cell. And, the only person I would ever love was now the faithful wife of another man. Even worse, she was the mother of two children who we would never share. That was the unintended consequence of my choice. \n\nNow everything that I had ever accomplished was gone. Sure, I had plenty of money. But the remainder of my days would be written on the original tabula rasa. Still, I wasn't going to let it defeat me. I was going to own the circumstances of this new existence and do the best I could going forward. Call it brave if you like. But to me, it was just simple survival. \n\nThere were detailed arrangements to be made and a bunch of paperwork to sign. In the interim, I was deposited in a suite at the Hays-Adams and told to get lost.\n\nI spent my first night looking out the window at the White House and making plans. I was almost fifty- years old. So, it was totally pointless to think about rebuilding my academic career. It would take years of education to just get back to the starting line. I didn't have the time left to do that. \n\nBut I also didn't want to simply play out the string until death. So, I asked myself the basic question, \"What's your passion? What are you interested in doing?\" \n\nI don't know why classical history fascinates me. Maybe it's because it was a pinnacle of human accomplishment; one we wouldn't reach again for another thirteen-hundred years. I wanted to visit all of the ancient places, maybe write about them. \n\nI wanted to be there and see it all. But I didn't want to just post-up in Tuscany, like a rom-com clich\u00e9. That would be far too hackneyed. \n\nFortunately, my second passion was sailing. So, the solution was obvious; buy a boat and live on it. That way I could move from place to place as my interests took me. \n\nI spent the next couple of days cruising the internet and making phone calls. I finally located the boat. It was a C&C 41. I was struck by how beautiful the layout was; all decked out in the best nautical wood, brass and chrome, with a really good galley. \n\nIt was a cool $85,000 cash. But I had infinitely more than that from my original payout and I'd sailed a 40-footer for years prior to my captivity. The boat was docked in Salerno on the incredibly blue Tyrrhenian Sea south of Naples. \n\nI told the agent to get it prepped for an indefinite voyage. I would start out by working my way along the coast of Italy, stopping at any interesting village. Just to get the feel of sailing again. Then the classical world was my oyster.\n\nI was a little more optimistic about my new future. But there was something I was compelled to do. I knew that it was a mistake, even then. But I had to see Jane one last time. So, I rented the classic ubiquitous white van. \n\nHer husband was a member of Congress. Hence it was no problem finding her address. It was in McLean. That made sense. It's where the DC bigshots squat when they're in town. \n\nThere was no possibility Jane would recognize me. She'd last seen me in my 30s and of course I'd been dead for a dozen years. Plus, I looked nothing like I had the last time we'd been together. \n\nI was clean shaven when I left. Now, I had trimmed back my \"castaway\" beard to a neat, grey, neo-Hemingway look. My face had weathered a lot in the Iraqi heat, and I'd lost thirty pounds. But just to be safe, I did the old \"ball-cap and coveralls\" routine. With a pair of sunglasses, the man in the mirror wasn't me. \n\nI was parked down the street the next morning. I really wasn't stalking my wife. I just needed to say my goodbyes. Even if I was only talking to myself. I'd gotten into the habit of holding long conversations with Jane in my head; in order to pass the time in my lonely cell. What did you expect, total, lucid rationality?!!\n\nA school transport limo drove up and Jane came out with her two kids, a younger boy and a slightly older girl. Then a teenage girl joined them. \n\nReally??!! A nanny??!! The limo made sense. Her husband was an important guy. But an au-pair was uncharacteristically ostentatious for the woman I'd loved. Of course, a person's behavior changes over time, and it had been a decade. Plus, Jane's circumstances were different. She was the wife of a mover-and-shaker now, and she had always been a rich woman.\n\nJane put them all in the vehicle and exchanged a friendly greeting with the driver. Then she stood, hands on hips as they drove off. That caused an intense pang of regretful longing. It was the way she always stood. They waved. She waved. Then she turned and walked back into the house. \n\nIt was like no time had passed. She hadn't changed in the slightest. She still had thick auburn hair surrounding that beautiful oval face and that amazing body. She looked fresh and happy and very well-established in her life. I couldn't believe how much I loved her.\n\nI've done dumb things before. But my reaction to that stupid little sentimental gesture was like somebody was scooping out my soul with a melon baller. It was infinitely more painful than I'd envisaged. I was almost catatonic with grief. \n\nI sat there hands on the wheel paralyzed by heartache. Then the unimaginable happened. I was blasted back to reality by loud insistent knocking on the driver's side window. I turned puzzled and it was JANE. \n\nNaturally, a weirdo sitting in a parked white van might attract some attention on an over-privileged street like hers. I would have probably fainted dead away. But I was so surprised that my instinctive reaction was to roll the window down. \n\nJane said challengingly, \"Can I help you?!\" It was the same smoky contralto voice. \n\nI just stared at her from behind my sunglasses. She was beautiful. She was the woman I loved, and I was some bizarre stranger. The pain was so intense that I was afraid she would sense it. Instead, she just seemed curious and vaguely pissed off.\n\nI had to say something, or the jig was up. I mumbled flustered, \"I'm sorry ma'am, I was just parked here waiting for my boss. We're doing a little work in the area. But I guess he isn't going to show up.\"\n\nJane was staring at me bothered, like she was trying to remember something. I gave her a ghastly smile, which probably made me look even creepier, and said, \"I'll go see what kept him.\" \n\nI started the van and shifted into gear. She stepped back, still looking puzzled. I rolled the window up and hustled off. \n\nIt was the most heart-rending thing I could have done to myself. Jane had been a dozen years removed from my consciousness. Now it was like she'd died right in front of me on the street. \n\nThat little piece of stupidity cost me months of needless mourning. The only way I could cope with that kind of grief was to build my solitary life as far away from her as possible.\n\n*****\n\nIt had been an interesting six years. I'd picked up the boat in Salerno and sailed it through the straits of Messina. Then I coasted along the Bay of Taranto and around the heel of the Italian boot to the Apulian side, waiting for a stretch of clear weather. \n\nI wanted to cruise the Eastern Mediterranean. But in order to do that I had to get across the Adriatic. The crossing is at least two-days and that fishbowl of a sea has some historically nasty storms. Plus, the nearest landmass is Albania and I'd heard that banditry was a major industry in that country. \n\nSo, I thought that a longer three-day reach down the eastern coast of Corfu would be more advisable. Still, I needed good weather to do that.\n\nI eventually docked at a marina situated right under the walls of an old Venetian Fort in Corfu City. After I got things squared away on the boat, I walked across a pedestrian bridge to a place the locals call the \"Liston.\" \n\nThe early evening lights illuminated a fairy-tale promenade. It was full of cheerful passers-by and the areas under the arches were stuffed with folks laughing and talking over cups of strong coffee and ouzo. \n\nIt was so prototypically Greek that I actually laughed out loud. I hadn't done that in years.\n\nIt was then that I noticed a big scruffy mutt diligently working the tourists. He was a charming rogue, with a well-traveled, bon-vivant manner. If he had ever been groomed it wasn't evident. \n\nHe was sauntering along nonchalantly, with a rope of drool hanging from his lower lip like a metaphoric Gauloises. I decided that he looked exactly like a Gallic soldier of fortune, perhaps a former member of La Legion Etrangere. \n\nHe shambled over to me pant-pant-drool-drool. It was my second instance of love at first sight. I ruffled the scraggly fur on top of his big head and said, \"Can I buy you a bite to eat old buddy.\" \n\nHis dark eyes said, \"But of course monsieur, perhaps a helping of Keftethes.\" \n\nWe shared one of the outdoor tables in the arched gallery of the Liston. The Greeks are a lot more enlightened when it comes to dogs. My Legion buddy was sitting with me at the table looking like a seasoned boulevardier; while he polished off a big plate of Greek meatballs. \n\nI'd developed the disturbing habit of conversing with inanimate objects while I was alone. I know it's batshit crazy. But what can you expect from twelve years of isolation? It turned out that La Legion was considerably more articulate than most of the things I talked to. \n\nI said companionably, \"Well my friend, it's just us two old vets sitting here together.\" \n\nMy buddy raised his head, orzo dripping from his jowls, and said, \"Oui - do you think you could order me a plate of Baklava?\" The people at the next table looked astonished. \n\nI dropped a few Euros on the table and said sadly, \"I'm going to have to go back to my boat. It was a long trip and I need some sleep. It was fun dining with you.\"\n\nMy doggy pal gulped the last of his snack, stood up and ambled along with me radiating je ne sais quoi. He said, \"But of course, and now I must have the honor of being your traveling companion.\" \n\nThat was the beginning of a beautiful friendship. I had never been lonely with Jane. But that was part of my past. Now, my life's companion was a furry refugee from the French Foreign Legion. \n\n*****\n\nI was taking in the scenery from my position next to a fig tree at the Karpathos Caf\u00e9. It was a perfect evening in the Eastern Mediterranean. The sun was setting. The air was warm and fragrant. The street was bustling with passers-by and the tourists were out in force. \n\nThe old town of Rhodes is unique in the Dodecanese. In that, its ambiance is crusader rather than classical. It sits inside a coherent set of medieval city walls and the architecture is pure Middle Ages. \n\nThe Turks lost 50,000 men taking those walls. Now you can just stroll through any of the seven gates to a wealth of shops, restaurants and cafes. \n\nMy Legion buddy and I had been touring the Mediterranean together for six thought-provoking years. I'd had him checked out when we got to Athens. It turned out that he was indeed a soldier-of-fortune. Well, at least he was a French war breed called a Bouvier-de-Flandres. \n\nThose dogs are so brave that they were nearly wiped out in World War One. Groomed to his full martial splendor my new traveling companion carried himself with the pride and elegance of a Legion Sergeant Major, metaphoric kepi, swagger-stick, stripes, grenade and all. \n\nDogs are a comfort for lonely and damaged people. They accept you for who you are. There is never a question of loyalty and they don't pressure you to change. They're just there; an uncomplicated living, loving presence. He needed a name. So, I called him \"Buster.\" I had a dog named that when I was a kid.\n\nIt had been a healing period. You think a lot while you're at sea and I spent all that lonely time in self-analysis. That's where I discovered the relationship between reality and change. \n\nMost people live their entire life in just one reality, be it the family farm, assembly line, or cubicle. It might be boring. But it's free of the trauma of disruption. \n\nDarwin's rules encourage humans to avoid unfamiliar things. That's because strange things might be dangerous. Occasionally though, life drops you into an absolutely alien place and you either adapt or you die. That had been my situation. \n\nI was once a respected academic with a beautiful and loving wife. That guy was buried in Arlington and his beloved wife married another man. Now, I was a solitary old fellow with serious PTSD issues sailing the Mediterranean with a big old war dog; who I regularly conversed with in French. \n\nThat might seem crushingly unreal and unfair. But it was where life had put me in my fifty-sixth year. And it was a situation that I was dedicated to making the best of. \n\nThe good news was that I was independent of money needs. The bad news was that I was without a purpose. I knew that I would have to re-invent myself, or I would disappear into self-medication. I was already drinking too much. That was a problem I was coming to grips with. \n\nSo, I formulated a plan that actually made sense. There are a lot of people out there; men and women whose lives had been disrupted or ruined by their service. I had also discovered this newfangled invention called the internet. \n\nThe internet hadn't existed when I went into captivity in 1991. But it was a way of life when I got out. People literally lived and interacted with each other in the virtual world as if they were in a small village. \n\nI had the life-experience from everything that had happened to me in Iraq and my former academic career had taught me how to write. Those two things came together in a new and hopeful direction. \n\nI decided to spend my days talking to my brothers and sisters about survival after war. It took me a while to figure out virtual media. But I had nothing better to do at night except drink. So, I eventually became extremely proficient as a blogger. \n\nI started to blog about the experience of returning to a once familiar, but now alien world. It was a niche. But there was plenty of empathy for my ideas in the blogsphere. The number of views just kept going up, the comments poured in and I started to heal.\n\nI mainly talked about a returning vet's need to escape from the inexplicable rage, inexorable hyper-vigilance, never-ending anxiety and recurring nightmares that accompany time in a combat zone. I even talked in general terms about my own situation. \n\nI couldn't be specific. That would have violated the terms of my agreement. But I DID try to get into the problems that both spouses face when one of them was deployed. I also talked a little bit about the stresses that the relatives of MIAs face.\n\nNobody would have read my stuff if I'd just concentrated on veterans problems. So, I built the theme around my travels, specifically to sites of historic battles; Cannae, Thermopylae, El Alamein, Acre, Gallipoli. \n\nI visited all of the actual battlefields and talked about them. The idea was to weave stories of the monumental events that occurred there, into observations about their lingering impact on the people who participated in them. \n\nFor instance, I sailed into Canakkale in Turkey and took the bus tour down to Troias. That was the site of the Trojan war. My visit to that fabled setting gave me an opportunity to talk about the problems that the larger-than-life participants faced when they returned home;\n\nNow THAT was a Homeric soap opera; what with, Agamemnon showing up with Cassandra, his Trojan mistress, and promptly being killed at his victory banquet by his wife Clytemnestra and HER lover. Or, Odysseus spending twenty years fighting his way back to his wife Penelope; who meantime, was holding off 108 drooling suiters. Talk about faithful!!\n\nMy stories of war and aftermath resonated, given my own unfortunate experience. But they also showed people who had lost spouses to the enforced separation, that they were part of a human experience that dated back at least thirty-five-hundred years. \n\nI was in Rhodes because the siege that kicked the Knights Hospitallers off that island also destroyed the last Christian state left after the Crusades. Effective blogging lies in the pictures. So, the fortifications on Rhodes were an illustration of the points I was making, and the pictures were a boost to my readership. \n\nMy current theme was cause-and-effect. In that, the actions that had put me in Iraq had their origin in events that had occurred here, eight hundred years earlier. And unlike Troy, most of Rhodes's fortifications still existed. I had been blogging about that for a week and it must have hit a nerve. Since, the readership skyrocketed. ",
        "Of course, the Internet wasn't available when we were at sea and it's important to keep a constant stream of posts going. So, I'd write down my thoughts and then uploaded them in batches from a hotel when we landed. \n\nThat's why I was spending the night at the Rodos Niohori Elite Suites, while La Legion had demanded the privilege of being the last line of defense on our boat. I'd fixed him some special rations for his services and checked into the Niohori. \n\nIt was just steps from old town. So, I made my way down to the Karpathos to hang out there. That place is a genuine outdoor Greek cafe and it was ground zero for all of the tourist traffic. \n\nI wasn't trolling for female companionship. That ship had sailed a long time ago. In fact, I hadn't had sex since the night before I left for Fort Campbell. \n\nLet me stop you right there!! I'm really not a freak. I never saw a woman except servants for the first twelve years and the events of my return more-or-less soured me on romance for life. \n\nStill, once in a while I liked to be around happy people. So, I was watching the crowds as they continued to make their way up Sokratous Street. Most of them were going back to the cruise ship docks. \n\nThen there was a ripple of interest. The guys at the little tables began to crane their necks, which was natural. They were Greek men. They looked exactly like the animals on the Serengeti when the lion makes an appearance.\n\nAll of the fuss was because a truly beautiful woman was strolling past. The woman was accompanied by an equally stunning teenage girl, who was most probably her daughter. I might have been celibate. But I wasn't quite dead. So, I checked both of them out. \n\nThey were obviously Americans, based on their clothing and the way they walked. The youngster was in her late teens, or early twenties, with ultra-long legs, a lithe, long-waisted body, a pair of round little buns and long sun-streaked auburn hair. Her face was teenage-wet-dream, model gorgeous.\n\nThe older woman was perhaps mid-forties. She too was dark haired. But she had it in one of those expensive bobs that all the blue-blooded women wear. It framed an exceptionally angelic face. Everything about them screamed MONEY. \n\nWhile the girl was nubile the older woman put new meaning to the term brick-shithouse. She was shorter, perhaps five three, but she had perfect rounded hips, a glorious ass and the kind of boobs that would have launched a thousand ships back in the good-old-days.\n\nI have to admit that I was leering, just like every other guy in the caf\u00e9. The women certainly sensed the male attention as they passed. The older woman turned and glanced in our direction. It was the sort of casual look that females do when they know they're being ogled. \n\nYikes!! caught in the act of perving!! My eyes were locked on a spot a bit south of the older woman's face. So, I hastily redirected my glance up and I was hit by absolute and overwhelming shock. \n\nThe woman was Jane!!\n\nMy brain hadn't quite processed what my eyes had seen. That came an instant later and the reaction was like I'd stuck my finger in a light socket. It was a jolt of electricity that caused a metallic taste in my mouth, made the hair on the back of my neck stand up and goosebumps appear on my arms. \n\nI flinched violently backward and almost fell out of the chair. Of course, that attracted Jane's full attention. She nodded vehemently, like she had finally confirmed something. Then she began to walk toward me. \n\nI would have fled screaming from the scene. But I was trapped by the surrounding tables and the trunk of the damn fig tree. She stood four feet away, both hands on her spectacular hips looking intently at me. I was recoiling from her like she was a ten-foot diamondback about to strike. \n\nThen she said bitterly, \"Aren't you going to invite me to sit down Paul, or Jim, or whatever you're calling yourself now.\" \n\nThe hottie was standing behind her. She had followed Jane into the caf\u00e9 and was looking curiously at both of us. I just sat there horrified, making inarticulate noises and gesturing wildly with my hands. My little voice was screaming, \"I can't handle this!!\" \n\nJane said, voice still bitter, \"I brought your daughter all this way to meet you. The least you can do is invite us to sit down.\" \n\nThat did it. The world narrowed to a pinprick, and I passed out colder than a mackerel. Fortunately, I had backed my chair up so far that I was wedged into the fig tree. So, I just slumped down face first on the table rather than falling over. \n\nI came back to reality, with my head resting in a plate of pita and olives wondering where the fuck I was. Then it hit me, and I nearly passed out again. I raised my head distressed, a piece of pita still clinging to my cheek. Her beloved face was looking back at me truly pissed off. \n\nI hastily brushed the pita off and said feebly, \"I'm sorry Jane. I never meant to intrude in your life.\" \n\nShe hissed angrily, \"Intrude!! What the fuck do you mean intrude??!! You WERE my life. That is, until you chose to disappear from it.\" \n\nHer temper was getting out of control and she was getting louder The girl, who she claimed was my daughter, was looking at me like I was something that she'd stepped in. \n\nEverybody else in that little cafe was enjoying the floor show. \n\nI got my wits about me enough to say, \"Can we talk in private?\" \n\nJane huffed, \"Are you suggesting that famous boat of yours. It seems like we are always working out things on a boat.\" \n\nI said puzzled, \"How did you know about the boat?\" Yes indeed... it was totally off the point, but I still wasn't tracking very well. \n\nJane looked at me like I was the dumbest person she'd ever met and said, \"You talk about it all the time in your blog.\"\n\n*****\n\nThe walk to the boat was in total angry silence. I had no idea what was going on. So, I just lurched along like a cast member from a zombie movie. The two of them must have come in on the cruise ship that was docked on one side of the mole. I was in the marina on the other side. \n\nIt was a ten-minute walk to the boat. I was blasted back to the last time we had done that walk. Jane had been just as angry. Buster greeted us as we boarded. He hadn't expected me back this early. He took a look at my two friends and said, \"But Monsieur, who are these lovely women?\" \n\nI patted his big shaggy head and said, \"It's too complicated to explain mon-ami.\" \n\nI turned to Jane and the girl and gestured into the cabin, \"Perhaps we should go down there to talk. It will be a lot more private.\" Jane nodded grimly in assent. And brushed angrily past me.\n\nThere was the usual uncomfortable jostling as three people and a big dog made their way down a narrow stairway. The 41 is a cruiser so the cabin was wide and luxurious. The two women selected a seat together on the banquette. I sat in a chair opposite. La Legion lay uneasily between us pant-pant-drool-drool. \n\n\"Icy\" is the only word that I could use to describe the ambiance. Jane was staring at me with antagonism, seasoned by longing. I was somewhere between confusion and denial. The girl was looking at me with scornful curiosity. \n\nI finally broke the silence. The obvious question was, \"How did you find out that I was still alive?\"\n\nJane looked at me with condescension and said, \"I don't know how or why you faked your death. But if you wanted to vanish forever, you shouldn't have been all over the internet.\"\n\nShe added angrily, \"My ex-husband was the person who alerted me. He said everybody on the Hill was reading your blog. Neither of us linked up the name, since you obviously changed it. But I'm still interested in veterans. So, I took a look. The second I saw your picture I knew it was you, even after all these years.\" \n\nTwo thoughts hit me simultaneously. The first was, \"Damn!! I never thought about the picture.\" The second and much more overwhelming one was, \"Did she just say ex-husband??!!\" Was that a heavenly choir of angels?\n\nJane was still talking. She said, \"I knew you were in Rhodes because you wrote about it on Monday. We flew in from DC via Rome this morning. The only problem was tracking you down.\" \n\nShe added with a grimace, \" We were checking hotels when we just stumbled on you in that tavern. I suppose that's some kind of karma.\" \n\nThen she paused. I could see the tears in her eyes. She said sadly, \"I had to find out. Why did you leave me? Why did you abandon us?\"\n\nIt was probably one of the big trawlers passing the boat. But my world literally rocked. I said feeling like my heart was about to explode, \"How much do you know about my story?\" \n\nJane leaned forward dramatically, arms on knees, face not more than a foot from mine and stared at me intently. Her amber eyes were awash with misery. The girl was still reclining back, arms crossed looking stubbornly unfriendly. Buster even raised his head. He could sense the tension.\n\nJane said, \"All I know is what they told me. You were killed in some secret mission in Iraq and that your body was sent home for burial. I cried for a solid week and I had so much Valium in me that I don't remember much about the funeral, just them handing me a folded flag. You were gone such a short time I didn't even get the chance to tell you I was pregnant.\" \n\nThen the dam broke and she collapsed back weeping. I didn't have the slightest idea what to do. Somehow holding her just seemed so totally inappropriate. Even worse, my mind was having a hard time coping with the emotional overload. \n\nI had sat in isolation for twelve long years thinking of this moment. Then I had spent almost six and-a-half years knowing that it would never happen. The psychic whiplash was tearing me apart. \n\nThe girl gave me a reproachful glance, as she gathered her mother to her ample chest and said, \"I'm ashamed to be your daughter.\" That statement just poured a little gasoline on the fire. It's beyond me how I survived those first few minutes without stroking out.\n\nJane had stopped sobbing and was getting herself back together. Buster rose, walked over and leaned against my leg; the way big dogs do to connect. I could visualize him saying, \"I'm here for you mon-ami.\" \n\nEverybody turned to look at me. This was the second time in my life that I had to get it right. So, I started off in a measured tone. I said, \"They didn't lie to you. I was shot down and captured by the Iraqis but there was no way our guys would have known that. There was a big explosion. They were certain I was dead.\"\n\nI started to choke up as I recounted that dark night, \"The helicopter snapped in half when we hit. I think that the impact ejected me through the backside of the cockpit. I rolled down a dune, still strapped in my seat. That saved my life, because I ended up just outside a fireball.\"\n\nI got my emotions back under control as I added, \"Jimmy, my gunner was still in the aircraft burned to a crisp. They found another charred body with the wreck. It must have been one of the Iraqi casualties. There were bodies everywhere, They thought it was me. That's what they buried.\"\n\nJane stopped crying and looked at me intently. If anything, the emotional level in the room ratcheted up another notch. I said, trying to keep my voice even, \"It was a desert. A massive battle was fought there. The bodies were unrecognizable. But they were in a logical spot. Shit happens.\"\n\nI paused while the two women digested my words, \"I was kept as a prisoner of war, or maybe strictly speaking a souvenir for the Baath Party. That was right up until our guys showed up in Baghdad twelve years later and freed me.\" \n\nThe woman both stared at me with disbelief slowly morphing into anguish. \n\nI added, \"The Iraqis wisely isolated me from all contact with the outside world. Now I know why. They would have been in a world of hurt diplomatically if our people found out they hadn't returned me after their surrender.\" \n\nI said with cynicism dripping off every word, \"Needless to say I was also an embarrassment to everybody on our side. It kind-of made them look bad leaving one of their own in Iraqi hands.\"\n\nThen I added the punch line. I said, \"When I got back, they told me that you were remarried with two kids.\" Jane gasped. She knew what THAT news would have done to me. \n\nI looked into her eyes trying to project my love and understanding. I said as gently as I could, \"They said you'd done a courageous job of overcoming your grief. I was proud of the way you moved on with dignity. That's the sign of a strong person, which I know you are.\"\n\nJane went back to weeping. She said, \"I knew that you wouldn't want me to spend my life playing the grieving victim. So, I did the best I could. Ralph was a decent guy. That is, while he was courting me; and I thought that he loved our daughter. I tried to be a good wife to him. But you were always there, haunting my dreams.\" \n\nI had the image of Jane living married life with another man; the close familiarity the bantering, the conversations, the little loving touches, the interesting adventures and intimate moments. The pangs of jealousy almost killed me. But then again, that was in the past. She was here now and after almost two decades it was like we had just met.\n\nI waited while my wife gathered herself. I wanted both women to see that what I was saying was my honest attempt to be as positive and practical as Jane had been. \n\nI said, \"Everybody told me how hard it was for you to move on. I knew that I couldn't just horn back into your life after all that trauma, especially with two little kids. I loved you. It wouldn't be fair.\"\n\nThen I paused and nodded in the direction of my daughter, \"And of course, I didn't know about you.\" \n\nI finished meaningfully, \"More importantly, the U.S. government wanted me to stay dead. So, they pretty-much bribed me to go away.\" \n\nJane could understand that. She knew how the game was played. Embarrassing people and inconvenient things never see the light of day in DC; at least if you're the right folks. I added contritely, \"I even went by your place to confirm for myself. Your apparent happiness almost killed me. So, I left, and I never intended to return. I'm a selfish person. I couldn't face what I'd lost.\" \n\nJane muttered under her breath angrily, \"I KNEW it was you. I just didn't trust my instincts.\"\n\nIt had been excruciating getting it all out. We sat there in exhausted silence. All I could hear was the ticking of the navigational clock and the slapping of the little nighttime waves against the hull. \n\nI shrugged, turned to the girl, extended my hand and said, \"Hi, I'm Paul. I hear I'm your daddy.\" \n\nShe launched herself across the distance between us and flung her arms around my neck weeping. \n\nBuster barked once and began to growl a warning. He thought she was attacking me.\n\nI said, \"Relax big guy. This is my daughter.\" \n\nHe said, \"Du rien. Felicitations mon-ami, mon erreur\" and went back to slobbering on my floor. \n\n*****\n\nWe got very little sleep that night. First and foremost, I wanted Jane to tell me everything about the gorgeous creature, with her head on my shoulder, arms hugging my neck. \n\nHer name was Helen. She was named after my mother. The family called her \"Hilley.\" \n\nHelen was conceived the night I left. But Jane hadn't been aware that she was pregnant until well after I had been buried. That was how brief a time I'd been away.\n\nHilley was a stunningly beautiful twenty-year old, with Jane's dusky complexion, long thick sun streaked auburn hair and my blue eyes. Those eyes reflected a depth of humanity and a level of intelligence that was awe inspiring. \n\nHilley was a formidable young woman, an engineering major at Cal Tech and considered by many to be next generation astronaut material. She had been in the Air Force ROTC advanced program since high school and she had already soloed in a T38. \n\nHilley said lovingly, \"I've wanted to be just like you since I was a little girl.\" \n\nJane said fiercely, \"Helen was the only part of you I had left. She saved me from total breakdown. Having her and taking care of her was the most therapeutic thing I could have done. Eventually I started to feel like I might have a life again. That's when Ralph came along.\"\n\nI knew it was coming. So, I braced myself. \n\nJane looked uncomfortable as she said, \"I met him at one of his fundraisers. My family members are big donors of his. He pursued me relentlessly.\"\n\nThen she looked at me, willing me to understand, \"Everybody told me that I needed to start living my life again and Ralph was a decent guy, very suave and good looking. He and Helen hit it off. So, I eventually told him I would marry him.\"\n\nShe added. \"It was a mistake, almost from the beginning. Life with him was awful.\"\n\nHilley added contemptuously, \"Yeah he was a real control freak.\"\n\nTears were running down Jane's fabulous cheekbones as she said, \"I tried to be a good wife. I gave him two children. But I simply couldn't love him like I did you.\"\n\nI flinched. I know how babies are made. Even the passing thought of Jane in sweaty embrace with another man drove an icepick into my heart. Admittedly it was hard to fault her. Since, I happened to be dead at the time. But nonetheless, the thought of Jane sharing her remarkable passion with another man rocked me to the core.\n\nJane looked at me intently as she said, \"It's been almost twenty years and you are still the only man I'll ever love. I even got some professional help about it. But unfortunately, you were lodged too deeply in my heart to EVER be pried out by the mere passage of time.\"\n\nThen she got a bitter look and said, \"Maybe he sensed it. Because, from the beginning he was very possessive and domineering. I endured it for a few years, just trying to be a better wife. But he kept getting more-and-more jealous and demanding.\"\n\nShe gave a little sob and added, \"I never should have remarried.\"\n\nI thought seriously??!! Einstein was trying to force this intelligent and strong-willed woman to love him by mistreating her. How stupid can you get? I was long gone. I was no threat to his marriage. The only person threatening his marriage was the moron himself. \n\nI realized that Jane had endured something like the same hopeless isolation that I had. An unhappy marriage can be as confining as a prison cell, especially for a woman. I could escape captivity. But the only way out for Jane was divorce and that meant failure. \n\nJane paused meaningfully and added, \"In the end, every word that came out of his mouth was toxic, both to me and the kids. I finally gathered my courage and confronted him. Do know what he said?\"\n\nI shook my head mystified. I had no idea why anybody would blow up a marriage to Jane. \n\nShe looked at me like she was delivering a punch line and said, \"He told me that he was sick and tired of competing with my dead husband.\"\n\nShe shrugged and said bitterly, \"There was no way I could live with a guy that insecure. He was the here-and-now and you were long gone.\"\n\nJane added sincerely, \"I didn't flaunt my feelings for you, and I tried my best to make him happy. I gave him all the respect and affection I had in me. But he was right, of course. I DID love you more.\" \n\nShe finished with, \"I finally faced the fact that I couldn't stay in a marriage that was threatened by a ghost and I divorced him.\"\n\nThen Jane got an \"a-ha!!\" look and said, \"When did they find you?\"\n\nI said, \"They freed me on April 7th. I'll never forget that day. I got back to the VA Medical Center in the fourth week of April 2003.\"\n\nA huge thundercloud passed across her face. She said angrily, \"He knew!! The son-of-a-bitch knew!! That's the exact point in time when things started getting really unbearable. It had been bad for a long time before that. But he got obsessed with controlling my life down to the last second.\"\n\nThe lightbulb went on in my head. Power corrupts... it's an old saying and it's true. My problem was that Ralphie had a lot of self-doubt and he was in a position to tilt the table. ",
        "In theory a person gets elected because a majority of voters in the district like their ideas. But the herd votes for the party not the candidate. In fact, depending on the district the voters would elect a bag of hammers if it had \"Republican\", or \"Democrat\" written on it. \n\nStill, no elected official believes that they are in office simply because of their party affiliation. They think they're there because of their sparkling personality and great ideas. Hence, for most of them, \"the will of the people,\" is the twenty-first century equivalent of the \"divine right of kings.\" \n\nTHAT unrealistic level of entitlement fosters a huge helping of delusional behavior, which usually centers on the thing that elected officials are most dedicated to; feathering their own nest. That would include eliminating any inconvenient rivals for the affections of your fair lady. \n\nThe end always justifies the means in DC. And because the minions in the bureaucracy serve at the pleasure of the guy in office, they will enable anything that doesn't actually involve jail time. \n\nRalphie-boy must have heard that they'd dug me out of the Republican Palace, and he'd connected the dots. He probably didn't know the details of my subsequent disappearance. But it was clear that all of the things that happened after I got back were designed to keep me as far away from Jane as possible, even if that was a totally morally bankrupt thing to do. \n\nI had to agree with Ralphie on one thing though. Jane was worth whatever backstabbing he had to do to retain his husbandly rights. Still, even though Ralphie could disappear me, he couldn't make Jane love me less, or him more. The heart knows what it wants. \n\nIt was that collection of monkeys fucking in Ralphie's attic that caused the self-destructive behavior. Which of course, eventually led Jane to divorce him. It was an appropriately Sophoclean resolution.\n\nJane was sitting across from me looking apprehensive. That was an understatement. Imagine if you will, that you've spent a third of your life longing for something that you thought was an impossibility. Then out of the blue, it simply falls into your lap. That was our current situation. \n\nAs usual, Jane had taken the initiative. I had given up hope, as hard as that was. But my picture told her that I was still alive, and she had acted without hesitation. \n\nI thanked my lucky stars that my wife was bold and decisive. Three hours ago, I had been a nautical vagabond, whose only friend was a canine soldier-of fortune. Now I was with the only woman I'd ever loved; and I had a daughter who any man would be proud of. \n\nI am not exactly the most sensitive guy. But I DID realize that the worst thing I could do was just assume that things were like they had always been. It takes time to adjust to radical change. Jane and I had a great marriage, full of love and happiness. Still, we were kids back then, I was in my thirties and Jane was in her late twenties. We hadn't had any real experience with the facts of life. \n\nThen life came along and taught both of us a few harsh lessons. There was no doubt that we loved each other. But we needed time and space to adjust to the people we'd become. We had almost twenty years of separation and a lot of water had flowed over that dam. \n\nThe fact was, nothing was the same. We had all of our old feelings and memories. But our budding new relationship was like a trip to Ikea. We had the pieces. But there was still \"some assembly required.\" \n\nStill, life had tempered me, and any hesitation I might have felt was over. I was going to take the steps to ensure Jane's presence in my life forever. I said simply, \"I love you Jane. I have always loved you. Thoughts of you were the only thing keeping me alive in the dark despair of that Iraqi prison and you were never far from my mind in all of the ensuing years.\"\n\nShe got tears in her eyes. I added, \"I'm a boat bum now. My only attachment is this dog and he's not very demanding, as long as he's well-fed. You are the one with the complications. So, tell me what you want me to do and I'll do it. Just as long as it ensures the presence of you and Hilley in my life.\"\n\nJane got the same look of sheer relief and utter joy that she had gotten the night we agreed to our lifelong love. She said gently, \"All you have to do is promise to never leave me again.\" \n\nReally??!! Like THAT was ever going to happen. I'd already lost Jane once to death. It was going to take the real thing to separate us this time.\n\n*****\n\nThe three of us made our way back up the mole as the blood red disk of the sun came up over the hazy top of the old City. La Legion was behind us, dug-in on the boat. I'd issued rations for a couple of days and he knew how to use the neighboring shrubs for his other needs. \n\nHe called out, \"Bon chance,\" as we left. Or maybe it was just a bark. I was getting back to normal.\n\nThe sun had begun to heat up the streets and the merchants were bustling as we walked the few minutes from the Mandraki docks up to the hotel. Jane and Hilley were at the Ellique, which is in Old Town. We could have gone back there but I had suite with a little private terrace, and they didn't. \n\nThe suite was on two levels. It was expensive. But thanks to Uncle Sam, money was never a problem. I figured that Jane and Hilley could use the master to sleep and there was a perfectly good couch downstairs. A couch was an upgrade for me. I'd spent years sleeping on a pallet. \n\nThe room-service people dropped off a big plate of feta and olives and some Greek pastries along with their aromatic coffee. We sat in the bright Mediterranean sun and listened to the birds chirp in the nearby rafters, while the city around us began to stir.\n\nSo much emotional energy had been expended in the past few hours that we might not have much to say to each other. But I wanted to do a total reset before we grabbed a nap. There had been far too many false assumptions and misunderstandings. That ended now. We would wake to a new life.\n\nI said, \"This has been emotionally draining for all of us and we will all be a lot more rational once we've slept on it. But if there's anything that needs to be said, let's say it now.\" \n\nJane gave me a look like I was wavering and said, \"I thought that any hesitation about our future was behind us. We're together as a family. You and I have each other again. What more do we need?\" Jane's a sensible and realistic woman. It is one of her many virtues.\n\nPeople aren't perfect. We make snap decisions with the best of intentions. Then if they break bad, we live a lifetime of regret. That is, unless we take the logical steps to fix the mistake. It should seem self-evident that an error in judgement ought to be corrected. But one simple human foible prevents that. We try too hard to please other people. \n\nI hadn't exercised my absolute right to contact my wife when I returned. I did that because, weak as the excuse might sound, I was sucked into a false narrative by a bunch of total strangers. And their deceitful and totally self-serving advice had led to six years of unnecessary pain for both of us. \n\nFor her part, Jane had married the wrong guy. She did it simply because everybody expected her to. Then, she stayed married to him because she didn't want the people in her life to think badly of her. That's the way things had gone for both of us. \n\nAdmittedly, circumstance had created the situation. But it was our eagerness to please that had kept us in that trap. All-in-all that was a fucked-up approach to life. But we were together now, and that union was all that it took. We only needed to please each other now. \n\n*****\n\nBesides being tough and decisive, Hilley is a genius. I opened my eyes an indeterminant period of time later to see an angelic face hovering over me. I hadn't slept in close to twenty-four hours and it took me a moment to remember that the face belonged to my daughter. \n\nMy heart flip-flopped with love and pride.\n\nHilley has Jane's ideally proportioned features; perfect cheekbones, long slim aristocratic nose, wide sensual mouth and pointed chin. But It's her incredible eyes that make her exceptional. \n\nJane is a blue-blood Mayflower aristocrat. Meaning, she's Anglo-Saxon on both sides. But rather than having the usual fair skinned Brit complexion, my wife has an exotic dusky coloration that she inherited from the Celt-Britons who inhabited the island long before the Romans showed up. \n\nThus, Janes eyes are amber, like a cats. On the other hand, Hilley's huge eyes are bright china blue, like mine. The contrast between my daughter's gorgeous dusky face and those blue eyes is absolutely mesmerizing. \n\nRight this minute, she was looking at me with amusement and love. She said breezily, \"I just wanted to let you know that I was going back to the Ellique for the rest of the day. I'll see you all tomorrow night. \n\nI scrambled to my feet saying, \"I don't want you to go Hilley. I want to spend as much time as I can with you. We have almost twenty years of catching up to do.\" \n\nHilley laughed and gave me a big daughterly hug as she said, \"Now that I've found you, I'll never let you go. We have the rest of our lives to be together. But I want to give mom and you some alone-time to reconnect, just you and her.\"\n\nShe said earnestly, \"You have no idea how difficult her life has been. Even when I was a little girl, I could tell how much she loved and missed you. I was nine when she married that loser and I knew from the start that it was for all the wrong reasons.\"\n\nI looked troubled. My daughter said by way of explanation, \"They were bugging mom to couple up every time we visited Nana's house. They didn't want her to \"waste her life.\" That was said with air quotes.\n\nHilly said, \"The family pressure might have been most of her bad decision. But that wasn't really why she did it. The night before she married, she confessed that she still loved you. But you were gone forever, and she wanted to give me a real family to grow up in.\" \n\nI looked troubled. So, she hastily added, \"Alex and Cassie are sweet kids, you'll love them, and things will be better now that mom has the man she truly belongs with.\" \n\nThen she gave me one of those worldly looks. They were the sort that a goddess like my daughter had perfected by the time she was fourteen. She said, \"But the two of you need to fully connect and that's hard to do with a kid hanging around. Especially one who knows what all the racket means.\" \n\nShe waggled her eyebrows suggestively and added, \"So I'm going to hole up at our hotel until tomorrow afternoon.\"\n\nIt was a noble gesture and I knew that Hilley could handle herself in any situation. She's no slip of a girl. She radiates strength and physical confidence. \n\nShe has a toned athlete's body, lithe and sleek like a greyhound with fabulous muscled legs, taut hips, a long slim waist and surprisingly big round boobs on a five-seven frame. But a father always worries about a daughter who's as strikingly beautiful as Hilley.\n\nI took both of her hands in mine and said, \"Do me a favor and spend the night on my boat instead. It's a lot more interesting down there in the harbor and Buster could use the company.\" I knew that La Legion would fight to the last man to protect her. \n\nShe knew what I was thinking. That was my first really cliched fatherly gesture. She smiled at me lovingly and said, \"I can take care of myself. But I'd love to spend a day on your boat.\"\n\nAt that point Jane's voice said, \"Not without a little shopping first.\" Jane and Hilley had been in a rush to get to Rhodes. So, they had traveled light, planning to live off the land. Now the shops in the old town were about to reap a windfall.\n\nI stayed behind in the Niohori while Jane and Hilley pillaged Sokratous street. I still had blog articles to post. So, I wasn't at the actual scene of the carnage. Jane returned by herself with a raft of shopping bags, radiating happiness. She had walked Hilley down to the boat, just to make sure that she was safe. \n\nShe said puzzled, \"What kind of dog is that anyhow? Is he French? He did everything but kiss her hand\"\n\nI laughed and said sincerely, \"He IS quite the man-of-the-world. But Hilley will be safe with him. He's 100 pounds of steadfast loyalty, ferocious courage, and a veteran of the French Foreign Legion.\" \n\nJane chuckled lovingly and said under her breath, \"Still as nutty as ever when it comes to dogs.\" \n\nAs the sun set, we made the ten-minute walk from the hotel to the restaurant. It's called Wonder and it is over near the windmill. It's a wonder indeed. A lovely place for romance, with good food and a beautifully lit patio, which is surrounded by a dense array of fig and olive trees. \n\nMy reality was still adjusting to the fact that the woman who I thought I had lost forever was walking beside me in her four-inch heels, holding my arm in order to steady herself on the rough sidewalk. \n\nI looked down and she smiled up at me. I remembered the first instant I saw her in class and how that sight had literally taken my words away. I noted with satisfaction that I still have the exact same awestruck feeling when I looked at her. \n\nShe had suffered widowhood and yet she raised the most precocious daughter ever conceived. She had a failed marriage. It was unfortunate. But I didn't blame her for trying. People are programmed by instinct and society to couple up. It's often too easy to fall into marriage and hard to get out. \n\nBut she had really only loved one lucky man. Given her pining away for me, her ex-husband's treatment might have even been slightly justified. I don't know how I would react to the discovery that my wife was hopelessly in love with a dead man. \n\nMy guess is that he considered the abuse an advance on his payback. Not the noblest, or most manly of attitudes. But understandable considering the insecurities of a certain type of fellow.\n\nWe ate a romantic dinner on the lighted terrace, sitting among the groves of fig and olive. I looked across the table at her in the soft Greek twilight. She was wearing a Christian Dior dress that she must have picked up that afternoon. \n\nIt was silk and it had a little sleeveless top covered by a short jacket. The low scooped top showed off her full dusky breasts with about four inches of delectable cleavage. \n\nShe was gazing at me out of those tawny amber cat eyes. The full weight of her love was behind the look. I took her hand and I said, \"I am ready for a new chapter in our life.\" \n\nThat caused an anxious expression, so I quickly added, \"As you know, I'm dead and I want to keep it that way. It would take far too much time and money to resurrect me and I want us to be married as soon as possible.\" \n\nThen I paused and said, \"So let's just pledge our love here. There is nothing that says I can't get married under my new identity. Is that alright with you?\" \n\nWomen probably don't realize how important an occasional longing glance is in a marriage. Men don't like always being the aggressor and it often seems like women forget that they have to communicate how much they want a guy. \n\nWomen feel like it isn't necessary to look obviously enthralled, because in most cases they are always available. Still, it is important for the guy to know that the object of their affection is suffering from the same pangs that they are.\n\nWhat amounted to my proposal provoked one of Jane's hungry, \"come-hither\" looks. And it was like no time had passed. It told me that she wanted me as much as I wanted her. Forget dinner!! We rushed back to the Niohori.\n\n***** \n\nShe walked into the room turned and faced me. The silvery light of a big Mediterranean moon silhouetted her beautiful curves. Then, she stepped forward threw her arms around my neck, hoisted those huge boobs into my chest and proceeded to try to swallow my tongue. \n\nIt was the first time in almost twenty years that I had kissed her. You can imagine the tornado of emotion sweeping through my brain. It was the fulfillment of my hopeless dreams.\n\nI have often remarked on Jane's kissing, which is something that distinguishes her from any other woman I have ever known. She \"opens\" herself to you in ways that are so intimate that it could easily pass for real intercourse. \n\nWhen you kiss Jane, it is almost like you are entering her. And she is totally \"there\", like the kiss is the only thing in her world at that instant. It is a form of giving of herself that is characteristically and uniquely Jane. \n\nBut when Jane wants sex, the kissing very quickly turns to other things. She dropped the kiss, took my hand and led me over to the bed. She sat me down and proceeded to slowly and lovingly undress in front of me. \n\nShe said teasingly, \"I just want to see if you still want this old woman.\" That was a comically ridiculous statement. Jane was 47 and she looked exactly like she had twenty years before, just with a little more character in her face.\n\nJane unzipped the dress, and it slid down her curves to puddle on the floor. That revealed a frilly white bra, which held two of the most magnificent mounds that evolution has ever granted to a human female. She then undid her bra and the works of art themselves were revealed. Michelangelo himself couldn't have created a more perfect set. \n\nHer still flat stomach and narrow waist led to the flare of her hips. Almost the first thing I remembered about her from our earliest days was the little gold dangly thing that she has affixed to her belly button. \n\nThat little piece of jewelry sitting in her otherwise perfect stomach was the thing that I was fixated on when she was seducing the football player, in order to get my attention. I might add that I am still pea-green jealous about that; even though I technically didn't know her then. \n\nThat little ornament was still sitting there after twenty-four years, as it always had. I gazed at it resting in the sexiest belly button I have ever beheld and reached out to touch it. That got my hand slapped. \n\nSo, I sat back like a good boy and waited. She hooked her thumbs in her thong and worked it down her fabulous dancer's legs kicking them out of the way. She was standing there gloriously naked. Her body was so perfect that I thought my heart would burst.\n\nShe reached out and slowly and lovingly unbuttoned my shirt. I looked into those hungry cat eyes and they were stoned with lust. But she was planning on taking her time. She gracefully pushed the shirt off my shoulders, and I slipped if off and threw it behind her. \n\nThen she went to work on my belt. I raised my butt so she could peel my pants and boxers off but instead of just pulling them she slowly bent over and worked them down my legs. As she did that, I had a good long leer at that muscular back and her spectacularly full round hips and butt, the essence of womanhood. \n\nShe then stood up and moved past me on her hands and knees and onto the bed. I was about to jump up and mount her from the back, but I got my arm slapped again. That wasn't romantic enough for the first official time. \n\nThe Jane lay down on her back and looked enquiringly at me. I flipped onto my side and began to stroke her beautiful naked body. She closed her eyes and I swear she started to purr. \n\nI wanted to take a second to appreciate her perfection. At age 47 she is still as beautiful as she was 20 years ago. Her tits, which in most women that age are headed south, were still as full, firm and round as they have always been. \n\nThey are so big that they lap over the side of her rib cage, but they have not dropped much since she was a young bride. The aureoles and nipples were bigger. Of course, she breast fed her children. She told me she wanted to get the full set of antibodies into them and I believe that since our daughter is a physical specimen. \n\nAt present Jane's nipples were standing like a couple of stalwart watch towers on two huge round hills. But the thing I was gloating at was that beautiful face, which has a few lines now but the same symmetry that I have worshipped from the moment I met her. ",
        "Her eyes are huge and compelling even when they are closed as they were now. She has a slim Anglo-Saxon nose, long and straight as a Norman helmet guard. Her mouth is wide, sensual and beautiful and it promises delights with those faultlessly sculptured lips that defy imagining. \n\nRight that second the mouth was curled in a snarl and her lips were emphatically saying, \"You had better fuck me right now or I am going to start without you.\" \n\nI took a final moment to memorize the dimples and the sharply pointed chin that complete her perfect oval face. Then I rolled over on top of her and looked into those powerfully intelligent eyes. The sensation of her ripe round body was something I remembered in many a fantasy night in Iraq. I realized I'd underestimated how good it felt. \n\nShe pressed every inch of that body against me. For such a substantial woman I am amazed at Jane's ability to be \"boneless\" in situations like that. I know women are a lot more flexible than men. But Jane carries the ability to mold herself to a man with some new height of sensuality. I squashed those huge tits to my chest. She gave a slight moan and her breathing became much more noticeable. \n\nWe kissed that way and she humped and rubbed her mound back and forth underneath me while making soft cries. My little voice whispered, \"She must be as hungry as you are.\" Of course, she was. It'd been two long decades since we'd last done this.\n\nWhile we were kissing, I put one hand on her left breast and began to manipulate it. She increased her humping and added low moans. The elastic feel of that huge perfectly shaped orb under my hand was giving me a woody that I wanted to take a picture of for future reference. \n\nI took a second to do the insertion. She normally handles that because she is always in a hurry. But she was in the process of grabbing the backs of her own knees and so I could take a second to slowly slide into that silky tight-fitting space. The trip up into her was an experience in heat and wetness. Her womanly scent was maddening. \n\nI fitted us tightly together pubic bone to public bone and ground. She gave a gasp that I am sure got the attention of the entire hotel. Then she began to breathe very slowly and deeply, her giant tits were rising and falling and moving around between us as we began to sweat. \n\nI was into my stroke now and our panting merged. She was making little moans and ahhhhs as she moved in harmony with me. Each time I bottomed out in her she would exhale a little puff of air. \n\nI had one hand on her tiny rock-hard waist just above the flair of her muscular hips and I was buried in her to the top. Then we began to really move. I looked at her beloved face, which was currently a mask of passion. She was driving herself into my pubic bone with all the strength in that powerful little body. \n\nShe was not making her usual loud moans, only a series of uh-uh-uh-uh-uh-uhs!! That in some ways was even sexier, because it conveyed the maximum effort she was putting out. Her insides were spasming. But she hadn't come yet. The heat and smell was beyond exciting into some new realm of sexual stimulation and pleasure. \n\nThen she started to fervently whisper, \"Ahhhh Yesss!! You're so deep inside me!! Fuck me, Fuck me!! Come inside me!!\"She began to whisper, \"Ahhhh Yesss! Fuck me harder! I'm almost there! Fuck meeee!\" and then she erupted in a frenzy of bucking and shaking that drove me into a deep valley of coming. \n\nI have come with her in many ways with her. Each time is a little different. In this case she seemed to be totally open and accepting of my seed like she was a dry field and it was the first rain of the season. You could almost feel her flourishing as it happened. \n\nShe kept hissing, \"Yesss! Fill me up!!\" as I pumped into her.\" Jane is a little too old to have another kid and she was on birth control anyhow. But there are times that our orgasms are so intense that it would make a baby. This was one of those times. \n\nWe lay there in the afterglow panting. She turned on her side and said, \"I am yours forever\". I was thinking the exact same thing and I told her that. I often wonder if we had such great sex because we loved each other that much, or the sex was just something we are able to do for no other reason except our total compatibility. \n\nWe were side-by-side in the moonlight, hands locked. I said urgently, \"We need to collect Hilley bright and early tomorrow and find a church.\"\n\n*****\n\nAnd so, the man formerly known as Paul Eric Larson and Jane Anne Alden were reunited in the Church of the Virgin of the Burgh. It's the oldest chapel on the island of Rhodes; located just inside the Gate-of-the-Virgin-Mary in Old Town. \n\nOkay, the wedding wasn't actually official since it was just the two of us. And the church, which was almost the first structure built by the Knights when they came to Rhodes in the 1300s, had been bombed into ruins during World War Two. \n\nStill, it gave us a formal launching pad for our new life together. Since Jane and I are technically still married, we thought we would dispense with the pesky details. Jane had legal minions to sort that out for us. It might require a visit to a judge. That's all. Either way we were husband and wife.\n\nHilley served as Jane's maid of honor and Buster D. Dog, Sergeant-Major, La Legion Etrangere, was my best man. \n\nWe said a few things that needed to be said. I told Jane that she was my life and my salvation in my darkest hour. Jane in turn, told me that she had never lost her love for me, even when she thought I was dead. \n\nI had the boat and none of us were in a hurry. Hilley's next semester didn't start for a couple of months and Jane's two younger kids were with her huge extended family for the summer. So, we packed up everything and headed out of Mandraki harbor on the jib, bound for Santorini. \n\nWhy Santorini? Well, it was either east, or west and Santorini is a lot more romantic than Turkey. \n\nKismet is the junction between inevitability and fate. It's an old-fashioned term. But it perfectly described Jane and me. We belonged together, no matter how much the world had tried to intervene. \n\nThe spinning wheel of chance had finally come to rest, and I understood one vital truth. People really only need a few indispensable things. Most important, is the one person to share your life. \n\nThe breeze picked up and the mainsail cracked as it filled. The bow began to rise and fall as we moved into the swells of the blue Mediterranean. I could hear my splendid daughter whistling a tune as she fixed breakfast in the galley below. \n\nDestiny had brought Jane and me back together again. It didn't matter what happened next. We were with each other and that was all that really mattered. We had a lot of catching up to do. But the past was just prologue now. I looked down at my wife's perfect face and saw my future shining back at me."
    ],
    "authorname": "dtiverson",
    "tags": [
        "deceit",
        "ptsd",
        "wife remarries",
        "misunderstanding"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/well-go-no-more-a-roving"
}