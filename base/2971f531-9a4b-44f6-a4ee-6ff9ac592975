{
    "title": "The Replacement Pt. 03",
    "pages": [
        "This is one part of a 5-part story. It is mostly a tale of first-time exhibitionism, but in certain chapters it does contain some incestuous overtones in regard to one of the relationships. If that is not your cup of tea, this probably isn't the story for you. Consider this your warning.\n\nIf you like this story and want to follow my characters' adventures within their connected universe, I recommend bookmarking my page, as the next story may or may not be in the same category. Constructive feedback is appreciated.\n\nAll characters involved in sexual or explicit activity are 18 years of age or older.\n\nThis part of The Replacement picks up directly from the previous part. You might want to consider starting at the beginning, so it makes more sense, but that's up to you. Enjoy!\n\n*****\n\nMonday night, 4 days before Opening Night\n\n\"Hello?\" I answered.\n\n\"Gavin?\" Kaitlyn responded.\n\n\"Yes...what's up, Kaitlyn?\"\n\n\"Umm...\" I waited but she didn't finish.\n\n\"Can I help you?\"\n\n\"Uh...I...\" she stammered. I waited again and she finally continued. \"I can help you.\"\n\n\"What do you mean? Help me in what way?\" I had no idea what she was talking about, and I wondered if she had been drinking. I knew she was only eighteen, but it was unrealistic to think that underage kids didn't party or get drunk.\n\n\"I can do it,\" she blurted out.\n\n\"You can do what?\" I asked.\n\n\"I can play Josie,\" she said in a soft voice.\n\nSuddenly, it felt like the air left the room and all I could hear was the pounding of my heart in my head.\n\nI had known Kaitlyn Crosby for a little while now. When I bought the theater two years ago, she had been heading into 11<sup>th</sup> grade. During that period of time, she had had lead roles in a number of the family friendly plays and musicals that were put on by some of the other directors who worked at my theater. She was a great little actress, and I knew that she intended to pursue her acting career at college.\n\nShe turned eighteen at the beginning of the summer and had asked me if I would allow her to gain some experience behind the scenes as the stage manager for my summer show. At first, I had balked at the idea because the show I was directing was strictly for adults, with full frontal nudity and explicit sexual contact. But she was persistent and after speaking with her parents, who seemed supportive, I conceded.\n\nKaitlyn usually wore dark-rimmed glasses and had curly red hair, which she kept tied back into a ponytail most of the time. The only times I had seen her hair down was when she was in roles that required it, and without her glasses she reminded me of the princess in that Disney movie Brave. She was about 5' 7\", and usually buried under layers of oversized clothing. Outside of hoodies and sweatshirts, I had only seen her in various stage costumes, none of which had been very revealing, and I couldn't honestly tell you what kind of body she had. Not that it really mattered, but I'm a guy and I notice girls with nice bodies. I can honestly say that Kaitlyn had never even been on my radar in the sexual attraction department.\n\nShe had done a great job so far as my stage manager, dealing with everything backstage so efficiently that I rarely had to do anything other than direct. And I knew that she would have continued to perform beyond my expectations. But it was over. The show was canceled.\n\nLast night, after a grueling Tech Day, my leads, David and Caroline Parker, had hit a deer on the interstate. Their car had flipped over the guardrail and rolled into some trees. Caroline suffered only cuts and bruises, but David had two broken legs and numerous fractured ribs. He would be convalescing for months, and he wouldn't be on the stage for a long time. I had briefly entertained the idea of filling his role myself, but he and Caroline were newlyweds in their late twenties, and she couldn't continue her part in the play without her husband. Especially since she would have to have sex with another man.\n\nI had spent most of today coming to terms with the cancellation of the show and was well into a bottle of scotch when moments ago Kaitlyn called and told me that she could take over Caroline's role. The shock surged through me as I tried to process this new information.\n\n\"What--what are you talking about?\" I stuttered.\n\n\"I can do it, Gavin,\" she said again. \"I had the entire script memorized by the time of our first rehearsal, and I know all of the blocking too.\"\n\n\"How?\" I asked, not certain I believed her.\n\n\"I have an eidetic memory,\" she replied. \"I memorize patterns and text almost instantly.\"\n\nI thought about it for a moment, wondering if it could work, when I suddenly remembered that she and I would have to have sexual intercourse on stage--and she was eighteen years old.\n\n\"No!\" I exclaimed.\n\n\"Why?\" she asked, her voice pitching higher.\n\n\"You're too young. And--and you know why! Your parents would never allow it.\"\n\n\"I already talked to them before I called you,\" she said defiantly.\n\n\"And they agreed to you playing a role in which you would be fully nude and performing sexual acts onstage?\" My own voice was rising as the incredulity of the idea pressed down on my mood and came out as annoyance.\n\n\"Yes,\" she responded, then added, \"After I talked them into it. I'm eighteen. I'm an adult. I told them that I was leaving for college in a few weeks, and if the same role was offered to me there, I would take it and they wouldn't have any say or even any knowledge of it. So, it didn't make sense for them to refuse to allow me to do this.\"\n\n\"But you are going to college in Florida,\" I added, trying my best to talk some sense into her. \"You live here. You are going to have friends and family who may see you if you are in this show--naked--and doing things of a sexual nature. Are you telling me you are ready for that?\"\n\nKaitlyn paused, and I waited for her answer. \"Yes,\" she said. \"I'm ready. Acting is my dream, and I will do anything I have to do to make it big. I plan on going to Hollywood and if I need to do nudity or other things that push my boundaries, I'm willing to do whatever it takes.\"\n\n\"This is a small community theater in southwestern Pennsylvania. This show isn't really going to help you reach your dreams of stardom,\" I said, continuing to play devil's advocate, even though a kernel of hope was blooming in my chest.\n\n\"I know,\" she replied. \"My parents said the same thing. But if I can do something like this here at home, it won't be so intimidating at college. I feel like I would be ahead of the game, and it could help me be more fearless in my acting and in my selection of roles. Please, Gavin. I know I'm young. And I'm not some gorgeous blonde like Caroline. But I can do this.\"\n\nI took a deep breath. My throat was beginning to feel dry. \"And you know you would have to be sexually intimate with me, right? I'm thirty years old. And you, at eighteen, are OK with that? You would be OK with going down on me? And me going down on you? And having actual sex with me? And all of this would be onstage in front of hundreds of people for two nights, two weekends in a row. You're positive that that is something you could do?\"\n\nI heard Kaitlyn's breath catch in her throat as I laid it all out on the table in graphic detail. I waited for ten seconds, hearing nothing but silence. My hope began to die again, certain I had finally scared her off.\n\n\"Yes,\" she said quietly.\n\n\"That doesn't sound very confident. I don't think this is a good idea.\"\n\n\"Yes! I can do it, Gavin! Give me a chance. Please!\"\n\nAfter a moment I responded. \"Let me sleep on it. I'll let you know tomorrow. Goodnight, Kaitlyn.\"\n\nI hung up the phone before she had a chance to plead her case any further. It was late and I was somewhat drunk. My head was muddled, and my emotions were all over the place. Maybe the morning light would bring clarity.\n\n*****\n\nTuesday morning, 3 days before Opening Night\n\nI woke at 7:48am, after probably four hours of sleep, and immediately recalled the conversation with Kaitlyn. The idea that I would play Josh opposite an 18-year-old Josie was ludicrous. I worried about the aesthetics of it. Would it even look right? Could I age her up enough for it to be believable? And what would people think of me having sex in my own show with someone who was a minor less than three months ago? Would they even understand that I hadn't intended it that way? That I wasn't some kind of pervert?\n\nI struggled with the idea for two hours, trying to think of every possible angle and why it could or couldn't work. Ultimately, I began to realize that it might actually be doable. The ember of hope that had been ignited last night was beginning to flame. Kaitlyn, it seemed, was fully on board. I wondered if that had changed overnight. After staring at my phone for ten minutes, I fired off a text.\n\nAre you still willing to play Josie?\n\nI received a reply less than twenty seconds later.\n\nYes!\n\nStand by. I'm going to call your parents.\n\nK.\n\nWith a shaky hand I dialed Kaitlyn's home number. Her father, Jerry, answered after the third ring.\n\n\"Hello?\"\n\n\"Hey, Jerry, it's Gavin Dillinger. How are you?\"\n\nThere was a slight pause before he answered. \"I'm OK, Gavin. What's up?\"\n\n\"Uh, this is a little awkward,\" I began. \"Kaitlyn called me last night.\"\n\n\"I heard,\" he replied.\n\n\"Yeah. So, I guess you know about what happened to David and Caroline Parker.\"\n\n\"I do. It's terrible. Damn deer are thick as mosquitoes around here.\"\n\n\"Yes, they are,\" I responded, trying to think of how to word what I wanted to say.\n\n\"Listen,\" Jerry said. \"I understand your predicament. Kaitlyn explained everything. We were fully on board with her working behind the scenes. I know she really wanted to have that backstage experience when she went away to college, and we've seen your shows. We had talked it over with her beforehand and had decided she was mature enough to handle it--backstage. But, when she came to Diane and me last night and told us that she wanted to be in the show, I can't say we were overjoyed.\"\n\n\"I can imagine,\" I responded with a lump in my throat. \"It's a very adult show.\"\n\n\"Yes. But Kaitlyn is technically an adult now. And when she helped us realize that she could possibly be in this same situation in just a couple months at college, we conceded her point. I can tell you are nervous about this conversation, so I'm going to let you off the hook. Honestly, the fact that you are nervous eases my mind a little. It means that you take this seriously. And if I can have your solemn promise that my daughter won't be mistreated or taken advantage of in any way, then she has my permission to be in the show.\"\n\nI stood with the phone pressed to my ear and my mouth hanging open, dumbfounded at this turn of events, for long enough that I heard Jerry Crosby clear his throat.\n\n\"Yes, Jerry. I absolutely promise that I will take care of her. I would not think of mistreating her in any way and I will be super protective of her. Thank you very much. You have no idea what this means. I thought that this show was dead in the water. Thank you again.\"\n\n\"She's standing right next to me, so I may as well put her on with you. I'll talk to you later, Gavin. And I'll be holding you to that promise.\"\n\n\"Yes, sir,\" I responded happily.\n\n\"Gavin?\" I heard Kaitlyn say.\n\n\"Hey there, Kaitlyn. I guess we are doing this.\"\n\nShe squealed and I quickly pulled the phone away from my ear.\n\n\"Can you come over to my house for lunch? I want to talk over some things.\"\n\n\"Of course!\" she exclaimed. \"What time?\"\n\n\"Can you be here by 11:30?\"\n\n\"I'll see you then, Gavin,\" she said.\n\nWe ended the call and I sat at my desk with a million thoughts running through my head. I had to let the others know. We had a rehearsal tonight.\n\n*****\n\nKaitlyn hung up the phone and jumped up and down in a manic display of pure joy, then hugged her dad and thanked him profusely. She ran to her room and immediately called Haley. She told her the news and they chatted for a few minutes, then she hung up the phone and paced aimlessly around her room. She was full of nervous energy.\n\nGavin had invited her to lunch, which was only an hour and a half away. But she needed to treat it like a job interview. If he didn't think she could handle this after speaking to her over lunch, he probably wouldn't go through with it. So, how could she make sure he didn't change his mind?\n\nI need to look older, she thought to herself. She took a quick look in her closet and realized that nothing she had was going to impress him. She rifled through the pile of new clothing her mom had bought her for college, but there was nothing that really stood out there either. They were a lot nicer than what she had in her closet, but they didn't project the image of a 20-something professional.\n\nSuddenly, a lightbulb went on over her head. The wardrobe at the theater. She and Caroline were about the same size--other than their boobs--and she was positive that Josie's work uniform would fit her.\n\nGrabbing her makeup bag and everything else she would need to get ready, Kaitlyn hopped in her car and sped off to the theater. Gavin had given her a key to use during the production in case she needed to let herself into the theater, and she did just that. She made her way to the wardrobe room and found the rack containing their show's costumes. At least, it was supposed to have the costumes. Kaitlyn momentarily panicked until she remembered that they probably hadn't been put away from the cleaners yet. Gavin had a special deal with a local dry cleaner, and every night he would drop the clothes they had worn for that night's rehearsal in a drop box at the cleaners. The cleaners would then deliver them back to the theater by nine the next morning. She checked the hall in the back by the rear entrance door and found what she was looking for there, hanging on a rack in plastic polybags. Grabbing everything off the rack, she made her way to the ladies' dressing room and dropped it all on a chair.\n\nKaitlyn rifled through the polybags until she found what she was looking for--Josie's business suit. By the time she had done her hair and makeup, she only had twenty minutes before she had to meet Gavin. Her heart leaped into her throat, and she suddenly felt rushed and disorganized. She needed to get dressed. She laid out Josie's white button-down blouse, her navy-blue blazer and skirt, and dark stockings. Making sure she hadn't missed anything, she looked through the bags one more time as a flash of red caught her eye.\n\n*****\n\nI had picked us up some Chinese takeout and waited for Kaitlyn to arrive. At 11:27 I heard her car pull up outside just as I was setting silverware down at the small table just off my kitchen. The doorbell rang and when I opened the door, I saw an excruciatingly gorgeous woman in a business suit. The sight was so incongruous with my expectations that my immediate thought was that I had forgotten about an appointment with one of my lawyers or accountants. But after a brief moment of confusion, I realized that the beautiful redhead standing in front of me was the 18-year-old girl I had been expecting.\n\nKaitlyn was dressed in a navy-blue jacket and skirt and looked like the consummate business professional. Gone were the dark-rimmed glasses and hoodie. Her usually curly hair had been straightened and was pulled back into a loose ponytail that hung over one shoulder. She wore makeup around her eyes and lips that made her look seven or eight years older. Dark stockings covered her long legs, and she wore smart black heels. A small black purse hung over one shoulder. The overall look was extremely attractive, and I couldn't believe the transformation. I was mesmerized and practically speechless.\n\n\"Kaitlyn...\" I said dumbfounded.\n\n\"Gavin,\" she responded seriously, acting the professional adult, and holding out her hand.\n\nI took the proffered hand and stepped aside, allowing her entry. Standing there awkwardly for a moment, I finally snapped out of my stupor and led her to the table. I pulled a chair out. As she took her seat, I pushed it in for her, then sat in the chair opposite her.\n\n\"I'm amazed,\" I said.\n\nHer pink, glossy lips turned up into a smile and she said, \"I wanted to show you that I'm a good actress. I can play older than my age. And I'm serious about this role.\"\n\n\"I can see that,\" I said as I swallowed the lump in my throat. I looked at the takeout and suddenly felt like I was out on a fast-food date with a glamorous movie star. \"It's just Chinese,\" I said apologetically.\n\nShe gave me a radiant smile and said, \"I love Chinese.\"\n\nI was blown away by just how fucking beautiful this girl was, and I had to remind myself that she was only eighteen. She had created this illusion of sexy, mature elegance, and I had been sucked right into the fantasy.\n\nAs we ate, I tried to focus on the task at hand, discussing how much we had to do in the next few days. When I brought up the role of Josie--specifically the subject of sex--her face colored, and she looked down at the remnants of her food.\n\n\"Kaitlyn,\" I said seriously, \"You aren't a virgin, are you?\"\n\nShe bit her lower lip and stared at me. \"No,\" she admitted quietly. \"I've had sex.\"\n\nSomething about her answer gave me pause, and I asked, \"How many times?\"\n\nShe held her head up high in a gesture that defied me to discredit her sexual qualifications and said, \"Once.\"\n\nI groaned inwardly as I closed my eyes. She wasn't a virgin, which was a relief, but she was woefully inexperienced.\n\n\"Having sex onstage is going to be difficult. Even for me,\" I told her. \"I don't think you are sexually or emotionally ready for something like this.\"\n\n\"I thought you might say something like that,\" she admitted quietly, looking down at her plate. She stayed like that, and I thought she was going to cry. I cleared my throat and was about to call off the ridiculous idea of going forward with her in this show when she locked eyes with me.\n\nKaitlyn dabbed her lips with her napkin and set it aside. She stood and took her suit jacket off, exposing the crisp, white shirt underneath, and hung the jacket on the back of the chair. She opened her black purse and pulled out a small external speaker, which she set on the table, plugging it into her phone.\n\nNext, she kicked her black pumps off and stood in her dark, stocking feet as she began to unbutton her blouse. I stared at her with wide eyes and began to object, when she silenced me with a finger pressed against my lips. She finished unbuttoning the shirt and opened it, exposing a tight red semi-transparent bustier with the creamy tops of what had to be D-cup breasts spilling out over the top. My breath caught in my throat, and I immediately felt my dick respond in my pants.\n\nShe untucked the shirt from her skirt, slipped it off, and draped it over her jacket on the back of the chair. Then, she released a catch on the side of her skirt, and it came undone. As it fell to the floor, the rest of the ensemble was revealed. Beneath the tight red bustier she wore a matching thong and garter belt, which attached to the tops of her stockings. Recognition flared inside my brain, and I realized she was wearing Josie's outfit from our show.\n\nShe turned around, presenting her backside to me. Her ass was round and full, and the thong was completely lost inside the crevice between her pale, freckled ass cheeks. As she bent over to pick up the skirt, the gusset of the thong was exposed, snugged tightly against her intimate flesh. I could see the wrinkled edges of her barely covered asshole under the string of the thong and my cock lurched as it filled with blood.",
        "Kaitlyn touched a button on her phone and the sexy song that we had chosen for Josie's lap dance scene began to play. Our eyes met and I could see her nervousness, but also her determination. She went through a metamorphosis and her eyes suddenly filled with confidence. She smiled seductively as she grabbed my shoulders and straddled my lap. Then she began to grind her thinly covered mound into my groin. I groaned as I felt her weight press down on my swiftly growing cock, bending it at an awkward angle. The tops of her heaving breasts were right in my face, and I noticed the hundreds of freckles on her pale skin.\n\nShe turned around and pushed her round ass cheeks into me. Despite my misgivings, I couldn't help reaching up and grabbing handfuls of the soft teenaged flesh, squeezing it as she gyrated in my lap. I wasn't sure how far she was going to take this, but my dick was straining inside my pants, and I began to fantasize about fucking her. A promise I had made to her father just a couple hours ago came unbidden to my mind, and I cursed myself for allowing her to do this. Although wouldn't this just be considered a rehearsal for what we had to do onstage? The justification was weak, but it was all I had.\n\nKaitlyn stood and turned back around, dropping to her knees. With a nervous breath, she popped the button on my pants and started to pull down my zipper. Much to my dismay, I let her. She looked into my eyes, and I watched as that steely resolve came back full force. She grabbed my pants and boxers and began to pull them down. I lifted off my chair slightly and allowed her to slide them down the rest of the way. My hard cock sprang up as it was freed, and I briefly saw fear in her eyes as she bit her bottom lip.\n\nIt obviously wasn't necessary, because I was already hard, but she moved between my knees and grabbed my erection, leaning down and taking me inside her warm, wet mouth. I closed my eyes and concentrated on the feeling of her soft lips and tongue as she bobbed up and down on me. She blew me for half a minute or so before releasing the head of my cock with a pop. Her face was beet red, and she was breathing heavily as our eyes met again.\n\n\"Kaitlyn--\"\n\n\"Don't,\" she said quickly, stopping me in my tracks.\n\nShe smiled slightly and nodded, and I took that as confirmation that she needed to do this--most likely to prove something to me. And possibly to herself.\n\nShe turned back around, and I watched as she pulled the gusset of her thong to the side, exposing her completely shaven asshole and pristine pink pussy. Grabbing my throbbing erection, she aimed me inside her opening and slowly lowered herself down. I groaned as I felt her hot, slippery wetness envelop me completely. Kaitlyn tensed up and made a noise that made me think she was in pain, but she kept going until she was fully seated, then rose up and sat down again. Her copious natural lubricant began to soak my lap, and I felt a rivulet run down the side of my balls.\n\nShe leaned back into my chest as she began to thrust up and down, picking up speed and beginning to moan. I reached around and held her ribs below her breasts as I aided her movements, meeting each thrust with an upward tilt of my pelvis. The mild aroma of her musk traveled up into my nostrils and I breathed it in as my hands moved upwards and squeezed the corset-covered bottom half of her breasts.\n\nKaitlyn reached up and freed her magnificent tits, placing my hands over them. They were warm and incredibly soft, and her tiny nipples were hard under my palms. There was something about feeling them, having not yet seen them, that made it ten times hotter. I kneaded the fleshy globes, then squeezed her nipples between my thumbs and fingers, eliciting another moan.\n\nThe erotic vocalizations of the nubile 18-year-old in my lap started to escalate in pitch and frequency as I felt her body begin to tremble. Suddenly, her rhythm became erratic as her muscles lost control. She cried out and I held her tightly against my chest as her arms and legs folded up into the fetal position. I felt the flutters of her vaginal muscles as they fired around my cock. The eroticism of the situation had me at the brink of my own orgasm, and I groaned as I continued to thrust inside her tight birth canal.\n\nKaitlyn relaxed as her orgasm waned and she regained control of herself. She reached back and braced herself on my hips as she fucked me faster, glancing over her shoulder and letting out a sexy little whine. I grabbed her large breasts again and squeezed as my eyes forced themselves shut. There was a momentary feeling of weightlessness, and I felt the pressure in my balls as I reached the apex of sexual pleasure. I groaned and gritted my teeth throughout the ecstatic release, feeling shot after shot of thick semen launch into the depths of her body. The floral scent of her skin filled my nostrils as I pressed my face against her soft neck, moaning with each excruciating contraction of my orgasm. Through my euphoric haze I heard Kaitlyn giggle.\n\nAs I came down from my sexual high, I leaned back into the chair, and she relaxed against my chest. We were still engaged at our sex, and I felt the extreme slipperiness of my cum inside her wet pussy as I moved languidly in and out in small thrusts.\n\n\"Holy fuck...\" I said breathlessly, still clutching her warm, soft breasts in my hands.\n\nKaitlyn slowly extricated herself off my lap and my cock fell against my thigh with a wet slap. She turned around and shyly covered her breasts with her arms. I think she had forgotten that her panties were still pulled to the side and her swollen, pink vulva was on display, along with a little bit of visible ginger pubic hair at the top.\n\nShe bit her lip and asked, \"Do I get the part?\"\n\n\"Was that an audition?\" I asked as I barked out a laugh.\n\nKaitlyn blushed and looked at her feet. She still wore the red lingerie, along with the garter belt, dark stockings, and black pumps.\n\n\"I didn't mean to embarrass you, Kaitlyn. Yes, you have the part. You had the part already. You didn't need to do this.\" I grabbed a cloth napkin off the table and wiped my deflating cock dry, then pulled up my boxers and pants. She still stood there with her arms over her breasts and a shy smile on her face.\n\nI glanced up and drank her in. I really wanted to see her completely naked. \"Why don't you take all your clothes off for me, so I can see what you look like. You're going to be naked onstage, after all.\"\n\nKaitlyn paused for only a moment, then gave me a tiny nod. She turned her back to me and unhooked her bustier, placing it on her chair. Then she unhooked each stocking from the garter belt, peeling them all the way off and exposing the pretty, pink soles of her bare feet. She unlatched the garter belt and dropped it on top of the rest of the clothing. Then she quickly pulled her thong down and stepped out of it, exposing her round bubble butt. Lastly, she pulled the hair tie out of her hair, letting her gorgeous red hair fall loosely over her shoulders.\n\nThe beautiful ginger teenager turned around slowly and presented herself to me in the skin she was born in. Her hair framed her model-beautiful face and her green eyes practically glowed. How had I fallen for the Clark Kent disguise? You wouldn't think that dark glasses, baggy clothes, no makeup, and a different hairstyle would make that much difference, but I never would have guessed how incredibly gorgeous she was.\n\nHer slender bone structure made her joints appear slightly angular, but she wasn't rail-thin or anorexic by any means. She had the perfect amount of meat on her bones, and her natural breasts were proof. Now that I was seeing them completely exposed, I could tell they were easily a D-cup. Her pale areolae were small and barely distinguishable from the rest of her skin, but her nipples were hard and protruded sexily.\n\nShe had a true hourglass figure, and I followed the contour of her shape as it went from her breasts to her thin waist, then flared out at her sexy, womanly hips. Her vulva was smoothly shaven with a small thatch of red pubes above her slit. Her thighs, along with her arms, neck, chest and face were covered by tiny freckles and the look was incredibly cute.\n\nI twirled my finger and she turned around, presenting her backside. I had seen most of her ass when she wore the thong and garter belt but seeing it completely naked was truly a treat. It was pale and round and looked exactly as soft as it felt. Kaitlyn Crosby was a fire-haired goddess and once again, I felt like my lifelong streak of good luck hadn't abandoned me.\n\n\"Wow,\" I whispered.\n\nShe turned back to face me again, her face red with embarrassment.\n\n\"Do you really think you can do what you just did in front of hundreds of people, many of whom you might know?\"\n\nI watched her breasts lift as she drew in a deep breath. She paused only briefly, then nodded.\n\n\"Acting is my life,\" she said. \"I just turned eighteen a couple months ago, but I've thought about the idea of doing a nude scene to further my career for a long time. And now I know that I would do it.\"\n\n\"This is a bit more than just being nude,\" I said.\n\n\"I know. But I'm willing. And I may have to have sex on film someday. Have you heard about Gunter Gr\u00e4bel and his performance philosophy?\"\n\nI was a little shocked when she threw out the name of the famous Austrian director because I hadn't expected her to know anything about him. Gunter Gr\u00e4bel had recently taken the 'hardcore in mainstream' genre to new heights. Prior to now, mainstream movies that included scenes of actual sexual penetration had been relegated mostly to European cinema. It was pretty much unheard of in America until his most recent movie. Somehow, he had talked three big name A-list Hollywood actors--one male and two female--into having graphic, explicit sex on screen. He then got the unrated movie into widespread distribution, and it had been shown in regular movie theaters all across the country.\n\nMost movies with that level of sexuality wouldn't have been taken seriously and would have been unceremoniously slapped with the label of porn. But his name, along with the presence of the three A-list stars, had given it credence. And it was actually a fucking great movie. It had swept the Golden Globes and was up for no less than three Oscars, including Best Picture, Best Director, and Best Lead Actress.\n\nHe had stunned the entire establishment, proclaiming that he would never again make a movie in which a sex scene was simulated. He called it a philosophy of \"sexual truth in cinema\", proclaiming that sex was not shameful or dirty and should be presented in an honest light. The shockwaves were moving throughout all of Hollywood, and I had heard of no fewer than four more movies and one HBO series that had adopted his philosophy and were presently in production. It seemed that 'hardcore in mainstream' was about to be much more mainstream.\n\n\"Yes, I've heard of it,\" I replied.\n\nKaitlyn shrugged her shoulders and said, \"Sex on screen is most likely going to be the norm in the Hollywood I'm heading into in a few years, and I'm willing to do whatever I have to do to be a famous actress.\"\n\nI could tell by the look on her face, along with the fact that she was standing in front of me completely naked, that she was serious. I nodded my head.\n\n\"OK, then, Ms. Famous Actress.\" I stood up and pointed to the chair. \"Sit down and spread your legs for me.\"\n\nKaitlyn, having talked herself into a corner, didn't hesitate, though she blushed anew. She took my place and spread her knees wide, exposing her practically untouched 18-year-old vulva. I motioned for her to scoot up to the edge of the seat and she did.\n\nI went to my knees and moved her thighs even farther apart as I leaned in and ran a tongue up the wet crevice between her swollen outer lips. \"Don't hold back, Josie,\" I said with a grin, using her character's name.\n\nWith my hands on her ass, I dove in, using my tongue and lips on her puffy pussy, trying to discover what worked best in order to make her come the fastest.\n\nKaitlyn moaned and leaned back into the chair as she grabbed a handful of my hair. Her hips gyrated slowly as I probed her wet entrance, then I ran my tongue up to her clit. She jumped when I flicked it hard, so I formed a light suction and stroked just below it with my tongue. I watched her eyes roll back in pleasure and she moaned again, her cries rising slightly in pitch as I increased the suction. I created a steady rhythm, sliding my tongue lightly up and over her hard nub. Within a minute, her legs were shaking, and she was practically twisting my hair off my scalp. I wanted to grab her hand and tell her to stop, but I didn't want to disrupt the impending orgasm.\n\nSuddenly, Kaitlyn's eyes shot open, and they grew big as she shouted out in staccato, her hips thrusting her vulva into my lips. A loud whine left her throat, and I felt a small squirt of vaginal fluid as it was expelled into my mouth. Her thighs shook on each side of my face and her ass jumped around on the seat as her orgasm throttled her womb. As the orgasm began to dissipate, her face took on a look of languorous bliss and she moaned, \"Oh my god, Josh...\"\n\nI smiled and wiped the aromatic vaginal juices off my face as I sat back on my heels. My heart leaped at the idea that the show was going to continue. And Kaitlyn was going to be a star.\n\n*****\n\nKaitlyn arrived home, still wearing Josie's business suit after her \"audition\" with Gavin. She felt hot and flushed--with endorphins and embarrassment--as her parents waved her into the living room. She hoped her face wasn't as red as it felt.\n\n\"How did your talk with Gavin go?\" her dad asked.\n\n\"It was fine,\" she replied confidently, even though she felt like he could read the fact that she had just had sex in her eyes.\n\n\"So, you are still going to do the show?\" he asked. Her mom raised her eyebrows.\n\n\"Yes,\" Kaitlyn replied. \"Thank you both for your support. I know this isn't a normal situation. But I really feel this is going to be a step forward in my career--emotionally, if not professionally.\"\n\n\"You're actually going to have sex with Gavin onstage?\" her dad asked.\n\nKaitlyn nodded her head. \"It's a really good show, dad.\"\n\n\"I hope so, sweetheart. I fear some of the repercussions from this sort of thing.\"\n\n\"As long as I have you guys on my side, I can deal with the rest. I'm going away to college in just a few weeks anyway.\"\n\n\"What about us?\" her mom asked.\n\n\"What about you?\" she responded, not understanding.\n\n\"Do you want us to see it? Or would you rather we didn't?\"\n\nKaitlyn's eyes wandered the room as she thought about her mom's question. Her parents and brother always came to see her shows. Always. It was a family thing. But this show was different. It would be awkward enough if she were only going to be naked. But she was going to be having actual sex--orgasming in front of an audience. Was that something she really wanted her family to see?\n\nBut wasn't this possibly going to be the trajectory of her career? That's what she had told Gavin, and she had been confident when she said it. She would do anything to get to Hollywood and become a huge star. Gunter Gr\u00e4bel's movie had been the pebble in the pond. The shockwaves were being felt in every corner of Hollywood and things were moving in a much more explicit direction. The chances of her getting a role in which she would have to have sexual relations in front of the camera were pretty good.\n\nAt some point in her career, her family would almost surely be seeing her naked on screen, and probably having graphic sex as well. But was it different in person? If they came to her show, they would be sitting in seats that were within a very close proximity of the stage--mere feet from where she was engaging in carnal activities. As she thought about it, she realized just how intimate this was going to be. Not only from the perspective of having her family there, but also for the general public. There might be boys from school getting an up-close view of her wet pussy filled with Gavin's cock. Her breath caught in her throat, and she staggered slightly on her feet.\n\n\"Are you OK, Kait?\" her dad asked.\n\nKaitlyn had been lost in her thoughts, but when her dad spoke, it pulled her back to reality. She studied them both. They had been her biggest supporters throughout her entire acting career so far. They had been there every step of the way. This was just one more step toward her goals. She couldn't imagine excluding them from it.\n\n\"Yes,\" she said. \"I'm OK. And of course I want you both there. And Tad too if he's willing. I know it's going to be awkward, not only seeing me perform naked, but doing...other stuff...too. But you guys have always been there. And this is my last performance before I go away to college. I would be heartbroken if you weren't there.\"\n\nHer parents glanced at each other briefly, then her mom said, \"We wouldn't miss it, sweetheart. We just wanted to make sure you were comfortable with us being there.\"\n\nKaitlyn gave them both a huge hug, then went up to her room to change out of the business suit. Once she was down to just her red thong, she pulled it off and noticed the gusset was wet. Gavin's cum, along with a copious amount of her own juices, had left a sticky mess in her thong. Curious, she held the material to her nose and smelled the heady mixture of their ejaculate, then she tossed the soiled underwear onto the pile of lingerie on the floor. She would need to wash it before tonight's rehearsal.\n\nShe was about to pull on some new panties, but she couldn't ignore the sudden tingles in her pussy. She lay on her bed naked and kneaded her large breasts, tweaking the nipples and making them erect. She squeezed her thighs together and felt the stimulation increase. She reached down and touched the wetness between her labia. It was more slippery than usual, and she was sure she was still leaking Gavin's sperm.\n\nOh my god, she thought. I fucked Gavin Dillinger today.\n\nKaitlyn recalled the way her heart pounded in her chest as she seduced him, stripping down to her lingerie and giving him a lap dance. She hadn't intended to go further than that. But she got caught up in acting out the scene and before she knew it, she had his erect penis in her mouth. It was only the second time she had ever given a blowjob, but he hadn't complained or corrected her, so she thought she must have done OK. She slipped two fingers inside herself as she recalled the feeling of his hard dick in her mouth.\n\nWhen she had taken him inside her, she felt so incredibly full. It had even hurt a little. She hadn't lied when she said that she wasn't a virgin, but she wasn't exactly experienced either. His was only the second penis that had ever been inside her vagina, the other one had been over a year ago. She had liked the boy a lot. But it had turned out not to be too serious for him, and he never asked for a repeat. So, her vagina wasn't really accustomed to the feeling of a dick--especially not one as big as Gavin's.\n\nBut she had been determined, and she took all of him. It didn't take long to grow used to it, though, and before she knew it, she was lost in the eroticism of the moment. It had started as a way to prove to him that she could handle the role, but within a few minutes, she was thoroughly enjoying the sex. Butterflies assaulted her stomach at the thought of fucking him again as she stroked her clit, while fingering herself.\n\nA knock sounded on her closed bedroom door, and she practically jumped a foot off the bed before reaching for the sheet and yanking it over herself. \"Yes?\" she yelled.\n\n\"Can I come in?\" Her brother's muffled voice sounded through the door.\n\n\"Umm...\" Kaitlyn looked down and saw the nipple indentations in the sheet covering her chest. Should she get dressed? Tad had already seen her naked. She had even allowed him to watch her masturbate--not that that needed to become a regular thing. But did her nudity really matter that much at this point? As the shock of being interrupted mid-masturbation wore off, she decided that it didn't. \"Yeah, come on in.\"",
        "Tad stepped into her room, shutting the door behind him, and froze when he saw her on her bed with the sheet pressed against her chest. His eyes lingered at the level of her breasts and Kaitlyn knew he could probably see the bumps of her hard nipples.\n\n\"Uh...is this a bad time? I can come back later...\"\n\n\"No, it's fine,\" Kaitlyn said as she smiled. She tried to blow a stray hair out of her face, but it was plastered to her sweaty forehead. \"Have a seat. What's up?\"\n\nTad sat in her desk chair--the same place he sat when he watched her give herself an orgasm last night.\n\n\"I just wanted to find out how things went this morning with Gavin. I didn't mean to interrupt...whatever was happening here...\" He blushed as he gestured toward her body. \"By the way, what was happening before I walked in?\" A sly, knowing smile began to creep across his face.\n\nKaitlyn pursed her lips and gave him a wry smile back. \"I was masturbating, if you must know.\"\n\n\"Ohhh,\" he said, drawing out the word like he was completely innocent and had had absolutely no idea. \"Sorry.\"\n\nShe rolled her eyes and said, \"Don't worry about it.\" Looking down at herself, she shrugged. \"You've already seen me naked, and you will be again in a couple days. I'm not going to bother to hold this up the whole time we are talking. She let go of the sheet, exposing her breasts, and tossed it off completely as she turned to face him, his eyes going wide. She moved to sit cross-legged with her hands blocking her intimate parts, but when that seemed really unnatural and awkward, she pulled them away and rested her hands on her knees. Immediately, Tad's eyes were drawn between her legs like a moth to a flame.\n\nKaitlyn cleared her throat and he glanced up to her face, blushing. \"You wanted to talk?\" she asked.\n\n\"Oh. Yeah,\" he responded nervously. \"How did it go this morning? Are you still doing the show?\"\n\n\"Yes. Of course, I am! It went really well. We made small talk for a little bit, then he started asking me questions to make sure I was fully aware of what this show would entail, and the repercussions I might face. He wanted to make sure I was ready.\"\n\n\"Are you?\" Tad asked honestly.\n\nKaitlyn took a moment to answer. She nodded, then said, \"I am.\"\n\n\"How did you convince him you were ready? He had to be skeptical.\"\n\n\"He was,\" Kaitlyn admitted. \"I...umm...I wore an outfit from our show and I reenacted a certain scene.\"\n\n\"What did you do?\" he asked.\n\nKaitlyn fidgeted. Why was she having trouble talking about this? He was literally going to see her perform the scene in a few days. Suppressing her embarrassment, she decided just to tell him the whole truth.\n\n\"It's a seduction scene. Josie is seducing her boyfriend, Josh, by dancing in front of him in sexy lingerie. She gives him a lap dance, then...uh...goes down on him...and then she sits in his lap and has sex with him.\" Kaitlyn had trouble meeting her brother's gaze as she said the last.\n\n\"So, you pretended to do all that? You acted that out...without the sex part?\"\n\nShe cocked her head to the side as she looked at her brother, hoping he would intuitively understand without her having to say it out loud.\n\nTad swallowed audibly. \"Did you have real sex with Gavin this morning?\"\n\nKaitlyn bit her lip and nodded.\n\n\"Oh, wow...\" he exclaimed as he stared off to the side.\n\n\"I wasn't planning on it, but I just kind of got caught up in the scene. And it's not like we won't be doing it for real during the show anyway. It's probably better that we got it out of the way this morning before tonight's rehearsal. Hopefully, by Friday night, it will be no big deal.\"\n\nTad nodded. \"Then you came home?\"\n\nKaitlyn was about to nod her head, but then she remembered what happened after. \"Umm...well...afterwards, Gavin had me sit in his chair and we sort of acted out another scene.\"\n\nTad raised his eyebrows, displaying his curiosity.\n\nTelling him this part was even more embarrassing, Kaitlyn discovered. \"Well...Gavin...he went down on me.\" She felt her face grow hot and she closed her eyes as she felt the tingles start again.\n\n\"Oh. I see.\" Tad's own face was red, and he wiped a hand across his brow. \"Did...did you...come?\" His question came out more like a whisper.\n\nKaitlyn nodded as they looked into each other's eyes again. \"Twice. Once from the sex and once from when...\" She gave Tad an embarrassed smile. \"When he ate my pussy.\"\n\n\"Wow. I didn't even know you were sexually active, sis.\"\n\nKaitlyn's eyes blinked rapidly. It was so strange talking to her brother about sex stuff. They had always been close, but not this close. Although, she was discovering that it was nice to confide in him. It's like she had someone to share her secrets with.\n\n\"I wouldn't exactly call myself sexually active,\" she admitted. \"I had sex one other time with Jake Sellers.\"\n\n\"Jake Sellers???\" he asked incredulously. \"He's a total skin dog!\"\n\n\"Yeah. I found that out afterwards when he no longer wanted to talk to me.\"\n\n\"Ugh. I wish I had known. I would have warned you about him.\"\n\n\"It's ancient history now,\" she shrugged, feeling strangely comfortable sitting there naked with her brother.\n\nTad's eyes widened suddenly. \"Wait. Did you say one other time? Was today only the second time you've ever had sex?\"\n\nKaitlyn nodded bashfully.\n\n\"Oh, jeez, Kait. Are you sure you want to do this show? This has got to be a lot.\" The concern on his face was heartwarming, and Kaitlyn smiled.\n\n\"I definitely want to do this,\" she said confidently. \"I will work through the emotions and everything as they come. But I'm kind of a late bloomer anyway, so it's about time I got some action, right?\"\n\nTad gave a half-hearted chuckle at her joke, then looked at her appraisingly. \"I can let you have your privacy if you want to...finish...what you were doing.\"\n\nKaitlyn smiled and as they both stood up, she hugged him, squeezing her breasts into his chest. He quickly extricated himself from her hug and went to open the door when she said, \"Wait!\"\n\nTad looked back with his hand on the door handle. Kaitlyn bounced her leg as she stood there for a moment, wrestling with her inner turmoil. Tad's eyes fell to her bare chest as the fatty flesh jiggled with the movement.\n\n\"Do...\" She paused. Then she shook her head and shrugged her shoulders, deciding that it didn't really matter one way or another. \"Do you want to watch?\" she asked.\n\n\"You want me to watch you? Again?\"\n\n\"I mean, you don't have to. But if you want to, you can. What's the big deal, right?\"\n\nTad had secretly wanted to watch this whole time, but he didn't want to admit it to himself. Or to her. He felt no small amount of shame about jerking himself off furiously last night after seeing her masturbate for the first time. He had never had any problem admitting that he thought his sister was pretty. But in the last couple days, after making a few small changes with her appearance and how she dressed, he thought she looked incredible. And now that he knew what she looked like naked--and her tits, holy fuck!--he thought she was fucking gorgeous! He had jerked off twice more this morning, thinking about her, and he had hoped with every fiber of his being that he got a second showing. And now she was offering just that. He was super excited, but he couldn't let on. He already felt like a massive perv, but he didn't want Kaitlyn thinking that.\n\n\"Uh...sure. I could help you out again and watch if you want me to.\"\n\nKaitlyn smiled at his wording. She knew he wanted to watch. He was a guy, after all. Two years her senior and a Junior at Duke University, he kept himself physically fit. Kaitlyn thought he was pretty good looking, even if ginger boys weren't really her thing. She like the typical tall, dark, and handsome guys, but she couldn't fault Tad for his genes. They were her genes too. And truth be told, she supposed his watching her play with herself would help her out in a way. The more she did it in front of someone, the easier it should be at the theater.\n\nTad sat back in her desk chair, and she retook her seat on the edge of the bed. Drawing in a deep breath, trying to work up her courage, Kaitlyn spread her knees, giving him an explicit view between her legs. His eyes immediately zoned in on her sex and she ran a finger between her lips. The orgasm she had been working toward a few minutes ago was long gone, but she was still incredibly wet. She used her fingertips to spread the lubricant from her opening to her clit, then began to rub it slowly.\n\nKaitlyn closed her eyes briefly, concentrating on the stimulation, then opened them and looked at her brother. When his eyes met hers it sent a fluttering through her stomach. It wasn't the feeling of sexual excitement that she had had with Gavin this morning. It was the bending of some sort of taboo. Last night when she had masturbated with Tad in the room, she had lain on her bed lost in her self-pleasure. But this was an explicit show she was putting on, directly for Tad's enjoyment. He was her brother. And she was spread-legged and playing with her pussy right in front of him. Kaitlyn felt a little slutty and a lot turned on.\n\nTad watched his sister in disbelief. She was completely naked. Her skin was pale and covered with freckles, similar to his own. Her gorgeous red hair had been straightened, and it cascaded over her shoulders sexily. Her breasts hung perfectly against her chest. They were large, but there was no sagginess to them. They were surprisingly pert, and the light-pink areolae and erect nipples were sexy as fuck. She was slender and long-legged, and the pale skin of her thighs contrasted drastically with the bright pink of her inner sex. She was incredibly wet and the sound of her fingers sliding through the wetness was so hot. Tad breathed heavily as he watched and was surprised to discover that his mouth was watering at the sight. He found himself desiring to smell and taste his sister's pussy, and he felt like such a deviant.\n\nKaitlyn continued stroking her clit, dipping her finger inside herself every so often and working herself up vaginally as well. Her lips were thick with arousal and her clit was as stiff and hard as she had ever felt it. Each time she flicked it with her fingertip, a jolt ran through her entire body. Her toes curled and she was starting to shiver as her orgasm began to mount. She let out a quiet moan as she looked at Tad again. She could tell he was excited too. His legs were crossed like they were last night, and his foot bounced nervously against the floor. His face was flushed and a little sweaty. And his eyes were glued between her legs. A thought flashed through her mind that she was doing something really naughty, and she had a moment of panic. Should she stop? Could she stop? All she knew right now was that she was close to coming, and she didn't want to stop.\n\nKaitlyn felt the ecstatic pressure building inside and her legs were trembling as her pleasure neared its apex. Her mouth was dry from breathing heavily and her stomach muscles were beginning to tense up. She could feel waves of heat moving throughout her body with her sex at the epicenter. Kaitlyn's fingers picked up the pace, rubbing fast and hard over her stiff little bean, and her eyes fluttered. Her quiet moans were almost constant.\n\n\"I'm going to come, Tad,\" she whispered as her eyelids tightened up.\n\nHer eyes forced themselves closed as the orgasmic sensation reached its crescendo, and her breath came out in a low moan. As the orgasm crashed through her pelvis, incredibly strong contractions assaulted her vaginal walls. Her fingers flew over her clit, continuing to drag the orgasm out as her legs straightened rigidly. Somewhere in the back of her mind, she thought about the fact that she was graphically spread and coming in front of her brother, but she had lost all sense of right or wrong in the euphoric fog clouding her brain.\n\nTad watched his sister come and he thought his heart would beat out of his chest. His dick was like a steel rod inside his pants, and he tried to cover it covertly with his arms. At the height of Kaitlyn's orgasm, he watched her legs spread even farther apart and become stiff, as the muscles in and around her pussy pulsed with each contraction. The wetness inside her opening spilled over and a viscous string headed slowly toward the floor. Real orgasms were one of his favorite things to watch in porn, but they were so much hotter in real life. He had been with a handful of girls, in high school and college, but none of them had masturbated openly for him like his sister was doing now. He made a mental note to ask girls to do that for him in the future. All they could do was say no. But they might say yes. As he watched Kaitlyn come down from the orgasm, he wanted more than anything to jerk off. But he would wait until he got to his room. He wasn't the performer. She was.\n\nKaitlyn felt the warm bliss saturate her body in the aftermath of the orgasm. It had been a really powerful one, and her body felt like it was melting. She lay back on her bed, her legs falling languidly to the sides. She was still graphically exposed, but she didn't care. Tad had seen everything already. Twice now. It didn't matter. She lay there and tried to catch her breath, letting him look at her for as long as he wanted.\n\nTad cleared his throat and wiped his forehead. \"That was beautiful, Kait. Watching you come is really...\"\n\nKaitlyn waited for him to finish his statement, but he didn't. She sat up and glanced over to see him staring at the floor. \"It's really what?\"\n\nHe paused before he answered. \"It's really hot. You are a gorgeous girl. Your body is beautiful and sexy. And you are a great actress. I think you are going to nail this role. You're going to be great, Kaitlyn.\"\n\nShe blinked back the moisture that had suddenly formed in her eyes. \"Thank you,\" she said gratefully.\n\nHe smiled and held out his arms as he stood. She joined him and gave him a big hug, not caring in the least that her breasts were pressed tightly to his chest. Although the bulge in his pants was poking her in the thigh, which she found slightly disconcerting. She had given him a boner. Her brother.\n\nThe hug felt wonderful, though, and for some strange reason, Kaitlyn felt much closer to Tad. She was actually a little sad when the hug ended. He winked at her as he exited her room and closed the door behind him.\n\nKaitlyn slipped into a tank top and shorts and grabbed the lingerie off her floor. She tossed it in the washer, then found her parents watching a television show in the living room, blissfully unaware of what had just occurred between her and her brother. She settled into the couch and tried to forget that she needed to be at rehearsal in a few hours.\n\n*****\n\nTuesday evening, 72 hours before Opening Night\n\nI opened the theater early and paced as I waited for the cast and crew to arrive. I had never been so nervous in my entire theater career, and I was beginning to fully appreciate what I had been putting my actors through for the last year or two. I had high expectations for everyone else, and now it was time to put my money where my mouth was.\n\nQuinn and Dusty arrived, followed shortly thereafter by Sharon, then Ron. Grant showed up after that, with Carly a few seconds behind. That left only Kaitlyn. I glanced at my watch and saw that she was a minute late. That was highly out of character for her. She had usually been one of the first ones to arrive and I began to worry a little bit. The others watched me as I continued to pace.\n\nFive minutes later, Kaitlyn pushed her way through the theater doors. She seemed flustered and out of sorts.\n\n\"I'm so sorry I'm late, guys! This won't happen again. I promise.\"\n\nShe wore a floral summer dress that ended just above her knees, and she set her bag on one of the seats. Her hair looked like it had been straightened again, and her makeup was understated, yet very attractive. It was a much more grownup look, and it was a happy medium between the ponytail, glasses, and sweats of yesterday and the severe business attire of this morning. She didn't look quite as old as Caroline, who was in her late twenties, but she appeared much older than her own eighteen, and I found her new look incredibly sexy. She joined the others, who stared in amazement, and everyone took a seat.\n\n\"Thanks for coming out tonight, guys. I know I told you last night that the show was over. But I received a phone call late last night that changed everything.\"\n\n\"What happened?\" Grant asked. \"How is the show back on?\"\n\n\"Well, as you know, I was planning on taking over the role of Josh from David, but I had no one to replace Caroline, and when she told me that she could no longer be part of the show, I figured that it was over.\"\n\nI looked around and everyone was hanging on my every word. Kaitlyn chewed her lower lip as she stared at her hands, fidgeting in her lap.\n\n\"To make a long story short, our own Kaitlyn Crosby will be taking over the role of Josie.\"\n\nCarly and Sharon both gasped and everyone turned to stare at the 18-year-old red-haired girl.\n\n\"No way!\" Grant said with a smile. \"You're full of shit. Is this a prank?\"\n\n\"It's not a prank,\" I told him. \"I didn't know this prior to last night's conversation, but Kaitlyn has an eidetic memory. She memorizes things very quickly. And last night when we talked, she told me she already knew Josie's part by heart. Since she was our stage manager, she also knows Josie's blocking. And after speaking extensively with her and her parents, I believe she is ready to take this step. She is fully aware of the nudity and sexuality required of her and has assured me that she can do it.\"\n\nDusty and Quinn were ogling her as if they were trying to undress her with their eyes. Kaitlyn finally looked up and confidently met everyone's gaze.\n\n\"Are you sure about this?\" Carly asked her.\n\nKaitlyn nodded. \"I'm ready. I can do this. I think it's an important step for me in my career. I am going to school to study drama in a couple weeks and I want to have this experience under my belt when I go.\"\n\nI waited to see if anyone had any more questions of her, but it appeared that they were stunned into silence.\n\n\"Well, this normally would have been a straight run-through of the show, but since it is the first time for Kaitlyn and me, we are going to take our time and see how things go. We may end up running a scene more than once if we need to. Sharon, I'm going to need you to take over the stage manager role. Kaitlyn, make sure Sharon gets all your notes before we start rehearsal.\"\n\nSharon had worked as a stage manager previously, and I had full confidence in her abilities. I knew she would do a great job.\n\n\"With that said, why don't we all get ready for our first scenes, and then we will start the rehearsal.\"\n\nCarly and Kaitlyn went to change into their first bikinis for the opening scene, while Grant and I headed to the men's dressing room to get into our clothes for the second scene.\n\n\"What are you doing, man?\" he asked seriously. \"She's 18 years old. How is this going to look?\"\n\n\"Believe me,\" I assured him, \"I've thought of any and every reason not to do this. But as you can tell, she looks way older than she normally does. And I'm only a couple years older than David and Caroline are. So, I'm hoping we can meet in the middle with the age thing and make it at least believable.\"\n\n\"Do you think she's emotionally ready for something like this?\"\n\n\"I hadn't been sure of that...\" until this morning, I added in my head. \"But after talking it over with her, and with her parents, I'm ninety percent sure she's good. I will know by the end of this rehearsal if we can do this.\"",
        "Grant shrugged his shoulders as if to say, I think you're fucking nuts, pal.\n\nAfter I was changed, I went out and took a seat by center stage. The director in me wanted to watch Kaitlyn in the first scene. I needed to know if she could pull off not only the nudity, but also the acting.\n\n\"Everyone ready?\" I asked. I received affirmative replies all around. \"Let's begin.\" I nodded at Ron up in the booth and the house and stage lights went down. I saw the dark silhouettes of the girls as they walked onstage and took their places as the intro music played. The music faded out as the lights came up.\n\nLynn: Does this make my ass look fat? Be honest.\n\nJosie: Hell, no! You look amazing! Stop playing. You know your ass is smoking hot.\n\nLynn: Psshh. Whatever. Untie this for me.\n\nI smiled as I watched Kaitlyn slip almost effortlessly into the role. She was confident and acting the part of an older twenty-something, even though I could see the anxiety in her eyes and the way her hands nervously handled the clothing. She had untied Carly's bikini and taken off her own when I decided I would wait a minute, then do the scene again. I wanted to give Kaitlyn a little direction, but I also wanted to prolong her exposure so that she would begin to get comfortable with it.\n\nCarly's gorgeous C-cup breasts and Kaitlyn's boobs, which were even bigger, were on full display. I saw Dusty and Quinn watching from the wings with wide eyes as they stared at their former 18-year-old stage manager's buxom bosom.\n\n\"Let's stop there,\" I said, interrupting the dialogue as Ron brought the house lights up. \"Go ahead and put your tops back on. I want to run the scene again from the top.\"\n\nCarly seemed a little put out by the interruption, but she and Kaitlyn helped each other retie their bikinis.\n\n\"What's wrong?\" Carly asked. \"I thought it was going pretty smoothly. Kaitlyn is doing a great job.\"\n\n\"I agree,\" I said. \"She's fantastic. You both are. Kaitlyn, I can see a little bit of your nerves and I want you to really try to shake that off. This is a scene between Josie and her best friend Lynn in the privacy of Josie's apartment. There is no reason for Josie to be nervous.\" I paused as an idea popped into my head. \"I realize you have never been naked onstage before this moment, Kaitlyn. Do you mind if we try something? Would you consent to participating in a little exercise?\"\n\nKaitlyn stood there nervously holding her arms across her bikini covered breasts. \"I guess so,\" she said.\n\n\"OK. Here's what I want you to do. I want you to take your bikini off.\" Kaitlyn stayed frozen where she was. \"Go ahead,\" I encouraged her. \"Both pieces.\"\n\nShe looked at Carly and swallowed before untying the top and letting it fall off. Then she slid the bottoms down as well and covered her private parts with her hands.\n\n\"Great. Everyone, come out here on the stage, please. You too, Ron,\" I yelled up toward the lighting booth. When the rest of the cast and crew was gathered around us, I had everyone line up like a chorus line. \"Kaitlyn,\" I said, \"I want you to step up in front of each person in this line and bare your naked body to them, front and back. That person is going to say something they like about your body. After you are done with everyone in the line, come to me. OK? Will you do that?\"\n\nKaitlyn's chest moved up and down, breathing shallowly, as a chill ran through her body, pebbling her skin with goosebumps. She nodded, then looked at her friends in the line, stepping up to the first, which was Grant.\n\nGrant was playing Trace, the best friend of my character, Josh. Kaitlyn stood in front of him and dropped her arms to her sides, exposing the entire front of her naked body. Grant's eyes traveled immediately to her breasts, then down to her shaven slit with the tiny tuft of ginger pubic hair on top. After he had taken her in, he twirled his finger and she turned around. He looked at her round ass and I saw a look of lust pass briefly over his face.\n\nKaitlyn turned back around, and Grant glanced over at me for a moment before he said, \"I have to be honest, Kaitlyn. Your butt is absolute fire. I think your whole body is beautiful, but your ass is out of this world.\"\n\nKaitlyn's flushed face and chest turned an even deeper shade of pink as she smiled self-consciously. \"Thank you,\" she said quietly, looking down at her feet. Grant unexpectedly pulled her into a hug and held her tightly for a moment before giving her a little peck on the cheek. After the hug, she stepped over to the next person in line.\n\nSharon blushed herself as she looked at the front and back of Kaitlyn's nude body. When the girl was facing her again, she said, \"You're gorgeous, sweetheart. I really love the freckles that cover not only your cheeks, but your chest and your arms and legs too. I think they are really cute.\"\n\nThis made Kaitlyn smile and she was the one to initiate a hug with the older woman, thanking her. She moved one place to the right and stood in front of Ron.\n\nThe lines around Ron's eyes crinkled as he smiled awkwardly at Kaitlyn, and she couldn't help but smile back. Then, almost reluctantly, he dropped his eyes and stared at her intimate parts. Kaitlyn turned around and gave him a brief view of her backside, then faced him once again.\n\n\"It's not every day I get to see a naked lady up close like this...besides my wife, of course...\" He blushed as he cleared his throat. \"I think the whole package is absolutely stunning. But I've always been a leg man, and if I had to choose one part that I find the sexiest, I would say it's your legs. They are long and beautiful, and they have just the right amount of thickness to be really sexy. I could stare at them all day if I was allowed to.\"\n\nHe smiled shyly and Kaitlyn hugged him too. \"Thank you,\" she said. \"I've always liked my legs. I'm glad I'm not the only one.\" She blushed anew as she moved over a place.\n\nCarly stood there semi-naked herself, dressed in nothing but the bikini she was wearing for the scene. Her nipples were erect, and she had goosebumps of her own as all eyes settled on her. \"Well, let me say, as a feminist I'm not sure how I feel about this forced exposure Kaitlyn is having to endure...\" She glanced over at me with a smirk. \"But in the interest of moving this along and getting back to our rehearsal, I am going to say your breasts.\" She reached up and lightly squeezed them, feeling their firmness and heft. \"I have always thought my own boobs were pretty damn nice, but yours are bigger and even perkier. Who knew you were packing these under those hoodies? Damn, girl. Your tits are hot!\"\n\nKaitlyn laughed and hugged the brunette who was ten years her senior. Watching their tits pressed together for a few moments was worth the price of admission if I do say so myself.\n\nQuinn and Dusty were the only ones left, besides me, and as Kaitlyn stood in front of Quinn, she stared at her feet. These boys were close to her own age, and I can imagine it was now even more awkward for her. She let Quinn stare at her for a few moments, then turned around and let him look at the back. When she faced him again, she lifted her face and looked him confidently in the eyes.\n\nQuinn was a bit nerdy and awkward, and his face was even redder than Kaitlyn's. He cleared his throat and shifted nervously, quickly adjusting his pants. \"I know Carly already said your boobs, but I can't stop looking at your nipples. They are such a pale pink that they are almost indistinguishable from the rest of your skin. With your red hair and pale skin, I think your nipples--the whole area around them, actually...the, uh...areola?--I think that's really pretty.\"\n\nHe swallowed loudly and fidgeted as he accepted Kaitlyn's naked hug. \"Thank you, Quinn. I like them too.\" She said it with a smile and sort of jiggled her breasts in front of him before moving over to the last person in line, Dusty.\n\nDusty was a cute surfer dude with long blond hair and I was proud of Kaitlyn as she boldly displayed herself, throwing him a look that almost dared him to ogle her. He smiled from ear to ear as he checked out her boobs, then looked lower. His smile faltered as he stared between her legs. She spun around and showed him her bubble butt, then faced him and waited for his compliment.\n\n\"I think...\" he said, pausing. He glanced down below again and said, \"I think...I hope I'm allowed to say this...but I think your pussy looks incredible.\"\n\nKaitlyn's eyes grew wide, and her face reddened once more as her whole body tensed up.\n\n\"The little patch of red pubic hair is cute, and your bright pink pussy lips are kind of puffy. They look really smooth.\" He subconsciously licked his lips. \"I always thought you were kind of cute with your nerdy glasses and ponytail, but I had no idea what you looked like under those baggy clothes. You're really fuckin' hot, Kaitlyn.\"\n\nKaitlyn blinked rapidly and her thighs squeezed together. Her nipples were about as hard as I'd seen them so far and as she gave Dusty a hug, goosebumps blossomed anew all over her body. His hand ran down her bare back to the very top of her butt when she broke the hug.\n\nShe walked over to me and tried to hide the smile that began to pull at the corners of her lips. She stood in front of me, and I dutifully looked her up and down, even though I had not only seen, but felt every part of her body earlier today. Was that just today? It seemed like it had been days ago.\n\nAfter she had shown me her butt and turned back around, I said, \"Kaitlyn, I think you are not only stunning, but you are a kind and genuine person. You have single-handedly saved this production, and I am eternally grateful to you. You are a beautiful girl, and I know you are going to take Hollywood by storm someday. So, I want you to be more than confident in your skin. All your friends here have seen your naked body and even told you what they like about it. You have no reason to be nervous now. I want us to start at the top and run this scene again. Don't worry or even think about who is seeing you naked. We have all now seen it. Concentrate on nailing this part, like I know you can.\"\n\nHer eyes were moist as I pulled her in for a hug. The warm skin of her back felt smooth and inviting, and I totally understood Dusty's desire to touch her ass. It was a fucking great ass.\n\nKaitlyn put her bikini back on and went offstage with Carly as Ron returned to the booth. We ran the scene and I watched proudly as Carly and Kaitlyn changed bikinis, both confidently acting their parts like they were alone with no one watching. The scene went flawlessly, with Kaitlyn assuming the role of Josie like she had been born to play it. When it was almost over, I hurried backstage and waited with Grant. The next scene was ours. I stumbled over a line and, not wanting to be a hypocrite, made us start from the beginning of the scene and run it again. This time it went perfectly. I knew the part by heart--I just needed to adjust to actually performing it.\n\nI watched Kaitlyn transform herself into Josie over the following scenes. It was amazing to me, because the part had been written with Caroline in mind, but watching Kaitlyn forced me to rewire it in my brain. She was perfect for this role. She was not only beautiful and sexy, but she was a wonderful actress with an incredible range. Watching her face as she emoted was breathtaking. I hadn't really ever noticed in all the family-friendly productions she had been in, but she was an excellent performer.\n\nI told Ron to give us extra time to reset for the next scene, which was the first sex scene, where Josie gives Josh a lap dance, blowing him and fucking him in the chair. It was basically the same as she had done to me earlier at my house, although it wouldn't go on for nearly as long and I would be faking my orgasm. I hurried backstage to strip down to my boxers. I took my place before the door I would be entering through and stroked myself. I was completely flaccid and didn't want to start the scene that way. By the time Kaitlyn joined me in the sexy red lingerie she had worn at my house this morning, I had half a chub.\n\n\"How are you feeling?\" I asked.\n\n\"Nervous as hell,\" she said, looking scared.\n\n\"Remember what I said earlier. This is no different. These are our friends, and they are about to watch us have sex onstage for the first time. But we need to be confident--me included--and perform the hell out of this scene.\"\n\nKaitlyn nodded and tried to smile.\n\n\"You look hot as fuck, by the way,\" I said, glancing down at her ass in the red thong and garter straps.\n\nShe blushed and bit her lip as she glanced at my hand inside my shorts. I peeked out of the curtain and saw that the stage was dark, and everything had been set. Dusty was just waiting for us to take our places before bringing up the lights.\n\n\"Ready?\" I asked.\n\nKaitlyn nodded and I grabbed her hand and pulled her out onto the stage as we heard the seduction music begin to play.\n\nto be continued..."
    ],
    "authorname": "saltyboy69",
    "tags": [
        "18-year-old",
        "redhead",
        "naked on stage",
        "sex in public",
        "exhibitionism",
        "cunnilingus",
        "fellatio",
        "first time nude",
        "nude debut"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-replacement-pt-03"
}