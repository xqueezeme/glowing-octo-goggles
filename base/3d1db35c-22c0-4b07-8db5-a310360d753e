{
    "title": "Lady in Red Pt. 03 Ch. 04",
    "pages": [
        "The long flight from Australia gave the travelers an opportunity to discuss issues, as well as catch some much needed rest. At the first meeting, Lisa presented Gwen with a laundry list of issues facing her in Washington.\n\n\"The conflict of interest situation is really gaining traction in both Houses of Congress,\" began Lisa. \"While as President, you are not subject to the pertinent or perhaps impertinent statute, there is an obscure law that's causing problems. Kate, could you explain it to everyone?\" \n\n\"I'll try,\" responded Kate as she studied her notes. \"The Title of Nobility is a provision in Article 1, Section 9, Clause 8 of the United States Constitution that prohibits the federal government from granting titles of nobility, and restricts members of the government from receiving gifts, emoluments, offices or titles from foreign states without the consent of the United States Congress.\n\n\"Some members of Congress are insisting that when Lady in Red sells music, fashion, movie tickets or any of our many other franchise products in a foreign nation, you're receiving an emolument, which is a salary, fee, or profit from employment or office,\" finished Kate as she looked up from her notes and directly at her sister.\n\n\"So they're saying that as long as Lady in Red does any business internationally, I'm breaking the law, unless I place the company in a blind trust, or something similar?\" asked Gwen to clarify her understanding of Kate's statement. \"Congress feels I'm accepting remuneration from foreign governments when Lady in Red does business with them? I'm receiving forbidden 'Emoluments'?\"\n\n\"That's it in a nutshell,\" replied Kate. \"Then there are the issues with the rest of us being either directly or indirectly involved in the profits from Lady in Red. Jason, Lisa, and I are obvious targets since we profit directly as owners, although Jason is technically only married to an owner, but we can't deny that he benefits from his wife's ownership share in the company. Federal employees are prohibited from participating in matters where they could enrich themselves. There are very few situations where the outcome of any decision made by any of us, except perhaps one that adversely affect the economy, couldn't be interpreted as making money for Lady in Red, and therefore for ourselves.\"\n\n\"Does this mean that I'll be removed from office, or that many of my appointments will not be approved by the senate, or both?\" questioned Gwen as she turned to look at Steve with concern as she asked Kate to respond.\n\n\"It seems to be a possibility, and if Lancer has his way, a strong likelihood,\" answered a dejected Kate. \n\n\"Steve?\" was all Gwen said as she sought her husband's wisdom.\n\n\"This is exactly why I never wanted to be involved in politics,\" replied Steve grimly. \"You've led the country back from the brink of war. You're improving America's standing in the world community. Every leg of this peace tour has improved America's standing around the world. You're the best thing that's ever happened to the Presidency, yet petty political hypocrites appear to have the potential to remove you from office, as well as block your choices for your cabinet. How badly do you want this job?\" \n\n\"You know I never sought the office and I was even uncomfortable accepting it. If I hadn't had you to back me every step of the way, I never would have accepted the Vice Presidency,\" responded Gwen sincerely.\n\n\"You said something the other day in response to a question about conflict of interest that really helped me see this issue clearly,\" revealed Steve. \"Lady in Red has spent more on the welfare of people of the world in the last few years than any sovereign nation. I would submit to all of you that the goals of Lady in Red supersede the office of President, if a choice must be made between the two.\"\n\n\"Oh, wow!\" exclaimed Kate as her face seemed to illuminate. \"You're right! We've been fixated on protecting Gwen's position as President like it's the most important thing she can do, but it isn't!\"\n\n\"Exactly what are you saying, Steve?\" questioned Gwen with increasing emotion. \"Do you think that I should resign?\" \n\n\"No, I don't. I do think you need to stop worrying about the politics. I want you to concentrate on doing the best job as President you possibly can. If the idiots in Congress want to hamstring you, or even remove you from office, it's their loss, not yours. I expect the American people to make their voices heard on the matter, but if they don't strongly support you and your agenda, then they don't deserve you.\"\n\n\"I think I get what you're telling us,\" chimed in Naomi. \"There comes a time when the citizens of a nation need to decide their course. If the American public wants Gwen to lead them, they'll need to get involved. If they don't want her, or if they don't want to exert the effort required to keep her, she'll return to private life, and by so doing, continue to improve millions of lives around the world with her work in Lady in Red. Gwen has nothing to prove! She doesn't need the Presidency, it needs her!\n\n\"The real danger for Gwen is not that she could be removed from office, but rather that she becomes distracted by the possibility. She simply has to be the best President she can possibly be. Protecting herself from Representatives and Senators shouldn't even be an issue for her. The American public should be fighting for her Presidency. If they don't, they'll get what they ultimately deserve, which in this case would be a much less effective leader.\" \n\n\"That's kind of what I'm thinking. If the citizens of the United States care so little about who occupies the White House, why should Gwen expend so much energy and effort for them? She doesn't need to fight for the office. She'll be fine without it, and many would argue that she'd be better off. But will the country? Voters didn't elect Gwen, but I think they need to take steps to make their opinion known,\" argued Steve.\n\n\"That's placing a lot of faith in the people of the country, as well as the willingness of Congress to accept the desire of the people,\" cautioned William Patterson. \"The possible result would be for Gwen not to have her cabinet selections approved, and eventually to be removed from office.\" \n\n\"Isn't that rather extreme?\" questioned an obviously distressed Paula. \"Gwen's doing an incredible job as President! How could Congress remove her from office?\"\n\n\"If enough members of Congress decide that Lady in Red's business revenues are considered emolument, they'll be able to impeach, and even convict, if Gwen doesn't place it in some sort of trust,\" explained Kate. \"We all know they won't be acting in the best interests of the nation, but when has that ever concerned them?\"\n\n\"I've discussed this with Steve several times since taking office,\" admitted Gwen. \"We will not be surrendering any of our interests in Lady in Red. We've worked too long and hard and can help far too many people, to allow it to languish. It sounds odd, but the Presidency has already taken too much of my time and energy away from our company. If our work for the United States isn't accepted, or appreciated by most Americans, than we really shouldn't be here, should we?\"\n\n\"I've come to that same conclusion,\" stated Steve with a sigh. \"I believe the nation needs you far more than you need the pressure and aggravation you've been dealing with. Keep doing your best as long as you're President, but stop getting sidetracked by the politics. Let Congress and the everyday, average citizens decide what they can live with. If they want you to continue, you will. If they decide to remove you, that's okay, too. We've all been expending far too much energy on something over which we have no control. Just let it go. It'll all shake out one way or the other.\"\n\n\"I've got to say that I'm quite surprised that you'd let members of Congress berate Gwen without taking some measured steps of your own,\" allowed Ted. \"It doesn't go with what I've come to expect from you.\"\n\n\"I never said that I wouldn't extract some satisfaction from these politicians, but not while Gwen's in office. I don't want anyone accusing her of abusing her office in any way. When Gwen becomes a private citizen, all bets are off,\" replied Steve calmly, but with the deadly demeanor those close to him had come to recognize. \n\n\"You know what?\" asked Gwen rhetorically. \"I feel better already! I'm not going to play their games to keep a job I never sought and only accepted because I was asked and I thought it would help the country. I'll do my best as long as I hold the office, but I won't be trying to placate any politicians. \n\n\"I gave up working with two hospitals as a pediatric surgeon when I assumed the vice presidency. I wasn't too pleased about doing that. You all know how hard and long I worked to attain that position. I love helping children and if I'm removed from office, I'll be back in the operating room as quickly as I possibly can.\"\n\n\"How will we handle our confirmation hearings, if we ever even have them?\" asked Kate. \"I'd become a government employee if I was approved as Attorney General and there could be no denying the conflict of interest.\"\n\n\"Kate, tell Congress that you'll accept no compensation from the government for your service. Then you wouldn't actually be a government employee,\" pointed out Steve. \"I seriously doubt that simple ploy would satisfy the Senate, but it's worth a shot. If they don't approve your appointment, you'll be advising Gwen and even speaking on her behalf without any official title, much like I do. She may ask you to keep an eye on the Department of Justice and even have people report to you without the formality of an official position. Congress will have to pursue the situation and either pass laws with a large enough majority to prevent a Presidential veto from overriding them, or accept that Kate is in charge. I don't think any of us care too much which way they go. That's how it's going to be during Gwen's remaining time in office.\"\n\n\"Yeah, however short that time may be,\" laughed Gwen. \"I like this approach to handling the situation. Congress will have to deal with the problem, not I. I won't even admit that I consider it an issue. If they can't accept my actions as President, they'll have to remove me. We have thousands of politicians that would love to serve as our next President, so I won't be hard to replace, but the good work that Lady in Red does could be greatly compromised if we don't continue to oversee it, and I like to think that I still can help a lot of children in my capacity as a surgeon.\" \n\n\"Okay, I think we have a plan,\" concluded Lisa. \"We were caught up in trying to keep Gwen in the White House, when we should have been concentrating on the best way for her to perform as President of the United States. Rather than appease politicians that will never be happy regardless of what she does, we'll ignore them as much as we can, without being overly rude or breaking laws. Let the American people decide if they want to put forth the effort to keep Gwen in office.\" \n\nEveryone in Gwen's circle was able to relax and get some much needed rest once a course of action had been determined. It was a refreshed group that landed in Dubai many hours later.\n\nLady in Red had reserved an entire floor at Hotel Burl al-Arab. Even with the modern facilities on Air Force One, the sheer number of people traveling with Gwen necessitated leaving the aircraft for an opportunity for everyone to enjoy long, hot showers and full bathroom facilities. Once they had the chance to freshen up, the entire troupe visited the nearby water park, Wild Wadi.\n\nThe adults spent the afternoon ensuring that the kids had a good time. Saint was tall for his age and was allowed on all of the rides, although some required that he be accompanied by an adult. There were a surprising number of American families enjoying the park that afternoon. They were delighted at how accessible and friendly President Hammer, her husband, family, and friends were. \n\nNaomi and Lisa each suffered slight wardrobe malfunctions as the artificial waves pulled at their tops. Naomi made a very quick recovery when her left breast was briefly exposed by a wave that caught her by surprise. Lisa was less fortunate when she failed to realize her top had been pushed up to her neck by a strong wave, exposing both breasts. Jason had been helping Theresa stand up after being knocked down when he saw Lisa's nipples smiling at him from several feet away.. He quickly stepped over and pulled her close before tugging her top back down to cover her firm breasts.\n\n\"Oh, no!\" gasped a surprised Lisa as she looked around her to see if anyone had noticed. Her gaze was met by huge grins on the faces of several fathers in the area, including Steve and Chip. Chip gave Lisa the thumbs up as she carefully rearranged her 'girls'. After two hours of relaxation at the water park, the entourage traveled back to the hotel for a brief rest before preparing for the final leg of the flight from Australia to Rome.\n\nBefore takeoff, Gwen led Steve over to the area occupied by members of the media to allow her an opportunity to answer questions. \"Madam President,\" began a cable news reporter, \"Congress appears to be unwilling to accept your evaluation concerning conflicts of interest. How are you going to handle this controversy? Will you be placing your company in a blind trust?\"\n\n\"I'm glad you asked,\" replied Gwen with her dazzling smile. \"I've come to the conclusion that I've already wasted far too much time trying to deal with the irrational behavior of Congress. These are the same people that asked me to accept the vice presidency, yet never questioned my business dealings. I never promised to place Lady in Red in a blind trust. The subject never even came up during my confirmation hearings. Even Congress should realize that the Vice President needs to be held to the same standards as the President. If I were qualified for one office, it follows that I would automatically be considered qualified for the other.\n\n\"Congress is either telling America that they didn't know I was wealthy when I was appointed Vice President, or that they didn't care. Why is it suddenly important to them? The short answer? Politics as usual.\n\n\"I had an epiphany earlier today, with the assistance of my amazing husband and other close advisors. Congress requested that I serve as Vice President. I didn't seek the position. Then I ascended to the Presidency when President Crawford passed away. I take the office very seriously and I will always do my very best to perform my duties faithfully.\n\n\"That said, I won't be exerting any further effort to remain in office. I was appointed by Congress, but I serve at the will of the people. They will determine, through their elected representatives, if I should be removed from office,\" stated Gwen calmly. \"Or they will determine if I shall remain. I only serve with the approval of the American people, and I would have it no other way.\" \n\n\"Steve and I, along with my closest friends and family, feel that the mission of Lady in Red is far too important to allow it to be placed in a blind trust. We built this company through good fortune, hard work, and the support of millions of people, both in America and around the world. Our company is dedicated to helping people, and will continue to do exactly that. Our record speaks for itself. It would be more logical for me to place the Presidency in a blind trust since Congress is so intent on controlling the office.\"\n\n\"Madam President, are you telling us that you will give up the Presidency?\" asked a stunned Amber Stahl.\n\n\"No, But I am telling you that it really isn't worth spending a great deal of effort to keep the office; not if the people of America determine that they no longer want me to serve.\"\n\n\"But the American public won't be making that decision,\" argued a woman network reporter. \"That determination will be made by Congress.\"\n\n\"Will it really?\" questioned Gwen. \"Congress is elected to serve and represent the people. If the wonderful people of America want me as their President, then they'd better make that desire known to their elected representatives. I'm not going to waste my time with Congress. I'm simply too busy. I'll serve as President of the United States to the best of my ability as long as I hold the office. It isn't my place to determine how long that will be.\" \n\n\"Ladies and gentlemen of the press, we have a long flight ahead of us and the President needs to board Air Force One,\" broke in Steve. \"I'm extremely proud of her accomplishments as President and hope she'll be allowed to continue to serve her country in this capacity for the next three years. However, regardless of any actions by Congress, we'll also continue to work to improve our company's position, which in turn, will assure its ability to assist people in time of need. Our disaster relief efforts went international six years ago. It's with great pride that we can state that Lady in Red is the leader in disaster relief in the world. We outspend every nation, and that includes the United States. It's a top priority.\" \n\nSteve led Gwen away as the reporters scurried to file their reports. President Hammer had stated matter-of-factly that she wasn't going to bother trying to explain her position to Congress any longer. She felt her work with Lady in Red was too important to give up, even for the Presidency!\n\n\"I think you shocked the press when you told them that you weren't going to bother worrying about what Congress decided about your business conflicts,\" observed Naomi. \"I hope the everyday Joes and Janes make their voices heard by their elected representatives. It doesn't look like I'll be adding Secretary of State to my r\u00e9sum\u00e9 any time soon.\"\n\n\"You know what? We've been relying on the press to report about Gwen's presidency,\" stated Kate. \"We need to be more proactive. We have all kinds of websites, blogs, and social media accounts for Lady in Red, and we all post to them as much as we can. We need to do the same thing for Gwen's Presidency! I don't mean we need to be political, but we should keep on stressing the good things she's already managed and detail what she hopes to accomplish. We can also do the same thing to explain our views in each of our fields of expertise. \n\n\"Everyone in Gwen's Cabinet, or who hopes to be in Gwen's Cabinet should have a public Facebook page dedicated to their specific government service. I bet we'd have lots of 'friends' follow us, and it would be a great way to get our message across to the public.\"\n\n\"It took us long enough to think of that!\" lamented Lisa. \"That's what we get for not being politically astute. We've got some time before we reach Rome. Let me get a couple of interns to set up accounts for us. Then we should each write a mission statement and start posting. We need to get our message out to the public right away. I think we need to allow everyone to view our posts, but what about commenting on them?\"\n\n\"We should allow comments but hire some people to scrub out the inappropriate questions and comments,\" replied Kate. \"We don't want discussions by hormonal boys on the size of our breasts or asses.\"\n\n\"That means that we'll have to 'unfriend' all the men in our group,\" laughed Lisa. \"Those guys, especially our husbands, act like hormonal teens most of the time.\"\n\n\"True, but I'm not complaining about them,\" chuckled Kate. \n\n\"Then we'll work on Twitter, too,\" suggested Naomi. \"If Americans don't know what's going on, they won't be able to help us. I'm sure that most people will agree with Gwen, not Congress, if they understand her reasons and goals.\"\n\n\"I'll go speak to the interns right now,\" stated Lisa as she went in search of the two young interns that were traveling with them.\n\nAir Force One landed in the early afternoon. Gwen was extremely pleased with the enthusiastic welcome she received from the President of Italy and his 'donna'. After a short ceremony at the airport, Gwen's group was whisked by motorcade to a luxury hotel not far from the Trevi Fountain. ",
        "After a restful evening, Gwen's entourage spent the following day touring many of the historical sites so abundant in Rome. Paparazzi followed Gwen and Steve doggedly, snapping thousands of photos of the American First Family. \n\nIt was early afternoon when Vince Rosen and Cindy Quick caught up with the group while touring the Coliseum. The members of the press were given the opportunity to see for themselves just how Gwen was going to treat the couple. Gwen hugged Vince Rosen while Steve smiled as he swept Cindy off her feet and easily lifted her into the air before kissing her soundly on the cheek. Then Gwen hugged Cindy while Steve and Vince exchanged handshakes and clapped each other on the back. Vince and Cindy never strayed very far from Gwen's side the rest of the day.\n\nGwen was pleased that Charlotte, Billy, Coach and Laura, along with both couples' children had also arrived to join the tour for ten days. Nadiya, Hans, Michelle, and Claude were scheduled to arrive the next afternoon and attend the State Dinner. Steve noticed that Gwen's harried attitude lessened as she surrounded herself with more of her friends and family and ceased concerning herself over the possible actions of Congress. \n\nThat evening, Vince, Cindy, Gwen, and Steve sat down for an interview with the news anchors of the three major networks. Cindy had distributed copies of the outline she had created about her past. It had been decided that if the three major networks would carry the interview, it would provide the best opportunity for maximum television exposure. \n\nWhile not cruel, the questions from the experienced news veterans were thoughtful and quite probing. Cindy answered everything as honestly as she could, with no effort to gloss over or lessen the gravity of her mistakes. Gwen would be asked to comment on an occasional point and Vince was often asked how he felt about Cindy's past and if he felt that she could be trusted. After addressing specific questions, Gwen and Vince always returned to stating their unequivocal support of the Cindy they now knew. Steve was content to sit off to the side and be pretty much ignored, until Amber turned her face toward him. \n\n\"Mr. Hammer, Cindy Quick mentioned you quite prominently in her description of how and when her life was turned around. She seems to believe that it was you that brought her to her senses and made her begin serious work on becoming a better person. Would you care to comment?\"\n\n\"Well, I'm not sure that I had that much influence on Cindy's so-called resurrection, but I'm extremely proud of the lady she is today. I'd love to be able take credit for her selfless acts, her poise, her talent, her great beauty, and her many successes,\" responded Steve as he tried to deflect any direct questions regarding his experiences with Cindy. \"Once she made her decision, she took the ball and ran with it. It's pretty obvious what a fine person she is now.\"\n\n\"Steve, may I follow up on that?\" asked Tom Bender, an anchorman with another network. \"Ms. Quick states in her release that she paraded around in front of you with her bikini top removed in an attempt to make you not only notice her, but tell her that she was more voluptuous and desirable than her daughter, Jordan. You had just graduated from high school at the time, so you were eighteen years old. Cindy Quick states that your response to her admittedly inappropriate behavior was the 'kick in the butt' she needed. Can you share with us exactly what you did, or said, that had such an effect on her?\"\n\n\"Our conversation was personal and I never intended to share it with anyone, other than Gwen. \"The gist of it was pretty simple. Beauty is an intangible thing. A woman can have a great figure and a lovely face but if that's all she has, she will not be as attractive as a woman that's intelligent, selfless, kind, confident, and self-assured. \n\n\"Jordan had become all of that and much more. She had become the complete woman, and one of my very best friends. Her mother suffered from envy, low self-esteem, and other issues that prevented her beauty from being what it could have been. I did my best to explain that to Cindy. I also pointed out that mothers do not compete with their daughters; they nurture and encourage them. I used Gwen's mom as an example of how a beautiful mother, wife, and woman should conduct herself. I guess my explanation helped Cindy understand why she wasn't as beautiful as her daughter, at least not at that time. She's pretty hot now,\" added Steve with a grin. \n\n\"You appear to have an unusually high regard for your mother-in-law. Your feelings for Cindy Quick also appear to be pretty strong. How would you describe your relationship with those two women?\" \n\n\"Tom, are you trying to get me to say something inappropriate?\" wondered Steve as he mulled over the question. \"Paula's one of the most incredible people I've ever known. She's the total package... beautiful, intelligent, and loyal. She's pretty much everything a woman should be; everything a person should be. I've loved her almost from the moment we met and it's only grown stronger over the years.\n\n\"Cindy was a different matter. Physically, she was as beautiful a woman as you'll ever see, but she lacked the humanity to be a beautiful person. I didn't like her too much when I first met her. She gradually changed my opinion as she remade herself into the person she is today. When I see or think of her now, my heart is filled with love and tender feelings for her. I admire her. I have to admit that I've come to love her.\"\n\n\"Madam President, you've just heard your husband declare his love for two beautiful women, one of whom is your own mother. What's your reaction to his admission?\" asked Ryan Phillips, the third anchor involved in the interview.\n\n\"First, Ryan, you need to understand that this come as no surprise to me. Steve and I have no secrets from each other, and everyone that knows my family knows how deeply Steve feels about the women in our group. One of the big reasons we're so successful is that every one of us tries very hard to conduct our lives in a way that makes him proud of us. Mom and Cindy are exceptional in every way, but they're always aware that Steve is watching and that makes them, makes all of us really, work hard to be all that he expects us to be.\" \n\n\"Are you telling us that you still worry about how your husband perceives you?\" asked Amber.\n\n\"Most definitely, but not because he's judgmental; he isn't,\" replied Gwen as she smiled at Steve and patted his hand. \"Living with the best man in the world comes with certain expectations and responsibilities. His approval is extremely important to me, as well as to many others. I'm the one with the title of President, but Steve made it possible. I've never made it a secret that I depend on him in all kinds of ways, and he's never let me down. He absolutely loves Mom and Cindy, and more than a few other friends and relatives of ours. I feel quite confident that all of the men in our circle love me. You need to understand that love is a very strong emotion, not a physical action. Steve and I are totally monogamous and it's my belief that the same can be said for all of the people close to me. Loyalty is one of our greatest strengths.\n\n\"I've heard it said that you should aspire to become the kind of person your dog thinks you are. I aspire to become the person Steve thinks I am.\"\n\n\"President Rosen, have you formed any doubts about your relationship with Cindy Quick since learning so much about her past?\" asked Tom Bender.\n\n\"I'll be totally candid here,\" responded Vince Rosen. \"I met Cindy years ago. She became a close friend of my late wife's. She spent a great deal of time helping care for Cynthia when she was very ill. I learned all I needed to know just by watching how kind she was to Cynthia.\n\n\"Yes, I knew she had past indiscretions, but they had simply served to forge her strength of character as she moved forward. I've also seen how Gwen and Steve care for and respect her. They're excellent judges of character. The fact that they hold her in such high esteem means far more to me than any dirt from her past. I'm extremely comfortable with our relationship.\"\n\n\"Ms. Quick, would you care to add anything before we end this interview?\" asked Amber Stahl. \n\n\"I'd like to say that I never intended to harm Vincent's career. I'd buried my past and concentrated on the present and future. I've made mistakes, big mistakes, but I have faith in the American people. They have a tremendous capacity for forgiveness if a person is truly remorseful and doing their best to improve. I ask that the American public consider my life and accomplishments since that day I embarrassed myself so badly in front of one of my only daughter's best friends. Jordan's forgiven me, as has Gwen.\n\n\"Steve almost brought me to tears a moment ago when he said that he loves me. I've never met another man like him. The people of this country should realize just how lucky they are to have a couple like Gwen and Steve working so hard to keep America safe and to improve the quality of life at home and around the world. I sincerely hope that Vince is allowed to become part of their team. He's a wonderful man.\" \n\nAs soon as the interview ended, Paula rushed into the studio and hugged Steve tightly. \"We watched on the monitors and I heard what you said about me. I can't tell how good those words made me feel! You told the world that you love me!\"\n\nJordan had held her mother in an embrace while Paula had Steve wrapped up before complaining, \"Paula, let the guy go. I need to hug him, too! Thanks for saying so many nice things about me, and about Mom. You really are something!\"\n\nCindy Quick had moved to Vince Rosen's side once Jordan released her. She beamed as she watched her daughter chat with Steve as she held him in her embrace. When Jordan finally stepped away from Steve, Cindy moved in and wrapped him in her arms.\n\n\"Sometimes I wish that I'd managed to seduce you that day by the pool,\" whispered Cynthia into Steve's ear. \"I suppose everything would have turned out much differently and not nearly as well, but I'd have that memory! Thanks for everything, especially for telling the world that you love me. Now I feel like I can face whatever they throw at Vince and me.\"\n\nThe next evening the state dinner was a gala affair as Gwen and the other women dazzled in their gowns. Steve and Gwen had made certain that Vince and Cindy were seated near them. They took great pains to show the world how comfortable they were with the couple at every possible opportunity. \n\nAs a child Cindy Quick had been raised in a trashy environment, but over the years, she had learned proper deportment for a lady in social settings. She smiled and chatted with other guests while keeping very close to Vince the entire evening. Steve and Gwen were both pleased with her obvious social skills.\n\nItalian politicians and government officials were extremely pleased to have President Hammer and her husband visiting their country and went all out to make a favorable impression. This in turn allowed Gwen and Steve to shine even more than usual as they chatted with members of President Manetta's cabinet and various elected officials. \n\nTed and Paula were sitting with Kate and Chip at their table as they watched the First Couple move around the room when Chip spoke. \"I never would've believed that I would be here experiencing all of this ten years ago. I knew Steve and Gwen had a great future, but this is way beyond anything I'd ever imagined.\"\n\n\"Have you noticed how much more relaxed Gwen and Steve are today?\" asked Kate. \"Their decision to prioritize their goals really helped them. How many people can actually say that they have more important things to worry about than remaining President of the United States? I don't know how long she'll be president, but she's no longer worried about it. Look how she and Steve command the room with their presence.\"\n\nThe evening was a huge success as President and Mr. Hammer, laughed, joked, and entertained the Italian dignitaries. It was perhaps the most enjoyable state dinner they had attended to date. The next evening, Lady in Red played in a crowded Piazza del Popolo. With Gwen and Steve feeling more relaxed, their performance again improved. \n\n\"We've been putting on a hell of a show in every city, but tonight was the best we've ever done!\" exclaimed Charlie once the show had ended. \"This world tour is going to go down in history as the best ever. I'm proud as hell of this group.\"\n\nThe next morning, Kate, Naomi, Jason, Lisa, and Jeff Wilson were notified that they were required to be in Washington the following week for confirmation hearings. Steve received a request that surprised him.\n\n\"Congress feels that I'm acting in the capacity of national security advisor and wants me to appear before them to state my qualifications,\" explained Steve to his wife and friends. \"They want me to be there next week, knowing full well that I'm committed to this world tour as well as serving as Gwen's escort at the state dinners.\"\n\n\"What are you going to do?\" asked Gwen. \"I like the idea of you being recognized as my advisor, but I don't see how you can abandon the tour we're doing. Don't I have to nominate you, or submit your name, or something?\"\n\n\"I'll provide them with a list of dates I'll be available to attend their hearings,\" chuckled Steve. \"They're trying to flex some muscle and put a little squeeze on, forcing us to separate. That won't happen. They can interview me in October, and not before.\"\n\n\"You realize that attitude will piss them off, don't you?\" chuckled Ted. \"They want to grill you for a position for which the president has not submitted your name. That's quite unusual, to say the least.\"\n\n\"They have several objectives that are pretty obvious to me. They want to question me under oath, hoping that I'll reveal something damaging to Gwen. They want the opportunity to deny me the official position, and will likely claim it's the worst case of nepotism in history.\" \n\n\"What should we do?\" asked Gwen. \"Do I submit your name for the position, or will you refuse to testify?\"\n\n\"Neither,\" replied Steve. \"I'll go before Congress and tell the truth. We have nothing to hide. They can refuse to confirm me, but I'm sure I'll find an opportune time to explain that I was never even nominated and that I'm not dependent on them for anything. They're trying to force your hand to submit my name for consideration, which they will then refuse, or make you remove me from my advisory position to keep me from going before Congress. Either way, I'd be out of the loop.\" \n\n\"So you're going to answer their questions and play their game, but Gwen isn't going to submit your name. She can simply ignore the outcome, unless you're approved, of course,\" reasoned Kate. \"They're going have to do a lot better than that if they want to play hardball with Steve and Gwen Hammer.\"\n\nBudapest, Hungary was the next destination and Gwen looked forward to the visit. \"Grandmother was born in Hungary and came to the United States when she was eight. We're going to visit the area her family called home as soon as we get to Hungary. That's why we've scheduled two extra days there. I want to see where my family came from and connect with any relatives we may have there. Grandmother is almost eighty. I feel it's important to discover our roots together.\"\n\n\"There's nothing more important than spending quality time with Grandmother Caroline,\" agreed Steve. \"Don't forget that it'll mean a great deal to Paula and your sisters. I think Saint is old enough to understand his heritage and there's no better way to learn than to see it in its original setting.\"\n\nGwen was warmly welcomed to Hungary at the Ferenc Liszt International Airport. President \u00c1der was effusive in his raise of President Hammer and her successful efforts to reduce the risk of war that had seemed so imminent when she assumed office. Gwen beamed as President \u00c1der extolled her many virtues.\n\nWhen asked to speak, Gwen stressed her ties to Hungary. She presented her Grandmother Caroline to the gathering and explained how she had been born in Hungary almost eighty years prior. Caroline waved and smiled as those in attendance clapped and cheered enthusiastically.\n\nGwen's group had arranged to visit the town where her grandmother's parents had been married. It promised to be a joyous celebration of family, but as often happens, fate changed the nature of the visit.\n\nSeven large helicopters had been lined up to transport everyone over two hundred miles to a mountainous area to the northeast of Budapest. Reservations had been made at the only local hotel large enough to accommodate the entire family, as well as the security and media representatives. Reporters had made their own arrangements to travel to this remote area of Hungary.\n\nThe helicopters were preparing to land in a large field near the hometown of Gwen's great-grandparents, when Jason contacted Steve.\n\n\"I'm getting reports of a serious earthquake just about thirty miles west of our destination. It's a mountainous area and the damage is pretty severe. A town of about four thousand has been pretty well leveled and there are a lot of injuries and fatalities.\n\n\"Lady in Red has responded. We have supplies, heavy equipment, food, water, and medical assistance in transit already. I think I should go there immediately to direct our relief efforts.\"\n\n\"Of course, Jason,\" agreed Steve. \"We'll all fly there and help any way we can. Have your pilot lead the way and land away from any structures or mountains. We'll leave a few people near the birds to keep an eye on the kids. We may decide to load them all on one chopper and send them back to our hotel with some chaperones.\"\n\n\"I'll call Laura and Charlotte,\" declared Gwen as soon as Steve explained the situation. \"We have three doctors in our group and we'll help care for the injured. I'll finally get to see firsthand just how good a job Jason has done with his emergency preparations. I just hope there aren't too many people hurt.\" \n\nGwen was stunned as she viewed the destruction of the town that had been nestled at the foot of a small mountain range. Most of the structures were in shambles and many people appeared to be wandering about in confusion and shock. A large open field a half mile beyond the village had been selected as the landing area for the helicopters. Gwen was astounded to see a large tractor trailer sporting large Lady in Red logos on each side already pulling in as the group climbed from the helicopters.\n\n\"The first trucks will have water, freeze dried food, batteries, tools, blankets, and other easily stored materials which will be needed immediately,\" stated Jason as he helped Lisa from a helicopter. \"I'm told that medical supplies will be here within the hour.\n\n\"Gwen, please get together with Laura and Charlotte to determine where you want the big tents set up to treat the injured. We'll have a couple of RV's on site within a few hours. They'll be set up for simple surgeries, as needed.\"\n\n\"Thanks, we'll take care of it. As soon as injured people start arriving here, we'll be triaging and sending the most seriously injured to hospitals on these helicopters,\" decided Gwen calmly as she surveyed the scene.\n\n\"Steve, I'll need you and the other guys to help run the equipment that should be arriving before long,\" continued Jason. \"We'll have five trailers loaded with skid steers, backhoes, dozers and loaders showing up soon with damn few operators to run them.\"\n\nJason didn't have to ask twice as the men in the group quickly hugged their wives and kids and started across the field to the once idyllic town.\n\nBefore they had gone more than a few yards, several more helicopters set down in the field not far from Gwen's group. Reporters teemed out of them. Some headed toward Gwen while others rushed to catch up with the men as they strode rapidly toward the destruction.",
        "\"Madam President! Can you tell us what you hope to accomplish here?\" shouted the first reporter to catch her breath.\n\n\"I have no time, so listen closely,\" snapped Gwen impatiently. \"My friends and I are going to be extremely busy rescuing and treating injured people. I shall allow no questions and no interference from the media for any reason. The Secret Service will enforce that. If any of you would care to put down your cameras and microphones and actually help us, it will be greatly appreciated. Anyone getting in the way will be removed as quickly as possible with whatever force is required. Now, please excuse me.\"\n\nGwen had seen another tractor trailer pull into the field with Lady in Red logos prominently displayed. The driver pulled to a stop not far from Gwen. A passenger climbed down from the driver's side and approached her cautiously as armed Secret Service agents moved to intercept him.\n\n\"Madam President! I speak English. We have several large medical tents to erect,\" managed the man in a loud voice as he was patted down by the agents. The driver and I will need help setting them up, once you show us where you want them.\"\n\n\"We'll set them up over there,\" pointed Gwen as she turned back to the media representatives that had been filming the truck's arrival. \"I'm asking you people for help. There are many badly injured people that will require medical attention. We need to get these tents up as quickly as possible. Will you help us?\"\n\nWithout hesitation, the large media following began placing their equipment off to the side, removing jackets, and rolling up sleeves. With their assistance, as well as any of the Secret Service agents not required for security, three large tents were quickly erected. By the time they had finished, Gwen, Laura, and Charlotte, assisted by several local doctors and nurses, were treating the injured as they were being brought to them.\n\nEven with six doctors and three nurses, they were unable to keep up with the flow of patients. Within the first hour, Gwen had dispatched all six helicopters to carry the most severely injured to hospitals better able to care for them.\n\nWithin three hours of Gwen's landing, two large RV's rolled up alongside the tents. Gwen quickly determined that they were the units to be used for surgery. She had a young girl carried inside one of them as soon as it was ready and was soon operating on a badly broken leg. Laura was inside the second unit, operating on a man with two broken arms. Between the two vehicles, there were facilities to accommodate four operations or other medical procedures, and they were sorely needed.\n\nBoth women were pleased that there were very capable nurses and an anesthesiologist on site to assist. A few members of the press corps served as interpreters within the bi-national medical teams. The day wore on with no break for the medical staff as they worked to save lives and prevent permanent maiming and disabilities.\n\nSteve and the other men had quickly climbed aboard the various pieces of heavy equipment and headed into the rubble that had recently been a prosperous town. Jason and several local men went to look for obvious opportunities to rescue people buried by landslides, as well as many that were pinned or partially covered by large pieces of building material.\n\nAll of the men felt tremendous pride when they were able to help pull a survivor from the rubble. They also felt tears streak their faces when they found mangled bodies beyond any earthly help. Each of the men stopped for a sandwich and bottle of water after they had been working for several hours. The volunteers that had carried the refreshments were obviously extremely grateful for the efforts of the Americans, as well as the other volunteers, as they worked tirelessly to move debris and uncover victims.\n\nSince the helicopters were in constant demand to carry the injured to hospitals, the children in Gwen's group were being kept away from the hospital tents, as well as the tragedy of the destroyed town. They were provided blankets and food in a small tent under the watchful eyes of Paula and her mother Caroline. The tent had been set up late in the afternoon.\n\nSaint was sitting by himself, just outside the tent, thinking about ways he might be able to help people, when he saw a blonde girl approach from the direction of the town. Her clothes were torn and she had blood on her left hand. When she noticed Saint watching her, she nodded to herself and headed directly for him.\n\n\"You are President's son?\" asked the stunningly pretty girl. Saint had never seen a girl with hair so white and eyes so blue. She was a little shorter than Saint and a fair amount lighter.\n\n\"Yes, my mother is President Hammer,\" responded Saint once he found his voice. \"She's real busy right now, so you can't meet her.\"\n\n\"I need your father, not your mother,\" replied the platinum beauty. \"Many people need help. I need a man with the strength of ten and the courage of a lion. Your father is the only man like that.\"\n\n\"I don't know about that,\" responded Saint, \"but if you need Dad, I can help you find him. He's running heavy equipment someplace in town. We can go right now.\"\n\nSaint knew he was disobeying his grandmother and would be serious trouble for it, but he found the blonde girl's request impossible to refuse. He wanted to be the one to help her with anything she may need. For her part, the diminutive girl looked up at him, nodded and grabbed his hand. Soon the two were trotting off in search of Steve.\n\nRuth had seen the strange girl approach Saint and pointed her out to Theresa. The two girls watched the two engage in a short conversation before they joined hands and headed toward the destroyed town.\n\n\"We'd better see where Saint goes,\" reasoned Ruth. \"He could get into a lot of trouble.\"\n\nWhen Saint and the strange girl reached the outskirts of the town, Saint asked the girl her name. \"Lena Kiss,\" replied the girl simply as she pulled Saint toward a half destroyed building.\n\n\"They are in there,\" stated Lena as she pointed to the building. \n\nSaint felt the hairs on his neck stand up as he surveyed the shaky building. It was obvious even to his young eyes that what was left of the building would not remain standing much longer. \n\n\"It is worse now than before!\" cried the girl as she let go of Saint's hand and rushed to the rubble that was once a large building. She scampered over some wooden flooring that was twisted on edge and climbed to what was left of a second floor window. Without a backward glance she went through the opening and was lost from sight. \n\nSaint stood transfixed for a few seconds, debating whether to search for his father or go help the girl. Suddenly, he spotted Ruth and Theresa and he knew what he had to do.\n\n\"Girls! Go find Dad and tell him I went into that building to help that girl. She said there are a lot of people in that building,\" shouted Saint as he began running toward the large, dangerous structure. \n\nRuth and Theresa watched in horror as Saint nimbly scampered up over the rubble covering much of the front of the building and disappeared inside!\n\nThe two girls wasted no time as they turned and headed toward the sounds of large machinery. It was very important that Uncle Steve knew where Saint had gone and why!\n\nSteve was driving a backhoe and pulling rubble from a business when he noticed movement out of the corner of his eye. He was stunned when he saw Theresa and Ruth waving frantically. He urgently stopped the machine and leapt off to send the two girls to safety. They began speaking rapidly before had the opportunity to reproach them for being in such a dangerous area. \n\n\"Uncle Steve!\" cried Theresa. \"Saint followed some girl into a building that looks like it's falling down! She told him there were people there that needed help! He told us to get you.\"\n\n\"Ruth! Your dad's down the street running a dozer. Go get him and bring him back to the building that Saint's in. Theresa will be there waiting for you. Theresa, let's run back to that building. You need to show me where Saint went.\"\n\nIt only took Steve a few minutes to reach the building. Even as he looked it over, the structure swayed visibly!\n\n\"They went in that window over on the side,\" pointed Theresa to her uncle. It looks smaller now! I think it's going to fall down!\"\n\n\"I want you to wait here, away from the building. When the others get here, show them the window. I'm going in to get Saint. It'll be okay. Just wait for your dad and the others,\" urged Steve as he raced towards the doomed building. \n\nGetting through the window was the easiest part of the ordeal for Steve. He had to squeeze through several openings before he found a broken set of stairs. Glad he was wearing gloves and had a flashlight in his pocket, Steve climbed downward, calling Saint's name as he moved. Steve estimated that he had gone down at least three stories and was well below ground level when the stairs ended on a stone floor. \n\n\"Over here, Dad!\" came a yell from around a corner of the stone foundation. Steve felt relief surge through his system as he hurried around the corner only to stop suddenly. In front of him were at least thirty people, mostly women and children. Many of them were obviously injured and barely able to move.\n\n\"Dad, I found a hole in the foundation. It looks like a tunnel. I think we need to get into it really quick. The building is starting to collapse!\"\n\nRealizing that Saint was correct about the building, he immediately made his decision. \"Okay, everyone follow Saint! Help those that can't walk, but get moving!\"\n\nTo emphasize his point, Steve leaned over and easily lifted an obviously pregnant woman gently into his arms. That was when the light from his flashlight illuminated a beautiful platinum blonde girl as she helped a small boy to his feet and half dragged him to the hole in the wall that Saint had just entered.\n\nAbove ground, reporters had increased in number as the afternoon had progressed. They managed to video a few structures crashing to earth as aftershocks rippled through the small town, seeking to destroy what few buildings were left standing.\n\nThus, a network reporter was on hand to video Steve as he climbed over the debris to disappear through a twisted window frame. He then turned his camera to the men that were rushing up the street. They were led by a young girl while another girl stood waiting. The reporter recognized the children as belonging to Lisa and Jason Hunter and Charlie and Jordan Burns. He kept his camera trained on the men as they reached the Hunter girl.\n\n\"Uncle Steve went through that window!\" pointed the girl that had been waiting for her father and his friends. The men turned as one and hurried toward the structure just as the earth shook again and the entire building collapsed upon itself. Everyone was knocked to the ground, including the reporter. He quickly righted himself and resumed filming.\n\n\"Girls, stand back by that old car!\" ordered Jason as he climbed back to his feet. Men, get every piece of equipment we have up here as fast as possible! We've got a damn slim chance to find Steve and Saint and time is wasting!\"\n\nGwen had spent the day in an operating room of the mobile hospital. She had managed one bathroom break and silently thanked Jason for thinking of having portable toilets brought to the scene. She hadn't realized that the sun had set until Charlotte came into her RV. \n\n\"Gwen, you need to rest for a while. More doctors have just arrived. They can handle things for a bit. Let's go check on our kids and get something to eat.\"\n\n\"Sounds good,\" agreed an exhausted Gwen. \"I just want to visit a few of my patients and I'll join you.\"\n\nGwen walked through the large tents that had been erected earlier, speaking to the injured, offering encouragement and consolation. Her Secret Service contingent, as well as a reporter that had been serving as her interpreter followed, but not too closely as she made her way through what she considered her ward.\n\nShe stopped to check on a small figure in a cot in a dark corner. She could barely make out the old woman lying there. Her face was covered in bandages and her body appeared bent and gnarled. As Gwen touched the woman's forehead, she felt her wrist gripped tightly.\n\n\"My Queen! You have come home to save your people!\" croaked the woman as Gwen suddenly trembled in recognition.\n\n\"It's you! The fortune teller! How is it possible?\"\n\n\"You need to listen, My Queen. Your warrior and his son are in grave danger. Your son has met his future queen, but you need to pray for her as well. Only you can save them. Listen closely. Pray to Saint Stephen, the patron saint of Hungary. Pray that your warrior and your son and his future bride will be spared and will be returned to you, their Queen, to your daughter, and to the unborn child that you conceived as this day began. Your warrior will have another son, but you must act quickly if he is to ever see his child!\"\n\n\"That can't be!\" argued Gwen. \"Saint's with my mother and grandmother. He's safe!\"\n\nEven as she outwardly discounted the old woman's words, Gwen somehow knew that the woman was speaking the truth. Giving the old crone's hand a grateful squeeze, Gwen turned, fled the tent, and ran across the field to temporary quarters of the children.\n\nCharlotte had arrived just before Gwen burst inside, tears flowing down her cheeks. The change in Gwen from a few minutes prior was incredible. She was ashen faced, trembling, and sobbing as huge tears streamed down her cheeks.\n\n\"Saint?\"cried Gwen. \"Is Saint here?\"\n\n\"The kids saw him leave a while ago with a little blonde girl. Vicki is here and she's fine. Theresa and Ruth followed Saint and the girl. Kate and Lisa went looking for them half an hour ago,\" explained Paula. \"I'm so sorry they got away from me, but it's no reason to panic. We'll find them.\"\n\n\"No, Mom, we won't! Saint and Steve are in tremendous danger even as we're speaking. I've got to get to them!\" exclaimed Gwen as she fled the tent and ran toward the destroyed town.\n\n\"Madam President!\" called a Secret Service agent. \"We have an ATV here. Please let me give you a ride. I don't think our men can keep up with you.\"\n\nReporters were lined up along the perimeter of the dig site as Jason, Chip, Charlie, Jared, Ted, and the others dug with machines and bare hands in hopes of freeing Steve, Saint, and the others. \n\nCameras were rolling as Gwen stepped from the ATV and approached Jason, who had immediately silenced his dozer when he saw Gwen. He jumped down and rushed to stop her from going any further.\n\n\"Gwen, it's real bad. Saint and some girl climbed into the building. Theresa and Ruth saw them and fetched Steve. He rushed over and went inside as soon as he got here. There was another aftershock and the building went down before we could even begin to get to them. We've been digging as hard and fast as we can to get to them out. We'll keep it up as long as necessary. We won't stop until we bring them out!\"\n\nBy this time, Kate and Lisa had joined Gwen and reached out to support her as she began to collapse. \"Thanks, Jason. I know you men will do everything you can. I need to find a quiet place. Let me know when you find them.\n\n\"Kate, Lisa, would you walk with me?\" asked Gwen quietly. \"I need your support.\"\n\nCameras rolled as news crews sent live broadcasts back to the United States. The situation was grave as people around the world tuned in to learn the fate of Steve Hammer and his son.\n\nAmericans had actually watched on live television as President Hammer received the news that Steve and Saint were buried in the building. While it was approaching midnight in Hungary, it was just four PM in the United States and men and women coming home from work and school watched in fear and overwhelming grief as President Hammer trembled at the news, needing the assistance of her sisters to remain standing.\n\nWork lights from generators lit the main street of the demolished town as Gwen walked slowly up the street. \"Is there a church nearby? I need to find a church,\" insisted Gwen.\n\nLisa and Kate exchanged worried glances as they walked with Gwen. Was she thinking rationally at the moment? \n\n\"I'll ask,\" responded Kate as she turned to examine the many people watching them, looking for something that would help her identify someone that could be of help. Then Kate's eyes fell on a couple that stood to the side, watching Gwen intently.\n\n\"Excuse me, do you speak English?\" asked Kate politely as the couple quickly nodded and came closer. \n\n\"I am Hanna Kiss and this is my husband, Adam. We speak English very well. I am an astrophysicist while Adam is a seismologist, as well as a geologist. We have both studied in the United States and Great Britain.\"\n\n\"Wow!\" responded Kate. \"My question will seem pretty simple to you. Can you tell us where there is a church?\"\n\n\"Just ahead is the only church close by and it's been badly damaged by the earthquake. We would be proud to lead you there, but I'm afraid you cannot get inside. The front half of the building has given way,\" answered the very blonde Hanna Kiss gently.\n\n\"Please walk with us,\" requested Gwen as she studied the couple more closely. \"Have we ever met? I feel like I know you.\"\n\n\"I am afraid not,\" replied the blonde woman. \"I fear that you may hate me for what I am about to tell you. My daughter, Lena, was the girl that led your son into that building. She's always been a very good girl. I don't know why she did it, and I'm so very sorry about your husband and son. They are very brave.\"\n\n\"It was your daughter?\" exclaimed Gwen as she moved to embrace the bewildered woman. \"I'd forgotten about Saint meeting his queen! How old is your daughter?\" \n\n\"She is seven, but she is not a queen of any kind, certainly not like the Lady in Red, President of the United States, and Queen of the World!\" said Adam, speaking for the first time. \"Still, we love her dearly and fear for her survival.\"\n\n\"Your daughter is with my son and my husband. They'll protect her and bring her out safely,\" insisted Gwen to the concerned couple. \"That's why I need to find a church. Prayer is needed to save those people trapped under the debris.\"\n\n\"Well, that is all that is left of St. Stephen's church, Madam President. As you can see, no one will be entering that church for a very long time. The entire front half has crumbled into itself. I fear...\"\n\n\"Wait!\" cried Gwen. \"Did you say St. Stephen's? That's the name of the church?\"\n\n\"Yes, it has been for hundreds of years. Is the name of the saint so important?\" asked the surprised Hanna. \"St. Stephen is the patron saint of Hungary. He is regarded as the protector of kings, masons, stonecutters, and bricklayers, as well as children suffering from severe diseases.\"\n\n\"We need to get back to Jason right now! Please come with me; you're family!\" insisted Gwen as she turned and began the trek back through the ravaged town. Every step Gwen had taken had been viewed my millions of Americans. It was obvious to those watching President Hammer hurry back down the street that she was very determined, even as her sisters appeared totally mystified.\n\nOnce again Jason turned off his dozer to listen to Gwen. Cameras caught every word and gesture exchanged between the two.\n\n\"I want you to stop digging here and move everything up the street to the old church on the corner. You need to clear away the debris so people can get in and out of the section still standing,\" ordered Gwen clearly.\n\n\"Gwen, ah, Madam President, we're making headway here. All we need is a few more hours. Then we can start work on the old church,\" reasoned an obviously perplexed Jason.\n\n\"Jason, the only hope we have to save Saint, Steve, and the rest is to gain access to that church! Please move the equipment immediately,\" demanded Gwen forcefully.",
        "Exasperated, Jason turned to Kate and Lisa for help. \"Have you seen a map or something to indicate they could be in the church? Has some old timer told you some story? I'd like some facts to back up this strange decision.\"\n\n\"Jason, I've seen Gwen like this before. She's in that zone,\" stated Kate firmly. \"I can tell you right now that Chip will be moving his machine up there as soon as I speak to him. I'd strongly urge you and the others to do the same.\"\n\n\"Kate's right,\" insisted Lisa. \"Gwen has a way of knowing where Steve is when he needs her. Right now she's telling you that you have to open that church. That's the only fact you need right now. There are no rational explanations, but she knows when Steve needs her.\"\n\n\"This goes against everything I've ever learned as an engineer, but we'll move up there as quickly as possible,\" conceded Jason. \"I just want to see this nightmare through and get Steve and Saint out safely.\"\n\nWith that, Jason pulled his crew and equipment from the task at hand and explained that they were moving a couple hundred yards up the street and across it to the old church on the corner. \n\nAs the men relocated the equipment, reporters took to the airwaves. Amber Stahl was extremely emotional as she reported on the situation.\n\n\"Almost five hours ago, President Hammer's young son, Saint, followed a girl into a heavily damaged building, hoping to assist injured people inside. A few minutes later, President Hammer's husband, Steve, fearlessly climbed through the same window and disappeared, even as the building shook and groaned from the effects of the earthquake. A few short minutes after that, the entire four story stone building crashed to the earth. \n\n\"President Hammer's sisters' husbands, along with Charlie Burns, Jared White, Ted Anderson, Billy Marsh, Coach Watson, and many more friends and volunteers have worked tirelessly to remove debris carefully to not endanger any possible survivors below the rubble. \n\n\"Just now, President Hammer instructed the men to stop work at this site and move up the street to an old church, pretty much telling everyone that she believed it was necessary to save her husband, son and however many others are trapped in the earth. She based that order on her 'gut', and nothing else, or so it appears. \n\n\"Those of us who have followed President and Mr. Hammer since their early days have come to trust the seemingly impossible connection between the two. I have absolute confidence that this is the right decision. Once that church is safely opened, the President will be reunited with her warrior husband and their wonderfully capable young son!\"\n\nVery few others shared Amber's faith in Gwen's decision. Reporters and politicians back in the United States began weighing in on Gwen's bizarre order.\n\n\"The small window to save the people trapped in that collapsed building is rapidly closing and President Hammer has arbitrarily decided to move the rescuers way up the street to search for her husband and son,\" observed Senator Lancer. \"World leaders don't base decisions on gut instinct, voodoo, or blackmagic. Cold, hard, facts should be the basis of all decisions, especially when it involves the lives of so many people. This decision by President Hammer is ill advised and indicative of her erratic governing style. Sadly, it will likely result in the deaths of people that could possibly have been saved, including her own son and husband.\"\n\nThe excavation of the church was extremely slow. Jason insisted that supports be set in place before anything was removed. That alone took a couple of hours. Then came the painstaking labor of carefully removing huge chunks of rock and stone that had comprised the walls of the old church for centuries.\n\nNot far from the church was a small cemetery, also centuries old. Once the men began working on the excavation, Gwen found a grassy spot and knelt down and bowed her head. She had been told to pray for her son and husband. She was determined that was exactly what she would do.\n\n\"Gwen, are you okay? The guys will be working for hours. Why don't you get some rest?\" asked Kate.\n\n\"Kate, I just spoke with the old blind woman we met the day after my wedding. I'm sure you remember her. She told me I had to pray for the safety of Saint and Steve. Saint had found his future queen, but all would be lost if I didn't pray to St. Stephen. I intend to do exactly that until my husband and son are safely in my arms.\"\n\nKate was stunned. She had personally heard the old crone predict Saint's conception as well as his future heroics. With renewed hope, Kate sent a text message to her family. \n\nShortly after Gwen had knelt down, she was joined by Hanna Kiss and her husband, Adam. Gwen found herself holding and squeezing the hand of the blonde Hungarian woman as she silently made her peace with the universe and whatever Gods ruled it. Within half an hour, Jordan, Cindy, Charlotte, Laura, Naomi, Paula, Nadiya, Stephanie, and Ashley were kneeling close to her. The hours dragged by, but Gwen refused to consider moving, even when asked to do so by the concerned Secret Service. Local residents began joining Gwen in prayer. By dawn, five hundred people were kneeling around her, heads silently bowed. The inspiring scene was broadcast live around the world.\n\nThe sun was just beginning to peek into the mammoth cavern that had once been the dome of the church, when a wave of excitement swept across the exhausted crew that had worked so hard. Even with the front excavated and the remaining walls and roof reinforced, the building was less than stable. Jason had determined that digging through the debris that still made access to the back of the church impossible would create an unacceptable risk to rescuers as well as to any survivors possibly located in the bowels of the old church.\n\nTo that end, he had a hole cut in the roof once it had been blocked and strengthened enough to carry the rescuers' weight. Chip climbed into a basket was slowly lowered into the building by a crane that had arrived in the middle of the long night. Cameras caught the scene as the huge machine stopped dropping cable and remained still. Several minutes later, the crane began winding the cable up again. \n\nRoars sounded from the thousands gathered to watch the historic event as a young woman with an infant no older than a couple of hours in her arms slowly rose into view from the hole in the roof. She was carefully helped from the basket that had carried her up, and then assisted to a ladder. Jason gently took charge of the infant as the woman needed both hands to descend the ladder. Jason effortlessly followed her down and returned the child to its mother, who was weeping in relief as her grateful husband emerged from the crowd to support her. \n\nWhile it was six AM in Hungary, it was prime time in the United States. The entire nation was glued to their televisions and computer monitors as women and children were slowly brought to safety. News stations had been keeping a tally of those making their way to freedom. \n\nThe count was at thirty seven when a tremendous roar swept across the crowd as Saint and a thin but beautiful little platinum blonde girl came into view. The two were escorted off the roof safely before they ran to their mothers. Americans across the nation cried in relief as they watched their president reunite with her son after a long and grueling ordeal. No comment was made by Senator Lancer.\n\nSaint threw himself into his mother's arms as Lena did the same with her mother. Soon she was in her father's arms as he unashamedly cried into her hair. Then as if by agreement, Lena left her father and moved over to Gwen who swept her into her arms and fiercely hugged her.\n\n\"You're the one! I'm so very happy for Saint. You're such a beautiful little thing,\" sobbed Gwen as she clung to the frail blonde girl.\n\nOnce again Kate, Lisa, Jordan, Naomi and the other women exchanged glances, knowing that Gwen believed she was embracing her future daughter-in-law and mother of her grandchildren. Another surprise occurred when the normally reserved Saint moved to eagerly hug Hanna Kiss. Lena's mother embraced the boy tightly as tears cascaded down her cheeks.\n\nA loud roar from those gathered around the damaged church brought Gwen out of her embrace with the girl. Steve was standing on the roof of the church! He was shirtless and dirty with several nasty scratches on his face and torso. Most of them were caked with dried blood. \n\nJason had wrapped his arms around his friend and the two men grinned and shared a few private words as the world watched. \"I've never been so happy to see your ugly mug. Gwen knew we had to dig here to find you. I don't understand it, but I'm glad as hell that she was right. You need to take care of her. She's been up since yesterday morning. She operated on injured kids all day and knelt in that cemetery and prayed for your sorry ass all night. She must be exhausted, mentally and physically.\"\n\nSteve nodded to his friend before carefully climbing down the ladder and walking over to the cemetery and his waiting wife. Gwen was standing as he approached and took her shoulders in his hands. The two simply looked into each other's faces for what seemed a very long time. Unable to wait any longer, Gwen finally threw her arms around Steve's neck and pulled him down for a lingering, passionate kiss. \n\nSteve felt her tears on his bare chest as he clutched her trembling body. Then she simply collapsed. Steve deftly caught her and swung her up into his arms. Gwen was now sobbing loudly as she buried her face in her husband's grimy embrace.\n\nAs Steve held his wife, a Secret Service agent stepped in close enough to get Steve's attention. \"Sir, we have a U.S. Navy helicopter nearby, as well as a Navy doctor. Would you and your family please climb aboard? We need to care for the President, your son, and you. The President's parents will go with you. Please let them lead you to the chopper now.\"\n\nPaula and Ted nodded to Steve and then began the long walk back down the street and to the open field that held the waiting helicopter. Ted carried Vickie on his hip as he escorted Paula. Saint walked behind his grandparents with the little blonde girl and her parents, who Gwen had insisted join them. Steve was right behind them, carrying Gwen as if she weighed very little. Gwen was now lightly sobbing as she wrapped her arms around her strong husband's neck while, exhausted as he was, he carried her effortlessly through the badly damaged village. \n\nDirty, bruised, and battered people lined what was left of the main street of the town, clapping and cheering for the Americans. Gwen became aware of the people watching and lifted her tear-stained face and smiled. This caused an even louder cheer from those watching. \n\nNo one could doubt the profound effect Gwen and Lady in Red had made on the survivors of the disaster. The humanitarian efforts of the wealthy Americans had saved numerous, probably hundreds of lives and the people were extremely grateful. As Steve reached the end of the street and entered the impromptu landing field, Gwen saw rows of tents had been erected for temporary living quarters. Portable toilets were set up near every tenth tent or so and a large community shower/bathroom was under construction. Large machinery was everywhere, and much of it displayed the Lady in Red logo. \n\nTrucks loaded with building materials were pulling into an area on the far side of the field. It was apparent that as soon as the cleaning up was complete, building would commence. This small town in the mountains of Hungary had experienced the incredible generosity and courage of President Hammer and her group and it would never be forgotten.\n\nGwen and Steve had been delivered to their hotel in Budapest shortly after ten AM. Once she was certain that Saint was asleep in an adjoining suite, she climbed into bed and snuggled with her naked and exhausted husband.\n\n\"We'll talk about everything later,\" promised Gwen in a soft whisper. \"Right now, I just want you to hold me while we sleep.\" \n\nA state dinner had been scheduled for that evening. The Hungarian government was extremely pleased and more than a little surprised when it was informed that the President would be attending and there was no need to reschedule.\n\nSteve and Gwen were awakened at six PM and an hour and a half later, were announced as they walked hand in hand into the large banquet hall. The applause was very loud and continued for a very long time as Gwen smiled and bowed, acknowledging the honor while clinging to Steve's hand.\n\nOnce they were finally seated, the festivities began. The Hungarian officials couldn't praise and thank Gwen and Steve enough. All they could talk about was the personal and heroic efforts President Hammer, along with her husband and friends, made to help the people of a small, completely unknown Hungarian town.\n\nSteve noticed that Gwen merely pressed her lips to the rim of her champagne glass when the Hungarian President proposed his toast. \"Is your stomach bothering you? Normally you sip a glass or two of the champagne when you're being toasted.\"\n\n\"Husband of mine, I won't be drinking any alcohol for at least the next nine months, and who knows for how long after that. Not when I'm nursing your second son,\" responded Gwen with a smile. Steve suddenly gasped, which caused champagne to dribble down his chin as he tried to stifle his shock. \n\nThe room was silent as everyone watched the interaction between Steve and Gwen. They all knew what a trying day it had been and were concerned that Steve was not feeling well. \n\nSteve's mind was whirling with emotion as he assimilated Gwen's news. Suddenly, he stood and raised his champagne in salute. \"Ladies and Gentlemen, I propose a toast to the President of the United States, the Lady in Red, my Queen, my incredible wife and partner, who has just informed me that she'll soon be bearing us another son!\" \n\nGwen was taken totally by surprise as her delighted husband proposed a toast to her pregnancy. She had assumed that he'd be very happy and sneak off to tell Jason, Charlie, Chip, Jared, and Billy as soon as possible but it was so unlike him to be so public with his emotions. He was almost giddy with excitement.\n\nShe was unable to be upset with Steve. He was still seeking equilibrium after spending so much time trapped by the earthquake. Gwen had to admit to herself that she was very pleased with Steve's joy. Their child would be loved. That was obvious!\n\nSteve surprised her again seconds later. The room had broken into tremendous applause at his announcement. He smiled broadly as he took Gwen's hand and helped her to her feet before sweeping her into his arms and kissing her passionately in front of everyone, including the many reporters with cameras recording it all.\n\nGwen realized that nothing else mattered. Her husband loved her and the child she carried! She returned his kiss as ardently as she was able. Slowly Steve pulled his lips from hers and hugged her fiercely. Only then did she realize that he was quietly sobbing into her hair. She gently stoked the back of his head as the world watched. Her husband needed this and Gwen was very willing to give him the love he desired. She considered the ordeal he must have faced as he remained strong for the people with him even as he wondered if he and Saint would survive.\n\nPaula and Ted had been stunned by Steve's announcement and very surprised to see him clinging to Gwen as his emotions controlled his actions. He was always the calm one, steady, cool, and measured in his response. Now and then he revealed his very human side, but seldom in such a public venue. \n\nEveryone stood quietly and waited patiently as the scene played out. The fact that the very tough, determined Steve Hammer was demonstrating a far softer, more human side did not go unnoticed. Many of the women in the room reached for their napkins so they could dry their eyes. To love and be loved as fiercely as this amazing couple was something for which every woman longed!\n\nSteve finally moved back enough to look into Gwen's eyes and speak softly so only she could hear. \"I love you so much it hurts. When we were trapped under that church, I worried that I'd never be able to tell how much you meant to me. Now I've embarrassed you, as well as myself.\"\n\nGwen kissed him soundly on the lips before turning to the still silent crowd. \"My husband was just telling me how much he loved me. You could argue that this wasn't exactly the right place or time, but I'm always happy to hear it, regardless of where I am, and who I'm with. This amazing man is my rock, my confidant, and my lover. I'm very, very proud of that!\"\n\n*\n\nI thank Tex Beethoven for editing this chapter and making it a better read. "
    ],
    "authorname": "Harddaysknight",
    "tags": [
        "hungary",
        "earthquake",
        "emolument",
        "disaster relief",
        "second son"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lady-in-red-pt-03-ch-04"
}