{
    "title": "Black Sheep Ch. 02",
    "pages": [
        "So here I am, incorrigible as always, with the second chapter of Damien Chandler's misadventures and coming of age. I hope you like this chapter. Your votes, comments and private feedback mean the world to me, so please leave them on the way out.\n\nA shout of thanks to my editors KatieTay and NaokoSmith, without whose help this chapter would probably have been unreadable.\n\n<p align=\"center\">* *</p>\n\nWELLESLEY ACADEMY\n\nThe name is emblazoned in large, ornate letters on a granite slab by the side of the road. Legend has it that this stone fell to Earth from the deepest reaches of space, carrying with it infinite knowledge of our universe. In celebration, an academy was built nearby to instil this aforementioned knowledge into the brightest young minds of our time and mould them into the future leaders that the world needs, but does not deserve.\n\nOr... some rich guy named Wellesley came up with the idea of a private school for the ultra-elite in New York. The fees per semester are roughly equal to the GDP of Burkina Faso on a good year. An overwhelming majority of the students have too much money and no interest in academia. Goaded by their parents into joining the ranks of the highest echelon of society, they trudge to school and meet their fellow \"sufferers\". This institution is an assembly line, inevitably leading to an Ivy League admission.\n\nChoose whichever of the explanations seem more plausible to you, it doesn't change the fact that I found myself staring at the sign on Monday morning. If I stared hard enough, maybe that rock would splinter into a million shards.\n\n\"Come on, Damien. Assembly in five.\"\n\n\"Be right there, Marc.\"\n\nI walked slowly into the straight file of students. A few faces smiled at me, others were too absorbed in their own thoughts. Columns of students stood at rapt attention as our principal doled out his morning dose of soporific words. I swear, I have to start taking amphetamines one of these days if I am to remain awake through this painful ritual.\n\n\"Mr Damien Chandler.\"\n\nMy eyes snapped open at the mention of my name. Suddenly, everyone was turning their heads to look at me and wondering what I could possibly have done to merit a direct mention during assembly. The tormentor up front, Mr Steinberg, adjusted his horn rimmed glasses and observed me keenly in the usual manner of a high-energy laser aimed straight at its target. He cleared his throat.\n\n\"Mr Chandler, kindly come to my office before proceeding to your first class,\" he said, (surely I was imagining that his tone had the timbre of Hannibal Lecter's.) I resumed staring intently at my shoes for the remainder of the assembly.\n\nMindless chatter filled the corridor. Everybody made their way to their respective classrooms, leaving me to set forth on my journey to Steinberg's office. Outside what was both affectionately and aptly known as 'the torture chamber', sat Steinberg's secretary, Lori Sanders. I can never be in her proximity without feeling her undressing me with those sharp eyes behind her glasses.\n\nSure enough, I could feel her predatory gaze and almost see the whimsically inventive sex I would be having inside her head. She got up and gave me her best come-hither look before reluctantly letting me pass her into the office.\n\nI entered the lion's den with my head discreetly lowered. Steinberg was sitting behind his polished mahogany desk, looking through some paperwork.\n\n\"Mr Chandler, please have a seat.\"\n\nNot a flicker of emotion. His eyes never moved from his papers. Finally, those sunken eyeballs lifted up to pierce me with the laser-beam effect.\n\n\"I have received an invitation for an inter-school debate at Columbia University next week. Are you willing to represent us?\"\n\nI sighed with relief. A smile, a nod and a reassurance later, I was on my way back to class. I took my seat somewhere near the back of the class, beside Marc.\n\n\"What did Steinberg want?\"\n\n\"A debate hosted at Columbia. I'm representing the school,\" I whispered in his direction, hurriedly taking out the requisite notebooks.\n\nMarc is a good guy. His father is a construction worker and his mother, a city employee. Till last year, he could not even dream of Wellesley. Fortunately, his father happened to find a dead fly in his can of Diet Coke after a long and arduous day's work. The New York civil court, with their sound judgement, ordered Coca Cola to pay around half a million for negligent infliction of emotional distress, three hundred grand for negligent infliction of possible bodily harm and a whopping three million in punitive damages.\n\nYes, we are very proud of the personal injury laws in this state.\n\nMarc certainly is. He went from a derelict, mouldy apartment and an overcrowded public school to a posh house on Lex and the chair beside me. I like him. He has the hardened exterior and panache of a boy who grew up in the Bronx; no amount of money could change that. He is deceptively smart with the etiquette of a hobo. His family recently went to Le Cirque and licked the tender vichyssoise and cr\u00e8me anglaise off their fingers. No one said a thing, after all their money is just as green as mine.\n\nMy eyes dimmed the longer the lecture dragged on. I spied on another member of the nouveau riche near the front row. Jasmine Salador, in all her red-haired glory. Her entrance into the rich list was carefully plotted by her mother, Susan, who was a struggling single Mom before she found an old rich guy with a terminal illness. These rich men are of course exceptionally easy to manipulate into signing over everything in their dying moments. Putting up with his whims for a few months paid Susan -- and Jasmine - dividends for the rest of their lives.\n\n'Who am I to judge?' I thought. 'All my money also comes from preying on the base desires of others.'\n\nMy mind drifted back and forth in class, my hand writing away in a mechanical rhythm. My body is conditioned to take notes, even without being aware what I am taking notes on. The bell rang, jolting me back to the present. Jasmine got up and sauntered over to me, shaking that flaming mass of hair behind her head with a swish.\n\n\"Steinberg told you about the debate, right?\" she asked casually.\n\n\"How do you know?\"\n\n\"I know he's been itching to prove that Wellesley excels in all extra-curricular activities. This debate is a chance for him to claim debate as our forte,\" Jasmine answered. \"You're the best debater here and Steinberg personally called you to his office. All that adds up to...?\"\n\n\"Yes, he chose me,\" I said, surprised at her forwardness.\n\n\"I want to be your partner for the debate,\" she said firmly, oblivious to the restless class around her.\n\n\"Seriously?\" I asked, raising an eyebrow.\n\n\"Very seriously,\" she said. \"Come over to my place this evening to start discussing some talking points.\"\n\nJasmine never asks questions, it's always an order. She has firebrand radical opinions on most issues and is not afraid to air them publicly. Her voice never wavers and never shows weakness. She will not back down from an argument. Ever.\n\nIn short, there is no one I would rather have on my side.\n\n\"Come over around four. We should at least have a rough outline prepared by tonight.\"\n\nVery businesslike, she walked off. Jasmine is nothing like her gold-digger mother. She is bent on making her own name in the world. Some day, I will be proud to say that I was once part of a debate team with her.\n\nThe next class began. Mrs Lovelace did her level best to make me detest World History. There was an incessant clicking around me as my fellow scholars expressed their views on the class on Twitter using #boring and #hatehistory. Some of them were texting each other, estimating the size of Mrs Lovelace's breasts.\n\nClass followed class with dreary monotony. My eyes scanned all the desks, looking for someone. There were rows and rows of heads, but not the adorable smooth brown hair coming down to the shoulders. Every chance I got in that smorgasbord of academic tedium, I spent looking for her but it was not until after an exceptionally painful hour of Chemistry, that I caught a glimpse of her and smiled for the first time that day.\n\nKathy McHale, the only one in the class who does not have money to burn. Wellesley is kind enough to allow one scholarship student to be part of each batch. Every year, thousands of students apply for that one coveted spot and for my year, she was the lucky one. She is always shy and reserved, but exceptionally beautiful. The fact that she has to earn everything in her life makes her even more special. Behind that plaid skirt and poorly done hair, Kathy remained virgin to the corrupting forces of wealth.\n\nRecess came, greeted with a collective sigh of relief. We had half an hour's respite. As prefect, I have to ensure some modicum of discipline is maintained. The class dispersed into the cafeteria and sports areas.\n\nI saw Kathy sit by herself at her own table and take out a modest meal from her bag. She laid it out neatly on the table and clasped her hands together, saying grace. Her mind seemed far removed from the incessant chatter surrounding her.\n\nI'm sure Mom would be thrilled, and my sister dumbfounded, to know that I have a crush on a girl. In the hideous, carnal carnivale that is my life, Kathy is a small speck of normalcy. I felt exceptionally brave in that instant.\n\nIgnoring Marc waving me over to his table, I made my way towards her. She finished her prayers and looked up to see me, her beautiful amber eyes complemented by the crucifix dangling from her neck.\n\n\"Is this seat taken?\" I asked.\n\n\"Yes,\" she said quietly, but firmly.\n\n\"By whom?\" I asked, puzzled. She didn't have any friends I knew of. It is an unwritten rule in the snobby, spoilt, rich kid handbook not to mingle with anyone below your class.\n\n\"By anyone but you,\" she spat back sharply. I fumbled with a few words before I squeezed out a coherent one at last.\n\n\"Why?\"\n\n\"Because you're a Chandler and I'm a Catholic,\" she hissed venomously. \"I don't need temptation sitting beside me for lunch.\"\n\nThere it was -- the answer I should have expected all along. My family name ensures I have an unearned reputation. I'm a Chandler, the mythical beast mothers tell their little girls to stay far away from. A surreptitious pinch on my rear reminded me of the other girls, whose mothers should have told them to stay far away from me.\n\n\"Why do you want to sit there?\" came a bedroom voice from the side. \"There's a place for you right here.\"\n\nI turned my head disinterestedly to see a small group sitting nearby. The girl on the far right had attracted my attention with her pinch. She looked down my body, licking her lips and silver piercing.\n\n\"Wanna party with us tonight?\" her friend chimed in coyly, sticking her finger in her mouth.\n\n\"No thanks,\" I said curtly and began making my way back to Marc's table.\n\n\"Nymphomaniacs Incorporated hitting on you again?\" he asked, wolfing down his sandwich in large mouthfuls.\n\n\"They never give up,\" I muttered, unwrapping my lunch.\n\n\"You should go with the flow, dude,\" he drawled. \"Enjoy one or more of them while they still have the hots for you.\"\n\nMarc smiled wide, showing off all his pearly whites in stark contrast to his dark complexion. His brown eyes hovered over the three girls tapping away on their phones.\n\n\"They asked me to party last week,\" he grinned. \"Best sex I've had.\"\n\n\"Oh?\" I asked, more amused than amazed. \"Which one?\"\n\n\"I didn't have to choose,\" Marc said. \"I could barely finish with one before the other jumped in. The two not involved at any time kept each other busy for my viewing pleasure.\"\n\n\"Got it. Now I think I need to go get my ears cleaned.\"\n\n\"Can I ask you a question, Damien?\" he asked, getting up at the sound of the bell.\n\n\"Shoot.\"\n\n\"Why are you such a prude, man? Do you know how many guys would give both arms for the sexual legend that precedes you?\" Marc said, as he walked by my side. \"Your entire family is famous for making sex mainstream and you're a prude. How does that even happen?\"\n\n\"What can I say?\" I shrugged, looking longingly at Kathy melting into the crowd. \"Genetics can be cruel.\"\n\nPerceptions can also be cruel.\n\n<p align=\"center\">* *</p>\n\nThe day ended, leaving me with a pile of reference work to do. I would use any excuse to stay in the library rather than go back home and stumble upon yet another unsavoury scene. I decided to collect some material for my impending debate to share with Jasmine later.\n\nThe library at Wellesley is a seemingly unending tomb of books. The \"well\" of Wellesley as we call it. The cavernous interiors can be intimidating and I have been lost here on more than one occasion. I quickly checked out the books I needed and began going through them.\n\nTime went by as I diligently prepared notes to review with Jasmine. Finally, I had several files worth of data on my Nexus. It was a good half hour later than I intended and the Corvette was probably waiting outside. I just had to get one last reference that hadn't yet been digitized on the library server.\n\nThe History section was akin to a time machine. There were rare first-editions dating back decades. Wellesley didn't cheap out on the books, that's for sure. It's a pity that this treasury of books serves little purpose more than gathering dust and being a refuge for the occasional amorous couple looking for a risky thrill.\n\nSure enough, I heard the tell-tale thumping of flesh banging against antique bookshelf. It came from somewhere within the labyrinth of history books. I walked on, praying that I would not have to see whoever was behind the increasing thumping sound. After a small eternity, complete with the dull periodic thumping and intermittent moaning in the background, I was staring at the shelf where my book was. The thumping was very loud now, indicating the lovebirds to be nearby. All I had to do was take the book and scamper out of that maze the way I came in. No sights to make me uneasy.\n\nI got on the ladder and raised myself to the top shelf. The moment I took my book out, I saw the scene behind the bookcase through the narrow gap.\n\nMrs Constance Lovelace, in all her fifty odd years of glory, her arms clasping the wooden shelf and hanging on for dear life while Marc pressed himself into her. His slick hips moved back and forth in a metronomic rhythm, piercing her folds and pushing himself deep into her.\n\nThe contrast of her pale skin against his dark and muscular arms was stark. He wrapped one arm around her torso for support and slammed into her relentlessly. Sweat shone off his unclothed torso and dripped onto Mrs Lovelace's distended mammaries. They paused. He took her leg under his arm and let her body rest against the shelf.\n\nMarc resumed fucking Constance Lovelace with a renewed and forceful vigour. He dropped his face into her voluptuousness and she contorted under his grasp with unbridled pleasure.\n\nThat was basically all the trauma my brain could stand for one day. Leaving Marc to his new, and apparently promising, method of improving his grade in History, I scurried off with my book and the image of Constance Lovelace in the throes of passion permanently etched into my memory in traumatizingly vivid detail.\n\nPardon me if that sounds like an overreaction, coming from Damien Chandler, serial interrupter of parental orgies.\n\n<p align=\"center\">* *</p>\n\n\"Honey, could you tell Daniela to give you your food today?\" Marilyn said sweetly. \"As you can see, Ramona is a bit busy here.\"\n\n\"Fine,\" I said, pretending not to notice my father being ridden by the housekeeper on the mattress while my mother lay on the sofa, playing with herself. The sofa was set so that Mom was facing away from me and I could only fleetingly see Ramona bouncing up and down out of the corner of my eye. \"Oh, by the way, I have to go to LaSalle later on.\"\n\n\"Why?\" Marilyn asked, momentarily dropping her fingers into her orifice to get more moisture. The fingers immediately returned to circling her clit.\n\n\"I have to prep for a debate with Jasmine.\"\n\n\"Susan's daughter?\" she asked, turning her head around to see me for the first time.\n\n\"You know Mrs Salador?\" I asked.\n\n\"Good heavens!\" she said, opening her eyes wide. \"Who doesn't? That gold-digging tramp is there at all the Windcrest Ladies Club meetings, desperate to fit in with us.\"\n\n\"You don't seem to like her much.\"\n\n\"Damien,\" Marilyn said with a serious voice. \"They are the kind of people you should stay away from.\"\n\n\"I'll keep that in mind,\" I said quietly. \"See you then and thanks for keeping the sex where I can't see it.\"\n\n\"You're welcome, sweetheart. Come here and give me a kiss?\"\n\n\"No thanks,\" I said brusquely. \"I've seen enough naked flesh at school for one day.\"\n\n\"YOU FINALLY HAD SEX!\" she squealed.\n\n\"Sorry, but no. Let's just leave it at that.\"\n\n\"Awww,\" she said, thoroughly disappointed. \"Anyway, you stay safe, sweetie.\"\n\n\"I will. Bye, Mom.\"\n\n\"Love you.\"\n\n<p align=\"center\">* *</p>\n\n\"You took your time.\"\n\n\"Traffic was a nightmare,\" I said.\n\n\"I've looked up a few points for our discussion,\" Jasmine said, leading me up the stairs. \"Let's go to my room. Mom is fucking someone's brains out downstairs.\"\n\nI stopped and stared at her, taken aback by her frankness. She did not seem the least bit perturbed at what she had said. Looking at my expression, she sighed in exhaustion.\n\n\"Fine. She is making love to the guy she recently hired as her landscaper. Is that delicate enough for you?\"\n\n\"Better,\" I admitted.\n\nHer room was the last thing one would expect from a teenage girl. There was a noticeable dearth of bare-chested Hollywood heart throbs, Spanish soccer players and pale vampires. Instead, her walls were adorned with pictures of important CEO's and literary figures down the ages. I looked around to see shelves bursting with books and a modest desk with an overhanging lamp.\n\nThere was a large poster on the wall against the desk. It had a crown mounted atop the words \"KEEP CALM AND DON'T FUCK WITH ME\".\n\n\"So, let's get started,\" she said, looking at me purposefully. \"I have already written part of the introduction. You can have a look at that and..\"\n\n\"Where's the bathroom?\" I asked, breaking her flow.\n\n\"Go down the stairs. It's the second last door on the corridor to your immediate right.\"\n\n\"Isn't there one on this floor?\"\n\n\"Yes, but I don't want you to see the sex toys I keep in there,\" she said. Her tone was as matter-of-fact as when she had spoken of her mother's activities and her expression, total deadpan.\n\n\"Fine,\" I sighed, departing.\n\nI do not consider myself a moralist by any stretch, but the people around me make me feel like a reincarnation of Jerry Falwell. All I'm missing is the homophobia.\n\nAt the foot of the stairs, I encountered a Hispanic gentleman wearing only Speedos. His body was tanned with a tattoo proclaiming \"Property of Susan Salador\" under his left clavicle. He was toned from long hours of working in the sun, and no doubt from offering some other services as well. Sweat glistened off his body.\n\n\"Are you next for Mrs Salador?\" he asked in a thickly accented voice.\n\n\"No. I just want to take a leak.\"\n\nPuzzled, he walked off in search of his clothes. I hurried to the bathroom and finished my commune with nature. As I retreated down the corridor, I heard a voice akin to a nightingale learning the English language.\n\n\"My, my, and who do we have here?\"\n\nI froze at the words. Dainty footsteps approached me from behind. I turned around slowly to see the most popular tabloid fixture in the city standing with a wide grin on her face.\n\n\"Damien Chandler, right?\" she cooed.\n\n\"Yes, ma'am.\"\n\n\"Ma'am?!\" she said disapprovingly. \"Do I look like your grandmother?\"\n\n\"Sorry, Mrs Salador,\" I blurted out, desperate to leave.",
        "\"Again with the titles. You make me feel ancient,\" she said, taking a step closer. \"Call me Susan. What brings you over?\"\n\n\"I'm preparing for a debate with Jasmine upstairs.\"\n\n\"I wish she had told me earlier,\" Susan said, dramatically. \"Then I could have made arrangements for you.\"\n\n\"It's quite all right,\" I reassured her anxiously.\n\nSusan Salador stood at around five and a half feet. Her hair was red, but a few shades less fiery than her daughter's. Her complexion was alabaster white and her green eyes had an alluring quality of their own. Despite being middle aged, she maintained a perfect hourglass body accentuated by infusions of silicone in the right places.\n\n\"Jasmine never told me what a total knockout her classmate is,\" she giggled, stepping even closer. \"I could just eat you up right here, right now.\"\n\nHer voice had a natural melody to it, a musical note in every syllable. It was the last trace of her singing career. A lifetime ago, she was a destitute singer in some nightclub in Queens when one night, she caught the drunk fancy of aged investment tycoon, Emmanuel Salador. The rest, as they say, is history. The dirty old sod kicked the bucket within a year and she got everything -- the house, the cars and his entire portfolio.\n\n\"I should go upstairs now. It was nice meeting you,\" I spluttered.\n\n\"I know you'll probably laugh at me for this, but I really do think you're handsome, Damien. So handsome, that I want to take you out to dinner sometime.\"\n\nAll of a sudden, I felt ill. I needed to leave. Involuntarily, my legs began moving.\n\n\"Will you at least swap numbers so we can talk about it later?\" Susan implored. I took that number, gave her mine and fled back to the sanctuary of Jasmine's room.\n\n\"You took your time,\" she drawled.\n\n\"I ran into your mother.\"\n\n\"Oh? What did she say?\"\n\n\"She wants to ask me out for dinner sometime,\" I said, hoping this revelation would lead to Jasmine telling her mother off and sparing me any more uncomfortable moments.\n\nJasmine shrugged nonchalantly. \"Go out with her if you want, but she'll most likely want you in her pants at the end of the night.\"\n\n\"Let's get back to the debate now,\" I said, on the verge of tears from despair.\n\n\"Fine,\" she said, putting her notes down beside mine. After a brief silence, she spoke again. \"You really are very good looking. I'm not surprised everybody with a pussy hits on you.\"\n\n\"You don't,\" I said, in a tone of near admiration.\n\n\"That's because I'm queer.\"\n\n\"You're what?\" I asked, sure I'd heard wrong.\n\n\"Queer. Lesbian. Dyke. Twinkette. Boxlicker. Muff-muncher...\"\n\n\"All right, I get it,\" I said, signalling her to stop with my palm. \"Does anybody else know?\"\n\n\"Any guy who's brave enough to ask me on a date will know. They all seem too intimidated to even ask.\"\n\n\"I can guess why,\" I smirked. \"Well, it's good to have one friend who can be near a Chandler and not want to jump their bones.\"\n\n\"Weeellll... not exactly,\" she said, squinting playfully.\n\n\"What do you mean?\" I asked.\n\n\"There is one Chandler who keeps popping up in my wet dreams. I would seriously jump into bed with her in a flash,\" Jasmine admitted, glancing towards the bookshelf nearest to her desk. I followed her gaze to see a line of paperbacks, all written by the same author: Lucy Chandler.\n\nI really really ... REALLY needed to get back to the debate.\n\n<p align=\"center\">* *</p>\n\n\"I thought we agreed this was one line you weren't going to cross.\"\n\n\"I'm sorry, Damien,\" Marilyn panted, holding a bedsheet around her body. \"I didn't know you'd be back so soon.\"\n\n\"For heaven's sake, Mom. Put on some clothes,\" I said vehemently.\n\nShe scurried off apologetically. I walked into the guest room, holding my head in my hands, coming to terms with what I had seen. My head was spinning and I wanted nothing more than to throw up.\n\n\"She promised she wouldn't. She promised,\" I thought in the same emotionally wrung out loop. Each time I want to believe that my parents can't do anything new to hurt me, they take it as a challenge.\n\nI went to my solace, my study, and tried to distract myself on my tablet. Of course it didn't work. It never does. I tried closing my eyes, only to be assaulted by memories of what I had glimpsed downstairs.\n\nThere was a faint knock on my door. So faint, it took three or four of them to register with me. I got up and opened the door, to see my mother with tousled hair and a gown hastily thrown on, waiting with a perplexed expression.\n\nI stared at her, trying to come up with the right words. Finally, she spoke.\n\n\"Damien, I'm so sorry. I didn't realize you would be back so soon,\" she repeated, her voice trembling.\n\n\"That's all you have say?\" I shot back. \"Not sorry for what you did. Just sorry I came back early and caught you doing it?\"\n\nMarilyn looked at me, fumbling with her words. I took a deep breath and resumed.\n\n\"Mom, I've learnt to live with all that you and Dad do around here. Everything,\" I said, every word slow and measured. \"In return, all I asked was that you keep your activities out of my room and don't include anyone I know at school. Was that so hard?\"\n\n\"Damien, please-\"\n\n\"Did you give the doubles partners lemonades at least before fucking them?\" I asked, rage bristling.\n\n\"Please, hear me out,\" Marilyn wailed.\n\n\"Go ahead. I'm very eager to hear why my opposing doubles team was in my house, in my room; double-teaming my mother.\"\n\n\"They're actually nice boys,\" she pleaded softly. \"I was at the Sutton club, getting a few hits in when I heard Marty call. He and Kyle were practising too and they wanted to hit some shots with me. So we began rallying for fun and laughing and...\"\n\n\"Got it!\" I said. \"... and one thing led to another and it ended with Marty in your ass and Kyle in your mouth on my bed.\"\n\n\"Don't make it sound so crude,\" she replied. \"They're such handsome boys, I couldn't resist. You know I have a weakness for cubs. But, if I had realised you would walk in on us, I would never have taken it so far.\"\n\n\"Please, Mom. Stop. You're not making this any better.\"\n\n\"I'm sorry, sweetie,\" she beseeched. \"You have to believe me.\"\n\n\"Was this the first time?\" I asked, sudden realizations dawning. \"Have there been any others?\"\n\nMarilyn bit her lip and avoided my gaze. Guilt exuded from her every pore. Suddenly, I felt light-headed. I tried imagining school and everyone I met. How many of them were fucking my mother? How many hands had I shaken which had been in her vagina? Were they having a collective laugh over it?\n\n\"I'm so sorry, Damien,\" she whimpered. \"I can't control myself. Every time I see a handsome young man, I want to fuck him hard. The thrill of him being your classmate makes it even more of a vicarious thrill.\"\n\nThe bitter feeling of bile filled me. I clenched my eyes shut, momentarily revisioning that glimpse of Marty, Kyle and mother-dearest on my bed. As sorry and as wretched as she felt in that moment, I knew it would happen again, only worse. Her libido always had a way of overwhelming her shame.\n\n\"Are we okay now, dear?\" she asked in a small voice.\n\n\"No we're not,\" I said, with the hint of a smile. \"But we will be.\"\n\nIn front of her paralysed form, I took out my phone and called a recently stored number. She looked at me, bewildered at my growing smile.\n\n\"Susan. Hi. I've decided to take you up on your offer for dinner. Let's not waste any time and catch something right now... I hear Hwang's is open and it serves good stuff... Great. Be at your place in a bit.\"\n\n\"Who was that?\" my mother asked warily.\n\n\"Susan Salador, or as you call her, the gold-digging tramp,\" I said smoothly. Her face went pale.\n\n\"What?!\" she gasped. \"I told you to stay away from her.\"\n\n\"And I told you not to fuck my classmates.\"\n\n\"Damien, please,\" she implored. \"Don't do this. I realize you're upset right now and it's my fault. I promise, I won't have sex with anybody in your school again. But please, don't go anywhere near that woman. She's bad news.\"\n\n\"So I've heard,\" I said with a sardonic smile. \"You keep insisting I get a date. You should be happy for me. I might even get to have sex, you know, like you did. In my room. Twenty minutes ago.\"\n\nI walked past her and stopped when she grabbed my hand.\n\n\"Punish me if you want,\" Marilyn said, her head hung low. \"Just not this way.\"\n\n\"Gotta go,\" I said cheerily. \"Can't keep a lady waiting. Tell Marty and Kyle I said hi.\"\n\n<p align=\"center\">* *</p>\n\n\"Well.. well. On the very same day we meet for the first time, we're having dinner,\" said Susan, taking a small meatball between her lips and licking it slowly.\n\nAll that bravado from earlier had evaporated. The longer I sat there, the larger the realization loomed over me that I had come on a date just to teach my mother a lesson. I wasn't attracted to the skank on the other side of the table. I barely knew her.\n\nSusan wore a dark red dress which went well with her hair. It was low cut, a little too low for my liking. Her elbows rested on the edge of the table, one hand on mine and the other toying with some food. She was a dead ringer for Joan Holloway from Mad Men, all the way down to the seductive smile.\n\n\"Tell me, Damien,\" she asked coyly. \"Have you ever dated an older woman before?\"\n\n\"No,\" I said, my shifty gaze darting around.\n\nEven as I said it, I felt her foot grazing my ankle before making its way towards my thigh. My heart skipped a beat and my skin crawled as I imagined where that foot had been.\n\n\"Are you nervous?\" Susan asked.\n\n\"Is it that obvious?\"\n\nShe threw her head back and laughed. Her luscious red lips returned to her meatballs momently before she looked me with an intense gaze.\n\n\"Better get those nerves together fast, boy,\" she said in her best bedroom voice. \"You have a long night ahead of you.\"\n\nThat was the last straw. I couldn't be part of this macabre soap opera any more. Wiping my face, I said politely. \"I'm sorry, but I'm not feeling well. Could I go home now?\"\n\n\"I suppose,\" she said, taken aback. \"We could always reschedule this for some other time.\"\n\n\"Actually, I think it's best we forget about it.\"\n\n\"What?!\" she said, loud enough to be heard by some nearby patrons.\n\n\"This was a bad idea from the outset. I wasn't thinking clearly. I'm sorry, Susan.\"\n\nShe looked at me, a melancholic disappointment playing on her eyes. I was about to stand up, when she grabbed my wrist.\n\n\"What's the matter?\" she asked in a small voice.\n\n\"I can't do this,\" I confessed. \"I'm not attracted to you.\"\n\n\"Then why did you call and ask for dinner?\"\n\n\"To punish my Mom,\" I said. \"I knew she would never agree to me going on a date with a gold-digger like you.\"\n\nI stopped, my mouth hanging open, and slowly realized what I had said. The words hung in the air between us. She looked at me, putting up a superhuman front to the river of tears which wanted to burst out.\n\n\"I'm sorry. I should go now.\"\n\n\"There's something I'd like to say before you go,\" Susan said in a small voice. \"Just hear me out.\"\n\nIt was the least I could do.\n\n\"My parents never loved me, Damien. My father found it more convenient to pretend I didn't exist. To this day, he has never once given me any approval or affection. Since high school, I have been searching for that approval elsewhere, with any man. Jasmine's father was my Social Studies teacher in high school. My father kicked me out when I told him about the affair and my teacher denied it when I told him about the baby. I've scraped by since, singing in various places and looking for love in cheap motels with cheaper men.\"\n\nShe paused to wipe a stray teardrop which had made its way past her defences.\n\n\"Then one night, Emmanuel came into my life. He was much older than me, but in his eyes, I saw the love which no man had ever given me before. I couldn't resist him.\"\n\nI leaned in, clasping my hands.\n\n\"Tell me, Damien,\" she continued. \"Is it so wrong to make the last days of someone a little happier? He was a lonely man. His family had forsaken him, waiting for him to die so they could swoop in on his estate. I cared for Emmanuel. I loved him.\"\n\nShe held her pendant out to me. The heart-shaped locket snapped open to show pictures of Emmanuel and her on a beach.\n\n\"Even as the multiple sclerosis slowly killed him, I stayed by his side. I fed him and sang to him. I put a smile on his face. I never asked for his money, but he gave it all to me anyway. Hence, the gold-digger tag.\"\n\nSusan smiled weakly, holding my hand.\n\n\"The tabloids like a story so they went with that. My own daughter thinks of me as a greedy whore. She never even looks me in the eye any more. Everywhere I go, I hear people pointing and whispering, no doubt pointing out the gold-digger to their friends.\n\nEver since Emmanuel died, I have a big hole in my life. I needed that warm feeling of love and affection, but knew I would never find it again. So, I resigned myself to how I was like before I met him. But when we were together, I never cheated on him. Not once. I would trade all the wealth Emmanuel left me with for one more day with him in a heartbeat.\"\n\nI closed my eyes, feeling lower than the Dead Sea.\n\n\"If you were to look at my thighs, you would see several scars. I do it when my lover is gone, so he can't see me hating myself after I make love to him. Maybe some day, I will cut my femoral artery and won't hate myself anymore.\"\n\n\"No,\" I said quietly. \"Don't do that. Please. It would hurt Jasmine very much.\"\n\n\"I doubt it,\" she said. \"Not a day goes by when Jasmine does not berate me for being such a slut. If only she knew how I feel every time she says it.\"\n\n\"I don't know how that feels,\" I said. \"But I know someone who goes through the same thing everyday.\"\n\nI paused and remembered the look on Marilyn's face as I left her, standing in the hallway. She was probably crying in her room at that moment and would cry herself to sleep later on. I made a mental note to talk to her when I got back.\n\n\"You really are a nice guy, Damien,\" Susan said, running her fingers over the back of my palm.\n\n\"Thank you. You're nice too.\"\n\n\"Tell that to everyone I meet,\" she said with a grin. \"They all hate me because of what they think I am.\"\n\n\"I know how that feels,\" I said, suddenly feeling very vulnerable. \"Believe me, I know how much that hurts.\"\n\nI clasped her hands and she looked at me intently.\n\n\"We should do this again,\" she said.\n\n\"We should,\" I agreed. \"Just don't come onto me again. Deal?\"\n\n\"Deal!\" she exclaimed with a laugh.\n\n\"Was there any song which Emmanuel particularly loved?\"\n\n\"To Make You Feel My love.\"\n\n\"The version by Adele? I love that. Could you sing it for me sometime?\"\n\n\"It would be my pleasure.\"\n\n<p align=\"center\">* *</p>"
    ],
    "authorname": "LaRascasse",
    "tags": [
        "school",
        "threesome",
        "debate",
        "gold-digger"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/black-sheep-ch-02"
}