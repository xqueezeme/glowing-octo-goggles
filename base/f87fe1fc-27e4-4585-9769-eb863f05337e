{
    "title": "A New Way of Seeing Things Pt. 04 Ch. 01",
    "pages": [
        "Oh God, he's back! \n\nFor those of you glad that this story had thankfully come to an end, sorry to disappoint and hey\u2014why are you reading this anyways?\n\nFor those wondering where I've been; my humblest apologies, but some health issues and a need to take a break from this storyline made a hiatus both necessary and desirable. During the downtime I played around with the first chapter of a spinoff to this series, and while it's a fun project, I think I'm ready to continue with Gwen. Of course, you will have to be the judge as to whether continuing was a good idea.\n\nSo, having said that... \n\nStandard disclaimers.\n\nThis is a story about sexual exploration and, open relationships. Open relationships can and do happily exist; but they are not for everyone. If you do not believe it is at all possible for open relationships to exist without damage to any and all involved parties, please do yourself a favor and don't waste your time reading this. Negative comments on the subject of a story after you've been warned are a lot like a politicians against gay rights who gets caught in a public bathroom with a \"wide stance\". It just makes me believe you like the subject and are ashamed to admit it. \n\nAlso, this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental. \n\n*****\n\nTo Gwen the return home felt like stepping out of a twisted fantasy world and back into a safer, more familiar one, from barely in-control (the Lady flatly disagreed with the in-control part) sexual creature to just another wife, mother and business owner. She was thankful for the comfortable predictability of a life lived for so long, but also knew it was useless to deny it was the way things would be from now on. There would come a time when her corseted alter ego would demand they leave the safety of the kitchen for a chance to again run wild.\n\nComfortable predictability included a quick tidying-up of the house even though none was really necessary\u2014Alison and Jason had done a good job of leaving things as they had found them. Still, old habits die hard...that included changing the sheets as she was sure from the way it had been made that her daughter and son-in-law had at least slept in their bed, if not used it for other purposes. A pair of men's underwear and a bottle of personal lubricant were tucked between the mattress and headboard, the briefs not Tim's and the lube not hers, confirming her suspicions or more than just rest. I guess that video was not the only time she let Jason have her that way, Gwen thought with a smile as she turned the plastic bottle in her fingers. That in turn called for a routine check of her nightstand drawer. Her toys had been rearranged, giving her a small perverted thrill that Jason had again gotten a peek behind the curtain that hid his mother-in-law's private desires. The thrill only lasted until she realized that Tim's replica had been in there as well. The idea that his daughter might have recognized it for what it was, or even worse hadn't and used it, put a damper on her excitement.\n\nShe was about to go tend to the barn when Natalie called from work, using almost all of her dinner break to get a complete play-by-play of the weekend. Gwen shared most of the details but omitted the interlude with the masseuse; the massage had begun to weigh on her conscience on the drive home. It was not the fact that she had allowed herself to be pleasured by a stranger, or even that she had in turn watched her husband enjoy the same treatment, that bothered her; it was the casualness with which she had accepted it and the absence of guilt or remorse that was most concerning. Sharing their bed with Cricket was different, she had convinced herself, that could be excused as a learning experience and confidence builder for the young woman, but allowing a total stranger to do \"that\", well that should be far more troubling than it was. \n\nShe was still wrestling with the massage's apparent lack of consequences when Natalie came to ride that Friday, insisting on a retelling of the weekend as they moved along the wooded path. \"Did it ever bother you when a guy was, umm, with you and somebody else at the same time?\" Gwen abruptly blurted out during a lull in the conversation before the Lady could stop it. \n\nNatalie turned in her saddle, a mildly confused look on her face. \"You mean when the guy was seeing me and someone else at the same time?\"\n\n\"Not like that exactly, no, like when you were all together...in bed...\"\n\n\"Ohhh, that kind of together. Not really, no...we're just fooling around, having some fun...\" Natalie eyed her companion critically. \"You've asked me that before.\" Her eyes widened and she smiled as if a great truth had been revealed. \"Wait-did something happen last weekend you're not telling me?\" \n\nGwen could feel the burn of her cheeks as she pretended to study the path in front of her while slowly beginning her confession. \"Well, yes, I guess something did. Mrs. Danning arranged a massage for me after I rode on Saturday\u2014she does that for all of her riders, I guess...and I, uhh, ended up getting a very complete massage, if you know what I mean.\" \n\n\"Like, you got turned on?\"\n\n\"More than that...I, umm,\" her voice dropped to a murmur, \"I had an orgasm.\"\n\nNatalie let out a small whoop, one loud enough to startle Tigger. \"Did she\u2014it was a she, right?\u2014know you came?\"\n\nGwen nodded again, cheeks flaming. \"Yes, it was a woman and she did it on purpose-said it was part of the kind of massage she was giving, if I wanted her to.\" \n\n\"And you said yes?\" She nodded curtly. \"That's a hell of a massage! You told Tim, right?\"\n\n\"He was there. He saw it all.\"\n\nNatalie turned serious. \"He didn't get pissed off, did he? That's not what this is about, right? I mean, he sure seems to like hearing about what we do...\" \n\n\"No, he wasn't mad at all. I'm pretty sure he liked seeing all of...that.\"\n\nThe blonde grinned. \"So what's the problem? You think he should've been mad?\"\n\n\"No, it's not that at all! It's just that...she, uhh, gave Tim the same kind of massage after me.\" \n\n\"Ahhhhhh...I think I see now. First time seeing somebody else get your man off and you're freaking out. It's understandable. Tell the truth, I remember being a little weirded out seeing Adam between another girl's legs the first time after I decided he was 'the one'.\"\n\nExcept it's not the first time you've seen someone else do that, the Slut corrected. Gwen chose not to share that tidbit. \"That's the problem-it didn't bother me. I just sat there and watched her do it, like I was watching another rider work their horse, looking for ways to make my own technique better. What bothers me is she was a complete stranger and we both\u2014actually, I- let her do that. Don't you think that's strange?\" \n\nNatalie laughed. \"No, not really. I mean, she offered what sounds like something that's part of the normal package there, you took her up on it and let Tim have some, too. Sounds very fair and reasonable to me. So, handjobs, right?\"\n\n\"Huh?\"\n\n\"Handjobs?\" the other rider patiently repeated. \"She got both of you off with her hand?\" Natalie's patient smile turned sly. \"Or did she use something else?\"\n\n\"Oh\u2014no!\u2014I mean, yes, she only used her hands\u2014nothing else!\" Gwen rushed to emphasize. \n\n\"And, so? Did you learn anything new watching your stallion get ridden?\" \n\n\"She didn't ride him, she just used her hands,\" Gwen needlessly clarified. And...I did notice she really took her time before she let him...come, really drew it out. She seemed to know exactly when he was close, then backed off and brought him back up again. I always thought it was mean to make him wait that long, but it looked like he liked that. He made quite a mess!\" \n\n\"I'll bet. A strange hand can have that effect. He might have been showing off a little, too. Guys wanna be known as a stud and not a dud in bed. And how about you? Did she know her way around the female body?\"\n\nGwen smiled. \"I think she knew what I wanted even before I did. I should have said no when she offered, but I was so, uhh, on edge from everything that had happened so far.\" \n\nNatalie nodded thoughtfully, a teasing smile still on her lips. \"Hmm. So was she better than me?\" \n\n\"No! Not better, just...different. Or, I don't know, maybe it was just the situation that made it different. You know, strange place-\"\n\n\"Strange person,\" Natalie finished. \"Strange can be good, really, really good. New views and new moves, that kind of thing.\" \n\nThe clear sky and muggy heat made a swim a necessity after their return, their sweat-soaked clothes casually discarded poolside. \"So I couldn't help but notice your photographer decided that warrior princesses don't trim their bush?\" Natalie asked as they lounged side by side hanging off the pool edge within reach of their drinks. \n\nGwen glanced down to where her thatch was pressed against the concrete wall, suddenly a little self-conscious. \"Oh-the stylist trimmed it both days.\"\n\n\"She couldn't have trimmed much. It looks like that first day before I cut it back. Remember that?\" \n\nGwen blushed again. \"How could I not? I was so embarrassed! I couldn't believe you talked me into letting you do that!\"\n\n\"At the time, neither could I,\" Natalie confessed with a grin. \"And you do remember that you promised me I could cut it again after you were done posing pretty for the camera, right?\" \n\n\"I guess I did, didn't I...\"\n\n\"Yup you did. C'mon, let's go get you nice and neat down there.\" Natalie led her out of the pool and into the bedroom, waiting for Gwen to finish gathering supplies before gently pushing her back on to the towel laid at the edge of the bed. \"Spread 'em, honey,\" the nude blonde directed, cupping her chin thoughtfully as Gwen opened up to her, revealing her resurgent thatch. \"I mean, it's not completely out of control, not like some of the ones I've seen...some of the women I've done at work really have a jungle down there, and don't even get me started on the guys! What you've got doesn't completely hide those beautiful pussy lips of yours, just makes 'em harder to see. So straight and silky smooth...,\" she mused, bending slightly to gently pet the growth before looking up at its owner. \"Tim likes less than more, right?\"\n\nGwen giggled despite herself. \"I think he's more interested in what's underneath.\"\n\n\"Think he'd like an unobstructed view? 'Course, taking it all off will be like giving him a brand new pussy to play with...not to mention more time licking, less time picking pubes off his tongue.\" \n\n\"You mean, nothing at all? Bare?\"\n\n\"You've been almost there before...just a couple more swipes of the razor is all it would take.\"\n\nNatalie reached for Gwen's phone on the bureau behind her. \"Hold still,\" she commanded, focusing the camera on the dark silky patch of hair.\n\n\"What are you\u2014\"\n\n\"Just hold still.\" Picture taken, Natalie began typing a message. \"To Tim,\" she announced. \"Giving him a before shot.\"\n\n\"You're crazy!\" Gwen laughed, knowing he would appreciate the little reminder of what was waiting for him at home. \n\nNatalie knelt between the widespread knees, scissors in hand, sporting a mischievous grin while inserting a finger in Gwen to collect some moisture and slowly drag it up her slit before beginning to cut. The snicking of the blades was rapid-fire at first but slowed as longer strands became difficult to find. The phone was retrieved for a \"during\" picture, Natalie again inserting a finger only to withdraw it and spread the moisture over Gwen's clit until her hips twitched in response. Shaving cream was next, the fluffy layer of white masterfully reduced by drags of the razor. \n\nNatalie paused to admire what her work had revealed. The gentle swell of Gwen's outer labia seemed to clamp together in an attempt to hide the delicate inner lips between them, only the owner's aroused state making them flower enough to allow a peek. \"You really do have the prettiest little pussy,\" Natalie murmured as she collected the last wisps of foam and reached for a towel to finish the job. \"It really deserves to be shown off. We could always send this one to the photographer,\" she suggested, reaching for the phone again. \"Maybe he'd ask for a re-shoot?\" \n\n\"I'd like to think that was not the focus of his work,\" Gwen deadpanned. Everyone certainly got a good enough view at it on Sunday, she silently mused, hair-covered or not. But what would Marco do with a closer look...\n\n\"Well, I'm sure Tim will enjoy seeing what we've been up to,\" Natalie said with a chuckle. She again studied her efforts. \"It looks good enough to eat...\" she bent to gently kiss the still-damp flesh of Gwen's outer lips, lightly planting more up and down the length of the furrow before inserting a tongue, getting a shiver and soft sigh in response. The blonde smiled at the unspoken welcome, nibbling and licking while reaching up to take one of Gwen's breasts in each hand. She had her sister-in-law well on the way to the climax she had been hoping for since breakfast before pulling away to grab for the nearby bottle of baby oil. \"Don't want this delicate skin to dry out and chafe...\" Natalie rose and straddled Gwen's leg, pressing her own sex against the freshly oiled one beneath. \"Let me rub that oil in some more,\" she purred, falling forward on to her hands and slowly moving her hips.\n\nGwen welcomed the pressure and flexed to create some more while reaching to gently cup and weigh the wobbling tits dangling over her own. Natalie smiled and closed her eyes, groaning in appreciation at the feel of fingers stroking her nipples. \n\nThe small patch of hair gracing the top of Natalie's mons at first tickled bare skin until the movement of her hips grew more frantic, the wiry tuft quickly turning soft and slick as it became soaked in baby oil and arousal. Gwen was the first to succumb to the insistent pressure on her clit, her hands reflexively squeezing the breasts they held as she climaxed, her breath catching in her throat as wave after wave of intense pleasure radiated from her sex. She risked a look up as Natalie continued to grind towards her own finish, her eyes screwed shut and lower lip captured between her teeth. Red blotches spread out from where fingers still squeezed the flesh beneath; Gwen quickly let go, worried and embarrassed her loss of control had caused pain.\n\n\"No\u2014keep squeezin' 'em\u2014hard,\" Natalie panted, eyes still closed. \"I like that sometimes.\" Despite the direction, Gwen's grip was still tentative but it was apparently enough for their owner, gasping out a rhythmic chant to announce the arrival of her orgasm. She fell forward on to the body below her, face buried in Gwen's neck, the hands that had been clutching her tits moving to gently stroke her back while she recovered. \"Thanks!\" she finally said after rolling off to lie back and catch her breath.\n\n\"Thank you!\" \n\n\"Welcome, any time,\" Natalie said with a laugh, playfully patting the flesh she had shaved just a short time ago. \"And you'll have to tell me what Tim thinks of the new look.\" \n\n***\n\nGwen could always tell exactly who it was coming up the office stairs based on the sound of their boots. Their pace, weight of their footfall and the scuff of bootsoles on worn wood\u2014every one of the plumbers and apprentices had their own calling card. This afternoon she knew it was Tim from the second step, his pace quicker than normal at the end of a busy day of a busy week, but still distinctly him. There was another pair of boots right behind him, Andrew's, she knew even as the sounds of out-of-sync footsteps thudded up to her. She had dressed appropriately for the return of the trucks after Natalie had left; still, she did one last check down her shirt, ensuring that everything had been properly buttoned up.\n\n\"Oh\u2014thank you,\" she said, taking the paperwork both men had brought. \"I was just coming down for that.\" \n\n\"No problem, like to see it gets in the right hands,\" Tim said affably. \"Oh, and thank you for sending the pictures of that landscaping job. Quite a change from last week! I like it a lot!\" \n\nGwen blushed, nervous their audience might somehow break the code. Still, the Slut managed to goad her into a reply. \"The landscaper will be glad to hear that.\"\n\n\"I could have done it, though. I wouldn't have minded at all.\"\n\n\"I know, but they were here, and...\"\n\nTim laughed. \"Did they, uhh, hang around after?\"\n\nHer blush deepened, responding after a quick glance at the young man standing behind her husband. \"For a bit.\"\n\n\"Good\u2014you'll have to give me the details later. Oh, hey, Andrew, do me a favor? I had to refill one of the propane tanks today. Can you go down and see if you can find the receipt in my truck? Should be in one of the cup holders.\" \n\nIt didn't look any different around the house when I drove in, the young man thought as his bosses conversed. They must have had some work done up by the pool. I'll have to find a way to check it out sometime-might create some new opportunities for a better view without being seen... \"Sure\u2014who's it from?\" \n\n\"Lensky's. Should be the only one in there.\" \n\n\"Got it.\"\n\nTim waited until the bobbing head disappeared down the open stairwell. \"Can I see?\" \n\nGwen knew exactly what he was asking. \"Later,\" she said in a voice just above a whisper. \"Once we get back to the house. Then you can look all you want.\" \n\n\"I'm gonna do more than just look when we get back to the house. C'mon, just a little peek?\"\n\n\"He'll be back any second!\"\n\n\"He's gonna have a little trouble finding it... c'mon, hurry up and show me.\" \n\nWith feigned exasperation she reached for the button of her pants and quickly undid it, pushing them down along with her sensible underwear a few inches. She grasped the waist of the unbuttoned pants, ready to pull them back up, but Tim stepped forward and ran his callused hand over the freshly exposed skin. \"Nice and smooth,\" he grumbled, snaking a finger into her. \"And wet, too.\" \n\n\"Later,\" Gwen admonished, playfully pushing his hand away and putting her clothes back in order. \n\n\"That's for sure.\" \n\nAndrew's boots were again on the stairs, the Nelsons vaguely guilty stares back at him as his head rose above the landing giving the impression he had interrupted something. \"I, uhh, didn't find a receipt...\" \n\nGwen got a surreptitious wink from her husband as he picked up the stack of papers she had set down on the desk. \"Oh-sorry\u2014here it is. Forgot I already put it in here. C'mon, let's go take a quick look at that flow meter you said you were having trouble with before you leave.\" \n\n\"That was too risky!\" Gwen laughingly admonished her husband as they walked back to the house after everyone had gone. It was the Lady that had insisted she say that; in reality the risk had been worth the thrill\u2014it would have been close, but the sound of Andrew on the first step had given her just enough time to button and zip up. \"Imagine if he had caught me with my pants around my ankles like that!\"\n\n\"They were way above your knees,\" Tim patiently retorted. \"Hell, they were barely down far enough for me to see anything.\"\n\n\"You saw it all! Honestly, you'd think you've never seen it before.\"\n\nHe shrugged. \"What can I say? I don't get tired of looking at it, and now it looks different-even before when you'd leave that little patch on, you still weren't completely bare. Wonder if it feels different.\" \n\n\"You should know\u2014you've already touched it.\"\n\n\"With my hand, yeah, but there's a few other parts of me that I want to try...\" \n\nTim was still openly admiring her shaved sex later as he lay between her legs, gently kissing the bare mound and smooth lips before letting his tongue go to work. Gwen smiled at his enthusiasm. She could appreciate why he found this part of her so mesmerizing, he was a man after all, and here was the focus of his primal lust within his control and as exposed as it ever had been. As for herself, her pubic hair had always been nothing more than a convenient screen for the unsightly cleft it covered before she had first consented to have it trimmed down. Getting that first close-up view of Natalie's had been a shock, but once she had gotten over the fright of it being just inches from her face she began to develop an appreciation for this special part of a woman. Getting to know Cricket in the same way had shown her that each woman's sex was beautifully unique, her young friend's puffy outer lips that mostly hid the delicate petals between them contrasting with her sister-in-law's abundant labia blooming from her slit, her arousal making the crinkled folds turn scarlet and purple. The others she had become acquainted with since then, either through stolen glances or open displays, only strengthened her belief in their uniqueness.",
        "Gwen doubted he shared her growing fascination with the male body, however. Muscular where a woman was soft, angular and rough where a woman was smooth and rounded, so different...and that thing between their legs! Long, short, fat, skinny, the ability to change size, shape and color on a moment's notice, had never really given the penis its due. As different as men's bodies looked, Gwen was sure each felt different, too...holding you, on you, in you. \n\nIt was not her husband's tongue that brought her orgasm but his body, strong hips pistoning his length in and out of her, pubic bone against clit. She clung to him as she climaxed, her legs wrapped around his midsection locking him in place. His breath exploded in short gasps as his pounding grew in intensity, and she basked in her post-orgasmic glow as he grunted after one final push and buried himself deeply. Tim gave a little reflexive thrust with each pulse, Gwen imagining his seed filling her in milky spurts. \n\nSpent, Tim lay like that for some time, catching his breath, face buried in his wife's neck. Back in the early days she would have been shooing him off her even as his last dribble left the tip of his cock; now she seemed to tolerate, maybe even enjoy, her body trapped beneath his. He stayed like that, nibbling her neck while she caressed his back and ass until his cock grew soft enough to fall from her. Only then did they separate just long enough for Gwen to hurry to the bathroom and then return to join her husband under the covers. \n\nHer parents had been up for some time the next morning when Alison arrived for a ride with her mother. The young woman asked about their weekend as they sat at the breakfast table and got very generic replies; she in turn was equally bland and nondescript about the weekend at the house with Jason and as it turned out, only one friend. Marcus, a young man Gwen had first met at her daughter's wedding, was one of Jason's friends from school, a large, well-built extremely polite black man who had been on the football team. Unfortunately, his girlfriend had been forced to work the weekend and he had come alone. \n\nGwen waited until Tim had headed out to the shop before getting up to retrieve some things from the laundry. She placed them in front of her daughter and sat back down, watching and suppressing a smirk as Alison eye's widened a bit after identifying the items Gwen had retrieved from the bed. \"Oh, uh, where did you find these?\" \n\n\"I was changing the sheets in our room and found these between the headboard and the mattress.\"\n\n\"They must be Marcus's,\" Alison said while hurriedly stuffing the items into her bag. \"We, uhh, gave him your room and Jason and I slept in mine,\" her daughter continued. \"Sorry\u2014we did change the sheets, though!\" Alison continued to blush while Gwen's mind began to race, and she willed herself to at least remain outwardly calm. It had been someone else going through her nightstand, and the Lady was outraged that someone would trespass so brazenly. The Slut purred over the thought that Jason's friend now knew about her perversions, too, and whether they would be bold enough to discuss it. \n\n\"Before or after those got stuck where they did?\" Her mother asked with a raised eyebrow before her expression softened with a smile. \"It's alright. He probably tossed them on the bed when he was changing and they got stuck there.\" Gwen preferred to believe that's not what happened. What he did with the lubricant now that it wasn't intended for your rear end wasn't there made it very possible his briefs had been stripped off to allow him easy access to what was underneath. Gwen had seen and heard enough to know that lubrication sometimes came in handy when a man wanted to satisfy himself...had Marcus been masturbating in her bed? The idea that her toys had aroused him to the point he needed a release thrilled her. She forced the thought out of her mind and concentrated on the plan for the day. \n\nMother and daughter rode a good part of the morning in comfortable silence, each seemingly lost in their own not-unpleasant thoughts while enjoying the feel of their horses beneath them, mounts and riders reading each other's subtle signals and replying appropriately. The horses tired in the heat before their riders did and were turned around in time to arrive back at the barn in early afternoon. \n\n\"Swim?\" Gwen asked as she put away the last of the tack. \n\nAlison hefted her saddle over a sawhorse before turning back with a smirk. \"Definitely. Is Daddy around?\" \n\n\"I didn't see his truck...I think he's out getting a part for the tractor or something. Why?\"\n\n\"Just wanted to make sure of the dress code...\"\n\nGwen guessed at her concern. \"I thought you liked to skinnydip? He HAS seen you naked before, Alison Marie.\"\n\n\"When I was six!\"\n\n\"Up to you. I'm not wearing one. He's seen me naked before, too.\" The young woman shook her head and smiled at her mother as she strolled out of the barn. What the hell was this side of her the first twenty-odd years of my life?\n\nAlison waited until she was up on the pool deck, out of sight from the yard below, before stripping down and hurrying into the water. Gwen appeared at the gate a few moments later and had apparently not bothered to wait. She carried only a small beach bag filled with towels and drinks, no robe to cover herself on the climb up the hill. She's so confident and graceful, the young woman thought as she looked on, beautiful and I hope Daddy tells her that. I'm glad she at least isn't covering up for the rest of the world any more...I see even the landing strip is gone, completely bare down there, she mused, just like mine. I wonder why she shaved? Can't be the same reason I did. Jason had always insisted on a clean-shaven pussy when he was in movie making mode, loving the way it made the shots of her being penetrated even hotter when he could focus on her lips being split apart at the moment of penetration. \n\n\"So, Cricket's coming over tonight?\" Alison asked after her mother had joined her in the water.\n\n\"After work, yes. I'll probably hold dinner for her.\"\n\n\"Tell her sorry I missed her.\" They lounged for a moment before the young woman continued. \"Has she had any luck in the man department?\" \n\nGwen smiled and shook her head. \"I think she's still trying to gain some confidence. Her ex-husband really made her feel like men don't see anything in her.\"\n\n\"I guess it's possible, but it's silly\u2014she's very pretty and seems like a really nice person...Mom, you think, uhh, maybe she just likes girls instead?\" Alison had never dared broach this subject before; growing up it was just assumed that if boy-girl sex was to be avoided under most circumstances, girl-girl sex was unforgivable.\n\n\"Huh? Oh, no, I'm sure she likes men...\"\n\n\"But, would it be bad if she did like girls? Does it bother you if two women do\u2014that?\"\n\nGwen suppressed a smile. If you only knew...\"No, of course not! If by that, you mean have a relationship that includes sex, then what you do with other people\u2014man or woman\u2014is nobody else's business. If it makes them feel good, and happy, and safe, that's all that matters.\" Gwen was mildly surprised at how adamant she sounded; she was not just trying to be the \"cool mother\", but actually believed what she was saying. I guess having done 'that' changes your views, she mused. \"I just want her to be happy with whoever she's with, just like I would have been happy with whoever you chose, or KD when\u2014if-she does!\" \n\nI'll make sure you remember you said that, the young woman thought, if you ever find out about some of the things your daughters or your sister-in-law have done. She couldn't resist pushing a little farther. \"So, if I had married another woman, you would have been okay with that? Would Daddy have been?\"\n\n\"It would have been a surprise,\" Gwen allowed, \"but at the end of the day we both just want to make sure you're happy. And in a good place.\" She paused, then smiled. \"Of course, you might have killed your grandparents...\"\n\nAlison laughed. \"Yeah, the look on Grandma's face would have been priceless when I introduced her to my fianc\u00e9 Rebeccah.\"\n\n***\n\nThe sight of Tim manning the grill on the deck in nothing but a pair of athletic shorts caught Cricket's attention as she pulled to halt in the yard that evening. Gwen really is a lucky woman, she thought as she waved to him while admiring his bare chest. Please, please let whoever I end up with be at least half as handsome and sweet, she thought, although good in bed would be really nice to have, too. \n\nAs customary, a quick wave in his direction as she headed to the barn would have to suffice until she had let Marvin know she was there. Cricket did give him an enthusiastic hug upon her return to the house, and she found in Gwen in the kitchen making a salad to go with the steaks Tim was tending. Her friend was dressed in athletic shorts as well, her oversized tank top doing little to hide the pert breasts beneath whenever their owner moved. Cricket hurried to her room to change into something more comfortable, t-shirt and shorts with underwear thankfully discarded. The trio sat on the deck enjoying the food, drink and the last sun of the day until the sound of a truck crunching on to the dirt driveway beyond the trees broke the spell. Headlights splashed against the shop and Charlie Mortensen's battered pick up rumbled into view. \n\nTim ambled off the deck to greet his friend while Gwen and Cricket both did quick mental checks to ensure they were dressed. Charlie eased himself from the vehicle, shouting a greeting to his friend coming across the yard then waving to the women just barely visible in the dusk. Gwen waved back and briefly considered walking over to say hello but wondered if her lack of a bra might still be noticeable in the gathering dark and send the wrong message. However, she was not about to go in and put one on, so if he were to come up to the house...\n\nTim reached the truck as his friend was opening the tailgate, a grating screech of metal against metal before a loud bang. \"Hey.\"\n\n\"Hey.\" Charlie reached for the apparent reason of his unannounced visit. \"Been meanin' to bring this back to ya.\" He paused and squinted up at the deck. \"That Alison up with Gwen?\"\n\n\"Nope, one of Gwen's friends. The one who boards her horse here.\" \n\n\"No shit? She's a young'n, right? She hot?\" \n\nTim chose to ignore that she was indeed his daughter's age and focus on the fact that yes, she was hot and occasionally shared his bed. Like tonight, if the other weekends meant anything. Suck on that, my friend! \"She's cute, yeah,\" he allowed.\n\n\"Cute as in fuckable cute, or cute as in 'she's got a nice personality' cute?\" \n\n\"For fuck's sake Charlie, do you ever stop thinkin' with your dick? She's good looking and she's got a good personality. You know girls can be both, right? You'd figure that out if you ever stop trying to make getting' in their pants job number one.\"\n\n\"I think with my dick cuz' it usually has some really good ideas. And yeah, I know girls can be both. I just usually don't look for the personality until after I get a chance to put it in her. She as cute as Gwen?\" He could see Tim didn't have a ready comeback and continued with a laugh. \"Shit man, you know I think your wife's cute\u2014hell, she's hot, and yeah, and now that she's got a personality that includes fuckability...damn man, winner.\" He grinned and lifted his delivery out of the truck bed. \"Hey, if you're gonna just stand around at least open the shop door, will ya?\"\n\nGwen could just make out the two men disappearing into the building. \"So are you staying the night tonight?\" she quietly asked Cricket, a mischievous smile on her face.\n\n\"Is that alright?\" Cricket squeaked, suddenly worried she had made some sort of etiquette faux pas. \n\nThe older woman giggled. \"Of course it is. I was just asking given how quickly you disappeared last Saturday night. I was hoping you'd take us up on our offer to stay with us?\" \n\n\"Oh, that!\" Cricket's cheeks flushed. \"I was, well, supposed to be watching Dart, and, uhh, that woman catching me in the pool like that-with Tim-I, uhh, didn't want to give her the wrong idea, if you know what I mean.\"\n\n\"I got the impression Michelle has seen far more shocking things in that house,\" Gwen replied calmly. \"I got the feeling the things that go on there can get pretty wild.\"\n\nThe young woman's eyes grew wide. \"You did? I did too! Do you remember how I went riding with the exercise riders after you were done posing?\" She paused long enough for Gwen to nod before continuing. \"Some of them knew where you and Tim were staying and kind of let on that it was pretty well known as a party house and that they would be very surprised if it was just you two there. I got the impression that it's set up for certain kinds of wild parties.\" \n\nGwen remembered back to what Tim's fishing guide had alluded to. \"Really? What kind of parties?\"\n\nThey didn't come right out and say it, but it sure sounded like, umm,\" she lowered her voice as if the men in the workshop might hear, \"you know, sex parties. I really don't know what a sex party is like, but I can guess.\" \n\nGwen laughed. \"Well I can tell you there was nothing like that while we there. I mean, you know that\u2014you were there a couple of times.\"\n\nThe young woman lowered her eyes to the glass she was now fiddling with. \"Yeah, well, I have a confession to make. I had another reason for coming over Saturday night. I know I told you it as because I wanted you to know Dart was okay, and I did, but I also kind of wanted to see if there was anything like what the riders were talking about was going on...\"\n\n\"Oh.\" There was a pause. \"And you were worried we might be doing something like that?\"\n\n\"Not worried, no!\" The young woman quickly replied. \"Just curious if you and Tim were maybe with someone else...\" She looked down, still unable to make eye contact with Gwen. \"And if you were, maybe I might get a quick look. I guess I just wanted to see what a sex party looks like,\" she murmured. \"You know me, I like to see you and Tim together like that...I guess I like being a peeping Tom. Pretty perverted, huh?\"\n\nGwen laughed. \"I don't think so, no. I mean, I know men like to see that kind of thing, I think in some ways they just have to,\" Gwen offered, repeating the mantra her mother had taught her so long ago, pleased to hear it sound reasonable rather than the accusatory and dismissive tone Irene Curran always used to pronounce her judgement on the matter. \"So why can't women?\" \n\n\"So you think women have to look, too?\"\n\nGwen thought a moment. \"I'm not sure about 'have to', but some of us like to, we just have more control over it than men. Or maybe we're better at hiding it,\" she added with another smile. \n\n\"Does that mean you like to, you know, look?\"\n\n\"I thought I didn't for a long time, but I have to admit, I'm finding the human body more and more...interesting. So yes, I like to look, too.\" \n\nCricket seemed somewhat relieved by that. \"Just at men, or women, too?\"\n\n\"Both.\" They were quiet a moment. \"So you left all of the sudden like that because there was no party?\" \n\nNo, it wasn't that at all! I just\u2014that woman, Michelle\u2014she saw me naked in the pool, and there was Tim and you, and...then she asked if I was staying and I knew what she was implying and I kind of chickened out.\" \n\n\"So you'd rather watch than do?\" \n\n\"Oh, I like doing, too...\"\n\n\"Would you have stayed if you hadn't gotten scared?\" \n\nThe young woman was silent for a moment, pondering. \"Would you have been alright with her knowing that I was in your bedroom with you\u2014and your husband?\"\n\nGwen chuckled. \"I can't believe I'm saying this, but sure, why not? I know Mrs. Danning expects her employees to be discrete, so I don't think anybody who knows us would find out. Like I said, nothing she saw seemed to bother her in the least. And she saw quite a bit. She never knocked when she came in our bedroom, you know.\"\n\n\"Really? Did she ever catch you two, you know, doing anything?\"\n\n\"Once, and not so much caught as saw since we were in the shower and she brought us drinks without being asked.\"\n\n\"Ohmygod! What did you do?\" \n\n\"Not much we could do...she didn't seem to mind, and I think Tim liked showing off.\"\n\n\"Did you? Like her seeing that, I mean?\" \n\n\"It was exciting, I'll admit that...and now I have a confession to make. It wasn't once, it was twice.\" Gwen told the story of the massage in detail to a still wide-eyed Cricket.\n\n\"Wow! And it didn't bother you that she did that to Tim?\"\n\n\"No, not really. I think I was glad for him because he was obviously enjoying it. And since it didn't seem to upset him in the slightest when she did that for me then fair is fair, I guess. Just like it doesn't bother me when you did that for him.\" \n\n\"It's always amazed me that you let me do that...I'm really glad you do, though,\" she confessed. \n\nThey sat quietly, shadows in the gloom of the deck as the men came out of the shop and Charlie got in his truck. With a honk of the horn and the blare of a muffler in need of replacing he was gone. Gwen rose and retreated to the kitchen as the dim outline of Tim made its way across the yard, returning naked with a beer in her hand as he reached the top stair. \"What did he bring you to fix this time?\" she asked with a wry smile while handing him the can.\n\n\"Just returning a sump pump he borrowed,\" he replied with a smile, glancing at Cricket to confirm she was still clothed. Had Gwen been sitting on the deck naked while Charlie was in the yard. His cock twitched at the thought. \n\n\"Did you test it to see if it still runs?\" \n\n\"Fair question,\" Tim admitted. Charlie had a reputation for using equipment hard...\"Remind me to do that in the morning.\" \n\n\"I'm going up to get in the hot tub for a little bit before bed,\" she announced \"Would anybody like to join me?\" Tim and Cricket were left on the deck, watching her swaying ass descend the stairs before looking at each other as if to see who would strip first. In the end it was Tim, but only after he had reached the pool deck, his shorts and t-shirt only taking a second to remove before he slipped into the water next to his wife. Cricket waited until he was bent over the tub's edge, his bare butt thrust out at her and dangling balls visible between his thighs, before she too slipped out of her clothes and joined them. \n\nThe conversation started out sporadic then ceased altogether, each enjoying the warm water lulling them into that pleasant daze before sleep. The Slut was awake, however, and in a mischievous mood. Gwen's hand crept to her husband's lap, landing lightly on his flaccid cock, then drawing a finger up and down it. The length awakened but Tim's eyes remained closed, confident it was his wife's hands from the direction it had approached, curious as to what she had in mind. She teased, bringing him to full hardness and keeping him there without showing any urgency in taking him further. Her thumb and index finger formed a ring just tight enough to force the head of his shaft through before they settled into the ridge below. She did this time and again, only sliding further down occasionally, always coming back to that ridge beneath the flare of his cockhead and squeezing. \n\nGwen's voice broke his trance. \"Tim, would you mind going down to get us another round of drinks?\" The fingers encircling his cock gently shook it as if to add emphasis to the request.\n\nHis mind whirled, trying to figure out the game she was playing while finding it hard to believe she was capable of playing one. She had obviously wanted him hard; had she done that to make him stall until his hard-on softened so Cricket wouldn't see it, or did she actually want her to see it? He hesitated and the fingers made another long stroke down, then up again as if to point out that they were not going away until he did. ",
        "\"Uhh, sure thing,\" he grumbled with a smile, and the hand retreated. He rose, his erection rising from the water to point above their guest's head. Cricket looked at it intently, studying it, then looked away out of forced modesty when she realized she was doing so. Tim hurried from the tub and down the hill.\n\nThe young woman looked at her host nervously. \"I didn't know hot tubs made them hard...\"\n\n\"They don't. Maybe he was thinking about something else.\"\n\n\"Oh. You mean...yeah, maybe. So you think he wants to...?\"\n\n\"I know I'd like to, if that's alright with you.\"\n\n\"Oh\u2014yeah, sure, of course.\" Cricket paused and lowered her voice. \"Is it alright if I'm, you know, there?\" \n\n\"Of course. You said you like to watch, right? We'll let you know if we need some privacy.\"\n\n\"Oh\u2014good.\" Even in the dim light, her face showed her relief. \"I, uhh noticed you shaved down there,\" she continued, nodding at Gwen's waist hidden under the water. \n\n\"I did.\" At least someone did, Gwen silently corrected. \n\nCricket looked down at the tub's surface, her voice now just a murmur. \"Could you, uhh, maybe shave me tomorrow?\" \n\n\"Trim or shave? I think it's pretty like it is.\" \n\n\"No, all of it,\" she answered decisively. \"I like how yours looks...\"\n\nGwen smiled thoughtfully. \"You know, I think Tim was a little disappointed he didn't get to shave mine. Seemed like something he wanted to try, but I ended up surprising him with the finished product. Would it be alright if he did yours?\"\n\n\"Tim? You wouldn't mind? Has he ever done yours before?\"\n\n\"No, but he knows how to use a razor\u2014I mean, he shaves himself all the time\u2014not down there, I mean, his face, you know what I mean-and I'll supervise. It'll be fine if you're okay with it.\"\n\n\"O-okay then, I guess it would be alright with me if it's alright with him.\"\n\n\"Good!\" Gwen stood, the water cascading down her skin making her glisten in the lights of the pool deck. \"Let's go get to work!\""
    ],
    "authorname": "BusyBadger",
    "tags": [
        "exhibitionist",
        "photos",
        "shaving",
        "voyeurism",
        "wife",
        "husband"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-04-ch-01"
}