{
    "title": "There Must Be A Mistake Ch. 19",
    "pages": [
        "Note: All persons in this novel are fictitious. If you are looking for a great deal of explicit sexual activity, this story is not for you. The scenes that are included will be evocative rather than just for the sake of sex itself. This story is for your reading pleasure. Its length is undetermined at this time, because I do not know where my mind will take me along the way. I hope you will stay with me during this journey until it reaches its inevitable conclusion.\n\n87. Repercussions\n\n\"What the hell happened, Jim? You said these people were professionals, and every one of them got caught. I hope like hell they can't be traced to us, otherwise we'd better pack up and leave now.\"\n\n\"There is no way it can lead back to us William. There are four cutouts and two mailboxes between us. Their payments went through a European bank, and we have no ties to any banking establishment in Europe. As to what went wrong, I have no idea. From the newspaper reports, Zabo and his family were not at home. You would think they would make sure they were in there, before they attacked the place.\"\n\n\"That would seem like the logical thing to do, but these guys turned out to be morons.\"\n\nA member of Pierce's staff walked into the room and waited to be recognized.\n\n\"Yes Jeffrey.\"\n\n\"Sir, Mister Zabo is being interviewed on television.\"\n\n\"Put it on.\"\n\n\"I have been an investor all my life. I rarely interact with people, and do most of my trading by wire. I have no idea who or why anyone would attack my home, because there is little of value in it. We have two safe rooms which my wife and son can get into easily.\n\nAs far as I am concerned, if they get me they can go to hell. My wife has restricted access to my funds, because of this possibility. I will not allow anyone to extort money from me. Let them go out and get a job.\"\n\n\"How long have you been in Temple, Mister Zabo?\"\n\n\"I've been here more than four months, because of an illness to a dear friend, Doctor Even Luck. I am the Chief Administrator of the project to get his spacecraft to the stars, while he undergoes treatment for cancer.\n\nI am happy to announce that the exterior of the spacecraft is completed. However, there is much work still to be done on the interior.\n\nOne evening, within the next year, we will be taking the spaceship out of the hanger for testing of its celestial navigation capability. We will be aligning our guidance systems with the nighttime stars. Everyone who has ever worked on the spacecraft will be here. They deserve a party for the fantastic work they've done, and this will be a party the likes of which they have never seen before.\"\n\n\"As secretive as your program has been, since the beginning, is the press going to be invited?\"\n\n\"Could we keep your helicopters away? I don't think so. In an abundance of caution we are going to invite the press to the unveiling of our spacecraft.\"\n\n\"Have you given it a name?\"\n\n\"Yes, we have named it in honor of the leader of this project, Doctor Even Luck. We have named it, \"The Best Luck.\"\n\n***********\n\n\"Turn that damn thing off. I've seen enough of that gloating turkey. Find out everything about him and his connection to that space company, especially if he's financially involved in it. If he is, I want to blow to fucker up, and hit him where it hurts the most: in his wallet. I want to know everything about that place, and I want to know about it yesterday. Do you hear me, Jim? I don't care what it costs; I want that sucker to hurt.\"\n\n\"Isn't this getting a little out of hand William? He didn't do anything wrong. He was on your side. He wanted you to be President. You screwed up not him.\"\n\n\"Do you want me to tell everyone about the little girls you have downstairs, in your soundproof dungeon Jim? You use those girls as your playthings. When they begin to grow breasts, or pubic hair; or they're not fun for you anymore, you ship them off to the Middle East or Japan and get paid handsomely by their new perverts.\n\nIf you are in a particularly foul mood, or if one of those little girls becomes disobedient, you kill her with your bare hands, in front of the others, to keep the rest of your harem in line. So don't tell me who screwed up. Do what I tell you to do, and our arrangement will continue to flourish.\"\n\n\"You didn't have to threaten me William. I always do as you ask. It was just a word of caution, because sometimes your heart overrules your head. It is your head that made our arrangement so profitable. It would be a shame to have it go down in flames now. I will make all the arrangements, through our back channels immediately.\"\n\n\"That's the spirit Jim. Make sure the guys that go there don't get caught.\"\n\n\"I wonder if they've been inspected by OSHA lately. It would be a great way to gain access to the entire facility.\"\n\n\"Now you're thinking with a clear head my friend.\"\n\n**************\n\n\"General, we have an eight member team from OSHA here to inspect the facility.\"\n\n\"Keep them there; I will join them in 10 minutes with their escorts.\"\n\n\"May I offer you gentlemen some refreshments? General Morgan and your escorts will be here in 10 minutes.\"\n\n\"I'd like some cold water please. This dust will get to your throat quickly.\"\n\n\"You should work here for a few years. You will wonder why your voice works at all.\"\n\n***************\n\nDan Morgan arrived at the main gate of the facility, and walked inside the reception center.\n\nWith a big smile on his face he said, \"Good Morning gentlemen, who's in charge of this intrepid group?\"\n\n\"I am general.\"\n\nWith a movement of his arm that was so swift and accurate the man did not see it coming; the general hit him in the face, and knocked him out.\n\nThe agents standing behind him raised their weapons, pointing them at the other members of the group. They were too stunned to move.\n\n\"Wake the bastard up.\"\n\nUsing the remains of his cold water it was poured on the man's head.\n\nAs he regained consciousness his friends helped him up.\n\nThe man said, \"How dare you attack a government employee?\"\n\n\"You are government employee like I am a horse's ass. OSHA was here ten weeks ago and gave us fifteen violations, with a six-month time period to correct them. We've been expecting you idiots since the attack on William's home. You will never get close to him. He's not in this building; he's in our main building. He is so deep in the center of it you would have to kill everyone to get to him. We are not rent-a-cops'. We are fully trained tactical agents. If you come after William, you better come ready for war, because that's what you're going to get. Now get the fuck out of here before I get angry.\"\n\nAs they were walking away Dan Morgan yelled, \"You, with the grenade in your pocket, you would have died first.\"\n\nReflexively, the man reached for the grenade in his pocket. He looked back and saw eight semiautomatic rifles pointed at him. He moved his hand away from it, very carefully.\n\nThe group got into their cars, and drove away.\n\n\"How did you know general, I didn't notice it?\"\n\n\"I knew damn well he didn't have a hard on, so I took a guess.\"\n\n**********************\n\n\"Come on Even, it's time to wake up. Please open your eyes and look at me. You are scaring me.\"\n\nI could hear Jennifer's voice, but everything was still black. I had no dimensional reference. I could not feel anything, not even the beating of my heart. She called to me again, but I couldn't find a way to get to her. She seemed to be coming from everywhere, and nowhere at the same time. I didn't know where to go, or if I could get to her.\n\nI heard her, but I saw, and felt nothing. I remembered what Newton told me about time and space. I tried to think of myself as a cylinder. I was stuck in the middle of time because nothing was moving. Logically I knew I had to be taking up space, even if I was reduced to the size of an atom.\n\nI remembered the quotation, \"I think, therefore I am.\"\n\nI was thinking, and was able to process information. If I was stranded in time, I needed a shortcut to get out of the space I was taking up. I had to make a wormhole. I needed something to cut through the fabric of space I was taking up. This blackness was keeping me from everyone I love.\n\nMy mind was functioning. I remembered Doctor Bradley asking me if I was ready for the operation. I remembered Jennifer's lips touching mine, and the burning sensation in my left hand.\n\nPain, I was supposed to be in pain, but I was free of all sensations; the only part of me that was working was my brain. I needed Newton's pencil, or any other sharp instrument to make a hole for me to climb through to get out of this blackness.\n\nDoctor Bradley took a knife and cut my body open from my sternum to my pubic bone. I concentrated every bit of my mental energy on the knife as it cut me open. I found it speared into the cancerous tumor that was intent on killing me.\n\nIt wasn't holding it, I had no hands. I was just charged particle of electrical energy, caught in the vast black void of space, and time. You can't push against something you can't see, touch, or feel with a knife that is attached to the thing that was trying to kill you, but in my mind's eye I tried to move the knife, not knowing if I was doing right or wrong. I could have been pushing the knife through the vacuum of space, or a pool of water.\n\nI said a prayer to the God I discovered in the forests of Alaska. I asked Him if I could see my family one more time before I died. I didn't care if I died. I just wanted the opportunity to say thank you to them for being so wonderful to me, and goodbye, before he took me to His arms.\n\nI lived a life very few people get a chance to live, and I was very grateful for it. I lived a quiet life. I never harmed anyone. I gave money to charities, although maybe not enough. Many of my inventions made this world a better place to live in. I had found my faith later in life than I should have, but I was happy with it now. Most important to me was I found Jennifer, the woman of my dreams, and the love of my life. We were raising a wonderful family together. What else could any man ask for? Well, I guess I just did. I wanted to say goodbye to her and to my family, before I died.\n\nI saw a pinhole shaft of light. My mind pressed forward towards that light. I tried focusing on the knife, with all the remaining conscious energy I had. I was weakening. I wasn't sure how I knew it, I could just sense it. Suddenly, I lost sight of the tip of the knife. My mind went blank, I thought all was lost.\n\nLight Burst Through: Somehow the knife made a larger hole through the fabric of time that I could fit through. I was taken on a ride through a cosmic wormhole of space as my body began to coalesce.\n\nThey both caught up with me, and stopped at my hospital bed. I hated both of them equally. As my eyes opened I was racked with a pain I cannot begin to explain with mere words. I wanted to scream out in agony, but I couldn't. Something was blocking my airway. I began to cry.\n\nJennifer's reaction was the opposite of mine. Hers was Sheer Joy. She was Exuberant.\n\n\"Oh Even, thank goodness your back. I was so worried. The doctors said you should have been up hours ago. They were not going to use any artificial means to wake you up; they wanted you to do it on your own. I know you can't talk. You have a tube down your throat to help you breathe. I love you Even. Blink your eyes if you can hear me.\"\n\nI blinked my eyes, as more tears flowed.\n\nShe kissed my eyes, as she kissed my tears away. She cried happy tears.\n\n\"Even blink twice for no and three times for yes.\"\n\n\"Do you need pain medication?\"\n\nI blinked three times.\n\n\"Blink once if the pain is severe, twice if it is very severe, three times if it is unbearable.\"\n\nI blinked three times.\n\n\"I'm going to get the nurse, I'll be right back.\"\n\nI started blinking twice, repeatedly, not wanting her to leave me. I needed her beside me. I needed to reconnect with life, after the dark of nothingness. I know I preferred the church's version of hell, with its' fire and brimstone, then what I had just been through. Nothing is terrifying. Nothing would drive anyone insane. Nothing should be reserved for the likes of the mass murderers: Lenin, Stalin, Hitler, Perone, Amin, Stakic, and Milosevic. They deserve each other, and NOTHINGNESS!\n\nI felt Jennifer's hand on my arm, as I reopened my eyes. She smiled down at me. I began blinking my eyes twice, over, and over, and over.\n\n\"What is it even? What are you trying to tell me?\"\n\nI couldn't move. All I could do was blink twice to beg her not to leave me again.\n\nSomehow she got my message.\n\n\"Even are you upset because I went to get the nurse?\"\n\nI blinked three times. I blinked three times. I blinked three times.\n\n\"Okay darling, I will never leave you again. I will be at your side always.\"\n\nI blinked three times, I blinked three times, and tears roll from my eyes.\n\nJen kissed the tears away, as she kissed my lips. The damn tube in my throat was annoying the hell out of me, but it was keeping me alive. I guess there was a decent pay off in the end.\n\nDoctor Mozia walked into the room, with an intern at his arm, and a nurse standing beside him.\n\n\"Welcome back Doctor Luck. I'll talk, you listen. Your surgery went very well, and was less extensive than we thought it would be. Doctor Bradley was able to resect your pancreas, with a lot less damage than he previously thought. Your lymph nodes were clear, which is a wonderful sign. Everything else went as you were told, with one exception. You are also missing your appendix. Doctor Bradley said he was in the area, and instead of leaving it to chance for some future surgery, he removed it.\n\nNow it is up to your body, and its ability to heal itself. I know you can't feel it, but there is a tube in your navel that is attached to your intestine. For the next three weeks that's how you're going to be eating, while your stomach and the area where your duodenum was heals. When that period is over, we will do microsurgery to remove the tube from your intestine, and suture it closed. Then we will remove the tube from your stomach and suture your navel closed.\n\nAs you can see Doctor Luck, from this point forward it is all up to TIME: (WHY DID HE HAVE TO USE THAT DAMN WORD) Healing time, recovery time, and patience. If you are thinking of rushing back to work, you should go to a local gun shop; buy a secondhand weapon, and one bullet. I don't think I have to say anything more about that.\n\nWithin a week we will have the results of all the tests of the organs we removed. If they come back benign, you are a very lucky man. You will come back here in nine months for a checkup. If not, you'll be back here in six months to begin a course of radiation and chemotherapy.\n\nThe nurse is going to give you medication that is going to put you back to sleep for four hours, and take your pain away. We are going to manage your pain medication very carefully. We don't want you to become addicted to it. Go to sleep Doctor Luck, your healing period has just begun. I am in charge of you now, and I don't like failing.\"\n\nJennifer did not let go of my arm, while the doctor talked to me. She did not move from my side, while the nurse injected the medication into my IV line. She kissed my eyes again as they began to close.\n\n\"I will be here when you wake up Even; I am not letting you go.\"\n\nI fell asleep, but I didn't go to that 'Nothing' place again. I was able to see Jennifer smiling at me, and worrying about me. I didn't like that... I had to get better for her. She didn't deserve what I was putting her through. I had to get better. It was my mantra. I had to do it, for my wife, the love of my life.\n\n88. Bumps\n\nGray was lying in bed next to Delicious, early Sunday morning, rubbing his hand over her moist, velvet skin, when he stopped on her abdomen.\n\n\"What the hell is this? You have a bump in your belly.\"\n\n\"Thank God you went to Penn; otherwise you may never have found out that I had a bump in my belly. Do you want to guess what it is?\"\n\n\"How many guesses do I get?\"\n\n\"It's a little after 1AM; Newt shouldn't get up until 7 or 8 in the morning; that gives you six or seven hours' worth of guesses. If you're right you take care of Newt all day. If you are wrong, you take care of Newt all day.\"\n\n\"Now there is an offer I can't refuse. First, I have to inspect the bump.\"\n\nGray turned on his bedside lamp and kissed his wife.\n\n\"Gray the bump is lower.\"\n\n\"I'll get there. I'm just taking the scenic route.\"\n\nHe kissed her jaw, and up to her ear, licking and biting as he went along.\n\n\"Gray, we just finished doing that. Look for the bump.\"\n\n\"You said I had until 7 o'clock, don't rush me woman.\"\n\nHe kissed her tenderly, along the back of her neck, and the front for chest. After putting the nipple of her breasts between his teeth, he began feasting on the succulent flesh around it. He knew she was lost, when she started pulling his hair, and her legs wrapped around his ass.\n\n\"You're not playing fair Gray. You were just supposed to inspect my belly.\"\n\n\"I'm getting there, look how close I'm getting.\"\n\nAs he switched to her left breast, she moaned and bit her lip.\n\nWhen Gray finished torturing her breasts, he proceeded down her left flank and pushed her legs apart. He suckled on the tender white flesh on the inside of her left thigh, moving towards her center. As his lips reached the junction of her thigh and her body, Delicious raised her hips anticipating his tongue entering her.\n\nIt didn't. His tongue moved over her pubic ridge, and onto her right thigh. He licked and kissed the flesh as he did on the left side, as he continued torturing her.\n\nShe pulled his hair. \"Gray you missed the bump.\"\n\n\"I guess I'll have to make a U-turn.\"\n\nAs he moved back towards her middle, Delicious was flowing like a mountain stream. He knew he was going to get hell for what he had planned, but it would be worth it, just to hear her laugh afterwards.\n\nHis tongue touched her labia and her hips reached for the sky. He placed his hands underneath her butt to keep her in that position. He feasted on her outer lips, until he recognized the signs of her impending orgasm.\n\nHe stopped, placed his mouth at the opening to her vagina, and said, \"Hello in there!\"\n\nMad; mad was not the word for her. She was furious. She closed her legs around his neck and started pounding his head with her fists.\n\nAll Gray could do was laugh.\n\n\"You bastard, what are you laughing about?\"\n\n\"You are seventeen years old again, and I never want you to change. You did exactly what I knew you would do, and I love you.\"\n\n\"Grayson that was mean.\"\n\nHe pulled her down to him and kissed her. \"Delicious, it was also funny as hell.\"\n\nShe hit him with a pillow, as she joined his laughter.\n\nHe pushed her down on the bed, and kissed her baby bump.\n\n\"I see you finally found it.\"\n\n\"It's not an it, according to your mother. It's Teddy.\"\n\n\"I can't figure out what her full name would be. I would never name a child Theodora.\"\n\n\"Just check all the baby names that join with Teddy. If nothing comes close, we will name her Teddy with and 'i' at the end.\"\n\n\"Okay, do you think you can give me my orgasm now? You stole the last one from me by talking to my baby.\"\n\n\"Teddy is our baby, courtesy of your mother, and yes, out of the goodness of my heart, I will give you your orgasm.\"\n\n\"Doctor Thyme, my mother said that Newton would have four brothers and two sisters. She didn't say who the father would be. Be nice, or it won't be you.\"\n\n\"How much would you like to bet?\"\n\n\"You were taking an awful lot for granted.\"\n\n\"No I'm not; I just know how much I love you. I know you love me the same way. I'm not going anywhere, are you?\"",
        "\"Yes I am, many light years away.\"\n\n\"I guess Newton and Teddy are staying with me.\"\n\n\"Yes they are, in the stasis units next to mine.\"\n\nGray kissed her, and his hand traveled to her breast.\n\n\"Sometimes Doctor Thyme, I don't like you.\"\n\n\"Sometimes Mrs. Thyme, I just want to bite that lip.\"\n\n\"Which one, I have four of them.\"\n\n\"Potty mouth.\"\n\n\"It's the truth; I'm just waiting for an answer.\"\n\n\"I have a terrible memory. I always have to go back to the beginning and start all over again.\"\n\n\"If you must, you must. I have everyplace you touched memorized, so don't miss anything, or you will have to start all over again for third time, or a fourth, or a fifth, or more. This could take you all night.\"\n\n\"I think I could be up for it.\"\n\n\"If you're not, I could give you a hand, or a mouth to help you rise to the occasion.\"\n\n\"That is a very kind offer Madam; I may take you up on it.\"\n\n\"Do you think you could start now, I'm getting cold?\"\n\nGray kissed her, until she relaxed; then dove between her thighs and nibbled on her clit.\n\n\"That wasn't the beginning you moron.\"\n\nHe didn't acknowledge her. He continued torturing her pussy, as she pounded him with a pillow. It didn't take long for her to acquiesce to his tongue-lashing.\n\n\"Oh fuck it.\" She lay back and lost herself to the feelings consuming her traitorous body.\n\n******************\n\nThey both watch Newton Sunday, because neither had the power to do it on their own. Every time they looked at one another they smiled. If they passed close enough to one another, they would kiss, or simply touch.\n\nNewton was not blind to what was going on around him.\n\n\"Why won't grandma tell me why you and dad are so happy today mom?\"\n\n\"Maybe you're supposed to ask me or dad that question.\"\n\n\"Mom, why are you and dad so happy today?\"\n\n\"Your father and I had a very intimate night last night. We talked and we had a lot of fun together. We even talked about your sister; and where her name may have come from. It gave us a very good feeling about each other, and it brought us closer together. Is that what you wanted to know?\"\n\n\"Does that mean you had sex last night?\"\n\n\"Yes it does; that's what I meant when I said your father and I were intimate last night.\"\n\n\"Why didn't you just say you had sex?\"\n\n\"There are nice ways of saying things, and there are rough ways of saying things. I am your mother, and I want to say things to you the nice ways.\"\n\n\"Okay, I understand now; thank you mom.\"\n\n**************\n\n\"I will never get that move right, Monty.\"\n\n\"If you don't, you will be picking yourself up off the floor every time you make that mistake. It's all in your balance. If you don't keep your right foot balanced on the floor, you're going down, and come up with more bumps on your body than you can count.\"\n\n\"I watch that move on tape. I visualize it in my mind, and I practice it. Every time I come up against a partner, the damn foot moves, and I don't understand why.\"\n\n\"Gordon, you are anticipating the move. Instead of letting the aggressor come at you and making contact. You are picking the foot up off the floor, and putting yourself in a weaker position. Once your opponent hits you, you are allowing yourself to be turned. Once that happens, your opponent is in the stronger position, and you are going down.\"\n\n\"You make it sound so easy. Can I try it again please?\"\n\n\"Janet, Gordon, fight!\"\n\n\"God dammit I did it again.\"\n\n\"Watch your mouth Gordon.\"\n\n\"Yes ma'am.\"\n\n\"Again please\n\n\"Janet, Gordon, fight!\"\n\n\"That's better, you didn't take her down, but you didn't go down either.\n\n\"Can you nail my right foot to the floor please? This is getting ridiculous. I can feel it moving before I ask it to move.\"\n\n\"You're not supposed to ask it to move Gordon. It's supposed to come naturally. Do you have to think about one and one equaling two or do you just know it?\"\n\n\"I know it.\"\n\n\"It's the same thing with this movement. Once you realize you know it, it becomes second nature to you, and you don't have to think about it. Janet again.\"\n\n\"I'm going to teach you a new hold this time Gordon. I'm not putting you on your ass; I'm putting you on your head.\"\n\n\"At least I'll have a bump on a different area of my body.\"\n\n\"Janet, Gordon, fight.\"\n\n\"Yes Gordon yes that was perfect. What did you do differently that time?\"\n\n\"I didn't want Janet to scramble my brains, so I must've reacted faster.\"\n\n\"You reacted, you didn't act. The movement is meant for a reaction to her action. You used her energy against her, and you put her ass on the ground.\"\n\n\"I'm sorry Janet; I didn't mean to hurt you.\"\n\n\"Hurt me, my ass. It was the most fun I had all day. It gets boring winning all the time. You're not going to win every time, but you are going to continue learning. Shall we do it again?\"\n\n\"Are you going to hurt me this time?\"\n\n\"Abs-a-fucking-lutely.\"\n\n\"That's what I thought.\"\n\n\"Janet, Gordon, fight.\"\n\n\"Don't let her go Gordon, get her down. Get her down; you are in the stronger position.\"\n\n\"OOOWWWWWWWWW! She bit me.\"\n\n\"You are also on the ground. She won. You lost.\"\n\n\"She didn't fight fair.\"\n\n\"When you are fighting for your life, there is no such thing as fair. What would've happened if she kicked you in the balls?\"\n\n\"I would be seeing stars, instead of visiting them.\"\n\n\"You can't give anyone a break. You have to go for the kill. You cannot allow them any advantage. Take the opponent down as soon as you can when you are in the superior position. They will take whatever weakness they see and try to reverse your power position.\"\n\n\"You cheated Janet.\"\n\n\"Pussy.\"\n\n\"I'm going to stuff your face into the mat, and sit on it.\"\n\n\"Dream on little girl, dream on. I'm going to bite your nose.\"\n\n\"Janet, Gordon, fight.\n\n\"Don't let her take you down Gordon, don't let her do it. There you go, twist her, take her down now. Force her head down. Kick her leg out. Good, twist her arm up, you've got her. Force her head down, down, perfect. Sit on her head like you promised.\"\n\n\"Get off me Gordon, you smell like shit.\"\n\n\"Let me help you up Janet, it's the polite thing to do for little girls.\"\n\n\"Don't start patting yourself on the back Gordon. Two wins out of seventeen attempts does not make you immortal. Congratulations on this last attempt; you put up a good fight.\"\n\n\"Thanks Janet.\"\n\nMonty asked, \"What did you do wrong Gordon?\"\n\n\"I moved too soon again. I'm sorry Monty. I just need more practice time.\"\n\n\"Gordon things are going to happen around here in the not-too-distant future. You may need to defend yourself, and your family. You have to take these lessons to heart. These are no longer games; this is preparation for the real thing. This is preparation for war. The faster you learn the better you can defend yourself and those you love.\n\nWhen your dad is able to come back to work, he is not going to be half the man he was before. It is going to take a long time for him to regain his strength. You may have to defend him against an unknown enemy. You have got to be prepared to help him. Learn faster. Try harder.\"\n\n\"I will Monty, I promise.\"\n\n\"Good, get into the ice bath.\"\n\n\"Monty...\"\n\n\"Five, four, three,\n\nSPLASH\n\n\"Shit, it's cold.\n\n\"It's not cold Gordon, say it.\"\n\n\"You told me never to lie.\"\n\n\"It's not cold Gordon, is it?\"\n\n\"No Monty it's quite refreshing.\"\n\n\"Excellent Gordon, your attitude is improving. Next time watch your language.\"\n\n\"Yes ma'am.\"\n\n\"Fifteen minutes Gordon, not one minute less.\"\n\n\"Yes ma'am. Are we going to run to work in the morning?\"\n\n\"Are you up to it?\"\n\n\"I believe I'm ready for it.\"\n\n\"It's 10 \u00bd miles Gordon, and then you want to put in a full day's work. Are you sure about that?\"\n\n\"Yes Monty, I think I'm ready.\"\n\n\"Good boy, I think you are ready too. We will leave at 5:50 AM, so you can shower and have some breakfast, before you begin working.\"\n\n\"I'll be the one running with his eyes closed.\"\n\n\"I'll be the one behind you with the Taser. Ten six minute miles, that should be interesting. All you have to do is picture a pretty girl's ass in a bikini, running ahead of you, and you will be fine.\"\n\n\"Am I allowed to see one of those in real life first?\"\n\n\"No one told you to be brilliant. If you were a normal child, you would have seen plenty of them by now. It's a trade-off; which would you prefer, a pretty girl or a spaceship?\"\n\n\"I'd like a spaceship during the day, and a pretty girl to hold me close at night. Is that asking too much?\"\n\n\"You're fifteen years old, it will happen soon enough.\"\n\n*************\n\n89. Again\n\n\"What the hell happened this time Jim?\"\n\n\"Those assholes blew their cool. I didn't take any chances William. Those men work for OSHA, but they weren't working for them at that time. They all took time off so they could work for me. They've done it before.\n\nThis General Morgan scared the piss out of them, when he knocked Freddy on his ass. Instead of showing Morgan their identification badges to prove that they worked for the government, they backed out of there like wolves with their tails between their legs.\n\nIt wouldn't matter if OSHA had been there ten weeks ago or ten days ago. OSHA can show up anywhere, at any time, to do a surprise inspection. They should have had the run of the place, and they walked away with nothing.\"\n\n\"They didn't learn anything at all?\"\n\n\"The only thing Freddy said was Zabo is deep inside the headquarters building, and if we were going to go after him, we had better be prepared for war, because that is what we are going to get.\"\n\n\"How many drones do you have Jim?\"\n\n\"One and it's barely flyable.\"\n\n\"One wouldn't do much damage anyhow. Let's leave that as a last resort. Do they have to pull licenses for those agents?\"\n\n\"I'm not sure, but I can know within thirty minutes.\"\n\n\"Find out, and if they need licenses find out how many agents they have at that facility. If we're going to buy an army, I'm going to buy an overwhelming army, like we did in Desert Storm. We are going to run over that place and smash it.\"\n\n\"Whatever you say William; I'll have that information for you shortly.\"\n\n***************\n\n\"They show 290 licenses for agents at the facility, but the clerk said it doesn't mean all of them have been issued to employees.\"\n\n\"Alright, this is what I want you to do Jim. Rent an aircraft and do aerial surveillance of that place for seven days. Get good cameras so they can use them at a relatively high altitude so the people on the ground don't get suspicious. I want motion pictures, and stills.\"\n\n\"I will use men from my company to do it. If they screw this up, I'll kill them myself.\"\n\n************\n\n\"Margaret, I'm going to have to hire a translator for you. I'm getting complaints from all over the building.\"\n\n\"Complaints from whom Dan, and what are they complaining about?\"\n\n\"Should I put the 'what' first Margaret? If they're asking for a translator, it must be because of your speech impediment. I'm the only one in the building that understands you, and that is a minor miracle. Either you are going to have to learn how to speak English, or you're going to have to slow down so normal people can understand you.\"\n\n\"Can't you just hear it now general? I will answer the phone:\n\nGeneral Morgan's office, this is Margaret his secretary speaking. How may I help you? One moment please.\n\nGeneral Morgan's office, this is Margaret's translator speaking. How may I help you? One moment please.\n\nThis is Margaret advising you that the general will not be in his office today until after 1 PM. One moment please.\n\nThis is Margaret's translator advising you that Margaret said the general would not be in his office today until after 1 PM. One moment please.\n\n\"This is Margaret again; I hope this delay in communicating with you is not frustrating you in the slightest. I know it's bugging the hell out of me. One moment while I transfer you to my translator\"\n\n\"This is Margaret's translator...\"\n\n\"Who's complaining Dan?\"\n\n\"No one, I just love the color your face becomes when I get you riled up.\"\n\n\"How would you like your coffee in the morning general; with, or without?\"\n\n\"You haven't noticed I'm bringing in McDonald's coffee in the morning?\"\n\n\"You haven't noticed I've been bringing in these little clear plastic cups in the morning?\"\n\n\"Margaret you wouldn't.\"\n\n\"Can I do anything for you general; I normally do special things for you, especially in the morning?\"\n\n\"Margaret you're despicable.\"\n\n\"I am, aren't I? I am also irreplaceable.\"\n\n\"Let me know when Lucius gets here please.\"\n\n\"Is that the same Lucius as...?\"\n\n\"Yes it's the same Lucius as last time.\"\n\n\"Are you two still fighting?\"\n\n\"Let's just say there is a truce in place.\"\n\n\"Does that mean bare knuckles or boxing gloves?\"\n\n\"It means we're not fighting. We are on the same side.\"\n\n\"Should I put you two on a timer to see how long it's going to last?\"\n\n\"Margaret, if I had left him alone that fucking war would have been over three years sooner than it was. Unfortunately my conscience would never have let me live with it.\"\n\n\"Thank you for that Dan, I appreciate the sentiment.\"\n\n\"God damn you Lucius, why do you always walk in at the perfect moment.\"\n\n\"Is he still bothering you about that wonderful accent of yours, Margaret?\"'\n\n\"No Colonel, he just does it in the morning, afternoon, and in the evening. He's quite affable during the rest of my day.\"\n\n\"He won't let you work for anybody else I see.\"\n\n\"He wouldn't know where the lighter is for his cigars Colonel.\"\n\n\"Those things will kill him Margaret. It's good to see you again.\n\n\"You too Lucius.\"\n\n\"Hello General.\"\n\n\"Colonel, what do you have for me?\"\n\n\"A proposed battle plan sir.\"\n\n\"Okay, lay it out, and talk me through it.\"\n\n**********************\n\n\"Beginning with their hierarchy, we know they act irrationally. There is a probability of seventy percent the former vice president will order a direct assault on his main target; which we believe will be the Spacecraft. There is a forty percent probability he will go after Mister Zabo as his first target. The other options are across-the-board but all of them are in single digits. He could try to take out our scientists and the people working on the interior of spacecraft. It would delay the project several years, but those range at nine percent or below.\n\nWe believe he is going to want to crush your effort into the sand you are built on. We can expect to face overwhelming odds; two or three to one. Some of his forces will be mechanized, but most will be ground pounders. Don't be surprised if William Silver is with them. He may want to shoot Mister Zabo himself.\n\nThey will come from three different quadrants. Two will be diversionary; but the main one will be a frontal assault from the West. You have the Army base to your east. It is possible we may be able to get help from them if they think they are under attack when they hear automatic weapons going off. We can help that along by setting up loudspeakers, pointing them at the base, and waking up the base commander.\n\nYou can expect flanking attacks from 70 to 100 men, who will try to pin you down using machine guns and automatic weapons. Their plan will include using our guests to keep you from getting an organized defense set up quickly.\n\nDuring this time, their frontal assault from the west will move in, without firing a shot, until they are seen. All hell will break loose as soon as they know they been spotted. Personally, I believe their main objective will be to destroy the Spacecraft. If they can get it to fall, every man within its footprint will be dead or disabled.\n\nThese are our recommendations:\n\n<ol> <li> 800 meters from the front of the hanger build a series of interlocking berms. We can cut the side facing the hanger to look like stadium seating and not as a defense mechanism. We can make them look like there are ways through them, but they will all be dead ends. The minimum height of ten feet high is necessary, fifteen feet is better, twenty would be outstanding.\n\n</li>\n\n<li> The opposition force will be coming in with rocket propelled grenades, mortars, and other movable, man-carrying weapons. My biggest fear is the mortars, because they can be fired from miles away.\n\n</li>\n\n<li> We are useless fighting from the hanger. We have to be out among them to keep them away from it. We can leave a small security force there, if you wish, but the best way to kill them, is to be out there among them, and behind them.\n\n</li> </ol>\n\nWhen they run into the berms they are going to be confused as to why they can't get through them or over them. We are going to need some engineering help with that, because we don't want them to collapse if we get very high winds, or rain. It all has to look like sand otherwise they'll know something is up before it starts. When they reach the berms and can't get through them, they will all bunch up against one another. That is when we hit them. We hit them from the back. We hit them with everything we have, and we hit them moving forward, always moving forward in pincer encirclement.\n\nIt will be like shooting geese. You never shoot the leader of the flight. You always shoot the goose in the back of the formation. Then you work your way forward. If you shoot the leader of the flight, all the other birds will break formation, and scatter to the four winds. If you hit the rear of the formation all anyone will believe is they are hearing gunfire from in front, and they will keep moving forward. The closer we get them to the berms, the easier they will be to kill.\n\nAs far as the men on our flanks are concerned, I would like to dig tunnels that come out twenty meters behind the areas we believe they will set up and twenty meters to the left of the group on the right flank and twenty meters to the right of the group on the left flank. Ten men in each group should be more than sufficient.\"\n\n\"You think ten men can take out 70 to 100 men Lucius?\"\n\n\"Yes sir. They are not going to be using their automatic weapons sir. They are going to be throwing grenades. The men of the flanking forces are going to be dug in to their defensive positions. They are all going to be stationary targets, facing the hanger. They are going to be night blinded by the lights. Our men will be dressed in black and wearing dark glasses. They will have their automatic weapons with them, but their main weapon will be the lanyards of grenades they will be carrying. I believe thirty grenades each will be more than enough.\n\nThey will also be wearing body armor. It will slow them down a bit, but it will also keep them alive if anyone from the opposition force turns in time to get a shot off.\n\nAfter one pass along their entire rear, the opposition force will not know which way to position themselves. If they turn back towards the hanger we throw more grenades at them from a protected area. One man in our group will be throwing smoke grenades to mark the opforce's position. The security force guarding the hanger will know exactly where they are. If they are still under fire the men in the hanger do nothing.\n\nThe men with the grenades return to their starting point and begin another run along the rear of the opposition force. After their second run, there should be so few members of the opposition force remaining, they should want to surrender. If they don't, and turn to fight our men who were throwing the grenades, our men take cover and the security force, in the hanger, is free to open fire with their fifty caliber machine guns.\"\n\n\"Do you know how many left handed agents you have general?\"\n\n\"This ought to be good Lucius. Why do you need to know how many left handed agents I have?\"\n\n\"The men we send through the tunnel to the right flank will be throwing grenades across their body with their right hands. It's a natural throwing motion. If you have right-handed people doing the same thing on the left flank, they are going to be throwing like girls; high over their right shoulder, using only their wrist. If you have left-handers throwing those grenades, they will be throwing across their body in a normal throwing motion, just as their right-handed agents did on the right flank.\"",
        "\"Lucius no wonder the soldiers in your unit, and the unit itself was the most highly decorated in the theater. You thought of everything. They followed your lead. I would never have thought of that.\"\n\n\"Margaret, send out a notice to all agents asking them if they are left-handed. Put urgent on it.\"\n\n\"I'm sorry general would you speak to my translator first. I don't understand normal English.\"\n\n\"General when are you two getting married?\"\n\n\"I asked him the same thing several months ago Lucius. He still hasn't answered me.\"\n\n\"For a three time loser Lucius, you seem to be willing to put another man in jeopardy.\"\n\n\"If I have to suffer sir, why shouldn't someone else.\"\n\n\"Return to the map Lucius, tell me more.\"\n\n<ol start=\"4\"> <li> \"We have to beautify these areas, with mature shrubs and bushes. Every sixth or seventh one, we can put in a microphone in, run the wires underground, and into our communication center in the hanger. They may tell us what they're planning to do, and we will meet them there before they can do any harm.\n\n</li> </ol>\n\nAs we see the opposition force move into position on our flanks, we will ask everyone to go inside the hanger and escort the 'Best Luck' out of the hanger, and into the star filled night. As it comes out, we keep the guests in a safe area we will build for them. Once the decoy is outside, we can close the hanger doors for additional safety. We can also call the local police for help, as well as the Army next-door. When they hear the automatic weapons going off, they're going to wonder if they are under attack anyway. We tell them what to expect so they come prepared for battle.\"\n\n\"The vice president has to be seething by now. He didn't get William at home, plus his entire team got caught. Then he didn't get a chance at the Spacecraft, because you punched the guy in the nose. He's probably doing something now to keep himself busy, while trying to recruit his army. We already have ours, and I'm trying to get mine back together. I only have five committed to date. I'm hoping to have more check-in within a month or so, and we have time on our side.\n\nAs far as the upgrades are concerned, this has to start now; otherwise it will be obvious to them that we are preparing for them and not for the big show with Spacecraft coming out for a celestial navigation check.\n\nI would suggest we load up on some heavy weapons to defend the hanger also. Fifty caliber machine guns, SAW's (squad assault weapons), grenade launchers, and rocket-propelled grenades would be useful. That's all I have for you so far sir.\"\n\n\"That's all Lucius? This is two months or three months' work by a team of men. You did it in ten days?\"\n\n\"Sergeant Zachary helped me sir.\"\n\n\"You two have not cut the umbilical yet?\"\n\n\"I tried to get rid of him, when we got out of the business. He wouldn't let go of me. Now I keep him around as a shooting partner. It's easy money.\"\n\n\"Okay Lucius, I like the plan. Let's walk the grounds and tell me what you see.\"\n\n***************\n\nInstead of taking a security team with them, they walked alone. They carried their sidearms, just in case, but doubted anyone would try anything on the property, in broad daylight. They also had snipers on top of the hanger looking after them.\n\nLucius made a conscious decision not to point where he wanted anything placed, just in case anyone had a long distance lens on them. He heard the droning of an airplane flying overhead and looked up to see it. It was the same twin-engine Beechcraft he saw when he was walking into the building. He wondered why it was flying at such a reduced speed, at about 3000 feet.\n\nAs they made the turn where the berms would be built, he heard the droning again. He said, \"Get down Dan.\"\n\nBoth men dove into the bushes.\n\n\"What the fuck is going on Lucius?\"\n\n\"Call me suspicious general, but I think were being spied upon. That twin-engine Beechcraft is capable of doing over 200 knots, and it's barely doing one hundred. I saw it on my way into the building, and now twice while we've been walking. Someone is trying to count our strength. Do you want to guess who that might be?\"\n\nDan took out his cell phone and ordered all the agents to get undercover until the light green aircraft flying overhead stopped transiting the area.\n\nEveryone was to be on alert for it or any other aircraft flying similar patterns every day.\"\n\nDan put his phone away. \"Shall we continue our walk?\"\n\n\"You are the higher ranking officer; you lead, I'll follow.\"\n\nAs they walked, they found an old soccer ball in the field and started kicking it around. It landed in areas where Lucius wanted shrubs or bushes planted to stop the opforce from having a straight run towards the hanger.\n\nDan smiled when Lucius said the new bushes and plants would be anchored by six to eight foot long reinforcing bars, pounded into the ground, slightly below the height of the plant. Whether on foot or by vehicle, when you hit it, you were going to stop, hard, and fast; more than likely breaking something in the process.\n\n\"Lucius, you are evil.\"\n\n\"Yes sir, I am.\"\n\n****************\n\n\"Mrs. Thyme, this is Wes Purcell from Babcock and Wilcox, how are you this morning?\"\n\n\"I'll let you know Wes as soon as you tell me how everything is going up there?\"\n\n\"The containment vessel came out of the kiln last evening, and we had to wait until this morning to touch it. We put it through x-ray and ultrasound to verify there were no holes or air pockets in it. Everything came out perfect just like the last one. However this time we put in a separate container carrying extra mixture. We took it to the top of the factory and dropped it onto the factory floor. We now have a crack in our floor but not a blemish on the containment vessel mixture. Your son was right. It was the Mercury in the water. I will make the adjustments to the interior of the unit as we discussed prior to shipping it to you. You will have it within thirteen months.\"\n\n\"That's excellent news Mister Purcell; remember we need the exact measurements for the sled railings, prior to the delivery time, so we can make adjustments to our locking mechanisms. Once it gets here, it is being transferred from your truck directly onto the sled. It will be locked down, all the electrical connections completed, and put into the containment area of the ship. Once that door closes, it is not going to be opened again until we pass Jupiter. It is not going to stay outside of our spacecraft one second longer than it absolutely has to be.\"\n\n\"I agree with you on that Mrs. Thyme. All you would need is a cat or rodent to climb into the propulsion system, and it would ruin your entire week.\"\n\n\"It could ruin our entire flight Mister Purcell. Thank you for calling so promptly. It takes one of my biggest worries off my list.\"\n\n\"Do you have any news about your dad?\"\n\n\"Yes, thank you for asking. The operation went very well, and the doctors are pleased. We will know more in the next month as the results of his tests come back, and he regains his strength. If they all come back good he returns for a checkup in nine months. If not, he returns in six months for radiation and chemotherapy again. We are going to hope for the best and see what happens.\"\n\n\"That's all you can do. You can't live your life worrying if the next day is going to be your last. I will talk to you in a few months Mrs. Thyme; buy that youngster of yours an ice cream from me. I will pay you when I deliver the containment vessel.\"\n\n\"You have a deal Mister Purcell. Be well, and goodbye.\"\n\n90. Going Up\n\n\"You're doing wonderfully Doctor Luck. We are transferring you to a long-term healthcare facility for six weeks, and then you can go home.\"\n\n\"Why can I go home now?\"\n\n\"Dr. Luck, you need twenty-four hour a day care by RN'S, CNA's, physical therapists, a dietitian, and special foods. It's easier for you to be in a healthcare facility.\"\n\n\"Nurse, if it's not too personal question within a range of $20,000, how much do you make a year?\"\n\n\"That would be approximately $60,000 Doctor Luck.\"\n\n\"If I gave you a two-year guaranteed contract, at $200,000 a year, plus benefits, would you work for me twelve hours a day?\"\n\n\"When would you like me to start Doctor?\"\n\n\"Doctor Mozia, when we were going to transfer me?\"\n\n\"Tomorrow morning, about 10 AM.\"\n\n\"What is your name nurse?\n\n\"Tammy Hopkins.\"\n\n\"Tammy, I live in Temple which is 170 some odd miles from here. Are you going to be able to relocate?\"\n\n\"Yes sir, I still live with my parents, so that will not be a problem.\"\n\n\"This is my wife Jennifer. When we get home, she is your boss. If I am a pain in the ass, which more than likely I will be, you go to her and she will straighten me out. Is that okay with you?\"\n\n\"That is fine with me Doctor Luck.\"\n\n\"I need two things from you now. I would like you here at 9 o'clock tomorrow morning to help me get ready to leave. I also need two more RNs working under the same contract conditions as you. They also will need to relocate to Temple, because it is too hazardous to drive 340 miles every day after working twelve hours.\n\nI will have my attorney write up your contract. You can have an attorney read the contract for you and I will pay your attorney fees.\n\nI am sure I can get three CNA's in Temple, for $100,000 a year for two years, and a registered dietitian also for the same amount of money. However, this hospital has been good to me, and if anyone here wants to transfer up there, I will give them a chance to say yes or no first. Let us know what you find out before the end of the day.\"\n\n\"Doctor Luck, you are stealing the best and the brightest from our staff.\"\n\n\"I am just following your directions Doctor. You wanted me in a healthcare facility which would hasten my recovery. Your best and brightest will do that for me. I would ask you to come along, but the patients who come to this hospital need you to fix them as you fixed me. My physician in Temple can do the follow-up care, and keep in touch with you. How do you thank people who saved your life?\"\n\n\"A nice check to the research facility would be appreciated.\"\n\n\"More than the $20 million Jennifer gave them this morning?\"\n\n\"No, Doctor and Mrs. Luck, I think that is more than generous.\"\n\n\"Do you have any children whose parents can't afford their care in the hospital now?\"\n\n\"I believe we have four in the cancer care unit now. One of them is just seven months old, and has a brain tumor. We are treating them for free.\"\n\n\"Jen give Doctor Mozia Rod's card. Send all bills for those four children to my attorney. Don't tell the parents anything about us, but I want those children to have the best care money can buy. I would really like to know if the baby survives.\"\n\n\"Doctor, the chances of that baby surviving is less than fifteen percent. It would take a miracle of science, and technology for her to pull through.\"\n\n\"Doctor Mozia, you left one thing out: Science, technology, and prayer. I will be praying for her, and so will her family.\"\n\n\"So will I Doctor Luck, and so will the whole surgical staff.\"\n\n\"When is her operation scheduled?\"\n\n\"It is scheduled for next Thursday morning at 8 AM.\"\n\n\"Doctor, I know this is crazy, but I've been called crazy all my life. I'll give the hospital and extra $5 million, if they change that babies operation to Tuesday morning.\"\n\n\"I'll see what I can do, but the schedules are made up months in advance depending on the availability of the surgeon and his staff. It's not that easy to do Doctor Luck.\"\n\n\"I just have this feeling, it has to be Tuesday, or she's not going to make it.\"\n\n\"I'll speak with the Chief of Surgery, and the Chief of Staff. I'll let you know if you have to write another check by the end of the day.\"\n\n\"Thank you Doctor\n\n***************\n\n\"Even, what's so special about that little girl?\"\n\n\"She's a little girl, that's why she's special. Who knows what she could be when she grows up. She could be as beautiful as you are. She can be a mother as special as you are. She will never get a chance if she dies at seven months old. It's not fair. How would you feel if Holden was lying in that bed at seven months old and the doctor came up to you and said your child has a fifteen percent chance of living through the operation. All the money in the world could not contain the grief that we would be feeling.\"\n\n\"Even, you have always been a good man; a kind, gentle, and caring soul. This operation has made you more so.\"\n\n\"Don't get a swelled head over this wife. The only thing that got me through this entire ordeal was you. The thought of not seeing you again, the thought of not being able to say goodbye to you, when I thought I was lost, made me pray for the one thing I needed most in this world; I needed a chance to say goodbye to the love of my life. I didn't want to leave this life without saying goodbye to the woman who gave me such happiness, purpose, and a family to love. Jennifer Stars you were put on this earth for me and it took us too long to find each other. Next time WOULD YOU PLEASE USE A COMPASS'.\"\n\nHer right fist didn't miss me. \"You bastard! Everything you said was so warm, so beautiful, and heartfelt. Then you tell me to use A COMPASS. Even, if I had one I wouldn't know what to do with it.\"\n\n\"Give it to Gordon, Jen; he'll find a way to get you to me.\"\n\n\"If you weren't sick I'd beat you to a pulp you ingrate.\"\n\n\"Remember woman, one day I will be well, and you still have that opening I have not touched, yet.\"\n\n\"Did I tell you I bought a professional staple machine? Those staples are four inches long and can go through solid maple. While you're sleeping a certain appendage could be stapled to your body permanently.\"\n\n\"You better watch out for those things. If you can't read a compass how the hell are you going to know which side is up and which side is down.\"\n\n\"Even you are such a pain in the ass.\"\n\n\"Exactly dear, it will be a pain in your ass. Did you call Dan about tomorrow?\"\n\n\"No, I thought you were going to a nursing home.\"\n\n\"I am going to a nursing home. I'm going to my home, nursing on those lovely tits of yours.\"\n\n\"Do you mean I'm going to be sleeping in my bed for the first time in nearly 5 months, and you're going to keep me up at night?\"\n\n\"I certainly hope so. There is a part of my body that needs to be relaxed, and although I cannot have vaginal sex with you in my weakened condition, oral sex is definitely on my menu. Start exercising your tongue my dear, because mine is a ready up to the letter Z. I've been pulling it out of the back of my throat for weeks. It should reach your ovaries by the time I'm through with you.\"\n\n\"I think I'm going to visit my grandmother.\"\n\n\"I'm sure one of my three pretty nurses will be happy to assist me for a slight bonus.\"\n\nI could not move far enough away or fast enough to avoid the smack that hit my head, even though I threw up my arms to protect it. When I put my arms in a slightly less defensive position she surprised me by hitting me again.\n\n\"If I ever...\n\nThat was all she was able to say, because I pulled her onto the bed. She didn't believe I had the strength to do it, and she was surprised. I kissed her, which removed the venom from her thinking process.\n\n\"Dummy, didn't I just tell you the only reason I survived this operation was because of you? Do you think I would touch another woman when I have you? God gave me the gift of a lifetime when he put you into my life. How could you ever think I would cheat on you? I worship the ground you walk on; I think you dress funny, but you are a woman, so you're allowed. At least you're not dressing Gordon in plaids anymore, but poor Richard and Holden...\"\n\n\"Doctor Luck you have only kissed me to avoid further punishment. When you let me go, I'm going to hit you again.\"\n\n\"Mrs. Luck is kissing like oral sex?\"\n\n\"Kissing is considered the prelude to all sorts of sex. If you don't get started soon, there will never be any sex anymore Doctor.\"\n\n\"I am so weak, and so tired, I think I'll take a nap.\"\n\n\"There goes your blowjob Doctor.\"\n\n\"I wonder which one of us will miss it more? Have you been playing with your toys lately dear?\"\n\n\"How could I; I've been stuck in this room with you.\"\n\n\"Oh you horny little devil you. You have been sexually deprived for nearly 5 months. You are going to go off like a Roman candle. I am going to have fun lighting your fuse.\"\n\n\"You can hardly walk Even. If I was on the other side of a room, you would collapse before you got to me.\"\n\n\"I told you before Jen, I prayed to get back to you. I will pray at the altar of your sex many times before I die.\"\n\n\"Even stop it. I'm getting wet, and there is nothing you can do about it.\"\n\n\"Close the door.\"\n\n\"Even there is nothing we can do here. It's a hospital, don't even try it.\"\n\n\"Jennifer, are you still my wife?\"\n\n\"Don't ask stupid questions, of course I'm your wife.\"\n\n\"Go into the bathroom; remove your bra and panties. When you're finished close the door to the room, and lay down next to me.\"\n\n\"If we get caught, I'm going to decapitate you.\"\n\n\"They cut me from my chest to my balls. Now you are going to cut my head off. The only part of me that will not have a scar is my chest. We will save it for my heart transplant.\"\n\n\"Don't even joke about something like that Even, because I'll do it myself without anesthetic.\"\n\n\"Move your ass Mrs. Luck, before I kick you.\"\n\n\"Remember I warned you Even.\"\n\nI moved to the far right side of the bed, and turned onto my left side, with my left hand holding up my head. It was the sexiest look I could think of for a man would lost twenty-five pounds that he could not afford to lose. I was literally skin and bones.\n\nJen exited the bathroom, closed the door to the room, and hurriedly put her bra and panties into the same shoulder bag, containing the chain saw, lug wrench, throwing knives, and assorted and sundry other items women carry in case of a nuclear attack.\n\n\"Get under the covers, and don't argue.\"\n\n\"Yes Doctor.\" She sat on the edge of the bed removed her shoes and slid into bed beside me. Just the smell of her was a panacea for my soul. I took no prisoners, and neither did she. We yearned for one another.\n\nI don't know how long our first embrace lasted, but if I were allowed to do it, I would have been in her center in a heartbeat. It took all my willpower not to break that rule. I did not want to stay in the hospital three more weeks, while the sutures that held it together healed.\n\nMy mouth went from her lips to her neck, and my right hand went to her breast. For a young man, this is the first intimate part of the female anatomy he gets to touch, and as he gets older, the woman's breasts' never loses their fascination.\n\nAs my mouth descended down the center of her chest and over to my right hand, I squeezed the gentle flesh surrounding the pink nipple, and watched as my mouth descended on it. My tongue reached out and played with that little protrusion in the center, and I heard Jennifer moan.\n\nHer right hand pushed my head down onto her fleshy orb, and I opened my mouth to take as much of it in as was possible. My tongue continues to play havoc with her nipple, as my hand slid lower on her belly.\n\nAs I reached the curly top of her pubic hair, it was a little denser than normal. She was with me all the time, and did not have time to take care of her personal grooming needs. I would talk to her about that when we got home, where I had more room to protect myself.\n\nFor now however, I wanted to give my wife something she richly deserved; a trip to outer space, unencumbered by a rocket.\n\nTwo fingers slid down the inside walls of her labia and they were soaked. This was not a joking matter. I had left her alone way too long. I wanted to ignite her with a huge blast. Then I was going to ignite her second stage, and finally put her into orbit.",
        "As I rubbed my fingers on the inside of her labia, her hips started chasing me. I continued suckling on her nipple as my fingers dove into her birth canal. If you were deaf you could hear the huge intake of breath she took as she filled her lungs.\n\nHer hips and my two fingers moved as one. I began a slow rotation, to the right and she moved her hips to the left. We were so in tune to one another; we were like two professional dancers who knew their music well.\n\nThen I fooled her. I stopped. Her hips searched for me and I wasn't there. She keened in disappointment. As I felt her head reach up from the pillow, in perfect synchronization I bit her nipple, my thumb crushed her clitoris, and three fingers pushed deep inside her moving rapidly in a circle. My left arm pushed a pillow over her face as she screamed at the top of her lungs and my darling wife came mightily. Her body was stretched like the strings of a violin, but I was not ready to let her come down from this high.\n\nI started playing with her G spot, sliding my fingernails over it time and time again.\n\n\"Oh God, Even, I'm not ready. It's been such a long time I need to rest. Let me be. Even don't, please, it feels so good, you cock sucking bastard...\"\n\nI moved, and took her right nipple into my mouth. The nipple was already distended, waiting for someone, like me, to pay attention to it. I didn't want to disappoint her.\n\nMy thumb was playing Ping-Pong with her clitoris, while Jennifer's head was keeping time in reverse. She is such a lovely sight when she is in the throes of passion. It was time to light the second stage, because she was beginning to regain her senses\n\nI moved the covers down, and raised her skirt up above her navel. I began kissing her belly, as my left hand went from nipple to nipple, twisting, and torturing each in its turn. My right thumb descended from her clit, circled around her opening, tempting her to come after it.\n\nWhen her hips rose off the bed to capture it, I forced it as deep into her as it would go, and wiggled it around. I heard her blowout a deep breath of air, as she collapsed her muscles around it, trying to keep it inside her. As she was concentrating on my thumb, I slipped two fingers up her rectum, and she didn't notice it. I was going to try for the third finger, but I didn't want to lose my right hand. It was time to light the second stage.\n\nI took my mouth off her nipple, and moved down to the succulent flesh beneath it and began to nibble.\n\nI pulled my thumb loose from her strangulating muscles and began moving it up and down inside her channel.\n\nI began moving the two fingers that were in her ass. In and out they went, as rapidly, and deeply, as I could move my hand. Her head popped up off the pillow, and there was a quizzical look on her face.\n\nShe was about to say something when my head moved back to her nipple, and bit it.\n\nHer mouth opened in pain.\n\nMy thumb pressed down hard on her clitoris, rotated it counterclockwise against her pubic bone, and finally I pulled the two fingers out of her ass, I showed them to her and shove them back in to the root.\n\nNo words came out of her mouth. She squirted all over the bed, and took a nap. The second stage ignited on time.\n\nI decided to check on my wife, as I adjusted my position on the bed. I didn't have to ask her if she was okay, the smile told me everything I needed to know.\n\nI still had one more project to complete and that was to put her into orbit. Considering the state of my current disrepair this was going to be a little tricky, because I did not want to injure myself while doing it. I made myself as flat as I could on the bed. I turned and moved across Jennifer's lower right side, trying not to disturb her reverie. Her little pearl was still distended, and that was my first target. I wiggled my tongue to loosen it up and remembered my alphabet. I moved my head between her thighs and thought, \"Oh well here goes; the letter A.\" No movement from the top of my bed. Letter B. Still no movement. Letter C. Her hips moved. D. Another hip movement. By the time I get to G she should be awaken. E. There was a definite reaction. We should have gotten in eye flutter on that one too. F. Her voice returned, \"Oh Even.\" Yep this should do it. G. She realized what I was doing, and screamed \"EVEN!\"\n\n\"Welcome back dear, did you enjoy your nap?\"\n\n\"What do you think you're doing, I haven't been able to...?\"\n\n\"Yes dear, I noticed. A little deforestation is in order when we get home.\"\n\n\"Deforestation hell, it's a goddamn jungle down there.\"\n\n\"Do you see me complaining?\"\n\n\"No.\"\n\n\"Then lie back, and let me enjoy my meal.\"\n\n\"I will get even with you for this.\"\n\n\"I'm counting on it.\"\n\nShe was exhausted and it took me a long time; a long and pleasurable time, but I'm happy to say I knocked her socks off by the time I sent her into orbit.\n\nAfter a nap Jennifer went into the bathroom, cleaned up, retrieved her underwear, and dressed. She opened the door to my room, and returned my bed to its normal condition.\n\nShe was sedately sitting in a chair reading, and I was resting, when Delicious and Newton walked into my room.\n\nShe took two steps, sniffed the air, and said, \"You two are disgusting.\"\n\nNewt looked up at her and said, \"Why mommy, your room smells the same.\"\n\nDelicious turned bright pink.\n\nI asked my grandson what he invented this week.\n\n\"I was playing on the blue computer and I told my dad someone was trying to break through our firewalls. He went to our cryptology area, and they were able to stop them before the bad people broke through them.\"\n\n\"That was very important Newton. What we have on our computers is very secret. We are the only people who are supposed to know what's on our blue computers.\"\n\n\"My dad didn't tell me that. Do you want me to do something about it?\"\n\n\"Do you know how to write computer programs?\"\n\n\"Oh yes, grandma taught me how to do it Thursday, Friday, and Saturday. It was very hard at first, but she told me the tricks and made it easier for me.\"\n\n\"Newt let me tell you one thing about your grandmother you should know. She knows every trick and shortcut ever invented. Do you want to know why she knows so many?\"\n\n\"Yes grandpa, grandma is very smart, but why does she know so many tricks?\"\n\n\"She knows so many tricks because she played them all on me when I was young.\"\n\n\"Grandpa, grandma says she has one more waiting for you when you get there.\"\n\n\"I'm amazed.\"\n\n\"Why grandpa?\"\n\n\"She only has one trick waiting for me. I thought after all this time she would have a truckload.\"\n\n\"Grandpa, grandma said that can be arranged.\"\n\n\"Delicious take him to our computer people tomorrow and see what he can cook up in the way of a software program to keep people out of our computer. Don't let him do what Patti Valentino's kids did please. We don't want a five-year-old starting the third world war.\"\n\n\"Okay dad, do you want to tell me how they did that?\"\n\n\"All I will say is they started with a computer game, and they upgraded it. Now don't lie to me, and tell me what's going on at work.\"\n\n\"General Morgan stopped a group of men from coming onto the property. They were posing as men from OSHA. One of them had a grenade in his pocket. Everyone's on high alert now. No one gets near the property without being challenged. Our men are very good dad. General Morgan now has a second-in-command. His name is Colonel Lucius Canyon. He is smart, he is strong, and he is shorter than I am. I like the last part.\n\nSupposedly they were bitter enemies in the Serbia/Croatia war. The general got the Colonel kicked out of the service. I don't know what the circumstances were back then, however they are getting along fine now. As I said dad, the Colonel is very smart.\n\n\"Circumstances change baby. Williams Zabo may be the reason. The Colonel could be a good friend of William's. It would be a good way to start a conversation.\"\n\n\"You are very sneaky dad.\"\n\n\"Sneaky, crazy, it's all the same thing. I'm going home in the morning.\"\n\n\"You are? I thought you had to go to a rehab center first.\"\n\n\"I'm bringing the rehab center to me. I'm tired of seeing my wife sleeping in a little bed a few feet away from me, when she could be sleeping a few inches away from me in a big bed. I'm stealing three nurses from this hospital, and I will know by the end of this afternoon if I am hiring three CNA's and a dietitian. The rest of my needs I will get when we get home. If I have to set up a hospital room I can do it in my den. I haven't seen my children in too long a time. I miss them, and I'm tired of you having to drive 340 miles to come and see me. I will be home tomorrow, and I'm going by helicopter.\"\n\nJennifer yelled, \"You are not. I do not fly in helicopters. I will not fly in a helicopter. I hate helicopters.\"\n\n\"My dear, if you remember correctly, when I left your house in Fairbanks, it was by helicopter. I was leaning out the door waving to you. I got to the hospital quickly, and it helped save my friend Michael's life. I'm going home tomorrow by helicopter. It's already arranged. If you don't want to come with me, I suggest you leave two hours ahead of me, so you can greet me when the helicopter lands. For you it will be a three-hour journey, for me it will be one hour.\n\nI will have the gentle hands of nurse Tammy Hopkins with me, possibly one more; so I will be fine.\"\n\n\"Doctor Even Luck, I'm beginning not to like you.\"\n\n\"You liked me a lot a few hours ago, when your bra and panties were in your bag.\"\n\n\"Even, your grandson is standing there, and I'm sure he's taking notes.\"\n\n\"I don't have to take notes grandma, I remember everything.\"\n\n\"Oh God, I'm doomed.\"\n\n\"Jen, it's not as bad as Holden walking into our bedroom, while I was searching for ants in your pants.\"\n\n\"If you say one more word Even, just one more word, you will be in this hospital for a year.\"\n\n\"May I quote you on a different subject?\"\n\n\"Is it on a totally different subject?\"\n\n\"I swear to you it is on a totally different subject.\"\n\n\"Alright go ahead; just know that your life is in my hands.\"\n\n\"You said I would be in this hospital for a year if I said another word. A few months ago you said you would never leave me again. If I am here for a year, guess who else is going to be here?\"\n\n\"Grandma, you're going to miss my birthday.\"\n\n\"I would never do that to you Newton. I have to let your grandfather live. He told the truth, which he sometimes bends to his own advantage. This time he actually told a story as it actually happened. So I'm going to have to let him go home tomorrow. You are going be able to see him as often as you want, because you live across the street from us. Richard and Holden will be home, and you will be able to play with them again. Finally everything will return to the way things were before grandpa got sick. How does that sound to you?\"\n\n\"It sounds like we're going to have fun again.\"\n\n\"We certainly are Newton; we certainly are.\"\n\n\"One thing is not settled Jen. Are you coming with me on the helicopter, or are you going home by car with our security people?\"\n\n\"I'm going with security, and you are taking security with you. Don't argue with me, because you'll wind up where the doctor wanted you.\"\n\n\"I married a tough little broad.\"\n\n\"You did, when it comes to you and your health Doctor. I'm not ready to let you go.\"\n\n\"I'm not ready to let you go either, Jennifer. I'm not sure if I ever will be able to leave you. If I happen to learn the date, and time of my death, I'm going to shoot you first, because I couldn't bear the thought of leaving you behind.\"\n\n\"Isn't that a romantic gesture Delicious? He's going to die so he shoots me first.\"\n\n\"I guess if you have to go, you might as well go quickly.\"\n\n\"Is your whole family nuts?\"\n\n\"Newton would you ask grandma if she's crazy please.\"\n\n*****************\n\n\"Grandma said, \"We are all crazy like fox's. If you grab us by our furry tail, we will bite your arm. If you grab us by the scruff of our necks, we will scratch you with our claws. If you leave us alone, we will leave you alone.\"\n\nI laughed.\n\n\"Grandma wants to know what you laughing about grandpa.\"\n\n\"Ask your grandmother if she remembers where she got that quote.\"\n\n\"She said no grandpa.\"\n\n\"She may yell Newton, because she's not going to like this answer. Tell her she got it from Rod Laver.\"\n\nNewton jumped high off the floor, and covered his ears.\n\n\"Grandpa, she yelled, and it wasn't a nice word.\"\n\n\"I'm sorry Newt, but I knew that was coming. She does not like Rod. They never got along while she was alive. I think they would get along now.\"\n\n\"Grandma said that nasty word again.\"\n\n\"Tell your grandmother you are only five years old, and she's not supposed to talk to you that way.\"\n\n\"Grandma says she's sorry. She has to go talk to someone about her language problem.\"\n\n\"Tell your grandmother the only way for her to clean up her language problem is for her to keep her mouth closed permanently.\"\n\nNewt started jumping all over the hospital room.\n\nI yelled, \"Leave that child alone, Divine.\"\n\nNewton stopped jumping and ran to his mother.\n\nMy sister popped into my head. \"You are in so much trouble with me Even. When you get here, I'm going to ignore you.\"\n\n\"Would you have St. Paul write an epistle on that subject, and sign the document? If I get to heaven, I will sign the epistle beside your name. Then I will stare at you for eternity, or until you talk to me. It should take all of fifteen seconds, because you are incapable of keeping quiet.\"\n\n\"I'm not talking to you ever again big brother.\"\n\n\"What did you just say?\"\n\n\"I said I'm not talking to you ever again.\"\n\n\"Our connection must be getting bad, because you're getting very garbled. I can't understand a word you're saying. Would you try that one more time please?\"\n\n\"I said I'm not talking to you ever again Even. Did you hear me that time?\"\n\n\"Why aren't you talking to me?\"\n\n\"You are the most infuriating man I have ever known.\"\n\n\"I thought you said you weren't talking to me.\"\n\n\"You asked me why I wasn't talking to you.\"\n\n\"You've been telling me for the last minute, that you're not talking to me. I don't understand why you've been telling me you're not talking to me, when you are still talking to me.\"\n\n\"I'm going to beat the crap out of you when you get here.\"\n\n\"You're doing an awful lot of talking, for a person who is not talking to me. Go to your grandson and apologize for scaring him to death. He's cowering in his mother's arms. If you ever do that to him again, when I see you, I'm going to mow you down like a blade of grass.\"\n\n\"I'll talk to you when I see you.\"\n\n\"You told me you weren't talking to me.\"\n\n\"I'm not. Goodbye.\"\n\nWhen she left my head I couldn't help but laugh. Jennifer was listening to my side of the conversation with my sister, and she joined me in my laughter.\n\n\"It sounded to me like you had her totally confused.\"\n\n\"Baby, it was the one thing I could always do to her. Otherwise, she was queen of the house. The things she could do to me were amazing. She put frogs in my bed, Snakes in my shoes, Ants in the pockets of my slacks, and Love notes from fictitious girls. You name it, she did it to me. The amazing thing was she was afraid of most of the things she put in my stuff. She was doing it to get my goat, and she knew she could do it, with these little distractions. I would yell at her from my room. I could hear her laughing hysterically, in hers.\n\nI loved her so much; I would have done anything for her, anything at all.\"\n\nThe phone in my room rang. Jennifer picked it up and listened to the person at the other end. All I heard her say was, \"Yes Doctor, I'll leave the check with the administrator tomorrow morning before we leave. My husband will be very pleased.\"\n\nI smiled. \"They're going to do the little girl on Tuesday aren't they?\"\n\n\"The head of the cancer center would not turn down $5 million for two day delay for one of the patients. He thanked us very much for the additional donation.\"\n\nI closed my eyes, and prayed to my God. \"Please Lord take care of that little girl. Let her live a fruitful life in your divine grace. Amen.\"\n\n***************\n\n\"Does she look like she's lost weight to you?\"\n\n\"You've asked me that question every day for the last two months, Callum. What makes you think Junie has lost weight?\"\n\n\"She just looks so frail in there.\"\n\n\"She's been in the beauty box for nine months Callum. Her breathing, heart rate, and temperature have all been normal. She has had several dreams of long endurance we monitored, and as far as we can tell she is doing wonderfully.\"\n\n\"That's the part I'm worrying about... 'As far as we can tell'...there are so many unknowns about Stasis. Even if Junie comes out of this test in perfect health, how can we be sure the next person will get the same result Patti?\"\n\n\"We don't know Callum. We are taking a giant leap of faith here. We don't have seven years to do a double blind study. Using this equipment, with this type of test, you can't do a test of that nature. You have to put your subjects into the chambers and watch them twenty-four hours a day seven days a week for seven years, hoping nothing goes wrong. No facility is going to approve the utilization of that much space, for that many years, for one science project, regardless of how important it is to the future of space travel.\"\n\nLaura came over the speaker.\n\n\"We're getting company mom. It looks official, government plates, and the sheriff's office. Get down to the basement quickly.\"\n\n\"Callum you know what to do. Just relax everything will be fine.\"\n\n***************\n\nLaura walked slowly to the front door giving her mother a chance to get into position. When she was ready she opened it.\n\n\"Hi Sam what's up?\"\n\n\"These assholes, I'm sorry, these experts from the FDA think you are performing live human experiments in your home on the subject of stasis. They have a warrant to search the premises.\"\n\n\"I wish we were that far into our program. Our research is stuck at Wood Frogs. Let them come in and look around. We can show them how far we've gotten. Maybe they can show us where we are going wrong. We've been stuck at this point for nearly a year, and we are frustrated.\n\nLadies and gentlemen this floor contains the living areas of our home: bedrooms, bathrooms, kitchen, and library. If you want to look around, please feel free to do so. The science areas are underground. Tell me where you want to start and we will begin there?\"\n\n\"Captain, if you would search this floor for anything unusual, we would like to see the science areas.\"\n\n\"Sam, Sabrina will make you anything you like.\"\n\n\"If you can keep them down there for an hour, I'll have her make me lunch.\"\n\n\"How does an hour and a half sound?\"\n\n\"It sounds like a relaxing lunch to me.\"\n\n\"We'll see you later Sam.\"\n\n\"You will notice as we go downstairs the temperature rises instead of falls. That's because we have a Cray 4 computer here, and the heat it produces dries up all the moisture a normal basement contains. Our basement is sectioned into three separate areas. The computer area is for top-secret work and above. My mother does work for the federal government that has Code Name Restricted access. To get into that room you have to go through a bank vault door, and use a retina scanner. The center room is for classified research, like we are doing on stasis. The room on the left is where we build our models, or it can be changed into a playroom if we have children here and inclement weather outside. Where would you like to start?\"\n\n\"We'd like to start in the playroom please.\"\n\n\"Follow me.\"\n\nLaura led them into a huge 40Lx60Wx12H room filled with tools of every type. She stepped aside and let the ten members of the FDA inspect it.\n\n\"When you have children play in here, where do you store the tools?\"",
        "Laura hit a switch on the entrance wall, and panels on the Eastern wall opened revealing storage space behind it.\n\n\"Everything fits in there quite comfortably.\"\n\n\"Do any more of these walls open?\"\n\n\"Yes, but they're just for toys.\"\n\n\"May we see the toys please?\"\n\n\"You better step to the center of the room. The kids don't always put them away neatly.\"\n\nLaura moved a second switch and you could hear the rumbling begin as soon as the doors began to part. The doors gave way and toys poured out onto the floor.\n\nDoctor Aniston said, \"I'm sorry about the mess.\"\n\n\"Is there anything else you want to see in this room?\"\n\n\"Do anymore doors open?\"\n\n\"No, those are the only walls that open. Do you want to check anything else in this room?\"\n\n\"No, we can move on to the next room.\"\n\n******************\n\nLaura escorted them to the classified science room, and here was where they got into their first argument.\n\nAnna was sitting at her computer, and immediately put her screensaver on.\n\n\"What are you thinking Laura? They can't see this information. This is all patentable material.\"\n\nLaura turned to her group and said, \"My sister is correct. I cannot let you see anything that's on our computers, even with your court order. This information has the potential of being patented. However, if you will sign a nondisclosure agreement, you can go through it from beginning to end.\"\n\n\"I will have to call Washington to get approval to sign that agreement.\"\n\n\"You can use any of our phones.\"\n\nIt may not have been legal, as a matter of law it was absolutely illegal, but they traced the call using the Cray 4, and taped the conversation.\n\nThe call did not go to Washington. It went to a switching system in southern New Jersey, which sent it to Newfoundland, Spain, Germany, South Africa, Australia, Indonesia, Hong Kong, Guam, Mexico City, and finally to San Diego. The system was running a little slow today, and it took 4.6 seconds for the call to be completed.\n\n\"This is Doctor Aniston. May I speak to someone in our legal department please?\"\n\n\"Hello Doctor Aniston, this is Anthony Pete. Are they challenging the court order?\"\n\n\"Yes they are, sir, on the basis that the material in the computer is patentable. They will give us access to everything if we will sign a nondisclosure agreement.\"\n\n\"Ask them if the NDA restricts the information to just your group or can it stay within our administration?\"\n\nDoctor Aniston asked Laura that question.\n\nLaura said there was no way that their entire FDA was going to have access to this information. They would accept 'a need to know clause, restricted to the top one percent of the administration.\"\n\n\"You can tell Ms. Valentino that is acceptable to us Doctor Aniston.\"\n\n\"Thank you Mister Pete, we will continue our investigation.\"\n\n\"Miss Valentino, our legal department has given us permission to sign your NDA, with your additional clause. Do you want us to wait until you have your attorney draw up the agreement, or can we start our investigation, while he does it?\"\n\nLaura smiled. \"Since you went through all that trouble to get approval to sign the document, I think I can trust you enough to let you begin your research. I do have a favor to ask you. When you get to the area where we are stuck, if you can find us a way around those damn 'Wood Frogs, I would really appreciate your help.\"\n\n\"I'll see what I can do.\"\n\n\"Ladies, and gentlemen, the computer is yours; have fun. Anna, load up the stasis program from day one. When you're finished, you can go upstairs and have lunch with Sam, or go out to the barn and help Callum with the horses.\"\n\nAnna laughed. \"Oh my, what a choice? I can have lunch with a very handsome married man, who has been known to frisk young women until they organism. Or I can go to the barn, and help a young, unmarried man, who looks like Adonis, and brush down horses until I organism spontaneously. What shall I do, what shall I do?\"\n\nLaura laughed at her sister. \"You can do them both, if you hurry.\"\n\nAnna was out of her chair and on her way upstairs, when she turned around and ran back.\n\nLaura said, \"I thought you'd be in the shower by now.\"\n\nAnna hugged and kissed her sister. \"I forgot to say thank you.\"\n\n\"Get out of here you nut.\"\n\n***************\n\nPatti called General Morgan.\n\n\"Dan, you were right again. They faked calling Washington to get permission to sign the NDA. The call bounced all around the world, trying to avoid detection, but my Cray was all over it. It went to the home of Jim Pierce, the President, and CEO of Advanced Algorithms. I took a voiceprint of the person speaking at the other end of the line, but I didn't have to, because I recognized his voice. It was William Silver; I have no doubt about it. That's where he's hiding.\"\n\n\"Great job Patti, give these people the real information, because they will be able to tell if it's faked. Help them through the process of everything you did to get to the point of those damn frogs, and your frustration afterwards. You did great on this Patti, keep it up.\"\n\n\"It's my father they are after Dan. I would move heaven and earth to protect him and his family.\"\n\n\"Are you willing to get your hands dirty?\"\n\n\"Didn't I just do that a little while ago?\"\n\n\"I'm talking about really dirty Patti. If you get caught, it could mean jail time.\"\n\n\"What do you want me to do Dan?\"\n\n\"Is there any way for you to hook up into their computers and listen into their conversations?\"\n\n\"Is that all Dan? I was able to do that since I was a teenager. I helped put three of the five heads of the families that ruled New York in jail when I was twenty-two by looking into their computers, and then destroying them.\"\n\n\"That was you! The FBI never let that information out. They knew you would be dead within days if they released your name.\"\n\n\"The only reason I wasn't dead was because the three Don's put the word out that I was not to be touched. I made a deal between them, the FBI, and the Department of Justice that took all the capitol crimes off the table, and kept the maximum jail time to twenty years. The three of them did not make it to their release dates. Two died of natural causes while in jail, and the other died of steel poisoning.\"\n\n\"I've never heard of steel poisoning.\"\n\n\"An unknown prisoner stuck a shiv in his heart.\"\n\n\"That will do it every time.\"\n\n\"Where do you want me to route these conversations to Dan?\"\n\n\"I'll set up a monitoring station in the ready room. It will be manned twenty-four hours a day.\"\n\n\"I'll have Pierce's house online within two days.\"\n\n\"Make sure it can't be traced to you Patti. You're too short to wear horizontal stripes.\"\n\n\"I'm going to have Margaret pee in your coffee. You're beginning to sound like my husband.\"\n\n\"Margaret pees in my coffee already. I have very little interaction with your husband, because he never leaves his office. I don't know how he is not blind at the end of his day.\"\n\n\"Thank you Dan, at least I know he's being faithful to me.\"\n\n\"If you ever doubted your husband's love for you, you are a bigger horses' ass then 'George W.' was, for going to war against the wrong country after 9/11.\"\n\n*****************\n\nCassie woke up at 1 PM, took care of her needs, and was getting ready to throw her robe on when she realized Callum was on duty taking care of Junie. Since there were only females in the house she decided to go into the kitchen and have breakfast in her nightshirt.\n\nAs usual for this time of day, the house was very quiet. She turned, walked into the kitchen, and headed directly to the refrigerator.\n\nShe took out the orange juice and placed it on the counter. Then she bent to see what else was available for breakfast. As she bent lower and lower, her nightshirt rose higher and higher towards her hips. When she reached into the bins at the bottom of the refrigerator to take out a piece of fruit, she heard a man say, \"If you don't stop there, I'll have a heart attack.\"\n\nCassie screamed, stood straight up as a soldier at attention, and pulled her nightshirt down as far as it would go. She was the color of a Maine lobster as she turned to see who was behind her.\n\n\"We haven't met, but that was an interesting way to do it. My name is Sam Meisner; I'm the captain on the police force, and a friend of the family. You must be Cassie, and what they said about you is true. You are stunning, bent over at the waist, or standing straight as an oak tree.\"\n\n\"Why didn't you tell me you were here when I walked into the room?\"\n\n\"I didn't want to startle you. You didn't seem to be quite awake, but I did not think I was going to get the show I just viewed. I should not have let it get that far, but I did enjoy it. My wife will beat the shit out of me when I tell her what I did, but that will not be half as bad as what Patti will do to me for upsetting her guest. Have you ever seen Patti when she is angry?\"\n\n\"Only once, and that was with Robert.\"\n\n\"Robert doesn't count. Everyone has been angry with him since he was five years old, and refused to do anything.\"\n\n\"He has a job in Maryland.\"\n\n\"Robert is going to work for someone?\"\n\n\"I heard Patti say to Stephano she doesn't care how much it costs, but they must pay whatever it is to keep Robert employed.\"\n\n\"That boy is something else. Would you like to put a robe on?\"\n\n\"Why would I do that now, you've seen everything there is to see.\"\n\n\"If you're going to wear something that short around the house, you really should wear panties.\"\n\n\"There were not supposed to be any men in the house, and all women are built the same.\"\n\n\"I guess I should say thank you for the wonderful view.\"\n\n\"Please don't, if I blush like that again, I'm going to need a very cold shower.\"\n\n\"How do you think I feel Cassie? A part of my body is so rigid, I doubt I could stand up and walk straight.\"\n\n\"I'm sorry Sam; now I have to go take a shower. I'm dying here, and you are not doing any better. I'll see you in half an hour.\"\n\n\"Before you leave, we have visitors from the FDA downstairs. Anna just ran to her bedroom; talk to her so you know how to play it.\"\n\n\"Thanks Sam, I'll do that.\"\n\n***********\n\nCassie knocked on the door, and Anna told her to come in.\n\nAnna took one look at her and asked, \"Are you having an allergic reaction to something; you are as red as a beet.\"\n\nCassie told her what happened in the kitchen, and Anna collapsed on the floor laughing.\n\n\"Cassie, the only thing that would have made that story funnier was if it would have been Callum sitting there. He would have fucked you where you stood, or he would have had a heart attack.\"\n\n\"That's not funny Anna. I wasn't thinking about Callum sitting there. I was wishing it was Christian.\"\n\nAnna pulled Cassie down to the floor with her. She took her hands in hers, looked into those magnificent eyes, and asked, \"Did we have a breakthrough today?\"\n\n\"I don't even know Sam, and he made me hotter than a candle flame by just talking with me. Chris and I talked all the time, and I loved it. I haven't talked to him in eight months. Mom and dad will not give me his new phone numbers because he told them we had an argument and he did not wish to speak to me anymore. They won't tell me where he's living either.\n\nHe did this on purpose. If I want him, if I want him forever, he wants me to fight for him. He wants me to tell our parents I love him, and I want to be with him as his wife. I don't know if I'm strong enough to do it. So here I sit, safe and sound, in Glen Falls New York, happy and miserable at the same time.\"\n\n\"I wish I had your problem. At least I would know I'm desired. Only one man in college and graduate school came after me. The only reason he did was because he found out I was a virgin. He wanted to add my cherry to his list.\n\nI don't think I'm hideous looking. I don't believe I'm standoffish, and I don't believe I have bad breath. All I know is men avoid me like the plague.\"\n\n\"New clothes might help.\"\n\n\"What's the matter with the clothes I wear?\"\n\n\"What do you wear when you go shopping?\"\n\n\"I wear one of my sweat outfits, or a long jogging suit.\"\n\n\"What do I wear when we go shopping?\"\n\n\"You wear shorts and a T-shirt.\"\n\n\"Which one of us do you think the guys look at more?\"\n\n\"That's a very sexist attitude Cassie.\"\n\n\"What do you think guys are looking for Anna: Bird food, or meat and potatoes? You and your sister have the fashion sense of bag ladies. If you want guys to notice you, you have to dress to be noticed. Let me take both of you shopping. It will change your lives for the better.\"\n\n****************\n\n91. Money\n\n\"Good morning Patricia, how is everything going at your end?\"\n\n\"Everything is super dad. The people the former vice president sent to check the status of our stasis experiments checked everything from day one to yesterday. They even offered us some of their own thoughts on the process, which were bogus. They checked everywhere, including the attic, and the barn. When they saw Callum, I think the women wet their pants. He wasn't wearing a shirt, and he was sweating. Laura said he looked stunning, and Anna was drooling all over him.\n\nJemma, Patrick, and their agents were in the tree line, because they checked each of the houses on the property. When they left they were satisfied we were doing nothing in the way of live testing, because we were far from the point of resolving the issue.\n\nOur friend, Sam Meisner, the policeman who is not a policeman all the time, was with them. He kept telling them they were wasting his time, and helped hurry them along.\n\nWe watched each of them like hawks. They didn't have a chance to plant anything, but we did a fingernail check of everything they were near, sat on, or touched. It came up clean.\"\n\n\"That's very good news Patti. Now it's time to bankrupt them. Not only do I want you to take every penny they have in their bank accounts, I want you to buy every available stock option they have. I'm going to call Celeste and Harold. I will have them start buying their stock also. I want to get controlling interest in the company, and once we do, we will fire the board of directors, break up the company, and sell it off to the highest bidders. I want those two assholes to suffer as the government puts them in jail, and they can't afford bail.\"\n\n\"Will it stop them from attacking our project in Temple?\"\n\n\"I can't answer that either way Patti. They may have cash stored away that they can use to pay for an assault on the spacecraft. We will have our eyes and ears open either way.\"\n\n\"Did Dan tell you what he wants me to do?\"\n\n\"Yes I am fully informed. Please don't get caught.\"\n\n\"I wouldn't want to be a ninety-six-year-old woman, with two bad hips, living in a nursing home in Plantation Florida, dad. She may be getting visitors during the middle of the night.\"\n\n\"Shame on you Patti, taking advantage of the elderly.\"\n\n\"I was going to blame it on the Kim Jong-il of North Korea, but I thought the vice president might recognize his name.\"\n\n\"I think your mother should've spanked you, at least someone would've given you a pain in the ass.\"\n\n\"Dad, remember, I know where your money is; be nice.\"\n\n\"People tried to find me for over twenty years and could not do it. You got onto a computer and found me in thirty minutes. How long do you think it would take you to find my money if I didn't tell you?\"\n\n\"That's an interesting question dad, I never thought of it that way.\"\n\n\"Okay young woman, it's time for you to get to work bankrupting those two thieves, and buying up stock in Advanced Algorithms. You know how to do it, so get started. I love you Patricia, stay safe.\"\n\n\"I love you too dad. Don't you dare go anywhere without security surrounding you.\"\n\n\"I can't go to the bathroom without one of them coming with me.\"\n\n\"Do they watch?\"\n\n\"Patricia that is very personal.\"\n\n\"Goodbye dad.\"\n\n\"Goodbye Patricia.\"\n\n***************\n\n\"This is Doctor Bradley from Anderson Hospital can I speak to Doctor luck please.\"\n\n\"This is his wife Jennifer, is anything wrong Doctor?\"\n\n\"No Mrs. Luck, I just have some information for him. You can listen in if you want to.\"\n\nJennifer gave me a handheld phone and told me it was Doctor Bradley.\n\nI held my breath. \"Good afternoon Doctor, how are things in Houston?\"\n\n\"Doctor Luck, why did you ask us to have that young girl's operation moved to Tuesday instead of Thursday?\"\n\n\"It was a premonition Doctor. I just knew it had to be Tuesday or she wouldn't make it.\"\n\n\"I didn't do the operation, but the neurosurgeon that removed the tumor from her brain said it was not a moment too soon. They placed the tumor into a jar to be brought to the lab to be studied, when it exploded. He said he had never seen anything like it in his thirty years of experience.\n\nIf it wasn't for your premonition, that young girl would be dead. As it stands now, she has a sixty percent chance of living. Thank you Doctor Luck from all of us here at the Cancer Center.\"\n\n\"Please don't thank me Doctor, you have saved two lives; hers, and mine. Keep fighting this dread disease, and one day you may find a cure for it.\"\n\n****************\n\nOne hundred twenty agents were on hand at 2 AM, as the three Federal Express tractor-trailers arrived at the hanger. The boxes were numbered but otherwise unmarked. General Morgan signed each bill of lading as the numbers were called out by the agents, who unloaded them. They placed them on handcarts, and pulled them into the recesses of the hanger. 865 boxes were unloaded and placed in a predetermined order.\n\nThe preparations for war had begun.\n\n********************\n\nThe landscapers came next. Following the design Colonel Canyon laid out for them, they planted lush bushes and plants starting fifty meters in front of, and twenty meters to each side of the hanger. The plants ran parallel to the hanger, 750 meters to where the berms would start.\n\nAt night, agents used machines to press the reinforcement bars down into the earth just below the top of each plant. It took them two days to do all of them before sunrise.\n\nThen there was the 'Sprinkler System.' They rented a trench digger, and dug a hole six inches below ground level in front of the plants. Wires were run through the white pipe, into a twelve inch threaded risers spaced twelve feet apart, and into the sprinkler head. The top of the sprinkler head was unscrewed; the spring discarded, and the wires pulled up. A small microphone was attached to the wires, and slid up to the top of the nozzle of the sprinkler assembly. A piece of cotton was pushed up to keep the microphone in place. The dirt was placed back into the hole and returned to ground level. The microphones were standing fourteen inches above the ground, innocently looking like a normal sprinkler head.\n\nAt the end of the day, the entire perimeter of the hanger was wired for sound. Anyone trying to sneak up on the hanger and making a sound would be heard by the technician operating the control board in the hanger.\n\nA water truck came by to water the new plants every third night.\n\n*****************\n\nGeneral Morgan called an engineer he knew from his Desert Storm days. Charles Daniels was a colonel who helped design the breaching elements to destroy Saddam Hussein's impenetrable walls of sand. He was now playing with his grandchildren, and couldn't wait to get away from them.\n\nHe told his daughter he could be gone for as much as a year, because of this new job with his former general.\n\nShe sobbed at the thought of losing her babysitter.\n\nWhen the three military men got together, it became like old home week. More war stories were being told then work was getting done.\n\nIt was Margaret that put an end to this. She brought in a kitchen timer and slammed it down on General Morgan's desk.\n\n\"Listen to me you three old warhorses. Your glory days are gone. You have to defend this place, the people in it, and the spacecraft. From today forward you have fifteen minutes each to talk about your past glories. After forty-five minutes I coming into this room, and I'm going to start cracking heads open if you're not working on a plan to keep this place moving forward. If you're not doing something to protect every person here, your ass is mine.\"",
        "Charlie laughed. \"What did she say Dan?\"\n\nMargaret reached behind her back and pulled out a personally autographed model of a Ted Williams baseball bat in front of her.\n\n\"Do you understand me now Colonel Daniels?\"\n\n\"Yes Margaret, fifteen minutes not one second longer. Is that Ted Williams real signature on there?\"\n\n\"Yes it is. He stayed at my house many times, because he loved fishing in the lake behind it.\"\n\nDan said, \"You never told me that Margaret.\"\n\n\"You are so busy talking no one else can get a word in edgewise.\"\n\n\"Margaret told me that many years ago.\"\n\n\"You told Lucius and you didn't tell me?\"\n\n\"Lucius listens, you talk all the time.\"\n\n\"Maybe you shouldn't marry him Margaret.\"\n\nCharlie said, \"You two are getting married?\"\n\n\"He's thinking about it.\"\n\n\"I am not thinking about it.\"\n\n\"So you decided to do it.\"\n\n\"Lucius keep your mouth shut.\"\n\n\"Can I wear a gray dress?\"\n\n\"I don't care what color dress you wear, I'm not marrying you.\"\n\nCharlie said, \"I'm confused, are you or aren't you getting married?\"\n\nMargaret said, \"As soon as possible.\"\n\nDan said, \"Over my dead body.\"\n\n\"Don't you love the color his face gets when I get him riled up Lucius?\"\n\n\"I don't think Crayola has that color.\"\n\nCharlie asked, \"Would somebody tell me what's going on?\"\n\nLucius said, \"I'm sorry Charlie, our fifteen minutes is up. We have to get to work.\"\n\n******************\n\n\"Lucius, I can't make your tunnels until I know where the opposition force is going to be. Why don't we make places for them that are not too obvious, but not too perfect for their purposes?\"\n\n\"You're the expert on this Charlie, how do we go about doing it. They've already done aerial photographs of this place. We can't do a major reconstruction without it being obvious.\"\n\n\"You've already done it Lucius. You put in landscaping. They have no idea what it took for you to do it. You may have run into logs or boulders that had to be moved in order to beautify the place for the grand entrance of the spacecraft. They may think we put everything off to the sides.\"\n\n\"As I said Charlie, you are the expert.\"\n\n\"I'll lay out a design, for you and then I'll show you where your tunnels will be. Making it will be easy as pie. Your men will have to crawl through it. I'll put a four-foot culvert in there and run it the whole way to the exit point. I'll put a nice twilight periscope on it, so they can look around before they exit. I'll have it open and close like a garage door just in case they need to make a fast exit.\"\n\n\"How long will it take to make Charlie?\"\n\n\"It should take about three or four hours for each side.\"\n\n\"Is it all prefabricated?\"\n\n\"If the excavator operator is on his game, it really is a piece of cake. While he's digging the hole the culvert is being put together. The last pieces are the uprights, and they take time.\n\nYou have to get your men from the hanger into the hole without being seen. A few trucks parked in those areas and a few guards walking around will do the trick.\n\nOnce we have the ends made the culvert goes in. While we are working on getting the uprights connected to the culvert, the bulldozer operator should be pushing the sand back into the hole and closing it up.\"\n\n\"How are you going to do the berms. How high are you going to be able to get them, without them looking fake?\"\n\n\"You want them to look like stadium seating, and that's exactly what we're going to give them, stadium seating. It takes two or three days to put an aluminum grid together. They come prefabricated from the company. You put screw A into hole B, and it's together. I don't think they come twenty feet high, but we can find out if they do. When they get here, regardless of what size they are, we have companies start bringing us sand, and plenty of it. We erect a huge tent; ostensibly to keep our workers cool. Once we have the first aluminum structure completed we call in bulldozers and bury it in sand. We slope the back at an eight-degrees angle to make it look like it's holding up the rest of the sand. We carve out the front of the sand close enough to the grid, but not perfect. Then we move on to number two, and then number three.\n\nNow comes the fun part, blocking the opposition force in on all sides. We'll use Tiger traps. They are not going to use tanks, or any other type of dual treaded vehicles. If they use any wheeled vehicles, it will be a Humvee or something of that nature.\n\nA trench five feet wide will stop them. Most men will stop and try to walk around a trench that big, rather than try to jump over it with a pack on his back. All we have to do is make the traps five feet wide by five feet deep by eight feet long and cover them with heavy tarps. We will throw an inch of sand on them so they can't be seen until the first man or vehicle falls into it. We overlap three of them at each of the openings between the berms, and the opposition force is dead in their tracks. Those who try to climb the eight-degree slope leading to the top of the stadium seating will find the sand is so loose, their attempts are futile\n\nOff to both sides of the stadium seating areas we hide three 50-caliber machine guns, and the opposition force becomes like the Mariana's Turkey shoot. The Japanese lost half their Navy that day.\n\nI would be amazed if men of the opposition force didn't throw down their weapons, and surrender the first minute after they realized the trap they walked into. It's your perfect pincer movement Lucius.\"\n\n\"You're damn right it is. There's only one problem. The mortars, I know they're going to come in with mortars. We have to take those out, but they are going to be a bitch to find. Just one of those things could ruin our entire day.\"\n\n\"A mortar is only as good as its spotter Lucius. Without coordinates the mortar is useless.\"\n\n\"That's true, but what if the spotter is in an aircraft, or if they using a drone, I still say a two-man team should be sent out to for mortars.\"\n\nCharlie asked, \"Dan can we get our hands on some drones? I'm not talking about the military version; I'm talking about these new ones that the public is using. With a little American ingenuity we could fly it into a target and it could explode.\"\n\n\"Charlie don't you know it's against the law to alter a civilian aircraft and make it into a lethal weapon?\"\n\n\"Yes sir, but that applies to other people, not me. I'm an engineer.\"\n\n\"Who told you that?\"\n\n\"Norman did.\"\n\n\"You and General Schwarzkopf are on a first name basis?\"\n\n\"Yes sir.\"\n\n\"How did that come about Charlie?\"\n\n\"That will have to wait until tomorrow sir.\"\n\n\"Why?\"\n\n\"My fifteen minutes is up.\"\n\n\"Charlie, I'm about to strangle you.\"\n\n\"Help me Margret.\"\n\n\"Tell him, because I want to know.\"\n\n\"Two birds and two stars were having an argument on how to get through the berms Saddam built to protect Kuwait. I was a lowly major listening to them, and I know they are full of shit.\n\nNorman is listening to them argue. I got so disgusted I turned threw my pencil in the air and walked away. I got about ten feet when his booming voice said, \"Major, what do you know that those idiots don't know.\"\n\nI said, \"General with all due respect to their rank, they have no idea how to move sand. I'm a desert boy, and if you want to move sand you don't blow it up, you blow it to the side. They're talking about putting rows of explosives next to each other and lighting it off. You might as well do that in water, because you going to get the same result. You have to form a Vee and blow the sand sideways to get a hole big enough to drive a tank through.\"\n\nHe didn't take my word for it, he said, \"Prove it.\"\n\n\"Build me a berm sir.\"\n\nIt's amazing how fast something can be built when a four star general tells you to do it. In two hours I had a 150Wx100Dx50H sand berm I had to blow a trench wide enough for a tank to get through. I was given two boxes of explosives, and one assistant. Less than an hour later, I blew a hole through that sand wide enough to put two tanks abreast through.\"\n\nNorman and I became best friends, and I got a Silver Oak leaf.\"\n\n\"I hate showoffs.\"\n\n\"Can we get civilian drones?\"\n\n\"Look them up on Amazon and see if they carry them.\"\n\n*****************\n\n\"Hello Dan, this is Even, and I am about to make your day.\"\n\n\"Even please tell me you're in the convoy on your way home.\"\n\n\"I am on my way home, and I have security with me, does that make you feel better?\"\n\n\"I don't like it when you will avoid my questions. What are you up to Even?\"\n\n\"I am in the helicopter on my way home. I'm going to make a slight detour on the way, and visit my baby. I want to see how far she's gotten in the last five months. Please don't shoot down my helicopter when it lands in front of the hanger.\"\n\n\"Even, Jennifer is going to kill you.\"\n\n\"I won't tell her, will you?\"\n\n\"No, but one of the 200 people working on that spacecraft might.\"\n\n\"They won't know I'm not supposed to be there.\"\n\n\"Even, you are going to kill yourself if you come back to work too soon.\"\n\n\"I'm not going back to work Dan, I just want to see her. It's been much too long, and I am having withdrawal symptoms.\"\n\n\"Do you have a wheelchair with you?\"\n\n\"No I don't.\"\n\n\"Two of my men will carry you everywhere. I don't want to hear an argument from you. We will put you in a chair, and walk you around.\"\n\n\"That's fine Dan; I can't walk that far anyhow. We should be landing in five minutes.\"\n\n\"You son of a bitch, thanks for all the warning.\"\n\nThe Life-Flight helicopter landed, disgorged its passengers, and was back in the air in five minutes. It had done its job, and was now on its way to help another sick or injured person.\n\nThere were a lot of curious people wondering who the helicopter dropped off at their facility, and when they saw me they started to cheer and applaud.\n\nI must have had a smile a mile wide on my face, because I attempted to stand up and wave back at them.\n\nTammy Hopkins stood in front of me and said, \"What the hell do you think you're doing?\"\n\n\"Standing up.\"\n\nTammy replied, \"Nursing home.\"\n\n\"Yes ma'am.\"\n\nThis young woman could not intimidate a bird, but the look in her eye intimidated the hell out of me. She was not going to take any of my crap. Her job was to get me well, and that is what she was going to do along with her two cohorts.\n\n\"Doctor Luck, you have fifteen minutes before I have to give you your medication, make them count.\"\n\n\"Come with me Tammy, you will be the first civilian to see the inside of The Good Luck.\"\n\nThe agents strapped me in to the chair using bungee cords. I weighed 145 pounds and they carried me like I was a sack of potatoes. As I looked at the outside of the Good Luck, I could see the cameras. They were nearly flush against the exterior skin of the spacecraft. I marveled at Dycke Schneider's ingenuity, and that of his engineers. The skin of the spacecraft looked seamless. Unlike a baseball that has stitching, this was more like a steel ball bearing: it was perfectly round and uniform. It would change when we put the ears on it.\n\nThey carried me up the ramp directly to the second level. The cables were no longer strewn around the floor. They were all neatly bundled, marked, and locked along the walls in their flight positions. I couldn't believe what I missed in five months.\n\nThen they took me up to the third level, and I was transported to the future. The people from Sony had done themselves proud. The massive screen curved along the front wall of the spacecraft. It did not look like individual screens; it looked like one individual display. It was so big I didn't guess its' actual size.\n\nThe Exascale computer consoles were installed, as well as all the propulsion and navigation controls. I turned and saw Jennifer's command seat, with its two control panels stowed away and covered by thick plastic. It was then that I realized there was no seat in this area for me. I was superfluous. I was just the builder. I got dizzy, and I began to feel faint.\n\nI said, \"Get me out of here please.\"\n\nTammy noticed the change in my appearance. She jabbed me in my left arm with a needle containing my medication. As the agents reached the bottom of the ramp, I was unconscious.\n\nWhen I woke up, I wished I hadn't. She was glaring down at me, and I was sure she had the throwing knives in her hand.\n\n\"What the fuck were you thinking?\"\n\n\"I just wanted to see her.\"\n\n\"You did, and look where it got you. Your blood pressure fell through the floor. Tammy almost rushed you to the hospital because she thought you were bleeding inside. Thanks to the emergency kits we have at the hanger, she was able to stabilize you, by give you intravenous fluids, and iced you down. You scared the shit out of the entire staff. You're not allowed to go back there unless I am with you. Is that clear Doctor Luck?\"\n\n\"It is very clear Mrs. Luck. I believe I had a panic attack when I was on the third floor marveling at everything that was done. I looked at all the computer consoles, and in my mind I named everyone who would be sitting at them. Then I proudly looked at your chair, and the two control boards you would be master of.\n\nSuddenly I realized I was no longer needed. I was superfluous. I was just the builder. I could no longer contribute. My work was done. Everything I had accomplished was in the hands of someone else. That's when it happened. That's when I told the agents to get me out of there, and I felt the needle enter my arm.\"\n\n92. Visitation Rights\n\nMy children climbed all over me. Richard had tears in his eyes when he saw me. He believed everyone was lying to him about my being sick. He thought they were being kind, and preparing him for the shock of telling him I died. If he could've climbed inside me he would have. He lay down in my bed, held on to my arm, and would not leave me, not even for dinner.\n\nI promised him I would be here just like I was before I got sick. I was not going anywhere. I wanted him to eat his dinner so he didn't get sick.\n\nReluctantly, he went to the kitchen, inhaled his dinner, and returned to me.\n\nHolden was a different case entirely. \"Dad, you owe me so many stories I lost count. When can we start reading again?\"\n\n\"Are you busy now?\"\n\n\"I was just going to play chess with nurse Janice.\"\n\n\"When did you learn to play chess?\"\n\n\"I taught myself.\"\n\n\"That must've been very hard to do.\"\n\n\"No, not really, chess is just like math, and I love math.\"\n\n\"Since when do you love math?\"\n\n\"I always loved math. You were never around to see me work on it. You were always doing your science or working on the spacecraft.\"\n\n\"I'm sorry Holden, it is my fault. I am so wrapped up in getting my work done I left you and Richard to fend for yourselves. That was totally unfair of me.\"\n\n\"That's all right dad, Gordon has been helping us now that he comes home at 6 o'clock.\"\n\n\"You are all very special to me. I can't wait to see how you can help our new world when you all grow up. We are going to need very smart people like you to make everything work. My three sons will be instrumental in making the decisions which will make everything work properly. I am very proud of you all.\"\n\n\"Will you still read to me?\"\n\n\"Every time you ask me to, open your Kindle and we will read together just like the last time.\"\n\n\"I will tell nurse Janice, I'm not going to play chess with her tonight. I'm going to read with my dad.\"\n\n\"I don't think she will mind that at all my son. In fact I think she will be very pleased.\"\n\nI heard Gordon run into the house. \"Hi mom, bye mom, I'm going to see dad.\"\n\nI heard Jennifer laugh as he charged towards my room. He hugged me very carefully. I was expecting a warm greeting but I didn't get it.\n\n\"Don't you ever do anything that stupid again! Everyone in the building knew about it. They were ready to go to the N.E.S.T. to help you. Mister Zabo had to put security at the doors to keep them in the building. He went on the speaker system and advised us we would be hurting the situation, not helping it. He would keep everyone informed of your condition. He said if you didn't die because of this stunt of yours, he would personally go there and kill you himself, because the doctors ordered you to stay away from work.\"\n\nDad, from the sound of his voice, I'm telling you he meant it. He was downright angry with you.\"\n\nI heard the doorbell ring and a security agent opened the door. I heard her say, \"Good evening Mister Zabo; he's in his room, third door on the left.\"\n\nHe said, \"Tell the nurse to get some anesthetic, antiseptic, and bandages ready. I'm going to beat the shit out of that idiot.\"\n\nI heard Jennifer say to him, \"William please kill him. I couldn't stand another five months in the hospital with him. I'll tell the police he fell down the stairs to the basement.\"\n\n\"I would do it Jennifer if the spacecraft was finished. Unfortunately that husband of yours is needed for now. When you get him into space, have him walk the plank. He'll be the first man to walk into that void without a spacesuit on.\"\n\n\"William with my luck he will have invented something that would keep him alive.\"\n\nI heard William laugh. \"I want a piece of that patent. E-Mail it to me.\"\n\nJennifer laughed again. \"William, you are too funny.\"\n\nHe wasn't funny when I saw his face. Gordon got out of the way instantly. He knew trouble when he saw it.\n\n\"I came down here as a favor to you so you could fight the cancer that was in your body. From all the reports we've heard, you have done so successfully. What is the first thing you do when you come home; you try to kill yourself by going back to work against your doctor's orders. If you do that again, I'm going home, but not before I take my money's worth out of your hide.\n\nEven how could you think about going to see the spacecraft? It means too much to you. The memories you have of it are what sent you into a downward spiral that nearly kill you. Do you know what your death would have done to the emotions of the people who work on this project with and for you? You may have dealt them a blow they may never have recovered from. Your spaceship may never have gotten off the ground.\n\nEighteen months from now it will be completed. Twenty months from now, you and your crew can take off and leave planet Earth behind. Do you want to throw all that away? Do you want to give up eight years of your life because you can't wait that long?\n\nVery powerful people want you to fail. NASA wants you to fail. The entire federal bureaucracy wants you to fail. They want to prove that no private enterprise spending less than a third of what they spend to send a man circling around this planet can send a spaceship on a trip to the stars.\n\nTwenty private investors want to prove them wrong. 60 to 70 intrepid travelers want to prove them wrong. A spaceship designed by you, in a shape everybody says is wrong and can never penetrate Earth's atmosphere must be proven wrong.\n\nEverything about this spacecraft is new and exciting. You promised us 500 patents, and we have already passed that point with eighteen months to go. You have made your investors wealthier than they were before this project started. Don't die on us Even. Be smart, live long enough to reach your dream of landing on another planet successfully and starting a new Earth.\"\n\n\"William how many times do I have to tell you that you are the smartest person I have ever known? Everything you say, and everything you do is correct. Your logic is flawless. Sometimes mine is flawed. I thought seeing her would help me get well, and all it did was drag me down. I will finish her but when the time is right, and not one minute before. I promised Jennifer, and now I'm promising you, I will not step foot onto either of our properties until I am completely healed. Jennifer will be at my side when I do that. She will be my permission slip to go back to work. I promise you this, my friend, I will not put my life in jeopardy ever again.\"",
        "\"Your word is good enough for me Even, it always has been. Is there anything you need or want while you recuperate?\"\n\n\"I want a two inch steak, baked potato, asparagus with hollandaise sauce, and a large cup of coffee. Of course I'm not allowed to have any of those things for a long time, but I can dream about them.\"\n\n\"I'll go you one better Even. I'll have a graphic artist make a poster of them, and you can hang it on the wall facing you.\"\n\n\"You are a dear friend William, I'll be salivating all day while they feed me liquids and baby food.\"\n\n\"What are friends for if they can torture you in your hour of need?\"\n\n\"You are too kind William.\"\n\n\"I'll stop by on the weekend to see how you're doing.\"\n\n\"I look forward to it.\"\n\nFive minutes after William left, the whirlwind that is my daughter blew in the front door. Jennifer was there to cool her off before she got to me.\n\n\"Did You Kill Him?\"\n\n\"Why, did he do something wrong?\"\n\n\"Are you kidding me, he nearly died today.\"\n\n\"That's right, why should I go to jail if he's going to do it himself.\"\n\n\"Mom, you're not being funny. You have to reel him in.\"\n\n\"Do you think three hours after the incident I haven't done that already?\"\n\n\"Why are you doing this to me?\"\n\n\"I don't want you to go into your father's room and upset him. His nurses have been all over him, I've been all over him, Williams Zabo has been all over him, and his young children have been all over him. None of them can do to him what you can do to him, because you are the child of his heart. You can tell him how upset you are with him, but don't cut his heart out. He has the best one you will ever find.\"\n\n\"Mom, I hate being scolded before I do anything wrong, but thank you because I feel like Gordon does. I wouldn't know what to do without him, and neither would Gray.\"\n\n\"Your dad is the glue that holds all of us together. Not just our family, but look at the friends he has that hold him so dearly. Look how many scientists called you to get information about him when he was lost in Alaska. He is not only loved by us but by the community he is a part of. He would be sorely missed.\"\n\n\"I think I'll go say hello, before I start to cry.\"\n\n\"If you cry, he will laugh at you, and then you'll get angry with him.\"\n\n\"I'll try to keep myself under control.\"\n\n**********************\n\nDid I ever make a mistake when I hired these nurses. They were like prison guards; they didn't let me get away with anything. Tammy had that look that kept me in place.\n\nJanice was pretty as a picture, and as strong like an ox. I didn't dare do anything to upset her.\n\nHannah was the oldest one, and she was sneaky mean. She was fifty-eight, and could retire, but wanted to continue nursing as a way of giving back to the community. She took this job because she wanted to see the spacecraft up close and personal.\n\nIf I did anything to Hannah that got her pissed off at me, nothing happened immediately. I would forget about it; she wouldn't. Sometime during her shift she would be checking on me, or giving me medication, and an eight-inch hatpin would penetrate my covers and enter my leg. I would scream out in pain, and Hannah would say is, \"Your lungs are sounding better,\" as she left the room.\n\nIt wasn't fair, every time I screamed, Jennifer, and the agents guarding me laughed. I was in pain, and they thought it was funny. I didn't think it was funny at all. I would get even in my own way after they got me well.\n\n**********************\n\n\"Dad I split the $1.25 billion between five of your German accounts. Mister Silver and Mister Pierce have $1000 remaining in that account, just to keep it open.\"\n\n\"Where does it show the money went to Patricia?\"\n\n\"It shows it went to the three trading companies that deal with them on a continuing basis as payments for goods and services. It's not my fault the money got lost in the transfer.\"\n\n\"Are you telling me that money fell into a black hole and can't be found?\"\n\n\"I can find it, you can find it, but they can't find it. What a shame.\"\n\n\"How many days will they be in the dark about this?\"\n\nIf they don't make any transactions, ten days, if they do, you will hear about an earthquake in Southern California caused by screaming.\"\n\n\"My source, at the Justice Department, tells me many of the crimes the former vice president committed have already passed the statute of limitations. He will be hard to prosecute.\"\n\n\"We can't let him go free dad. He will be a constant danger to all of us.\"\n\n\"I agree Patricia, but let's see how he reacts to being penniless, and we will go from there.\"\n\n*****************\n\n93. It's D\u00e9j\u00e0 Vu, all over again! (Yogi Berra: N.Y. Yankees)\n\nGordon was walking up from the basement after working out when the front doorbell rang.\n\nHe yelled out, \"I have it.\"\n\nHe opened the door and a tall, dark haired beauty was staring back at him. He didn't notice what she was wearing; he was focused on her face.\n\n\"My God you are beautiful.\"\n\nShe smiled at him, and blushed.\n\nPayne Schneider moved Zoie aside, and asked Gordon, \"What did you say to my daughter?\"\n\n\"I said she was beautiful.\"\n\n\"No Gordon, I want to know exactly what you said to my daughter.\"\n\n\"I said, 'My God you are beautiful.'\n\nPayne turned to her husband and asked, \"Dycke, how much trouble do you think were in?\"\n\n\"I think we should call Father Vincent; and see when he's available.\"\n\n\"You think it's going to be that bad.\"\n\n\"How many years has it been since you've heard those exact words?\"\n\n\"It's been twenty-seven years since you said those words to me.\"\n\n\"Look at your daughter and look at Gordon. What do you see?\"\n\n\"I seek two beautiful children.\"\n\n\"Do you know what I see; I see us twenty-seven years ago. Take her hand and don't let her go. Otherwise she'll have her legs around him before we leave.\"\n\n\"Isn't that what you did with me shortly after we met?\"\n\n\"This is different, she's my daughter.\"\n\n\"You're wrong, she's our daughter, and if wasn't for Even we would be here alone.\"\n\n\"Don't get logical with me now; keep Zoie by your side.\"\n\n\"Can we go inside now?\"\n\nThey walked into the house, but Gordon took things into his own hands.\n\n\"Your dad never mentioned he had such a beautiful daughter.\"\n\n\"If he ever talked about me he would refer to me as that bitch at home, or the neat freak, or some other term of endearment.\"\n\n\"What's the matter with being neat?\"\n\n\"I was excessively neat, actually I was compulsively neat. Things had to be exactly where I wanted them or I would go out of my mind. I couldn't stand anyone being in my room and messing things up. I hated track marks on my carpet. I hated where the door touched my carpet and left its mark when it was opened and closed. I guess I hated a lot of things until the last few months.\"\n\n\"Would you like to come to my room and talk, or do you want to go down the basement and talk there?\"\n\n\"We better go down to the basement. The first place my father will look for me if I'm missing is in your room. He will have a fit if I'm in there alone with you, even if we are just talking.\"\n\n\"What does he think you're going to be doing?\"\n\n\"A short time ago my parents put me on birth control pills to help my mood swings. They have helped me a lot. Now I think my father believes he has given me a permission slip to go out and have sex. He doesn't understand that it takes more than being safe from having a baby than to have sex with someone. I don't know what it was like in his day, or what the mores were back then, but I am not going to have sex until I'm in love with someone, and I'm sure he's in love with me.\"\n\n\"Why are you smiling Gordon?\"\n\n\"I'm having a conversation with a girl. This is the first time I've ever had a chance to talk to a girl my age, and we are talking about sex. I've dreamed about it, I've thought about it, but I have never had the opportunity to talk with a girl about it. It seems so natural. I've never met a girl my own age, or seen one until I met you.\"\n\n\"What about at school you must meet plenty of girls at school.\"\n\n\"I don't go to school. I tested out of high school when I was nine years old. I've been working on the spacecraft since then.\"\n\n\"What could you possibly be doing on the spacecraft?\"\n\n\"I finished uploading the latest star charts, and when we take off, I will be doing the celestial navigation.\"\n\n\"Oh, you're one of those whiz kids.\"\n\n\"Yes, math and science come very easy to me. Doctor Luck adopted me. My sperm donor left my mom when he found out she was pregnant. My mom is awesome you will like her.\"\n\n\"Do they pay you for working on the spacecraft; the child labor laws say they are supposed to pay you.\"\n\n\"Yes, my dad pays me, but it's not going to do me any good. What am I going to do with money when I leave this planet?\"\n\n\"He's probably not paying you that much anyhow, so leave it to a charity.\"\n\n\"I've been working on this project for seven years. My dad has been paying me $500,000 a year since then. I don't know how much is left in the bank after taxes, because Rod takes care of that for me. If you have a particular charity in mind, I can tell Rod who to give it to when I leave.\"\n\n\"You get $500,000 a year?\"\n\n\"Yes, I get paid just like most of the senior scientists.\"\n\n\"You are considered a senior scientist?\"\n\n\"I have several patents to my name and I was interviewed on television last year because of an invention I made.\"\n\n\"That was you? You were the talk of our school. You are the boy wonder scientist who made it possible to use nuclear fusion commercially.\"\n\n\"Yes, that's me.\"\n\n\"Then why are you leaving the earth to go to someplace nobody knows if you can survive on?\"\n\n\"That is the question isn't it. Why do people go to far off places to find new things? Why did Marco Polo go to China? Why did Columbus sail to the West? Why did Magellan round the tip of South America and sail into the Pacific Ocean? Why does anyone do anything before someone else?\n\nThe answer is very simple, someone has to go first. My father and my sister had a dream. We talked about it, and found twenty investors that believed it was possible. Our spacecraft is being built in a hanger 10.2 miles away from here. If you'd like to see it I'll get cleaned up and I'll have my agents take us over there.\"\n\n\"I would like to see it.\"\n\n\"I'll be ready to go fifteen minutes.\"\n\nGordon popped up from the mats and extended his hand to help Zoie up. She took it and a little charge of electricity passed between them. They looked at each other and smiled.\n\nGordon said, \"That's a first for me.\"\n\nZoie grinned, \"For me too.\"\n\n\"I liked it, very much.\"\n\n\"I think I like you. You are different than every other boy I've ever met.\"\n\n\"Why do you say that? As beautiful as you are, they must all flock around you.\"\n\n\"Yes they do, but none of them look at me like you do. Close your eyes, I bet you can't tell me what I'm wearing.\"\n\n\"I don't have to close my eyes, because you're right. I don't know what you're wearing. Your face is so beautiful I never took my eyes off it.\n\nMy friend, my agent, and my trainer Marty and I ran to work this week. It's more than ten miles. The first day she told me to visualize a girl wearing a bikini running in front of me. I couldn't visualize it. I never saw a girl my age, no less one wearing a bikini.\n\nMy sister is beautiful, but she is twenty-five. She is also a genius; she developed the engines for our spacecraft. She is the youngest woman I work with on the spacecraft. It would be inappropriate of me to visualize her rear end in a bikini. Let me get changed so we can see the spacecraft.\"\n\nGordon took the quickest shower in his life, ran into his room half-naked, changed into casual clothes, and ran to meet Zoie. She was standing next to her mother, and she didn't look happy.\n\n\"Young man, where do you think you are taking my daughter?\"\n\n\"I am taking her to see the spacecraft.\"\n\n\"She is not leaving this house.\"\n\n\"Marty would you come here for a second.\"\n\n\"Yes Gordon, how can I help you?\"\n\n\"Would you please tell Mrs. Schneider that you are accompanying Zoie and me to the spacecraft to look around.\"\n\nPayne looked at the giant wall that is Marty, and stuttered. \"Would you please have them back in two hours?\"\n\n\"It will not be a problem Mrs. Schneider. There will be four of us protecting them.\"\n\n\"Thank you very much. Zoie please don't fall and break your neck.\"\n\n\"Gordon will be holding my hand mother. I'm sure he will keep me from falling.\"\n\nPayne wanted to say something so desperately, but Marty was standing behind them, smiling at her. \"Have a good time children. Don't do anything I wouldn't do.\"\n\n\"I remember the stories you told me about you and dad mother. I won't go that far.\"\n\nPayne turned bright red, and retreated to find her husband.\n\n\"Let's get out of here before your father hears where leaving.\"\n\nAs they entered the SUVs Marty said, \"That was a smooth move Gordon. I'm proud of you.\"\n\nZoie said, \"Hello Marty, when Gordon mentioned your name, I thought you were a man.\"\n\n\"Most people do little one, and most people live to regret it.\"\n\n\"Let's go people were on the move.\"\n\nBy the time Dycke got to the front door two black SUVs rolling away from the house.\n\n\"Payne, how could you let her go with him?\"\n\n\"You didn't meet Marty.\"\n\nJennifer laughed. Dycke didn't.\n\n\"Jen, she just turned into a normal human being. I don't want her getting into trouble.\"\n\n\"Dycke do you see this wall; that is Marty. Zoie has as much chance of getting into trouble as you do.\"\n\nPayne said, \"He's not taking me out of school on a Tuesday morning Mister Schneider.\"\n\n\"He better not be, or that young man and I are going to have a long talk.\"\n\nJen said, \"I hope you're up to date on your martial arts; otherwise that young man is going to kick your ass. Marty has been training him for the last year, and some of our agents are having problems beating him.\"\n\n\"I'm getting too old for some of that shit. How old is he now?\"\n\n\"He will be sixteen on the thirtieth of this month.\"\n\n\"What is the legal age for getting married in Texas?\"\n\n\"I think it's eleven; why do you ask?\"\n\n\"When Gordon saw Zoie for the first time, he said the exact words I said to Payne when I first saw her twenty-seven years ago. If that's not a bad omen, I don't know what is.\"\n\nPayne hit him. \"Why is it a bad omen? Look what happened to us?\"\n\n\"Yes, look what happened to us. Your mother freaked out and nearly tore us apart. If it wasn't for our fathers, you and I would never have gotten married.\"\n\n\"It all worked out in the end. Everyone turned out happy.\"\n\n\"Everyone but Steve; I pay him more money than God, and Cynthia still beats the shit out of him.\"\n\n\"She's only making him pay for his past indiscretions. I believe when he's ninety she will start treating him nice.\"\n\n\"I still don't understand how a woman five foot nothing can beat up a man that is five foot eleven.\"\n\n\"He loves her, and he would do anything in this world for her.\"\n\n\"I love you, but if you beat me up like she beats him up, you would be hanging from the ceiling upside down.\"\n\n\"Yes I would, but you would be feasting on my pussy at the same time.\"\n\n\"Why didn't I think of that before, it sounds like fun.\"\n\n*****************\n\n\"Good afternoon Marty, what's up?\"\n\n\"Is there anyone in the spacecraft?\"\n\n\"Nope, it's Sunday, everyone is at home resting.\"\n\n\"Gordon set your watch. You have one hour and fifteen minutes until you exit the spacecraft. One hour and sixteen minutes and you go into the ice bath headfirst.\"\n\n\"Thanks Marty; come with me Zoie for a trip into the twenty-second century.\"\n\nThey held hands as they walked up the ramp. He began explaining everything to her: the millions of pounds of water that would protect them from the radiation of space, between the first and second wall, the hundreds of millions of bearings made by her father's company' which would spin at a constant speed of three point two degrees per second to give the third level artificial gravity so no one would go floating around.\n\nWhen they reached the third level, and he started to explain the computers to Zoie she begged him to stop.\n\n\"Gordon, there is only so much information a normal human being can take in at one time. My mind has just reached overload. Can we do something normal for a little while?\"\n\n\"I'm sorry Zoie, all of this comes so easy to me, I forgot about you. What would you like to do?\"\n\n\"I'd like to do something I've never done before.\"\n\n\"What is that?\"\n\n\"I'd like to be kissed by a boy.\"\n\n\"I would love to kiss you, but I don't want you to be disappointed in me. So far the only women I have ever kissed are my mother and my sister. You will be the first girl my age; I've ever touched or kissed.\"\n\nShe put her hands on his shoulders. He put his hands on her hips. They drew each other closer. As they looked into each other's eyes their heads got closer, and their lips touched. They did not back off. Zoie and Gordon closed their eyes and pressed their lips tighter together. After a moment they began to move apart, and a little spark of electricity passed between them, again.\n\nGordon chuckled. Zoie was confused. She said,\" I thought it was amazing. Why are you laughing?\"\n\nHe pulled her back to him and said, \"I thought it was much more than amazing. I don't ever want to do that with anyone else for the rest of my life. The reason I was laughing is if we keep setting off electric sparks every time we kiss, or we touch, we better start wearing rubber soul shoes. Otherwise we're going to start a fire.\"\n\nZoe smiled. \"Let's take off our shoes and see if we spark in our bare feet.\"\n\nIn their bare feet they kissed again. It was more passionate than the first time, and when their lips parted the spark exploded more brightly.\n\nThey were still smiling and holding each other, when a voice said, \"Fuck, the ship is supposed to be empty today.\"\n\nGordon said, \"Who the hell you?\"\n\n\"Don't worry boy, you'll never live to find out.\"\n\nZoie grabbed Gordon's arm in fright.\n\n\"Zoie, behind the computers is a radio. Push the switch, and tell Marty were on the third floor, and we need help. Move now.\"\n\n\"Help won't come in time for either of you boy. You will both be dead, and I will be gone.\"\n\nThe man charged. Gordon took up his position planting his right foot firmly on the ground. The man was taller, broader at the shoulder, and stronger looking than he was. He knew he had to get it right the first time, or Zoie was in trouble.\n\nThe man hit him in the center of his chest. Gordon's body swung like a gate. He pulled the man's left arm as he passed him, moved it behind his back, and pressed it up towards his head. He swung his right foot, kicking the man's leg out, while forcing his head towards the floor. It hit with a loud thud.\n\nUsing all his strength Gordon hit the man between his neck and shoulder, and it was over. The man slumped to the floor, unconscious.\n\nGordon looked at Zoie and asked if she had contacted Marty?\n\n\"Yes, she is on her way.\"\n\nMarty and several other agents were there within seconds. She surveyed the scene and looked at her prot\u00e9g\u00e9.\n\n\"Why the heck did you call me; you have everything under control?\"\n\n\"I had a feeling you might like to talk to this gentleman. He's not one of ours. He was on the ship when he wasn't supposed to be. He threatened Zoie and me with death, which means he was up to no good. We're going to have to check everything to find out what he did, unless of course you can convince him using other methods.\"\n\n\"I'll call Dan and see what he wants me to do with this person. Can I ask you a question?\"\n\n\"Have I ever said no to you?\"\n\n\"Were you two in the process of getting dressed, or getting undressed. Your shoes are on the floor.\"",
        "\"That is a very personal question, and the answer is we were doing an experiment on electrical conductivity. It seems every time we touch we create a spark. That could be dangerous if we were around flammable materials. That's when this gentleman decided to interrupt that experiment.\"\n\n\"Would you perform that experiment for me please?\"\n\n\"Yes we will, after everyone else is gone.\"\n\n\"Put plastic ties on this person, and bring him to the main building. Call the general and tell him what we have.\"\n\n\"Okay you two, I am going to be a discreet distance away to make sure no one else interrupts your experiment. Have fun.\"\n\n\"For a nerd Gordon, you fight pretty well.\"\n\n\"Every night when I get home from work I practice for an hour with Marty and Janet on my martial arts. I'm not good yet, but I'll get there. It will just take me a little time. Can I kiss you again?\"\n\n\"Since you just saved my life, I think you deserve a kiss.\"\n\nGordon put his hands on Zoie's hips and he began to talk.\n\n\"There is one thing you should know about me. I never lie, never. I know we just met Zoie, possibly not even an hour ago, but I'm in love with you. You don't have to say anything. You can laugh if you want to, but my heart is telling me that you and I belong together.\"\n\nZoe smiled. \"What took you so long Gordon? I knew it the moment I set eyes on you. I don't go around kissing boys I just met. I wanted to kiss you seconds after you open the door. Do you know what I'm wearing yet?\"\n\n\"I'd better become more observant around you. I understand men are supposed to complement women on what they are wearing. I'll kiss you; then I promise I'll look at what you're wearing and tell you how wonderful you look in it.\"\n\nZoie's hands ran across his neck and the hair at the back of his head. Gordon's ran his hands gently up her back. When they parted the electrical spark could be seen and heard.\n\nFrom the distance Marty said, \"You two are going to be dangerous together.\"\n\n\"Marty, how much time do we have?\"\n\n\"We have about forty minutes. What's on that evil mind of yours?\"\n\n\"Let's run into town, I want to buy some ice.\"\n\n\"You have ice at home.\"\n\n\"That's not the ice I'm talking about.\"\n\n\"Oh, I told you that you two were trouble. Let's move; her mother wanted her home in two hours.\"\n\n\"We will call her in a little while and tell her we won't make it because of the little ruckus we had here. We are surrounded by agents and no longer inside the spacecraft. I'm sure she'll understand and approve.\"\n\n\"You're getting like your father, sneaky and crazy.\"\n\n\"Thank you Marty, that's the highest compliment you could ever pay me.\"\n\n\"Where are we going Gordon?\"\n\n\"We are going into beautiful downtown Temple. I'm going to buy you ice, and ice cream.\"\n\n\"Why are you buying me ice?\"\n\n\"I am buying you ice, because I have a question to ask you.\"\n\n\"Why can't you ask it now?\"\n\n\"You will understand when I hand you the ice.\"\n\nThey drove into town and stopped in front of a jewelry store. Marty and three agents got out and opened the door for them.\n\nGordon got out and held his hand out for Zoie. She looked up and down the street for an ice cream store and didn't see one.\n\n\"Where is it Gordon, I don't see an ice cream store?\"\n\n\"I told you we were going for 'Ice' first remember?\"\n\n\"Yes, but I don't understand why we're buying ice?\"\n\n\"I told you I had to ask you a question.\"\n\n\"You're confusing me.\"\n\n\"Kiss me, and you won't be confused anymore.\"\n\nZoie kissed him and after the spark died away he pointed to the jewelry store.\n\n\"My father will kill both of us.\"\n\n\"No he won't, not with Marty standing with us.\"\n\nZoie turned, looked at Marty, and saw her smiling.\n\nGordon whispered to her, \"Marty never smiles.\"\n\nMarty walked into the diamond store first, and the alarms went off. The guard was an old man who came running out of the back wondering what was going on.\n\n\"Sit down before you have a heart attack. We are all carrying weapons, but they are to guard this boy and girl.\"\n\n\"Oh, thank goodness, okay.\"\n\nThe owner came out from hiding and asked Marty what he could do for her.\n\n\"Speak to the young man, he's the multimillionaire.\"\n\n\"We'd like to see some loose 2 to 3 carat flawless diamonds please. Something that will not overpower her finger.\"\n\n\"I won't know what I am looking at Marty would you help me with this please?\"\n\n\"It's very simple. Gordon look through the jeweler's loop, and everything should be clear. If it's not it's a flaw. The more flaws you see the cheaper the stone. A perfect stone runs about $22,000 per carat. One flaw in that stone will bring it down to about $17,000 a carat. Two will bring it down to about 12,000.\"\n\nThe owner brought out a box of stones displayed on black velvet.\n\nZoie's eyes were frozen to the glittering gems.\n\nGordon whispered, \"You can have them all if you want, but you can't wear them all at one time.\"\n\n\"Zoie will you marry me?\"\n\n\"Yes, Gordon, I will marry you, if we both alive tonight.\"\n\n\"Then pick a stone so this gentleman can make you a ring.\"\n\nShe picked a princess cut diamond of a little more than three carats, with a very petite setting. Gordon told the owner he had thirty minutes to get it set to leave the store. The owner said it was impossible because he had other work to finish. Gordon asked him how much the ring cost including the Gemological Association guarantee taxes and insurance.\n\nAfter adding it all together the owner said it would be $36,680.\n\nGordon told him if they were out of the store in thirty minutes he would pay him $50,000 for the ring.\n\nThe owner moved so fast he almost forgot to take the tray of diamonds with him.\n\nGordon said, \"I think it's time to call Mister Laver and tell him I'm about to spend some of my money.\"\n\nZoie's phone rang, and it was her father calling.\n\n\"Hi dad, what's up?\"\n\n\"Why aren't you home? Your two hours is up.\"\n\n\"I'll let Marty explain to you what happened.\"\n\n\"Hello Mr. Schneider, Gordon, and Zoie were in the spacecraft when they were accosted by an unknown gentleman. Gordon took him down without any problem, so he was never in any danger. We had to wait for instructions from General Morgan to see what to do with the intruder. We also had to do a sweep of the entire spacecraft to make sure no one else was on board. While we were doing that Zoie and Gordon were kept outside under guard. It did not seem fair to bring them home early before she was able to see anything inside the craft. We should be about another forty minutes before we are home.\"\n\n\"Were they alone when they were accosted?\"\n\n\"Of course not, there were several agents nearby, but the man charged at Gordon. Gordon used the techniques I have been training him to use, and the men didn't stand a chance. It was all over and five seconds.\"\n\n\"The boy is that good?\"\n\n\"No sir, he's better than that.\"\n\n\"Oh, alright we will see you when you get back here.\"\n\n\"Thank you sir.\"\n\nMarty handed the phone back to Zoie, and Zoie hugged her. \"Thank you so much, but don't give him a swelled head.\"\n\n\"Every time that young man gets a swelled head, he goes into an ice bath.\"\n\n\"That sounds cold.\"\n\n\"The ice bath isn't cold, is it Gordon?\"\n\n\"No Marty, it's quite refreshing.\"\n\nZoie looked at him and asked, \"I thought you never lied?\"\n\n\"When Marty tells me something, it's true. It doesn't matter what my body says, it doesn't matter what the history books say. The only thing that matters is what Marty says. If she says the ice bath is refreshing, then the ice bath is refreshing.\"\n\n\"I think I'm going to like Marty.\"\n\n\"I already do. She is my best friend, and my North Star.\"\n\n\"Mister Laver is on the phone for you Gordon.\"\n\n\"Hello Mister Laver, I'm going to be spending some of my money today.\"\n\n\"Why don't you just come over to the house, and I'll give you a check.\"\n\n\"I don't think they'll take a check from someone without a driver's license for this amount of money.\"\n\n\"How much money are we talking about Gordon?\"\n\n\"It all depends on the speed of the man who's working on it. It's going to be someplace between $37,000 and $50,000.\"\n\n\"What are you buying a car?\"\n\n\"No something that will last much longer than a car. I'm gaining a wife.\"\n\n\"You're gaining a what?\"\n\n\"I've met the girl of my dreams, and I've asked her to marry me. She said yes, and I'm buying her a ring. It's being made at this moment and you will pay for it when the owner of the store comes to the phone.\"\n\n\"I will do no such thing Gordon.\"\n\n\"Is the money in my name?\"\n\n\"Yes it is.\"\n\n\"Do you pay taxes in my name every year?\"\n\n\"Yes I do.\"\n\n\"Do I pay you a yearly fee for those services?\"\n\n\"Yes you do.\"\n\n\"Rod, if you don't pay this bill I will sue you for every penny you have or will have for the rest of your life.\"\n\n\"I am a very good lawyer.\"\n\n\"My father has told me you are the best lawyer he has ever known. I guarantee you I can find lawyers that are your equal or you're better when I have a case this strong against you, and you know it. Let's not get angry with each other; please pay this bill.\"\n\n\"Put the owner on, and I will take care of everything.\"\n\n\"Rod how much do weddings cost?\"\n\n\"Do your parents know about this; do her parents know about this?\"\n\n\"No, and no again.\"\n\n\"Then this will be a very inexpensive wedding, because you'll both be dead.\"\n\n\"You really think it will be that bad?\"\n\n\"If your father was healthy you would be okay. He could handle your mother. He's not so your mother will go on a rampage. Who's the lucky lady?\"\n\n\"Zoie Schneider.\"\n\n\"Run, run far, and keep running, if Dycke catches you he will murder you.\"\n\n\"I think I'll keep Marty between Mister Schneider and us.\"\n\n\"Is she going to go with you into space?\"\n\n\"I forgot to ask her.\"\n\n\"Do you think now would be a good time to ask her?\"\n\n\"Yes, hold on a minute.\"\n\n\"Zoie are you going to be willing to go into space with me?\"\n\n\"Of course, you idiot; every good man needs a better woman behind him.\"\n\n\"Rod, she just called me an idiot.\"\n\n\"Get used to it junior; it's one of the nicer things she's going to say to you as you grow older together.\"\n\n*************\n\n\"Here is your ring pretty lady.\"\n\nGordon took it from his hand, looked in Zoie's eyes, and smiled a million megawatts smile.\n\n\"To the future Mrs. Zoie Luck, may we always be as happy as we are at this moment.\" He slipped the ring on her finger, and tears fell from her eyes.\n\nGordon kissed them away. \"No tears until our parents start yelling at us. Then we will tell them we are eloping. I have enough money in the bank to last us a very long time, plus I have a job and they need me to do it.\"\n\nThey kissed, and sparked, before Gordon said, \"Marty, were ready to face the music.\"\n\n\"Good man Gordon, chin up, chest out, and don't back down. She belongs to you, and you belonged to her. You are perfect for one another. I've seen it, and I'm sure of it. Who else sets off sparks when they kiss.\"\n\n****************\n\nNewton said, \"Mom, grandma says we have to go over to grandpa's house.\"\n\n\"I'm just about to start dinner Newton, what's so important over at grandpas, he has company.\"\n\n\"Grandma said, \"You, daddy, and I have to go to grandpa's house. She didn't tell me why.\"\n\n\"Gray, we're going to my dad's house.\"\n\n\"Okay, I'll see you later.\"\n\n\"You're coming too dummy.\"\n\n\"I'm in the middle of reading Playboy, and you're interrupting me?\"\n\n\"You can't keep up with me, and you expect to keep up with one of them?\"\n\n\"I could die trying.\"\n\n\"You're absolutely right, you could die.\"\n\n\"What's happening over at your dad's house?\"\n\n\"Newton says we have to go there, so were going. It's not that far.\"\n\n\"I counted it. It's 119 steps.\"\n\n\"Only a decrepit scientist would do that. He has to keep his minds active or it will turn off permanently.\"\n\n****************\n\nHello everyone, we've come to liven up the party.\n\nPayne said, \"Delicious, you finally have a belly.\"\n\n\"Yes I do. It took my husband hours and hours to find it last week. It was very pleasurable.\"\n\n\"I'm sure it was. How is everything going with the pregnancy?\"\n\n\"The doctor says everything is right where it's supposed to be, and this one is going to be a girl.\"\n\n\"Oh how wonderful, a boy and a girl, a perfect family.\"\n\nDycke said, \"As long as the girl doesn't turn out like Zoie.\"\n\n\"Zoe has finally grown out of it; she just had a rough start. She's wonderful now.\"\n\n\"Yes she is, I'll give her that much. Aren't they supposed to be back now?\"\n\nJennifer yelled, \"Yes, they are driving up now.\"\n\nNewt said, \"Mom, grandma says to get all the adults into grandpa's room, NOW.\"\n\n\"How the heck am I supposed to do that?\"\n\n\"Get grandma Jennifer to help you.\"\n\n\"Mom, I have no idea what's going on, but Newton says grandma wants all the adults in the room with dad, now.\"\n\n\"Oh shit, it's the kids. Payne and Dycke were talking about how similar their relationship was when they were young. Put the knives and guns away, if there's an atomic bomb in the house hide it. Get Gray, I'll do the dirty work.\"\n\n\"Okay, I'll keep the mace on me.\"\n\n\"Payne, Dycke, let's go bother that old man of mine.\"\n\n\"Zoie just got home, and I want to talk to her.\"\n\n\"She's home, and not going anywhere. You can talk to her later. Come on, let's rattle Even's chain.\"\n\n***********\n\nGordon stuck his head inside the front door, looked around, and didn't see anyone. \"Where did everyone go?\"\n\nNewton walked out of the kitchen. \"There in grandpa's bedroom. Grandma wanted them all in one place so you could tell everyone at the same time. She says congratulations, and you will have a long and happy life together. Don't worry about your father Zoie, he's a pussycat.\"\n\n\"Who is he Gordon?\"\n\n\"Zoie meet Newton. He is an extraordinary young man. Besides being brilliant, he also has a direct line to my dad's sister. She died many years ago. He's not crazy; everything he says comes directly from her. He told his mother she was pregnant, before she knew she was pregnant. He is absolutely wonderful.\"\n\nZoie reached out her hand to shake Newton's hand.\n\nHe asked her, \"Are you going to shock me too?\"\n\n\"How did you know about that Newton?\"\n\n\"Grandma told me every time you two kiss a spark of electricity passes between you. She says it's a good thing. You have to go in to see your parents now.\"\n\n\"Thank you Newton.\"\n\n\"You're welcome Zoie.\"\n\nGordon was holding Zoie's hand while they walked to his father's bedroom. He thought of the great way to introduce her to him.\n\nWhen they entered the room they said hello to everyone, and walked over to his dads' bed. He bent over, kissed him, and said, \"Dad, it is my pleasure to present you to miss Zoie Schneider, my fianc\u00e9.\"\n\nEven smiled at his son, and although the room was in an uproar because Dycke was screaming like a lunatic, Even took Zoie's hand and kissed it.\n\n\"He has waited a long time to meet someone as special as you my dear. I can only wish you are as happy with him as I am with his mother.\"\n\nSo his eyes flooded with tears. \"Thank you Doctor Luck, I think I am the lucky one. He has already saved my life today, and has given me his for the rest of our lives. I look forward to the adventure that lies ahead for us. Now I have to face my father, and this should be interesting.\"\n\n\"Your father is a pussycat. Give him a big kiss and tell him to calm down and it will be all over. Your ring is beautiful, how did you talk Rod into paying for it?\"\n\n\"I use logic, then I threatened to sue him, and then I use logic again.\"\n\n\"Logic works all the time.\"\n\n\"Come with me Zoie and let's see if my father's advice works.\"\n\nThe two of them walked hand-in-hand, brazenly by the women in the room, straight up to Dycke Schneider. When they stood before the tyrant, Zoie put her arms around his neck, and kissed him. She asked, \"Will you give me away at my wedding?\"\n\nHe was toast. Daddy's little girl had him wrapped around her little finger. All the years of angst and anger vanished in one kiss, and one question.\n\n\"Who else were you going to ask, your brothers?\"\n\n\"No, I knew they would turn me down.\"\n\n\"Have you discussed when you want to get married?\"\n\n\"This has been very quick dad. We know we are right for one another, just like you and mom knew you were right for each other. I will be going home with you, and Gordon will be staying here. We will discuss, and either I will come here on break, or he will come to us. The one thing you should know is I will be leaving with him when the spaceship leaves. I will not be here to pick on you anymore.\"\n\n\"That last line wasn't funny. You have finally turned into a wonderful young woman, and now we are going to lose you. I don't see the fairness to that.\"\n\n\"You should have put me on birth control pills when I was eight.\"\n\n\"Who knew they were going to be the answer to all your problems?\"\n\n\"I certainly didn't. I wasn't interested in boys until I met Gordon. I had to ask him three times what I was wearing until he noticed. All he kept looking at was my face. I've never known anyone like that. Most boys look at your chest first and work their way up, not him. I love him dad, we are electric together.\"\n\n\"I think you better talk to your mother now. I hope your clothes are drip-dry. Tears are going to be shed the likes of which you have never known.\"\n\n*************************\n\n\"THE MONEY, IT'S GONE!\"\n\n\"What are you talking about Jim, what money is gone?\"\n\n\"Our money, all of it, it's gone. I made a deposit into our account, as I do twice a month, and when I got our receipt back it showed the $19,000 I deposited, plus $1000 that was in the account. $1.2 billion is missing, and I didn't take it. I am the only signatory on that account. Where did the fucking money go?\"\n\nTHE END\n\nChapter 19\n\nTHERE MUST BE A MISTAKE\n\nby\n\nProlonged_Debut10\n\nNote: I am going to try to get one more chapter in before the holidays. It normally takes me two weeks to complete a chapter, so don't be too disappointed if you don't see it until after the first of the year. I wish all of you a very happy holiday season, and a healthy, happy, and prosperous 2015. PD10\n\n12/15/2014"
    ],
    "authorname": "Prolonged_Debut10",
    "tags": [
        "dialogue",
        "romance",
        "18-year-old",
        "parental angst"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/there-must-be-a-mistake-ch-19"
}