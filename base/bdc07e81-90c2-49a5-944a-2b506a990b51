{
    "title": "Becoming Jon Ch. 02",
    "pages": [
        "All persons engaged in sexual activity in this story, are over 18 years of age.\n\nParts of this story are true, and the rest has been embellished to hopefully provide a readable narrative. It is a slow build up story, so if you are looking for quick sex in the second paragraph, that is not my style and you would do better reading something else. To understand what the story is about, it would be useful to read Part One. Otherwise, enjoy.\n\n*******************************\n\nPart two\n\nSince our dinner last Saturday evening, I had been thinking a lot about how I had touched and stroked Sophie's sexy body; how I had held her breasts in my hands and given her an orgasm simply by stroking them and pulling on her nipples. I hadn't realised that perhaps Sophie and Jon had had much more of a varied sex life than I had ever thought. \n\nIn my mind I had seen them as a vanilla couple with an average sexual appetite. However, the ease with which Sophie had slipped into the role-play of me being Jon, almost seemed as though she wanted and needed the sexual activity but wasn't prepared to admit to it. She seemed happy to enjoy the attention I gave her, as long as she could continue to imagine that it was Jon. Whether she believed at the time that it was Jon, I didn't know. \n\nIt was unusual for her to ask me to dinner in the middle of the week, so my hope was that she wanted to continue this form of role-play and perhaps take it further. I had always thought she was sexily attractive, so I didn't mind if she thought of me as Jon if she was going let me get even closer to her. The memory of what we had done on Saturday and the anticipation of perhaps doing more, had given me much masturbatory material during the last few days.\n\nI went round to her house on Wednesday evening, the usual bottle of red wine in hand. Sophie was not much of a drinker, but I had discovered the one she liked best, so I usually took that with me. I tried to make sure she didn't drink too much, as I had found that it quickly went to her head and tended to make her sleepy.\n\nAs it was another cold evening and she was expecting me, she answered the door very quickly and ushered me into the warm interior.\n\nTonight, I saw she was wearing a smart denim skirt that stopped three or four inches above her knee and a white short sleeved blouse or shirt. This was sort of 'half see through', in that as she moved around, I could just make out parts of a lacy bra beneath, then when she moved again, I could no longer see it. I guess you could almost call it a 'tease'shirt', but as with the skirt, I am sure it was an expensive item, not one from the rail of just any store.\n\n\"Hi, Soph, you look really nice tonight,\" I said lightly.\n\n\"Thank you kind sir,\" she curtsied, grinning, \"Jon bought me this outfit last Christmas, but with all that happened,\" she paused, took a deep breath, \"it never saw many outings, so I thought I would wear it tonight.\"\n\nOh, oh, I thought, I have barely walked through the door and she has Jon on her mind. I wasn't sure if that was good or bad yet.\n\n\"He had good taste, it certainly suits you,\" I said, looking her up and down again.\n\n\"Come on,\" she said, smiling again and walking towards the kitchen, \"less of the flattery.\"\n\n\"Mmm, that smells like a curry of some sort,\" I said, the aroma of spices thick in the air.\n\n\"Yes, Jon liked a good curry, so I thought I would do the one he liked the most. Ohh, I never thought, you do like spicy things don't you Rob?\"\n\nI nearly replied, 'yes like my women', but I managed to catch myself before I said it out loud.\n\n\"Oh yes, I do, and it smells great,\" I said instead.\n\n\"Ah, thank goodness for that, get that wine open then and we can go through to the dining room.\"\n\nI have to say, it was a great meal, just enough heat from the chillies, but not too much that you couldn't taste all the other flavours and spices. She had obviously spent a lot of time preparing it, along with complementary side dishes. As I have said before, she was a great cook.\n\n\"That was really good Soph, you are spoiling me,\" I said, after we had both cleaned up our plates with tasty naan-bread.\n\n\"I am glad you enjoyed it, although maybe a little too much chilli,\" she replied, pretending to fan her tongue with her hand.\n\n\"No, it was just right for me, thank you.\" I said, truthfully.\n\n\"Let's just pop these dishes into the kitchen and then we can take the wine through to the living toom, the fire is glowing nicely in there and it is more comfortable.\"\n\nWe settled ourselves onto the sofa facing the wood burner, just like many times before. Leaving her fluffy slippers on the floor, Sophie lifted her feet up and curled into one corner of it, her feet facing me, glass of wine in hand.\n\n\"I think relaxing after a nice meal is half of the pleasure,\" she said, taking a sip and giving a slight murmur of appreciation.\n\n\"Is this what you always used to do,\" I asked tentatively.\n\n\"You meant with Jon?\"\n\nI nodded.\n\n\"Yes, usually,\" she said, a little wistfully, closing her eyes, I thought maybe to savour the memories more distinctly.\n\nI am not really into feet, but as I looked at her unobserved, I noticed for the first time that she had elegantly shaped feet and ankles, and each of her toe nails had been precisely filed and coloured almost the same colour as her denim skirt. She had stretched out a little more and her feet were well within touching distance.\n\nI don't know whether it was some form of intuition or what, but I reached out and gently ran my hand from her ankle to her toes on the nearest foot.\n\nShe flinched slightly, but then said, \"It has been a while since you did that, you know what it does to me,\" and ended with a tiny giggle.\n\nI am sure Jon would have known, but no, I didn't know, still, I was happy to find out, and it seemed she was once again thinking of Jon and giving me clues as to what she would like.\n\nJust as I was about to touch her some more, she suddenly moved her legs away, put her glass on the small table next to where she was sitting, and got up from the sofa. I thought that perhaps the memory had upset her, and she didn't want to do anything more tonight, so I started to get up too.\n\n\"Just hold on a minute,\" she said now fully standing, \"sorry, I need to get something, don't get up.\"\n\nOk, I thought, settling back into the cushions. I wondered what she was up to and what she needed; much as I would have liked to have believed it, I didn't think we had got to the condom stage yet, so I was a bit clueless.\n\nShe was only away a minute or so and when she came back and sat down again where she had been before, she had something black dangling from her hand. Ah, not a condom then judging by the shape and size.\n\n\"I feel sort of awkward asking you this,\" she said, a faint blush creeping up her cheeks, \"but would you think it weirder than normal,\" she grinned an embarrassed grin, \"if I wore this while we sit here?\"\n\nI saw now that she was holding one of those sleep masks, made of black opaque material with an elastic band, the sort that airlines give you sometimes, to cover your eyes so you can black out the light.\n\n\"If you are uncomfortable with it...\" she continued quickly, looking for my reaction, \"then it is ok, I won't wear it. I only thought of it today and I think it will make my memories more real, just as if they are playing on a screen, sort of thing, and it's easier than keeping my eyes shut.\" she finished, in a rush of words.\n\nShe looked worried at what my reaction might be, and to be honest I wasn't sure what to think. It was getting a bit weirder, but did it matter if she had her eyes closed or covered, I asked myself? After all, I had started this sort of roleplay idea, so if she wanted to take it a bit further and wearing it helped her to 'believe' it was Jon, then maybe we might both enjoy it even more.\n\n\"Err, no, I don't mind,\" I said eventually.\n\n\"You're sure.\" she said, still looking a bit sheepish.\n\n\"No, really, go ahead.\"\n\nShe slipped the elastic behind her head and adjusted the mask to cover her eyes\n\n\"Oh, that's sort of strange, but comforting,\" she said, feeling carefully for her wine glass on the small table, which she found easily without knocking it over.\n\nAs she settled back, she moved her feet even closer to me. I was sure that was an invitation after what she had said earlier, so again I let my hand wander over her foot. She didn't move it away, and if anything, put both feet a little closer.\n\nI started to gently massage her foot, going in large strokes from ankle to toes and then letting my fingers slide between her toes one at a time. I caressed each toe in turn, then ran my nails up the soft sole of her foot. I thought she might be ticklish there as many people are, but instead of giggling, she sighed a little and made little grunts of pleasure. Where some people have hard skin, her skin over all her foot was soft, probably the result of continual moisturising I thought. I know some people do find it a turn on to have their feet massaged, and it seemed there was much more to Sophie than I had imagined.\n\nAfter about ten minutes of this, during which time I became acquainted with every part of her feet and toes, she was breathing a little faster. I was able to watch her face unobserved and each time I massaged the balls of her feet, and ran my fingers through her toes, she gently bit her bottom lip and sighed.\n\nDuring the massage, she had turned slightly towards me, and as I had moved her legs around to get at different parts of her feet, she now had her back against the cushioned arm of the sofa, with her feet facing me, and her heels resting on my thighs. Her skirt had ridden higher and she had made no attempt to re-arrange it, so that now I had a good view of her long legs until just the upper thighs disappeared under the hem of her skirt. \n\nI realised that if I lifted her foot, her legs separated, and I could see further up her skirt. I caught glimpses of white underwear between her legs, the detail of which I couldn't quite make out. I hoped that her panty was as lacy as her bra that I had seen through her shirt earlier.\n\nGradually, I extended the rubbing of her feet to her calves, such sexy legs, toned and smooth. She left her legs slightly apart, giving me access all round. Bit by bit, I went higher until I was stroking her knees. She just let me do it, sighing now and then and breathing faster,\n\n\"You always knew what I liked,\" she said quietly, \"mmmm...\"\n\nI was having trouble reaching much further now, so encouraged by her bit of 'direction' I slid quickly nearer to her, letting her legs move across my thighs so that now the backs of her knees were draped over my furthest thigh, and her feet rested naturally on the cushion where I had been sitting.\n\nAs I said earlier, feet hadn't really figured much in my erotic imaginings, so although Sophie seemed to be gradually getting turned-on by what I was doing, my cock had only begun responding a little when I glimpsed her underwear, and stroked higher up her calf.\n\nBecause her eyes were covered by the sleep mask, I was free to look wherever I wanted without her being able to see. With her legs draped over mine, her knees were raised, and her skirt had fallen further up her thighs, to just below the level of her panties. I could see them more clearly now as white and lacy, but more like tiny shorts than the 'v' shaped ones, as they seemed to be loose around her legs. \n\nAs I continued to make longer and longer strokes from ankle to knee; ankle to above her knee, calf to mid-thigh, then focus on just knee to mid-thigh, she had opened her legs a little more to give me access. She was gently nibling her bottom lip and breathing more noisily through her nose. I could hear more occasional quiet moans, but apart from that she didn't do more than just let me carry on.\n\nThis new area of touching had excited my cock more and I was now sporting a near full erection in my trousers. It was a bit uncomfortable, but I wasn't sure what I could do about it and I didn't want to spoil the mood by fiddling with it too much at this point. \n\nUsing both hands round one leg, I slid them ever closer to her panty line each time, pushing her skirt even further up, then back and repeat. This made her squirm a little, just enough for me to know she was enjoying my touch. The slight squirm, and the opening of her legs, brought the nearest one into contact with the erection in my trousers.\n\n\"You would normally have made yourself more comfortable by now,\" she said, through her heavier breathing.\n\nWhat did she mean? Was she inviting me to take my cock out, or just move it into a more comfortable position? Under the 'rules' I had made up, I wasn't to speak, to stop it impinging on whatever thoughts she was having about Jon, so I couldn't ask.\n\n\"I didn't think I had heard your zip,\" she added.\n\nShe was 'directing' me again, letting me know what they used to do. I wasted no time in pulling my zip down and freeing my now fully erect cock through the fly. I gave it a few tugs up and down to loosen the foreskin, before going back to stroking up and down her thigh, leaving my cock in contact with the skin of her leg.\n\nI saw a quick smile cross her lips.\n\nMy fingers reached the leg of her loose panty-shorts and I heard her sigh more loudly.\n\nI stopped the long strokes, and instead, concentrated on the area just under the loose material, stretching out my fingers until I could feel where her legs joined her body. The heat emanating from that area, was much hotter than the room, even though there was plenty of room for air circulation.\n\n\"Ohh, mmmmm,\" she mumbled.\n\nI was able to push my whole hand up the leg of those lacy shorts and suddenly found my fingers moving through a thin carpet of short pubic hair. I had had no idea if she was a 'shaver', but now I knew she wasn't. I was touching parts of Sophie that I had only imagined. Oh God, I had my hand over her mound, in her pubic hair. I used my other hand to pull my foreskin slowly up and down. My other fingers continued to explore the wonder I found there.\n\nShe was more animated now, even panting a little, the sleep mask hiding any other emotion that might be in her eyes.\n\n\"Do you remember when we bought this skirt, I told you it had hidden fastening that your clumsy fingers would never find, let me unfasten it for you.\" \n\nMore clues.\n\nShe used both hands to do something at both sides of the skirt, and suddenly it was loose around her slim waist.\n\nRemoving my own hand, I took the cue and tugged at the hem, while she lifted her bottom and the skirt slid easily down her legs and off. I dropped it beside me on the sofa.\n\nNow I had a clear view of her sexy, white panty-shorts, not quite transparent, but enough to see the triangular shading of her pubic hair through them. Sophie repeatedly surprised me after all the years I had known her. I had imagined she was more...'conventional', but the insight into her sex life with Jon and her choice of sexy underwear, was gradually revealing what a sensual woman she had kept hidden.\n\nI ran my hand back up the length of her leg and under the leg of the sexy underwear, back into the fine hair, Sophie's pubic hair. I curled my fingers slightly and found the edge of her pussy lips. Careful not to touch her clit just yet, I ran my fingers down, opening them up, feeling the hot dampness between them.\n\n\"Ahhhhhh,\" she groaned, feeling my fingers stimulating the outer lips then sliding deeper, the dampness turning to wet, as my fingers probed deeper between them. While I was moving my fingers ever deeper into the cleft, searching for her entrance and hearing her moan more often, I suddenly saw her hand move across and without hesitation wrap round my cock where it was touching her leg.\n\nShe gently pulled the foreskin down, then ran her thumb over the exposed head, using the precum I had gradually been secreting as lubrication to explore my erection.\n\nOh, heaven, not only did I have my hand between Sophie's vaginal lips, but her slim hand and fingers were stimulating my cock. Only something I had dreamed about until now.\n\nI watched as her fingers explored my cock, sliding the tip of one under the lip of the swollen purple head and running it around that most sensitive part. She had opened her legs even more when she started this, and finally my own fingers found her entrance. I slipped one just inside.\n\nHer ministrations on my cock were getting me really worked up and now I wanted to see what her pussy looked like as well as feeling it, but once again I was caught in the dilemma of not wanting to change or spoil the mood.\n\nShe was really wet down there and I had no difficulty in slipping a second finger alongside the first, just inside her. I started to penetrate her more, pulling back out a little then pushing further in. After only a short time, both fingers were inside her up to the second knuckle and all the time she stroked and alternately fingered my cock, her heavy breathing loud in the quiet room.\n\nI could hardly believe I was finger fucking Sophie and she was handling my cock, sitting in her living room, where I had been so often with her and Jon for more innocent purposes.\n\nShe was now breathing very fast and stroking my cock faster, so I tried to match her with my own fingers moving in and out of her in time. When I let my thumb touch her clit she actually jumped and made a high-pitched noise. She squirmed on the sofa, opening and closing her legs, sometimes trapping my hand. I wondered if she was going to climax, but just as I thought she was going to go over the top, she stopped rubbing my cock and pushed my arm away from her, my fingers noisily leaving her warm channel.\n\nI had no idea whether that was it, or what was to happen next, until, she lifted her bottom off the sofa and using her now free hands, took hold of the waistband of her panty-shorts and slipped them down her long thighs and legs to deposit them on the floor.\n\nAt last I could see the dark triangle of hair I had been touching, her outer lips slightly open and glistening with the wetness I had spread around. I could smell her arousal. Should I just continue as before I thought, or what should I do now? \n\nShe soon directed me again.\n\n\"Are you going to kiss me where you normally do now?\" she asked, more a command than a question.\n\nOh my God, I realised that she wanted me to lick her pussy. I had wanted to get up close, but didn't know if she would let me, and here she was sort of telling me to. Oh yes I thought, I am going to do that.\n\nI slipped down onto my knees on the thick carpet and positioned myself between her legs which she opened wide. Now I could see her outer labia were open and a bit of the pink inside lips were just showing. The hood was right back on her clit, exposing the small button that I knew would be so sensitive now.\n\nSliding my hands along the outside of her thighs, I moved my face closer, the intoxicating smell getting stronger the nearer I got. I put out my tongue and touched her outer lips for the first time. I tasted the juices that were there and liked the flavour, slightly sweet with a tangy aftertaste. I slid my tongue up between them, my hands on her hips feeling her react with a slight trembling.\n\n\"Oh yessss,\" she hissed, \"it has been so long.\"\n\nI started licking in earnest, flicking my tongue up and down and letting the tip press lightly into her entrance. Each time, I tried to push it further in, letting her juices spread over all the different taste buds on my tongue, a mingling in different quantities of, sour, bitter, sweet and umami, but so sexy and erotic.\n\nShe put her hands on my head, pulling me towards her and seemed to be trying to get my whole face inside her vagina. I responded by pushing my tongue as far in as I could get it then withdrawing. I suppose you could call it 'tongue fucking' her, but maybe I made that phrase up.",
        "\"Ohhh... mmmm,\" she wimpered, moving her hips in time with my tongue, \"so long, so long,\" she repeated.\n\nI could tell by her frantic movements that she must be getting close, but I wanted to protract it for a while yet, as my rock hard cock was telling me she needed to be fucked, and I really, really, wanted to be the one to do it now that we had progressed so far. I wondered if that is what Jon would have done next or was whether what I was currently doing was enough for her. I thought I had better find out.\n\nAlthough she was still holding my head tightly between her thighs, I withdrew my tongue back into my mouth along with her tasty nectar and then tentatively slid it out again and upwards until I contacted her clit.\n\nShe jumped and squealed as if I had stuck a pin in her.\n\nBefore she could do anymore, I wrapped my lips around the little, hard, bare nub and sucked, ticking the end with my tongue while it was in my mouth.\n\n\"Oh God,, no, no, not yet,\" she cried, \"you know I'll come if you do that.\"\n\nThat took me by surprise, as I did think that was what she wanted. I couldn't ask her because as always, I had to remain silent so that she could keep up the illusion that it was Jon.\n\n\"Do that other thing that you do first.\"\n\nHmm I thought, releasing her clit and just gently licking around it, what does she mean? I didn't know what ever it was that they did next. I moved my hands up the outside of her body until I was cupping and sliding my hands over both of her breasts over her top and bra, wondering if that was it.\n\nShe must have finally realised that I couldn't know.\n\n\"No, not that,\" she said quietly, \"although it's nice, I meant do that thing with your...emm hardness...your err, cccock,\" she stuttered, \"like you were doing, but with 'it'.\"\n\nI looked up at her on hearing her say 'cock' as she had never said anything like that before, and despite the fact that I currently had my face buried in her cunt, she was blushing at the use of the word 'cock'. I found that her shyness to say words like that was actually quite endearing and sexy in a weird way.\n\nShe said no more, except to whimper a little more, so hoping I had got it right, I lifted my face from her pussy and shuffled forwards so that my erect cock was pointing at it, almost touching her damp pubic hair.\n\nI undid the button on my waistband and let my trousers fall to the floor around my knees, and pushed my underwear down to join them, so I was also naked from the waist down.\n\nPulling my foreskin back I moved forwards a little more, until the engorged head of my cock touched the warm skin of her sex. To be accurate, it slid just between her damp pussy lips. I could hardly believe it, at last, my cock touching Sophie's vaginal lips. Something I had only imagined in my fantasises when I was alone in bed at night. I looked down, fascinated, as I slowly rubbed it up and down her slit, coating the head in her abundant secretions. The head parted the fine covering of hair and pushed the lips apart as it moved up through them and then they closed after its passing.\n\n\"Thats it, that's it...mmmm, oh yes,\" Sophie mumbled, as I repeatedly ran the head from the bottom to the top.\n\nI made my cock head and the stiff nub of her clit touch, then pushed it upwards, the bottom of my cock scraping softly across the whole of her protruding clit.\n\n\"Oh my God, that feels so good,\" she said, rather loudly.\n\nUsing my hand on my cock, I ran the head around and around, and from side to side over her most sensitive place, pushing the hood further out of the way like a miniature foreskin, so that only our normally hidden parts touched each other. My precum was mixing with her copious flow making it easy to slide it around the area, almost as if I had poured lube over us from a bottle.\n\nSophie was gripping the edge of the sofa cushion, her knuckles white and her breathing fast and noisy.\n\nShe was moving her hips in time to me teasing her clit and seemed on the brink of climaxing.\n\nI was as turned on as she was, particularly as I could see, like a POV porn video, what our parts were doing. I knew that if I kept this up, the visual stimulus and the heightened sensitivity of my cock head would make me come very soon, but still I wanted more.\n\nWithout any direction from her as to whether this was where she wanted to get to, I made a decision. \n\nSliding my cock down back between her slick lips, I felt for her entrance with the head. As my cock found and nudged it, Sophie took a big breath and sort of held it. I thought she was about to stop me, but she didn't do anything else. I pushed a little harder and her inner lips parted, surrounding the head with warm wet flesh. I could still see most of the purple head, so I wasn't in very far, but enough for her to know and stop me if this was going to be too far for her.\n\nI needn't have worried.\n\n\"You remembered I like it slow like that, just a bit at a time,\" she whispered hoarsely, letting out the breath she was holding.\n\nNow I knew.\n\nShe kept still as I pushed the rest of the head into her. Into Sophie, the sexy woman I had admired from afar for so long. My cock entering the object of my late-night thoughts. Fuck, I thought, I mustn't come yet, but it was a struggle, as very slowly I watched a little more of my cock enter her. She had never had children and she was so tight. Despite so much natural lubrication from us both, there was still considerable friction as I slid little by little into her vagina. God, it was sooo sexy to see my cock being swallowed up, her pubic hair parted like a dark curtain either side.\n\nI had almost half of my cock inside her and I was sure she was actually gripping me with her muscles as I had to push harder to penetrate her further. I was really close to coming and I hadn't even made a stroke yet, nor managed to get the full length of my cock inside her. I paused and just relished the sight of my cock partially embedded in Sophie.\n\n\"You seem much bigger than normal,\" Sophie said, in an almost dreamlike way, \"I can feel myself really filled up, so good, so good.\"\n\nI moved my hands up and down her thighs, right up to where my thumbs could slide over her pubic hair either side of my embedded cock while I thought about ice cream, football, shopping lists, drain cleaning, anything to try to stop me coming just yet. It sort of worked, but the feeling and sight in front of me was very difficult for my brain to suppress.\n\nGradually, with Sophie moving her hips forward and me pushing gently, more of my cock slid inside her lovely warm channel. I kept pausing to let the feeling die down a little. to stop myself from releasing my pent-up sperm too early. This seemed to be what she wanted anyway, as she didn't try to hurry the penetration, and that was fine with me.\n\nI suppose it took several minutes, I had lost track time, before finally our pubic hair met and I could no longer see any of my cock, it was all buried inside her. There I stopped again, feeling her internal muscles palpating my hardness. While I stayed still, totally inside this sexy woman, I ran my hands up over her thighs again and across her warm stomach, then down through her pubic hair until my fingers touched where we were joined. By concentrating on what my fingers were feeling, I managed to push the feelings running through my cock into the background, enough to make it possible for me to start pulling out, until only the head was in her vagina and then pushing all the way back in again.\n\nSophie took up the rhythm almost immediately, my cock bottoming out as she pushed our pubes forcibly together.\n\nI couldn't un-focus anymore now that we were actually fucking hard. It was as much as I could do to not come after the first couple of strokes. I think I lasted about twelve strokes, but then I wasn't really counting, until I felt the familiar tingling deep in my testicles and an urge to be as deep as possible in her. Any thoughts of pulling out, condoms or birth control were completely forgotten, as I felt my sperm beginning its journey up my cock. I just needed to come. She must have been close too, because she didn't make any attempt to remove me or say anything to stop me but instead put her heels on my bottom and pulled me into her as far as possible.\n\n\"Oh fuck, yes,\" she cried out, as the first contractions of her vaginal muscles signalled the start of her orgasm.\n\nI jammed my hips forward and held them there for a second or two, as the first big wad of cum splashed deep inside her. Then I pulled back and repeated the action. She was trembling, shaking, groaning, and I could see the muscles rippling on her stomach. She arched her back once, twice, three times, once for each time my sperm jetted into her.\n\nShe kept saying 'Ohhhh' every time she felt the liquid pulse into her, until I was completely spent. Her little aftershocks continued intermittently for a while\n\nWe stayed in that position, me kneeling between her thighs, still buried in her, until I could feel the excess liquid pushing out past my cock to drip, missing the sofa cushion, down onto the carpet.\n\n\"Oh God,\" she whispered after a while, \"that was so wild, I never thought I would experience that intensity again. Whew, I am exhausted after that.\"\n\nShe had dropped her heels down and my cock had begun to soften, so I leaned back and my cock slid nosily out of her, still covered with a mixture of our cum. Leaning forwards I planted a kiss on her soft stomach.\n\nI thought it was probably ok to speak now\n\n\"I'm sorry,\" I said.\n\n\"What for?\" Sophie asked, as she slowly removed her sleep mask from her eyes.\n\n\"I came inside you,\" I said a bit sheepishly, \"and perhaps I shouldn't have.\" \n\n\"It's ok Rob, I wanted you to.\"\n\n'Rob', ohh, she used my name.\n\n\"I never stopped taking birth control pills after I lost Jon, it was part of my morning routine,\" she explained, \"so there is no need to worry. But I think I need my bed now.\"\n\n\"Yes of course,\" I said, getting up with what I now realised were aching knees, and fixing my trousers back up.\n\n\"Jon won't be coming back, I know that,\" she said, \"so I think you should join me Rob.\"\n\nThat took me aback a little, but thrilled me, that she now wanted me to share her bed as myself, so the need to be exactly like Jon seemed to be over.\n\n\"Oh,\" she added, \"and by the way, Jon was circumcised, I couldn't really ask you to go that far,\" she grinned."
    ],
    "authorname": "jasperspen",
    "tags": [
        "grieving",
        "next-door",
        "roleplay",
        "seduction",
        "widow"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/becoming-jon-ch-02"
}