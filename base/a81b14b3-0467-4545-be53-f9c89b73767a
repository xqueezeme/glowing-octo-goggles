{
    "title": "The Twelve Tables Ch. 12",
    "pages": [
        "Authors Note: Thank you to everyone left comments or sent me feedback about previous chapters of this story. Thank you to Margaret who proofread for me. I hope you enjoy this chapter. ~ellie\n\n*\n\nNik smiled down on the man who had his lips wrapped around the big strap-on cock she wore. Men were so easy, they thought with their dicks and if you could give them their fantasy, you could mould them to your will. It hadn't taken her long to realise that her guard at the facility had been chosen because of his homosexual tendencies. They probably thought he was a safe bet to resist any form of seduction she might try. It took her even less time to exploit his weaknesses and his need for punishment for not living up to family standards.\n\nNow he had the best of both worlds, a disciplinarian who would punish him for not towing the family line and getting married to a baby making machine and a cock to worship and fuck his ass. She would miss him in a strange way she thought as she thrust her hips making him choke on the soft rubbery cock. Of course, he had opted for a life-like cock, the shaft all veiny with a swollen darkly shaded and mushroomed head. Still it did the job and who was she to complain when it rubbed her clit so vigorously when she fucked him.\n\n\"Such a greedy little cock sucker, you can't get enough can you,\" she grabbed his head and bucked her hips cutting off his air supply until he flailed around in his urgency to breathe. She held him tight a moment longer making him strain for the precious air before releasing him to fall back on the floor at her feet.\n\nShe'd planned this night from the moment she had arrived at the facility. All of the pieces of the puzzle falling into place a week ago with the arrival of that stupid, fat cow, Peri. Her revenge would be sweet, and she looked at the clock on the far wall considering how much longer she could play with her prey. She looked disgustedly around the small office that belonged to the man who even now crawled back to her and took the cock once again between his lips sucking on it like it held the water of life.\n\n\"Desk,\" she instructed, and he immediately jumped up and leant over the desk reaching back to spread his ass cheeks for her. The handcuffs made it difficult for him, but such was the price he paid to live out this little fantasy. Of course, she had made him pay handsomely for every session in which she let him worship the cock of his dreams. She wondered who it was that fucked him in his mind as she stood and pressed the unlubed cock against his asshole. Her bet was on some Hollywood superstar that wasn't even gay, someone big and muscled like Schwarzenegger.\n\nWithout warning, she thrust forward making him cry out softly muffling the sound by bending his head, so his mouth rested against his shoulder. She didn't care as she began to ride him feeling the hard nubs on the inside of the harness rub over her clit. She felt her arousal rising rapidly, and she took off the belt that held her toga high and away from the strap-on cock but still hid her breasts for him.\n\n\"Giddyup, wild stallion,\" she groaned threading the belt around his neck and holding it like a pair of reins. Feeling the edge of her climax, she crossed the reins over in her hands and began to thrust harder and faster pulling tightly on the belt, revelling in his struggle as he became aware of what was happening. She gritted her teeth and bit at the inside of her cheek to stop from crying out as her climax finally slammed into her and she fell back into the chair trembling with its force.\n\nShe watched dispassionately as the body of her guard slid lifelessly to the floor, and she murmured softly, \"Oh dear. Accidents will happen when you play rough.\" Feeling the energy born of adrenaline she shoved the body under the desk and removed the strap-on shoving it into his mouth for good measure. She then retied her belt and quietly left the room. She stepped through the door to the mess hall taking her seat with the two other family outcasts.\n\nNik ate ravenously; she was starving after all that exercise. She chatted normally to the other two girls and shrugged when asked where her guard was. \"Gone to the bathroom, I think,\" she smiled sweetly as she always did here. Since her arrival here she hadn't put a foot wrong in the eyes of anyone except her guard and that was the way she wanted it to stay until the last possible moment. She waited until the guards went to talk with those guarding the other tables as they always did during mealtimes.\n\nShe stood with her tray and walked past Peri absently dropping a note onto her tray before disposing of her own tray and walking through the side door to the library. Over the past week, she had smiled and apologised and told Peri that she had seen the error of her ways now that she was drug-free. She made overtures about being one big happy family and how much she was looking forward to the wedding and her hope that Peri would be able to forgive enough to let her be part of the special day.\n\nShe'd had to play a lot on the fact that as Josh's twin and the special bond she had with him and she hoped Peri could understand that, and they could be friends. She had gone out of her way to help the girl and introduce her to the friends she had made within the facility. To the point where she believed, Peri thought of her has a friend now. \n\n\"The stupid, fat cow as so trusting,\" Nik thought to herself, \"This would be easier than anything else she had planned for tonight.\n\n*****\n\nTo Nero's surprise, Peri had not arrived at his office for her morning session. With less than a week left of her trial, she had been given more freedom to move about the grounds and upper floors of the facility and were she any other girl he would assume she lost track of time. Peri, though, had diligently followed every instruction of the Marshall's and Commander. The girl needed no consequences not even from Francesco, who was notoriously hard to please. The truth was that she had arrived at the facility with far better conditioning than some of the girls who left having finished their trials with passing status. Nero stood from his desk and walked to the mess hall. He approached the purple table and the two women who remained finishing their breakfast.\n\n\"Did Peri have breakfast this morning?\" He asked pleasantly.\n\n\"She wasn't here when we arrived, Marshall,\" one of the women answered.\n\n\"We did arrive slightly later than usual,\" the second admitted. \n\n\"Thank you,\" Nero walked to the stairs pulling his phone from his pocket and calling Francesco. \"Hey did you see Peri late last night, she hasn't arrived for our session,\" He said as soon as Francesco answered the phone.\n\n\"She didn't come to me after supper last night,\" Francesco said. \"Not like her to be late for anything have you checked her room?\"\n\n\"I'm on my way there now,\" Nero answered shortly.\n\n\"Okay I'll meet you there and help you search if she is missing,\" Francesco said. \n\nThey met at the bottom of the stairs and continued to her room. It looked like there had been a fight or, at least, a tussle within the small cell. There was no sign of Peri and their anxiousness increased.\n\n\"Call Marco to meet us in security, I'll call the commander,\" Francesco said through gritted teeth. They had all relaxed in their observation of her because she had accepted her status here without complaint and followed their instructions without question. They had no concerns about her commitment to the trial, what they had not bargained on was someone else interfering in their well-designed plans. It had been easy to dismiss her special circumstances and the diligence needed in her care. \n\nSitting in the security room, they scrolled through the video of the corridor in front of her cell from the evening before. Looking for anything unusual that might tell them of her movements or who she had fought with.\n\nA woman in a purple toga who was quite obviously not Peri had gone into her room late in the evening. She had stayed a few minutes and left again. As if aware of the camera she had never looked up as she passed its lens. They watched it over again to try and discern who it was but the best they could tell it was someone who had borrowed a toga or taken Peri's as it was far too short for the tall woman.\n\n\"Show me the main corridor after supper, I did not see her last night so she should have gone straight to her room,\" Francesco said as the commander walked in, his foul mood showing in his expression and body language.\n\n\"Well?\" he asked belligerently. \n\n\"All we have so far is an unknown woman entering her room and leaving again,\" Nero informed him.\n\n\"Show me,\" he leant forward putting a hand on Nero's shoulder to get closer to the screen. The picture was brought up, and the Commander frowned.\n\n\"Veronica Donati,\" he said abruptly standing once again. \"Marco go and search her room.\"\n\n\"No sign of Peri in the corridor after supper,\" Francesco added, \"I don't think she will be there.\"\n\n\"Perhaps not but I would bet that purple toga will be,\" the Commander said with certainty. He knew the full story of Veronica's incarceration here and anxiety that she may be involved in Peri's disappearance gnawed at his gut. She had been responsible for harm to Peri on at least one other occasion before she had come to them. The question was how she could have pulled it off. \n\n\"She wasn't on the stairs after supper,\" Nero announced as his head spun between the four computers and the two security men who helped him search. \"Which means she never left the first-floor after supper last night.\n\n\"That limits the search area, just in case, check with the front gate and lock it down, no one in and no one out until she is found,\" the Commander spoke with authority.\n\nFrancesco left to start the search as Nero picked up that nearest phone. He spoke in clipped tones asking a battery of questions in rapid fire before slamming the phone back into its cradle.\n\n\"Someone using the name of Peri Wells left in the middle of the night but she doesn't fit the description. The person using her name was tall, slim with long dark hair,\" Nero recounted the phone call. \n\n\"Call the men on duty last night and have them pick up Veronica Donati and bring her to the Athenaeum. Keep me informed of the search,\" the Commander said his voice dangerously low. He knew that delaying informing Joseph any longer was not worth the added disgrace this incident would incur.\n\nFrancesco made his way back down to the first floor gathering some of his family as he went to help with the search. He spoke rapidly describing the girl they looked for and suggested some harm may have come to her.\n\n*****\n\n\"Thank God, for pay wave,\" Nik thought as she smiled at the shop assistant who neatly folded and bagged the clothes she had bought. They weren't great, but they would do until she found a bank that would accept her minimal ID and let her withdraw funds from her own account.\n\n\"Have a nice day, Miss Wells,\" the assistant handed her the bag and receipt. \n\n\"Thank you,\" Nik shot the woman a dazzling smile and left the store. She hoped that the Battaglia idiots would follow the trail she had carefully left for them and assume Peri had left the facility and headed to the closest city. She walked back up the street of the small town on the outskirts of the city and into a shoddy looking backpackers hostel. Peri had no class, so this would be more her style than the Hyatt or any of the places Nik would find suitable.\n\nShe showered and changed quickly into the new clothes and did her makeup feeling much better than she had in what seemed like forever but, in reality, was less than a month. Now she just needed a lift into the heart of the city. She packed what she had taken from Peri and her own wallet that her mother had lovingly packed into her cases minus her credit cards but still holding her licence and Medicare card, into the new handbag. Checking the mirror one last time she walked out of the hostel she had checked into as Peri leaving just enough tell-tale signs to show she had been there. She hoped that no one would find the body for days and she would be long gone, living a new life with a new identity. \n\nShe grabbed hold of a man climbing into a delivery van and flirted outrageously until he agreed to drive her to the city. \"Men were so easy,\" she laughed to herself. Even poor Josh had no idea she had formulated her escape from the hold her family had on her long ago and that was where all that money she had taken from him had gone. Well, she had lived on that and saved all the money she had made from supplying party drugs to her wealthy friends. She had everything she needed in a locked box at the bank. Now all she had to do was get there before they found her. \n\nWhile most of the money had been squirrelled away in the name of her chosen alias, she had enough in a hidden bank account in her real name to get her back home and to the locked box in the bank. She just had to hurry. \n\n*****\n\nNero sat before the security screens with two other men scouring the tape from the last time he could accurately gauge where Peri was yesterday. He had seen her in his office in the morning, then she had seen Marco, then she had gone to Francesco. The camera's in the mess hall were set at a wide view, and it was hard to make out the details of individuals, but with the help of the technicians, he was able to track her through the side door and eventually to the library. The library cameras were skewed and showed only a small part of the room, but she briefly appeared in the shot before disappearing again.\n\nThe corridor view showed her going in but never coming out. It did, however, show a woman in an orange toga going in and coming out with books held to her chest. Once again the woman looked down at the floor as if trying to hide her face from the cameras. Peri had to be in the Library and he wondered why they hadn't found her yet. Leaving the security guards with instructions to keep searching, Nero left to help search the library.\n\n\"She has to be in here,\" he said to Francesco for the tenth time. \n\n\"We've looked everywhere, moved everything, she's not in this room,\" Francesco's frustration was evident. \"We're fucked, totally and utterly fucked.\"\n\n\"Okay if she's not in this room,\" Nero said logically. \"How did she get out without going through that door and down the corridor?\"\n\n\"Do they even open?\" Francesco asked as the both looked toward the large arched windows. The first of the windows they tried didn't open having been painted shut. They tried the others finding them also painted shut or the hinges rusted in place. Still they went methodically checking each one. \n\n\"Fuck!\" Nero exclaimed pushing on a window that lay between two bookshelves and almost toppling out as it gave way easily under his strength. Francesco was by his side in seconds and followed his gaze down to the partially nude body of Peri lying lifeless and hidden between the wall and the bushy hedge that surrounded the building.\n\n\"Get help!\" Nero yelled coming to his senses and jumping recklessly down into the bushes alongside Peri. He ran his hands down her body checking for signs of injury and pushed his fingers into her throat desperately seeking a pulse and finding a faint erratic flutter. \n\nFrancesco grabbed at his phone and called the commander, \"Found unconscious outside the library windows in the bushes, north wall requesting medical assistance.\" Watching from the window he wasn't even sure the girl was alive and he wondered who had done this to her. He heard the scream of the ambulance from the hospital seconds later as it made its way through the village and across the grass to where he hung from the window waving furiously and pointing down.\n\nNero left in the ambulance with Peri and Francesco went to report to the Commander. When he entered, he could see Joseph Donati looking gravely serious and Marco talking in hushed tones. The Commander waved him forward to report.\n\n\"It's bad,\" he said in a subdued voice. \"I suggest we make our way to the hospital.\"\n\n*****\n\nNik walked out of the bank with five thousand dollars in cash and a plan. She bought herself a two new phones and headed into a hair salon. While she sat being pampered, she booked a flight to the middle of nowhere using Peri's credit cards and then took the sim card out of her phone planning on leaving it for some lucky traveller to find at the airport. Josh no doubt had one of those tracker apps on it and she had no intention of letting him find her. She was done with that stupid bitch. She had deserved what she got and if Josh chased her all the way to the middle of the country then more fool him. She smiled with satisfaction. He made it clear that he wasn't playing by her rules anymore, so he was dead to her now, as dead as that ugly cow who started all this. They all were, not one of her brothers had come to help her when she needed it, so fuck them. She would get her revenge on them all eventually. \n\nWith this in mind, she put the sim card into one of the new phones without bothering to turn it on yet. She then picked up the other phone she had bought for herself and set about making the plans necessary for her escape.\n\nShe walked out of the salon with a new blonde bob that made her barely recognisable and headed for a travel agency where she gave them the same sob story she had given the bank. She had been mugged and had no credit card but desperately needed to get home. She paid by cash for her first class ticket in the name of her alias and took a cab to the airport. She sat at the bar watching the people pass relishing the taste of her cocktail. She smiled at her cleverness wondering if any of the Battaglia stalked the terminal looking for Peri to drag her back to that hellish place. They certainly wouldn't look for her in the first class lounge. Nik retrieved the new phone that now held Peri's sim card, angry that it had held very little charge when she turned it on. She dug the charger out of her bag and went and sat at one of the couches near an outlet\n\nShe boarded the plane and ordered champagne to celebrate her freedom. By the end of the day, she would have a new identity and a new life far away from the constraints and oppression of the twelve tables. She smiled and considered leaving a new answering message on Peri's phone especially for Josh, but how to word it for the maximum effect, she let out a soft laugh.\n\n*****\n\nPeri's consciousness was pierced by the screaming siren that told her something was wrong except she couldn't move to find out what was happening. She couldn't open her eyes or even make a sound, yet the siren went on and on telling her of the danger around her. She fought against the inky blackness that sought to overwhelm her. Hands moved her wooden limbs, and strange voices filled her ears. She began to panic she wanted to cry out, but nothing came forth. Then suddenly she was beyond tired. So very tired and the inky blackness she had been holding at bay finally overwhelmed her and in her mind, she cried out for Josh a moment before she sank beneath the wave of darkness.\n\nPeri floated back to the surface slowly, she tried to use her limbs, but they were frozen beside her, she could see the dull light trying to shine through her eyelids, but she couldn't open them. Still she floated higher becoming more aware of voices around her. She tried to move her head to hear better but the darkness held her tight, and all she could do was float close to the edge of it. She became aware of a large hand wrapped around her own smaller one. \"Josh! She cried trying to grip the hand as darkness pulled her back under.\n\n*****\n\n\"The facilities and doctors here are among the best in the country. She has been x-rayed and scanned completely so we can have a full picture of her injuries. It's difficult to say what was sustained in her fight with the assailant and what she received in the fall from the window,\" Nero said having taken over the coordination of all the specialists involved in her case.",
        "\"She has a fractured cheekbone, defensive fractures to her right forearm and a dislocated right shoulder. There is minimal damage to her legs and torso, a couple of bruised ribs and some bruising around her throat. The main concern is the contusion to the left side of her head and the swelling around her brain,\" he continued. \"We won't know until she wakes what, if any, permanent damage was sustained.\n\n\"She has spoken, though,\" Joseph said carefully guarding his emotions and words.\n\n\"She called for Joshua, it was a brief moment, but it gives us hope,\" Nero acknowledged.\n\n\"News on Veronica?\" Joseph turned his attention to Marco and Francesco, who had also arrived for the bedside meeting at the hospital.\n\n\"We believe she has laid a false trail for us using Peri's credit cards and is heading back home,\" Marco answered. \n\n\"Josh. Lio and D. took off an hour ago. They should be there soon,\" Ben's disembodied voice came through the phone Joseph was holding sounding authoritative. \"We'll handle things at this end and Ang has the farm. If she tries to come home, we'll find her.\"\n\n\"Make sure you do,\" Joseph said gruffly and ended the call.\n\n*****\n\n\"If Nik's escaped why are we headed to the facility,\" Josh asked Lio. \"Surely she is a million miles away by now.\"\n\n\"They want you to talk to the people that knew her, in case she left some clue. You knew her best,\" Lio gave the half-truth he and Dante had agreed on until they knew more about Peri's injuries. The last thing they needed was a two-hour plane trip with Josh going out of his mind and raging at them all including the pilot.\n\nThe pilot's voice came over the speaker alerting them to a turbulent descent as the weather had turned nasty. The three men sat and buckled up as the plane began a shuddering decent into a late afternoon storm.\n\n\"Fuck,\" Josh swore loudly, \"Why didn't they divert us?\"\n\n\"Because we have to get there as fast as possible,\" Dante said through gritted teeth.\n\n\"She's long gone a few hours to the next runway wouldn't matter,\" Josh gripped the armrests. They seemed to be through the worse of it, and the plane made its final descent toward the runway. \"Why the big rush, what the fuck is going on?\" he demanded. \"You pick me up give me no time to grab even an overnight bag and drag me onto this fucking death trap of a plane. Someone better start telling me what the fuck is going on right now.\"\n\n\"Nik tried to kill Peri before she left,\" Dante said seriously, \"It's bad Josh she in the hospital and they are doing everything they can, but it's bad.\"\n\nStunned to silence Josh stared unbelievingly at his brothers as the plane touched down. \"You waited until now to tell me! What did you think I was going to do fly down here with the wings that are sprouting from my back? How bad is it?\"\n\n\"They didn't know when we got the call. They were still doing tests, it didn't look good,\" he admitted. \"Nik took her wallet and phone we assume to pose as her when she made her escape.\"\n\nJosh picked up his phone called Peri's number. Shocked to his core, he listened to the message before throwing his phone in a fit of rage. \"Call it,\" he challenged his brothers. \"Call Peri's number and listen to that psycho bitch.\"\n\nLio called his eyes widening as he listened to the voice of Nik, \"So sorry you can't call the dead. Joshua if this is you, your welcome. You'll realise I did you a favour eventually.\" Thi message was punctuated by a peal of laughter and the beep to leave a message.\n\n\"Some warning about that might have been nice,\" he mumbled to Dante, who immediately made the call and raged with Joshua letting out every expletive he had in his reserves of knowledge, some of which he made up for effect. The short drive to the hospital was made in silence as the brothers equally fumed and brooded over the events leading to their trip here. Josh had gotten out of the car at a trot before it had even come to a complete halt and stormed into the hospital.\n\n\"Somebody better have some fucking answers for me,\" he yelled as the three muscled bodies of Marco, Nero and Francesco stood in his path.\n\n\"We do,\" Marco, the biggest of the men, said gently. \"But there are many patients here, and you need to calm down before we take you to Peri.\"\n\n\"That is his version of calm given the circumstances, and trust me you do not want to see him angry,\" Dante said seriously. \n\n\"Perhaps you could just point the way to her room and her doctors,\" Lio said trying to calm the situation further.\n\n\"I'm her doctor here if you would follow me, gentlemen,\" Nero stepped forward to lead them to her room. \"She's been comatose since we found her, she had one moment where she spoke the name, Josh, but nothing else before or since.\"\n\nJosh was not prepared for the sight of her swollen and bruised face or the many bandages that seemed to swathe her head and upper limbs. It was no wonder Nik thought Peri was dead; she looked like she was very close to it.\n\nSitting on the edge of her bed he held her hand and spoke to her softly. \"Peri, wake up. I'm here now. Please, wake up.\" His voice cracked with emotion as be begged her to open her eyes. \n\n\"Josh!\" her mind screamed in an effort to let him know she was trapped. \"Help me!\" she cried in her head and tried with all her might to grip the fingers that held hers. \"I can do this, I can do anything she told herself, \"Josh!\" she tried to scream again, \"Josh, help me!\" the darkness thickened and threatened to overwhelm her again, but she hung onto the feeling of her hand in hers desperately. \"Help me,\" she mumbled weakly.\n\n\"I'm here, come back to me. Please, open your eyes,\" Josh's voice sounded distant and sad, and Peri couldn't work out why. The more she fought to find him and free herself of the blackness that surrounded her the more it hurt, and she struggled to hold onto his hand. \n\n\"Don't let go!\" she cried out in her mind, \"It hurts, its hurts everywhere.\" To the people around her bed, she made nothing more than a long drawn out groan.\n\n\"You promised me always, and forever, you have to come back, to me,\" he leaned over talking close to her ear. \"Your mine.\"\n\n\"Mine\" She mumbled hearing her own voice in her ears as a sibilant whisper. \"Mine.\" She forced herself up higher embracing the pain she felt knowing Josh waited for her there in the light. \"Mine,\" she hissed again.\n\n\"I'm here,\" Josh gripped her hand hearing the whispered words and wanting nothing more than to pick her up into his arms but not wanting to do any further damage.\n\n\"It hurts,\" she whispered as she struggled up from the depths of deepest sleep. \n\n\"I need to examine her quickly, and then we will give her something more for the pain,\" Nero said approaching the opposite side of the bed to where Josh sat. \n\n\"I'm not going anywhere,\" Josh said. \"Feel my hand I am still here,\" he leaned back but steadfastly refused to move from where he sat cradling her hand.\n\n\"Mine,\" Peri mumbled. She felt the gentle hands and saw the blinding light making her flutter her eyes lids and snap then shut again as she moaned softly. \"Hurts, so tired, Josh, I'm sorry, I can't, I tried but I can't,\" she slipped back down into darkness, and the light grip she had placed on his fingers was gone.\n\n\"No! Come back. You have to live,\" Josh whispered desperately willing her to hold his hand again. \n\n\"She's asleep,\" Nero said gently holding her wrist and feeling her pulse. \"She will wake up again, let her rest for now so her body can heal itself faster.\" He seemed to consider Josh. \"She loves you deeply, and she will need your love and strength to recover.\"\n\n\"Do you think me a moron who doesn't know that?\" Josh snapped. \"D. get these idiots away from me and see if you can find Papa. I need some fucking answers.\"\n\n\"Josh why don't we let the doctors do their job, she'll be asleep for a while now. The extra pain meds will have knocked her out for a couple of hours at least. You don't want her to wake up and hear you cursing everyone who is trying to help her,\" Lio tried to soothe his brother.\n\n\"She may have only been here for a short time, but we have grown to love her too,\" Marco said his voice full of regret. \n\n\"A fat lot of good that did her,\" Josh spat. \"If this is how you look after the people you love I pity them.\"\n\n\"Fuck you,\" Francesco growled. \"Your sister murdered a member of our family and almost killed the woman you love to make good her escape. Tell me how does one have a psychopath in their family and merely send her to rehab for a drug dependency rather than the help she truly needs. If we'd been told the facts this wouldn't have happened so, get off your high fucking horse and lay the blame where it fucking belongs.\"\n\n\"That's enough!\" The Commander roared from the doorway as Josh came to his feet. \"Nero you will stay with him,\" he pointed at Dante. \"The rest of you will come with me.\"\n\n\"You need to give Josh some leeway,\" Dante said once the room was cleared. \"The psychopath is his twin, and she left a rather nasty message for him on Peri's phone. Check it out,\" he tossed his phone to Nero and watched as the man listened to the recording with a sickened face. \"So you see he's hurting from all sides right now. Not to mention that he trusted his father's word that no harm would come to her here.\"\n\n\"Yeah I can see that but without the emotions, you have attached to the voice on the message I also heard the landing call of the pilot. Location, time and temperature,\" he smiled knowingly. \"You go and tell them. I'll stay. I don't want to leave her alone,\" Nero said.\n\n\"You go, my emotions tend to get in the way, in those group situations,\" he gave a sad half-hearted chuckle and sat on the bed to hold Peri's hand. \"Seems it's a family trait.\" Nero nodded and turned to walk away, but Dante spoke again. \"For what it's worth I am sorry about the man who died, we weren't told,\" he said sincerely.\n\n\"He compromised himself, the fault is no one's but the killer,\" Nero said pain lacing his voice, \"I'll be back in a moment they have only gone down the hallway.\" \n\n*****\n\nNik hurried through the airport to the cab rank. She was nervous to be back on home ground and looked around furtively as she stepped into a cab for the ride into the city. She checked her watch, it was getting late, and she worried about making it to the bank with enough time to do what she needed. She pushed the large sunglasses up onto her head. In these cheap clothes and with the change of hair colour and style it was doubtful she would be recognised, but she didn't like to take too many chances until she knew she was safely away from all those who would lock her up in that facility again.\n\nShe rummaged in her bag for her phone resisting the temptation to turn Peri's back on and see if anyone had tried to call her since she had left the new message. Instead, she checked flights to Bali leaving that evening using her phone. It would be better if she didn't have to spend the night in the city but with her plan in place, no one should be able to find her. She just had to get it in place and she sighed loudly as the driver stopped at yet another red light.\n\n\"I did say I was in a hurry didn't I?\" She said waspishly. \n\n\"Yes, Ma'am but there is nothing I can do about the traffic at this time of day. It is good that it is not peak hour, no?\" he replied in a heavily accented voice.\n\n\"I don't care about the traffic I care about my appointment which you are making me late for. Just go through the fucking light already. Could you be any slower?\" She almost yelled at him. She knew she should have hired a car, but she didn't want to waste time at the airport or have the hassle of parking. \"For fucks sack drive dammit,\" she yelled as soon as the light turned green.\n\nShe growled and cursed at the driver for the remainder of the journey and threw more than enough cash at him before the cab had even come to a complete stop. Pulling her sunglasses back into place she stepped out of the cab and hurried into the bank seeking out the concierge, the main reason she had chosen this bank was because it had a concierge and she knew him through a friend of a friend. It helped that he had nothing at all to do with her family either.\n\n\"Sebastian darling,\" she said sweetly pulling off the glasses so he could recognise her with the new blonde hair style.\n\n\"Nik sweetie, where have you been, I haven't seen you since last year?\" He asked smiling in a friendly but professional way keeping her at arms-length where he might have otherwise embraced her.\n\n\"Oh, I have been busy you know how it is. Do be a dear and help me get my locked box won't you?\" She wheedled hoping not to have to meet with the manager. \n\n\"Come right this way and I will let the manager know you are here while you sign in,\" he led her to the stairs leading up to the first floor. She cursed under her breath and followed him up the stairs. She took a seat after signing into the private vault and waited for Sebastian to return with the Manager.\n\n\"It's lovely to see you again Miss Maris,\" the balding gentleman who was the branch manager approached her. \n\n\"Thank you,\" Nik stood and graciously held out her hand toward him. \n\n\"You're wanting to access your locked box I hear?\" He continued to talk as they walked into the private vault with him keying in the pin code on a pad hidden from the view of anyone looking on. The glass door slid open, and they walked inside together as she spoke. She told him a carefully concocted story of a deadbeat boyfriend who had left in the middle of the night and taken everything, draining her bank accounts and even stealing her credit cards from her wallet. She was destitute and desperate which is why she need the contents of her box before her family found out she had let herself be robbed blind by the man they disapproved of.\n\nThe manager clicked his tongue in disapproval and commiserated as they entered the room and he went to a wall of small locked doors opening one and pulling forth a long slender steel box. He went to walk away but was stopped by a sudden anguished cry.\n\n\"Oh no, I forgot I needed the key. It was in my jewellery box, and the bastard took that as well,\" she began to cry. She wasn't pretending to cry she was so angry that the tears came naturally when she saw the flaw in her plan. She didn't have the fucking key. How could she have been so stupid? She turned her tears on the manager. \"Do you have a master key or something? Could we call a locksmith? What if he realises and comes to get this as well?\"\n\n\"No one but you can access your box, Miss Maris. I'm afraid I don't have a master key. All Master keys are kept at the head office, in Sydney, we could fill in the paperwork for unusual circumstances and asked to have it couriered to us tomorrow,\" he suggested.\n\n\"Tomorrow? You expect me to wait until fucking tomorrow?\" Nik stood her rage building rapidly as she turned a fiery gaze on the manager. \"Listen here you little man, do you know who I am,\" she stalked toward him holding the large steel box threateningly. \"I can bring a whole world of pain to you and your pitiful little bank. You better fucking open this box for me in the next five minutes or I will show you just who you are dealing with.\" She threatened. \n\n\"There is nothing I can do,\" he spread his hands. \"Now if you would like to fill in the paperwork with me I am sure we can have it opened by tomorrow.\" \n\n\"You will open this box now!\" she screeched at him and threw it, hitting him I the chest with the heavy steel making him fall backwards. The box tumbled to the floor the lid opening slightly to spill some of the contents on the floor.\n\n\"Holy fuck! I didn't lock it,\" she laughed remembering that she hadn't locked it in case she had to use it in an emergency. Ignoring the manager who lay sprawled on the floor gripping his chest and gasping she gathered up the spilled contents and the box from the floor and took it to the table. She quickly looked over everything and threw it into her bag. The bank manager had managed to sit up and had begun to get to his feet watching her warily. \n\n\"I'm so sorry about that, I was distraught, I'm sure you understand,\" she smiled sweetly. \"Thank you for all your help today, but I won't be needing your services any longer.\" She held out her hand to him. \"It's been a pleasure doing business with you.\" He took it weakly saying nothing and watching her leave the vault and head down the stairs.\n\nNik walked out of the bank into the busy city street noting several city-beat policemen running toward the bank. \"I got out of there just in time,\" she thought to herself. A hold up would mean camera's and media coverage and that's the last thing she needed. She laughed it was just her luck that the bank would get held up on the day she visited it, luckily she hadn't been delayed long by that moron manager.\n\nFeeling that luck was definitely on her side she decided to take a risk and visit her favourite boutique, and she stepped into a busy arcade. She'd been a good girl today, and she deserved a treat.\n\n*****\n\nJules looked up from his desk as his assistant showed a uniformed police officer into his office. Romey followed them in choosing to make it easier for the policeman from the start by not making him ask the same questions twice, \"How can we help you, officer?\"\n\n\"Your sister is Veronica Maris?\" He asked gruffly.\n\n\"Veronica Maris Donati though she has dropped the last name for some time now,\" Jules said easily, \"Yes she is my sister.\"\n\n\"Would you have any idea where we might find her?\" The gruff voice asked his expression unchanging.\n\n\"Might we ask why you would be looking for her? Being her lawyers and all, if she is in some trouble, we may be able to assist you,\" Jules continued his easy speech despite the gruffness of the officer and his counterpart looming in the doorway.\n\n\"We have evidence that she assaulted a bank manager earlier this afternoon,\" he replied sternly.\n\n\"She has had a busy day then. Officers in Canberra are seeking her for an assault that occurred early this morning,\" Jules replied thoughtfully appreciating the stunned look on the officer's face. \"Perhaps I should discuss the details with your superior and we could narrow the search somewhat. You see we have quite a few people looking for her as well since she left rehab this morning under less than ideal circumstances. It would be our advice to our client and sister, to hand herself over to the authorities as soon as possible should she come to us but I do not think we are among those she would contact right now.\"\n\n\"Let me make a call. I take it you would be willing to come with us to the station if necessary?\" He asked.\n\n\"Most certainly, the sooner we find her, the better for all concerned,\" Jules stated emphatically.\n\nRomy remained silent. He was reeling from the call less than half an hour ago from Ben. Murder, attempted murder and now assault, there was no helping Nik now and he wondered if any of them could have ever helped her. The family wouldn't intervene for her now, there would be no more chances, she could never return to the facility, she would have to face the full weight of the law and pay for her crimes. \n\n*****\n\n\"I'm sorry,\" Peri croaked her throat dry and rasping. Her collar had saved her from being strangled but was still bruised. In truth, she remembered very little about the event. She had gone to the library to meet Nik, who had said she had urgent news about Josh. Believing he had been in an accident or something equally life threatening she had gone to meet his sister, the rest was a blank. \"I should have...\" she swallowed, and Josh stopped her talking with a soft finger on her lips.\n\n\"Stop apologising. You did nothing wrong. It wasn't the guards fault it wasn't your fault, It's no one's fault but Nik's. She did this when everyone was trying to help her,\" Josh said sadly repeating the words of his father. They all blamed themselves for Peri's condition and the death of the guard, but hindsight is the curse of those who didn't have foresight.",
        "\"Is she okay?\" Peri whispered needing to close her eyes again but wanting to make sure Josh was okay, and she knew that Nik being okay was a large part of that. She didn't know how this was Nik's fault, but she guessed that a bookcase had fallen on them, and she had blacked out. No one had explained what had happened exactly, and it was the only thing she could think of to hurt her so badly.\n\n\"The guard was a man,\" Josh frowned in confusion and avoided telling her that he had died in last night's events.\n\n\"No,\" she tried to laugh but coughed softly. \"Nik. Is Nik okay?\"\n\n\"She left,\" he said gently. \"She should be the last person you are worried about after doing this to you.\" Peri lifted her hand to her face and winced. The shock of his words hit her like the bookshelf she thought had fallen on her. He took her hand from her cheek and lowered it softly back to the bed. \"Rest now, everyone is fine but you, just worry about getting better.\"\n\n\"Tired,\" she nodded. She was having trouble believing Nik could have done this to her. Was she trying to kill her? The horrible truth of her thoughts making her look at Josh with wide eyes.\n\n\"Rest,\" he urged her again. \"I need you to get better quickly so I can take you home.\" She smiled crookedly up at him from her bruised and swollen face and closed her eyes. She loved him, but she couldn't look at him right now. She suddenly felt afraid, and she fought against the darkness of sleep that threatened to overwhelm her again.\n\nHe sat watching her for long minutes seeing her breathing deepen and lengthen. Once he was sure she was asleep he stood and stretched turning toward the door. He wasn't surprised to see Dante standing there. \n\n\"Did you hear her?\" Josh asked and watched his brother shake his head slightly. \"She asked if Nik was okay,\" he said his voice cracking. \"I need some fresh air.\" He walked from the room and out into the front garden. The afternoon was darkening, and he knew if he had gone in the other direction when leaving the hospital, he would have seen the beginning of the sunset. He was glad he hadn't.\n\n\"Nik's been seen back at home. She assaulted a bank manager. Jules and Romey are liaising with the police,\" Dante said from behind him. \n\n\"Good,\" Josh said. \"D. How?\" the question was there in his voice without him having to ask it.\n\n\"We all missed it, not just you. We missed all of it. Maybe because we didn't want to see it, but the more likely reason is that she hid it so well. We only saw what she wanted us to see. We all forgave her for her vanity and temper because that was always there. We got mad, we fought with her, but we always accepted her back into our lives without question because she's one of us.\" Dante tried to wrap his head around how things had gotten so out of hand. He felt for Josh he didn't know that he could be so calm if it were Lio that had become psychotic.\n\n\"How did I not see it? Me?\" Josh asked again.\n\n\"There was nothing to see,\" Dante shrugged. \"She was a self-absorbed, bad tempered bitch, but she wasn't dangerous. It could have been the drugs, the rehab, Papa finally punishing her by sending her here or just being imprisoned here that pushed her over the edge.\" He refrained from saying that Josh choosing Peri over her might have been a factor. Without him as her anchor to reality and the family, she could have felt she had nothing left to lose by turning her back on them all. She wasn't close to any of them except Josh and Dante felt his own guilt about that.\n\n\"Tell that to Nik's maid who was scared for her life,\" Josh said shaking his head. \"I can't bear to hear Peri apologise again. Why isn't she angry at me, angry at Nik, angry at the people who should have been protecting her? She should hate us all right now, and I wouldn't blame her for it.\"\n\n\"She's in pain and barely conscious, give her time to recover and understand what happened, then she'll be angry. You'll be lucky if she doesn't throw that ring at you and call the whole thing off,\" Dante teased. \"Then I can swoop in and be the knight in shining armour.\"\n\n\"Yeah, thanks for being so chivalrous,\" Josh groaned.\n\n\"I do what I can,\" he moved forward to stand beside Josh. \"Could be worse, Carlo could have the same idea and let's face it I'm the better option.\"\n\n\"Jesus,\" Josh groaned again. \"If this is your way of making me feel better, it leaves a bit to be desired.\"\n\n\"Oh, you wanted to feel better? Hang on I'll get Lio, he's the nice one remember,\" Dante said seriously.\n\n\"Don't you ever get tired of saying that?\" Josh asked.\n\n\"Can't fight the truth. Tell me did you ever get tired of being the nice one when Nik was being a bitch?\" Dante asked not expecting an answer. \"I imagine Lio gets tired of it, but he too nice to say so,\" he chuckled.\n\n\"So who's the nice one out of the Valentine brothers?\" Josh smiled feeling better for the fresh air and his brother's company.\n\n\"Jules,\" Dante said without hesitation surprising Josh, who turned to look at him. \"Come on you have to admit that Romey enjoys wrecking everyone's fun a little too much. You saw what he did to the girls on Christmas Eve. He could have just let them believe they got their revenge on Ang, but no he had to tell them they fell for what was an ingenious little set up by Rosanna. He gets too wrapped up in his own cleverness.\"\n\n\"Hey,\" Lio called walking toward them. \"Papa is about to send out a search party for you as well. Andie's on her way from the airport with Pete. Charles stayed behind to coordinate the search up there with Ben.\n\nJosh felt relief and dread flood through him equally. How could he possibly explain this to Andie?\n\n*****\n\nNik felt like her old self again. She'd spent the remainder of the afternoon shopping before heading back to the airport. She was enjoying the anonymity the short blonde bob gave her and she had purposely walked passed an acquaintance to see if there was a glimmer of recognition. There hadn't been, and she felt empowered by the event. Even the presence of airport security at the check-in counters didn't faze her, and she moved through confidently.\n\nIt amused her that her blonde hair suited her new persona far better than the longer lustrous dark tresses she had always been so proud of, and she found adding a slight accent to her voice only highlighted the distinction between her old self and the new version she had created.\n\n\"Have a lovely flight, Miss Mariskov,\" The girl smiled brightly handing her back her passport and boarding pass.\n\n\"Tank you, Darlink,\" Nik returned her smile and took the offered pass picking up her hand luggage and walking toward the first class lounge. Ordering a glass of champagne, she took out the two phones she had bought earlier in the day. Feeling safe that she was on her way to a new life she turned on Peri's phone and listened to the messages. She couldn't help but laugh at the number of stunned silences that were recorded followed by clicks. She had expected that Josh would have ranted and raved at her. His temper was dreadful, but he always came around to her way of thinking eventually. He would realise that she had done him a favour by getting rid of the fat cow.\n\nDisappointed that Joshua had not left a message on the phone she was tempted to call him just to make him thank her for saving him from a life a misery. Perhaps it was too soon, and she could do that tomorrow once she had landed in Fiji. Once again she felt her irritation that she couldn't get a flight to Bali, but Fiji would have to do, at least as a stopover. She turned the phone off again and picked up her own phone. \n\nShe stared at her phone for some time considering if there was anyone she cared to say goodbye to. While she wanted to know that Josh was suffering for his betrayal, she had already decided he wasn't ready to thank her yet, and she hated her other brothers equally for not coming to her rescue. She had never got along with Lucy and her holiday a few years ago before she got married just made the distance between then worse. Maryanne was the most annoying person in the world, and Nik would rather hand herself back over to the Battaglia than talk to Maryanne.\n\n\"Her friends wouldn't care, they only cared about the next party, the next fix, the next big thing,\" she thought to herself. She wouldn't miss any of them and doubted they would miss her. She knew there was only one person who loved her unconditionally, and would care that she was leaving the country for an extended amount of time. She wondered briefly if it was wise to call to say goodbye to her mother.\n\nShe looked around the lounge at the people gathered there and was not surprised to find none of her family there to take her back to the facility. They must know by now that she had escaped in all the kerfuffle. Her carefully planned alibi about one of the other rehab patients going mad and killing her guard being the reason she ran away seemed unnecessary now. There was one way to find out if they knew she had left yet. She picked up her phone and called her mother.\n\n\"Hello?\" Antonia answered her phone warily, not recognising the number that flashed up on her screen.\n\n\"Hello Mama,\" Nik said easily as if nothing was out of the ordinary.\n\n\"Veronica where are you? We have all been worried sick,\" Antonia said anxiously. \"Come home so we can work all this nonsense out.\"\n\n\"Don't be silly, Mama,\" Nik laughed. \"I'm not going back to that facility again.\" Well, at least, that answered her question.\n\n\"If you don't come home I can't help you. Please, Veronica what you have done is serious, come home and I will do everything I can to protect you,\" Antonia begged her daughter.\n\n\"I haven't done anything wrong,\" Nik said easily. \n\n\"What you did was very wrong, you hurt people Veronica,\" Antonia began to cry into the phone, \"Please come home, come home to me.\"\n\n\"Stop crying Mama,\" Nik said angrily. \"I will come home when I am ready. I just wanted to let you know I was fine and that I was leaving until everyone calms down and lets me lead my life the way I want.\"\n\n\"Where are you going, you know that your father will just find you again, come home Veronica it is the only way,\" she begged.\n\n\"Mama, I have already said no, stop begging like a child.\" A boarding call went out, but it wasn't for her plane, so she focused again on her mother. \"I will call you when I am settled and let you know I am happy and healthy,\" she said with finality. \"Goodbye Mama,\" she said softly hearing her mother launch into a fresh bout of sobbing and ended the call.\n\n\"Well that's the end of that phone,\" she said out loud and placed it on the bar fully intending on leaving it there when she caught her flight. \"Get me another,\" she commanded the bartender tapping a fingernail on her glass at him as if he should have known she needed another without making her bother to ask. Checking her watch, she hoped that her plane would not be delayed, the call to her mother had unsettled her, and she looked around the large lounge again for anyone she might recognise.\n\nShe made eye contact with a handsome young man who seemed to be studying his phone. He smiled at her, and she considered that he might be a reasonable diversion to while away the time before her flight. Taking the glass of champagne, the bartender put in front of her she moved to the comfortable couches where the handsome young man sat studying his phone.\n\n\"Do you come here often,\" she laughed easily and eyed him in a predatory way.\n\n\"Seems like I am in the air more than I am on the ground,\" he laughed with her.\n\n\"Nikita,\" She held out her hand.\n\n\"Gordon,\" he took her hand in his briefly before sitting back in his chair. \"Holiday?\" He asked.\n\n\"Something like that,\" Nik responded. \"Business?\" she asked.\n\n\"Something like that,\" he said with a chuckle.\n\n\"Excuse me, Miss, your phone has been ringing,\" a waitress said from her shoulder proffering the phone she had left on the bar.\n\n\"That's not mine,\" Nik replied nonchalantly.\n\n\"The bartender insisted, Miss,\" the waitress placed the phone on the small table beside Nik and walked away. \n\n\"Stupid girl,\" Nik mumbled in irritation. She looked over her shoulder and saw two men in dark suits talking with the Bartender and narrowed her eyes. They were thickset and clean shaven and the type of men who she very much wanted to avoid right now. She became slightly worried when the bartender kept glancing in her direction.\n\n\"I'm sure she was just following protocol. Airport staff don't like finding random phones or luggage lying around with no owners with all the terrorist activity in recent years,\" Gordon reassured her. The phone started to ring again, and he looked at it. \"Answer it and tell them the phone is lost. Ask who it belongs to and return it to the bar with the name,\" he suggested.\n\n\"Sounds like a good plan, you answer it,\" she tossed the phone at him.\n\n\"Hello?\" Gordon answered the phone. \"No, I'm sorry I don't know who that is I just found the phone in the Qantas first class lounge maybe they already caught their flight.\" Nik listened to his end of the conversation only. \"Gordon Sumner,\" she watched him carefully as he paused and looked around. \"No one matching that description here, the only tall, beautiful lady I see is blonde, not brunette.\" He sat back into his seat again and winked at Nik. \"Yeah, good luck tracking her down.\" He tossed the phone back to her. \"Your mother sounded pretty upset,\" he said softly gauging her reaction.\n\n\"She's and emotional woman,\" Nik tossed her head and picked up the phone glaring at it. She hadn't even realised she had just admitted that the phone was hers for a moment and then looked at him with narrowed eyes. \"Clever,\" she said. \"Why did you lie for me then?\"\n\n\"I didn't lie she asked if I could see a beautiful tall brunette. Do you see one?\" he asked. She shook her head, and he smiled. \"It's your life, none of my business,\" he shrugged. \"But as my flights just been delayed,\" he indicated the monitor showing the departures schedule, \"You can tell me all about it if you like.\"\n\n\"Seems we're on the same flight,\" Nik looked up at the screen and sighed. She craned her neck around further to see the dark-suited men still standing at the bar. For the first time that day she wondered if her luck was about to run out. \n\n*****\n\n\"This is fine, this is good, your alive and you'll recover,\" Andie said in a voice stilted by the shock of seeing her badly injured daughter.\n\n\"Andie,\" Peri croaked one eye fluttering open in confusion.\n\n\"Even better you can't talk and tell me off for wanting to do something with your hair,\" she said searching in her handbag for a comb and hiding her tear-stained face. \"Oh Peri,\" Andie gave up the fight of trying to be brave and let her tears flow again, dabbing at her eyes with a tissue. \"What would I do if something happened to you,\" she cried gripping her daughter's hand.\n\n\"Andie,\" Peri croaked again a crooked half smile appeared on her swollen face. \"Happy to see you,\" she whispered hoarsely. \"Take me home please.\"\n\n\"Aww baby, where else would I be right now,\" she cried and gently leant over Peri hugging her softly. \"Let the doctors look after you, and as soon as I can manage it I will get you out of here and back home where you belong.\" \n\n\"Want to go home please, Mummy, home,\" Peri mumbled, and a tear slipped from the one eye she could still see out of. \"Please Mummy,\" she cried painfully.\n\n\"You got it,\" Andie sniffed and immediately straightened up. Hearing Peri call her Mummy like a little girl pulled at every maternal instinct in her body. \"We're going home,\" she said holding Peri's hand firmly. She looked at Pete, who had escorted her on the plane and then here from the airport. \"You make this happen or so help me I will call the police and tell them she is being held against her will by the very people who did this to her. You get us home to tonight! Call Charles tell him to make it happen.\"\n\n\"Thank you,\" Peri croaked, and her mother sank back down into the chair beside her.\n\n\"Excuse me, Andie. May I call you Andie?\" Nero asked politely stepping forward.\n\n\"Yes, fine,\" Andie said absently to the doctor who had filled them in on Peri's condition out in the hall before she and Pete had entered the room. \n\n\"Your daughter was unconscious when we found her and has a head injury. Flying anywhere is out of the question for at least a week. It would be best if she stayed here where she can be looked after properly while she recovers,\" he said softly. Andie looked at the daughters swollen and bruised face again and turned a steely gaze on the man who spoke considering him quietly. \"I am sure Dr Lee would agree with my prognosis,\" he added stepping back again from her look.\n\n\"You don't know Peri very well and you sure as shit don't know me,\" Andie said her voice as steely as her gaze. \"Let me tell you one thing that you need to know right at this moment. My daughter has not called me Mummy since she was ten years old, the fact that she has done that tells me just how distressed and upset she is here in this place with you people. My daughter has just begged me to get her out of here and take her home and if I have to call in help to do that I will, but I am not leaving her a minute longer than I absolutely have to.\" She looked around the room spying Josh hovering near the door as the two doctors stood with Andie.\n\n\"If you love her at all,\" she said firmly to Josh, \"You will help me do this, you know I am right. Being here is only upsetting her further, so you make this happen. I don't care how you make this happen, but do it, or I will start making calls and screaming at people until it does.\" There was a determination in her voice that Josh had never heard from her before.\n\n\"Let's give them a moment,\" Pete said before Josh could answer Andie. \"I'll call Charles, Andie. We'll see what we can do. We need a nurse to stay in the room and keep an eye on her, is that okay?\" he asked carefully. She nodded and turned back to her daughter drawing another tissue from her handbag and dabbing at the tears that rolled down one side of Peri's face.\n\nThe men who had been standing in the room moved out into the hallway and walked down to the conference room. Josh was devastated, she had barely said anything to him, only apologising to him over and over again. He had hated how upset and distressed she had sounded when she begged Andie to take her home. It hurt that she hadn't asked him to take her home and the idea that she didn't want to go anywhere with him right now hit him like a punch to the gut. He felt sick that the very thing that was supposed to ensure their future together was now the thing that would drive them apart.\n\n\"How long twenty-four hours? Forty-eight?\" Pete asked Nero taking Andie's threat seriously.\n\n\"Three days,\" Nero said flatly.\n\n\"What you have to understand is that Andie and Peri are not family and they won't just do whatever you say like a meek and mild little woman. Andie will follow through on her threat and at this point if she doesn't I will,\" Pete said. \"If it must be longer than twenty-four hours, then you need to transfer to the Canberra Hospital, being here is not helping her recovery or her state of mind.\"\n\n\"Call a meeting,\" Josh said. \"She wants to go home, and I owe her that much for putting her through all of this.\"\n\n\"The police will want to question her as soon as we release her,\" Nero warned. \n\n\"Maybe it's better for her to face that and see that we are not covering up Nik's crimes anymore,\" Dante had followed them into the room. \"Has anyone even told her Nik is gone?\"\n\n\"So the head injury is the major cause of concern?\" Pete asked.\n\n\"Yes, but she also has multiple fractures of her right forearm and ribs, a dislocated collarbone and a fractured cheekbone all of which will take time to heal,\" Nero said. \"Not to mention the bruising to her throat torso and legs.\"",
        "\"You have sought the advice of a neurologist?\" Pete asked again.\n\n\"I have spoken to the best at Calvary and sent him the films of her MRI,\" he explained.\n\n\"Seems that is a reason in itself to move her,\" Pete said, \"I would suggest you get him here first thing in the morning, or I will be moving her to the Calvary Hospital myself. She is soon to be part of the Donati family and, therefore, more our responsibility than yours, so I suggest you pass over your notes to me and take a back seat in the decision making regarding her healthcare. I have been her doctor for some months now and know her better than anyone on your staff.\" Pete was barely holding his emotions in check after seeing Peri's battered face and hearing her cry to her mother.\n\n\"I think we should meet with the Commander and Joseph before making any plans,\" Nero said feeling outnumbered.\n\n\"Good you organise that, and I will contact the neurologist to get a proper examination of our patient,\" Pete said. \"His name would be?\" he stared at Nero belligerently. He had been brought up as a protector of the Donati family and while he had never had to flex his muscles before he had no qualms in doing so just as his father always had. Seeing the man stall he spoke again, \"Don't worry, I can find out myself.\"\n\nPete took his phone from his pocket and called his father outlining the situation, \"Come grab me for the meeting,\" he whispered to Dante as he walked back to Peri's room. Smiling as he entered quietly, he passed his phone to Andie and let his father console her. Charles had been disturbed by Pete's account of their arrival at the hospital, and as soon as Nik was found and handed over to the authorities, he would be with them. Andie handed the phone back to Pete and thanked him with a sad smile.\n\n\"I'll help you get her home as soon as possible, it won't be tonight, though,\" Pete said seriously. \"There is a real risk with her head injury, and we need to wait at least until tomorrow morning,\" he explained. \"I have put them all on notice though and will take over her case management from here on out.\"\n\n\"Thank you, Pete,\" Andie whispered. \"I just feel so helpless, and she is so, so...\" she looked at her daughter and began to cry again. Peri turned her head to be able to see Pete, the right side of her face and body singing in pain. She looked at him for a long moment before croaking unintelligibly making him move closer to hear her.\n\n\"Home,\" she whispered hoarsely, \"Want to go home.\"\n\n\"I'm getting a neurologist to come tomorrow morning and give you the all clear to fly. Your head injury might make that risky. If you can't fly would you like to go to another hospital away from here?\" he asked gently.\n\n\"Yes,\" she whispered nodding slightly, \"Please.\" \n\n\"The police need to talk to you and will want to do that as soon as I move you from this room. Are you up to that?\" he asked seeing fear enter her eyes. \"Might be better to see them sooner rather than later.\"\n\n\"Yes,\" she nodded slightly again embracing the pain as a way to clear her drug-fuelled brain and stay awake. \"Tonight, just Andie, no Josh or brothers.\" Her whisper faltered. She had no intention of protecting Nik from the police, but she couldn't face Josh or his family as she pressed charges against Nik knowing how close they all were. He wouldn't forgive her, but right now she didn't want to protect her as the family did. She had to get away from this bizarre world and if talking to the police got her there faster she would do it. She needed to get away from them all and their strange view of the world. She needed to go home where they couldn't surround her and make her feel as trapped as she did in this hospital bed. Most of all she needed to get away from Josh and the hurt in his eyes every time he looked at her.\n\n*****\n\n\"Would you like another drink?\" Gordon asked as they continued to chat.\n\n\"Sure why not?\" Nik answered having relaxed again as the dark-suited men sat at the bar talking and seemingly waiting for a flight. They no longer seemed interested in her, and she turned her head to glance at them again as Gordon flagged down the waitress and ordered another drink for them.\n\n\"You keep looking over your shoulder anything wrong?\" He asked.\n\n\"Those guys just seem out of place here, more the business class type I would have thought. Clean cut, dark suits, if I were to make a judgement call I would say military or police,\" Nik said turning back to her companion.\n\n\"Police make you nervous?\" he raised an eyebrow.\n\n\"Hardly,\" she said derisively. \"I just wonder what they would be doing in a first class lounge when it's plainly obvious they don't belong here.\"\n\n\"Swap seats with me and you can watch them all you want. I could use a change of view,\" Gordon stood and stretched out his long limbs. He held a hand out to her helping her to stand and brush past him as they exchanged seats. \"Better?\" he asked as she settled down.\n\n\"Not particularly, she moved to the edge of the chair allowing Gordon to partially block their view of her. \"Oh God they're multiplying,\" she groaned and rolled her eyes as a third man in a dark suit walked up and greeted the two men. \n\n\"What?\" Gordon moved turning to look toward the bar allowing them to see her fully as the newcomer turned and looked directly at her.\n\n\"Fuck!\" She exclaimed and stood to leave the lounge. Turning she saw the door was blocked by several burly men in dark suits, so she turned back to Gordon, who also stood now, panic making adrenaline rush through her body. \"Fuck!\" she yelled. \"You did this to me!\" she threw her glass at him with force and then launched at him her hands extended toward his throat. He twisted batting her hands up above her head and tripping her with a sweep of his leg as he pivoted.\n\nRighting himself, Gordon quickly knelt with one knee on her back and wrestled a hand behind her back as she flailed around, screaming curses at him. He was helped almost immediately by his fellow officers, and she was pulled to her feet screaming like a banshee and kicking out at anyone close to her. She was forced into a chair as several uniformed police officers conducted crowd control and ushered the other patrons away from the vicinity. Romey approached Nik and looked at her coldly while she screamed and struggled with the men still trying to subdue her.\n\n\"Nik,\" he said in a quiet rolling bass. \"Nik,\" he repeated a second time raising his voice in anger.\n\n\"You bastard,\" she spat giving up her struggle momentarily as she glared at her brother. \"I won't go back to that facility,\" Nik said with determination.\n\n\"No, you won't. You will go to jail. You won't pass go, and you won't collect two hundred dollars because this is no longer a game. You have committed the worst criminal act imaginable, and you have been written out,\" he pronounced her sentence seeing the disbelief in her eyes.\n\n\"Fuck you! I've done nothing wrong. I'll be out on bail within an hour,\" she hissed. \n\n\"You left one of your victims alive to identify you, very messy work Nik,\" Romey shook his head. \"I would suggest you find a lawyer as soon as possible. You are going to need a good one. That bank manager you assaulted is also pressing charges, and I am sure my friends here will be very interested in how you came across a fake passport.\"\n\n\"You can't prove anything because I did nothing wrong,\" doubt had started to creep into her voice though and she considered her brother. If it were, Jules she might have cried and won his sympathy but faced with Romey the only option she had was denial. She could go along with them for now and find the weak link to make good her escape next time. Men were always easy prey, and her attitude changed with thought. She stopped struggling and smiled at the officers. \n\n\"Passport says Nikita Mariskov,\" one of the men in a black suit brandished her passport and boarding pass after going through her handbag.\n\n\"I can identify this woman as my sister, Veronica Maris Donati,\" Romey returned her smile. \"I'm happy to sign an affidavit to that effect and can give you contact details for her parents and the other members of her family.\"\n\n\"I don't know why you are lying to these men, but that's a crime, Romey,\" she said innocently. \"You are about to be in the cell right beside mine for perjuring yourself,\" she said with certainty.\n\n\"The likelihood of that happening is about the same odds as you getting bail,\" Romey laughed loudly and walked away leaving her in the hands of the federal police who began to read her the charges and her rights.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "escape",
        "psychopath",
        "investigation",
        "police"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-tables-ch-12"
}