{
    "title": "Speech and Debate Pt. 06",
    "pages": [
        "Through the Looking Glass: A Nerd in the Weight Room\n\nOn a normal day, I would wake up by 7:00 AM to be out the door by 7:30 for first period bell at 8:05. I had my routine down to a strict science. 7 minute shower, 3 minutes dressing, 1 minute on hair, 4 to pack my bags and the rest at the kitchen table inhaling whatever was available before jumping in my Camry and speeding to the highway.\n\nSo when I woke at 5:47 AM that first Monday back at school after winter break in Boston, completely energized as if I'd slept for a year, no one was more surprised to see me nearly skip down the hall to the bathroom than my early-rising mother.\n\n\"David? Are you okay? Are you sick? What are you doing up so early?\" \n\nShe seemed concerned, already put together and dressed for her day teaching 5th Grade Computer Science at the public elementary school.\n\n\"I'm fine, Mamma. Just couldn't sleep,\" I said.\n\nShe raised her eyebrows in the way mother's do when they can sense something is different but don't want to wade into the treacherous teenage rapids too deeply without sussing out more information. I closed the bathroom door on her bewildered expression and started the shower.\n\nI still don't know what I found to occupy the time. My shower was luxuriously long, until it was ended by the vigorous knocking of my little sister. I spent more time picking out my outfit for the day than I had if you'd combined the entire amount for the academic year thus far. I even snuck into Mamma's bathroom and \"borrowed\" a little hair product, something that purported to tame fly aways, whatever those were, and ran it through my blonde hair.\n\nI obsessed over my visage in the mirror for longer than I'd like to admit, completely engrossed in making myself look my absolute best. I was decently satisfied with my results by 7:15, though still a mix of insecurity and anxiety not uncommon before one jumps from an airplane. Or so I've been told.\n\nMy sister made some snarky comment from her permanent residence slouched into the couch. Something about street walkers and the futility of human connection. I was actually looking forward to the day she would begin to transform into something resembling normal.\n\n\"Eat a dick, Virginia Woolfe,\" I said with as much love as I could muster for my closest genetic counterpart, and ran to my car.\n\n\"That's more your department, isn't it?\" she quipped.\n\nAs an academic scholarship student, I was in every possible Advanced Placement course. And there were a lot of them. In my entire High School career, I had only ever taken 5 non AP courses. My entire senior year was APs. \n\nDaniel, as a full-tuition-paying athlete, only had two AP classes, both of which he had with me: AP Chemistry and AP English Literature. Chemistry was not my strong suit, but English Lit I could pass in my sleep. Having a teacher for a mother meant that reading the classics had been compulsory. I was buried in Jane Eyre when my contemporaries were just discovering the Babysitter's Club and The Hardy Boys. \n\nI was distracted through my first and second period classes, only raising my hand occasionally. I took the assigned homework and left without my usual after-class chat with the teachers. Ms. Diggs, AP Anatomy and Physiology, actually seemed hurt that I didn't stay behind after the bell released us to head to our third period, the last before Senior Lunch.\n\nTo get to my third period, I had to walk from the main Upper School building across the vast expanse of lawn to the smaller Annex, a collection of classrooms laid out in a double-cross formation with a central seating area and a small fountain. As usual, the benches were occupied by various affluent caucasian kids of various ages, their eyes darting around them, their heads bowed in semi-private conversations as they gossiped about their best friends and worst enemies with equal relish. I paid them no mind and propped myself against one of the bare trees in the corner of small courtyard to wait for the third period bell. I pulled my \"pleasure read\" from my backpack and began to scan the lines without really taking them in.\n\nA disturbance at the very edge of my vision pulled my gaze up. The crowds of kids seemed to be parting to either side of the sidewalk, making a small central aisle down which walked the school royalty. If there had been wind machines and slow motion cameras, they wouldn't have seemed out of place.\n\nAt the center of the pack was Amy. Arrayed behind her in order of apparent importance were the remainder of the \"party of five,\" as they so wittily dubbed themselves: Ashley, Ally, Amanda, and Katie. I always felt a little sorry for Katie, what with the \"K\" name ruining the complete alliteration possibility. We had an Adrienne in our grade, but I never quite figured out why she didn't make the team. Poor Katie was also the only Junior, having been held back after a disastrous case of mono which never seemed to heal the year before, most likely due to her inability to keep her mouth to herself and well documented penchant for football players. She'd never been able to catch up. At least there was a small hope that she could become queen next year and align the K names behind her throne from the crop of junior girls dying to move up the social ladder.\n\nDaniel walked a few paces behind Amy, a deep green winter jacket doing little to cover his shoulders and chest, his blue jeans clinging to his thighs. Knowing what lay under those jeans now made me thankful that us Seniors were allowed to wear casual clothes and didn't have to stick to the loose Khakis and white button downs the rest of the students were forced into. Several of his jock teammates followed behind the main triangle. I wasn't sure who was attached to which girl, if at all, but they made a veritable wall of testosterone behind the Queen Bee and her court that few would have been able to cross. Certainly not me.\n\nDaniel's eyes met mine for a second and his mouth curved up in a slight smile. I tried not to, but I returned the gesture. \n\nAmy had stopped the group to remove an underclassman from his seat on one of the nearby benches. He'd scampered away without comment and she plopped herself down as if by divine right, and motioned for Daniel to sit beside her.\n\n\"Just a sec,\" I heard him say as he placed his book bag in the place she'd indicated. \n\nHe walked towards me, pushing his hands in his jacket pockets. My eyes must have gone wide with terror because he seemed concerned as he approached me, still leaning on my tree.\n\n\"Jeeze, Nerd. You look like you're going to have a heart attack. Breathe, dude!\" \n\nI released a breath I hadn't realized I'd been holding since he began walking towards me. I silently thanked him for the reminder to remain alive.\n\n\"Sorry,\" I mumbled and looked at my feet as they shifted nervously in the dirt beneath me.\n\n\"Don't apologize,\" he said. His hands were still in his pockets but my skin began to tingle with the hope that he would reach out and touch me. I knew he never would, never could, but I wanted him to nonetheless. \"I just wanted to make sure you got home okay last night? You never responded to my last text.\" \n\nHe winked at me. \n\nI looked around to see if anyone had noticed my jaw fall to my chest. Daniel was actually hinting at...whatever it was we had done. I moved my mouth but no sound came out.\n\n\"I take it you liked it, then?\" \n\nI nodded too quickly.\n\n\"Mmhmm.\"\n\n\"Good. My older brother nearly caught me with it all the way in. It was crazy!\"\n\nNo sound. No words. Hard to breathe. Was that the sound of harps strumming gently in the distance?\n\n\"Anyway, glad you liked it. See you in fourth period?\" He raised his eyebrows at me in question, as if he was unsure if I would be there, like I would try to escape campus between now and then in order to avoid him entirely.\n\n\"See you then,\" I said quietly.\n\nDaniel leaned in a little, a nearly imperceptible change in our closeness that made me thankful for the tree behind me.\n\n\"See,\" he whispered, \"I told you I would find a way. This isn't so bad, right?\"\n\nI shook my head. \n\n\"Nope.\"\n\n\"Fourth period,\" he called over his shoulder as he walked back towards Amy and her waiting companions. \n\nI watched his perfect ass move beneath the denim of his jeans and wondered what he was wearing, if anything, beneath them today. My cock began to stir and I busied myself with repacking my book in my backpack to cover the rising flush in my face.\n\nChrist, but it was hot all of a sudden.\n\nAmy rose to her feet as he headed back towards her. I had been able to keep mostly out of the way of her reign of social terror the past 3 and a half years, but the look she wore plastered on her face was unmistakable. Her perfectly arched eyebrows drew in over her mascara-lined green eyes. Her manicured and be-ringed fingers gripped her forearms and she tapped one foot in a high-heel that probably cost more than my house, or at the very least my car. I caught her gaze shifting from Daniel to me as I watched him leave.\n\nI'm not proud of the fact, but I would be lying if I said she didn't terrify me a bit. Her long brown hair was perfectly curled and shifted gently in the February breeze and everything about her seemed to scream wealth, privilege, beauty, and power. \n\nShe could have been very attractive if the entire package hadn't been marred by the very obvious fact that she KNEW just exactly how beautiful she was. The combination of genetic lottery and rumored visits to a Beverly Hills \"family friend,\" had not only given her perfectly full lips and breasts you'd find on the cover of theVictoria Secret catalogue, displayed even in the chill in a low cut satin blouse, but someone had also injected about 6000 CC's of pure, uncut ego into her brain. \n\n\"What was that about?\" She asked as Daniel came to stand before her. In her heels, she was almost an inch taller than him, though Daniel outweighed her by a good 50 lbs. \n\nI wasn't sure if \"that,\" had been meant to refer to me, or just the fact that Daniel had spoken to me. \n\n\"What?\" I heard Daniel reply.\n\n\"THAT!\" Amy pointed at me.\n\nI swung my backpack up onto my shoulders and raised my eyes. It's one thing to THINK people are talking about you. It's quite another to have nine pairs of eyes locked on you, judging you in detail until you thought they could identify the last time you'd brushed your teeth and changed your underwear. I felt like an animal in a zoo, but I found myself unable to move from their collective stare.\n\n\"He's a cool dude, Amy,\" Daniel said. Every eye suddenly moved from their inspection of my body and turned to Daniel, disbelief evident in their faces. I sighed a bit in relief.\n\n\"Ummm, no, he's not babe, do you even...\" She began. \n\nI felt myself tighten a bit, drawing in on myself as I readied for the assault of juvenile and hurtful remarks she could and would no doubt lob at me without thought of the human consequences. But they never came.\n\n\"Shut up,\" Daniel said loudly. \"David's cool. Leave him alone, Amy.\"\n\n\"But...,\" she tried again.\n\n\"I said, leave him alone. We're friends. Understand?\" His voice was dark and serious. \n\nFor the first time since I'd known her, Amy seemed shocked. Her eyes widened and she looked a little as if she was going to cry. She didn't, but the effect was mollifying none the less.\n\nAmy nodded and gathered her belongings. Daniel didn't stay behind to wait for her. He began to walk to his next class, seeming uncaring if his girlfriend followed or not. \n\nThe bell rang and the entire group began to disperse. \n\nI walked towards my classroom, running the entire exchange through my mind. I may have been more conscious of my surroundings than I had been before the weekend in Boston, but I could swear that I felt eyes on me as I walked, heard the twitters and whispers as I passed. \n\nI sat in my next class and steadied my nerves as best I could. My phone buzzed in my pocket and I pulled it out in the few seconds before Mr. Blaski began the AP World History lesson.\n\n1 unread text message:\n\nDANIEL: I'm sorry. Amy is such a bitch sometimes. You okay?\n\nI quickly replied\n\nDAVID: I'm fine.\n\nHis reply was almost instant, as if he'd been typing it before I responded.\n\nDANIEL: All I wanted to do was kiss you.\n\n\"All right guys, we were just getting to the fall of the Byzantine Empire. Page 734 please. Settle down!\" Mr. Blaski said from the front of the class.\n\nI closed my phone and did my best to focus.\n\nTo this day, I still have no clue how the Byzantine Empire fell. For all I know, it's still going strong.\n\nDr. Plarston's AP English Lit class was arranged so that two banks of desks faced each other across a wide center aisle that she would pace up and down as she encouraged us to analyze our assigned readings. As usual, I sat in the front row of one of the two groups and pulled out my notebooks and the assigned novel for this week: Catcher in the Rye.\n\nBefore Boston, Daniel would usually sit in the back of the opposite bank, two other literarily gifted athletes flanking him. Today, when he arrived a few moments after me, he sat in the front row directly opposite my desk. He sank down low in his chair and spread his legs wide beneath the desk, giving me a perfect view of his very obvious bulge. Knowing that it hid his beautiful uncut cock and massive balls dried my tongue and somehow made me sweat at the same time. I wanted to sink between them and suck him dry right there in front of everyone.\n\nI found myself staring at his legs as we began the lesson. Dr. Plarston paced back and forth between us, but I heard little of her analysis. Luckily, I had read the book several times before so I could reasonably answer any general questions if they came my way. That is until Daniel shifted in his seat, causing me to look up and meet his brown eyes.\n\nAs I watched, the tip of his tongue ran over his bottom lip and then moved to trace the upper and his black eyebrows arched high. His right hand traveled to his crotch and squeezed on his package while his gaze shifted to my own cock, growing rapidly under my desk. He winked at me and Holden Caulfield vanished to so much angst ridden dust in the wind.\n\n\"David, what do you think was meant by the use of that image? Do you think it was intentional on our author's part or simply our modern interpretation?\" \n\nDr. Plarston stood at the front of the room, leaning back leisurely on her tall teacher's stool and staring pointedly in my direction. I was still locked on Daniel's cock and his now-wetted lips.\n\n\"Hmm?\" I asked, shaking myself from the stupor a bit.\n\nShit! What had she asked? Something about an image?\n\n\"Oh, well...umm,\" I began. \"I think that is open to interpretation and highly subjective on the part of the reader.\"\n\nDr. Plarston nodded and resumed pacing.\n\nThank you God, or your chosen deity, that I possessed the gift of literary bullshitting!\n\nDaniel caught my gaze and smirked at me.\n\n\"Asshole,\" I mouthed across the divide. \n\nHe laughed quietly and returned to examining his copy of the novel.\n\nLuckily, the remainder of class passed without incident and the bell sounded as usual. We gathered our books and I headed to Dr. Plarston's desk to ask about the next week's novels. I liked to read ahead just in case any of my other course load got unexpectedly heavy. \n\nI leaned lazily on her heavy wooden desk and was just about to open my mouth when I felt a book bag push into mine from behind, someone bumping into me as they made their way to leave. Normally, I would have taken little notice. Most people didn't see me or pay me much attention so I was used to be bumped and jostled a bit. But then I felt fingers grab at my ass. It was quick, there one instant and gone so quickly, I thought I must have imagined it. But the effect on me was apparent and drastic.\n\nI jumped and my voice squeaked high in my throat. My flailing knocked a pile of papers from Dr. Plarston's desk and sent her name plate crashing to the floor with a metallic thud. For the second time today, every eye turned towards me. The entire room seemed to go silent, waiting for me to do something else stupid.\n\n\"Sorry,\" I said clearing my throat and bending down to collect the papers I'd scattered. \"I got a chill all of a sudden.\"\n\nFrom my crouch, I could see that Daniel had been the one standing behind me, his hand on my ass the only culprit. His brown eyes stared down at me again and they twinkled brightly. I'd been on my knees in front of him so many times that my body responded by instinct. My mouth opened a bit and my cock bounced in my jeans. Daniel wet his lips again.\n\n\"See you later, nerd.\" He said in a not unfriendly fashion, readjusted his backpack and walked from the room with his two friends.\n\n\"Why do you let him call you that?\" Dr. Plarston asked, concern touching her voice, when Daniel had left. \n\nBeing academically gifted and somewhat of a loner and social outcast, the teachers had taken a special interest in me, often times going out of their way to check on my well being, or make sure my relative quiet wasn't an indicator of some deeper disturbance. This had manifested in a reputation as a teacher's pet, of sorts. But that was one title I was proud to shoulder. \n\n\"I don't mind. Really,\" I said. How could I tell her that Daniel had screamed for me to fuck him with my huge nerd cock as I made him cum buckets all weekend long? \n\n\"Well, you should stick up for yourself more. You're a very special young man and you shouldn't let people treat you otherwise.\" Her smile was warm and thoughtful and I loved her for it. I tried to return it as best I could.\n\n\"Don't you worry. It's almost a term of endearment for me.\" \n\n\"As long as you're sure...\" she said, giving me another opportunity to tell her if something was truly amiss.\n\n\"It's my badge of honor. Nerd Power!\" I joked and raised my fist to my chest in a mock salute. That got me a gentle laugh.\n\n\"Get going, you,\" she chided. \"And don't get too far ahead. I'm running out of extra novels to assign you. Seriously, I don't know where you find the energy!\"\n\n\"Just lucky, I guess.\" I smiled at her and headed to my last class.\n\nAt the final bell, I packed my bags and headed slowly to the Senior Parking lot. As was my custom, I walked at a near glacial pace, holding my novel before me and walking as I read, a skill I had learned early on in my academic career. This little trick would give the majority of my classmates time to socialize and leave before I got there. I could avoid most of the awkwardness of my rumbling old jalopy and only subject myself to the stares of maybe a third of the class instead of all of them.\n\nI was paying little attention to my surroundings by the time I got to my car, fished out my keys and blindly searched for the lock. Then I noticed something sitting on the hood of my beat up vehicle.\n\nIt was a large black gym bag. It looked new and shiny. And expensive. Zippers lined it at nearly every seam and angle. A plastic water bottle was tucked into one of the mesh pockets, a digital watch just visible in another, and I could tell just by looking that the inside was filled as well. With what, I couldn't imagine.\n\nPinned under my windshield wiper was a folded piece of white notebook paper. I removed it and unfolded it.\n\n\"Varsity weight room. 5:30. Get ready to sweat, nerd. -D\"\n\n\"Varsity,\" \"weight room,\" and \"sweat\" were three words that I never used in every day conversation, so I was a little confused at first, but the signature at the end of the short missive made it all clear. \n\nI had two hours an fifteen minutes. Two hours and fifteen minutes in which to do...what? \n\nI looked around to see if anyone had noticed the bag and note or my discovery of them, but everyone was engrossed in their own little groups and I was ignored. For once, that was a blessing. ",
        "I swung the bag into my car and threw it onto the front passenger seat. The damn thing weighed a ton. Had he bought me dumbbells?! \n\nMy car rumbled to life and I drove off campus with a smile on my face. I had a secret rendezvous. Who does that? That's stuff from the movies. Dead drops and coded messages. Not something that a nerd experiences, just reads about. \n\nI stopped at the nearby gas station both to fill my nearly empty tank and to waste time. The more time I wasted, the more wound up I became. I started imagining Daniel working out, as I'd seen that first night in Boston. That prompted a trip to the bathroom and a violent masturbation session in the locked stall. I thought I caught an eye staring at me through the small gap between the stall and dirty wall as I flailed away at my hard cock in my hand, but I paid it no mind.\n\nSatisfied for now, or at least drained enough to concentrate for a few minutes, I returned to my car and did my homework as quickly as I could. \n\nBoston had passed by in a blur. How could these two hours and fifteen minutes be ticking by so fucking slowly?\n\nBy 5:15, I was ready to burst again. I sped back to school and threw my car into park before I'd come to a complete stop, making it stutter a bit. I hauled the heavy gym bag and ran as quickly as I could towards the Varisty weight room, surprising even myself with my speed, considering how much I was carrying.\n\nTo one such as myself, the Varsity Weight Room, or any weight room for that matter, was as foreign and exotic a place as if I'd been told to meet Daniel at the Eiffel Tower. I knew where it was, of course. I had seen the plaque naming it on the cinder block wall every time I'd been forced into Physical Education over the past few years. But I had never once opened it or peaked inside.\n\nWhen I entered, the gym bag cutting an uncomfortable groove into my shoulder and pulling me awkwardly to one side like a scoliosis victim, the utilitarian nature of the room was a bit overwhelming. Massive machines lined the walls, in between benches and cables and pulleys at assorted angles, each of them as unknowable and alien as if they'd been parts of the International Space Station. \n\nThis was most certainly not my world. This was Daniel's world. \n\nRacks of dumbbells in ever increasing weights made an imposing stand against the far wall, behind a floor-to-ceiling mirror that made the room seem larger than it actually was. Not that it was small by any means. Two or three full sized classrooms could have fit within it's borders with room to spare. By contrast, the Upper School Chorus had to practice in a kindergarten classroom surrounded by brightly colored cubbies and construction paper cut outs. It was clear where the bulk of the funding was focused. \n\nDaniel was the only person in the huge space. His forearms held his entire weight on the arms of a machine I can't begin to describe and his feet lifted before him from their hanging position, over and over again. His face was a mask of concentration. \n\nHe wore a pair of dingy white tennis shoes over ankle length socks, a pair of long, loose nylon maroon mesh basketball shorts, and a tee shirt that was essentially a collection of barely held together fibers that did nothing to conceal or protect his upper body in the slightest. The sleeves and most of the sides of it had been cut out, only connecting at the bottom hem. It seemed an impractical garment choice to me, but I was not complaining. It revealed his hairy stomach and chest as he worked his abdominals at a steady pace.\n\nHe noticed me in the doorway and leaped from the machine in a movement I'd have expected from a gymnast, not a lacrosse player. \n\n\"Heya, Nerd,\" he teased, heaving a bit, his chest mesmerizing me beneath the flimsy tee shirt. \"Glad you could make it.\"\n\n\"Uhhh, yeah.\" I said as I dropped the gym bag and closed the door behind me. I just stood there looking at him. Sweat gleamed all over his body, his forehead and arms. It made his olive skin appear on fire. I wanted to lick it from him right then and there.\n\n\"Lock it,\" Daniel said. That have smile again. I groaned and twisted the deadbolt without question.\n\n\"Do you like it?\" He asked me.\n\n\"What?\"\n\n\"The bag. It's not too much?\" \n\n\"It was very sweet of you, Daniel,\" I began. \n\nSomething I said must have activated him because he was suddenly before me, his calloused hands at my neck, his sweaty body pressed into mine, knocking my shoulders painfully to the locked door behind me. He kissed me hungrily, and my mouth opened for him. It had been nearly 24 hours since I'd felt his tongue on mine, but it felt like an eternity had passed. The taste and shock of him was still new, and I reveled in it, my arms gripping at his back, the gym bag forgotten on the floor.\n\nEventually, Daniel broke our kiss. Too soon, if you asked me.\n\n\"Mmm. I missed that.\" He said and brushed one more peck on my lips. \"Let's get you changed.\"\n\nHe walked to the middle of the room and turned to face me again, hands on his hips. \n\n\"Come on, Nerd. We don't have all day. Strip!\" He barked in his best drill sergeant expression.\n\n\"Sir, yes, sir,\" I said with an exaggerated lisp. He laughed at that but didn't move or turn from me as I began to remove my jacket. My shirt soon pooled on the floor beside me.\n\n\"Where should I put this?\" I asked\n\n\"Just leave it where it is,\" Daniel instructed.\n\n\"But the floor's gotta be nasty!\" I objected. \"I can't just...\"\n\n\"Come on, nerd. Just strip already!\" There was a mixture of lust and anxiety in his voice, as if he couldn't wait for me to obey him.\n\nI unbuckled my belt and slid my jeans to the floor, removing my shoes as I did. I wore a pair of black boxer briefs. Daniel's gaze traveled over my body with obvious appreciation, which in turn, made me blush.\n\n\"As much as I'd like to keep you like that, I wouldn't be able to concentrate on your workout,\" he said. \"But fuck me, dude...,\" he approached me again and gripped at my stiff cock through my underwear, outlining my shaft as he pulled gently. \"We're gonna have to hurry you through this or else I might just explode.\" \n\nDaniel bent down and unzipped the gym bag that lay abandoned at my feet. His brown eyes looked up at me from his position and traveled down my torso, lingering on my pulsing cock, so close to his mouth. \n\nJust do it already! Please! My mind was screaming!\n\n\"Put these on,\" he said at last, the tension too much for either of us. He tossed me a pair of shorts and a cut off shirt from the bag. They hit me in the chest and I caught them.\n\n\"How much did all this cost?\" I asked, suddenly very aware that Daniel had taken the time and the effort to buy me all of this.\n\n\"Don't worry about it,\" he said, still inspecting me.\n\n\"But...,\"\n\n\"Don't worry about it. I wanted to.\" \n\nHe smiled at me and I nodded. It was a rare enough thing for me to get a compliment, especially from someone like Daniel, but it was an impossibility to receive a gift. But here it was. Daniel was a quandary, to be sure.\n\n\"You're gonna need to change out of those, too.\" Daniel nodded towards my boxer briefs, my cock already making a dark spot of precum on their very tented fronts..\n\n\"You trying to get me naked, Daniel?\" I coyly joked.\n\n\"Would I really have to try?\" he shot back.\n\n\"Ass hole.\" \n\nI paused and thought it over. \n\n\"But, no. You wouldn't\"\n\nI pushed my fingers beneath the tight elastic and shoved the black fabric too the floor. My hard cock swung out before me and Daniel's eyes widened and he made a growling sound in his chest. The front of his basketball shorts were most definitely on the rise. I chuckled to myself. \n\n\"There's a couple jocks in there.\" He pointed to the gym bag. I bent down and fished one out.\n\n\"Are these for me to keep?\" I asked.\n\nHe nodded. A look of mischief began to creep over his face.\n\n\"Well, those are actually mine. I kept the new ones for myself. I thought you might like...,\" He seemed embarrassed by the concept of me wanting his used jockstraps.\n\nI stepped into the white jock and pulled it to my hips easily. I stuffed my hard cock beneath the cotton, no easy task I assure you, and stroked it a few times for his enjoyment.\n\n\"Oh, fuck me,\" he groaned. \"That's not fair.\"\n\nI rejoiced in his discomfort, but soon pulled the shorts and shirt on as well, covering my nakedness. \n\nFor now. I was interested in seeing this part of Daniel's world. And flattered that he was willing to show it to me. I removed the new tennis shoes I found in the bag and tied the laces quickly, doing my best to adjust my hardness in the new shorts. They fit perfectly.\n\n\"How did you know my size?\"\n\n\"It looked at your shoes back in Boston,\" he said.\n\n\"So you've been planning this since then?\" It was only two days ago, but still the thought that Daniel had planned this gesture back then was endearing.\n\nDaniel blushed and shrugged.\n\n\"You ready?\" He asked, excitement beginning to creep into his voice.\n\n\"Absolutely not,\" I said, \"but that's not going to stop me.\"\n\nThe next hour was hands down the most painful experience of my entire life. Daniel lead me to a machine and would show me the proper technique and form. I did my best to pay attention to his words and instruction, but watching as the individual muscle groups he was trying to work would tense and relax under his weight was beyond distracting. The bulge of his cock in the front of his shorts kept drawing my gaze.\n\nAfter the first machine, I felt as if someone had beaten me with bamboo sticks. It was supposed to be working some part of my chest that Daniel could name in both latin and english. I decided it should be outlawed by the Geneva convention, whatever it was called in any language. \n\nBut that was merely the beginning. Daniel took me through a series of machines and dumbbells, making each more appear simple when he demonstrated, but proving my inferiority when I tried my hand at them. My calves were put through a sausage maker. Just rising onto your toes seems so simple. But do it 150 times with 20 lbs weights in each hand and you will beg for the sweet release of death.\n\nThe \"basic\" ab workout he taught me was the worst. Apparently, you achieved six pack abs by someone actually carving them into your stomach with a dull but red-hot blade. At least, thats what it felt like. Breathing was a forgotten memory. Pain was my lord and master now. My hair was plastered to my forehead and I gulped at the air as best I could.\n\n\"You're almost there, nerd.\" Daniel said from my feet. His hands were holding my feet to the floor to keep them from raising as he forced me to crunch up.\n\n\"I can't!\" I whimpered pitifully\n\n\"You can!\" he prodded back.\n\n\"Uggh. I can't. I'm gonna hurl!\"\n\n\"Pain is just weakness leaving the body!\"\n\n\"I fucking like my weakness then! Give it back!\" \n\n\"You just need a little motivation is all.\" \n\nHis arms left my feet so he was kneeling just below my legs. He lifted the shirt from his body, his hairy, well-trimmed and just pumped up chest jumping. \n\n\"Come and get me, nerd,\" He said.\n\n\"You. Are. EVIL!\" I whined. \n\nBut I crunched all the way up, my arms extended before me, reaching for his body. When I touched his skin, I moaned.\n\n\"That's one. Again.\" He pushed me back down.\n\nI rose again and pinched at his nipple for the few moments I was able to keep myself crunched forward before my muscles gave way and I sank back to the floor. \n\n\"Two. Again.\" He reached his hands under the elastic of his shorts. He pulled them down his hips, teasing me with a view of his well defined \"V\" and just the top of his pubes showing above.\n\nI crunched again and grabbed at his cock, before I sank back. \n\nHe groaned: \"Three. Again.\" \n\nHe rose a bit and pulled his shorts down further, the base of his cock visible now.\n\nI crunched again.\n\n\"Four. One more.\"\n\nHis shorts reached his knees and his cock bounced before me, his head just visible under his foreskin and capped with a drop of precum.\n\nI crunched again and grabbed his dick in my hands as hard as I could holding on to him like a life preserver . I used it to pull him down on top of me. He let out a shocked sound and fell onto me, between my legs and onto my exhausted upper body. I felt his hardness and it pressed into my own. My hands somehow found the strength to grab at his bare ass and pull him into me kissing him for all I was worth.\n\nWhile the workout he'd just put me through had wrung nearly every scrap of energy from my body, Daniel seemed unfazed by it all. He ground into my hips and tore at my shirt, ripping it off of my torso with little effort. His kissed traveled down my neck and covered my chest. His mouth found my nipple and sucked hard on the erect flesh. Though I was sure that I was sweaty and gross, I didn't care as Daniel kissed his way down my stomach. The pain I'd just been through began to fade to a dull numbness, my arms falling limply to my sides. Daniel worked his fingers beneath the fabric of my new shorts and jock and pushed them down my aching thighs.\n\nHis hand found my cock and he gripped it, twisting me under his fingers, working the blood back into me with expert movements. His fingers at at pulled at my balls and made my hips rise from the floor.\n\n\"God, I missed this,\" he said low and husky.\n\nI was panting beneath him, my body willing and responsive to every touch of his rough fingers along my skin. He was teasing each nerve. His mouth on my balls took me by surprise, sucking them in and rolling them around on his tongue, lapping and licking and each one in turn as he moaned.\n\nI wound my fingers into his hair and pumped myself into him.\n\n\"Oh shit, Daniel. Yes.\"\n\nHis hands held my hips elevated, my abs unable to support my own weight and resting entirely in his palms. He held me there with ease and worked the sore globes of my ass. I was suddenly very aware of why jocks liked to get massages after a work out or game. \n\nThis felt amazing.\n\nDaniel removed my balls from his mouth and licked the length of my shaft to my head, flicking his tongue across and around the rim until he could maneuver me inside him. When his lips closed around me, my already finished strength gave up the ghost and I pooled beneath his touch.\n\nHe took me inside his mouth and bobbed contentedly on my shaft, his tongue never ceasing, wetting me as he took more and more of me inside him. He moaned continuously, enjoying my vulnerability to him. I couldn't have stopped him if I'd wanted to. Of course, I didn't\n\n\"That feels incredible.\"\n\nDaniel took me further inside him. I could feel the hot muscles of his throat as he relaxed them and pushed my member all the way in. His nose rested on my pelvis and he looked up the pale length of my torso to catch my eyes. That was the final straw.\n\n\"Fuck me.\" I groaned. That got his attention. He pulled off my cock and sat back on his heels.\n\n\"Yeah?\"\n\n\"Fuck me, right now.\" \n\nI extended my hands to him. He took them in his own and rocked on his heels and pulled me to my feet in a smooth motion. My knees were jelly and I fell into him. He used our momentum to swing us around to an inclined bench press apparatus. He pushed me towards it roughly. I caught myself on the silver metal bar between the upright posts just in time to steady myself.\n\nI leaned my chest into it and spread my legs to either side of the bench, arching my back and exposing my hole to him. \n\n\"I don't...\" he said.\n\n\"Just shut your mouth and fuck me.\"\n\nIt wasn't my voice that said this. I knew what to expect next. My body was in complete control and I was just along for the ride. I felt my hole pulsing in rapt anticipation.\n\nI felt his rough hands on my hips and readied myself. He rubbed the precum from his dick on my hole and I pushed back reflexively.\n\n\"Yesss, fuck me,\" I begged.\n\nHe pushed forward and entered me. My spine straightened, the pain of it making me rise to my toes. Daniel's hands slid up my back and shoulders, doing what he could to ease the tension. I sucked in through gritted teeth and pushed back. I needed more of him.\n\n\"More...\" I whimpered. \"Please.\"\n\nHe pushed in further. My vision misted and my grip tightened on the barbell in front of me. Though I was sure my body was beyond physical exertion, my arms pushed against the bar so I could pull his uncut cock deeper inside my ass.\n\n\"God, yes, David. Your ass is so tight.\" \n\nHe leaned forward and rained kisses on my naked back. My hips pressed back as hard as I could in one giant thrust and I took him all. I felt his cock settle inside me, my body convulsing around him uncontrollably. My arms and legs trembled and threatenedd to give way.\n\n\"Shit!\" I screamed, \"God your cock feels so huge!\" Daniel rocked his hips a bit and my eyes rolled back.\n\n\"Fuck me hard, Daniel. Pound my ass.\"\n\nDaniel's grip tightened on my hips and he pulled back. I could feel as each inch of him left my chute, making me feel empty until his head brushed my spot and my cock spewed a blast of clear liquid onto the inclined bench before me. He thrust back into me. \n\n\"Yes. Again.\"\n\nBack and forth.\n\n\"God, yes!\"\n\nHe picked up speed. His cock moved like silk through me, even without lube, my body and his responding to the needs of the other, wetting my hole and opening effotlessly for him. The sound of his hips and the slammed into my pale ass over and over kept a rhythm that lulled me into a constant groaning wail.\n\nI was getting close. Daniel's grunting behind me as he plowed my hole was driving me crazy, and his cock arched at the perfect angle to rub my prostate with the just slightest movement.\n\nI found the strength to match is thrusts with my own. When he pulled out, I pulled my hips forward and felt his thrust into me so I could match it with my own, our hips crashing together with double the force.\n\n\"Oh fuck! How'd you do that!\" He yelled. He didn't really want or need me to answer. Just to not stop.\n\nMy body was singing, every single inch of my naked flesh crying out for him to push me \n\nover the edge.\n\n\"Oh fuck me, Daniel, make me cum! God yes, fuck...my...ass...,\" I let each word punctuate a vicious thrust of his cock as he buried it into me. \n\n\"You want to cum nerd?\" He teased. \n\nOh fuck me! The dirty talk again.\n\nI whined and nodded my head as hard as I could between his thrusts. My vision was white and I gripped my lower lips between my teeth until I thought I would taste blood.\n\n\"Cum for me, David,\" he grunted. \"Shoot that load for me.\" \n\nHis cock pistoned with such speed, I nearly blacked out. My chest collapsed to the metal bar before me, my arms giving out, held aloft now solely by Daniel's grip on my hips. I felt my balls tightening. \n\nThe groan that ripped from me came from the my toes and worked its way up my body. It started as a whimper and grew steadily as I felt the cum traveling from my balls. Daniel's cock hit my prostate over and over, so rapidly I couldn't tell when one touch ended and the next began. \n\n\"AhhhhhhhhhhHHHHHH.\" \n\nI felt the first volley of cum rip from my body, taking with it the last remaining scrap of my strength. My hole convulsed, and Daniel felt even bigger buried inside me. \n\nWithout warning or indication, he ripped is cock from my ass. I was suddenly empty and awash in an intense orgasm at the same time. The confusion lasted a moment only. \n\n\"Daviiiiiid,\" he screamed behind me.\n\nI felt his hot jizz land between my shoulder blades and make a solid line across my spine towards my thoroughly fucked hole. I threw my head back and marveled when the second blast slammed into the small of my back and the third painted my opened hole white. My own cock spewed onto the black leather inclined bench until it was covered. \n\nMy balls ached with the force of my release and Daniel's explosion across my back. He rubbed his cock against my hole and gently pressed forward, pushing some of his cum inside me. ",
        "\"Mmm. Yeah...\" I wiggled my hips into him.\n\nIn time, sight and feeling returned. I could hear Daniel panting heavily behind me. I kept my eyes closed, trying to memorize each and every moment of the earth shattering fucking my ass had just received. I smiled like a baby. I could have gone to sleep right there, resting on the bench press barbell, arms draped over it, ass in the air and back slathered in Daniel's white cum.\n\nWhen I felt the heat of his tongue on my back, lapping up his own juices, my legs gave way and I collapsed into the cum soaked bench below me. I felt it coat my chest and stomach but Daniel kissed and licked at my skin, tracing down my spine and swallowing his seed.\n\nHe moaned as he did and I shivered beneath him, a rag doll, used and spent on the incline bench. His arms encircled my chest, woking between my body and the slick, wet leather. He dragged me to my feet and pulled me against his chest. I hung limply in his grip, unable to work my limbs. He spun me around and plopped me back down, facing the opposite direction. My cock pulsed in the air between us.\n\nHad I been able to see clearly, I would have seen Daniel's satisfied smile as he watched a last stream of cum dribble from my slit and travel slowly down my shaft to my tight balls. Instead, I panted and breathed heavily. Daniel straddled my legs and inched forward, His arms wrapping around my neck as he sat on my lap facing me.\n\n\"Ahhh,\"I whimpered, my cock brushing against his was like an electric shock, still so sensitive as to verge on painful. My sore ass on the leather was a pleasant reminder of the ride Daniel had just take me on.\n\nHis hands worked my shoulders with still strong as he looked down at me. How could he move after that? \n\nI tried to work my fingers into the skin of his hips, but only succeeded in holding them there, unable to find the strength to gain any purchase. From his position across my lap, he was finally the taller of us. He leaned his head down to kiss me gently on the lips.\n\nI didn't have the energy to return his kiss with anything like the passion I felt. I mumbled, still stunned and let him take the lead. That was the best I could do. Maybe in a year or two I would be recovered enough to reciprocate.\n\n\"That was..., I don't even know.\" He kissed me again.\n\nI groaned. I'm sure it was a sentence in my head. My body did not translate it into speech. Daniel tilted his head back and laughed gently, a deep and resonant sound that bounces from the cinder block walls and shook my already weakened brain.\n\n\"I told you I would find a way to make this work.\" He offered as he nuzzled his face into my neck. We stayed like that for a while, Daniel snuggled against me, our cocks pressed together and returning to softness as the moments ticked by gently. \n\nEventually, my strength returned enough to mirror his embrace and I pulled him deeper into my chest with all I could.\n\n\"Thank you,\" I said in a quiet whisper, my lips pressed to his ear.\n\n\"You're worth it,\" he mumbled into my neck contentedly.\n\nA half hour or so later, Daniel had me redressed in my new work out clothes and had cleaned up all evidence of our escapade with a gym towel he kept in his own bag. Though I was still shaky, my brains had congealed somewhat and I was able to hold a conversation again.\n\n\"I need to shower,\" I said, catching a whiff of myself over the unique scent-scape of the weight room. \"I stink.\"\n\n\"You sure do,\" Daniel said. \"Wanna shower here?\" He raised his eyebrow at me quizzically.\n\n\"NO!\" I shot back more quickly than I'd meant to and had to back track. \"I mean, I would love to shower with you right now, but if these clothes come off and I see you naked again, I'm worried my body might literally fall to pieces. I can't take any more tonight.\"\n\nDaniel chuckled.\n\n\"I was thinking I would be the one to take it this time around,\" he teased me. \n\n\"You're still evil.\"\n\n\"Alright, alright. You do stink. You should get home.\"\n\nWe gathered our bags and headed back towards the parking lot. I was only able to shuffle like a half-dead zombie creature, so the trip took rather longer than normal. For the second night in a row, our two cars were the only ones in the parking lot.\n\n\"What time is it?\" I asked confused at the emptiness of the place.\n\nDaniel checked his phone.\n\n\"Quarter till nine. Why?\" \n\n\"Holy shit! My mamma's gonna kill me!\" I tried to rush, but my body put a stop to that double quick. Alright, no sudden movements. Slow and steady was the key.\n\n\"Call her on the way home. You'll be fine. But don't fall behind on your school stuff,\" he scolded.\n\nI marveled at his energy level. The workout alone nearly finished me and the epic ass pounding had demolished what was left. But Daniel looked as if he could run a marathon.\n\n\"How are you not dead right now?\" I asked.\n\nHe shrugged. \"I'm used to it I guess...well the workout part anyways.\"\n\nWe reached my car, looking dingier and crappier than ever under the yellow street lamp. Daniel leaned in the kiss me. I would have been fine if this became a nightly ritual, kissing me under the streetlamp after everyone else had gone home. \n\n\"Get some sleep. You've got a lot of work to do still if you want to catch up on that body.\"\n\nI groaned at the thought. This truly might be the death of me. When did I agree to this anyway? Oh, right? In between world shattering fucking sessions with the most stunning jock I'd ever seen. \n\nIt took me a while to find the muscles needed to lift the keys to the ignition. They felt as if they weighed significantly more than they had this morning. I made it home and only had to explain my lateness to my distracted father as my mother had already gone to bed. I showered and crawled under the covers, fully prepared to never wake up after what I'd just put my body through.\n\nMy phone buzzed on the table beside me.\n\n1 unread text.\n\nDANIEL: Sleep well, Nerd. See you tomorrow. ;)\n\nI was asleep before I finished reading the sentence."
    ],
    "authorname": "DAMackey",
    "tags": [
        "gym",
        "high school",
        "gay",
        "anal",
        "breeding",
        "romance",
        "bottom",
        "top",
        "jock",
        "nerd"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/speech-and-debate-pt-06"
}