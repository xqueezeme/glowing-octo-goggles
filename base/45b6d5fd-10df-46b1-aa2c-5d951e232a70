{
    "title": "My Voyage of Submission Ch. 16",
    "pages": [
        "They attend a second club where Beth is attacked. Miranda's limousine is attacked on the way to Versailles by two dozen heavily armed attackers. Joshua puts everyone on a war footing. This chapter contains oral, anal, group, lesbian, and interracial sex including double penetrations. It contains cuckoldry. There is no STD's of COVID in this fantasy world. My thanks to JohnnyGalt for his editing expertise.\n\n<p align=\"center\">My Voyage of Submission, Ch 16 - Paris, Pt 2</p>\n\nI was dressed in one of the fall outfits we'd picked up at the Dior fashion show, the skirt and jacket with the sheer blouse. Miranda had to dress more conservatively due to her profession, but Belle and Francesca also showed a lot of skin. We rounded up everyone and it took two limousines to get to the restaurant. Yasmine was seated between Delphine and Fatima, I was seated between Delphine and Master with Miranda on the opposite side. The rest of the freed slaves, Henderson, next to his wife, Darla, and Michelle made up the balance of our table. Hannah, Francesca and Belle, Lynn, Dominique and all of the other men were seated at an adjoining table. Dominique was sitting next to Art and flirting quite outrageously with him.\n\nThe food at La Dame de Pic was advertised as hyper seasonal so all the food was as fresh as it could be. That we were in harvest season for much of France made for scads of fresh, delicious foods. I had blue mackerel marinated in smoked Lapsang Souchong tea, served with celery risotto and brightened with bergamot. For dessert, whole pear served with cocoa pebbles, candied pear, mint cream and chestnut cream. I'd never tasted anything like it. Both Fatima and Delphine told Yasmine she could order anything she wanted. She didn't know what to order so Maahnoor ordered foods which would be reminiscent of Morocco, although the flavors were different, often with Japanese flavors and ingredients. She seemed to like everything. Michelle got a sampler with wine pairings, like I'd had in New York, so she could taste as many different dishes as she could.\n\nMaster bought champagne and wine for both tables. Our Muslim guests did not partake, sticking with water, but everyone else did. When the meal was over, Yasmine asked who she needed to have sex with for such a fine meal. Fatima told her she never had to have sex with anyone again unless she wanted to.\n\nShe said something in French, which Delphine interpreted as \"I have new clothes. I saw how much everything cost. Certainly, I must have sex with someone.\"\n\nHannah answered her in French, \"Joshua is a very rich man and he has many excellent lovers and does not need to trade food or favors for sex,\" Delphine whispered to me what Hannah answered.\n\nAnother poor woman who could barely comprehend being given something for nothing more than her presence.\n\nBack at the hotel, Master asked Michelle if she wished to stay. \"It's a Friday night. Certainly you don't have to be anywhere. I'll get you a room to share with Dominique if you like.\"\n\nShe looked at Dominique, still flirting with Art. \"She looks like she may have other plans.\"\n\n\"Then you may spend the night with Francesca and Belle. I'm sure they will be very pleasant company.\"\n\n\"You spoil me. I don't need two of them. One would be sufficient.\"\n\nHe laughed. \"Nevertheless, you may have both.\"\n\n\"What about you?\"\n\n\"This is Miranda's fertile time of the month and I'm trying to get her pregnant, but Delphine just whispered to me that she and Beth would like to join us. I'll have plenty of company.\"\n\n\"Hannah?\"\n\n\"Darla.\"\n\n\"Lynn?\"\n\n\"Her fianc\u00e9 and her slave, Manuel. She'll probably be double filled tonight. I'm getting a room for Henderson and Maahnoor so the newlyweds can have a little privacy, and another for the other three slave girls. There's no point in sleeping alone. They need someone Dominant to keep them in line. It might as well be you.\"\n\n\"Done. You've convinced me. Thank you.\"\n\n\"You're welcome. Tell me if they've been displeasing at breakfast tomorrow.\"\n\n\"If they're even half as well trained as Beth, I don't see how that's possible.\"\n\n\"Much better than half, Mistress. Nearly as good,\" I replied, \"and with two, you can be sure no one's tongue will fall off.\"\n\nMichelle laughed while Master secured the extra rooms. She had a huge smile on her face as she went to her room with her two temporary slaves in her wake.\n\nMiranda and I proved to Delphine that Master was the best male lover she ever had, especially with two willing slaves prepared to get him ready to fuck her over and over again. The only thing she didn't get was Master's cum. He saved all of it for Miranda. Delphine always joined me in cleaning both of them afterward.\n\n******\n\nDelphine was panting and moaning as she rode Master's morning wood.\n\n\"How can he fuck for so long?\" she whimpered.\n\n\"Because he's learned to enjoy the journey as much as the destination,\" I said, interrupting my attention to Miranda's cunt. I was giving her a couple orgasms to help prepare her body for his sperm. Give the wrigglers something to swim in as they headed upstream.\n\n\"Is Miranda about ready?\" Master asked.\n\nShe was on her back with her legs spread and pussy dripping. I'd say she was ready.\n\n\"Is the pope a bear in the woods,\" I replied.\n\nMaster burst out laughing. \"Christ, don't make me laugh like that. You almost made me cum.\"\n\n\"What does it mean when a Jewish guy invokes the name of Christ during sex?\" I asked.\n\n\"It means don't make me laugh,\" Master laughed. \"Damn it, I'm done. Get off me, Delphine, quick.\"\n\nShe scooted off him and he rolled over and jammed himself as deep as he could in Miranda's cunt before exploding inside her.\n\n\"Thar he blows,\" I said in my deepest and most salty voice. Master laughed again, even as he filled her with his rich cream.\n\n\"What's gotten into you this morning?\" Master said.\n\n\"I don't know. I've just been fucking three of my most favoritist people in the whole world for half the night. I feel good.\"\n\n\"I'm one of your favoritist people?\" Delphine asked.\n\n\"You will be once you clean my Master off while I take care of my sister slave.\"\n\n\"Oh, yummy, boy cum and girl cum, all at once. Kind of like strawberries and cream.\"\n\n\"Exactly. You get it. The best of both worlds.\"\n\nI stood up on the bed and grabbed Miranda's legs and hauled them skyward. \"Of course, I need to make sure we let his cum drain down towards Miranda's head where it will do some good. He can't cum in me while she's fertile until she's knocked up.\"\n\nDelphine almost choked on Master's cock when she laughed. I started shaking Miranda's legs like she was a salt shaker. Miranda was laughing too as I bounced her ass up and down on the bed.\n\n\"Last night is probably the last time I get to claim all that manly seed for myself,\" Miranda said, half choking with laughter. \"According to my calculations, my ovulation ended at midnight, more or less.\"\n\n\"You know, Master's never tried to get a girl pregnant before. Maybe he's shooting blanks. Maybe he'll need to let some black stud like Jake do the deed for him and give your Nazi parents that cute little half breed grandchild he threatened to give them.\" I paused, thinking. \"Or, you could be pregnant already and we don't have to do this again. You can get fat and ugly and I'll get to fuck him all the time until you spit out his kid.\"\n\nI put down her legs and began licking, intending to give her an orgasm in the process. She hadn't fucked Master near long enough to cum, even as horny as we were all the time.\n\nMaster and Miranda both snickered. Delphine was confused. \"Wait, Miranda's parents are Nazis?\"\n\n\"Well, they're anti-gay, anti-Jewish, anti-black, anti anything that isn't straight, white, Anglo-Saxon and protestant,\" Miranda said, \"so kind of Nazis. They'd hate you too because you're French.\"\n\n\"And you married a Jewish guy.\"\n\n\"And my sister is about to move down to Guadeloupe and kneel to Simone's black daughter, Liza,\" Miranda said between moans. \"Which means almost everything my Daddy hates, we're doing. Licking pussy, fucking Jews and blacks, you name it, he hates it. Oh, fuck, Beth, don't stop. I'm so close. Master, please let me cum.\"\n\n\"I don't know. I'm not feeling the desperation yet. Ask again with more feeling.\"\n\n\"Please, Master, I'm begging you. I'm so close. I don't think I can last another thirty seconds. You know what Beth is like. She's insatiable. She won't stop until I cum. Oh, fuck! Oh, fuck!\"\n\n\"Fine, you can cum.\"\n\nMiranda's back arched and she shivered through a powerful orgasm, choking back a scream. When she finally settled, I sat up with a cum faced grin.\n\n\"Another one bites the dust.\"\n\n\"What happens if you cum without Joshua's permission?\" Delphine asked.\n\n\"Weren't you exposed to that through Michelle?\" Master asked.\n\n\"I knew she was a Dominatrix, but she hid most of it. I learned more when I was an au pair to a Dominant/submissive couple in New York. They were fairly open about their sexuality after they knew maman was a Dominatrix.\"\n\n\"Who was it?\" Master asked. \"I know some Dominants in New York.\"\n\n\"Monsieur and Madame Thornhill. I took care of their daughter for a year.\"\n\nThe room grew silent for a moment, all activity ceasing.\n\n\"What?\" Delphine asked.\n\n\"William and Evelyn Thornhill?\" Master asked.\n\n\"Oui, Monsieur.\"\n\n\"He's one of Master's best friends, Delphine,\" I said. \"He attended Miranda's wedding to Master.\"\n\n\"It is indeed a tiny world we live in. He did not often punish Evelyn in front of me and his child, but I did see it on occasion, mostly if we were traveling together. Opportunities for privacy are more limited.\"\n\n\"That's quite remarkable. We're punished if we cum without permission,\" Miranda said, \"and for lots of other infractions of the rules. The punishment for failing to ask for permission is ten swats. For cumming after permission is denied is ten swats.\"\n\n\"Ten swats of what?\"\n\n\"Ten swats with my hand, ten swats with a paddle, ten swats with a whip,\" Master said. \"It could be ten swats with anything, but I prefer those things for minor infractions.\"\n\n\"Like what?\"\n\n\"Disobeying an order to do something which is within the rules of our slave agreement,\" I said, \"failing to follow instructions or the rules, having sex with someone Master hasn't given us permission to have sex with, although it's more serious if it's a man instead of a woman.\"\n\n\"So Joshua gave you permission to have sex with me?\"\n\n\"Not initially,\" I said. \"Master will occasionally give control to someone else he trusts. He gave me to Lynn and Lynn gave me the initial permission. All subsequent contact with you was with his permission. He's been quite generous with you.\"\n\n\"Why?\" Delphine asked.\n\n\"Beth likes you. I like to reward her for being such a delightful submissive.\"\n\n\"But you could withdraw your permission? Forbid her to see me ever again?\"\n\n\"I could. It's unlikely I'd do something so drastic, but I could.\"\n\n\"What reason would you have for denying her permission to see me?\"\n\n\"If you continuously got her into trouble, caused her to disobey her rules, endangered her, hurt her.\"\n\n\"What if I fell in love with her?\"\n\n\"Everyone is in love with her. That's not a good reason.\"\n\n\"What if she fell in love with me?\"\n\n\"She also loves many different people. Not a good enough reason.\"\n\n\"What if she wanted to leave you for me?\"\n\nHe looked at her, then me. \"I would be devastated if she ever wanted to leave me for any reason. My heart would be broken, but despite my calling her my slave, I don't own her. She always has the freedom to leave. I cannot control her heart, any more than I can control mine. Do you want to leave me, Beth?\"\n\n\"Never, sir. Delphine is barking up the wrong tree if she thinks that's a possibility. You own my heart now, whether you want it or not.\"\n\nShe thought for a moment. \"So the only way I could stay with you forever is to become Joshua's submissive, like you are?\"\n\n\"You can't decide to become someone's submissive. You have to be submissive to become a submissive,\" Master said. \"Beth isn't submissive because she's studying it. She decided to study it because it plucked a chord inside that already existed. She thought she could be one for a year to study it, but she wouldn't have lasted a week without being one. I can't be one. I don't have it in me.\"\n\n\"Nor can I be a Dominant,\" I said. \"I don't have it in me. I'm submissive, through and through. I don't have to act in submissive ways. I could live my life as I used to, but that would be difficult knowing how much richer my life is as a submissive. If Master ever got rid of me, I'd eventually seek another Master. I no longer wish to live life as I did before. It's a pale imitation of the life I live now.\"\n\nMiranda sat up. \"Beth is right. I didn't know I was submissive, but I couldn't do this if I weren't. I might be able to live without a Master for awhile, perhaps due to my career, but I'd eventually seek another one if I lost my Master for whatever reason. Life was less interesting, less colorful, less meaningful, than it is now. It's funny that by giving up control, surrendering my will to his; made my life so much better than it was, but it did.\"\n\n\"I'm happy you like me, Delphine. When we leave, it doesn't have to be forever. I like you enough to want to see you again. You can visit when you get time off from work. I have oodles of money to play around with. I could pay for tickets for you to visit, but don't expect a girlfriend in the sense you'd like me to be one. That will never happen. What you can have now, is all that you will ever get from me. I'm not only tied to Master by unbreakable bonds, but I'm tied to Miranda, Francesca, Belle, and Lynn by similar bonds. I love Miranda nearly as much as Master and I want to see Miranda have a child, be part of that child's life, as I hope she'll be part of my children's lives when I have them. This is the life I want to live.\"\n\n\"I've never been as infatuated with anyone as much as I am with you. Do you care Joshua?\"\n\n\"Not really. Beth has that affect on people. She gives so much, it's hard to understand why anyone wouldn't be in love with her.\"\n\n\"Enough about me,\" I said. \"I feel stupid being the topic of this conversation. It's embarrassing. What are we doing today, Master?\"\n\n\"I was going to send you to that other club; let you get more surveys done. I'm not so sure now.\"\n\n\"Why?\"\n\n\"Because of what happened last time. I don't like the publicity that swirled around the case. They kept Miranda's and my name out of the papers, but yours and Ethan's were in there. People might know you now; the submissive who frees slaves. I don't like it. We're dealing with dangerous people.\"\n\n\"You're saying we shouldn't try to save other involuntary slaves?\" I asked. \"Could you do that? Let some other woman suffer like Yasmine?\"\n\n\"I think French authorities could become pissed if we pulled that stunt again. I'm sure they'd be wondering why we keep going to clubs like that if all we do is cause problems. Unfortunately, we can't save everyone. The best way to stop it is to stop it at the source.\"\n\n\"I know, but we can't leave a young woman with someone like that Desmonde bastard. Yasmine's back won't be healed for a week, at least, and she'll likely have scars for life, both emotional and physical. You heard her last night. Who did she have to fuck to get new clothes and an expensive meal? It's horrible.\"\n\n\"Do you think people would bring their slaves out in public after the publicity Desmonde got after his arrest?\" Delphine asked. \"Isn't that just asking for trouble now it's been publicized. They even had a photo of Yasmine's brand in the tabloids. If anyone saw a similar brand, the police might be informed.\"\n\n\"Delphine might be right, Master. Maybe we should do follow up interviews with the newspapers and TV and publicize everything we've discovered so far, make it impossible to bring slaves out in public?\"\n\n\"Suppose you're right and we expose these buyers of slaves and what they do, drive them out of the public eye so they keep their slaves locked up in their homes. Do you think the slaves will be treated better behind closed doors than they are when taken out in public? I think the opposite could be true, Since someone like Yasmine is not seen by the public, they could do worse to her. Mark her face instead of her back, beat her more. If she'll never be seen, what difference does it make. They could be crippled and no one would ever know. If they're brought out in public, they'll want to hide the worst of it. It's why wife and child abusers claim their wife is clumsy, or the child fell off their bike, because their brutality can't be known. Once they're driven into hiding, they can be as brutal and cruel as they want and no one looks for an anonymous slave like they do for a wife or child.\"\n\n\"I guess you're right, sir. Maybe I should use a different name when going into clubs now. An alias, so no one ties me with the press reports. They didn't do any pictures of me. All they have is a name. Maybe Ethan should do the same.\"\n\n\"Actually, I'm going to bring in a new group of security people. Thomas, Edgar, Jake, Buck, and we have Henderson for the moment. I'll send the rest back. Changing your name probably isn't a bad idea either.\"\n\n\"I could go with my aunt's name, Helen Edvardson.\"\n\n\"Are you Scandinavian?\" Delphine asked.\n\n\"On my mother's side. My great great grandfather came from Norway. I'm diluted since then. A little bit of this, a little of that, a mutt, really.\"\n\nMaster laughed, \"A mutt?\"\n\n\"Not a purebred, that's for sure.\"\n\n\"Fine, I'll send you to the club again tonight if you use a different name, but no more calling of the police. We have to lay low awhile and not call attention to ourselves.\"\n\n\"Unless someone is being beaten to bloody ribbons. I can't stand by and let that happen.\"\n\n\"Let someone else do the reporting of it. You can't. That's an order.\"\n\n\"Yes, Master.\"\n\n******\n\nAfter our morning routines, we went out to the living area and ordered breakfast from room service for everyone. Francesca, Belle and Michelle were already there, having returned after getting up. Hannah and Darla joined us before we called in our order. Master asked Hannah to arrange for a different security team and send the current bunch back to the ship, keeping only Henderson. They were to go back by train and the others could come in by plane as he wanted them here faster.\n\n\"What about Leo?\" Hannah asked.\n\n\"I want a heavier presence tonight after the fiasco the other night. He'll go to the club.\"\n\nHe also told her to arrange for a large group at the Le Club Cris et Chuchotements.\n\n\"What does that mean?\" I asked Delphine.\n\n\"Cries and Whispers.\"\n\nAfter we submitted our food order, Master asked Michelle how Francesca and Belle had done for her last night.\n\n\"You were right. They were almost as good as Beth. I've seldom had a more pleasurable night.\"\n\n\"Would you like to go to the club tonight?\"\n\n\"Will you be going?\"\n\n\"I can't go. Married man, important wife, too well known. Others will Dominate my slaves in my stead. You could Dominate Beth.\"\n\n\"That's a very tempting offer. I'll accept.\"\n\n\"There's a dress code. We might need to get you some different clothes. Dress is libertine, SM or fetish wear. Lynn can fill you in on Beth, what's allowed and not allowed and her safe words.\"\n\n\"I'd like to go again,\" Delphine said.\n\n\"That was expected,\" Master said. \"I'm perfectly willing to give you more time with Beth.\"\n\n\"Not to play as a Dominant. I want to go as a submissive.\"\n\nMichelle looked in surprise at her daughter's statement. Master, Miranda and I did too.\n\n\"Savez-vous si vous \u00eates soumis?\" Michelle asked\n\n\"Je ne sais pas. Comment le saurais-je sans l'essayer.\"\n\n\"What did she say?\" I asked.\n",
        "\"She said she doesn't know if she's submissive. How would she know without trying.\"\n\n\"Beth?\" Master asked.\n\n\"I don't know, sir. I can't enter her survey results in my matrix which is located on the computer on the ship. I didn't bring the laptop, trying to conserve weight.\"\n\n\"What does that mean?\" Michelle asked.\n\n\"Beth's survey measures the Dominant and submissive tendencies of the people who take it. By giving it to known Dominants and submissives, she's established correlations which can be found in the general population. It was how she discovered Miranda was submissive.\"\n\n\"Why can't I go as a submissive?\" Delphine asked. \"I'm an adult.\"\n\n\"You don't know what you're getting into,\" Master said. \"Your first experience as a submissive should not be at Cries and Whispers.\"\n\n\"Why not?\"\n\n\"You're completely available to everyone sexually, cunt, ass and mouth and subject to rather severe punishments and torments, which if you're not used to them, may be unbearable.\"\n\n\"You said even if Beth wasn't submissive, she might have lasted a week as a submissive.\"\n\n\"Wrong, I said she wouldn't have lasted a week, perhaps not even a day, but she had experiences which helped prepare her for her submission, experiences you don't have.\"\n\n\"What experiences?\"\n\n\"She competed in ironman competitions, one of the most exhausting of races, consisting of a marathon, over a hundred miles on a bike and a three mile swim. During her training, she learned to push past exhaustion and pain, to ignore it when she felt she couldn't go another step. Even the fucking is easier than that, but you have no choice. You might be sucking the cock of a fat slob who hasn't bathed in a week.\"\n\n\"Then test me for the day. Make me your submissive and if I don't last, I won't go to the club as one. If I do make it all day, I'll go. It's just one night.\"\n\n\"Michelle?\" Master asked.\n\n\"I've never tried to control my children's lives. If this is something she wants to try, let her try.\"\n\nMaster nodded. \"Take off your clothes.\"\n\n\"Now?\"\n\n\"All day. You won't wear a stitch of clothes the rest of the day. We'll need some other clothes for you as well, but I'll have the concierge send someone up a selection from the hotel boutique. You'll remain naked until you leave for the club. Beth, show her the Display position. She will remain in that position until after they bring our food.\"\n\nI showed Delphine how to stand and that's how she remained, even when they delivered our food, and the others began to join us. Delphine was embarrassed, blushing when everyone arrived, but she held position. While they were setting out the food, Master told Delphine to remain standing, but masturbate. She got even redder, but put her left hand down and began stroking her pussy. I saw how quickly her fingers got wet, and she orgasmed quickly, even with the server there, so I thought it very likely she might be on the submissive side. The others ignored her except when Fatima, Yasmine and Farah got there. Yasmine started to remove her clothes until Fatima told her to stop. She told Yasmine this was something Delphine wanted to do, but was not forced to do, and Yasmine didn't need to do it because Delphine chose to.\n\nOf course, Yasmine, Muslim that she was, couldn't understand why Delphine was masturbating in a room full of people, but she stopped undressing. Dominique was also surprised to see her youngest sister masturbating in the middle of the room. Our security had already left for the train station, except for Leo and Henderson. When Lynn came in, she walked around the naked slave and fingered pieces and parts.\n\n\"What do you think, Bj\u00f6rn? Would you like to sink your cock in this cute ass or drippy cunt? Look how wet she is.\"\n\n\"She looks like she'd be a good fuck,\" he agreed. \"How was she, Joshua?\"\n\n\"A terrific fuck. Nice, tight, hardly used cunt. Her love of girls works to a cock's advantage, wouldn't you say.\"\n\n\"I do.\"\n\nWhile everyone else ate their breakfast, Master called Delphine over and told her to sit in his lap. He fed her, stroking, petting and caressing her as he did. He didn't make her cum yet. Just kept her on the edge.\n\n\"I saw you orgasm while the server was here. Did you ask for permission before cumming?\"\n\n\"No.\"\n\n\"No, what?\"\n\nDelphine looked confused for a minutes, suddenly realizing what she was missing. \"No, Master.\"\n\n\"That's ten swats for not asking for permission to cum. Ten more for not addressing me by title. You're already up to twenty.\"\n\n\"Yes, sir. When might I know all the rules, sir.\"\n\n\"So far, I haven't expected you to know any rules but those you've witnessed in Miranda and Beth. You knew Miranda couldn't cum without permission. Why would you think you could?\"\n\n\"I didn't think, Master. I should have known better.\"\n\n\"Yes, you should. Since they might not use lube if they fuck your ass at Cries and Whispers, we should stretch out your rectum so it won't hurt so much. Beth, please give me one of the larger plugs and a little lube.\"\n\n\"Yes, Master.\"\n\n\"Might as well grab The Enforcer and one of the leather paddles as well. I don't think Delphine is done cumming without permission.\"\n\n\"I wouldn't be surprised, Master.\"\n\nI got everything he asked for, plus a Slave Trainer. I knew she'd probably be wearing one later. He smiled when he saw me bring it in. He finished feeding Delphine and himself, then started working on her in earnest. His right hand fingers began playing with her pouting pussy while his left hand caressed her left breast. The closer she got to her orgasm, the harder he pinched her nipple, giving her a mixture of pleasure/pain.\n\nMaster was an expert at giving women pleasure, no matter what her sexual identity and Delphine was not opposed to cock, she just preferred cunt. She gasped and thrust her hips against his fingers, ignoring all of other people watching her lewd display.\n\n\"Please Master, may I cum?\"\n\n\"No you may not.\"\n\n\"Will you stop teasing me, sir. You're going to make me cum.\"\n\n\"I choose not to. I want you to cum. You won't get permission however. The sooner you cum, the more severe the punishment. I expect you to resist with your last ounce of strength.\"\n\nPoor Delphine tried. She quit thrusting against his fingers. I'm sure she tried to think of anything else but the orgasm roaring down on her like a freight train. She lasted longer than I might have lasted as I'm such a needy slut. Or perhaps Master dragged it out, keeping her on the edge for a long time.\n\nShe tried again. \"Please, sir, I'm going to cum. Please let me cum!\"\n\n\"No.\"\n\nWithin ten seconds, she shuddered in a whopper of a climax, crying out. Master pulled his wet fingers out of her cunt and fed them to her, making her taste herself. His fingers clean, they went back to her sloppy pussy and worked her again. She couldn't resist cumming any better this time than she did the last. She begged for permission even more desperately than the last time, with the same result, an explosive orgasm. It would help her when she was punished.\n\n\"Fatima, why don't you bring Yasmine to one of the other rooms. She shouldn't see this. It might bring up too many painful memories,\" Master said, turning Delphine over his lap. \"Take the others, too. This might still be too fresh in their minds as well.\"\n\n\"Aye, aye, sir.\"\n\nHe waited for them to leave. I thought I saw Maahnoor look behind her as she left, reminding me of Lot's wife leaving Sodom. Henderson left because he didn't want Maahnoor thinking he would participate. Master started with the plug. He lubed up her bottom and the plug, a little over two inches in diameter and over five long. He started to insert it, but didn't just push it in and leave it. He played with it, fucking her ass with it, stroking in and out while stretching her out. She climaxed again, this time with permission before he seated it in her sphincter.\n\n\"You earned forty swats, Delphine. I'm going to give you ten swats as hard as I normally give Beth. You may say yellow to get me to slow down or ease up, but if you say yellow, you'll know you probably shouldn't go to Cries and Whispers tonight, as they'll probably strike you harder than I do. But I'll continue giving you a chance. If you say red, I'll stop, but you're not going to the club as a submissive because you won't make it. After using my hand, I'll use this thin plastic paddle called The Enforcer for ten strokes. It stings like a bitch, but won't leave bruises or marks. The same rules apply. Say yellow to slow or ease the punishment and I'll give you a chance to finish the day. Say red and the day is done and you're not going. The next ten will be with the leather paddle which is heavier and smacks you harder. Lynn will give you those because she'll be your Mistress tonight and you should see what one of her punishments is like. Same rules. A little later, I'll whip your breasts and cunt the final ten strokes. The same rules apply the rest of the day. Yellow, we ease up, red, we stop completely and you don't go. Do you understand?\"\n\n\"Yes, Master.\"\n\nDelphine was still having aftershocks from her last orgasm.\n\n\"I want you to count out each swat I give you and thank me for each one. If you lift your hands or feet off the floor, that swat won't count. It will need to be repeated, so keep them on the floor. Stick your ass up a little higher.\"\n\nShe arched her ass up and Master smacked her a good one, as good as any he'd ever given me. As he said, they'd be harsher at the club tonight and she needed to know what she was getting into. Her hands and feet came off the ground.\n\n\"That one doesn't count,\" Master said, \"as your hands and feet both left the floor. The more you lift them up, the worse the spanking becomes.\"\n\n\"Yes, sir,\" Delphine whimpered. \"I'll do better.\"\n\nMaster gave her another and her hands and feet remained rooted to the floor though she groaned and said, \"One, thank you, sir.\"\n\n\"Que fait Delphine, maman? Pourquoi Joshua lui fait une fess\u00e9e?\" Dominique asked her mother. I couldn't understand and Fatima had left the room and couldn't interpret.\n\n\"Votre s\u0153ur se pr\u00e9sente \u00e0 lui pour la journ\u00e9e pour voir si elle peut aller au club BDSM ce soir.\"\n\n\"Est-ce que tu vas aussi au club ce soir?\"\n\n\"Oui, en tant que Dominant.\"\n\n\"Je peux y aller aussi?\"\n\n\"En tant que Dominant ou en tant que soumission?\"\n\n\"Dominant. J'aimerais voir ce que tu es la vie pendant toutes ces ann\u00e9es.\"\n\nMaster was up to seven before they finished their conversation. \"Dominique wondered what Delphine was doing and I explained she's submitting to you for the day to see if she could go to the club as a submissive. She asked if she could go. I asked if she wished to go as a Dominant or submissive and she said a Dominant, she wanted to see what my life has been all these years. Do you have an objection?\" Dominique informed us.\n\n\"Not at all. It might be beneficial to know why you are the way you are.\"\n\nHe dropped his hand again and Delphine gasped and choked out, \"Eight, thank you, sir.\"\n\nBy this time, Lynn had Manuel licking her pussy and Hannah had Francesca licking hers.\n\nMichelle asked, \"May I see if your wife is as good a cunt licker as your other slaves?\"\n\n\"Be my guest.\"\n\nSmack. \"Nine, thank you, sir.\"\n\nMiranda immediately started licking Michelle's pussy. Delphine was softly sobbing, but she hadn't said yellow yet, toughing it out.\n\nShe took the last one and said, \"Ten, thank you, sir.\" She got off his lap, tears coursing down her cheeks.\n\n\"Delphine, I want to show you something. Watch Miranda. Miranda, brace yourself but don't stop licking.\"\n\nMiranda braced herself so she wouldn't move when Master did whatever he planned on doing to her. He smacked her buttocks, leaving a big hand print on her lovely ass. He gave her ten, just the same number as he'd given Delphine.\n\n\"Michelle, did you notice any difference in the quality of her licking from when she started to when she was spanked?\"\n\n\"None. It's amazing.\"\n\n\"Leo, have you got an erection?\"\n\n\"Is St. Patrick Irish?\"\n\n\"Please, fuck Miranda's ass. Let's see how she does. It's been months since she practiced this.\"\n\nLeo knelt behind Miranda, unzipped and plunged deep into her ass without any lube or even oiling his dick in her cunt. Miranda grunted, but kept right on licking. Michelle climaxed three times while Leo plowed into her back door. He orgasmed and after he pulled out, Francesca cleaned Miranda's ass. Belle used a washcloth and washed Leo's cock.\"\n\n\"Any difference in the quality of her licking while she was fucked in the ass?\" Master asked.\n\n\"None at all.\"\n\n\"Delphine, this is the submissiveness Beth has instilled in all of my slaves. To ignore the pain or pleasure they're suffering and to concentrate on the pleasure they are giving another. They can all do it now. Every slave on board can do it. I want you to think about that. I want you to start licking Hannah and I want you to concentrate on her cunt when I give you the next ten swats. You will suck Bj\u00f6rn's cock while Lynn paddles your bottom. Despite the pain you're feeling, you can't injure him. Ignore the pain. I don't expect you to be that good at it, but it's what a good Dominant will look for in a good submissive. Their total devotion to the task they are supposed to be doing, not whatever is happening to them. When your spanking is finished, you will suck Manuel's cock while I fuck you.\"\n\n\"Yes, Master.\"\n\nDelphine began licking Hannah and Master smacked her with The Enforcer. She waved her ass around, moaning, when he struck her, but kept licking. He gave her all ten and Hannah hadn't cum yet, Delphine still too distracted by her spanking so he left her to finish the job. As soon as Hannah orgasmed, Master fucked Delphine with the handle, giving her permission to cum. She climaxed quickly, so she'd been close. Master gave her a second before he turned her loose on Bj\u00f6rn's cock and Lynn's paddle.\n\n\"If she accidentally bites you, honey, let me know and I'll double her punishment,\" Lynn said. \"Don't fuck up my fianc\u00e9, slave.\"\n\n\"I won't.\"\n\nLynn smacked her ass.\n\n\"I won't, what, slave?\"\n\n\"I won't, Mistress.\"\n\n\"Better. You will address every Dominant by Master, Mistress, sir, or ma'am. No exceptions. That includes your mother, Michelle, and if your sister attends the club tonight as a Dominant, her as well. Everyone in that club who isn't wearing a collar will be addressed properly. Do you understand?\"\n\n\"Yes, Mistress.\"\n\n\"You don't have to count since you're going to be sucking cock, but that's the only reason you don't count. Get busy.\"\n\n\"Yes, Mistress.\"\n\nLynn waited until Delphine was sucking Bj\u00f6rn's prick before smacking her bottom, still red from the abuse it had taken already. It was a loud noise and the fluid shock rippled up Delphine's ass like waves.\n\n\"Any teeth on that, dear?\" Lynn asked.\n\n\"No, just lips and tongue.\"\n\nLynn seemed to take a little off the next nine strokes. Perhaps she was worried about Delphine's cock sucking experience and her future husband's dick. Regardless, Delphine'a ass was a deep red when she finished. She let Delphine finish him while petting her creamy cunt. It wasn't too long after she was done and Delphine could really concentrate before Bj\u00f6rn grunted and his cock started flexing a heavy load of cream down Delphine's throat.\n\n\"Manuel now,\" Master ordered and she moved over to Manuel, his prick already exposed and ready. \"You have my permission to cum until he unloads in your mouth.\"\n\nAs soon as her lips wrapped around Manuel's cock, Master rammed his dick deep into Delphine. She moaned and shivered through another orgasm, kept on the edge from Lynn's petting. Plus with the plug and Master's cock in her, she was filled to the brim. She really seemed to be getting into her sucking/fucking double penetration. She climaxed again shortly, around the same time as Dominique began masturbating. Manuel had been hard since pleasuring his Mistress. It wasn't going to take long for him to cum. Delphine's head bobbed up and down on his prick as Master plumbed her depths. Delphine orgasmed again before Manuel arched into her mouth and shot a full load of cum, too much for Delphine to easily swallow. She was gulping and swallowing, trying to capture it all. Manuel pulled out with a satisfied sigh.\n\nNow it was only Master fucking Delphine, she was bucking back against him. I could tell she was getting close to another orgasm, but she wasn't asking for permission to cum. She hadn't listened to Master's instructions. Oh, well, live and learn. She moaned into another orgasm, cumming a couple minutes before he did. Her pussy was another frothy mess, and I moved in to clean my Master when he pulled out, even now, shrinking, tugging at her tight pussy lips. So sexy.\n\n\"Why didn't you ask for permission to cum?\" Master asked. I was sucking all of their cum off his cock and it was thick.\n\n\"You gave me permission to cum,\" Delphine said.\n\n\"What did I say? Repeat it back word for word.\"\n\nShe said, \"You have permission to cum until....\" She stopped, comprehending.\n\n\"Until what?\"\n\n\"Until he unloads in your mouth.\"\n\n\"Yes, you couldn't ask with his cock in your mouth, but you could certainly ask once he was finished. Ten more swats of the whip later. Clean her cunt, Beth and give me the Slave Trainer.\"\n\n\"Yes, sir.\" Delphine was about to learn spankings might not be the worst punishment she might undergo as a slave.\n\nI lapped her pussy to a semblance of clean and handed Master the Slave Trainer. He had to remove the butt plug to put it on, and he fucked her with the plug until she had another orgasm before pulling it out. She remembered to ask for permission this time. Delphine had already enjoyed a number of powerful orgasms this morning and that was going to end suddenly. He put it on her and turned it on.\n\n\"Joshua, can I say what a pleasure it is to watch you,\" Michelle said. \"You do great work and I say that despite the fact you're turning my daughter into a slave slut.\"\n\n\"Well, as you can see. I get lots of practice.\"\n\n\"I'm impressed nonetheless. If she doesn't bend the knee to someone in the future, I'll be surprised. She's eating this up.\"\n\nMaster called down to the hotel store and told them to bring a selection of their most revealing and erotic clothes in Delphine's size.\n\n\"Do you have any clothes in leather?\"\n\nHe must have been satisfied with the answer.\n\n\"Michelle, Dominique, I need your sizes.\"\n\nHe got them and gave them to the clerk. \"Bring up a selection of stockings and stiletto heels as well in size 40 and 41. Price is no object for any of these items, so bring me your best.\"\n\nHe hung up and told Delphine to display.\n\n\"You will remain this way while the clerk is in the room showing us clothes. Whoever it is, man or woman, you will reward them with an orgasm for their help.\"\n\n\"Yes, Master.\"\n\nMaster was going full speed ahead to prepare her for the evening. It took almost an hour before they brought up everything he'd asked for. Delphine struggling with the Slave Trainer the whole time, brought right to the edge, then left adrift.\n\nThere were two, both a man and woman due to the number of items they brought up, hanging from two clothing racks on wheels. They both did a double take upon seeing Delphine, who was blushing again at being shown off, naked to more strangers.\n\n\"This is the woman who needs to be dressed in the size 32 revealing outfits. Feel free to make her try them on in front of you. No brassieres or panties. I'll take three different outfits in her size. Dominique and Michelle, why don't you check out the leather items, stilettos and stockings. Something you think appropriate for tonight.\"\n\nMichelle and Dominique approached the leather rack and went through the items in their size.\n\nThe man approached Delphine. \"Mmm, lovely, she could be a model. Nice bones, beautiful breasts. My name is Remy, what's yours?\" He ran the back of his hand up the slope of her breast to her nipple. Delphine's nipples swelled to taut buds. Her pussy was getting wetter.",
        "\"Delphine,\" she replied.\n\n\"She does model clothes for Chanel at their store, but we didn't have time to go to Chanel for something they might have,\" Master said. \"We're pressed for time. Have a go and see what you can do for her.\"\n\nHe went back to the rack and picked out five outfits, bringing them to the naked woman. He held up a deep blue dress which if not silk, was silk like. The color went very well with Delphine's coloring, lighter than Darla and Michelle, and about the same as Dominique.\n\n\"May she put her arms down. It will be helpful.\"\n\n\"Of course. Lower your arms, Delphine,\" Master said. \"Do what Remy tells you.\"\n\nHe held the dress up against her. \"Yes, I love the color of this dress against her skin. Put it on, please.\"\n\nDelphine put on the dress and it was designed so that one or the other of her breasts would be bared. She could not cover both. The material was so silky, even the covered one showed how prominently taut and delicious her nipple was. It had a wide slit up the front which climbed nearly to her vagina. Remy had her walk around and as she walked, each leg slipped through the slit, exposing a vast expanse of leg. Then he had her sit down on one of the chairs and the split parted and you could see clear up to her pubic lips, pouting prettily for her admirers. I wanted to lick her, and make her cum again.\n\n\"I love that one,\" Master said. \"We'll take that.\"\n\nThe next dress she tried on was red, and similar to one I'd worn at one time with narrow panels front and back which swept the floor and wide open spaces on the sides. It was cut so high you could see she had no underwear and as she walked, she flashed her pubic bush, modest as it was. The top was like a red netting with sequins that flashed in the light which drew your eyes to the top, but did nothing to hide or cover her mammary assets.\n\n\"Another winner, Remy, but Beth, she'll need to shave her pubic hair. It's too obvious when she walks. You'll take care of it for me.\"\n\n\"Of course, sir.\"\n\nThe next dress was an unfortunate yellow that made her skin look sallow. As soon as Remy held it up, he discarded it. The fourth dress was sheer black on the bottom, two transparent layers of material, designed to be worn with a leotard which would have covered her sex. There would be no leotard, no panties, nothing covering her sex and she'd be bare underneath the layers. The narrow delta of her pubic hair was too obvious. Another reason to lose the bush, but then she would not even have hair to provide her modesty, just bare labia. Looking at it made me juicy. The top did have shiny diagonal black opaque stripes, but the stripes were narrow against the transparent material and left nothing to the imagination. With a leotard, it would have been sexy and presentable in any glamorous setting. Without it, Delphine was essentially nude with enough material to call it a dress.\n\n\"I'm thinking this is what she should wear to the club tonight, but I'm also thinking supper before hand, here at Le Cinq. Would this get her arrested, Michelle?\"\n\n\"Parisians are noticeably tolerant of fashion, Joshua. I doubt anyone would squawk at such a vision. You work here, Remy. What do you think?\"\n\n\"Mademoiselle is very lovely. It would be hard to protest such a vision of beauty.\"\n\n\"Done, we have our third dress.\"\n\nWhile Remy was dressing Delphine, Michelle and Dominique had found their outfits for the night. Michelle had a full length leather dress which buttoned all the way up and down the front. She left the top four buttons undone exposing a generous amount of cleavage and the bottom twelve buttons undone so the dress was open to mid-thigh, and with another six buttons, could be undone to the waist. She had smoky gray silk stockings, a red g-string and red stiletto pumps, with four inch heels.\n\nDominique had a purple leather bustier laced up tight to pinch her waist and showed plump breast down to the areolae. It had a matching purple leather mini skirt and fishnet stockings which came up to just above the knee, fastened to a black leather garter belt whose straps extended below the dress. She had tight purple boots coming to mid calf. It was slutty and hot and screamed femdom.\n\nDelphine was back to naked and on display. Remy and the woman, whose name I hadn't caught, kept looking at her. It was hard not to, as the only naked person in a room full of clothed people, and standing so boldly open to their gaze.\n\n\"Please add everything to my room bill,\" Master said. \"There's only one more thing I'd like to bring to your attention. The young lady wishes to thank both of you for the time and effort of coming to our room and helping her select clothing. As you can see, she has no purse on her person with which to tip you, but thought perhaps a different sort of tip, one which her attire does allow her to provide, might be a suitable replacement.\n\n\"It's entirely up to you, of course. She can't force you to accept it, but she would happily provide it, won't you, Delphine.\"\n\n\"Yes, sir. Whatever they desire.\"\n\n\"My bedroom over there is vacant if you would like some privacy. I was thinking of perhaps fifteen minutes per person?\"\n\nThey looked at each other and I could see the wheels spinning. There was no question Remy wanted to. His cock was hard already and his trousers did nothing to hide it. I wondered about the woman. If she'd had sex with a woman before, and enjoyed it, she might accept the offer. If she had curiosity about being with a woman, she might accept. It was a one way transaction and didn't require quid pro quo.\n\nThey seemed to come to some unspoken agreement. They would do it and never speak of it again, to anyone.\n\n\"May we remove whatever the device is on the lady?\" The Slave Trainer.\n\n\"Beth,\" Master said.\n\nI drew it down her legs and she stepped out of it. I wondered if either of them were married, not to each other, but some other parties. I didn't see any rings, but not everyone wore them. Remy led the way to the bedroom, opened the door and waved both women through. Were they both going to do her together? If they did, fifteen minutes apiece would be thirty minutes together. Clever if that was the plan. The door closed behind them.\n\nWhile waiting for Delphine to finish, the replacement security team came in. Master introduced everyone. Since Dominique had lost Art as a playmate, she was sizing up the others. She asked Darla who she would choose. Darla said she couldn't go wrong with any of them. Dominique kept eying Art's racial opposite, Jake, just as mountainous, but black instead of white.\n\nSince everyone was here, Master sent Belle to get the women and we ordered lunch. Michelle ordered something for Delphine. Before lunch was delivered, Remy, Delphine and the other woman came out of Master's bedroom. The other sales clerk was disheveled, her clothing and hair mussed. Remy no longer sported a bulge in his pants, and Delphines face was smothered in girl cum and cum was dripping down her legs.\n\n\"Was your tip satisfactory?\" Master asked.\n\n\"The best,\" Remy replied.\n\n\"Give yourself another couple hundred each with my thanks.\"\n\n\"Merci, monsieur,\" the woman said. \"I enjoyed myself immensely.\"\n\nThey left, wheeling away the rest of the items. Master introduced Delphine to the others, while I placed the Slave Trainer back on. The look of disappointment in her eyes when it was turned on tugged at my heartstrings a little. I understood her pain. Master put her food down on the floor and told Delphine to eat, no utensils. She didn't argue, didn't fuss, just said, \"yes, sir,\" and put her face down to feed.\n\nWhen Delphine put her face down to feed, Yasmine tried to copy her, and again, Fatima had to explain it was Delphine's choice to eat off the floor and not something Yasmine was required to do. Delphine finished and Yasmine asked her why she wanted to eat off the floor.\n\nI was licking Michelle's cunt at the time so she was translating for me. \"Delphine said she wishes to attend a club tonight where things such as this might be expected of her, like the one we found Yasmine at, though it's her choice to go. She said she's doing these things so we know she can do them. Yasmine is asking why she would ever want to go to a place like that. Delphine said because she is not being forced to go there, but wants to go there and she wants to see what it's like. Yasmine said it's not pleasant and no one should want to go. Delphine replies that she knows she won't be harmed like Yasmine was. People will make sure she's not. Yasmine is calling her crazy.\"\n\nI knew I wasn't crazy. I'd had every kind of test known to mankind to know I wasn't crazy. I was intelligent, strong, stable, happy, in several positive relationships, yet I was doing something Yasmine dreaded with every fiber of her being. Now Delphine was exploring the same thing and unless I was completely bonkers, she was coming out as submissive as I was, and like Francesca, had never considered submission despite having a Dominant parent until meeting me. Was it only that I knew there were limits on Master and I trusted him not to do anything which would harm me?\n\nAround three, after the Slave Trainer died, I had to show Delphine how to clean and recharge it, then take her into the bath and shave all the hair below her head off. I gave her an enema and she asked what for and I told her she might be required to clean a cock after it fucked her ass.\n\n\"Do you do this?\" she asked.\n\n\"If my bottom has been cleaned as we're doing yours. Since I don't know what to expect from the new club, I'm not taking any chances. Francesca and Belle will be doing the same. I want to minimize my chances of being punished.\"\n\n\"What's it like?\"\n\n\"Not much different from cleaning a cock which has cum in your cunt. It doesn't taste much different, slightly muskier, I suppose. The hardest part is your head messes with you. You know where that cock has been and you imagine it's worse than it is. If you were blindfolded and didn't know where it came from, you probably couldn't tell. It helps to have a strong stomach, but I can use a butt plug and show you there's nothing to be afraid of.\"\n\nShe shivered. \"Even thinking about it makes me nauseous.\"\n\n\"Like I said, the mind messes with you.\"\n\nI did myself after doing Delphine, shaving again to make sure I was smooth.\n\nWe turned the bathroom over to Francesca and Belle and rejoined the others.\n\n\"Master, what can you tell us about the club tonight?\" I asked.\n\n\"Have you ever seen the movie, 'Eyes Wide Shut'?\"\n\n\"Yes, sir.\"\n\n\"My agents inform me it's similar to the scene in that movie. Everyone will be given masks when you go in. While it's not a guarantee of anonymity, it does reduce the likelihood of someone knowing you or you them. You won't be moved around as you were at the first club, but as people come by, they can use you sexually in any way they wish, and even though someone is using you, doesn't mean someone else can't join them. They ask the first person to make room and then shove their cock, strap-on, or cunt into any remaining holes. As you'll be seated with Lynn and Bj\u00f6rn as they hand out your survey and they're offering payment to take it, I'd expect a lot of people to approach your position, and seeing four provocative slaves seated there, expect many to take advantage of you.\n\n\"Your Mistress will be Michelle tonight, and she's never been to Cries and Whispers. She may lead you around on a leash to observe some of the activities there. This might expose you to even more people or the same people more times. I fully expect you'll get fucked there a lot. Dominque will be in charge of Belle, but since she's not experienced, she must remain with Michelle or Lynn at all times.\n\n\"My understanding is the club emulates the leanings of the Marquis de Sade, so punishments are fairly frequent. They are limited to five strokes apiece and cannot break skin, but it leaves a lot of leeway in how you're punished. I hope they use a paddle or soft stranded whip most frequently, but a cane or switch or single tail whip is allowed. The cries of Cries and Whispers are the sounds of slaves when they're punished. You'll be given a universal safe word at the door, and you may use it, but if using it, you must leave the club. You're allowed to speak, so you might try teasing the person who wishes to punish you. Perhaps waggle your sexy ass at him or her and say something like, 'wouldn't you prefer spanking me with your hands on my ass and feeling it move under you.' I don't know if it will help, but it could.\"\n\n\"Yes, Master.\"\n\n\"One of the bodyguards will be with each of you at all times and if someone does break skin, they have my permission to intervene and stop it, without using your safe word because of the violation of club policy. If anyone uses a safe word, you all come home. I'll not subject any of you to more abuse. Use your alias. I don't want anyone knowing you're the one who got Jean-Paul Belmonde arrested. He may have had friends or acquaintances who also own slaves.\"\n\n\"Yes, sir, I understand.\"\n\n\"Delphine, you still need to be whipped, twenty strokes. I'll do ten to your backside so you know what to expect from that, but fully half of them will be on your tits and cunt as it's possible you'll be whipped there tonight. You can still change your mind. Do you wish to proceed?\"\n\n\"Have you whipped Beth's breasts and cunt, sir?\"\n\n\"I have.\"\n\n\"Then you may whip mine, Master.\"\n\n\"Since I don't have any of the bondage pieces I usually have, available at the hotel, I want you to stand in the doorway and grip the door molding with your hands. Don't let go. I generally don't want your body moving because I could be aiming at one thing and hit something totally different than the intended target because you move. I'll delay the next strike until you've settled down and stopped moving again. The way I whip, it does leave stripes on your body, but they should be faded before you go to the club tonight, though they may still be visible at dinner. I'll be giving you Miranda's collar and cuffs since she's not going. Do you have any other questions?\"\n\n\"No, sir.\"\n\n\"Then grab the door molding and hold tight.\"\n\n\"Yes, sir.\"\n\nDelphine looked so lovely standing in the French doors leading into the bedroom. She faced the bed first and her ass was perfect, toned, beautifully rounded, a real pleasure to hold while I licked her. Master spread the first ten all over her backside, from shoulders to knees. I could see the red stripes forming with each stroke. I didn't know how many individual strands were on the cat, but ten strokes meant individual strands were striking you 70-100 times. They tended to clump together, so it was more like one big, wide, heavy strap hit you, but every so often, one of those pesky leather strips left the pack and could sting a nipple or clit something awful.\n\nOnce again, Delphine avoided saying yellow or red, but the backside was always a good place to start. The whip wasn't heavy and could be spread around fairly easily since almost anything could be a target except the face. The first ten over, Delphine turned around and faced the living room. I could see she was tense. No woman likes to imagine their breasts or pussy will be whipped.\n\n\"Master, before you finish, may I have a word with Delphine. I'd like to discuss sub space with her.\"\n\n\"Fine. Delphine, you may put your arms down and relax.\"\n\nI pushed her into the bedroom and onto the bed, sitting beside her and holding her hand. \"When Master said I was prepared for submission more than you, he was referring to my exercising. I'd experienced what's often known as runner's high. When I'm exhausted or sore and feel like I can't take another step, I get like a second wind, push through the weariness and pain and keep going. Experienced subs feel something similar called sub space. You let your mind drift, think of pleasant things, anything but the pain you're experiencing. For me, that flash of pain becomes like heat. I feel it spreading through my body from the point of impact to my breasts, my cunt, making me feel warm all over. It diffuses the pain and turns it into something akin to pleasure. Not like you licking my cunt pleasure, but something nicer than the whip. It's not uncommon for me to cum.\n\n\"You need to focus on anything but the whip. Think about a sunny day, a picnic, me licking your cunt, whatever takes you out of the present and into that other frame of mind. You reach for that something else, imagine it, let it fill your head. You'll notice the pain dissipating or moving farther away. After you've been whipped, I'll give you a couple orgasms to make you feel better, but ask for permission to cum. Are you ready?\"\n\n\"Yes, thank you. I think that helps.\"\n\nDelphine stood up and grabbed the door frame and told Master she was ready. He did a couple swings at her thighs and stomach, then moved up to her tits. She had this dreamy look on her face and whatever she was thinking about, must be pleasant. The whip tickled the bottom of her breasts, then the top, then the tips. She flinched, and yipped a little, but didn't lose the smile. The same thing happened as he moved down to her cunt. Her smile even got wider as he struck the top of her mound, though she did flinch as he got lower and hit her actual pubic lips, but she climaxed on the last one where he struck her clit, never as hard as anywhere else she'd been struck.\n\nAs she jerked and shook, still clinging to the door frame, Master dropped to his knees and licked the tenderized bud, extending and enriching her orgasm. Her hands dropped to his head and clung to him as she moaned through her climax. I'm sure Dominique was surprised to see her sister cum when whipped on the cunt, but Darla had seen it before, and so had Michelle. It took several minutes for her tremors to cease and Master slowed his attentions as she calmed down.\n\n\"Master, may I please give Delphine two more orgasms with your permission?\"\n\n\"Yes, you may.\"\n\nI drew her to the bed and had her lie back and slowly teased her to two more. She was feeling quite mellow when I finished.\n\n\"You were right. It worked exactly like you said it would. Thank you,\" she said when I resurfaced for air.\n\n\"You're welcome. It's nearly time to dress for dinner. You may wish to prepare by accepting your collar and cuffs. You'll be dining as a near naked slave tonight.\"\n\n\"How can it be so scary and so exhilarating at the same time?\"\n\n\"I don't know. I haven't figured that part out yet.\"\n\n******\n\nI washed my face and brushed my teeth again, applying dabs of perfume to strategic areas. Master had me wear the black dress similar to the red one he'd purchased for Delphine, with the narrow strips fore and aft with the narrow panels over my breasts. She wore the black sheer one. Francesca and Belle were both in similarly slutty garments showing lots of skin when we went to dinner. Francesca's exposed the top half of her ass crack. Belle's breasts were only covered by sheer fabric. Our Dominants were also dressed for the evening out. Captain Amundsen was in tight pants which showed the bulge of his cock, a loose, blousy shirt I didn't even know he had, open to the waist, showing his broad, hairy chest to good advantage. I suspected Lynn had purchased it for him. Our bodyguards wore muscle shirts and similarly tight trousers, and I had to say, Jake filled his out very nicely.\n\nI sat next to Michelle and she fed me. I wasn't in her lap and she didn't openly caress me, but her hand was on my upper thigh, stroking it, turning me on, though it didn't require much effort on her part. She would occasionally brush my pubic lips, almost as if it were an accident, though I knew it wasn't. Delphine, her entire naked body covered by two thin layers of sheer cloth, was being fed by Lynn, Belle by Dominique and surprise, surprise, Bj\u00f6rn was feeding Francesca. His hand rested on the top of her ass as he fed her and her perky nips were burning holes through her flowing top.",
        "I knew Bj\u00f6rn had a bit of Dominant in him, carefully tucked away, well hidden before now, but starting to peek out now he was off the ship and not in charge.\n\nWe obviously attracted quite a substantial amount of notice in the restaurant. Waiters and waitresses both gave our table lots of attention. Our glasses were barely half empty before someone came by to fill them. Other restaurant patrons seemed to need to detour slightly to get to the restrooms. Francesca, Belle and I were used to being half naked in public, but Delphine was not. She blushed frequently as people walked by, aware they were looking at her. If not for her experience modeling clothes at her store, I'm sure it would have been worse, but she'd never be as bare there as she was now, and not tucked into the cozy confines of her job, but out for the night in public. If she ever stood between a person and a light source; well, I'm sure you can imagine what it would look like.\n\nDespite her fear and trepidation, her nipples were hard as nails, poking proudly against the filmy material of her dress. I'm sure if someone touched her pussy, they'd find their finger inundated with her lubricating fluids. I kept smiling at her, trying to keep her distracted. When we left, Lynn had Delphine wait there by the door as Master paid the bill, so people entering and leaving would get a good look at her. She clutched a small handbag in front of her sex, but it did nothing to hide either her lovely breasts, or the fact she had no underwear. Heads swiveled as they walked by, almost doing circles so they could see the back.\n\n\"Edgar, keep the women safe. I'm sending the limo with you. Get everyone out if you have to.\"\n\n\"I will, Joshua, don't worry about a thing.\"\n\nAs we drove to Cries and Whispers, Dominique was almost as edgy as Delphine. This was also her first time in a BDSM club in any capacity and she was going as a Dominant, which she'd never previously played at, despite the example of her mother. Michelle was cool, calm and collected. She'd been a Dominant for years and although this club was new to her, similar clubs were not. She felt she'd fit right in, and probably would.\n\nOn the drive, I reminded everyone to call me Helen tonight. I reassured Delphine that she had this and she'd gone through a whole day of stuff exactly like what she could expect tonight. Enjoy the fucking and use sub space to get through any punishments she suffered. She nodded nervously. At the club, we paid the entrance fee, learned our safe words for the night was Avocat, the French word for Avocado. We got them to announce 100 Euros to anyone who took my survey. Everyone was given a simple mask which covered the tops of our faces and were led to a room where people could find us if they wished to receive the money for the survey.\n\nAs soon as our Dominants had settled into their seats and our bodyguards had taken up loose positions around us, people started showing up. Those who did show up, saw four scantily clad slaves in the vicinity and frequently took advantage of us as they left, or as they waited for another iPad to become free. All four of us had been fucked five or six times in the first two hours, often by more than one person at a time. On the other hand, no one had attempted to punish us, and I think the presence of the five imposing men standing around might have played a part in it.\n\nI kept an eye on Delphine when I could, but also Michelle, wondering how she felt about her daughter getting fucked six ways to Sunday. Perhaps I could ask her at some point in the next day. I knew she'd treated other women's daughters the way hers was now being treated, but this had to be more personal to her.\n\nSince Lynn and Bj\u00f6rn had the surveys handled, Michelle asked Dominique to walk around a bit with us and see what else was happening around the club. Edgar and Jake went with us, staying roughly six or so feet away, far enough people could enjoy us, but close enough to leap into action if it was required. We'd come upon various scenes in different rooms of the club. There were scenes where punishments were being carried out, others where fucking was more prevalent, and some where both were occurring.\n\nWe stopped at a St. Andrews cross and watched a young woman take five swats of a paddle from two different people, one man and one woman. Michelle commented on it and said Dominique should learn to punish her temporary slave. When Belle was on the cross, Michelle showed Dominque how to administer the paddle to Belle. then watched closely as Dominique gave Belle an additional five. Another woman came by as Belle was still confined and added five more to her perky buttocks, turning them quite red. A gentleman approached Michelle and asked if he could put me in Belle's place and whack my bottom a few times. Since I hadn't been struck once so far, Michelle had no problem binding me to the cross and waiting for the gentleman to take his strokes. A woman watched him and wished to add five more to my tally.\n\nAnother man watched me absorb the paddle and asked if he could use a thin cane on me. I knew it was only five and he couldn't break skin but I hated the cane, so I suggested an alternative.\n\n\"Sir, might I make a suggestion to you?\" I asked, hoping he understood English so I didn't need Michelle to interpret.\n\n\"What would that be?\"\n\n\"I admit that I'm not particularly fond of the cane, Master, but I'm known for giving excellent blow jobs. If I don't give you the best cock sucking you've ever had, you may give me ten. If it is the best, please don't strike me at all.\"\n\n\"How do you know I wouldn't lie and give you ten strokes with the cane anyway?\"\n\n\"This is considered a gentlemen's club, isn't it? Do they let non-gentlemen in, sir?\"\n\nHe laughed. \"I don't particularly consider myself to be a gentleman.\"\n\n\"Then this will be the deciding factor, sir. You sit in the chair and if you lift your ass off the chair as you cum, we'll consider it the best you've had. If it remains firmly planted in the chair, it wasn't.\"\n\n\"You've got yourself a deal.\"\n\nFifteen minutes later he was trying to drive his cock through the back of my head, arched way off the seat, despite the fact he told someone else to take advantage of my position to fuck my ass.\n\nHe patted me on the head as I tucked his cock back in his pants. \"I wouldn't have believed it if I hadn't experienced it.\"\n\nI smiled and turned and sucked the cock of the man who pulled out of my ass.\n\nDone with that chore, the first fellow asked why I had a Mistress instead of a Master since I sucked cock that well.\n\nMichelle answered, \"Because she licks cunt better than anyone I've ever met.\"\n\nSince Michelle was in her early fifties, one had to assume she'd had more than a few people, men or women, munch her rug. So a woman who'd watched the performance we'd given said, \"Really? The best?\"\n\n\"No question.\"\n\nNot satisfied with Michelle's word, the woman took the seat the man suddenly vacated so he could watch the next performance. She spread her legs and I was staring at a neatly trimmed patch of fur. Fifteen minutes later, she was arching off the same seat, my head clutched in her hands, smearing my face all over her cunt. This despite the fact another man, with a fairly substantial prick, was now plumbing my depths digging for gold.\n\n\"Putain, mon Dieu. C'\u00e9tait incroyable,\" she gasped.\n\nThe man fucking my cunt pulled out without cumming, and moving towards my head, said, \"Look at me.\"\n\nAs soon as I looked and saw him stroking his cock, his heavy balls drawn up tight, I knew what was happening. I closed my eyes as he swamped my face with a flood of thick cream, moaning gutturally, like I was the first person he'd fucked since he got to the club. From the copious volume of cum on my face, perhaps I was. The mask was probably ruined, but they didn't appear too expensive. I could feel sperm dripping off my chin. I opened my mouth up so I could capture the last few drops he squeezed out on my tongue.\n\n\"Leave my cum on your face.\"\n\n\"Until another Dominant tells me to remove it,\" I agreed.\n\nAnother man was eager to try me, his stiff cock protruding from his pants. Michelle forestalled him.\n\n\"I still need to see more of the club. It's my first time here. Perhaps later, if you're still around.\"\n\nWe continued our exploration. In one room, there were fifteen to twenty people engaged in some form of sex, a writhing, squirming, moaning mass of masked humanity, spread out over a padded floor, fingers and tongues and cocks and cunts and asses engaged like the inner mechanisms of a clock. We watched for several minutes while Belle lapped at Dominique's folds until she squealed in pleasure. Belle had a satisfied grin and a face full of cum when she stood, happy she'd not been found wanting as a sex slave.\n\nIn another room, we came upon another scene of pleasure and pain. Various Dominants were seated in comfortable chairs being orally attended to, while the slaves attending to them received discipline with paddle, whip, crop or cane, almost like a contest to see who could ignore the pain the best.\n\nMichelle, who'd witnessed me performing that particular trait, invited the man who'd wanted my mouth earlier, and whose cock was still bursting from his trousers to have a seat and I would ease his suffering. He gratefully sat down and I engulfed his cock. While fellating him, a woman lifted the bottom of my dress over my back and smacked my bottom with a paddle. Then a man used his heavy hand. Between them, leaving my bottom burning and red. It hadn't stopped me from continuing to work on my cock. He was getting close, so I slowed down to ratchet him higher. I sensed someone else behind me, preparing to whack my buttocks.\n\n\"Esp\u00e8ce de connasse. Mon ami Jean-Paul a \u00e9t\u00e9 arr\u00eat\u00e9. Je vais te faire payer.\"\n\nI didn't have a fucking clue what he said but hearing Jean-Paul's name mentioned made the hair on the back of my head stand up. My bottom exploded in a maelstrom of pain, so sharp, so sudden, so intense, I couldn't breathe and nearly bit the cock in my mouth. Another blow fell, and a third before I could scream out \"AVOCAT, AVOCAT.\"\n\nAnother couple sharp, painful blows across my buttocks, then a fast and sudden struggle behind me, another cry of pain as I heard a bone snap, then another. Michelle was beside me, kneeling on the ground, her arm around my shoulders, murmuring, \"Mon cherie. You poor thing.\"\n\nMore masculine groaning behind me, obvious pain, Edgar shouting to get everyone out of the club now, bouncers rushing towards us from everywhere. Jake picking me up, wrapping his huge arms under me.\n\n\"Tu m'as cass\u00e9 les bras, salaud.\"\n\n\"Tu lui, as cass\u00e9 la peau, connard,\" Michelle screamed.\n\n\"Elle a fait arrr\u00eater Jean-Paul Belmonde. C'est mon ami.\"\n\n\"Il l'a m\u00e9rit\u00e9, et toi aussi. Il poss\u00e9dait des femmes, les achetait et les traitait comme de la merde. Est-ce que tu fais de m\u00eame?\"\n\nJake turned and some guy I vaguely recognized, was lying on the floor, whimpering, both arms broken, bone protruding from the skin in one. Three big lads were standing around Edgar who was bowed up like a pit bull, waiting for someone to get close. He was smaller than the three around him, but looked far more dangerous.\n\nMichelle said, \"You'd better back off. D\u00e9gage. This man broke skin on this woman, and didn't stop when she gave the safe word. How many people will come to your club if this is the type of thing you allow to happen. He got what he deserved. We're leaving now and you can bet I'll tell everyone I know what happened here. Get this fucking piece of trash out of here.\"\n\nEdgar backed up towards Jake and Michelle, watchful. Henderson and Bj\u00f6rn, suddenly beside him. Two of the men picked up the fallen fucker, now unconscious from the pain. They hauled him off, the third still watching Edgar like a hawk. I didn't feel so good myself. I felt like puking.\n\n\"Can I go home?\" I said.\n\n\"Are we going to have trouble leaving?\" Edgar said, \"because I can have another two dozen ass kickers here in fifteen minutes to tear this place to the ground.\"\n\n\"No,\" the man said, \"Go.\"\n\nEdgar and Bj\u00f6rn led the way out of the club, dozens of people now watching, silent. Jake and I, Michelle, Dominique and Belle following, Henderson covering the rear. Edgar and Bj\u00f6rn covered the door until Henderson was out, then followed us. The others were already in the limousine, Leo and the driver outside the vehicle, the driver with a gun alongside his leg. He waited until everyone was inside before getting in the car, and pulling out.\n\n\"Shit,\" Edgar said, \"let me see Beth, Jake. Turn her over.\"\n\nJake gently flipped me over so I was lying upside down over his lap. He carefully lifted my dress off my ass.\n\n\"Aw, fuck! The boss is going to kill me.\"\n\n\"It's not your fault, Edgar. How bad is it?\" I asked. It still hurt like hell.\n\n\"All five broke skin. Your ass is torn up, Beth. It was my fucking job to protect you and I fucking failed. Henderson, call ahead and let Manuel know what happened. I hope to hell she won't need stitches.\"\n\n\"He hit me three times before I could get a word out of my mouth, before I could even draw breath. How could you know that he'd be different from the other two before him? How could anyone know? I certainly don't blame you. Your retribution was fast and certain.\"\n\n\"What the hell happened?\" Bj\u00f6rn said.\n\n\"I kind of recognized him despite the masks. He was one of the people standing around when Jean-Paul was arrested at Chateau Roissy a couple nights ago. He kept mentioning his name but I couldn't tell what the hell he was saying.\"\n\n\"He said Jean-Paul was a friend and you got him arrested,\" Michelle said. \"I told him Jean-Paul was a bastard who bought women and treated them like shit. You pretty much heard the rest. He bitched about Edgar breaking his arms.\"\n\n\"If I'd had time, I'd have broken both his legs, too. The security got there too damn quick. I hope I crippled him enough he can never strike anyone again.\"\n\nThe car was pretty silent on the ride back to the hotel. Master and Miranda were up waiting with Manuel when Jake carried me into the suite. Master's eyes had thunderclouds swirling in them. The look he gave Edgar could have frozen water. I was carried into Master's bedroom and my dress was removed before I was set on my stomach on the bed. Miranda gasped and Master growled like an animal.\n\n\"What the fuck do I pay you for, Edgar?\"\n\n\"I'm sorry, boss. I'll resign immediately.\"\n\n\"Master, it wasn't Edgar's fault and if he leaves or gets fired, I leave too.\"\n\nMaster roared, \"Look at what happened to you while you were under his protection. You too, Michelle. She was your slave tonight.\"\n\n\"I'm sorry, Monsieur. It was so sudden. No one had time to react.\"\n\n\"Master, it wasn't her fault either. It was no one's fault. I was sucking a cock, getting punished as expected in a club of this type. No one else had done any more than anticipated. Edgar was giving enough space so people weren't intimidated by his presence. The last guy was apparently a friend of Jean-Paul Belmonde, and saw him arrested at Chateau Roissy, and saw enough of me to recognize me at Cries and Whispers. He struck me three times so fast I couldn't draw breath to use my safe word, and struck me a fourth and fifth before Edgar could get to him. Probably no more than a second or two from start to finish. No one had reason to suspect he'd go berserk. Edgar broke both of his arms, Master. Bone was sticking out of one of them. The other one looked like it was pulped. Don't blame anyone but the man who did this.\"\n\nMaster knelt beside me and started crying.\n\n\"You'll have scars,\" he sobbed.\n\n\"If she does, Master, they'll be very faint,\" Manuel said. \"She doesn't need stitches and they should heal fairly well in the next week. She can probably sit on it the day after tomorrow. It's not as bad as Yasmine suffered, believe me. Someone bring me a fresh clean washcloth with warm water on it so I can wipe the blood off and take a closer look. He couldn't take full swings if it happened as fast as they said it did. Think about it. It probably looks worse than it is because of all the blood they haven't had a chance to wipe off.\"\n\nMiranda rushed off to get the washcloth while the rest hovered around like mother hens.\n\n\"It's not that bad, really,\" I said. \"It barely hurts anymore. I might be sitting on it even sooner than Manuel thinks. Nobody died, the asshole who did this will suffer more than I did and a lot longer. Could you please clear the room and stop looking at me like I'm a broken piece of china. Let Manuel finish doing his job.\"\n\nThey all did clear out, except for Master, Miranda, Manuel, and Edgar and Michelle, who both still felt responsible. Manuel carefully dabbed away the blood, much of it dried during the ride home.\n\n\"See, only a couple spots are still oozing blood,\" Manuel said, \"probably only the points of initial impact. It's not as bad as it looked. I'll put some antibacterial, analgesic cream on it, dress the wounds that are still bleeding and give her a couple acetaminophen PM for pain and to help her sleep.\"\n\n\"There you go. I told you it wasn't that bad. You're all worried for nothing. It barely hurts anymore. Edgar, Michelle, give us a kiss and beat it.\"\n\nIt still hurt, but I'd pushed it down. The warmth still there, a lingering throbbing. They both kissed my cheek and left. Manuel spread cream on my buns and put a couple big bandages over the worst of the seeping sores.\n\n\"She should probably sleep on her stomach tonight, so she doesn't wipe the cream off her ass, sir,\" Manuel said.\n\n\"Should I tie her down?\"\n\n\"That shouldn't be necessary, sir. She'll be restless, but she won't really want to lie on her back. I'll leave more of the pills and cream to put on if she wakes up during the night, but no more than two more pills before morning.\"\n\n\"Thank you, Manuel.\"\n\n\"You're welcome, sir. Beth is a tough woman. She'll be okay.\" He ruffled my hair and left.\n\n\"Are you sure you're all right?\" Miranda asked.\n\n\"It stings some, but that time I took half of your punishment for lying hurt worse. Master, if you're inclined to punish me anytime soon, I'll take my freebie.\"\n\nHe laughed. \"I wasn't planning on it, but we'll see.\"\n\nMiranda and Master lay down on either side of me and snuggled close enough to keep me from moving too much. Master's arm went over my shoulder with Miranda's just below his. I closed my eyes. It took awhile but I went to sleep.\n\n******\n\nWhen I woke up the next morning, Master was leaning on his arm, watching me. When I opened my eyes, he bent down to kiss me.\n\n\"How are you?\"\n\n\"Suffering less than you, sir, I imagine. I was serious. Don't fire Edgar. I want him protecting me. I trust him to look after me despite what happened last night. He made that man pay.\"\n\n\"I won't fire him. As Manuel said, it was worse than it looked initially. I was so scared when they told me you were hurt. I couldn't bear the thought of it.\"\n\n\"You hurt me almost every day, sir.\"\n\n\"Not like that. Never like that.\"\n\n\"I know, Master. I'm hungry. Can I eat?\"\n\n\"I'll order some food. What would you like?\"\n\n\"Three eggs scrambled, two of those big sausages, orange juice, coffee and two slices of dark bread toast.\"\n\n\"I'll put in the order and let Manuel check you over again. Do you want to eat in here?\"\n\n\"I'm not an invalid. I'll get up. What time is it?\" My watch was dead, battery exhausted.\n\n\"A little before ten.\"\n\n\"No wonder I'm so hungry.\"\n\nHe called Manuel to check me over while he called room service with my order. Manuel took off my bandages and checked my wounds.\n\n\"All the bleeding has stopped, though I'll replace the bandages. Wear something lightweight, no jeans.\"\n\n\"Have you ever seen me wear jeans in all the time you've known me?\"\n\n\"Well, no.\"\n\n\"Master doesn't like pants, I don't have any with me. I've got a snowsuit now, for Norway, but no pants of any kind. I'm not sure he won't want me cutting holes in the snowsuit for my tits and cunt so he can still get to them any time he wants.\"",
        "Manuel laughed. I gave him a peck on the cheek and got up, putting on a light dress so I could join everyone else. They all seemed glad to see me, everyone asking how I was doing and generally making a nuisance of themselves. My sister slaves and Delphine generally being the most anxious and inquisitive until I got sick of it and asked them to stop. When the food arrived, I put a pillow on a cushion on the couch and gingerly sat down to eat. I'd finished when there was a knock on the door. Edgar got up to answer it. Two policeman were at the door. I recognized the one from Chateau Roissy who'd questioned us. Edgar let them in.\n\nThey looked around at the opulence of the place a little before approaching Master.\n\n\"Monsieur Greenbriar, can you tell us what happened last night at Cries and Whispers?\"\n\n\"Not first hand. I wasn't there.\"\n\n\"Why was anyone there at all, given what happened a couple days ago?\"\n\n\"We did mention Mademoiselle Wilson was doing research on Dominance and submission, did we not?\"\n\n\"It was mentioned. Why was there violence perpetrated last night by people in your employ?\"\n\n\"Because violence was perpetrated on my people first by another,\" Master replied.\n\n\"Isn't that the whole purpose of going to one of those clubs, for the sex and violence? Isn't this club based upon the works and beliefs of the Marquis de Sade?\"\n\nI spoke up. \"How familiar are you by the practice of Dominance and submission as practiced by most sane people today and not in de Sade's time?\"\n\n\"Very little, I suppose. I think it vulgar, meant for Sadists and Masochists.\"\n\n\"Good for you. You'd be wrong of course, but at least I know where you're coming from. You should learn more about it because perhaps fifty percent of all French citizens have practiced some aspect of bondage and discipline. Actually most true Sadists and Masochists wouldn't go to a club like Cries and Whispers. Too tame for them.\"\n\n\"Doesn't the S and M of BDSM come from Sadists and Masochists?\"\n\n\"It used to. More often today it stands for Bondage, Dominance, Submission and Masochism, but that's beside the point. Generally, practitioners of BDSM establish guidelines for themselves of Safe, Sane and Consensual. There is no BDSM without safety and consent. Otherwise it's assault and rape. Without those two things, all you have is slavery. Are you married, sir?\"\n\n\"I am. What does that have to do with anything?\"\n\n\"Have you ever handcuffed your wife, tickled her, spanked her, bitten or pinched her nipples or teased her with a vibrator without letting her climax?\"\n\nHe didn't say anything.\n\n\"I'm going to assume from your lack of response that you've done one or more of those things. That's okay. It was probably enjoyable for both of you, but you have practiced some aspect of BDSM in your own life. It's not that uncommon for most people in even the most loving and caring of relationships to do those things.\n\n\"A true Sadist gains sexual pleasure from giving pain, and a Masochist from receiving pain. I do not enjoy giving or receiving pain. It does not give me pleasure, nor would it for most rational people. I can tolerate some pain if given pleasure to go with it. I can enjoy the dichotomy between the pleasure and pain, but that's all. Because while submissives like me go into environments such as Cries and Whispers for a variety of reasons, there are rules established for those places so they remain safe and consensual. Any one person could not strike me more than five times; no one could draw blood, and everyone is given a safe word, which if used, stops anything which might be happening to them. So if two people spanked me their allotment of five and a third wanted to do so, I could use my safe word to prevent him from striking me more than I would find enjoyable or comfortable. That is safe, sane and consensual.\n\n\"What happened to me last night was none of those things. This man, whoever he was, apparently upset at the arrest of his friend, Jean-Paul, the other night, took it upon himself to beat me bloody in retaliation. I used my safe word, and he didn't stop. He continued beating me. He exceeded the rules of the club and my own limits. The man sent to the club to keep me safe retaliated to protect me. That is what happened.\"\n\n\"He broke both of his arms, one of which he may never regain full use of.\"\n\n\"He should not have done this.\" I stood, turned, lifted my dress and showed them my bottom. \"He was not going to stop. He didn't stop when told he must. I was protected from further harm, or would you have preferred my backside looked like Yasmine's?\"\n\n\"Couldn't he have protected you by doing less than he did?\"\n\n\"Perhaps. We didn't understand what the man was saying. We didn't know why he was beating me. We've gained some dangerous and powerful enemies by freeing some of the women we have. Jean-Paul was rich and powerful, you said it yourself. Was this man associated with them? Edgar had no way of knowing.\n\n\"What he knew was I was being hurt and he was supposed to protect me. He almost got fired for letting the man hit me once, let alone five times. He didn't know if there wouldn't be other attackers coming. If I were you, since this man was so friendly with Jean-Paul, I'd look into his background a little and see if he's bought and sold women himself, or if he was just the beneficiary of another man's slaves. It wouldn't surprise me if he's whipped or caned or raped Jean-Paul's slaves since they were such good friends. Perhaps you should speak to them more and find out if this man was part of the torture they endured. More than one person caned Yasmine at Chateau Roissy. I witnessed it. Perhaps this other man was one of them. He was apparently used to drawing blood. I, for one, was glad I had a protector to keep me from further harm.\"\n\nNeither one of them had much to say in response to my last.\n\n\"Please, don't go to anymore of these clubs in France,\" the lead officer finally said.\n\n\"I didn't intend to. I expected more from a civilized country such as France is supposed to be.\"\n\nWith that, they took their leave. Master came over and hugged me, as did Edgar, Miranda, Francesca, Belle, Delphine and Michelle.\n\n\"I couldn't have said it better myself,\" Master said as he hugged me.\n\n\"My education is good for some things,\" I said.\n\nHe laughed.\n\n******\n\nThe rest of the day proceeded more like a normal day, save I wasn't much a part of it. Francesca, Belle, Miranda and Manuel were put through their paces by one or more of the Dominants. Some of our bodyguards spent time fucking any who wished to be fucked. Mostly, the freed slaves stayed in their room except for meals. Maahnoor took Henderson to one of the rooms and they disappeared for a couple hours. Pregnancy didn't seem to be slowing them down in the slightest; not yet anyway.\n\nI was surprised when at some point in the late afternoon, Dominique mounted Jake and had Edgar fucking her ass. They didn't find one of the bedrooms to do so, which was the first surprise, nor did they stop when there was another knock on our door. Leo got the door. There was a man standing outside the door, I didn't recognize, though Delphine, Darla and Michelle all recognized him and looked at Dominique, being fucked right there in the room.\n\n\"Bon jour, I'm looking for my wife, Dominique. She told me I could find her visiting with family members here.\"\n\nI don't think we could help it. Everyone's eyes kind of went to Dominque being double dicked by Jake and Edgar. His eyes followed ours and saw his wife being fucked in the cunt and ass. His mouth dropped open and he took one step into the room, then another, then a third, unable to believe his eyes.\n\n\"Dominique!\" he exclaimed, otherwise speechless.\n\n\"Gaston,\" she replied, \"right on time. We have a great many things to discuss, you and I, but I must finish what I'm doing first. Carry on men.\"\n\nShe started moving faster over their cocks, ignoring their surprise to suddenly be fucking the wife of the man standing inside the room, just inside the door. They must have been close as first Edgar, then Jake, froze, pulsing their loads deep inside Dominque's body. It was evident to all of us what had happened, Gaston as much as anyone else. He'd just seen his wife fucked by two different men at once.\n\nDominique stood up, the cum of both men running down her legs. I had to admit she looked sexy for a woman who'd carried a child. Curvy in all the right places, not carrying extra weight. I'd fucked her and enjoyed it.\n\n\"Do you love fucking this body, Gaston?\"\n\n\"O-oui,\" he stammered.\n\n\"You're not going to fuck it anymore unless we make some changes, Gaston. In fact, our marriage won't last much longer unless those changes are made. Would you like to know what the changes are?\"\n\n\"Oui,\" a little stronger this time.\n\n\"I'll tell you as soon as you lick this cum out of my cunt and ass. Otherwise you can leave right now.\"\n\nWe all waited in breathless anticipation to see what Gaston would do. I didn't think he'd be foolish enough to attack Jake and Edgar. Some men might, but Gaston didn't appear to be one of those men. He might also slap or punch Dominique. That was another option, though he kept looking at the men, wondering if they'd go to her aid if he did. He could also turn around and leave, perhaps his best option if he wasn't a cuckold.\n\nHe'd just watched two men orgasm in two of his wife's most sacred of places; her holy of holies; the altars of love. What he did do, was approach her, drop to his knees, and start licking the cum. She let him lick her cunt for several minutes, then turned and shoved her booty in his face. He started licking the cum dripping out of her ass, rimming her asshole nicely to catch it all. He kept it up until her crotch was clean. She turned around and faced him and put her hand on his head.\n\n\"You just stay there on your knees, Gaston, contemplating my cunt while I tell you what the new rules are. First of all, I'm damn sick of all your fucking around and I won't put up with it anymore. You've fucked so much cunt I lost track of it years ago. You even went after my sisters and my mother, you sick pervert. This shit ends now. From this moment forward, I'm going to fuck a lot of different cocks until I catch up to all the different pussy you fucked. You on the other hand will stop chasing after strange pussy or you will be cut off from my cunt and we are headed for a divorce. I won't be married to a pussy chasing bastard anymore. Mine is the only pussy you get from now on, and you only get it after sucking other men's cum out of my cunt or ass.\n\n\"Since you just did that, you get to fuck me now, after which you'll suck your cum out of my cunt. You will clean up after yourself henceforth. After yourself and everyone else who fucks me. If you're a really good boy, I'll let you watch them fuck me, like you did today. But that's only if you're a really good boy. If you're bad, I come home with fresh cum dripping out of my cunt and you won't know what big cock put it inside of me. Are you clear on the new rules, Gaston, because I don't wish to repeat them.\"\n\n\"Oui, ils sont tr\u00e8s clairs.\"\n\n\"On va dans la chambre suivante. Je ne veux pas que tu sois g\u00ean\u00e9 de te sortir de ta petite bite devant ces vrais hommes.\"\n\n\"Oui.\"\n\n\"Oui, quoi?\"\n\n\"Oui, Ma\u00eetresse.\"\n\n\"Gentile, gar\u00e7on.\"\n\nShe told him to get up and follow her. She left the room. He followed like a little puppy dog.\n\n\"What did she say to him?\" I asked Michelle.\n\n\"She said we're going into the other room so you won't be embarrassed by your little dick in front of these real men. He called her Mistress and she said, Good Boy.\"\n\n\"I can't believe she's finally standing up to that prick,\" Darla said. \"That was so fucking amazing. What the hell did you do last night to give her a backbone?\"\n\n\"I'm not sure,\" Michelle said. \"I would have said nothing, but obviously something happened. Whatever it was, good for her.\"\n\n\"Do you think he'll keep doing it,\" Jake said. \"I have to admit it was pretty hot watching him lick my cum out of her cunt. That tipped the twisted scale big time.\"\n\n\"My feeling is doing it the first time was the hardest, especially in front of everyone. It will only get easier for him from here. I guess Dominique inherited that gene from you, Michelle,\" I said.\n\n\"Took her long enough to find it.\"\n\n\"Beth,\" Master said.\n\n\"What about Beth?\" Michelle asked.\n\n\"You don't think it's mere coincidence one of your daughters suddenly decides she's submissive and one Dominant all by themselves, do you? Since Beth became a submissive, Lynn, Hannah, Francesca, Fatima, Henri, his daughter Liza, her college professor, Herman, and now Dominque have all become Dominants. Angelique, Sherry, Manuel, Miranda, Francesca, Miranda's sister, LuAnn, Herman's wife, Oliva and now Delphine have become submissive. Not to mention Simone and Pierre both accepted their submissiveness again. Nor do I think it unlikely that Bj\u00f6rn won't join the list of Dominants in the near future. If a person has the tiniest spark of either attribute, Beth seems to fan it into flames. With the exception of Simone and Pierre, none of those people seemed to exhibit either one of those behaviors. She's like a storm, tearing down whatever walls people build around themselves and letting them find their true nature, their true self.\"\n\nMichelle looked at me. \"You are an exquisite submissive. I haven't felt this Dominant, this alive, for many years. It's been sleeping to an extent, whether from raising children, or growing old, I don't know what, but it seems fresher and more potent than it's been for quite some time.\"\n\n\"Fanned into flames,\" Master said.\n\n\"If you weren't injured now, I'd want you licking my cunt.\"\n\n\"I'm not that injured, Mistress, unless you wish to spank me.\"\n\n\"Joshua?\"\n\n\"If she wants to lick your cunt, who am I to stand in the way.\"\n\nI took her hand and led her to Master's bed. Might as well be comfortable. The pain in my ass had to be good for something.\n\n******\n\nWhen we came out, Dominique was berating Gaston.\n\n\"Five minutes is all you could keep it up. That was pathetic. No wonder you fucked so many women. No one would put up with your pathetic little cock more than once. We need to leave for home after supper. If you want to fuck me again, I'll need to fuck one of these other men before supper. Which one of them would you like to watch fuck me next?\"\n\nGaston pointed to Henderson.\n\n\"He's married, Gaston. Unlike you, he honors his marital vows. Pick someone else.\"\n\nHe pointed to Leo.\n\n\"Leo, would you like to show my miserable husband how a woman should be fucked?\"\n\n\"Sure. No problem.\"\n\n\"Do you mind doing it here so everyone can see how a real man fucks a woman?\"\n\nLeo had fucked slaves in public before. He had no problem fucking a Dominant the same way.\n\n\"Happy to.\"\n\nFor the next fifty minutes, he fucked Dominique on the couch, having learned from Master and me how to do her up right. He fucked her in the missionary, doggy, cowgirl, and licked her whenever he got close to cumming. Dominique climaxed at least eight times I noticed, and she made sure Gaston knew it, every time.\n\n\"What an animal you are, Leo. This is incredible. I'm cumming again. Fuck me harder. Stick it to me. I should let you give me my next child, so it won't grow up to be a wimp like Gaston.\"\n\n\"Be happy to accommodate you. Let me know. We'll be around Europe a bit longer. I could maybe fly in and do the deed.\"\n\n\"Bring a couple of your friends with you. I'll let all three of you fuck me at once. You don't mind sharing do you?\"\n\n\"Not with a lovely woman like you,\" Leo groaned. \"What a tight cunt you have. Are you sure your husband fucks you?\"\n\n\"Not often enough. He chooses to fuck others instead of me and you've seen how useless he is even when he fucks me. All he's good for is cleaning up your cum for me.\"\n\n\"Here it comes, baby. I've got a huge load for you.\"\n\nLeo grunted and started pumping out a big payload of sperm. Dominique was either cumming again, or pretending she was. Gaston couldn't take his eyes off their joining, watching Leo's big dick twitch, his balls bounce as he injected her cunt full of cum.\n\nDominique sighed as she dismounted. \"That's the way a woman should be fucked. Lie down on the floor, Gaston. Let me feed you his cum.\"\n\nGaston scrambled to lie down on the floor and Dominique squatted over his face and let the cum drip out of her cunt all over his face. He tried to catch some of it in his mouth, but she kept moving around so some dripped on other places on his face. When as much dripped out as was likely, she put her cunt over his mouth and let him suck out the rest, then smeared her pussy all over his face. His face was coated with cum when she was finished.\n\n\"Leave that on your face, Gaston. That's what a good fucking smells like. Wear it all through supper.\"\n\n\"Oui, Maitresse.\"\n\nI looked at Master. \"I don't think you can blame this one on me, sir. Gaston still doesn't even know my name.\"\n\nMaster smiled at me. \"I'll blame Dominique on you instead.\"\n\nI'll be damned if Gaston didn't wear it all through dinner. Our servers kept looking at him. All the cum formed a hard glaze on his face. Dominique laughed and flirted with all the other men, ignoring her husband, much to Delphine's and Darla's delight. Apparently, he was not well liked within their family. If he'd made passes at all of them, I suppose that was to be expected.\n\n\"Let me pay for this,\" Michelle told Master, \"This weekend was worth it.\"\n\n\"It's going to run to several thousand dollars,\" Master said. \"Do you have that much to waste?\"\n\n\"So much?\"\n\n\"The wine was around three hundred dollars a bottle.\"\n\n\"No wonder it was so good. Let me at least pay for my family,\" Michelle said.\n\n\"Darla is part of my crew now. Don't worry about it. It's been my pleasure. A very interesting few days.\"\n\n\"I'm sorry Beth was injured on my watch.\"\n\n\"She doesn't hold you responsible, so I won't.\"\n\nDominique, Gaston and Michelle left after supper. Delphine lived in town and her car was at Chanel. Darla stayed with us since she'd had her visit with her family.\n\nWhen we got back to our suite, Darla said, \"Leo, you never fucked me like you fucked my sister. What's up, aren't I good enough for you?\"\n\n\"I thought she was trying to stick it to Gaston, so tried to go along with that.\"\n\n\"If you can fuck like that, you should be doing it every time you fuck,\" Darla said. \"That was damn near as good as Joshua. If you can get it up again, I'd like a fucking exactly like that one.\"\n\n\"Not a problem, let's go have a little privacy.\" They left the room.\n\nEdgar said, \"Great, more fucking competition.\"\n\n\"You can do the same thing, Edgar,\" I said. \"It's not that hard.\"\n\n\"Delphine, I know you'll need a ride since we picked you up from Chanel,\" Master said. \"I can have the limo driver take you.\"\n\n\"Master, if possible, I'd like to spend more time with all of you.\"\n\n\"You know I can't keep you.\"\n\n\"I know. You'll be leaving soon. I need to stay and keep my job. But if I could join you while you're in Paris, I would enjoy it.\"\n\n\"If you stay, you'll be subject to the same punishments and use by my staff as the others are. Are you willing to do this?\"\n\n\"Yes, Master. I understand.\"\n\n\"Tonight, you spend the night with Hannah as she's without her wife and slave.\"\n\n\"Yes, Master. I'll enjoy serving Hannah. She's a lovely woman.\"\n\n\"Let her know when you need to be at work; she'll arrange it.\"\n\n\"Yes, sir.\"\n\n\"Miranda, you'll spend the night with Lynn, Manuel and Bj\u00f6rn. Do as Lynn wants.\"\n\n\"Yes, sir.\"\n\n\"Francesca and Belle, give the rest of the men a blow job, then join Beth and I in bed.\"\n\n\"Yes, Master.\"\n\nMaster took me to his bed. \"How is your bottom, Beth.\"\n\n\"It no longer hurts, sir, but it's still uncomfortable sitting on it.\"\n\n\"Too uncomfortable for you to fuck?\"",
        "\"It would have to be much worse to be too uncomfortable for that, Master.\"\n\nHe smiled at me. \"Are you sure?\"\n\n\"What's the punishment for lying to you, Master?\"\n\n\"Ten swats with a cane.\"\n\n\"I'm sure. There's no way I'm taking ten more swats with a cane, sir.\"\n\nHe laughed. Master tenderly fucked me for thirty minutes, switching to Francesca when she joined us while Belle lapped at my folds. Between all of them and Michelle earlier, this was the one of the best days of sex I'd had for several days.\n\n******\n\nThe police did come back and speak to Yasmine again. They showed Yasmine pictures of the man who attacked me and she confirmed, as had the other two freed slaves belonging to Jean-Paul, that he had frequently participated in her rape and punishments with Jean-Paul, so not only did they discontinue their interest in Edgar, they arrested the man for crimes against Jean-Paul's slaves.\n\nThey did not file charges against him for his assault on me. Apparently, the prosecution did not feel that he could be prosecuted for harming someone in a place where I'd gone to be fucked and punished. They understood he'd exceeded the limits of club policy, but felt he might receive too much sympathy for what Edgar did to him to successfully convict him. What Edgar had done to him was much worse than he'd have received in a court of law anyway.\n\nMuch of the time I remained in the hotel suites with Yasmine, Fatima, Maahnoor, Farah, Manuel, Henderson and Edgar. Manuel would have the women putting more of his magic cream on Yasmine and me. In the evenings, Delphine would come after work and put on a collar and do exactly as Master or any other Dominant requested. I sometimes had sex with her, but other times, she was fucked by the others. It wasn't long before the only people she hadn't fucked were Yasmine, Maahnoor, Henderson and her sister, Darla. Even Angelique, who'd had an evening off, spent the night in bed with her Mistress and Delphine. Delphine, who'd known of Angelique before, felt like she was fucking a celebrity, and I suppose she was, though she was just Angelique to me, another sex slave.\n\nYasmine spent a little time with Delphine because they did share the language. Delphine had spent some time putting cream on both Yasmine's and my wounds, and we were lying there letting it soak into our skin.\n\nYasmine said, \"Pourquoi personne ne veut me baiser? Je ne suis pas assez jolie?\"\n\n\"You need to answer this one, Beth?\"\n\n\"What did she ask?\"\n\n\"She asked why no one wanted to fuck her, was she not pretty enough.\"\n\n\"Tell her she's very pretty, but we did not think she should have sex with anyone until we knew for certain it was something she wanted, and not something she felt compelled to do because she still felt like a slave.\"\n\nDelphine gave my explanation. Yasmine answered.\n\n\"She said she is a slave. She's just waiting for a new Master.\"\n\n\"Tell her she's not a slave just because she's branded. The men who made her think that are wrong. She should never to forced to do something she doesn't want to do.\"\n\n\"Et si je veux un ma\u00eetre, quelqu'un de plus gentil que mon dernier.\"\n\nI waited for Delphine to translate.\n\n\"She said, what if she wants a master, someone kinder than my last one.\"\n\nThat shut me up. It raised some questions. What if someone were submissive before and taken involuntarily? Granted, she had no choice to begin with, but what if now, what she wanted was the same thing I wanted? Was it the trauma she underwent speaking for her or was it something she truly desired, and if it was, should she be kept from it despite what happened to her?\n\n\"Can she read and write French?\" I asked.\n\nI waited for that question to be answered.\n\n\"She learned French before being taken. Learned it in school.\"\n\nI got up and got one of the iPads. I handed it to Delphine and asked her to show Yasmine how to take my survey. I wouldn't be able to enter it into my matrix until I got back to the ship, but I'd have some answers once I did.\n\nWhile Yasmine took the survey, I approached my Master, working on the next days meetings with Hannah.\n\n\"Pardon me, sir. May I disturb you for a few minutes?\"\n\n\"Of course.\"\n\n\"Sir, what if Yasmine is a true submissive, not merely forced into it by her slavery?\"\n\n\"Why do you ask?\"\n\n\"Yasmine asked why no one fucked her, was she not pretty enough. When questioned further, she stated she was a slave and wanted another Master, just one kinder to her than her last one. I'm giving her my survey now, but I won't have the results until I've put it in my database and run it through my matrix. But if she truly has a submissive personality, should we keep her from being what she wants to be?\"\n\n\"It sounds like a question for Professor Kline, not me.\"\n\n\"Does she want a Master or Mistress?\" Hannah asked. \"Does it make a difference to her?\"\n\n\"She specified Master, but I can ask her, Mistress.\"\n\n\"Why don't you call Herman and put the question to him, Beth. Maybe let her speak to him.\"\n\n\"Yes, Master. If Master Kline does not see a problem with her remaining a submissive, would you be her Master?\"\n\n\"You don't think four slaves are enough for me?\"\n\n\"It is quite a few, sir, but I'd trust you to be a better Master for her than most other people.\"\n\n\"What about Bj\u00f6rn or even Doctor Kline?\"\n\n\"I think they'd be satisfactory, sir, if they were willing to take on the responsibility. Bj\u00f6rn would be easy. Doctor Kline might require more of Miranda's magic. She'd need documentation.\"\n\n\"We'll figure something out. A temporary solution may be necessary to start.\"\n\n\"Thank you, sir.\" I gave him a kiss because I could and I wanted to.\n\nI went back and waited for Yasmine to finish the survey. When she was done, I asked, \"Do you want a Master or Mistress.\" Delphine translated.\n\n\"Un ma\u00eetre. Je sais qu'on m'exige d'avoir des relations sexuelles avec un homme ou une femme, mais je pr\u00e9f\u00e8re les hommes.\"\n\nA Master. I got enough out of that even without Delphine's translation to know what Yasmine said.\n\nI sent a text and asked him to FaceTime with me when he had a half hour to chat as he might have a class.\n\nProfessor Kline called two hours later, after we'd had supper. I asked him if he was in a position to speak freely.\n\n\"Let me close my office door,\" he said, coming back after he had.\n\n\"How are things going with Oliva? Is she still your hot sex slave, sir?\"\n\n\"God, yes. It's rejuvenated our marriage. We can't get enough of each other. We have sex two or three times a day in one form or another. I didn't think it was possible to love her more than I did. When we visited her family, they noticed we couldn't keep our hands off each other, and asked how we kept the magic alive. We couldn't tell them it was because she knelt naked at my feet.\"\n\n\"Do you keep her naked, sir?\"\n\n\"Every chance I get. You don't want to know how often I've made her cum in a restaurant or movie or play.\"\n\n\"Have you shared her with anyone else, Master?\"\n\n\"I took her to 'The Woodshed' in Orlando once, but I feel it's dicey given my profession to stray too far outside the lines.\"\n\n\"Rather than taking her someplace public, you might want to consider establishing a connection with Mistress Layton in Ocala, Master. It's a lot closer than Orlando and would be a lot more discrete. You could bring her to the pony farm as well. Something for you to consider. I'll send you Mistress Layton's contact information and let her know you'll be contacting her.\n\n\"There was another reason I wished to speak to you however. We've freed another slave from a Frenchman this time. Her name is Yasmine, and it's possible she had a submissive personality before she was enslaved. She says she'd like to have a Master again. It's still only a few days since we freed her, so I can't be sure it's not her slavery influencing her. Do you speak French? I'd like you to speak to her and see what you think.\"\n\n\"Took it in college instead of Spanish, which was a mistake considering where I live. Except for the occasional trip to a French restaurant and an anniversary trip to Paris for our tenth anniversary, I haven't had much call to use it, so I might be pretty rusty.\"\n\n\"If you need help, Delphine can translate, sir.\"\n\n\"Who's Delphine?\"\n\n\"Darla's youngest sister. She's in a temporary submissive status to Master in the evenings after work. Her sister, Dominique, became a Dominant like her mother. She's currently got her husband toeing the line. It seems he was quite the pussy hound. Now, the only way he gets to fuck Dominique is by licking the cum of other men out of her cunt and ass first.\"\n\n\"My goodness. You certainly are having some amazing adventures, aren't you? I saw Joshua helped free that woman kidnapped in Ethiopia.\"\n\n\"Yes. Turned out she was a Dominant as well. Has her parents collared.\"\n\n\"No! Please tell me she's not...\"\n\n\"No incest involved, I think, sir. Mostly humiliation and sex with others. Her mother was a bit controlling when Johanna was young. The tables have been turned now. For instance, her mother might now be fucking and sucking the man she'd picked out for Johanna to marry. Let me give the iPad to Yasmine and ask Delphine to stand by for any help. It's getting late here.\"\n\n\"Of course. It was good talking to you again.\"\n\n\"Yes, sir.\"\n\nI gave the tablet to Delphine and she and Yasmine carried on a conversation with Doctor Kline for quite some time.\n\nWhen they finished, he spoke to me again. \"What does your survey say?\"\n\n\"I don't know. Have to get back to the ship before I can check her survey.\"\n\n\"I'd like you to give her an MMPI-2 and Briggs-Myers test and send me the results.\"\n\n\"That might have to wait until I get back to the ship as well. I'll see if I can find them in French versions. May I ask a question? If it turns out she is a true submissive and needs a Master, would you and Oliva consider taking her, Master? I'd like to find her someone who won't mistreat her like her owner did.\"\n\n\"That might be risky considering where we live. It's a college town, but that doesn't mean it's liberal enough for me to have a submissive in tow. Florida is not like larger, more urbane places such as New York or California might be. I'll talk to Oliva about it, though, see what she thinks.\"\n\n\"Thank you, sir. I appreciate all your help.\"\n\n\"You're welcome. Try to stay in touch. I'll give Oliva your love.\"\n\n\"I'll do my best, sir. Tell her to give you a blow job for me and to make it a good one.\"\n\nProfessor Kline laughed and hung up.\n\n\"Please tell Yasmine we will look into whether she should get a kinder Master or if she needs counseling. We have some tests she needs to take. The gentleman she spoke to is a Psychologist who will help us determine what is best for her under the circumstances. For now, please no sex with anyone. I should be able to tell her in a week if we can find her a Master.\"\n\nDelphine told her and she thanked us.\n\n******\n\nSince the attack on me at Cries and Whispers, Master didn't let the women leave without at least three bodyguards, more if there were several of us. Since the police had intimated that Jean-Paul Desmonde was a rich and powerful man, he felt it best to take precautions. Lynn, Miranda, Francesca, Belle and I wanted to go to the Palace at Versailles and do some sightseeing. He sent Bj\u00f6rn, Thomas, Edgar, Jake, and Buck with us. It might be what kept us all alive when we were attacked.\n\nOne of Master's professional drivers was driving us to Versailles in the limousine.\n\n\"Hey, Edgar, take a look out the back window. That same car has been following us for the last fifteen minutes, not passing, not speeding up, not dropping back. There appears to be four in the car and maybe I'm getting suspicious in my old age, but it bothers me.\"\n\n\"If it bothers you, it bothers me,\" Edgar said. He turned behind to look.\n\n\"It looks like we have an accident up ahead, too.\"\n\n\"Fuck, I think this is an ambush,\" Edgar said. \"Thomas send out a distress and call the police. Don't stop at the accident, pull off the road if you have to and go around it. I don't care if we damage the car. Increase speed. Ladies, on the floor.\"\n\nWe all slid off the seats and onto the floor. We were all nervous, but I was pissed as well. I really wanted to see Versailles, and it wouldn't be happening now.\n\nEdgar pushed a button on the little bar. Two panels popped off revealing rifles and handguns. He handed 9 mm handguns to Bjorn, Lynn and I who had all passed the firearms course. He handed rifles to Thomas, Jake, Buck and armed himself.\n\nBj\u00f6rn took Lynn's hand. \"It's only a slight problem. Don't worry about a thing. These guys are pros.\" He smiled at her, but also calming the rest of us.\n\n\"The limo is armored from small arms gunfire, but I'm worried they might have something larger,\" Edgar said. \"Thomas, did you get through?\"\n\n\"I got through to Smitty and he's sending the cavalry by helicopter, two birds. Police have been notified.\"\n\nThree of the men popped little gunport windows open and put the barrels of the rifles through. Edgar opened up a small sunroof panel and stuck his head up through the top.\n\n\"Looks like they threw out road spikes,\" the driver said.\n\n\"Go around them if you can, but don't stop for anything.\"\n\n\"It's a choke point, not a lot of room on either side. We're going over the spikes. Grab your jockstraps.\"\n\nThe people pretending to be at an accident, suddenly realized we weren't going to stop and jumped up, firing weapons. We heard the bullets impacting the car. Edgar returned fire from the roof, our other bodyguards firing out of the ports as we passed the accident. Our tires blew out on the spikes and the driver swerved back and forth to keep from turning over. I peeked out the back window, and the trailing car hit the spikes as well, slowing him as badly as we'd been. Our driver kept on going even though our tires were shredded, running on rims.\n\nThe group behind us hopped in the two cars which had looked to be in the accident, accelerating to follow, avoiding the spikes. Buck joined Edgar in another small sun roof and they were firing at the two chasing vehicles. I ducked back down, peeking occasionally.\n\n\"They're going to catch up to us,\" the driver said. \"I can't hold speed on our wheels.\"\n\n\"Another gun,\" Edgar said, passing his down and waiting for Thomas to hand him a loaded weapon. Thomas put another magazine in the rifle. One of the trailing cars suddenly spun out and ended in the ditch.\n\n\"Got you, you bastard,\" Buck said, \"one down and one to go. Gun please.\"\n\nHe passed his down and Jake handed him his, reloading again.\n\n\"Guys, I think they called in reinforcements,\" our driver said. \"Another SUV is barreling our way from in front, guns pointing outside the windows.\"\n\nThomas said, \"Jake and I have got those assholes. Worry about the guys in the back. Here's a couple more magazines.\" He slapped one in the reaching hands of Buck and Edgar, then he and Jake popped through a couple more sun roofs, but I realized, they weren't really sun roofs, they were firing ports. Without opening up windows and exposing the passengers, they could pop up and shoot.\n\n\"Bj\u00f6rn, buddy, keep handing us fresh magazines,\" Edgar said, firing off another burst. Jake and Thomas started shooting forward, the oncoming vehicle close enough to shoot at.\n\nHe reached behind him and Bj\u00f6rn passed another couple magazines to each.\n\n\"Brace for impact, they're trying to form a road block. I'm going to clip their vehicle.\"\n\nEveryone grabbed hold of something, but for us women, it was mostly each other.\n\n\"I love you people,\" I said. \"You're my family.\"\n\n\"Does that mean I can't have sex with you again,\" Edgar said, calmly. \"Heads up.\"\n\nThere was a crash and the sound of rending metal as we hit whatever was in front of us a glancing blow, knocking the SUV aside and us a foot right, bumping us against one another. I bumped heads with Belle. I think Francesca and Miranda got tangled too.\n\n\"If we get another mile out of this car, we'll be lucky,\" the driver said. \"That little bump affected the front axle.\"\n\nAll of a sudden, there was the most god awful racket I ever heard from somewhere overhead. Something exploded behind us.\n\n\"The cavalry has arrived,\" Thomas whooped. \"Take that, you fuckers. Pardon my French.\"\n\n\"What was that horrible noise?\" Miranda asked.\n\n\"That ladies, was a chain gun mounted in the door of a helicopter,\" Edgar said. \"Those bastards are heading for the hills.\"\n\n\"Are they going after them?\" Jake asked.\n\n\"That's roughly equivalent to making war on French soil,\" Edgar said. \"They'll just keep an eye on us from overhead until the gendarmes get here. I hope Joshua has some friends in real high places. We might need someone higher than the Finance Minister.\"\n\nThe car ground to a halt. One helo set down and six guys hopped out, loaded for bear, one of them was Smitty. He motioned for someone to roll down the window, so Bjorn did, the other four still watching out the top.\n\n\"You ladies are to come with me,\" Smitty said.\n\n\"Shouldn't we wait for the police to give our report,\" Miranda said.\n\n\"Did you fire a weapon?\"\n\n\"No.\"\n\n\"Did you see anybody you could identify?\"\n\n\"We were on the floor of the vehicle,\" Miranda said.\n\n\"Then you're irrelevant to the police. Beth and Lynn, give Bj\u00f6rn your weapons. We're taking you back to the hotel. The police can talk to these other fine folks. They can come to the hotel later if they have questions Edgar and the others can't answer.\"\n\n\"This seemed like a strong, coordinated attack,\" Miranda said. \"Will we be safe at the Four Seasons?\"\n\n\"By the time we get back, the place will be like a fortress. Joshua bought out the whole floor under yours and twenty-four heavily armed individuals will be staying on that floor. The elevator won't go up to the top floor anymore. You can only get off on the floor below and get escorted up. Police are forming cordons on the streets now. I suspect Joshua will cut your visit to Paris short at this point. I think the French would love to see us off their soil. Expect to leave tomorrow with police escort. The President of the USA wouldn't have better protection.\"\n\n\"How much is this costing?\" Francesca asked.\n\n\"It wouldn't make any difference,\" Smitty said. \"It would get paid. Come on, let's get you back. I'm sure the FBI might have some questions for you.\"\n\n\"FBI?\" I said. \"Why would they be involved?\"\n\n\"An attack was just made on a US Congresswoman. I'm sure they're interested in whether it's terrorists or some other problem they need to look at.\"\n\n\"My guess is it's either Mahmoud, or Jean-Paul Belmonde,\" I said. \"And I don't think they were trying to kill us.\"\n\n\"My thoughts exactly,\" Edgar said. \"Otherwise they would have had rocket propelled grenades or IEDs on the road. Anyone who did any kind of research would know Joshua traveled in armored limousines. I think they were going for the women.\"\n\n\"That would be Joshua's guess as well. Hopefully, we'll find out something when they clean this mess up.\" He pointed to the vehicles littering the French countryside.\n\nWhen we got out of the limousine, I saw at least fifty bullet holes in it, none of which had gone through the armor. There was an SUV behind us, torn to shreds and burning, with what appeared to be some dead bodies around it. Another couple guys were by a second car, They appeared to be moving, but no one approached them to render first aid. They did have guns trained on them in the event they tried pulling anything more. Smitty led us to the helicopter, the rotor still turning, waiting for us to climb aboard before winding up. Smitty got on with two other serious looking guys after helping us up. The rest remained on the ground and stood warily looking for further trouble. We got on and as soon as we were buckled in, the pilot, not Leo, took off and headed for Paris. Off in the distance, I thought I heard five or six sirens going as police headed for the scene.",
        "All the adrenaline build up in my body finally gave way, and I started sobbing, the other women soon joining me. I reached out and clasped any hand I could reach, squeezing and patting.\n\n******"
    ],
    "authorname": "Thors_Fist",
    "tags": [
        "oral sex",
        "anal sex",
        "lesbian sex",
        "interracial sex",
        "double penetration",
        "group sex",
        "cuckold",
        "bdsm club",
        "armed attackers"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/my-voyage-of-submission-ch-16"
}