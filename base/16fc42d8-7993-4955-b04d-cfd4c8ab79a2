{
    "title": "Something Mutual Between Friends",
    "pages": [
        "This is my first Literotica story. My fist erotic story\u2014period. I have never written anything like this before, but have always wanted to. Longtime fan of the site and reader of erotic fiction, this is a huge deal for me to finally write something of this nature for the site, so I hope everyone enjoys it. Open to feedback, hope to write a follow-up story that is even better. Thanks for reading.\n\nAll characters are over the age of 18 and fictional.\n\n*****\n\nChris heard the familiar ping of his cell phone and knew that Katrina had finally texted him back.\n\nHe had sent her an earlier text that simply stated: Can't stop thinking about you, with a winky face adding some hoped for intrigue at the end.\n\nFinally, she had messaged him back and he couldn't wait to read what she said.\n\n-------------\n\nThe night before, Chris and Katrina had been chatting on messenger, just a typical chat between two very close friends, when things had suddenly gotten a little steamy without either participant really meaning it to go that direction. Nothing, quote-unquote, happened, really, but something had definitely been started, and Chris thought that Katrina knew it too.\n\nThey were both twenty-one and had been friends for awhile. Nothing between them previously had ever leaned too dangerously close to \"more than friends\" during all of that time\u2014until now, they had just been close friends who got along really well. Chris had played football and Katrina had been one of the team managers for the team, so they had that in common; they shared friends A few friends; they dated each other's friends on occasion, forming something of a fun if not slightly incestuous group, but neither had somehow ever really considered the other as anything more than a comrade. \n\nChris was tall and lanky but carried his fair share of muscle after playing varsity football for four years as a tight end in high school. \n\nKatrina was short with dark hair, same as Chris, and well-proportioned for a girl so small. Her breasts were slight but on a girl her size, they were the equivalent of a C-cup: a good solid handful for the lucky guy able to cup them. \n\nChris and Katrina were both hot, in their early twenties, who happened to be single at the moment, who kept in touch after starting college at different locations, and kept each other company through the first tumultuous year of college (starting a little late but both at the same time). Chris was going to a local community college in his hometown, seventy miles south of the university that Katrina was attending, so they didn't really see each other in person anymore, but they liked to chat on messenger just about every night and through text messages when they were on the go.\n\nThe night before, in the beginning, their conversation in messenger had been pretty tame and ordinary by most people's standards. They had discussed how tired they both were, how much work college was, how they never had time to do anything fun anymore; basically, the usual list of things to chat about between friends who are both going to school. After they had gotten those few pleasantries aside, a long silence dropped in the middle of their conversation. \n\nThat was when Katrina had suggested they chat while using their webcams.\n\nAt first, Chris was a bit confused at her asking to do such a thing. You see, Chris associated talking to girls on webcam as mostly a sexual thing. Not something two friends do to keep in touch. On multiple occasions, Chris had used a webcam on his laptop to cam with girls on porn sites (something he had never shared with Katrina despite their recent closeness as friends) as something to do when not seeing anyone else. He found the act to be extremely arousing, but at the same time, it was something he was sort of ashamed of. \n\nSo when Katrina asked, Chris couldn't help but feel conflicted. How could he keep his idea of \"camming\" separate from what Katrina more than likely expected from a webcam conversation? \n\nHe hoped he could.\n\nHe typed.\n\nCHRIS: Oh, you have a webcam? \n\nKATRINA: Yep.\n\nCHRIS: Cool. I didn't know that.\n\nKATRINA: I've never used it though. Just thought it'd be fun to actually see you for once. We talk all the time but never actually see each other anymore.\n\nCHRIS: I agree. Excellent idea haha\n\nKATRINA: You use yours at all?\n\nChris hesitated for a second before answering\u2014trying to think of how to respond without giving too much away while still being honest.\n\nCHRIS: A few times, yeah. Not on the regular.\n\nThat was a complete lie; Chris had used it just two nights ago in a mutual masturbation chatroom.\n\nKATRINA: Hold on. Still trying to figure it out.\n\nCHRIS: No prob.\n\nKATRINA: What did you use it for? I just now realized I even had one a few minutes ago. Haha Decided it would be cool to use it for once. See how the thing works.\n\nOh, boy. She had gone there. A pretty direct question that Chris knew would require something of a direct and honest answer, for the most part. Chris just couldn't give the whole answer. \n\nCHRIS: Well...I have this cousin in Ohio that I still keep in good touch with\u2014we're like brothers\u2014and I've chatted with him on a webcam once or twice since I moved away from my hometown. \n\nIt wasn't a total lie. He had spoken to his cousin on his webcam, but only once, and it was at his cousin's insistence so he could show him a new Johnny Manziel signed mini football helmet he had recently acquired. The whole webcam session on that occasion had lasted maybe two minutes at the most.\n\nNot the average webcam session he was accustomed to that was for sure. Not in the chatrooms he visited.\n\nKATRINA: Oh, nice. Okay. I think I got it figured out.\n\nChris received a web cam invite. He hesitated for only a second before accepting it. A new window opened up on his laptop screen, black at first, then slowly gaining focus. And there she was.\n\nHe had to admit, he had somewhat forgotten how beautiful Katrina was. It had been awhile since he'd laid eyes on her. Her small, rounded face was framed pleasantly by her long, dark hair. Her grey eyes penetrated the distance with surprising alacrity. She was wearing a red, low-cut tank top that gave Chris a wonderful eyeful of her rather impressive cleavage. He found it hard not to look there as the webcam gained more focus.\n\nKATRINA: Hello! Wow! Almost forgot what you looked like. Haha\n\nHe had forgotten that as soon as he had accepted her invite, his own webcam had come on; he had been too mesmerized with her beauty-and that cleavage. He looked up at the top of his laptop screen and saw the little light, now on, next to the small lens. \n\nCHRIS: Same here. Man, you look good haha a sight for sore eyes if I've ever seen one.\n\nKatrina looked down bashfully. She seemed to notice then what she had been wearing before sending the webcam invite. She abruptly stood up and retrieved a small pink zip-up hoodie from her nearby dorm bed, and put it on.\n\nChris saw her do this and tried to reconcile in himself why it bothered him that she felt the need to cover herself up. He realized that he was having trouble separating that part of his webcam experience\u2014being turned on and wanting to see flesh\u2014with what he was actually doing with the webcam right now: Talking with an old friend.\n\nChris wasn't exactly turned on, but he noticed his brain's pull towards that end of the spectrum ever since he saw Katrina in that little window of his screen.\n\nKATRINA: So, what's up? It's...different typing on here while seeing you at the same time.\n\nCHRIS: Isn't it? But still, good to see you and actually feel like we're talking to each other normal for once. Like old times.\n\nKATRINA: True. That's the whole point of me suggesting it.\n\nCHRIS: I'm glad you did.\n\nKATRINA: So, what's on your mind?\n\nCHRIS: It's not what's on my mind; rather, it's what I want off of it. Haha mainly polynomials at this point, I can't stand them.\n\nKATRINA: How is that math prep class going?\n\nCHRIS: So far, so good. Just can't wait to be done with it.\n\nKATRINA: I know what you mean. My freshman comp class is kicking my ass too.\n\nCHRIS: Not a fan of the English?\n\nKATRINA: I've never been a big fan of reading I am ashamed to say, as you know.\n\nCHRIS: Yes, I do remember something along those lines. Haha \n\nKATRINA: Well, that's not totally true...\n\nCHRIS: What do you mean?\n\nChris watched Katrina on the webcam and noticed she seemed nervous about something, her movements seemed hesitant. \n\nKATRINA: Oh, I don't know...I've never told anyone this before, it's something I've only recently gotten into, so, I guess it counts as reading haha. But I've never told anyone from back home so you can't tell anyone. Promise?\n\nChris began to get incredibly curious.\n\nCHRIS: Well, of course, I promise. Anything you say definitely stays between you and me. You know that.\n\nKATRINA: Okay. Well, I have recently gotten into those Fifty Shades of Grey books. Erotic Fiction. I do enjoy reading that stuff.\n\nChris was mesmerized by this last message. The slightest twitch occurred somewhere in his briefs\u2014which was all he was wearing under his desk. \n\nKatrina had just admitted something rather sexual to him or at least it could be really sexual, if that was what brought her to those books. He seriously doubted it was the storytelling. \n\nCHRIS: I had no idea you read those books. Man, I've heard a lot about them. They're supposed to be really sexual\u2014S &M stuff, right?\n\nKATRINA: Yeah, haha, they're pretty hot actually. They go for broke. I had no idea I'd like those kinds of books, but my dorm mate was reading them and recommended them to me, so I started the first one just out of curiosity and a desperate need to do anything but school work for a bit. I was really surprised by how much I enjoyed it.\n\nThe temperature in the webcam session definitely seemed to have been raised, according to Chris, and he had a distinct impression that maybe it was for Katrina too. \n\nAfter confessing her interest in reading erotic fiction, Chris was looking at Katrina in a way he had never considered before, and it was getting him kind of hot.\n\nKATRINA: You don't think that's stupid? That I read those kinds of books?\n\nCHRIS: Of course not, Kat. Why would you think that?\n\nKATRINA: I don't know...I know it's not good literature or nothing, and I know how much that stuff means to you. Haha\n\nChris was majoring in English at his community college and was well regarded for his passion for books and all things fine literature.\n\nCHRIS: No way. I'm not like that, you know that about me. I like what I like and others like what they like. I definitely can appreciate erotic fiction\u2014nothing wrong with getting a kick out of that stuff at all, in my opinion.\n\nKatrina smiled broadly on the webcam.\n\nKATRINA: Thanks, Chris. I appreciate that. I have no idea why I even told you haha\n\nCHRIS: I'm glad you did. It's cool to learn things like that about you.\n\nKATRINA: What kind of stuff? That I get horny reading erotic fiction?\n\nShe winked on webcam and Chris felt his face get red. He noticed that she had never zipped up her pink hoodie and that it had been left open fairly wide; Chris saw the lovely cleavage once again.\n\nCHRIS: Well, haha, yeah, I guess. I think that's cool. We all have our little things that turn us on. I, of all people, definitely appreciate that the written word can get you horny. I'm the same way. I haven't really read erotic fiction per se but I get a little turned on when reading a sex scene in novels if it's well-written.\n\nKATRINA: Oh, wow, really?\n\nCHRIS: Definitely.\n\nKATRINA: So we're in the same boat then?\n\nCHRIS: I'd say so.\n\nOn cam she seemed to pause for a second, looked over her shoulder. \n\nKATRINA: Are you alone?\n\nCHRIS: Yeah, you?\n\nKATRINA: Yeah, but I think my dorm mate is going to be back soon. I was just nervous for a second that I heard her coming back.\n\nCHRIS: Why were you nervous?\n\nAnother pause on the cam, Katrina hesitated before typing back.\n\nKATRINA: I don't know, because of what we were talking about I guess. Haha\n\nCHRIS: We're not being bad, Kat. At least I don't think we are.\n\nKATRINA: No, I guess you're right. We were just talking about stuff that gets us horny haha that was sarcasm.\n\nChris smiled on his end of the webcam.\n\nCHRIS: Okay, fair enough. I guess I can see why you wouldn't want your dorm mate reading something personal like that over your shoulder when she gets back.\n\nKATRINA: No, I most certainly wouldn't. Though I'm sure she'd understand why, after telling you about those books, she certainly seems to get off on them.\n\nCHRIS: Whoa, haha, what do you mean?\n\nKATRINA: Well, haha, I'd hate to share this with you but, I guess you'd know to keep a lid on it, but when she thinks I'm asleep, that girl masturbates, like, all the freaking time.\n\nAnother twitch in Chris' briefs, all this talk of erotica, horniness, and masturbating dorm mates was making it very hard for Chris to keep his thoughts away from what he would like to see Katrina doing on the other side of that web cam.\n\nCHRIS: Damn! Oh my God! What do you do?\n\nKATRINA: What do you mean, what do I do? I held my breath and waited for her to stop so I didn't alert her that I was still awake. That would've been beyond embarrassing. \n\nCHRIS: I can't believe that. That's kind of amazing. Too funny.\n\nKATRINA: Oh, I know. This girl really gets it too. She's into the third book and I think that had to have something major to do with it.\n\nCHRIS: I guess that's just a by-product of reading good erotic fiction, huh?\n\nChris added his illustrious winky face for good measure.\n\nKATRINA: Ummmm...haha...maybe?\n\nSo she added one of her own right back at him, and then seemed to do the same on her end of the web cam.\n\nKATRINA: Is it getting hot in here or is it just me? Haha\n\nThen she took off the pink hoodie, revealing her low-cut, red tank top once again with all of its glorious cleavage.\n\nCHRIS: Now it is.\n\nKATRINA: Oh, stop it.\n\nCHRIS: No, seriously. You're hot. Haha Haven't I told you that before?\n\nKATRINA: Maybe once. I'm not sure. Haha Just kidding.\n\nCHRIS: This talk has seriously started to get me discombobulated.\n\nKatrina titled her head to an extreme angle and seemed to size Chris up like a cat.\n\nKATRINA: What do you mean by that, huh?\n\nChris hesitated for only the briefest of moments. The air seemed to be charged with erotic fusion and he decided to just go with it.\n\nCHRIS: To be perfectly honest, I am extremely horny right now after talking to you about this stuff. I can't help it. You're super sexy and hearing about something that turns you on like that, well, I know we've never really gone that route before, but damn, it's got me looking at you in a whole new way.\n\nKatrina smiled and scooted up closer to her laptop.\n\nKATRINA: Okay, confession time. This convo has gotten me pretty horny too. I can't help it.\n\nCHRIS: Phew. I'm not the only one. Haha\n\nKATRINA: No, haha, you're not the only one.\n\nCHRIS: Wow, we've never been here before.\n\nKATRINA: No, we haven't.\n\nCHRIS: I kind of like it.\n\nKATRINA: Me too.\n\nOn cam, Katrina looked sultry and warm, as if the conversation had somehow transformed her into a new person that Chris had never really seen before. Her breasts looked bigger and more tantalizing. Her lips looked redder with a shiny sheen of wetness to them that suggested she had been wetting her bottom lip excessively all of a sudden with her tongue. The thought of wetness and Katrina suddenly turned Chris' slight twitch in his briefs to full on movement. He felt himself begin to get hard; his penis edging away from his thigh where previously it had been laying peacefully. \n\nCHRIS: Oh, man, haha, I'm kind of at a loss for words now.\n\nKATRINA: Hahahaha Not you! Of all people. English Major!\n\nCHRIS: I know, I know.\n\nKATRINA: Haha just kidding. I'm at a loss for words too. Never really talked to anyone like this before, as far as admitting things about what turns me on and my private moments.\n\nCHRIS: Your private moments? You never really got into the details there too much. Haha \n\nKATRINA: I guess I didn't. HA! I just assumed you knew.\n\nCHRIS: I guess I do know, really. But it's way hotter if you tell me about it.\n\nKATRINA: Tell you what specifically?\n\nChris looked at her on cam and she was smiling, almost radiant. Katrina was enjoying herself and he felt like it was okay to just say what was on his mind.\n\nCHRIS: That those books you read made you masturbate.\n\nKatrina smiled big before burying her face in her hands. She looked back up at Chris.\n\nKATRINA: Yes, it made me masturbate.\n\nCHRIS: I knew it! Haha\n\nKATRINA: Shut up! Haha \n\nCHRIS: I'm just kidding. That's superhot. I think girls who masturbate are seriously hot. Big turn on for me.\n\nKATRINA: Really?\n\nCHRIS: Oh, yeah. \n\nKATRINA: We're really learning a lot of new stuff about each other tonight, aren't we? Haha\n\nCHRIS: Yes, we are.\n\nChris thought for a second, and then decided something.\n\nCHRIS: I'll tell you what, Kat. You shared with me, so I'll share something with you. Something no one knows.\n\nKATRINA: Ooooo what is it?\n\nCHRIS: I like to watch girls masturbate.\n\nKATRINA: Well, duh, that's no big surprise.\n\nCHRIS: No, I mean literally, as in: I actually watch girls masturbate.\n\nKATRINA: How do you do that?\n\nCHRIS: In mutual masturbation chatrooms. \n\nKATRINA: How do those work?\n\nCHRIS: I get talking to a girl in a room, well now I have certain girls that I do it with all the time, but when I met them, it was just chatting together in a room then agreeing to turn on our webcams and watch each other.\n\nKATRINA: Oh wow, so you would masturbate too?\n\nCHRIS: Yes.\n\nKATRINA: That's really hot, Chris.\n\nCHRIS: It's my favorite thing to do when I'm single and I've never told anyone about it before.\n\nKATRINA: It's got to be weird seeing me on a webcam knowing what you are used to using it for.\n\nCHRIS: haha funny you should say that because I was thinking that when you had first suggested it.\n\nKATRINA: I bet.\n\nCHRIS: It's cool though. Well, it was, until we started talking about masturbating and erotic fiction and all that. Now my mind has gone one-tract. \n\nKATRINA: Oh yeah? Haha \n\nCHRIS: Very much so.\n\nKATRINA: Still horny over there?\n\nCHRIS: Yes, I am.\n\nKATRINA: Me too. I bet you're hard.\n\nCHRIS: I really am.\n\nKATRINA: What are you even wearing under that desk, can't see?\n\nCHRIS: Just some briefs.\n\nKATRINA: I like that.\n\nCHRIS: They're snug now.\n\nKATRINA: I bet they are. That is so hot.\n\nCHRIS: Yes, it is.\n\nKATRINA: I love that you're aroused right now.\n\nCHRIS: Are you?\n\nKATRINA: A lot.\n\nCHRIS: I kind of what to say things to you right now.\n\nKATRINA: Like what?\n\nCHRIS: Like, what are you wearing under your desk?\n\nKATRINA: Some shorts.\n\nCHRIS: I wish you could take those off for me.\n\nKATRINA: Oh yeah? Haha\n\nOn cam, Katrina winked, but Chris could tell she was really excited to play along.\n\nCHRIS: Yes, I'd love that.\n\nKATRINA: You'd have to take something off for me.\n\nCHRIS: I would. Like what?\n\nKATRINA: Those briefs definitely have to go.\n\nCHRIS: I'd take them off for you.\n\nSuddenly, Katrina whipped around in her seat and looked behind her.\n\nKATRINA: Shit, my dorm mate is back. I gotta go, Chris.\n\nChris slunk back in disappointment. \n\nCHRIS: Okay, Kat. I understand. We'll talk later, okay?\n\nKATRINA: For sure. Text me. Sorry it had to stop like that, I was really enjoying it.\n\nCHRIS: Me too.\n\nKATRINA: To be continued. Laters.\n\nAnd she winked once again into the webcam before her image blinked out of existence.\n\nChris settled back in his chair with a raging hard on and sighed. He was beyond excited thinking about what Katrina might be willing to do with him on a webcam, because he knew already what he'd be willing to do for her if she only asked him to.",
        "Returning to the next day, Chris picked up his phone which held a text from Katrina.\n\nHe opened the text and read it.\n\nIt said: Me either. I have a serious story to tell you tonight.\n\nHe texted back: Color me curious. What happened?\n\nAfter a bit, Katrina responded:\n\nI'll tell you tonight on webcam. I'll be on soon.\n\nLater, he met Katrina online, webcam's on, and she immediately jumped into her story, to the delight of Chris' penis. \n\nKATRINA: Okay, let me just tell you the story of what happened last night first.\n\nCHRIS: Cool with me.\n\nKATRINA: Well, as you know, my dorm mate came home just as you and I were starting to get into something...\n\nCHRIS: Yes, I remember very well. Haha\n\nKATRINA: Haha. I bet you do. Well, later that night, we both went to bed, and sure enough, she starts right back into masturbating when she thinks I'm asleep, only I wasn't again. \n\nChris started to get incredibly excited with where this story might be going; his penis twitched and moved as if with a mind of its own against his upper thigh, beginning to tent his boxer briefs.\n\nKATRINA: The difference this time was that I was already really horny from all the stuff we had been talking about, and where things looked to be going before she got back to the room and interrupted us. So, as I was listening to her masturbate across the room from my bed, I started to get really, really turned on\u2014or at least MORE turned on than I already was.\n\nCHRIS: Wow, I can only imagine. I'm getting super turned on just thinking about what you are describing.\n\nKATRINA: I knew you'd like this story! Now that I know you a little better. Well, I didn't have the balls to start masturbating along with her, at least not this time, but I definitely started to touch my body all over and try to calm myself down the best I could, which wasn't working too good. Haha\n\nCHRIS: Of course not! You can't touch your body and expect it to calm down when you're as horny as you probably were.\n\nKATRINA: Yeah, you're right. But I couldn't help it! \n\nCHRIS: What did you touch?\n\nKATRINA: Well...mostly my tits.\n\nCHRIS: That sounds so nice. Your tits are so nice haha\n\nOn cam, Katrina looked down at her breasts, currently covered in a similar low-cut tank top, like she was wearing the night before, only pink instead of red.\n\nCHRIS: I've never told you that before, but of course they are. You have to know that already.\n\nKATRINA: Either way, thanks for saying so. And yes, I started touching them and it felt great. Too great, especially with me knowing what Amy was doing in her bed next to me.\n\nCHRIS: Were your nipples hard?\n\nKATRINA: Very.\n\nCHRIS: What was Amy doing exactly? Was she just rubbing herself under her covers?\n\nKATRINA: Yeah, that's all. She was fully clothed, just touching herself under the covers.\n\nCHRIS: So you didn't just listen to her, you watched her, too?\n\nKatrina smiled lustily on cam.\n\nKATRINA: Mmmhmm. I was watching her.\n\nCHRIS: I am so horny right now.\n\nKATRINA: Me too.\n\nCHRIS: Are you alone right now?\n\nKATRINA: Yes.\n\nCHRIS: For how long?\n\nKATRINA: All night. Amy went to her boyfriend's apartment for the night.\n\nCHRIS: I am so glad to hear that. So tell me how it finished?\n\nKATRINA: Well, she made herself cum, and I'll give her credit for being pretty quiet about it too, then before I knew it, I could hear her snoring. Then I was able to go to sleep too. But I stayed up for a while longer first, thinking about what she had just done and what we were about to do last night before stopping.\n\nCHRIS: Mmm. What did you think about me when you thought about me last night?\n\nKATRINA: That you were hard.\n\nCHRIS: Yes, I was. I am right now.\n\nKATRINA: I love that you're hard right now. So hot.\n\nCHRIS: Are your nipples getting hard through your pink tank top?\n\nOn cam, Chris watched Katrina reach up and cup one of her breasts. Two fingers slowly kneaded the nipple through the fabric. She gave the other nipple equal attention before returning to the keyboard.\n\nKATRINA: Yes, they are.\n\nCHRIS: I bet that felt good.\n\nKATRINA: It did. So good. My nipples are very sensitive.\n\nCHRIS: I am so excited by this. So glad we are talking like this.\n\nKATRINA: Me too. What are you doing over there? Can't see below your chest. \n\nCHRIS: I'm rubbing my hard dick.\n\nKATRINA: Mmm. I wish I could see that. You look really hot over there. Really horny.\n\nCHRIS: I can show you.\n\nKATRINA: Oh, please do.\n\nChris reached up and tilted his webcam lens down towards his lap while adjusting the computer to get the best view.\n\nOn Katrina's screen, she saw that Chris was only wearing a grey pair of boxer briefs. The subtle outline of Chris' hard penis was clearly visible in the fabric with a small, wet, darker spot of grey where Katrina saw a small amount of precum had leaked out of the tip. \n\nThe sight of that wet spot and the length of his hard penis caused a flood of sensations to overwhelm Katrina. She began to vigorously massage her breasts, playing with each nipple through her shirt. She longed now to take off the restrictive garment.  \n\nKATRINA: Oh God that looks amazing. You are so hard. You look really excited.\n\nChris began rubbing the hard outline of his penis through his underwear as Katrina watched.\n\nKATRINA: Mmm yes. Do that. \n\nChris moved the cam back up to where it originally was and began typing.\n\nCHRIS: That felt so good to do, especially knowing that you were watching me.\n\nKATRINA: So hot. I'm fucking majorly turned on right now haha\n\nCHRIS: Show me.\n\nKatrina smiled lasciviously and pulled her pink tank top over her head. Underneath she was wearing a white bra, slightly see through, and Chris could see the vague imprint of her nipples, pressing rock hard against the fabric. The sight of them was overwhelming. \n\nHe grabbed ahold of the top of his briefs and pulled them down below his knees; his fully aroused penis popped up at attention. A clear pearl of precum sat poised on the top of his penis. He took his right thumb and smeared it down under his head and all along his shaft, lubricating his penis as he stared at Katrina's lovely C-Cupped breasts and her hardening nipples.\n\nKATRINA: Did you just take off your underwear?\n\nCHRIS: I sure did.\n\nKATRINA: Mmm I want to see.\n\nCHRIS: First, take off your bra.\n\nKATRINA: Okay. Fair enough.\n\nKatrina reached behind her back, fiddled with the latches for a few seconds\u2014Chris watched as the tension on her breasts loosened once the clasp had been unsnapped\u2014then she pulled the bra away, tossing it beside her chair at the computer desk.\n\nIt was the first time Chris had ever seen Katrina's breasts, obviously, in all the years he had known her; however, he had always imagined what they might have looked like. Like most guys, all breasts in any given proximity to a man's eyes are more than likely interesting breasts worth considering. And Katrina had always had breasts that Chris had considered excellent despite never attempting to discover them for himself.\n\nThey were wonderful. Perfectly shaped with a good heft, her breasts featured well-proportioned and well-placed nipples that were dark against the white of her skin, two tan lines in the shape of a small bikini piece outlined the whole of her lovely breasts.\n\nKatrina immediately began to rub her pebbled nipples with her fingers. Her face was flushed with pleasure. \n\nChris grabbed a hold of his hard penis, gently, and began to slowly stroke up and down. He used some more of the already ample precum collected in the slit. \n\nKATRINA: Are you stroking it?\n\nCHRIS: Yes, I am. Your tits are amazing.\n\nKATRINA: Thank you. I want to see you stroking it.\n\nCHRIS: Okay.\n\nChris tilted the cam back down to his lap. Katrina finally saw Chris in all his glory. His penis was rock hard, red, with veins standing out along his glistening shaft. She saw that the head also glistening with what she knew to be precum. \n\nHis penis was a decent size too\u2014about a good seven inches or so, hard to tell, but she really liked what she saw.\n\nShe pushed a hand down into sleeping pants, behind her panties, down to her aching sex. She had felt the juices beginning to flow in her vagina the moment she had started telling her story of the other night to Chris, now the fabric of her panties were saturated by comparison. As she reached down to feel her wetness, her fingers breezed by her already stiff clitoris; the slight contact forced a moan from her lips as she pulled her hand from her pants.\n\nChris had moved the camera back to normal and had been watching her.\n\nCHRIS: Did you just touch yourself?\n\nKATRINA: Yes. I'm so wet.\n\nCHRIS: mmm. Is that wetness on your fingers?\n\nKATRINA: Mmmhmm.\n\nChris could see the light from her desk lamp glistening off her wet fingers. She took the wetness and began applying it to one of her nipples. Her head fell back in pleasure.\n\nChris watched in awe.\n\nCHRIS: Mmm Yes. That's so hot. Get those nipples wet and hard. Pinch them.\n\nKatrina pinched them.\n\nChris could see that she liked doing that a lot. He continued to rub his cock, faster and faster. \n\nKATRINA: Do you want to see how wet I am?\n\nCHRIS: Yes, I do. So bad. Show me your pussy.\n\nIt was Katrina's turn to reposition her camera, only she didn't tilt it down towards her lap, she moved it up and closer to the center of her dorm while standing up herself in front of it. From her standing position, Katrina pulled down her sleeping pants, revealing long, tan, healthy legs. Her panties were pink with a large blotch of darker pink over the center of her vagina. \n\nSeeing how wet she was made Chris slow down his strokes for fear of cumming to early, he wanted to cum when she did. He already had that plan in mind.\n\nKatrina followed the removal of her sleeping pants with a quick pull down of her panties, which stuck only slightly to her pussy lips; she then sat back down at the desk, adjusted the cam to look down at her lap as she sat there naked, then she began rubbing the hood of her clitoris slowly with one finger.\n\nChris watched this, mesmerized.\n\nCHRIS: Oh, yeah. Rub that clit. It looks so hard from here. I bet that feels so good.\n\nShe slowly added another finger alongside the first one and began rubbing a little faster with two fingers.\n\nChris stroked along to her cadence. \n\nHe saw her raise her naked knees above desk, put them across its surface to get better leverage. With her feet, Katrina pushed her laptop back some, giving Chris an amazing view of her masturbating, stark naked, in front of him. \n\nChris saw how she was rubbing her clit with two fingers while holding her left breast with her \n\nleft hand, alternating between pinching and pulling at a hard nipple.\n\nHe could see the bottoms of her white feet, which were clean, and so naked there in front of him. Chris couldn't explain it, but he thought the bottoms of girls feet were somehow incredibly sexy. The naked flesh of hot girls feet were almost on par with the naked flesh of a girls pussy lips to him. \n\nHe saw her feet and imagined his mouth on them\u2014sucking her toes while rubbing her clit, as she was doing right now.\n\nChris' cock ached, ready to explode.\n\nCHRIS: Oh God, Kat. I'm gonna cum.\n\nKatrina abruptly pulled her legs down, pulled her seat closer to the desk, all while continuing her rubbing. She pulled the computer closer to type with her left hand.\n\nKATRINA: Yessss Chris. Cum. I want to see you cum. I'll cum with you.\n\nChris pulled the cam down to his hard cock. He was stroking fast.\n\nThe pressure built up, and up, and up...and then released with a great fury. One white rope of sperm shot from the head of his red, aggravated penis and then a series of slow pulses bubbled out along behind it, streaming cum down his red shaft.\n\nKATRINA: OMG that was so hot. I'm going to cum too\n\nChris quickly, with his clean hand, pushed the computer screen up and read her message.\n\nHe watched her rubbing her pussy under the desk. He couldn't see her actually doing it, not since she sat back up, but he could see her upper arm gyrating, and he could imagine it now.\n\nHe saw her eyes close, as she grabbed her left nipple again and pinched. He saw her body seem to lift in some great wave of tension, and then release just as suddenly. \n\nKatrina appeared to be breathing heavy, then she leaned back in the chair, naked, tits bared for Chris to enjoy as she enjoyed wave after wave of her orgasm. \n\nCHRIS: That was fucking amazing.\n\nKATRINA: Yes it was. Phew. That was unbelievably hot. \n\nCHRIS: I am so glad we did that. That beat every chatroom I have ever been in. \n\nKATRINA: I should hope so.\n\nCHRIS: You don't feel weird?\n\nKATRINA: No, not at all. I feel great. I really needed that.\n\nCHRIS: Same here.\n\nKATRINA: I'm happy.\n\nCHRIS: Me too.\n\nChris smiled big for Katrina on his cam. Katrina smiled back.\n\nKATRINA: We got to do that again sometime.\n\nCHRIS: I am completely game.\n\nChris thought for a second.\n\nCHRIS: Maybe next time, you can tell me a new story.\n\nKATRINA: What do you mean? What new story?\n\nCHRIS: Tell me a story about how you actually masturbated next to your dorm mate next time she has one of her late night sessions.\n\nKATRINA: What? Really? Masturbate with Amy?\n\nCHRIS: Yeah. Without her knowing it. That would be fucking amazing. \n\nKATRINA: I don't know. Not sure if I could do that.\n\nCHRIS: No pressure or nothing, but that would be so hot to hear about.\n\nKATRINA: I don't know...\n\nCHRIS: Just a thought. You could do it discreetly, she'd never know.\n\nKATRINA: I'll think about it. I can tell you this much though...\n\nCHRIS: What's that?\n\nKATRINA: I was definitely hot enough to try.\n\nCHRIS: Yay. That's what I'm talking about. Go for it. I'll be dying to hear about it.\n\nKATRINA: We'll see. If it happens, you'll definitely be the first and only person to hear about it.\n\nShe smiled big on cam while winking.\n\nChris winked back at her with an even bigger smile.\n\nCHRIS: That's all I'm asking for. At least now you know I can keep a pretty good secret.\n\nKatrina held her smile for another second before seductively blowing him a kiss.\n\nKATRINA: We have the best secrets now.\n\nTheir webcam session was over, at least, for now.\n\nTo be continued..."
    ],
    "authorname": "AJamesDarkly",
    "tags": [
        "mutual masturbation",
        "webcams",
        "cyber sex",
        "watching",
        "being watched",
        "chat",
        "online",
        "masturbation",
        "friends",
        "first time"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/something-mutual-between-friends"
}