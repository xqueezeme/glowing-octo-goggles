{
    "title": "A Tiny Slip Ch. 03",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above. \n\nThis story is dedicated to those who died on the other side of a politically drawn line...\n\nPart 14 - Realm Of The Senses \n\nThe time disappeared off the screen. The blinking lights on the bombs went dark. Nothing else happened. Cindy looked around, seeing the remaining people leaving through the baptismal pool, Mrs. Veasley still greeting the last of them.\n\n\"Helicopter down! Helicopter has dropped off radar!\" said the Police radio. Cindy heard it, not quite believing, then heard her own words in her head:\n\nHe pressed the button.\n\nShe knew it in her soul. She felt an agonizing pain in her heart as she bent over. Don had pressed the button. He had saved her, saved all of them, but he had paid the ultimate price in doing so.\n\nThen, it happened. Her mind was flooded. She looked up, and could only see in black-and-white. She saw a cone of light from a limitlessly high distance, and it illuminated Mrs. Veasley, who was alone with her, sitting there in her wheelchair in a black, limitless space.\n\n\"Use your MIND, Child!\" Mrs. Veasley ordered, her eyes burning right through Cindy. \"Search your feelings! Reach out as you know how to do!\"\n\nCindy closed her eyes and let her mind flow. She fought through the turmoil of her heart, the static of everything else around her. She reached out with her mind, letting it settle, letting it flow.... and she felt it.\n\nShe opened her eyes, now seeing full color, now seeing everyone. She saw Mrs. Veasley staring at her, then turning her head and slumping as Cindy whispered \"He's alive...\"\n\n* * * * * * * * * * * * * * *\n\nI looked around, sitting before the small charcoal fire, drinking the medicinal green tea. I saw the last of the sun descending below the horizon to the west. I saw the grass waving in the breeze. I could make out the grains on the tops of the stems. I saw a dragonfly skipping along from plant to plant, and I could hear the wind rustling through the field. I realized the dragonfly was at least fifty yards away from me, yet I could see it and its bright colors with untoward clarity.\n\n\"What a beautiful night.\" I said, smelling the fires as well as the grasses around me. \"I can see... so far...\"\n\n\"Yes, your senses are on a higher plane, only to be achieved by one who freely goes to meet Death, yet returns to the living.\" The words were stated by Takaki Misaki. He was sitting to my right, wearing all black but with an overmantle and a samurai-style belt. \"Here, have some more tea.\"\n\n\"Arigato, Misaki-sama.\" I said. He poured and I drank from the simple white porcelain cup. The tea tasted incredibly good, almost alive on my tongue.\n\nAbout fifty yards behind my left shoulder was the burning wreckage of a helicopter. I vaguely remember having shunted the altimeter, dropping quickly to about 100 feet altitude, then disengaging the motor from the rotors. They auto-rotated as the helicopter dropped.\n\nBelow me, Masaki's black-clad men and women had put a large air mattress, like stunt people use in movies, and blown it up. It was enough to break my fall. But the springs on the helicopter were not good, and I landed *HARD*. My lower back hurt. Really hurt.\n\nThe pain was enough to keep me conscious, though. I remember two men helping me out of the seat, cutting off my seatbelt straps as other men sprayed liquid nitrogen on the bomb to keep it from detonating. Two others were cutting out Pastor Westboro, cutting through the chains that had bound him. How had they known to have equipment to do that? I wondered as I was placed in the sidecar of a motorcycle and driven to where a makeshift fire and tea service was being set up, with Misaki-sama waiting for me there. Pastor Westboro's body was about twenty yards to my left, well away from the burning chopper. The bomb finally exploded, but was facing away from us and so most of the debris went the other way. Still, we ducked.\n\nA tall man, masked and in all black came up. \"Hello, Todd.\" I said. \"I was wondering when you would show up.\"\n\nHe took off his mask, grinning that handsome grin of his. \"Yes, it's me, Uncle Don. How did you know?\"\n\n\"If you seriously wish to deceive me, Todd-san,\" I said, \"you will have to change your bodywash while my senses are at this level.\" Misaki chuckled.\n\n\"Sire,\" Todd said, \"we need to go. The Police are coming.\"\n\n\"Yes, we must go.\" said Misaki. \"Please help your uncle to stand.\"\n\n\"No, I'll do it.\" I said. I knew it was more than just my duty to do so. Cindy would call it a useless exercise in men's alpha-dog games. I knew that this time, it was much, much more. \n\nAnd it was one of the most agonizing chores of my life. Pain shot through my back, and I was feeling an exhaustion like I'd never known before. My legs shook almost violently as I pulled up off my hands and knees and willed myself to move.\n\nAnd I made it. I stood erect. Misaki and Todd and the other masked men there all bowed to me. I bowed back as much as I could.\n\n\"Todd-san, your duty is to your uncle now. Stay with him.\" said Misaki-san.\n\n\"Where's my crowbar?\" I asked. \"It was on the helicopter...\"\n\n\"We'll find it, Uncle Don.\" said Todd. \"Don't stress on it.\"\n\nThey packed up all the stuff, and a motorcycle with a sidecar pulled up to take Takaki back to the 18-wheeler truck just down the road. I heard sirens, then saw the blue lights of a Police cruiser, followed by the red and white lightbar of an ambulance.\n\nPart 15 - The Final Victim \n\n\"That's it, everyone's out.\" said Sergeant Rudistan. \"Only Mrs. Veasley to go.\"\n\nCindy looked over. Mrs. Veasley had slumped over, and seemed to be sleeping. Cindy went over to her. \"Mrs. Veasley, it's time to go.\" There was no response. Cindy felt for a pulse... and found none.\n\n\"We need to give her CPR.\" said Rudistan, attempting to take her out of her chair.\n\n\"No.\" said Cindy, tears beginning to roll down her cheeks. \"I saw her slumped several minutes ago. She's gone.\" She did not say that her certainty came from more than just the physical; she could feel that Mrs. Veasley's Spirit had departed to a Higher Place.\n\n\"I'm sorry, ma'am.\" said Rudistan, seeing Cindy's tears. \"I'll carry her body out of here.\"\n\n\"No, I'll do it.\" said Cindy. She went over and got the cloth from the communion table and used it to cover Mrs. Veasley's face and upper body. Then she picked up Mrs. Veasley's mortal remains, and followed Rudistan to the baptismal pool.\n\n* * * * * * * * * * * * * * *\n\nThere was still a large crowd gathered, watching as people came out of the Church one by one. Families were reunited and moved to safety, but no one wanted to leave. Some people were still singing as they watched.\n\nThen they saw two Fireman bring an American flag to the entrance. A body was brought out, covered with a cloth, and put on a gurney. The American flag was then draped over the body. It was the least they could do for the late Army Nurse, Lieutenant Colonel Veasley.\n\nEveryone groaned as they watched the body being taken to the hearse that had been on standby, and was only needed in this crisis. Word quickly spread who it was.\n\nWhen Sergeant Rudistan appeared, followed by the last one out, Captain Cindy Ross, the gathering applauded. Cindy acknowledged the praise as she walked to the Command tent. She was greeted by Chief Griswold, and they hugged for a long moment.\n\n\"Well done, Captain.\" said Griswold. Chief Moynahan also praised her.\n\n\"What happened to Mrs. Veasley?\" asked someone.\n\n\"Natural causes, I think.\" Cindy called out. \"She just slumped over.\" She heard a child crying and looked over. Little Susie Haskins was sobbing uncontrollably. Cindy went over to her.\n\n\"Why did Mrs. Veasley have to die?\" Susie asked through her sobs as Cindy hugged her. \"Why her? She was the bravest one of all, she kept us calm, she shouldn't have been the one to die...\"\n\nCindy was at the point of tears herself as she hugged the little girl. She then said \"Susie, sometimes the good people die, too. Mrs. Veasley did so well, and her heart was so great, that the Lord took her up to be with Him. Her purpose here was done. We don't understand things like that. All we can do is what she told you to do: live your life as best you can. Do great things.\"\n\nSusie Haskins would do great things. She would become a Nurse, as Mrs. Veasley had been. And she would care for the patients of University Hospital for decades.\n\nPart 16 - The Consultant's Final Atrocity \n\nAfter Susie's parents took Susie home, Cindy came back to the Command tent. \"What about...\" she asked. She couldn't go on.\n\n\"We don't know yet.\" said Chief Moynahan, fully understanding. Chief Griswold also had a faraway look in his eyes. Fire Chief Quinlin came up. \n\n\"Excellent work, Captain.\" he said to Cindy. \"We're ready to send in the Bomb Squads to defuse and take out the bombs.\"\n\n\"Go for it.\" said Moynahan. \"By the way, where is Sheriff Allgood?\"\n\n\"At the Hospital.\" said Commander Della Harlow. \"His wife was the patient Dr. Fredricson brought and admitted to the hospital. Not sure what the situation is, but he's over there.\"\n\nAfter briefing the bomb teams, Cindy watched them as they went in. They were able to enter the front doors to the lobby, and open the sanctuary doors. Two teams worked to clear the Sanctuary. The other two teams were in the back, in the Chapel, taking the bomb off the front doors of the Chapel.\n\nJust then, Myron Milton ran up to Cindy, carrying some sort of device which looked like a portable radio. \"Ma'am, I'm getting a radio signal... it's a repeating hum from high pitch to low.\" He let Cindy listen on the earphones.\n\n\"Oh my God!\" Cindy cried out, very sure. \"It's a countdown!\"\n\nShe grabbed Chief Quinlin's radio. \"GET OUT OF THERE!!!\" she yelled into it. \"There are more bombs! Get out!!!! Get out!!!\"\n\nOne team rushed out the Chapel doors. She saw another come out, then a third around the front.\n\n*BOOM!* *BOOM!* *BOOM!* *KA-WHAM!*\n\nEveryone watched in horror and shock as the Church began to collapse. The main Sanctuary folded in on itself, the walls falling inwards onto the roof. Then the Fellowship Hall and offices went down as if on cue as more explosions were heard. Then the roof of the Chapel also caved in.\n\n\"All teams, report!\" yelled Cindy into the radio. \"Report!\"\n\n\"Team 1, accounted for.\".... \n\n\"Team 3, accounted for.\"... \n\n\"Team 2... accounted for.\" Then silence.\n\n\"Team 4, report! Team Four!\" yelled Cindy. Finally, she heard the radio answer as the final team came around the rubble of the Sanctuary, one man being helped.\n\n\"Team 4, accounted for. One injury.\"\n\nThe Police and Firemen cheered. Many church members were too shocked at what had just happened to their House of Worship, though others cheered the Firemen getting out in time.\n\n\"Good work, Blue Crowbar.\" growled Chief Griswold into Cindy's ear. He saw her worry. \"If you want to leave, go ahead.\n\n\"No,\" Cindy said, \"my place of duty is here. Wow, would you look at that...\"\n\nShe pointed to the Chapel. The roof had caved in, but the walls had stood... and the beautiful stained-glass windows, over a century old, had survived. Not one broken pane. They would become the foundation for the Church's renewal from the devastation wrought by Raymond Westboro.\n\n* * * * * * * * * * * * * * *\n\nTodd and I heard the noise of the bombs and the collapsing Church just as the ambulance and Police cruiser arrived. Detective Joanne Warner, Lt. Wes Masters, and Sergeant Irwin got out and came up to us.\n\n\"Commander!\" said Joanne brightly. \"You're looking mighty chipper today for a man who crashed in a helicopter.\" She could see the damage and the scene as the light faded.\n\n\"Your Pastor was not so fortunate.\" I said, pointing at the body, the face and head covered by a cloth. Sergeant Irwin called for a Crime Lab team and a hearse.\n\n\"What happened in Town?\" I asked.\n\n\"Captain Ross got everyone out alive, except Mrs. Veasley.\" said 'Coldiron' Masters. \"She may have had a heart attack, but she died inside. Then there were more bombs, and the church collapsed. That's what the radio said. Nobody died, except Mrs. Veasley.\"\n\nI felt sad for Mrs. Veasley. She would go down as the last victim of the Consultant of Crime. But he would harm no one else.\n\n\"Sir,\" said Joanne, extending the radio, \"would you like to tell the world that you're still alive and kicking butt?\"\n\n\"Why don't you do it, Detective Warner.\" I said. \"You've earned it. He failed to kill you, and now he's failed to kill me. So why don't you tell them of his utter failure.\" Masters nodded as Joanne smiled brightly.\n\nThe ambulance medics were searching me for injuries, finding nothing external. Still, my lower back hurt as I said \"Meanwhile, somebody please find my crowbar...\"\n\n* * * * * * * * * * * * * * *\n\nEveryone at the Church gathered around as the Police radio crackled.\n\n\"Break, break, break.\" came the voice of Detective Warner over the radio. \"This is Detective Warner. We are at the scene of the helicopter crash at Cemetery Hill... Raymond Westboro is dead. Raymond Westboro is dead...\" \n\nSome in the crowd groaned, while some, including Cindy and those around her, held their breaths as they waited for the rest of it. The tension could be cut with a knife. It seemed like forever, but the next words finally came out:\n\n\"Commander Troy... is alive! I say again... Commander Troy is alive! He is being transported to the Hospital with minor injuries...\" \n\nA huge cheer erupted from the Police and Firemen at the scene. Davie Marsdon and Timmy Austin were high-fiving, and Policemen started high-fiving them as they ran around.\n\nCindy Ross was bent over, the relief in her heart so great that it was painful. She felt someone pat her back and looked up to see Chief Griswold, tears streaming from his eyes. He gave her the first of many hugs she would receive that night...\n\nPart 17 - The Morning After \n\nI woke up in University Hospital. It was 5:00am, Thursday, June 23d. The lovely black Nurse Jones was checking my temperature. My mother was lying on the sofa in front of the window, asleep.\n\n\"Good morning.\" I said sleepily. \"Anything out of place?\"\n\n\"Oh, good morning, Commander.\" Nurse Jones said brightly. \"You have a couple of vertebrae that did not appreciate your helicopter crashing, but they're hairline fractures, not total breaks. And nothing else broken. You're a lucky man... a brave man, but a lucky man.\"\n\n\"Yes, very brave, and very lucky.\" said my mother, who had woken up.\n\n\"Hi, Mom... it just sorta happened...\" I said, using the time-honored excuse for the many times I came home in my youth knowing I was about to be in trouble.\n\n\"Yes, a lot of things 'just sorta happened', son.\" said my mother, her face breaking into a grin. \"And thank God you came out of it in one piece.\"\n\nI remembered being brought in the night before, checked out thoroughly by Dr. Morgan... and by my wife. I gave Laura a very long, warm hug. She told me the children were fine, and she was going to take them home, as Carole was old enough to understand that something wasn't right. Chief Griswold would bring Bowser and Buddy home, as well.\n\nThen I was filled in on the day's and night's activities by Sergeant Irwin and Patrolman Hicks. Della Harlow came by and filled me in on more details, as well as warning me that the Media was being kept out, but were like rabid dogs in wanting to know what happened to me. I began tiring, probably aided by a sedative, and I vaguely remembered my mother coming into my room as I fell asleep...\n\nBack to the present. I could see my mom was tired, so I asked her to go home and get some sleep. Nurse Jones also said my mother should do that, as I was going to be getting tested by the doctors soon, so my mom left the room.\n\nI looked around as Nurse Jones finished her routine. I saw a metal cane next to me, which looked to be aircraft-grade aluminum with a rubber end, a black rubber handle, and what looked like a twistable connector to extend it. I suspected what it was.\n\n\"I'll see you later, handsome.\" said Nurse Jones. She leaned over me and pressed her lips to mine in a warm kiss. It deepened as our tongues twined for a moment, then she stood up. \"You've got one hell of a reward coming when you get out of here.\" the beautiful black woman promised. As I watched her leave, I realized that my male anatomy was still working just fine...\n\nAfter Nurse Jones left the room, I checked the cane. Sure enough, it was a sword cane, and the sword was as fine a steel as any samurai katana. This was from my black-clad friends and Misaki-sama, for me to protect myself. Which reminded me...\n\nStill no crowbar to be found. I hated to lose it, considering what it meant and what it was made out of. At the same time, it was time to move forward. Westboro was defeated, and he was dead. It was all about cleaning up the details and putting his Syndicate out of action, and then moving on to the next task at hand: Superior Bloodlines.\n\nI got up and, using the cane, walked into the hallway. I was wearing dark blue pajamas... real pajamas. Laura must've brought them after I'd fallen asleep.\n\nMy back hurt, but I bore the pain. What is pain, but a privilege for an Iron Crowbar to bear, I thought to myself. As I went down the hall, I saw Sergeant Rudistan sitting at the guard post near the Nurse's Station. He saw me and grinned.\n\n\"Looking mighty spry, there, Commander!\" he said, getting up. \"You should be resting.\"\n\n\"As should you, Sergeant.\" I said. \"Have you been up all night?\" I extended my hand and he shook it.\n\n\"No sir.\" said Rudistan. \"I got a few hours sleep last night, got here about 30 minutes ago.\"\n\n\"So,\" I said, \"give me the Cliff Notes. Casualties?\"\n\n\"Mrs. Veasley died in the Church during the evacuation of it.\" said Rudistan. \"Medical Examiner says it was natural causes. Heart failure, though not a heart attack. M.E. Martha said the woman just died, it was her time. Pastor Westboro himself was the only other death. Martha said that was suicide by cyanide ingestion.\"\n\nI nodded. \"Injuries?\"\n\n\"One fireman, not serious. Also, Lieutenant Croyle's wound wasn't too bad. Some doctor came in and assisted Dr. Morgan. Dr. Morgan said the other doctor was a military surgeon from combat zones and is really good with wounds. Patched Lt. Croyle up really good.\"\n\nRudistan went on: \"Sheriff Allgood's wife was brought in. She was beat up pretty bad. Your wife brought her in, and I think you'll have to ask your wife what happened there; we were told to 'not remember' anything we'd seen about it.\"\n\n\"Consider me 'not surprised'.\" I said. \"And Mr. Ward?\"\n\n\"He pulled through.\" said Rudistan. \"Dr. Morgan said it was touch-and-go, but the old man rallied hard. He's in ICU. Lt. Croyle is in a room, by the way, just down the hall.\"\n\nJust then, Chief Moynahan came up, along with Lt. Curly Goodwin of Internal Affairs. \"I'm delighted to see you standing, Commander.\" said Moynahan. \"Now let's go back to your room for your official statement of what happened.\"\n\n\"Sergeant Rudistan,\" I said before going, \"I heard of your own actions yesterday. Outstanding job.\"\n\n\"Thank you, sir, but Captain Ross was the one.\" Rudistan replied.\n\n\"And you were right there, as well.\" I said. \"I will not be forgetting that.\"",
        "* * * * * * * * * * * * * * *\n\nI sat on the sofa in my room and gave my statement of everything that had happened from the time I followed Gor-don to the Ward Harvester warehouse until I was met by ambulances in the field near Cemetery Hill, all of my statement recorded on videotape. \n\nI might have omitted portions about Misaki's ninja setting up an air cushion for the helicopter, and my use of Ned's pain-inducing drugs, though I did say that Elizabeth forced Westboro onto the chopper. I did make sure to emphasize that Westboro had committed suicide rather than be arrested and made to face a Courtroom.\n\nAs everything was finished, Chief Griswold came in. \"Hi, Chief.\" I said. \"How much trouble am I in this time?\"\n\n\"You'll never get the paperwork for this one done, Crowbar.\" said Griswold, his eyes showing his true emotions.\n\n\"Okay, we'll finish this up later.\" said Chief Moynahan, observing us. He escorted Lt. Goodwin out.\n\nI stood up and extended my hand. \"We did it, Chief. We got him. At long last.\"\n\n\"Yes,\" said the Chief. \"You did it.\" He shook my hand, but only to pull me to him in a hug. He was getting emotional, and I just hugged him and let him get it all out. His Town was finally clean, ridded of the Evil that had infested it for too long. His one 'bucket list' item was finally complete.\n\n\"And you damn near paid too heavy a price, Crowbar.\" the old Chief finally said, wiping the tears from his eyes as he finally let go of me. \"It would not have been worth it to lose you.\"\n\n\"Well, you didn't lose me.\" I replied. \"And we've got a lot more fun in store... as soon as I dig out of that hole my reputation has fallen into.\"\n\n\"Oh, don't worry about that, son.\" said Griswold. \"The roaches are scurrying for cover as fast as they can. Between your legal eagles and the FBI, all of that shit will be cleared in no time flat.\"\n\n* * * * * * * * * * * * * * *\n\nMy back began hurting so I got back into bed. Chief Griswold and I talked about some things to wrap up the case, things the Chief would relay to the FBI. As we finished, Cindy Ross came in. She was in civilian attire, a dark green dress and sensible shoes. When she and I made eye contact, much more than words were communicated between us.\n\n\"We'll talk later, Crowbar.\" said the Chief, who smiled at Cindy and then left the room.\n\n\"The baptismal pool.\" I said as I lay in a half-sitting, half-reclining position in my bed. \"That's Iron Crowbar thinking, there.\" I then saw that Cindy's eyes were too wide for humor at this moment.\n\n\"You... pushed the button, didn't you?\" she asked, advancing towards me. \"You did, didn't you?\"\n\n\"At the time, it seemed the logical thing to do.\" I said in my best Vulcan-esque voice. \"Seriously, I could hear in my earphones that everyone wasn't out yet.\"\n\nCindy then all but collapsed on me in a hug. I heard her whisper into my ear as she cried, saying \"Don't you dare ever try to leave me like that again!\" I just hugged her back for a long moment as she sobbed, letting a lot of held-back stuff come out. \"It's okay... it's okay...\" I whispered as she held me like a lifeline.\n\nFinally, I broke the hug and made her stand up. \"Look, I'm fine. I made it. Westboro didn't. How's Teresa, by the way?\"\n\n\"She's fine. Don't try to distract me.\" Cindy said, shutting down my ploy. \"Of all the hair-brained schemes...\" Tears were still streaming down her face. I got a Kleenex and dabbed them away.\n\n\"Well, it was Westboro's scheme.\" I said. \"I'd intended to force him onto the helicopter with me, and I got some unexpected help on that. I was going to force him to defuse the bombs, but he didn't; he chose death instead. He wanted to make me commit suicide, but it ended up being him that committed suicide.\"\n\nI could tell that Cindy was seeing right through that story. It was technically true, but it was obvious I'd been prepared to die to save the others... and her. She just shook her head, and I was sure she was contemplating just how bad my crowbar beatdown at her hands was going to be.\n\n\"So,\" I said, \"seriously, what about the others?\"\n\nCindy said: \"Molly is all right. She and Sandra Speer were keeping the kids in Dr. Heinz's old dungeon under the Psychology Building, as you know. All your kids, Todd's kid, Daniel and Melina's kids too. Laura brought them all out last night.\"\n\n\"Good.\" I said. \"And I'm sorry I couldn't tell you about that. It was imperative that you not know, in case the Enemy was watching you. And I'm sure they were watching you.\"\n\n\"And your wife and kids... and the plane crash? Couldn't tell me that, either? Let me suffer thinking my little cousins were dead?\" Cindy asked.\n\n\"Your reaction was very likely reported back to Westboro.\" I said. \"Me, I just had to look mean. You had to be genuine; you couldn't fake your reaction. I know, I know, and crowbar beatdown to follow. But take my word for it... it helped us win.\"\n\nCindy nodded. \"I figured as much. But what really gets to me is you. I know you weren't trying to kill yourself... but you didn't think you were going to make it, did you?\" I could see in her eyes that this meant a great deal to her.\n\n\"I did not consider it a suicide mission.\" I said. \"But I very much understood that it might mean going over the Reichenbach Falls with Moriarty, if you know what I mean. I had to take him down, and in a way that exposed him for what he was. That was unmistakably done, and we have a Church in rubble to show for it. If I'd died, it would've been worth it. Fortunately, we only lost one person, Mrs. Veasley. We're lucky. Damned lucky.\"\n\n\"It would not have been worth it to me if you had died.\" Cindy said strongly. \"Like I said, do not ever do that to me again... or I will beat you down... and then put you on Desk Duty for the rest of your life...\" I began laughing at that, and the mood in the room lightened up considerably.\n\nAfter a few more minutes of chatter, I said \"You need to go to Teresa's room. I am going to pee, then write up your Medal of Valor application.\"\n\n\"My what?\" Cindy said, stunned. Then she came to her senses and said \"Write it up for Teresa, not me.\"\n\n\"I'm writing one for each of you.\" I said. \"I heard about everything you did yesterday, especially at First Baptist Church. That could not have been done better by anyone. Outstanding job, Cindy. Simply outstanding.\"\n\n\"Thank you, sir.\" said Cindy. \"But again, Teresa deserves it more than I do. She got wounded. When we were in that maintenance pit, she was going to counter-attack them. And she covered Mr. Ward during the shootout, protecting him from further harm. I'm going to be making my own write-up, of course.\"\n\n\"Lieutenant Croyle... wounded yet again.\" I said. \"What-ever am I going to do with her?\"\n\nPart 18 - Past and Present \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" said Bettina at 7:00am sharp, from in front of the rubble that was just yesterday First Baptist Church. \"Channel Two News is bringing you continuing coverage of yesterday's shocking events!\"\n\n\"First,\" said Bettina, \"Pastor Raymond Westboro has been conclusively shown to be behind the events leading to the bombing of First Baptist Church last evening, as a means of forcing Police Commander Donald Troy to commit suicide while flying a bomb-laden helicopter.\n\n\"Police and the FBI say that the bombs in the church were defused when Commander Troy pressed a button on a device that saved the people in the Church, but caused his helicopter to crash. Commander Troy, who was recently awarded his helicopter pilot's license, was able to bring the helicopter down in a crash landing, which he survived with minor injuries.\n\n\"Pastor Westboro was also in the helicopter, but was found dead near the crash scene. The Coroner has formally declared Westboro's death to be a suicide by cyanide ingestion. And it's as well; Sheriff Daniel Allgood had sworn out a warrant for Westboro's arrest after finding evidence that Westboro molested underaged boys and girls. Channel Two News has seen that evidence, and it is too shocking and disgusting to discuss further.\n\n\"The members of First Baptist Church are understandably in deep shock after the events, but they have promised to rebuild and to be better than ever before. Donations are pouring in for the rebuilding of the Church.\n\n\"Lieutenant Teresa Croyle is recovering after being wounded in a gun battle with wanted fugitives at the Ward Harvester plant yesterday afternoon. Lt. Croyle has been credited with saving the life of Mr. Thaddeus Ward, owner of the company, who also was wounded at the scene. Mr. Ward is in the ICU of University Hospital, recovering from his extensive injuries.\n\n\"And praise is pouring in from all quarters for Captain Cindy Ross, whose leadership in the First Baptist crisis was described as stellar and cool-headed...\" Bettina went on to comment on the loss of Mrs. Veasley, discussing her honorable military career, and her leadership in the Church during those trying hours, as well.\n\nBettina finished: \"There is also some confusion on why the Reverend Robert Patterson did not show up for the rally at First Baptist nor the event at University Arena yesterday. His spokesman says that he'd cancelled the day before, and those who purchased tickets can get refunds or tickets for other Patterson events. However, local organizers say that they never got word of the cancellations...\"\n\n* * * * * * * * * * * * * * *\n\nAfter the Bettina Broadcast, I ambled along to Teresa's room. She was awake, and Todd and Cindy were in the room with her. I came up to her beside.\n\n\"I know, I know.\" Teresa said. \"Desk duty forever... and the same for you. You're grounded, sir. No more helicopter flying for you.\"\n\n\"Yes... and no Purple Orders for me, either.\" I replied, pretending severity. \"This is, what, your third Purple Order?\" Teresa nodded\n\nI stood up as tall as I could and said severely \"I swear to God, if you get a fourth one, it's Desk Duty forever...\"\n\nEveryone broke down laughing at that. I took Teresa's hand in mine and said \"Damn good job, Lieutenant. Damn good.\"\n\n\"Thank you, sir.\" Teresa said. Just then, as I'd arranged, an older doctor came in.\n\n\"Ah, how's my patient doing?\" said Dr. Leonard Cordell. He checked everything. \"Hmmm, your lung is doing fine, not making a lot of fluids. No infections, always a good thing. You're a tough young lady, Ms. Croyle.\"\n\n\"Sir,\" said Teresa, \"when I woke up on the operating table, you said you knew my father.\"\n\n\"Yes, I did.\" said Cordell. He looked over at me.\n\n\"Yes, tell her.\" I said. I looked over at Todd and Cindy. \"And you two should be listening to every word of this.\"\n\nDr. Cordell pulled up a stool and sat down next to Teresa. \"Yes, I knew your father in Viet Nam. I was a Navy Corpsman at the time, and he had me attached to his unit. He was the bravest man I ever knew, and he fought harder than anyone. He had a picture of his wife... your mother... in his pocket. She was all he ever thought about.\"\n\nTeresa nodded as Dr. Cordell continued. \"In our last action, he led his team in to rescue a group of Green Berets. And he saved them, he got everyone out with no casualties that had not already happened. He should've gotten the Medal of Honor for that, but it was on the other side of some politically drawn line, and the Army tried to bury the whole thing.\" The cynicism in Dr. Cordell's voice could not be mistaken.\n\nHe continued: \"He was wounded, shot three times, but he survived. I admit that me and a few others helped by dragging his ass out as he fired at the advancing Charlies to cover his men. We got him back to the choppers and out of there, and the surgeons were able to save him.\"\n\n\"Then I have you to thank for me being here.\" Teresa said.\n\n\"Not really. But I'll say this: you are you father's daughter.\" said Cordell. \"One of his wounds was in the shoulder, a lot like yours here. I didn't know how to properly fix wounds like that back then. I got a lot of practice in the wars over the last 20 years, though. Way too much practice...\"\n\nAfter a pause, he said \"But it was my honor to be able to fix up that man's daughter. I know he'd be proud as hell of you... yes, I know of your history, how your mom died in childbirth with you... but I think deep down he would be proud of you today.\"\n\nTeresa didn't reply, and the look on her face was inscrutable.\n\n\"By the way,\" I said, \"Dr. Cordell also fixed up Captain Ross after her wounds.\"\n\n\"And those were much, much worse than Ms. Croyle's shoulder.\" said Cordell. \"We were a hair from losing you that night, Ms. Ross. Commander, you have some tough women working with you. Ladies, you're both great people, and I'm glad I was able to help you.\"\n\n\"I haven't had the chance to thank you.\" said Cindy, getting up. She hugged Dr. Cordell. \"I'm very grateful to you, Doctor.\"\n\n\"And I'm grateful to you, also.\" I said. \"I couldn't do it without them on my team.\"\n\n\"I'll let you get some rest, and we'll talk more later, Ms. Croyle.\" said Cordell. \"Commander, a moment with you outside?\"\n\n\"Yes, Admiral.\" I said. Teresa's eyes widened at my mention of his rank, I noticed.\n\nOnce outside, Cordell said \"You can show that gratitude... by getting your wife to retire from that Organization she is currently serving.\"\n\n\"I'm working on it, sir, believe me.\" I said.\n\n\"Good.\" Cordell said. \"The bastards are trying to do to you what they tried to do to me. Don't let 'em beat you, fight back like hell.\"\n\n\"Yes Admiral, I will.\" Cordell shook my hand, and then headed down the hallway.\n\nPart 19 - Present and Future \n\nI left the others with Teresa and went down the hall to ICU. No one stopped me as I went inside. In one bed was Melina Allgood. Next to her was and her husband, Sheriff Daniel Allgood. Yeah, who is going to throw the Town & County Sheriff out of anywhere he wants to be?\n\n\"Well,\" I said, coming up to the bedside, \"I'm sure the loser of the fight looks a lot worse.\" Melina chuckled briefly.\n\n\"A lot worse, both of them.\" she said. One of her eyes was swollen with dark bruises around it, there were many more bruises on her head where bruises should not be, as well as her arms and probably other parts of her body under the sheet of the bed. She'd been diagnosed with a severe concussion, broken ribs, and soft tissue damage. An operation was performed to stop internal bleeding.\n\n\"Thank you.\" I said. \"For everything.\"\n\n\"Thank Joanne.\" Melina murmured. \"She saved me, your wife, your mother, Gayle...\"\n\n\"... and the kids.\" I said. \"You weren't supposed to take this kind of beating to draw them in there, though.\"\n\n\"I'll remember that,\" said Melina, \"the next time someone likes Westboro dares to come up against you.\" It was the kind of joke we'd shared for years as a married couple.\n\nShe was tiring. \"You get some sleep.\" I said. As she dozed off, Sheriff Allgood came out into the hallway with me.\n\n\"I'm still not sure what all happened, there.\" said Daniel. I wasn't sure if he was talking about events, or if that was an accusation at the beating his wife had taken.\n\n\"The story will come out, in time. I still need to talk to the FBI about it; I only know that they got Newton after she escaped County Jail.\" I said.\n\nAllgood said \"And I know that the State AG and Inspector Maxwell are going to suspend the investigation of you. They'll say that their source, Julie Newton, was found to be 'not credible'. That's a fucking understatement.\"\n\n\"No doubt.\" I said. \"Anyway, I'm sorry about Melina having to endure that.\"\n\n\"We'll talk about that one later.\" said Daniel. At that moment Nurse Jones came up to me, a determined look on her face. I was wordlessly led back to my own room.\n\n* * * * * * * * * * * * * * *\n\nAt 9:00am, I was lying in my bed, having just undergone some tests. The door to my room opened, and I sucked in my breath at the sight.\n\nSeeing the most beautiful woman in the world, my wife Laura, was of course wonderful. But the tears started coming when I saw what was she was carrying in her arms: our son and daughter.\n\nLaura came up to the bed and deposited Carole on it on my left side, then Jim on the right. \"Daddy!\" Carole said. Jim was smiling, too, though he didn't say anything.\n\n\"Hi, Fussbudget. Hey, Little Man.\" I said, putting my arms around them and drawing them to me.\n\n\"Daddy, why are you in the hos-pittle?\" Carole asked, straining her neck up to look up at me.\n\n\"Because I hurt myself.\" I said. \"So they're helping me get better.\"\n\n\"Daddy, why are you crying?\" Carole asked as she leaned over my chest.\n\n\"It's a happy cry.\" I said. \"Because I'm so happy to see you.\"\n\nCarole laid her head down on my chest, over my heart, then extended her little arms as far as she could, to try to give me a hug. \"I love you, Daddy.\" she said.\n\nI lost it.\n\nI'd held it when Chief Griswold had lost it. I'd held it when Cindy had lost it. But now it was my turn, and it all came out. All of the pain, the emotional torture, the mental exhaustion of four years of pursuing the most dangerous criminal of our generation... it all came out. I'd survived, my family had survived, and we were together again...\n\n\"I love you too...\" I said, hugging her with one arm and Jim with the other. I looked up at Laura, my eyes telling her to join us. She came over and kissed my forehead, stroking my hair. \"I love all of you so much...\" I said through my sobs and tears.\n\nWe would share this emotional family moment for some time...\n\n* * * * * * * * * * * * * * *\n\nI was much, much better when Molly brought Ross and Ian to see me. They sat with me in the bed and I chatted with them, and with Molly.\n\n\"Thank you, Molly.\" I said. \"I know it was rough in that dungeon room.\"\n\n\"It wasn't too bad.\" said Molly. \"Kind of dark. We had some electricity, so Carole watched videos, and the boys played and slept. Carole loved helping me with Patricia. And Sandra Speer was with us. She told me a lot about what you did in Apple Grove, and what the FBI is doing about these race-gangs, Superior Bloodlines and White Roots.\"\n\nThere were stairs down to that basement lab where Dr. Heinz had died, behind the non-working elevators whose shafts had been sealed off. I'd sealed the entrance from the tunnel that led to the University Bell Tower. The night Laura and the kids had 'died' on the plane, she actually had taken the kids, Molly, her kids, Todd's son Doug, the Allgoods' kids, Sandra and Gayle down there, leaving them with plenty of food, water, some books and magazines (mostly on sexual psychology, which Molly told me Sandra read with great interest), and a shortwave radio.\n\nAnd the plane crash? My wife's power was demonstrated as she arranged for another Air Force plane to fly directly over the plane from County Airport. At the moment of the crossing, Laura's plane turned off its transponder and the other plane turned theirs on... which was the same transponder setting. Both planes turned so that it looked like the transponder plane kept going straight.\n\nAnd when the plane was shot down over West Virginia, the pilot of the other aircraft (which was about to be taken out of service anyway) had bailed out, and an empty plane crashed. The plane with the Agents pretending to be Gayle and my wife diverted south, and landed at Pope AFB, next to Ft. Bragg, North Carolina.\n\n\"I can't thank you enough, Molly.\" I said. \"It was rough on Cindy, though.\"\n\n\"Yeah, we talked before I came in here.\" Molly said with a grin. \"You better find your missing crowbar fast, is all I'll say about that...\"\n\n* * * * * * * * * * * * * * *\n\nAt noon, I was visited by the FBI Team, with Lt. Tanya Perlman joining them. Jack Muscone, Martin Nash, Sandra Speer, Eduardo Escobar, Lindy Linares... and the Deputy Director himself. Needless to say, I first thanked Sandra for guarding my children.\n\n\"Here, I brought you some real food.\" said Jack Muscone. The sack contained two exceptionally delicious double cheeseburgers from the Cop Bar.",
        "\"Oh, thank you!\" I exclaimed. \"I've refused to eat whatever it is they've tried to serve here. My wife says there are three certainties in life: death, taxes, and that hospital food will be God-awful.\"\n\n\"Testify, brother.\" said Tanya,who'd had more than her fair share of hospital food.\n\n\"And some even better news for you,\" said the DepDirector as I ate, \"your lawyer, Ms. Gillem, in cooperation with some people way over my head and your wife's head in various Federal agencies, beat back Casey Walker's investigation of you. Your deposition has been put off for months, and likely will never even happen. Staffeld seemed to just roll with it, like he rolls with everything, but Bond was very angry.\" I nodded.\n\nThe DepDirector continued: \"And no one has seen Casey B. Walker since the CIA Director and head of the NSA personally ordered him to stand down on Operation BEEKEEPER. He and your wife really got into it, and I mean it was a vicious internecine fight of the kind that usually doesn't end well.\"\n\n\"Wow.\" I said, a feeling of foreboding creeping into the back of my mind.\n\n\"By the way, Don,\" said Lindy Linares, \"you're going to be seeing a lot of us over the next few days and weeks. We've started making arrests all over the country of people known to be connected to Westboro, but we're going to need you to look over the data and make the cross-references only you can do.\"\n\n\"Cool beans.\" I said. \"Let's get this party started...\"\n\nPart 20 - When Heroes Meet \n\nI was told that I was going to be discharged at 3:00pm. My mom brought me some clothes, civilian clothes, and I put them on: black shirt, khaki pants, light black Police jacket with embroidered badge in front and 'POLICE' in big letters on the back. Then, to my surprise, my mother excused herself and left, saying someone would be along to escort me out of the Hospital.\n\nI finished dressing and was about to go when two persons entered my room with a wheelchair for the traditional ride out of there. Chief Griswold was one of the persons. I simply could not believe who the other man was, though I recognized him from pictures.\n\nHe was short, now a bit stocky, with iron gray hair and a big brush mustache. His eyes had something of an introspective, perhaps even haunted look. He didn't walk a lot nowadays, using a wheelchair to get around, but today he was bound and determined to push me in my wheelchair out of the Hospital.\n\n\"Joe,\" said Griswold, \"I can see that he knows who you are.\" My eyes being wide as saucers probably gave that away. \"Commander, this is Joe Smedley. Joe, Commander Don Troy.\"\n\n\"It's a great honor to meet you, sir.\" I said hoarsely, not quite finding my voice as I shook his hand. Joe Smedley was the most decorated hero in Town & County Public Safety history. Medal of Valor, Police and Fire Crosses, at least six Purple Orders...\n\n\"Believe me, son, the honor is mine.\" said Smedley, his voice more soft-spoken than I'd expected. \"Grizz, this man is not only brave... he's got the brains to go with it. You and I didn't have what he does.\"\n\n\"Very few people I've ever met do.\" said the Chief. \"I'll wait for you out in the hallway.\" He exited the room.\n\n\"Have a seat, Commander.\" said Smedley.\n\n\"Yes sir.\" I said, sitting down in the wheelchair.\n\n\"Oh, I'm not a 'sir' to you, Commander.\" said Smedley. He came from behind the wheelchair so that I could see him.\n\n\"Commander... Don,\" he said, \"there's something I'll tell you, just between us alone.\" He paused, then said \"I know what you felt on that helicopter. I know, because I was in situations like that many times. I know what I felt, facing Death, feeling it embrace me like a warm blanket. It's like that 'Nexus' in that Star Trek movie.\"\n\nThe man's words seemed to penetrate to my soul, as he described all too accurately how I had felt in those last moments on that chopper.\n\n\"Son, I didn't have children. You do.\" said Smedley. \"I never learned to value life, and living. I hope you will... and won't do the things I did, at least unnecessarily.\"\n\nI understood what he meant. I just nodded as our eyes locked. He then nodded and said in a much more jovial voice \"Well, let's roll you on out of here...\"\n\n* * * * * * * * * * * * * * *\n\nThe Media reporters were set up in relentless force on the Hospital front lawn, held back by barricades, Police, and Hospital Security. As I emerged from the front door of the Hospital, my current crowbar (IC3) in my hand and my sword cane in the other, they shouted questions at me. I managed to get out of the wheelchair without help, then I just waved at them and yelled \"No comments right now.\"\n\nAs I was driven off, Priya turned to Bettina and asked \"Who was that old man pushing the Iron Crowbar out of the hospital?\"\n\n\"That...\" said Bettina, her voice one of awe, \"was Joe Smedley, the only man more highly decorated than the Iron Crowbar... though Don is fast catching up...\"\n\n* * * * * * * * * * * * * * *\n\nI was driven to the Mountain Nest. My Police SUV was parked there, having been driven up by Sergeant Rudistan and his Team. I told him I was glad he didn't accidentally hit the 'driver seat eject' button, and he laughed; I knew he'd really looked over the vehicle and the neat stuff in it as he drove it.\n\nUpon coming home, I was greeted by two good looking dogs, and they were as overjoyed to see me as I was them. Carole 'helped' me pet Bowser, who sat between us on the front sofa, with Buddy on my other side. I sat with them for a good long time, praising Bowser in the fondest terms for exposing the Consultant of Crime, though knowing it must've been bad for him to have to face one of the men who'd tortured him nearly to death. He did huddle rather tightly to me, I noticed.\n\nMy mother Phyllis also came up, having cooked some of my favorite foods, such as macaroni and cheese. I didn't even scold Carole when she fed some of her green beans to the dogs. The simplest of things in life... family dinner... meant a whole lot to me that night. And I knew that a lot of people were having family dinner tonight because Good had defeated Evil the night before...\n\n* * * * * * * * * * * * * * *\n\nThe sun was setting as I took the dogs out to do their business. As I sat on the patio, I reflected on where I had been twenty-four hours ago, and what I had done and endured.\n\n\"Was it worth it, Darling?\" I heard my wife's voice ask as she came up to me and sat down beside me.\n\n\"Yes.\" I said. \"I guess it's easy to say that since I'm here and Westboro is dead. But it was worth it. I only regret that it never ends; tomorrow, someone else will be taking Westboro's place and we'll have to go after him.\"\n\n\"Yes.\" said Laura. \"It never ends, does it?\" After a moment, she said, \"Why don't you come to bed, Darling. You still need to rest and recover.\"\n\n\"Promise you'll help me recover... properly?\" I asked. Laura smiled a beautiful smile, and the dogs nearly did not beat us to the door...\n\n* * * * * * * * * * * * * * *\n\n\"Oh, Commmaaaannnnderrrrrrr.\" I heard the voice say in my head.\n\n\"Angela, go away.\" I said to the dream, and the voice.\n\n\"If only I could, Commander.\" the Black Widow whispered. \"But you've freed our souls. I just came to thank you.\"\n\n\"You can thank me by bugging someone else's dreams, Angela.\" I said.\n\n\"Oh no, I am totally yours, my dear Commander.\" Angela whispered. \"And don't think for a minute that it's over yet...\"\n\nPart 21 - Storm Clouds Rising, Redux \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" blared the lovely redheaded reporterette from in front of Police Headquarters at 7:00am, Friday, June 24th. \"Channel Two News has learned that the State DOJ investigation of Commander Donald Troy has been discontinued, as the events of the past two days have rapidly shown that the organization of Pastor Raymond Kyle Westboro was behind the disinformation being spread about the Commander.\"\n\n\"In addition,\" said Bettina, \"the Federal probe into Commander Troy has also been shut down, and the FBI is working with Commander Troy to bring Westboro's organization to Justice. Asked if the Oldeeds Ministries is being investigated in connection with Pastor Westboro, Special Agent in Charge Jack Muscone would only say that many leads were being pursued, and he congratulated Commander Troy and the TCPD on successfully bringing down the worst criminal mastermind since Jack the Ripper and the fabled Professor Moriarty of detective fiction fame.\"\n\n\"Also congratulating Commander Troy and his Police Department was Governor Val Jared, who is running for re-election.\" said Bettina. \"Governor Jared said that Commander Troy's brilliance, courage, and persistence are the qualities needed to reform the 'deeply corrupt' SBI, and he hopes Commander Troy would consider 'a large role' in the Governor's next administration. SBI Director Jack Lewis, who is running against Jared for Governor, issued a statement through his campaign congratulating Commander Troy on the successful defeat of Raymond Westboro and the dismantling of his national organization.\"\n\n\"Surprisingly,\" Bettina said, \"State Senator Katherine Woodburn issued a statement urging the State DOJ and the Federal Government to continue their investigations of Commander Troy. Woodburn stated that the circumstances surrounding the death of Pastor Westboro itself should be more thoroughly investigated, as well as how Commander Troy managed to survive the helicopter crash while Westboro did not.\n\n\"Woodburn further stated that Commander Troy could still be guilty of corruption, that the seriousness of the charges outweighed any good that Troy might have done in stopping the Westboro Syndicate. City Councilman Thomas P. Cook and former Police Deputy Chief Robert Brownlee openly joined Senator Woodburn in her statement that was totally devoid of any praise for the Commander and the TCPD.\"\n\n\"Spot polling by Karl Frazier's Public Policy Polling has shown that Commander Troy's approval ratings are back up and even higher, over 90%.\" said Bettina. \"Governor Jared also increased his lead over Director Lewis to 52-44%.\"\n\n\"And last but not least, Lieutenant Teresa Croyle of the Town & County Police Force may be released from University Hospital as early as tomorrow or Sunday. Doctors say Lt. Croyle's progress has been remarkable.\" said Bettina.\n\n* * * * * * * * * * * * * * *\n\nThe large crowd of MCD Detectives applauded me and Cindy when we walked into the room for the coffee klatch. I tried to get them to focus on what Cindy did at the Church, but they were having none of that; they wanted to know what happened in the helicopter. I told them I had formal statements to make before I could talk about it to everyone else... and that was also the line I gave in a statement to the Press.\n\nAfter we listened to the Bettina Broadcast, I told all the Detectives that they'd done great work, but we still had a lot to do to clean things up. The Mouseketeers were already busy, working with the FBI to put together the incredible amounts of data that were already coming in.\n\nIn addition to what had been coming out from Hamilton Phillip from Apple Grove, Mr. Harkins of Second National Bank had been taken into protective custody by the FBI. He was giving them everything he knew on Westboro, as well as elements of Superior Bloodlines, and his knowledge was quite large. He'd organized his data while in hiding, and it was easy for the FBI to form leads. And every lead just turned into three, four, even twelve more leads. This thing was getting huge... and it became apparent that I personally would be needed to begin weaving the tapestry that would destroy the Enemy.\n\n* * * * * * * * * * * * * * *\n\n\"I've got a big problem.\" said Commander Della Harlow as she came into my office. I had her sit down.\n\n\"Besides Lt. Peterson, what problem is that?\" I asked. Lt. Scott Peterson had shown up to work the day before as if nothing had happened on Wednesday. He said he'd never gotten any calls or texts from Commander Harlow, and had been at home that evening, reading books and not watching any television. I personally suspected he'd been meeting with the Union to press his complaint against me, and that he was doing so on Wednesday evening.\n\n\"No, not him.\" said Della. \"Needless to say, the traditional case solution victory party is going to be a bit larger than normal. We don't know where to have it. The Steakhouse may not be large enough. Most of the pavilions in the parks are already booked for the weekend, as well.\"\n\n\"We can do it Monday.\" I said. \"Late afternoon. Call the River Valley Country Club and reserve their main room. I'll pay for it.\"\n\nDella smiled. \"Don, it's already paid for many times over, and I won't tell you who those patrons are, nor how many of them there are. But I do know this... it's going to be the biggest victory party you've ever had...\"\n\n* * * * * * * * * * * * * * *\n\nMyron and Mary Milton came into my office on Friday afternoon. They both looked tired.\n\n\"Commander,\" Myron said, \"can you come to lunch with us? Some... er, friends want to talk to you.\" I was intrigued, so I came along.\n\nSure enough, Myron drove me to the Mathematics Building at the University, and they escorted me to the office of the Sir Isaac Newton Professor of Advanced Mathematics, Dr. Marvin Milton.\n\n\"Come in, come in, Commander.\" Dr. Milton said enthusiastically. \"Thank you, kids.\" he said, dismissing Myron and Mary, who withdrew. \"Have a seat, have a seat, Commander. Wonderful job you did. I never in a million years thought that bastard Westboro could be brought down. I didn't even know who he was, nor did anyone else, until you disposed of him so effectively.\"\n\n\"Thank you, sir.\" I said. \"And your colleague got his old books on the Trojan War back, as well.\" The books purloined in the Parole Officer case had been found in Westboro's home, and had been returned to their rightful owner.\n\n\"Ah yes, he was very happy.\" said Milton. \"So, the reason for my asking my son to bring you here...\" He turned to a side door and said \"Come on out, Leonard.\" To my surprise, Dr. Leonard Cordell came out of the little room and came to sit beside me.\n\n\"Commander,\" said Cordell, \"would you be kind enough to activate that little device of yours?\" I got out my bug-killer and turned it on.\n\n\"Here, take this.\" said Cordell. It was a simple belt buckle, like what I and all TCPD Officers wore.\n\n\"If you press these two buttons simultaneously,\" he said, showing me two small buttons on the buckle, \"then a very powerful transmitter will emit an alert. Depending on where you are, other relay towers and even satellites will pick up the signal and re-transmit it. It may even be possible to locate you anywhere in the United States once you activate that transmitter.\"\n\n\"I get the idea,\" I said, \"that either you purloined this from the Company, or Dr. Milton was able to duplicate their technology.\" This was hot-shit CIA stuff, I realized.\n\n\"A little of both.\" said Professor Milton. \"As you know, Commander, Admiral Cordell had a few run-ins with the CIA, especially while he was in theaters of war, putting our soldiers back together again. And you also know how I feel about them.\"\n\n\"Er, yes.\" I said.\n\n\"We know that you are a man of the highest, highest integrity.\" said Milton. \"We know your wife is an honorable woman, and a Patriot, and I hope you will follow the Admiral's advice and encourage her to retire from that organization.\" I nodded.\n\n\"Anyway,\" said Cordell, \"that device is in case you get into any trouble. I don't trust those bastards, and neither does Dr. Milton here. Something ugly was going on with that investigation by those turds Bond and Staffeld. You know how to watch your back, son... and now is the time to not let your guard down. Be on watch. And use this if you need our help.\"\n\n\"Thank you, sir.\" I said. \"I hope I'll never need it, but it's nice to have.\" I would begin wearing the device from that afternoon on.\n\n\"And speaking of Patriots,\" I said, \"Admiral, will you be at the funeral tomorrow?\"\n\n\"I'm afraid not, son.\" said Cordell. \"I still don't need to be showing my face much in public.\"\n\n\"I hope we'll be able to change that soon.\" I said. With that, I took leave of them and headed back to Headquarters.\n\nPart 22 - Farewell to a Patriot \n\n-Shall we gather at the river,<br> -Where bright angel feet have trod,<br> -With it's crystal tide forever,<br> -Flowing by the throne of God?\n\n-Yes, we'll gather at the river,<br> -The beautiful, the beautiful river;<br> -Gather with the saints at the river,<br> -That flows by the throne of God.\n\nSaturday, June 25th. At the Fairgrounds there was a concrete abutment at the side of the River, which was once where boats would dock. People would go there and fish or just watch the River flow by. It was now an 'observation deck' to watch the River flow by.\n\nOn this deck was a casket, draped with the American flag. Inside, in an urn, were the cremated mortal remains of Mrs. Veasley. An empty wheelchair was off to one side. Over one thousand people were at the Fairgrounds to attend her funeral service. She had wanted it to be here, by the River, and everyone sang her favorite song, 'Shall We Gather At The River\".\n\nMrs. Veasley had no family that we knew of. Cindy Ross had been shocked to learn that she was the heiress to Mrs. Veasley's medals and other military things, as well as some of the furniture of the house. Most of the rest was bequeathed to 'The Vision'.\n\nSo Dr. Eckhart sat on Cindy's right, and me to her left. Cindy and I were in our formal uniforms, Medals of Valor around our necks. My mother was to my left, in her Police Auxiliary uniform, and many of Mrs. Veasley's friends from the Community Center were surrounding us up front.\n\nIt was a military funeral all the way, with a military Chaplain and Pastor Derkins saying the service. Then came a seven gun salute. The volleys echoed over the River and the fields beyond as they performed the precision routine. Then Taps was played. The flag was taken and folded tightly, then the Colonel brought the flag to Cindy, to whom Mrs. Veasley's last instructions had ordered it be given. Cindy accepted it, holding back tears.\n\nThere would be no interment, as Mrs. Veasley had asked that her ashes be spread over the grounds of 'The Vision'. John Tower brought his helicopter, and I took the controls with Cindy taking the urn and sitting in the passenger seat. Most people had left, but a few had stayed and watched as we took off.\n\nWe flew south, along the River, seeing the farms and the roads. I thought about my previous helicopter ride, and the result. This mission, while very sad, was one of honor, as Mrs. Veasley's last wishes were fulfilled.\n\nAs we came over the grounds of the Vision, seeing the large stone building, and the dorms further south, I saw a large number of acolytes lined up on the lawn behind the main building, watching.\n\nAs I flew by, Cindy opened the window on her side and began pouring the ashes out, slowly, shaking the urn as I flew in a large circle over the grounds twice. Then the urn was empty, and I turned north for our Town & County. All the acolytes waved and Cindy waved back to them.\n\nHer duty done, Mrs. Veasley had been called Home. And our duty to her was also done as I flew the helicopter home...\n\nTo be continued.\n\nAuthor's note: last chance to give the true clues to the Iron Crowbar detecting and defeating the Consultant of Crime... "
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama",
        "detective"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/a-tiny-slip-ch-03"
}