{
    "title": "A Big Shiny Blue Marble Ch. 52",
    "pages": [
        "***Sorry for the delay on this, but I was uh, overtaken by events, you might say. I've been trying to get this written for a while now and I've had a few um, obstacles along the way...\n\nAnyway, this chapter is going to be a 2-parter. Not a lot of fooling around here - that's in the next chapter. What we have here is a bit of hope for a few characters out in the wild and woolly hills. So there's a bit of a horse chase which I hope I've managed to convey well. It doesn't happen here, but there is a threat in this chapter of non-consent. Just saying. \n\nAnd all of this grew out of me watching a nice lady take blood samples... 0_o\n\n--------------\n\nBook of the Forsaken Part 7\n\n\"Where are you going?\" Rudhi asked as she watched Billy and Randi make a few preparations and place some things into her tank.\n\n\"Over to the old base where I put my piggy together. There's something there that I want to add and never got around to. It wasn't even anything that I thought I'd ever need or want, but now I can see that it would be a good thing,\" Randi said, \"Why? Do you want to come along?\"\n\n\"Of course,\" Rudhi smiled, \"I am so much in love with you both. I must go along.\" She thought for a moment and then laughed, \"I learn so much from you and to me, you are both so beautiful. For myself, it is not hard to find women here who are lovely, but it is a little harder to find men who I like to look at. I don't know why that is, but it is something that I've noticed. So, since there is a drought and I cannot have my own, I am happy just to look at your man.\"\n\nThe two girls remained close, in spite of Randi's happy relationship with Billy. From them, Rudhi was learning how to make love without the hard sort of fights that her people had always employed as a backdrop in their personal relationships. She'd asked, and though Billy had been uncomfortable about it at first, they now didn't mind it if she watched them as long as she didn't interfere in any way -- though she had a way of asking the most startling questions sometimes.\n\n\"And anyway,\" she smiled as she found a few things to help with, \"you make me laugh so much. It is like watching two people's first love, but without the sticky foolishness that accompanies that in people who are much younger.\" \n\nShe meant that if the pair of them found themselves within arm's reach of each other, they gravitated together without even knowing it and when it was noticed, it was that they were touching somehow or holding hands, yet without the seeking for it which happens with a pair of young lovers. For the two of them, it just happened and wasn't thought of or sought for at all.\n\n\"And there is something else that I have learned from you,\" Rudhi said, quite earnestly, \"When Randi rides anywhere in her rolling home, she always makes the sandwiches that I love so much to take along and eat on the way. I would go for them alone.\"\n\n\"Fine,\" Randi nodded with a laugh, \"come on then, and I'll teach you how to make them for yourself.\"\n\n--------------------------\n\nThe night was cold and clear as Samantha reported for her shift at the hospital. Given the general shape which mankind had found itself in a few hundred years earlier, the fact that there even were still a few barely functional hospitals was remarkable. And of course, their use and services were for the sort of people who could afford them.\n\nSam hung up her coat and when she turned around, she was looking at her manager rather than her boss -- which was a blessing, she thought. Clancy Harrington was a great boss to his many minions and he rewarded dedication. To herself and a pair of others, he was the most awesome uncle and father that you could ever want to have.\n\n\"Put your coat back on, Sam, \" Clancy said, \"you're going out to a quarry. They've got a prisoner there who's a little fucked-up and they need you to tell them if he's gonna die or not.\"\n\n\"But I just do blood samples,\" Sam protested, \"I'm not a doctor or anything. You know that, Uncle Clancy.\"\n\n\"Yeah, I do,\" Clancy replied, taking a pull of his cigar with a grin, \"If you were, I'd be able to get a lot more for sending you out, wouldn't I? Look kid; let's face a few facts here. Think of it as a day away from that old bitch, Margie. That's gotta be worth it right there, huh? I do know how she treats you, but I can't be here every day to look out for you, can I? If you think the guy's fixable, then push to have them let you bring him here for treatment. Otherwise, just bandage-over whatever holes you find and hand 'em the bill, honey.\"\n\nSamantha nodded with a shrug. \"Hey,\" she said, \"what if I find that this guy is really busted? What happens then, Uncle Clancy?\"\n\n\"Well I get paid regardless,\" Harrington said. \"but they'd probably just throw him onto the shitheap. He'd die there eventually. Everybody does. It won't make any difference to you either. They just need to know if he's worth keeping, that's all. You oughta go and get whatever you need ready.\"\n\nAs she packed her kit, Sam reflected on what she'd heard. She might come off occasionally as a little bit na\u00efve, but for the most part it was just her way of verifying what was expected out of this. One of the biggest stress factors of her existence was her boss Margie -- who was at minimum, a Size 12 asshole, officially, and though Samantha could deal with her rather easily, she was hobbled in that her methodology was of a rather permanent nature -- which would be frowned upon to some extent at least. \n\nShe wasn't anywhere near being a doctor either, but she was the nearest thing that her uncle Clancy had to send and she was meticulous in her note-taking and accurate in her observations. She was also not a hematologist, but for the more basic interpretations, she knew what was what. Blood work these days wasn't anything like it used to be, from what Sam had heard, but it still had value as a diagnostic aid. She also knew why it was her who was being sent. Little Sam was a lot easier to send, transport, travel with and just plain easier to defend out on the road. \n\nMargie likely would have wanted to go, since there were bonuses involved, but Sam knew that all of her uncles' roadmen had threatened to quit if they had to take Margie anywhere again. Travelling anywhere with Margie was known to be a pain in the ass of monumental magnitude. Any activity with Margie's name in the same sentence could be, it was said, whereas all of the roadmen loved traveling anywhere with Sam.\n\nSamantha was just a little thing, maybe four feet, ten and she was a flyweight, but she had the sense to keep her mouth shut if things got a little tense and with the way that things had been lately, it helped everyone's nerves if the payload knew when to keep her head down and even better in Sam's case, could shoot half-assed decently as opposed to bellowing out that she was important and needed protection, as Margie was wont to do if they were attacked out on the road. Nobody knew but her uncle, her cousin and the roadmen, but Sam had a secret, and it was the nature of that secret which allowed her to take care of herself in a tight place a lot better than most girls would be able to manage for themselves. \n\nIt always amazed folks who didn't want to be cooperative when the diminutive girl with the honey-blonde hair and the dark eyes set to work on getting the samples that she required. They might try to resist after agreeing initially, but once Sam grabbed an arm and twisted ever so slightly, well it was over almost before anyone knew it had happened and the person who might have wanted to give Sam a hard time over allowing her to take her blood samples usually just sat there in a bit of shock wondering what the hell had just happened while they stared at the bit of gauze they were holding over the hole on the inside of their elbow.\n\nSam got her gear into her saddlebags and she checked the load-out for her rifle and her pistols twice as she got ready. This was going to be a long trip and so the first part of it had to be made while it was still dark.\n\nThe horse had been Sam's idea. There had to be a wagon along anyway in case the patient needed to be transported, but if there was no patient, Sam didn't see the need to center herself out before then. She'd much rather ride with the roadmen. It made for a better trip, kept her out of the clutches of whatever nasty old fuck was driving wagon for this, and it kept her nearer to D'Arcy and Shane, Clancy's adopted sons and her cousins. They'd always gotten along great and if there was a place to be on one of these road trips, it was next to those two boys.\n\n\"Who we gotta go see?\" Sam asked D'Arcy as they rode.\n\n\"Dunno much,\" D'Arcy replied, \"He's supposed to be a big fucker, so you need to watch yourself, cuz. I also heard that he's their best, so they might want him fixed if he's busted not too bad.\"\n\nThe statement was worth a smile to Sam because D'Arcy was not a little man himself, probably going better than six-three and over two-thirty on the scales. In many ways, they weren't anything like each other, but in temperament and drive, they were synchronized if such a thing were possible, one often knowing the state or the feelings of the other without the need to waste breath on words.\n\nThe trip out was fast but otherwise unremarkable and though she was still a little dazed from the road and the fast ride, Sam threw off her cloak and coat revealing the old neoprene suit underneath. She'd been told that they were keeping the patient out in the showers, so she'd dressed a little accordingly. It was part of a strategy which she's worked out with D'Arcy the summer before. For a place like a quarry where they'd keep their injured fighters in their showers, she and D'Arcy geared for it so that he could accompany her and keep her safe. \n\nClancy did his best to make sure that the calls were genuine, but more than once, Sam had found herself in the middle of a bunch of addicts who thought that she must carry some form of opiates in her crash bag. So these days, D'Arcy went with her, but the result was always the same if they found that they'd been set up.\n\nThat was when that little secret which Sam shared with her cousins might just slip out of the place deep inside where it was usually kept tightly restrained at most times. When they walked away afterward, there was usually no need for opiates by then anyway since nothing back there was breathing. \n\nThe quarry, like a lot of other places which needed a rather steady supply of new workers, was really just a form of prison in the current culture. A prisoner could elect to remain in a regular jail or transfer to a work farm or a quarry to work their sentence off a little quicker.\n\nThis particular quarry also fielded some fighters who would be matched against the fighters of another quarry or factory someplace. Typically, the fighting was much like the Roman gladiatorial model, and while it was theoretically true that a prisoner could work off his or her time even more quickly by volunteering for the fighting pits, there was also the possibility that a severe enough loss would end more than one's career. \n\nAll that Sam knew in regard to her charge today was that he was he was reputed to be a large man and that he never lost. Keeping him in the showers would keep him out of sight of most of the others, keep him a little warm, and clean out his wounds as well.\n\nShe cocked her pistol and set the safety before she slid it inside of the holster strapped to her leg. When D'Arcy indicated that he was ready, they walked after the young woman who was to lead them. There were no words exchanged as they walked through the dripping water and hissing clouds of steam until at last, they were near a series of rectangular pools filled with hot water.\n\n\"What's all this for?\" Sam asked and their guide shrugged, \"Healing tubs. The water is hot enough to make you whimper climbing in, but they tell me that it's the best way to get your body started on fixing itself in a lot of the cases and once you're in, well, most people have a hell of a time getting out. That's your man there -- third tub from the left. Name's Ewan.\"\n\n\"Ewan what?\" Sam asked, and the girl shrugged, \"Damned if I know, Lady. All I know is that Ewan is his real first name. Most people here don't even know that much. They all just call him Samson.\"\n\nD'Arcy looked at the young woman a little hard, \"You don't really give a shit, do you? I mean, I can see that all over you, but is there a reason?\"\n\nShe shrugged, \"I just work here. If you really need to know, talk to one of the hub here; you might get better stuff from one of them. To me, this guy is just a walking turd like the rest of them.\"\n\n\"Why?\" Sam asked, \"Because he's a prisoner or because he's trading off his time for keeping the bunch who run this place rich?\"\n\nThe guard shook her head and shrugged but D'Arcy saw it, \"They taught you right, didn't they?\"\n\nSam didn't really get it, but she watched as D'Arcy nodded coldly, \"I've got the same disease that he has, Muffin. Best not get too close.\"\n\nThe young woman turned away then and Sam asked her cousin what he'd meant. D'Arcy just snorted, \"Ewan's trouble -- in that woman's view because she was trained that way - is that he's a male. That means that to her he's stupid -- at best -- and a piece of bothersome livestock the rest of the time. I'd lay money that this place doesn't have one female fighter and that all of the others in the hub are women. Males are useful to them -- occasionally as guards - and that's about it. We'll see how this goes, but I'm telling Dad when we get back, and then he'll decide how much his profit picture needs this place's bullshit then.\"\n\nAfter that, D'Arcy barely acknowledged their guide. Sam would have questioned it further, but she knew that look on her cousin and she knew that she could always get her question answered; she just might have to wait for a better moment. \n\nShe also knew her uncle. To Clancy's way of thinking it was a man's responsibility to take an active role in the protection and care of any female in any sort of difficulty, but that if she were in an area where her own skills and abilities could help another, well, then he thought that she ought to help just the same. He laughingly called it \"old school equality\" and he was big on it -- since without it, everybody was in for just that much more of a hard time staying alive in the present age.\n\nSamantha loved and looked out for her cousins. It wasn't out of anything more than family, but she also knew the backstory. The two boys were far apart in age; D'Arcy being six years older than Shane. He'd left home at eighteen and came home after a while with his tail between his legs to get a breather from the harsh world outside.\n\nOnly when he came back, there wasn't any home to come back to. Young Shane was the only one that the flock of demons had missed and he'd been starving on his own for ten days out on the little that was left of their remote little farm by then. Shane had watched his parents being killed from his hiding place and it had affected him deeply and caused him to withdraw from everything and everyone -- except D'Arcy.\n\nIt had been D'Arcy who had held Shane for a few weeks' worth of haunted nights and let him cry it out as he'd needed to. It had fallen to D'Arcy to finish growing up fast so that he could raise Shane himself to where he was now a twenty-two year-old man. It was as if the two belonged to some private club which neither one would have ever wanted to belong to, but it was what they had. The only other person who had visitation rights was Sam, who'd kill for them in a heartbeat if needed -- and that had already happened a time or two.\n\nD'Arcy was the sort of man who was a natural leader and that was reflected in his leadership role among the roadmen. Tall, hard, and ruggedly good-looking, he fit the role easily and was incredibly good at it.\n\nShane was a little harder to figure out. He was a bit shorter and far thinner than his older brother and he tended to keep his thoughts to himself. He shared a few features with D'Arcy though; having the same clear and piercing light gray eyes and the long, ash blonde hair which could look almost silver depending on the way that the light hit it at times.\n\nShane had been told by Sam and his brother, but he seemed to reject the information as though they couldn't possibly be correct and weren't being anything more than charitable, but the truth was, that as good-looking as D'Arcy was to a lot of people, that was what it was. \n\nBut Shane wasn't just good-looking -- he was beautiful. Beautiful enough to make the hearts of most girls his age and younger threaten to explode on contact. Females who were his age and a little older tended to get weak in the knees and feel stupid over the way that they seemed to have trouble speaking clearly in his presence -- and Shane's interpretation of that was that his awkwardness and poor appearance was the cause of the trouble.\n\nWomen who were say, in their late twenties all the way to the age where his late mother would be now just had tremendously lusty thoughts about him as soon as they laid eyes on him and if they gave voice to those thoughts, if just scared the hell out of Shane. There was something sweet yet tremendously masculine about him. He looked as though he knew what he was doing -- because he did - and yet, he also had a way of looking slightly lost sometimes and that look was the lady-killer that he didn't even know that he possessed.\n\nAll of that caused Shane no end of trouble and embarrassment, but that wasn't the worst of it, because as godlike and desirable as his appearance caused him to be to females, it was just as effective on males who liked boys.\n\nShane and his brother shared something else which had somehow grown out of the horrific murder of their parents. Like most other men, they would have wanted to find that one perfect girl for themselves.\n\nThe trouble with that was the dark little detail which they kept hidden. It precluded falling in love with almost all girls in the area -- and indeed, in most areas of human habitation. The other thing was that due to their past, they'd grown close and that closeness came to the surface now and then. Whether they wanted it or not, their bond made them love each other because they were pretty much the only ones who understood. They weren't lovers and likely never would be, but as Samantha watched them, she could see that they shared a deeper bond than most married people ever would. \n\nIt made no difference to her. She'd still love them and she knew herself well enough to understand that she was bound to become even more murderously protective of them if anything happened to either of them, though she wanted more than anything for them to find a girl for themselves. They protected her well-being and she protected their hearts.\n\nLooking around, they saw the in-ground tubs and saw a more or less human-looking head resting on a pair of huge forearms. The hair that they could see was long, light brown and matted. There was no telling what color the eyes were, since they were closed and there looked to be a beard, though it was quite obviously under the chin on those forearms -- those very furry forearms.\n\n\"What happened?\" Sam asked and the girl shrugged again, \"Nobody knows, to tell you the truth, friend. He's the hub's favorite fighter, but suddenly yesterday, he said that he was hurt and came down here. Of course, the Ladies didn't believe him and kept sending in other guys to fuck him over and force him back, but Ewan would just kill them and then get back into the water. Nobody will come for him anymore, no matter how much they offer. The Ladies upstairs are some pissed over it, but Ewan has made them all rich, so ....\"\n\nSam nodded and their guide left, saying that she'd come back if she was called, and Sam looked at D'Arcy, who nodded, and then she stepped forward to sit on the edge of the bath. There was silence for several minutes before she spoke up.",
        "\"Hi Mr. Ewan, sir. My name is Sam and I'm here today to see if you're alright.\"\n\nAs she watched, the pair of golden eyes opened to regard her silently for a time. When it came, the voice was low and Sam could tell that it was normally a lot louder than what she was hearing at the moment.\n\n\"If you're here to get me back to the pit, then I need a lot of medical help,\" he growled, \"several weeks in hospital at least. The bosses won't stand for that expense, so they'll order me killed.\n\nI want out,\" the voice grated quietly; \"I'm in for twelve hard. Got two and a half left, but I'll never make it now. If they send me to hospital with you, I'll escape. If they keep me here, I'll eventually kill everybody. If they order me killed, it'll just go sooner and at least I'll be dead.\"\n\nSam looked at that sad face and she already knew. Two minutes in and she was feeling something that shouldn't be. \n\nShe looked down and smiled a little, \"I'm trying to understand and whatever you say to D'Arcy or me is confidential. You'd probably never believe it, but if what I feel is right, we're on your side. Are you hurt at all? I mean, really hurt or damaged somehow?\"\n\nThose brown eyes looked up at her again, \"You need to actually see me so that you can make your report, right?\"\n\nSam nodded, \"Sorry, Ewan --\"\n\n\"No worries,\" he said, \"And you're Sam. Samantha, right? Can I call you Sam? It 'll feel pretty strange calling somebody else that, but I think I like it.\"\n\n\"Sure, \"Sam grinned, \"I think I'd like that, actually.\"\n\nShe watched in a bit of awe as Ewan pulled himself up and out of the pool to sit on the edge next to her. He offered no trouble as she got her requisite samples from his arm. He had several deep wounds but they all looked to be well on the way to healing. Sam didn't know about the therapeutic effects of hot water on the rate of healing, but she could see another reason as to why a man like this could heal so quickly and it had nothing at all to do with water - hot or cold.\n\nAs much fun as it was, she was having a difficult time keeping her eyes on the task at hand. Ewan was closer to seven feet tall than he was to six, and he was covered in enough light brown fur to draw the comparison to a bear, but that wasn't correct. As large as he was, he wasn't thick. Everything was in proportion, in fact, he was built much the same way that D'Arcy was though a fair bit larger and with more body hair.\n\nHe held out his other arm for Sam to take his blood pressure and she sat with a little smile that he found endearing in a way. \"Is something wrong?\" he asked.\n\n\"No,\" she sighed with a little shrug,\" I've just gotta use the one with the longer cuff. This one's too short for your arm.\" \n\nAs she placed the stethoscope against his chest and began to pump up the cuff, Sam began to count, but in doing that, she looked into his eyes and that was when she noticed the hunger there that no bear -- or human - had ever shown.\n\n\"According to your blood pressure and pulse rate, you ought to be unconscious,\" she said.\n\n\"According to the Law of Averages, I ought to be dead,\" he smiled, \"which is why I want out.\"\n\nHe looked away for a moment, \"But nobody ever walks out of the pit free. They offer to reduce your time if you come here to work. I've seen people get out after a time, but it's never sooner than their original sentence and usually it's much longer. They always add some time for committing some bullshit infraction or something. I was here two days. I barely even knew where the washroom was for my section and they slapped on a year for \"Failure to be Respectful.\" I didn't know who to be respectful to, so I scraped in front of everybody. \n\nDidn't matter. I got another year added to my time. Regular prisoners get out eventually. Fighters never make it.\n\nThe problem is that they're outside the law here. They don't need anyone to add time to your sentence. They can just do it -- and they do. No fighter has ever left here with a pulse. They'll never let me go, so I guess I'm here to make my stand.\"\n\nD'Arcy looked around quickly before he spoke quietly, \"Listen Ewan, ...Little Suzy Prison Guard is around here somewhere, standing in the steam listening more than likely, so we oughta be a little quieter.\" \n\nEwan nodded with a curious expression and waited.\n\nSamantha leaned in against Ewan's arm and she reached around to pull his slightly shocked face toward hers as she brought her face to his and spoke in a soft whisper, \"You're wolf-born, aren't you, Ewan?\"\n\nEwan nodded slowly and looked a little bit worried for the first time, \"Does it show that much?\"\n\n\"Uh-uh,\" Sam replied with a shake of her head, \"I guess it just takes one to know one is all. From this close, I can see the gleam in your eye -- and the hunger too. Ok, so this all makes sense now. You're afraid that you can't suppress this before your time is up -- or they won't let you go before it comes out anyway, right?\"\n\n\"Yeah,\" Ewan nodded, \"I got no trouble killing any of the hub. Shit, I'd rip them all apart for the way that they use people to get richer, but I don't want to hurt nobody else.\"\n\nHe seemed to want to be very clear on that point so Sam smiled, \"First off, you're among friends, so relax, ok? How did you come to be here?\"\n\nEwan shrugged, \"I wanted to see a bit of the world, so I left home, headed for the coast and hired on as a sailor. I didn't know anything about that, but they gave me a chance to learn, I guess. Somewhere in there, they figured out that I'm good to have around in a fight and so they made me a Marine. If you show them that you're good, they send you away to learn how to be a Marine. If you're in that program, they send you back to your ship after two years where you're like a little army to protect the ship along with some others.\n\nI spent a few years at it. Of course, nobody ever wondered WHY I'm good at shit like that and can take a beating and like it, but that didn't matter to me. I just kept my secret hidden and I was alright. \n\nOne day, I got a letter from home that said my dad was dying, so I took a leave to go see to my Mom. When I got home, Dad was dead and they was running my Momma off our land. I stepped in so that Mom wouldn't let her other side out -- since she was obviously some upset over everything. Anyway, they killed her as a matter of convenience and they arrested me for being difficult, I guess, and I got ten years hard out of it. \n\nI wanted to minimize the time because of what I am, so I asked for this place because I was told that I could hurry it up even more by fighting in the pits. Of course, I thought they'd play their end fairly, which was my mistake. I got another year like I said, and one after that for refusing to go to bed with one of the hub last year, and ever since, she's had it in for me. Now I don't care anymore. I guess I can die here as well as I can die anywhere else, so ...\"\n\nSam shook her head, \"No, Ewan. I'm gonna recommend that you need to come with us and get healed. You want to escape on the way, that's ok, I guess. My Uncle Clancy'll understand and he's gonna get paid for us coming here anyway so it's nothing off his back, you know? If they try to keep you here, we'll spring you, that's all.\"\n\n\"You can't spring me,\" Ewan whispered, \"They've got lots of good shooters here. I might make it to the gate, but you'd all be dead, and I can't have even more on my conscience.\"\n\nSamantha laughed quietly, \"Ewan, my uncle doesn't just provide roadmen to keep his niece alive on the road. He's got the best roadmen in the business anywhere and one word from me and they'd fight hard to help you get out. There's a reason why they're that good.\"\n\nShe leaned in close enough to rub her cheek against his chin very lightly for just a second before she drew back a little with that endearing little smile of hers, \"I did say it takes one to know one, didn't I?\"\n\nHe looked into her eyes and saw the feral gleam for just a second before it disappeared. The next time that she spoke, he also heard the low growl in her throat, \"I'm wolf-born too, the same as you, the same as D'Arcy here, and the same as every fucking one of the roadmen who brought me here. We're all the same, Ewan. We all understand how it is to have to stay hidden 24/7. We all know how injustice feels. Like I said, one word from me and you've got eight guns at your back, plus mine as well. You were a Marine, you said? What was your specialty there?\"\n\nEwan's eyes were opened wide to hear all of this. \"I was a squad gunner, 'cause I'm big enough to hump all the rounds and shit.\"\n\n\"There's an old belt gun in the wagon,\" Sam smiled, \"I think it's time you came home.\"\n\n\"Ain't got no home,\" Ewan said, looking down, \"Nowhere to go that's safe.\"\n\n\"Yeah you do,\" Samantha laughed, \"you just don't know it yet, that's all. I like you, Ewan. We might be able to make something out of it later, but for right now baby, you just put your sweet self in Little Sam's hands if you think you can trust anybody in the world at all anymore. I've already decided on you, honey, but if that happens, there won't be any using going on. Get back in the water for the next little while, ok? I gotta have a word with a few people, that's all.\"\n\nShe pointed to the pool again, but Ewan touched her shoulder, \"Sam, you don't know me from anybody. I've lived the last eleven years without a friend in the world, now you tell me that I've got some to help me? What do I have to do? I'd do anything in exchange for what you're talking about, but I'm afraid of getting screwed over again, I guess.\"\n\n\"This is no transaction,\" Samantha grinned, \"We came to see about a busted-up fighter. What we found is a broken-down brother, that's all. I already know that there's nothing wrong with you at all that a little freedom won't fix, and the rest, well, I'm hopeful that you like me is all, but even so, getting another wolf-born free is everything that any of us need to feel good about. Now you sit tight, 'kay? I'm gonna be right back.\"\n\nShe had a brief word with D'Arcy, who had heard most of what had been said anyway and you almost couldn't see him for the glow of his eyes and shine of his toothy grin. The two left quickly to find their guide.\n\nOut at the wagon, D'Arcy passed the word and reached for a long bundle of rags. When he tried to get back inside with it, he was questioned, but Sam said that Mr. Ewan required the splints inside for his leg and D'Arcy was allowed in again. When they reached the baths, Ewan was standing up to his neck in the water being berated and threatened by one of the people who ran the place -- and who also happened to be the one who had been spurned by Ewan. She stopped her stream of dismissive spittle when Sam and D'Arcy arrived.\n\n\"What's wrong with him -- specifically?\" the official, whose name was Nancy, asked Sam.\n\n\"More than a few things, I'm afraid,\" Samantha lied as she began, \"His hemoglobin is low. His blood sugar too. I'd say it's likely 'cause he's so fucking malnourished. His right ankle is sprained and he'll need a splint just to stand. This is how you treat your fighters? Holy fuck Lady, do the regulars get any food at all?\"\n\n\"He gets fed enough,\" the woman said, \"and he gets more than the ones who don't fight. Fifteen hundred calories a day.\"\n\nSam shook her head, \"Fifteen hundred? For a guy his size? Are you nuts? He needs that for breakfast. And you want him to fight on that? That's like somebody handing you half a tuna-fish sandwich and asking you to work hard all day cutting down trees. He needs to be in hospital for at least a week just to get some strength back in him.\"\n\n\"No way,\" Nancy said flatly, \"This one's always been trouble. I'm not paying for that. He can stay here and fight until he can't anymore. He's not worth it to me.\"\n\n\"Well, you do have an obligation to provide care, since he is a prisoner under your control,\" Sam countered, \"You do whatever you think is best, but when I get back, my report will spell out the way that you treat prisoners. As far as I know, he hasn't done a thing to merit your refusing him care -- especially since you make money off him in the ring. Once you do that, it changes a lot of things. Fighting him to death is just not an option for you.\"\n\nA lot of things happened in the next few moments as Nancy drew a pistol from her pocket, which unfortunately for her was not cocked. As she sought to remedy that, she told the guard to shoot D'Arcy. As the young woman raised her weapon, he slapped it out of her hand and she scrambled into the steam to crawl after it.\n\nEwan looked over and saw the pistol in the Nancy's hands as she was leveling it at his face. Faster than she could even register the motion, he grabbed the gun in one hand and the back of her head with the other and slammed them together twice. After that, he just took the pistol away. Sam unwrapped the \"splints\" which turned out to be the disassembled old machine gun and gestured to Ewan, who climbed out of the bath to sit and assemble it. He had it together in less than a minute with a piece of belted ammunition in it while Nancy, who was one of the part-owners of the quarry knelt holding her head.\n\nThe young guard came stumbling out of the fog at that point, her gun in her hand to find Ewan smiling at her with the muzzle of the machine gun against her employer's head. \"I think you can guess what you ought to do right about here if you even like your boss a little bit,\" he grinned.\n\nThe guard licked her lips slowly as she looked from one person to the next in this. \"What -- what are you gonna do?\" she asked.\n\n\"We're taking Mr. Ewan away,\" Sam said, \"Once he's in hospital, he'll be under the sanctuary of the place legally, until the investigation is completed. Places like this always think they can just fuck the prisoners over and it's ok. But all you need is one prisoner to get away and ask for asylum and the shit-storm starts.\"\n\n\"Shoot him, Callie,\" Nancy commanded, \"she's right, but we never did anything wrong. All the same, they'll close the quarry and we can't let that happen. So shoot him now or - \"\n\nThe guard surprised them all at that point. Sam and D'Arcy had just thought her to be someone who was only there because it was a paying job and in that, their surmisal had been essentially correct. But they assumed that she was content with the status quo and that was most definitely not the case.\n\nShe lowered the pistol and looked at D'Arcy. \"I'm not killing anybody just because she orders me to. I know enough that if the law comes down, she'd let me hang. So she can go fuck herself as far as I'm concerned. Take me with you? I'd do anything to have a life of my own - away from her,\" she pointed directly at Nancy. \"I've been here two years and I don't want to see what goes on here another day. Please, take me with you when you go.\"\n\nIt took them all a moment to comprehend it, but they agreed -- if she agreed to surrender her weapon, which she did, and her astonished employer became a bound and gagged hostage at that point when they gathered everything together and walked out. One of the other roadmen had a word with D'Arcy and he in turn spoke to Samantha regarding the way that the guards, who were mostly male were outfitted and armed. The wagon was loaded up with Ewan and the woman. The guard looked at D'Arcy questioningly.\n\nHe just nodded, \"You can ride in the wagon. I think you'll be safer there. Just try not to fall out.\"\n\nShe climbed up and they left through the gate under a lot of guns, as Ewan knelt in the bed of the wagon with the machine gun against Nancy's head. \"Don't think about following,\" he said to the guards, \"Just warning you now.\" \n\nAs they thundered off in the proverbial cloud of dust, Ewan hoped that they could make his threat good, since he really didn't know any of these people who had suddenly offered him their friendship and protection at least for a little while. The problem was, that there were a lot of guards available to join in the hunt, and the other Ladies of the hub all made outraged noises about Nancy's abduction, saying that they wouldn't stand for it, when really, they were all a little hopeful that there would be some gunplay involved -- at least enough to kill Nancy with any luck, thereby increasing everyone else's share.\n\nA couple of miles down the road and Ewan removed the gag from Nancy's mouth. She looked at him for a long minute. \"What are you going to do with me?\" she asked.\n\nEwan shrugged, \"In a little while, I won't need you as a hostage at all, will I? I'm wondering just how angry I am at you for adding to my sentence because I refused to fuck you. Part of me wants to shoot you just for that, and the rest of me keeps asking why I should bother. If that part wins, I suppose that I'd just kick you out of the wagon -- without stopping first, of course.\"\n\n\"I still don't understand why you said no,\" she said.\n\nHe laughed a little, \"You think that I'd have jumped at the chance to screw the woman who added to my time for essentially nothing, withheld food just because and insulted me every chance she got and that would be alright as long as I got my dick wet, huh? That makes it all better, right?\"\n\n\"Well yes,\" she said, \"what was the problem?\"\n\n\"I think that you ought to pretend that the gag is still in your mouth,\" Ewan said, \"or it might just go back there again.\" \n\nHe thought about things for a second. \"You um, ... you really believe that we're all stupid? That people like me are just the primitive side of the species? That we're just knuckle-draggers who live under the awning of one huge eyebrow on a sloping forehead and that we're slow to reason and quick to anger?\"\n\nShe looked at him a little nervously for a moment, but then she nodded, \"Yes. It's true, isn't it? If most men had a brain that wasn't connected to their nuts, they wouldn't be in there, would they?\"\n\nHe shrugged, \"Well, MOST men aren't in there, are they? I think that some are that dumb, just like there are people who shoot themselves and others every day because they're too stupid to make sure their guns aren't loaded before they start to clean them, but I don't see what that has to do with their gender.\"\n\n\"That's because you're a man,\" she smiled, \"and too stupid to know better.\"\n\nHe looked down in thought, \"I guess you're right.\"\n\n\"I know I am,\" Nancy replied, \"There can never be equality between the sexes, or men would just become unmanageable.\"\n\nThey rode in silence as Ewan peered back to see the first signs of their pursuit if it happened. Four minutes later his open palm hit Nancy's jaw hard enough to send her sprawling half out of the wagon. He leaned over and pulled her back in. When she came around, she looked up at him through tears of pain and spoke around her stunned shock, asking why he'd hit her and why so hard.\n\nHe looked up as he removed the unfired belt of ammunition from his 'new' weapon and slapped in a new and much longer one, \"I hit everybody the same way pretty much, but I was light on you or you wouldn't be talking anytime soon. And I hit you to make a point which is that you're an idiot. Just because there's nobody arguing if you're in some kind of power, it doesn't make you right in some God-given way. I wasn't thinking. I was just holding my tongue. I'm not all that slow in reasoning; but I might be accused of being a little slow to get pissed off.\n\nBut that's ok, I guess,\" he smiled, \"with enough goading, I get there all the same. So, you were gonna keep me another year for not knowing whose ass to kiss after two days. You added another year because I wouldn't fuck you -- which had nothing to do with your looks or anything. I just didn't think that I could keep from killing you for what you did to me. That's ok too, Nancy. I've found a workaround for that -- though I don't suppose that you're as hot for me now, are you? Seeing as how you probably think I broke your jaw and all.",
        "I've spent a large part of my life making you rich. I got nothing more than a little food out of it but I did find out one thing; that place was never supposed to be for somebody like me. I talked to everybody I could and you know what I found out, Nancy? I'm sure I couldn't have spoken to every single other prisoner, but they all told me that that quarry was designated especially for people who had committed murder. Everyone there told me they were there for killing somebody.\n\nWell I've never killed anybody, but somehow I was approached by this quarry to fight for them for reduced time -- which was a lie. For what I did, I shouldn't have been eligible to go because I shouldn't have gotten ten years hard time for what I did.\n\nBut I did, and then I found out after three years into this that one of the hub had asked to have my sentence turned hard -- so that I could be approached. Do you know who that might have been, Nancy? Any one of your friends back there who might have wanted to twist the justice system so that she could make a little money on a new fighter? I remember you from that day, you know. I know that you were there.\"\n\nNancy's eyes were wide as she lay on the floor of the bouncing, rattling wagon looking up at a very patient man with plenty of reasons to want to cause her harm.\n\nSamantha rode close to the wagon. \"Bad news,\" she said, \"There are about fifty guards after us. We might be able to handle them, but it might not go well, is what they're telling me. And I think they wouldn't mind it if Nancy doesn't make it.\"\n\n\"They'll probably try to kill me before the smoke clears,\" Nancy said quietly.\n\n\"Why would they want to do that?\" Samantha asked.\n\nNancy shrugged, \"Because if it were me back there and there was somebody else from the hub here instead of me, that's what I'd want to happen.\"\n\nEwan snorted, \"And you consider yourself better than the ones inside? I've never killed anyone. For all of this horseshit, I'll never get a fair hearing now. Wherever they send me, I'll be treated like I was a murderer.\" He raised the muzzle of the weapon, \"As soon as it hits the fan, I'm gonna give up this game and play for keeps. And if I gotta live like I'm a killer, well then I guess I'm gonna want to deserve the punishment -- instead of what I got for coming home to help my mother.\"\n\n--------------------------------\n\nThe lid of the crate only put up a token amount of resistance before it gave up the fight with a tortured squeal and lay next to the shipping crate. Billy lowered the crowbar and looked over at Randi, \"Remind me again why we need this?\"\n\nRandi smiled as she straightened up from dragging two full cases of ammunition over, \"I know you've never met her, but one day, I'll introduce you to my friend Copper. She's the one who gave me the idea to drive around in one of these things -- since she's got one herself. But hers is way different, Billy.\n\nThis one can handle a lot of things, but one thing that it's light on is overhead attacks. Copper's Bradley can handle that all by itself -- almost, but I -- we don't have much of anything for that, so that's why we needed the extra bits and this gun here. Ever used one?\"\n\n\"Uh, no,\" Billy laughed as he carefully set the eighty pound gun into its mount, \"but I like it already. The more I get used to your little piggy here, the better I like it, but I've been having the same thoughts, I guess. There's not much defense against flying demons the way it was without this thing.\"\n\n\"Well, don't get to liking it too much,\" Randi laughed, \"I think I'd rather have you driving, since you're a lot better at it than I am. I get all flustered and busy and I'm much better at gunning.\"\n\nThey finished getting everything stowed and after getting the fuel rig filled, they were on their way home.\n\n---------------------------------\n\nThere was a narrow draw up ahead with a right turn at the end of it and everyone slowed to a stop as they approached the turn. The wagon was pulled ahead and sat in the shade of some trees behind a few boulders as the riders rode up a little and dismounted to tie up their horses out of sight on the far side of the slope while Sam and the roadmen hid behind some cover and waited.\n\nIt wasn't more than a minute and a half when the first of the pursuing riders rode down the draw. This was a more or less classic trap and ambush and the quarry's guards rode straight into it. The springing of the trap was up to Ewan and he waited to see how many were following him. There were twenty in the killing ground when he fired from a more or less head-on position while the roadmen shot from the side and in a few seconds there were none living to chase after them anymore, though they all knew that there was a second wave somewhere back down that road.\n\nThe horses were scattered and the bodies dragged into the undergrowth before they mounted up and rode on.\n\n\"Feel better now that you've killed somebody?\" Nancy asked in a sarcastic and mocking tone.\n\nEwan thought about it for a moment and then he nodded. \"Yup,\" he said somewhat grimly.\n\nThey rode on, the landscape placing them in a position to be seen by their pursuers every now and then. Every time, the guards opened fire as soon as they caught sight of their objective.\n\n\"Are they gonna catch us?\" the guard asked Sam a moment later.\n\n\"Daylight's the problem,\" Samantha said, \"We're armed, they're armed, so it's a bit of a draw unless we can improve the odds a bit more. If it was nighttime, they'd already be dead, since we'd be hunting them.\"\n\nHer words finished the train of thought which was running through D'Arcy's mind.\n\n\"Shane,\" D'Arcy called over, \"This is just getting stupid. Help me slow them down.\"\n\nIt was at that point that the captive guard really noticed them. She'd seen and been close to D'Arcy when they were inside, but she knew that the way that she'd spoken had annoyed him. He didn't know it, but it was expected behavior for a quarry guard there. It had nothing to do with her own feelings on the subject of men or any sort of person; it was just part of what she had to do if she wanted to get the two silvers a day in pay.\n\nD'Arcy was large and to her, he was attractive as anything, but even if he wasn't pissed at her, he looked to be a little too fierce to her in a few ways.\n\nBut all of that changed when she saw Shane sidle his horse over to where D'Arcy sat. She could see that they were brothers easily and her eye took in a lot of details in an instant. He looked so cool and calm as he sat on his horse discussing some sort of plan with his brother and she watched the steady and purposeful way that his fingers opened the loading door on his colt and began to empty the spent casings out as he rotated the cylinder of the pistol. \n\nAs she watched, he nodded a time or two to D'Arcy and then he pointed out a feature of the terrain which they'd just ridden through before he lowered his hand again and went on loading the pistol. The colt went into a holster strapped to his thigh and then he drew two more pistols, these a matched set of competition-grade semi-automatics in nine millimeter. To her, they looked even deadlier than the one that she'd been issued since the ones that he had were equipped with barrel weights which gave them a very blocky and businesslike outline. He thumbed the magazine eject buttons on them and their magazines dropped out to the ground before he slapped in full ones, cocking each pistol and setting the safety on it before he jammed it into one of a pair of holsters at his waist far above the one with the old Colt in it lower down.\n\nD'Arcy carried a pistol and a long, double-barreled rifle in a large caliber. Shane always referred to it jokingly as D'Arcy's 'elephant gun'. It was slow, but then D'Arcy figured he had plenty of firepower in the group, so he handled the long shots whenever the need arose and the thing packed enough of a punch to likely drop a rhinoceros -- not that there were any around which needed it at the moment.\n\nFinally, Shane pulled an ancient and scuffed-up M-14 rifle from a scabbard on his horse. Changing the magazine for a full one, that went back into the scabbard and Shane continued to listen to D'Arcy intently for another few moments. The ex-guard saw his head begin to turn in her direction and she tried to decide what his reaction to her might be if he turned his head far enough to see her.\n\nShe knew that she wasn't the prettiest girl in the world or anything, but just this one time, she really ached to be worth at least a little more than the sort of glances which D'Arcy gave her. But she'd been working her shitty job and it had been a long shift, not to mention that she'd gotten a little dirty crawling around in the steam looking for her gun so she knew that she was likely out of luck right off the hop. She really couldn't have said why it was important to her right then either. She had issues of her own and in her mind, she'd all but accepted that she'd never find somebody without some serious settling, though for the most part, she wasn't even looking and never had been.\n\nTo her surprise, Shane's gaze went right past her, since he was looking for details in the landscape and then he swept back, right past her again before the double-take. Which became a triple and quadruple-take right afterward and though she was startled that he'd look that much, she was able to keep her cool and nodded to him once very briefly.\n\n\"I'm a good shot,\" she said, \"and I can help if you trust me.\"\n\nShane smirked a little, \"And why would I want to trust you?\"\n\nShe reached up and made a passing attempt at getting her hair out of her eyes, \"Do you know what happens to guards who became hostages and don't die trying to get away?\" she asked. \"At best, in the larger places and jails, they ditch you quietly and you're out of a job. Way the hell out here, I'm not worth much more than a bullet now. I was serious when I asked to be taken along.\"\n\nHe looked as though he was toying with the idea for a moment, \"Hey, grumpy-bitch,\" he grinned at the other woman in the wagon, \"Izzat true, what she says?\"\n\nNancy kicked the guard as hard as she could and her feelings on the subject were rather plain in her eyes, \"Give me a gun,\" she snarled just before she spit in the guard's face, \"You don't even have to untie my hands. Just give me a gun and I'll blow her away before I shoot Ewan.\"\n\nEwan turned and smiled at Nancy for a moment and she smiled back.\n\nThen he hit her again and sent her sprawling. When she picked herself up, she brought her hand to her face and felt the blood and the way that her lip was swelling rapidly.\n\n\"If you say one word now,\" he said, \"I'll hit you hard enough to kill you.\"\n\nShe tried to spit in his face as well, but it took her too long because her damaged lips wouldn't respond quickly enough and she found herself on her face next to bag of horse feed.\n\nD'Arcy's attention had been drawn by then and he smiled down at the ex-guard, \"Hey, you mean what you said?\"\n\nShe nodded, \"Try me. And my name is Callie.\"\n\nD'Arcy reached into the pocket of his long coat and drew out Nancy's pistol. While they were bringing Ewan out, he'd swung out the cylinder of that pistol and emptied the cartridges into his palm and pocketed them and the gun. He was certain that Callie hadn't seen it.\n\nHe looked at the fancy filigree work on the piece for a second, \"You need to convince me that you're for real. Even if I give you a chance, you'll have a lot of guns at your back, so move slow so that nobody gets confused. Would you do what I tell you to do?\"\n\nCallie looked up through her long black hair and nodded with a thin smile, \"Sure.\"\n\nD'Arcy handed the gun to Shane, \"You look like you're thinking of trusting somebody one time in your life. I dunno why, but I kind of like it on you. I'll leave it up to you.\"\n\nShane chuckled quietly as he looked back at the road, knowing that they couldn't waste much more time like this. \n\n\"I'm gonna give you this gun, Callie\" he smiled, \"You won't believe me, but even if you shoot me, you'd need every shot in it to hurt me much and by then, D'Arcy will save you -- so he can skin you alive later over a fire. So I'm giving you your chance. You want to play along with us and we get out of this, I'll do what I can to keep the law off you. \n\nIf that's what you want, then when I give this to you, I want you to shoot Snaggletooth there. Do you think you can do that for me?\"\n\nHe watched Callie's dark eyes twinkle from behind her windblown hair as she nodded.\n\nHe handed the pistol over and Callie seized it so quickly that it was out of his hand almost before he knew it. She spun around and grabbed Nancy's hair, lifting her head up at what must have been a painful angle. The whole thing was done almost as one swift and fluid motion. Callie's hand slammed down into Nancy's hair, she yanked her head up, placed the muzzle of the pistol against the woman's forehead as her thumb drew back the hammer and she pulled the trigger as she looked straight into Nancy's shocked eyes.\n\nThere was a loud click and then Callie looked up and over her shoulder, \"Hey, you said to shoot her. Either give me a full gun or tell me I gotta kill her with this even though it's empty. I'll do that if you want, but it's gonna take a lot longer that way, just sayin'.\" \n\nShe turned to look at Nancy, \"If you spit again, I swear I'll staple your lips together.\"\n\nD'Arcy reached down, \"Here, Callie,\"\n\nShe found six cartridges in her hand, so she loaded one and grabbed Nancy's hair again. As she pulled the woman's head up, Nancy began to whimper, all the fight gone out of her. Callie pulled back the hammer, but she found the twin barrels of D'Arcy's rifle under the pistol and pressing upward. She looked up.\n\n\"I admire your determination -- or your hatred -- whichever it is, but now I DON'T want you to shoot her.\"\n\nCallie smiled up at them both, \"I was in the army for a little while, they taught me that if you get no new orders, you're s'posed'ta keep doing what your last orders were.\"\n\nThe brothers looked at each other with raised eyebrows. D'Arcy didn't say anything, but Shane nodded, \"Well, I kind of like her.\"\n\nIt was worth a quiet laugh from D'Arcy as he rode off a little way. \"Ok, don't shoot her unless you're about to get captured, Callie, but I don't think that'll happen. Just sit tight and try not to draw any fire.\"\n\n\"What if she tries to call them or get their attention?\" she asked.\n\n\"Well, I don't think she's that stupid, but if she tries to do that, THEN you can shoot her, ok?\"\n\n\"Whatever you say, Boss.\" Callie smiled and looked at Shane. She beamed for just a second and then looked into Nancy's eyes, \"Two minutes, and I get more job satisfaction than I did in two years with this rich asshole.\"\n\nSomething sounded a little odd to Shane then so he asked, \"How rich, exactly?\"\n\nCallie looked over at him, \"C'mon, use your head. She's worth tons, just by the way that she's dressed.\"\n\nShane looked hard, but drew a blank, \"I don't see any more than a woman in work-style pants and a shaped blouse or whatever that is. What am I missing?\"\n\nShe smiled at him and spoke in an explanatory tone, \"She's wearing a fucking bodice, Shane. Do you know how much it costs to have one made and fitted? It would take me three months to be able to have one made for me -- and that's if I didn't waste any money on food.\"\n\n\"But you're wearing-\"\n\nCallie shook her head, \"I'm wearing a leather breastplate. It's held on at the back by a pair of wide straps and it's uncomfortable as anything. Not the same. She gets to have her tits held by a bodice while the rest of us have to use a strip of cloth to hold our boobs. Really rich women have brassieres made. I'll be she's got a few of those too.\"\n\nShane smiled in as goofy a way as he could, \"I'll have to think on all of this. I'm sure there's something of a lesson for me in there somewhere.\"\n\n\"That'll be good for a week and a half of deep thought from a man,\" Nancy said and Callie lowered her pistol slowly. \n\n\"Ewan?\" she asked and he nodded.\n\nThen he slapped Nancy again.\n\n\"I'm putting the gag back in,\" he said, \"She keeps this up, I'll cut my hand on her teeth sooner or later. Probably get infected.\"\n\nBack on the road, the first of the guards rode over the small rise and D'arcy whispered the name of his horse. The animal had been trained to recognize the cue and stood stone-still while D'Arcy sighted in and pulled one of the triggers. Three hundred yards away, a man fell out of his saddle.\n\nThe timing was about perfect, because in the time that D'Arcy had been aiming, the first guard had ridden a little nearer and a second had come after him. He was followed by two more, but they were just coming over the rise when the first man fell. They stopped and doubled back, leaving one man still out in plain sight. That man now felt terribly exposed and alone as he looked around, wondering where the shooter was. During that time, D'Arcy whispered the horse's name again.\n\nAs he turned his horse around slowly, the guard in the saddle felt as though all of the skin on his body was waiting for the arrival of a bullet from somewhere. He tried to look unconcerned but his fear was plainly evident. From D'Arcy's point of view, the man was disappearing behind the rise, but it didn't matter. Before the man was out of D'Arcy's sight he toppled from his horse to land in the dirt.\n\nD'Arcy kept his motions to a minimum as he sat on his horse behind a pine tree reloading slowly, since he knew that all of the remaining guards in the party would be trying to catch a glimpse of him now. All the same, his motions were noticed and three men raised their weapons. Shane was hidden from view a lot closer and opened fire from behind a boulder, hitting all three.\n\nAs Shane slipped away, D'Arcy shot anyone who looked to be too interested in finding Shane, and so they covered each other and frustrated the men pursuing them.\n\nThe brothers met back at the wagon. \"Let's try to get across Hampden's Ford while we've got a minute for it,\" Shane suggested and D'Arcy nodded. The next few minutes were covered at a breakneck pace, but they reached and were crossing the ford before the guards rediscovered their courage.\n\n----------------------------\n\n\"What the hell do you suppose all of that shooting's is about?\" Randi said from their vantage point where they'd stopped for a minute as they watched the proceedings in the valley down below them.\n\n\"I dunno,\" Billy said as he lowered his binoculars and looked over, \"but I'm kind of partial to the ones with the wagon. They're outgunned, but they seem to have a method for making the ones chasing them overextend themselves. Every now and then, they manage to pick off the ones chasing them one at a time. What do you want to do? I guess we could just sit here tight and block the road.\"\n\n\"I don't want to do that,\" Randi said, \"I don't know the story, but I think I'm with you. Let's just pull off to the side so the wagon can get by. I'll load up the main gun and we'll find out soon enough, I guess. And wear your headset. Once things get busy, you'll never hear me without it.\"\n\nAs Billy moved the tank as she'd said, Randi loaded up a canister shot and placed another round on the floor nearby. She sighted on the road and they waited.\n\n-----------------------------\n\nNancy thought about things as she tried to keep from being dislodged from the back of the wagon from all of the violent bumps and motions. She didn't know what her future held now, but at least Ewan hadn't tossed her out onto the road. She hoped that it wasn't just something which had slipped his mind in the excitement.\n\nHe sat as hunkered down as she supposed that a man like he was could get, ever watchful for a clear shot as they rattled along, escorted by the strangely silent roadmen, who seemed to be able to communicate among themselves perfectly well using only exchanged glances and the odd hand signal. From the occasional look that she'd gotten at any of them, they all appeared very similar -- eight tall and lean men with taciturn expressions as they thundered along looking over their shoulders whenever the roadway ahead gave them the chance at a few seconds.",
        "Her gaze wandered over to the young guard, who sat on the bed of the wagon near her. She found that she couldn't fault her too much in any of this -- even though she'd have shot her in the face for switching sides if she could. Being a guard was a dead-end job -- if it didn't kill you somehow. Little wonder, she thought that the guard had seen a chance to change her life in the face of one of the handsome leaders of this group of roadmen, because if anyone in this part of the world could say that they lived life on a thin and fast-traveling edge, it was them. Their occupation meant that every day was a risk to be taken and hung onto with both hands -- unless one happened to be shooting a pistol at the moment, she supposed.\n\nThe river which ran through the valley wasn't much to write home about, being perhaps three feet deep and only thirty feet wide for most of its length. But it was a fast-flowing one with a lot of boulders hidden in its depths which precluded crossing it in most places. Hampden's Ford was about the only exception for about twenty miles to either side. At the ford, the river was only about a foot or less in depth but it was over three hundred feet wide there and moved rather slowly. As they made their way across, Rudhi probed their thoughts and decided that of the two groups, the ones who were running stood higher in her consideration so she decided that she'd help them if she could.\n\n\"Here is a chance to use what you have learned with your sword,\" she said to Randi, \"Let's go for a walk.\"\n\nRandi looked at her as though she had a few doubts, while Billy looked as though it was his considered opinion at the moment that she'd lost her mind, but he said nothing as the pair climbed out of the hatches and began to walk down the slope toward the ford.\n\nAs the wagon and the roadmen began their climb out of the fords, they looked up and gaped at the two beautiful women who were walking toward them.\n\n\"Ma'am,\" D'Arcy began when they'd gotten close enough for conversation, \"don't go down there. We're being followed by guards from the prison quarry. We're helping that man in the wagon get free, but the guards who are chasing us are a bit upset at us and likely won't be inclined to be too polite to anyone right now.\"\n\n\"We know,\" Rudhi said with a smile, suddenly seeing the roadmen for what they were, \"Go on up the hill and you may hide behind that large thing there. It belongs to my friend and we'll protect you if we must.\"\n\nD'Arcy stared, his mouth open as he saw that they weren't going to heed him for one thing, and he was a little astounded to see them here like this at all, but he shrugged and motioned for his people to get up the slope and behind the object that had been pointed out to him. At least they could hide behind some cover while having the advantage of being up-slope from their pursuers.\n\nStill, he remained behind as he watched them wade out into the shallow water wearing cloaks and not all that much more. He'd never seen anything like it in his life.\n\n\"The water's freezing,\" Randi complained quietly as more of a statement than anything else.\n\n\"Use the feeling to force your will,\" Rudhi said as they moved apart and took positions near the middle of the ford about two hundred feet apart.\n\nSince there hadn't been any shooting for the past fifteen minutes, the leader of the guards urged his men forward until they stopped on their side of the stream and stared as the two women began a series of very graceful movements which looked like a form of ballet. At one point, they both extended their right arms out to the side and a sword appeared in their hands and the nature of the movements became clear.\n\nThey were series of ritualized movements against an enemy who was not there other than in their minds for the purpose of practicing the motions at a speed many times slower than they'd be made against a living foe.\n\nRudhi was watching the guard men intently. \"We wait until the first ones make ready to shoot their weapons, \"the words rang inside Randi's mind.\n\nThey might have kept their guns down, but they could all see D'Arcy quite plainly and as they began to cross the shallows, a few of them raised their guns.\n\nThe next motions that the pair in the stream made were more sudden, looking as though they were thrusting their swords at an invisible foe, but as their reach attained full extension, there was a ripping sound, not low to start with, but rather high in pitch and it went low, ending in a rumble. From a point directly under the tip of each sword, a long geyser of water shot straight up into the air about fifty feet and shot outward for hundreds of feet as though something from the sword agitated the water into a long, and straight plume. \n\n\"The water is the key,\" Rudhi said in her thoughts, \"if you were on land, and sent this across land, it works, but the water shows it better. From a point in the water as we now stand, it works and will continue on out of the water onto the shore if we desire it. But it will not work from land across water to land on the other side. It is just the nature of what is sent.\"\n\nEvery time that the motions were made, another hissing wall of white water shot up. At the far end of each one stood a guard who had been aiming at D'Arcy. At that point the geyser turned crimson and when the wave subsided, there was no trace of the man -- other than some red froth in the water. By the third time, the men were beginning to see that their numbers were decreasing and so they began to aim at the women.\n\nBut whenever they pulled the trigger, they found as their guns were firing, that the women were not in the same place anymore. They'd moved in some eerie way to another place in the stream. \n\nRandi saw a guard standing behind a boulder, using it to steady his aim and she sent a line of disturbed white water rising straight up in a direct line in his direction. When it reached the shore, it went right on, throwing clods of mud and sand into the air until it got to the boulder. There was a very short pause of perhaps a tenth of a second and then the boulder shattered with a bang. The man behind it came apart with a lot less noise.\n\nThis went on for a minute or so until at a sign from Rudhi, they both dragged the tips of their swords around themselves in an arc, which pelted the men on the bank with a painful and deadly barrage of ice shards. When it had stopped, there was no sign of either the two women or D'Arcy and the guards prepared to cross. They were nervous now and went cautiously.\n\n\"How did you do that?\" D'Arcy asked as they walked and Rudhi smiled, \"There are things about you and your men which I could ask about and you would have no reply. You only know what is. This is the same. My name is Rudhi and this is Randi, my friend.\"\n\nD'Arcy nodded and held out his hand, \"I'm D'Arcy. Thanks for your help.\"\n\nAs they crested the ridge where the others waited behind the rumbling tank, Randi said, \"Stay behind this, and don't come in front of it for anything, ok?\"\n\nD'Arcy nodded, \"What are you going to do?\"\n\nRandi smiled down at him as she climbed onto the Sheridan, \"We're going to remove your problems -- well, those ones anyway. You ought to hang onto your horses. It's gonna get loud in a minute.\"\n\nNancy had worked the gag out of her mouth by this time. She looked up from the bed of the wagon, \"Those men are guards from the work quarry that I'm a part-owner of. You'll get life in there for what you've done. I'll recommend that you be execut-\"\n\n\"Can somebody shut her up?\" Randi asked and Callie nodded, \"Ewan?\"\n\nNancy ended up sprawled on her face again and Callie tied a gag on her.\n\n\"I think you're getting to like that a little too much,\" Sam said.\n\n\"Just trying to help,\" Ewan said, managing to keep a straight face.\n\nRandi slid in through the driver's hatch and called up to Billy who stood holding that heavy machine gun above the hatch, \"Come down, Billy. The way this thing moves when I shoot, the hatch ring up there will break your ribs or something. \" He answered in agreement but climbed out and jumped off the frame near to the roadmen, \"I'm Billy,\" he said, \"hang onto your animals and cover your ears for a minute.\" He stepped over to the wagon and stood between the two horses, holding onto their bridles. Inside, Randi watched and adjusted her sight picture. Then she slapped the firing button.\n\nSheridans have a drive wheel and a take-up wheel on each side for the tracks. Between them, still in the tracks, are the road wheels and on Sheridans, there are five sets on each side. Sitting as it was, the main gun was pointed down -- or depressed slightly. The recoil, when it came was in a very slightly upward direction and the result was that when it fired, the first three sets of road wheels left the ground and then the tank slammed back down. Billy was thankful that Randi had remembered to warn him. The turret had moved quite a bit and his ribs would have been very sore for certain if she'd forgotten.\n\nThe buzzing of the darts sang off down the hill and the rest of the guards gave up the pursuit in the next few seconds, since most of them were gone. Billy sprang up onto the turret and pulled back the handle of the heavy machine gun. As the smoke cleared, the last of the guards perished and the few living horses ran off in terror.\n\n\"Did I hit any horses?\" Randi called up.\n\n\"A few in the middle of the stream, two or three, I guess,\" Billy answered, \"The rest are ok, I think.\"\n\nRandi shook her head, \"I think I've just wrecked the ford for everybody. The bottom's got to be covered in darts now. Horses who cross will go lame.\"\n\nRudhi shot upward out of the hatch and a minute later, she returned with two handfuls of the projectiles and a horse which was walking beside her nervously.\n\n\"How did you do that?\" Randi asked.\n\nRudhi shrugged, \"Magnetism,\" as she placed the darts on the ground off the road and looked around. When she saw D'Arcy, who stood looking shocked and deafened, she walked over.\n\n\"I think you will be safe here for the night and I think that we will remain here too, but I have a problem now. This horse follows me and I can't carry her inside. I think that when Randi's machine moves, the horse will be frightened. If you are going the same way that we are, would you tie her to the wagon for a while? As long as we are on the same road?\"\n\nD'Arcy looked over in more than a little awe, \"Lady -- I mean, Rudhi, for what you and your friend have done, I think we owe you that much at least. Why do you want the horse?\"\n\nRudhi looked down a little ashamedly, \"My answer will show to you that I am not from here.\"\n\n\"No shit,\" grinned Shane, though it earned him a withering glance from his brother.\n\n\"I come from a place where we rode beasts, but they were not anything like horses. Their minds were very different from these creatures. To get them to carry us and serve us involved things which were normal and usual for those animals, but the same things would be cruel to horses.\"\n\n\"How do you mean?\" D'Arcy asked.\n\n\"If I wished to ride one that I owned, as an example, I would walk up and strike it on the shoulder. That is how to make it even notice me. Such a thing cannot be done to a horse. The first touch would be an injury and even if it lived, the horse would be ruined for nothing. I see how everyone here rides horses and I think that if this one likes me, I would like to learn how one rides a horse. I think she seeks to make a friend in me.\"\n\n\"What kind of horses did you have?\" Shane asked and Rudhi shook her head, \"Not horses.\" She held out her hands and in the space between them, they saw lizard-like things, six-legged lizards which were very fast. She lowered her hands and they stared at her.\n\n\"Where the hell was that?\" Shane whispered in awe and she shook her head again, \"Far away. Long ago.\" She looked up at D'Arcy, \"Would you help me?\"\n\n\"Wait a minute,\" Shane interrupted quietly, \"You mean you rode those things and had to hit them to get them started? You don't look like you could hit a horse and cause it any damage.\"\n\n\"Shane, use your head,\" D'Arcy said with a smirk, \"After what we just saw her do, I think I believe her. If you need it proved any farther, I'll ask her to hit you.\" He turned to Rudhi, \"Sure, Rudhi, but I don't know how far we'll be travelling together. But if you rode those things before, I'm sure I could have you riding a horse in no time.\"\n\nHe began to examine the saddle and the bags on the horse as Rudhi stood by. \"What did you mean when you said that there are things about us that you could ask about?\"\n\nRudhi shrugged, \"I am the last of my kind -- as far as I know and can believe. I am not human. Randi began as a human, but I changed her a little because she was dying when we met. Now she is still a part human, but she has changed the rest of herself to be something which lived in another place with the people of her male there, Billy. He is not human either. Actually, he is a demon who tries to make friends wherever he goes. He is not murderous without a reason to be.\"\n\nAs D'Arcy looked at the ones she'd mentioned, she reached over and put her hand on his shoulder so that he'd look at her. \"I can see that you and your people here are not human either, not completely, and I wish to know and see more, if it is allowed. The females in the wagon are the only true humans here.\"\n\nD'Arcy looked uncomfortable, \"Are you sure that you want to see that? We don't usually show ourselves while we're working.\"\n\nRudhi nodded, \"Yes. Very much. To most people here, I can see and know many things.\" \n\nShe smirked a little at him, \"It makes me appear to be very wise, but that is not so. I am only very different and alone. Once, I was to be married to two males -- high ones among us -- and we loved each other very much. Now, everyone is long-dead and I am here. I have learned that the way that we loved is too harsh for most of the people here. \n\nNo,\" she said, shaking her head sadly as she revised her statement, \"for all of the people here. \n\nBut I met Randi and now she has her male and I have seen that it is possible to love someone and not be hard about it and I wish to try again with someone. I saw you today, and if you have no female, then I want to see if I can --\"\n\n\"You can't,\" D'Arcy said, shaking his head, \"Sorry, and I mean no disrespect to you. I find that I like you, Rudhi, but there are two things here. One; we'd need to get to know each other to a fair degree unless you only want something quick, and for that, I'd tell you to find someone else. I'm not like that.\n\nTwo, I'm not sure that you know what it is that you're asking.\"\n\nShe put her hand on his chest lightly and she smiled up at him, \"I know that my hand now rests over fur. I know that you are all wild-looking creatures as a people, and that is what you are to me, though most humans would never agree.\n\nI know that all humans and even your people here see gray eyes right now when they look at you, but that is not what I see, D'Arcy. I see yellow eyes -- quite wild and beautiful for me to look at.\" \n\nShe looked over her shoulder and saw that no one was looking at them, so she reached for his cheek, \"My hand is not on your cheek, because your cheek is a little farther back on your face. My hand is on the side of your snout in truth and I can see your teeth quite plainly. Can you see mine? I can say that of all of my features, they are the things which cause humans to fear me as soon as I smile whenever I try to make a friend.\n\nThe marks on my face make humans nervous, though they were nothing and normal for my family where I am from.\" \n\nShe sighed, \"Everything that I do is wrong in a way. I must wear far more to cover my body than I wish here. Women think badly of me and some men think that I seek them in lust.\n\nWhat I see in you is a strong creature, and one who is attractive to me and it was my hope that you would be strong enough to be someone who I could know and love, but ...\"\n\nShe turned away and looked down, \"I think now that I was right before - that there is no one here like that for me.\"\n\nShe began to walk away, but D'Arcy reached for her and she stopped, looking up at him quizzically. \n\n\"I don't know why I want to argue,\" he said with a small smile, \"but I think I need to make something clear to you, Rudhi. What I am, what you see is something which humans fear as well. We are what they call werewolves here, but among ourselves, we say that we are wolf-born -- those of us born this way and not bitten. Even those ones can say it and we don't argue as long as they try to get along. \n\nWe hide this way so that we can make a living and survive. It's why we all look a little alike to some people who are observant enough. You say that you want a friend? Well, ok, I'd say that you've made a few here today, if you're a little careful in how you approach things. But don't just give up and walk away. I do like you and I think you're pretty fascinating and I hope you don't need to be told that you're beautiful, since the word is pretty weak when it's applied to you.\n\nBut I'm not in for anything quick or short. I've wanted somebody for a long time. But there aren't many females around here.\"\n\nRudhi tilted her head just a little as she looked into his eyes, \"I do not know if I could be a good female for one like you,\" she said as she reached for D'Arcy, her hands encircling his waist so that she could draw herself up a little, \"but I wish to try to be.\"\n\nHer soft breath tickled the whiskers which were there on his face unseen by anyone but her as she moved her face closer to his jaws. \n\n\"I am not afraid of you and what you are, D'Arcy,\" she smiled softly; \"The truth is that I have never seen anyone so wondrous to me.\"\n\nShe kissed his lips so lightly and softly that D'Arcy let out an almost silent groan and Rudhi sighed as they looked at each other. \"I can see the man that you show yourself as and you are so fine to see, but I also see the truth which lies underneath and for the first time since I was brought here from my world, I see a male whose young I would bear gladly if I only had the chance of it.\"\n\nShe kissed him again and stood on her tiptoes as she threw her arms around his neck when she felt his arms encircling her. When they drew apart, they were both out of breath and all the rest were grinning, though Sam likely smiled the most. \n\n\"Can I have a chance, D'Arcy?\" Rudhi asked and he nodded a little uncomfortably, but then he looked into her blue eyes, \"I want that too.\"\n\n\"Well that's just awesome, \"Sam said, as she noted the pausse in the moment, \"And I meant that, so don't you dare fuck this up D'Arcy, you hear me? Just put all your 'distant D'Arcy' crap on hold for her and you ought to be ok. Uh, can I talk to you a minute, Rudhi?\"\n\nRudhi nodded and they stepped away a little. \"We've been talking, \"she said, \"and we're all gonna spend the night right here, but the other girl in the wagon would like to talk to you if she could. She started out on the wrong side of this, so now she's a little nervous about getting on D'Arcy's bad side -- though I think you've gone a ways to keeping him a little calmed for the moment.\"\n\n\"Have I done something wrong already?\" Rudhi asked, and Samantha laughed, \"No, not a thing. Don't mind me, I'm D'Arcy's cousin. Shane's too. I'm happy if something happens for you and him. He gets a little mean out of loneliness sometimes and if you knew him the way that I do, you'd see that it's really not like him.\"\n\nRudhi nodded a little thankfully and she saw Callie standing a little away from her, \"What do you need?\" she asked.\n\nCallie looked uncomfortable and Rudhi tried to smile a little, \"I will not harm you. What is your name?\"\n\n\"I'm Callie,\" the girl said, \"I heard you were looking to learn how to ride. I can teach you if you'll go with me and help me. I think we can be back in an hour or so.\"",
        "\"Where do you have to go?\" Rudhi asked.\n\n\"I'm pretty sure this is the place,\" Callie said.\n\n\"What place?\" Rudhi found her words being echoed by Shane's, who now looked embarrassed, \"Sorry.\"\n\n\"There's a wolf hunter who lives not far over that ridge there,\" Callie said, \"I want to go see if I'm right, and if I am, I want to kill her.\"\n\nShane's eyes opened wide, \"Why? You're human.\"\n\n\"I don't know if you'd understand it,\" she said, \"She took somebody from me. I can't do anything to bring him back, but I want that murdering piece of shit dead and cold, as long as I'm this close. I don't know if I'll ever get another chance.\" \n\nShe looked at Rudhi, \"Will you help me? Just go with me. You don't even have to do anything unless I fail and she kills me. I'd like it if you could kill her then, so at least it wouldn't all be for nothing. The things that I just saw you do, you must be able to kill a bounty hunter without thinking on it too hard.\"\n\nShane looked as though he couldn't comprehend her words, but Rudhi got it right away. \"He was not human, but he was everything to you, no?\"\n\nCallie's head hung down as she nodded, \"I was six when demons killed my mother. I found out when I walked all the way home from school alone since my mother wasn't there to meet me because she was dead. When I got home, there was nothing left but smoke and fire. \n\nBobby found me three days later. He was the same as what you are, Shane.\"\n\nShane looked a little shocked but Callie nodded at him, \"I know what to look for, believe me, ok? I guess most little kids would have been scared shitless, but I wasn't. Bobby was only about sixteen then and on his own. He kept me alive. Bobby fed me and took care of me and he held me at night when I cried for my mother.\n\nHe was like my brother and my father all rolled into one. Bobby raised me. I guess we were together maybe ten years and I learned everything from him; how to count and read and work numbers and ride and shoot. We never had much, but we had each other. Bobby was everything to me. He was my family.\"\n\nShe looked up with her eyes blazing. \"Until that hunter skank decided that Bobby had to die for what he was. She made out like she was in love with him and while he was distracted over a human woman who said she wanted him, he made his mistake and she shot him for his fur. \n\nSilver bullets. Nine silver bullets and then she skinned him and turned in his hide for the bounty. His body went into a hole in the ground and that was it. The only person who loved me in the world and he was gone so she could get richer.\"\n\n\"How much was the bounty?\" Rudhi asked.\n\nSam turned toward Rudhi then, \"Two hundred silver -- or forty gold,\" she said, \"It's been the same on us for a long time now. You'd think we'd be worth a little more to cover inflation at least.\"\n\nRudhi's eyes opened wide at that, but Samantha waved her hand and shook her head, \"it's a figure of speech. Forget I said anything.\"\n\nCallie said, \"Look, you don't know me and I know that you don't have any reason to want to help me, but if you could, I'd do anything to repay you.\"\n\n\"Callie,\" Shane said quietly, \"I know how it feels to lose everything. If you need help, I'll go with you.\"\n\n\"Thank you, but no you won't,\" Callie said determinedly, \"I don't know you much, but I like you a lot, Shane. I think out of anyone, a wolf-born would be in the most danger from her. I'm not doubting your ability or your courage or anything at all. It's just that the way I see it, she's made her living at killing wolf-born and since she's still alive, she must be at least a little good at it and I'd rather that you don't lay anything out on the line for me. Rudhi would be like an unknown to her. I think I'd like that better. She wouldn't see it coming.\" She looked over, \"I just don't think that I've got anything that you'd want.\"\n\n\"I think that you do,\" Rudhi smiled, \"and we can go now. Just help me to find a way to get onto this horse.\"\n\nSam walked back to th ewagon and saw Ewan's questioning look. \"We're staying here for the night, so right here's where I get to clean you up a bit.\" She set her bag down on the wagon and withdrawing a pair of scissors, she began to trim his beard shorter so that it was just long stubble on his face. He'd sat holding still for it, still not daring to believe that he was on his way to freedom. As Sam worked, he had hie large hand on her hip as though he was afraid that the dream would end and he'd find himself back at the quarry again. \n\n\"I like your hand there, Ewan,\" Sam smiled, \"but is there a reason?\"\n\nThere was just a hint of a tear in his eyes when he spoke, still in a low and very quiet growl as though he was a little ashamed, \"If you disappear, I hope that by touching you that I can go along. I don't want this to end yet.\"\n\nSam stopped and stared at him for just a moment before she took him in her arms - which was a little silly, since there was far too much of him to hold properly lie that. \"Oh Baby,\" she sniffled with her own tears, \"I understand you, but you've gotta believe more. Believe in me, Ewan. I'll never let you go if you hang onto me. I've dreamed about finding somebody like you. I always have.\"\n\nShe opened her eyes and found herself looking into Nancy's hateful glare. \"And you, you fucking exploitative entitled snot, this is where your nightmare starts.\"\n\n\"What are you going to do?\" Nancy sneered, \"Kill me?\"\n\nShe watched the feral gleam in Samantha's eyes become an unearthly glow, \"Fuck no,\" Sam growled down low, \"I wouldn't dream of it. No death for you, though you may want that after a while. If it's up to me, you don't get death,\" she began to smile as she pointed to the others who were seeing to their horses.\n\n\"You get roadmen, if I can convince a couple.\"\n\n\"To what?\" Nancy asked, \"To rape me? You think that'll crush me or something? Fuck you. Bring it.\"\n\n\"Don't ask for what you don't want,\" Ewan said quietly, and he wasn't being particularly hateful anymore, \"You don't even know what you're talking about.\"\n\n\"Sure I do,\" Nancy spat, \"They're gonna rape me. Hell, a good fuck was what I wanted from you. So what's the difference, other than there'll be more than one man involved and committing the crime, I guess? \n\nI guess I'll live through it and the first chance I get, I'll swear out warrants on all of you. I'll laugh when they drag you all to me in chains where you really belong anyway. If I'd known that you were a big dog, I'd have given you kitchen scraps, Ewan.\"\n\nEwan snorted, \"I thought that's what I was getting.\"\n\nEwan had been feeling a little sorry and charitable toward the woman up to now. But as usual, she'd managed to piss on that in his mind. She didn't see it, since he gave no outward sign, but mentally he shrugged and closed a door on her. \n\nHe looked over and made certain that her bindings were tight enough. \"Wrong again, Nancy,\" he said, \"No man is gonna rape you. Take a good look. They're not men, any more than I'm a man.\"\n\nSam leaned close to Nancy and whispered so that only she could hear it, \"You can call it whatever you want. They won't kill you while you're all having fun together. I'm actually looking forward to seeing you as you start to enjoy it, but that won't be the final payoff - the final reward that I have in mind for you.\"\n\nShe smiled as she whispered it even more softly, \"When they're done with you, they'll bite you, Nancy, all of them. That way you'll know, won't you? Then we'll leave you tied up really tightly until you're done with your change and then we'll let you go before you wake up.\n\nBy then, we'll be long gone and you'll be a wolf-bitten bitch with the hunger. Only you'll have no way to control it, since it'll be brand new to you. You'd better not go back to the quarry, honey. They'll be so happy to kill the sad bitch who can't go back.\n\nWelcome to the world of the wild, Nancy.\"\n\nSam and Ewan got out of the wagon and Nancy watched as Samantha spoke to the roadmen. Of the eight of them, two were in relationships and so they declined, but six of them looked over at the wagon and nodded a little hungrily.\n\nNancy began to whimper and yank at the bonds which held her. \n\nA short distance away, Callie took Rudhi's arm, \"This is just to show you. Never hit her harder than this on her shoulder,\" she said as she slapped Rudhi's arm, \"This is how you tell her 'Good Girl'. \"\n\nShe helped Rudhi find her way aboard and they rode off together a little slowly with Callie instructing all the way. \"And watch what you do when you're behind her. She doesn't have eyes in her ass, so she's liable to get spooked and if she does, well then watch out for her hooves.\"\n\nAfter they'd gone on for a bit, Callie turned and said, \"None of this is worth killing somebody for, Rudhi. Are you really gonna help me if I need you to?\"\n\n\"Yes,\" Rudhi nodded, \"and you will not even talk to her. I will do it for you, just be sure that you are showing the right one to me and I will do the rest.\"\n\n\"But what about the price?\" Callie asked, \"I'd at least want to know.\"\n\n\"You said that Bobby was your family,\" Rudhi began, \"so to me, that means that you lived with a wolf-born male very closely, yes?\"\n\nCallie nodded, \"Yes.\"\n\nRudhi thought about it and then she just decided to admit it. \"I want to have D'Arcy,\" she said, \"and not only for a night. Could you teach me how I must behave if I wanted him for a mate?\"\n\nCallie turned, \"Is that what you really want?\"\n\n\"The more that I think of it, \"Rudhi said, \"the more that I want him. From the little that I know, when they love, most human females might not survive it if they are loved often by them, correct?\"\n\n\"Oh yeah,\" Callie said, \"they can be rough and not mean it at all. I always wanted to be Bobby's bitch, but only after he bit me. We loved each other very much, and it was what I'd always wanted. It was Bobby who needed convincing. I almost had him agreeing and then we only had to wait till I was old enough. Bobby was a little funny like that. I had to be old enough first. But then he'd bite me and if I lived, we could be together, and have little ones and everything. \n\nBut the hunter got to him first. It took her a good six months to get Bobby away from me, telling him that it wasn't healthy, what we planned to do. Well it was a lot healthier than nine bullets,\" she said looking down with a tear on her cheek. \n\n\"She looked at me when I came. I wanted to take his body home to bury it there, but she'd already skinned him and she was just filling in the hole when I got there. She told me to be on my way or she'd shoot me too.\"\n\nRudhi nodded and rode on in silence for a minute before her face clouded over in thought as she looked down and then her arm shot out into the air beside her as though she was holding something. \"Ride this way, \"she said as she turned her horse around.\n\nCallie was confused, but followed to find Rudhi getting off her horse next to a tall woman with a rifle on the ground in front of her. The woman looked to Callie to be held up by an invisible hand around her throat and she was on her tiptoes.\n\n\"Take a good look, \"Rudhi said, \"I need to know if this is the woman whom we seek. She was aiming that rifle there at your back from behind us.\"\n\nCallie leaned forward and peered in the late afternoon light for a moment, \"Yup, that's her.\"\n\nRudhi looked at the woman, \"You hunt the werewolves for the bounty?\"\n\nThe woman nodded, \"Well yeah, or it wouldn't be worth the bullets now, would it?\"\n\nRudhi looked at her a little thoughtfully, \"You have skinned some before they were even dead, yes?\"\n\n\"Bullets cost money. Why use two when one is enough to bring them down so you can tie them with metal cable? Then you just skin 'em and toss them in the hole.\"\n\n\"Do you know this woman?\" Rudhi asked and the hunter shook her head, \"No. Should I? Did I kill her pet or something? Wait a second.\n\nOh yeah, she was living with a werewolf for a few years like an animal. I'd have shot her too if there was any money in her hide.\"\n\nRudhi looked at Callie, \"How long ago?\"\n\nCallie didn't blink, \"Eight years, and yeah, this is her. For sure, Rudhi.\"\n\nRudhi looked away for a moment and then the woman disappeared.\n\n\"Where did she go?\" Callie asked.\n\n\"Not far,\" Rudhi grinned, \"She is over there in the ground.\" While Callie came to grips with it, a human skin fell to the ground in front of them in one piece and Callie knew all that there was to know then.\n\n\"Thank you Rudhi,\" she said, \"Ask me anything you want to know and tell me anything that you need.\"\n\nRudhi picked up the rifle and handed it to Callie, \"I do not know much about these, but this one looks to be well-made and expensive. Take it as yours, if you do not mind what it was used to hunt.\" Callie nodded and said thanks as they rode back discussing things for Rudhi.\n\n\"So you like D'Arcy, huh?\" Callie smiled, \"I think you'd look pretty good together, though I haven't seen him natural or anything. It's just the way that I feel it.\"\n\n\"Natural?\" Rudhi looked over, \"it means as he is?\"\n\n\"Yeah,\" Callie nodded, \"as he is. I really like Shane. That's why I didn't want him to come along. From what I've seen, he's good at what he does and I know that he's all brave and strong without being stupid, but I ... \"\n\nShe looked over, \"Do you know what it means to tempt fate?\"\n\n\"I think so,\" Rudhi said, \"To you, it would be tempting fate to have Shane there, yes?\"\n\n\"Yeah,\" Callie said, \"I just met him, and I probably would never, ever be lucky enough to get a little close to him, ever, but I do like him. So I was afraid that if he was there and somebody was gonna get killed, to have Shane there would just be asking for it to be him. Even if he wasn't in danger there, then I'd be in more danger -- especially if he liked me. 'Cause then, I'd probably get killed. \"\n\n\"Then you were in greater danger than you knew, \"Rudhi laughed.\n\n\"How do you mean?\" Callie asked, not getting it.\n\n\"Because I can say that Shane has been pacing restlessly ever since we left,\"Rudhi grinned.\n\n\"How do you know that?\" Callie demanded and Rudhi shrugged, \"I cannot explain it so that it makes any sense to you. It is just something that I know. You do not see your long hair as it blows behind you in the wind and yet you know to a fair degree that it is alright and not on fire now, correct?\"\n\n\"Well... yeah,\" Callie said, a little nervously.\n\n\"Just so,\" Rudhi said, \"I just know. You could ask one of the others when we return if you wish, but I know that it is so because Shane likes you. They do not have these hopes for anyone because of what they are. To meet someone like you, who is lovely, and who knows the life of the wolf-born -- even though she is human, \" Rudhi smiled over, \"that is rare and he knows it.\"\n\nWhat about D'Arcy?\" Callie asked.\n\n\"Why do you think I wish to know so much?\" Rudhi smiled, \"I see that I have the chance that I desire so much, and I will not waste it. In all of my time, I have never met one like him. I have never even seen one like him.\"\n\n\"Can you uh, ... \" Callie thought hard on just how to frame her question, \"Can you see them as they really are?\"\n\nRudhi nodded, \"I can. I see everything at once. I see them as the men that they hide as in their human clothes but I can also see them without all of that. Why do you ask?\"\n\n\"Please don't misunderstand me,\" Callie said a little uncomfortably, \"but what does Shane have, uh, ...\"\n\nShe motioned a little lower with her hand and her companion laughed, \"I cannot say. I see what is there, but it is a little different from what I have seen on other males here,\"\n\nCallie nodded, \"That's because they're made more like wolves there. But what you ought to be seeing should be bigger than what you'd see on a wolf.\"\n\nRudhi began to laugh, \"I have not seen many wolves here. I was not looking at the ones that I saw for this! But I think that I can say that if there is what I think there is there, we should be pleased. \"\n\nShe looked at Callie, \"But -- \"\n\nCallie shook her head, \"Not like a man. It's different. The end is more pointed though it ought to be fat overall, and the part close to his body is the thickest. I don't know exactly because I was just a kid and Bobby wouldn't do anything until I was eighteen, but there's a part there that's supposed to feel pretty good to a girl.\"\n\n\"How do you know that?\" Rudhi asked, intrigued now.\n\n\"Because Bobby had an older sister who was married, that's how I know,\" Callie stated with a degree of certainty, \"I asked her and she told me. She and her husband had to go to Mexico to see his family, but before they left, she was always telling Bobby to hurry up and make me his bitch because for sure, he'd never find one who'd love him as much as me.\n\nAnd I ought to say that to them, they use that word to mean a female of their kind and it's not like we say it. They mean it with respect, not as an insult like humans do. They'd call a human girl a female, but a wolf-born girl is a bitch.\"\n\n\"What about someone like me?\" Rudhi asked, \"I do not think that a bite can make me what D'Arcy and Shane are. What if I am with D'Arcy as his female? Is there a name for that?\"\n\nCallie shook her head, \"No. If you mean that you're paired with him, but you can't be turned, well then, I guess that if he loves you, then you'd still be his bitch.\"\n\nRudhi smiled a little at that. \"Then if I can have my chance, I wish to be D'Arcy's bitch. I do not know how, but I will try to be a good one.\"\n\nShe looked over and Callie was smiling at her warmly, \"They have a name for that, Rudhi, and I'm sure that if I asked him, D'Arcy would already tell anyone that you're a fine bitch to his eyes. Hell, even I could see that just by looking at him. I don't even have to be a super girl like you for that, Rudhi.\"\n\nThey rode on in silence for few minutes before Callie turned and looked at Rudhi, \"Hey, you do know that they're different to human men in bed, don't you?\"\n\n\"Yes, Rudhi nodded in a general sort of way, \"I thought that they would be. Stronger, rougher as you said. Does that mean that they go longer?\"\n\n\"How would I know?\" Callie laughed, \"but Bobby's sister said they did. She also said they were were different in another way.\"\n\nRudhi listened looking over and then her jaw began to fall open. \"How many times?\"\n\nCallie laughed as she held up the number of fingers and then she rolled her eyes, \"Oh, so now you want to hear about that, huh?\"\n\nShane and D'arcy looked up from their meal as they heard the two of them, still far out in the darkness and laughing as they approached slowly.\n\n\"I guess that must have gone well then,\" Shane volunteered.\n\n\"Must have,\" D'Arcy nodded as he made up a plate for Rudhi. "
    ],
    "authorname": "TaLtos6",
    "tags": [
        "prison",
        "quarry",
        "machine gun",
        "wagon",
        "horse",
        "tank",
        "action adventure",
        "terror",
        "horror",
        "drama"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/a-big-shiny-blue-marble-ch-52"
}