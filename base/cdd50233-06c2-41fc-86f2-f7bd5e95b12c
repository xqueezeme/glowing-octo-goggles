{
    "title": "Love Note Pt. 02",
    "pages": [
        "<p align=\"center\">*** V ***\n\nI look to the skies for signs\n\nWhen her hand is in mine\n\nall I see is gold and fire\n\nBlazing so much higher \n\nthan I can lift her\n\nI have a gift here\n\nThis I whisper to her\n\nI have a gift here\n\nBorne of ancient secrets</p>\n\nHer presence was going to be a problem.\n\nHis pillows smelled of vanilla, ginger... apricots. And he remembered how difficult it had been to shake the scent of her after their first kiss. Leo rolled onto his back, propping one leg up -- but that only made matters worse. Not only could he still smell Ana\u00efs, but he was now in the perfect position to watch her as well.\n\n<p align=\"center\">I have a gift here\n\nBorne of ancient secrets...</p>\n\nThe hardest part of the day they'd met and kissed had been when she'd walked out right afterwards. Just as she was preparing to do now.\n\n\"It's not the end of the world, Thandi -- you just couldn't reach me for a few hours.\" Her voice drifted in from the balcony, husky and decadent. \"Of course everything's fine -- I'll brief you on our progress when I get back to the flat. Stay right where you are. Don't move.\"\n\nNo. It was best that she was leaving, come to think of it. He'd built his life around what he'd thought was the real deal once before... and Melissa had fucked him up royally.\n\nBlindly going that route again would be stupid.\n\n\"No, I don't understand your panic, actually. Why would you think I'd be home when we have so much to get done?\" She was looking out over the private back garden; her shoulders were tense, but hints of amusement coloured her tone. \"You weren't even supposed to be back for another two days, let alone suffering mad visions of me in an apron, waiting for you with your slippers and dinner in hand.\"\n\nLeo got up and silently padded to the open sliding door.\n\nThe distant clouds had neared, but weren't close enough cut off the sunlight bathing her. Her skin gleamed as if she were the source of rain, not the skies. The image of sweat beads trickling into her hair as she arched up at him came to mind.\n\n\"Oh. Yes, I see.\" One arm was wrapped around her chest, barely managing to hold in place the sheet that dragged with each step she took. \"Yes, I was sick; and I did let everyone know that I couldn't come in today... I'm sorry I worried you, but I really am okay now.\"\n\nHe leaned against the door jamb. Heat rose from the stone tiles and flowed over the balustrade. Ana\u00efs glowed.\n\nThen she turned and looked right at him. \"I was very well taken care of.\"\n\nArms folded, Leo watched as she took in his nudity. She leaned against the balustrade, a fist clutching her sheet, and let her eyes drift from his biceps to his abs. On a slow blink, they flitted down to his feet then traced up, lingering this time when they got to his stirring penis.\n\nHe felt himself grow more rapidly under her dark inspection. He gripped his erection and held eye contact as he squeezed it then pulled. He watched her closely as he stroked himself.\n\nHer friend laughed on the line and seemed to ask a question, but he was sure she didn't hear it. And fairly positive she wasn't aware of biting her lip either.\n\nJust twenty minutes ago she'd driven him clear out of his mind in that bed and cried out his name as he'd climaxed inside her. Yet here he was again, hungry for her. Again.\n\nShe turned her back to him. \"I have to go. There's stuff to do and you'll be needing the car back.\"\n\nThe sheet was slipping, the musical birds on her back suddenly freed.\n\nHe stepped up behind her and put his hands on her hips. Out in the sunlight their skin tones were in sharper contrast and he couldn't take his eyes off the play of colours. It made his grip on her tighten reflexively. In just a few minutes outdoors she had absorbed the sun's heat; he pressed himself to the warmth of her back.\n\n\"No, really, it's okay. I'll meet you at the flat then catch a cab to Karma for the rest of the day.\"\n\nHe pulled at the luxurious cotton, but her grip on it tightened. This made the corner of his mouth lift.\n\nHe swept her twists across one shoulder and put his lips to the bared one. Within moments she was leaning back against him.\n\n\"No... I have no idea what Leo might be up to.\"\n\nHis small smile was now a predatory grin. With slow strokes he worked his hands up from her hips to her covered breasts, cupping them from behind. At the same time his teeth grazed a line along her shoulder up to her neck. He pressed his lips there.\n\nShe trembled.\n\n\"I'm sure he has a good reason for not answering his phone either.\"\n\nA harder tug produced better results -- the sheet slipped halfway down before she caught it at her waist.\n\n\"I really have to go now, geeko.\" Her voice was still steady, but her breathing wasn't. \"Yep, I'll try find him and let him know. Cheers.\"\n\nAna\u00efs turned on him the instant the call disconnected. Her lips were still kiss-swollen and did little to support the stern outrage in her eyes.\n\nLeo took in her glare with subdued amusement. \"Have a message for me, do you?\"\n\n\"Didn't your mother teach not to go gallivanting around naked?\"\n\n\"That's what Thandi told you to ask me?\" he chuckled. \"Tell her no one can see into the back part of my property -- which is good because I wouldn't want anyone else falling for the dark temptress on my balcony... I have plans for her still.\"\n\n\"Leo.\"\n\nShe was resisting -- or trying to. Saying his name like that was a big mistake on her part, though.\n\nHe pulled her closer, tightening his arms around her and forcing her onto her toes as he kissed her deeply. He never tired of the taste of her and her undisguised responses. Her arms went around his neck, crushing her breasts to his chest. She passed the sun's heat from her flesh to his.\n\n\"I have to go, Leo.\"\n\nHe shifted a little and the sheet dropped to their feet. Ana\u00efs glanced around self-consciously, but he lifted her up in his arms and kissed her again until her legs wrapped around him and she moaned into his mouth. His hands lowered to cup the curve of her behind, squeezing at the firm fullness.\n\n\"Ah, shit...\" He broke the kiss to look into her eyes. \"You're not going anywhere, baby.\"\n\n\"But I have to --\"\n\n\"I don't care.\" He was already heading back to the bed.\n\nShe shook her head. \"And what the hell am I supposed to tell your manager?\"\n\nHe laid her amongst the plush pillows and pecked her lips. \"You're my manager.\"\n\n\"I'm Thandi's assistant.\" She looked cute trying to remain serious despite her lips curling.\n\n\"You're my manager.\" He rolled onto his back, whipping her up over him. \"Tell Thandi I wanted to be inside you again, needed to make you scream some more.\"\n\nHair everywhere as she was swung up into straddling his hips, a dancing cloud of elegance above him. When it settled back down, she combed her fingers through it, pulling it to one side again so she could work on scowling at him some more. He'd been in a playful mood until that moment -- but lying there with his erection tucked beneath her and watching her breasts lift as she calmed the storm that was her hair... It cut into him.\n\nSomething tender and alive bled within.\n\nHe couldn't smile anymore. And he couldn't take his eyes off her.\n\nShe was shaking her head at his suggestion. \"I am not saying that to her. No way.\"\n\nHe put his hands on her hips and rocked up into her heat.\n\nHer eyelids fluttered. \"I have to go...\"\n\n\"Why?\" He sat up, forcing her legs wider. \"Why are you trying so hard to run away?\"\n\nHer nose nuzzled the side of his. \"I find that question ironic considering you're the same man who wanted nothing to do with me a few days ago.\"\n\n\"You shouldn't have come after me, temptress.\" His hands were on her thighs, his thumbs stroking at the insides.\n\n\"I, uh... needed to get you out my system.\"\n\nThe music had stopped downstairs and all he could hear now was the longing in her sighs.\n\n\"Then you should never have admitted that I'm under your skin.\" His teeth caught light hold of her lower lip and her tongue immediately darted out at him. \"I'm starting to like being... in your system.\"\n\nAna\u00efs' fingers curled around the back of his neck even as she claimed to want to get away.\n\nHe pressed his thumbs into her flesh with each outward stroke, making her pussy stretch open a little wider each time before releasing to feel her wetness cover the length of his cock. He was hard and hungry for her.\n\nThe rocking of her hips took on long, deliberate strokes, running her wetness up and down the length of him. A primal possessiveness was stirred up by the way her sighs now had a voice, ending in whimpers and moans she tried to bite back. He wanted to take that control from her, shatter her resistance.\n\nRumbling rolled in from the distance. Passion had shattered the peace within their haven, and now the thick clouds threatened the rest of world out there. Leo looked into Ana's eyes and saw a storm already warring there.\n\nHer dark eyes widened at the first touch of his hard dick to her entrance. Her rocking stilled and it felt as if he could feel her heartbeat pulsating from her entire being, reverberating through the tip of his cock. As he nudged at her, he snapped back thoughts about getting to enter her pussy and heart.\n\nShe was straddling him, her chest pressed to his. He couldn't push up into her and she wasn't coming to him, wasn't letting him inside yet.\n\n\"Take it.\"\n\nShe stared into his eyes. He watched the sparks and furies blazing in her eyes: desires, doubts, defiance.\n\nHe held his ground. \"Take me in.\"\n\nHer nails dug into his shoulders as she began to move. He cupped her to him as she enveloped him in her heat, his teeth gritting as the storm calling from outside and the tempests flaring in her eyes clashed in his chest.\n\n\"Uuhhh, Gods...\" Her eyelids were half-lowered.\n\n\"Take it, sweetheart.\"\n\nThe softness, the wet glide of her searing passion. Leo's hands roamed up to her shoulders where he gripped her brutally and steadily pulled her closer. Ana's lips rounded, her moan drawn out as short, instinctive thrusts took over. It was the way that she could take anything he did to her -- and so sweetly, too -- that drove him most crazy.\n\nEach lift of her hips made him want to growl; he wanted to be inside her and never leave.\n\n\"Leo...\" Her skin was glistening again. \"Baby, I need --\"\n\nHe pulled her down the rest of the way. She grunted -- it sounded like his name again, but guttural, raw. She'd never used any endearments on him before and hearing this one set off the feral compulsions he'd been feeling since meeting her. He couldn't help himself.\n\nAna was grinding against him as if she wanted all she could get of him; all the while her brows were drawn together as if the ecstasy hurt. He knew how she felt -- how quickly the craving took over only to overwhelm in its magnitude.\n\nHer hips were in full swing now, her lips on his. His tongue found hers, claimed her as his hands slid up her back reading her rhythm and urging her on. When he cupped her breasts, she broke the kiss and threw her head back.\n\nHe needed more. She was almost too much to take in -- but he needed even more.\n\nLeo lay back against the pile of pillows. And Ana held on just as he knew she would.\n\nShe was braced over him, working herself along the length of him, moaning as her stretched pussy clenched each time he thrust up into the deepest parts of her. He pinched her nipples, watching her back arch; those tender peaks tight as she pushed them into the pleasurable pain.\n\nHe thrust up into her. The muscles in his thighs and calves, his abs and arms, locked in tense definition as he drove himself deeper, forcing gasps and pleas from her.\n\nAnd then there it was.\n\n\"Leo... Oh, shit.\"\n\nIn the middle of being consumed by her, in the middle of filling her, he got her to say his name in tones heard nowhere else.\n\n\"Ah, Gods... Leo, I --\" Tremors washed through her in layered waves. \"I'm going to... Please, come with me, baby...\"\n\nFuck.\n\nHe pulled her down, made her curve over him. Embraced her tightly as her rapid breaths seared his lips; thrust up into her with all he had; whispered to her even when he knew she could no longer hear anything but their primal heartbeats echoing through the room.\n\nHer orgasm was a thing of beauty.\n\nShe sat back up, her spine curved and elegant, her hair flowing down to her buttocks. Leo cursed as he felt her tighten around him, rhythmically milking him; compelling him to pump faster. His grunts matched her cries as he lost himself inside her. Their climax expanded until it was all that existed, all that was conceivable.\n\nTangible. Authentic.\n\nAna collapsed onto his chest.\n\nThe light outside was summer-gold and cloud-silver. The thunder louder.\n\nLeo felt the cool breeze from outside swirl with the warmth of her dying gasps across his skin. How could one woman bring so many contrasts into his life in a matter of days? All he could see anymore was how different they were, how different many things around them were -- and how it all fit together so perfectly that it hurt.\n\nThe pains of pieced perfection.\n\nLike now. His heart still raced -- yet, with each steadying breath, she was reassembling herself.\n\nSo, it was no real shock when she lifted her head and blinked languidly down at him before turning to take in the greens and rustling call of the trees outside. She looked at him again, her eyes the most serene he'd ever seen them. There was also a clear satisfaction in them that made his chest expand with pride.\n\nThe peace on her face as he'd cared for her over the weekend. The calm in her eyes after tearing the world apart with their lovemaking. It made him feel like a man who just might deserve her. Knowing he was able to do that for her made him feel worthy.\n\nHe held onto the impossible curve of her wide hips when he felt himself starting to slip from inside her. It was too soon. The connection was still needed.\n\nHer skin was dewy.\n\nHe watched her rise then search for her scattered clothes. Efficient Ana ignored her own glow and the come now trickling down her thigh. Once dressed, she plaited her mane and the way it neatly flowed over her shoulder reminded him of their first night together.\n\nShe allowed herself a moment to grimace at her reflection in the full length mirror beyond his dresser. He stood and went to her, knowing even before he reached her that he wouldn't agree with her reaction to whatever it was she saw there.\n\nAna raised an eyebrow at having a nude companion suddenly behind her. But she also sported a faint smile.\n\nTheir world was still shaking, still rumbling. Darkening, swelling -- highlighted by emotional lightning.\n\nShe turned and pulled his head down so she could press her lips to his.\n\n\"How on earth did I just survive that?\" Her lips were still on his. \"Uzondibulala, mlungu ndini.\"\n\n\"What is that supposed to mean?\"\n\n\"You, you impossible White man, will be the death of me.\"\n\n\"Little deaths never killed anybody,\" he smiled.\n\n\"I need to get to Thandi before she gets suspicious.\"\n\nThe moment she moved away from him, he wanted her back. It was ridiculous.\n\nShe slipped her feet into her pumps; then arched her back fluidly as she lifted each behind her and reached back to tug the backs over her heels with a finger. The notes flying up her hip, waist and shoulder blade spun musical sorcery for her alone.\n\nThere'd never been so much beauty in watching a woman leave -- he leaned against the dresser and took in the elegance of her movements. Running her palms across her face, swatting her plait away then swinging it back again with a resigned sigh, turning to check her reflection over her shoulder.\n\nEvery motion was part of Ana's own unscripted dance.\n\nShe scrunched her nose at her mirrored self again then went to check her bag.\n\n\"I wish I had time to take a shower,\" she huffed.\n\nThe thought of water cascading down her dark skin made him roll his shoulders. Damn.\n\n\"You look fine,\" he told her.\n\nFine. What an understatement.\n\n\"It's not that.\" She headed for the door without checking if he would follow.\n\n\"What then?\"\n\n\"I smell like you.\" She shook her head, making the tip of her plait dance. \"I've got your damn scent all over me.\"\n\nThey parted ways downstairs -- she walked out the front door, he walked through to the immaculate music room. Her words curled up into a knot and thudded through his chest -- fuck, that was hot. By the time he heard the muted hum of the Mercedes leaving, her words were louder, echoing through him.\n\nHe sat down at his piano.\n\nAs he knew would happen, his fingers started on the familiar then moved on to something unplanned. Chopin's Ballade No. 2 started; somewhere along the way, Allegro de concert, Op 46 took over. He wasn't free of the image of water raining down on her, streaming over the rich brownness of her. Debussy emerged - Reflets dans l'eau, of course.\n\nAnd then it happened.\n\nHis fingers flitted across the keys to a song he'd never played before.\n\nThis part always made his heart feel like it was too big for his body. The song took shape, came to life -- it lifted through the ceilings and saturated the clouds.\n\nThe room filled with vanilla and ginger. Apricots on his tongue.\n\nGod damn it.\n\n***\n\n\"We're ahead of schedule -- that never happens! Almost never.\"\n\nThe good thing about Thandi's excitement was that it kept her from querying Ana's decision to strip as soon as she entered the apartment. There was now a cone-shaped traditional hat on the kitchen counter in place of any evidence of opened chocolate milk.\n\nAna's brow lifted at Thandi's souvenir, but she marched on to her room. Her jeans and shoes came off in time to be tossed about the room.\n\n\"Lesego reckons we can move one of our smaller Botswana projects forward and push to capitalise on the festive season market.\" Thandi was gingerly sidestepping Ana's clothes. \"I only came back because of a call I got from Purpose. They want to interview me tomorrow! Which is partly why I need to find Leo.\"\n\nAna was in the shower and Thandi perched on the bathroom counter as she made her announcement. The opaque shower walls between them were a good thing for multiple reasons.\n\nFor one, hearing Leo's name now took on a significantly new meaning, one with dismantling effects. Effects Ana would rather not have witnessed by her giddy friend. For another, she needed just a little more time to list reasons why she held no interest in falling for a man who could ask her to stay the way that Leo Boreas had in his invitingly rumpled bed.\n\nThe suds drifting down her skin felt like they were scraping her of all that mattered.\n\nShe felt too clean.\n\nAnd, finally... she needed a veiled moment to convince herself she was okay with his scent leaving her. A moment to let him separate from her and let herself feel about for the parts that were hers alone so that she may reassemble them and move on.\n\n\"I'll keep trying Leo, but I need you to get over to Karma to meet Sindi and update everyone on this week's rehearsals and interviews. Take the car.\"\n\nAna turned. \"Sindi?\"\n\n\"Eric's idea.\" Thandi hopped off the counter. \"You'll see.\"\n\n***\n\nKarma was huge.\n\nA spread-out monolith tucked into the western corner of a major holiday resort just an hour's drive from the city, a monolith perfectly positioned for great sunset views. Not that Karma patrons ever got to see the sun from inside.\n\nAna flicked a glance up at the thick clouds above as the weatherman cautioned her about veld fire temperatures. She raised an eyebrow at the resilient breeze as the man stammered on about heat warnings and hydration advice.",
        "The moment she parked, an annoying guy with spiky hair and an affected accent scurried up to her to announce that he'd be assisting her with any and all of her Karma-related needs. She grabbed her handbag, beeped the car alarm into activation and strode up to the entrance without checking if he was keeping up or not.\n\nEric marched over to meet her as soon as she peeked into the banquet hall. \"S'thandwa, come over here I want you to meet someone.\"\n\nThe girl he presented to her was tall and unbelievably slim. Her skin was the colour of golden beach sand and her natural hair was cut short. Ana watched her swaying to the band's run-through and giggle flirtatiously at Will before darting over at the sound of Eric's call.\n\nShe was stunning and knew it.\n\n\"Ana, this is Sindi -- she'll be featuring on 'Love to Give'.\"\n\nThis girl... She would be singing with Leo?\n\n\"No, she won't.\"\n\nA few of the band members glanced her way.\n\n\"Yes, she will. Leo said this event would be a great career launch for a new artist. We scouted around all day last Thursday to find her...\" Eric semi-shuffled a half-step back. \"Won't she?\"\n\n\"Leo picked her.\" Ana ignored the dark feeling coiling within. \"Oh. I'm sorry. Okay... Sindi, I'm --\"\n\n\"Sindi G.\" Her lips were pursed.\n\nAna hesitated. \"I beg your pardon?\"\n\n\"Sindi G. That's my stage name -- I told Leo when I came here last week. Please get it right.\"\n\nAna kept her snarl minimal. \"Eric. A word.\"\n\nEric followed her amicably a few steps away.\n\nAna counted to five then asked, \"You're sure Leo wanted her?\"\n\n\"Yep.\"\n\n\"For how many songs?\"\n\n\"Just the one.\"\n\n\"You're running rehearsals, right?\"\n\n\"Right.\"\n\n\"Okay.\"\n\n\"Okay?\"\n\n\"Yeah,\" she nodded. \"One diva, on one song. I can live with that.\"\n\nEric started walking away, but turned back after a few steps. \"Are you going to be as weird about the dancers?\"\n\n\"What dancers?\"\n\n\"Never mind.\"\n\n***\n\nFrom that moment onwards, the second week of December took on a life of its own. Monday was a blur of setup, choreography, blocking and basic run-throughs. Sindi got in the way half the time then settled down to pout when she learned Leo wouldn't be in that day. Her antics aside, Ana had to admire her ability to flick her professional switch on whenever Eric bellowed a request.\n\nThe spiky-haired kid found her while she was inspecting the booths on the higher levels.\n\n\"Hey, Ana? Jade would like a word with you in her --\"\n\n\"Oh, there you are. What's your name?\"\n\n\"Ray. I'm just so honoured to be a part of --\"\n\n\"Save the schmaltz for Leo, Ray.\" She waved his words aside. \"I'm going to need exact numbers and specs for everything to be sure it all adds up -- so, we're talking in terms of seating, off limits zones, dressing rooms, other passes, freebies and available services.\"\n\nHe blinked. \"Yeah. Okay.\"\n\n\"You need to write any of this down? Because there's more.\"\n\n\"Uh, no -- no worries.\" He tapped his temple. \"Photographic memory.\"\n\nAna squinted at him then laughed. \"If you say so.\"\n\n***\n\nIt was nice to have her friend home for supper -- Thandi even cooked.\n\nAna snickered as she watched her friend plate the meatballs and mashed potatoes. It felt good to revive old memories of having the same for supper as kids. But in between the laughter and the silly stories, she couldn't help wishing she could tell her friend about her morning.\n\nTalk about what really happened the day she first saw Leo; and how scared she's been ever since.\n\nAnd about her unpredictable heart.\n\n\"You sure you're okay now?\"\n\nHer nod came a little too quickly. \"Of course.\"\n\n\"Good -- because I need you fit as a fiddle tomorrow.\" Thandi was too excited to eat. \"The team from Purpose will be coming over early to interview me. I want you there, too.\"\n\nAna's gaze shot directly to hers. \"But... they want to interview you. I'm not even a permanent member of Moyo, let alone interview-worthy.\"\n\n\"Except you are!\" her friend exclaimed. \"I asked Leo to pop in for some pics -- and will be talking about your brilliance in managing the Dream Reality setup.\"\n\nAna stilled. \"No. I mean, I'm just an assistant. You manage --\"\n\n\"Cut it, ntombi. We both know I've barely spent five minutes on this gala since your arrival. I walked you up to the pitch, but you're the one scoring the, um... touchdown thingie with a hole in one.\"\n\nAn interview. And photographs.\n\nWith Leo.\n\nThandi finally took a bite. \"And, while we're on this, the gala interviews are rolling up for you guys this week.\"\n\n\"For Leo.\"\n\n\"You as well, cupcake.\" Thandi was giggling as she watched her friend's dread take shape. \"Jade's been hounding me about coverage of Karma and their selfless brilliance -- yada yada blegh. She wants to be interviewed alongside Leo.\"\n\nA sharp laugh slipped out before Ana could stop it.\n\n\"Exactly.\" Thandi rolled her eyes. \"Which is why we want you front and centre instead.\"\n\n\"What?\"\n\n\"Well... slightly off-centre, really. Leo's the main spotlight guy.\"\n\n\"No, Thandi!\"\n\nThandi grinned as she pointed with her fork. \"Oh, hell yes. It's perfect. I want the wish fulfilment organisation to get the best out of this airtime. I've been talking to the staff at Marianne's offices -- and can't say that much promise that way lies. I get the feeling Dream Reality and all the cause stands for would never make the desired impact with those softies simpering away... Marianne herself and the rest of the main employees would just never hold up in radio and television interviews.\"\n\n\"Funny, I was just thinking the same about myself,\" Ana muttered.\n\n\"Nonsense. You're grouchy, but fearless.\" Thandi pushed her plate aside. \"Seriously, though, An. This is a great cause -- and I want to make sure Dream Reality is remembered long after the gala is over. Marianne is too skittish to get that right; and Jade is too slick to be trusted with speaking for Karma. I need you to be my one stone for these birdies.\"\n\nIt made sense. It sucked, but it made sense.\n\nAna huffed as she got up to fetch a much needed bottle of chocolate milk. \"I'm starting to see why you're paying me so much for this.\"\n\n*** VI ***\n\nAna spent the next morning flipping from station to station but found no peace.\n\nLeo's old hits ruled the airwaves. The plushly purple Jacarandas zipping by as she drove poured their fragrance over her, tipping her equilibrium further. They conjured up too clearly the scents of Leo's majestic secluded haven.\n\nHer meeting with Marianne Sachs had confirmed Thandi's assertion.\n\nThe woman was sweet and had her heart and head in the right place, but there was no way she'd manage weeks in the spotlight. She'd hugged Ana upon hearing the younger woman would be handling all interviews on her behalf. At least the property tour and briefing on Dream Reality's background had been very informative.\n\nAna turned the radio off on her way from the Dream Reality centre back to the office. The morning's heat was thick and still; she missed the unpredictable breezes that had annoyed her just the day before. The dense clouds hovering over Sandown ignored the grimace she flung their way as she marched into the office block.\n\nShe couldn't tell if it was the heat, the task that lay ahead or the heels she wore that irritated her most.\n\nShe felt too tall, too notable in them. And it didn't help at all that everyone in the Moyo reception area stopped what they were doing as soon as she walked through the main doors.\n\nShe raised a challenging eyebrow. \"What?\"\n\nLaurika shooed the frozen staff members back to work before rushing over. \"You look... so different.\"\n\n\"Are they here yet?\" Ana tried to tug the deep V in her new shirt shut, but her breasts would not allow it.\n\n\"Yes, they're all in Thandi's office.\" She pointed at the shut door; then in the opposite direction at the room next to the kitchen. \"The makeup lady's in the lounge, though. You might want to...\"\n\nAna was already heading straight for Thandi's door.\n\nHer friend was seated behind her desk, dressed in one of her power suits -- black suit, red blouse and red heels not made for walking in at all. The magazine team had already set up and a couple of lights were on standby though not lit yet. The sharp cut of Thandi's weave along with the precision of her professionally done makeup gave her an in-charge look that made Ana feel like the fashion pleb she was.\n\nWhile two crew members adjusted discreetly placed reflectors to lift any shadows from Thandi's face, a woman with thick dreadlocks sat next to her, chatting quietly.\n\nThandi looked up first. \"There you are, ntombi. That is a great new look!\"\n\nThat was a lie. And not a very good one at that.\n\nThe only reason Ana had settled on this get-up had been to get to wear pants -- and because she was sick of shopping an hour into the nightmare the previous afternoon. And because the persuasive lady at the boutique had convinced her that the fawn formal cut pants and high-necked white shirt with its ruffled cleavage dip were stylishly fun yet serious enough for the office. Getting dressed that morning, however, had revealed that she and that Jezebel had two distinctly different definitions of \"formal wear\". And the bloody woman had talked her into buying not one but two cursed outfits.\n\nShe did not like how closely the clothes outlined her. Never one for cleavage, the dip at her front made her breasts look too big, too sexy, too everything for her liking. The floral print of her shoes was far too bright, even for her. And why the hell had she bought a matching bag?\n\nThe only thing she was proud of was the perfect bun she'd managed. Her wild mane was tamed and choosing to behave.\n\n\"Yoohoo... An?\"\n\nShe scowled. \"Can we just do this?\"\n\n\"Right after you get your makeup done.\" Thandi was unfazed; entertained was more the word. \"We're in the middle of going through the interview structure. Then questions. After that we'll all take a few photos -- hundreds, I'm sure -- and that'll be that.\"\n\nStomping was what Ana aimed for on her trek to the lounge - hip-swaying stroll is what she achieved instead in her elegant heels. The slender guy, the one who always had headphones around his neck and assisted with all the final mastering at Moyo -- his name escaped her -- he actually walked into the water cooler while gaping at her.\n\nAna wasn't sure what to make of that.\n\nIn the staff lounge, the makeup girl grabbed her before she'd even introduced herself and set about dabbing at her face while telling Ana about her slob of a boyfriend and her crush on Leo Boreas. Fast flicks of the wrist, even faster words falling from her lips.\n\n\"He is still coming today, right?\" She was patting at Ana's eyelids in frenzied little flutters.\n\nAna exhaled slowly. \"That's what I hear.\"\n\n\"I hope I get to take a picture with him. If I manage that, I'm definitely replacing the one of us on the nightstand.\"\n\nAna's eyes snapped open. \"You already have picture of him, with him... on your nightstand?\"\n\nThe girl put her hand to her hip. \"I could've blinded you, you know. I really need you to keep your eyes shut.\"\n\nWith a sigh, Ana obeyed. \"Sorry.\"\n\n\"Besides, it's supposed to be a surprise.\"\n\n\"Your picture with Leo?\"\n\n\"No.\" Impatient huff. \"Your makeup!\"\n\n\"I'm sorry. You're... This is all a lot to take in.\"\n\n\"No, the picture is no surprise at all -- everyone knows I've wanted one for ages.\"\n\n\"But I thought you already had --\"\n\n\"Are you even listening, missy??\" Something soft and powdery was being puffed along her face. \"The picture I have on my nightstand is of me and lazy Eddie. I want to replace it with one of me and Leo!\"\n\n\"Uuhhh...\"\n\n\"All done.\"\n\nWhen Ana opened her eyes the girl was smiling happily at her. She blinked, unsure if feedback on the photograph plan was required. Thankfully the girl was too excited about showing off her talent to carry on with that topic. She dug a big handheld mirror out of her even bigger makeup case and handed it to Ana.\n\nAna's eyes widened. \"Oh... wow.\"\n\nThe girl clapped quietly. \"I know, right?\"\n\n\"Thank you, uh...\"\n\n\"Addie.\"\n\nShe finally managed to snap her astonishment from her reflection to the girl. \"I'm sorry, what?\"\n\n\"I know, it's ridiculous -- Addie and Eddie...\" Addie shrugged. \"But it's either that or put up with everyone calling me Adelaide. Not happening.\"\n\nAna reciprocated the shrug. \"Makes sense.\"\n\nHer eyes went back to the mirror.\n\nShe normally preferred dark, rich colours -- smokey or rustic tones around her eyes and rich burgundy or purple on her lips. When Leo had equated her makeup with her walls, he'd been spot-on. She became someone else under all those dark colours; felt she could walk through the world without feeling exposed. Maybe there was also a part of her that liked feeling unapproachable when covered up like that.\n\nAddie had done the complete opposite.\n\nShe never wore any foundation, so having her skin matted now felt a little heavy -- but the even tone made the rest of her features stand out. Her lips were a decadent chocolate and pink shimmer, shades too close to her real self. And her eyes only had a hint of smokiness -- in calm greens that gave away too much of the brownness within her irises. Even her lashes looked longer and flirtier.\n\n\"You have a real gift, Addie,\" she told the expectant girl.\n\n\"Aw, it's just me having fun, that's all.\" Addie grinned. \"You should call me if you need tips or something. I love playing with makeup.\"\n\nBefore Ana could protest, Addie scribbled her number in eyeliner and tucked the scrap of paper into her shirt pocket before shoving her out the lounge.\n\nThe stares she encountered in the main office area were worse. Laurika had a tougher time refocusing the men in particular. Headphones guy was saved bumping into things by losing all ability to walk at all. A nervous tremble rippled through her stomach. Ana felt like an impostor in her new look and was sure she looked like one, too.\n\nHer thought as she hip-swayed back to Thandi's office was that getting through this circus act as quickly as possible would be best.\n\n\"I will not be disrespected or tricked into tabloid level trash!\"\n\nThe words rushed at her and nearly knocked her over as soon as she opened Thandi's door. She stepped inside apprehensively.\n\n\"What happened, Leo?\" Thandi was rushing to where he stood over the dreadlocked lady Ana had seen with Thandi earlier. \"Khosi? What did you say to him?\"\n\n\"I didn't mean...\" Khosi was shaking her head, but didn't appear apologetic. \"Look, you're huge. How else do you think my article got bumped up to a four-page spread? Moyo Management is the focus, sure -- but the country wants to know about Leo Boreas as well.\"\n\nThere was amber lava in Leo's eyes. \"If bullshitting your way into side-interviews without the subject's consent is how you plan on building your career, you won't make it far.\"\n\n\"You're a public figure, Leo -- and your fans have a right to know what you're up to.\"\n\n\"Don't cross me, lady.\"\n\nHis shoulders were bunched, his voice deeper and his eyes ablaze. Ana could not understand how the woman was missing every single warning sign he gave off.\n\n\"I did not --\"\n\n\"I will not go over my participation stipulations again.\" He was turning away, jaw tight. \"I suggest you get out before I --\"\n\n\"I'm back.\" Ana kept her tone light as she clicked the door shut without another thought.\n\nShe went over to Leo and took his hand, drawing him to Thandi's chair. Pure intuition had her believing he'd follow -- and he did. His eyes were on hers -- still angry, but also surprised. A gentle hand to his shoulder was enough to get him to sit down.\n\n\"How're you doing?\" Her smile was wry and somewhat tentative.\n\nHe didn't smile back. \"I've been better.\"\n\n\"I'm sorry.\"\n\n\"I didn't want to do this in the first place.\"\n\n\"I know. Me neither -- I'd rather be working myself into another health crash...\" She felt his shoulder relax a little beneath her hint of dry humour. \"What were your stipulations?\"\n\n\"Only one: no questions about anything but Moyo and the gala.\" He let her watch the amber slowly simmer down in his eyes. \"And you.\"\n\nHis eyes took in the way her shirt outlined her breasts and waist. Where it tucked into her pants, he took in the line of her hips. It wasn't a fully sexual moment -- he was still too angry for that. It was more an instinctive absorption, a possessive surprise at the newness of her.\n\nAna couldn't watch that.\n\nSo, she turned to the interviewer. \"Khosi, is it?\"\n\nThe woman started approaching them, but stopped at Ana's look.\n\nAna straightened her shoulders. \"You're clearly an intelligent woman, so I'll give you a clear ultimatum. Assemble a knockout four-page spread. Actually take the time to really explore the exceptional creation that is Moyo -- I guarantee you, you will be deeply impressed. Do that well and you get the cherry which is an exclusive shoot and five minutes with Moyo's biggest client. You're the first one in the door, hon -- every other entertainment journo will envy you.\"\n\n\"The whole office is already abuzz with my huge break.\" Her eyes were lit up.\n\n\"However,\" Ana continued. \"Fuck up one more time and I walk -- and Leo comes with me.\"\n\nKhosi's expression twisted. \"Who do you think you are to -?\"\n\n\"No, Khosi,\" Ana's gaze narrowed in a direct confrontation. \"Who the hell are you? And are you deaf? I just gave you an ultimatum. Are you going to play ball?\"\n\nThandi cringed.\n\nThe magazine shoot assistants tried to blend into the walls while the photographer scrutinised his tripods.\n\nA few uncomfortable moments passed during which Ana chose to concentrate on the feel of Leo's dark blue shirt beneath her one palm, and his hand in her other hand. Her eyes never left the shorter woman's.\n\nShe waited.\n\nEventually Khosi nodded, turning to Leo. \"I'm sorry Mr Boreas. I had no right to ambush you with questions about your past and current relationships. It won't happen again. I do hope that when you are ready to talk about --\"\n\nAna looked down at him. \"Relationships?\"\n\nHis gaze was steady. \"I found it ridiculous that Khosi wondered if there was anything between Sindi and me; but asking me about Melissa and everything from five years ago was the limit.\"\n\n\"Wait -- Sindi?? Sindi G?!\"\n\n\"There have been rumours about how good their song is.\" Khosi was down, but not defeated. \"We all know that many creative connections run deeper than --\"\n\n\"How about a do-over?\" Thandi was walking over, clearly hoping to prevent more turbulence. \"Everyone is here and ready for the photo session. So, let's get to that.\"\n\nIt took a moment to note the significance of how her friend had repositioned herself.\n\nAna observed the deliberate eye contact and the way Thandi turned her back to block Khosi's view. But it was a few seconds more before she realised Thandi was zeroed in on her hands, one holding Leo's and the other on his shoulder. And then she realised how they must look together.\n\nShe pulled them away, but not subtly enough.\n\n\"Yes, let's shoot.\" Ana marched over to Khosi to talk to her one more time.\n\nThe shoot was both easy and difficult.\n\nFor once, it was nice to have someone else in charge, telling them exactly where to pose and how. But it was also a challenge standing and sitting near Leo and having to stick to professionalism despite having his scent teasing her.\n\nAt one stage, Leo stood beside her, his arm around her shoulders. They were waiting where the photographer had left them to go squint at two different camera lenses that looked exactly the same to Ana.\n\n\"I like how you handled that.\" His hand squeezed her lightly.\n\nHer eyes lowered. \"Well, it was either that or watch your ticking time bomb detonate.\"",
        "\"And what do you call what you did?\" he chuckled softly. \"Your f-bomb nearly detonated -- and you threatened to drag me out of here.\"\n\n\"Would you have?\" She turned her face up to his. \"Followed me, I mean.\"\n\nHis hand lowered to caress her shoulder blade. \"What do you think?\"\n\nHer eyes darted around the large room.\n\nThandi was checking her phone. Khosi was with her crew, going over the shots they had so far. Ana knew this didn't mean they were safe to touch each other as Leo was touching her, but she couldn't bring herself to tell him to stop.\n\nHis hand lowered to her hip, gently squeezed again then was gone.\n\nIt was brief contact -- not even enough to raise most eyebrows, really -- but it was enough to send warmth through her veins. She looked out the windows at the burgeoning clouds and no longer resented their presence; now she wished the summer rains would just fall already and wash away her feelings.\n\nIt took two hours for Khosi to get all the shots she wanted; whilst sticking to questions about Moyo and Dream Reality -- surprisingly insightful questions. And, as Ana had predicted, once the features writer applied herself to piecing together Thandi Moyo's rise in the entertainment industry, her eyes took on a new respectful light. Thandi had an impressive track record.\n\nLeo was also friendlier once placated. And informative about his motives for coming back into music to support the gala. He spoke of his love for creativity. But it was mention of his sister that froze the entire room. Ana reached for his hand again when she learned of his sister's illness and subsequent passing; along with the care the wish fulfilment foundation had provided her and the family.\n\n\"I had made my mind up never to touch music again -- but Thandi helped me see how much this gala would honour my sister's memory. This is me thanking Dream Reality the best way I know how for all they do.\"\n\nIt was with admiration that Khosi shook everyone's hands at two o' clock and instructed her crew to pack up.\n\n***\n\nLeo headed over to Karma.\n\nAna spent the rest of the afternoon confirming the week's interviews; then tried to spend time with Laurika to monitor her supervision of the press release drafts and social media updates, but Leo wouldn't let her. Seeing his name flash on her phone screen two hours after his departure made the rest of the office recede to the background of her consciousness.\n\n\"Hello?\"\n\nHis words were clipped. \"Come. I need you.\"\n\nThandi crossed her arms in puzzlement as she watched Ana tap her Uber app and grab her handbag before hurrying off.\n\nThe clouds felt lower somehow, the sun out of sight now yet still tangibly close. That was the only explanation for the heat of the blood rushing through her veins. Four simple words had her rushing through summer to a man she had told she did not want in her bed, let alone her heart.\n\nApparently there was no time that Karma was not busy; even a Tuesday afternoon was not immune to the stampede of Gauteng's luck and entertainment seekers. The cab driver followed her directions to one of the side entrances to the master theatre... where Ray awaited her with a smile.\n\n\"How did you even know I'd be...?\" She didn't bother finishing her question.\n\n\"I'm here to assist you -- to do that, I have to make it my business to know when you're here or need anything.\" He bowed slightly. \"Anything at all.\"\n\n\"You know you creep me out a bit, right?\" she muttered as she passed him.\n\nHe snapped back up, eyes alarmed. \"I do?\"\n\nThe band was running through a new song when she walked into the master theatre.\n\nKyle was sitting in the front row, watching the progress with his usual happy ease. Eric was a little more intimidating to take in -- marching across the stage, circling behind the band, barking orders, threats and praise with each step. The enormous space filled with the sound of upbeat soul and playful, jazzy rhythms.\n\nLeo was easy to spot. Or hear rather.\n\nAna heard the deep timbre of his voice rise smoothly just as she walked through the set of back doors. As she approached the front row of seats, she spotted him stage left; still wearing his black jeans and blue shirt.\n\nSindi was right by his side.\n\nThe first notes he crooned were so familiar, she had to pause and put a hand to the tightening knot in her stomach. It wasn't that she'd ever heard the song before, more that the tone of his voice and the emotion in it conjured up an instant, uninvited memory: Leo, naked; his fingers in her hair and his cock down her throat... moaning.\n\nThe first verse of \"Love to Give\" blurred by like a secret spell.\n\nKyle grinned when he saw her and beckoned her over. Just as Ana took a seat beside him, Sindi joined Leo in the chorus. The tightness in Ana's stomach twisted, so she concentrated on keeping a straight face. The flawless girl's voice was sweet and high, the perfect contrast to the resonance of Leo's rough rumble. They were so engrossed in each other and fitting their voices together that they seemed unaware of their colleagues -- let alone Ana's entrance.\n\n\"Can you believe this is their first project together?\" Kyle whispered hoarsely, barely keeping still in his seat. \"It's like they were made for each other.\"\n\nOn the bridge, Sindi's voice rose, sending goosebump ripples through the enormous room. Even Eric was still by then and the band seemed to be finding its flow. She began to dance to the light tempo, her feet not missing a beat.\n\nWhen Sindi took his hand, Leo smiled down at her. His feet were planted wide and he playfully tugged her closer while merging ad-libs with her lines. There was no doubt why Eric had suggested her... nor why Leo could be falling for her.\n\nWho are you kidding? He is falling for her. Others already know it.\n\nA giggle slipped into the end of her next line and Leo wagged his finger at her without missing a note in his. When she playfully ruffled his hair in an effort to mess with his composure, Ana rose to her feet.\n\n\"Where are you off to?\" Kyle looked up at her in surprise.\n\n\"I need to go.\"\n\n\"But you just got here.\"\n\nMore laughter mingling with the music on stage.\n\nAna turned her back on the two singers. \"Yeah, I know -- but Thandi needs me.\"\n\nHis brows knitted. \"But I thought Leo needed you.\"\n\n\"Just tell him I'll catch up with him later, okay?\"\n\nShe grabbed her bag and stepped past him. When the music suddenly stopped, she picked up her pace.\n\n\"Ana\u00efs?\"\n\nShit.\n\nLeo's voice felt like it filled the space even without use of his mic. Ana stumbled her next step, but didn't stop. She felt stupid ignoring him.\n\n\"Ana\u00efs, come here.\"\n\n\"No!\" The good thing about still being in her heels was that the sashay added to her march pissed her off enough to make that single word sound assertive and steady.\n\nShe didn't care that she was being unprofessional and still had no idea what Leo needed. She'd done a lot in her first week; enough to nearly kill her -- he'd just have to survive without her for a couple hours. Just until she could meditate on seeing him and Sindi like that for the next three weeks without a damn knot at her centre cutting off her oxygen and peace.\n\nBy the time she heard the elevated footfalls they were too close. She considered running, but barely trusted her own walk in that moment.\n\nLeo placed his palm at the edge of the stage and hopped down right beside her.\n\nBastard's done that before.\n\n\"Leo!\" Sindi's tone was indignant.\n\nHe grabbed Ana's arms, forcing her to a standstill, but his eyes were already turning back towards the stage. Ana couldn't think of a single time he'd ever been brought to a stop by her voice.\n\n\"What?\" he asked.\n\nSindi crossed one leg in front of the other, her slender frame elegant. \"Our rehearsal...\"\n\nLeo exhaled through his nose. Ana could tell that he wanted to run his fingers through his hair -- but also wanted to keep her trapped. His hands were firm on her arms -- and reminded her of the night he'd balanced her on her feet when she couldn't manage it herself, and then scooped her up into his arms.\n\nShe turned away, but he wouldn't even allow that. So, it was her eyes alone that sought the door while her heart still faced him.\n\n\"I'm busy, Sindi.\"\n\n\"With the help? You do know we don't have much rehearsal time, right?\"\n\nThe help...\n\nAna spun on her designer heel, her immediate instinct to take the impudent diva-child down a notch. But Leo moved before she did. One hand came up to the back of her neck and curled gently there. It was as if he knew before she did that she would turn and his hand would land there. What she couldn't tell was if the grip was possessive or protective -- and it didn't last long enough for her to figure it out.\n\nIn the next instant Leo grabbed her hand and marched back towards the stage, ignoring her resistance as he tugged her behind him.\n\nWill, who was closest to Sindi on stage, quietly stepped away.\n\n\"A word, Sindisile.\" He didn't raise his voice -- which kind of sounded worse than shouting.\n\nSindi had the sense to look cautious as she headed down the stage steps then came to them. Ana didn't want to be near the girl as a fresh swirl of annoyance and self-questioning rose within.\n\n\"There's a lot I could say about respect and equality right now, but I won't.\" Leo's gripped tightened unconsciously on Ana's hand right before he yanked her a step forward. \"What I will say is that you have Ana\u00efs to thank for the existence of a gala that will not only help kinder souls than you, but is also trending enough to give your fledgling career a big boost.\"\n\n\"I know the gala is important and Ana works hard, Leo.\" Her eyes were as hard as her words were soft. \"I just meant she's not in this song and we had a nice flow going.\"\n\n\"I said you have Ana\u00efs to thank.\"\n\nThe master theatre was designed to take a lot of sound. Apparently it could hold a lot of silence as well.\n\nAll the other people in the space watched the confrontation, not a single one made a move. Ana wanted to erase the last hour; wanted to snap back to the Moyo offices and not answer Leo's call. More than anything, she wanted a break from being the misfit who needed the popular guy to stand up for her; a break from being the flame the ice queens were constantly trying to put out.\n\n\"Thank you, Ana...\" Sindi's eyes were on Leo. \"I'm honoured to be a part of this event you're assembling so amazingly on such short notice.\"\n\nAna couldn't take it anymore. She put her free hand over Leo's tight hold. Surprised at the touch he look down at her, his fingers loosening. Freeing herself was immediately possible and that is what she chose before turning her back on both of them.\n\n\"Ana!\" This time it was Kyle who found his voice.\n\nShe carried on walking, her heart a compressed wrecking ball trying to destroy her from the inside. Eric barked something and the band immediately stumbled its way into a new tune. Then footsteps again.\n\nLeo easily fell in step beside her. \"What are you doing?\"\n\nShe rounded the corner heading out of the theatre main space, relieved to see the exit ahead. \"Heading back to work.\"\n\n\"But this is your work.\"\n\nA few more metres and she'd be free.\n\n\"You will answer me, Ana\u00efs.\" He grabbed her hand again. \"What's wrong?\"\n\nShe carried on walking for as long as he wasn't using his strength to still her yet. \"I am not one of your charity cases, Leo.\"\n\n\"What the hell is that supposed to mean?\"\n\nSunlight. Freedom beckoned through the windows high above the side doors. But she was not free yet -- far from it. And it wasn't only because Leo was now pulling her towards a corridor that led backstage. Not because it was dim there and no exit doors were in sight...\n\nHis fingers interlaced with hers. He was dragging her from her determined exit now -- but had been pulling her closer and closer to him since day fucking one.\n\nIn the deserted corridor, she squared her shoulders and faced him. \"I'm not like everyone else.\"\n\nHe folded his arms. \"You already know that I know that.\"\n\n\"No, you don't get it.\" Her finger pointed first at him then at herself; her pretty manicure making her feel a little off-kilter. \"I don't fit in, but I know who I am. I like that I'm really good at being me... And I don't need you or anyone else to jump to my rescue and force anyone to be nice to me. That girl's arrogance bothered me far less than her disrespect to this industry. For every arsehole in it, there are ten of you keeping it real and good -- that's all I really care about. What matters is that we try to keep up-and-coming arseholes from losing their way when guided by their ego and ignorance; not that we force the outcast into VIP circles. My reaction was to punch her or help her grow -- both of which were pretty satisfying options. You turned it all into a pointless pity party.\"\n\nHe stood watching her. There was a lump in her throat and she wasn't sure that all her words had made it out. Her eyes shone, she knew -- and she wished confidence were the cause instead of tears.\n\nIf nothing else, let the dimness of this quiet corridor hide the tears and the tremors...\n\nHis hands were gentler when next he touched her. He pulled her to him; watched as she shook her head yet came anyway. In heels, her forehead was perfectly aligned with his lips -- and the kiss he placed there. Or something like a kiss. His lips remained there as he held her, his hands occasionally squeezing her to him, sometimes circling in imperceptible caresses.\n\n\"I made Sindi apologise because I respect this industry, too,\" he told her. \"It pissed me off that she doesn't see all you've accomplished here and what it takes out of you.\"\n\n\"She's young, Leo. She'd probably name some pseudo-American newbie as the definition of Mzansi sounds and go cross-eyed with confusion at the mention of Letta Mbulu or Caiphus Semenya.\" She looked up at him. \"Give her time... Or let me punch her.\"\n\n\"Imagine if we brought up Mahotella Queens or Miriam Makeba,\" he smiled.\n\n\"Or Johnny Clegg.\" Her eyes had a different shine now. \"Or PJ Powers.\"\n\n\"Ladysmith Black Mambazo. Or Jimmy Dludlu.\"\n\n\"Mango Groove.\"\n\n\"She'd ask if that's a tropical cocktail,\" he mused. \"Imagine... Chopin.\"\n\nThe lightness of the moment evaporated. \"He's not South African.\"\n\n\"I know.\" His arms around her felt warmer. \"I was just thinking about the difference between a girl who doesn't really understand the depths music can plunder... and a woman who's spending her life wrapped in it. Who wears it on her very skin.\"\n\nHer eyes closed. \"I have to go.\"\n\nHe squeezed. \"No.\"\n\nHer chest would smash open soon and she did not want him to see her heart.\n\n\"Why did you call me here, Leo?\"\n\nThe touch of his lips to hers was definitely a kiss.\n\nNot just because his tongue was so urgent and so familiar to her, but because he made her feel like the rest of the world no longer existed when they were like this. And it didn't exist, nothing else did. He held her at the centre of his focus and within the orbit of his arms.\n\nDrums. A new song was starting up on stage and the drums taunted her racing heart's beat.\n\nAna's hips pushed forward, her fingers disappearing into his hair. When he grabbed her arse and pulled her tighter against him, she groaned. A little voice of caution called her back to her senses; warning against violating her own resolution to keep things professional, and reminding her that she was in the arms of a man she could not afford to be caught kissing...\n\nLeo felt her fingers tighten in his hair and let her pull his lips from hers. The molten gold in his eyes never ceased to fascinate her -- she'd never been desired like that before.\n\n\"We can't keep on sleeping together.\"\n\n\"I had no intention of stripping you naked around the corner from my band.\"\n\n\"And I don't do --\"\n\n\"I know.\"\n\nThe seductive music notes made her wish they were having a different conversation.\n\n\"What did you call me here for, Leo?\"\n\nHis gaze slowly blinked to her lips. \"I just showed you -- but if you're still unclear, I'd be happy to show you again.\"\n\nThat snapped her spine straight. \"You made me rush over here for a kiss??\"\n\n\"You rushed?\"\n\n\"Gods above, now I have to wait for another cab. Do you have any idea how much I still have to do today?\"\n\n\"A lot, I imagine.\" He was trying not to smile. \"This makes you rushing over even sweeter.\"\n\n\"You said you --\"\n\n\"And I meant it -- I did need you.\"\n\n\"You just said this is work!\"\n\nHe cocked his head. \"I work very hard... to pleasure you.\"\n\n\"Please me.\"\n\n\"Both.\"\n\nLighter notes. The keyboard. Ana remembered hearing this song whilst skimming through the backtracks compilation Kyle had sent her the night before... It was more devastating live.\n\n\"I don't love you.\"\n\n\"Was that for me?\" He watched her, unshaken. \"Or for you?\"\n\nHer brow creased. \"I already know it.\"\n\n\"We're both clear then.\" His stare was a searing challenge. \"So, you're... safe.\"\n\nWas she? \"Yes.\"\n\n\"No more sex; no love.\" He touched a finger to her chin and gave her another peck before wrapping her hand around something. \"And I've been purged from your system. Good for you.\"\n\nHe left her there; heading back to the sensual sounds and vibrant energy on stage. Leaving her holding his car keys, the bloody keys to his very expensive car.\n\n\"I am not driving your car, Boreas!\"\n\nHe pushed the thick swinging door that opened onto the rear stage area. \"Of course you will -- fair trade for wasting two hours of your time, sweetheart.\"\n\nAna stood there with her hands on her hips until he finally disappeared from sight without ever looking back. The light outside no longer appealed to her. She wanted to duck the breeze's curiosity and curl up in the dimness where no one would find her; where she could sit in stillness with her rules... and her unsettling questions.\n\n*** VII ***\n\nLeo wanted to go home. But he also didn't want to.\n\nWhat most people didn't realise was that he actually enjoyed all parts of music. He loved performing live; the journey from concept through rehearsal to stirring a crowd. And he lived for making music; finding unspoken words and new sounds that best explain to the world who he was.\n\nBut there were also the tiring parts -- the rules, the expectations, egos and duties. The networking -- like racing back to the city at midnight to meet with that French producer who wants to give a private preview of her latest beats. Like counting down ten breaths when Eric's little prot\u00e9g\u00e9 tried his patience.\n\nLike trying to close his eyes without seeing Ana\u00efs' sexy floral heels and the way they made her legs... Damn it.\n\nChaos made him appreciate the peace of his secure estate and the privacy of his home. For the first time in five years, however, he also did not want that specific privacy. Not without Ana\u00efs there, giving him that intrepid look he liked. Not without her luscious lips and bold questions that made him open up more than even he expected to.\n\nHe enjoyed uncovering the nuances of her all-or-nothing presence: Ana\u00efs Kem had spent the weekend toppling his towers with the tips of her fingers; all he thought he understood about women, companionship, contentment, flirtation... love. She'd demolished it all.\n\nAnd what did he have to offer in return? Life under a microscope and a relationship that would be treated like the latest trending show. Melissa had hated it. Rightfully so.\n\nNo one deserved that.\n\nHe shook his head. No time for getting lost in his own head. Home would have to wait another hour anyway.\n\n\"... so it was either this or acting -- but no one was willing to negotiate half-day shoots on any of the soapies I wanted to star in and...\"\n\nSindi was in the backseat of Kyle's SUV, nearly an hour into talking about herself. Kyle was keeping her company to a degree, in between glances at his pensive friend. Soon they were back in the city and heading towards Fourways.",
        "\"So, I decided to give music a shot. This is my real passion anyways -- I just like the idea of being a soapie star as well.\"\n\n\"Tough decisions...\" Kyle muttered.\n\nShe leaned forward. \"Tell me about it! But worth it -- how many new stars get to kick off their careers on a Leo Boreas collaboration?! And meeting with Sabine!\"\n\n\"I'm meeting with Sabine,\" Leo told her. \"You nagged your way into a minute with her and then a cab home.\"\n\n\"Well, it didn't take much nagging to get you to agree.\" Her words were delivered close to his ear.\n\nWhen she stroked his arm, Leo turned to glare at her. She was shaken enough to withdraw her touch instantly.\n\nSindi was a child in all the senses that mattered most. She was new to music; inexperienced enough to think big talent that brought fame made her unique; and clueless enough about respecting dreams and goals to think the industries she was interested in needed to bend to her will. She also appeared to be flirting with the man who could be a source of more significant things than a fame fuck.\n\nThe first time Leo had picked up on her special looks and tones, it had irritated him. At twenty-two this girl had no idea the risks and pitfalls she created by pandering to her whims, by flirting instead of focusing on work. Well, the rest of the world would have to teach her -- after the gala he wanted her out of his sight.\n\nSabine arrived at Kyle's apartment minutes after them; fresh and friendly even at one in the morning. Kyle got his music station going while Sindi gushed and Leo shook the stiffness from his body until his hair fell forward, covering his eyes.\n\nIn the end, the short meeting was worth it. The new sounds were unexpectedly moody and intriguing.\n\n\"Of course, I am not saying you must use it.\" Sabine was draped across a couch as if it were a chaise. \"I am just saying... You must use it!\"\n\nHer laugh was throaty and it made Leo shake his head.\n\nThe two had first met in Madrid nearly a decade ago.\n\nIt was Leo's first tour that far from home and he was high on the crowd's roar after his second set. Sabine had walked into the VIP section after the show, her hair much longer back then, her entire body sheathed in supple leather. Together they had passed the rest of the night drinking cognac she had smuggled into the club; she talked and he listened. He was hard at the time, but did have enough sense to listen to her accented advice, her invitation to do a project in France... and her direct romantic rejection.\n\nAnd her creative sense had served him well over the years.\n\n\"This is your life, mon ami.\" One arm made a grand sweep towards Kyle's station. \"Music is your heart, non?\"\n\nA slight smile. \"Bien entendu, Sabine.\"\n\n\"Bon!\" She twirled her fingers around the invisible sounds surrounding them. \"Then don't let them take it away from you. You were young and faced some hardship; you took the time to go, to heal and to grow. But now you are back and you must let your heart beat again!\"\n\nKyle was keeping an annoyed Sindi occupied in the kitchen. Leo decided to opt for blunt truth in their brief reprieve.\n\n\"It was the worst kind of hardship, my friend.\" He met her dark eyes. \"The industry's a battlefield, sure; but it was losing Melissa and then Jamie that crushed me. I failed at putting enough love into music and my relationship and taking care of my sister. Work consumed me. I failed Melissa. And I couldn't... save Jamie.\"\n\nShe sat up straight. \"Now you listen to me, lion man. You know better. This thing you have, it is big. It is big and it makes you happy to make others happy with it. You are not that gorgeous girl in the kitchen who thinks music is reason to get strangers to ask for autographs -- you know better.\"\n\n\"So?\" he frowned.\n\n\"So?\" She stood up. \"So, now you have responsibility to grow and do better. You owe this to your art... They try to use you; they misunderstand you; the world demand too much; your lady, she crumble and go; even death, it comes to devastate you -- hardship, struggle, challenge, et patati et patata... Don't lose yourself in it, ami. The good, the bad -- it all teaches. And if you run from the bad, you reject important lessons.\"\n\n\"Jamie died, Sabine.\" He leaned over her. \"And Melissa was not just some lesson.\"\n\n\"Non,\" she concurred. \"Melissa was a woman you let go.\"\n\nHe towered over her. \"I was never given the choice! I planned my life around that woman and she changed into someone who no longer saw my love and our dream clearly. This industry fed on my soul and I still gave her all I could. But nothing I did was enough for her.\"\n\n\"And you let her go.\"\n\nThe words were soft, and the room suddenly too small.\n\n\"I loved her, Sabine.\" He wanted to walk out... but also needed to stay right where he was.\n\n\"Oui. But you still let her go.\" Sabine wrapped her arms around him. \"Music never did a thing to you that you could not handle, lion man. You were young and chose the wrong love, not the wrong industry. You walked away from life because you felt guilty about the girl and the way she demanded what you could not give -- it is okay; we all do this. L'anglais says it so poetically: all of us, we fuck up.\"\n\nLeo chuckled wearily, looking down at her petite strength wrapped around him.\n\nShe looked up at him. \"Jamie was taken from your family. Melissa walked away from your love. You walked away from music. Okay, it is done. But this heart of yours does not only beat for good, easy days. Let it beat for all the beauty of loving, losing and loving again. You can come back to your art with all your heart.\"\n\n\"And use your new sounds...\" he smirked.\n\nShe grabbed his face, squishing his cheeks. \"You listen so good! After the years, all of them, you learn to listen so good, lion!\"\n\nLeo laughed.\n\nAnd suddenly the day felt like one worth having. A long, raw... good day. Kyle opened some wine and even Sindi calmed downed long enough for Sabine to listen to their song and demand another bottle be opened. Kyle lined up the raw separates as Eric had instructed him to. From there, it was easy to pick a slot for one of Sabine's sounds.\n\nLeo closed his eyes and listened for the emotion that would choose to speak through them.\n\n\"Sleep,\" Kyle grunted. \"I need sleep. Then I'll get started on mixing.\"\n\nNone of them had noticed four o' clock unfurling and stretching across the city.\n\nThe sun was sneaking up on Leo by the time he got home; but that exhaustion was not the reason he grimaced as he punched his bedroom console, shutting the heavy, motorised drapes.\n\nHis grim resignation was at Sabine's final words before they'd parted.\n\n\"You know what we must do?\" Her fringe did not hide the mischief in her eyes. \"We must visit and be friends -- enjoy a good meal together, no work!\"\n\n\"You should come over,\" he'd responded. \"You've never been to my new place.\"\n\nShe laughed. \"On another day perhaps. Friday night we must supper in public -- leave your fortress and come back into the world. Bring friends and we will laugh and stuff our bellies -- and you can tell me the real reason your eyes shine so intensely now that you are back. I must know her name... Bonne nuit, lion.\"\n\n***\n\nLeo was grateful to have the morning off. He woke with hints of wine still in his mouth and Sabine's words giving him a headache. He pushed the latter to the back of his mind and headed into the shower.\n\nHis body wanted to move on autopilot through its usual routine, but the previous night's conversation had not let go of him yet. His privacy was crucial to him, but the thought that he'd subconsciously created a fortress to hide in out of guilt and pain... Maybe it was time to experiment with switching things up a bit.\n\nSo, he put on his sneakers and began a brisk walk to the main gates. Gardeners were teeming along the Jacaranda-lined streets, cleaning up the purple blossoms tossed about by the previous weekend's unruly winds. The winds that had brought him Ana only to abandon him now.\n\nHalf an hour after leaving home, the guards were surprised to see him on foot, but opened the pedestrian gate quickly.\n\nAnd Leo ran.\n\nI look to the skies for signs\n\nThe constellations outline\n\nher forever by my side \n\nI touch my lips to her wine \n\nto savour her\n\nI have a gift here\n\nHe turned his back on the sun and ran in the direction of busier traffic lines and the swollen clouds in the distance. For an hour, countless cars slipped by; pigeons paid him no mind; walkers passed him and their dogs tried to join him. Two girls pointed at Dream Reality posters then at him; and countless people did double takes then took pictures.\n\nLeo smiled. It wasn't too bad being out again.\n\nI have a gift here\n\nDivine and unshaken\n\nSomething new began pumping through him as he ignored the burn of steadily curving back up towards home. Sunninghill gleamed. Sweat dripped with each footfall.\n\nI have a gift here\n\nThe music played on inside him even after he'd stopped running.\n\n***\n\nThe afternoon was spent in rehearsal. Choreography was coming together -- everyone was starting to see the repetitive steps and lines as an actual performance now.\n\nIt was only when Eric suggested they wrap things up that Leo realised midnight was upon him once again. Music had a way of drawing him in and blinding him to setting suns and waning energy levels in others. The band was bleary-eyed and subdued. Calvin, their choreographer, was the only one still emanating keen vigour.\n\nLeo promised the band shorter Thursday and Friday sessions and thanked them as they blinked in confusion at their sudden release. He had to stop assuming everyone found the life force in music that he did; he had to remember that those who'd never walked away from it weren't undergoing the resurrection that he was.\n\n\"Anything wrong with your car?\" Kyle was the only one left walking out with him.\n\nLeo smiled. He'd arrived in what Kyle often referred to as his 'Plan B', a sporty little classic coup\u00e9 that hardly ever got to leave his garage. Kyle's sly nickname for the car was to point out that he alternated an expensive luxury vehicle with an exquisite classic -- he was a lifetime away from being the starving artist he'd been at the beginning.\n\nLeo only drove the coup\u00e9 on special occasions. Or when the Audi was out of commission... like being under the supervision of a resistant goddess.\n\nHer call to him that morning had been particularly entertaining.\n\n\"Are you home? I thought I'd swing by and drop off the car.\"\n\nThe copy of Henry &amp; June she'd read was still in his room.\n\n\"I'm not home and won't be all day.\"\n\nThe lie is light, easy. He nudged the book; it had nothing left of her touch to share with him.\n\n\"Then I'll bring it to Karma.\"\n\n\"I'm not there either.\"\n\nA pause before her next palpable attempt at patience. \"Then where are you?\"\n\nHe stepped out onto his balcony. \"Keep the car.\"\n\n\"No.\"\n\n\"Just for a while.\"\n\n\"Uh uh.\"\n\n\"You need it more than I do.\"\n\n\"So?\"\n\n\"So, stop focusing so hard on ridding yourself of everything to do with me and admit that this makes sense.\"\n\nSilence. He could picture her -- the way she twisted her chocolate-strawberry lips when holding stern words back; the way her toes pointed perfectly as if she needed a gesture that could assure her of her perfect control even when she had none...\n\n\"Why are you doing this, Leo?\"\n\n\"I've told you that already. But, if you need a recap, you're welcome to return to my bed and I'll recreate the moment for you.\"\n\nHer sigh was soft and sweet in ways she would frown upon were she aware of them.\n\n\"Moyo will be hiring me something less conspicuous tomorrow. So --\"\n\n\"I have back-to-back interviews tomorrow, remember? And a private project to fit in. You can't drop it off then either.\"\n\n\"What project?\"\n\nShe had a way of demanding parts of him -- reactions, answers -- in a way that made him smile. She might not want him... but she also did want him. She wanted to know what parts of her world to carve room in for him.\n\n\"I just told you: it's private,\" he said with a small smile that he knew she would hear.\n\nSilence. Lip twist...\n\n\"Okay. But on Friday you'll be at the Now Trending interview with Rose Red.\"\n\n\"As will you.\"\n\nToe point...\n\n\"Yes. As will I.\" Elongated sigh. \"I'll give you the car then.\"\n\nKyle thumped his shoulder to knock him back into the present.\n\nNo stars were in sight, thanks to the thick clouds hovering over them. But the night still looked bright, courtesy of the veritable galaxy of Karma lights. Leo felt a rush of anticipation at imagining the casino's lot filling with arriving gala guests.\n\n\"So, where's your car?\" Kyle asked again.\n\nLeo unlocked the coup\u00e9 with a casual shrug. \"Too far away for my liking.\"\n\n***\n\nThe two women ahead of her in line ordered coffees with names Ana barely understood. They were talking about how happy they were that it was Friday. Ana envied their work week rhythm that allowed them set hours and days off.\n\nThe tattooed boy behind the counter grinned when she placed her order: \"Just give me the strongest coffee you have in the biggest bucket you can find.\"\n\nAs she turned to leave, he tried to ask her something about the inked bird notes flying up her shoulder, but she kept walking.\n\nStupid bloody see-through blouse. The cursed boutique lady who'd entrapped her on Monday had assured her that it was a shirt and that it was neither see-through nor sexy. Lies. She'd gotten more attention than usual that morning in her calf-length pants and chiffon \"shirt\".\n\nThe heels didn't help either, but she marched on anyway. With her heels clicking along the paved bricks, her bag hanging from the crook of her elbow as she blew at her coffee... the blasted keys to a bloody Audi inside it... Ana wondered how much more Johannesburg planned on changing her.\n\nIt was either the city or the sophisticated gala she was coordinating.\n\nOr the man...\n\nShe cut that thought off. Nervous anticipation followed her, surrounding her every move like an almost-heavy aura. Her mind shifted to the afternoon schedule.\n\nThe Now Trending interview was scheduled for four o'clock -- everyone had to be there an hour before. Thandi had also mentioned something cryptic about a get-together after.\n\nBoth prospects stirred up wishes for something to fuel some courage and a lot of energy.\n\nThe mid-morning sun had gathered blazing strength. Ana\u00efs didn't care -- she sipped her coffee with relish. Heat on her skin, heat within.\n\nHer route from the coffee shop back to the mall parking lot took her past the funky radio station she had been at that morning. Rebel J, the host who'd interviewed her just an hour ago, was in the reception area. He spotted her through the patterned glass walls and his eyes lit up with recognition. A grin accompanied by a slanted, backward peace sign were directed her way.\n\nAna\u00efs couldn't help smiling in response.\n\nGreat interview, he mouthed. Thanks!\n\nShe saluted him, proud of herself.\n\nHe was right. The interview, her first conducted solo, hadn't been half the horror Ana had expected. After five interview-free years, this week had truly tested her on that front. Handling them smoothly actually excited her. She wasn't prepared to do it as much as Leo did, but Rebel had lifted her mood and confidence enough that morning to get a really fun and informative half hour out of her -- including taking a few calls.\n\nLeo.\n\nStanding before his ridiculously sleek car, Ana twisted her lips. She'd avoided spending any time alone with him for days now. It had bothered her, alone in bed three nights ago, to realise that she'd craved that kiss he'd called her for as much as he had. She'd never cared for attachment before; by her late teens she had sworn off the softer, more emotional caresses most girls sought.\n\nYet here she stood now, dreading the interview ahead yet looking forward to seeing him. She lit a cigarette and sipped more coffee.\n\nThis was not love. No.\n\nBut it was that light, absentmindedly familiar sort of trailing of fingertips along the inside of your palm.\n\nConfident fingers in your cunt make you come, relieve and release you immediately. But this... the ghost of a touch from fingers that know you inside and out? Slow trailing so soft it draws you out of yourself and into concentrating on the realness of it all: your heartbeat, your crevices and cravings... your need?\n\nNo connection was more dangerous than the one softly tracing her openly begging palms. His presence even from afar. She could feel him.\n\nThe cigarette smoke filled her lungs -- then felt too thick on its way back out.\n\n\"For fuck's sake...\"\n\nIt had been the same three nights ago when thoughts of him had propelled her out of bed to go light up under the starry sky. The menthol smoke was somehow too much for her with all that other chaos overflowing inside. She had inhaled and inhaled, waiting for serenity that never came.\n\nHalfway through she stubbed her cigarette out and threw it in a trash can with far more forcefulness than necessary. Just as she had for the last three days.\n\nAt least the coffee gave her the boost even chocolate milk couldn't have right then. The sun amplified the heat she took in and spread it all through her flesh.\n\n***\n\nThe drive to Auckland Park was far shorter than expected.\n\nOutside the broadcaster's studios, Ana inhaled deeply and exhaled reasons why the rest of that day would be fine. She was here; it was bustling with various television and radio staff and visitors... and the flow of the interview would, no doubt, match the seamless flow of these capable people she was witnessing. She stood there, recalling the success of her previous interview. Another smile snuck up on her.\n\nThe whole Dream Reality music team was made up of professionals... and none would let personal matters get in the day's way. Thandi, Kyle and Eric would be there as well -- so, it wasn't as if she had to worry about being alone with Leo. Rose Red's show was a pretty exciting platform; the country would be watching and she quite liked the idea that they'd get to spend an hour getting into real detail about Leo's talent and the tremendous work done at Dream Reality.\n\nShe straightened her blouse and tugged her handbag a little higher up her shoulder. Her reflection in the car window made her scrunch her nose.\n\nEverything would be fine. Not her outfit, but everything else.\n\nJust fine.\n\n\"Stare all you want, sugar -- but you're kinda aiming way outta your league right now.\"\n\nIt was strange how the voice managed to sound both melodic and biting. Ana looked up and into the bright eyes of a rather beautiful brunette accompanied by two equally beautiful blondes.\n\nAbsolutely nothing about them was familiar which had Ana wondering why the brunette was addressing her.\n\n\"I think you might have me mistaken for someone else,\" she ventured, forcing her face to relax and hold her smile.\n\n\"Oh, I know I don't know you,\" the woman replied. \"It's the owner of this sinful car that I know. Very well.\"\n\nGreat. One of Leo's women. A bitter ex or an over-zealous fan?\n\nAna didn't care to find out, and was in no mood for a scene in a broadcaster's parking lot.\n\n\"I have an appointment inside, so...\"\n\n\"He's impossible to get through to, you know. Just impossible. And then -- even when you have caught his attention -- you'll never be enough to keep it.\"\n\nThe blondes nodded. This was clearly not their first time hearing this summation.\n\nAna had been turning away, but stopped. \"You need to talk to someone whose place it is to help you sort through this... stuff. I am not that person.\"",
        "\"I'm doing you a favour here,\" she continued. \"You don't know what he's like, sugar -- I do.\"\n\n\"Leo is hardly a man I'd describe as impossible to get through to.\" Now why the hell would she go and say that?\n\n\"You know him?\"\n\nCrap.\n\n\"We're working together for a few weeks.\"\n\n\"Music?\"\n\n\"Yes.\"\n\nSmug disbelief. \"I don't believe you. Leo hasn't worked on anything in years.\"\n\n\"True. But turn on a radio -- or, better yet, your television in an hour: he's been giving interviews about a once-off project he's doing this new year. It's a really phenomenal charity gala for a wish-fulfillment foundation.\"\n\nThe woman drew back a fraction. \"For Dream Reality? His sister's carers?\"\n\nAna was sure her surprise showed. \"You know about his sis-?\"\n\n\"Melissa.\" The sudden intrusion of Kyle's voice snapped their little surreal moment into a whole new dimension.\n\nAna hadn't noticed his red SUV pull up and park near where they stood.\n\nBut it was seeing Leo with him that stilled all sound.\n\nHe got out of the car wearing jeans and a white shirt. In a moment of absurd sluggishness, all Ana noted was that he'd need new shirts soon if he carried on working out at the rate he was going. Her eyes went no higher than the bulge of his arms and shoulders. Yearning made her palms tingle with the urge to run her hands along the solidness of him.\n\n\"How have you been, Mel?\" Points had to be given to Kyle for his attempts at normality.\n\nSo. This was Melissa. The woman who had been -- and quite possibly still was -- the centre of Leo's existence. She had intensely green eyes. And a certain air about her, an entitled presumption that she was important... that she mattered to whomever was around her.\n\nShards of something blinding and cold embedded themselves in Ana's chest.\n\nWhen she finally raised her eyes to Leo's face, it was to see him looking at Melissa as if transfixed.\n\nHe was speaking as well, but all Ana could hear was the oceanic roar in her own ears. She'd never been in this sort of situation before and had to fight the impulse to bolt. More than anything, she did not want that woman to see how hard this was for her. Did not want her to know that she was right: that Ana had no business standing next to this car or its owner.\n\nMelissa was Leo's world -- and Ana was completely out of her depth.\n\nMelissa then said something, her eyes alive and fixed on him. Ana could picture them as a couple -- a rather gorgeous one, too. Even now, years after they'd broken up, they still seemed to fit together somehow. And, after the weekend she'd spent with him, she could even picture Leo taking care of Melissa. Could imagine what their intimate moments looked like.\n\nA sound escaped, and Ana realised she had made it. Leo turned to her. Melissa was still talking, but his attention was solely on Ana now.\n\n\"Ana\u00efs, this is Melissa.\" The woman's name, hardly a rare one, took on a whole new texture when he said it. \"I had no idea she'd be here today, so this is a bit weird... Melissa, I gather you've gone ahead and made yourself known to Ana\u00efs.\"\n\nHe was coming closer, taking the last couple steps to Ana -- his eyes still on her even as he addressed his ex. Again she had the urge to move away, but that would just be daft. She tried to do the polite thing instead, tried to smile and tell her lover's ex that she was delighted to be caught in such awkwardness with her.\n\nBut no words came.\n\n\"Weird?\" The bite in Melissa's tone had a new edge to it. \"What is that supposed to mean?\"\n\n\"Ana\u00efs?\" Leo was taking her hand and that was the worst thing ever.\n\nHe hadn't touched her in ages and she had just started getting used to that. Getting used to living with the need and ignoring it. And now he was touching her again -- and at the worst time possible. In front of a woman who knew his touch even better than she.\n\n\"What the hell, Leo?\" Melissa was grappling with no longer having his full attention. \"You walked in and walked out of our life as you pleased. But I'm the oddity, right?\"\n\nLeo's thumb was brushing meditative circles along the back of Ana's hand. Flickers of amber in his eyes were clear signs of his own awareness of being close to her after the days they'd spent as far apart as they could get.\n\nHow could that be real? How could he look at her like that while the love of his life stood less than a metre away?\n\nEven Melissa was picking up on something more than she'd previously registered. \"What is going on here?\"\n\nThe question almost made Ana laugh. She'd been asking herself the same thing since setting foot back in Johannesburg. What on earth was going on? What was she doing? What was this lion of a man doing to her??\n\nShe pulled free and got the car keys from her bag. \"You should take these. Turns out I don't belong in... that car.\"\n\nHe looked down at her, his eyes firing one silent question after another. She held his gaze, letting her own answer him for her. No matter how crazy things had gotten this was one unique aspect she had instantly gotten used to -- this ability they had of communicating without saying a word.\n\nShe had a close bond with Thandi, even her mother -- but nothing quite like this unspoken speaking.\n\n\"Leo, why was this woman driving your car?\"\n\n\"Mel...\" Kyle was trying to help diffuse the situation though not sure how.\n\n\"What, Kyle? I have a right to know.\" One of the blondes tried to placate her, but Melissa shook her friend's hand off, her face hard. \"This woman here claims she's just a colleague -- yet she has access to his car and heavens knows what else. She spoke about him as if she knows him intimately. Is that how it is, Anise?\"\n\nAn unexpected calm crept up her limbs and measured out her breaths.\n\nAnger or insecurity were usually her first reactions to confrontation. But not this time. It was painful to contemplate this arrogant beauty's place in Leo's heart -- but the way her voice shook calmed Ana. Melissa was scared, and Ana knew how that felt.\n\nShe tilted a wisp of a smile the other woman's way. \"It doesn't matter how it is between Leo and me, Melissa. You don't care about that.\"\n\n\"Well. You're a cocky one, aren't you?\"\n\n\"No, just empathising.\" The words seemed to come from a part of herself she'd never known before. \"Believe it or not, I recognise myself in you. For years I thought I was strong and happy and doing just fine. Now... I don't know. Maybe I'm as out of whack as you appear to be. Maybe I'm seeing and saying things that don't match with reality. The way you just spoke about Leo... Nothing you said made any sense to me, that was not the man I've come to know. At all.\"\n\n\"Obviously you don't know him. At all.\"\n\n\"Or you don't.\" Ana's smile gained confidence. \"Maybe you never did.\"\n\nMelissa stepped closer. \"A two-minute crush and you think you can tell me about Leo?\"\n\n\"That's not what I'm trying to do.\" Ana weighed her next words before continuing. \"You're the one asking about me -- so, I'm telling you about me. I'm carrying some burdens, just like you. And I'm seeing right now what the past could do to me if I let mine crush me, too. I've been at war for years -- against no one but myself.\"\n\n\"How poetic,\" Melissa sneered. \"He's rubbing off on you, I see. That'll fade soon enough.\"\n\nAna squared her shoulders. \"I might not know you, sunshine -- but I do know that I don't like the way you suck the joy out of spaces you enter. God help the people who have to deal you daily. Two things: Leo deserves better than the shit you talk about him -- I will never just stand by and watch you drag him down into your little puddle of bitterness. Secondly, when you next speak about me, which I'm sure you will, the name is Ana\u00efs. Anise is a fucking plant.\"\n\nShock. Silence.\n\nAna had expected Melissa to lash out at her, but the other woman's eyes simply widened as shades of red rose in her cheeks. No words attacked her, no sneers or threats.\n\nAnd, as Ana stood facing her, the surrounding world reasserted itself. She became aware of chatter in the distance, music pumping from a car entering the gates, a few interested glances from passersby. And the one thing centering her: she was most aware of Leo's hand now on the small of her back. Most likely there to keep her in check, but she was grateful anyway to have him standing on her side of this critical confrontation.\n\nHer epiphany, still only half-formed, had shaken her -- but she'd damned before giving away her startling vulnerability.\n\n\"Kyle, could you take Ana\u00efs inside?\" Leo finally spoke, the familiar authority in his tone reassuring to her. \"Melissa and I have a couple of things to clear up.\"\n\nAna shook her head. \"I'm fine. He doesn't have to --\"\n\n\"Please, Ana\u00efs.\" His low-pitched plea surprised her. \"For me. Annoying as this gets, I can't shake the need to make sure you're okay. I doubt any one of us is 'fine' right now. Call me selfish, but I would just like to know someone I trust is with you until I come inside. I'll have a word with Melissa and be right there.\"\n\nHis words, the way he spoke them, made her miss the nights he'd soothed her to sleep with whispered lyrics. This man was far too good at squeezing at her heart. It was becoming too easy, this lunacy of letting him take care of her with such earnest dedication.\n\nShe touched his cheek. \"You're a good man, Leo.\"\n\nHe watched her closely, suddenly torn between wanting to send her away and needing to talk to her. She could tell that he was picking up on the shifts within her, but wasn't sure what they meant.\n\n\"And you're a gullible little girl.\" Melissa's statement held more spite than bravado. \"He needs a string of women the same way he needs millions of fans. None of this is real to him. It's all one endless show, a performance.\"\n\nAna straightened her spine. The way she used to as a young dancer, imagining a magic string from her heels, through her legs, up her spine to the crown of her head. Hips and shoulders aligned... chin up.\n\nShe looked into Melissa's eyes and felt a little sad. \"All the best, Melissa. Misery is a cold place and I hope you don't stay there much longer.\"\n\nHer calm, kind words froze the confused brunette's tongue.\n\nHer heels clicked along as she let Kyle lead her away. He looped an arm around her shoulders, making her wobble a little. Sharing a moment with her new friend made her smile. There was so much to sort through, but she was starting to see a little light. Understanding was flickering somewhere inside her.\n\nLeaving Leo behind was the last thing she wanted to do, but it was necessary.\n\nShe stepped more confidently. The heels weren't so bad anymore.\n\n***\n\nThe broadcasting complex peered down on Auckland Park from its elevated throne on a hill's incline. The reception area was spacious and bright, set above the parking lots. The soapie stars who held the elevator doors for Ana\u00efs got off on each of the three floors above reception.\n\nAna\u00efs and Kyle continued on above all that.\n\nA few floors up the two of them were rushed through to the hair and makeup rooms where Eric and Thandi were already waiting. Thandi's eyes instantly shot curiosity her way, but Ana merely shook her head. Twenty minutes later, Leo entered and a new buzz seemed to hum through the studios.\n\nRose Red immediately sashayed over to greet him. She had the deepest red hair and sharp eyes that cut to the core of those she addressed. Ana watched the way she melted a little at Leo's greeting.\n\nWas Melissa right? Did Leo have many women in his life?\n\nPossibly. He'd certainly had a way of drawing me in -- and Thandi. And Sindi... and basically every tittering tart in between.\n\nAna huffed.\n\nBut he couldn't be faulted for that, could he? He'd never set out to attract anyone the way he had -- and every relationship had been professional.\n\nShe flashed back to the night he'd sat at her feet, massaging her.\n\nOkay. Most of his relationships had remained professional.\n\nIn front of the camera, Rose Red took control and the intelligent, charming host Ana was accustomed to re-emerged. The stage was bigger than Ana had expected, hot lights exposing every flicker, fumble and facial expression. She blinked at the oversized couches, not liking that there was literally nowhere for her to hide.\n\nLeo was seated nearest Rose Red and had asked that Ana be by his side. Thandi jumped in next to her. Eric followed, and Kyle next to Eric. The only thing keeping her from bolting was the assurance of having her familiar crew all around her.\n\nAnd all of them so freaking relaxed, too.\n\nEven after the cameras started rolling and Rose Red had introduced the team, Kyle was his usual flirtatiously funny self. Eric thanked Leo publicly for asking the show to acknowledge his whole team instead of sticking to a solo interview. Kyle turned that into a joke about Leo being helpless without them. Which somehow morphed into a joke about having orgies. It was so much like the ribaldry tossed about in studio on their late nights that Ana forgot her nerves.\n\nShe returned Thandi's excited grin, feeling her shoulders relax.\n\nThe interview opened with Leo's life. Loving yet disciplined parents who'd put him through musical training from a very young age. Strict routine and endless practice which had him playing complex pieces on multiple instruments by his mid-teens.\n\n\"But I've always had a special connection with the piano above all else,\" he concluded.\n\n\"And it shows in your love songs.\" Rose Red's palms were pressed to her chest. \"The nuance and sensitivity you write into your romantic music... You have a gift for touching the soul, Leo.\"\n\n\"Thank you, Rose.\"\n\nAll Ana could think about was the first time she'd listened to Chopin, the years of all the artists who'd touched and torn her open. Moulded her. The day, nearly a decade ago, that she'd had classical music inked into her being.\n\nRose Red was right. Leo had that same ability to connect with the gift that called to him and deliver it with all its beautiful shades and nuances to his listeners. And, even outside the music, his every look and touch did the same to her. Showed her what he saw in her... with a clarity that was overwhelming.\n\n\"It is so lovely seeing these music greats together as a group,\" Rose Red smiled halfway into the interview, \"but what about Ms Kem? So little is known about you, Ana, yet here you are next to a star who refused to do this interview without you by his side. Which piece are you in this puzzle?\"\n\n\"I'm... a glorified runner, I guess,\" Ana shrugged. \"There are a million small things that need to tie together to make one big show. With Moyo Management doing so well now and Leo being our biggest client to date, Thandi Moyo wanted me in as backup in ensuring that we don't lose track of those million little threads.\"\n\n\"Understatement of note!\" Thandi protested. \"I brought her in to assist me getting the show together, yes, but Ana has done so much more than expected. She took a basic show line-up, somehow tracked and locked down the best musical director in the country, and turned the initial shindig into a bona fide album within its own right. She has cracked a whip behind every single person involved in this project from the star himself to the venue managers to the staff at the children's foundation -- focusing every moment of every day on this plan succeeding in the best way possible for everyone.\"\n\nAna hadn't really thought about how big her job was. Sure, her body had even crashed along the way, but she'd always been the sort to brush off her own struggles and focus on her teammates and the bigger goal. Just getting the job done.\n\nThandi's words lined up like that sent warmth through her.\n\nShe patted her friend's shoulder, words stuck somewhere in her throat.\n\nEric nodded. \"This started as a nice concept -- some entertainment with a charity drive chucked in somewhere in the mix. Ana turned it into a quality comeback worthy of carrying Leo Boreas' name.\"\n\n\"Is this your comeback then, Leo?\" Rose Red asked the quiet man.\n\nLeo leaned back. Ana recognised the position -- he did the same thing at home when on the phone with people who had something he wanted. He'd lean back as if not to give away how much he wanted something.\n\n\"This is the part where you nod, Leo.\" Kyle's quip stirred up a few chuckles.\n\nLeo's eyes found hers for a moment and she widened hers briefly with a smile, as if to ask, Well?\n\nHe turned to Rose Red. \"I've missed music a lot in my years away, more than I'd realise before starting this project. By the time Thandi had strong-armed me into doing this,\" laughter from Thandi, \"I'd decided that it would be a once-off. A proper goodbye to music, if you will. Now...\"\n\nAnticipation made Rose Red and the other guests lean towards him; even the camera crew and those beyond were focused more on him than the cameras and screens.\n\n\"And now...?\"\n\n\"I'm not sure.\"\n\n\"And what would it take to tip you over into saying yes?\"\n\nHe stretched one arm out along the backrest. It didn't touch Ana, but his hand was right behind her back.\n\n\"A lot has been happening -- I couldn't break it all down for you if I tried. But I will say that the past couple weeks have sledgehammered me with a wakeup call or two.\" He shifted, his arm extending a little further. His thumb briefly brushed her spine. \"The first being that my reasons for quitting music and my entire mind space at that time had been so messed up that I'm having to start all over again in figuring out where I stand and what I want. Taking time off had definitely been necessary. But I'm not the wreck I thought I was... which means quitting might not have been the solution for me.\"\n\n\"We've all been there, I think,\" Rose Red responded. \"Those cycles in life where you're meant to grow into whatever level is next for you... And we have definitely all misread some of our lessons before.\"\n\n\"For the first time in years I'm able to look at everything I've been through as really important.\"\n\n\"And is that what has you coming back to music.\"\n\n\"Considering coming back,\" he grinned, \"but, yeah. It's one of the reasons.\"\n\n\"And could another be... love?\"\n\nAna's heart slammed. She told herself she was being ridiculous, but there were parts of her that still imploded and shattered at the thought of Leo in love. He casually crossed an ankle over a knee... but she noticed a muscle jump in his jaw.\n\n\"Why would you ask that?\" he countered. \"Everyone knows that love not working out for me was part of the reason I left music in the first place.\"\n\n\"Your break-up with Melissa Tyler.\"\n\n\"The one and only,\" he replied. \"It was very messy and, unfortunately, extremely public.\"\n\n\"And how are you now? Speculation has it you two are on speaking terms again.\"\n\n\"Who might be speculating that?\"\n\n\"My production manager happened to see you out in the parking lot,\" she explained before adding with a grin, \"please don't think we're stalking you 24/7 -- Wendy was on her way in and just happened to notice you two chatting.\"\n\nLeo inhaled slowly. \"Yes. That was actually our first time seeing each other in two years.\"\n\nEveryone's eyes widened, including Ana's. She'd been so sure Leo was still pursuing Melissa -- at the very least, still in touch with her.\n\n\"We've both moved on,\" he continued. \"And it feels good to be free of the past.\"\n\nFree. The concept flickered around Ana, making her shut her eyes briefly. Since meeting Leo she had felt nothing but free to be herself.\n\nAnd what did she do? She pushed him away.\n\nDespite having a few interviews under her belt, the rest of their hour was slightly strange. Rose Red covered the gala details and got Leo to give a foretaste of what attendees could expect music-wise. There was much laughter as Eric and Kyle helped describe what it was like putting everything together on such short notice. Moyo Management got so much attention, there was no doubt the following year would be a major one for Thandi.",
        "All eyes turned to Ana when the questions popped up regarding the Dream Reality and Karma profiles. She focused on her hostess and, in as relaxed a manner as her nerves would allow, answered them as she had the ones earlier that morning. It wasn't so bad, really -- especially with the experienced interviewers she had that day.\n\nLeo's thumb touched her spine again. The tightness in her shoulders dissolved.\n\nDuring the ad breaks makeup assistants rushed in and the director and Rose Red conversed quietly. Ana took deep breaths, listening to her companions chat.\n\nIn the last five minutes she felt at ease and happy to be wrapping up.\n\n\"So, Leo,\" the gleam was back in Rose Red's eyes. \"Forgive me, but I simply can't resist prying...\"\n\nLeo shifted in his seat, unintentionally leaning a little closer to Ana as his gaze zeroed in on Rose Red. \"Go ahead. I've been baring my soul all month.\"\n\n\"You and Melissa are on speaking terms now, but clearly aren't back together.\"\n\n\"And won't be in the future either.\"\n\n\"Yes,\" her head titled playfully as she prepared for her next point. \"And, though there have also been a couple fleeting rumours about you and Sindi G, I'd hazard a guess at that...?\"\n\n\"Being no more than overly romantic observers projecting heaven-knows-what onto a gruelling yet completely platonic partnership. Sindisile is young and talented -- I just liked the idea of a new voice rising out of what might be my farewell to music.\"\n\nAna rolled her neck a little, finally looking at him. He met her eyes briefly with a neutral smile. No feelings for Sindi then. They were both keeping matters professional for the sake of the interview, but she could tell he was telling the truth.\n\nHe'd always been straightforward with her.\n\n\"Well, then my next question should come as no surprise. What about you and Ana?\"\n\nThere was a gasp, one Ana thankfully noted came from Thandi and not herself. Heart pounding she sat as still as possible trying to turn her brain the right way up again. She couldn't have heard what she thought she'd heard.\n\n\"Ana?\" Leo had gone still as well.\n\nIt was strange hearing him speak the shortened version of her name, the nickname he had refused to utter no matter how many times she'd insisted.\n\n\"Yes, Ana\u00efs Kem,\" Rose Red encouraged. \"Your assistant.\"\n\n\"My manager.\"\n\nHer eyes widened. \"Well, I was just --\"\n\n\"Leo is correct,\" Thandi jumped in. \"Ana has run everything while I was setting up future projects in Botswana. I specifically brought her in because I needed way more than just an assistant -- and she did not disappoint. Her reliability and professionalism went way above my basic guidelines.\"\n\n\"And I'm to deduce that it was all just professional, right?\"\n\nLeo looked at Ana.\n\n\"Right.\" Ana straightened in her seat. \"We've all worked closely and I suppose silly ideas could have popped up about me and anyone on this team. But professionalism comes first to me, Thandi and these gentlemen here... And Kyle.\"\n\nLaughter.\n\nShe looked around at each one. For some reason, Leo didn't seem altogether pleased with her answer. His expression was baffling, but a tv interview was not the place to delve any deeper.\n\n\"That does make sense,\" Rose Red conceded. \"But why would all the rumours, though few for now, focus so strongly on you and Leo? I must say, seeing you two together even has me feeling like there's a tangible vibe between you.\"\n\n\"Between me and Leo?\" Real amusement laced her question. \"He's a huge star -- people are constantly linking him to romance or scandals. This pairing is the most inventive yet, I must say. I'm literally everything he is not.\"\n\n\"They say opposites attract, dear.\"\n\n\"Oh, come on -- we're talking way beyond opposites. I don't even fit in his flashy world. So, it's rather funny that anyone could picture us together.\"\n\n\"That's a no then?\" Rose Red asked.\n\nLeo suddenly squeezed Ana close in a half hug. \"Ana\u00efs is my hero and will always hold a special place in my chaotic heart... but you heard the lady. It's a no.\"\n\nThe signal was given to wrap it up, and Ana couldn't have been happier to note the floor manager's twirling gesture and hear Rose Red retreat to an update on the next day's show. After the farewells they sat there as the mics were cut and the credits rolled.\n\n\"I'm sorry to spring that soapie stuff at the end on you two.\" Rose Red was still smiling brightly as she apologised. \"Fans lap that sort of thing up. I wasn't going to go into it, but seeing you two together made me decide to poke around a bit.\"\n\n\"No worries,\" Ana, aware of the cameras on them, kept her smile equally bright. \"We're all just here doing our jobs, I guess.\"\n\nLeo was looking directly at her without saying a word.\n\nAs soon as the credits wrapped and they were released, she was the first one rushing out door after door, past the other studios, down the elevator and signing out the building. The sun and fresh air were almost like physical blows to her suffocation. She stood there taking deep breaths.\n\nThe suddenness of the open space threw her a little. She barely noticed Leo's sleek Audi pull up.\n\n\"Get in.\"\n\nLeo was wearing sunglasses now, his wrist resting on the steering wheel as if he had better things to do. The two words were stern enough to get her to take two steps towards the car.\n\nShe stopped herself at the edge of the pavement. \"No. I need to get back to Moyo; you're heading out to Karma. I'll Uber -- or catch a lift with Thandi or something.\"\n\nA cheerful double honk drew her attention to Thandi waving as she passed in her Mercedes.\n\n\"That cow...\"\n\nLeo's lips curled a little though it couldn't be called a smile. \"Get in, Ana\u00efs. I'm not going to Karma. You rushed out before I could tell you that I gave everyone the evening off. A friend of mine suggested some fun, so we're all heading over to Muti to meet her for drinks.\"\n\n\"Her?\" The word slipped out before she could stop it.\n\nThis time he did smile. \"You're not going to pull that card on me after defending my honour so admirably in there, are you?\"\n\n\"I only told the truth.\" Her cheeks annoyed her by actually warming.\n\nRaised eyebrow. \"Even when you claimed nothing had happened between you and me?\"\n\n\"What?\" She leaned back in outrage, raising her palms challengingly. \"You didn't honestly expect me to tell her I ran straight into your arms the day I met you, did you? 'Oh, funny story, Red, heehee. I jeopardised the biggest gig I've ever been in charge of for some free food and good sex, hawhaw.' Yeah, that would have played out splendidly.\"\n\nHe was grinning at her now. \"Get in, sweetheart.\"\n\nAnd she did. The man didn't know it yet, but she was in real danger of doing anything he wanted when he looked at her like that. Like he really cared. Like he actually enjoyed her for whom she was...\n\nSitting beside him, she bit her lip at how at home she felt. Re-establishing their boundaries was going to take some serious work.\n\n\"No, I wouldn't want you to put it like that,\" he told her as he merged with the evening traffic. \"I'd want you to tell the truth: That you did all that for free food and phenomenal sex.\"\n\nAna thumped him as he laughed outright this time.\n\n*** VIII ***\n\nMuti was a retro African restaurant and cocktail bar. A chic setup in Newtown.\n\nMusic spilled out onto the open square as they approached.\n\nThe outside tables were all occupied, a range of patrons glancing up at them as they approached. Creative-looking Afrocentrics who might have meandered down from the theatre; slick-looking business types in clean-cut suits; quite a number of well-dressed couples; and a couple of ladies' tables cast with glamorous beauties clearly just beginning their night on the town.\n\nLeo's hand on the small of her back guided her towards the entrance. Ana berated herself for melting at something as trivial as that: having one man's touch make her feel like she belonged somewhere. By his side, no less. Laughable.\n\nHe asked for the most secluded table available and they were led to the deserted area around the corner from the bar. The music also wasn't as loud that side.\n\n\"You look beautiful,\" he told Ana whose heart was still doing a silly flutter at him holding her chair for her.\n\nShe opened her mouth to protest, but immediately snapped it shut again.\n\nShe had been feeling different lately. It wasn't the new clothes or the attention she'd been getting from working with a star. The people around her had gotten her so relaxed in her own skin that she had finally begun to understand that things like acceptability, goodness -- and beauty -- had little to do with their dictionary definitions or even societal trends. They were coloured by being authentic and comfortable in one's skin.\n\nAnd it was okay to be those things and know it. It was okay to feel okay.\n\nHer cheek dimpled, her eyes large. \"Thank you.\"\n\n\"I don't see Kyle getting much done if you keep exploring this new look of yours, though. He couldn't take his eyes off you today.\"\n\nShe ran a hand down the length of her ponytail. \"I hadn't noticed.\"\n\n\"Good.\"\n\nLeo wouldn't allow a single word about work.\n\nThey were alone for a good half hour, sipping lemonade and swapping stories about their funniest relationship and sex moments. Which turned out to be more fun than Ana had expected -- she was amused to realise she had crazier stories than Leo, and enjoyed the way he laughed at the sort of tales others would find shocking or even scandalous.\n\nThe way his golden gaze stayed on her, taking in every word, still made her stumble a little over her words.\n\nShe ended with a story about a \"morning after\" panic.\n\n\"I shouldn't have gone out at all the night before. I mean, I had to be in town early to pitch our drama series concept.\" She held her amusement in check as she fuelled his. \"So, imagine my fury at waking the next morning to find the sun blazing already. Which was made worse by discovering a complete stranger bringing me breakfast -- in nothing but an apron. What fucking episode of Real Desperate Housewives is that shit from??\"\n\n\"Hey, some of us are just nice people -- it balances out your delightful personality,\" he admonished. \"Besides, I made you breakfast.\"\n\n\"Yeah, but I know you. Plus, I'd invaded your home. That guy gave me such a shock I leapt up to punched him in the solar plexus then threatened him with my taser.\"\n\nLeo's head dropped back as the laughter bellowed out of him.\n\n\"Contain thine self, Boreas -- I'm not done yet,\" she squinted at him.\n\n\"How is that not the end of the story? What more could there possibly be?!\"\n\n\"Just the minor detail of the poor man who could barely breathe by then having to find a way to talk nevertheless... and explain to me that he wasn't a rapist as we'd actually had a great time the night before -- bits of that did come back to me as he spoke... and that he was definitely no robber as I was, in fact, in his place, not he in mine. So.\"\n\n\"You assaulted a man you'd slept with?\"\n\n\"Hey, not all of us like to cuddle after sex.\"\n\n\"In his home?\"\n\n\"All the way in fucking Simonstown. After finally realising I didn't know the flat I was in, I gathered up my stuff -- accidentally stole a tee of his in the process -- and then had to mission all the way to town. Two hours later, I was bullshitting my way through our pitch to very angry prospectives who, I'm sure, would have been supremely impressed with me had they known how hungover I was through that entire pitch.\"\n\n\"And you never saw the guy again?\"\n\n\"That's what makes it, by definition, a one-night stand, oh, observant one. Needless to say, it was my last.\"\n\n\"I'm glad to hear that -- we live in a dangerous world, Ana.\"\n\n\"Actually, I was more pissed off at having risked such a huge job,\" she shrugged, \"but you're right -- condoms, combat skills and mini torture devices can only protect a girl so much.\"\n\nHe grinned at her. \"You're great, you know that?\"\n\nThey'd been laughing like silly idiots, so the deepening intensity just past his grin took her by surprise. The stories she'd told had never exactly ended in admiration before. He laughed with her at stories others had frowned upon.\n\nShe never saw these moments coming. The infinite rolling wave of discovering new elements in him then herself then them together... him, her, them. Other people would be boring and predictable to her by now -- but not this man.\n\nShe didn't know what to make of someone this unperturbed by even the wildest parts of her. And who got her to enjoy knowing herself this much.\n\nShe was a little relieved when one of the glamorous lady groups came in to find them in their quieter corner. The women stepped forward confidently to praise Leo's work and shower the man himself with compliments. All four of them were very blatantly flirting with him.\n\n\"I'm flattered, ladies, thank you.\" He was nice about it, but clearly maintaining his distance. \"I am in the middle of something important, though, so if you don't mind...\"\n\n\"Ooh, can I get a picture with you?\"\n\n\"Me, too!\"\n\nHis eyes flicked to Ana then back to them. \"Actually I would rather --\"\n\n\"The simplest solution would be for me to take all the pictures,\" Ana interjected, ignoring the look on Leo's face. \"Give me one of the phones and I'll take a pic of each of you.\"\n\nWhen the first woman to step forward tried to sit in his lap, Leo's refusal was grim and direct. She was disappointed, but settled for posing next to him with the bar and rest of the sunset-lit restaurant in the background. The other three followed suit.\n\n\"And now, how about a group shot?\" Ana asked.\n\nLeo tilted his head at her warningly, but complied, letting the ladies flank him with big smiles. Ana grinned at him over the camera. Once they were ready, she snapped a couple shots.\n\nLeo was first to step out of the pose and retrieve the smartphone to hand it over. After profuse thanks and lingering hugs, the group left.\n\n\"Well. That was unexpected.\"\n\nAna's eyebrows shot up. \"Really? I find that hard to believe. I picture people -- women in particular -- falling all over themselves to faff over you.\"\n\n\"No, I meant you volunteering as photographer.\"\n\n\"Oh. Only made sense,\" she shrugged. \"Or they'd still be here going in circles over who's taking who's picture with which phone... meh.\"\n\nThe expression she pulled made him chuckle.\n\n\"True, but you're still missing my point.\" He clasped his fingers together. \"I'm usually left dealing with jealousy once fans like that leave.\"\n\n\"Jealousy?\" Her eyes widened. \"Oh, right...\"\n\n\"Yeah.\"\n\n\"Well... fans are just fans,\" she said. \"This is just part of the job, isn't it? A part I'd have little patience for, I might add.\"\n\n\"It's part of my daily life -- I'm used to it by now. But not everyone understands that.\"\n\n\"And, if you felt the urge to sleep with any of your fans... Well, that's none of my business anyway -- hardly my place to get jealous.\"\n\nHe leaned back. \"You know, you're not as good as you used to be at saying things like that as if you really feel that way.\"\n\n\"How I feel never mattered, Leo,\" she told her empty lemonade glass. \"It's a simple fact that you are free to sleep with whomever you want. As am I.\"\n\n\"No, you aren't.\"\n\nHis casual tone goaded her into meeting his relaxed gaze. \"Is that so? And who decided that?\"\n\n\"Me -- and you,\" he answered. \"We bonded the day we met -- fear and rules can't take away the fact that something inside me belongs to you now, Ana\u00efs.\"\n\nHis words swirled in her chest, making her eyes tear up a little. Why would he not let go of her?\n\n\"And you belong with me. That's why this distance between us isn't working, sweetheart.\" He leaned forward again. \"That's why you challenged Melissa just like I challenged Sindi. They'd crossed our lines. True?\"\n\nShe stared back at him, too afraid that blinking would make her emotions spill over. A kwaito song thumped in the background, mocking their serious moment.\n\n\"I must be at the wrong place -- I thought we were getting together for the fun time!\"\n\nA woman with pale skin and black hair plopped down at their table. Ana barely had time to react before Leo was grinning at her, flicking the fringe that hung in her eyes with the tip of a finger.\n\n\"Ana\u00efs, this is Sabine -- she will be the death of me someday. In the meantime, she has graced us with the extra Dream Reality track I messaged you about. Sabine, Ana\u00efs.\"\n\nAna's eyes widened. \"You did that? It makes me think of slow dancing in the rain... Shit. I mean, I like it. That's how a normal person would put it: I like it.\"\n\n\"So, this is her, lion man?\" The woman's dark eyes took Ana\u00efs in from head to toe.\n\n\"I'm sure I have no idea what you mean.\"\n\nShe ignored Leo and turned to fully face Ana. \"You have direct eyes; I like that.\"\n\n\"Thank you, I guess.\"\n\n\"Oh, is a very good thing. These days it's hard to know whom to like and whom to trust. You look like a tough cookie, but a yummy one.\"\n\nAna chuckled. \"I can honestly say I've never gotten that before: both the instant acceptance and the weird compliment.\"\n\n\"You must be careful of this one,\" Sabine gestured Leo's way.\n\n\"Is that so?\"\n\n\"I can't believe you're listening to this traitor,\" Leo cut in. \"You don't even know her.\"\n\n\"She seems to know you well enough. And I could do with all the tips I can get.\"\n\n\"His heart is like your eyes, you see, direct and intense,\" Sabine carried on. \"And you both feel the magic within music in a way others would never comprehend. Anges ci-dessus, I beg that you don't let him fall in love with you, cherie. This can be a wonderful or a terrible thing -- so, you cannot allow it unless you are sure you know what you want.\"\n\n\"Leo is not falling --\"\n\n\"Okey dokey!\" Sabine, threw her hands in the air, ignoring Ana as well now. \"Party time!\"\n\n***\n\nEddie and Kyle walked in flanking Thandi. The rest of the band entered behind them. Two waiters rushed in to push four tables together so everyone could be seated. The speakers in their area went up a notch.\n\nThe formerly quiet section transformed instantly into a party buzz.\n\nPlatters of fried rice, pap, garlic potatoes, pumpkin fritters, chakalaka, wors, chops, chicken wings, calamari and prawns materialised on each table, interspersed with green salad. Their lemonades were replenished. Sabine sneered at them and ordered far too much red wine and cognac, making Ana laugh at the waiters' expressions.\n\nThe night she'd dreaded, turned into a good time, colleagues-turned-friends sipped drinks, shared stories and even taught each other trending dance moves. Well, Calvin did all the teaching, the band danced -- and Ana protested when Will pulled her into the centre of the group.\n\n\"This is the worst idea ever, trust me!\" She was stepping to the beat even as she protested. \"I'm not good at this.\"\n\n\"You're kidding me, right?\" he grinned. \"You move like nobody else I know all day. I'm sure you're a natural on the dance floor.\"\n\n\"You should know better than to tease your elders, Will.\"\n\nHe ducked his head a little closer to hers. \"Who said I was teasing?\"\n\nWhen she looked up at him, his eyes were all innocence. Ana shook her head at him, smiling.\n\nHe grabbed her shoulders and shook hard to loosen her up. \"C'mere -- lemme show you Calvin's mega sick moves from 'Sun Rising'.\"\n\n\"Tomorrow's headline...\" she muttered, \"Daft Hiphop-Immune Black Lady Dies Falling off Her Mile-High Heels...\"\n\nWill laughed. But still pushed her to join him. Her slow learning aside, Ana soon found herself laughing her way through choreography that made her feel quite cool. For once, she didn't exclude herself -- she bounced on her heels, brushed dirt off her shoulders, and ran a manicured nail along the brim of an imaginary hat while Will crossed his arms in the middle of a 'tough guy' head bop.",
        "\"Snap each move more, gorgeous,\" Calvin ordered. \"You get the idea -- just need to make the moves pop more.\"\n\n\"I thought I was popping more!\" Her ponytail swung around to smack her in the face when she suddenly stopped, making her laugh even more.\n\n\"You have such a water body it's not even funny. Hiphop needs you to flicker out sharp, precise moves... like shooting flames. Your body flows way too much.\"\n\n\"Her fire's all in her spirit,\" Will said as he took her shoulders and tried to make her feel how they were supposed to move. \"But her body, mm mm mmm...\"\n\nEven through the flirting he shook his head with mock disapproval at the way her hips swayed instead of snapping. Ana giggled, fully aware that she was a hopeless case. The lights poured golden streams everywhere, the dancing had raised a sheen of heated exhilaration all over her -- and she was letting go in a way she hadn't done in years. Why had she not allowed herself this freedom more often?\n\nIn the next moment she spun straight into Will's chest. He was supposed to sidestep her spin, grab her hand as she passed and then pulled her back.\n\nAna rubbed her nose. \"That was not my fault! I was moving and you stopped -- you're the one in the wrong for sure.\"\n\nShe was laughing, her face turned up to his, but the sound soon died down. Will's face was serious, even hints of concern on it. He wasn't even looking at her anymore.\n\nAna followed his eyeline to the other end of their dance space. At their tables Thandi and Sabine were engrossed in their hundredth toast. And next to them sat Leo, his eyes on her and Will. They looked as dark as they had that first time she'd seen him watching her from a distance. It still stunned her, the way they changed and depicted his emotions so clearly.\n\nAna gulped.\n\nA good ten seconds later it dawned on her that she had nothing to be nervous about. And the surreal way in which they had come together did not give Leo the right to act like he owned her.\n\nShe turned to tell Will to take the dance from the top with her.\n\nBut he spoke before she could. \"That was great, Ana -- good moves. But we're done now.\"\n\n\"You can't be serious, Will.\" She shook her head at how even the words meant for her were said in the direction of Leo who now had his arms crossed. \"We're having such a great time and Leo isn't --\"\n\n\"I don't know what's going on between you two,\" he finally met her eyes again, \"I just know not to get in the middle of it. You're... amazing, Ana. And I won't lie: under different circumstances, I'd be making all kinds of unprofessional moves on you. But, with the way things are right now... I'm not dumb, girl. Being a friend is the best I can hope for -- and even then I have to watch my step.\"\n\nLara was calling his name. She was at the bar with Sarah and Khaya, a line of shot glasses in front of them. Will made a circular motion up high with his finger to indicate he'd be 'round there shortly.\n\n\"Look, if it makes you feel any better, I know you aren't into me,\" he said. \"So, the situation being this way is a good thing. Leo keeping you all to himself leaves the rest of us thinking we might've stood a chance if he hadn't gotten to you first, see?\"\n\nThandi was dancing their way now. Her slick moves paired with her expensive office wear made her look rather cute. Will left to join the other backup singers.\n\nThandi looped her arms around Ana's neck. \"This was a super idea -- I haven't let my hair down in forever. We should let loose again on our Christmas weekend!\"\n\n\"I don't think your parents have this in mind.\"\n\n\"Okay, we'll skip the alcohol... and the kwaito... and the huge group of strangers,\" she saluted. \"But you'll come this year, right?\"\n\n\"I'd love to. I haven't seen your folks in years.\"\n\n\"And you must bring your mom.\"\n\nAna sighed. \"That'll be... fun. You're right, though. She'd love a family weekend.\"\n\nThandi's face turned sombre for a moment. Then she grabbed Ana's hand and dragged her out to the now-deserted exterior tables. They sat down in sync and turned to face one another.\n\nThandi spoke first. \"What?\"\n\nAna shrugged.\n\n\"What is it, An?\"\n\n\"Nothing,\" Ana lied.\n\n\"Tell me what it is.\"\n\nIt was nearly eleven o' clock but the night was warm enough feel welcoming. All the nights spent in studio meant it still felt a little odd to Ana to be doing what the regular Friday-nighters were doing. Looking up to see the stars filled her with a blend of peace and gratitude. Things would get crazy again when the sun rose, life would bring hard moments again -- but she liked where she was and what she was doing on that night. And that was special.\n\n\"My mom and I still have hard moments,\" she confessed. \"I was worried about spending a weekend with her. And then I realised how selfish I'm being. For the first time in years I'm in a really nice space -- internally, I mean -- and I should be sharing that with her.\"\n\n\"Losing your dad shook the family foundations.\"\n\nAna shook her head with a huff. \"It's like Andile was the glue holding all the happiness together and, now that he's gone... we don't know what to do with each other.\"\n\nThandi took her hands. \"I'd say you're getting there.\"\n\n\"The weird part is that the stuff with my dad was all fake -- he was a lying cheat,\" Ana frowned. \"So, why do I still feel so stuck without him?\"\n\n\"Because you are stuck, ntombi. Just look at your life.\"\n\nThe statement was so random, it made no sense at all to Ana.\n\nShe had a good life albeit somewhat crazy and nomadic. Moving around the country doing what she loved was good. More so as she was earning a lot doing so. She had a close friend -- and was now making even more.\n\n\"I had fun today,\" she stated. \"I got together with a bunch of people I actually like -- and who like me -- and enjoyed my whole day. Even the unsettling bits earlier. I'm making good money and have built a great reputation. My mom and I have some stuff to sort through, but what family doesn't? We love each other and take care of each other. What the hell is so wrong with my life?\"\n\n\"You mean you really don't see it? Oh, this is so awesome -- I never get to do the big reveal.\" Thandi pulled herself straight in her chair, managing to look like a giddy guru. \"You feel stuck, lost child, because your life is stuck. You're twenty-seven, An. But you're still living like a varsity kid. Remember our years in res? That's still you now.\"\n\n\"What, immature?\"\n\n\"No. Stuck. In not having or building anything. You're avoiding growing roots -- you have flat-out banned any form of growing up from your life.\"\n\n\"You're drunker than I realised.\"\n\n\"True -- but I'm also right! You dress like a kid -- some of your stuff is awesome -- but you took it all overboard. You don't own any property or have a place you consistently call home. You're better than me at what we're doing here... so, why am I the one with my name on that office floor?\"\n\n\"I have what I need.\"\n\n\"An, you won't even commit to owning a car. A car -- and you really need a car.\" Thandi lifted her chin. \"You're afraid of any type of commitment. It's easy to see in the way you avoid falling in love -- but your dad scared you out of all commitment, not just relationships. And now life is ticking by while you remain stuck as the eighteen-year-old girl who'd just learnt about pain and betrayal on a level no one should have to.\"\n\nAna stared at her.\n\nShe felt her automatic defensiveness rise, but didn't let it out. \"I don't know if I agree with any of what you just said, but I don't feel like arguing either way. I'll think about it... and maybe punch you later.\"\n\nThandi grinned. \"Bad decision. I'll be sober later and able to punch back.\"\n\n\"I should get your wonky arse home.\"\n\n\"Nah, it's okay -- I ordered one of those 'drive me home' services.\" Thandi let Ana pulled her back up. \"The guy will be here in a few minutes. I think.\"\n\n\"I hear there's a hunky shirtless version of those that started up recently.\"\n\nThandi gasped wide-eyed. \"Sabine was just saying the same thing! I'm intrigued... but also disturbed. Hiring a driver on sex appeal is a little gross, isn't it?\"\n\n\"Like hiring waitresses based on tit size?\" Ana cocked an eyebrow at her friend.\n\n\"Ew, sies. Like that, yes,\" Thandi grimaced. \"Well, let's go get our stuff. Our fully dressed driver will be here soon. Sabine, Kyle and Eddie are also coming over.\"\n\n\"You're joking.\"\n\n\"Don't you just wish I was?\" Thandi scrunched her little button nose in delight. \"But they really are. We're gonna have a nightcap.\"\n\n\"I can only bow my head in a minute of silence for your liver,\" Ana sighed. \"But I'll have to catch up with you later. I have something I need to deal with first.\"\n\n\"And might that be --?\"\n\n\"Nothing.\"\n\n\"And is 'nothing' really tall with golden eyes and a voice that could melt a dead nun's resolve?\"\n\n\"Why would anyone want to entice a dead nun...?\"\n\n\"I mean a voice that could raise a deaf nun from the grave?\"\n\n\"That's just so many kinds of wrong I'm actually a little scared now.\"\n\n\"That could make a nun --\"\n\n\"What is this sudden obsession with nuns??\"\n\n\"Jade then! A voice that could melt even that severe Jade lady! Is it, huh? Is it?\"\n\nAna stopped just outside the restaurant door. \"I'll see you at home, Thands.\"\n\nIt was nearly closing time and the staff were tidying up. A couple other patrons had taken over their impromptu dance space and fairing no better than Ana had. The wine in her veins added to the heat of the night, infused her slow steps and fuelled her courage.\n\nLeo was listening to Sabine recount tales of old tours. The band members were hanging onto her words, wide-eyed. Kyle shrugged in exaggerated innocence when asked if the crazier details were true. Everyone kept trying to draw Leo into the conversation, but he wasn't saying a word.\n\nHis eyes met hers as she reached their table.\n\n\"I think it's time to head home now,\" she said. \"Don't you?\"\n\n\"Thandi's given all of us her address,\" Kyle responded from somewhere to her left. \"Eric and Leo will follow you and Thandi. I'll bring Sabine.\"\n\n\"No, I think Eric best ride with Thandi and the driver,\" Ana replied, her eyes still on Leo. \"Leo will be taking me home.\"\n\nThe group suddenly went quiet. Strange looks were being exchanged but no one worked up the nerve to ask the questions shooting through their minds.\n\nAna finally looked around the rest of the group. \"I just have something to discuss with Leo.\"\n\nDisjointed murmurings and nods were offered up a little too quickly.\n\n\"This is why I knew I will like you, Ana\u00efs,\" Sabine, who had put back the most cognac, appeared entirely unaffected by it. \"You are straight like an arrow. Direct eyes, direct actions. Very good.\"\n\n***\n\nOnce the bill was paid, the group left together. Leo let Ana step out ahead of him, touching her back as she passed him.\n\nShe picked up her pace.\n\nAna led the way to his car because she didn't know how to walk beside him with everyone watching them. She held onto her bag with both hands, trying to come up with something to say to him.\n\nThe night was so warm.\n\n\"Slow down, Ana\u00efs.\"\n\nWell. He certainly knew how to demand what he wanted.\n\nShe turned to look over her shoulder, but marched on. He was a few steps behind her -- by choice, she now realised as she took in his languid steps -- his hands in his pockets, his sleeves rolled up. The sight of his forearms and the column of his throat made her frown. She was starting to worry that she stood no chance -- not against this man, but against her feelings for him.\n\n\"Come on, sweetheart.\"\n\nShe stopped. \"Why do you call me that?\"\n\nHe came to stand before her. \"Terms of endearment are used to depict fondness for another.\"\n\n\"But the way you say it...\"\n\nHis eyes dropped to her lips. \"What about it?\"\n\n\"You need to stop scaring Will the way you did inside there.\" She looked back in the direction of the restaurant, but there was no one in sight. \"He's a nice guy who likes having laughs.\"\n\n\"I wasn't trying to intimidate Will, Ana\u00efs.\" He crossed his arms like he did earlier. \"Not that I'd pretend to be okay with him flirting with you either.\"\n\n\"No jealousy between us, remember? You don't own me, Leo. And I don't like you acting like you do.\"\n\nHe ran a palm down his face then stared down at his feet for a minute. She wondered if she'd angered him.\n\nIn silence, he took her hand and led her the rest of the way to his car. A few other cars were parked nearby and a couple was walking towards one of them. The man nodded in greeting, in acknowledgement of seeing another couple returning from a date. The woman smiled briefly at Ana.\n\nShe still couldn't fathom why people had such an easy time seeing her and Leo as a couple.\n\nLeo walked her to the front of the Audi and steered her hips with his hands until she sat down on it. He nudged her up the hood -- then bent to take off her shoes and place them next to her. Her aching feet instantly tingled with relief. Too many butterflies were fluttering in her stomach -- wariness at his mood change, warmth at thoughts of them as a couple, and the unavoidable sparks his touch always ignited.\n\nHe stood up straight and watched her for a minute before speaking. \"Melissa used to confront me about everything I did and everyone I spoke to. She would not have handled those fans earlier as confidently as you did, believe me. It took me a really long time to realise nothing I did would be enough, nothing would assuage her. The kind of peace she needed had to come from herself.\"\n\nAna immediately felt bad. \"Oh, Leo, I'm not saying that. I don't think you're insecure.\"\n\n\"I know.\" He stepped closer. \"My point is that I think I understand something about her now that I didn't get at all back then. Couples are people who have chosen each other. Melissa kept expecting me to prove that I had chosen her. I really believed that I had and that I was happy with my choice. I believed it was the stresses of my industry that were driving her crazy. But now...\"\n\n\"Now?\"\n\n\"I left music because my life was shattered five years ago and I no longer believed in any of the things I sang.\" He reached out to run his fingertips through the twists falling over her shoulder. \"Now I'm glad I didn't give up completely. Some things aren't easy... but I like where my steps have brought me. I'm learning that there may be way more to love than I'd ever known or chosen before.\"\n\nShe shook her head. \"That word rolls far too easily off your tongue, Boreas.\"\n\n\"I sing it thousands of times a year -- or I used to.\" There were hints of humour in his eyes though his lips didn't curl. \"And one of the things I'm learning now is what it feels like to consider choosing someone who holds little interest in choosing me.\"\n\nShe took a deep breath. \"I'm starting to wonder if I've ever known how to choose anything at all.\"\n\n\"You could choose one day at a time.\"\n\n\"Simple enough.\" Her chin lifted. \"And we're still calling it 'choosing', are we? Even though you made it abundantly clear that you consider us bonded whether or not I choose this? Even though you scare off friends who get a little too close to me?\"\n\n\"I might have a possessive streak, but I'm not the jealous type, sweetheart.\" His shoulders were pushed back as if he was facing a challenger. \"When we walked into that place earlier, I could tell that you weren't even aware of all the men staring at you. More people watched you than me, Ana\u00efs. I never get mad at being the man they wished they could be, the one by your side. All they could think about was what I get to do with you -- to you -- after we leave. Will is one of those people enviously wishing he was standing between your parted legs right now, figuring life out with you.\"\n\nShe shifted higher up the hood, shaking her head. \"You expect me to believe that? Random strangers had the hots for me, huh? Come on, guy. There are better ways to deflect the conversation away from the death glares you were shooting at a sweet kid whose only offence was dancing with me.\"\n\n\"I wasn't watching Will, sweetheart. I was watching you with Will.\" He leaned down, palms flat on the metal, and pressed his lips to hers. It was a simple kiss, one that reminded her too much of his caring side. \"The way your body heated up as you danced with him, and the way your sweat made your top cling to you... and show everything. You were radiant, having such a good time. And all I could think about doing was stripping you and lifting you up onto my hard cock. Right there.\"\n\nAna leaned back, all the way down on her elbows, as if too close to a heat source.\n\nLeo followed her parted lips, leaning over her. He didn't kiss her again, but he kept close.\n\nThe picture he painted in her head made her roll her hips forward, trying to press her hot pussy to the cool hood and quiet its escalating hum.\n\nThen, of their own accord, her lips were seeking his again... but he held back just enough to make her lean in the rest of the way. His hand gripped a hip and held her in place when her tongue slipped between his lips. She felt him drink her sweetness in like a starved man. The intensity of his hunger tipped her head back, pushing her tits up at him. He pressed against her and groaned when he felt her core against his erection. Ana lifted what she could to press herself against his hardness as she moaned into his mouth.\n\nAn approaching car interrupted their spell -- but Leo didn't let go of her. He stayed pressed against her. Ana could only imagine what they looked like to outsiders: a lustful woman draped on a sleek black car, designer heels lying beside her... and one hell of a hot man between her legs, his lips trailing along her collarbone.\n\nThe couple that had greeted them earlier drove by, the man's eyes wide and staring longer than politeness allowed. His wife hissed his name sharply then they were gone.\n\nAna giggled into Leo shoulder.\n\nHis arms went around her as he moved his lips to her forehead. Ana wrapped her arms around his neck, loving the way they fit together. If only it was as simple as holding each other and never having to feel scared or lost...\n\n\"Let's get you home.\" His lips were now pressed to her temple. \"Thandi will be wondering if we've been abducted.\"\n\n\"But aren't we...?\"\n\nHe looked down. \"Aren't we what, Ana\u00efs?\"\n\nShe couldn't hold his gaze as she noticed something begin to swirl in its depths. Her mouth got no further words out, all that was left was the new heat rising up her throat and into her cheeks. Thank heavens for dark skin.\n\n\"And that's exactly why I'm taking you home.\" He wasn't angry. His understanding felt worse than accusation. \"You have a way of coming to me yet never taking that last step, you never say what you want. It's time you start getting honest with me -- and yourself.\"\n\n\"I have told you what I want,\" she whispered. \"I told you right from the beginning that I... I need to find a way to shake this thing between us because I'm not in love with you.\"\n\n\"There's a difference between not having any feelings and wishing what you are feeling away.\" He wrapped his fingers around the back of her neck. \"You have some demons to wrestle -- but make no mistake: I'm not one of them. So, stop telling yourself I am.\"\n\nThe night had gone completely quiet, wrapping them in a bubble of warmth and longing. Ana's heart twisted a little as she smothered a flickering hope that he would insist on taking her to his Sunninghill home instead of the Hyde Park apartment. He would do it if she asked him to, of course.\n\nBut with those words came opening her heart to words he said far too devastatingly.\n\nThis man wasn't like any of the others. She couldn't play with certain words around him -- not unless she meant them. And who the hell knew what she meant these days...?",
        "\"You're 'all in' all the goddamn time, Leo.\" Her fingers tightened involuntarily on him. \"Do you really think battering your way into my life will make me yours? FYI, there's also a difference between sharing a bond and just barging into someone's life.\"\n\n\"When have I ever done that, Ana\u00efs?\"\n\n\"You... You...\" She took a deep breath, trying to think of an instance to throw in his face. \"You're all intense and... and... too honest. Too much.\"\n\n\"And you're all sugar and soft sighs, right, sweetheart?\" Wry humour laced his question. \"Has it occurred to you that it's the way we fit together that is holding us together? You want me. You need me, lady.\"\n\nShe had to stop him saying whatever came next. \"You know what your problem is? You're a dreamer.\"\n\n\"I've never forced my way into any part of you that wasn't already open to me, that's no dream.\" His eyes were serious. \"But I will tell you what I have done.\"\n\nStrong fingers stroked the line of her pants just above her hips then slipped under her thin blouse. His erection was still pressed against her.\n\nIt was an intimate touch. but his eyes made it clear he wouldn't go any further. \"What did I say to you the day you came to me?\"\n\nHer lips parted, but she didn't know the answer. Or any words, for that matter. Confusion showed clearly in her eyes; desire played out off-rhythm ditties on her exhalations.\n\n\"When you came to me, and in the days after, I dared to think I might have been crazy.\" Whirls of magic flowed from his lips as they neared her again, making her taste the sweetness of her own anticipation. \"All those feelings that slammed into me, from every fucking direction, I see now that I might not have been the only one feeling them. And that is why I asked what I did the day we made love.\"\n\nAna found her voice. \"You didn't ask anything, Leo.\"\n\n\"Yes, I did. I asked you to stay.\" He lifted his hand to run his thumb across her lips. \"I kissed you the day we met and knew immediately that I had to have you. Days later, in my bed... I looked into your eyes as I buried all I am inside you... and I asked you to stay.\"\n\n\"You couldn't possibly mean...\"\n\nHis lips caressed hers.\n\n\"I'm not invading your life, sweetheart. I've been inviting you into mine.\"\n\n*** *** *** "
    ],
    "authorname": "BaalatErotas",
    "tags": [
        "south africa",
        "dream reality",
        "summer",
        "black woman white man",
        "tattoos",
        "seduction",
        "chopin",
        "music",
        "choreography",
        "interview"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/love-note-pt-02"
}