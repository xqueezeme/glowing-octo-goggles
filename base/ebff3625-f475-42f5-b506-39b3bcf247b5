{
    "title": "Anna Karenina",
    "pages": [
        "\"Do you think he'll be there?\"\n\n\"Trust me, he's always there.\"\n\n\"Who like goes to a library anymore? Especially on Christmas break? Does he like have to go or something?\"\n\n\"Alex. That's who. And no, he doesn't have to go. He says he enjoys the solitude.\"\n\n\"But it's all like totally quiet in there.\"\n\n\"You know what? You could benefit from some time in the library yourself.\" Her new friend completely missed the dig and kept right on going.\n\n\"Well, if he's as hot as you say, then yeah, for sure! I could like read a magazine or something.\"\n\nLydia loved her new best friend who was more fun than anyone she'd ever known, but she was by no means the brightest bulb in the shed. Teresa, or Tesi (pronounced TEE-see) as she'd been called since the age of two, was not only fun, but some said she was almost as attractive as Lydia, and Lydia had dated Alex Voss for over a year, and she was therefore Tesi's inroad to meeting the best-looking guy in school who happened to something of a recluse.\n\nAlex Voss was an almost 19-year old senior who'd been held back a year when he was six because he was so far behind his peers when it came to reading. He was not only a very good looking guy but a shoe-in to be the class valedictorian. Since his setback, he'd learned to read well and then learned to love to read. He'd been a very good student since, but when his mother passed away during his 8th-grade year, he became withdrawn and turned to books not only for enjoyment, but for solace. \n\nHe quit playing sports and spent his time at home reading and mostly books. Lots of books. By the time he was a sophomore he'd read most of the top 100 classic books of literature as well as many novels written by modern writers like Tom Clancy, Dale Brown, James Patterson, and Michael Crichton. He loved adventure novels, science fiction, and just about anything related to science. \n\nBut more than anything he loved romance novels. No one but his dad had known his secret until he confessed it to Lydia some six months after they started dating, and so far, she'd kept her promise never to tell anyone. She wasn't sure why it was so important to Alex, but a promise was a promise, and if she ever hoped to win him back, she wouldn't do it by betraying his confidence. \n\nToday she hoped that introducing him to someone cute might win her some points for being magnanimous. She also knew it couldn't hurt as there was no chance in hell Alex Voss would ever go out with someone as vacuous as Tesi Robertson.\n\nAlex had once tried his best to explain to Lydia how books made him feel, but it so far over her head (or in reality, her experience base) that she simply couldn't understand him. He'd tried using one example he thought was very simple, a book called Love Story by Erich Segal. Lydia's eyes had glazed over the moment he started discussing the rich vs poor dynamic and was totally lost by the time he summed it up with, \"So that's why she told him again near the end that love means never having to say your sorry.\"\n\nShe'd responded by smiling seductively and saying, \"So...you wanna fuck?\"\n\nHe'd been so turned off by her response he never again shared any of his deepest feelings with her. From then on, he kept things on her level and enjoyed the relationship as much as he could with sex being the best part. But no matter how good Lydia had been in bed, he yearned for someone who could understand him in a way she couldn't. \n\nHe had a teacher his junior year who could, and he'd spent as much time with her as she'd allow, but she was a happily married woman, and the time she could give him was far too little. \n\nWhat he wanted, what he craved, was to find someone who shared his passion for love. If she loved literature, too, that would be the proverbial icing on the cake, as literature was his pathway to love and romance. But were she able to actually feel what he felt when the words on a page became reality; or if she could just clearly express that without the aid of books, he would do anything for her. \n\nImplied in that kind of love, of course, was the same level of physical passion he'd shared with Lydia. Sadly, it had been an empty passion fueled only by raw desire, but somewhere out there was a woman who was a melding of Lydia and his teacher, and one day he would find her. For now, he had his books.\n\n\"Oh...my...God! He is SO hot!\" Tesi said when Lydia pointed him out.\n\n\"Shhh! We're in the library. Keep it down, okay?\"\n\n\"You so have to introduce me!\" Tesi said gushing with excitement. \"He could do me right there on that table in front of him!\"\n\nLydia smiled but didn't tell her she and Alex had done something very similar one day not that many months ago. Instead, she said, \"Come on. I'll introduce you. Just remember, keep it low key. He's a really great guy, but he's well...intense. And...he doesn't like ditzes.\"\n\n\"I'm not a ditz. Du-uh! I'm...hot!\" she said going on ahead.\n\nTwo minutes later they were on their way back out having been told to go to hell in such a magnificent way, Tesi had no idea she'd even been shot down. Lydia, however, knew full well what he'd meant in spite of his warm smile and assurance it was good to meet Tesi and see Lydia again.\n\n\"I think he's like totally into me,\" Tesi said still clueless. \"Did you see the way he kept checking out my boobs? Oh, yeah. He wants himself some of this,\" Tesi said turning around, smiling, and waving goodbye. \"See! He smiled and waved back. I told you!\"\n\nLydia knew better. Alex Voss was not only the hottest but the nicest guy she knew. He was polite to everyone\u2014even her\u2014and she'd blown it with him big time. If only she knew then what she knew now they might well still be together. She sighed deeper as Tesi continued blathering on and on about how awesome he was and how she just knew he was going to call and ask her out. Again, Lydia knew better.\n\nTwo hours later on his way out, the librarian said, \"Alex? You know we close tomorrow at noon and won't be open again until noon the day after Christmas, right?\"\n\n\"I did, but thank you for reminding me,\" he told her politely. \"I guess I'll see you tomorrow at 9am then.\"\n\n\"It's none of my business, but wasn't that girl the one you used to go steady with?\" she asked. \"The brunette?\"\n\nAlex didn't even smile at her use of the term 'going steady'. It was a product of her generation and making fun of it would only show ignorance and disrespect on his part. \"Yes, ma'am. We dated for about a year.\"\n\n\"She's a very pretty girl,\" she said with a sweet smile. \"You know...I would love for my daughter to have met someone like you, Alex. She's married now but I just don't think she's happy. Had she found the right man...someone like you...well, who knows?\"\n\nNot knowing how to respond he simply said, \"Thank you for saying that. That's very kind.\"\n\nWith that, he checked out a classic he'd had on his list for sometime but never gotten around to\u2014Anna Karenina, a romantic novel by Russian author, Leo Tolstoy. Anna Karenina was the wife of a Russian imperial minister who created a high-society scandal by having an affair with a man known as Count Vronsky, a dashing cavalry officer in 19th-century St. Petersburg. Anna's husband, Alexei, offers her a difficult choice: Go into exile with Vronsky but never see her young son again, or remain with her family and abide by the rules of discretion. \n\nIn a way, he was glad he'd saved it as it promised to be filled with the intrigue of passion, romance, betrayal and heartache he so dearly loved. Its 864 pages would be a marathon read, but a pleasant one Alex couldn't wait to begin. Then again, he'd slogged through all 1,225 pages of Tolstoy's War and Peace so this would be a 'piece' of cake by comparison. By the time he lay down to go to sleep that night, he'd finished just over 200 pages and couldn't wait to start in on it again the next day.\n\nAlex was at the library five minutes early, cradling the copy of the thick book in his hands. Not surprisingly, he was the only one there standing out in the cold waiting for the public library to open up the day before Christmas. As he waited, he stood with his back against the wall and opened the book to page 204 where he'd left off. He glanced at the clock just inside the door as he finished the next page and saw it was now 8:58. He buried his nose back in the back after turning the page and continued reading.\n\n\"That may just be my favorite tragic romance novel of all time,\" Alex heard a voice say.\n\nHe looked up and saw a woman he didn't recognize and smiled at her. \n\n\"I'm thoroughly enjoying it,\" he said smiling back at her.\n\n\"Is this your first time?\" she asked. \"If so, I won't spoil the ending for you.\"\n\n\"It is,\" he replied. \"Unfortunately, I read a synopsis a couple of years ago, so I basically know what's going to happen, but the devil...or the pleasure in this case...is in the details.\"\n\n\"You know...were you a little older, you would be almost exactly the way I've always envisioned the dashing Alexei. Tall, handsome, dark hair. Great smile. Oh to be young and in love!\" she said just as the librarian unlocked the door.\n\n\"Sorry. I just walked up and started talking. I'm Karen. Not Karenina, though. Just Karen.\"\n\n\"Well, I just happen to be Alex but not Alexei,\" he said enjoying the intellectual play on words.\n\n\"It's a pleasure to meet you, Alex,\" she told him. \"I trust you won't attempt to seduce me and cause an, um...low-society scandal of sorts.\" \n\nHer smile was unbelievably warm and inviting, and she was quite possibly the most attractive woman her age he'd ever seen. He guessed to be over 30 but had no idea exactly how old she might be. His first thought was 33 as her skin was soft and smooth and there still wasn't so much of a hint of a laugh line or even those faint wrinkles that inevitably form around the eyes. She wore her hair below her chin and above her shoulders; hair which was very dark and thick with a shine so bright he thought he might be able to see his reflection were he to get close enough to look.\n\nShe was dressed very nicely for such a cold day. Underneath her heavy, black, wool coat he saw a maroon-colored sweater and a pair of black pants. Her lips and nails were painted the same color as the sweater and he it was obvious she took very good care of more than just her very pretty face.\n\n\"Please,\" she said as the door opened. \"You were here first.\"\n\n\"I can't do that,\" he said taking the door and holding it for her. \"Ladies first.\"\n\n\"Well, thank you. That's so kind and so unexpected,\" she said still smiling.\n\nHe followed her in and decided to try and engage her in conversation.\n\n\"I'm curious to know what brings you to the public library of all places on Christmas Eve day,\" he said as they walked in together.\n\n\"I was going to ask you the same thing,\" she replied. \"Not to stereotype, but people your age tend not to spend much time in places like this.\"\n\n\"This is kind of my home away from home,\" he told her. \n\nThe librarian overhead and told the woman, \"Alex spends so much time here we're getting ready to rename the library after him. In fact, he has his own table in that far corner over there.\" She pointed to the place and the woman smiled after noting where it was.\n\n\"Then shame on me for stereotyping,\" she said.\n\n\"So now that you know my secret, what brings you to my favorite hangout?\"\n\nThe woman's smile faded as she said, \"Necessity?\"\n\n\"Necessity?\" Alex repeated.\n\n\"Our house burned down last year. My husband's and mine,\" she said quietly. Then even more quietly she said, \"I...I lost him in the fire.\"\n\nAlex was deeply touched and felt a strong sense of empathy for her loss. \"I'm so sorry, Karen. I lost my mom a few years ago. I can't say I know exactly what you're going through, but I do know what it's like to lose someone you love. Please accept my deepest condolences.\"\n\n\"Thank you, Alex. And please accept mine. I, too, am very sorry for your loss.\"\n\n\"I'm well... still at a loss to see the connection with that and the library,\" he said very kindly.\n\n\"Oh, right. Well, along with the most important thing in my life, I also lost shelves full of books. Classics, first editions. So many wonderful and important books. The insurance company is still holding off on payment\u2014'abnormalities' with the investigation or something like that is what they say... Anyway, even once they finally do pay off, I'll never be able to replace those books. To be honest, I haven't felt much like reading since, but lately I've doing much better and I thought I'd get a library card and check some out to read over the holidays.\"\n\n\"Okay, now it makes sense. Any idea what you're looking for? I probably know right where every book in this place is located,\" he told her with a sincere smile.\n\n\"Several, actually. Let me get my card and I'll take you up on your very kind offer.\"\n\nTen minutes later she was all set. She walked over to 'his' table then said, \"Do you come her alone or with friends or...?\" She removed her coat revealing a very nice-looking body which Alex tried not to look at more than once. She took a seat across from him and waited for him to reply.\n\n\"Alone,\" he told her. \"Having someone with me would be distracting and defeat the purpose of coming her. I really enjoy the quiet and the solitude.\"\n\n\"Ah! A man after my own heart,\" she said. \"We had a den and a study in our home. My husband...my late husband, Glen, spent his quiet time in the study\u2014mostly on the computer\u2014and I enjoyed curling up with a book in the den. I loved hearing nothing but the sound of my own breathing and the turning of the pages.\" She had a wistful look in her eyes and Alex heard the unmistakable sound of melancholy in her voice.\n\n\"That sounds heavenly,\" he told her sincerely.\n\n\"So after having botched it so badly by stereotyping you for your age, I hope I won't be making the same mistake by assuming there must be a young lady in your life because...well, frankly, because you are a very handsome young man. I was thinking she must either be very lonely or resentful of this place for taking up so much of your time. How far off am I this time?\" \n\nHe loved her smile and her pleasant, easy-going manner. The fact that she also loved to read made her just that much more appealing and interesting to him.\n\n\"To tell you the truth, I had been dating someone but we broke up just before Thanksgiving. We didn't have as much in common as I'd like...\" He held up his book and turned it back and forth indicating he meant his love of books.\n\n\"Ah! I see. You're looking for a fellow intellectual,\" she said trying to understand him.\n\n\"Oh, well, I can't call myself an intellectual, but I do love to read.\" He set the book down then told her, \"I guess I'm also a hopeless romantic.\" He smiled at her then added, \"So until I can find someone who sees the world more like me, I can at least dream about it through the written word.\"\n\nShe sat there and stared at him for several seconds before speaking again. \n\n\"You are a very unusual\u2014and interesting young man, Alex.\"\n\n\"Thank you, Karen. Unusual and interesting beats 'dull' and 'boring', the way most girls my age tend to describe me.\" He smiled when he said it, but she knew how girls could be at that age, especially when they wanted something they couldn't have.\n\n\"Girls your age can be...dare I say...clueless?\" She saw him smile again and she couldn't help but laugh. \"I believe I just stereotyped all females your age. You'd think I'd learn after being so wrong twice in a row. I'm sure there are exceptions to the rule for both males and females. Exceptions like yourself.\"\n\n\"I'd like to think so,\" he told her. \"It's what keeps me motivated to continue believing there really are. Exceptions, I mean.\"\n\n\"Forgive me for asking, but have you graduated from high school yet?\" she asked.\n\nAlex smiled broadly and told her, \"I should have. Ironically, I was a terrible reader early on and my parents had me held back in first grade. As it turns out, that may have been the best thing that ever happened to me.\" He picked up the book again then said, \"Or if not the best thing, at least a very good one.\"\n\n\"I've always loved to read,\" she said. \"I was a very plain, unattractive girl so reading was my solace. It was my friend. It took me everywhere in my mind without having to leave my room. I must have fallen in love a hundred times with the handsome leading men in the novels I read growing up.\" She had that same wistful look in her eyes again and it wasn't lost on Alex.\n\n\"I'm not doubting you, Karen, but it's very difficult imagining you as unattractive or even plain. I'm probably stepping way outside my bounds, but you are a very beautiful woman.\"\n\n\"And you are a very charming young man, Alex. Thank you for making me feel good. That was very sweet of you.\"\n\n\"It was the truth,\" he told her in a way that made her realize he hadn't said those things to flatter her. Rather, it was obvious he'd meant them.\n\nShe caught herself staring again then shook her head slightly before smiling and saying, \"Is is still possible to get that guided tour?\"\n\n\"It is,\" he told her as he stood up. \"And you're in luck. There's no charge the day before any federal holiday.\"\n\nHe extended his arm as he spoke and Karen, who tried to laugh quietly at his silliness, nodded her head and took it. \"Why, thank you, kind sir!\" she said.\n\n\"My pleasure, madame,\" he said nodding back. \"What's at the top of your list?\"\n\nAfter a half hour of 'guided wandering' Karen had four books, the maximum she could check out as a new cardholder. Well, more accurately, Alex had four books as he refused to let her carry them. He set them down at the front desk, and as he turned to head back to his seat, Karen said, \"Would it disturb you if I sat and read at your table? I promise not say another word.\"\n\nAlex laughed quietly and told her, \"I would appreciate the company very much.\"\n\nWhen he was out of earshot Karen said to the librarian, \"He is a very mature young man.\"\n\nShe was checking out her second book when she replied, \"I've known Alex since his mother passed away. That's when he started coming in here. I've seen hundreds of kids over the years, but I've never met anyone as mature, thoughtful, and intelligent as Alex Voss.\" The matronly-looking woman glanced over at him and said, \"Were I 40 years younger...\"\n\nKaren smiled when the older woman laughed. \"He is rather handsome, isn't he?\"\n\n\"The kids nowadays say 'hot' so I suppose that would mean Alex is on fire, huh?\" She handed Karen her fourth book as she chuckled softly one more time. \"Those are due on January 14th, dear,\" she said as Karen picked up the stack. Karen thanked her then headed toward the table where Alex was now buried behind the pages of the thick novel he was holding in both hands.\n\nShe laid the books on the table, selected Madame Bovary, and without saying a word began reading.\n\nIt was just before noon when the librarian came over and said, \"Just a reminder. We'll be closing in ten minutes.\"\n\nAs she walked away Karen glanced at the tiny, thin, silver watch on her wrist and said, \"Oh, my. That time just flew by!\"\n\nAlex finished the page he was reading, then stuck the bookmark in its place. \"I know. It seems like we just sat down. Looks like I'll be holed up in my room for a couple of days until my fortress reopens.\"\n\nHe picked up his book then looked at Karen and said, \"It was a real pleasure meeting you, Karen. I would love to have the same pleasure again one day. Oh, um...Merry Christmas.\"\n\n\"Merry Christmas, to you, too.\" She smiled and before he'd taken a second step, she said, \"Alex? Would you like to maybe get a cup of coffee? I'm not sure how else to thank you for the um...guided tour.\"\n\n\"Oh, there's no need. Just being able to meet you was thanks enough.\" Again, she knew he was genuinely being sincere.\n\n\"Oh, okay,\" she said. \"I guess maybe I was hoping we could spend a little more time together. I can't remember the last time I found someone...anyone...who loves to read as much as I do. But I understand. It's not exactly 'cool' to hang out with someone my age so...\"",
        "Alex sat back down in a different chair and said, \"That has nothing to do with it. I don't care about age at all. I've enjoyed spending time with you, too. I just didn't want you to feel like you had to do something in return for me doing something I really enjoyed.\"\n\n\"I guess that was just my way of saying I had a very nice time. I just thought it might be nice to be able to talk a little more. You're a most unusual and interesting young man, Alex.\"\n\nThere was that smile again.\n\n\"Honestly? I'd like that very much. Maybe I was the one trying to give you an excuse not to feel obligated to spend time with me just for being helpful.\"\n\n\"Let me start over,\" she said. \"I enjoy talking with you, Alex. Would you like to continue our conversation over a cup of coffee?\"\n\nHe smiled then said, \"Yes. I'd like that very much.\"\n\n\"Well...so would I!\" she said reaching for her coat.\n\n\"But if you and I are going somewhere together, then you'll have to let me help you with that,\" he said coming around to her side.\n\n\"Oh. Okay. I think that's a very reasonable request.\" She held out an arm as he slipped on her coat. She thanked him sincerely then buttoned it before trying to pick up her books.\n\n\"Uh-uh. Sorry,\" Alex said reaching around her but not in a rude way. \"I'll get those.\"\n\nKaren only smiled when he opened the library door for her by backing into it and waiting. She was wondering how he could possibly pull off something similar with her car door and yet he did just that with a balancing act of epic proportions.\n\n\"Did you want to ride with me or follow me?\" she asked once she was in the driver's seat.\n\n\"I rode my bike,\" he said sheepishly. \"What can I say? It's invigorating.\"\n\nHis smile made her laugh. \n\n\"Well...then get in!\" she said as he walked around to the other side.\n\nThe Seattle area had more Starbucks coffee shops per block than anywhere on earth, but Karen suggested a place called Seattle Coffee Works. \n\n\"Is that okay with you?\" she asked.\n\n\"I'm not much of a coffee drinker so anywhere is fine with me. That sounds great.\"\n\nIt was a couple of miles to the west on Pike Street near the famous market, and the location was perfect as it afforded an amazing view of Puget Sound.\n\n\"I love coming here and just looking out at the water while I'm sipping coffee, and of course, reading a book.\"\n\nThere were quite a few people there and Alex thought twice before speaking then said it anyway. \"I don't do so well with people around.\"\n\n\"Oh, I'm sorry. We can go somewhere else if you'd like.\"\n\n\"No, I don't mind people, per se,\" he said clarifying her latest misunderstanding. \"I just can't read in a public place where people are talking.\" He saw the look on her face then explained. \"I have friends who study with their music on\u2014loud\u2014but I have to have total silence in order to concentrate. But since we're just talking...\" He paused then said, \"We are just talking, right?\"\n\n\"Oh, definitely. No, I wouldn't bring you here to read,\" she said. \"Especially now that know you need your Fortress of Solitude.\"\n\n\"Sorry. I just can't feel the meaning of the words unless it's quiet. Maybe that sounds strange, but that's how my brain\u2014such as it is\u2014works.\"\n\n\"No need to apologize,\" Karen said. \"Now I know one more thing about you.\"\n\nShe ordered two cups after insisting she pay. Alex added cream and sugar and Karen watched with great interest as he kept pouring. \"Are you having some mocha flavoring with your cream and sugar?\" she teased.\n\nAlex laughed and told her, \"I really don't drink much coffee. I guess my age is showing again, huh?\"\n\nNow Karen laughed then said, \"You have no age to show, Alex. Unlike me, of course.\" She made a kind of face indicating she felt old or was feeling her age or something along those lines.\n\n\"I meant what I said earlier, you know,\" he told her as they looked for an empty table.\n\n\"Concerning?\" she asked as he helped her with her coat again once they found their spot.\n\n\"You look incredible. So whatever you're thinking about your age or how it's showing, trust me, it's not.\"\n\nShe didn't laugh this time. She didn't even smile. She just looked at him and said, \"Thank you, Alex.\" \n\nHe sat down across from her then asked, \"So what's your favorite book?\"\n\n\"Fiction or non?\" she asked taking a sip of her strong, black coffee.\n\n\"Either.\"\n\nFor the next hour, they talked non-stop about books they'd read and loved and how they made them feel. Karen's passion was so real Alex could feel it. When she spoke of books he'd read; when she described a particular love affair, he was living it with her.\n\nHe was unaware she was feeling the very same thing when he poured out his heart starting with the way he'd tried to explain Love Story. \"She not only didn't get it, she'd never heard of the book or watched the movie.\"\n\n\"How sad,\" Karen said. \"I found myself alternating between being him and her. One moment I'm Ali McGraw desperately wanting to assure him I'll be okay and so will he and then I'm Ryan O'Neal and dying inside knowing the woman I love is near death. I cried when I read the book and when I watched the movie.\"\n\nAlex looked around as though someone he knew might possibly be there.\n\n\"Don't tell anyone, but so did I,\" he told her smiling that sheepish smile again.\n\n\"Really?\" she asked not so much doubting his word as being amazed that he had.\n\n\"Yes, really. I didn't read the book until after my mom died, and when I read it and later when I watched the movie, I remembered her laying there in that hospital bed telling me how everything would be all right. Except that I knew it wouldn't be. At least not with me anyway.\"\n\nHe realized he hadn't been looking at her as he spoke. \"Sorry,\" he said. \"I got caught up in my own memories.\"\n\nKaren felt a lump in her throat when she saw a tear in his eye. She reached out for his hand and put hers on it. \"You're gonna make me cry,\" she said. \n\n\"No, don't be sad. I rarely ever think about it anymore and when I do\u2014when I actually see her in my mind's eye laying there so frail and small...\"\n\nAlex blinked several times then said, \"It means a lot that you understand how I feel. I wish you didn't, though. I mean, I'm very sad you had to lose someone you loved in order to understand but...\"\n\n\"I do understand, Alex,\" she assured him. \"And while it hurts to see you so sad, I love that you're not ashamed to show how you feel.\" She still had her hand on his as she shared something personal. \"I was out of town the night of...the fire. My husband and I had been arguing a lot the last few months before...you know.\"\n\nAlex now saw a tear welling up in her eyes. \"I'd suspected he might have been having an affair. There were little clues here and there and he was gone far more than he needed to be. Working late, taking business trips. The most telling thing was that he started smoking again\u2014something he hadn't done since before I married him. And the woman I suspected just happened to smoke. Anyway, I...I was just so hurt and I wanted to know the truth. I started pressuring him more and more and that night I was really upset. He started drinking heavily and I got so disgusted, I left. I went to a motel and sat there and just cried. And I think the insurance company still feels I was connected in some way even though his mattress caught on fire from a lit cigarette after he passed out drunk.\"\n\n\"And now you feel horribly guilty as though it was your fault,\" Alex said very quietly.\n\n\"Yes. How did you...\" She looked at him for several seconds then said, \"That is... You are so...intuitive. I don't think most men of any age would have grasped that without me saying so directly.\"\n\n\"Intuitive? Maybe,\" he told her. \"I just try and listen and put myself in the other person's place. I know I'd feel guilty even though it wasn't my fault. So it wasn't much of a stretch to assume you would, too.\"\n\nHis hand was now on top of hers and Karen realized she was the one being comforted.\n\n\"If only I were 18 again or you were...\" \n\n\"Thirty?\" Alex offered knowing he was being nice.\n\nKaren slowly moved her hand away then said, \"Well, even that would be nice. Maybe if I was only thirty again. How about that?\"\n\n\"You do know you're beautiful, right?\" Alex said yet again.\n\n\"Then why do I feel so old and all alone and...hopeless?\" she said in that wistful way.\n\n\"Could it be because you've suffered a huge loss? That you're unnecessarily bearing the burden of guilt for it? Might it be because the insurance company is piling on and adding to those feelings?\"\n\nKaren managed a small smile then said, \"Are you sure you're not a trained psychologist?\"\n\nAlex laughed and told her, \"Um...pretty sure.\"\n\n\"I should probably get you back to the library so you can get exhilarated on your ride home in this freezing weather,\" she said unable to not smile at him. \"Alex? Thank you for...everything. For listening and for being so insightful and understanding. It means a lot to me. More than I can put into words.\"\n\n\"It's okay. I can feel exactly what you're trying to say, Karen. And my thanks to you, too. It's funny, you know. I was just thinking last night how great it would be to meet someone who really understood how I feel. About literature, about...love. And then you showed up.\"\n\n\"It's terrible, isn't it?\"\n\n\"Pardon?\" he said thoroughly confused a little bit hurt.\n\n\"No. No, not like that. Oh, Alex, that's not what I meant at all. I meant that you got your wish, but...with the wrong person. You were thinking of someone who really 'got you' and who was also young and beautiful. And instead...you got me.\" She smiled at him, but her smile was sad this time.\n\n\"Youth is relative but beauty is not,\" he told her. He seemed to be boring a hole into her soul or something and Karen felt both uneasy and...unsettled. \"I hardly think you're old and I definitely know you're beautiful.\" He smiled at her but never stopped staring as he added, \"Inside and out.\" There was another pause where Karen was unable to speak so Alex continued talking. \"I'm actually glad you were the one Fate or Destiny or the Universe brought along.\"\n\n\"You are?\" she fought herself barely able to say.\n\n\"I am,\" he told her. \"Because now that I know you a little better, I'd say you're pretty much perfect.\"\n\nKaren could no longer hold his stare. She looked away and felt another tear forming in her eye. \n\n\"Am I the cause of those tears?\" Alex asked quietly as he reached out for her hand this time.\n\nKaren shook her head very slightly then said just above a whisper, \"No.\" She blinked several times then forced herself to look at him again. \"I was thinking just this week myself how much I'd love to meet someone who really understood me; someone who...got me...and someone who would tell me honestly he thinks I'm still beautiful.\"\n\n\"And you did,\" he told her.\n\n\"But Alex. We're just such...\"\n\n\"Kindred souls?\" he said finishing her sentence.\n\n\"You see! You just did it again.\"\n\n\"I'm glad,\" he said. \"Or I would be if I knew I'd done something to make you happy.\"\n\nThere was that smile of his again. So young, so handsome, so...soulful.\n\n\"You made me feel good about myself again. You've done that several times already today.\" Now she smiled then said, \"Were it not for Anna Karenina I wouldn't have spoken to you.\"\n\n\"Slava bogoo,\" he said trying to say 'thank God' in Russian as he'd read in one of Tolstoy's books.\n\n\"Thank God,\" she repeated in English. \"Yes. Maybe so.\" \n\nShe sat there just looking at his handsome face again as he held her hand. She allowed herself to return the simple touches of his fingers on hers and wished things were different. Just another five years would change everything. But that was not the case and the reality was she was 34 and he was 18.\n\n\"You ready?\" she asked again gently withdrawing her hand.\n\n\"I don't think I took two sips,\" he admitted. \"Sorry to waste your money.\"\n\nShe smiled happily then said, \"It was money well spent. You are a very special person, Alex Voss.\"\n\n\"Hmmm. How is it you know my name?\" he asked. \"You are not being Russian spy are you?\" he said trying his best to imitate a Russian accent.\n\nKaren laughed so hard she had to cover her mouth. \n\n\"You sound like Boris on Bullwinkle.\" He gave her a confused look so she said, \"You know, Boris and Natasha on the Bullwinkle cartoon. No?\"\n\n\"Mmmm. Sorry. No. I'm drawing a blank on that one.\" He smiled then told her, \"Yeah, that must have been before my time. Like back when the Soviet Union existed. You know, when you were my age.\"\n\nKaren sat up straight and feigned sounding indignant. \"Why...how dare you say that! I'll have you know I was nowhere near your age when the Soviet empire collapsed!\"\n\n\"Oh, whew. Because I was...let's see...yeah, I'd have been about...minus seven then.\"\n\n\"Oh, my God! I better get you home before someone calls child protective services.\" She stood up and said, \"Minus seven. Ha!\"\n\nShe went to grab her coat again and he wagged a finger way. \"Uh-uh. No touchy.\"\n\nHe came around and helped with it then whispered in her ear, \"You really are beautiful, Karen.\"\n\nShe didn't turn around as she buttoned her coat. She didn't because she was afraid to. Her heart was pounding and her fingers were having a hard time with the buttons. She got one of them done and stopped. Without looking at Alex, she grabbed her cup and walked it to the trash. She still didn't look at him when she got back to him. \n\nShe just said, \"Okay. Let's get going, shall we?\"\n\nThey didn't say a word on the way back. Karen finally got her heart rate down after several minutes on the road, but it went back into overdrive when she pulled into the library's deserted parking lot.\n\nShe'd debated asking the entire way back and against her better judgment she said, \"What plans do you have for tonight?\"\n\n\"Oh, my dad and I always have dinner together. It's pretty basic, but it's a tradition. How about you?\"\n\n\"I have a sister...an older sister.\" Karen couldn't help but smile. \"I'm going over to her place to have dinner with her and her husband and their two kids.\"\n\n\"I'm glad you have family and somewhere to go,\" Alex told her. He thanked her for the coffee and the great conversation then went to open his door.\n\n\"Alex?\" she said reaching for his arm.\n\nHe turned toward and waited.\n\n\"Um...I was wondering. If...well, if you and your dad finish early would you maybe like to...I dunno...come over and have dessert or maybe just talk some more?\"\n\nHer eyebrows were raised high telling Alex she very much hoped he'd say 'yes.'\n\n\"Considering we usually buy a bucket of KFC chicken\u2014with mashed potatoes and gravy, too, of course...\"\n\nKaren laughed again but this time it was a nervous laughter. \n\n\"We're usually done by 7:30,\" he said finishing his thought. \"I could save you a drumstick.\"\n\nHer laughter was much too loud for the amount of humor but Alex had to laugh, too.\n\n\"Alex? I haven't enjoyed myself this much in a very long time. I know...I'm painfully aware how much older I am than you...but I really, truly enjoy talking with you.\" She was looking down at the gearshift then looked up at him. \"I have the Love Story DVD if you might care to watch it again with me?\"\n\nShe immediately asked herself, \"What is wrong with you?\" even as her heart was hammering out of her chest.\n\n\"I don't know. Two criers watching the same movie? Do you have plenty of tissues?\"\n\nKaren laughed a laugh of relief and said, \"I do. And if we run out, I have towels so...\"\n\n\"Okay. Then...I'd like that. What time should I stop by and where should I do the stopping?\"\n\n\"I can excuse myself by 8:30 and be home by 9 o'clock if that's okay for you?\"\n\n\"Oh, are you giving up family time for this?\" he said with genuine concern. \"I don't want to take you away from your family. I mean, it is Christmas Eve.\"\n\n\"I love my sister and my nieces. A lot. But we seen to have very little in common anymore other than being related. And between you and me? Her husband is a football fanatic and after dinner he always has some game on so loud we can barely talk. And he never shuts up with the yelling and the hollering at the umpire guys and...\"\n\nAlex laughed and Karen stopped talking.\n\n\"What's so funny?\" she said.\n\n\"Nothing,\" he told her.\n\n\"No, it's something,\" she said giving him the eye. \"Come on, say it.\"\n\n\"Well, they're called referees in football. Baseball has the umpires.\" He raised his hands in pretend as though he was about to 'get it.'\n\nKaren just laughed and said, \"You see, I can't even get upset with you.\"\n\nAlex stopped smiling then looked right at her. \"I'm glad. I don't ever want to upset you. I...I think you're pretty amazing, Karen...\"\n\n\"Van Gelder,\" she told him. \"It was Finney growing up.\"\n\n\"So where do you live Karen...Finney-Van Gelder?\"\n\nShe gave him her address which he jotted down on his bookmark.\n\n\"You do have a car, right?\" she asked as she glanced over at his bike.\n\n\"I do or I can borrow my dad's. He never goes anywhere on Christmas Eve. He rarely drinks, but he'll have several tonight so yes, I won't have to peddle my ass around town.\"\n\nKaren laughed harder than she had yet, mostly out of relief that he'd said he'd be coming over.\n\n\"Okay, good to know. Well, be careful um...peddling your you-know-what home, okay?\"\n\nShe laughed again and Alex joined in. \n\nHe opened the door, got out, then looked back in. \"You're even more beautiful when you smile,\" he said. Before she could answer he said, \"See you at 9?\" He closed the door and waved before turning around and heading toward his bike.\n\nIt really was very cold outside, but Karen couldn't remember the last time she'd felt so warm and so...happy in a very long time. She sat there and basked in those feelings for several minutes before heading home.\n\nIt was almost the end of dinner at Karen's sister's when she was asked if she was seeing anyone yet.\n\n\"Oh, no. I'm not seeing anyone. But I did have the most interesting day today.\"\n\n\"Oh?\" her sister said as she took a final sip of wine.\n\n\"Yeah. And the crazy thing about it was he was a high school student.\"\n\n\"A high school student? What could you possibly talk about with some kid in high school?\"\n\n\"Well, when I walked up\u2014to the library\u2014you know, to check out some books since all mine were destroyed\u2014he's standing there reading Anna Karenina.\"\n\nKaren's brother-in-law suddenly piped up sounding like a modern-day Archie Bunker.\n\n\"Oh, for Christ's sake! Don't start in talkin' about some dead Russian poet again!\"\n\nBefore she could respond, her sister said, \"Why don't you go take your beer and go watch the game? Alone.\"\n\nTheir daughters looked back and forth wondering why everyone was so mad before their mother said, \"We're just having some Christmas Eve fun! Daddy's gonna hang out with all his friends now\u2014right? Daddy.\" she said giving him the death stare.\n\n\"Ah, the hell with you both!\" he snorted as he grabbed his beer and left.\n\n\"Okay, now that the Grinch is gone, you were saying?\"\n\nKaren tried to explain not only what had happened but how it made her feel.\n\n\"How did it make you feel?\" her sister asked.\n\nKaren sighed then said, \"I don't know, really. Um...alive maybe?\"\n\n\"Well, I for one am glad you had a break from all the stress. Lord knows how awful things have been since the fire. Any word from the insurance company? Are they really still looking at you as having something to do with what happened?\"\n\n\"Because of the life insurance policy, they think I may have had motive.\"\n\n\"But the life insurance people already paid. I don't get it.\"\n\n\"You and me both. The good news is they paid. The bad news is I've spent a huge chunk of that money renting a furnished apartment. I'll get reimbursed if the homeowner's policy every gets paid off, but I could end up bankrupt by then.\"\n\n\"My heavenly days! What a nightmare!\" her sister said. \"Anyway, the way I see it, if you had a nice time with this kid, that's wonderful.\"",
        "\"Yeah. I did. I had a really nice time. He loves to read as much as I do and the books we both love speak to him like they do to me. I've never met anyone quite like him before,\" Karen said.\n\n\"Karen? Did you just hear yourself? He's like no one you've ever met before? It's a good thing my husband isn't still sitting here. Sheesh!\" \n\nThe sisters laughed before Karen offered to help clean up the mess. Once the dishwasher was running she said, \"You know what? I think I'm gonna head back a little early tonight. Would you mind?\"\n\n\"On Christmas Eve?\" her sister said. \"If I didn't know you so well, I'd think you were sneaking off to see some guy. You don't have a date tonight, do you?\" \n\nIt was said in such a joking manner Karen was able to laugh it off. Then again, she didn't have a date, per se, she was just watching a movie with a friend. Okay, a very young friend; a friend she'd just met, but then again, he wasn't like any kid\u2014or anyone\u2014she'd ever met.\n\n\"A date? Ha! I wish,\" Karen said. \"Oh, wait? A date. Hmmm. What is that?\"\n\nHer sister laughed then said, \"Go on. Relax a little. You deserve it. I'm just glad you came by for dinner and again, please excuse my slob of a husband!\" They laughed one more time then hugged each other followed by a big hug from each of the nieces.\n\nShe got home at ten 'til nine and although she'd straightened up before she left, she took another look around then made sure she had the DVD ready to go. She ran to the bathroom and freshened up her makeup then on the spur of the moment decided to change clothes.\n\nShe was flipping through what things she'd managed to buy since losing most of her stuff in the fire, and it was apparent the best she could do was replace the pants with a skirt. She had two that were black and telling herself she was in a hurry, chose the shorter of the two. She slipped off the pants, stepped into the skirt, zipped it up, then grabbed a pair of heels and stepped into them just as the doorbell rang.\n\nShe walked quickly to the door, took a deep breath, then opened it and smiled.\n\n\"Alex! Hi, please come in,\" she said.\n\nHe stepped in and handed her a present very nicely wrapped and tied with ribbons and a bow.\n\n\"What's this?\" she said as he placed in her hands.\n\n\"I hope it's one you don't currently have,\" he told her.\n\n\"Alex, this is so unnecessary. You shouldn't have. Really.\"\n\n\"But I did,\" he told her with a warm smile. \"Go ahead. Open it.\"\n\n\"Please come in and sit down first, okay?\" she said. She felt like she had when she was a little girl on Christmas morning and her dad said it was okay to start passing out the presents.\n\nAlex took a seat on the sofa and Karen sat next to him. She began unwrapping and felt her heart beating fast again. The paper wasn't even off when she saw the cover and recognized it immediately. \"Oh, my...\"\n\n\"It is one you like, I hope,\" he asked.\n\n\"Like?\" she said holding the barely-used copy of Pride and Prejudice in her hands. \"Alex, this is my favorite love story of all time. Like it? Alex, I love this book!\"\n\n\"I can tell,\" he said as he saw her wiping away tears again. \"I didn't mean to make you cry.\"\n\nShe turned toward him as she clutched the book to her chest. \"This may be the nicest gift I've ever been given.\" Her eyes were wet and her lips were trembling. \"Thank you, Alex. I don't know what to say.\"\n\n\"How about, 'Hey, Alex, would you like to watch the movie'?\" he said trying to lighten the mood.\n\nShe wiped her eyes then smiled.\n\n\"Oh, right. The movie. The real love story. Sure. Let me get it started, okay?\" She hit the play button on the DVD remote then carefully set the book and the wrapping paper aside. \"Would it be okay if I hugged you?\" she said still a little shaky.\n\nAlex smiled and held out his arms. Karen wrapped hers around him and said, \"Thank you sounds so trite, but...thank you,\" she said again.\n\n\"You're welcome,\" he told her. \"It makes me happy to see you happy.\" He pulled back then said, \"You are happy, aren't you?\"\n\n\"I am,\" she said lowering her arms while taking one more pass at her eyes. \"You should see me when I'm ecstatic,\" she said trying to joke back. \"Is my mascara a mess?\"\n\n\"Nope,\" he told her. \"You're still beautiful.\"\n\nKaren was relieved when the DVD player came to life.\n\n\"I can pop some popcorn if you like,\" she offered.\n\n\"That sounds great,\" he told her. \"Is there anything I can get or help with?\"\n\n\"Um...sure. You could pour us both a glass of w...\" She stopped then said, \"Sorry, never mind. Would a Coke be okay?\"\n\nAlex laughed and said, \"A Coke would be perfect. I'll pour while you cook. Or...microwave.\"\n\nThree minutes later, the previews were still running so Karen skipped to the start of the movie, sat the bowl between them, and set down.\n\n\"Just one thing, okay?\" Alex said.\n\n\"Yes?\"\n\n\"Don't even think about calling me 'Preppy,' okay?\"\n\nShe threw a piece of popcorn at him and said, \"You nut!\" When he laughed, Karen said, \"Sorry, that wasn't very nice.\"\n\nAlex turned toward her and said in his best Ali McGraw voice, \"Love means never having to say you're sorry!\" Karen's laughter turned into a dull roar and she couldn't have been happier that she'd chosen to come home and spend time with this enigmatic young man who made her smile, laugh, and feel...many things.\n\nA half hour into the movie the popcorn was gone and Karen offered to make some more. She went to get up when Alex reached for her hand. He moved the bowl with his free hand then patted the seat next to him.\n\nKaren knew she shouldn't. There was no reason to sit that close. At least no good reason. And yet she told herself there was no harm. They were just watching a movie and having a nice time. Without resistance, she let him pull her next to her. \n\nShe sat there trying to watch the movie, and yet all she could think of was how their bodies were touching and how much she wished he'd either take her hand or put his arm around her. She kept glancing down at his hand, feeling like she was back in high school herself. Then again, she'd been nothing like Alex when she was his age. She was a typical teenaged girl\u2014boy crazy and in search of the next dose of fun. It had taken her another ten years to get to the point where Alex already was.\n\nShe gave up on her silly idea and settled in to watch the plot unfold the way it had it every other time she'd watched this movie. Ali McGraw still got sick. Ryan O'Neal, the handsome rich kid, was still devastated. And just as she'd done every time, she teared up. And that's when it happened.\n\nAlex noticed immediately and put his arm around her then rested his hand on her shoulder. Without a word or so much as looking at him, she laid her head on his shoulder and put her hand on his chest. The movie was a blur. The words became inaudible. All she could hear was the beating of her heart and the sounds of his breathing. Ignoring every warning signal her brain was sending she began slowly running her hand across his chest. Just the slightest bit, back and forth. To her great delight, he began doing the same thing to her shoulder. Just a slow, gentle stroking up and down on her upper arm.\n\n\"This is nice,\" she said not daring to say what she was really thinking.\n\n\"It is,\" Alex agreed.\n\nMoments later, he softly kissed the top of her head and Karen pulled herself as close to him as she could get. She wanted to look up at him but she couldn't. She couldn't because she feared that what she was so desperately wanting would happen. So she kept her eyes on the screen and continued to run her fingers up and down his chest. A part of her was relieved he hadn't tried something more and another part was deeply disappointed that he hadn't. \n\nObviously, she was a friend to him and nothing more. Then again, why would there be more? How could there be more? She was nearly twice his age and in spite of his assurances he found her to be an attractive woman, no one his age and as handsome as Alex Voss would want a woman like her. So she settled for having what she could have and appreciating it for what it was worth.\n\nWhen Ali McGraw was dead and Ryan O'Neal was sitting on the bench by the snow-covered tennis court, Alex lifted his arm up and said, \"That never gets old.\"\n\nKaren sat up and said, \"No. Unlike me...it doesn't.\"\n\n\"It's just as sad and beautiful and touching today as it was the first time I saw it.\" He reached over for her hand then said, \"And...I wish you'd stop saying that.\"\n\n\"That I'm old?\" she asked knowing the answer.\n\n\"Yes. You're beautiful, just like Love Story.\"\n\n\"It is a beautiful love story, isn't it?\" she said, her eyes dancing between his.\n\nAlex changed the subject by saying, \"I've almost finished Anna Karenina.\"\n\n\"Wow. How? When?\"\n\n\"I read for several hours today. Karen? What would you do? If you were Anna. Would you choose your child or your lover?\"\n\nWithout hesitation she said, \"I could never abandon my child. Not for anyone\u2014no matter how much I loved him.\"\n\n\"I knew that's what you'd say. I guess I just wanted to hear you say it.\"\n\n\"And if you were Alexei...would you agree to never see her again?\" she asked their eyes still locked.\n\n\"I would hope I'd never let myself get into that kind of situation,\" he began. \"But if I did, I would have to have loved her with a love so strong and true, I would be willing to die for it. So, no, I could never agree to that. Abandon my love, my life, my child? No, I would fight for her because living without her...without them...would be a fate worse than death.\"\n\nKaren's heart was beating fast again and at that moment she wanted to be kissed more than she ever had in her life. Who was this boy...this...young man...who made her feel so alive? How could she possibly feel this way for someone she barely knew? And yet was not only a kindred spirit but it was as if he...shared her soul. It was as though he knew her every secret thought, every romantic fantasy, her every desire.\n\nVery quietly she told him, \"Perhaps it would be best if you were to leave now.\"\n\nHe smiled then touched her face. \"So it's not just me,\" he said just as quietly.\n\n\"I...I don't understand,\" she said to him knowing full well what he meant and that realization frightened her to her core.\n\n\"I'm not the only one feeling this...connection, am I?\" he said as he softly brushed her long hair back behind her ear.\n\nShe looked down unable to hold his stare any longer. \"Alex. I'm not sure what's going on, but I am sure I'm almost twice...\" She stopped remembering her promise not to bring up her age again. \n\n\"Sometimes life presents us with opportunities, Karen, but they don't always come at opportune times. They just come. We can choose to ignore them and let them pass us by or we can embrace them. But we can't know how long the window of opportunity will remain open. And once it closes...\"\n\nShe reached up and took his hand then whispered, \"It's too late.\"\n\n\"Forever too late.\"\n\n\"I...I can't think clearly right now, Alex. I can't think at all, right now. My mind...it's...it's a jumbled mess that's sending me so many mixed signals.\"\n\n\"Clarity is important,\" he told her. \"You need clarity and clarity requires time.\"\n\nShe looked at him then asked, \"Do you...have clarity?\"\n\n\"I do,\" he told her in the gentlest of voices. \"I see very clearly while you are seeing 'as through a glass darkly'.\"\n\n\"That's Saint Paul, isn't it? From the Bible?\" she whispered.\n\n\"Yes,\" he told her. \"And because you lack clarity, you were right. I should leave.\"\n\n\"Oh. Yes. That's...that's true. Yes, you should...go.\"\n\nWithout letting go of her hand, Alex stood up then helped her stand. She was facing him and less than a foot away. He took her other hand then told her, \"This was a truly wonderful evening. Thank you.\"\n\n\"It was, wasn't it?\" she said trying to smile back at the warm smile he offered.\n\n\"I like your skirt, by the way,\" he said still smiling. \"I won't assume you changed for me, but it looks very nice on you.\"\n\nHow did he know? How could he know? Then again, how could any of this be happening?\n\n\"I...I'm glad you like it,\" she finally replied. \"I wanted to look nice for you.\" She hated herself for saying it, but it was the truth, the whole truth, and nothing but...\n\n\"You do look nice.\" He ran his fingers through her hair then again said, \"You are so beautiful, Karen.\"\n\n\"Alex, I've been so lonely for so long, and I...I spent many nights wondering if I'd ever feel okay again. Not...happy. Just...okay. And yet since I met you I haven't stopped feeling happy.\"\n\n\"Same here,\" he told her. \"But...I sense a 'but' coming.\"\n\nShe looked at him briefly, then looked down again. \"But...but all of this makes no sense. I don't have to spell out all the problems do I?\" she asked with sadness in her voice.\n\n\"Problems? I don't see any problems. I only see challenges and opportunities. You and I are both single, right? We both love the same things and passionately so. We find each other attractive.\"\n\n\"Very,\" she whispered.\n\n\"What more do two people need? What more do we have to have in common?\"\n\n\"Oh, Alex. If that was all there was to it...if it was only that simple. But we need a home, jobs, money. Those aren't small things.\"\n\n\"When the investigation is over, you'll have a home. For now this is more than adequate. And how important is money anyway?\" She went to speak but he pressed on. \"Beyond the ability to pay our bills, how much do we really need? Studies show that beyond that point money doesn't make people any happier.\"\n\n\"But people can't live on love, Alex. No matter how romantic that sounds.\"\n\nHer eyes were once again darting back and forth between his.\n\n\"So...if I had a job, a really good job, and money, would that change how you feel?\" he asked.\n\nWithout hesitation, she said, \"No. It would make that concern go away but I wouldn't feel any differently.\"\n\n\"Neither of us can get in a time machine and change the day we were born. That is an unchangeable fact of life. Were I ten years older, would that change the way you feel about me?\" he asked as he gently touched her cheek.\n\n\"No,\" she said turning her face toward his hand. \"But it would make things so much easier.\" She looked at him briefly before asking, \"Wouldn't it?\"\n\n\"Not for me. But then, I'm the one who sees things clearly.\" He held her hands tightly then told her, \"I would be so proud to be with you, Karen. To be seen anywhere and everywhere with you.\" He put his hands on her shoulders and said, \"When you can let yourself feel like that about me, you too, will see clearly. Until then, we still have some very important things in common.\"\n\n\"Yes, we do, don't we?\" she said as she put her hands on his chest. \"Whenever I let myself dream; whenever I dared to hope; I wished for someone who could understand me and how I feel about life and love. My late husband never did. I do believe he loved me\u2014once upon a time. But that was long ago and many long, lonely years passed in between. And now...\"\n\n\"And now?\"\n\n\"And now...I've found that someone but...\"\n\n\"But it doesn't make sense,\" he said completing her thought.\n\n\"No...it doesn't,\" she replied agreeing with what he said.\n\n\"Is it that it doesn't make sense or that you can't see how it might?\"\n\n\"I don't know, Alex. It's quite possible I really just can't...or won't...see things clearly.\" She paused then said, \"Or...perhaps I do see them quite clearly and maybe it's you looking through rose-colored glasses.\"\n\n\"If I stay any longer, I'll cross the threshold,\" he said ignoring her alternative explanation.\n\n\"The threshold?\" she asked not understanding.\n\n\"Yes. The point of no return beyond which I would fight for you. The point where I would do anything to be with you,\" he said as he gently smoother her long, silky hair.\n\nWhat would have sounded like soap-opera melodrama to virtually anyone else sounded majestic and even angelic to Karen Finney-Van Gelder. Here was the person...the man...she'd waited for all her life to say the very things he was saying and she was powerless to love him or to let him go.\n\nHe leaned down and kissed her forehead. As he did her eyes closed and her body trembled. \n\n\"Merry Christmas,\" he said as he stepped back and let her go.\n\n\"Merry Christmas,\" she replied so very quietly.\n\n\"I'll see myself out,\" he told her. He grabbed his coat then walked to the door where he stopped. \"Karen? If you do begin to see things more clearly, will you let me know?\"\n\n\"Yes,\" she told him. \"I will.\"\n\n\"Promise?\" he asked with a smile.\n\n\"I promise.\"\n\nIt was just after midnight on Christmas Day when he left, and Karen felt like she'd been through the worst breakup of her life although there was nothing to be broken. No commitment had been made, no relationship existed beyond this unique friendship. Why then did she feel like crying? Like her world had just come to an end? How could she be so sad when this entire...thing...was so irrational?\n\nShe had to be back at her sister's house at 6am before the girls got up and would want to open presents. She was exhausted and yet unable to sleep. She lay down and closed her eyes, but the image of...him...wouldn't go away. She told herself this was a kind of silly infatuation. A daydream that would make for a fun-but-sappy romance novel. It wasn't reality. It was fantasy and nothing more.\n\nWhy then did she find it impossible to convince herself of the very things she 'knew' to be true? Why did her feelings so stubbornly persist in the face of everything her rational mind could throw at her? Why...why did she love him so if this was nothing but a fantasy or a dream? Had fate really opened a window of opportunity? A window that once closed would never again open? Or was it just the illusion of an opportunity? An illusion of hope and happiness that would end in heartache and even greater loss?\n\nThere was a war going on between her head and her heart and unless her intelligence could win out, there was nothing but anguish awaiting her on this the happiest of all days of the year. At 5am she gave up trying. She undressed, showered, changed clothes, and drove back to her sister's just before six.\n\nNot even the excitement of her nieces ripping open their gifts and shrieking with joy quelled the turmoil in her soul. Once all the wrapping paper and ribbons and bows were cleared away, her sister asked her a question.\n\n\"Who's the guy you're not telling me about?\" Her husband was back in bed 'sleeping it off' and her daughters were playing with their new things.\n\n\"What guy?\" Karen said pretending to have no idea what her sister meant.\n\n\"Um, yeah. I've only been your sister your entire life so it's not like I can tell what you're thinking even when you think I can't.\" Her hands were on her hips and her head was tilted down. \"So are you gonna talk to me?\"\n\n\"I...I can't,\" she replied. \"This is something I have to work through on my own.\" She looked at her sister and said, \"Can you just give me some time? Please?\"\n\n\"As long as I know you're okay, sure. I can do that. Are you?\"\n\n\"I don't know,\" Karen told her truthfully. \"I've never felt like this before. About anyone. Ever.\"\n\nHer big sister sat her down and took her hand.\n\n\"Is it really that complicated or are you making things harder than they need to be?\" she asked politely. \"Is whatever's worrying you a genuine concern or are you worried what others will think?\"\n\nKaren let out a long sigh. \"You really do know me better than I know myself.\" She squeezed her sister's hand and told her how much she loved her.\n\n\"You, too, K-K,\" she said using her childhood name. \"Follow your heart.\" She looked around to make sure no one else could hear. \"I love my girls, but if I could go back and do things over...\"\n\n\"Don't say that!\" Karen said. \"You have a good life.\"\n\n\"It's...okay,\" she said. \"The girls make it okay. Without them...\" \n\nHer sister stopped talking and Karen knew she was on the verge of getting emotional.",
        "\"I'm just saying that 'comfortable' is overrated. I wouldn't trade my girls for anything, but I would give anything\u2014but them\u2014for the kind of real passion I always dreamed of. Instead, I settled and now I have football, and beer drinking, and twice a month sex...if I'm lucky.\" She smiled then said, \"Who am I kidding? Both times pretty much suck.\" She laughed then said, \"And sucking is something I stopped doing ten years ago.\"\n\nKaren laughed even as a tear formed in her eye again. \"I had no idea,\" she told her sister.\n\n\"How could you not when your own marriage was just as bad? Karen, we both settled. We played it safe. We went for 'comfortable' and we reaped what we sewed. I'm not miserable, but I've given up on ever being really happy. And when the girls are gone, who knows?\"\n\nKaren wanted to chide her big sister and tell her things would get better, but she knew that wasn't true. The old adage about leopards not changing their spots was true. Her husband's personality was fixed. It wasn't going to suddenly change because his wife was feeling neglected or lonely. Her own husband had even sought out another woman who had things in common with him. Things she didn't share and had no interest in sharing. And that's when it hit her.\n\n\"Having things in common matters, doesn't it?\" Karen said more as a statement than as a question.\n\n\"You better believe it,\" her sister replied. \"I hate football,\" she said causing them both to laugh. \"And beer!\" She sighed then said, \"What I wouldn't give to have my husband be thoughtful, romantic, and charming. I don't care that he's going bald. I don't care about his expanding waist. I just want someone to love me...like that.\" She blinked away several tears then said, \"Sorry! No Debbie Downer today! Come on, let's go get something to eat!\"\n\nKaren stayed until a little after 1pm and spent most of that time playing with her nieces. They were 'her' girls; the children she'd never had because her husband was too selfish to share his time with anyone else. Of all the things that had hurt her over the years, his unwillingness to even consider having a child hurt more than even the affair she was sure he'd been having. \n\nShe'd played by the rules. She'd married a man her own age. She'd tried to be the best wife possible. And in return, she'd gotten loneliness, heartache, and almost certainly, betrayal. And now, there was someone in her life who shared all of her deepest values and dreams; someone who was kind, caring, thoughtful, romantic, and unbelievably gorgeous. Would she really let age and money stand in the way of being happy? Would fate ever open another opportunity like this were she to let it pass her by?\n\nShe hugged her nieces and wished them a Merry Christmas then did the same to her brother-in-law who back up and who already had the smell of beer on his breath before saying goodbye to her sister.\n\n\"Your advice did something invaluable for me,\" Karen told her.\n\n\"Oh, really?\" she said hoping for more.\n\n\"Uh-huh. You helped me to...see clearly.\"\n\nUnderstanding no more than she had, her sister accepted the answer she was given at face value. \"Well, then I'm glad. I think,\" she said before hugging her very hard. \"I love you, K-K.\"\n\n\"I love you, too. And I'm pretty sure I love someone else, too.\"\n\n\"Will you let me know when you're sure?\" she asked.\n\n\"You'll be the second to know,\" she promised before hugging her sister one more time.\n\n\"I uh...I gotta run before this window of opportunity closes,\" Karen said as their embrace ended. \"Thank you. Thank you for making things so clear.\"\n\n\"You're...welcome?\" her sister said smiling just because Karen finally looked happy.\n\nA feeling of euphoria washed over on the drive home; a feeling that lasted until she realized she didn't even have his phone number or his address. Her brain was foggy from lack of sleep, but at some point she finally remembered this thing called a phone book. It was kept on the internet these days, but there couldn't be that many Vosses, could there?\n\nShe was sitting alone and scrolling through the Vs in the digital White Pages when her phone rang and startled so badly she nearly dropped it. Without looking, she swiped it and said excitedly, \"Alex? Alex...I can see clearly now and...\"\n\n\"Mrs. Van Gelder?\" she heard.\n\n\"Oh, sorry. Yes. This is she,\" she said.\n\n\"Ma'am, this is Chief Inspector Cruz.\"\n\nHe was the lead on her arson investigation case. \n\n\"What now?\" she thought. Were they going to arrest or her?\n\n\"I am so, so sorry to be calling you on Christmas Day, but we have new information.\"\n\n\"What kind of new information?\" she asked tentatively.\n\n\"We brought someone new in on the investigation and he found something just yesterday the rest of us missed.\"\n\nKaren held her breath waiting for him to speak.\n\n\"There was a cigarette butt with lipstick on it buried in the rubble. Rubble we sifted through literally using strainers. I have no idea how we missed it, but we did. And we've been able to match the lip print to a Mrs. Shelly...\"\n\nThe moment she heard the name, she knew. She'd been right all along. He had been having an affair.\n\n\"We questioned her again this morning and she admitted being there...I'm sorry to tell you this...with your husband. We found the cigarette butt in the ashes of the master bedroom so I'm sure you understand the implications. At any rate, she admitted there'd been an on-going affair and that your husband was indeed very drunk by the time she left. She played no role in his death, but this is information I thought you'd like to hear even on Christmas Day.\"\n\nShe sat there in stunned silence for several seconds as the validation hit her fully. \n\n\"Um, yes. Thank you, Inspector. I'm just glad you were able to work through this.\"\n\n\"I'm closing the case tomorrow and recommending you be paid in full per your insurance policy and my sincere apologizing for the long delay and for possibly ruining your Christmas.\"\n\n\"No. You didn't ruin it, Inspector Cruz. In fact, in some odd way, you just made it. Thank you for calling and letting me know.\"\n\nKaren fought off the urge to cry brought on by the relief of knowing the truth as well as her sheer level of exhaustion. But there was still no way she could sleep.\n\nShe returned to her search and somehow ended up in the Yellow Pages rather than the white kind. She scrolled down when she found Voss. She saw Voss carpet cleaning, interior design by Voss, Voss Brothers roofing, and then she saw an entry that captured her full attention. It said Voss Tools by Alex Voss, Sr., and Son. Her heart skipped a beat when she realized that was almost certainly him.\n\nHer heart was pounding as she went back to the White Pages and quickly found the name of Alex Voss, Sr. Her heart was in her throat as she dialed the number. \n\nShe heard it ring a third time and just as she was about to mentally crash and burn, someone picked up. \"Hello?\" a deep male voice said.\n\n\"Mr. Voss?\" she assumed.\n\n\"Yes? May I ask who's calling?\" he said pleasantly.\n\n\"Sir, my name is Karen. Karen Van...Karen Finney. I...I was calling for Alex. Um...junior. Is he home by any chance?\" Her hand was trembling and her voice was shaky as she sat there waiting for his reply.\n\n\"He's in his room reading a book. I'll go get him. You said this is Karen, right?\" His voice sounded different, but Karen didn't know just how or why.\n\n\"Yes. That's right,\" she said before exhaling a long, slow breath.\n\nAfter what seemed like an eternity, she heard the sweetest sound of her life.\n\n\"Karen?\"\n\n\"Alex? Alex, is that really you?\" she said trying so hard not to cry.\n\n\"Are you okay?\" he asked with deep concern.\n\n\"Yes,\" she said as the tears came. \"I'm fine. Alex? I can see clearly now. I...I see everything so clearly.\"\n\n\"I'm so glad. In that case, I need to tell you something but it has to be in person,\" he told her.\n\n\"Dear God. Please don't tell me the window has closed. Please!\"\n\n\"No. The window is very much still open. Wide open, in fact. Are you at home?\"\n\n\"Yes. I'm at home and please come and see me.\"\n\nTwenty minutes later, he was at her door which flew open before he could knock.\n\n\"Alex! Alex I...\"\n\n\"I love you, Karen,\" he told her taking her into his arms. \"I love you so much.\"\n\n\"I love you, too! God, how I love you!\"\n\nMinutes later they were together in bed, without a stitch of clothes between them.\n\n\"Am I still beautiful to you?\" you asked with so much hopefulness Alex could feel it.\n\n\"More than ever,\" he told her. \"And you always will be, honey.\"\n\nShe blinked back more tears then said, \"Please make love to me. Please?\"\n\n\"Yes, but not before I tell you how much I love you.\" He stroked her pretty face then brushed back her hair and smiled. \"How do I love thee? Let me count the ways. I love thee to the depth and breadth and height my soul can reach...\"\n\nWithout pause, Karen picked up where he left off. \"When feeling out of sight for the ends of being and ideal grace. I love thee to the level of every day's most quiet need, by sun and candle-light. I love thee freely...\"\n\n\"As men strive for right,\" he said.\n\nKaren couldn't stop crying and said, \"Could you please just hold me first? Just for a little while? Would that be okay?\"\n\n\"Anything you want will always be okay with me. And I will always be here for you, my love. Always.\"\n\nAlex didn't mind in the least that after maybe ten minutes, Karen's body finally relaxed and she fell asleep in his arms. It was after 8 o'clock when she finally awoke. The room was dark but not cold and she felt his warmth as he cradled her in his arms.\n\n\"I...fell asleep. And...and you're still here,\" she said. \n\n\"You were exhausted. You needed to sleep. And I told you I will always, always be here for you.\"\n\n\"I feel terrible for making you wait and yet what you just said made me happier than I've ever been. Alex? I love you so much and I am so thankful for you. I really am sorry I fell asleep. I wanted to make love with you so badly.\"\n\n\"Hey, none of that. After all, love means never having to say you're sorry, right?\"\n\nKaren laughed then rolled over on top of him. \"I have to pee like crazy, but when I get back I am going to rock your world.\"\n\nHer smile was genuine and pure he pulled her close and kissed her long and hard. \n\n\"Then go pee. And hurry!\"\n\nFor the next hour or so, Karen was treated the way she'd dreamed of being treated for as long as she could remember. Alex was gentle, tender, loving, and oh-so attentive. She'd rarely had an orgasm that wasn't self-induced, and she'd had three with her handsome young lover. The first was thanks to his very talented middle finger or more correctly\u2014fingertip\u2014as they kissed deeply and passionately. The second was the result of his equally talented tongue while the third came as his very nicely-thick cock slowly fucked her as she pushed hard against it, moaning and sighing with pleasure.\n\nWith her late husband, the lights were always off and her eyes were always closed. This time, Karen was afraid to close her eyes for fear this might be a dream she was only imagining and were she to do so, it would all disappear.\n\nAs she lay snuggled up in his arms she said, \"Tell me about Voss tools.\"\n\n\"What makes you ask that?\" he said surprised she even knew. She explained searching for him in the phone book and how she'd come across it.\n\n\"I would have told you...eventually,\" he assured her. \"I just needed to know you loved me for me.\"\n\nShe looked up and said, \"What does that mean? Is your family rich or something?\"\n\n\"Kind of,\" he told her with a smile. \"Voss is the fourth largest tool manufacturer in the US. We're behind Stanley, Craftsman, and DeWalt.\"\n\n\"So...a job really isn't a concern, is it?\"\n\n\"Not so much,\" he told her trying not to smile. \"That's why I can afford\u2014no pun intended\u2014to spend my time reading. That doesn't mean I'm lazy, though. While I read\u2014a lot\u2014my dad's been grooming me to take over for a couple of years now. This just provides me with the incentive I've needed to dive in head first.\"\n\n\"He sounded nice,\" she said.\n\n\"He is. He's pretty great, in fact. I told him about you today, by the way.\"\n\nKaren sat up quickly and said, \"You told him? About me? The horrible older woman who's...\"\n\n\"It's okay. My mom was ten years older than my dad. Like me, he doesn't care about your age. All he cares about is who you are and once I told him, he said he was very happy for me and that I should do something before you got away.\"\n\nShe laid back down and rested her head on his chest again. \"And yet I was the one scared to death you might run away from me.\"\n\n\"Uh-uh. Never gonna happen, beautiful,\" he told her. \"Have I told you how beautiful you are lately?\"\n\n\"Yes, but I could stand to hear it again a time or two before it gets um...old.\"\n\nAlex laughed along with Karen then told her again how much he loved her. She sat up then said, \"Oh, yeah? Then prove it.\"\n\nHe flipped her over on her back causing her to playfully scream.\n\nShe reached for him and purred when she realized he was once again growing hard. \n\n\"Gorgeous and a big dick. Talk about winning the lottery!\" she teased.\n\n\"All the better to fuck you with, my dear,\" he teased back.\n\n\"Save the improv and give me that monster cock of yours again...please!\"\n\nLater that evening Karen shared her good news on the house and the investigation.\n\n\"Well, at least now you know,\" he told her. \"It must be bittersweet to find out you were right.\"\n\n\"It is, but nothing can take away the joy I've felt since I met you, Alex,\" she told him with complete sincerity. \"I've dreamed of being this happy before, but it was...just a dream.\"\n\n\"Well, this is real, sweetheart, and I'll be here as long as you'll have me.\"\n\n\"Hmmm. Then I guess you'll be sticking around for the rest of your life?\"\n\n\"You can count on it,\" he told her before making love to her again.\n\nAlex proposed to her on Valentine's Day, just one week after construction began on her...now\u2014their\u2014new home. Karen refused any money from her then-boyfriend to help out with the cost of rebuilding, but after proposing she told him she'd be willing to let him pay for some upgrades.\n\n\"Maybe we could have crown molding and hardwood floors instead of carpeting?\"\n\n\"Uh-huh. And granite instead of laminate?\"\n\n\"And...stainless steel instead of black or white?\"\n\n\"Don't push it,\" he said trying to sound serious having already agreed to do just that.\n\nMost importantly, Alex helped with finding and buying as many of the books Karen had lost in the fire as they could find. When it was all said and done, they'd restored her library to something closely resembling what it had once been.\n\nAlex turned 19 in March and they were married on June 14th which was flag day. They had a very romantic and patriotic wedding paid for by Alex Voss, Senior, who gave his new daughter-in-law the kind of wedding she'd always wanted but had never had. She didn't ask for it, but he'd insisted.\n\nAfter a wonderful reception with everyone they knew in attendance, the happy couple flew off to Europe for a two-week vacation that included London, Paris, and Rome and a whole lot of lovemaking. \n\nNeither of them knew for sure when it happened, but one of those sessions resulted in Karen becoming pregnant and nine months later, the birth of their son, Alexei David Voss who would be affectionately called 'Alex cubed' even though no multiplication was involved. Just addition; an addition to the loving family this unlikely pair had created.\n\nFive years later, Alex, Junior, took over Voss Tools, two years after the birth of their second child, a baby girl they named Anna Karenina Voss. Yes, they knew it would require their daughter to explain her name a thousand times, but it only seemed fitting that they name her after the character that had brought her mother and father together.\n\nHad Alex not been reading that very book on that cold December day, there would be no little girl to name, let alone to name after the woman who loved so deeply and so passionately, just as Karen Voss loved her very own dashing husband named Alex."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/anna-karenina"
}