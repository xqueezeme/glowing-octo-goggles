{
    "title": "Every Cloud has a Silver Lining",
    "pages": [
        "With significant input by \"Irish Lass\". \n\n(And edited by our friend, \"larryinseattle\") \n\n***** \n\nParked against the curb, I sat and wondered how in the hell I'd gotten here. Four years of college, two years of post-graduate work in business administration, and then two more years of pounding the streets trying to get a job and all I had to show for it was a shit load of debts and a job driving a cab. \n\nI, distractedly, listened to the hustle and bustle of downtown Chicago as it slid past me; horns honking, people yelling, and the low continuous hum of people talking on their cell phones, all of which seemed to rub against every nerve in my body. Of course, it didn't help that it had been overcast and raining for the last three days and that I'd only been able to pick-up two fares for the whole day. \"Barely enough to pay for the fuckin' gas,\" I grumbled to myself. \n\nThen the back door opened and I felt the cab shift as someone slid in. \"Get me out of here!\" a smooth, silky voice with a French accent said. \n\nI glanced in the mirror and saw a pair of hazel eyes staring back at me. \"Where to, lady?\" \n\n\"How about your place?\" she said. \n\nSurprised and more than a bit upset, I replied, \"Listen, lady, if this is some kinda joke I'm not in the mood.\" \n\n\"Just get me out of here,\" she replied again as she glanced out the side window. \n\n\"You in some kinda trouble 'cuz I don't need it.\" \n\n\"No. Nothing like that. I just want to get away from ...\" she faltered as she saw a tall, well-muscled man exit the building she'd just come out of, \"him.\" \n\n\"Who is he?\" I asked as the man approached the door. \n\n\"My ex-boyfriend and, as of today, ex-manager.\" \n\nI didn't like the looks of the guy so I was more than happy to comply with her request. \"Hold on,\" I said over my shoulder and then I waited until just as the guy was reaching for the door handle, thinking he'd won. That's when I hit the gas. The tires slipped a little, spraying the guy with muddy water as we left him standing in the rain yelling and screaming at us. \n\n\"Thank you,\" she sighed, as she settled back in her seat. \n\n\"No problem. He looked like kind of a creep anyway.\" \n\nShe sat silently before replying, \"I wish I'd noticed that when I first met him.\" \n\nWe'd reached the end of the block and were stopped at a stop light when I turned to look at her. Her hair was jet-black and glistened from the rain. Her eyes sparkled as she saw me looking at her and the corners of her mouth turned up in a little smile. Her coat was open and she was wearing a ruby-red, above-the-knee skirt, with a matching top which left her stomach exposed. A red coil necklace hung around her throat and it looked like she might be wearing a set of matching earrings. The one thing I didn't see was a ring on her left ring finger. \n\nHer looks and voice tugged at a some dim memory until I remembered where I'd seen this woman before. \"Aren't you Anissa K ...\" but I never finished because I saw her smile disappear. \n\n\"I USED to be! That's one of the things my asshole ex-manager and I were fighting about.\" \n\n\"Ahhh,\" I said as the car behind me honked and I spun around to see that the light had turned green. With nowhere else to go I headed toward Lake Drive figuring that she was probably staying at one of the better hotels located along 'the strip'. \n\n\"I'm sorry,\" she said softly. \"I shouldn't have snapped at you like that.\" \n\n\"Hey. No big deal. I'm the one who started it. I'm just not used to having a celebrity in my cab.\" \n\n\"I'm no celebrity! I laid on my back and got fucked like a whore. The difference is I got paid better because someone was filming it.\" \n\n\"Enough of that,\" I said gruffly, before changing to a more soothing voice. \"My father taught me that a woman, no matter what she has to do for a living, is a 'lady' and should ALWAYS be treated like one so enough of that crap about being a whore.\" \n\n\"Wow! You mean I actually found a gentleman?\" she teased. \n\n\"At your service, ma'am\" I replied in my best Southern drawl. \"Ya' see, ma'am, chivalry ain't dead, it's just a bit tarnished.\" \n\nHer laughter filled the cab. \"Okay, Terrance, where would you suggest I go if I want to get away from ... ummmm ... everything for awhile?\" \n\n\"Well, the first thing I'd suggest is that you call me T. Terrance is my father and I was named after him, that's why the name is on my license, but all my friends call me T.\" \n\n\"So, I'm your friend?\" \n\nI flipped off the meter and flipped the switch so the \"Out of Service\" sign on the roof lit up before answering her. \"I guess so since the only people I don't charge for a ride are my friends.\" \n\nOnce again she laughed, this time filled with relief. \n\n\"In that case, T, take me somewhere where I can relax, unwind, and hopefully no one will recognize me.\" \n\n\"Hmm .. the first two are easy but the last one ... I don't know. You're pretty popular and it's hard to hide a woman as good looking as you.\" \n\n\"Flattery will get you everywhere,\" she giggled. \n\n\"Are you staying anywhere? I can drop you off.\" \n\n\"Trying to get rid of me so soon?\" she sighed. \n\n\"NO!\" \n\n\"I am, or was, staying at the hotel where you picked me up so I don't think that would work out too well,\" she said before asking, \"Where do you go when you get off work?\" \n\n\"With the way things have been lately I usually just head home.\" \n\n\"Well, then ...?\" \n\nWhen I looked in the mirror I couldn't tell if she was joking so I replied, \"My ... ummm ... my place is pretty small and definitely not in any condition for visitors.\" \n\n\"Well then, what do you suggest?\" \n\nI quickly ran through the friends I could safety take her to and realized that wasn't going to work; too many questions, too many comments, and in some cases too damn sleazy to trust. Then I thought about some of the less elegant hotels in the area and realized that just didn't feel right either. It was then that an idea popped into my head. One that I'd NEVER have considered if it wasn't for who she was and the situation she was in. \n\n\"Are you up for a drive?\" \n\n\"Where to?\" she asked, this time with a bit of concern in her voice, which I didn't blame her for since we'd just met. \n\n\"My parent's place.\" \n\n\"Your parents? Isn't it a little too soon for that?\" \n\nI laughed. \"Nothing like that. They have a place about an hour and a half north of here in Lake Geneva. It's kind of a resort town but since it's the off season there aren't many people around to disturb you.\" \n\n\"What about your parents?\" \n\n\"They're snowbirds.\" \n\n\"Snow - what?\" \n\n\"Snowbirds. They live up here in the summer but have a place down in New Mexico where they go during the winter.\" \n\n\"So the place is empty?\" \n\n\"Yeah. Is that a problem?\" \n\nShe didn't answer for several minutes as I headed for the freeway. \"I guess that should be fine. The only problem is I don't have anything except what I'm wearing and I ... ummmm ... like something to snuggle with when I go to sleep.\" \n\n\"Ahhh,\" I replied as I tried to figure out what to do next. \"I hope you don't think I'm getting too personal but if I remember from your ... previous work ... you're what? 36-24-35?\" \n\n\"Very good,\" she teased, \"but actually it's 37D.\" \n\n\"Oh. My mistake. Anyway, I think my sister probably has some of her stuff still laying around at the house. We can see if any of that fits.\" \n\n\"And what about the other problem?\" \n\nI didn't answer since I realized I was 'walking on thin ice' as the saying goes. I could tell her I'd volunteer and probably have her tell me to pull over so she could get out or I could tell her that I thought my sister still had some of her old stuffed animals to cuddle with and run the same chance so, in the end, I decide to follow my instincts. \"I know this may sound stupid but I think there might be some stuffed animals you can cuddle with.\" \n\n\"Hopefully one of them is a big, stuffed teddy bear,\" she said as her laughter once again filled the cab. \n\nWith that decided, I picked up the microphone and called my dispatcher and told him I was done for the night and wouldn't be available for the next several days. \n\n\"Whatcha do, hit the jackpot or somethin'?\" the dispatcher asked. \n\n\"Something like that,\" I replied as I tuned off the dispatch radio and turned on a local music station. \n\n\"You might wanna stretch out and relax. Like I said, it's about an hour and a half drive.\" \n\n\"T?\" \n\n\"Yeah?\" \n\n\"Aren't you curious?\" \n\n\"About what?\" \n\n\"About what I'm doing in your cab? What ... or who I'm running away from?\" \n\n\"Yeah. I'm curious. But I figured you'd tell me if you wanted to. If not, then I'm just helping out a friend.\" \n\n\"I keep forgetting we're friends,\" she sighed. \"I don't have many of those. And the one person I thought I could count on just proved how wrong I was.\" \n\nI didn't say a word figuring the best thing to do was watch the road and wait for her to continue. \n\n\"Phillip ... the man who came after me is ... WAS my manager. For a little while he was also my boyfriend and ... but that didn't work out. Anyway, I've been telling him for months that I was thinking of getting out of 'the business'. It sounds silly now but in the beginning it was exciting. You know, a new person, a new story. But after awhile it all just became the same thing over and over again. In the end, I just burned out.\" \n\n\"I can understand that.\" \n\n\"So tonight I went to see him and tell him I was through. That's when he went crazy. He started screaming and yelling; talking about the money that I could still make and the responsibility I had to my fans ... that kind of thing. I ran to the bathroom to get away from him and that's when I found the real reason he was so upset. There were three lines of coke on the counter. That's why we broke up. Now, please, don't get the idea that I'm innocent of such things. I've done stuff a few times but he got hooked and I mean REALLY hooked. When we broke up he was spending over $1000 a day.\" \n\n\"Wow,\" I sighed. \"I know that stuff is easy to get hooked on but a thousand bucks a day? Hell, I'd have to starve and start robbing banks to afford that.\" \n\n\"Exactly ... and I was the bank.\" \n\n\"So he ...?\" \n\n\"Yes,\" she said in almost a whisper before continuing. \"Almost every penny that he had control of is gone. A lifetime of ... ummm ... 'acting'. Gone up his nose.\" \n\nThe cab fell silent after that as I turned on to the freeway. The highway flew by to be replaced by the darkness of the state and county roads taking us further and further from her problem. After about an hour, the combination of a long day, the crumby weather, the soothing music, and the heater from the cab had me feeling drowsy. I began to think about pulling over and taking a nap for awhile but when I glanced in the rear view mirror to ask if that was okay with her. What I saw took me by surprise and I instinctively turned to look and make sure I wasn't seeing things. \"What the fuck?\" I mumbled. \n\nMy passenger was stretched out on the rear seat; one hand inside her blouse caressing her tit while the other was under her skirt. \n\nUnfortunately, when I turned around I'd also pulled the steering wheel and the tires soon hit the gravel siding. She heard it too and opened her eyes. For the briefest of seconds, time seemed to stand still as we stared at each other. \n\nHer eyes were dilated and I could see how they sparkled even in the limited light from the dashboard. Her cheeks were reddened and there was a delicate sheen of moisture on her upper lip. Her lips were pursed with the tip of her tongue sticking out between them and her nostrils were flared. And to top it off, I could smell the heady aroma of her perfume mixed with the delicate scent of her arousal floating through the divider window between her and me. \n\nThen the moment was gone. I turned my head toward the road and got us back on the highway, all thoughts of a nap evaporating as the adrenaline surged through me. \"I ... I ...,\" I stuttered. \n\n\"Pull over,\" she said softly. \n\n\"What? We're in the middle of nowhere.\" \n\n\"Pull over ... please.\" \n\nI pulled to the side of the road and we sat there, neither of us saying a word, until she finally whispered, \"I'm sorry.\" \n\n\"What for? I'm the one that ...\" \n\n\"Can I ask you a favor?\" she said, stopping the conversation. \n\n\"I guess so.\" \n\n\"Can I come up in front and sit with you? I know that cabbies don't usually allow that but it feels funny talking through this glass and screen.\" \n\n\"Yeah, sure,\" I replied as I got out and came around the cab. \n\n\"There's no need for that,\" she said as I opened the door and she slid out, her body lightly brushing against mine. \"After all, I'm sure you don't open the doors for your friends.\" \n\nI laughed as I replied. \"If any of my friends looked as good as you, I'd open every door they ever came to.\" \n\n\"There you go with the flattery again. Are you sure you're not from the south?\" \n\n\"Actually, I was born in Texas,\" I answered as I closed her door and stepped backwards to open the front passenger's door. \n\n\"I can tell. You have a bit of the Southern Gentleman in you.\" \n\nIn the mean time I struggled to open the door. \n\n\"Is something wrong?\" she asked as she looked over my shoulder. \n\n\"It won't open,\" I grunted. \n\n\"Did you unlock it?\" she asked, coyly. \n\nThe answer hit me like a lightning bolt. \"Duhhhhh.\" \n\nShe laughed, long and hard as I scrambled back around the cab and then stretched across the seat to unlock her door. \n\nShe quickly opened it and slid in. \"Now,\" she giggled, \"Isn't this better?\" \n\n\"Smooth move, ex-lax,\" I muttered. \n\n\"What?\" \n\n\"Nothing,\" I said as I got in and then pulled the cab back on the road. \n\nNeither of us said a word as we sped down the road but the scent of her perfume and the vision of what I'd seen earlier was definitely having an effect as I felt my cock hardening. \n\n\"Are you okay?\" \n\n\"Yeah, sure,\" I answered, realizing almost as soon as the words were out of my mouth how stressed they sounded. \n\n\"Ahhhh,\" she nodded. \"Then how about if I ask, are WE okay?\" \n\n\"We?\" \n\n\"Yeah, you know; you, me, are we still friends after ...?\" \n\n\"Yeah,\" I said softly, realizing she was bringing up 'the elephant' between us. \"I really need to apologize. I was getting tired and just wanted to ask if it was okay to pull over and ...\" \n\n\"And ...,\" she hesitated before continuing nonchalantly, \"you saw me playing with myself.\" \n\n\"Yeah,\" I answered, feeling my cheeks turning red again. \n\n\"It's nothing to be upset or embarrassed about. It's something I do when I'm really stressed, that's all. Usually, it's in a bedroom or someplace private but after what happened with Phillip and the way I felt so safe sitting in the back, it just kind of happened so, if anyone should be sorry it's me.\" \n\n\"Tell ya what. We'll call it even. How about that?\" \n\n\"That sounds good to me,\" she sighed, the cab once again falling silent except for the country-western music coming from the radio. \n\n\"Will it be much longer? I'm getting very tired,\" she asked after about 5 minutes, her French accent becoming more evident. \n\n\"About another half hour.\" \n\n\"Mmmmm, wake me when we get there,\" she muttered as she bundled up the jacket I'd had on the passenger's seat into a pillow and almost instantly drifted off to sleep. And so the rest of the trip went. Several times I heard her moan or whisper, 'No\", but figured it was best to just let her sleep. \n\nWe arrived at my parent's house just after midnight and as I'd expected, it was totally dark. Exiting the cab quietly, I opened the front door and turned off the alarm before returning. She looked almost angelic as she slept but it was then that I realized I'd found out what I couldn't call her but not what I could. \"I'll have to take care of that in the morning,\" I thought to myself as I carefully opened the door. \n\nAt 5-foot, 4-inches, she barely weighed enough to make me take a deep breath before gently lifting her in my arms and carrying her inside. \"Now what?\" I thought. My parent's and sister's bedrooms were upstairs while mine was a small room on the first floor, near the back of the house. It had become somewhat of a family joke because the previous owner's chauffeur had lived there. \n\n\"Up we go,\" I muttered. \n\n\"You don't have to carry me,\" she said softly. \n\nSurprised that she was awake, I almost stumbled on the first step of the stairs. \"I'm ...,\" I stuttered. \"Here I go apologizing again. I thought you were asleep and after everything you'd gone through today ... well, I just thought it was probably better not to wake you up.\" \n\n\"I was right. You are a gentleman,\" she said, as she shifted in my arms and gave me a kiss on the cheek. \n\nI lowered her to the ground and turned away so she wouldn't see how I was blushing or the lump that was forming in the front of my pants again. \"So?\" I asked as I swept my hand around the foyer. \"Pretty fancy, huh?\" \n\n\"It's very nice. Your family must be 'well off' I think is the politically correct phrase.\" \n\n\"Nah,\" I laughed. \"We're not that fancy. We just say we're rich.\" \n\n\"Oh,\" she replied not quite sure what else to say. \n\n\"We weren't always this way. My dad was an electrical engineer and my mom was a teacher's assistant. Then my dad got hurt at work. Nothing major but he ended up seeing a couple of eye specialists to get it taken care of. They asked him for some help with an idea they had. Six long years later, the machine was revealed and it's now used by almost every surgical eye center in the country.\" \n\n\"Impressive.\" \n\n\"Yeah. He just says he was lucky but now he and my mom get to live their dream. They live here during the summer, in New Mexico during the winter, and spend the rest of their time in a RV traveling across the country. But enough of that. Let me show you where you can stay.\" \n\n\"Actually, I'm kind of hungry. Do you think there might be anything here to eat?\" \n\n\"Hmmmm. I'm not sure but mom usually leaves some canned goods around in case of emergencies.\" And sure enough, when I checked the cabinets there was some tea, some canned soup, a few spices and, pushed to the back of the cabinet, some bread that was stale enough to break a tooth on. \"Not much,\" I shrugged. \n\nHer face lit up like a young girl's as she saw what was there. \"Since you've been so nice how about if I make dinner?\" \n\n\"Yeah, sure,\" I replied not really sure what she was going to make. \n\n\"Out you go then,\" she said in a jokingly, commanding voice. \"The kitchen is officially off-limits until I'm done.\" \n\n\"Okay. I'll be upstairs checking to see what my sister may have left that you can wear. It's the second door on the right when you get to the top of the stairs.\" \n\n\"Oh ... so there's someplace I can go in the middle of the stairs?\" she asked with an impish grin on her face. \n\n\"What have I gotten myself into?\" I groaned, as I turned to leave. \"Oh, before I forget. Since you don't wanna be called, you know, thaaaaat name, what should I call you?\" \n\nShe stood and silently considered her options before replying. \"Some of the people I used to work with called me Nessa but my family and friends call me Anne so I guess you should call me Anne too.\" \n\n\"Okay then,\" I said as I turned to leave. \"If you need anything just call. I won't be too far away.\" \n\n\"What? Don't trust me?\" \n\n\"Nah. Nothing like that. I'm just curious to see what miracle you're gonna pull off for dinner considering what we have here.\" \n\n\"You'll see. Now, out you go,\" she finished with a wave of her hand. \n\nTaking the not-so-subtle hint, I left the kitchen and headed for my sister's room where I began to go through her drawers looking for something that Anne could change into. Unfortunately, the only things I found were from my sister's 'ripped-fashion' era. There were rips in the knees, the upper legs, the butt and in one pair, which instantly made me wonder if she'd ever worn them around my parents, a perfectly placed rip between the legs. In the end, Ann saved me from having to make a choice. ",
        "\"The food is ready,\" she called. \n\nMy stomach growled and I realized just how hungry I was as I took the stairs two at a time as I came down. \"Mmmmm, that smells good,\" I said as I entered the kitchen. \n\n\"I hope you like it. It's not much ...\" \n\n\"Don't I know it,\" I said suddenly realizing that the comment could be taken two drastically different ways. \n\n\"But I present to you tomato-basil soup with home-made croutons, a finely grated cheese, and some wine to top it off,\" she finished, obviously ignoring my mistake. \n\n\"Wow! How did you do this?\" \n\nHer face lit-up as she smiled. \"Just a little bit of this and a little bit of that,\" she answered, her French accent somehow adding to the allure of the meal. \n\n\"I'll take 'a little bit of this' anytime,\" I said as I pulled her chair out and held it as she sat before taking a seat across from her. \"This smells fantastic.\" \n\n\"Actually, it's some of the canned soup you found along with some basil that your mom must grow, some cheese, and before you ask ... don't. It was stuffed in the back of the pantry and I think we can use the rest of it as a hammer if we need one. The croutons are from the stale bread with some seasonings I found and I raided your parent's wine cellar for the bottle.\" \n\n\"Wine cellar? Shows how much I know about this place. I never even knew they had one,\" I said as I took my first spoonful of the soup. The flavor and aroma could have rivaled any of the best restaurants in downtown Chi. \"This is unbelievable!\" \n\n\"I'm glad you like it. My mother taught me how to make it, though the ingredients she used were a little less aged,\" she chuckled. \"Anyway, where did you disappear to?\" \n\n\"I was looking for something comfortable for you to wear. \"Unfortunately,\" I sighed, \"my sister's tastes in clothes aren't exactly the greatest BUT ...\" I stressed the word. \"I have an idea.\" \n\n\"Ohhh?\" \n\n\"Just wait and see.\" \n\nThe rest of the meal was spent talking about ourselves, our lives, our dreams for the future, and, at one point, what we thought Phillip was doing at that moment. And as each moment passed, I felt myself growing more attracted to this woman, not the porn star, but the woman that few get to know. \n\n\"That was great,\" I sighed as I pushed away from the table and collected the empty bowls and wine glasses from the table. \"Let me take those. We have kind of a custom around here that whoever cooks gets to relax afterwards and the other person or persons have to clean up,\" I said as I headed for the sink and started to fill it with hot water. \n\n\"Good,\" she sighed. \"Because I'm too tired to do anything right now.\" \n\n\"Then let's get you settled in my sister's room. I can come back to take care of this.\" \n\n\"Thank you,\" she murmured. \"I was wondering though, where's your room? In case I need anything.\" \n\n\"It's on the way. I'll show you. We need to stop and get some stuff anyway.\" \n\nAnd so I led her to my room where I grabbed a large T-shirt, and a pair of slightly small sweat pants. \"This is the best I can do for the night to sleep in. If we stay longer,\" I hesitated before continuing, \"we can take a trip into town to get you some things.\" \n\n\"This will be fine,\" she replied as she did something strange and put the clothes up to her nose and took a deep breath. When she saw the questioning look on her face she grinned impishly and said, \"I like the way you smell.\" \n\n\"Okay?\" \n\n\"Haven't you noticed that everyone has their own smell? Some people cover it with perfume or it gets overshadowed by the odors from the work they do or stuff like smoking but you ... well, you smell good. A touch of the outdoors, a bit of the city, and a whole lot of 'man',\" she whispered the last part as she slid by me lightly brushing her body against mine for the second time since we'd met. \"So where to now?\" \n\nI quickly led her up the stairs to my sister's room and said good night before turning to head back to the kitchen to do the dishes. \n\n\"T?\" \n\n\"Yeah?\" I said as I turned back and almost stumbled over her because she was standing so close. \n\n\"Thank you, again,\" she whispered but this time there was something more to her words as she slid her arms around my neck and pulled me gently down towards her. \n\nOur lips touched with the lightness of a feather but to me it felt like a lightning bolt had hit. I pulled away quickly, turning to hide the growing tent on the front of my pants. I said, \"You're welcome,\" and almost ran down the stairs to the kitchen. It only took a few minutes to do the dishes and, surprisingly, I fell asleep almost the moment my head touched the pillow. \n\nHow long I slept I'm not sure but when I woke up it was still dark outside. Rolling on my side I reached for the bedside light only to stop when I heard her. \n\n\"Don't.\" \n\n\"Huh?\" \n\n\"Please don't turn on the light.\" \n\n\"Why? Is something wrong? Are you okay?\" I asked uncertain why she was standing in the doorway to my room. \n\n\"Everything is fine but ... well ... I have a problem and I'm hoping you can help me with it.\" \n\n\"Yeah? What's the problem?\" \n\n\"After what happened tonight with Phillip, well ... I can't seem to fall asleep. I was wondering if it would be okay if I slept next to you?\" \n\n\"I guess so,\" sounding almost reluctant yet inside my mind was going into overload. \"What the fuck am I doing? I just told one of the most beautiful women I've ever met she could sleep next to me. What if I get a hard-on? What happens then?\" \n\nI never got a chance to answer myself before I felt her slide into the bed next to me. The warmth of her body and the exotic smell of her perfume instantly caused my cock to twitch and harden. Without saying a word, I rolled over so my back was against hers. \n\n\"Don't,\" she whispered. \"I want to feel you against me. I ... I want to feel your arms around me. I know it sounds crazy since we just met a few hours ago but I feel safe with you and to be honest that's something I haven't felt in a long time.\" \n\n\"Well, if we're gonna be honest I need to remind you that I'm only human, and a man to top it off, so feeling you here has started to give me a hard-on.\" \n\n\"Really?\" she replied, with a soft giggle. \n\n\"Yeah? So what's so funny about that?\" \n\n\"Nothing. I'm just glad to see I have that effect on you. You've been such a gentleman I began to wonder if maybe you were ... you know ... gay.\" \n\n\"Nope. Not gay and only a gentleman because that's the way I was raised.\" \n\n\"Well then, roll back over. I want to feel you arms wrapped around me.\" \n\nI rolled over realizing what else she was about to feel. \n\n\"Mmmmmm, is that your cock pressing against me or did you stuff a banana in your shorts?\" she giggled, paraphrasing an old movie line. \n\n\"Ha, ha. You know damn well what it is.\" \n\n\"Yes, I do,\" she murmured as she wiggled back against me. \"A nice big one.\" \n\n\"Give me a break. I've seen you performing with those guys in the vids and they're a lot bigger than me.\" \n\nSuddenly serious, she whispered. \"Actually most of that is due to the camera angle and the fact that most of the women in the industry are only about 5-foot, 2-inches at the most. Because we're so small it makes them look so big.\" Then, without waiting for a reply she slid her hand between us and wrapped it around the bulge in my shorts. \"Definitely bigger than most.\" \n\nMy cock jerked in her hand and for a moment I thought I was going to cum right then and there but somehow I was able to hold back. \n\n\"You know I could take care of that if you wanted,\" she purred. \n\nThe conflict in my mind hit an all time high as I thought about what she'd just offered. But when I heard myself answer I had no idea where it had come from. \"I don't think so. Nothing against you. In fact, under other circumstances I think I'd jump at the chance but for now, I'll pass.\" \n\n\"I knew it. A true gentleman,\" she sighed as she removed her hand and cuddled against me. \n\nI never have figured out why but her comment was almost like bucket of ice water being poured on me and my cock quickly softened. \n\n\"Uhhhhhh, too bad. I was thinking of someplace to put that to keep it warm.\" \n\n\"You're such a tease.\" \n\n\"It's only teasing if you don't mean it,\" she replied as she rolled over so she was facing me. \"The truth is that, since becoming a porn star I spend so much time having sex with men on the movie set that I haven't slept with anyone, except Phillip, like this in years. In the beginning, he was caring and romantic, and we made love a lot but after he got hooked on coke it just didn't work anymore. That and his constant demands for me to work more is what caused me to break up with him. But being here like this, with you, makes me feel almost normal. Does that sound crazy?\" \n\n\"Not crazy at all. Just normal like you said,\" I replied, as I slid my arm under her head. \n\nThe room went silent as she snuggled even closer before whispering into my ear, \"Can I ask you another question?\" \n\n\"Shoot.\" \n\n\"If I was any other woman would you be like this? I mean, if I was a different woman or your girlfriend what would we be doing right now?\" \n\n\"Hmmmm. Tough question. I guess it would depend on what you wanted to do. You see, my dad taught me a long time ago that in bed, men fall into one of two categories; the fuckers and the lovers. A fucker is a guy who is only interested in what he wants and pleasing himself no matter what the woman may want. A lover, on the other hand, is a man who realizes that by doing what the woman wants, when she wants it, makes it all the more special to her and will bring a lot more pleasure to both of them.\"  \n\n\"Your father is a smart man,\" she murmured as I felt her relaxing in my arms. A few, short moments later I heard her breathing change as she slipped off to sleep. \n\nI never even felt myself fall asleep. One second I was awake marveling at the feel of her body pressed against mine and the next the sun was streaming in through the window. Yawning, I stretched only to realize that she wasn't in bed next to me. Quickly, I slid from the bed and was just putting on my pants when the aroma of fresh-brewed tea tickled my nostrils and drew me into the kitchen. \n\n\"Morning,\" I said, softly, so as to not startle her. \n\n\"Morning, yourself,\" she replied over her shoulder as she continued working on something on the stove. \"I hope you're hungry.\" \n\n\"Famished, but I didn't think there was anything left after dinner last night.\" \n\n\"There wasn't ... at least not in the beginning. I got up, hmmm, about an hour and a half ago,\" she said as she glanced up at the clock on the wall, \"and went to look for something to wear. I found this flannel shirt in your drawer and these jeans in your sister's room and, by the way, did you know what a 'naughty' girl your sister is?\" \n\n\"Not until last night when I saw those jeans,\" I replied. \n\nShe blushed as she looked over her shoulder. \"So you know about the 'special rip' that she put in them?\" \n\n\"Yeah,\" I replied, though now it was me who was blushing. \n\n\"Anyway, after that I went looking for a pair of shoes. Yours are definitely too big and I couldn't find anything but tennis shoes and high-heels in your sister's room so I checked your parent's room. When I didn't find anything there I went downstairs to the basement and sure enough these hiking boots were up on one of the shelves. That was when I noticed the other stuff there. Tents, sleeping bags, and, low-and-behold, MRE's.\" \n\n\"You gotta be kidding,\" I groaned. \"Those things are probably a hundred years old.\" \n\nShe laughed. \"Actually, they're still good for another 5 years. So, would you prefer Eggs scramble or blueberry pancakes made with powdered milk and rehydrated maple syrup?\" \n\n\"Ladies choice.\" \n\nShe looked back down at the stove before replying, \"I think I'm in the mood for the eggs. It's not often I get to eat anything like this ... you know a woman has to watch her figure if she's going to be on camera.\" \n\nI decided that the best way to respond to her comment was not to reply at all so I sat there watching as she finished up the last steps of our breakfast. It was then that the image of her standing at the stove in one of her vids slid into my mind. Her hair hanging down her back, a powder-blue apron wrapped around her and nothing more than a thong underneath as the actor stepped up behind her. The images of what happened between them afterwards instantly made my cock harden and I began to fidget in my seat trying to keep her from noticing. \n\nFortunately, she didn't or at least she didn't say anything if she did. Instead, she put the plate filled with pancakes in front of me and sat across from me just as she had the night before. \n\n\"Mmmm, not bad,\" I said after taking the first mouthful. \n\n\"I told you, flattery will get you everywhere,\" she said as she stared into my eyes. \n\n\"There you go teasing again,\" I said as I ate more of the pancakes. \n\n\"And I told you it's only teasing if you don't plan on following through with it,\" she replied as she ran the tip of her tongue across her lips. \n\n\"Arrrggghhhh,\" I groaned. \n\nAll too soon, breakfast was done and I grabbed the dishes, placing them in the sink to wash. \n\n\"Mind if I help?\" she asked as she stepped up next to me. \n\n\"Not at a...,\" I began to say only to stop when I noticed that she'd undone the upper three buttons of the shirt she was wearing, revealing the upper portion of her breasts. \n\n\"Something wrong?\" she asked, an impish gleam in her eyes. \n\n\"Ahhhhh, no. Just ... ummmm ... enjoying the view.\" \n\n\"What? These?\" she quipped as she placed a hand under each breast and lifted them as if offering them to me. \n\n\"Yeah, those,\" I snarled, jokingly. \n\nShe stuck out her lower lip in a little girl pout as she released her tits to settle back into place. \n\nWhat amazed me was that they seemed to bounce and jiggle a little bit before settling into place. \n\n\"All natural,\" she whispered, before picking up the dish cloth and beginning to wash the dishes while I dried them and put them away. \n\n\"Okay, so now what?\" she asked as soon as we were done. \n\n\"I guess we should probably take a trip into town. We've pretty much used up all the food that was left.\" \n\n\"And I could probably use some other clothes,\" she hesitated. \"Unless, of course, you like me in these.\" \n\n\"Let's put it this way. If you keep walking around dressed in those and making the comments you have been I can't guarantee I'll be a gentleman much longer.\" \n\n\"Promise?\" she whispered, as she stood on her tip-toes and gently kissed my cheek. \n\n\"Come on. We gotta get going,\" I said as the only way I had left to keep from grabbing her and pulling her into one of the bedrooms. \n\nWe spent the rest of the morning and half the afternoon going into various stores to get the stuff we wanted and, when we were done, it looked like we were planning on staying for months rather than a few days. \"Phew, I guess we went a little bit overboard.\" \n\n\"I don't know. It looks like just enough for what I'm hoping.\" \n\nI raised an eyebrow, questioning but didn't say a word as we headed back to my parent's house. Once there we quickly unloaded and put the food away. But when it was time to unload the clothes she'd bought she dismissed me with a \"Shoo\" and a gentle push, after which she took the clothes into the house by herself. \n\nThe evening quickly slipped by as we made dinner and then sat in the living room and watched some TV just like any other couple. It wasn't until it was time for bed that I got the newest of a series of surprises that awaited me. \n\n\"I'm heading for bed. I'm beat,\" I said as I stood and yawned. \n\nShe looked at me for a moment as if debating something in her own mind before replying. \"T, do you think your parents would be upset if we slept in their bedroom? I really want to feel you next to me again tonight.\" \n\n\"Nah. I don't think my parents would mind. They've always been kinda open-minded.\" \n\nThe smile on her face was all the response I needed. We made a quick stop in my bedroom to grab the gym shorts I slept in and then to my sister's room so she could grab one of the bags full of items she'd bought that day before we headed to my parent's room. \n\nThe room, actually a suite, was like most bedrooms. Dressers, night tables, a couple of lamps, a TV, a radio, and, of course, a bed. In this case, a queen-size, four-poster bed that my mother had insisted on. There was also an attached bathroom with a shower, separate Jacuzzi-tub, and the usual toilet and set of sinks. \n\n\"After you,\" I said as I indicated the attached bathroom. \n\n\"I think I'll wait. It's going to take some time with this,\" she replied as she lifted the bag in her hand. \n\n\"Whatever you say, ma'am,\" I said as I bowed, once again playing the Southern Gentleman. \n\n\"Whatever I say?\" she whispered, seductively. \"That could be a lot of fun.\" \n\n\"Oh god,\" I groaned as I realized that I'd left myself wide open for one of her comments again. Entering the bathroom, I quickly changed into my shorts. When I exited, I found her standing next to the bed changing into a knee-length, sapphire-blue, button-up night shirt. \n\n\"I hope you're not that fast when it comes to other things,\" she teased as she glanced over her shoulder. \n\n\"I don't know how much more of this I can take.\" \n\n\"Promises, promises,\" she snickered as she hopped up on the bed and slid under the blankets. \n\nFiguring that any response I'd give would only lead to another comment I shook my head and slid in beside her. I felt her roll on her side and knew what was coming, and to this day I can't tell you why, but I turned my head and instead of getting a kiss on the cheek our lips met. At first, it was soft and almost hesitant, but the kiss soon became more passionate as our tongues began to probe and tease each other. \n\n\"Wow!\" I exclaimed when we finally broke away from each other, gasping for air. \n\n\"About time ... but it was worth the wait,\" she purred as she settled her head on my shoulder. \n\nMy mind and body instantly began to go over what to do next. Unfortunately, my body won. The long drive here after a day of work, only 4 hours of sleep after we'd arrived and settled in, and then a full day of walking around in town had left me drained. \"I'm exhausted,\" I said as a way to let her know I wasn't up to anything more at the moment. \n\n\"Age will do that,\" she giggled. \n\n\"I'm not THAT old,\" I retorted. \"I'm just not used to this.\" \n\n\"You just don't like me,\" she pouted, pretending to be upset. \n\n\"Oh, I like you ... A LOT. And I have full intention of proving it.\" \n\n\"Promise?\" \n\n\"I promise,\" I replied in a softer, more caring voice. \n\n\"Mmmmm, I'm glad,\" she whispered as she snuggled her body next to mine and slowly drifted off to sleep. \n\nUnlike the previous night, I just couldn't fall asleep. Instead, I lay there feeling every inch of her warm body pressed against mine. Her hair was soft and rich with an exotic fragrance. I could barely tell she was breathing except for the way it flowed across the few hairs I have on my chest. Her breasts were full and I could feel her nipples pressed against my side. Her stomach was flat so it fit against my hip as if it had been molded for just that purpose and her long, toned leg rested on my thigh. And when I moved just a little bit I could also feel the hair on her pussy brush against the side of my leg which was soon coated with a thin layer of her juices as it leaked from her slit. Wild fantasies and dreams filled my mind when I finally nodded off leaving little doubt as to why I woke up with a massive hard-on. \n\n\"Mmmmm, it looks like you DO like me,\" she whispered in my ear as her soft, warm hand wrapped around my cock. \n\n\"I told you I did,\" I mumbled as I opened my eyes. \n\n\"Care to prove it?\" she asked all hint of teasing now gone. \n\n\"I'd have to be dead not to.\" ",
        "\"Well, you don't look dead to me,\" she purred as she stroked my distended member. \n\n\"I guess you're right,\" I replied as I lifted the cover to watch her hand slide up and down. I knew what I wanted to do to her and what I hoped she wanted but I also knew that if I rushed into it I'd be no better than some of the men she'd worked with in the past. So, instead, I rolled on my side so I was facing her and gently began to run my fingers across her hairline and forehead. \n\n\"That feels good,\" she sighed. \"But I bet I know what you want.\" \n\n\"You're probably right,\" I replied as I felt my cock jerk in her hand. \"But, like I told you, what's more important is what do you want?\" I felt her hand falter and hesitate. \n\n\"So you meant what you said last night?\" \n\n\"Yep. Why?\" \n\n\"I've never had anyone ask me what I wanted before. Most of the times I've been with a man it has been scripted on the camera or with one who was ...\" \n\n\"A fucker. Slam-Bam-Thank you ma'am,\" I interrupted, finishing what I thought she was going to say. \"So maybe it's time for that to change.\" \n\nThe quizzical look on her face left little doubt that she had no idea what I meant. \n\n\"Roll over on your back,\" I whispered as I gently pushed her shoulder. \"Now, close your eyes and try to relax. Think of one of your favorite places. If you can't, then just make one up and pretend you're there.\" \n\nI gave her a few moments to think of a place. \"Are you there?\" \n\n\"Yes,\" she replied hesitantly, still not sure of what I planned to do. \n\n\"You said you trust me, right?\" \n\n\"Yes.\" \n\n\"Then trust me now,\" I whispered as I tenderly I ran my fingertips across the crown of her forehead, just barely touching her hair, almost like a soft breeze. \n\n\"Mmmmmm,\" she sighed. \n\nGently, I ran my fingertips from one side of her forehead to the other. As I felt her relax, my fingertips moved further and further across her face. I stroked the outside of her ears before slipping inside to tease along the inner curves. Then I moved down to the sensitive area beneath the ears letting my fingertips flutter across it like a butterfly. \n\n\"Ohhhh, so good,\" she sighed. \"So gentle, so relaxing ... yet so exciting. I can feel goose bumps popping up.\" \n\nAnd they were. Every inch of her body that I could see was covered with the small pimple-like spots. My fingertips continued their exploring as they moved down her beautifully contoured neck. I noticed how her breathing changed from the slow, deep breaths of relaxation to a sudden intake of air when I hit a more sensitive area. \n\nI returned to her face and traced patterns across her cheeks and her upper lip. Instinctively, her tongue appeared and ran across the lush, fullness of them, leaving a layer of moisture that shimmered in the morning light. Unable to hold back. I leaned forward and our lips met. \n\nHer arms wrapped around my neck and she pressed her lips against mine. \n\nIt took every ounce of willpower to pull away. \"Ah, ah, ah ... not yet,\" I whispered, my breath floating across her lips. \n\nHer body shivered as I pulled away. \n\n\"Not fair,\" she sighed as her eyes began to open. \n\n\"Not yet,\" I said again as my fingertips caressed her chin and the area of her neck just underneath. \n\n\"I've never felt like this,\" she moaned. \"Every inch of me is ...\" She faltered as she looked for a way to say what she was feeling. \"It's like I'm completely relaxed but every nerve is on fire.\" \n\nIf she'd opened her eyes at that moment she'd have seen me smiling from ear to ear. \"Good,\" was all I said, allowing my fingertips to continue their travels. The exposed area of her upper chest was next. The tips of my fingers gently slid down across the sensitive flesh only to be replaced by the slightly-rough, cracked edges of my fingernails as they moved back up to her neckline. I covered every inch of the exposed skin, watching as the goose bumps seemed to get larger and larger the closer I got to her breasts. When there was nowhere else to explore, my fingers moved down to the top button of her sleep shirt. \"May I?\" I asked as my index finger moved in a little circle around and around the button. \n\n\"Mmm, hmmm,\" she sighed. \n\nMy fingers quickly had the button opened revealing more of her tawny colored flesh. Again my fingertips did their magic and I was only a little surprised when I noticed the material covering her nipples begin to rise. One by one I opened the buttons revealing more of her skin but, unlike others, I folded the sleep shirt back across her breasts keeping them hidden instead, paying attention to what I could see. \n\n\"You are such a tease,\" she moaned as she grabbed my hand and pressed it against the exposed skin of her stomach. \n\nI replied using her own words. \"It's only teasing if you don't mean it.\" Her giggle was cut short when I slid my hand across her stomach gently massaging and pressing against it. \n\n\"Oh god, that feels good.\" \n\n\"I'm glad you like it,\" I replied as I moved my hand a bit lower. I knew that now was the moment I had to make a decision, a decision that would probably effect whatever the future might hold. So, taking a chance, I left the bottom button closed and skipped over the area between her legs. Then, after sliding lower in the bed, I began to caress and explore her legs. \n\n\"Shhhhhhhh,\" she hissed as she lifted her head and looked down at me. \"That's not fair! You get me all worked up and then ...\" \n\n\"Just relax,\" I said in a more commanding tone. \"Learn to enjoy what life has to offer instead of relying on what's happened in the past.\" \n\nHer head dropped back down on the pillow and I watched as her hands crossed over her chest and slid under her night shirt. I could tell she was squeezing her breasts and playing with her nipples but decided to continue with what I was doing. \n\nInch by inch, I moved down her thighs, calves and finally to her feet. Now, many people think there's nothing sensual about feet but the truth is that there are nerves that run to the feet that can effect almost every part of the body if massaged right. \n\nI quickly found what I was looking for on the bottom of her foot and began to massage the area at the center, just in front of the ball. Her body relaxed even more and I soon heard her begin to purr almost like a kitten. After a few moments, I moved slowly while paying attention to each of her toes, especially the tips. Within minutes, her body began to grind against the mattress as her sexual drive was heightened. \n\n\"Ohmigod!! I've never been this turned on in my life,\" she gasped from between clenched teeth. \"You better not be teasing me with this or I swear to god I'm going to rip your cock off and use it to fuck myself!\" \n\n\"I promised I wasn't teasing,\" I murmured as I moved to the center of her big toe, gently pressing and massaging the nerves. \n\n\"Ohhhhhhh,\" she moaned while sliding one of her hands from her breast to the junction between her legs. \n\nInstantly, I could smell the heady aroma of her arousal. I moved my finger just slightly and found the spot on the outside of the toe that supposedly stimulates a person's desires. When nothing happened, I pressed and massaged a bit harder. I could tell from the look on her face that she was trying to fight the sensations but a thin sheen of sweat soon appeared above her lips letting me know that everything was going just as I'd hoped. \n\nIt was then that I moved once more, to the final destination of my massage and began to caress the area just below the inside of her ankle. Within seconds, her body began to bounce up and down on the bed. \n\n\"Ohmigod, ohmigod, ohmigod,\" she chanted. \"I'm going to cum. I've never ... owwwwwwwww,\" she slurred as her body shook and trembled while her orgasm overtook her. \n\nTime seemed to stand still for the two of us. Her body tensed and relaxed, tensed and relaxed, over and over as I continued to rub the area that supposedly increases the strength of a person's orgasm. Then, with one final shudder, she collapsed onto the bed. She was breathing so hard and fast that she reminded me of a marathon runner just after finishing a race. \n\n\"What did you do to me?\" she sighed after regaining some control. \"I've never cum from someone just giving me a massage.\" \n\n\"Is that what I did?\" I asked innocently though, in truth, I'd known what I was doing all along. \n\n\"YES, you did and don't give me any of that. You told me it was going to be different and WOW was it ever.\" \n\n\"My pleasure,\" I replied no longer trying to deny what I'd done. \n\n\"So what's next?\" she asked, her voice low and seductive. \n\n\"That's up to you,\" I replied. \"We can stop,\" which I hoped she didn't want to since my cock felt like a piece of hardened steel trapped in my shorts. \"We can take a break or ...\" I left the rest unsaid. \n\n\"Come up here,\" she murmured as she spread her legs and stretched her arms toward me. \n\nUnfortunately for me, the front tails of her shirt dropped between her legs hiding her womanly treasure from my view as I slid up into her embrace. \n\n\"Now, isn't this better?\" she asked as I settled above her. \n\n\"Definitely,\" I responded as she wrapped her legs around my hips and her arms around my neck. I could feel her breasts pressing against me chest while the heat coming from her womanly core acted as a trigger causing my cock to harden until I thought it was going to rip through the front of my shorts. \n\n\"My turn,\" she whispered as she lifted her head and kissed my lips very, very softly. Her kiss was both tender and passionate. \n\nI pressed back against her lips, amazed at how tender yet firm they were. Neither of us seemed in a hurry to break our kiss as it became more passionate; her tongue slipping from between her lips enticing mine to join hers. We were soon battling and lashing at each other as our tongues probed and explored each other's mouth. \n\n\"I have something for you,\" she wheezed when we finally broke from each other. \n\n\"What?\" \n\nHer answer was to reach between us and pull aside the last remnants of her night shirt exposing her tits to me. Then before I could say a word, she took my hand in hers and pressed it against one wondrous globe. \"It's all yours.\" \n\nI stroked her breast, feeling her nipple harden in the palm of my hand. \"I don't believe this. So fucking good. So soft, so big,\" I thought to myself as I cupped and squeezed the mound of flesh. \n\n\"Mmmmmm, I like that,\" she sighed, \"but ...\" she finished as she rolled me on my back and moved to my chest. \n\nHer kisses were unlike anything I'd ever felt before. First, she'd kiss an area and then quickly follow with her tongue flicking across the skin. Once the skin was excited by her touch, she'd suck it into her mouth before gently biting down on it. I'd never imagined kisses could feel like this and for the first time in my life a woman sucked on my nipples. The surge of excitement that ran through me almost made me cum in my shorts. \n\nAs she was kissing me, I stroked her hair and cheek before reaching down and slipping my hand under her shirt. I ran my fingers down through the wet hair of her pussy until I reached the junction between her legs. Then I stroked her pussy, playing my fingers up and down over the slit. \n\n\"Owwwwww, yessssss,\" she murmured as she slipped from me reach, \"But there are other things I want to do to you first.\" \n\nHer hand caressed my body, moving lower and when she got to my stomach she traced 'figure 8's' across the muscles until they began to twitch and dance to her touch. She gently probed my navel before leaning over, kissing it and slipping her tongue into it. \n\n\"Shhhhhhhh,\" I hissed, as I shivered in delight. \n\nShe moved lower and tugged on my shorts. Instinctively, I raised my hips so she could slip them off. Her fingertips felt as if they were charged with electricity as they slid through my pubic hair and when she lowered her head, I thought I was going to get the best blowjob in the world. But as the saying goes 'payback is a bitch' so instead of taking my cock in her mouth she kissed along my inner thighs. Her lips were light and soft against my flesh. Without even thinking about what I was doing, I reached down and began to stroke my cock only to have her push my hand away. \n\n\"Uh, uh, none of that,\" she said before pulling away and looking up at me. \"T, can I ask you a very personal question?\" \n\n\"What the fuck? We're almost to the point of making love and she wants to ask me a question?\" I thought to myself but my voice said, \"Sure.\" \n\n\"Is my pussy hair bristly? You know, I what I mean. Is it rough to the touch?\" \n\n\"I never thought about it,\" I replied honestly. \"Your body is so beautiful and you're so sexy it didn't even dawn on me.\" \n\nShe grinned up at me impishly as her hand gently wrapped around my cock and slowly began to slide up and down. \"I was just wondering. You see, I ... ummmm ... I used to keep my pussy shaved,\" she continued as she leaned forward and ran her tongue across the underside of my cock as if she was licking an ice cream cone. \"But I stopped when I decided I wanted to get out of 'the biz'. Now ... I'm not so sure that was a good idea,\" she continued, her eyes ablaze with passion. \n\nWhen I didn't say anything she leaned forward again and took just the very tip of my cock in her mouth before gently biting on it. \n\n\"Careful,\" I grunted. \"You do that again and I'm ...,\" I faltered as I realized that what she'd done had surprised me, in fact scared me, but it had also been a huge turn on and my cock felt harder than it had ever felt before. \n\n\"What? This?\" she asked, now taking the part of the innocent, as she leaned over and bit the tip again. \n\n\"Yeah, that.\" \n\n\"Then I'll make you a deal,\" she said as she sat up. \n\n\"What's that,\" I almost growled in frustration. \n\n\"I won't bite you again, unless you want me to,\" she snickered, \"If you'll help me get rid of the hair? You know, shave myself.\" \n\n\"Is that what you want?\" \n\n\"Yeah. There's something about feeling a man's pubic hair brushing against me when we ...\" she didn't finish but I knew what she meant. \n\n\"Okay,\" I replied, \"If that's what you want but we're gonna have to use my razor. I don't remember you getting one and I highly doubt my dad would be pleased if he found out we used his for that. \n\n\"Actually, I got something else when we were shopping,\" she said as she jumped off the bed and ran to my sister's room to get whatever she was after. When she returned she had a small scissors in one hand, a can of something else in the other, and couple of towels draped over her arm. After tossing the supplies she brought on the bed, she unbuttoned the last button of her sleep shirt, letting it fall to the floor, before climbing on the bed and spreading her legs. \n\nFor the first time, I got to see just how absolutely beautiful she was up close and personal. Her hair was so black it shimmered and seemed to have a blueish-hue to it as it reflected the morning light. Her eyes were officially listed as hazel on the various sites where I'd watched her vids but now they seemed to have flecks of silver that twinkled when she looked down at me. Her skin was the color of a fine caramel and was flawless from head-to-toe. Her lips were full and glistened, whether from lip gloss or the fact that she kept running the tip of her tongue across them I wasn't sure. Her breasts were perfectly shaped teardrops with just the slightest hint of womanly sag which made them all the more appealing. Her nipples and areola were darker and were changing right before my eyes as her nipples began to swell and small goose bumps began to pop-up to surround the areola. Her stomach was flat and toned and, as crazy as it might seem to some, she wasn't wearing a belly-ring like many women in the adult industry seem to do which added to her natural beauty. Her hips flared to give her the hour glass figure that is so appealing before gliding down a set of long, subtle legs. At the junction of her legs, sat her womanly treasure. The outer lips were swelling and growing darker the longer I stared at them while her inner lips began to poke out from between her outer lips. A single drop of her womanly fluids hung from the bottom of her lips before gliding down and into the crack of her ass. And surrounding it all was a pelt of delicate, jet-black hair. \n\n\"Like what you see?\" she whispered. \n\n\"Umm,\" I stuttered, suddenly brought back to the reality of the moment. \"Yeah ... hell, yeah.\" \n\nShe threw her head back and laughed as my face turned a beet-red. \"Are you sure you've ever been with a woman before?\" she taunted. \n\n\"YES ... it's just that ... that,\" I hesitated again. \"I've never been with a woman like you before.\" \n\nI could tell she didn't understand what I was saying as her face suddenly darkened. \"You mean a porn star? A whore?\" she growled. \n\n\"NO!! I mean a women who's so damn beautiful!!\" \n\n\"So you think I'm beautiful?\" \n\n\"What man wouldn't?\" I asked, instantly realizing I was on ground 'where angels feared to tread' as the saying goes. \n\n\"You know,\" she said, now looking at me seriously, \"what I did for a living. What I HAD to do for a living but you probably don't know why.\" And so for the next ten minutes she talked about her childhood, the things she'd gone through, and the fact that, like many young girls, she'd felt like an ugly duckling until she began to mature. But by then the damage had been done. A beautiful face and body did little to overcome the feeling of still being an ugly duckling inside. \"So, I ended up in 'the industry'. I think I might have told you this but in the beginning everything was really exciting but after awhile I realized that without some kind of feelings or emotions, I was nothing more than a living, breathing piece of meat for many of the actors I worked with. That's when I decided to quit.\" \n\nAs she finished, I noticed a single tear running down her cheek which she quickly brushed away. \"Well, I think you're the most beautiful woman I've ever met,\" I said, quietly. \n\n\"Good. Maybe that's why I feel the way I do and the reason I trust you,\" she finished as she held out the scissors towards me. \n\n\"Wha ...?! Me?! I've never ...\" I stuttered, completely surprised by what she was asking. \n\n\"There's no time like the present,\" she replied, giving me little choice but to take the scissors from her hand. \n\nFor the next 20 minutes, I carefully trimmed the hair surrounding her treasure. \n\n\"You can do more than one or two hairs at a time,\" she giggled, as she gently stroked the back of my hand or ran her fingers through my hair. \n\nWhen I was finally done, I sat back on my knees and stared at my handiwork. The fine pelt of fur was now replaced by a coat of stubble. \n\n\"Now for the fun part,\" she said as she handed me the can she's brought with her. \n\n\"What's this?\" I asked naively. \n\n\"It's a special cream, kind of like shaving cream but the cream dissolves the hair below the skin line and even when it grows back it isn't as prickly as it is if I'd shaved.\" \n\n\"Ahhhhh,\" I answered, not sure what else to say without making myself look even more clueless. \n\n\"Just take the cream and spread it all over my pussy. Make sure you don't miss any spots and then we need to set a timer so we know when to clean it off.\" \n\nI quickly spread the cream across her pussy and knelt back again. \n\nThe look of disappointment told me I'd done something wrong. \"You missed here,\" she said as she pulled back the outer lip on her right side and ran her cream-covered finger between her inner and outer lip, \"and here,\" she continued as she did the same thing to her left side, \"and here,\" she finished as she captured her hooded clit between her index finger and middle finger rubbing up and down across it causing a low, guttural moan to escape from between her pursed lips. \n\nI watched in amazement as she slowly toyed and played with herself until she pulled her hand away leaving a white, frothy mass of cream between her legs. ",
        "\"Now for the fun part I told you about,\" she murmured as, with the grace and speed of a cat, she pounced on me pushing me back on the bed. \n\nI was surprised when I looked down to see my cock standing straight up like a flag pole, only to watch it disappear. \"Arrrgggghhhhh,\" I groaned, as I felt my shaft enter the warm, moist cavern of her mouth in one, continuous, motion. I'd had a few blow jobs in the past but nothing to compare with what I was getting now. Her mouth moved up and down the shaft, her hand gliding up and down in the same fluid motion while her tongue rubbed against the nerves under the head and occasionally probed into the slit on top. More than once I felt as if I was about to cum only to have her change the pace or drag her teeth across the sensitive tissue, to stop me. And more than once I found my fingers wrapped in her hair as I began to pump my cock in and out of her mouth only to have her push away. The phrase, 'glorious agony' popped into my head. \n\nTime stopped, or so I thought, until I heard the alarm we'd set ringing. I'd, honestly, never known that 15 minutes could feel like such a long time and yet such a short time. \n\nShe rolled onto her back once more and I carefully wiped the cream off her with one of the towels she'd brought in, after which, I applied lotion to the silky-smooth flesh. \n\nThe outer lips were now completely swollen and red. \"Reminds me of someone's cheek after a bar fight,\" I thought unable to think of anything else to compare them to. Her inner lips were also swollen though not nearly as much and were drenched with the womanly fluids that seemed to run from them like a small stream. For a moment, I laid there memorizing every line and fold. \n\n\"You're embarrassing me,\" she whispered. \n\nBut when I looked up from between her legs and through the valley between her breasts, what I saw was anything but a look of embarrassment. \"Why?\" \n\n\"The skin down there is so much more sensitive after the hair is gone. I can feel everything. I can feel the air flowing across it. I can feel your breath ticking the lips and my clit when you breathe. I can even feel the heat coming from your breath and your skin when you get close. It just gets me so turned-on. I can even feel the juices running from me and down into the crack of my ass,\" she purred. \n\n\"I don't think there's anything to be embarrassed about,\" I muttered as I leaned forward, sliding my tongue out and running it over the length of her slit, catching some of her juices along the way. \"She tastes delicious. Salty and sweet at the same time.\" \n\n\"Ohhhhhhhhhh.\" \n\n\"Guess she likes it,\" I thought. \"Of course she likes it, numb-nuts, she was a ...\" but I stopped myself before finishing the thought. \"She USED to be ... but she's not now. Now she's ...\" again I left the thought unfinished because I wasn't sure what she was at that moment other than a beautiful woman who was in bed with me. \n\n\"More,\" she sighed as her fingers entwined in my hair. \n\nI pressed my lips against her pussy and sucked gently while using the tip of my tongue to tickle the sensitive skin of her nether lips. She gasped as I pushed my tongue in between the folds of her outer and inner pussy lips. I heard the quick, deep breaths she took as I slid my tongue along the flesh. \n\n\"Where did you learn to do that?\" she croaked. \n\nI had to think about it for a second, as my tongue continued to tease her. Then it dawned on me. \"A ... ahhhh ... a woman I gave a ride to in the cab told me about it. I think she was probably drunk when she did it though.\" What I didn't tell her was that the woman was also a high-priced 'working girl' that I had a deal with to take home every Saturday after she'd visited one of her regulars. Instead, I returned to the treasure in front of me, this time sliding past her lips and into her womanly core. \n\n\"Ohhhhhhh\" she moaned as she shifted her legs and placed them over my shoulders so her heels were in my armpits, locking me in place. \n\nI slid my tongue in and out slowly before moving my hand upward and gently rubbing her clit. Her hand covered mine, pressing down on it. Her thighs spread wide. \n\n\"More, more, mo ... shhhhhhhhhh ... oh fuck that feels good. I never had a man eat my pussy so good,\" she hissed as her back arched and she forced her pussy against my mouth. \n\nI moved my hands, cupping one of her buttocks cheeks in each and held her there, licking and nibbling at her pussy like a piece of succulent fruit. \n\n\"Going to ... ohmigod ... so soon,\" she whimpered. Then the muscles of her pussy clamped around my tongue pulling it deeper as her juices flowed from her cleft and down my chin. \n\nI couldn't get enough of her. I continued to lick, suck, and tongue fuck her while I rubbed her clit with the tip of my nose. She went from one climax to another. Her hips thrust up against my mouth, while her fingers were wrapped in my hair pulling my face against her hot, juicy pussy. It seemed like she'd never stop until, after one last thrust, she relaxed into my hands and I lowered her back onto the bed. \n\nMy face was covered with her sweet pussy juice when I finally pulled away. I don't know how many times she'd cum before I rolled from between her legs and slowly moved up beside her. Tenderly, I snuggled against her and gently kissed her cheek. \n\n\"That was fantastic,\" she said in a whisper so soft I almost didn't hear it. \n\nHer skin was damp and she shivered from the sheen of sweat on her body so I slipped from the bed and went to the bathroom. There I got a towel and wet wash cloth. When I returned, I gently wiped her face before bathing her with the warm cloth. \n\nShe looked up at me and smiled weakly. \"No one's ever treated me like this.\" \n\n\"That was their mistake,\" I said softly. \n\n\"You know, a girl could really fall for a guy like you.\" \n\n\"I'm not interested in a girl,\" I replied as I pulled the covers back over the top of us before leaning over to kiss her forehead. \n\n\"But what about you?\" she murmured, as her breathing slowed. \n\n\"Yeah, what about me?\" I asked myself, only to get an answer as soon as I looked down at my dwindling cock. \"Maybe next time,\" I muttered as I stretched out behind her, wrapping my arms over her shoulder and cupping one of her breasts as we drifted off. \n\nHours or minutes later I heard her voice as I drifted up from the grayness of sleep. \n\n\"Hey handsome.\" \n\n\"Hey, beautiful.\" \n\n\"I think we forgot something earlier.\" \n\n\"Yeah, what?\" I mumbled, sleepily. \n\nHer answer was to glance down at the tent in the sheet that was hiding my hard cock. \"That thing woke me up,\" she teased. \"It worked its way between my legs and kept nudging against my pussy. Now look at what it did.\" \n\nWhen I looked between her legs I could see the coating of her juices that covered her inner thighs. \n\n\"Sorry,\" I replied, meekly. \n\n\"Don't be,\" she purred, seductively, as she pulled back the sheet and threw a leg over me, straddling my hips. My cock nestled into the furrow of her hairless pussy as she leaned over me. Her tits pressed against my chest while her nipples hardened and seemed to bore holes into me as she lowered her lips to mine once more. \n\nOne of my arms wrapped around her neck while the other wrapped around her waist before sliding lower and cupping her ass. At the same time, my cock pressed against her clit and lower belly. \n\nSlowly she broke the kiss, drawing her head back. \"I like that.\" \n\n\"What? This?\" I asked as I squeezed her ass. \"Or this?\" I questioned as I tightened the muscles of my stomach making my cock lurch against her. \n\n\"Both.\" Then after a pause she continued. \"Can I ask you a question?\" \n\n\"Another one?\" I sighed, exasperated. \n\n\"Sorry.\" \n\nFeeling like a scolded little boy I replied, \"No, go ahead and ask.\" \n\nA mischievous grin suddenly appeared on her face. \"Do you ever masturbate?\" \n\n\"Wha ...\" I muttered, stunned that she'd even ask something like that at that moment. \n\n\"You know. Do you ever play with your cock?\" \n\n\"I know what you meant. I just ...\" \n\n\"Shhhhh,\" she said as she placed a finger over my lips. \"I already know the answer. I'd have to be stupid not to. But can I tell you a secret? Well, not actually a secret since you saw what I was doing in the back of your cab but I masturbate ... a lot.\" \n\n\"Even after working ...\" \n\nShe replied as she shifted in my lap slowly rubbing my cock up and down the length of her slit. \"That made it even worse. Sometimes, after a shoot I'd be sooooo fucking horny I couldn't help myself. The actor always got to cum. They had to but the woman ... not always and when that happened ... I'd rub myself just like this,\" she purred as she slid her finger between us and began pressing against her clit. \"And then I'd do this,\" she continued as she spread her pussy lips and slid first one and then two fingers inside. \"But the whole time I'd actually be thinking about this,\" she finished as she shifted again. She paused just for the briefest of second above my cock before lowering herself, taking it into her velvety tunnel. \"Yesssssssss. So big,\" she moaned. \n\nI raised my hand and cupped her tit. Her nipples were like hard pebbles in my palm. I pushed myself up so I was as close to sitting as I could and leaned forward taking the other nipple in my mouth. \n\n\"Fuck me,\" she whispered as her body shuddered. \n\nI felt my cock slipping deeper and deeper until suddenly I felt it press against the back of her sheath. \n\n\"You feel so good inside,\" she murmured as she leaned back driving herself even harder against my groin. \n\nSitting like this, I found myself kissing the area just under her tits; licking and nipping at the sensitive skin. Then without another word she began to glide and down my shaft. The room was soon filled with the sound of the bed springs squeaking, and a wet, squishy sound that floated up from where our bodies were joined, while the heady aroma of her excitement filled my nostrils. \n\nMy heart was pounding so hard I thought it was going to pop out of my chest so I focused on her tit as it bounced up and down in front of me. Grasping it, I brought it back to my mouth latching onto it like a suckling child and was rewarded by a groan of pleasure that seemed to come from her very core. \n\nI was more excited than I'd ever been and, all too soon, I felt the tight feeling in my stomach that told me that my orgasm wasn't too far away. \"Anne? I'm getting close. Gonna cum soon.\" \n\n\"I ... know ... I ... can ... feel ... it ... stretching ... me ... and ... getting ... me ... wetter ...\" she grunted in tempo with her thrusts. \n\n\"Should I pull out?\" \n\nShe didn't falter for a second as she sighed, \"Let's ... leave ... that ... marvelous ... cock ... of ... yours ... in ... me. Fill ... me ... with ... your ... cum ... and ... we'll ... see ... what ... happens,\" she grunted as she increased her pace. \n\n\"What if you get pregnant?\" I asked, suddenly realizing I had no idea if she was on the pill or used some other birth control. \n\n\"So?\" she replied as she leaned back and to the side, rolling us over until I was on top. \"I wouldn't be the first woman to be a single mother. Now, fuck me. Fill me with your cock. Slide it in and out of me. I want it so bad.\" \n\nI was so excited that I was shaking unlike any other time that I'd made love to a woman. \"This woman ... this wondrous, beautiful, sexy, woman is offering herself to me. Offering to take my cum, offering to possibly be the mother of my child and ... and what else?\" I wondered as I felt her lock her ankles behind my back. \"Am I nuts? What can I offer her?\" the head between my shoulders asked while the head between my legs continued to pump in and out of her seething womanhood. \n\n\"Come on, T. Make love to me. Pretend I'm one of your girlfriends and give it to me,\" she said as she gently tugged at my hips while lifting her hips toward me. \n\nAt that moment, all self-control evaporated and I began to thrust into her. \n\n\"Deeper, T. I want to feel you deeper! I want to feel your balls slapping my ass,\" she moaned. \n\nI pulled my legs upward until I was balanced on my hands and knees above her and pushed my cock into her until I felt the tip pressing against the back wall of her pussy. \n\n\"Shhhhhhhhh,\" she hissed as her body tightened beneath me. \n\n\"Are you okay?\" I asked, concerned that I might have hurt her somehow. \n\n\"Absolutely fan-fucking-tastic. That feels so good. I can feel your cock stretching me and filling every bit of my pussy. I can even feel it pressing against my cervix.\" \n\n\"I'm sorry. I didn't mean to hurt you,\" I replied as if I hadn't heard what she'd said while slowly pulling my cock from her depths. \n\n\"Don't you dare,\" she growled, playfully, as she dug her fingernails into my back. \"Some women don't like a cock that deep in them. They say it hurts ... BUT, I'm not one of those women,\" she said as she tightened her legs and arched her back taking my cock back into her depths. \"So very, fucking good! Fuck me, T, fuck me good and hard!\" \n\nI began to move, tentatively at first, to make sure I wasn't hurting her. Then I began to move in and out, gradually increasing the length of my strokes. She groaned and her ass began to grind against the bed. \n\n\"So full. So fucking full,\" she sighed. \n\nHer juices were liberally coating my cock, to the point that there was no sense of friction, leaving me little choice but to thrust into her harder and deeper. That was when I tasted blood. I'd been concentrating so hard on what I was doing I hadn't even realized that I'd caught my bottom lip between my teeth until I bit it. \n\n\"Yes, yes, yes,\" she murmured over and over, matching my tempo. \n\nMy thrusts soon became harder, deeper, and faster. \n\n\"Feels so good, T. Don't stop. Whatever you do, don't stop. Oh, so good. Fuck me, lover, fuck me,\" she groaned. \n\nWhen it happened, it was as if someone had set off fireworks in my head. Stars filled my vision, while the boom, boom, of my heart beat filled my ears and through it all, I felt the surge of my cum rocketing up my cock, spewing out into her clutching pussy. My strokes faltered and became irregular as I shuddered and jerked. \"Argh, argh, arggghhhhhh,\" I groaned, more like a Neanderthal than anything else. \n\n\"Ohhhhhhhh ... Yessssss. Do it. Fill my pussy with your cum. I feel it splashing against my cervix. I love ...\" she began to say and while my ego hoped to hear one word she finished with another, \"it. I love the feel of your cum. Fill me, lover. Fill my pussy with your warm cum,\" she continued as she threw her arms around my neck, hugging me, as her legs tightened around my back locking us together. \n\nThe fireworks in my head soon disappeared to be replaced by a sense of failure. \"Sorry,\" I muttered. \"I came too soon.\" \n\n\"What are you talking about? You've made me cum, hmmmm ... what is it now, five or six times since we've met. It's about time you came. Besides, that was just the beginning,\" she whispered as she pulled my head back down onto her shoulder. \"For now, we'll rest, and then we'll go again. By the time I'm done with you you're going to be walking bow-legged!\" \n\n\"We'll see about that. It usually takes me awhile to recuperate after cumming as hard as I just did.\" \n\nThough I couldn't see it, she grinned, silently taking up the challenge. \"You've never had me around before. Now, ease out, and let's see what we can do about your 'problem'.\" \n\nI withdrew carefully, the sudden 'pop' followed by my cum streaming out of her pussy surprising me. \"I'm sorr ...\" \n\n\"Shhhhh. No need for that,\" she warned again. \n\nI was still half-hard, but softening. \n\n\"Just as I thought,\" she sighed as she kissed me gently, before sliding down on the bed. \n\n\"Are you going to ...?\" he began. \n\n\"You better believe it! I love the taste of cum and my own pussy juice when they're mixed together. It always makes me horny ... has since the first time I tried it.\" \n\nMy cock twitched in her grasp. \n\nShe laughed, sexily. \"It looks like it might make you horny too!\" \n\n\"It's not that. Well, maybe a little. But mostly it's you. How do you think I feel looking down to see the woman I've fantasized about so often, naked, with her pussy full of my cum, talking about sucking my cock!\" \n\n\"All of your fantasies or just some?\" she asked, gently. \n\n\"Most of them. Quite a few times I've watched your videos and dreamed it was me instead of some other guy.\" \n\n\"And what do we do in your fantasies?\" \n\nI felt my face redden as I thought about what she'd just asked. \"I have a couple of favorites but I think the one I like the most is actually based on one of your vids.\" \n\n\"Which one? \n\n\"Ummmmm ... you were in the kitchen dressed in just an apron. A guy comes in and before you know it he has your apron off though you still have your panties and pair of high-heels on. He plays with your tits before you give him a blowjob and then tit fuck him until he's hard ...\" \n\n\"You mean like this?\" she said as she moved so I could see my rock-hard cock. \n\n\"Yeah. Then he turns you around and fucks you from behind. In the last scene he cums on your face but in my fantasy I cum deep in your ...\" and suddenly I hesitated to say more. \n\n\"My pussy? My cunt?\" she taunted. \"You are such a gentleman. But can I tell you a secret,\" she asked as she lowered her voice. \n\n\"Sure.\" \n\n\"I remember that scene. It's one of my favorites too. I came so hard the first time we did it that we had to reshoot the scene the next day.\" \n\n\"Wow.\" \n\n\"Want to know another secret?\" \n\n\"Sure,\" I replied without hesitating. \n\n\"I've ... ahhhhh ... always been a bit of a submissive. I loved it when he stretched me out on the counter like that and fucked me. I love it when a man takes charge. I even like to feel used some times.\" \n\n\"In other words, you like it when a 'fucker' screws you,\" I sighed, a bit disappointed. \n\n\"Yes ... and no. I like it when he's in charge but I like it even more when I know he actually cares about me. Does that sound strange?\" \n\n\"Not at all,\" I replied thoughtfully. \"That's another advantage of being 'a lover'. You can play the role of 'a fucker' once in awhile if the woman wants you to.\" \n\n\"Good,\" she whispered, seductively, as she spun around and got on her hands and knees. \"Now, come here and fuck me. I want to feel that marvelous cock of yours slamming in and out of me. I want to feel you care for me like a 'lover' but use me like a 'fucker',\" she moaned. \"Right here, right now,\" she said as she shook her ass from side to side. \n\nI quickly crawled up behind and grabbed her hips. My cock instantly found its mark and slid into her wet opening. \n\nShe pushed back, and in one delicious thrust, I slid deep inside her. Her cry of joy echoed throughout the bedroom as my cock pressed against her cervix with each stroke. Then she arched her back and thrust back against me. \n\nI could feel my cock rubbing against the walls of her pussy. \n\n\"AAIIIEEEEEEE,\" she suddenly screamed as her body tightened. It was only later that I found out that my cock was rubbing against her 'G-spot' and sending wave after wave of illicit pleasure through her. \n\n\"There's a pair of tits down here that are in serious need of attention,\" she sighed. \n\nInstantly, I reached under her and cupped the massive globes. \n\n\"Squeeze them. Pinch my nipples. Hard, damn it! Don't tease me like that,\" she begged as I toyed with the distended nubs. \n\n\"If you say so,\" I replied as I captured each nipple between my index fingers and thumbs. \n\n\"Yes ... yes ... please.\" \n\nMy answer was to twist and roll her nerve-filled tips between my fingers before pulling them away from her chest and then releasing them to snap back into place. \n\n\"Ohmigod, lover. That's it ... hurt me so good. Ohhhhhhh, yess. Fuck me harder. Ram that big cock into my pussy. Fuck me!\" she cried out. ",
        "My hips slammed into her ass, causing my balls to sway forward and slap against her clit. \n\n\"That's it. That's what I need,\" she groaned. \"You're going to make my cum, T. You're make me cum around your marvelous cock. Ohhhhhhhh, soon ... lover. So soon ... almost there. Cum with me. Oh god, yess. Almost ... almost.\" \n\nIt was at that moment that I remembered one of the scenes I'd seen her in. I released her tits and reached forward, grabbing her arms. Then with one quick tug I pulled her arms from under her. With no support, she fell face-first onto the mattress and I fell with her, driving my cock into her harder and deeper than I'd done before. For an instant I felt the tip of my cock press against the opening to her womb. \n\nHer back arched as she lifted her head, her breath irregular as she panted. \"Yes ... yes ... Cum for me. I want to feel you cum in me again. I want to feel you fill me with your cum. Cum for me, lover!\" \n\nI groaned, as I heard her plea. \"Soon, baby. Real soon. I'm going to cum, I'm going to flood your pussy with my cum.\" \n\nShe tightened the muscles of her pussy as I continued to plow into her. \"Oh yes, oh yes, oh yes, \" she panted over and over again until I felt her body release its pent-up pleasure. \"Cummmmiiinnnggggg,\" she wailed. At the same time, she grabbed the sheets as if she needed something to anchor herself to. \n\nThat was all it took. My balls tightened and my cock seemed to grow larger as my cum erupted from the tip to spray the inside of her again. \"Me toooooooo!\" I grunted between strokes. \n\nRope after rope, my cum splattered against the walls inside of her, filling her until our combined juices leaked from her, running across her clit and dripping onto the sheets. \n\n\"I can feel it,\" she whispered before squeezing my cock with her pussy muscles, trying to milk out every drop. \n\nWe lay there for what seemed hours, but could only have been several minutes, gathering our scattered wits, until she sighed weakly, \"So good\". \n\n\"I'll say,\" I murmured. \"I don't think I've ever been with someone who could make me feel this good or cum that hard.\" \n\n\"Mmmmmmm,\" she murmured as she began to fall asleep, only to look over her shoulder at me. \"Will you help me with something?\" \n\n\"Sure.\" \n\n\"Help me get this under me,\" she said, in a voice only slightly louder than a whisper, as she took a pillow and handed it to me. \n\nWith the pillow in hand, I lifted off of her, my dwindling cock sliding free of her saturated sheath. \n\n\"Right here,\" she indicated as she lifted her hips. \n\n\"Okay,\" I said not really sure why she wanted me to do this. It seemed like a very uncomfortable way to sleep. \n\n\"My doctor told me this is one of the best ways to keep a man's cum in me if I wanted to get pregnant.\" \n\n\"PREGNANT?\" my mind screamed but before I could ask her what she meant I heard the soft, gentle sound of her breathing as she fell asleep again. \n\nWhen we finally woke up this time the sun was already beginning to settle in the west. We got up and as if by mutual agreement, didn't bother to get dressed before heading for the kitchen. Steak, salad, and a fresh vegetable along with another bottle of wine were soon on the table with two ravenous, very naked people, sitting across from each other eating it. \n\n\"Can I ask you a question?\" she asked. \n\n\"Another one?\" \n\nShe laughed, \"Okay, so it's not really a question it's an idea I have and it includes you.\" \n\n\"Okay?\" I replied hesitantly. \n\nAs we ate she told me of her idea and how I fit into it. That night we slept next to each other, our arms entwined, or bodies too tired to do more and in the morning, we began to put her plan into effect. The first thing I did was call the cab company. After some quick talking, I got them to agree to pick up the cab in Lake Geneva but only after Anne agreed to pay half-fare to get it back to Chi. \n\nAfter that, it was back to my parent's house to put Anne's plan to work. Our 'couple of days' together soon became a week and then a month. We spent the days fine-tuning her plan and the nights making love, or fucking, in every room except my sister's. There was just something about making love in her room that gave me the shivers. \n\nAt the end of the month, we traveled to L.A. where Anne set up an appointment with a well-known financier. We caught a cab to his office and just before we went in, Anne pulled me aside. \"So, Mr. manager,\" she teased as she straightened my tie, \"Are you ready?\" \n\n\"As ready as I'll ever be but with a client like you it shouldn't be too hard to convince him to fund your new studio.\" \n\nShe smiled. \"Before I forget, I need to tell you something.\" \n\n\"Yeah?\" \n\n\"First, I went to the doctor today.\" \n\n\"Is everything okay?\" I asked, instantly concerned. \n\n\"Everything is fine. Number two I want you to know that pregnant women can get VERY horny and number three,\" she stood up on her tip-toes to whisper into my ear, \"I'm not wearing any panties.\" \n\nShocked, I stood there as she turned and walked into the building just as it began to rain. Suddenly, I remembered how the two of us had met and finally understood the old saying, \"Every cloud has a silver lining.\" \n\nDISCLAIMER \n\nWhile Anissa K is a real person and both Chicago and Lake Geneva are real places this is a work of fiction meant for the enjoyment of its readers. It in no way reflects events, past or present."
    ],
    "authorname": "Ghostwalker",
    "tags": [
        "chicago",
        "insemination",
        "porn star",
        "romance",
        "submissive",
        "celebrities",
        "romantic"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/every-cloud-has-a-silver-lining"
}