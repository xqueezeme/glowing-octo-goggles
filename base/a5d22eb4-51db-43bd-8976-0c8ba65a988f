{
    "title": "Immortal Gift of Beauty Ch. 04",
    "pages": [
        "Hank and Brosie continue to fall in love...\n\nI hope you enjoy it. \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nOur life together had begun, although not in the manner either of us would have planned. After the argument with my parents, and the release of emotions that followed, Brosie and I had retired to her bedroom, to talk and cuddle. \n\nI suppose I should refer to it as our bedroom now, shouldn't I? \n\n\"Thank you, honey,\" she said softly, resting her head on my chest. \"Thank you so much, for stepping in, and defending me. That means more than I can say.\" \n\n\"Well, I love you,\" I replied, holding her tight. \"Anyone who has a problem with you, has a problem with me. Parents included.\" \n\n\"You gave up so much, though,\" she whispered, caressing my face. \"Your whole world has changed, in the blink of an eye.\" \n\n\"I prefer to think of it as a trade. After all, I get to have you. That's a pretty good deal, at any cost,\" I smiled. My hand moved instinctively to her breast, cupping the fullness softly. \n\n\"Yes, well, I suppose that's true,\" she giggled, pressing her own hand over mine, and firmly fondling her breast. \"Still, there's more to your future than just physical needs being satisfied. I do expect that your parents will change their tune a bit, once the shock wears off, but what if they don't? Have you thought that through?\" \n\n\"In the last five minutes? No,\" I laughed. \"I'll find a job. Might have to save for a year, but I can still go to school later.\" \n\n\"Oh, I'm not worried about that,\" she smiled, patting my chest as she sat up. \"Money is not the issue. I'm a wealthy widow, remember? We have more than enough to pay for your classes. I'm talking about them cutting themselves out of your life. You'll miss them.\" \n\n\"It had to happen sometime,\" I observed. \"Even in a perfect world, they weren't going to live forever.\"\n\n\"No,\" she replied, \"but this is a little different. We're not talking about losing them to natural causes. We're talking about losing them by their choice. You'll know where they are. That's a powerful distraction.\" \n\n\"You're probably right,\" I nodded, \"but at least I am not going through it alone.\" \n\n\"No, you're not,\" Brosie smiled. She stood up, and went to check the bedroom door, making sure it was locked. When she turned back to face me, I could see that familiar look in her eyes. Just like our first time together, back on Santorini. Then we had been a secret, just starting the journey that brought us here. Now, we were out in the open. Even my sister and her daughter being in the house wasn't going to stop her, this time. \n\nI watched her peel off her top as she walked back to join me on the bed. That awesome body was now mine to enjoy, anytime I wanted. Her huge tits jiggled in their bra, as she sat beside me on the bed and turned to kiss me, pulling me down to lay atop her. \n\n\"I know we've done this, in this room before,\" she giggled, \"but the circumstances have changed. I think a new beginning is in order. Care to help me christen the room?\" \n\nI laughed. She hadn't said 'christen the bed'. The last room we christened like this had ended up looking like a tornado had rampaged through it. \n\nThis was going to be fun. \n\nWithout another word, we began to feast on each other, pawing and kissing with passionate urgency. Clothing flew wildly, tossed away as soon as it was removed. It didn't take long for us both to get naked, and when we were, our pace slowed slightly. Our touches became gentler, caressing each other with love, and stoking the fires inside. We pulled a sheet up over ourselves on the bed and forgot about the world outside this room. \n\nRolling around the bed, we took turns being on top, kissing and fondling each other happily. My hand found its way between her legs, slipping a finger into her extremely damp cleft. Brosie moaned and grabbed my dick. \n\n\"I need this, inside me,\" she purred, lifting her hips higher. \"I can't wait.\" \n\nI felt the slippery lips of her pussy part as they captured the head of my cock. The warm sensation slid lower, as more and more of my shaft was engulfed by her snug opening. At last, I could feel the tickle of her labia against my balls, as she sat upright, fully impaled. \n\n\"Mmmmmm, I think I'm going to like having daily access to your cock, my love,\" she moaned. \"You're definitely going to spoil me.\"\n\n\"I'm spoiling YOU?\" I laughed, palming her big tits as they hung before my face. \"My first serious relationship, and it's with a woman who's more than I could ever have dreamed. Loving, beautiful, sexy as hell... my Greek goddess. You're worried that I'm spoiling you, huh? I guess we'll just spoil each other.\"\n\n\"You do have a way with words, darling,\" she smiled, leaning forward. First, I felt the pressure of her breasts against me, then her lips, as she kissed me with passion. I felt her pussy grab my cock tighter, as she lifted her hips, pulling on it before relaxing again to allow it back in smoothly on the down stroke. I just loved it when she did that, and moaned my enjoyment into her kiss. She moaned back, and sat up. \n\nI watched her eyes flutter closed, and she tilted her head up, letting her long dark hair hang fully down the smooth skin of her back. My hands were on her hips and thighs, feeling the firm muscle under them flex and shift as she slowly rose and fell on my shaft. The room was quiet, and I could hear her quivering, excited breathing, building with her arousal. \n\nShe was right. Things had changed. This was now our bed, and we were no longer two separate individuals with a shared interest in each other's bodies. We were now one entity, connected at the heart, and that new status was palpable. She was taking her time, as we had no reason to rush.\n\nTruthfully, we not only had no reason to rush, we had no motivation to do so. I could feel the difference, and I'm just a man, so I can only imagine how it must be for a woman. Even in my limited experience with women, I had noticed how much more emotionally perceptive they were. It's one of the things that makes them so maddening, but it also makes them endearing, and an irreplaceable part of our lives. \n\nFrom my place below her, I could see her orgasm building, like a constant flow of water trapped behind a fragile dam. It was only a matter of time before it broke through. \n\n\"Oh my god ohmyGodohmy...\" she began, in a whisper of impending release. Her eyes screwed shut again, and I felt the explosion from within, as her pussy clamped down on my hard penis, and she screamed. \"Mmmnahn, GNAHHHHHN! YESSSS! YESSSSSS! OHHHHHHHHHHHHHHH FUCK YES!\"\n\nHer body bucked wildly in the saddle, and I gripped her waist, holding her up, until she collapsed forward onto my chest, panting for breath. It took a minute for her to recover.\n\n\"I was beginning to think that I might never feel this way again,\" she said softly, resting her head on my shoulder while I held her. \n\n\"I wasn't going to give you up, no matter what they said,\" I replied. \"You're the most beautiful woman I've ever seen.\"\n\n\"Thank you, my dear,\" she giggled, lifting her head to look at me. \"I appreciate the compliment, but I was speaking of something a little deeper... Um, no not your wonderful long cock... I mean something inside me... Oh hell! Everything I say is coming out as a sexual comment! I, um, I mean...\"\n\n\"You mean love,\" I smiled, completing her sentence. A bright smile erupted on her face, and she leaned in to kiss me.\n\n\"That's right, honey,\" she breathed. \"You gave up everything, for me. Now, I'm pretty good in bed, but I have to believe there's more than that that made you do such a thing. After my husband, I thought I would be alone for the rest of my life, but you showed me how you feel in a way words never could.\" \n\n\"Well, I love you,\" I repeated. \"You're the most important person in my life. I wanted them to know that, as well as you.\"\n\n\"Mmmmmm, I certainly do now,\" she purred, smiling at me from close range. \"The feeling is most definitely mutual.\"\n\nOur lips met again, in an embrace of emotional completion. The passion escalated again, and I felt her pussy grab my cock, which was still inside her warm crevice. She slowly lifted her hips, and groaned as my hard shaft moved inside her, then lowered herself onto it once more, as I pushed up to meet her. The kiss continued, while we gently made love in this position. \n\nA startling knock on the bedroom door made us both jump. \n\n\"Mom?\" came Marina's muffled voice. \n\n\"Busy!\" Brosie moaned, sitting up in frustration. \n\n\"Yes, Mom. I know. We heard you,\" Marina giggled. \"Just letting you know I'm taking Sharon home. I'll be back in an hour or so.\" \n\n\"Thank you, honey,\" Brosie answered, still breathing hard. \"Drive safe.\" \n\n\"I will,\" she replied. \"Have fun.\" \n\n\"I will,\" Brosie giggled back. She resumed her rhythm, again dangling her breasts in my face. I found a nipple, and suckled her gently. \n\n\"I'll call you later, Hank,\" my sister chimed in. \n\n\"Mmmmm hmmm,\" I mumbled, my mouth full. \n\nWe both heard the girls laughing on the other side of the door, then silence, but no footsteps going down the stairs. \n\n\"I think they're listening,\" Brosie whispered. \"Let's teach them a lesson. Follow my lead?\" \n\nI nodded, and released my grip on her nipple. \n\n\"Oh god, yes Hank!\" she gasped, making sure her voice could be heard clearly. \"Do it, honey! Fuck me!\" \n\nI grunted a few times, playing my part, but she hadn't yet dropped the bomb. \n\n\"Yeah!\" she continued. \"Oh it's so good! That's it! Stick your big cock up my ass!\" \n\nBombs away! I tried to muffle my giggle as we heard an \"Eww!\" outside the door. \n\n\"Well, that's what happens when you eavesdrop, girls,\" Brosie said directly. \"Sometimes, you hear things you'd rather not hear.\" \n\n\"Very funny, Mother,\" Marina called through the door, and this time we heard them go down, followed by the front door closing. \n\n\"I think they're actually gone, this time,\" Brosie smiled. \"On a related note, would you like to fuck my ass? Not necessarily today, but as a general idea.\" \n\nOh, my god, yes! I thought, trying to supress the smile that threatened to meet at the back of my head. \n\n\"Oh, um, sure,\" I nodded, imagining my dick disappearing up her anal opening. \n\n\"It's been a long time since I took it in the butt,\" she smiled. \"My husband's dick wasn't in your league, but it felt pretty good up there. I'd like to try it, sometime.\" \n\n\"I can't believe a sophisticated, elegant woman like you is into anal sex,\" I shook my head. \n\n\"Hey! I'm Greek! I think we invented it,\" she giggled, winking at me. My cock was still hard, and still up her pussy as she sat on top of me. \"How about some doggy? I really love how deep you reach that way.\"\n\nI may be young, but I'm not stupid. Anything that would result in my cock sliding in and out of her exceptionally juicy pussy was fine with me. Besides, I did like to do her from behind, grabbing those firm hips, and slamming into her rump with urgency. \n\nBefore you could say 'fuck me harder', three times, she had arranged herself on hands and knees, and was wagging her butt at me. \n\n\"Come on, darling,\" she smiled, looking over her shoulder at me. \"Put that big, beautiful dick back where it feels so good.\"\n\nI glanced briefly at her tightly puckered asshole. I didn't need to be greedy today. There would be plenty of chances to fuck her in the ass, now that we were together for good. Her pussy was open, dripping wet, and begging to be filled, so I lined up, and plugged in. \n\n\"Mmmmmm, yeah, that's it, honey,\" she groaned. \"All the way in. So deep. I love the way you stretch me open. I love you, baby.\" \n\n\"I love you, too,\" I replied, taking a grip on her waist. I ground myself all the way inside her. \n\n\"I want to make you happy, my sweet,\" she whispered. \"I'll do anything you want. Anything. I may be a mother, and a widow, but I can be a slut for you, my love. In here, in our bedroom, when we are alone, I'm yours to use as you wish... with one exception; no rough stuff. At least, not, too rough. I'll tell you if you go too far.\" \n\n\"Of course. I would never do that,\" I answered. \n\n\"I know. That's one of the reasons I love you. I know you love and respect me. I know you would never hurt me,\" she nodded. Her expression changed, becoming more playful. \"Now, fuck me, baby. Fuck me hard. Make me cum again, then shoot that hot jizz all over my face. Make me your cum slut. I want it!\" \n\nKneeling behind her, with my hands gripping her mature yet slender waist, I pulled her back with each thrust of my hips, while considering the events of the day. She was right; my world had changed very quickly. \n\nOnly last night, we were having secret sex on her sofa bed, and my parents were still blissfully unaware. I still lived with my family, and all was normal. \n\nTurn the page to today. Shit met fan, and now nothing was normal. We were public knowledge, in a very unconventional sexual relationship. My parents' disapproval had manifested itself in banishment. Thankfully, my homeless period had been measured in seconds, and now I had a new home, with a new, warm bed to sleep in, and a sexy, warm lover to share it with. \n\nNow that sexy lady was giving herself to me, completely, and promising to be my own personal porn star in the bedroom... Our bedroom. \n\nI'm sure I hadn't yet felt all the consequences, but so far, it may have been an improvement. \n\n\"Mmmmmm, yes,\" Brosie moaned, refocusing my attention. \"That's my man. Slide that big dick in, nice and deep.\"\n\nI looked down as I pulled back, watching my luscious Brosie's thick, swollen labia drag along my shaft, leaving trails of frothy pussy juice in their wake. I pushed inside again, until those same aroused lips were nestled around my balls. Her asshole puckered as her internal muscles grabbed the thickness of my intruder, and she moaned softly. \n\n\"More!\" she hissed, pushing back against me on every stroke. \"Give me more!\" She tossed her head back, letting her long, dark hair fall within reach, encouraging me to grab it. I did, snarling it around my fingers and pulling firmly. \n\n\"GNAHHHHHN! YESSSS! PULL MY HAIR, AND FUCK ME HARD! YESSSS! I LOVE IT!\" she gasped. Her tits swung wildly as they hung below her chest. Her rump quivered as it absorbed each thrust, and our bodies crashed together. Inside, her pussy clutched me tight, in a grip that grew tighter as her orgasm raced toward us. When it arrived, it hit like a hurricane. \n\n\"Uhhn! Oh! Uhhn, fuck! YES! FUCK! UHHN! UHHN! UHHHHHN! FUUUCK! MY GOD, YES! YES! YES! YES!\" she screamed. \n\nMy own zenith was brewing quickly, and I couldn't stop, so I kept thrusting into her right through her climax. She grunted, dropping her shoulders to the bed, ass high in the air. \n\n\"Cum... on my... face!\" she hissed, between strokes. \"I'm a... bad girl!\" \n\n\"You're my bad girl,\" I corrected. \n\n\"Yes! I'm your bad girl! Your slut! Cum on me!\" she moaned. \n\n\"Get ready!\" I groaned, my balls tingling, an orgasm imminent. I pulled out, and Brosie spun around. She tilted her head back, and opened her mouth wide, lolling her tongue out as a target. \n\nI loved Brosie. She was so beautiful, and sexy, yet respectable and sophisticated. Being around her made me feel like the man I wanted to be. That's why we wanted to be together. \n\nShe was also all the sexual partner I could ever ask for, especially if she was willing to explore her nasty side. She had offered me her ass, and someday soon, I'd be taking her up on that. Today though, it was time to give her a facial. \n\n\"Cum on me, baby,\" she moaned, encouraging me as I jerked like a madman. \"Give me all your hot, sticky semen, all over my face. I want it.\" \n\n\"MmmmnnnaaaAAAHHHHHNNNNNN!\" I grunted, as the first ribbon landed with a 'splat', stretching from her chin to her eyebrows. \"UHHN!\" I groaned, as more pearly goo shot out, draping across her nose, and across her cheek. Two more streaks were added, before there was nothing left but a few weak drops that speckled her hair. \n\n\"That's my man,\" she moaned, looking up at me through the drops of cum that had landed on her lashes. \"Do I look slutty?\" \n\n\"As far as I'm concerned, you're always beautiful,\" I smiled. Her fingers dragged through the goo, pulling more of it within range of her tongue, which had already cleaned the area around her mouth instinctively. \"Beautiful, sexy, and occasionally an insatiable, unstoppable force of nature,\" I chuckled, watching her lick her fingers. \n\n\"That's me. All natural,\" she smiled, shaking her big tits at me. I'd never get tired of watching that. \n\n***\n\nMom and Dad didn't know this, but I had a spy, embedded deep in their camp. Sharon was happy to collect and share the gossip from home. \n\nThere I go again, living in the past. That location wasn't my home, anymore. It may still be hers, but it's no longer mine. \n\nAnyway, Sharon was keeping me filled in on the happenings there. Cracks were forming in their consolidated front. Mom was voicing her wishes that I come home. \n\nI had no intention, and no need, to do that. Having lived with my parents my whole life, I knew that they didn't change their minds once they took a stand. Any leeway after the fact was meant to soften the inevitable; that they were in charge, and we did what they said. \n\nSo, I also knew that even if this was the first time they were actually having a change of heart, it was too fast to be genuine. It was a ploy, to get me back home, where they could work on breaking me down. \n\nI wasn't buying it. Don't get me wrong; I love my parents, and they had never been anything but caring and protective of both me and my sister. However, in this instance, I felt they had overstepped. I was an adult. As far as the government was concerned, I was legally able to give my life for my country, but my parents were acting as if I shouldn't be able to decide who I could share that life with. They needed to know that I was serious about that decision and was willing to deal with the consequences. \n\nEven if the consequences didn't include them. \n\nAs for my relationship with my sister, it had never been better. All my life, I had been her pain-in-the-ass little brother, and she had merely tolerated my presence. Now, I had graduated, and she looked at me differently. When she told me that standing up for Brosie, in front of my parents, was the most romantic thing she'd ever seen, it signaled a complete change in our future. \n\nWe were now friends in a way that had never been considered before. \n\nI was happy that my parents had at least let Sharon remain neutral in the matter. I jokingly called her my 'Swiss-ter'. They weren't giving her a hard time about coming over to visit Marina, even though they knew she'd see me, as well. She was a visitor about twice a week, which was just the perfect amount of time, in my book. Just often enough to remain a guest, not an intrusion.\n\nI came home from running a few errands to find Sharon's car in the driveway. I guess it was time to be debriefed on the home situation, and I went straight out into the backyard, where I found all three ladies baking in the sun, chatting about who knows what. They were all very scantily clad, even Sharon, who was wearing a bikini that would probably have given my mother a stroke. They were all laying face up, oiled and shiny, with their bodies available for my viewing pleasure. One, of course, held a special appeal for me. \n\nBrosie was wearing her red suit, the one that she'd worn the day my parents visited. It was my favourite, of all the suits in her collection, and the next best thing to her sunbathing naked, which was often the case as well. Brosie had no issues laying out around the pool stark naked, but deferred to social convention when Marina was around, or guests were expected.\n\nAnyway, while I stood taking in the scenery and listening to them cackle, my love gestured me over. She had a kiss for me, of course, and it was nice to be able to deliver it without fear of getting caught. While the whole 'sneaking around' thing had been very exciting, it had also been stressful. Now that we were in the open, it was much better.",
        "And I have to say, I had no idea an older woman could have such a sex drive. Not that I had much other personal experience, but even the internet hadn't hinted at the tsunami of sexual appetite that had been unleashed since we now lived together. Every night, and sometimes throughout the day as well, Brosie would spread her legs and beg to be fucked, not that she had to beg too hard. I woke a few days a week to a lovely morning blowjob. We still hadn't tapped her ass yet, but it was available. She was definitely spoiling me for other women, not that I was looking for one.\n\nWhile I was near, she rolled onto her stomach, and untied her top. The thong bottom left her beautiful ass wide open.\n\n\"Darling?\" she giggled, wagging the bottle of oil at me. \"Please?\" \n\n\"Oh, if you insist,\" I smiled, feigning reluctance. \"Honestly, the things I have to do around here. I don't know why I put up with it!\"\n\n\"Yes, you do,\" she smiled, confident in our love.\n\nShe was right. I was joking. I would rub oil on her anytime she wanted, anywhere she wanted. Also, on the list were eating her pussy, licking her ass, sucking her nipples, and generally pleasing her body in whatever way she desired. She was my goddess. My worship was complete.\n\nI squirted a trail of oil across her back, and began to massage it in. It wasn't strictly what she'd asked for, but why merely spread the oil when I could give her more enjoyment? A moan of pleasure led me to believe I was on the right path.\n\n\"Mmmmmm, you're hired,\" she groaned, as my fingers dug in, kneading her firm ass.\n\n\"I'm next!\" Marina laughed, flipping onto her stomach as well. Her suit was a little less revealing, but I had never done more than hug her before. A glance at Brosie, who nodded, told me to go ahead.\n\n\"Oh, hell... Me too!\" Sharon chimed in, rolling over as well.\n\n\"Just wait your turn, both of you,\" Brosie moaned. \"He's not finished with me, yet.\" \n\nFar from it. I was just getting started. Now that all three were flat on their tummies, it would be harder for the other two to watch me. I began to dip my fingers further between her legs when my hands were in the area. She moaned, and spread a little wider, giving me better access, which I took advantage of. I teased her asshole with the oily tip of my thumb, and pushed it gently in. The other hand worked up and down her legs, while I wriggled the intruder deeper. Brosie sighed contentedly, and spread wider, lifting her hips slightly. The hand between her legs worked deeper still, and my fingers caressed her clit through the tiny bathing suit bottom. I could feel her body quivering, and pushed the fabric aside, getting clean contact with her clit, and letting my fingers slide inside her pussy, which was soaking wet.\n\nI continued to spread oil with one hand, as far as I could reach, while the other hand probed both her entrances. My thumb was now buried fully in her ass, and my remaining digits slowly stabbed at her juicy cunt, when not torturing her clit. I could feel her getting closer by the second, biting her lip to remain silent, as the orgasm raced nearer. Her eyes locked onto mine, begging me to finish her.\n\n\"Mom, no fair hogging him,\" Marina said. Oh, if she only knew...\n\n\"He's almost... done,\" Brosie groaned, shuddering through her climax in stealth mode. A final, shivering breath, and she relaxed. I carefully extracted my fingers from between her legs, and wiped them on her towel.\n\n\"Thank you, honey,\" she smiled, then whispered. \"I do hope you're not planning on giving my daughter the same treatment. Or your sister?\"\n\n\"Strictly oil for them,\" I whispered back, kissing her ear. \"No frills.\" I had a raging erection from fingering Brosie. Oiling two more young women was going to do nothing to ease the situation. \n\nI tried to maintain some sort of emotional detachment as I spread oil on Marina. It was difficult. While she didn't have anything approaching her mother's ample bustline, she did have a very attractive ass, and long smooth legs that felt very nice in my hands. I patted her rump, and moved on to my sister.\n\nSharon's ass was equally nice. I had admired it for years, despite the fact that we hadn't always been the best of friends. It was a unique pleasure to be able to hold that firm, muscular backside in both hands. Unique, and a bit strange. When I finished with her, I gave her butt a more forceful slap.\n\n\"Hey!\" Sharon giggled. \n\n\"Nice bum, Sis!\" I replied. \"I'm going inside. All this sizzling flesh has made me hungry for bacon.\"\n\n\"Ooooo, that's not a bad idea!\" Brosie added, sitting up. Her bikini top nearly slipped off completely, but she caught it and retied it in time. \"Come with me. We'll make lunch.\"\n\nI had a feeling that lunch was only one of the reasons we were going inside, and I followed her wiggling backside with rapt attention, and a few playful caresses. As soon as we were out of sight, she turned and pounced, jamming her tongue down my throat.\n\n\"You are such a bad boy!\" she gasped, pulling me tight against her body. \"I can't believe you fingered my ass and made me cum, right beside my daughter and your sister! It was so fucking hot!\"\n\n\"I agree,\" I nodded.\n\nHer eyes fell to the bulge in my crotch.\n\n\"Poor baby. That must be uncomfortable,\" she smiled, palming the hard lump. \"Can I take care of it for you?\"\n\nShe didn't even wait for an answer. Within seconds, she was on her knees, with me backed into the corner of the kitchen counter, my cock sliding slowly into her mouth. It was, as usual, a heavenly experience. \n\n\"Oh, honey,\" I moaned, glancing over my shoulder. Yep. Both still out there. \n\nNot that it really mattered anymore. This was Brosie's house, which by association made it my house, too. If we wanted to have sex in the middle of the day, right here in the kitchen, the only one who could possibly complain was Marina, and she had already caught us dancing naked once, and doing this another time, in the basement. It wouldn't be much of a surprise.\n\nMy sister, on the other hand, would get an eyeful she hadn't previously experienced. At least to my knowledge, Sharon had never seen my dick, and had certainly never seen me getting a blowjob.\n\nUntil now, anyway.\n\n\"Oh my! Oh! I'm so sorry!\" I heard, from the right. It was Sharon, shielding her eyes, and looking very uncomfortable. \"I wasn't... I mean, I didn't mean to... Um... I shouldn't, but, um... I had to pee, and I... Wow! I wasn't expecting to walk in on... Oh wow!\"\n\nI jumped, startled by her sudden appearance, but otherwise stayed put. Brosie barely hesitated, and was now continuing to suck my cock deep into her throat.\n\nAnd Sharon was no longer shielding her eyes. Call it curiosity, or whatever, she had stopped averting her eyes, and was simply watching. Her hand had fallen to cover her mouth, the only remaining indication of her surprise. \n\n\"Um, hi Sharon,\" I groaned. Brosie fluttered her fingers in the air and went back to work.\n\n\"Damn, Hank!\" Sharon gasped. \"Is that really you?\"\n\nI let that particular stupid question go unanswered. What was she expecting? Special effects?\n\n\"I had no idea you were that big,\" she mumbled, watching intently. I suddenly realized she was more than just curious. Her nipples were at attention, clearly visible through her bikini top. \"Fuck! How does she suck you like that? I've never been able to get a big one anywhere near that far down... Um, I mean...\" she stammered, inadvertently revealing more about herself than she meant to.\n\nBrosie pulled back, letting my shaft slip from her mouth. She pumped my glistening penis with her hand while she talked.\n\n\"Well, maybe someday I can teach you,\" she smiled, totally at ease. \"Didn't you say something about having to pee?\"\n\n\"Yeah. Right. I'm sorry,\" Sharon blushed. \"I'll leave you alone now.\"\n\nWith a final glance at my cock as it disappeared once more into Brosie's mouth, she headed toward the bathroom. I grabbed two handfuls of lustrous, dark hair, and started to hump her throat slightly. We both moaned, and enjoyed it. \n\n\"Hey, Mom, can I help with lun... Whoops!\" Marina exclaimed, turning her back. \"Sorry!\"\n\n\"What the fuck?\" I asked, shrugging in frustration. \"It's like trying to get a blowjob in Grand Central Station!\" \n\n\"Geez, I said I was sorry!\" Marina replied, refusing to look. \"Um, where's Sharon?\"\n\n\"Bathroom,\" I pointed. \"She barged in on us, too.\"\n\n\"Well, I'm my own defense, you were supposed to be making lunch, not... this.\" she gestured, \"Mother, would you stop, please? I can still hear you.\" \n\n\"Oh, my godddddd!\" we heard, from the direction of the bathroom. It was muffled, but clearly audible. Sharon had either taken a spectacular shit, or she was cumming on her fingers, excited by what she saw.\n\nBrosie still had my cock in her mouth, but she laughed. So did I. Even Marina found it funny.\n\n\"I guess I'm the odd man out, here, aren't I?\" Marina giggled. \"Fine. I'll shut up, and go back outside. Go ahead, Mother. Do your best.\"\n\nI watched her ass wiggle as she left us, headed back outside. When I turned back, Brosie was smiling up at me, my cock in her hand.\n\n\"You heard her,\" she grinned. \"I have to do my best. Are you ready for that?\"\n\n\"Oh, baby, I'm so ready, I'm about to explode,\" I answered.\n\n\"Explode, huh?\" she nodded. \"Just what I was hoping for. God, I'm so horny! First you finger my ass and pussy, and make me cum, just feet away from my daughter and your sister. Then they both catch us, while I'm sucking your cock. Now we hear your sister, getting herself off just down the hall. Not too difficult to imagine what got her so wound up that she needed to masturbate. I'm not sure if a mere blowjob is going to be enough now. I think I need more.\"\n\nShe stood gracefully, and plucked the strings that held her top in place, letting it fall away. When she bent to skin the bottom half off, her huge tits swung enticingly. Naked now, she turned her back, and braced herself with her hands on the edge of the counter.\n\n\"Well? I'm sure you remember what to do,\" she whispered. \"Fuck me, baby. I need that big dick. Give it to me.\"\n\nShe arched her back a bit downward, angling her pussy up into view. I put one hand on her hip, and used the other to aim, tickling her swollen lips with the head of my cock. I eased forward, sliding between those juicy labia a bit. She pushed back off the counter, and her pussy took my shaft inside in one smooth stroke.\n\n\"Mmmmmm, that's better,\" she growled, undulating her hips. \"So nice, and deep. Now, do me, baby. Do me hard!\" \n\nI took a firm grip with both hands on her slender waist, and was just about to start shafting her, when a subtle motion in the corner of my eye caught my attention.\n\nI suppose it wasn't exactly surprising. After all, I had stopped to eavesdrop on my Mother and Brosie, when they were talking about Brosie's new boyfriend, aka, me. Since Sharon hadn't come out of there yet, she was bound to see us.\n\nAnd watch us have sex.\n\nShe was in the shadow, mostly hidden, but I could see her, eyes riveted on the point where my cock disappeared into Brosie's pussy. Her hand was between her legs, moving rhythmically.\n\nYet another change in my life, as my sister went from merely tolerant sibling, to friend, to sexually charged voyeur, watching me fuck my mature girlfriend. It was pretty hot, and her pace picked up as I began to rock back and forth, pulling nearly all the way out, so she could see the length of my shaft coated with Brosie's juices. I slid slowly back in, eliciting a moan of pleasure from my lover, and more motion from Sharon.\n\n\"God, you're making me crazy,\" Brosie moaned. \"I love it slow like this, but you're gonna make me scream. Your sister will hear us, for sure.\"\n\nShe's already watching, I thought, but didn't vocalize. Go ahead. Make all the noise you want. Sharon will probably get off on it. \n\nI couldn't blame her. There was something about this position that really turned my crank. I loved the sight of my cock splitting her pussy open, and sliding inside. Equally exciting was the pull back, as her thick lips dragged along my hard meat. It was the icing on the sexual cake, adding to the pleasure of her pussy's warm, wet embrace. \n\n\"Please, honey,\" Brosie begged. \n\nI increased my cadence, driving my hips forward faster, while still pausing on the backstroke. My head turned partway toward Sharon, who was still in the shadows, but no longer hiding. She leaned back against the wall in the hallway, masturbating furiously, with her bikini bottom pulled to the side, letting her fingers plunge deeper into her pussy. Her free hand was pulling on her nipples, which I was seeing for the first time, bared by lifting her boobs out of their cups. I was pretty sure she knew I could see her, but she was too far gone to care.\n\nEvery time I drove my cock into Brosie, she moaned loudly as our bodies collided with a sharp slap. I reached forward, mauling her swinging breasts, and fucking her faster, listening carefully for my sister's sounds, which were just barely audible over Brosie's own pleasure indicators. \n\n\"Oh, baby, that's so fucking good,\" Brosie growled, glancing over her shoulder. \"I love it! Fuck me harder! I'm gonna cum, baby! I'm gonna cum!\" \n\nAll the added excitement... getting caught with my dick in Brosie's mouth, twice, and now watching my sister finger herself while watching me fuck... well, it had me pretty close to my climax, as well. I drilled Brosie deep, slamming my hips forward harder. Her breasts danced in my hands, and she leaned up against me, turning her head for a desperate kiss.\n\n\"Your sister...\" she whispered, as her lips left mine. \"Watching us! Fuck me harder!\"\n\nI wondered if she might notice Sharon, as I had. My sister had inched forward, perhaps unconsciously, and was now in full view, masturbating feverishly. We were all feeding off the excitement. The watched, watching the watcher.\n\nI went into overdrive, fucking Brosie harder still, causing the sounds of sex to echo through the house. We were all moaning now, expressing our extreme arousal at the situation. Brosie came first.\n\n\"Oh, oh, oh, oh, oh... OH! OH! OH FUCK! OH, FUCK, HANK! YESSSS! I'M CUMMING! YESSSS!\" she screamed, shuddering in my grasp. I could almost hear Marina rolling her eyes out by the pool, as her mother screeched through an orgasm on my dick.\n\nThen again, my sister had her hand jammed between her legs, not fifteen feet away. Perhaps Marina might be doing the same out there.\n\nBrosie slid forward, off my shaft, and dropped to her knees, resuming her earlier actions, and licking her own delicious juices clean, then inhaling my cock once more. She sucked with a desperate fury, and it pushed me past the point of no return. \n\nBrosie had my cock in her hand, jerking it hard, as I exploded, shooting ropes of semen that hit her on the neck, sending streams of goo flowing down over her chest and breasts. I was grunting through the pleasure when I heard my sister in the hallway, whimpering through her own orgasm. She slid down the wall as her legs gave out.\n\n\"Oh, my god,\" I heard her breathe, slumped on the floor.\n\n\"You okay, Sharon?\" Brosie asked, licking my cock clean.\n\n\"Yes,\" my sister moaned. \"Just embarrassed. I can't believe I did that, in front of my brother. We've never even had a conversation about sex.\"\n\n\"Well, don't tell Mom, or she'll never let you visit again,\" I advised, pulling up my shorts.\n\n\"Yes. That's a good point,\" Brosie laughed. \"I'm in enough trouble with your parents. She'll think it's a regular nudist colony over here, and all we do is have sex. She wouldn't be far off, but she doesn't need to know that.\" She ran her hands over her fabulous breasts, massaging my spunk into her tanned skin. \n\n\"I'll be keeping it to myself,\" Sharon groaned, rolling upright. She turned her back, hiding her bare breasts while she slipped them back into the cups of her bikini top. She likewise corrected the placement of the bottom half, covering her pussy, before she turned around. \"I'm sorry. I didn't mean to watch, and invade your privacy.\"\n\n\"Sharon, if I was that concerned about privacy... \" Brosie replied, searching out her discarded bikini, \"... I shouldn't have started getting frisky in the kitchen.\" She was still naked, and making no effort to cover herself. \n\nWith the tiny garment in hand, she kissed me softly. \"I'm going to take a quick shower, honey. Can you start lunch? I'll be right back.\"\n\n\"Of course,\" I nodded. I watched her swing her hips as she walked out, wiggling her beautiful ass. That's understandable. Sharon watching too? That was a little different.\n\n\"Hey! Get your eyes off my girl!\" I giggled, warning Sharon playfully.\n\n\"Right. Sorry,\" she smiled, shaking her head. \"I don't know what's gotten into me today.\" She paused, and made eye contact, grinning wider. \"You do look good together, though. My little brother, the stud. Who knew?\" \n\n\"My sister, the voyeur,\" I grinned back.\n\n\"You're better than porn,\" she nodded. \"The smells... Mmmmmm. So hot.\"\n\n\"My sister, the horny... You like porn?\" I asked, a little surprised. Sharon always seemed so proper.\n\n\"What's not to like?\" she asked back. \"I'm not a virgin, and I'm no nun, despite Mom's best efforts. If she knew it all? Well, she might just banish me, too.\" \n\n\"Well, I won't tell her if you don't, so the problem is solved,\" I smiled. \"Care to help me with lunch? I'm starving now.\"\n\n\"Yeah, I'm a bit hungry, too,\" she smiled back, casting a quick glance at my crotch. \"Orgasms make me that way.\"\n\nI wondered how much I might now be a part of her sexual fantasies. I had used her in mine for years, before moving on. Now that she'd seen me naked, having sex, I suppose it was natural that she returned the favour.\n\nTogether, we worked silently on repairing lunch for everyone, until she giggled and bumped me with her hip.\n\n\"Damn, Hank! That was so hot! You're so lucky to have each other!\"\n\n\"I agree,\" I heard from behind, as Brosie returned from the shower, freshly dressed in a nice tank top and shorts. She slid up behind me, and wrapped me in her arms. \"So lucky. Being in love is wonderful.\" \n\nI had to agree. I could feel the soft fullness of Brosie's chest pressing into my back, a sensation I enjoyed greatly, and her hands were playfully headed south, down my chest and across my stomach. Her fingers danced over my crotch.\n\n\"How's my little friend?\" she giggled. \"Taking a nap?\" \n\n\"Ooooo, don't say nap!\" I laughed, turning in her arms. \"I'm still standing, but I won't be for long if you keep that up.\"\n\n\"Well, if you lay down, I can promise you won't be getting any sleep,\" she teased, giving her boobs a little shake for my eyes. \n\nI glanced at my sister, who was leaning back against the counter, her arms crossed as she watched us flirt unapologetically. She rolled her eyes and giggled. \n\n\"Hanging out here is gonna make me diabetic,\" she laughed, and went back to building sandwiches. \n\n***\n\n\"Mom!\" I smiled, as I opened the door. \n\n\"Henry. Would it be okay if we talked?\" she asked. Her expression was serious. \n\n\"That depends. Where's Dad? You're not planning on kidnapping me, are you?\" I laughed, hoping a little humour might break through.\n\n\"Your father doesn't know I'm here,\" she replied, unfazed. \"May I come in?\"\n\n\"Well, that depends, too,\" I answered, crossing my arms. \"Is this going to be a continuation of your previous argument, or do you really want to have a conversation? If you're willing to listen to my answers... really listen... then I'm willing to answer your questions. Does that sound fair?\" \n\n\"Yes,\" she nodded. \"I'm willing. May I come in?\"\n\n\"Please do,\" I smiled, stepping aside to let her in. I closed the door behind her.\n\n\"Is Mrs. Castellanos home?\" she asked quietly, looking around. \n\n\"Ambrosia,\" I corrected her, \"is out shopping with Marina. Girl's day out.\"",
        "\"I see,\" she said coldly. \n\n\"Be careful, Mom,\" I warned her. \"You asked to talk to me, remember? I asked you to leave once. Don't make me do it again. You have something you wanted to say. I want to hear it.\" \n\nI sat quietly, on the other end of the couch, looking at her. She was staring off into space, clearly trying to find the words. At last, she turned. When she saw me watching her, she smiled weakly, and looked down.\n\n\"I miss you,\" she said softly. A tear ran down her cheek. \"I miss my baby.\"\n\n\"I miss you, too,\" I replied. I didn't like seeing her upset. I knew it was me that upset her, but I wasn't about to capitulate, merely to make her happy. There had to be a way to talk things out. At least, I hoped there was.\n\n\"Come home, please?\" she asked. \n\n\"I don't think that's going to happen, Mom,\" I told her. \"I'm happy here. We're happy here. I'd like very much to be welcome, again, but I don't see moving back home as a likely outcome.\"\n\n\"You don't need us anymore? You don't love us anymore?\" Mom sniffed, wiping her eyes.\n\n\"Don't be ridiculous, Mom. Of course, I still love you. I have grown up, however, so I don't suppose I do need you as much as I once did. You've done your job. I'm not a little boy anymore,\" I smiled. \"You'll always be my Mom.\" \n\n\"Yes. Always,\" she repeated.\n\nWe sat for over a minute in silence. Clearly, there was much more to say, but she was having trouble saying it. I ventured forth.\n\n\"Mom, if I had a girlfriend, who was, oh, let's say twenty years old, and we wanted to be together, would you be this upset?\" I asked.\n\n\"Oh no, you don't,\" she answered. \"You're trying to get me to admit I have a problem with Mrs. Castellanos because of her age.\"\n\n\"Indulge me, please?\" I added. \"Hypothetically, if I had a girlfriend, older than me, by just a year or two, and we were having sex, and in love, and wanted to be together... What would you say?\" \n\n\"Fine. You want an answer?\" she replied, verging on anger. \"I'd say you were too young. You can't even know what love is yet. Sex is one thing, but love is another.\"\n\n\"Yes, I'm just a stupid kid,\" I shook my head. \"I can't possibly know what love is like... but I can add, just fine. Sharon is nineteen. I'm eighteen. You're thirty-nine, just a few months ago. It seems to me that you were not much older than me when you got married to Dad, and had Sharon within a year. Correct me if I'm wrong here. How can you be upset with me for doing the same thing you did? Unless you feel Dad was a mistake? Were Sharon and I mistakes, too?\"\n\n\"I don't care for your insinuation, young man,\" Mom said sharply. \"Of course, your father was not a mistake, and neither was having children. I just feel like you need more time.\"\n\n\"Is this knowledge of experience something that arrives by magic, or is it delivered?\" I asked. \"Should I be watching for the UPS driver?\" \n\n\"Sarcasm is disrespectful,\" Mom reminded me.\n\n\"I'm just not sure I see the difference between what you did, and my situation,\" I told her. \"If you're honestly not concerned about the age of my girlfriend, then the situation is the same. Did Grandma kick you out of the house, too?\"\n\nSeveral seconds of silence followed. I could see her chewing on her response, trying to maintain her earlier assertions that age wasn't the issue. At last, she had to admit it.\n\n\"Alright, so let's say age does have something to do with it,\" she relented.\n\n\"So, if I was having sex with Marina, that would be fine?\" I prodded.\n\n\"What? You're fucking her, too?\" Mom gasped, standing and staring at me in horror. \"How could you do that to Mrs. Castellanos?\"\n\n\"I'm not,\" I laughed. \"I just wanted you to see there were worse things I could be doing. I love Brosie. I'd never cheat on her.\"\n\nMom sat again, fixing me with a cold stare.\n\n\"She's too old for you,\" she finally voiced. \"If a woman has a child of your age, then she's too old for you.\"\n\n\"I see,\" I nodded. \"So, how many years apart is permissible? Is there a formula?\"\n\n\"Please, can we do this without the sarcasm?\" she sighed, tilting her head back and closing her eyes. \"It's hard enough to get through this. I'm trying to explain why we're upset.\"\n\n\"And I'm just pointing out that your stance on this appears to be very arbitrary,\" I replied. \"Surely something as difficult to define as love must deserve some leeway.\"\n\n\"She's old enough to be your mother,\" Mom retorted, tiredly. \"That's a lot of leeway.\" \n\n\"Yes, but she's not my mother,\" I countered. \"You're my mother. This world is full of women who are not my mother. I only love one of them.\"\n\nThere was another pause, this one longer and more intense. At last, she spoke.\n\n\"You really do love her, don't you?\" she asked, softly. \"This is not just sex. You've given this some thought? What are you going to feel in ten years, or twenty?\"\n\n\"You don't really expect me to answer that, do you?\" I scoffed. \"Can you answer those questions? Can anyone? How can anyone know what ten or twenty years will do to their feelings? All we can say for sure is how we feel right now, and I know that I love her, and I'm committed to her. We've talked about this. We know there will be changes, and we'll deal with them as they come.\"\n\n\"In twenty years, Mrs. Castellanos will be an old woman. I wonder if you'll be so interested in her body when those breasts are hanging down to her knees,\" Mom sneered. \n\n\"Mom? Really? Meow!\" I laughed.\n\n\"That was a little catty, wasn't it?\" she giggled, and hung her head. \"Honey, I hope you know that I'm not saying I don't trust you.\"\n\n\"Just my judgement,\" I continued. \n\n\"This is a big change for me,\" she explained. \"It seems like just yesterday I was changing your diapers, and now, you're having sex with a woman who could be my sister.\"\n\n\"Your slightly older sister, actually,\" I jabbed.\n\n\"Oh god!\" she moaned, resting her head in her hands in exasperation. \"I'm not going to win this, am I?\" \n\n\"It's not a contest, but I don't suppose you will get the result I know you want,\" I said, rubbing her back. \"I'm not going to change my mind about Brosie. If you want me to be a part of your life, you're going to have to accept that. The heart wants...\" \n\n\"... What the heart wants,\" she completed the clich\u00e9. \"Yeah, I've heard that. I might have even said it, myself. I'm not sure acceptance is going to happen, but I think I can learn to live with it. I also think I owe you an apology.\" \n\n\"No, you don't. I know your motives are pure,\" I smiled, \"but you might want to apologize to Brosie. You were pretty hard on her. Your words hurt.\"\n\n\"I know. I didn't mean to,\" Mom acknowledged.\n\n\"Yes, you did,\" I corrected. \"Those were angry words, meant to injure. I know you wouldn't normally do that. I know it was just an emotional response, but that doesn't excuse them.\"\n\nMom looked at me, examining me closer.\n\n\"Maybe you have grown up, more than I thought,\" she smiled weakly. \"That's a very mature observation.\"\n\n\"You taught me well,\" I nodded.\n\nBefore Mom could say anything further, the front door opened, and in walked both Castellanos women, giggling amongst themselves. The laughter stopped when they saw my mother sitting on the couch beside me. \n\n\"Hi, honey,\" I chirped, smiling at my brunette bombshell. \n\n\"Darling,\" she returned, her eyes sparkling. Those eyes took in my mother's presence without changing expression. \n\n\"Get anything for me?\" I asked, halfway across the room, on my way into her arms.\n\n\"Absolutely,\" she smiled back, wagging the small pink bag at me. She put it aside, then kissed me softly. \"I'll show you later. Hello, Carol.\"\n\nMom looked up at me, then stood.\n\n\"My turn to act like an adult,\" Mom said, and stepped over to stop in front of us. \"Ambrosia... Henry and I have been talking. He's helped me see that I owe you an apology. While I may have difficulty with this situation, Henry is an adult, and can make his own choices. My behaviour has been inexcusable, and I hope you'll accept my sincere regret for my insult. I was upset, and lashed out... \"\n\nMom's apology was cut short when Brosie wrapped her in a warm hug. It took a few seconds for Mom to reciprocate, and the two women held each other in silence that said more than a thousand words could convey. \n\n\"I'm sorry,\" Mom sniffed, feeling the emotions well up.\n\n\"I know, and I understand,\" Brosie said softly. \"Thank you.\" \n\n\"You'll take good care of my baby?\" Mom whispered.\n\n\"Always,\" Brosie replied. \"We'll take good care of each other.\"\n\nAgain, they hugged, and Brosie said something that I didn't hear. Mom nodded, and the two of them walked slowly out to the pool deck.\n\n\"Hank? Could you bring us both something cool to drink,\" Brosie asked me, quietly. \"Your mother and I are going to talk for a few minutes.\"\n\n\"Sure,\" I nodded, and peeled off into the kitchen. By the time I made it out to the pool, Mom and Brosie were deep in conversation, and it was surprisingly civil, given the last time they spoke. \n\n\"Here you go,\" I smiled, placing the tray on the table where they were sitting, under the sun umbrella. \"Iced tea for two, and I brought you some upgrades, if you wish to make them a bit stronger. You've got some gin, vodka and rum.\"\n\n\"My goodness!\" Brosie laughed. \"Such initiative! The service at this bar is so good, and the servers are so cute. I won't forget this, when it's tip time!\"\n\nMom laughed, a bit uneasy at the innuendo being offered by my lover. Still, she wasn't angry, and I left the two of them to their conversation. When I reached the house, I turned, and saw Brosie adding some rum to her drink, then Mom's as well. \n\nI don't want to give the impression that I was standing at the window, watching them while they talked, but curiosity and concern had me checking on them frequently. I was happy to see them talking freely, and ecstatic to see smiles on both their faces. It would seem that Mom was honest in her apology, and beginning to find acceptance in her heart. \n\nAfter the better part of an hour, I stepped out onto the deck again, and Brosie saw me. She smiled. \n\n\"Woo hoo? Waiter?\" Brosie giggled, fluttering her fingertips at me. She also blew me a flirty kiss. \"We'd like some more, please.\" \n\n\"Yes. More,\" Mom snickered. \n\n\"Of course, Madame,\" I laughed, playing along. Their glasses were empty, on the table, beside the empty pitcher. On the tray sat three empty bottles. I did the math in my head. \n\nHoly shit! They're wasted?! All the booze is gone, along with the iced tea. \n\nI had noticed that every time I saw them, they were topping up their drinks from the bottles first, and the pitcher second. I imagine the drinks just kept getting stronger and stronger, until they were both blitzed.\n\nWhen I returned with more tea, Mom spoke up.\n\n\"Hey, waiter, where's the rum?\" she slurred.\n\n\"I think you've both had enough rum for today,\" I laughed, wagging a finger at them.\n\n\"Great. Nowhe makes a responsible judgement!\" Mom replied, shrugging her shoulders. \n\n\"Hey! I thought we had an agreement?\" Brosie said, pouting her pretty lips.\n\n\"Oh, yes, of course we do,\" Mom nodded, patting Brosie's knee. \"I was just making an observation. You know... I don't usually imagine my son having sex... It's just not something a mother does.\"\n\n\"Agreed,\" Brosie smiled. \"I have a hard time thinking about Marina with guys.\"\n\n\"Yes, thanks for reminding me that Sharon is sexually active as well,\" Mom sighed. \"My children aren't children anymore.\"\n\n\"No, they're not,\" Brosie purred. \"This wonderful, strong young man is definitely not a little boy, anymore.\"\n\n\"If you're going to say things like that, Ambrosia,\" Mom added, \"I'm going to need more alcohol. I'm pretty sure I'm not drunk enough to handle it.\"\n\n\"Maybe not,\" I stepped in, \"but you're certainly too drunk to drive. Come on, Mom. I'll take you home, before things get out of hand.\"\n\n\"If you take her home, how will you get back?\" Brosie asked. She was at least as intoxicated as my Mother. \"You have to come back. I've got new lingerie to show you, and it doesn't cover much. You don't want me to catch a cold, do you? I'll need you to keep me warm.\"\n\n\"I'll talk to Marina, and ask her to pick me up,\" I suggested. \n\n\"Hmmmm,\" she giggled, standing unsteadily. \"Yes. That would be better. I can't possibly drive.\"\n\n\"Just go put on that lingerie, and wait for me in the bedroom,\" I smiled. \"I'll be back before you know it.\"\n\n***\n\nIt had taken a few minutes to get Mom into the car. Now, we were almost halfway to her home, and she still hadn't said anything. \n\n\"You're being awfully quiet,\" I said, glancing at her out of the corner of my eye. \"I usually have a hard time getting a word in edgewise.\" \n\n\"There's really nothing more to say,\" Mom replied, softly. \"I'm sorry. I know that we hurt you, and I know we hurt Ambrosia. I can see now that you care about her, and if we care about you, we should accept that.\" \n\n\"I appreciate that,\" I smiled. \"I also appreciate that you apologized to Brosie. It means a lot that you took responsibility for what you said.\"\n\n\"I apologize for what we both said,\" she added, touching my shoulder.\n\n\"Mom, I know you and Dad speak for each other in most things,\" I shook my head, \"but in this case, I think he needs to take ownership of his own insulting words. This is one time you can really only speak for yourself.\"\n\n\"I suppose you're right,\" she nodded. \"I'll talk to your Father, and see if I can get through to him, but you know he's pretty stubborn. It may take a while. I can't make any promises.\" \n\n\"I wouldn't expect you to,\" I allowed. \"All you can do is try. The rest is up to him.\"\n\n***\n\n\"You know, I still find this whole thing more than a little weird,\" Marina said.\n\nShe had picked me up about two minutes after I helped Mom through the door, just long enough for my Father to glare out the living room window at me. I waved to him as I got into the passenger seat of Marina's car.\n\n\"I think I'm going to regret asking this,\" I laughed, \"but what do you mean by weird?\" I know it was a stupid question, but I felt like talking.\n\n\"You mean besides the obvious? The part where you're younger than me, but sleeping with my Mother?\" she gestured.\n\n\"Yes,\" I smiled. \"Besides that part.\" \n\n\"Well, other than that,\" she giggled, \"it's perfectly normal. Nothing unusual at all. But, there is one thing I thought you should know.\"\n\n\"What's that?\" I asked, suddenly interested.\n\n\"Despite the unorthodox way I found out about you and my Mother,\" she explained, referencing our nude dancing party in the kitchen, \"I find myself liking you. You make my Mother happy. She deserves to be happy.\"\n\n\"Thanks, Marina,\" I nodded, but couldn't resist getting a shot in. \"Maybe sometime, your Mother and me can join you and your boyfriend, on a date?\" I suggested, in jest.\n\n\"Um, thanks, but no,\" she replied. \"That would bring the weird to new heights.\" \n\nWe arrived at home, and parked in the driveway. We were both still joking and laughing when we walked in the front door. \n\n\"Oh, thank goodness!\" Brosie called down from her position overlooking the living room. \"I was beginning to get worried. Are you coming to bed, honey?\" \n\nShe was wearing... well, it was a dress, of sorts, and she was right when she said it didn't cover much. Red, it was a lattice of lace panels, and skin tight. The panels that were a tighter, but still see through, weave, were bordered and connected by areas of interwoven, wide open bands. One of those open panels ran from her navel upwards, widening as it passed over the fabulous curves of her breasts. I could see her areolas through the weave, and up what passed for her skirt.\n\nI glanced at Marina, who was gawking, as open-mouthed as I was.\n\n\"Well?\" Marina said softly. \"Nothing unusual about that, right?\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nI'm sure there's more to come for Hank and Brosie, but that's up to you. I hope you enjoyed this chapter.\n\nPlease send me your thoughts, and cast those votes."
    ],
    "authorname": "ilikeithot6308",
    "tags": [
        "brunette",
        "mature",
        "older woman",
        "younger man",
        "romance",
        "voyeurism"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/immortal-gift-of-beauty-ch-04"
}