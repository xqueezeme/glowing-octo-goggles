{
    "title": "Gloria's Daughter Ch. 02",
    "pages": [
        "This is the middle installment of a three-part novella. It picks up right where the first part left off, which may make it a bit hard to follow for those who haven't read chapter 1. As a recap: Our narrator is Dennis, a three-times-a-month regular to forty-ish prostitute Gloria, who works out of the renovated garage of her house. When he accidentally met Gloria's college-age daughter, who hates her mom's occupation, he became smitten with the younger redhead's looks and verve, and asked Gloria to role-play as the girl. While pretending to be her daughter, Gloria implied much deeper emotions for Dennis than their business relationship would suggest ... \n\n***** \n\nSummer carried on and disappeared. If Gloria had any trouble replacing Harry the Guy With the Belt, she didn't tell me. But either she'd figured out a way to make up the income, or she'd simply decided not to worry about it, because she glowed brighter every time we saw each other. One Monday evening in late September, as I lay in bed with her, sheets pulled up to our waists, I gave in to temptation and let myself inch toward the forbidden subject. \n\n\"You seem a lot happier lately.\" \n\nHer fingers tickled idly at my chest, still damp from our exertions of a few minutes before. \n\n\"Well I would be, wouldn't I?\" she asked. \"With the Morality Patrol gone back to school.\" \n\n\"You've stopped smoking again, too. Or at least on days when I'm going to show up.\" \n\nShifting a little, she teased one of my nipples with her teeth. \n\n\"Totally your perversion's fault, mister.\" \n\n\"Oh? How so?\" \n\n\"I can't smoke if I'm going to play 'Brandy' for you. She hates cigarettes.\" Her face came back up next to mine, close enough to see the blush I felt rising through my cheeks. \n\n\"I haven't asked you that many times.\" But it was true that the only role-playing we'd gotten up to lately involved her pretending to be her daughter. \"And anyway, I never insisted on perfect realism.\" \n\nHer leg, bare and soft and smooth, slid up mine, bringing the knee across my thigh, then onto my other thigh, and then higher still until her crotch snugged up against my hip and her leg completely spanned my groin. \n\n\"I guess I'm just too much of a professional,\" she said, her tone thick like the heat of a summer day after rain. \"If I don't force myself to keep up my standards, who will?\" \n\n\"Hmm.\" The caress of her inner thigh across my cock brought a predictable response, even though our first screw of the evening had finished up just a few minutes before. \"That doesn't feel like what you're trying to keep up is standards.\" \n\nShe laughed and ground her vulva against me, giving the flesh over my hip a moist kiss with it. \"Should I dial things back and let us keep talking for a bit?\" \n\n\"How about if you dial it up and let us keep talking until things get too hot and heavy for conversation.\" \n\n\"I like that.\" Working her hips, she used her leg's soft inner surface to encourage my hard-on while simultaneously wetting my upper thigh with slick strokes of her bare, aroused pussy. One index finger moved in circles around my right nipple. \"What are we going to talk about while I'm dialing?\" \n\n\"You still haven't told me why you've been in so much better a mood the last few weeks.\" \n\n\"Well then obviously -\" She rolled up onto me, lowering the leg from my crotch to give her hand access, sliding her knee down between mine, and settling her steamy pubic juncture firmly against my thigh. Her chest came diagonally up across me, her left hand grasping and stroking my erection, right hand sneaking in between my neck and the pillow. \"- that's because I don't want to tell you.\" \n\nI pretended to pout, but it turned into a tremor and an \"ooh,\" instead as she swiveled her grip about my shaft and began damply humping my leg. \n\n\"Is it a, uh ... is it a ... nh, oh ... nice ... what was I saying?\" \n\nShe scraped my chin with her teeth, licked along my jaw, whispered into my ear. \"You were about to ask if it was a secret. And yes, it is.\" \n\nDamn, she's good. My brain was thinking it about her brain, my cock was thinking it about her hand, and my leg was thinking it about the dripping wet slit gliding up and down my thigh. \n\n\"How'd you know that's what I was about to ask?\" \n\nHer blue eyes bored into mine as her palm swirled the knob of my penis, squeezing out a bead of thick, lubricating fluid. \n\n\"Because we both know you've been tiptoeing around asking it for the last several Mondays, and we both know you're a bad boy for doing it, no matter how sweetly and innocently you finally managed to put it.\" Her smile kept me from being too speared by that. She was right. All summer, ever since she'd slipped and said more than she should have, I watched the stress leave her face, the light brighten in her eyes, the strength fill up her laugh. And all summer I had wanted to say something about it, and all summer I had felt her feeling me wanting to say something. \n\n\"Sorry. I know it's off-limits to - well, just sorry. I couldn't help myself. You're always beautiful, but it's just been shining through lately. How am I supposed to keep my mouth shut about that?\" \n\nHer smile deepened and she kissed me lightly. \"All you have to do is say it so it's not a question. Just say, 'It's nice to see you so happy.'\" \n\nThe caress and stroke of her hand continued, but had a hard time competing with that smile and the look in those eyes. \n\n\"It's nice to see you so happy, Gloria. Really nice.\" \n\n\"See how easy that was? Now say, 'You know what else would be nice?'\" \n\n\"You know what else would be nice?\" \n\nHer eyebrows rose inquisitively. Her hand gave a couple of firm, questioning jerks on my cock. \"No, I have no idea. Why don't you tell me something?\" \n\nVixen, I thought. Okay, then. \n\n\"What else would be nice would be for you to sit on my face and suck a giant load of cum from my cock while I kiss you between your legs until you scream.\" \n\nShe laughed. \"But I thought we were supposed to be talking until things heated up too much. And -\" Her hips worked more forcefully. \"- your thigh and I are having so much fun.\" \n\n\"Like I don't know you well enough to know you can talk around a hard-on,\" I said, pushing up with my leg to meet her. \"And I can certainly talk between licks.\" \n\n\"Mmm,\" she said, grinding down closer to my knee. \"But your voice will get all ... muffled.\" \n\n\"Boo. Puns like that aren't going to make me want to leave your mouth empty.\" \n\n\"Doesn't matter if it's empty.\" She crawled farther down until her pussy slid up and off my knee and her face neared my groin. \"Like you said, I have lots of practice talking with things in my mouth. It's a good way for a person to improve her diction.\" \n\n\"Oh God, you're brutal,\" I said. \"Please go down on me before I lose this erection from the pain. And swap ends so I can deal with some lips that aren't so smart-alecky.\" \n\n\"Okay,\" she said, grinning and then giving the underside of my glans a lollipop lick. \"You've convinced me ... slick talker.\" \n\nI groaned - then groaned again as she took me quickly all the way into her throat. \"Oh, fuck, Gloria.\" \n\n\"Ngud, hmm?\" she said around my shaft, eyebrows up and deep blue irises gleaming up at me. \n\n\"Very good,\" I breathed. \"Come on, get your tail end up here before you make me forget I want to eat you out while you're doing that.\" \n\nHer hands roamed up my belly and spread across my chest as she suckled root-deep on my cock. Then she curled her fingers and drew all ten fingertips claw-like back toward her, leaving tracks of electrified skin behind them as they went. Rising to hands and knees, but keeping her face firmly down in place, she swung around and deftly straddled my head. The smooth curves and valleys of her pudenda settled to my lips - engorged clitoris nestled in the upper mons, dainty inner labia bordering the dampness of her slit. Our earlier fuck had left her smelling of sex and sweat. \n\n\"Mmmgnn,\" she groaned around my cock as I feathered my tongue lightly around the hood of her clit and then latched on to give her a full, broad-tongued caress. Her lips retreated up my shaft, swirled back down, lifting and lowering at an increasing pace as I probed her labia and crease and finally sealed and sucked and licked to clean as much of the last fuck's leavings out as I could. \n\nHer mouth popped loose from me and she sighed, \"Denny ...\" before diving back to the base of my shaft. \n\nSex with Gloria on top never fails to blow my mind, whether she's screwing me or blowing me, whether we're going sixty-nine or even if she's just giving me a hand-job. She has this ability to be fully in control, and yet also completely responsive, so that her search for pleasure never falters in its honesty, but never interferes with her doing just what my body begs her to do to please me. In this case, as she humped my mouth, the hungry rhythmic movements of her pelvis rolled up through her spine to accentuate the bobbing of her head and jaw. Whatever my tongue did to delight her cunt, she took and amplified a thousand times in her sloshing, blissful trips up and down the length of my cock. \n\n\"Hhm, hhm, hhm ...\" she panted, tongue rolling down the underside of the dick that filled her mouth. Each whimper matched up to a forward-back tilt of her hips, surfing her clit across the tight-sucked circle of my lips. \n\n\"Yesss, Gloria,\" I said, with a kiss to her throbbing nub. \"Yes ...\" \n\nThe plan to carry on a simultaneous conversation disappeared pretty quickly. Her lips, their pressure and motion, the sweep of their firm, plush flesh up and down my shaft, disabled most of my conscious mind - and the part that wasn't absorbed in pleasure had plenty to do trying to return the favor. We made a humming, moaning circle of delight for a while without any more talk. \n\n\"Denny,\" she said, eventually, letting me loose just long enough to get the word out. \n\n\"Uh-huh?\" I asked, doing the same with her pussy. For a minute, we both concentrated on mouthing one another's sex organs, and while we both made sounds, none of them came out remotely intelligible. \n\nThen she raised her head. \"I want to fuck you.\" \n\nHer mouth bobbed back down, cheeks sucked tight around my shaft, tongue writhing a serpentine course along the top of my cock. Up and down and up and down she maneuvered her perfect oral talents, each dip a gliding stroke of heaven. With difficulty, I kept my own tongue circling her clit, swiping across it every few turns like crossing a \"t,\" trying futilely to keep up with her. \n\nAt last I gasped out, \"Are you close?\" \n\n\"Mm-hm.\" Suck. Suck. Suck. \"I had a little one already.\" Swirrrllll. \"Oh god, your tongue ...\" Slurp, gulp. \"I just want to ride you for a minute before I hit the big one.\" \n\n\"Uhhh,\" I groaned as she kept at it. \"So close ... I think I'll blow if you sit on me.\" Kiss, lick, tongue-fuck. \"Shit, so good, I don't know what to do ...\" \n\nShe lip-nibbled all the way up and off my rod. \"That,\" she said as I drew her swollen bulb in through my lips. Her hand gripped the base of my cock as her spit air-dried on it. \"That, about three more times ...\" \n\nOnce, twice, thrice I did as she asked. \n\n\"Oh fuck, Denny -\" She rolled off my face and in almost a single motion swept her hips around, straddled me, and enveloped the full length of my erection in her hungry, wet vagina. Grinding us together at our pubic arches, she threw her head back. \"OOHHHHHH-HUAAAHH!!\" \n\nCaught in the wonder of her trembling, orgasmic cunt - staring up at the beautiful tension of her throat, the full round sway of her breasts, and the utter bliss of her lovely, familiar face, I felt my floodgates start to open. It was an instant of perfection with no room for complaint that I was about to come up her vagina instead of down her throat like I'd asked. But in the split-second between the inevitability of climax and its actual start, Gloria exactly reversed the maneuver that had put me root-deep between her legs and got my cock all the way back into her throat. She bottomed out with her lips just as I came. \n\nClutching at her ass, I grunted helplessly, bestially, and thrust my face up into the dripping crotch that hovered above me. A champagne-bottle fountain of cum burst out of me as if trying to reach the ceiling, captured by Gloria's esophagus instead. The muscles of her throat gulped around the crown of my erupting penis like they might draw every ounce of fluid from my body. Her clit trembled and throbbed between my lips. Both of us groaned over and over, pressing our bodies as hard together as they would go. \n\n\"Mmm-mmm ... mm-hmmm!\" \n\nShe collapsed heavily onto me when the last twitch of my cock subsided, keeping it in her mouth even though she had to huff like a train through her nose to get enough breath. Her sweat rolled down my body and her musky sex-gloss coated my lips and chin. I was panting too hard to tell her how good it had been. \n\nEventually, she pulled her face away and turned herself much less gymnastically to snuggle in beside me. \n\n\"Whoosh,\" she said, her lips now just inches from my ear. \n\n\"Yeah.\" I let my eyes slip closed for a moment as her hand played across my chest. \n\n\"Denny?\" \n\n\"Hmm?\" The amount of effort it took to crack one eyelid told me I'd better open them both before I fell asleep. The look in Gloria's eyes made that more than worth it. \n\n\"Thank you for letting me be selfish and get you inside me there at the end. I was going to come either way, but it was incredibly better sitting on you.\" \n\n\"Ha. That wasn't exactly my worst experience ever at letting a woman have her way. And then you ended up giving me exactly what I wanted anyhow. It was a pretty happy detour.\" \n\nShe smiled. \"I didn't think you'd complain, or I wouldn't have done it. But I'm grateful anyway. You're a blessing.\" \n\nWe held each other for a while then, eventually moving into that proposed conversation - what I'd been doing that week, how she'd been thinking of getting a cat. She remained nestled in the hollow between my left arm and torso. At some point my hand on that side found and fondled her breast casually. Not long after, her right hand did the same with my soft, contented dick. We kept talking, too, as she worked me into full arousal, as I gently rolled her onto her stomach, then eased into place and entered her from behind. \n\nThe sex stayed languid, peaceful and tender, never reaching a feverish enough pitch to interfere with our verbal back-and-forth. Neither of us came by the time the quarter-hour warning chime sounded. \n\n\"Want me to get you there really quick?\" she asked. \n\nI kissed her neck and pulled out, moved off to lie next to her again. \"No, I think I'm good.\" \n\nRolling onto her side to face me, Gloria smiled and caressed my cheek. \n\n\"So,\" she asked, \"Brandy next time?\" \n\nA suggestive shimmer in her voice almost made me come all by itself. I rose up onto my left elbow to look at her and try to figure her out. \"Look, that sounds really good. But if her being back at school is helping lower your stress levels, I'd rather not remind you ...\" \n\n\"Stop it. I wouldn't have brought it up if it was going to bother me.\" She sat up cross-legged, breasts pert and perfect, vagina on unselfconscious display. \"Can I tell you something?\" \n\n\"Sure.\" \n\n\"I think I get off on it as much as you do.\" \n\n\"Seriously?\" \n\n\"Sure. When we do this -\" She made a gesture that took in the whole bed and ended with her hand sliding down my abdomen to tickle my pubic hair. \"- it doesn't feel naughty to me. I mean, it's if-the-neighbors-only-knew naughty, like everything about my job. But it's not oh-I'm-being-such-a-bad-girl naughty. I got past thrilling over this-is-so-wrong a long time ago. But when I'm being her for you, I get some of that back. And ... I get to say some of the things I wish I could tell certain other clients to their faces. Not you - I never think about you the way Brandy talks.\" \n\n\"Well that's a relief. You promise?\" \n\nShe ran a finger across her sternum, through the sweet valley between her breasts, then repeated the motion the other direction to make an 'X.' \n\n\"Cross my heart.\" \n\n\"Okay, then Brandy next time it is.\" \n\nWith a grin, she said, \"Good. Because I have some very wicked ideas about what she might do.\" \n\n* * * \n\nThe next week was a skip week, so I didn't pull through the alley to Gloria's driveway until the week after. Knowing that she had something special planned for our \"Brandy\" session made the two weeks go even slower than usual, and not for the first time, I questioned the decision I'd made very early on to never go past three visits a month. I chose three as my limit very deliberately, because it would always force me to endure a gap somewhere in the month and prevent my time with Gloria from becoming a week-in, week-out routine. \n\nBut there were a lot of months when three just didn't feel like enough, and a lot of months when fourteen days felt like much too long in between \n\nThis time, it just about drove me crazy. It's totally going to be worth it, though, I kept telling myself. Just like every time the wait makes you feel like this. \n\nAnd I was right. As I parked in front of her converted garage and turned off my car's ignition, I had that chest-squeezing, arm-tingling anticipation that you can only get from something marvelous and physical that you've waited much too long for. Look at me, I'm practically shaking like it's junior year again and Carla Philbert is unzipping my fly for my first blow-job. \n\nAt the door, after I knocked, I found myself waiting still longer. Gloria almost always answered her door very promptly - Brandy never did. \n\nFinally, it swung open, and there she was, blinking and looking dazed in a long pink nightshirt that said \"Princess\" in vertical white letters down the right side of her chest and abdomen. No bra, hair pulled back in a ponytail, a pencil stuck behind one ear and glittery lip-gloss on the gaping round \"O\" of her mouth. \n\nThen her features tightened into that furious essence of Brandy, fierce and tooth-gritting. \n\n\"What the fuck, now you're chasing me down at school?\" \n\nAt school ...? \n\nBefore I could puzzle it out, she grabbed me by the arm and pulled me through the doorway. \"Goddamn it, don't just stand there, somebody's going to see you.\" \n\nWith me inside, she poked her head out and looked both ways, then stepped back and slammed the door. The moment gave me a chance to look around, and it was my turn to blink and gape. \n\nThe boudoir was gone. \n\nShe'd redone the whole place as a dorm room - posters on the walls, textbooks and folders and spirals stacked on every open surface, teen jeans and t-shirts leaking out onto the floor from an overstuffed laundry bin. The bamboo screen that normally hid her computer area had been taken down, the computer and video equipment were removed, and the surface of her desk now held a microwave, several fast-food cups, and more of the ubiquitous notebooks and college texts. Most astonishingly, two twin beds sat where the satin-sheeted king should have been, one primly topped with a Laura Ashley comforter, the other rumpled and unmade, heaped across half its surface with a fluffy duvet in a lime-green cover. \n\nHoly shit, how much did all this stuff cost her? For a split second, I imagined her buying beds and decorations and textbooks to the tune of more money than I owed her for the session or even for the whole month. Then sense caught up with me. I'd never seen the rest of her house - the beds might have come from a guest room, the rest of the stuff from her daughter's closet. But she'd still done a hell of a lot of work remodeling for a two-hour appointment. ",
        "When I finally turned back to her, I thought I glimpsed and instant of happy pride in her eyes, though her facial expression stayed completely in character. \n\n\"What are you doing here? No, I know what you're doing here - how the hell did you find me?\" \n\nShe stalked around me and grabbed up a pair of jeans from the floor, started tugging them on one leg at a time while standing. The position let her nightshirt neckline hang down where I could look right in at her dangling, delightful breasts, and the delay let me get my head in the game. \n\nWorking on my composure, I said, \"I know a guy who knows a guy in the, ah, registrar's office.\" Shit, does the registrar handle housing or just classes? I'd lived off-campus all through college, not to mention the fact that it had been twenty years. \"I said I was your long-lost uncle and I wanted to surprise you, and a little bit of money convinced him that I was trustworthy.\" \n\n\"That fucker is so fired,\" she said, sucking in her tummy and pulling the waist of the jeans tight to button them. \"Wait, what the hell are you doing?\" \n\nI'd started unbuckling my own pants, and I didn't let her question stop me. \"What's it look like I'm doing? I'm getting ready to fuck you. And you won't get my buddy's buddy fired, because that will end up spilling the beans on how your mom pays for this dorm room and your tuition.\" \n\n\"No,\" she said. But her hands froze at her zipper and didn't pull it up. \"We're done. You agreed last time, that was enough. Our score was settled.\" \n\nKicking off my shoes and stepping out of the slacks, I started undoing the front of my dress shirt. \"Yep. Changed my mind.\" \n\nShe crossed her arms, hiding her nipples but squeezing the full swell of her breasts within the thin pink fabric of that shirt. Her face grew frustrated and anxious. \"No ... you can't just ...\" \n\nI sailed my shirt onto a bean-bag chair in one corner. \"I can't, huh? You mean, I couldn't email the dean of students your mom's website information? Or I couldn't email your mom the video I snuck of us when I was doggy-styling you last time?\" \n\n\"You videoed - goddamn. Fuck you, though. You couldn't send her that because she'd cut you off.\" \n\n\"Maybe she would,\" I said, tugging my socks loose one after the other. \"But maybe she wouldn't. Maybe you'd find out your mom needs my money more than she cares whether I screwed her daughter. Either way, you'd never be able to take the high ground with her in an argument again.\" \n\n\"You're such a piece of shit,\" she said. Steely defiance shored up her expression again. \"I'm not doing this. I can't do this. I've got a roommate, for Christ's sake. She could come back any second.\" \n\nI shrugged. \"Well, I'm not getting my clothes back on until you've put out. So if you're really worried she might come back, you'd better stop playing around and get to work.\" \n\nHer arms went down to her sides, fists clenching and unclenching as she stared at me. For a moment, her eyes flicked down to my crotch, where my cock strained in desperation to get out of my boxer-briefs. The sight put a curl of disgust in her upper lip. She squeezed her eyelids tight. \n\nWhen she opened them again, they all but burned me. \n\n\"Fine,\" she spat. \"And I guess I don't even get to say this time's the last time, do I? You're just going to keep coming back and blackmailing me into being your whore.\" \n\n\"See? You're a smart girl. You're going to do great at college. Now come over here and pull my underwear down and wrap your pretty little mouth around my cock.\" \n\nShe didn't immediately move. \"Did you at least bring condoms?\" \n\n\"Of course I brought condoms. I'm a very thoughtful guy.\" \n\nThat made her growl, but she walked over and got down on her knees. I couldn't help thinking, Holy fuck, this is amazing. \n\nFor twelve years, Gloria had been giving me the most amazing sexual experiences of my life. Better than losing my virginity. Better than my wedding night. Better than the best make-up sex after any fight of my marriage, and certainly better than any of the one-night stands after the divorce. But the last few months had been like summiting Mount Everest. Something about the mental layers of this Brandy game sent me into the stratosphere. Or maybe everything about it did the trick: imagining myself with someone as lush and young as Gloria's daughter but with all Gloria's long-practiced skills; having the freedom to be as crass and demanding as I could ever want to be; knowing how much relish she took in her role; appreciating how fantastically she improvised this character who was so different from her; hearing all the subtle clues she put into her voice and posture that told me even though her character despised and loathed the person I was pretending to be, a part of her horny teenage persona enjoyed being fucked like crazy in circumstances she had no control over. \n\nThe look on her face as she tugged down my underwear was a perfect example. Her mouth kept hold of its frown as my cock sprang free to wave itself at her, inches from her nose. But the tight clench of her jaw loosened, and the angry furrow of her brow softened, and her eyes blinked and took on a hungry glow along with their fire of resentment. \n\nShe opened her mouth and leaned forward as though hesitant, pausing to lick her lower lip with a bright pink salivating swipe of tongue. \n\n\"You want it and you know it,\" I taunted quietly. It made her grimace and glare. \n\nThen she closed her eyes and dove onto me as though having to force herself. \n\n\"Oh, yeah, Brandy, that's it,\" I said as she got her lips three-quarters of the way down my shaft. Brandy couldn't go all the way down like Gloria could - I always bumped the back of her throat before she got to my root, and sometimes she pretended to gag a little bit if I tried to go any farther. But the look of her sparkly lip-glossed mouth sliding up the veined cylinder of my cock somehow made up for the lack of deep-throating. \"Suck that thing, you pretty little college slut.\" \n\nShe bobbed, leaving me glistening on every outward stroke and trapping me in a plush oral embrace with every inward one. The fury went out of her brow, and her eyelids fluttered without ever quite opening. \n\n\"Holy shit, that's so good.\" The serpentine rolling of her spine plunged that beautiful face into and away from my crotch, bathing my dick in pleasure with movements that swayed her whole body, not just her neck and head. \"Don't tell me you don't love doing this.\" \n\nHer eyebrows squeezed down again, and a rough noise of anger came out to mix with the sloshing liquid noises of the blowjob. She sped up, clamped her lips harder, as though suddenly intent on getting it over as quickly as possible. \n\n\"Yes! Great, keep going ...\" Faster. And faster. \"Oh yeah. I'm just ... going to say, though ... mm, good ... I can totally see your nipples through your ... uuh ... shirt. You might as well stop pretending, and go ahead, and, nf, finger yourself ...\" \n\nHer bobbing slowed. The hand she had at the base of my shaft loosened, tightened again, then loosened further and dropped away to help her other hand struggle with the button of her jeans. Then it was back, gripping me hard as her fingers dove into her panties. Within seconds, she was panting through her nose and moaning around my cock. The quality of the blowjob declined considerably, but I didn't care. The look of her getting herself off as she sucked me felt better than the actual sensations along the flesh of my dick. \n\n\"Mmm - mmm, mmmm!\" she said, sliding spastically back and forth down my length. Her tongue writhed. Her finger and thumb constricted brilliantly around the base of my shaft, pulling up a hot, looming anticipation in the ducts and vesicles that led to my balls. \n\n\"Oh, god, yes, Brandy -\" I groaned and got my fingers in the hair at the back of her head. \"Yes, do it!\" \n\nThe hand in her crotch moved as frantically as her mouth did along my dick. Tremors of pleasure crashed across her face, tightening her forehead and the corners of her eyes. With every sharp, rapidfire breath she took, a pulsating moan built deep in her chest. Her ecstasy and power pulled me with her toward orgasm. \n\n\"I'm so close,\" I gasped. \"I'm going to come -\" \n\nSquealing around my cock, she thrust me all the way home into her throat, her entire frame bucking in climax. \n\nI unloaded into her like a firehose. \n\n\"Uhhhhh fuuckkk, Gl- ah, ah, Brandy!\" \n\nHer hands went around my ass and clutched me to her, driving her nose into my pubic hair as I throbbed and spurted deep into her fantasy-teenage esophagus. And despite almost saying her real name, that's where I was in that instant - wedged to my pubes in her daughter's mouth, teen idols watching me come down her throat from their posters up on the walls. \n\nAnd then with a choking gasp, she fell away backwards from me, before I'd even finished. A squirt of semen hit her right breast as she dropped to her ass on the ground. A couple more white globules tumbled exhaustedly to the floor between her legs. \n\n\"Fuck, Brandy.\" \n\nWith the last of my orgasm behind me, I lurched down beside her, grabbed her tight in my arms and covered her mouth in fierce kisses, tongue seeking hers and tasting the rich, lingering hint of my own semen on it. Her hands crawled up my back, and she returned the kiss with a passionate ambivalence, making little mewling sounds that might have been pleasure or might have been self-disgust. \n\nWe ended up making out on the floor for five or ten minutes before she got hold of herself and pushed me away. \n\n\"Your cum tastes like shit, by the way,\" she said, back to glaring. \n\n\"You could taste it? Seemed to me you finally got me all the way past your tongue - never did that before.\" \n\n\"You were still spooging on the way out. Lucky I didn't puke on you, but it was worth it to make you come faster and get it over with.\" \n\nI considered saying something about the deep-throating not having anything to do with how quickly I came. And it was really quick. Gloria and I didn't usually even get to the sex in the first five, ten, twenty minutes of a session. With Brandy, I seemed to be in one opening or another and blowing my wad quicker than I could have drunk a cup of coffee. Try as I might, though, I couldn't come up with any way to taunt her for getting me off so quickly, and it wouldn't have been part of the game to give her a compliment. \n\nWhen I said nothing, she got up with all her body language showing relief and added, \"Saved you the cost of a condom, too.\" \n\nI laughed. \"What, you think making me blow my load toot sweet means this visit is over with? You've got to be kidding. I'm going to warm up in a couple of minutes and fuck you in every corner of this room.\" \n\nShe'd been pulling the pink nightshirt away from her front and looking in distaste at the dribble of ejaculate on her right tit. Now she let go and clenched her hands at her sides. \n\n\"What? No.\" Looking around the room with stupefaction, she shook her head vigorously. \"I have a roommate. She's going to be back -\" \n\n\"Yeah, yeah. What I'm seeing is one bed that's perfectly made and your bed that's a slop-heap. Which means your roomie's a neat freak and probably anal about her schedule, which means you probably know exactly when she's going to come back.\" \n\nHer shoulders slumped. \n\n\"See?\" Standing up, I turned and stooped to retrieve a ribbon of condoms from my pants pocket. \"Let's start off in your bed and then get more creative once things are really going. With the shirt off, too. I want to see your tits naked.\" \n\n\"How did you know the messy bed was mine?\" she asked accusingly, as if it offended her for me to know. \n\nI pointed to the over-full laundry basket across the room. \"I've seen you in one of those shirts before, and if you're willing to leave your clothes looking like a disaster area, you damn sure wouldn't make your bed like you were in the army or working in a five-star hotel.\" \n\nThe logic appeared to annoy her even more. She stripped off her pink nightshirt, stomped to the bed, the red cascade of her ponytail swinging, and threw herself shoulders-first to lean against the headboard, legs together and quickly tucked under the comforter, arms crossed to hide her breasts. I walked over, smiling, dangling the condom strip like a pendulum. \n\n\"Come on, Brandy,\" I said, putting a knee up onto the bed, sliding in next to her. \"How many times have we done this? And you're still acting like I'm going to believe you don't want it?\" \n\nShe refused to meet my gaze. \"Fuck you.\" \n\n\"I'm getting to that.\" With a quick twist, I tore loose one of the condom packages, then reached across her to put the rest next to her cell phone on the nightstand. I made sure my chest brushed her shoulder as I leaned, but she continued her statue-like stare. Settling back, I reached a hand in to grasp her waist and nudge forward on it. \"Scoot down. Get your head on the pillow.\" \n\nShe did, moving her gaze to the ceiling instead of the wall. I watched her, loving the surly, post-adolescent pout she put on, and also loving the amazing degree of thought and control she used to create this fantasy version of her daughter. \n\nI ripped the condom package, rolled the contents onto my dick, which now wagged rigidly her direction from my crotch. \n\n\"You come every time I give it to you,\" I said, moving one foot over between her shins. Her legs tensed, then went limp. \"You've bitched and moaned and called me every name you could think of...\" \n\nGetting into place above her, I brought my second foot in and used it to gently slide her ankle to the side until my knees would fit between hers and I could use them to delightfully spread her thighs. Then I eased down face-to-face, latex-clad dick bumping its root against her mons. \n\n\"But you've never cried or asked me please not to come back. You're a smart girl, too smart to keep trying the same thing over and over again if you want the results to be different.\" \n\nShe glared at me through slitted eyes. \n\nI reached down between us to rub the head of my cock against her opening \n\n\"How about it? Do you want to try asking, 'Please don't fuck me. Pretty please?'\" \n\nWith a sneer, she tipped her hips and thrust up, taking me half inside before I knew it. I gasped a little. \n\n\"If I asked that and you went ahead, you'd be raping me,\" she said, bringing her heels up behind me to pull us closer. \"I'll play your trashy games with you way before I'd let you rape me.\" \n\nI dropped my weight down. She was already rolling her spine, screwing the shit out of me. \n\n\"Goddamn it, Brandy,\" I said, not cooperating with her movements. \"If you really think I'd rape you, that's a total erection-killer. Take that back.\" \n\n\"Ha!\" She rocked harder beneath me, a triumphant, angry grin on her face. \"I'm gonna fuck you so hard you won't be able to go limp, no matter what I say about rape. Called you every name I could think of, did I? Turns out I had a bigger gun in my pocket than you thought. Now you're not so happy getting fucked, and I'm the one in control.\" \n\nI tried to stay in character, tried to think of something cutting to say back, but she was really fucking me like crazy. \n\n\"Ah ... god,\" I groaned helplessly, thrusting back against her, \"that's so good ...\" \n\n\"Uh-huh,\" she said, circling her hips so I swirled in and out of her flesh, \"your raping prick doesn't care what you want, does it? It just loves it some teenage pussy.\" \n\n\"Glo-Brandy ...\" \n\nHer arms and legs gripped me tight as she put her whole body into working my cock. In and out her cunt gobbled and disgorged me, sweet and hot and tight and swimming with the liquid of her arousal. \n\n\"Too, uih, chicken ... to pretend you're a real bad guy, huh?\" \n\nI lunged and pounded, gritting my teeth at her sassing. \n\n\"You're just a giant chicken. A giant ... cock, uhhh ... you cock ...\" \n\nWith a moan, I opened my mouth to call out her name, whichever one my lips decided to form - my brain didn't have the control to choose. \n\nAnd then the cell phone rang on the nightstand between the two beds. \n\nAnd she reached over to answer it. \n\n\"What the -\" The shock completely froze me, but Gloria kept humping away as she swiped the screen with her thumb and put the phone to her ear. \n\n\"Yeah? Ngf, what?\" \n\nA voice on the other end said something. I blinked a couple of times, then put a scowl on my face and slammed powerfully into her. \n\n\"ghh! Kind of ... in the middle of something ...\" \n\nAnswering the phone? Really? You bitch! Gloria, you are so fucking brilliant! \n\n\"Seriously - hhhh - can't talk ... you know that guy I told you about?\" She held the mic end out away from her mouth and grunted, bucking against me as I ploughed away. The phone kept speaking. \"No, fff, uh, not the cute one, the asshole who ... yes, that one. Yeah, hhuh, I'm fucking him - right - now.\" \n\nShe trembled and shook, face clenching in orgasm. Then a giddy glow of triumph relaxed her features and she laughed wickedly. \"You want to talk to him?\" \n\n\"What? No -\" But she held the phone up to my face anyway. \n\n\"Say hello, Denny.\" \n\nAll I could manage was, \"Oh god ...\" which brought a \"Holy shit!\" from the other end of the line in a female voice. I was pretty sure it was Gloria's voice - she must have found an app that would let her record a message and play it back at a set time. But I only heard the two words before Brandy, cackling and moaning, lowered the phone back to her ear. \n\n\"Hanging up now - hahaha!\" She thumbed the red button and dropped the smartphone back to the nightstand. \"How do you like that, you big - chicken - fucker! Haha!\" \n\n\"Oh my god, fuck!\" I shoved deep and came, so hard and so long I could barely believe it. \"Uh! Jesus, damn!\" Blurt and splash after spurting throb Niagara-ed out of me. I was caught in a spine-stiffening orgasm the likes of which my blood-deprived brain certainly couldn't remember at that moment. \"Mmf, honey, so fucking good ...\" \n\nGloria wrapped her arms around me and ground us together as tight as she could, her body still quivering and taut. \"UH! Fuck, yes!\" \n\nThen, just like that, we were done, and she twisted and pushed and said, \"Okay, get off,\" and I rolled and she scooted and we ended up side-by-side on our backs, squashed together in the narrow twin bed looking up at the ceiling fan (which I thought spoiled the dorm-room facade a little, but after that orgasm, I really didn't care). \n\nWe panted for a little while. I resisted the urge to take her hand in mine. \n\n\"Okay, look,\" she said when she had her breath at least partly back. I turned my head. She got on her side, up on one elbow, to glower at me. \"No more of that shit where you try to get me to admit something, right?\" \n\n\"Ow,\" I said at the jab of her finger into my sternum. \"What's that supposed to mean?\" \n\n\"It means you're a dirty old man taking advantage of a teenage girl, and if I get worked up by the action and come, it's all from stress and physical stimulation. You've got my mom fooled into thinking you're a nice guy, but when you're with me, you're proving you're not.\" \n\n\"How so?\" \n\nHer eyes rolled. \"Really? You're going to ask me that? I mean, you supposedly like my mom so much, but here you are cheating on her with me.\" \n\nApparently, the blood had still not fully returned to my head, because I found myself getting confused about what was play and what was real, how I felt about her and what I should say to keep the game going. \n\n\"Well, uh ... it's not ... really ... cheating. We're not exactly in a committed relationship.\" \n\n\"Sure you are. You're in her no-condom club, remember? Supposed to tell her if you fuck anybody else, and then use rubbers long enough to make sure you're clean. Have you told her about screwing me?\" ",
        "I opened my mouth, but nothing came out. \n\n\"I didn't think so,\" she went on, smoldering. \"So you're a bad boy, and if you want to fool yourself into thinking I'm a bad girl, you just go ahead. But don't expect me to play along. I'll keep spreading my legs for you until I can figure out how to get rid of your sorry ass, but all the orgasms in the world won't get me to say I like it.\" \n\nAs the glow of sex faded, I found myself able to get my role-play footing back. \"All the orgasms in the world, huh? That sounds like a challenge to me.\" \n\n\"Hah. Dream on.\" \n\nI rolled onto my side too, so that I could face her and reach around to swat her ass. \"I don't have to dream. This piece of tail has me wide awake.\" \n\nShe looked down between us to see my cock stirring, still wrapped in its semen-swollen latex sheath. \"Yeah. How did I know that was coming?\" \n\n\"Must be learning something at college.\" \n\nWith a sigh, she rolled off the bed and stood. Even straight-shouldered and beautifully mimicking her daughter's haughty bearing, Gloria's body couldn't really be mistaken for a college girl's. Her modest breasts had held up to age okay, but certainly not with teenage pertness. The round swell of her belly and the kink of her waist showed too much maturity, her skin too many little telltale wrinkles. But somehow she had the energy and the fire. And while she was obviously no fresh-bodied teen, she still had a shape lots of women could only pray to Jenny Craig for. I could totally buy the package - which, technically, I guess I was doing. \n\nHands on hips, she said, \"So what am I going to have to do to get you out of here?\" \n\nI kept my eyes on her while stretching for the condoms on the nightstand, which meant I had to fumble around a little before I found them. Every second watching her defiant, delicious form got me harder and harder. By the time my fingers landed on the strip of rubbers, I had a full-fledged boner again. \n\n\"I think,\" I said, peeling the used one from my erection, \"that I want to fuck you on that pile of laundry.\" \n\nWith a flick of my wrist, I sent the little cum-filled balloon sailing across the room to plop right in the middle of the clothesbasket. Gloria's jaw slid open into a gape as a viscous runnel of my semen drooled out of the condom and down the front of a blouse, gooey white on soft powder-blue. Something genuine in her look of horror made me realize those were definitely her daughter's clothes, and that she'd expected to just hang or fold them back up after we were done. Then her mouth started to shape an astonished laugh, only to freeze and clamp down on the sound. Then something clicked and she was Brandy again. \n\n\"What. The. Fuck.\" She marched over to the basket, grabbed up the condom, scrunched it in her fist and then threw it at me. I ducked, and it splatted against the wall. Part of me felt bad about going too far, but another part of me spotted a playful flame in her blue eyes that said she was rolling with it and everything would be fine. She lifted the blouse from the clothes heap, staring at the pearly dribble that streaked its breast. \n\n\"What's the big deal?\" I asked, taking a couple of casual steps toward her. \"It was dirty anyway, right? Why don't you just suck the cum off, drop it back in the pile, and we can get to it.\" \n\nThis time, her dropped jaw was clearly deliberate, followed up immediately with a tooth-clenching scowl. \"Oh, no. I'm not lapping up your spew and letting you ream me over my own dirty-clothes pile. You want me on that basket, you lick this thing clean.\" \n\n\"Me?\" I asked, blinking. \n\nShe just thrust the jizz-spattered top toward me, spread across her hands. \n\nI tried to figure out what the asshole version of me would do. \n\n\"What's the matter, scared of a little of your own man-juice? Haha, this is good - Mister Big Man's all squeamish about sucking up a couple drops of cum.\" \n\nI took a half-step forward. She held the blouse farther out. Then, with a flare of inspiration in her eyes, she said, \"Tell you what, you lick and suck it up, and I'll even pretend to like it while you're banging me on the laundry.\" \n\nAll by itself, the taunt in her tone put enough real humiliation into me to make me do what she said. Add in the layer of Gloria pretending to be Brandy pretending to enjoy getting fucked in a heap of dirty clothes, and I was moving before I knew it. \n\nI grabbed the shirt from her and brought it up toward my face, meeting her I-dare-you gaze until it was almost to my mouth. Then I looked at the load of goo on the cloth and had a momentary shiver of distaste. It's not like I'd never tasted my own cum before, but this was cum that had been sitting in a lubricated condom for several minutes, and for some reason it was particularly unappealing. \n\nA glance up showed a gleeful smirk on Brandy's face, so I screwed up my courage and stuck the slimy patch of cloth in my mouth to suck. Cold, salty-bitter goo slid off the blouse and across my tongue, with just enough hint of latex and chemical aftertaste to make it really nasty. \n\n\"That's it, work some spit into it and really get it clean!\" \n\nI tried to leer with my eyes while sloshing saliva through the weave of the fabric. Gloria just watched and laughed like a teenager reveling in superiority over all of adulthood. \n\n\"Blah. There.\" I tossed the blouse to her, a great dark stain of spit where the semen had been. \"Clean enough?\" \n\nShe put it to her nose, sniffed lightly, and shrugged. Dropping it back onto the basket-heap of clothing, she turned her ass to me, keeping her eyes on me over one shoulder. \"Sure, mister cum-sucker. Now put one of those on and I'll hold up my end of the deal.\" \n\nAs I tore open another condom to obey her, Gloria knelt and got to her hands and knees across the laundry basket. She'd really piled it high, and the crest of the heap embraced her breasts and rib-cage as she nestled into it. Her ass, with that freshly marker-drawn heart tattoo, wiggled and rolled at me, flashing a bare, glistening slit and lovely mound. \n\n\"Come on, you spooge-drinking creep,\" she said, wallowing into the laundry, \"get it in here and see if you're as good at getting a woman off as you are at slurping up your own jizz.\" \n\nThe insults only inflamed me more, and I quickly knelt behind her, finished rolling on the condom, and got my tip aimed at her flush, swollen pussy lips. \n\n\"Oh, mister!\" she said at the touch of my crown, voice an artificial octave high. \"Is that your penis back there?\" \n\nI put one hand flat on the hard plane of her tailbone, guiding myself in with the other. \n\n\"Ooh!\" she cried out in a mocking porn voice. \"Oooh, it's so big and hard!\" \n\nThe sarcasm dripped as thick as her pussy-juice did, both of them driving me crazy. I took her by the waist with both hands. \n\n\"Get ready for the fucking of your life, you little cunt,\" I said. \n\n\"Yes, yes, ooh, give it to me!\" \n\nI pulled half out and rammed in. \n\n\"Oh, it's like a baseball bat inside my poor teeny teen pussy! What a stud man you are - oof!\" \n\nThe last sound wasn't entirely faked, as I smacked into her hard enough to scoot the whole laundry pile. Without giving her time to recover, I started fucking hard and fast. She kept her sweet, round bottom at a receptive angle, but didn't otherwise join in. Or rather, her hips didn't join in, but her vagina took me in with that incredible clench that she used to a mimic tight college co-ed fuck-hole. \n\n\"How's - this, Brandy?\" I asked as I laid it into her. \n\n\"It's soooo good,\" she husked exaggeratedly. \"Oh, gosh, mister, I'm coming already!\" \n\nShe tipped her head back and forth, swinging her long red ponytail. \n\n\"Oh yes, I'm coming so hard from your, nff, your big stiff cock.\" \n\nStill pumping fast, I leaned down onto her, digging my hands into the heap of her daughter's clothes. They felt soft and clean, at once beautiful and disappointing, because the fantasy of plowing into her atop a jumble of soiled laundry would have been that much better if they'd felt the part, if I could have dug up a handful and smelled the lingering girl-sweat and deodorant scent. \n\n\"Uh, yeah, Brandy. Uh, uh, you hot little cunt ...\" My dick slid in and out of her as fast as I could thrust, and now she'd started pushing back in time with my plunging jabs. \"Yes ... cunt ...\" \n\n\"Yes, yes, it's so big in my tight little pussy!\" The mocking edge faltered a moment as I drilled into her and made her gasp. \"Ogh -\" \n\nBreathing hot into her ear, with a series of firm pumps, I said, \"Yeah, you're starting to like that for real, aren't you?\" \n\n\"Oh, yes, of course, you're such a stud with your giant, auhh ... penis ...\" She'd started to quiver and pant now, and I kept working her as fiercely and steadily as I could. She rocked and twisted and shoved back in time. \"Oh, oh, oh, your penis ...\" \n\n\"Take it, Brandy,\" I gasped. \"Yes, take it, girl ...\" \n\nSuddenly, she gave a deep and womanly groan. \"Ahhh, god, Denny! Fuck me, fuck me ...\" \n\nHer head went down into the mounded clothes, muffling a scream of ecstasy. \n\n\"That's it - Brandy - you just pretend, just - like - that -\" \n\nAlmost without warning, my orgasm boiled up out of me and exploded. Gloria's movements had gone spasmodic, uncontrolled. Her snatch quivered loosely around me as I throbbed cum out against the latex barrier of the rubber, filling it up with so many bursts I thought for sure I'd feel the blowback against my pubes before it ended. Wordless female pleasure squealed out through the laundry as I kept coming and she kept coming and the sweat poured off us both to drench the clothes beneath us. \n\nWhen the last tremor of climax ran through my cock, I wrapped my arms around her and rolled us both off the basket onto our sides in the spill of clothing around it. We lay there panting, Gloria moaning softly, the blue blouse and a couple of other garments trapped against her breasts by my embrace. My erection softened and slipped out of her. Slowly we each got our breath back. \n\n\"Some, ah, really good acting there at the end, Brandy,\" I hushed into her ear. \n\n\"Shut up,\" she said, tightening her arms around mine. \n\nI didn't argue with her, but rested, sated, flush against the naked curve of her back with nothing but our mutual sweat between us. Eventually a sigh went out of her and her arms relaxed. \n\n\"So,\" I said when I thought enough time had passed. \"When's the next time you're going to be home to your mom's for a visit?\" \n\nShe breathed in, then paused for a minute as if trying to decide whether to be nasty or just answer. \n\n\"Thanksgiving.\" \n\n\"Mmm,\" I said, nuzzling her ear. \"Maybe I'll come over and give your juicy bird a good stuffing.\" \n\n\"No. No bird to stuff. My mom takes the holiday off, but she never cooks. We just sit around and argue or watch shit on cable.\" \n\n\"Really?\" It surprised me to realize that I'd spent the last twelve years, whenever Thanksgiving rolled around, imagining Gloria the picture of loving motherhood baking up a traditional feast for her beautiful daughter. \n\nShe nestled against me. \"My dad was a prick about Thanksgiving. Made her cook everything, and it all had to be perfect or he'd get pissed.\" \n\nThat's more than she's said about her husband in twelve years. What kind of asshole treats a woman like this that way? Or goes off and leaves her? \n\n\"So now she hates Thanksgiving?\" \n\n\"No, now she hates to cook it. I bitch at her about it because I haven't had a real Thanksgiving since I was nine, but she just tells me I should cook it then, and she'd be happy to eat it.\" \n\n\"So why don't you?\" \n\nShe sighed. \"I tried once, but I just ruined twenty bucks worth of turkey and burned the hell out of some rolls.\" \n\n\"Well did you ever try asking her nicely if she'd help you cook?\" \n\nA laugh snorted out of her. \"Do I seem like the asking-for-help type to you?\" \n\n\"I guess not,\" I said, squeezing her and kissing her cheek. \"Let me have my arm back, okay? I need to get up and piss.\" \n\nShe raised herself up off the arm I had beneath her, and I disengaged and stood, stretching. Gloria rolled over and looked up at me. \n\n\"What time is it?\" \n\nI glanced at the clock on the nightstand. \"It's - what? It's eight ten. Good god, was I fucking you so hard we missed the chime?\" \n\n\"What chime?\" \n\nWhen I looked down, she had a perfect teenage what-the-hell-are-you-talking-about expression on her face. All about her lay her daughter's clothes, damp with the sweat of our sex. \n\n\"Your, uh, mother has a chime that goes off. To remind us time's almost up.\" \n\n\"Shit, that's a good idea. I'll set my phone next time. And it really gets rid of you?\" \n\nI grinned. \"Hah, if you're really that anxious to get rid of me, why are you already planning for 'next time?'\" \n\nThat got me a scowl. \"I thought you needed to piss.\" \n\n\"I'm going,\" I said, turning toward the powder room. \n\nHer voice brought my head around after a couple of steps. \"Hey, Dennis?\" \n\n\"Yeah?\" \n\nShe was still flat on her back, head tilted to look at me upside-down. I couldn't read the expression. Then it went sharp again and she said, pointing, \"Take your damn clothes in there and get dressed so you can get out of here, and I can go back to studying.\" \n\nI walked back past her to my clothes strewn across the room. \n\n\"Sure, Brandy. Whatever you say.\" \n\n* * * \n\nBy 11:00 a.m., when I pulled up in front of Gloria's house, I felt about ready to keel over from exhaustion. I'd been up since four that morning after a long, insomniac night, and I'd swear my heart rate climbed steadily with every hour past sunrise. The line at the restaurant might as well have been a cardiac stress-test. Traffic was light between the restaurant and Gloria's, but I still forced myself to drive slowly and with extra care, for fear that my jittery arms and hands would send me crashing off the road if someone honked or a squirrel ran in front of me. \n\nIt's just going to be a couple of minutes. Knock on the door, wait, say hi, hand over the food, she'll be surprised and say thank you, maybe we'll talk just a bit. \n\nBut of course I'd had over a month of should-I-or-shouldn't-I arguments with myself, along with daydreams of being invited in for a chat or to actually share dinner. And the inevitable fantasies of being invited to stay after dinner. So nothing I told myself did anything to calm me down. \n\nUnbuckling my seatbelt with a shaking hand, I'd reached the point of hoping Brandy - or whatever her real name was - would open the door instead of Gloria. That would be quick. No chatting, no angst over whether she was about to ask me inside. Just a puzzled scowl and a handoff of the pre-made Thanksgiving dinner in its festively printed carry-carton. \n\nShe did make it sound like Thanksgiving was a lazing around day, I thought as I walked around to the passenger side of the car. It wouldn't be a surprise at all for her to make Brandy get the door. They're not expecting anybody.  \n\nOr what if they were? \n\nPopping open the passenger door, I looked up and down the street for any sign of approaching cars, but saw none. Just a chilly, breath-fogging Thanksgiving day along a quiet suburban street, some houses with extra cars parked in front, maybe - I couldn't tell because I never saw this side of the house. I had no idea how many parked cars would be normal here; my visits always took me in through the alleyway to her covered drive and finished-out garage. \n\nMaybe I should have gone that way today, too. They could have somebody coming over - her friend Delia, or some of Brandy's friends. I'd heard a lot about Delia over the years, and I knew the daughter had made some very close friends in high school, the kind she'd really hated to leave when going off to college. If I bumped into some other visitor, would it end up causing awkward questions for Gloria? \"Who's this guy bringing you Thanksgiving dinner?\" But no, she could always just say I was a massage client. They all buy into her massage therapy cover story. She seems pretty sure of that. \n\nBut ... it would definitely be less intrusive to ring at the back. There'd be no doubt about which side of her life this unexpected visitor came from. And it wouldn't seem like I was presuming I'd be welcome, even briefly, at the doorway to the personal side instead of the business side. \n\nUltimately, though, if I wasn't really enough of a friend to make a happy surprise of dropping off holiday food, that meant I didn't really understand where Gloria and I stood. It probably meant I'd bought into some professionally applied white lies - that I had been kept more walled off from the real Gloria than I knew. \n\nAnd if that was true, she might not even have Thanksgiving off. \n\nSo what made the decision for me was the horrifying specter of pulling through the alleyway and finding some other guy's car in her drive, maybe even seeing him come out straightening his tie and whistling. I knew that wouldn't happen. I knew Gloria really did think of me as a friend, if not even more than that. Someone special. She wouldn't lie to me about whether she worked the holidays. But paranoia just wouldn't let me have the confidence to test that certainty, and so I took the route that was maybe presumptuous and maybe risked me bumping into some other holiday visitor of hers. If that happened, it might be awkward, but it would work out okay. If the other happened - the guy in the driveway - I would be gut-punched. \n\nAs I made my way up the walk between her two tall elm trees, the front of the house said \"ordinary family homestead\" in a voice of reddish-orange brick and white trim. Charcoal shutters framed the windows, which showed only the slats of hanging blinds, and a finely polished door of dark wood stood centered behind the porch, an oval window with pebbly glass running from waist-high to hat-level. \n\nI heaved myself up onto the stoop and stood there taking deep breaths, fingers clenched tight through the handle-holes of the restaurant box. \n\nOkay. Just hit the doorbell and let things go from there. \n\nWith a little maneuvering, I lifted and turned the box until I could get a thumb out and press the round button for the bell. Just like always when you really want to know if a doorbell works, this one made no sound that carried out through the door, and I had to stand there fighting the urge to press it again. \n\nAfter a minute, a figure moved up to the rough glass of the front-door window, rendered hazy by the texturing - but too tall to be Gloria. \n\nThe door opened. \n\nThough I'd only seen her face twice, and she'd only seen mine the same number of times, I recognized her at once and saw that she caught up just a second or two later, her look changing from curious to suspicious as her dazzling blue eyes dropped from mine to the box and swung back up again. \n\n\"Why ...\" She stopped herself, crinkled her pretty nose, then started again. \n\n\"What are you doing here?\" \n\nI gave the box an explanatory heft. \"Sorry, I'm not trying to butt-in on your holiday. Your mom mentioned she didn't cook Thanksgiving dinners, so I got this to drop off for the two of you. I thought you might like some traditional turkey and fixings for a change.\" \n\nThe suspicion turned to bafflement, then to discomfort, as if she realized I was just there to be nice but she didn't want to believe it. \n\nHolding the box, and keeping my eyes off her tall, full figure in its sweater and jeans, I nodded back toward my car and said, \"You can just take this and I'll -\" \n\nBut the girl I thought of as Brandy whose name wasn't actually Brandy turned and shouted, \"Mom, it's for you!\" pushed the door to just a crack, said, \"She'll be here in a second,\" and fled. ",
        "Gloria showed up a moment later in a shapeless grey sweatshirt and matching pants, and the look of unexpected wonder as she saw the big restaurant carton flooded me with happiness. Just the way her eyes widened banished the stress and jitters and anxiety and put a glow in me that I had done exactly the right thing. Looking up from the box, she stood tiptoe as high as she could, held my shoulders for balance, and leaned over the food to kiss me on the cheek. \n\nFlush with pleasure and embarrassment, I said, \"I just thought, you know, when you said you never cooked for Thanksgiving -\" \n\n\"Of course,\" she said, settling back to her soles with a smile. \"This is so you, Denny. You're lovely.\" \n\n\"Anyway,\" I shrugged the box upward, \"I can hand this off or bring it in and set it down, and the two of you can -\" \n\nGloria laughed and stepped aside, pushing the door wider as she got out of my way. \"And that's so you too. Don't be ridiculous. You can't bring Thanksgiving dinner and not stay and share it.\" \n\nFrom around a corner inside, not-Brandy said, \"Mom!\" \n\n\"Hush, honey.\" Something occurred to her then, and she looked back at me and said, \"I mean, unless you've somewhere else to be - I don't mean to assume ...\" \n\n\"No,\" I admitted, \"my friends Bob and Leisha invited me to their place, but I went last year and it was awful. Kids hollering, Bob's father-in-law giving me a day-by-day breakdown of all his stock trades for the last month, vegan turkey substitute ... no can do.\" \n\n\"Good. The kitchen's through there and around to the left.\" \n\nMoving past her, I heard her shut the door behind me and found myself inside Gloria's house. \n\nLight flooded in from the right side of the entryway - the direction she'd pointed. A daisy-yellow living room opened up there, fireplace diagonally opposite me, couch with beaten-up upholstery facing the main wall to the right, where a mid-sized plasma TV sat atop an entertainment center. Gloria's daughter stood between the couch and coffee table with a book in her hand and a look of stymied frustration on her face. She stared at me as I took a couple of steps into the room, nearing the back of the couch. \n\n\"Denny, this is my daughter, Kaylee. Kaylee, this is Dennis.\" \n\n\"We've met,\" she said in a tone flatter than a frying pan. \n\n\"Yes, but that's not the same thing as being introduced,\" Gloria responded. \"Don't be rude.\" \n\nNot knowing what else to do, I said, \"It's nice to meet you, Kaylee.\" \n\n\"Yeah. Sure.\" Her eyes went from my face to the boxed Thanksgiving feast, tracking it as I moved on toward the kitchen, which I now saw beyond a pass-through bar that separated it from the living room. An ambivalence in her face said that no matter how aggravated it made her to have her mother's customer invade their home, she really had been a long time without a proper Thanksgiving meal, and couldn't help being lured by it. \n\nI made my way around the corner into the kitchen, done all in white cabinetry with a round four-seat table in the breakfast nook. The house appeared twenty or thirty years old - clean and well maintained, but hardly the most stylish place I'd been in. On one side of the room, the range and oven looked like original equipment, while the stainless-steel refrigerator two cabinets down was clearly new. On the other side, the sink and dishwasher had obviously not been replaced since the house was built. It looked like a kitchen where things were allowed to stay until they broke, though kept clean and polished in the meantime. \n\nThe microwave from \"Brandy's\" dorm room sat on one faux-granite counter, next to the fridge. \n\n\"So ... where do you want this?\" \n\nGloria had followed me in, a little farther back than arm's reach. She looked around at the counters and tables. \"I don't know - what do we have to do to it?\" \n\nI looked down at the printing on the box, despite having already read it five times in the car. \n\n\"It says an hour of reheating time. I guess the turkey will have to go in the oven or something.\" \n\nFrom the living room, Kaylee made an ughh! noise. I couldn't tell if it signified impatience at having to wait that long to eat, or at having to tolerate my presence the whole time. But glancing through the bar, I noticed she'd sat back down on the couch with her book and her frown, when she could easily have dashed away to her room. \n\nGloria put a hand on my shoulder and pointed next to the sink. \"Well, let's unpack it there and see what we're looking at.\" \n\nThe next hour may have been the happiest non-sex hour I'd had in fifteen years. I tried to offer to do the food prep myself so that she wouldn't have to cook, but she refused to hear of it, and from there we unloaded the carton and spread everything out and leaned side-by-side on the counter reading the instruction sheet together with her hand resting beautifully between my shoulder-blades. Once a game-plan came together of what to oven-heat and what to microwave and when, we got the turkey in the oven and found ourselves with nothing but time to wait. She pointed to a coffee-maker in one corner. \n\n\"Should I make a pot while we're waiting?\" \n\n\"Sure, that sounds great.\" \n\nLeaning to look through the bar, she asked her daughter, \"You want to come have coffee with us, Kaylee?\" \n\n\"No thanks.\" A dismissive hand waved the offer away with even a glance up from her book. \"Awkward enough already.\" \n\nGloria laughed and rummaged in a cabinet for a tin of coffee, a couple of mugs, and a sugar jar. \"Go on and sit down,\" she said, tilting her chin toward the table. \"This will just take a second.\" \n\nWhat I really wanted was to step nearer, take gentle hold of her by the waist, and move with her as she got the coffee going, so that I could smell her hair and the scent of ground coffee beans and feel close to her and caught up in her life. But I didn't, and to tell the truth, watching her move about the kitchen from my place at her table felt almost as good. \n\n\"Okay,\" she said, leaving the coffee to percolate and coming to join me in the breakfast nook. \"Sorry I don't have one of those Kurgig-whatevers that zaps the coffee out in two seconds. We're cheap and old-fashioned around here.\" \n\n\"I'm sure it's better than the crap that comes out of the machines at my work,\" I said, watching her slide into the chair adjacent to mine. Beautiful Gloria, her freckled face bare of makeup, eyes the blue of oceans seen from space, red hair a little tousled, as if she'd brushed it lazily this morning and taken no special care with it since. \n\n\"So how's your week been?\" she asked, looking as though the subject actually interested her. \n\n\"Pretty quiet. Half the office took the week off. Last week was a bear, though, everybody frantic to get enough ahead of schedule that a week off won't blow any deadlines.\" \n\nThe coffee-maker gurgled. With a mischievous grin, Gloria said, \"That's the advantage of being in my line of work. When I take the week off, there's nothing to blow.\" \n\n\"MOM!\" \n\nHearing Kaylee's squawk, the two of us broke up laughing. I tried to hold it in as best I could - I didn't want to give her any more reason to hate me, and I know teenagers can't stand to be snickered at by adults. But Gloria let loose without restraint, and hearing her, seeing the delight in her eyes, made it wickedly difficult to stifle my own laugh. \n\nThe coffee finished, was poured and stirred. We talked and sipped and caught up on the last week and a half. Holiday weeks were almost always skip weeks for me and Gloria, certainly if her daughter ... Kaylee, so strange that it wasn't Brandy ... was going to be at home. At some point, the surly teenager got up and went in to the refrigerator to get herself a soda, making the entire round-trip without ever casting her eyes our way, even though Gloria leaned in and whispered to me while she was walking toward the fridge. \n\n\"It's okay if you look at her ass. I won't be offended. She's got a hell of an ass, doesn't she?\" \n\nMy face went bright red, or at least felt like it. I also just about choked on my coffee. I really thought I'd done a better job at hiding what my eyes wanted to do than that. \n\nShe sat back up as Kaylee returned around the corner of the bar, carrying her soda can to the couch. Then, when the book went back up in front of her daughter's face, she put her mouth back near my ear and asked, under her breath, \"Do you wish I had an ass like that?\" \n\nNo, I thought, because then I wouldn't get to see the ass you've got now, and I really like your ass. But ... partly yes, too, I guess. Kaylee's got a pretty awesome butt. \n\n\"Let's, uh, talk about that later,\" was all I said, keeping my voice quiet as I could. She grinned and tapped my foot with hers below the table. Then she looked over at the kitchen clock. \n\n\"Turkey's almost done. Time to start getting the sides heated up.\" \n\nEverything came in its own microwavable or oven-safe container - gravy, mashed potatoes, corn on the cob, rolls. We got them into the appropriate cooking appliances, and then Gloria found the right serving dishes for everything. Soon we were loading it all piping hot onto the table. \n\n\"Lunch, Kaylee,\" Gloria said. \n\nHer daughter got up and came into the breakfast nook, an uncomfortable, uncertain expression on her face. \"Look, if it's okay, I'll just make myself a plate and take it to my room.\" \n\n\"No, it's not okay.\" Gloria's face and voice carried that firm, stern opposition parents can use with their children and nobody else can really match at all. \"We have a guest, and he's gone out of our way to bring us this wonderful meal, and -\" \n\n\"Yeah, because he ...\" The reflexive teenage interruption trailed off. Her mouth clamped down frustratedly. \n\n\"Because he what, Kaylee? Because he wants to get into my pants? That's pretty obviously not the reason he came over, right?\" \n\nSilence. Gloria let her face soften. \n\n\"Kaylee ... please?\" \n\nWith a grumbly expression but no further complaining, Kaylee moved over to the table and sat, taking the chair on the other side of Gloria from me. That put her as far as possible from my spot - but also meant we faced each other directly across the tabletop. \n\n\"Thank you, sweetheart,\" Gloria said, touching her daughter's hand. \n\n\"All right,\" I said. \"I guess let's eat.\" \n\nThe meal went better than I would have expected, given Kaylee's starting attitude. I managed to ask her about her classes and get some grudging answers, and when I put a little effort into follow-up questions, she apparently decided to relent and let loose with actual details. She was taking some crazy stuff - advanced calculus and computer and engineering courses that I wouldn't have touched unless my major required it. But she hadn't even declared a major yet, and got a bit defensive about that when I asked. \n\nGloria had told me her daughter was smart. I'd assumed she was being truthful about that. Listening to Kaylee talk, though, and watching her vibrant blue eyes, made it clear to me that Gloria had exaggerated nothing. She had the passion and vivacious articulation that you only find in brilliant youths - people whose minds are so sharp they can capture and analyze the whole world, but whose experience is still too limited to understand that there are blind spots in every analysis and limits to the reach of the mind. \n\nWe kept talking a good half-hour after we'd all gotten full. I barely noticed the food as I ate, working so hard to keep Kaylee's sudden openness from snapping shut again - and also half-high on the glow of appreciation in Gloria's eyes as she watched me interact with her daughter. It helped a great deal, I'm sure, that Gloria had gotten a bottle of wine out along with all the serving platters, and the three of us had put away most of the alcohol over the course of the meal. \n\nAt some point, though, the conversation reached a lull, and the diversion of whatever subject Kaylee had been discussing wrapped up and left her, and she seemed to realize that she'd come perilously close to sitting comfortably at a table having lunch with her mother and one of her mother's johns. \n\nHer mouth crimped a little, and she said, \"Well, I'm bloated. I'm going to take my book and lie down in my room and -\" \n\n\"Oh, no,\" Gloria interrupted. \"Denny brought the food, he and I got it ready, and you're going to put everything away and do the cleaning up.\" \n\n\"Mo-omm ...\" she whined. But the complaint only got her a commanding stare, so she rolled her eyes and stood up, sighing. \"Oh all right.\" \n\n\"I'll help,\" I said, standing up as well. \n\n\"Nope,\" Gloria said. \"You're going to go in the living room and strip down to your underwear, and I'm going to do something I've never done for you.\" \n\n\"AAH!\" Kaylee shrieked, almost dropping the turkey platter she'd lifted off the table. \n\nI'm certain I looked equally horrified. But Gloria just laughed at both of us. \n\n\"Get going, you two. I'll be back in a minute with my massage table.\" \n\nTwo people as different as Kaylee and I have probably never felt as identical an sense of relief as we did in that moment. When I looked at her, I saw her looking back, blue eyes full of oh-my-god-can-you-believe-she-just-did-that-to-us? \n\nThen she straightened up and came around the table carrying the turkey, her composure returning enough to let her say, \"I hate you, Mom.\" \n\nI went into the living room and stood there awkwardly. Gloria had disappeared somewhere into the back of the house, where I presumed the bedrooms could be found. It looked like a folding massage table could be set up either just in front of the fireplace (No way - Kaylee will have full view of that the whole time she's working on dishes) or along the front wall, between the entryway and the hallway that led back where Gloria had gone. I moved to the second choice, and tried to get my courage up to pull off my sweater and start unbuttoning my shirt. But even from this angle, Kaylee would be able to see me stripping as she went back and forth from the table to the interior of the kitchen. \n\nBy the time Gloria returned, carrying her folding table by its handle, I'd managed to get out of my sweater and shoes but nothing else. \n\n\"Well this is the slowest I've ever seen you undress,\" she said, lifting an eyebrow. \n\n\"Oh, come on,\" I said, glancing toward the kitchen. Kaylee made another trip to the table, looked over at us. \n\n\"Ugh,\" she said, picking up a couple of dishes and hurrying away. From around the corner, she raised her voice to continue, \"I'm almost done moving everything, and trust me, I don't want to look anyway.\" \n\nGloria pointed her eyes at my belt buckle and then down to the floor. \"Let's go. I'll have this thing set up faster than you can say 'cranberry sauce.'\" \n\n\"All right, all right.\" I worked at unbuttoning my shirt. True to her word, she flipped the table open, got its legs out and locked, and set it upright by the time I'd shucked the shirt and started on my pants. \"T-shirt off too?\" \n\n\"Up to you.\" \n\nMy eyes flicked toward the kitchen involuntarily. I couldn't see Kaylee. The table was bare. I left the t-shirt on anyway. \n\n\"Okay, so how do I ...?\" \n\n\"Just get on and lie on your tummy with your face in here,\" she said, patting the middle of the cushioned surface and then running her hand up to indicate the padded oval face-rest at one end. \n\nGracelessly, and with another embarrassed glance at the kitchen, I sat on the table's edge, lifted one foot and then the other, and rolled over onto my stomach, scooting and shifting until I had my face lined up with the head-rest's opening. \n\n\"See? Easy. Now close your eyes and relax.\" \n\nClosing my eyes was easy. Relaxing, not so much ... at first. \n\nGloria's hands came down and rested perpendicular to my waist, side-by-side at the small of my back. \"Come on, Denny. You can do better than that.\" \n\nI took a deep breath and willed my muscles to un-tense. \n\n\"There you go.\" I could hear the smile in her voice as she said it. Then her hands started to move. \n\nVery quickly, the remaining tension went out of my body and I found myself floating in darkness, as if the firm, gliding pressure of Gloria's fingers were my only connection to reality. She hummed lightly as she worked, but I couldn't identify any particular tune. Stress-knots and kinks in my sinews yielded before the power of her hands, bringing groans that I should have worried would be misinterpreted by Kaylee. But what Gloria was doing had me beyond worry. From my back, she moved up to my neck, then out across one trapezius and then the other, then around the shoulders and down each of my arms, then each of my legs. At some point, I realized that the noise of dishes and water in the kitchen sink had stopped - that Kaylee must have already finished and walked past us to her room. I found it didn't really make any difference to me. \n\nEventually, when I felt I was about to melt and drain away, Gloria patted one hand between my shoulder blades. \"Roll over.\" \n\nI did, taking care not to get too close to the edge, in case I fell off or unbalanced the table. Once I'd gotten on my back, she leaned over me, took one shoulder in each hand, and hooked her thumbs into my deltoid muscles right where the ends of my pecs joined up to them. \n\n\"Oh god.\" I'd opened my eyes when I turned over; now they rolled up into my head and had trouble focusing when they came back down. \"Ohh.\" \n\nGloria smiled and continued circling her thumbs deep into my aching flesh, driving away cricks and pangs that I hadn't even known were there. \n\n\"Listen,\" she said, moving down along my right arm, \"When I've wrapped this up, we can make some more coffee and sit and chat for a while, or watch some of the football game if you like. But I can't invite you to stay.\" \n\nI nodded, watching her work. \"Sure. That's not why I came.\" \n\n\"I just wanted to make sure you understood.\" \n\n\"Of course I understand. Kaylee would -\" \n\n\"No.\" Her fingers paused, thumb at the lower end of my bicep. \"Kaylee lives every day knowing her mom is a whore.\" \n\n\"Gloria ...\" \n\n\"I know you don't like it, but it's the word she would use. It's what she thinks about what I do, and compared to that, having a man I like sleep over would be nothing.\" Shaking her head, she returned her gaze and her attention to my arm. \"No, the reason I can't ask you to stay is, this is as far as I can go and still keep you as a client. I can accept a sweet Thanksgiving dinner as a gift from a customer. I can turn around and give you a massage as my own Thanksgiving gift back. But I can't take you to bed - to my bed - and still keep screwing you for money. I just can't. And what sucks most about that is, I really, really need you as a client. Not for the money, I could make that up somehow. But whenever I start doubting what I do, whenever Kaylee tries to insult me into quitting, I can think of you and I know she's a hundred percent wrong. Anytime I'm thinking I have a shitty job and it makes me a shitty person, I can fix it. All I have to do is look at my Monday evening calendar.\" \n\nI sat up and took hold of her forearm, putting my other hand on top of hers. \"Gloria, you're the last person in the world who should think of herself as shitty.\" \n\nWith a smile, she extracted herself from my grasp and pushed gently at the center of my chest. \"And that's exactly what I'm talking about. Lie down and take your massage.\" \n\nI did, but I wasn't ready to let it go. \"I thought you said you had lots of decent clients.\" \n\n\"I do,\" she said, pinching the meat between my thumb and palm with one hand, using the other to rub a thumb and forefinger slowly down each of my fingers in turn. \"And lots of annoying ones to balance them out, and a couple of real buttholes to pull me down if I let them. But nobody can tip my balance the wrong way when you're on its happy side, Denny. And if I bring you over here past the boudoir door, I'm going to have a really, really hard time leaving this side of the house for that one every day.\" ",
        "We could work something out. I could ... What? Support her financially so she could quit? Support her emotionally so she could cope with her work even if I wasn't part of it anymore? Of the two of us, she knew what either one of those would take, and I had no idea. \n\n\"Okay,\" I said. Gloria finished with my hand and laid it back down. The whole arm felt like a limp noodle, in the best possible way. Walking around the head-end of the table, she began working on the other side. \"But what if - just hypothetically, let's say - what if it reached the point where I decided I loved you, and told you so?\" \n\nShe laughed. One hand left my bicep to pat me on the cheek. \"You're so sweet. It wouldn't make the least bit of difference at all. Just like it wouldn't make any difference if I told you I loved you. And don't pretend you don't know why it wouldn't make any difference. Let's just be happy with how things are right now, okay? Because they're good, aren't they?\" \n\nI was on fire to grab her and pull her down into my arms. \n\n\"Yeah, they're great.\" \n\nShe finished my massage and we watched part of the game from her couch, with me following her lead when she put her stocking feet up on the coffee table. We didn't sit close enough for me to put an arm around her, but once in a while her toe inside her sock touched mine inside mine. \n\nAnd really, that was enough."
    ],
    "authorname": "IanSaulWhitcomb",
    "tags": [
        "prostitute",
        "daughter",
        "thanksgiving",
        "dorm room",
        "coed",
        "roleplay"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/glorias-daughter-ch-02"
}