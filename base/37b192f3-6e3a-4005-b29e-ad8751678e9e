{
    "title": "Home for Horny Monsters Ch. 25",
    "pages": [
        "Hey all! Annabelle here with the next chapter of HFHM!\n\nTo start with, this story is written chapter style. Book One started in Chapter One. Book Two started in Chapter 13 and goes until now. It would be best for you to start at either of those chapters to get caught up on what is going on!\n\nAlso, a quick note. I received several letters from readers after the last chapter that expressed sadness that the story was ending. It isn't! To clarify, the storyline of Book Two is ending in Chapter 26. Mike and company will return in Chapter 27, right here on Lit, so make sure to follow me to get notifications when it posts. I always update my profile on the day I upload it here (barring technical difficulties).\n\nAs always, thank you so much for your comments, reviews, and letters! I don't always respond, but I do read all of them. The readers here on Lit really are the best and you consistently inspire me to get better and keep writing!\n\nThat being said, it's time for the forces of good and evil to converge on poor Mike's front lawn.\n\nIn the Eye of the Storm\n\nMike realized his mistake as soon as it happened. Upon walking out the main entrance, they had stopped long enough for Beth to bid farewell to Asterion. The group all stood at the edge of the reflecting pool, their shortcut back to the house. When Beth rejoined them, Tink counted down from three and they all jumped in at the same time.\n\nThat's when Mike remembered that the magical shortcut would take them all to the downstairs closet. Not until the water soaked through his shoes did it occur to him that they all weren't going to fit.\n\nThe closet door blew off its hinges, the tide of water scattering everyone across the floor. Mike was able to grab the frame of the door, sliding sideways out into the front room. He stuck his arm out and was able to grab Beth, pulling her out of the way. Abella, Tink, and Sofia crashed into the wall opposite the closet, knocking loose chunks of plaster. Tink was crushed between the others, and the stream of profanity was quite colorful.\n\n\"Bad words!\"\n\n\"So many bad words!\"\n\n\"You're grounded!\" The fairies were flying circles above the others, shaking off the water of the reflecting pool. Mike let go of Beth, who stood up and wrung the water out of her shirt.\n\n\"That's an interesting way to travel,\" she said, taking off her shoes to shake them out.\n\n\"Yeah, well. The house is old and all.\" Mike carefully stood, approaching the monster pile by the wall. He helped Sofia stand up first, then lifted Abella's tail so that Tink could crawl free. The wood beneath the gargoyle was badly scratched by her talons.\n\n\"Sorry,\" Abella said. Mike gave her a playful swat on the butt just beneath her tail.\n\n\"Don't worry about it. Hey, we're home!\" He walked into the living room, looking out the window. \"Hey, the witch is gone!\"\n\n\"She has been for a while.\" Cecilia phased through the wall, her hair floating around her. The temperature in the room dropped, and Cecilia threw herself into Mike's arms, the water on his clothes frosting over. \"I missed you, cuisle mo chroidhe.\"\n\n\"I missed you too.\" He kissed her forehead, causing a spark to jump between them. \"Anything to report? Why did she leave?\"\n\n\"We blasted her with water from the fountain in the middle of her spell. She was struck by lightning and crawled away.\"\n\n\"So she's gone?\"\n\n\"No.\" When Cecilia shook her head, her hair floated outward in slow motion. \"She's hiding in a car out by the street. We think she is waiting.\"\n\n\"For what?\"\n\n\"Nobody knows. We have another problem though. Come.\" Cecilia pulled him by the hand, leading him into the backyard. Naia's eyes lit up at Mike's arrival, her fountain squirting water in the shape of a heart.\n\n\"Naia.\" When he said her name out loud, it finally felt like he had come home. He embraced the nymph. \"What's going on?\"\n\n\"We have a guest,\" she said, pointing to the garage. \"She needs you.\"\n\n\"On it.\" He gave her a grin and stepped through the door. The first thing he noticed was the smell. It was subtle, but reminded him of cloves. The lights had been turned down, and it was hard for him to make out the figure strapped to the chair. Her gray hair was fanned across her shoulders, her pale skin similar to Cecilia's. She lifted her head, and Mike felt like he recognized her from somewhere.\n\n\"It's about time.\" Lily stepped out of the darkness. \"You really know how to keep a girl waiting?\"\n\n\"Who is this? Someone from the Society?\"\n\n\"One of their victims.\" Lily stroked the stranger's face. \"Don't you recognize her?\"\n\n\"I feel like I should, but...\" Oh no. He suddenly knew who he was looking at. He stepped closer. \"Dana? Is that really you?\" She looked like a much older version of the college girl, or at least a sicklier one. What had happened?\n\nDana nodded, but said nothing. Her lips looked dried out, like she hadn't had any food or water for days.\n\n\"What's wrong with her?\" Mike asked.\n\n\"It's taking everything in her not to lunge out at you.\" Zel walked to Mike's side. \"We don't have a lot of time. We need some of your semen.\"\n\n\"Wait, what? Why?\"\n\n\"Because she's starving. She needs to eat.\"\n\n\"But why that?\" Mike knew it was a dumb question the moment he asked. Didn't it always come back to his sperm?\n\n\"She's a zombie. She's about to go feral and-\" Lily's voice vanished beneath the sound of a gong, followed by thunder. They all looked up, dust falling from the ceiling of the garage.\n\n\"Fuck, not again.\" Lily looked at Zel. \"She's at it again, the witch. Romeo, what are the odds I could get you off in a hurry?\"\n\n\"I've... blown a few loads lately.\" If he was being honest, he didn't think he could get it up knowing that some woman was on his front lawn trying to crack apart his magic house.\n\n\"Could she eat something else? To tide her over until we take care of our other problem?\"\n\nZel frowned. \"We could try your blood. It might sustain her for a bit, but you'd have to be quick.\"\n\n\"Do it.\" Mike held out his arm. \"Just not too much. I have a feeling that being light-headed won't help me.\"\n\nHe barely saw the flash of Lily's tail, but it left a large incision on his forearm. Pain made him grit his teeth, and he made a fist when Zel held a bowl under his elbow to catch his blood.\n\nDana shrieked, rocking the chair back and forth. The chair sprouted new legs to keep her in place, but Mike didn't question it. When Zel had gathered enough, she applied a blue fluid to Mike's arm, the wound closing up and scabbing over. Lily held the bowl over Dana's head, her tail pinning her in place long enough to get the fluid in her mouth.\n\nThey all held their breath. Dana swallowed it all, then held her hands up for the bowl. Lily gave it to her, and Dana licked it clean.\n\n\"How does that feel?\" Lily asked.\n\n\"I'm still hungry.\" Dana frowned at the empty bowl. \"But I feel a bit better.\" Another blast of thunder above them knocked more dust loose. \"Go. Take care of the bitch on the lawn. I can wait another hour or so.\"\n\n\"Dana.\" He said her name so quietly even he barely heard it. How had she gotten caught up in this? He walked into the back yard where Naia waited for him.\n\n\"She's at it again.\" Naia pointed at the sky where a glowing crack had formed. \"She weakened it earlier, which means it will be easier for her this time.\"\n\n\"What do I need to do?\" Mike touched the goggles on his head. They fit him perfectly, but he felt wrong wearing them. In his mind, they still belonged to Tink.\n\n\"There are three runes you must activate out in the front yard. You need the goggles to do it correctly, otherwise the house will kill you. Simple as that. Once you have activated all three runes, you activate some sort of control box in the yard.\"\n\n\"Like a console?\"\n\n\"Sure. Once that is there, you will know what to do.\"\n\n\"Not gonna lie. This should have been a day two kind of discussion.\" Mike blew her a kiss. \"Maybe I'll punish you for it later.\"\n\n\"You had better be alive to punish me. Now go!\" Naia splashed him, and he ran back into the house. The others had gathered in the front room, all of them looking at the front yard. Cecilia phased through the wall, startling him.\n\n\"You need to come see this.\" Cecilia disappeared. Mike put his hand on the knob of the front door and took a deep breath before turning it. When he opened the door, a gust of wind blew into the house, rattling the windows. Another peal of thunder shook the house, making Mike cover his ears. Abella held her ears in pain, squatting down just inside the door.\n\n\"Holy shit.\" Mike stared up into the swirling vortex of air up above, a funnel cloud that slowly descended toward the house. Near the edge of the yard stood Kali. She was topless, wearing a skirt decorated with stones and feathers. Around her neck was a long rope decorated with shrunken heads. She shook a large stick, her mouth open wide as several different voices chanted.\n\n\"You're fucked.\" Lily grabbed Mike's shoulder, turning him around. He wondered if she had followed him from the garage. \"That's her ceremonial garb. That's what she wears when she goes all out.\"\n\n\"We have to stop her.\" Mike took a step toward the front yard, but was yanked back by Lily's tail. The grass at the bottom of the steps exploded, showering the porch with dirt. Snakes of all shapes and sizes writhed across the yard, but the ones at the bottom of the step had their eyes solely on him.\n\n\"You can run. That's about it.\" Lily ducked when a panel ripped itself free of the house, the chunk flying over her head. \"I don't care how powerful this place is, she's going to take it down.\"\n\n\"Naia.\" Mike glared at Lily. \"Naia can't run, and I won't leave her behind. I won't leave any of them behind.\"\n\n\"How romantic.\" Lily stepped back into the house and Mike followed. \"And I suppose you have a plan?\"\n\n\"I...\" Mike was cut off by a thunderous boom. Through the windows, the multicolored lights of the Geas cracking cast ominous shadows through the front room. They were all looking at him, expecting an answer. He looked out the window just as rain came, large drops glazing the glass. Across the yard, slow shapes lumbered along the edges, hiding among the bushes. \"What are those?\"\n\n\"Hmm.\" Sofia moved to the window, squinting. \"It looks like several men. Identical in stature, each one wearing the same white suit and walking with a cane.\"\n\n\"That would be Sebastien. The guy who sent the homunculus made of sand.\" Lily shook her head. \"Kali by herself would be more than a match for you. But with him helping, she has the power of an entire coven on her side.\"\n\n\"All we need to do is activate the house defenses, yes?\" Mike turned to Tink. \"Once I activate the console, how long until the defenses turn on?\"\n\n\"Fast.\" She nodded, her ponytail bobbing.\n\n\"What are the defenses?\"\n\n\"Big...\" Tink's eyes went blank. \"Big something.\"\n\nMike rolled his eyes. Of course nobody knew. \"Okay, so the goal is to activate the console, whatever that is, and then go turn it on.\"\n\n\"You're so na\u00efve!\" Lily grabbed Mike by the shoulders and shook him. \"How are you going to get past the snakes? Or the storm? Or the pissed off vodou priestess with all her little oogey-boogey men?\"\n\n\"Or the Colonel Sanders chorus line from hell? Honestly? I don't know. But this isn't about me being in charge. This is about all of us working together.\" Mike looked at each of them. \"We just escaped from a labyrinth. Yesterday, I got into a fight with a child-eating witch while trying to incinerate some elder god's foreskin. Every step of the way, I had somebody's help. And I know we can figure this out if we all play to our strengths to stop her. So instead of worrying about what we have to face, let's take a moment to focus on what we have.\"\n\nAnother blast roared through the house, and pictures fell off the walls. Everyone looked outside, the sky now a technicolor hue.\n\n\"She's using her spirits to multi-cast.\" Cecilia said. \"Their voices add to hers. She summons a storm to keep us within while she makes trouble without.\"\n\n\"Which means she is worried about what we are planning.\" Mike put his hands on the window, then slid the goggles over his eyes. He could see the faint blue lines that made the triangle in his yard with the circle in the middle. Unfortunately, the circle wasn't very far from where Kali stood. \"I need to activate the runes that Naia mentioned before I can summon the console. The first spot is on the porch steps, so that one is easy. However, the other two are at the base of the lions, by the entrance.\"\n\n\"How do we get there?\" Beth asked.\n\n\"I'm the only one who needs to get there. Let's see -- yard full of snakes, strange storm overhead, douche in a white suit...\" Mike's train of thought derailed when another boom shook the house.\n\n\"Wait. I've got it!\" Beth touched Tink on the shoulder. \"I need a pen and paper, quick!\" Tink disappeared, then quickly returned. Beth drew a rough map of the yard and quickly explained her plan.\n\n\"That's absolutely insane,\" Mike said. \"It puts everyone here at risk, including yourself, and has a very low chance of succeeding.\" A grin spread across his face. \"And I think it will work.\"\n\nBeth beamed, and they huddled up, speaking loudly to each other over the roar of magic gathering outside.\n\n-\n\nThrough the eyes of her serpents, Kali watched the storm on the lawn from inside the front yard and from the street. Fearing outside interference, she had placed them all along the street, knowing that their thermal vision would see any living thing that came near her. Up above the vortex swirled, lightning arcing through the clouds. The Geas resonated with her magical blows, her magic taking years off of her lifespan to manage the tremendous energy required to keep up the storm while cracking the protective barrier of the house. She had centuries to burn, and could always acquire more.\n\nHowever, from the street, the storm was contained. The skies grew darker with every crash of magical thunder, but the magic of the home somehow contained the maelstrom within, giving the appearance of a thunderhead building up above. A neighbor four houses down was out mowing, oblivious to the magical battle nearby.\n\n\"The perimeter is clear,\" Sebastien told her from the snake riding his shoulder. He was over by the garage, crouched out of sight. It was difficult to maintain a consciousness that permeated so many beings, but the spirits around her neck were helping her. The large python near her feet kept watch on her physical body as her mind jumped from place to place, making certain she wouldn't be interrupted. Another distraction during the dangerous part of the spell could finish her off, and she intended to live until tomorrow.\n\nBehind her, in the bushes, another Sebastien waited. In case the snakes failed, it was his job to see that she finished the spell.\n\nThe snakes hissed, the front door of the home opening. Through their eyes, she saw Mike Radley emerge, a ridiculous pair of goggles on his head. He stood at the top of the stairs, weird lenses sliding back and forth across his vision. He waved his hands in the air. Kali could see the spectral trail of his fingers activating hidden runes, symbols that danced away from him and sunk into the ground, vanishing from sight. The snakes gathered at the foot of the steps, hissing their warning. Kali could sense their anger at the magical barrier that prevented them from swarming the house and attacking her enemies. Once the Geas was broken, she intended to send them in and incapacitate the occupants of the home with their venomous fangs.\n\nShe would let the High Priest decide what to do with them. One of her many voices shouted into the sky, causing thunder to answer her. The light rain whipped itself into circles, but Kali knew better than to flood out the home -- she feared giving the nymph any more water to work her magic on.\n\nThe snakes slithered across each other, bouncing off the barrier on the steps. A large figure stepped in front of Mike, gazing across the yard. Kali couldn't see her at first, but with another crack in the Geas, the woman came into focus. Nearly eight feet tall with a single eye, the cyclops swung a blade that unfolded itself. In disbelief, Kali watched the cyclops step into the yard, casually beheading the snakes closest to her.\n\nThe swarm moved toward her, and her movements became a dance, her eye glowing with its own inner light. Mike followed close behind, and no matter how many snakes moved toward her, she always pushed Mike out of the way, her sharp blade bringing a quick end to the slithering beasts. Kali's face twisted in concentration, and she pumped energy into the storm up above.\n\nThe blast of lightning blinded her, even through her closed eyes. When her vision cleared, she saw that the bolt had scorched a large mark in the yard, burning snake and grass alike.\n\nSeveral yards away, she saw Mike standing in the open, his fingers making more trails of light in the air.\n\n\"How?\" she demanded of the storm, grabbing one of the heads on her necklace. How had they dodged a bolt of lightning? It made no sense. She summoned the Iwa hidden within the skin pouch, a spirit being made of teeth and fangs, then hurled it at her prey. The cyclops placed herself between Mike and the Iwa, her blade blurring between them. The snakes were closing in, hissing in anger while they moved closer to Mike.\n\nA rock struck her in the shoulder. Growling, she turned her attention back to the house. Beth, the estate agent, stood on the stairs of the home, but something was wrong. Her eyes were the inky black of a moonless night, and the large stones below the porch were levitating into the air, then flinging themselves. A goblin jumped the railing behind her, moving toward the garage.\n\n\"Keep going,\" Sebastien said, placing two of himself between her and Beth. His sandy body easily absorbed the blows of the stone, reforming after every strike. The snakes had moved away from the porch, allowing Beth to descend and fire from along the trellis. They were moving toward the garage, and Sebastien moved in on them. Kali was too distracted to cast any more lightning, her eyes suddenly focusing on Mike through dozens of eyes. He was running toward the stone wall at the edge of the yard, the cyclops calling out his name. The Iwa prevented the cyclops from reaching Mike in time.\n\n\"I have you,\" Kali hissed, commanding the snakes to attack. She could taste his flesh in her mouth with every strike, her heart pounding in exhilaration as the venom flowed freely from their fangs. They constricted around his body, pinning him in place. Sebastien sprung from the edge of the yard, using his cane to push Mike against the ground.\n\n\"Oh God!' Mike screamed in agony rolling in the grass. Kali's mind moved into the serpent on his chest so that she could see the defeat in his eyes. \"It hurts so much, oh God, it hurts! I'm so fucking hard right now!\"\n\nWhat?\n\nMike stuck his tongue out at the snake on his chest, his eyes flashing yellow. \"Wanna see my boner?\" A scorpion's tail burst free of his pants, striking Sebastien hard enough in the chest that he exploded into sand. Mike's body shifted into something smaller, the succubus becoming a little girl in a gymnastics outfit. The snakes suddenly tumbled free, and Lily sprang out of the way just as hundreds of pounds of solid stone crashed into the ground, killing the snakes that had been there.\n\nKali cried out, her hold on the spell faltering when the connection was violently severed from so many snakes at once. The cracks in the sky glowed, and the rain she had been holding back started to fall. Shaking her head, she opened her own eyes to see a woman with large stone wings stand up from the impact crater in the grass. Snake mash fell from her stony skin, and her glittering dark eyes radiated hatred.",
        "The gargoyle flicked a snake head off of her shoulder, then flared her wings out. This scattered snake chunks everywhere, and Lily (who stood nearby) cried out in disgust.\n\n\"Rock beats slithers.\" The gargoyle grinned, and LIly groaned. Kali saw movement back at the house and turned to see that the goblin had pushed open the garage door. Out came a woman and Mike on a horse.\n\nNo. It was Mike riding a centaur, his arms wrapped tight around her midsection. She raced past Kali, taking a wide turn to leap over Sebastien, her hooves caving in his skull. The homunculus collapsed into a pile of sand, the grains vibrating as he struggled to pull himself together. He had warned Kali that the regenerative properties of his homunculi would be slower with his presence spread so thin.\n\n\"After them!\" She yelled the command with her mouth and her mind. The snakes shifted directions, but couldn't keep up with the centaur. She looked into the maelstrom above, commanding down bolts of lightning to chase them. The centaur was now dodging back and forth, Mike tilting dangerously from side to side. The Sebastiens chased after her, but one of them got captured by Lily who tangled up his feet with her tail. She had returned to adult size, but now wore a mixed martial arts outfit replete with hot pink gloves. She forced Sebastien to the ground then used an armbar hold on him, stretching his arm backward until it cracked. He exploded into a small sandstorm, reforming a few feet away.\n\nThe world cracked open up above, a hole finally forming in the Geas. Through her multi vision, she could see the storm clouds escaping into the real world, the guy mowing his yard running inside in alarm. She commanded the snakes outside to return -- she needed them by her side.\n\nThe Iwa cried out in agony. The cyclops had slowly retreated from it, and the spirit was now close to the gargoyle. Still covered in the blood of the snakes she had crushed, she put the being into a head lock and smashed her fist repeatedly into its face. The cyclops speared it from behind with her blade, the finishing blow causing the spirit to flee back to its plane of existence, its contract with Kali officially broken. The smell of damp mud and ozone filled the air.\n\n\"No.\" Kali's voice was barely a whisper, and she pulled two more heads from her necklace, summoning the dangerous Iwa trapped within. How had this happened? Somehow, despite her planning, she hadn't been prepared for Mike's counterattack. To her left, she caught Sebastien running along the fence, but was more preoccupied by the kitchen plates that were now whizzing fast enough through the air that they were punching holes through Sebastien, scattering sand everywhere. Mike had somehow organized these creatures into a well oiled machine, their antics keeping her attention off of the spells she was casting.\n\nShe cast away the angry Iwa, commanding them to take Mike down. They rocketed through the air, the gargoyle tackling one in mid-air while the other moved past. She commanded the winds to pick up, the turf around her ripping into the sky. The gargoyle rolled across the yard, attempting to punch the spirit to death. The cyclops moved to help, so she set the lightning on her once again.\n\nA funnel cloud had formed, the swirling mass threatening them from above. Kali used her magic to hold it back. The storm was meant as a battery of power, and if the funnel fell, it would ruin everything. Shingles ripped off of the roof, spinning through the air.\n\n\"Fuck!\" One of the Sebastiens in front of her had exploded into sand when a car tire blasted through him. The other Sebastien was running toward the porch, holding his cane like a sword. At the car, the goblin was busy removing another tire for Beth to throw. Beth was busy pirouetting, her pointed fingers guiding shingles down from the sky.\n\nWhere on earth had she obtained the ability to do that? Kali opened her third eye even wider, gathering her snakes around her. With Sebastien occupied, she monitored the heat signatures of the combatants all around her. Nobody would be able to get close without her seeing them coming.\n\nSummoning up a wicked wind, she was able to deflect the next projectile that came her way. The crack in the sky was already shrinking, her attention pulled away for too long. Grabbing the last two shrunken heads from her necklace, she threw them to the ground, commanding the spirits within to protect her. The gargoyle had stuck her hands inside of the monstrous maw of the spirit she had been wrestling with, then ripped it apart. The cyclops was fighting Sebastien, who had drawn a sword out of his cane. Sebastien had decades of sword mastery, yet the cyclops easily dodged his attacks, slashing away at his limbs.\n\nThe gargoyle was headed toward her now, and one of her spirits met it head on. They snarled and rolled across the yard, tearing up the turf beneath their slashing claws. Lily was trying to fly toward her, but the wind tossed her out of the sky, causing her to crash into Beth. The goblin swung a small club at Sebastien's knees, causing his legs to explode and send sand everywhere.\n\nThe centaur had reached the far side of the yard. Pinned in by the fence, her back hooves lashed out and knocked the spirit chasing her to the ground, and she galloped away. Undeterred, the spirit managed to grab Mike by the back of his shirt and pull him off the centaur.\n\nFinally. She sent the mental command to the spirit not to kill him. The spirit obeyed, pinning Mike to the ground so Sebastien could reach him in time. He drew his blade, pressing it against Mike's chest.\n\n\"Everyone stop, or I'll...\" Sebastien's eyes grew wide as Mike's body unfolded. Arms and legs covered in blades whirled around, reducing him to a pile of sand. Kali's mind jumped into a snake long enough to see that this Mike was, somehow, simply a mannequin dressed in his clothes.\n\n\"Where? Where is he?\" Her consciousness spread out across the yard, her remaining snakes swiveling their heads. The rain had grown thicker, the melee being lost in the thunder. Frustrated, Kali called down the lightning, aiming for anyone emanating heat. The cyclops was able to dance away, quickly returning to the porch. The goblin had pulled Beth to safety, and the centaur took shelter back in the garage. The gargoyle had pinned the spirit to the ground, and Lily was caught in a vortex of wind that caused her to tumble through the air.\n\n\"Where! Where are you?!?\" Colored runes appeared all across the yard, focusing on a point twenty feet in front of her. The ground split open, revealing a large stone sundial that rose from beneath. Giving up on her snakes, she looked to the skies, wondering if he was about to descend from up above. Where was he going to come from?\n\nThe remaining Sebastiens looked to her for guidance, pointing at the sundial and yelling, their voices lost in the wind. She turned around to see that another Sebastien was running toward her, his head bowed low. The crack in the Geas had grown even smaller, and the storm was beginning to rage out of control up above. The situation was devolving quickly, and she still couldn't figure out what Mike had planned for her.\n\nSebastien ran past, dodging the lone Iwa by her side, then put his hand on the sundial. It suddenly occurred to her that this Sebastien didn't carry a cane, nor did he have a mustache. Her jaw dropping in surprise, she sent the spirit barreling toward him, to stop him at any costs, and was shocked when a banshee stepped out of his body, her hair wild and her blank eyes wide with rage. She let loose a scream that could be heard above the roar of the storm, a scream that tore the Iwa to shreds. Kali grabbed her ears in pain, desperate to block out the sound.\n\n\"What?\" She was in disbelief. What had just happened? She commanded the snakes, the remaining spirits, anything, to stop him.\n\nMike lifted his face, his lips blue with from the cold and his goggles aglow with runes of their own. \"It's time for you to get the fuck off my lawn.\" He grabbed the sundial and gave the whole thing a twist, and Kali felt the whole world get yanked out from under her.\n\n-\n\nThe plan had been complicated, but Beth has spelled it out masterfully. After activating the first rune, Mike needed to cross the yard to get to the pedestals under the lions where the other runes were hidden. It was decided that Lily would divert everyone's attention long enough to set up the next part of the plan, which involved having the mimic become a mannequin dressed like him. Naia had taken Dana, imprisoning her in the fountain in case she went feral. The fairies then used their magic to turn Mike's clothes white, to make him blend in with all of the Sebastiens running around. He had held on to Zel's side, his body hidden from view when they had burst out of the garage, praying he could hold on long enough to fall off just past the bushes.\n\nThe true genius of the plan had been allowing Cecilia to hide inside of him, the cold from her magic masking his presence from the snakes. While everyone's attention was on the mimic and Zel, he had moved across the yard and had activated the next two runes. With the goggles on, activating the runes was much like trying to catch a specific bee from the hive. His fingers dodged dangerous magic to touch the right ones, their magic falling into the dirt and gathering at the center of the yard. Running past the vodou priestess, he grabbed the sundial, feeling a surge of power through his arms.\n\n\"It's time for you to get the fuck off my lawn.\" He twisted the stone, sending a wave of magic across the yard. Kali flew through the air, crashing to the ground next to the large snake that watched over her. The lions on the entryway leapt down onto the grass, their manes ablaze with blue fire as they chased down Sebastien and swatted him into nothingness. The remaining spirit tried to flee, but was torn from the sky by one of the lions. Kali struggled to stand, the other lion approaching her quickly. It stopped only long enough to quickly eat the anaconda, then pounced on the priestess.\n\nKali was abruptly yanked away from the lion, her body pulled across the lawn and out onto the street by hundreds of shadowy arms. A dark figure in a black suit snatched her out of the sky, kneeling to set her down on the wet asphalt. Up above, the storm broke itself apart, rain falling across the yard. The figure stepped right up to where the grass started, but did not cross. Mike thought that the man was black at first, but realized quickly that the light seemed to bend away from him, his middle eastern features hidden away in the shadows. Even the rain itself bent away from him, leaving him dry.\n\n\"I see that we have failed once more.\" His voice was pleasant, but somehow sucked the warmth out of the air. Mike, still frozen from having Cecilia riding shotgun inside of him, somehow felt colder even hearing it. The stranger shook his head, his dark curls unmoving.\n\n\"And who are you?' Mike asked.\n\n\"You may call me Amir. If you would like to invite me in, I would be happy to speak with you.\"\n\n\"Do you think I'm dumb?\" Mike fiddled with the goggles, trying to look at him with different settings. The goggles could see so many different things, and right now, they told him he was looking at nothing. No heat signature, no heartbeat. He may as well be looking at open air. Even the stranger's magic was somehow invisible to him. \"There's no way in Hell that I'm inviting you in, and I am not giving you my house.\"\n\n\"I don't want the house. I only want what is mine.\" His eyes finally fell on what he had been looking for. Lily had bounced off of the stone wall and was currently fighting her way free from what was left of the same hedge Mike had hidden behind when he fell off of Zel. Her eyes had gone wide in terror, and she fought to free herself.\n\n\"Nothing here is yours.\"\n\n\"I beg to differ.\" His eyes locked on Mike. \"I will offer you a one time deal Mr. Radley, but you will only have moments to make it, so please, hear me out. I am a patient man. I am patient enough to simply wait until you have passed away, leaving this place to the next Caretaker. I am patient enough to convince the others that this fight we have with you is not worth the toll it has already taken on my colleagues. I am patient enough to admit defeat, and return again when you have been long dead in the ground.\n\n\"However, I have no patience for disloyalty. That succubus belongs to me, and I will have her back. Hand her over to me, right now, and we will go away.\" Though his face was dark, his teeth were bright, making him look like a sadistic shadow.\n\nMike watched the man, then looked at Lily. She had managed to fall out of the bush, her dark eyes on the stranger at the edge of his yard.\n\n\"I don't know that you really have any bargaining power,\" Mike said. \"With this sundial, I can keep you out of here for the rest of my days.\"\n\n\"Indeed. But you will be under house arrest. I will wait for you to step away, and I will kill you. A lifetime of being stuck in that tiny little home, wondering when we will try again. Paranoia at every hour of the day. Or you could return my property and have your freedom and my word that we will never bother you again. It seems to me that you are getting the better end of the bargain.\"\n\n\"Mike.\" Lily's voice shook. \"He means it. He won't just kill you either. He'll make you suffer..\"\n\n\"What? Do you want to go back with him?\"\n\n\"She does.\" The stranger held out his hand. \"Even if she doesn't know it. Give me her ruby and I will take the others from here and leave you in peace.\"\n\nMike chuckled. \"She and I have a deal. She can't break it.\"\n\n\"But you can.\" This time, when he held his hand out, Mike could see the shadows clinging to him. It was like he had been poorly photoshopped back into the real world, the extra dark lines around his body the main indicator. \"Now hand her over. I won't ask again.\"\n\nMike sighed. He walked to the edge of his yard, the stone lions moving at his side. They were an extension of his mind, but he knew they could not go past the boundary of the house. When he was about ten feet away, he stuck his hand in his pocket. The stranger's smile grew impossibly wide.\n\n\"You know what? Maybe she is too much trouble.\" Mike frowned. \"Wait, hold on.\" He pulled his hand out of his pocket and felt around on the outside of his pants, then looked around. \"That's so strange, where did it go?\"\n\nThe smile faltered. \"What happened?\"\n\n\"Well, sometime between yesterday and today, I ran out of fucks to give.\" Mike grinned sheepishly. \"Guess you're just going to have to be patient enough for me to grow a new one, or something.\"\n\nAmir's eyes narrowed, and the ground shook, but Mike held his ground,his eyes never leaving Amir's. The rain had finally stopped, and the sun was coming out above them.\n\n\"You are a dead man, Mike Radley.\" He knelt down to pick up Kali. \"You should have taken my offer.\"\n\nMike felt that cold feeling in his gut, but he was ready for the attack. An arm made of shadows quickly crossed the space between them, seizing him by the collar of his shirt. Mike's arm swung up, the dagger clutched tightly in his fingers, and he severed the shadow limb. It tumbled onto the ground and shattered, freezing the grass around him.\n\n\"Do you want me to check my pockets again, Amir?\" Every fiber of his being told him to run away and hide, to flee from this man, but he felt it deep within his being, that voice of reason that said if he turned his back now, Amir would kill him.\n\nAmir chuckled. The shadow arms lifted Kali, cradling her like a child.\n\n\"We have no more to say to each other.\" Amir walked backward onto the street. Someone had left a large, ornate rug just sitting on the asphalt. Mike's jaw dropped when it lifted Amir and Kali into the sky and flew away, Amir's dark eyes never leaving his until they were gone.\n\n\"Mike.\" Lily was at his side, her hand on his arm. \"You should have given me back. Now they'll never stop. He'll never stop.\"\n\n\"I don't expect that he will.\" Mike let out the breath he had been holding, his limbs suddenly heavy. \"Dude scares the shit out of me. Shadow arms and a flying carpet? What the actual fuck?\" Mike looked at his front yard. \"Shit. It's going to take days to fix this.\"\n\nLily laughed. Mike liked the sound of it.\n\n-\n\nSatisfied that Amir wasn't going to show his face again, Mike set the lions back on their pedestals. They assumed their original form, simple stone statues, once up there, but he could feel their magic burning in his blood still. The sundial had rotated slightly - of all the magical artifacts he had seen so far, he found it ironic that the most powerful defensive magic he had seemed to function like an egg timer. He had only partially twisted it, so he paused long enough to twist it the rest of the way.\n\nTwenty four hours. In the next twenty four hours, he would have to twist it again to keep the lions activated. Part of him secretly hoped that the Society would show back up, magic blazing, only to get snuffed out for good in the middle of the night.\n\nCelebrations were brief. Tink took the goggles from Mike then swatted him on the ass before inspecting the damage to the house. Sofia was using the garden hose to wash the blood off Abella, and Beth sat with Cecilia on the front swing, her head in her hands as she woke back up. Lily had vanished shortly after Amir had, and he hoped that wherever she was, she was doing okay. The mimic was still in the yard, a macabre scarecrow with one of his favorite shirts torn to bits. He picked it up and carried it through the door. Not knowing where else to put it, he leaned it against the wall.\n\nHe walked through the house into the back yard. Dana and Naia sat in the middle of the fountain. Dana was smiling, but still looked sickly.\n\n\"That was quite the commotion,\" Naia said. \"But it's gotten pretty quiet. I take it you activated the defenses?\"\n\n\"I did.\" Mike sat on the edge of the fountain. \"The lions made very short work of the situation.\"\n\n\"And they'll attack anyone who steps onto these grounds with ill intent.\" Naia smiled, her memory of the home's defenses restored. \"I wish I could have told you sooner.\"\n\n\"It's all part of the journey, isn't it?\" Mike thought back to the last couple of days. Maybe it was a weird thing to think about, but he felt almost like every challenge was part of a path that had been set before him. He briefly thought of his vision, moving game pieces across a board, then dismissed it. He was ninety percent sure it had been a hallucination, a dream that had chased him into the real world. \"And you? How do you feel?\"\n\nDana shrugged. \"I don't feel like I'm going to tear your face off, but I don't feel good either. Kind of cranky mainly.\"\n\n\"I am so, so, so sorry you got pulled into this. You need to tell me what it is I can do to help make this right.\"\n\n\"She still needs something from you,\" Naia said. \"She's operating on borrowed time. The blood is rapidly wearing off.\"\n\n\"I haven't forgotten.\" He let out a sigh. Dana was avoiding his gaze, her fingers drawing shapes in the surface of the water. \"But I'm getting the feeling that there's more to the story.\"\n\n\"There is.\" Naia moved by Dana's side. \"Do you want to tell him, or should I?\"\n\n\"Zel originally gave me a potion she had made, which was far better than the blood. She said that your sperm was in it, and I wanted to think it was gross, but I was so hungry that it really didn't matter. Anyway, Zel has a theory that if I were to eat your... fluids straight from the source, the effect would be magnified.\"\n\n\"And?\" He could tell there was more.\n\n\"I've never been with a man before. This isn't a na\u00efve virgin thing, this is a lack of interest thing. You're the first guy I've even been attracted to, and Naia explained to me that part of that is her fault. But honestly, I'm not super into you. Or men, in general.\" Dana let out a long sigh. \"So in a way, I've kind of traded one prison for another.\"",
        "\"Well, could we save it? Keep some in the fridge? You could eat it later?\"\n\n\"If Zel's theory is correct, the effect diminishes immediately upon exposure to air. Something about intent and intimacy. She wants me to collect it... personally.\" Dana sighed again. \"Which brings up the other problem. When I drank it before, it made me super horny. And it ended up being okay, but only because someone was there to help me through it. Someone who wasn't a man. I'm still me, even if I'm dead. And part of me is afraid of what I'll become if I have to force myself to have sex with you just to stay alive. I feel like I have to choose between ravenous hunger, or losing my mind. It's hard for me to say it, but even if I just let you jack off in my mouth, part of me is gone forever, a part that waited for so long to be alive.\"\n\n\"Damn.\" Mike hadn't thought of that. She was dependent on him to stay sane, but didn't want to be involved with him sexually. \"The important thing is that you need to decide what is okay for you. I'm not going to force you to do anything you don't want to do.\"\n\n\"You're not? I thought... I thought the others had to have sex with you to stay here?\"\n\n\"Who gave you that idea?\"\n\nNaia rolled her eyes. Mike let out a laugh.\n\n\"Lily's been telling stories, it sounds like. I'm guessing she implied more than a few things. May I?\" He gestured at the spot next to Dana. She nodded, so he sat next to her. \"This is going to sound weird, but sex here and with the people in this house isn't like sex out there. Here it's no different than going to a movie, or eating ice cream with friends. Granted, there are a bunch of emotional attachments, but I'm not forcing myself on anyone. In fact, I think more than a couple of them have forced themselves on me.\"\n\n\"That still doesn't change the fact that I'm not attracted to you. I guess I don't know how I feel.\" Dana put her head in her hands. \"I have a lot of time to think about stuff like this. It keeps my mind off of how hungry I am.\"\n\n\"You need to feed, but you don't want to forfeit who you are.\" He looked at Naia, then back at Dana. The spark of an idea was forming. \"Out of curiosity, if I was a woman, would that help?\"\n\n\"Well, yeah. But if you were a woman, you couldn't, you know...\" Dana made a jacking motion in the air. \"I mean, maybe if you were a squirter, but that's different. Something about how your sperm is meant to make life which is why it carries so much life force. A girl who squirts is just having a really good time, which is different.\"\n\n\"I think I know a work around.\" Mike lifted an eyebrow and turned to Naia. \"If you think it will work?\"\n\n\"Interesting.\" Naia's brow wrinkled in thought. \"It might work.\"\n\n\"If it does, she doesn't have to be with me sexually, and you can be there for her after.\" Mike looked at Dana. \"But you would have to be nearby, which means you'll have to watch.\"\n\n\"Watch what?\"\n\n\"Watch me have sex with Naia.\"\n\n\"That doesn't help me.\" Dana crossed her arms. \"Even if you came in her and pulled out, it still gets exposed to the air.\"\n\n\"That's where you're wrong.\" Mike reached over to Naia and flicked the skin of her arm. The moment his finger touched her, her skin became transparent water. It made a tiny splash. \"If I come inside of Naia, she can make her body turn to water and keep it warm. In a weird way, it's kind of like it came just from me. Then you can drink it directly from her\"\n\nDoubt was written across her face. \"Maybe.\"\n\n\"If it doesn't work, I figure it will buy us some time. What do you think?\" He directed the question at Naia. She had already slid one strap of her gown off her shoulder, her breasts pushed up by her crossed arms.\n\n\"I think you should come over here.\" Her grip on his shirt was strong, and his feet splashed in the fountain in an attempt to catch his balance. When she kissed him, he felt like she was trying to inhale his soul. He lost his balance and fell back. The water formed beneath him, holding him up without getting him wet. It was an odd feeling, the cool water against his skin, but the warm woman on top of him had his full attention.\n\n\"I've missed you, lover.\" She kissed her way down his neck, tiny spheres of water floating around her. \"Next time, I fully expect you to take your time with me.\"\n\n\"You think this is going to be quick?\" He watched her undo his pants. His cock sprang free, eager to see her.\n\n\"We mustn't keep our guest waiting.\" Naia gave his shaft a lick. \"And if you think you've seen all my tricks, you have another thing coming.\"\n\n\"Let's see what you go- HOLY HELL!\" With her mouth on his shaft, he felt her insides liquify, creating a sudden increase in pressure as her innards swirled. He kicked his legs so hard that one of his shoes went flying across the fountain at Dana, who snatched it out of the air. Every time she moved her head to the base of his cock, he felt that intense swirl of water when she slid her mouth back off of him.\n\n\"Whoa.\" Dana leaned forward on the edge of the fountain, gray eyes shining in anticipation. \"I can smell your pre-cum from here. It's making me hungry.\"\n\nMike couldn't find the words to respond. His hips were already bucking on their own. Naia pulled her mouth off of him then stood, her dress disappearing. She turned around and sat down on his cock, her labia parting around his cock. Her vagina was doing the same thing her mouth had, and she started playing with herself, her legs spread wide to give Dana a show.\n\n\"Urgh, Naia!\" Mike squeezed her plump ass cheeks, lifting his hips to further penetrate her. Water tendrils held him in place, and Naia began a slow grind against him, the suction causing his dick to inflate. His nerves were ablaze, and tiny sparks formed along his fingertips, sparks that made chills run through his spine.\n\n\"Wow, what is that?\" He heard Dana ask. He was too busy with the sight of Naia's ass to bother looking.\n\n\"That's a nymph's Pearl. I'll tell you more about it later.\" Naia looked back at MIke. \"I'm surprised you've held back this long.\"\n\n\"It's been a long day,\" he grunted. Naia's blue-green hair bounced across her shoulders when she looked back at Dana. The tattoos on her ribs glowed and the water beneath him vibrated. The vibrations became more powerful, and he could feel them now in his cock. Naia's whole body vibrated too, and she let out a moan that turned into a laugh, then back into a moan.\n\nHe didn't notice at first, but she had slowly lifted herself away from him, just his glans still inside of her. The vibrations traveled all along his shaft, his dick held in place by the powerful suction of her pussy. He groaned.\n\nNaia sank down on him. The bubbles in the fountain popped, and her insides were like molten glass, so hot and smooth. Her body pulled him in while the water beneath him stroked his balls. Naia let out a shriek of sweet agony that penetrated to the center of Mikes being.\n\nMike came, spurting his hot seed into Naia's pussy. Her insides shifted, sucking him farther into her and draining his balls. He groaned, and Naia's back became translucent, turning into water. He watched his spunk get pulled up into a milky sphere at her center, tiny sparks of magic radiating off of it. She kissed Mike on the lips, her thighs releasing him. He sighed, sinking down to the floor of the fountain. The water of the fountain had vanished and Naia walked over to where Dana sat.\n\nNaia climbed onto Dana's lap, straddling the zombie's hips. She pushed some loose strands away from Dana's eyes, then moved her hands along Dana's sides. Her hands moved up to Dana's breasts, then slid past to tilt her head back. When their lips connected, Naia's body became translucent again, and Mike watched as his load migrated up Naia's body, passing into Dana's mouth.\n\n\"Wow,\" Mike whispered. It was less than a second after Dana swallowed when her cheeks darkened, fresh blood flowing to the surface. Dull gray strands of hair immediately regained their shine, hovering somewhere between blonde and silver. Her eyes sparkled when they opened, and a strand of cum dangled from her lips when she broke her kiss with Naia. When she opened her eyes, they were an icy blue, the gray hidden behind the gemstone color.\n\n\"You look almost like you did before,\" he told her. \"I mean, you're still a bit different, but you don't look like you're on Death's door anymore.\"\n\n\"I feel great. I feel... warm.\" She wiped a tear from her eye. \"It's almost like I'm alive again. So many emotions are going through me right now. I feel like I swallowed fire and lived to tell the tale.\" She pressed both hands to her chest. \"And for the first time since I died, I don't feel hungry.\"\n\n\"That's good. I'm glad.\" Mike moved away from them. \"But you still look a bit... off.\"\n\n\"It's better than the alternative.\" Dana shifted, her ass rubbing against the smooth stone. Through her jeans, Mike saw that she was pressing her thighs together. \"I don't want to be ungrateful or anything, but can I have some time alone with Naia?\"\n\n\"Absolutely.\" Mike stood, a small pang of jealousy in his chest. His relationship with everybody was open and honest, but the idea of Naia being with anybody but him did sting just a little. He knew it didn't make sense. That was the part of him that was still human. He looked back just once to see Dana's lips on Naia's breasts. The nymph winked at him and he smiled back. Even if it did bother him, he was willing to bet that he owed Dana a debt that couldn't be repaid. He pushed open the back door, taking care to pull it shut behind him.\n\nWhen he walked around the corner into the living room, he tripped over the small chair that had appeared there. He rubbed the sore spot on his shin. \"And what are we going to do with you?\"\n\nThe chair sprouted arms and shrugged.\n\n\"Oh! Wait!\" Mike fumbled through his pockets and pulled out a key. \"Does this go to you?\"\n\nHe waited for a response, then remembered the mimic could only transform when nobody was looking. Some strange monster version of being pee shy. He blinked and found himself looking at a typewriter. The keys clacked on the paper tucked into the roll.\n\nNO\n\n\"Oh. Any idea what it goes to?\" He waited for a response, and the mimic typed the same word again. \"Okay. Well, thanks for your help earlier. You made a pretty good me.\"\n\nYOU'RE WELCOME CARETAKER MIKE. The typewriter dinged, and Mike blinked. The grandfather clock walked on thick wooden legs to its post by the stairs, then lowered itself into place. He patted it affectionately, then stuck the key back in his pocket. That would be a mystery to solve some other day.\n\nMike walked into the kitchen and opened the fridge. He said a silent prayer of thanks to whatever god was listening that a beer had been tucked away behind the milk. He popped the top off and sat down, putting the mouth of the bottle to his lips. It wasn't even his favorite brew, but it was the most delicious thing he had drunk in days.\n\n\"Not gonna watch them fuck?\" Mike coughed beer out his nose, foam rolling down his lips. He turned in his seat and scowled at Lily. She leaned against the kitchen counter, her tail tracing shapes on its surface.\n\n\"You startled me.\" He used his shirt to wipe the beer off his face. \"And no, I'm not going to watch them have sex.\"\n\n\"You're not a little curious?\" Lily walked past him and pulled down one of the blinds with her finger. \"Don't you wanna know what college pussy looks like?\"\n\n\"I... no. No I don't.\" He frowned at his beer. She had caused him to waste a bit of it. \"It was obvious that she wasn't into it.\"\n\n\"But she was. She hungers for it, you know? Your cum, specifically. You could have made her do anything, made her beg, taken advantage of her desperation.\" Lily turned around, her breasts in her hands. \"Oh Mike, come in my mouth, I'm so hungry.\" She spoke in Dana's voice.\n\n\"Shouldn't you be standing on somebody's shoulder right now?\" He pulled another drag off of his beer. \"Talking them into suicide or something?\"\n\n\"You're really not gonna look?\"\n\n\"No. I haven't heard the full story, but I'm ninety-nine percent certain that this is somehow my fault. I imagine she's going through some hard changes right now, and the least I can do is give her her space.\"\n\n\"Wow. You really aren't going to look.\" Lily's tail swished behind her. \"Now that I'm back, I suppose you want to give it to me though, right? Pound my ass against the counter?\" She bent over, wiggling her butt in his face.\n\n\"Honestly? I just want to finish this, see if they need any help out front, then go to bed. Oh!\" Mike slammed his beer against the table, causing it to foam over. \"I do want to give you something!\"\n\n\"This oughta be good.\" Lily crossed her arms and smirked. \"Did you draw up a roommate agreement for me? Blowjobs every Thursday? Anal Mondays? Since the week is gonna fuck you up the ass, might as well do it for real.\"\n\n\"Why do I feel like you're punishing me for something I didn't do?\" Mike pulled open the kitchen drawer and pushed aside the scissors and the keys. His fingers closed on the little jewelry box.\n\n\"What can I say? I have trust issues.\"\n\n\"Obviously. Here. I bought this for you.\" He held out the jewelry box. Lily recoiled from him.\n\n\"What is it?\"\n\n\"A rosary. I figured it's about time you found Jesus.\" He laughed at the look on her face. \"It isn't a rosary. I saw it online and thought of you, so I bought it. Almost forgot I had it.\"\n\n\"What do you want in return?\"\n\n\"Nothing.\" Mike shrugged. \"I mean, if you don't like it, I can take it back. Like I said, made me think of you.\"\n\nLily took the box, a dubious look on her face. She opened it, her eyes growing wide. \"Where did you get this?\"\n\n\"Ebay. May I?\" He pulled the necklace out of the box. It was a red agate stone set in silver with islamic lettering around the sides. \"The red made me think of your hair. And your eyes. And your attitude, if I'm being honest.\" She held her hair up so he could fasten the clasp behind her neck. \"I kind of figured it could be a peace offering. I felt like the last time we saw each other didn't end as well as I would have liked it to. This place is still your home if you decide to stay. I want you to believe that.\"\n\nLily held up the pendant. Her eyes looked through it, focused on something he couldn't see. Several seconds passed, and the hint of a tear appeared in her eyes.\n\nHe was about to say something when she suddenly disappeared into a cloud of black smoke, the stink of sulfur filling the room. He coughed, waving a hand in front of his face. The odor was bad enough that he set his beer down, a bad taste in his mouth.\n\n\"Demons,\" he muttered. He left the beer behind and went out to the front yard to see how he could help.\n\nI really hoped you enjoyed this chapter as much as I enjoyed writing it. This was my very first big action sequence, so I hope I did it justice.\n\nDon't forget to rate, comment, or send me a note, I love hearing from you! Expect to see the next chapter in the next couple of weeks. Much love to you all, and be kind to one another! Until next time! "
    ],
    "authorname": "writerannabelle",
    "tags": [
        "monster girls",
        "harem",
        "witchcraft",
        "succubus",
        "zombie",
        "nymph",
        "creampie",
        "monster sex"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-25"
}