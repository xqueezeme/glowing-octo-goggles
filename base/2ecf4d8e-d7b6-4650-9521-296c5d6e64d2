{
    "title": "What The Cat Dragged In Ch. 31",
    "pages": [
        "This has been ages in coming, and all I can do is humbly apologize.  Real life was overwhelming for awhile and posting something bad for the sake of posting isn't really being true to the spirit of the story you all love to read and I love to write.  \n\nA couple of notes: Free the Girls is a real charity.  You can find out more about them by searching the name.  The quote that Victor reads to Stan does come from an Edgar Allen Poe story.  If you don't know which one, I'll name it at the end.\n\nEnjoy!\npsyche b\n\n\n31.  Montresor and Fortunato\n\nKelly did her best not to hang on to Victor too tightly on the way out.  The solid sound of the door closing behind them took the last bit of resolve she had left.  She felt her knees weaken.  Victor held her tighter.\n\n\"I think I'm going to be sick.\"\n\nHe pulled her against his chest, holding her there.  \"You got anything left to be sick with?\"\n\nShe looked up at him.  \"How did you-\"  She stepped back and held her hand over her mouth.  \"Oh God, you smell it!\"\n\n\"Nah.\"  He smiled a little.  \"I just know you.\"\n\nKelly blushed and stepped closer to him again.  \n\n\"Conlon.\"  His voice had a rough edge to it.  His eyes were on hers, a little smile on his lips.  \"'F you got something to say to your former boss, he's in the next room on the right side of the corridor.\"  Victor held out a slip of paper.  \"This code overrides the scanner.\"\n\nConlon nodded and took the scrap of paper.  He disappeared around a bend in the dim hallway.\n\n\"C'mon.\"  Victor took Kelly's arm and led her up a flight of stairs and into a small room furnished with an ancient green plaid sofa, an avocado green fridge, sink and microwave, and a sagging cot covered in a gray blanket.  Spartan as it was, it was still the only place she'd seen that seemed fit for a kind of bare bones habitation.\n\nA shiver went through her as she looked at the gray little space.  \"You sleep here?\"\n\nHe shrugged and sat down on the sofa.  He took her wrist and pulled her down with him.  She stretched out, her head resting against his chest.  \"Not too often.  It's more of a place to get something to eat or shower.  Shit like that.\"\n\nQuestions strobed through her mind with the intensity of a camera flash.  As quickly as they came, she decided she didn't want the answers.  Didn't need them because she had a pretty good idea already.  Kelly arched a little closer to him instead.  \n\n*~*~*~*~*~*\n\nCreed watched her go from silent and still to trembling, to crying to sleeping with her fingers tangled in his shirt in the space of twenty minutes.  Didn't really surprise him.  Stan was a fucking millstone around her neck and he'd just cut the rope.  That had to stir some kind of emotional shit in a frail.  Even one who had handled herself like a goddamn pro a few minutes before.\n\nOne hand drifted over her back, tracing slow circles with his claws.  The other moved into her hair, carefully pulling out the pins, letting her hair fall around her shoulders in soft waves and ringlets.  It changed her features, softened them back into that perpetual innocence he'd become so entranced by.  Still, when he looked at her just right, he could see the strength in the set of her chin and the tilt of her nose.  Steel concealed by silk.  The idea made him smile.\n\nExactly the kind of female an alpha needed.  He leaned closer and put his nose against the top of her head, taking in her scent.  Under the chemical tang of some kind of styling product, her scent was sweeter than ever.  The perpetual edge of nervous fear was gone, replaced by sweet sunshine, cool breezes and honeyed vanilla.  His cock stirred against her hip.  \n\nThe thought of fucking her crossed his mind, but he rejected that idea.  Fuck wasn't even the right word.  It wasn't the right idea.  Fucking was what Giada was doing in the alley.  Course he had no goddamn idea what else to call it, but he knew that whatever it was, it wasn't something he wanted to do in a place like this.  \n\nHe let his mind drift to the idea of going back to the apartment for a little while.  Spend a few hours in bed with the frail, letting himself get lost in the other half of his life for a little while.  Course, like always, he couldn't do that because motherfucker Stan was in the way.  Bastard would keep interfering in his life until he was dead too.  Creed was as sure about that as he was that the frail hadn't slept right since he left.  He stared at the glowing red numbers on the cheap digital alarm clock and watched another minute click by.  He sighed rubbed his forehead against the top of her head.\n\n\"Frail.\"\n\nShe murmured something he couldn't make out, then arched her back and settled against him again.\n\nFucking frail.  She was gonna make this hard.  He wrapped his fingers in her hair and moved her head so that she was looking at him.  \"C'mon frail.\"\n\nHer eyes fluttered open.  Recognition of where she was dawned slowly.  \n\nHe let go of her hair.\n\n\"I fell asleep.\"  She sat up and looked around the dingy space.\n\n\"Goddamn fast.\"  He smiled a little.  \"When was the last time you got a decent night's sleep anyway?\"\n\nA blush colored her cheeks.  \"The night you left.\"  She smiled at him.  \"Doesn't really matter.  You're back now.  I always sleep better when you're next to me.\"\n\nAnd now he was back to feeling like a son of a bitch again.  \"It'll be another night at least.\"\n\nHer calm collapsed.  \"But...you're here!  In the same city, why-\"\n\n\"You don't want me to answer that question.\"  He got up and started to pace.  \"I'll be back and forth between the apartment and here for awhile.  I ain't gonna tell you how long it'll be because I got no fucking idea.  If you're awake, I'll tell you when I'm leaving and if I got an idea of when I'll be back I'll tell you that too.  Beyond that, you don't ask why or what or any of that shit.\"\n\nKelly looked down at her hands.  \"I don't know if I can.\"  Her voice was quiet.\n\nThe tone in her voice made something inside him ache.  He stroked his fingers through her hair.  \"Yeah you can.\"  His voice was softer.  \"C'mon.  I'll have Conlon take you back.\"  He reached for her arm, but she moved away.   She pulled her fingers through her hair.\n\n\"Let me do something with my hair first.  Where are the pins?\"  \n\nHe reached into his pocket handed her the hairpins.  He pointed to a door at the far end of the room.  \"Bathroom's through there.\"\n\nShe disappeared and came back a moment later with her hair smoothed and held back from her face in soft waves.  This time, she let him take her arm.  He led her down the stairs.  Halfway down, he couldn't take the silence and staccato footsteps any more.  \"You really gonna forgive that sorry bastard?\"  \n\nKelly shrugged with one delicate shoulder.  \"Maybe.  Maybe not.\"  A little smile twitched the corner of her mouth.  \"Sounded good in the moment though.\"\n\nCreed chuckled.  \"Too fucking much.\"  He kissed her softly, his tongue teasing hers for a delicious moment.  \"Wait here.  I'm gonna get Conlon.\"\n\nCreed watched her sit on the stairs, then he headed down the hall.  Cavallo was in another bare room, cuffed to another metal chair, but there was no observation window.  Creed stood outside the door, straining to hear signs of pain, of argument, or anything else.  At first, there was nothing but silence.  Then he heard a low moan coming from the other side of the door.  He put his hand on the scanner and walked in.\n\nThe sharp smell of piss hit him as soon as he opened the door.  A table was pushed against the wall, Conlon sat on it, his back resting against the wall, his feet resting on the edge.  Cavallo was still secured to the chair, a wet stain spread out from the crotch of his sweats and a puddle had formed around his feet.  Creed grabbed a handful of Cavallo's thinning hair and lifted his head revealing a doughy face that he would have been hard-pressed to pick out of a crowd.  \n\nCreed let out a disgusted growl.  \"Dirty fucking animal.\"  The former boss's breath was raspy, shallow.  Creed looked at Conlon.  \"Looks pretty damn good for as much time as you had with him.\"\n\nConlon tilted his head in an approximation of a shrug, a self-satisfied smile on his face.  \"Figured you'd be upset if I got too creative.\"  He sat up. \n\n\"Goddamn right.  That don't mean you had to just sit there and watched him piss himself.\"  \n\nConlon got up and walked over to the man in the chair.  A little smile quirked the corner of his mouth.  \"First night I was with Giada, I ended up between two drunk bastards who both thought they had some kind of claim to her because they'd screwed her.  Of course, being the kind of slut she was, I don't think she even knew either one's name.  I learned two things that night, one was that I was gonna hate that goddamn job.\"  He shoved a fist into the right side of Cavallo's chest.  The bastard screamed and started to babble apologies.  \"The other was that broken ribs hurt like a motherfucker.\"\n\nCreed looked at the smaller man.  He probed the side of the restrained man's chest, bringing a hoarse cry and the salty scent of incipient tears.  A slow grin spread across Creed's face.  He looked at the other mutant.  \"Not bad.  There might be some hope for you yet.\"  He stood up and faced Conlon.  \"Frail needs to go back to the apartment.  I'll be there in a few minutes to let you out.\"\n\nThe smaller man nodded and walked out of the room.  Creed waited until the door was shut before he opened a cabinet on the wall.  The video system was a recent, lucky addition.  He turned on the monitor and picked up a remote.  \"Down to just you and me, Paulie.\"  Victor said.\n\n\"Look, I didn't know you cared about the girl.\"  Cavallo was doing his best to sound confident and reasonable.  The edge of desperation in his voice and the stink of fear and piss broke the illusion.  \"If I'd known, we could have made a deal.\"\n\n\"A deal.\"  Creed had to work hard not to laugh.\n\n\"Well yeah.\"  He shrugged and winced.  \"You're a businessman, so am I.\"\n\nCreed nodded.  \"Here's the only deal we're gonna make.\"  He hit play and the video of Kelly's unconscious arrival at the bunker filled the screen in living color.  \"You're gonna wait here like a good little boy and watch the video.\"  Creed had cut the tape together himself.  He couldn't bear the idea of Link seeing the frail at her most vulnerable.   Ghostly images of pain and terror and defiance floated before his eyes.  He pushed them aside.  Getting blindly pissed off at this point wouldn't do him any good anyway.  \n\n\n\"I've seen-\"\n\nCreed hit Cavallo hard enough to break his nose.  The former boss gave a short cry and sprayed a mist of blood out onto the front of his white t-shirt.  \"Shut the fuck up.  I don't think you watched it the right way the first time.  See, you were looking at it as a way to get your fucking rocks off.  This time, it's more of a professional courtesy.  Foreshadowing for what the rest of your life is going to be like.\"\n\n\"Let's not be hasty.  I've still got connections.\"  He coughed out another mist of blood.\n\n\"I don't give a shit about  how much you scream, talk, babble, swear, whatever.  My frail is still here and she's dealt with more than enough shit from you for one lifetime.  She don't need to hear you now.\"  Creed opened a drawer the side of the table and got out a tennis ball and a roll of silver duct tape.  He shoved the ball in Cavallo's mouth.  A sharp cracking sound filled the room as the former boss's jaw opened too wide too fast.  The cry of pain came out as nothing more than a muffled whine.  Creed wrapped two long strips of tape around Cavallo's head to ensure that the ball stayed in place.  He pushed against Paulie's broken ribs again, just to test the improvised gag.  When he was satisfied that his captive's cry of pain was effectively blocked, Creed walked out of the room.\n\n\n*~*~*~*~*~*\n\nKelly stood in front of the one way glass and watched Stan.  The speaker was off and Kelly wasn't bold enough to start trying buttons.  She didn't really need sound anyway.  It looked as if Stan had tired himself out with all the screaming and struggling.  He was sitting there with his head hanging down, his chin on his chest.  Seeing him like that, tied up, vulnerable, made her feel almost sorry for him. \n\nShe told herself that Stan didn't deserve that twinge of guilt.  Not after everything he'd done.  After everything he'd caused to happen.\n\nThe sound of a footstep made her turn.  Conlon appeared from around the corner.  He walked over and stood next to her, his eyes on Stan.\n\n\"Makes me a terrible person doesn't it.\"  Her voice was quiet.  \"Leaving him here with Victor.\"  \n\nConlon shrugged.  \"I don't know.  You wanted to talk to him so that you could end it for yourself, right?\"\n\nThe corner of her mouth quirked into a little smile.  \"To try to anyway.\"\n\n\"He needs his own ending.  His'll just be different than yours.\"\n\n*~*~*~*~*~*\n\nCreed let Conlon and the frail out.  When he got back, he stood in front of the window looking at Stan.  \n\nThe speakers were off.  The fat bastard's chest was rising and falling rhythmically.  He was snoring.  Sleep was a defense mechanism.  The mind escaping from reality.  Maybe it was a good thing.  Creed needed time to calm himself down.  \n\nTorture was a delicate thing.  It took planning, knowledge, and calm if you were going to do it right and he'd waited too long for this not to do it right.  He could say that he owed it to the frail.  That was true enough in its own way, though it was mostly for himself.  Kelly had already gotten her closure.  Now he needed his.\n\nStan stirred in the chair, and then he sat up with a start.  Creed opened the door and leaned against the frame, a smile slowly spreading across his face.  \"Have a nice nap?\"\n\nThe heavy scent of fear and sweat saturated the room.  \"Look, I'll tell you anything you want to know.\"\n\nCreed gave a low chuckle and shut the door behind himself.  \"Why the fuck would I ask you anything?  You wouldn't know the truth if ran up and shit in your lap.\"  Creed moved behind Stan.  Stan tried to turn his head enough to see what was happening.  \"Nah, 'f I wanna know anything about what you did, I'll ask the frail.\"  He set a pair of pliers on the folding chair the frail had used.  The metal on metal sound make Stan flinch.\n\n\"People will know I'm missing.\"  Stan was struggling to keep his voice calm.  \"They'll be looking for me.  Besides, I'm responsible for Cody's care.  Kelly would just hate it if she thought her dear little brother was just warehoused somewhere.  That'd be your fault.\"\n\nCreed shrugged and sat on the floor in front of Stan.  \"You know anything about me Stan?\"\n\nCreed could see Stan's mind racing, trying to come up with a good answer.  \"I don't know, a little.\"\n\n\"What you mean is no.\"  Creed pulled off Stan's shoes.\n\n\"What're you-\" \n\n\"Shut the fuck up.  Let me enlighten you.  I don't do anything half-assed.\"  He pulled Stan's socks off and ignored the accompanying protests and ineffectual struggles.  \"Far as anybody is gonna be able to tell, you decided to disappear for awhile.  You got overwhelmed with all the family shit going on and the constant media attention.  Course it looks like you like that, but that's just a front you put on for the cameras.  I got plans for the kid too.\"\n\nCreed picked up the pliers.\n\nStan was squirming in his chair.  The pool of terror deepened.  \"What are those for?\"  \n\nCreed grinned and pinched the little toe of Stan's right foot in the jaws of pliers.  Stan gave a shocked cry and started to babble again.  Creed didn't bother listening to what Stan was saying; he just waited until the tirade slowed.  Then he eased the pressure on the digit, just slightly.  \n\n\"Oh thank God, I knew you were a reasonable-\"  \n\nCreed crushed the bones in the toe and grinned as Stan's scream filled the room.\n\nHe was whimpering.  \"Wh-Why-?\"\n\n\"Why?  You really are a dumb son of a bitch.\"  Creed crushed the little toe on the other foot.  Stan screamed again.  This time a rush of piss accompanied the scream.  \n\n\"Sh-She forgave me!\"  He was blubbering like a fucking baby now.\n\nCreed smiled.  \"Yeah, the frail is pure class.\"  He crushed the second toe on Stan's right foot and waited for the scream to die down to a desperate sobbing.  \"This ain't about her though.\"\n\n\"Who then?\"  The words were barely discernible, but Creed'd had years of practice in deciphering pained screams.\n\nCreed grinned and chose the third toe of Stan's left foot.  The pliers shattered and ground the small bones.  Stan's scream was hoarse.  \"Me.  She's my mate.  Never thought I even wanted a mate and then she showed up.  You hurt her because you thought you could get away with it or because you got balls the size of fucking raisins.  I don't give a shit why you did it.  I just know that you pissed me off.  She's pure class, but I'm a fucking son of a bitch.\"\n\nHe closed the pliers on the big toe on Stan's left foot.\n\n*~*~*~*~*~*\n\nKelly stripped off her clothes and got into the shower as soon as she got back to the apartment.  She stood there under the hot water and tried to forget about where she'd been and what she'd seen.  \n\nShe knew what Victor did, but until she walked into that twisting maze of corridors and cameras it had been nothing more an abstraction.  Easily pushed aside by the emptiness left by Victor's absence and routines of daily life.  Today she had to face the truth head on in a place painted desperation gray and smelling of stagnation and fear.  It was as carefully planned as Cavallo's bunker and served the same purpose.  That was the unavoidable fact.\n\nKelly turned up the hot water and massaged the back of her neck.\n\nCassie would have told her to leave.  Professor Xavier would probably show up in person to offer false sympathy laced with smugness.  Her grandfather would tell her that he wanted her to be happy and that would be the truth.  Granna wouldn't mean to use it as a weapon, but she would.\n\nKelly sighed.  The idea was ridiculous anyway.  She was Victor's mate.  Being without him, even now, made her feel like she was missing a piece of her soul.  She'd figure out a way to cope with this the same way she'd learned to cope with his moods and to hear the endearments under the insults.   Besides, something had flickered through his eyes just after he woke her.  Something between ache and embarrassment and resignation.  She wasn't sure what that meant, but that fleeting look lingered in her mind.\n\nShe sighed and turned off the water.  She wrapped a towel around herself and stepped out of the shower to confront the pile of clothes on the bathroom floor.  Just the sight of them brought her back to that sterile little room and all the anger and fear contained inside it.  She could just toss the clothes.  It seemed like a waste, but she doubted she'd ever be able to look at them again without fighting nausea.  She looked at the pile a moment longer.  Just because they were tainted to her, didn't mean they were tainted to everyone.  \n\nShe dried off and pulled on sweats and a t-shirt, and then she went to the kitchen for a grocery bag and a manila envelope.  Kelly made a stop at her computer and after a few keystrokes addressed the envelope to Free the Girls and filled out the bare minimum on their donation form.  She tossed out the panties and stockings.  The blouse and skirt went into the bag in a crumpled heap.  The bra went into the envelope along with the printed form and twenty dollars from her household money.  The bra had still had the tags on it that morning.  She hoped they would forgive her for not washing it first.  She picked up the phone and called Conlon.\n\nThe few minutes it took him to get up to the apartment seemed more like a stretch of weeks.  Kelly's eyes never left the bag of clothing, as if it would somehow manifest Stan or that stark place or some other demon from the last few hours.",
        "The elevator tone sounded and Conlon stepped out.  \"You okay?  You sounded kind of weird on the phone.\"\n\n\"I'm fine.\"  Kelly's voice was tight.  She knew she didn't sound fine, but she wasn't going to give Conlon the opportunity to ask any more questions.  She picked up the bag and handed it to him.  \"Tomorrow, can you have these cleaned and then take them to the Goodwill or Volunteers of America or someplace like that.\"  She handed him the boots next.  \"These too.\"  She put the envelope in the crook of his arm.  \"While you're out, I'd appreciate it if you could mail this.  I have no idea how much postage it'll take.\"\n\n\"Okay.\"  He looked at her curiously.  \"Are you sure you just want to get rid of this stuff?\"\n\n\"Very sure.\"   As she watched Conlon walk out, she started to feel lighter.\n\n*~*~*~*~*~*\n\nCreed woke roaring from the nightmare.  His claws extended and slashing, the pain of his father carving into his chest with a shard of broken glass still bright enough for him to wonder why the scent of blood was fading.  The rage was still hot enough that he was blind to the utilitarian space for a long moment.  He could taste the hatred.  Feel it, and the residual fear mix on his skin to form a pungent slime that would linger until he sunk his claws into flesh and used blood to wash it away.  To replace emotional gore with physical gore.\n\nThat he could handle.  That he could tell himself he enjoyed.\n\nThe dream faded back into the dim past and Creed sat up, slicing through the remnants of the shredded blanket that had encircled him like insidious tentacles.  It had been weeks since a nightmare had swallowed him whole.  He put it down to exhaustion or lack of light or fresh air or decent food.  Then, he decided the why didn't matter.\n\nThere were two motherfuckers downstairs who just might bleed enough to cool his rage.\n\n*~*~*~*~*~*\n\nKelly never slept well when Victor was gone, but being without him from time to time was just a part of life.  She'd gotten used to wearing a shirt that still held Victor's scent and tossing and turning a cold bed by night and wandering from one empty space to another by day.  Time moved in a slow drizzle on those days, but she'd gotten used to those stagnant moments.  They were like time spent in a waiting room, it was dull, but limited in duration because Victor would be back.\n\nThis time seemed worse somehow.  It could have been that she knew Victor was so close by.  As the days blended one into the next, she started to wonder why it was that he was staying away.  The more she let that wondering chase itself around in her mind, the more she thought he was avoiding coming back.  \n\nHer appearance in his life was unusual to say the least.  Since then he'd been working to find the scattered pieces of the puzzle that brought her into the woods that day to start with and keep her out of harm's way so he could do it.  In a way, all of that turmoil made her interesting.  What did he have now?  She cooked and cleaned for him, but he could hire someone to do that.  She slept with him, but she didn't imagine he would have any trouble finding women who were just as willing, better looking and not so fragile.  Xavier's had been full of the less fragile and better looking variety.\n\nHe'd been everywhere.  Seen things she'd only read about.  Watched decades and centuries slip by and had found a way to not only keep going, but to turn all the changes to his advantage.  What did she have?  The ability to piss people off, a stubborn streak a mile wide, a comatose younger brother, a crazy mother and a pile of high school textbooks sitting on the coffee table.  \n\nWhat did he have to come back to really?\n\n*~*~*~*~*~*\n\nCreed stood in the narrow shower and washed off the stink of Paulie C's final moments.  Fucker had held on for nearly four days.  Reasonably impressive considering the kind of beating he'd taken over the course of those days.  Shit as he was at being a boss, he probably wouldn't have gotten there at all if he'd been prone to giving up easily.  \n\nThe fact that Cavallo was dead didn't mean his corpse was going to rest in peace.  In a few days, when the fat bastard started to get good and ripe, then he'd be ready to move into Stan's tiny cell.  That weak son of a bitch was starting to lose it already.  Not that Creed gave a shit.  A person didn't need to be sane to suffer.  The insane ones usually did a hell of a job of torturing themselves too, given the chance.\n\nHe turned off the water and pulled a rough towel off the rack.  Murder and torment were the easy part.  Going back to the frail was proving to be damn near impossible and that made no fucking sense because all he could think about was being back home with her.\n\nUsed to be easy.  He'd leave; get on with what he had to do, call the frail every few days and then go home to find her waiting for him.  What she told herself in the meantime was something he'd never considered before.  She could have told herself or anyone else anything that she could live with.\n\nShe couldn't do that this time though.  She'd seen too much and her imagination would fill in the rest.  She'd know what kind of a son of a bitch he really was.  Why the fuck would she want him to come back after that?\n\nHe pulled on jeans and a t-shirt.\n\nHe'd even thought about asking Conlon what the frail had been up to the past few days, but that idea had been dismissed quickly.  The other mutant might be useful for some things, but he was thick as shit when it came to understanding the frail.  Besides, asking Conlon would have meant admitting his doubts.  Out loud.  To a third party.\n\nIt'd make him look fucking weak.\n\nHe finished dressing and tossed the towel into the orange plastic basket in the bathroom.  Then he made his way through the twisting corridors.\n\nThe whole thing had been wrong from the start.  Doomed to end because she found out what he was and couldn't deal with the reality.  He knew that the first time he fucked her.  He couldn't have something normal.  Normal wasn't for animals like him.  \n\nCreed emerged through the concealed door at the garage level of the apartment and stared at the elevator for a long moment before he actually crossed the harshly lit space and got into it.  He turned off the arrival signal and started the elevator moving.  \n\nWhat he would do when she rejected him was a mystery to Creed.  Part of him wanted to let her go if that's what she needed.  Part of him wanted to kill her.  Which part would win would depend on the moment.\n\nThe doors slid open with a soft sigh of well-tuned mechanics.  The apartment was dim and silent and the scent of tears and anxiety teased at him.  His chest hurt as he stepped out and let the doors close behind him.  He focused on the scent and silently moved toward the source.  The frail was curled up on the sofa near the TV.  She lay on her side, wearing one of his shirts, and covered by one of his jackets.  Exhaustion and streaks of tears marred her face.  Even though she was asleep, anxiety still pounded with every beat of her heart.\n\nThe ache in his chest grew as he stood there and watched her.  Finally, he couldn't stand it anymore.  He sat down on the sofa next to her.  She stirred, but didn't wake up.  \n\nHis hand hesitated for a moment, then he stroked her cheek the tips of his claws barely making contact with her silky skin.\n\nThis time, she woke up.  She sat up quickly, her eyes were wide, but there was no fear in them, just something he could only label disbelief.  The anxiety vanished from her scent, and was replaced with sweet vanilla.  \n\nShe reached out to him and Creed pulled her close, his mouth finding hers in a soft kiss.  Her body molded to his, her hands stroking his back.\n\nAll of his doubts evaporated in the heat and certainty of that contact.  She was his mate.  That wouldn't change.  He tugged the jacket out from between them and pulled her closer.\n\n*~*~*~*~*~*\n\nAt first, Kelly was sure she was dreaming.  Victor wouldn't be sitting next to her watching her sleep.  Why would he?  He wasn't coming back.  While her heart pounded she waited for the image to shatter.  When it didn't, she reached out.  She was tentative, he wasn't.  Before Kelly could think, his mouth was on hers.  Thinking about anything seemed like a waste of time after that.  \n\nShe got lost in the taste of his mouth and the way he teased her with the rough part of his tongue.  Her hands wandered over his back and shoulders, reveling in the familiar slopes of his muscles and aching for the feeling of his skin against hers.  A soft growl rumbled from his chest and he pulled her closer.  Kelly straddled his lap, her mouth still on his.  Her head spun when he picked her up, but she didn't know if that was from the motion or just the fact the effect Victor always had on her.\n\nHe started up the stairs and nipped her lower lip.  Kelly's legs tightened around him and she rubbed herself against his erection.  He groaned and squeezed her bottom, pulling her closer.   One hand moved under the hem of her shirt and tore through the sides of her panties.  He dropped the offending scrap of fabric on the stairs and kept walking.\n\nIt seemed to take ages to get to bed.  By the time they did, there was a throbbing ache between Kelly's legs.  She moved one hand between their bodies and worked at the buttons of the shirt.  By the time he set her down, Kelly shrugged out of her last remaining garment and gasped for breath.  \n\nVictor watched her, a fang-baring grin spreading across his face.  Kelly blushed and slid back, making room for him.  He moved over her, his mouth softening, trailing kisses from her mouth down her neck to her collarbone.  His fingers teased the peaks of her nipples.\n\nKelly was beyond thinking.  Her hands stroked over his head and down his neck into the collar of his shirt and down his back, aching for the feeling of his skin beneath her fingers.  He growled again and started teasing her right nipple with the rough side of his tongue.  The little bud was already sensitive; the intense attention made Kelly whimper and squirm.  Victor held her still, mischief dancing in his eyes.  He put a light kiss on the swollen peak, then in the valley between her breasts.  He smiled up at her and traced the margin of her nipple with the sharp tip of one claw.\n\nA needy little whimper escaped her throat and she raised her hips against him.  He chuckled softly and began his assault on her other nipple, leaving it throbbing on the line between shattering pleasure and enough pain to bring tears to her eyes.  Just before her whimpers turned into incoherent begging, he placed a soothing kiss on her tender flesh and trailed those light kisses down over her stomach.\n\nKelly's body responded.  She opened herself to him, exposing her tenderest places without a second thought to the assault that would come from that tongue.  He held her legs wide and started pressing teasing licks and kisses against her dripping sex.\n\nHis tongue delved past her lower lips driving her to the edge with fleeting, velvety touches.  Desire had grown to aching need.  Kelly reached for his head and lifted her hips.  The insistence of her need was no match for the strength of his resolve.  He kept teasing, bumping into that sensitive little button just enough to keep her on the edge.  Kelly was sure that she'd slipped into a space outside of time where nothing existed except the coiled tension in her lower tummy and the man who kept tightening the spring.  \n\nWithout warning, Victor's lips captured that little nub and he sucked firmly.  Release hit Kelly with a force that tore a scream from her throat.  The world contracted to nothing more than a bubble of pleasure around her and stayed there, suspended for what seemed like forever.  After that encapsulated eternity, she felt his mouth moving up her body.  This time, when she touched his shoulder she felt only bare skin.  His mouth found hers and she tasted herself on his lips.  Kelly raised her hips and her hands drifted down over his back to his hips, seeking more connection.\n\nHe shifted so that his broad tip was against her entrance; his eyes were locked on hers.  In that moment his gaze was touching her as intimately as his manhood was.   Taking her eyes off of his was unthinkable.  His eyes didn't shift either, even as he pushed inside her slowly.  \n\nKelly was lost in his eyes.  Her body moved with his, picking up his slow rhythm.  The tension was coiling again.  She let the moment consume her, following the growing intensity to her second release.  Her eyes never left his.  His gaze never wavered, not even when his own release took over.\n\n*~*~*~*~*~*\n\nKelly wasn't sure how long the silence stretched between them, but she decided that it didn't really matter.  She was curled against his chest.  His fingers were laced in her hair.  A low purr vibrated though him and into her and broke the silence from time to time.  This had to be what perfection was.  Pleasure.  Warmth.  Safety.  Certainty.  Afterglow.  A million other things that Kelly didn't have words for.  A million other things that didn't need words to be understood.\n\nHe stroked her cheek and she looked up at him, a little smile on her lips.  \n\nA little grin tugged at the corner of his mouth.  \"Hungry?\"\n\nKelly laughed.  \"I missed you.\"  Her lips grazed his chest lightly.\n\nHe chuckled and kissed her lightly.  \"Same old sentimental shit.  Good thing I got back when I did, there might not have been any of you left.\"  He stroked his thumb over her ribs.  \n\nKelly studied the mat of hair on his chest.  \"I cook for Conlon all the time.\"\n\nOne fingertip traced the point of her hipbone.  \"You just cook it, or do you eat it too?\"  His voice was soft.\n\n\"I eat.\"  A little shrug.  \"Some.\"\n\nHe sighed and kissed the top of her head.  \"C'mon.  We're going out to dinner.\"\n\nKelly looked up at him.  \"Now?\"  A note of panic squeaked into her voice.  \"It's late-\"\n\n\"It's only seven-thirty.\"  A little smirk.  \"If you shake that pretty little ass of yours we can be out of here in an hour.  You been cooped up long enough.\"\n\nKelly shifted uncertainly.  Hiding had been woven into the way she lived.  It was something she never really considered anymore.  She'd moved from hating it to accepting it to using it as a security blanket of sorts.  This was the first time she'd thought of that isolation as being over.  It was a little frightening.  She reminded herself that Victor would be there.  \n\nShe looked up at him, a little smile tugged at the corner of her mouth.  \"Gonna make me shower alone?\"\n\nHe laughed.  \"Fuck no.\"  He got up and grabbed her wrist.\n\n*~*~*~*~*~*\n\nKelly tapped the end of her pencil against her notebook and looked at the clock again.  Exactly one minute and thirty-seven seconds later than the last time she looked.  She looked down at the page and tried to decipher what she'd written.  Sines, cosines and tangents blended and rewove themselves into something jagged and disjointed.  She closed the notebook and rubbed her eyes.\n\nThe last couple of weeks had been strange.  Victor came and went at odd hours, probably to make it easier for her to keep her promise not to ask questions.  When he came back, he was always freshly showered and distant.  Almost too raw for anything but hours spent with alcohol and isolation.  Seeing him like that made her heart hurt.  Saying something about it, suggesting that it was time to let Stan go, would have upset him more.  She carried the weight of the ache in silence and when he was ready to reach for her, she reached back.\n\nHer phone rang, breaking the chain of her thoughts.  She looked at it and saw her grandparents' number.  Kelly put on a smile before she answered.\n\n\"Hi.\"\n\n\"Hi there, Hon.\"  Her grandfather sounded happy to hear her voice, but there was something uncertain in his voice too.  \"I didn't interrupt you're studying, did I?\"\n\nKelly looked at the open book, then closed it.  \"No.  I think I stopped getting anywhere with it about twenty minutes ago.  I'll work on it some more tonight when I Skype with Cassie.  Is Granna on the other line?\"\n\n\"No.  Her ladies group has some kind of speaker this afternoon.\"\n\n\"I think she told me this one was the upcycler.\"\n\n\"The what?\"  \n\n\"Upcycling.  From what she said it's kind of like making crafty useful things out of things you'd throw away.\"\n\nHe groaned.  \"Terrific.\"  \n\nKelly laughed softly.  \"It's supposed to be very environmentally friendly, and economical.\"\n\n\"Not the way your grandmother will approach it.\"  He sighed and the heaviness of a few minutes before was back in his voice.  \"Anyway, I called when she was out because I wanted to you know ahead of time.\"\n\nKelly sat up, her mind raced.  \"Is it Cody?  Conlon gave me an update this morning; he didn't say anything was wrong.\"\n\n\"It is Cody, but not like that.  Stan's been officially missing for two weeks.  The lawyer tells me that now would be the best time to petition for temporary custody.  Because Stan never legally adopted you kids and because your mother's not able to take care of him we've got a decent shot.  Someone has to be able to make medical decisions.\"  From the sound in his voice, there was more.  Kelly waited.  He sighed.  \"I wanted to tell you before anything happened.  I didn't want you to feel like your grandmother and I are trying to take anything away from you.\"\n\nIt took Kelly a moment to process that.  \"But we talked about this.  I always expected Cody to live with you and Granna.\"\n\n\"I know, but that was just talk.  Something that might happen someday if certain things lined up.\"\n\n\"I don't know about it being all talk.  I think Victor would have done it if everything else hadn't gotten so crazy.  I guess things have changed but my life is still too...\"  She shook her head.  \"Cody's going to wake up and he'll need stability when he does.\"\n\n\"There's something else.  The lawyer says we have a good chance, but that we'd have an even better chance if you were to come out of hiding.\"\n\nKelly was silent for a long moment.  \"Even if I wanted to, I'm dead.  Technically.\"\n\n\"Stan identified the body as yours and used connections to push the declaration through.  With proof, the court could reverse that.\"\n\n\"But to talk about Stan in court, in front of anyone who happened to be there.  I don't know if I could do it.\"\n\n\"This would be heard in family court.  Proceedings are closed to the public.  I know it's a lot to ask.\"\n\nKelly sighed.  \"It's for Cody.  Let me think about it?\"\n\n\"Sure.\"  A silence stretched between them.  \"Can I ask something else?\"\n\nSomething about the question made her squirm.  \"You know you can.\"\n\n\"Why do you sound so unhappy.\"\n\nKelly sighed and tried to figure out how much was safe to say.  The whole truth wasn't something she couldn't put words to.  Not yet, maybe not ever.  She wouldn't be able to get a clever lie past her lips either. \n\n\"Kelly, I know that Stan didn't decide to run off to Tahiti.\"\n\nRelief washed through her.  She took a deep breath.  \"I knew what Victor was going to do, not specifically or anything, but I had a good general idea.  Now though...\"\n\n\"The certainty of what you know bothers you.\"\n\nHer eyebrows drew together, considering that.  \"No, not really.\"  She took a deep breath.  \"I know it probably should.  Stan might be an oxygen thief, but he's a human being.\"\n\n\"Technically.\"\n\nShe gave a short laugh, but there was no real humor in the flat tone.  \"Whatever happens, Stan has it coming.\"  She drew her knees up a little more.  \"It isn't really about him anyway.\"\n\n\"It's about Victor.\"  There was a tightness in his voice.\n\n\"Not like that.\"\n\n\"Kelly, the way Victor is-\"\n\n\"Stop, please!\"  Tears stung her eyes.  \"I just need to be able to say this.  I can't say it to Cassie because to her Victor is just a monster from a fairy tale.  I can't talk to Granna because the minute I try to say anything she gets upset and I can practically hear her wringing her hands.  I can't even talk to Victor because I know he won't hear it the way I mean it.\"",
        "\"I'm listening, honey.\"\n\nShe took a deep breath and tried to find the right words.  \"He doesn't tell me when he's going to leave.  I always know though because he gets so tense.  Not the same kind of tense he would get when he would leave other times.  This is more like he hates where he's going and what he's going to do when he gets there.  When he comes back, he won't even look at me for hours.  I know it's all my fault.  If it weren't for me he wouldn't feel like he had to keep Stan around-\"\n\n\"Kelly, that's not true.\"\n\n\"But you haven't seen him.\"\n\n\"I don't have to.\"\n\nKelly sighed.  \"I don't understand.\"\n\n\"The things Victor does - the things I used to do \u2013 \"  He took a deep breath.  \"When you have no ties, it's easier because you don't have anyone to shield.  When you do, you learn to build walls around certain areas of your life.  You keep the two halves as far apart as you can because you know that they can't exist together.  Like night and day, it's one or the other.  Victor knows how to live with the job when he's alone.  He's only starting to figure out how to protect you from it.\"\n\n\"I thought he had to hide it all the time, from everyone.\"  Kelly's voice was soft.\n\n\"It's different.  Those other people don't really matter to him, do they?\"\n\nA little shrug.  \"No.\"\n\n\"A few growls and a well-placed menacing look makes it's easy to keep them away.  You matter to him.  He's finding it harder to hide the parts of himself he needs to and share the parts of himself that he wants to.\"\n\nKelly decided to risk another question.  \"Was that hard for you too?  Keeping the two parts of your lives separate?\"\n\n\"There were times when I couldn't see your grandmother.  I had leave, I could have gone, but I knew that if she looked me in the eye, she would have known.  I couldn't expose her to that.\"\n\n\"So you stayed away.\"\n\n\"And got out as soon as I could.\" \n\n\"Victor's never been like this before though.\"\n\n\"I'm not asking for specifics, but he had to travel then?\"\n\nHer eyebrows drew together.  \"Well, yeah.  What's that got to do with it?\"\n\n\"He went through it.  You just weren't around to see it.\"  His voice was reasonable, calm.\n\nKelly felt some of the tension uncoiling in her chest.  \"I'm like mom, aren't I?  Every little thing sends me over the edge.\"\n\nHe gave a soft laugh.  \"You're young and you've coped with more in the last few months than most people ever will in a lifetime.  The fact that we can have this conversation means you're nowhere near the edge.\"\n\nShe smiled.  \"Thanks.\"  Her voice was soft.  \"For listening and for what you said.  I know you don't talk about that part of your life.\"\n\n\"Anything for my favorite granddaughter.\"\n\n*~*~*~*~*~*\n\nKelly and Victor lay face to face in bed, their limbs were tangled in sheets and blankets and in each other.  The intense passion of a few moments before had morphed into an equally intense closeness.  They shared warmth, shared breath, shared that slice of time when time itself doesn't matter.  His tongue teased over her lips.  Her fingers twined with his.  She closed her eyes and rested against his bicep.  He buried his nose in her hair and inhaled deeply.  The silence stretched a little longer.\n\nHe tapped on the side of her head with one clawed finger.  \"What's goin' on in there frail?\"\n\nShe looked up at him and smiled a little.  \"Just enjoying the moment.\"  She moved a little closer to him.\n\n\"Nah.\"  He teased her nipple with his thumb.  It hardened under the light touch.  He smirked.  \"Well, maybe some, but that ain't all.\"\n\n\"Grandpa called me today.\"   She told him about Cody and the lawyer's suggestion that she come out of hiding.  \n\nHe stayed silent while she spoke, but Kelly could feel the tension building in his muscles.  He rolled over onto his back and brought her with him, holding her head against his shoulder.  \"No.\"\n\nShe lifted her head to look at him.  \"No?  But if everything stays private-\"\n\nHe pulled her head back down.  \"It won't, frail.  Shit like this never does.  'Specially since Stan's fat ass was all over the fucking news talking about you bein' dead.\"\n\nShe was hovering between anger and tears.  \"But-\"\n\n\"But nothing.  You're not going to do it.  Not this way.\"  \n\nTension crept into her shoulders.  \"Without my identity I can't do anything.  I can't even go to college.  I can't travel anywhere-\"\n\n\"I didn't say you were gonna hide forever.  All's I said was that it wasn't gonna happen this way.  There're too many ways for this to turn to shit.\"  His fingers rubbed at the knot that had formed at the back of her neck.\n\n\"But they might not get Cody.\"  Her voice was small.  Arguing with Victor always bordered on frightening.  This was too important to her to try and protect his feelings or herself.  Tension fluttered through his chest and then dissipated.\n\nHis fingers worked through her hair.  \"Stan ain't the only one with influence.  Judges like to give the impression that they're so fucking upstanding.  They got problems too.  More often than you'd like to think, they call me.  They'll get Cody, but you ain't goin' anywhere near that fucking courtroom.\"\n\nShe arched against him, caught between relief and dread.  \"I don't want to hide the rest of my life.\"  There was a soft determination in her voice.  \"Stan wanted me out of the world.  If I hide, he gets what he wants.\"\n\nHe let the tips of his claws trail down her back.  \"I'm the one who got you dead.  I'll get you back again.\"\n\nShe looked up at him.  \"How?\"\n\nHis eyebrows drew together.  \"How?  How the fuck should I know how?  I get rid of people; I don't get 'em back.\"  He smiled a little, his eyes on hers.  \"That don't mean I can't do it.\"\n\nShe kissed his shoulder.  \"If anyone can, it's you.\"\n\nHe chuckled.  \"You're only saying that because you want me to fuck you again.\"  His mouth found hers.  \n\nKelly's fingers drifted down over his belly, then lower.  That wasn't why she'd said it, but it was as good a way as any to get lost for a few minutes.\n\n*~*~*~*~*~*\n\nCreed looked down at the sleeping frail.  This was the twenty-eighth time he'd left her.  Each time it was harder.  Each time he hated Stan a little more.  Each time he was amazed that he could hate Stan more than he already did.  The frail shifted in bed and sighed in her sleep.  He knew that if he watched her any longer he would get undressed and get back in bed with her.  \n\nHis steps were silent on the stairs.  Even after he got downstairs he didn't bother turning on the lights.  He looked toward the elevator, then went back to the kitchen and got a beer out of the fridge.  He turned on one of the pendant lights over the sink and leaned back against the counter, staring off into the dim room.\n\nThings should have been heading toward normal.  Joe had temporary custody of the kid, even without any extra intervention.  If Stan didn't show, that had a good chance of being made permanent.  The frail's exams were coming up, and he'd made reservations at the Cavinder.  He hadn't told her yet.  He figured he'd do that tomorrow.  As usual, Stan was fucking that up too.  He should have been thinking about a long weekend with the frail someplace where he could actually breathe.  Instead, all he could think of was who was going to watch over the motherfucker while he was gone. \n\nCreed took a long drink of the beer and glanced at the stack of books on the counter.  He picked up the small one on top and opened it to the page she had marked.  A little smile curled the corners of his lips as his eyes scanned the words.  Creed leaned back against the counter and read through the short story from beginning to end.  When he finished, he put the book inside his coat and walked toward the elevator.  There was a little smile on his face and a new spring in his step.\n\n*~*~*~*~*~*\n\nCreed leaned on the wall and watched Stan struggle weakly against the cuffs holding him to the chair in the white room where Kelly had seen him last.  Well, to be honest, it wasn't white anymore.  It was splattered with Stan's blood and various other fluids.  The scents blended, so did the colors on the walls and the floor.  It was a room filled with nightmares made physical.\n\n\"Shut up.\"  Creed said.  His voice was laced with exhaustion.\n\nStan looked up.  One of his eyes was swollen shut.  The other was in almost the same state.  His mangled nose sat at an odd angle.  He was missing several teeth from the last talk they'd talked.  Blood and spit was still dripping down his chin.  The rest of him was just as damaged, but none of it was enough to kill him.  Tremors ran through his body, but he was silent.\n\nCreed walked slowly in front of him.  \"You ever read, Stan?  I don't mean that religious shit, I mean classic stuff.\"\n\nStan mumbled something incomprehensible.  It might have been an answer, it might not have been.  Creed didn't really care.\n\nHe stopped and looked into the mangled face.  \"I'll take that as a no.\"  He started moving again.  \"The frail reads a lot.  Today, I was standing in my kitchen having a beer and trying to get myself to leave her again.  I ever tell you how much I fucking hate that?\"\n\nStan mumbled something incoherent that might have been an apology.  \n\n\"Seems like lately no matter what I'm doin', I'm not really there.  I'm thinking about you.\"  The back of a fist caught Stan across the jaw.  If the chair hadn't been bolted to the floor, it would have flipped over.  Creed kept walking, kept his tone conversational, despite the whimpering cries from the direction of the chair.  \"And that got me thinking.  Since I met the frail, you been right square in the middle of my fucking bed.  She's been scared of you, pissed off at you, having nightmares about you, all kinds of shit like that.  Now that she's finally starting to let you go, I can't seem to.  What the fuck do you think that's all about?\"\n\nStan hid his face and trembled. \"Please please please...\" He repeated it under his breath like a mantra.\n\nCreed ignored it.  \"That's were reading comes in.  So, while I'm standing there, drinking my beer and trying to make myself walk out the door, I started flipping through one of the frail's books and I found a certain little story by Edgar Allen Poe.\"  He pulled it out of his coat and opened it.  \n\nStan's trembling eased.  The fear was still in his scent, but there was a note of curiosity there too.  \n\nCreed went on.  \"See there's this guy named Montresor and this other asshole named Fortunato.  Fortunato has been pissing Montresor off for a long fucking time and he finally does something so fucking outrageous that Montresor can't take it anymore.  Poe doesn't say what it was that Fortunato's did, but I figure it was something to do with Montresor's mate.  So, Montresor decides he's gonna get his revenge.\"  He lifted the book.  \" 'AT LENGTH I would be avenged; this was a point definitively settled -- but the very definitiveness with which it was resolved precluded the idea of risk. I must not only punish, but punish with impunity. A wrong is unredressed when retribution overtakes its redresser.'\"  He looked up.  \"I got the 'punish with impunity' thing down.  Where I got stuck is the retribution overtaking the redresser idea.\"  Creed smiled, baring his fangs.  \"Old Edgar has a solution for that too.\"  He closed the book and tucked it back inside his coat.\n\nStan let out a high-pitched whine.  He started shaking his head and started babbling apologies and entreaties.  The scent of his terror saturated the room.\n\n\"Oh shut the fuck up for once in your goddamn life.\"  Creed walked over to the door and opened it.  \"See, Montresor figured out how to make Fortunato suffer a whole hell of a lot without taking himself away from his life.  All he needed was a good story about some wine, some bricks and some mortar.  Pretty fucking smart, huh?\"\n\nConfusion drew spicy ribbons through the heavy scent of fear.  \"Wh-what?\"\n\nCreed rolled his eyes.  \"You really are fucking stupid.  Guess you'll have a little while to think about it though.  Course, since this is the last time I'll ever see you, I won't know if you ever figured it out.  Then again, I don't really give a shit.\"  \n\nConfusion and fear filled the small space.  Creed smiled.  \"Bye Stan.\"\n\nHe shut the door behind himself turned off lights as he made his way down the twisting hallway.  The further away he got, the freer he felt.\n\n\n**Quote taken from \"A Cask of Amontillado\" by Edgar Allen Poe as posted on a free online literature website. "
    ],
    "authorname": "psyche_b_mused",
    "tags": [
        "victor creed",
        "human",
        "oral sex",
        "making love",
        "blood"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/what-the-cat-dragged-in-ch-31"
}