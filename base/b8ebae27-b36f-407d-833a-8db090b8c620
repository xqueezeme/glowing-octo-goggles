{
    "title": "Garden Art Pt. 01",
    "pages": [
        "Garden Art, Part 1\n\n(fetish, body-modification, tattoo, pierce)\n\nBy ChangeYourPassword\n\nAuthor's Note: This is a work of fiction. It is a story of sexual fantasies and fetishes. These sexual practices are not for everyone, but those of us who delve into them understand the allure. The characters in the story certainly do. If you enjoy this story and the fetishes involved, great. If not, please forget the whole thing.\n\nSynopsis: Mark gets lucky and discovers the love of his life, in a Prince's Palace.\n\nDamn! Flying in a private jet was, without a doubt, the only way to travel. Perhaps I should buy myself one. He thought. Nah, I'm not that rich. At least not yet.\n\n\"Is there anything I can get for you Mr. Clemons?\" The pilot asked over the intercom system. The little galley, aft, is fully stocked with beer, booze and sodas, and you'll find a bunch of snacks and comfort-food back there too.\n\nHe laughed. \"It's Mark. And I'm surprised that a good Muslim aircraft like this one is so well stocked.\"\n\nThe Pilot laughed, in turn. \"I'm Jerry, and well, Mark, we carry all kinds of passengers, and there are Muslims and there are Muslims, if you know what I mean.\"\n\n\"Hah, I do. Thanks. I'll find something in a bit. By the way, how long will it take us to get to the Kingdome?\"\n\n\"Well, the computer tells me that we'll be in Riyadh in a little over seventeen hours and twenty-two minutes.\"\n\n\"Christ,\" he moaned. \"No refueling stops? No chance to stretch my legs?\"\n\n\"Nope, not in this aircraft. Only the best for the Prince and his guests. If you get lonely, back there, or want a change of pace, you can always come up here, and swap places with one of us. We'll be happy to take a rest, while you stare at the clouds for a while.\"\n\n\"I might just do that later. Unless this thing also has a treadmill stashed somewhere in the tail.\"\n\nMark heard the laughter as the pilot responded. \"No sir, sorry, we're not that well equipped. I imagine that if the Prince knew you'd be bored, and interested, he would have provided you with an escort, to keep you entertained.\"\n\n\"Really? I thought that kind of 'gift' went out of style decades ago.\" He said, chuckling.\n\n\"Well, we've been driving this bus for the Family for several years now, and have seen it all. But I've already said too much. Please forget it and have a good flight.\" And Mark heard the speaker cut off with a click.\n\nAs he settled down with a Coke and his laptop, he began wondering for the thirty-second time what he was getting himself into.\n\nWhy was he even considering selling his company to the Arabs?\n\nHe was already rich.\n\nBut he was kind of bored, too.\n\nWhile earning his Master's Degree at the School of Engineering at USC, he'd more or less stumbled upon the idea and set up his design for a Social Media site for specific minorities. The one for Asian teens hadn't gone well, but for some reason the one for Muslim teens had exploded into a hugely popular web site. When he had someone run the analysis, it turned out to be just pure luck. Some group of kids in Dhahran started using his site, and the word spread, and then the whole thing took off.\n\nAs soon as he'd reached 100K users, the advertisers started throwing money his way, and when he hit ten million, worldwide, he'd become a millionaire.\n\nBut like computer nurds everywhere, and let's be frank, that's what he was, he didn't know what to do with all of that cash. And he didn't have a wife, or even a girlfriend -- and certainly not a boyfriend, he was defiantly a straight nurd!\n\nHe had met plenty of women, and bedded a few, but the pretty ones were either not intelligent enough, or were, per the standard model, after his money. And the intelligent ones, were not pretty enough, nothing special in bed, by comparison, and were also after his money.\n\nIn the movies, by now he would have bumped into the pretty waitress with a heart of gold and the sex cravings of a nympho, but that hadn't happened yet.\n\nSo here he was being pursued by a billionaire Saudi Prince, to sell his company for a boatload of money.\n\nWell, why not? There were other things he could do. Other challenges out there, for a really, really rich computer nerd.\n\nWhen the plane finally landed, he was met by a guy in a suit who bundled him into a huge limo and then escorted him into a stupendous suite in a ritzy, gold-plated hotel.\n\nRoom service was already waiting to provide him a fantastic meal, and then he was left to crash and recover from the jet-lag.\n\nLate the next morning he was up and dressed, fed and again collected by the same assistant and taken to meet the Prince's business manager. They, and a bevy of assistants spent several hours discussing the particulars of the offer.\n\nMark quickly realized that he should have brought along an accountant and a lawyer of his own, but he could always get them involved to review the paperwork, later. Anyway, it really just came down to, 'we'll give you a ton of cash, deposited to whatever bank you want, for 100% of your holdings.'\n\nThe amount would increase his current wealth by a factor of 100!\n\nIt was certainly well over what anyone back home figured the company was worth. And it made his head spin!\n\nWhen the business manager, saw his skeptical expression, he explained.\n\n\"Mr. Clemons, let me be frank. We know that number is high. Much more than your company is actually worth. But the Prince is adamant. He likes what you've done for the Muslim youth, and he wants to make sure that your web-site, remains a Muslim community facility, free of interference from any Western influence, and also free from any over-zealous Muslim force.\"\n\nHe paused for a moment to let his words sink in, before continuing. \"His Majesty the King, has blessed this enterprise. You should be proud. But what that also means, is that we're willing to pay you very handsomely for your enterprise.\"\n\nAs Mark sat there, stunned, the guy stood up. \"Now, if you'd come along, the Prince himself would like to meet you and learn more about your company, for himself. I'm sure you'll find that he is quite well versed on the technology.\"\n\nThey paraded through the elaborate corridors of the palace, all eleven of them, for hundreds of yards.\n\nMark did sense a difference when they entered the more private halls and rooms of the residential portion of the palace. The increase in the number of guards was also a giveaway.\n\nAt first, Mark was very much intimidated by the exhausted royal. He was older, handsome and elegantly dressed in a casual Western suit. They met and concluded introductions in his large and ornate office, before moving to a comfortable and much less formal lounge, nearby.\n\nWith the relocation most of the assistants, advisors and hangers-on were excluded, and Mark and had a chance to relax a bit and just talk to the man.\n\nHe was, of course quite a bit older, almost fatherly as he questioned Mark about his company and the software that he was so interested in buying. He also seemed happy to show off how much he actually knew about the technology.\n\nMark was admittedly impressed, and he found it easy to explain how and why he had created the web site, as well as go into the technical aspects that he had conquered to make it work so well. He was afraid that some of it went over His Majesty's head, but the man asked intelligent and insightful questions, smoothly covering his shortcomings.\n\nThis guy really is intelligent. Mark thought.\n\nAfter an hour, their discussion became more casual and personal, and the Prince seemed to enjoy drawing Mark out about modern youth, particularly in Arabia, as well as how they were perceived by Americans.\n\nMark was able to be honest and forthcoming as he had always had positive experiences whenever he had met or worked with his Moslem customers.\n\nThey really did hit it off, and enjoyed their discussion. So much so, that the Prince cancelled a couple of appointments to prolong their session.\n\nWhile ordering one of the schedule changes, in Arabic, he apparently also called for refreshments and companionship.\n\nThree beautiful women came in, a couple of them dressed scantily, and one stunningly naked.\n\nMark was dumbfounded, and he almost came in his pants as he was introduced to Garden. Her unusual name fit her perfectly, as her entire body was covered in tattoos that made her look like a walking garden. And she was fully nude, to show it all off.\n\nThe Prince, seeing his reaction, assigned her to sit with him, while the other two curled themselves around their master.\n\n\"This beautiful work of art is Garden, you can understand her name, I'm sure. She is the creation of a pair of my favorite artists. They do fantastic, and erotic work. Don't you agree?\" The Prince asked, proudly.\n\nMark had to take a deep breath and swallow to clear his throat. \"Your highness, she is truly a work of art. I have no words...\"\n\nThe Prince chuckled, \"I can see that.\"\n\nThey continued their discussion, and Mark did a surprisingly good job of continuing to participate with intelligent conversation despite being aroused and distracted by the fetish fantasy Garden sitting next to him.\n\nHer face and her body were perfectly beautiful. The girl was absolutely stunning, erotic, exotic and a bit bizarre, too. Her skin, from her neck to her toes was mostly green, tattooed to look like she was covered in vines and leaves, like ivory, but with colorful flowers interspersed. And to add to her eroticism, she also sported several piercings with golden rings, and some chain, as well.\n\nShe was the sexiest thing he'd ever seen.\n\nDespite her wet-dream appearance she was personable and intelligent, and when the Prince was interrupted by some assistant, she spoke to him casually and comfortably despite his obvious fascination. And the undeniable bulge in his pants. Her English was flawless -- she sounded like a normal American, a well-educated one, at that.\n\nHe had to tear himself away from her, to resume his conversations with the Prince, but only for a few more minutes.\n\n\"I'm sorry Martin, I'd love to talk with you more, but I have several meetings I must take care of. Perhaps we could get together again later this week. I'd really like to continue our discussions and get to know you better.\"\n\nEven though the great man spoke as if it were a question, Mark knew it was by local standards an order, but he had to get home.\n\n\"Your majesty. I'd love to stay, but my return flight is scheduled for tomorrow.\"\n\n\"Please call me Robert, now that we're friends. It's the English name I use. And reservations can easily be changed. And he spoke to one of his attendants, who immediately got on his phone.\n\nNodding toward the guy, the Prince again addressed him. \"Mark, your return flight will be adjusted and your stay at the hotel extended. Spend the week here. Enjoy yourself. I'll arrange for us to get together a couple more times, to discuss business and pleasure.\"\n\nThen with a playful smile, he put his hand on Mark's shoulder.\n\n\"And to ensure that you have no issues keeping yourself busy, in the interim, I would appreciate it if you would allow Garden to keep company with you for the rest of your stay.\"\n\nThat really struck him dumb. Holy shit! He'd have his own slave girl? The most erotic and exotic woman he had ever seen!\n\nIt took him a minute to actually speak. The Prince, entertained by the impact of his offer, sat quietly and expectantly, waiting.\n\nFinally, Mark was able to spit it out. \"Of course, your Highness. Er, Robert. I'd be delighted.\"\n\nThe old man smiled and winked at him, \"Very good. Enjoy yourself. Until this evening, then.\" He said as he walked out, followed by his staff, and the two beauties who had been hanging on him.\n\nMark was left standing, with Garden next to him. This can't be real, he thought to himself. But when he looked at the girl standing just inches away, he knew it was.\n\n\"Mr. Clemons,\" his escort said, interrupting his revere. \"If you would please have a seat for a few moments. Garden must run off and dress to leave the palace. Then a car will take the two of you back to your hotel, or wherever you'd like to go. The car and driver will be yours for the day and will return you here this evening.\"\n\n\"Great, thanks.\" Mark said as he sat back down. He remained in a trance as he watched Garden give him a small bow, before she turned and sauntered across the room and out a side door.\n\n\"Of course, you realize what an honor and a responsibility the Prince has granted you. His majesty trusts you to enjoy his woman, but not harm her. Enjoy her, all of her, but protect her, as well. The populace will recognize her, and won't bother you. You may go anywhere, take her anywhere. But by all means do not let her go anywhere without you,\" the Prince's man explained.\n\n\"I understand.\" Mark said solemnly. All he really wanted to do was spend time with her. Preferably in private, in his room, in his bed. But he wasn't sure if that was on the menu.\n\n'Excellent. To make it easier for you I will recommend to the driver a pleasant shopping area, and an exceptional restaurant where you could entertain dear Garden, this afternoon. Would that be acceptable?\"\n\n\"Very much so.\" He said, thinking; she would be his tour guide, not his sex partner. Oh well. It would still be a fun adventure.\n\nA few moments later Garden returned in a hooded cape that covered her from head to toe. It was a beautiful garment. Deep red with golden embroidery, reminiscent of the wardrobes of old Hollywood movies. She also wore a matching mask that hid the bottom half of her face.\n\nMark was disappointed that her fantastic body wasn't visible, at all. But he still had the memories...\n\nThe two of them were escorted out and to the waiting car. Garden described the landmarks as they were driven to a very up-scale indoor shopping mall. He was impressed as all of the famous name brands of Paris and Rome had stores lining the walkways, inside.\n\nHe was also intrigued by the deferential attitude shown them by everyone they passed. He assumed that the rich clothing worn by Garden identified her as a VIP, and therefore he was included in that class, as well.\n\nAs they walked and chatted, Mark became even more impressed by Garden's personality, intelligence and wit. She was truly a delightful woman, in addition of course, to a very sexy one.\n\nAfter only an hour, she seemed to know him well enough to escort him into a Hugo Boss shop where she instructed the proprietor to provide him with a beautiful suit, properly tailored, for the evening's meeting with the Prince.\n\nThe garment was handsome, and several times more expensive than anything he owned. But there was no mention of payment. When he asked Garden, she waved him off, casually. \"It will be billed against his majesty's account, and forgotten. You need to be better outfitted if you are to spend the evening with my Master.\"\n\n\"Well, if you say so.\"\n\nShe turned and looked at him. \"I do. And I want to see you in those clothes. I think you will look very attractive. Now I believe I'm hungry. How about you?\"\n\n\"I am.\"\n\n\"Well, let's go eat. And when we're finished, it will be time to return here for your new suit. Then we can take a break back at your hotel before returning to the palace.\"\n\nMark, just nodded. All he could think about was her mention of a break in his hotel room.\n\nThe restaurant was elegant and busy, but the two of them were shown to a cozy, and very private dining room.\n\nOnce inside, with the door securely closed, Garden casually slipped off her robes, and again stood before him beautifully naked, in all her artistically decorated glory. He reacted has he had back at the palace. Staring dumbfounded with his cock hard and tenting his pants.\n\n\"Are you all right?\" she asked with a small, confident smile.\n\n\"Um, yes. You're so beautiful. I don't know what to say; how to react.\"\n\n\"Well, your body seems to know.\" She said, giggling and glancing down at his crotch.\n\nHe blushed and stammered, \"sorry.\"\n\n\"Why? That's the intent. The prince had me decorated so I would always arouse him and any other man I met. I'm used to it, and to my role.\"\n\nShe grabbed his hand and they sat down side-by-side on a low couch.\n\n\"Now tell me about our sex life. You can imagine mine. But I'd like to know more about you.\"\n\nThe next couple of hours were a mind-blowing whirlwind for Mark. All throughout, he had trouble forming coherent thoughts. Garden's naked presence kept aroused and his brain muddled.\n\nThe food was excellent. And the servers were all female and discrete.\n\nGarden drew him out, and despite his embarrassment, he admitted to his intermittent and vanilla sex life. She didn't seem surprised, disappointed or scornful, just interested.\n\n\"Okay. Enough about me. I'm curious about you. How was it that everyone seemed to automatically understand that you were, ah, privileged?\"\n\nShe smiled. \"My collar.\"\n\nHe was a bit startled. But then it made sense. She was wearing a very ornate and obvious slave collar. It was tall, gold, and bejeweled and beautifully etched with Arabic calligraphy. He realized that despite her robe, hood and mask, her collar was always visible.\n\nHe was irked when he also realized that she'd been wearing the thing all day, and distracted by her body, he hadn't really noticed.\n\nShe seemed to understand his chagrin. \"It identifies me as belonging to the Prince, and I can never remove it.\"\n\nAs he thought about the implications, he became upset. He'd been lusting after her since the moment he saw her. And like most men, his cock had overridden his brain and his compassion.\n\nAgain, she read him and his expression, like a book. \"It's okay. I'm used to it. Resigned, to my life. And actually, it's not a bad life, at that. I've always been the pragmatic sort.\"\n\nEmbarrassed and troubled, he asked quietly. \"Do you want to tell me about it? I am curious, and also concerned.\"\n\nShe smiled, placidly. \"If you'd like. I've told it before, several times.\"\n\nShe then went on to explain that she had been a grad student, working on her PhD in Archeology. She and a small team from the university had spent a couple months o a dig in the Nile valley. When it ended, she and a few friends had decided to take advantage of the location and do some more exploring, touristy kinds of things, around other parts of the Middle East.\n\nThey'd headed East and visited Kuwait, Bahrain, Qatar and the Saudi Kingdome. It had been fun and exciting. As time went on, though the others had headed home, until there were just two of them, left. They'd become friendly with a couple of professors at the University and had been asked to stay and do some additional research with them. It was an easy offer to accept, and they'd been well treated, and had met a lot of the upper-class. A big deal in these parts.\n\nWhen her friend had to call it quits and head home because of a sick parent, she had stayed on, alone. Not her smartest decision. Western women, alone in Arabia were easy pickings. One of the lesser princes that she'd met took a special interest in her. He'd had her picked up and brought to his uncle's palace, where the Prince himself had been intrigued by her and in rescuing her from his nephew, had kept her around.\n\nOf course, she'd been horrified. Frightened and offended too. How dare they? But she'd already learned enough about the way things worked, here, to understand that there was no way she could fight it.\n\nAnd they were so good at it. There had been drugs, and she had been treated like a princess to such an extent that she'd quickly gotten used to her new life, and all of the perks.\n\nAnd there hadn't actually been any rape, at least nothing violent. Women were just expected to submit to the men.\n\nAfter a couple of months, she had accepted her new reality. And only then did they step it up a notch. They drugged her, and she actually only came to a couple of weeks later, with her new body, and name.",
        "\"I awoke in a bed, in a clinic, here in the palace. First, I noticed how much bigger my breasts were. I think they're something like G-cups. Then I noticed all of the piercings. I felt them in my tongue, my septum and my ears. Then, upon further exploration I found the rings in my nipples and then in my clit and pussy lips. All of them are gold and very much permanent.\"\n\nAnd she shook her head, disgustedly.\n\nOnce she was allowed to stand and really examine herself in a big wall mirror, did she understand the enormity of the changes.\n\nHer whole body had been tattooed, by an artist flown in specifically for the purpose. The only bare skin left undecorated was her face, and even that had had been tattooed. That part of her looked like a fashion model, or Hollywood starlet heavily made-up, for a night on the town.\n\nAll the rest of her had been covered in vines and leaves, in shades of green, with colorful flowers, interspersed, throughout. There were also small birds and bees hiding and fluttering about, adding more splashes of bright color to her body.\n\nHe hadn't noticed the wildlife. He made a mental note to search them out, later, if he had the opportunity. He sure holed he would.\n\n\"I cried for a week. I'd always been proud of my body, even though it wasn't all that important to me. I was far more interested in my studies, my brain, than in showing off my curves. But there I was. Some sort of bizarre sex goddess.\n\n\"After I'd healed, and gotten over my initial depression, I'd been collared and taken into the harem to be taught how to please a man with my new body.\n\n\"When I resisted the efforts of the mistress of the harem, they went further. Partly as punishment and partly to break me.\"\n\nThey'd taken me back to the plastic surgeon and, somehow, he'd reshaped my ears, adding cartilage to make them tall and pointed, like a pixie or a genie.\n\nMark was ashamed to admit to himself, that he loved the look of her ears.\n\nThen the hair of her head had been lasered off, all of it except for around her eyes and a patch at the top of her head. So, she was almost bald. Except for a pony tail high on her skull. They had then fitted the top of her head with a gold fillagree skull cap with a collar in the center that slid over her remaining hair. It was then locked in place with several surface piercings. In the process they'd also added more hair inside the collar. Human hair, died blonde to match her own. It had given her a long full pony tail that stuck up several inches above her head and then flowed down her back, like a beautiful waterfall.\n\nShe'd paused at that point to take a drink of fruit juice. And while she did, Mark continued to stare at her and appreciate her body.\n\nWhen she turned back to him, he couldn't help himself. \"And the bell?\" He asked, tentatively. He'd heard the thing jingling all day and night and, he was embarrassed to say, it's delicate tinkling sounds had fascinated him. The thing constantly called attention to her.\n\nShe sighed, and went into the details of her piercings. Describing them clinically and objectively.\n\nHer nipples had solid, golden, two-inch rings hanging from them. And they were connected by a chain, that served as a great handle for dragging her around.\n\nHer pussy had eight half-inch rings piercing her lips on each side. They pulled and jangled as she moved.\n\nHer clit hood had been cut back and the clitoris itself had been pierced, with a one-inch ring placed, horizontally, in the hole. Making it worse, a small bell was mounted on that ring. The thing drove her crazy as it jangled and dangled, and bumped against her thighs, all the while sending shocks through the bundle of nerves it was attached to. Some of the feelings were pleasant, while others were painful. Wherever she went she jingled, and even the guards snickered when she passed. The Prince and the few other men who were allowed to screw her often laughed in delight as her bell rang for them.\n\nThe only time her bell didn't attract unwanted attention was when she was fully dressed in a burka. The head-to-toe garment muffled the sound.\n\nHer ears were pierced in multiple places, Big three-inch hoops dangled from her lobes, and several other, more delicate rings ran up the outside of her ears all the way up to the tall tips of her elf-like ears.\n\nHer tongue had been pierced, twice, so when she sucked on a cock, or even a pussy, she could provide even more pleasure to her lover.\n\nHe almost lost it when she so casually mentioned oral sex like that.\n\nBut she just carried on. She was apparently used to describing her decorations.\n\nPerhaps her most annoying piercing passed through a grommet in her septum. That large ring through it, hung down to the top of her lips. To her, anyway, it was the ultimate symbol of her sex slave status.\n\n\"And finally, as you can see, they added a couple of chains, running from the nose ring, across my cheeks to an ear piercing. They are really annoying when I sleep, and when I eat, too, as they always get in the way.\"\n\nAnd despite what she'd said before about her pragmatism, and her clinical description of her decorations, she was obviously not as dispassionate as she tried to be. Mark could see tears sliding down her cheeks, and her voice had grown a little shaky as she delivered the last part of her story.\n\nHe reached over and held her hand, trying to console her and let her know that he understood, to some extent, how she felt.\n\nIt only took her a few minutes to compose herself. Wiping her eyes with her napkin.\n\n\"Sorry,\" she mumbled.\n\n\"No. I'm sorry,\" he replied. \"Sorry for asking you, and sorry for all that's been done to you.\"\n\nShe patted his hand. \"I understand. But what's done is done. And like I said, my life isn't all that bad. I've actually been able to continue with my studies. Almost all of it over the Intranet, but in any case, I'm working to finish my dissertation with the University, here. So soon, I'll have my PhD. Then I hope to be able to teach, like I always intended, but of course, only over the Internet.\"\n\nThen she actually chuckled. \"But I won't be able to use ZOOM or any of those video conference apps, unless I wear a full hijab.\"\n\nHe looked at her questioningly.\n\n\"The head cover and mask of a chaste Muslim woman.\" She explained.\n\n\"Ah.\"\n\nWhen they finished their meal, Garden slipped her robes back on and they returned to the clothing store for his suit.\n\nThey spent another hour there, with Garden critically reviewing him in his new clothes. She ordered the tailor and the manager around as if they were her servants, and perhaps they were. Of course, she treated Mark, in a similar manor, perhaps a little better, but she was without a doubt the one in total control.\n\nFinished, with Mark still wearing his suit and looking very good, the limo whisked them away, and to his hotel.\n\nAs soon as they arrive in his suite, Garden stripped, casually and comfortably, a she always seemed to.\n\nShe saw him watching and smiled, confidently. \"I've gotten so used to being naked, that it's no longer an issue.\" She chuckled as she saw him blush.\n\nHe couldn't help but stare, especially now that he knew the story behind her glorious body decorations.\n\nAnd they were fantastically beautiful. It was a marvel. Her body was perfect, and the tattoos were so bizarre she was beyond erotic. He absolutely loved the way she looked!\n\nStill entranced by her body, and unable to stop gawking, he asked about the other thing that was bothering him.\n\n\"But doesn't that cause trouble? I mean, being on display with all the men around?\"\n\nShe smiled, gently, \"No. Not really. The collar protects me.\"\n\nAnd she laughed at his confused expression. \"All of the men around the palace, and even in the city know and understand that I am one of the Prince's women. And they know what would happen to them, and their families, if they so much as touched me. Hell, even staring at me could result in their beheading! It's happened several times, since I've been here. Not with me, but with others of his women. Some fool loses his mind and goes after them. The man is, of course caught. And then he, and his male children and his father too all lose their heads.\"\n\n\"The guy's children too? Holy shit!\"\n\n\"Yes, that's the tradition. His past, present and future is destroyed.\"\n\nThey stood quietly for a moment, as he took that fact in.\n\nThen, she giggled. \"But you don't have to worry. I've been given to you by the Prince himself. So, we can have all the sex you want.\"\n\nAnd she stepped up to him and kissed him as she began removing his new suit.\n\nAt first, he was a little hesitant. As much as he wanted her, he was uncomfortable taking advantage of her.\n\n\"Come on, let's have some fun. I promise you'll enjoy yourself. And believe me, so will I.\" Garden said as she continued stripping him. \"Very few of the men I get to spend time with are Americans, and as young and good looking as you are.\"\n\nHe smiled at her compliment, but he wasn't really sure if she would actually enjoy herself. She was after all a slave, and presumably used to doing as she was told and pleasing a man. Any man.\n\nBut he couldn't resist her offer.\n\nShe stripped him and as she did, she caressed him, and kissed him. And by the time he was naked, he was already close to cumming.\n\nShe knew, and understood so she backed off and took him into the bathroom where she used cool water and a cloth to wash him and prepare him for more.\n\nIt worked and he was able to relax, a bit.\n\nShe then led him to the bed where she laid him on his back and resumed kissing him, and licking him from his lips down to his now, once again raging cock.\n\nHe was of course in heaven! Not just because of Garden's loving manipulations, but also because of the sight of her decorated body, and the feel of her nipple rings and their chain, dragging along his torso. And the jingle of her bell. That he knew bothered and aroused her, just as it did him.\n\nWhen she began licking his very hard cock, with her soft tongue it felt fantastic, and when he felt the barbells that pierced her being dragged around the head, he almost lost it. He groaned and squirmed beneath her.\n\nShe knew she had him on the edge so she sat up over his hips and smiling radiantly, she lowered her ringed pussy down onto and around his sex.\n\nAs she began to slowly pull up and push down, and sway on him, he groaned and reaching up, he grabbed her breasts, and massaged them. Finally, he hooked his fingers through her nipple rings and held her down as he moaned and tensed, and came inside her.\n\nShe reached up and pried his fingers out of her rings so she could go back to riding him, and he was pleased, and hopeful when she appeared to orgasm, herself.\n\nHe did his best to hold his erection and succeeded, somehow. Until she finally completed her climax and then slowly continued to pump on him, until he was too soft to continue. Then she pulled off, and carefully and delicately lowered her head and took him back into her mouth and sucked him clean.\n\nThat step was perhaps the sexiest thing he'd ever experienced! No other woman had ever leaned his spunk and her juices off of him, afterwards. He didn't for a moment picture it as gross, or slutty. The way she took him in and cleaned him seemed to be the sexiest thing he'd ever seen or felt.\n\nFor a moment he thought he was getting hard again. But it wasn't possible.\n\nAnd after a few more minutes, she allowed his flaccid member to slide out of her mouth, before she began sliding gracefully, catlike up his body back toward his head.\n\nWhen she arrived at his head, she smiled and laid down on top of him. Again, he was thrilled by the feel of her breasts, with their rings and chain crushed onto his chest, and he heard and felt her clit ring and bell on his groin.\n\nShe nestled into the crook of his neck, and mumbled, \"was that nice?\"\n\nStill panting and trying to relax his breathing, he chuckled and sighed. \"It was the best, I've ever felt. You're fantastic. A sex Goddess.\"\n\nShe giggled. \"I don't know about that. But I enjoyed it too.\"\n\nKnowing what he was doing, he asked, \"kiss me?\"\n\n\"But...\"\n\n\"That's okay, I want it. Please kiss me.\"\n\nShe sighed, \"all right.\" And she lifted her head and kissed him, passionately. Pushing her tongue in and feeling around inside his mouth, and their tongues touched, and he tasted her and himself, and it was again, wonderful.\n\nEventually they had to come up for air. So, she resumed her position, snuggling into his neck.\n\nAnd they rested, like that. He hugged her to him and slowly ran his fingers up and down her bac, and then down to her ass.\n\nAnd she sighed with pleasure, as he kneaded her behind.\n\nA couple of hours later she stirred, and rolled off of him. She laid next to him staring up at the ceiling, with a smile on her pretty face. \"We'll have to get moving. I must clean myself out, and you must get washed and dressed, we'll have to leave for the palace in an hour. We mustn't be late. Never be late for the Prince.\"\n\n\"Of course. In a few minutes.\" He sighed.\n\nThey were laying in the bed, on their sides facing each other, he reached over affectionately and toyed with her nipple rings and their chain. He really wanted to finger her bell and hear its delightful jingle some more, but he knew how much she hated that thing.\n\nShe began running her nails on his thigh. Sending small shivers up his back.\n\nFeeling the need, she began explaining again.\n\nShe'd been in the Palace for more than a year now. To the rest of the world, she had disappeared. She'd lost touch with everyone she'd ever known. After her procedures, she had been shown a newspaper clipping that reported the death of her parents in an auto accident. It hurt her terribly. But there was nothing to be done about it, at that point.\n\nIt was almost a relief. She could never have been able to face them, even if she could get away, looking like she did now.\n\nSo now she was fully reconciled to her life. Such as it was. She was, of course, well fed and cared for, and all sha really had to do was be nice to the men, and women too, around the palace, and have sex with them whenever the Prince directed it.\n\nShe seldomly left the palace grounds. On occasion she would accompany some man who she'd been loaned to, out into the city, or even on some trip. But then, she'd always wear a full burka, with nothing underneath. Not unusual within the Arab world. Or even in Europe, these days.\n\nShe found those trips, to be both frightening and somewhat enjoyable. On those outings, she was all too aware of the sex object she had become, but she was pleased to be outside among other people and away from the stifling palace.\n\nHe found her descriptions fascinating, not to mention erotic, while she seemed to find it cathartic. She hadn't ever described those aspects of her life before to any of her lovers, but Mark was friendly, sympathetic, caring, and American. So, it all just spilled out.\n\nThey had to get going.\n\nBefore she left the bed, though, she first gave him another kiss, then she twisted and gave his sleeping cock a lick and a kiss. Before she giggled and ran off and into the bathroom.\n\nHe lay there, contented and drained until she emerged, and sat in the chair next to the bed.\n\n\"Okay, now you go. I'll wait here to help you get back into your handsome suit.\"\n\nThey met with the Prince, that night and he seemed to enjoy himself. He clearly liked Mark, his opinions and his stories of how he designed and produced his social media products, that were now so popular.\n\nMark found the Prince easy to talk to, and of course, he found talking about himself and his creation enjoyable, even if it did seem like bragging.\n\nAnd, of course, spending time with Garden made Mark even happier. Although she only sat quietly, nearby, looking as stunning as ever.\n\nWhen the Prince grew tired, the two of them headed back to the hotel. And to another glorious night in bed.\n\nGarden was a fantastic lover. It was clear that she had the experience and training to drive any man insane with lust. And it didn't bother him at all, that she was, in effect as good as any hooker on the planet.\n\nAnd between her skills, and her unbelievable body, Mark was in heaven. And his orgasm was the best ever. Afterwards he collapsed and they cuddled as they fell asleep.\n\nHe dreamt of Garden and sex, and tattoos and piercings. And woke up ready for another round, And Garden seemed happy to oblige him. And again, it was beyond wonderful.\n\nGarden spent the entire week with him, as his companion, guide and lover. He couldn't have been happier. And the more time they spent just hanging out together the more he came to like her. Excluding her fantastic body, and all of her decorations, she was fascinating, intelligent and a pleasure to be with.\n\nAnd the sex was unbelievable! She was very well trained.\n\n\"I like your nipple rings.\" He sighed after one session in bed.\n\n\"Oh?\"\n\n\"Yes. They come in handy.\"\n\n\"Huh?\" She was unsure where he was going. She'd already told him how annoying they could be, to her, that is.\n\nHe chuckled. \"Well with your tattoos covering everything so thoroughly, Without the rings, I wouldn't be able to find your wonderful nipples. And I do love sucking on your nipples.\"\n\n\"Oh, my gosh,\" she said, exasperated, \"you're such a guy.\" But then she laughed, \"but you're not like the rest of the ones around here.\"\n\n\"Thank you, I think.\"\n\n\"You're much nicer, and you seem to care about me.\" She said as she snuggled more lovingly to him.\n\n\"Oh, in that case.\" And he bent over and kissed her. \"I do care about you. I think you're wonderful.\"\n\nShe smiled and kissed him back.\n\n\"And, by the way, I love it when you suck on my nipples. But don't the rings get in the way?\"\n\n\"Well, they do. But I like the challenge of working around them.\"\n\nAnd he slid down so he could once again lick, kiss and suck on them, once again.\n\nGarden sighed in pleasure. She realized that she was as happy as she'd been in a long time.\n\nAfter a while, he slid further down and focused on her pussy.\n\nShe squirmed and moaned in pleasure as he gently nibbled on her clit.\n\n\"That feels so nice,\" She sighed.\n\n\"Mmm.\"\n\n\"But doesn't the ring there get in the way.\"\n\n\"No, I love it, and the bell too.\" He said before returning to kissing and licking her sex.\n\nHe paused for a moment, a bit later, \"and it helps me locate your clit, too.\" And he sucked the whole ring and its bell into his mouth pulling it in with his tongue, until his pursed lips were wrapped around her clit.\n\nShe moaned, and bent forward to see what he was doing. None of the men, and only one woman, had ever done that to her before. It felt fantastic and after only a few seconds she exploded in an orgasm, with him still sucking on her.\n\nHe knew from her shuddering and gasping that she was cumming, so he gently kept up his ministrations, until she finally relaxed, spent.\n\nHe played with her pussy rings, while she caught her breath.\n\nThen he slithered back up on top of her so they could kiss again. His cock was still too soft to do anything more, but he could feel it stirring as it rested on her mound. Damn! She was hot!\n\n\"That was very nice,\" she said, sighing, before they could kiss. \"You're getting very good at that. I'm not sure if it's ever felt so good.\"\n\n\"That's good, you deserve it.\" He said, before he kissed her.\n\nPerhaps, with a man like this, my jewelry isn't so bad. She thought.\n\nThey did mix in several meetings with the Prince's business managers, all designed to convince him to sell. He didn't let on, but he had already decided to take the money and run.\n\nAnd, of course, twice he met again with the Prince himself.\n\nGarden accompanied him to all of those sessions. And as soon as they returned to his room, she'd always strip down, show off her fantastically decorated body, and then they'd make love.",
        "Mark worried that it was all part of the art of the sale. Keeping him distracted and compliant so he'd be an easier subject for their pitch. But upon reflection, he didn't really care.\n\nWhen they weren't at the Palace, or in bed, Garden covered by her burka and scarves, took him on tours of the sights and pleasures of the capital city, and the places they visited were impressive and fascinating.\n\nShe also introduced him to a range of elegant restaurants that served local foods. He enjoyed some of the meals, while others were too unusual for his relatively bland tastes. But regardless, with her seated beside him, he had a good time.\n\nThey spent their nights in his hotel room, where she drove him crazy with her beauty and her skills.\n\nEach night, no matter how exhausted he was, from their previous night's escapades, she was able to get him wildly excited once again and he had the most mind-blowing orgasms he'd ever experienced, or ever imagined having.\n\nHe couldn't be sure, she was an experienced escort, but she seemed to be enjoying herself too.\n\nAnd either before or after they had sex, he loved standing or sitting on the edge of the bed, just admiring her as she laid comfortably, a green goddess on the white sheets of the bed. She would lay placidly, smiling as he stared at her. It was obvious to her that he was enthralled and aroused. She liked him a lot. He was the first American male she had been with since she'd been taken in by the Prince.\n\nShe was used to Arab men staring. And even though she wished she wasn't so decorated; she was resigned to it. It was who she now was, and would always be.\n\nAmong the sites they visited were several up-scale shopping arcades.\n\nShe seemed to particularly enjoy widow shopping, and being out in public, even though she was constrained by the required dress. Her burkas covered her completely, except for a small slit for her eyes. Her covering did, however always display her collar, and the sight of it always brought out the best behavior from the shop-keepers and the crowds.\n\nMark spent much of his time, while they walked among the masses of shoppers, day-dreaming about the decorated body beneath the robes.\n\nWhen they made love, Mark always tried his best to reciprocate, and several times he felt certain he had been successful. He sincerely hoped that was the case.\n\nShe did seem to enjoy being with him. She admitted that most of the men she'd been with had treated her poorly, like the sex object she was supposed to be.\n\nAs they wandered the streets, or relaxed in the room, they talked a lot, about everything and anything, and they both laughed a lot, too.\n\nHe was impressed by how intelligent she was. And how lovely, and personable and how much fun she could be.\n\nAs they were spending every minute together, it didn't take long for him to realize that if he ignored her decorations, and her garb, he loved everything else about her. She was, after all an American girl, of about his age.\n\nBut at every opportunity. he couldn't help staring at her body, and her unique and, in his opinion very erotic decorations.\n\nShe was always so casual about it, reconciled to her looks and used to men staring at her and caressing her and manhandling her.\n\nAs the week wore on, he found himself focusing on winning her over, like he would with any woman he was dating and falling in love with.\n\nHe thought it was working, he hoped it was. She did seem to be enjoying herself more. And her affection seemed to become more intense and focused on him, Mark, not just the man she was assigned to be with.\n\nAt the end of the week, Mark had one final session with both the Prince and his advisory team. Garden wasn't invited, she had been informed that she wasn't needed, so she stayed behind in the hotel.\n\nBack with the Prince, Mark told him what the big man wanted to hear. \"Your Highness, first I want to thank you for the wonderful time you and your people have showed me this past week. I will leave your country with fond memories of the city, the country, the people and your hospitality.\"\n\nAnd he smiled and nodded his head in the proscribed fashion.\n\n\"I have decided that you should indeed be the new owner of my company. It is so very important to the youth of your country and the Muslim world in general, I can think of no better master for the enterprise than you.\"\n\nThe Prince and his staff all smiled happily at his acceptance of their offer and their plans. But then Mark continued. \"I do have one additional request. And I sincerely hope that you will grant it to me, out of the kindness of your heart. Would you please include the lovely Garden as part of the remuneration package? Perhaps as a bonus for all of the hard work, I've dedicated to the construction of my so very popular and successful product.\"\n\nThe head advisor, Khalid, frowned, at his impertinence. And seeing the reaction, Mark got nervous.\n\nThe Prince though, smiled, knowingly. \"Ah, my friend, you have become smitten with that beautiful toy, eh?\"\n\nRelieved at not being turned down outright, or beheaded, Mark smiled back, \"Yes sir, I have. I do not have a woman in my life, I have spent far too much time building my systems. With the sale of my company, I will have the time and the resources, to enjoy my life, with someone like her.\"\n\n\"And you appreciate her uniquely decorated body?\"\n\n\"Yes, Your Majesty, I surely do. You have created a magical work of art, and I understand how difficult it must be for you to part with her, but as you surmised, I have become smitten by her.\"\n\nThe Prince, chuckled, \"then you shall have her, as my gift to you, my friend.\"\n\nMark was overjoyed. He'd pulled it off! Gotten everything he wanted, and then some.\n\nThe Prince could see that the young genius was very pleased. \"There is one thing that you must keep in mind. Even though I allow you to take my beloved Garden with you, do not forget who created her. And how she was created.\"\n\n\"Of course, sir. I will forever be in your debt.\" Mark said, happily and humbly.\n\nWith that they said their farewells, and Mark left the palace headed back to the hotel, and to his new love, Garden.\n\nHer reaction when he broke the news that she was free to return to the US with him, wasn't as happy a one as he expected.\n\n\"The Prince actually gifted me to you?\" she asked, uncertain and confused.\n\n\"Yes! When I accepted the deal, I asked for you as a favor, and he said 'yes'. Isn't it wonderful?\" And he reached over to hold her and hug her.\n\nShe stood quietly, unmoving for a while, then pushed him away.\n\n\"Are you certain? I can leave? With you?\"\n\n\"Yes. I'm certain.\"\n\n\"Mark, I don't dare leave. He'd kill both of us.\"\n\n\"Garden, my love. Don't be afraid. He really did agree to our departure, together, tomorrow.\"\n\nWhen she remained skeptical, he kissed her. \"Okay. I'll call Khalid. You can ask him. If he says it's true, will you come with me?\"\n\nShe looked at him for a while, her head whirling with the possibilities. \"Yes, Mark. If we can confirm it. I'll come with you. I'll be overjoyed to come with you.\"\n\nMark laughed, like a kid at Christmas, and pulled out his cell phone. He called Khalid, who answered immediately.\n\n\"Hello Mark, is there something wrong? The deal is complete, is it not? Everything is arranged for your flight home in the morning.\"\n\n\"Yes, everything is fine, Khalid. Better than fine. But Garden is uncertain. Please tell her about the last aspect of our arrangement. I'll put you on speaker.\"\n\n\"Ah, I believe I understand.\" Khalid was saying as the phone's speaker came to life.\n\n\"Garden, are you listening?\"\n\n\"Yes, I am, sir.\" She said, meekly.\n\n\"Well, I imagine Mark has told you that you are free to leave us, tomorrow. You may believe him. The Prince has gifted you to him. You will be taken care of. The Prince has so ordered it.\"\n\n\"Oh, my.\" She muttered.\n\nKhalid, hearing her, chuckled. \"Yes, my dear. The Prince likes Mark very much. So, he graciously gave you to him. We will all miss you around the Palace. Please go in peace, if you so wish.\"\n\nHe paused for a moment to see if there was anything else that needed to be said. When neither Mark nor Garden questioned him, he chuckled again and wished them peace and happiness, before hanging up the call.\n\nMark put his phone away and again reached to hug his lover.\n\nBut she pushed him away, and the look on her face made him anxious.\n\n\"But why?\" She asked, clearly upset and frightened. \"You know I can't go back. I don't exist anymore, and looking like this I can't wander around San Jose without causing a riot.\"\n\n\"Because...\"\n\n\"Because you want a sex slave? One with a slutty and freakish body?\" She broke in, almost screaming at him.\n\n\"No. No, no. Because I want to help you get out of this.\" He said waving his arm around, frustrated. And then he added. \"And because I think I'm in love with you!\"\n\nThat caused her to stop her rant, and stare at him. \"What?\"\n\n\"Look, Garden, or Kelly, whatever. I've really enjoyed my time with you. I want it to continue. I'm not looking for a sex slave. And, I'm not looking to rescue a damsel in distress, like some silly hero in a B-move. Although, I admit that would make sense.\"\n\nAnd he reached out and grabbed her hand.\n\n\"Kelly, please. I'm a lonely guy, who has just sold the thing that has kept me fully occupied for the last seven years. At this point I have nothing else to do with my life but enjoy all the money I could ever want. And the first thing on my list is to find someone to share my time and the money with. And I would like that to be you. If you want that role.\"\n\nHe used his grip to pull her closer, and then gently reached in and kissed her.\n\nShe was still uncertain about what was happing, but she kissed him back, almost mechanically like she usually did with the men in her life, but as they continued to kiss, she began to soften, and what he was offering began to sink in. And then she began to kiss him with more conviction, and more affection. And their passion grew, and she began to enjoy the feelings building inside her.\n\nWhen they finally broke off the kiss, both out of breath, he still held her close. And she cuddled into him, enjoying the hug.\n\n\"I think you deserve some payback form a male of the species. I can do that. I want to do that. Come back with me.\"\n\n\"But the Prince...\"\n\n\"Granted my request. You heard. You are free to accompany me. In fact, you may not have a choice. From what I can tell by the way he works. He might force you to go. But I don't want you to feel forced. I want you to decide to come with me.\"\n\nHe kissed her again, before continuing, \"and if it doesn't work out between us, you'll at least be free to do whatever you want. You won't be a slave anymore.\"\n\nShe was crying when she whispered, \"yes, I will come home with you. But it will be so hard.\"\n\nHe let go and held her apart so he could look into her eyes. \"I can only imagine, but I'll do my best to make it bearable. And even fun, for both of us.\"\n\nSighing, she leaned in and kissed him. Then with growing enthusiasm for the release she was going to get, she giggled. \"All right, so what do we need to do?\"\n\nBut before he could answer she added, \"And you might as well call me Garden. I haven't been 'Kelly' for years. And since she's officially dead, I don't think I can ever be her again.\"\n\nHe nodded, a little sadly at the situation, \"Well you need to pack and prepare to get on the plane. You don't have much time.\"\n\nShe chuckled. \"I don't really have that much to pack.\" And she waved at her naked form, and laughed, happily.\n\nHe laughed in reply. \"I can see that. And it turns me on. But you'll need something to wear, and you must have some cosmetics, toiletries and some personal things to take with us.\"\n\nShe nodded, \"You're right. I'll at least need my burka, a couple of them, but there is very little I want to take from this place.\"\n\nAs the day was drawing to a close, they stayed in and ordered dinner from room service. Both of them ate, quietly, lost in thoughts of what was to come. Overwhelmed by the possibilities.\n\nGarden remained skeptical. Could she really be leaving? Returning to America? With this man who she'd only known for a week. He had been a wonderful companion, but could she believe him? It all seemed to be too good to be true. Was it just a dream? Or was it some new form of mental torture? She couldn't believe that the Prince would bother with such a mean game, but...\n\nAnd if it was true, and she would be allowed to leave tomorrow. What would her life be like? With her body decorated as it is. How could she live in the States? In any role other than hooker, that is.\n\nMark was also lost in his thoughts and imaginings. What was he going to do, with his dream girl, back home? And that's what she was, a dream. A fantasy who he had negotiated for. Traded for a piece of his company.\n\nOf course, he was now rich. He could afford to do anything he wanted to. But Garden wasn't a thing he could own, not in the US. She was a piece of art, no doubt. As created by the Prince. And she was a fantastic lover. And even after only a week, he knew that she was intelligent and witty, and fun, and perfect for him.\n\nBut, could it last? Could the two of them stay together and live back home, where her looks and lifestyle would be so different that what she was used to?\n\nHe had no idea, but he undoubtedly wanted to try. And to make it work.\n\nWhen the meal was finished, and the staff had come in and cleared the table around them, they continued to sit and stare blankly at each other, still fully absorbed by their own musings.\n\nBut the closing of the door, as the cart was wheeled out, woke them from their trances.\n\n\"Is it real?\" Garden muttered.\n\n\"Yes.\"\n\n\"I'm sorry, but I find it so hard to believe.\" She said, finally looking directly at him.\n\n\"You'll see, in the morning. We'll get on the plane and fly away. Back to the real world. The USA.\" He said, quietly. But then he laughed. \"Well not really. We'll be going to California. Things, there aren't actually real.\"\n\nGarden looked at him quizzically.\n\nHe laughed again. \"Between Hollywood in the South and Silicon Valley in the North. California is more fake, magically fake, but fake nonetheless.\"\n\nShe smiled, understanding. She remembered how crazy that part of the country was.\n\n\"Perhaps that will work in my favor. I won't look real to anyone in America, except perhaps the residents of the magically fake part.\" She smiled as she stood up and twirled, displaying her fantastic body.\n\nAnd again, Mark's heart skipped a beat, and his cock almost instantly got hard as a rock. God she was erotically, exotically beautiful!\n\nHe stood up and stepped over to grab her, hold her and hug her.\n\nHe whispered, \"please believe me. We'll leave tomorrow, together\"\n\nShe shook her head, sadly. \"I can't. Not yet. But for tonight, I'll live like it's true.\" And she stepped back enough to stride off to the bedroom, with him held close.\n\nThey made love, that night, slowly and lovingly. Their passion intense but not overly energetic. No celebration for the future, just love in the present.\n\nIn the morning, Mark requested that the driver pick them up early, for their trip to the airport. They went to the Palace where one of the Prince's staff met them, and escorted Mark to a private waiting area, while Garden ran off to her old quarters, to grab a bag.\n\nShe returned in just fifteen minutes, and they were off to the airport.\n\nOnly as the car turned in through the gates of the airpark, did she start to believe. But she remained wary and afraid.\n\n\"Welcome back Mister Clemons.\" The copilot greeted him as he stepped into the jet's door.\n\n\"Good morning. I hope you're aware that there will be two of us, this trip.\" Mark said as he motioned Garden, fully wrapped in her burka, on board.\n\n\"Yes sir, we were informed. And we were also informed that the lady has no papers, so we will be assisting with that issue.\"\n\n\"Oh, great. I really appreciate it.\"\n\n\"No problem, sir. We've done it before, it shouldn't be an issue.\"\n\n\"Um, if you don't mind. How?\"\n\nThe pilot looked at him and simply said, \"money.\"\n\nMark knew better than to ask any more questions. He nodded and stepped into the plane. He immediately noticed that behind the first couple of rows of seats, the last few rows before the galley and head had been replaced by a bed, leaving just a narrow aisle along one side.\n\nFrom behind him, the copilot explained.\n\n\"We often set up our long-haul flights to allow our guests a bed.\n\n\"As long as you tell us, and allow us an occasional trip to the head, we'll ensure your privacy. To sleep, or whatever.\"\n\n\"Very nice, thank you.\" Mark said, smiling.\n\nThe copilot smiled back and then turned to close the cabin door, firmly. Mark and Garden immediately heard the engines start up.\n\nWhen Mark turned back to Garden, she was just peeling off her head covering, revealing her pretty face and a big smile.\n\nHe'd never seen her this happy and relaxed. She looked lovely, but still exotic as all hell, and Mark grabbed her and they kissed passionately.\n\n\"Without breaking off the kiss, she giggled and mumbled. \"I'm free!\"\n\n\"Yes, you are.\"\n\nJust then the plane's engines suddenly throttled back and the pilot opened the cabin door.\n\n\"Sorry, we just got a message that a package was being delivered from the Palace, and that we had to wait.\" He explained.\n\nThen as he stepped across to open the plain's hatch he nodded, \"Hi Garden. I didn't know that was you. Going home?\"\n\n\"Hi Jerry, and yes I am.\" she said emphatically.\n\n\"I'm happy for you.\"\n\nAs soon as he opened the door to the outside, a messenger appeared and handed up a large envelope. \"For Mister Clemons, with the Prince's compliments.\"\n\n\"Thank you\" both the pilot and Mark said, before Mark accepted the package, and the pilot closed and locked the door, once again. He then went back to the cockpit and before closing that door, called back, \"we'll be on our way in a couple of minutes.\"\n\nWhen Mark turned back to Garden, she seemed upset, as if she was just recovering from a fright.\n\n\"What's wrong?\" he asked, concerned.\n\n\"I thought they might have changed their minds, and weren't going to let me go.\"\n\nHe hugged her, whispering into her ear, \"relax, you're okay.\"\n\nThen he stepped back, \"I wonder what this is. Oh, and how did you know the pilot?\"\n\nShe looked at him shyly, \"I've flown with him several times before, as a companion for visitors.\"\n\n\"Ah,\" he said, but he felt embarrassed, for her.\n\nJust then the plane started taxiing, and the two of them almost lost their balance, so they climbed quickly into their seats and strapped in, across the aisle from one another.\n\nOnce in place Mark opened the envelope, curious about its contents.\n\nInside he found a collection of papers.\n\nExamining them he laughed. And she looked at him quizzically.\n\nHe looked over at her and held up a Saudi passport.\n\nIt's for you. A passport in the name of 'Garden al Eden'. And he laughed again. \"Who says the Prince doesn't have a sense of humor.\"\n\nThe envelope also included a birth certificate and assorted documents that would fully satisfy US customs.\n\n\"Let me see.\" She asked and he handed over the passport.\n\nShe looked at the photo. \"My god, they actually doctored one of my recent photos. You can hardly see my jewelry. And they added hair, too. Wow.!\"\n\n\"It will make it a lot easier for us to get you home, and even after that, building you a life.\" Mark said happily.\n\nStill strapped in for take-off, they could only hold hands as they dreamed about the future.\n\nA dozen minutes later, Jerry came on the speakers. \"All right. You two can move around if you want. We'll be flying for quite a while, so make yourselves comfortable.\"\n\n\"Thanks.\" Mark said to the ceiling, he assumed that there was a microphone up there, somewhere. And then he added. \"Hey, Jerry. That package included a passport for Garden. So, customs shouldn't be an issue. And we'd like a couple of hours of privacy, if you don't mind.\"",
        "\"No problem, Mark, Enjoy.\"\n\nAnd as Mark winked salaciously at her, they heard the speaker click off.\n\nThey made their way to the rear section where there was a decent bed behind a curtain. There they stripped, and made love, passionately, joining the mile-high club in the process.\n\n\"This is the first time I've actually felt like I was making love, real love, in years.\" She told him, panting slightly as they relaxed after they had each enjoyed wonderfully happy orgasms.\n\n\"I'm happy for you.\" And then he chuckled. \"And I'm happy for me too.\"\n\nShe kissed him in response.\n\nMany hours later, following the sun, they finally touched down in San Jose. They'd whiled away the time, talking, reading and napping. And making love one more time.\n\nThey met a customs agent before they deplaned. One who wasn't particularly concerned. The Prince's jet was well known, and their passports were in order.\n\nGarden arranged her burka to reveal her face, but nothing more. Even then, the customs agent was taken aback by her facial jewelry. Although it helped distract him, from any possible irregularities in her documentation and he passed them right along.\n\nWhen the agent asked her, now back in her burka, the purpose of her trip, she said clearly and happily, \"Pleasure. Strictly pleasure.\"\n\nAnd Mark laughed.\n\nJerry had arranged for the Customs agent to meet them, as well as for a limousine to take them home.\n\nGarden gave him a quick kiss before she stepped onto the tarmac.\n\nThe air there wasn't fragrant, the odor of burnt kerosene was prevalent, but she felt like she was breathing wonderfully free air for the first time in ages. She squealed and laughed in pure joy. And Mark watching, understood and was proud of himself and of the things he'd accomplished.\n\nMark's home in the foothills above Palo Alto had only been purchased a couple of years earlier, after he had made his first couple of millions with his company. It was nice, but he wasn't sure if it would be suitable for a couple, now worth hundreds of millions.\n\nGarden, though was pleased, and perfectly happy with the place, and after a quick tour, they jumped into bed to sleep off the jet-lag.\n\nThey hibernated for the next couple of days, decompressing and getting comfortable. Garden was delighted by everything. She was home! In the US, and in an American home.\n\nIt was only a few days after they arrived when, over dinner, he asked, \"what do you want to change?\"\n\n\"Change? Nothing. I love your home and I love my freedom, and I love you.\"\n\n\"Do you really love me?\"\n\n\"Yup.\" Happily.\n\nHe smiled broadly.\n\n\"I was really asking about your body, Miss Eden.\"\n\nShe laughed, \"That's right! That's my official last name, al Eden, anyway.\"\n\nHe joined in. \"Yes, it is, Garden of Eden, I love it as much as I love you.\"\n\nShe got serious for a moment. \"Do you really love me?\"\n\n\"Yes, I do. I'm sure of it. As sure as I've ever been about anything.\"\n\n\"Because I'm your sex slave?\"\n\nHe gave her a look that indicated how upset her comment had made him. How insulted.\n\n\"No. Absolutely not. I don't want a sex slave. I want a woman to love and cherish, and someday marry.\"\n\nShe breathed a sigh of relief. \"Good, thank you. I love you too, and if you ever decide to ask me to marry you, I'd quite possibly say 'yes'.\"\n\nHis expression changed and he smiled, brightly at that.\n\n\"That's good,\" he replied, smiling delightedly. \"But back to your body. Your wonderful body. What would you like to change about it?\"\n\n\"I'm not sure. I'm afraid some of the things they did to me can't be changed. And frankly, I'm used to the way I look. I've become so accustomed to all of this, that I might miss them if they were removed, or changed.\"\n\nWhen he looked at her questioningly, she responded.\n\n\"I know, it may sound nuts. But I've been conditioned to accept and even like the way I look. We talked about that. So, I'm not sure how I'd feel without my big breasts, my silly, pointy ears or my tongue studs, for example.\"\n\nAnd she giggled as she stuck her tongue out at him.\n\nHe laughed. \"Kelly. I have to admit that I loved you from the moment I saw you. You are the sexiest, most erotic and exotic woman I have ever seen.\"\n\n\"It's funny, but I'm so used to being Garden. It seems odd when you call me Kelly.\"\n\nHe shook his head, confused. \"Okay, but what about your tattoos?\"\n\n\"Oh Mark, I don't know.\" It was clear that she was having trouble coming to terms with her new-found freedom, and that it meant she now had decisions to make.\n\nShe sighed and shook her head, sadly. \"My tattoos are the one thing I don't think I can ever get rid of. And since they cover my whole body, I'll never be able to hide them in normal clothes around here.\" She chuckled, \"and I'll be damned if I'll ever wear a freaking burka again! Ever.\"\n\nHe laughed. \"And I don't ever want to see you in a burka again.\"\n\n\"So, you want me to go back to being naked all of the time, like in the palace?\" she laughed.\n\nHe chuckled. \"I wouldn't mind, but I won't insist on it.\"\n\nThey both laughed at that.\n\n\"Honey, they do have laser tattoo removal procedures, you know,\" he continued.\n\nShe shook her head sadly. \"No, I can't see myself suffering through that process. Can you imagine how long it would take. My God, can you picture, them working on my pussy, tits and ass, to get all of this off? And I would be surprised if they really could get it all off.\"\n\nAnd as she ran her hands down her body, he got hard.\n\n\"And I can't get my hair to grow back, anywhere.\" And as she lifted her hands to her mostly bald head, she began to tear up.\n\nShe stopped and shook her head. Mark felt bad, and he could see that she was still battling the uncertainty and confusion she now had to deal with.\n\n\"We can get you wigs. No one will know.\"\n\n\"I suppose.\" She said, sighing, and then she proceeded to swivel her head, swinging her long, full pony tail from side to side. He'd seen her do it many times, like a favorite habit, and he loved the sight. It made him wonder if she too loved that part of her costume.\n\nShe sat next to him, picking at her food for a while. \"Before I answer, do you really like my body? The way I look, now?\"\n\n\"Well, I, um.\"\n\n\"Oh, come on, be honest. I know I'm every man's wet dream. I accept that. Be honest and tell me what you think.\"\n\nHe really didn't want to admit that he loved her the way she was. He found her to be the sexiest, kinkiest, most erotic woman on the planet. Even though the things they'd done to her were unquestionably bizarre and terribly mean. Since he wasn't responsible for it, he could accept them, and enjoy them.\n\nHe sighed, \"Garden, I love you. Honestly, I love everything about you. I love your mind, and your personality and the way we make love. And,\" he said, bashfully, \"I love your body, too.\"\n\nAnd he stopped there, to see how she'd react.\n\nShe just nodded, knowingly, and sat quietly for a moment, thinking.\n\n\"All right.\" She sighed. \"If you don't mind, I do want to get rid of the collar, and the chains on my cheeks. At least those things. And I would like to get a nice wig. One that matches my hair, what I have now, and we'll put a hole in the top so I can pull my pony-tail through. I think it would make a viable hair style, even though I'd never be able to change it.\"\n\nHe nodded, excited that she intended to retain most of her exotic look. \"That's fine.\" But, to be supportive he prompted her for more. \"That's all? What about your nose ring and your ears? We could find a surgeon to return your ears to normal.\"\n\nShe looked at him thoughtfully. \"Well, I like my ears. I think they look really cute, and with my head and hair the way it is, I think they give me a very charming look. Don't you?\"\n\nHe smiled and nodded, happily. \"Like a cosplay elf. A very delightful one. And your septum ring?\"\n\nShe giggled. \"Ya know, I've become so used to the thing, that I think I'll miss it. But a smaller one would probably be better. Although I do kind of enjoy kissing you with it right there between our upper lips.\"\n\n\"Hah. I do too.\"\n\n\"I would like to get rid of the huge hoops in my ears. I'll replace them with something smaller.\"\n\n\"Okay.\"\n\nThen she sighed and shook her head, sadly. \"Some of the guys I entertained used to hold onto them, and guide my head onto their sex. It hurt and I hated it.\"\n\n\"I'm sorry. Get smaller ones, then, by all means.\"\n\nHe paused for a moment, then asked. \"Anything else?\"\n\n\"Um, the chain between my nipple rings. And actually, the rings themselves. Again, smaller hoops would be less conspicuous beneath my tops.\"\n\n\"I understand.\"\n\nShe smiled, \"when I'm naked they're not that big a problem. The way they pull on my nipps, can feel kind of good. Under the shapeless Burkas, they weren't visible. But under normal clothes, rings this big would really stand out.\"\n\nShe drove him to the edge as she played with her big rings, twisting them and pulling gently on them. She knew perfectly well, what she was doing to him, and it made her giggle.\n\n\"Well, you could always just stay naked.\" And he reached over intending to grab a ring, but she slapped his hand away laughing.\n\n\"I know you'd like that. But I do intend to go out, wearing clothes.\"\n\n\"But you'll stay naked inside the house?\" He said hopefully, and with a big, lustful smile.\n\n\"We'll see.\"\n\nThen she reached over and rested her hand on his. \"Okay? Will you be all right with those changes, but nothing else?\"\n\nAnd to him she really seemed embarrassed that those were the only things she wanted to change. But he was overjoyed. He'd expected more, and he would not have been too disappointed had she asked to get rid of all of the rings and things. And for a moment he wondered if all of the torturous mental conditioning they'd done to her was affecting her decisions.\n\nHe felt guilty that even that worry, didn't suppress his love for her sexy decorations.\n\nHe snapped out of it when she suddenly stood up. \"Come on I want to make love. Sex with a man I love is so much better than with a man I've been ordered to fuck.\"\n\nAnd she dragged him off to their bedroom.\n\nSex, with him was the best of times. For the first time in years, she actually enjoyed herself, and her orgasms were true and wonderful.\n\nWhen she rode him, she really felt free, and more in control than ever before. She loved it when he reached up and hooked his fingers through her nipple rings and gently pulled and twisted the things. Her nipples came alive! And it added a lot to her orgasms.\n\nAnd when he licked her and played with her pussy jewelry it was wonderful. And she stopped resenting the things.\n\nOne day, when she was again riding him, instead of grabbing her nipple rings, he reached down and began playing with her clit bell. And it immediately drove her over the edge. Her orgasm only lasted for a few minutes, before she collapsed onto his chest, breathing heavily and moaning quietly.\n\nWhen she reached up and stroked his cheek, mumbling, 'thank you, that was wonderful.' He chuckled.\n\n\"I wondered why you didn't mention removing that bell. It must drive you crazy.\"\n\nShe giggled. \"I thought about it, but all the while I was at the Palace, it was the only thing that really got me off. For some reason it and its vibrations just blow me away.\"\n\n\"Even when we had sex, there? I thought you orgasmed a couple of times when I was on top and it was just in the way.\" He asked, feigning being upset.\n\n\"Well...\" She chuckled.\n\n\"Well, damn!\"\n\nShe chuckled again and crawling up his chest, kissed him, and as he remembered, her tongue with its two big barbells, felt really fine in his mouth. Of course, they felt much better when she employed them on his cock.\n\nLater, when they were back simply laying there, enjoying the feel of each other he brought up her bell again.\n\n\"As much as I love that bell, and the sound it makes while you walk around. It may be a problem with normal dresses and skirts. Your burkas might have masked the sounds emanating from your crotch, but shorter skirts probably won't.\"\n\n\"What? Do you want me to get rid of my pussy jewelry? My bell in particular?\"\n\n\"Oh no. I love your body jewelry. Every last bit of it. But I wanted you to know that it would be okay with me if you removed the bell.\"\n\n\"I'll have to think about it. It feels so good when I fuck you.\"\n\n\"Well, then keep it. We'll work around it. You can always wear panties.\"\n\n\"I can, but I'm not sure I want to. I haven't worn any for a year, remember.\"\n\n\"Whatever you want.\"\n\nHe ended that conversation a happy man. Either because of her time as a sex slave, and all of her training, or because she was just one sex-crazed girl. She was the hottest woman in the word! At least as far as he was concerned.\n\nAnd she was his.\n\nTo be continued...\n\nFrom the Author: Please comment on my stories. All thoughts, positive or negative are welcome. If negative, please extend the courtesy of providing constructive criticism. Thanks.\n\nIf you do comment, check back in a few days, as I do try and post replies."
    ],
    "authorname": "ChangeYourPassword",
    "tags": [
        "fetish",
        "body modification",
        "tattoo",
        "piercing"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/garden-art-pt-01"
}