{
    "title": "Glow Ch. 01",
    "pages": [
        "I can't remember a time when I couldn't see the glow. As a little kid, everyone I saw had a small, faint, softly glowing area in the center of their head. All kids think they're pretty normal and I didn't think anything about it. It never occurred to me that I was the only one who saw that glow. \n\nAs I got older, I noticed that, while I always knew when someone was near me and who they were, other people seemed oblivious. I could sneak up on anyone and poke them or yell, \"Boo\" to surprise them. No one could do that to me. I could always feel that glowing spot. I knew where they were and who they were, even if I couldn't see them. \n\nBy the time I was in preschool, I found that I could make people itch. That was fun. If someone annoyed me, I could give them a case of the itches somewhere that was embarrassing or hard to reach. All I had to do was reach out with my mind and give their glow a little pinch. It's hard to explain to someone who can't do it. \n\nOne rainy Saturday when I was about 7 years old, my sister found me staring out the den window, bored. \"Hey, Ethan, wanna play a game?\" she asked. I looked at her suspiciously. Karen was almost 2 years older than me and loved to show off how much she knew that I didn't. \n\n\"What kind of game?\" \n\n\"Let's play hide and seek!\" \n\nI'd heard of the game, but somehow had never played it. \"How do you play?\" \n\n\"One of us stays here for 3 minutes and the other one hides somewhere. I'll hide first. When 3 minutes are up, you ring the bell,\" she said, pointing to the old ship's bell on Dad's desk. \"Then you try to find me. If you can't find me in 5 minutes, I win!\" \n\n\"Are you kidding? That's the stupidest game in the world!\" To me, a game like that was completely pointless. How could I not find her? All I had to do was follow her glow with my mind and I'd know exactly where she was. She could do the same thing when it was my turn to hide. \n\n\"Betcha a quarter you can't find me in 5 minutes.\" \n\nMy allowance was a dollar a week, so a quarter wasn't a trivial sum. Added to what I already had, I could buy one of the jumbo dark chocolate candy bars I liked so much. \n\n\"Okay, go hide.\" \n\nI timed three minutes on the wall clock while tracking Karen to our parents' bedroom closet. She hid in a back corner, behind dad's winter coat. That was pretty clever and also borderline cheating. We weren't allowed in that room without Mom or Dad. Still, it didn't matter where she hid, she had to know I could tell where she was, didn't she? I was puzzled, but I had a game to win. \n\nI trotted up the stairs, walked into the bedroom, slid open the closet door and pushed dad's coat aside. Karen was looking at her treasured Minnie Mouse watch. \n\nI grinned at her. \"Gotcha!\" \n\n\"You cheated!\" She was outraged. \"You didn't stay in the den! You followed me up here!\" \n\nI laughed. \"You heard the bell, right? I couldn't ring the bell unless I was in the den, could I?\" \n\nKaren was royally pissed. Not only had she lost, she'd lost to her little brother. \"You owe me a quarter,\" I said, holding out my hand. \n\n\"Not yet,\" she said. \"Now it's your turn to hide.\" \n\n\"Wait a minute, you bet me a quarter I couldn't find you. I found you. You lost and you owe me a quarter.\" \n\nKaren thought it over. \"Tell you what; you hide this time. If I find you in five minutes, we're even. If I can't find you, I'll give you 50 cents.\" \n\n\"Okay, let's go.\" \n\nBack in the den, Karen checked her watch. \"Go!\" \n\nI walked out of the den and turned left, going through the dining room and the kitchen. I climbed up the back stairs, walked down the hall to the front stairs and took a seat on the top step, not bothering to hide. When three minutes were up, Karen rang the bell. She'd seen which direction I'd gone and she ran through the house and up the back stairs. I went down the steps, into the dining room and waited. The first place she checked was her hiding place. I followed her easily, tracking her glow. For the next few minutes, Karen scrambled around, thoroughly searching the upstairs and then running down the front stairs. I moved quietly up the back stairs and sat on a chair in the hall, thinking. She couldn't see my glow. That meant she probably couldn't see anyone's glow. How come I could see everyone's glow and she couldn't? What about Mom and Dad? They could do all kinds of things I couldn't do. It was hard to believe they couldn't do something so simple. They knew everything. Didn't they? \n\nI didn't have a watch, but there was a clock on the Bombay chest next to my chair. I timed another three minutes and walked to the front stairs. \"Time's up, loser!\" \n\nKaren was furious. \"Where did you hide?\" she screamed. \"I looked everywhere!\" \n\n\"Guess you missed a spot. Gimme my 50 cents.\" \n\nThe years passed and my perception and control of the glow increased. I used the glow for fun and to drive away people who bothered me. Bullies didn't stand a chance. It was a simple thing to kill their interest in me and make them leave me alone. It wasn't long before I discovered that I could make them lose their balance and stumble or trip, looking stupid and clumsy, not that bullies aren't pretty stupid without my help. \n\nIn middle school, I finally came to the conclusion that seeing the glow was a talent that I alone had. Everyone's glow had gradually gotten brighter and more distinct. I could judge their emotions and even their health by the colors I saw. And my control was increasing. What would I use this talent for? \n\nMy father instilled a strong sense of self-respect in me and respect for other people's rights and privacy. He stressed setting personal codes for my behavior, deciding what was right and wrong, what I would do and what I wouldn't do. Hurting others unnecessarily was wrong. Dad had been a cop in his 20s and had developed a hatred for burglars and thieves. He taught me that sneaking around and doing things behind someone's back was disgraceful. As a result, I developed a personal policy that I wouldn't use my control of the glow to hurt anyone. I stopped the childish games. On the other hand, I decided it was alright to use my ability to help people. One of the requirements in my 8<sup>th</sup> grade English class was to experience public speaking. Many of the kids were so nervous that they were nearly crippled. I could calm them down, give them confidence and keep them in control so they wouldn't forget what they were going to say. Our teacher said several times that he'd never had a class that did so well. I took that as a complement. \n\nNaturally, in middle school I started getting serious about girls. It was obvious that I could get any girl's attention just by giving her glow a caress. Was that okay? Making a girl like me, maybe making her want me to touch her was very tempting. I was full of the normal adolescent hormones. I wanted to do all the things with girls that I heard about and saw on the Internet. I fantasized about all the things I could get girls to do and masturbated like a wild monkey. I decided that I wouldn't do anything that would hurt a girl, but if she enjoyed kissing and touching, if it made her happy, that wasn't wrong. This is called, \"rationalization\". Still, I managed to control myself. Nothing serious happened until my senior year of high school. \n\nThere was a girl in my Advanced Physics class named Sarah. She was pretty and smart and always had something clever to say. She also had a nice figure with firm, round boobs and a great ass. Getting her attention was easy. I could tell she'd noticed me by the way she and her friends looked at me and whispered to each other. I talked to her whenever I could before and after class, massaging her glow, making her happy to be with me. I wanted her to associate being near me with feeling slightly sexy. It worked. \n\n\"Hey, Sarah, do you want to go to a movie Friday night?\" I asked. \n\n\"Yeah, I guess so,\" she said. Her glow got brighter and turned an interesting light gold color. I saw something in her glow that I hadn't seen before, something that felt distinctly sexual. I gave that part a tweak and watched her eyes. Her pupils dilated and she sighed. \n\nI was 18 and had been driving for about a year. I picked Sarah up Friday after dinner in my dad's very uncool minivan and we drove slowly to the theater. I bought tickets and some popcorn and we went inside. \n\n\"Where do you want to sit?\" I asked. Sarah pointed to the back. Boy, did I like that idea! There weren't many people in the theater and we found seats where we wouldn't be observed. As soon as the lights went down, Sarah took my hand. By the time the feature started, we were kissing. The movie was a dumb romantic comedy and I don't remember a thing about it. Sarah's glow was the brightest one I'd seen. She was horny and it wasn't just my constant touch on her glow. She was wearing a light sweater and, it turned out, no bra. I spent a lot of the next 80 minutes with my hand under that sweater, squeezing her tits and playing with her nipples. I tried to get my hand into her stretch pants, but she pulled my hand away and shoved it back to her tits. \"Later,\" she whispered. She stroked my dick through my pants until I had to make her stop. I didn't want to cum in my pants. During night scenes on the screen, it was dark enough in the theater that I could pull her sweater up and suck her nipples. Not only didn't she try to stop me, she held her sweater up and guided me back and forth from one boob to the other. I put her hand back on my cock time after time, stopping her when I got too close to orgasm. \n\nAfter the show, I drove to the parking lot behind my dad's business. On the way, I stayed busy, working on her glow while she stayed busy groping my crotch. The sliding gate to the parking lot was controlled by a clicker mounted on the car's visor. No one could get in there without a clicker and no one could see into the lot from the street. We had privacy. I parked under a floodlight behind the loading dock and Sarah was into the back seat in seconds. I ran the front seats all the way forward and joined her on the bench seat, which ran the width of the car's interior. She pushed me back and we kissed. I grabbed the bottom of her sweater and she held her arms up so I could pull it off. She leaned over me, swaying back and forth so I could squeeze her breasts and lick and suck her nipples. \n\n\"Get undressed,\" she whispered. I yanked off my shirt. Sarah was already unbuckling my belt. \"Come on,\" she hissed impatiently. \"I want to see you.\" I kicked off my shoes and slid out of my pants and boxers. When my cock bounced in the cool air, her glow lit up like a flashbulb. \n\n\"Oh, that's nice.\" She grabbed me with both hands. \n\n\"Easy,\" I said. \"I don't want to go off too soon.\" She looked into my eyes and stroked me slowly. In less than a minute, I was getting close. \"That's enough for now. Let me get your pants off.\" \n\nShe flopped back on the seat, hooked her thumbs in the waistband and shoved it down to her knees. She wasn't wearing panties. I pulled her pants off the rest of the way and saw a pussy for the first time. Before I could touch her, Sarah covered her pussy with her hand. \n\n\"Whoo! Hang on a minute,\" she panted. Her glow was still bright, but had taken on a cautious light blue tinge. \"Boundaries, we have to talk about boundaries.\" She was breathing so hard that it was difficult for her to talk. \n\n\"I like you, Ethan, and I want to do stuff with you, but I'm not going to let you fuck me.\" She paused for breath. \"I'm Catholic. I'm not going to fuck a man unless I plan to marry him. We have to be in love and engaged. I'm not fool enough to marry a man I haven't had sex with; we might not be sexually compatible. But I have to be pretty damn sure he's the one before I go all the way.\" \n\n\"Okay,\" I said. No point arguing religion with her. \"I'm not going to try to get you to do anything you don't want to, but where does that leave us?\" \n\n\"Well,\" she said, \"I want to learn about sex. I want to learn about touching and being touched. I want to find out what a man likes and what I like. I've seen a lot of different stuff online and I'm sure you have, too.\" I nodded. All guys look at porn. There's tons of it. Some of it I like and a lot of it seems crude or phony or violent or gross. \"If you want to help me, that's great.\" She grinned. \"You'll have fun, too.\" \n\n\"So,\" I said, \"where do you want to start?\" \n\n\"Let me look at you and touch you.\" Her glow was back to gold. \"Tell me what feels good. I'll use my hands and my mouth. I need to learn how to jerk a guy off and give good head.\" Give good head? I thought. Did she really say that? I was already very hard and almost came right then. She was going to blow me! Fantastic! \n\n\"Can't argue with that.\" I lay back on the seat and opened my legs, putting one leg on either side of her. She knelt on the seat and bent forward, examining me. \n\n\"I've seen my twin brother, but I haven't touched him.\" She slid her left hand under my balls and cupped them, then wrapped her right hand around my cock. She rubbed her thumb on the underside, just below the head. I twitched. This was a pretty clinical handjob she was doing, but it was my first. I felt ready to shoot any second. I fought for control. \"I saw an Internet video that said that's supposed to feel good,\" she whispered. \"Does it?\" \n\n\"Oh, yeah! Maybe too good!\" \n\nSarah leaned back and looked at me critically. \"Maybe I should just get you off fast,\" she said in a dead serious voice. \"That way I can check you out and not have to stop all the time. Tell you what; I'll suck your cock and you can cum in my mouth. I need to find out what that's like.\" \n\nI was astounded. This was a dream come true. I nodded, not trusting myself to speak. \n\nSarah leaned forward. I could feel her breath on my dick. \"Tap my shoulder when you're about to cum,\" she said softly. \"I want to be ready.\" \n\nSarah must have watched quite a few blowjob videos. She stroked my shaft and slid her lips over my cock head, moving her tongue around it. I barely had time to tap her before I came, shooting strong streams into the back of her mouth. Her glow flickered in bright colors, so fast I couldn't follow it all. She gagged and choked, but didn't take her mouth off me, stroking me rapidly with her hand. My dick jerked in her mouth, pumping out more and more cum. My first blowjob! As short as it had been, it was the most amazing thing I'd experienced. Sarah paused long enough to swallow and then continued sucking me. Her glow calmed, becoming a nice greenish gold. From experience, I knew green represented happiness. Greenish gold must indicate sexual happiness. \n\n\"Wow! That was more than I thought it would be!\" She sat up, swallowed a couple more times and I could see her tongue moving around, searching for any fugitive cum that might be hiding in her cheeks. She stroked me a few more times and licked the saliva and cum off her hand. \"Not bad. The taste is funny, but not bad.\" She smiled. \"You were quick. If you cum that fast every time, this is going to take forever.\" She flopped against the car door and spread her legs. \"Time for you to eat me.\" \n\nI looked at her pussy, never having seen one up close. It looked like a lot of the ones I'd seen online. Her inner lips protruded well outside her outer lips. One side pooched out farther than the other. There was a lump at the top which had to be her clit. Sarah was nicely shaved. She hadn't left a \"landing strip\" or heart-shaped patch or anything else. I ran my thumb up the outside of her slit. It was very smooth, her natural juices making her slippery. She sighed and slumped against the door, spreading her thighs all the way. I slowly moved my thumb from the bottom of her slit to the top, keeping my mind's eye on her glow. The gold color brightened and flecks of silver appeared. I knelt on the car floor and moved my head between her legs. \n\nI kissed her inner thighs, getting closer to her center, until I was licking her lips. The silver flecks in her glow got bigger. I stuck my tongue out all the way and licked right up the middle, going between her lips and circling her clit. She sighed again and the silver flecks touched. Up until now, I'd imagined touching someone's glow with my fingers, but now I visualized my lips and tongue on Sarah's glow. She shivered and was suddenly much wetter. I licked and sucked her pussy, visualizing doing the same to her glow. Sarah raised her hips and put both hands on my head, pulling me into her. Silver became the predominant color in her glow. I licked up and down, sucking her clit and pushing my tongue into her. Sarah moaned and shook and came. The change in her glow was remarkable. Silver flashed strobe-like against the bright gold. I sucked her clit, flicking it with my tongue, sucking her glow with my mind. She gave a long wail and came again. I didn't stop and her orgasms rolled on, one on top of another. Sarah gasped and humped her hips, holding my mouth tightly against her. My neck was starting to cramp, but I wouldn't have stopped for anything. Making Sarah cum was the most stimulating, most fascinating thing I'd ever done. \n\nA light brown ring appeared around her glow, telling me that fatigue was setting in. I tapered off on both her pussy and her glow. When she'd calmed down enough, I sat back on my heels. Her pussy was dripping with her juices and my saliva. I reached under the seat and felt for a hand towel Dad kept there for minor cleanups. It was reasonably clean and I mopped up the wetness on the seat, then dried her thighs and ass and my face. \n\nSarah watched me finish, then grabbed me and pulled me on top of her. \"Holy shit!\" she panted. \"That was fucking unbelievable!\" She kissed me. \"How the hell did you do that? I get myself off all the time and my orgasms are nothing compared to what you did to me!\" She kissed me again. \"If you're not a world-class stud, I don't know who is!\" \n\nSarah kept kissing me. I was between her legs and it was impossible not to notice my cock resting against her pussy. As we kissed, I couldn't help moving my hips, sliding the head of my dick up and down her slick lips. I pressed forward, separating her lips and edging inside. All it would take would be a lick and a squeeze on her glow and she'd raise her hips another inch or two. I'd be inside her. She was lost in the lust of the moment, not thinking of anything except her feelings. It would be so easy. She wanted it and I could manipulate her into not being sorry afterwards. All I had to do was abandon my principles and fuck her. \n\nI moved my dick away, gave her one more kiss and turned to sit on the seat. We were both breathing like long distance runners. \n\nSarah swallowed hard, looking at me through half closed eyelids. \"I didn't think you were going to stop. I was ready for you to fuck me. Why did you stop?\" \n\n\"Because of what you told me. We're not in love. We're not engaged. Shit, we're only eighteen! We're on our first date! I wanted to fuck you in the worst way, but it would have meant betraying you. I can't do that. I'm an idiot for not shoving my dick into you, but I couldn't do it.\" \n\n\"Wow. That's amazing. You might be an idiot, but you're an idiot I can trust. No other guy would have stopped and I'd have lost my virginity for sure.\" She grinned. \"On the other hand, I doubt any other guy could have made me cum as hard and as many times as you did. I owe you. What do you want?\" \n\n\"Scoot down here and lay on the seat. I want to fuck your tits and have you blow me again. I'm ready, see?\" My cock was sticking out at an upward angle and the tip glistened with Sarah's juices. \n\nSarah got on her back. I positioned myself with my knees on both sides of her torso. I lay my dick between her breasts. She pushed her tits together and I started fucking them. It didn't work very well at all. Too dry. ",
        "\"Suck me. Get some spit on me.\" She bent her head and I slipped into her mouth. It felt wonderful. She worked her tongue and lips on me for a minute or two, then I pulled back and tried titty-fucking her again. This time was much better, although the back seat wasn't wide enough. My outside knee kept slipping off. Screw it! I loved seeing her tits with my cock between them, but it didn't feel all that great and the position was unworkable. \n\n\"This isn't going to fly,\" I said. \"There's not enough room on this seat and the back of the van's full of my dad's stuff.\" I pulled Sarah to a sitting position. \"I'll stand in front of you and you can blow me.\" Because of the low roof, I had to bend over and rest my hands on the seat back. Sarah leaned forward and sucked me into her mouth. \n\n\"That's it; use your fingertips on my balls and the other hand on my dick. Keep the end of my cock in your mouth. Pump my dick and suck me.\" She did and it felt terrific. \n\nSarah pulled off my cock with a soft \"pop\". \"What feels the best? I need details!\" \n\nI pointed to my dick. \"The top surface is probably the least sensitive. It still feels good; don't get me wrong. The sides are better, the underside is much better and the head, especially right under the head, is the best.\" I put one finger under her chin and tilted her head up so I could look into her eyes. \"One thing you should know; if a guy has his cock in your mouth, no matter what you're doing, he probably isn't going to complain. I suppose there are guys on this planet who don't like blowjobs. You'll probably never meet one. I read somewhere that, if every married man got two or three random blowjobs every month, the divorce rate would be cut by at least a third. A wife who climbs into the shower with her husband and blows him or just jerks him off now and then is a treasure beyond price. Remember, if you're multi-orgasmic, you're going to cum several times more than your husband. You're already ahead of the game. Be generous. If he asks you for a blowjob, give him one. Surprise him with a blowjob every once in a while for no reason. He'll love you for it.\" I let go of her chin. \"Now lick my balls!\" \n\nSarah took direction well. She got a little rough with my balls a few times, but was gently firm with her lips and tongue. I stayed on her glow, keeping her happy and feeling sexy. \n\n'Okay, Sarah, hold my cock with your hand right against my belly. I'm going to fuck your mouth and you can use your hand to control how far I go in. Just hold your head still. If I go too fast or too hard, you can use your hand to slow me down. Keep pressure on me with your tongue.\" \n\nI started nice and easy, increasing the speed and force of my thrusts until Sara began to grunt and push me away. I could tell by her glow that she was having trouble, so I backed off a little. Her glow returned to green and gold. I loved the way it looked; my cock sliding in and out of her lips, the way I felt, riding over her tongue. We alternated between her blowing me and me face-fucking her for about 10 minutes, and then I was ready. \n\n\"I'm gonna cum pretty soon. You're doing great. A little more tongue action. Swirl it around the head. Okay, pump with your hand, tongue tickle under the head, suck hard. Perfect, ahhhh fuck! That's so good! Mmmmm yeah, don't stop, don't slow down!\" Cum shot over her tongue. She couldn't handle it yet and choked a bit, swallowing repeatedly. \n\nShe licked her lips. \"How was that?\" \n\n\"Phenomenal! That was terrific! I know I've never cum that hard before.\" \n\nI sat beside her. \"Want me to go down on you again?\" \n\n\"It's getting late. We better get going. I need to find a bathroom and redo my makeup.\" \n\nFifteen minutes later, we were sitting in a fast-food place, eating fries and sipping our drinks. Sarah had repaired the damage to her makeup and fixed her hair. Her glow was a nice strong green with gold highlights. \n\n\"Sarah, just so you know, I'm not going to say a word about this evening to anyone. You know how the rumor mill runs at school. Sex is the number one topic. I don't mind at all if everyone thinks I'm the king of cunnilingus, but you might not want to be known as the queen of fellatio. It's up to you if you want to tell people, but you'll be asking for trouble. You know the game, 'telephone'? Remember how stories change every time they're retold.\" \n\n\"Yeah, sure, it won't be a problem.\" \n\nWithin a week, I was a hero, the biggest stud the school had ever known. Every student was convinced that Sarah and I had had world-class, mind-blowing sex, although the details were all wrong. \n\nI pulled Sarah aside after school the next Friday. \"We need to talk. Get in my car and I'll take you home.\" I drove a tiny Fiat 500 that ran most of the time. On the way to her house, I stopped in the Wal-Mart parking lot. \n\n\"Okay,\" I said. \"You told some of your friends about what we did last week, didn't you?\" \n\n\"Just Linda! I made her swear she wouldn't tell anyone else!\" \n\n\"That's all?\" \n\n\"Well, I told Sue. She's my best friend!\" \n\n\"That's what I thought. Each of them swore a couple of their friends to secrecy, too and those girls did the same thing. Within a few hours, dozens of girls knew and at least one of them told everyone she could think of. Those girls told their boyfriends. Once the guys got the story it went wild. I've got guys asking me if it's true I fucked you in the ass on your parent's sofa while they were asleep upstairs!\" \n\n\"Upstairs? My house only has one floor!\" \n\n\"Sarah, you're missing the point. The whole school knows we had some kind of sex and thinks they know things you can't imagine. I haven't told anyone. You remember what I said about not betraying you? I haven't. When some guy asks me if a ridiculous story is true, I tell him it isn't, but I won't tell him what did happen. I'm afraid that isn't helping.\" \n\nSarah looked upset. Her glow showed the light gray of impending depression. \"What are we going to do?\" \n\n\"Damned if I know. I don't want you to get a reputation as a slut. Right now, I have a reputation as the biggest stud since Casanova. I can live with that. Every guy in school envies me. Girls are constantly giving me the eye. I could ask every one of the female seniors on dates. They'd assume we were going to fuck and half of them would say yes. It's a guy's dream come true. You, on the other hand, probably don't want everyone thinking you can be had for the price of a movie ticket. I'll do whatever you want, but I won't lie and say nothing happened between us. Nobody would believe me anyway.\" \n\n\"Shit, I don't know what to do. I'm getting hit on by guys I never spoke to. They all think I'm a sure thing. 'Sara's easy. She loves to fuck.' Crap! I don't want to be chased by all those guys! Anyone I go on a date with will be expecting to get laid. If I don't put out, I'm afraid I'll get raped. Guys I dated before think they missed out. Now they want another chance.\" The gray of her glow got darker, with black patches. \n\n\"Well, saying 'I told you so' won't help. The cat's out of the bag now. Tell you what; I'll deny all the insane crap that I've been hearing. Nobody has anything like the right story, so I can deny we fucked in any way with a clear conscience. I'll have to stick to 'no comment' on any questions about oral sex. It's none of their damn business and that's what I'll say. In the meantime, we can date each other and no one else. Nobody 'goes steady' anymore, but that's the idea.\" \n\nSarah could tell I wasn't happy, but her glow became brighter. \"The thing that bothers me is,\" I continued, \"I could be fucking my way across campus with the hottest girls in our class. Not that you aren't hot; you are or I wouldn't have asked you out. But you're one girl and I'm a horny guy with the chance to get laid with lots of different girls. I'm willing to help you with this, but you need to understand it's only going to be until this craziness blows over.\" \n\nSarah smiled. \"That's all I could ask for. Actually, it's much more than I could ask for. You're right, this is all my fault. I couldn't keep my damn mouth shut.\" She looked guilty and her glow shaded into a lighter gray. \"Get you cock out and I'll blow you right here.\" \n\n\"Forget it. There's a security camera on that light pole. The odds are, someone is watching us on a monitor right now.\" \n\n\"Let's go to my place. My brother has band practice and parents won't be there until after five. It's 3:30; plenty of time for a nice 'thank you' blowjob.\" \n\nI started the car and zipped to her house. I parked around the side and we went in through the mudroom door. Sarah led me to the living room, snagging a dish towel off the refrigerator door on our way through the kitchen. She pointed to a chair facing the big bay window. \"Sit there. You can watch the driveway and warn me if one of them comes home early.\" She spread the towel on the seat cushion. \n\nI turned to face the window, removed my shoes and pants and sat down. Sarah took off her blouse and bra. She leaned over me and we kissed while I fondled her tits and massaged her glow. After all the drama she'd caused, I was determined to get an excellent blowjob and the best way to get one was to make her want to do it right. She knelt between my knees and stroked me gently. I was hard as hell, but I'd jerked off just before school and figured I could hold off for a long time. \n\nSarah grinned and jerked me slowly. \"I'm gonna suck your cock and make you cum, right in my mouth. When you cum in my mouth, I'm gonna swallow it all. Then I'm gonna keep sucking you until you cum again and I'm gonna swallow that, too.\" \n\nI left Sarah's house with a big smile on my face. Back-to-back blowjobs from a hot, smart, funny, sexy half-naked girl! Life couldn't get any better! \n\nI drove past the school and turned east, heading for my house. Three blocks down the street, I saw a red Audi with a blond girl standing next to it. I recognized her immediately. It was Rita Sorvino, of the senior class A-list, the perfect skin, the beautiful face, the perky C-cup boobs (which she loved to show off with tight, thin blouses and almost-not-there bras), the long blond hair and the sexy walk that she must have spent hours practicing. She waved to me and I pulled over. She bounced over to my window, showing more bounce than usual, and no wonder; she wasn't wearing a bra and her blouse was unbuttoned halfway down. \n\n\"Ethan, I'm so glad you came by! My car quit and I can't get it started. Can you give me a ride home?\" \n\nShe was lying. Her glow showed unmistakable signs of deceit. This was a setup. Had she been waiting here for me since school let out? Wow! \n\n\"Sure, no problem. Hop in.\" \n\nRita walked around the front of my car, pausing a moment to reach behind her with her right hand and scratch her lower back, deliberately pulling the fabric of her blouse tight across her tits. Her nipples were hard. Oh, this was looking good! \n\nRita chattered all the way to her house, frequently patting my upper thigh. Her glow was lit up like a Christmas tree. Every time I turned my head to the left, she unbuttoned another button on her blouse. By the time I pulled into her driveway, all the buttons were unbuttoned and if her blouse hadn't been tucked in, it would have been wide open. \n\nAre you trying to seduce me, Mrs. Robinson? \n\n\"Why don't you come in for a minute? I'll show you the house.\" \n\nThe house was damned impressive. I'd heard that her father had started a high-tech business in his garage and sold it 14 years later for $180,000,000. They were rich, rich, rich! Rita showed me the game room, equipped with every new toy imaginable. \n\nWhen I turned to face her, Rita's blouse was no longer tucked in and her nipples were barely covered. Subtlety, obviously, wasn't Rita's strong suit. \"Let me show you the pool,\" she said in a sexy voice. \n\nThe pool was a gigantic, free-form salt water monster with a diving board, three fountains and two hot tubs. \n\n\"I was going to get some sun,\" Rita said. \"Want to join me?\" Stupid question! \n\n\"Yeah,\" I said. \"I didn't bring a suit, though.\" \n\n\"That's okay; I usually lay out here nude.\" She shrugged out of her blouse. \"Is this alright?\" \n\nI pulled my polo shirt over my head and kicked off my shoes as Rita unzipped her skirt. She dropped it on a nearby chair and did a slow twirl, showing off her perfect tits and tiny thong. My slacks landed on top of her skirt and my boxers did nothing to hide my erection. Rita slid her thong down and flipped it onto the chair with her toe. \n\n\"We don't need these, do we?\" she asked, pulling my boxers down. I stepped out of them and reached for her. No use pretending this was anything other than what it was. She'd planned this carefully and brought me here to fuck. She was super hot, beautiful and more than willing. I was about to lose my virginity to the number one dream girl in school! \n\n\"Over here,\" I said, leading her to a thick mat that must have been used for sunbathing. It was covered with some material that kept it cool in the direct sun. I kissed her, holding her against me. I'm 5'11\" and she was about 5'5\". By bending my knees a little, I could get my erect cock nicely between her thighs. I massaged her glow, getting a nice gold color with the first streaks of silver. She rubbed herself on the upper side of my cock and I could feel her wetness. I held her ass and we kissed. Her ass was very firm. I stroked her butt crack and gave her glow a light lick. Rita moaned and pulled me down on top of her. \n\nInstead of fucking her right away, which was apparently what she expected, I kissed her tits, sucking each nipple and working my way down. The silver flecks became wide, wavy stripes with a strong gold background. Rita's hands went to her breasts, squeezing them and pulling the nipples. From my vantage point between her knees, the sight was erotic as hell. \n\nI started with the insides of her knees, kissing and licking softly, moving toward her pussy very slowly. With my mind, I duplicated each lick and kiss on her glow. The silver stripes grew wider. My first lick on her lips brought a soft, \"ahaaaa\" and sparkles in her glow. I licked her pussy, moving my tongue inside and licking up to her clit. Her clit was longer than Sarah's and invited sucking. That was an invitation I wasn't about to refuse. Sucking Rita's clit, licking her lips and tongue-fucking her while doing the same to her glow brought her to her first orgasm. I'd learned a lot from Sarah and used it all on Rita. I was relentless, licking and sucking and tonguing her pussy and glow. She came almost continuously. I quickly lost count of her orgasms. When her glow was solid silver, I scooted up and began rubbing my cock head up and down her pussy. She tilted her hips up and I slid into her. She was wet as hell and there was almost no resistance. Two strokes and I was in all the way. Virgin no more!! \n\nWhat a feeling! So warm and wet and slippery and sexy! I looked down at her beautiful face and her tits, jiggling as we fucked, and her blond hair, spread out on the mat. I watched my cock, gliding in and out. I settled to my elbows, pushed all the way in and ground the base of my dick against her clit while giving her glow a long, deep suck. She came, hard. \n\nI was in no hurry, having cum in Sarah's mouth twice less than an hour earlier. I was feeling strong and in control. I brought Rita to two more orgasms and then shifted my weight to my right elbow. I reached between us and found her clit with the fingers of my left hand. I moved my fingers, slick with her juice, in a counter-clockwise circle, using moderate pressure and sucking her glow with my mind. She threw her head back and came, harder than before. I kept at it, fucking her, rubbing her clit and sucking her glow. She came again and again, a long series of intense orgasms. The expression on her face was delicious agony. \n\nAs she tired, I slowed down, relishing the feeling, not wanting it to end. But eventually I could feel the warm tingle creeping up the backs of my legs. I was going to cum, and soon. \n\n\"Rita,\" I said softly, \"I'm going to cum. Do you want me to cum inside you?\" \n\n\"Uhhh, uhhh, I'm tired, but it feels so good. I think I can cum again. Can I cum? Please?\" \n\n\"One more, then I'm going to cum. I can't hold out much longer. Should I pull out or cum inside you?\" \n\n\"Inside. Do it inside me. Let me cum once more, please.\" \n\nI was too close to the edge to get her off with my dick. I went all out on her glow, kissing, licking, stroking, petting and was rewarded with an all-silver glow, filled with sparks. Her whole body spasmed and she arched her back hard enough to lift us both off the mat. I pulled out most of the way and slammed into her, once, twice three times and came. Rita came at the same time. Words can't describe the feeling. \n\nWe lay on the mat, Rita on her back and me on my side, facing her with my hand on her stomach. She moved my hand from her stomach to her breast. I could feel her heartbeat, slowing as I calmed her glow. She was showing mostly green with gold and silver flecks. Rita was very happy and still pretty damned horny. \n\n\"That was ... fantastic,\" she sighed. \"I hope it was that good for Sarah.\" \n\nI propped myself up on one elbow. \"Let's get something straight,\" I said in a low voice. \"I never fucked Sarah. We've done some things, and what those things are is no one's business, but we never fucked.\" \n\nRita looked at me, astonished. \"But she told her friends you fucked! All the stories...\" \n\nI cut her off. \"All the stories are bullshit. I've heard them all; how I fucked her in the ass in her parent's living room and all the rest. It's bullshit, just rumors.\" \n\nI sat up and crossed my legs. \"I know why I'm here. We've barely exchanged ten words in the last year, and all of a sudden you're flirting like mad, stripping for me and wanting to fuck me. It's not because you're a slut. I know your reputation. You've fucked a few guys who are great looking and come from wealthy families and treat you well. Nothing wrong with that, but the list of guys you've fucked is short and very exclusive. Now I'm on that list and, you need to know, it's because you believed a bunch of horseshit. I had one date with Sarah and we didn't fuck.\" \n\n\"But, but, she said ...\" \n\n\"Here's the truth. Sarah and I had some fun together which didn't include fucking. She's a virgin and intends to stay that way until she meets the right guy. I'm not the right guy, just a friend. We had a great time together. Sarah told a couple of her friends about it, swearing them to secrecy. They did the same thing to their friends, who told their friends. Ever time the story was told, it got enhanced and exaggerated. Every time the story was told it got wilder and sexier. I've been hearing those stories all week and not one of them is true. They're all horseshit.\" \n\nRita started to cry. \"You knew all that and you fucked me anyway? What kind of person does that?\" \n\nI laughed. \"You're kidding, right? You wanted to fuck me because you'd heard that I could make you cum fifty times, better than you've ever cum before. And isn't that what just happened? Did you ever cum like that in your life, with anyone?\" \n\nI shook my head. \"Look; you're a fantastic girl. You're smart, except when it comes to believing horseshit, you're beautiful, you've got an amazing face and body and you're a good person. I never heard anyone say you were stuck-up or treated anyone badly. You live in a big house, have great clothes and your haircuts cost $350. Big deal. I like you as a person and I lust after you as a woman. You can't realistically expect to come on to an eighteen year old guy the way you did with me and get turned down. Any man of any age anywhere in the world who could get an erection would fuck you in a minute! If he couldn't get it up, he'd just hold your naked body against him and be happy as hell.\" ",
        "Rita stopped crying. She wiped her eyes and sniffled. \"You're right. I can't blame you. I was a fool.\" She smiled. \"But you did make me cum fifty times and it was unbelievable. Every orgasm was the better than the last and they were all 'way better than anything I've felt before.\" Her expression turned serious. \"You said some nice things about me a minute ago. Did you mean them?\" \n\n\"Yeah, of course. You are, by far, the hottest, sexiest, most all-around attractive girl I've ever seen or heard of. What's not to like? You've got it all.\" \n\nRita relaxed on the mat. \"You're a really smart guy, you know that? I like listening to you talk. You stick to the point and you know what you're talking about. That's rare for boys our age. Most of them are morons, wanting to brag about their high scores in dumb video games or talk about football.\" She rested her hand on my leg. \"I really liked the comment about a guy who couldn't get it up just holding me and being happy.\" \n\n\"Holding you naked,\" I joked. \"Don't forget the naked part. That's what makes it all worthwhile.\" \n\n\"I'm naked now. Hold me.\" \n\nI moved beside her. We lay on our sides, she put her arms around my neck and I gripped her ass with both hands. We kissed, both of us using lots of tongue. \"Don't forget, though,\" I whispered in her ear, \"I can get it up. In fact, it's coming up right now.\" \n\nRita moved her hips, pressing my dick into her belly. She raised her leg and used one hand to move my cock between her thighs. She slowly jerked me and rubbed me against the wetness and cum oozing out of her pussy. In a couple of minutes, I was hard. She raised her leg more and guided me into her. Once I was fully inside, she held my head in both hands and we kissed. Rita was a world-class kisser. \n\nI fucked Rita slowly; gently working her glow, building up gradually to what I hoped would be a magnificent climax. I didn't try anything unusual except for manipulating her glow. It didn't take much. In a couple of minutes, I could see by her glow that she was ready. A kiss and lick or two on her glow and she arched her back, moaning through a strong orgasm. I kept her near her peak, enjoying myself tremendously, feeling the slickness of her pussy, the pressure of her tits on my chest, the smooth firmness of her ass in my hands, the pleasure of making her cum. Each orgasm pushed her peak a little higher until her glow was solid silver, interspersed with bright silver flashes when she came. I counted twelve orgasms before she started to tire. I slowed my thrusts and stopped, still hard as hell inside her. \n\n\"Holy motherfucking shit,\" she breathed. \"That was so goddamned good! All I could feel was you, moving inside me. It was like floating in a cloud of pure pleasure.\" She giggled. \"'A cloud of pure pleasure'. Where did that come from?\" Rita opened her eyes. \"Did you cum? You must have. It seemed to go on forever. You're still hard.\" She moved her hips, fucking me. \"I want you to cum. Do you need me to do anything? Do you want me to blow you? I've never let a guy cum in my mouth, but I'd love to feel you do it. I don't know if I can swallow, but I'll try.\" \n\n\"That would be wonderful.\" I pumped into her steadily. \"Trouble is, I'll have to pull out of you and you feel so good. I don't want to stop.\" \n\nRita kissed me. \"Fuck me all you want. There's no rush. It's nice laying here like this, feeling you inside me, being screwed this way.\" She closed her eyes. \"Take your time. Maybe I can cum again.\" She came four times in the next five minutes. It took some pretty aggressive work on her glow, but it was worth it to watch her cum and see the fireworks in her glow. I got pretty close myself, but I held off. I wanted her mouth. \n\nFinally, I pulled out and we lay, holding each other peacefully. When her glow told me she was ready, I stretched out on my back with my legs apart. Rita crawled between them and examined my erection. \"This is the most beautiful cock I've ever seen,\" she said. She looked into my eyes. \"That's because I know what it can do.\" She stroked me and gave me a lick. \"Enjoy this; you'll be the first guy to cum in my mouth.\" Her lips slid over my cock. \n\nI let Rita blow me in her own way. As I'd told Sarah, any time a guy has his dick in a woman's mouth, he's happy. Rita took her time, alternating long, slow licks on my shaft and balls with sucks on my cock head and fingertip caresses on my balls. This was definitely not Rita's first blowjob and she had some serious skills. \n\n\"Soon now, gonna cum soon. Don't stop. Keep me in your mouth when I cum. Oh, shit that's good. Get ready, I'm cumming now!\" \n\nRita did her best. She didn't want to disappoint me, but it was too much for her. She gagged and choked and spit my seed onto the mat. I had to laugh. \n\n\"What's so damn funny?\" \n\n\"Sorry, but your first time with cum in your mouth, well, it's funny. Take my word for it.\" \n\nRita grinned sheepishly. \"Fuck! I wanted to swallow it. There wasn't too much, it just hit the back of my throat and triggered my gag reflex.\" \n\nI laughed again. \"Next time, put your tongue against the roof of your mouth, so it goes under your tongue. That might work.\" \n\nShe lay on top of me and we kissed. Sarah was right; the taste was funny, but not bad. Rita kissed me for a long time. Did I mention that she was an excellent kisser? \n\n\"Rita, would you do something for me?\" \n\n\"As long as it doesn't involve fucking. I'm worn out.\" \n\n\"No, I just want you to stand up. Let me look at you and touch you. You're so damn sexy and beautiful. I want to enjoy the look and feel of your body.\" \n\nRita didn't show it, but I could tell by her glow that she was touched by my request. She stood quietly and allowed me to examine her body, touching and caressing her. Her body was flawless. I was careful not to miss anything. When I got to her pubic area, she moved her feet shoulder width apart. I couldn't resist sliding two fingers into her. She held my upper arms and I fingered her for a couple of minutes, then pulled my fingers out and sucked them. The taste combination of her juices and my cum was interesting. When I finished, I had half an erection and Rita's upper body was flushed. Her nipples were very hard. She dropped to her knees and took me in her mouth. It felt great, but I was done. \n\n\"Shit, Rita. I'd love that, but I can't. Not again.\" She didn't stop. What the hell, even if I didn't cum, the feeling was so good! Might as well let her keep going. I held her head and watched her blow me, then leaned over and reached around her body so I could fondle her tits. I got harder. I gave her tits one last squeeze and straightened up, holding her head again. Her mouth felt so terrific and the sight of her mouth on me was better. Shit, I was mouth-fucking Rita Sorvino! Suddenly, I was on the edge. \n\n\"Rita, I'm going to cum. Are you ready?\" Her glow was bright green with sharp gold patches. She was happy and feeling very sexy. Well, so was I! I held her head and fucked her mouth with short, quick strokes. \n\n\"Here we go, Rita. I'm cumming. Right. Now!!\" \n\nRita didn't choke. I'm sure there wasn't much cum left in me, but it felt excellent shooting through my cock. When I'd pumped my last stream into her mouth, she slid her lips off me and tilted her head up, opening her mouth to show me the white fluid on her tongue. Then she closed her mouth, smiled and swallowed. She hopped to her feet and we kissed, laughing into each other's mouths. \n\nWe dressed and Rita walked me to the front door. \n\n\"Before I go, there's one more thing and it's serious. Sarah's gotten the reputation of a slut who loves wild fucking, anal sex and all kinds of stupid shit. You know better now and I want you to spread the word. She doesn't deserve to be known as a slut who'll fuck any guy on the first date. People have to know the truth.\" \n\n\"I know. I can do it. I have the right connections all around school. It'll take me a few days, but by the middle of next week Sarah will be okay.\" She smiled. \"Will you tell me all about it some day?\" \n\nI smiled back. \"I would if I could, but it's not my secret. Sarah might tell you, but I wouldn't bet on it. She's been bitten once already.\" I kissed her. \"I'm not going to tell anyone what we did here today. If you want to, go ahead, but remember what happened with Sarah. It probably won't be a problem for you. You're pretty much bullet-proof. Everyone knows you're not a virgin and you're too high up in the school social circles to be bothered by random morons.\" \n\nRita kissed me and squeezed my dick. \"I'm going to want you again, probably later tonight. I know, you're tired. So am I. Promise you'll make time for me again sometime soon.\" \n\n\"Count on it!\" We kissed again, her arms around my neck and my hands on her tits. \n\n\"You'd better go. I need to get cleaned up before my parents come home.\" \n\nMy parents like to eat supper at 7PM, so I got home with time to spare. \n\n\"Hi, Mom, I'm going to take a shower!\" I needed one. I was sweaty and had the smell of two sexy girls on me. \n\n\"Okay,\" she called, \"Karen should be here soon.\" Shit, I forgot all about Karen. She was going to college 130 miles away and was coming home for the weekend. Oh, crap! She always stopped at her friend Bonnie's house on the way home. Bonnie had a sister in my class! Karen was sure to hear all the rumors from them! Damage control was going to be a bitch. At least Karen wasn't going to say anything to our parents. She wasn't that kind of sister. I could trust her to keep quiet, but she was certain to give me a huge ration of shit. \n\nI took a nice, hot shower, being gentle with my abused tool. Dressed in sweats, I trotted down the stairs just in time to see Karen come through the front door. Karen had started growing boobs when she was 13. By her junior year of high school, she was sporting D-cups. The rest of her matched perfectly; broad hips, a small waist, long dirty-blonde hair and a slightly slutty face. Guys trailed after her like pathetic puppies. She had her pick of guys, but, as far as I knew, she didn't do any fucking in high school. I heard she did everything except fuck, but I couldn't verify any of it. She hugged Mom and Dad and then me. \n\n\"I hear you've been a very bad boy,\" she whispered in my ear. \n\n\"All lies,\" I whispered back. \"I'll give you the real story later.\" \n\nAfter dinner, when the table was cleared and the dishes in the dishwasher, Karen and I adjourned to the back patio. \n\n\"All lies, huh?\" she said with a doubting smile. \"Okay, give me the straight skinny.\" \n\nI went through the whole tale, only leaving out the intimate details of my evening with Sarah. I didn't mention Rita at all. No use complicating things. \n\n\"So,\" I concluded, \"that's the truth. The rumor mongers blew it all out of proportion. Sarah and I didn't have sex.\" Using Karen's glow to make her believe me was second nature. I'd been doing it forever. \n\n\"Didn't have sex? Are you using Bill Clinton's definition of 'have sex'?\" \n\n\"What we did or didn't do is between us. We didn't fuck.\" \n\n\"Okay, fair enough. I believe you. All you did was munch each other's naughty bits. Still, you must have made a hell of an impression on Sarah to make her give you such rave reviews.\" Karen smiled broadly. \"My little brother, master of pussy eating! Who woulda thunk it?\" \n\nI shook my head. \"I can neither confirm nor deny ...\" \n\nKaren laughed. \"Whatever. Anyway the story's out there. You're famous. You're going to be a busy boy.\" \n\n\"Yeah, well, I knew the job was dangerous when I took it!\" \n\nKaren laughed. \"Keep your strength up, little buddy. You're gonna need it.\" \n\nI rolled my eyes. \"I knew you were going to give me shit about this. Well, bite me!\" \n\n\"I wouldn't bite you, little brother,\" she said in a husky whisper. \"I'd be gentle.\" She pursed her lips and slid one finger slowly in and out, sucking hard. What the fuck!?! \n\nKaren laughed softly. She licked her finger several times while staring at my crotch. Then she got up and walked into the house. Shit, was she really coming on to me? Naturally, I'd fantasized about sex with my sister. She was hot, after all. But it hadn't occurred to me that she was fantasizing, too. I stayed where I was for another five minutes, waiting for my boner to go down. \n\nI left my cell phone off all Friday night. When I turned it back on Saturday morning, it was jammed with voicemails and texts. I called two of my buddies and suffered through questions, kidding, general harassment and more questions. They wanted graphic, clinical details and I wouldn't cooperate. All through the calls, I was interrupted by incoming calls. I rejected them all. \n\nAbout 11:00, I got a text from Sarah. I called her. \n\n\"Hi, Sarah. What's new?\" \n\n\"Not much, except I thought we were going steady and now I hear you're fucking Rita Sorvino!\" She gave me 5 seconds to absorb that. \"Just messing with you. Someone saw you giving her a ride home and there's some speculation about what came after, if you'll pardon the pun.\" \n\nI laughed. \"I wish! We just talked, not that I'm complaining. I got her to agree to spread the word about what you and I did, or should I say, didn't do. You should be off the hook by next week.\" \n\nSarah whooped. \"Shit, I was hoping you'd say that! Rita can do it if anyone can. You can't see, but I'm doing a little dance right now!\" Actually, I could sense her glow easily, even from 4 miles away. She was happy, all right. \n\n\"Glad I could help. My problem is, I'm being swamped with calls and texts. Everybody in town is calling me. I don't recognize a third of the names that pop up on caller ID. A lot of them are girls I don't know. When I heard all the crap that's floating around about us, I was happy to get a rep as a stud. Now, I'm not so sure. I don't object to all kinds of girls wanting me, but I hope this settles down. I have to keep some control here.\" \n\n\"Well, good luck with that! You're going to have to be pretty damn picky if you're going to keep your fucking at a manageable level.\" Sarah laughed long and hard. \"I can't wait for your next stud review!\" She hung up. \n\nAt lunch, Karen was off with her friends and Dad was shooting a 3-Gun match at the rifle range. Mom was clueless about my recent activities, for which I was grateful. \n\nI erased everything out of my voicemail box and text inbox from people I either didn't know or didn't want to talk to. One text, from Cheryl Dunton, looked okay. Cheryl was Rita's number one BFF and the text just said, \"Call me\". \n\n\"Cheryl, it's Ethan.\" \n\n\"Oh, good! I'm glad you called. How's it going?\" \n\n\"Other than being inundated with calls and texts from every guy and girl in town, you mean? Just great.\" \n\nShe giggled. \"That's what you get for doing what you did. I saw Rita this morning. She's walking funny and told me what happened yesterday. She talked her head off.\" She giggled again. \"Guess I don't have to tell you about Rita's head. According to her, you're, shall we say, intimately familiar with it!\" Her giggle became a belly laugh. \n\n\"Yeah, and she's intimately familiar with my head, too, especially my lips and tongue. Did you want me to call just so you could give me shit?\" \n\n\"No, not at all, that was just a bonus. My parents are on a trip and I'm having a pool party this evening. I want you to come.\" \n\nI'd tracked down Cheryl's glow and could see that she was serious. There were no signs of deception there. \n\n\"Alright, but I have to tell you, I find this a little odd. We don't know each other at all. I know who you are and that you're Rita's friend, but that's it. Your friends aren't my friends. Why ask me to a party now, as if I can't figure that out.\" \n\n\"Rita told me the situation with Sarah and what happened with all the rumors. I figured that, if I can get you together with my friends, we can get our stories straight and avoid more drama.\" \n\nCheryl's glow remained clear. She was sincere about this. \n\n\"You know, that's probably a good idea. I won't discuss any details about Rita and me, but I'll back her up if she wants to talk. What am I saying; of course she wants to talk. You two cooked up this party together, didn't you?\" \n\n\"No, the party was planned weeks ago. This just gives it a purpose other than the usual makeout sessions and hookups in the bushes.\" \n\n\"In that case, I'll be there. Is this going to be a skinny-dipping orgy or should I bring a suit?\" \n\nCheryl laughed again. \"Bring a suit. See you at 8 o'clock.\" \n\nI went up to my room and lay on my bed, thinking. The party might help. It couldn't hurt. I was going to have to do a lot of glow massaging and watch for people who wanted to mess with Rita and me. Too bad I didn't have someone to work on my glow and keep me on track. Wait a minute! Someone to work on my glow? \n\nI jumped up and stood in front of my dresser mirror. I'd noticed long ago that glows didn't reflect in a mirror. I made jokes to myself about \"vampire glows\", but otherwise I ignored it. Now, looking in the mirror, it occurred to me that I'd never seen my own glow. Was that important? \n\nI lay back on my bed. I could see glows that were miles away. I hardly knew Cheryl, but I found her glow pretty easily. Could I find my own glow? And why didn't I think of this before? Jesus, sometimes I could be dense! \n\nIt took me all of two seconds to find my glow. It looked fine; a little worried maybe. I examined my health and found nothing out of the ordinary except for a sore area in the obvious place. I concentrated on that area and found that I could increase my healing speed significantly. In a couple of minutes, I was back to normal. I felt great. \n\nNow, if I could control healing, how about blood flow? I fiddled with different things, getting nowhere until I hit the right spot. It was like visualizing the turning of a faucet handle. In five seconds, I had a raging hard-on. Wow! That trick just might come in handy! I played with the faucet, cranking my dick up and down like a small derrick. \n\nNext, I thought about making my dick bigger. It's every guy's dream, isn't it? The porn sites are loaded with ads for penis pills, penis pumps, books about how to make your dick bigger \"with these three weird tricks\". But did I want to? Erect, I was just a hair under seven inches and plenty thick. Did I want to be bigger? I was a \"shower\", not a \"grower\". Climbing out of a cold swimming pool, my dick was still about six inches long. No girl was going to be disappointed with my cock! If it was bigger, it would fill her pussy more, but might be too big for the blowjobs I was learning to love. Leave it alone. \n\nThe rest of my body was pretty good, too. I was a varsity wrestler, winning all but one of my matches this year. It wouldn't hurt to lose a little fat on my abs, though. Defined abs were high on my \"want\" list. I dug into my glow and found the area that controlled body fat. Spot fat reduction is practically impossible; I'd have to go after my whole volume of fat. I adjusted my fat level control down a bit, then a bit more. While I was at it, I dialed up my muscle mass a little. I couldn't tell how much I was changing things. After all, none of what I was playing with had scales calibrated in the metric system! How long would it take to be effective? I'd have to wait and see. I fell asleep exploring the possibilities. \n\nI woke up to the sound of Mom, yelling that dinner was ready. I hopped up and noticed that I felt different somehow. I felt lighter, stronger. I pulled up my T-shirt and checked my abs in the mirror. Holy crap! The definition wasn't terrific yet, but it was noticeable. The slight \"love handles\" that usually bulged over my waistband seemed slightly smaller, but that might have been my imagination. My chest and arms seemed bigger, too. That was pretty fast progress! \n\nDinner table conversation came mostly from Dad, who had won his match. He chattered endlessly about his shooting. I like shooting too, but I never got into competition. No time to practice with all the other stuff going on in my life. I managed to get a word in, letting them know I was going to a party. Mom insisted that I leave a phone number and address. I had to call Cheryl to get them. I grabbed a quick shower, shaved, not neglecting my nether regions and pulled on my best cargo shorts over my trunks. A nice Hawaiian shirt and sandals and I was ready to go. ",
        "At Cheryl's house, I parked my crappy Fiat among the BMWs and Mercedes and Porsches and walked to the door. I could hear music from the back yard. Some woman, probably a maid of some sort, let me in and directed me through the huge, high-ceilinged central room to the fifteen foot wide sliding glass doors leading to the screened pool and patio. Rita spotted me right away. \n\n\"Hi, Ethan! Cheryl said you were coming.\" She had a wicked smile on her face. \"I guess you know; I've told everyone about you!\" \n\n\"Yeah, I heard. Cheryl said you and I were supposed to get the truth out about Sarah. How's that going to work?\" \n\n\"We'll get to that later. For now, let's mingle.\" \n\nI didn't know any of the kids there very well. There were four guys, Jim, Harry, Reggie and Charlie and seven girls, Robin, Alex, Beth, JoAnn, Ruth and, of course, Rita and Cheryl. The girls were all happy to see me, including JoAnn and Ruth who were well known lesbians. Everyone's glow showed varying degrees of curiosity too, except for Charlie, who was hostile not trying to hide it. I hardly knew anyone except by name. \n\nRita introduced me and I made small talk, manipulating glows where it seemed appropriate. Things went better than I'd expected. As a successful wrestler, I had the respect of the jocks and sports fans, which included all the guys. I didn't follow the stick and ball games much, but I could hold my own in a conversation. The one guy who remained hostile was Charlie Turner, a 2<sup>nd</sup> string wide receiver. He was much bigger than me and was sure he was the toughest guy in the place. His glow stubbornly remained red. \n\nOne interesting thing was, all the kids except Charlie were not only curious, but were anticipating something that excited them. What that might be I had no idea. \n\nAfter a half hour, Cheryl let the maid go and swimsuits started appearing. Rita winked and stripped off her top and shorts, revealing a bikini that wouldn't have been legal at any non-nude beach in the country. The other girls had all gone the same route, apparently competing for the skimpiest suit. I hung my shirt on a hook on the fence and dropped my cargo shorts. \n\nA little after 9:00, I was talking basketball with Reggie, Ruth and Jim when Charlie barged in. \"Hey, asshole, why don't you take a hike?\" He poked me in the chest. \"You don't belong here, so fuck off!\" Jim and Ruth tried to get between us, but Charlie shoved them aside. He got right in my face. \"Get the fuck out of here or I'll kick your ass!\" \n\nMy control of the glow had kept me out of fights all my life, but I'd seen my share. Fights always followed the same script. First there was shouting, then poking and pushing and then the fight would start. That seemed totally stupid to me. There's a line from one of Clint Eastwood's spaghetti westerns; \"If you're going to shoot, shoot; don't talk\". That summed up my fight philosophy, but I never had to fight. I could always calm guys down, but Charlie's glow seemed impervious to my control. I couldn't understand it, but it was too late for analysis now. I had my hands at chest height, palms toward Charlie. When he opened his mouth again, I whacked him in the Adam's apple with the web of my left hand. He stumbled back and sat down hard on the pool deck, clutching his throat and gasping. Jim and Reggie grabbed my arms and pulled me away. I didn't resist. \n\nIt quickly became apparent that Charlie wasn't seriously hurt. He was having trouble breathing, but was recovering fast. Cheryl bent over him. \n\n\"Listen up, dickface. As soon as you can walk, get you shit and get out of here. You're a fucking moron and you had it coming. I hope it hurt!\" \n\nFive minutes later, Charlie was gone and I was surrounded by sympathetic people. \n\n\"Nice move, Ethan!\" \n\n\"Man, remind me never to fuck with you!\" \n\n\"Did you hurt your hand?\" \n\nJust before 9:30, Cheryl tapped her glass with a spoon. \"Hey, everybody, pay attention here! We need to talk.\" All the kids gathered around her. Unlike the other girls' skimpy two-piece suits, Cheryl's had one strip of cloth that was less than two inches wide running between her legs. That strip divided into two 1\" strips that ran up across her boobs, over her shoulders and down her back. The suit would have fit into a shot glass with room to spare. Cheryl had a serious rack and the cloth strips refused to stay where they were supposed to. The strips weren't wide enough to cover her areolas if she held perfectly still and she wasn't doing that. Her nipples were constantly escaping and she unselfconsciously repositioned the strips when she noticed. She didn't notice very often, making the upper part of the suit almost totally superfluous. Her medium-long light brown hair hung over the top of her breasts, accentuating the effect. The lower strip was supposed to cover her pussy, but it had worked its way inside. The only thing it covered was her clit. The result was a beautiful and virtually naked girl who seemed blithely unconcerned with her nudity. \n\n\"Rita and I are trying to straighten out the crap that's been circulating about Ethan and Sarah. In plain language, the truth is, they didn't fuck. Sarah's a virgin. She's not interested in fucking anyone right now. That's her right and she doesn't deserve all the names she's being called. She's not a slut or a whore. She's not some easy lay. We have the credibility around campus to get the truth out and stop all the shit that's being talked about her.\" Cheryl grinned. \"Ethan is a different story. Rita told all of us what happened after school yesterday. That's all true.\" \n\nEverybody looked at me. I shrugged. What could I say? \n\n\"For the details, I'll let Rita talk.\" \n\nRita stepped up. She didn't look embarrassed at all. \"Ethan and I had sex yesterday. We fucked. Twice. He went down on me once.\" She smiled, looking wistful. \"While he was eating me, man learned to make fire, developed agriculture, built the pyramids, settled the Americas, the Japanese attacked Pearl Harbor and we landed men on the moon. It was fantastic.\" She took a deep breath. \"I blew him twice. It was all entirely consensual.\" She grinned. \"Well, to be fair, I ambushed Ethan, got him to my house, took off my clothes and didn't give him much choice. All you guys know how persuasive I can be when I want your dicks. I'm happy to say I never fucked Charlie. He's a pig.\" Rita turned to me. \"Charlie wasn't invited here. He sort of invited himself and we were trying to figure a way to get rid of him so we could have this little talk. Thanks for taking care of that for us. Now, for what we want to talk about, here's Harry.\" \n\nHarry was the captain of the football team. He wasn't their best player, but he was an excellent leader. He kept the team in line and had a reputation as a nice guy. \n\n\"Ethan, we're trusting you with this because Rita says you can keep a secret. Before I go any further, I want your promise that you won't repeat anything we tell you tonight to anyone.\" \n\nWhere the hell is this going?, I thought. \"You have my word.\" \n\nHarry nodded. \"Here's the deal: All of us here are part of a group we call, \"The Group\". He smiled. \"We don't have much imagination, you see. What we do have is an agreement that we can share ourselves sexually, without having to worry about a lot of loose talk like what you and Sarah are experiencing. Basically, when one of us gets that little itch, we can be sure of finding a friend who'll help us out. We might have to make a call or two to find out who's available and in the mood, but we can depend on each other for some discreet nookie when we want it. Every guy here has had sex with every girl. Well, that does depend on your definition of 'sex'. Ruth and JoAnn have their own rules.\" \n\nRuth stood up. She had broad shoulders, short black hair, small tits and looked like a competitive bodybuilder, which is exactly what she was. Her boobs would look at home on a fourteen year old girl. The rest of her was totally feminine as hell despite the muscles and her suit left virtually nothing to the imagination. \"JoAnn and I don't fuck men, only girls. But we aren't averse to getting our pussies eaten by certain guys. We aren't averse to sucking on a penis now and then. So far, these three guys are the only ones we've had sex with. They've gone down on us and we've blown them. We're goddamn careful about who we play with.\" She looked me straight in the eye. \"Rita says you're okay and that's good enough for us. If you fit in here, great. If not, just keep quiet about the Group.\" She sat down. \n\n\"Anyway,\" said Harry, \"here it is: Rita has recommended to us that we ask you to join the Group. That's why you're here tonight. Any questions?\" \n\nI was stunned. This bunch of rich, socially connected kids were asking me to join their small, exclusive sex club? Me? \n\nI stood up, looking around at the smiling faces, sensing anticipation in the glows. They were serious. It was hard to believe. \n\n\"I can't tell you how flattered I am by this. I have to tell you, I was nervous as shit coming here tonight. This is the last thing I would have expected.\" I looked around. Every face was attentive, every glow friendly. \"I do have to ask, is there any bi-sexual stuff going on with you guys? Except for Ruth and JoAnn, I mean.\" \n\n\"Nope,\" said Harry. \"All the guys are straight. Some of the girls play with our resident lezzies, though. If you accept our invitation and get lucky, maybe you can watch. It's super hot!\" \n\n\"Well,\" I said, \"You guys have made me an offer that I'd be a fool to turn down. I'll keep your secrets and try to live up to your standards.\" \n\n\"Great!\" said Harry. \"Now there's no formal initiation, but I think we can come up with something to welcome you. Girls?\" \n\nRobin bounced to her feet and did a sexy dance move, stopping in front of me. She was vaguely oriental, with shiny black hair down to her waist, firm, medium-size tits and a dancer's legs. Her suit was nothing more than a thin band that didn't quite cover her areolas and a thong that redefined \"camel toe\". Her pussy lips swelled on both sides of the thong. She pulled the upper band off and tossed it over my head, then slid her thong off, kicking it to the side. What followed was an incredible, sensuous dance, intended to give any normal human male an erection. Her glow was alight with green and a strong shade of gold. Robin ended the dance facing away from me, her palms flat on the deck, her feet apart, her pussy inches from my face. The rest of the Group applauded. Robin looked at me from between her thighs. \"Eat me,\" she breathed. \n\nI rested my hands on her hips and kissed her ass, moving from one cheek to the other. She wiggled her butt, spreading her cheeks. I leaned in and gave her pussy a long, slow lick, doing the same to her glow. She moaned and rose higher on the balls of her feet. I caressed her slit with my right thumb, sliding it inside her and up against her clit, while continuing to lick and suck her glow. JoAnn appeared on my right, her suit gone. She was a redhead and one of the school's star basketball players, about six foot one and a very athletic 150 pounds. Her boobs were large and the sight of her running up and down the court was a constant source of stimulation and amusement for male spectators. I'd heard guys say they went to games just to watch JoAnn bounce. \n\n\"Stand up,\" JoAnn said, pulling my thumb out of her friend. Robin straightened up and turned around as JoAnn tugged my trunks off. I was about as hard as I've ever been. JoAnn spun me around and took my chair, dragging me in front of her. She wasted no time, gobbling my cock into her mouth and giving me a good, hard suck. I immediately turned my attention to her glow, stroking it while she expertly used her tongue on me. Ruth, as naked now as her lover, nudged JoAnn to one side and slid in next to her on the wide seat. Together, the two lesbians blew me, taking turns, tickling my sac, stroking my shaft and using their lips and tongues in a most delightful way. I was kept busy, jumping from one glow to the other while trying to figure out exactly what I should do. They were lesbians. I wasn't going to fuck them; they'd made that clear. I guessed they'd want me to go down on them and that was fine with me. I knew I could get them off big-time. In the meantime, what did they expect in the next few minutes? Was I expected to cum from this wonderful two-on-one blowjob? Was one of them going to swallow my load? \n\nI glanced to my right and saw Alex stretched out on one of the oversized chaise lounges with Reggie on top of her. They were fucking and watching my new friends blow me. On other chaise lounges, Robin was sitting on Jim's face while Beth blew him and Harry had his dick all the way in Rita's mouth. To my left, Cheryl had pulled up a chair and was watching the girls work on me. Her fingers were in her vagina and her glow was a silver-filled gold. I massaged it, squeezed it, sucked it and saw a flush shoot up her torso. She squeezed her eyes shut and came. \n\nAs much as I was enjoying the treatment my cock was getting, I didn't want to get off right away. I could get it up again fast or keep it up as long as I wanted, but demonstrating that ability in front of all these people might not be the best idea. I pulled away and knelt to kiss them. \"I want to do both of you,\" I whispered. I led them to a wide recliner and positioned them side by side. \n\nStarting with JoAnn, I worked my way back and forth, pleasuring their pussies and their glows. Within minutes, I had them rolling from orgasm to orgasm. Ruth's thighs were hard and muscular, gripping my head almost painfully when she came. It was great fun for all of us especially since Cheryl took the opportunity to play with me the whole time. When light brown rings grew around the edges of the girls' glows, I tapered off and stopped. I lifted my head and checked the others. Alex was now standing, bent over and holding the ladder railing at the deep end of the pool. Reggie was behind her, fucking her enthusiastically. Jim was fucking Robin on a recliner in the missionary position. As I watched, he pulled out and she pumped him with both hands. Jim was packing an impressively long and thick erection. Cum squirted across Robin's belly and tits, making her laugh as she tried to get her face out of the line of fire. Rita and Harry were sixty-nineing on an exercise mat with Rita on top. Rita spit out Harry's dick, arched her back and came. \n\nCheryl let go of my dick, grabbed my hand and led me to the mat next to Rita and Harry. She flopped on her back and spread her legs in a wide \"V\". She was breathing hard. \"I'm ready,\" she panted. \"Come into me now!\" \n\nI knelt between her legs and, as soon as I got into position, Cheryl grabbed my erection and began stuffing me into her snatch. I'd intended to do some kissing and maybe have a chance to play with her tits before we got down to it. No such luck. Cheryl knew what she wanted and before I knew it, I was inside her. \n\nCheryl's pussy was only the second one I'd experienced. It felt a bit rougher on the inside than Rita's, but after a dozen strokes, that feeling went away and I glided in and out effortlessly. I visualized tongue-fucking Cheryl's glow, getting my mental tongue all the way inside while sucking the surface. Cheryl gasped and her glow went solid silver. \"Oh, fuck, oh, fuck, don't stop!\" I slammed her glow again. Fireworks ignited in her glow and I felt her inner muscles clamp on my cock. My world shrank to her glow, pulsing and flashing as I pounded it with my mind. I shifted my weight to my right elbow and, as I'd done with Rita, applied the fingers of my left hand to Cheryl's clit. Silver lightning blasted through her glow as she dug her heels into my lower back. She threw her head back, surrendering to her pleasure, piling one orgasm on top of another. \n\nAs Cheryl's orgasms rolled on, I felt my own approaching. Searching my glow, I located the area that controlled the trigger and clamped down on it. I found that I could hold off, delaying my orgasm as long as I wanted, while maintaining that wonderful almost-there feeling. I locked that control in place and turned my attention back to Cheryl, just in time to feel her cum, her whole body going rigid. By now, she was totally out of contact with anything other than her feelings. I started easing back, allowing her to return to her normal self. I pulled my left hand away from her clit and rose to a pushup position, stroking slowly inside her. I kissed the sides of her neck, calming her glow. Her breathing slowed and she opened her eyes. She tried to speak, but nothing came out. \n\nI looked around. We had an audience. Everyone had gathered in a circle, watching Cheryl and I fuck. Every glow was green and gold, every mouth was open. It seemed that everyone was playing with someone else's private parts. Shit, my second time fucking a girl and it turns into a mass voyeurism event! \n\n\"What the fuck was that?\" Cheryl croaked. She used her heels to pull me all the way into her. I flexed my dick, enjoying myself. All I had to do was release control for a second and I'd cum. I held off, savoring the sensation. \n\nI kissed the side of her neck again and whispered into her ear. \"I didn't cum yet,\" I said. \"I wanted to make sure it was all right to do it inside you.\" \n\nShe wiggled her hips. \"Fuck, yeah! You can do any goddamn thing you want!\" Her interior muscles gripped me. \"Would it be better doggie?\" \n\n\"Better with you on top. Fuck me and let me look at you. Your tits are spectacular!\" \n\nCheryl rolled to the side and I rolled with her. She sat up, braced her hands on my chest and rode me, sliding smoothly on my cock. I kept control of my orgasm trigger, mesmerized by the sight of her body, both hands on her breasts. They were larger than any I'd felt before, soft, with a firm, solid core. I tweaked her nipples. She smiled, gazing down at me. Her desire to please me filled her glow. \n\n\"I don't want to cum just yet,\" I panted. \"This is so fucking great. You look amazing. You feel better than amazing.\" She fucked me steadily. \"Just a little longer. I don't want this to end.\" \n\n\"No problem,\" said Cheryl. \"Cum for me when you're ready.\" \n\nSilver spread through Cheryl's glow. An orgasm was approaching. She moved her hands from my chest to the mat above my shoulders, leaning forward to put more pressure from my erection on her clit. I gave her glow a nice long lick and a caress. She shivered, dropped her chin to her chest and released a low, \"Uhhhh!\" That was it for me. I popped my orgasm control loose and came with a shout. The tension I'd built up holding off all that time overwhelmed me. It felt as if my entire body was shooting through my dick. \n\nCheryl collapsed on top of me. We lay there, not moving, listening to the rude comments and applause from our friends. I allowed my erection to soften, maintaining just enough stiffness to stay inside Cheryl. \n\nEventually, she rolled off me and lay, legs spread, on the mat with her eyes closed. Ruth knelt between my knees and used a soft microfiber cloth to wipe me while JoAnn did the same for Cheryl. When Ruth had me clean, she licked the head of my dick and then slowly slid her lips down my half erect shaft. She sucked me and I felt myself growing in her mouth. Soon, I was fully hard. For a lesbian, Ruth seemed to know a lot about blowjobs. She bobbed and sucked and swirled, stroking my shaft and balls with her hands. When I started thrusting into her mouth, she pulled back and gave me a crooked smile. \"Welcome to the Group.\" \n\nBeth took Ruth's place. Beth was a bit on the chunky side, with nice, big, round milkmaid tits and not much waist. She looked like a girl who would pose for a picture in Holland, holding a bouquet of tulips with a windmill in the background. She was very blond and very sexy. \"My turn,\" she said and inhaled my dick. ",
        "Beth's technique was limited to bobbing her head and sucking, with her tongue riding my cock. It felt great. I ran my fingers into her blond hair and fucked her bobbing mouth. Pretty soon, I could feel an orgasm building. I let the feeling grow until I was close to cumming and then locked my control in place. My whole body tingled. \n\nMy view was suddenly blocked by Alex, who squatted over me, her back toward Beth, and settled her pussy on my face. Alex was biracial and Miss America beautiful. She was stunning. She was also somewhat hairy in the crotch region and I quickly found myself pushing my tongue through a thin forest of soaking wet coal-black curls, searching for her pussy. As I began eating her, I wondered; am I tasting only her juices or is it Reggie's cum, too? That idea didn't appeal to me at all. I searched Alex's glow for a hint and discovered a recent memory of Reggie spurting into her mouth. Alex was a spitter and Reggie's cum was now soaking into the dirt beneath a potted plant. Excellent! \n\nI split my attention between Alex's twat and Beth's mouth, working my magic on Alex. She came, flooding my mouth with juice and the occasional pubic hair. Her orgasms weren't as strong as the other girls had been and I explored to find out why. I stumbled on the secret: As a girl got close to cumming, a jellybean shaped area inside her glow that controlled the intensity of her orgasm expanded. Alex's jellybean was tight. It wouldn't stretch enough to let her have the mind-blowing orgasms that I could usually give a girl. Could I change that? I thinned the surface with my mind, giving it more flexibility and allowing it to expand. Maybe I thinned it too much, because Alex suddenly trembled and sat down harder on my mouth. I shoved my tongue into her and her glow burst into wall-to-wall fireworks. She began scooting back and forth against my mouth. \"Fucking shit!\" she gasped. 'Holy fucking, fucking shit!\" She came and her glow lit like a silver sun. She moaned and tumbled forward, face first. As luck would have it, Rita was sitting cross-legged right in front of her, playing with Alex's tits and was in the perfect position to catch her. \n\nPanic ensued. Alex was out cold, but she wasn't hurt. She quickly came to, dizzy and disoriented. There was talk of calling an ambulance, but Alex assured us that she was fine. \n\n\"Jesus, it was like being in the middle of an explosion!\" She grabbed my arm. \"That was beyond fucking incredible. How could anything feel that good? Shit, I'm still shaking!\" Alex accepted a glass of apple juice from Beth. She drank and I petted her glow, getting her under control and minimizing her curiosity. I must have gone too far with her. She hadn't been ready to deal with that kind of orgasm. I'd fucked up. I needed to think about what I was doing before I jumped in and started screwing with someone's glow. \n\nThe Group broke up into pairs, trios and one quartet. Rita and I sat in chairs near the pool. \n\n\"That,\" said Rita, \"was the damndest performance I ever saw.\" She raised an eyebrow and tilted her head to the side. \"I don't know what the fuck you have going for you, but it's definitely big juju. You actually, no shit, made that girl cum so hard that she passed out.\" \n\nRita caught Alex's eye and motioned her over. Alex plopped into my lap and wrapped one arm around my neck. She kissed me, using loads of tongue. I took advantage of the kiss to explore her breasts. They were large, almost cone-shaped and super firm; her protruding, pencil-eraser nipples were hard. Her skin was a flawless, even, coffee-with-three-creams shade. She was beautiful and sexy and sitting in my lap. My dick responded, hardening quickly. \n\nAlex broke the kiss. \"What did you want?\" she asked Rita. Then she kissed me again. \n\n\"I wanted to talk about what just happened a while ago. I didn't think you were going to sit on Ethan's lap and make out with him!\" \n\n\"Oh, Rita, it's more than just his lap I'm sitting on.\" Alex turned to face the other girl with her legs between mine. She guided me to her pussy and I entered her. Alex sat still, doing a series of Kegel contractions on my dick. I caressed her fabulous tits and flexed back at her. The sensation was remarkably pleasurable. \n\n\"So what do you want to know, Rita? Good 'ol Ethan here, the guy whose erect penis I'm squeezing with my vagina right now, gave me the most fantastic orgasm of my young life and I sorta lost consciousness for a minute. You're the one who told us he was great at eating pussy. Girl, you were so right! That was the best goddamn motherfucking orgasm in history. I want another one and another one after that!\" She turned her head. \"Fuck me, Ethan. I want to cum on your cock and see if it's as good as cumming on your face!\" Her glow was already bright gold. As she began sliding up and down on me, silver sparkles appeared and multiplied. I dropped my right hand to her clit, massaging her while pulling and tweaking her nipples with the fingers of my left hand. I left her glow alone. I wanted to see what would happen if I fucked her solely with my body, without any manipulation of her glow. Silver spread, shooting off bursts of brighter silver. I increased the pressure on her clit and the fireworks began. Alex bent forward with her chin on her chest. Rita scooted towards her, ready to catch her if she had to. \n\nAlex's glow burst out in jagged silver stars. She came spectacularly, shaking and mumbling and whipping her head from side to side. She didn't pass out. So, I had gone further with her capacity for strong orgasms than I'd intended, but not far enough to hurt her. I was relieved. \n\nAlex jumped up and turned to face me. She dropped to her knees and sucked me into her mouth. I had to get control of my orgasm trigger fast to keep from cumming. Alex deep-throated me and did something I'd seen on the Internet, but never had done to me. With her lips against the base of my cock, she slid her tongue out and licked my balls. What a feeling! The temptation to cum in her throat was strong, but I wanted to fuck this magnificent woman again. When she came up for air, I lifted her mouth off me and kissed her. \n\n\"I want to fuck you and cum inside you,\" I said softly. \"Is that alright?\" She kissed me and nodded. I led her to a mat and we fell together. \n\nAlex flipped over onto her hands and knees. \"Let's do it this way.\" \n\nI knelt behind her and slid my cock through her curls. This was a night of firsts and here was another one. I was no longer a doggie virgin! Alex rested her face on the mat and fucked me. All I had to do was hold still and feel her slippery pussy sliding on my dick. Alex gave herself over to her feelings, and I felt her tremble as she came. I didn't have to do a thing to her glow. I could devote all my attention to the wonderful sensation of being inside her and the sight of her smooth back and ass. I almost waited too long before clamping off my orgasm. I was so very close and the feeling was exquisite. I rode that feeling for what seemed like a lifetime as Alex came again and again and again. Her glow was bright, bright silver, shimmering and flashing. I let go and came, shooting my seed inside her, hearing a loud, \"Ahhh, ahhh, ahhh!\" that I finally realized was from me. I collapsed on top of Alex, driving her to the mat, still hard and still inside her. We lay there panting. When I pulled out, Alex stayed where she was, face down, with cum leaking out of her. Her glow was bright green with only a hint of gold. She was very happy and very satisfied and so was I. When I rolled off Alex, I nearly collided with Beth, who was fucking Reggie in \"reverse cowgirl\" position. Beth's breasts swung and danced to the rhythm of their fucking. I stayed hard and JoAnn crawled over and began cleaning me with her mouth. The cleaning became an excellent blowjob. I lay still and watched JoAnn's lips stroke me. I pushed my fingers into her hair and humped my hips, fucking her face as she blew me. Beth got off Reggie and said something to him that I couldn't hear. \n\nBeth knelt down and kissed me. \n\n\"Ethan, is it alright if I sit on your face and suck Reggie?\" \n\n\"Sure, be my guest.\" Another first, I thought. Being blown by one girl while eating another one who's blowing another guy. I hope there aren't any cameras rolling! \n\nBeth settled on me, wiggling around to get the perfect pussy placement. As I started on her, she reached for Reggie and I had a close-up view of his dick being sucked into Beth's mouth. I was happy to see Beth lean forward so that I wouldn't have to be concerned about Beth's saliva or Reggie's cum splashing on my face. Beth was one of those women who cum easily and getting her off was a snap. I built her up for a couple of minutes and then stayed on her, giving her a string of nice, hard orgasms. \n\nJoAnn moved away and I felt a pussy glide over my cock. Who the hell was I inside of? I couldn't see shit with Beth blocking my view. Another first; an anonymous pussy riding me. I felt my way up the mystery girl's body and discovered what had to be Robin's tits. Excellent! As I started on Robin's glow, I heard Reggie's voice. \"I'm gonna cum! Suck it, don't stop, suck, suck, suck, ahhhh, fuck! Don't stop, don't stop, don't stop, mmmmm, yeah!\" The feel of Reggie's juice filling her mouth was strong in Beth's glow and I shut that connection down fast. Yeech! Thanks, but no thanks! Reggie pulled Beth to her feet. \n\nRobin wiped my face with her hand and kissed me. I laid into her glow and soon she was cumming. I rolled her over and fucked her, loving the feel of my third pussy. She came again and I pulled out. It had been a busy night and I was tired. I lay on my back, resting. \n\nCheryl took her place next to me and jerked me slowly. \"Quite an initiation, Ethan,\" she whispered. \"Do you have one more orgasm in you?\" She squeezed me. \"You're hard. If you're hard, you're ready for a last round.\" She raised her voice. \"Let's get Ethan off, girls. Everybody take turns blowing him. There are seven of us. Who's going to swallow his last load?\" \n\nRuth dropped to her knees. \"I'll start. I won't swallow, but I'll suck the hell out of him!\" \n\nOne at a time, Ruth, JoAnn, Rita, Cheryl, Alex and Robin took their turns. It was a fantastic experience and only my control kept me from cumming. I might never have this chance again and I wanted my dick in the mouth of every one of these girls. When Robin moved away, I sat up and reached for Beth. \"Sit on me, Beth. Let me fuck you for a little while. I want to fuck you and touch you. When I'm ready to cum I'll do it in your mouth.\" \n\nBeth climbed aboard. She looked around at the other girls. \"I'm gonna win! Fucky-fucky, then sucky-sucky! Then it's swallow time! This'll be the fourth load I've swallowed tonight!\" She grinned down at me. \"I love to suck cock and I love to swallow cum.\" She fucked me energetically. Her tits gyrated wildly and I felt obligated to restrain them with both hands, lest she damage herself. The other girls kissed me and the guys kissed Beth. All of them played with her boobs. I clamped my trigger just short of orgasm and held it there while repossessing Beth's tits. \n\n\"Ready for some cum, Beth?\" \n\n\"Oh, yeah! You ready to get sucked off, baby?\" \n\n\"Yeah, suck me now, right now!!\" \n\nBeth slithered between my legs. It was no wonder four guys had wanted to cum in her mouth tonight. Beth was aggressive and obviously loved what she was doing. I could only take two minutes before I lost control. It was the best, most violent orgasm of the evening and also the longest. Beth didn't want to quit and I almost had to force her to stop. A fantastic end to a fantastic night. \n\nCheryl, Rita and Harry walked with me to my car. Funny, my car seemed to be sitting lower than usual and no wonder; all four tires were flat. \n\n\"What the fuck!\" I said. \"Two of those were almost new!\" I started checking the treads for nails. \n\n\"Here's the problem,\" said Harry. \"They were slashed. There are knife punctures in the sidewalls. Somebody stuck a knife in them and we all know who that was! That dumb fucker Charlie did it. Well, this shit is going to cost him.\" He punched keys on his cell phone. \"Uncle Carl? This is Harry. I want to report a crime. A friend of mine just had his tires slashed and we know who did it.\" There was a pause. \"In front of Cheryl's house on Griswold. Charlie Turner got in a pissing contest with a friend of ours named Ethan Fowler and Cheryl kicked Charlie out. He slashed Ethan's tires before he drove off.\" Another pause. \"Yeah, I'm sure you know him. Okay, destruction of private property, malicious mischief, anything else you can think of. Okay, see you in a bit\" \n\nHarry turned to us. \"My uncle Carl is deputy chief. He'll be here in a few minutes.\" He kicked my front tire and swore. \n\nMeanwhile, Cheryl had walked away and had her phone out, too. I couldn't hear what she was saying. She hung up. \"Tow truck's on the way,\" she said. \n\n\"Damn it!\" I said. \"Four tires will cost more than the fucking car's worth. It doesn't run worth a shit anyhow. Insurance will probably pay, but they'll jack my rates through the roof.\" \n\nCheryl hugged me. \"Don't sweat it. My dad owns 51 auto repair and tire stores in 4 states. This happened while you were a guest in my home and I'm responsible. Let me worry about the cost.\" \n\n\"Oh, Cheryl, I can't ask you to do that! Shit, we just met!\" \n\n\"'Shit, we just fucked', you mean.\" She laughed. \"Believe me, it's no problem. Your car will be ready tomorrow or I don't know my dad's crew. Gimme your keys. Rita, can you drive him home? Harry's going to stay a little longer, aren't you sweetie?\" Harry's arm went around her an settled on Cheryl's right boob. He snatched it off as a city police car pulled up. \n\nHarry's uncle, Deputy Chief Watson, checked out my car and another cop took notes and several photos. \"I already sent a couple of cops to Turner's house. They just called. He's in the back seat of a cruiser, headed for booking. I'll make sure he stays there until his bail hearing, Monday afternoon,\" he said with a cold smile. \"Maybe Tuesday. I've about had it with that kid. He's always getting in trouble and his mother always pulls strings to get him out. Not this goddamn time!\" \n\nRita drove me home in her Audi TT coupe. I was still fuming about my car and in no mood for Rita's attempts at sexual banter. I calmed down enough to have her stop two houses short of my place, so we could kiss good night. It turned into more of an extended grope session than a kiss. Before I climbed out of her car, I had to do some serious re-arranging in my pants so I'd be able to walk the hundred feet to my front door. \n\nI took a quick shower, brushed my teeth and hit the sack. I lay there, thinking about the night. Yesterday when I walked out of school, I was a virgin. Now, I'd fucked five girls, gone down on even more and been sucked by seven upper crust hotties, including a couple of lesbians. Things were moving fast, maybe too fast. My initiation into the Group was something beyond my wildest imaginings. How was I going to keep up with those kids? They were all super-rich and I was from an ordinary family. We were, at best, in the comfortable middle-class category. I'd worked enough part-time hours to buy a POS car and pay minor expenses. My parents picked up the tab for my insurance; otherwise I'd still be pedaling a bicycle. Could I afford to run with the Group? Fat fucking chance!"
    ],
    "authorname": "JapleinViera",
    "tags": [
        "group sex",
        "first time",
        "oral sex",
        "mind control",
        "group"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/glow-ch-01"
}