{
    "title": "Breaking My Own Rules Ch. 09",
    "pages": [
        "I didn't realize that I had fallen asleep, until I felt Francois' hand move. I opened my eyes a crack and realized he was putting a finger to his lips, which seemed odd since I wasn't making a sound. I reluctantly opened my eyes wider and stirred. He was looking toward the doorway. I looked over that way and saw Randy. I smiled. Then I remembered I was naked. I yelped and dove out of Francois' lap to grab my dress \u2013 well, DeDe's dress. Randy laughed at me, but kindly turned his back as I pulled it over my head and searched for my panties. It took a moment to realized that Francois was holding them out to me. My cheeks were burning and I wasn't sure why. I'd been totally, ecstatically, naked with Francois. There was just something about a coworker seeing you in the all together. Would he be picturing my ass the next time he was debugging my computer? Oh, hell, he probably was before, I told myself as Francois helped me to my feet and zipped my dress up. Still, I couldn't help feeling shy as we passed Randy and headed for the lounge. \n\nFrancois kept an arm about my shoulders, almost possessively, and I discovered I liked it. I remembered my brother walking me to school like that one day. It was a new school year, and he'd just moved up to join me at the high school. I'd gotten into a tiff the day before \u2013 okay, it was more like a screaming match \u2013 with a jerk from my home room who was pissed that I'd befriended one of the few black girls in our school. Come on! It was rural Wisconsin. They needed all the friends they could get. Let me just explain that my brother wasn't into organized sports, but it wasn't for lack of trying by the coachs. My little bro was BIG. When the other kids figured out he was my brother, they didn't try to pick my friends for me anymore. \n\nWhen we entered the lounge, DeDe ran at me full blast. I would have ducked behind Francois if his arm wasn't around me. How did she do that in four inch heels? She skidded to a stop in front of me and held me at arm's length, searching my face. I'm not sure what she saw, but she spun around and hugged Francois fiercely about the neck. He just smiled kindly down at her. Then she ripped me from his grip and pulled me toward the bar. Submissive? Like hell.\n\nThe bartender had a glass of wine waiting for me. Sheesh. Was anybody NOT paying attention to my love life? I had time to savor a couple of sips before Randy and Francois caught up with us. I couldn't remember the last time I felt so safe and secure, but I couldn't entirely ignore the dark city waiting out there just beyond my safe bubble. And how could I possibly keep these wonderful new friends, as well as my old friends, safe except by returning to throw myself on Tom Whatisname's mercy? I must have looked very pensive, because Randy took hold of my arm.\n\n\"What are you thinking, Sky?\"\n\nI plastered a smile on my face. \"Just, you know...\" Never at a loss for words; that's me.\n\n\"About him?\" Randy asked, and I noticed Francois frown out of the corner of my eye.\n\n\"I can't spend the rest of my life in hiding,\" I muttered. \"And I don't have enough friends to risk any of them,\" I added turning back to my wine.\n\n\"If you think for a minute that we're going to let you run back to him...\" DeDe started.\n\n\"You have to give us time, Sky,\" Randy interrupted. \"He's not stupid enough to try anything. Frankly, you're just not that important to him.\"\n\n\"Gee, thanks,\" I drawled, but with a more sincere smile.\n\n\"Come home with me,\" Francois suggested. \"I have a spare bedroom. You can have your own space. And DeDe and Randall can have the rest of their weekend together.\" Oh, yeah, I remembered. Yet more normal lives I'd disrupted just because some good-looking guy with a late-night radio voice decided to seduce me into his dark world. Were they right? Would he just drop it? Somehow, I didn't think so. But maybe that was the na\u00efve backwoods Wisconsin girl in me. I wished my big little brother was here to protect me from the playground bully. But maybe I could make do with a suave French sophisticate. Then he reached out and brushed my hair back, running his fingertips from my temple, down to my jaw line, then over to delicately trace my lips. One of my low-self-esteem voices chimed in out of the blue; 'He's probably trying to fix your just-fucked hair.' 'Just-well-fucked,' I corrected her. She was always a shrew anyway. \"Please,\" Francois added, and I was sold.\n\nIt turned out that Francois had a car, and we all piled into it, though I was looking every which way for lurking shadows the minute we stepped out of the club. Unfortunately, it was still early enough, and in an entertainment district where there were people all about, wandering from one place to another or smoking. I really doubted that, if my Tom was out there somewhere watching, I'd be able to pick him out. I noticed as Francois drove to Randy's to drop them off, he was watching the mirror carefully, and I felt better, like at least I wasn't being the only paranoid one. Once we dropped Randy and DeDe off, we drove further uptown, eventually pulling into a parking garage, then walking across the street to a nice-looking brownstone of apartment flats. Francois was on the top floor, accessed by a classy but creaky elevator. When it lurched upward, I jumped and he put a comforting arm about my shoulder, giving me that wonderful Gallic smile as we rode up. The apartment itself was very nice, not fancy but warm and comfortable.\n\nHe offered me a glass of wine and we curled into opposite ends of a couch, talking for a couple of hours. I discovered he was a French National who wrote for a French magazine and was 'assigned' to the US and Canada most of the time, writing about everything from politics, to travel, to restaurant reviews. It all sounded much more fascinating than my data entry job, if I still had my data entry job. Apart from the shaky status of my current job, there were all the resumes I'd sent out with my old cell phone number on them as well as an email address I was now afraid to check lest I give away my location. Randy had promised to help me with all that, but I had no idea when he would get a chance to. He, at least, still had a job. I also learned that Francois had been a member at the club for about a year, though he was not a regular. He was one of those more likely to show up on an occasional Wednesday evening for a quiet tryst in a private room.\n\nFrancois gave me several opportunities to talk about my relationship with Dr. Tom, without being pushy at all, but I just wasn't ready to go there. I couldn't think of any way to talk about that without sounding like a fool for letting it all happen. First task on my list was to come up with a good excuse for being a fool. That was going to take some time. When I yawned for like the fifth time, Francois excused himself, then returned with a tee shirt for me to sleep in and offered to show me the spare room. I was too tired to even think about suggesting a second go around, plus Dr. Tom had drilled into me that I wasn't allowed to ask for what I needed or wanted, so I followed him meekly to the bedroom. I couldn't remember a bed that looked so inviting. Then when Francois gave me a tender kiss on my forehead, I knew it was going to be the best night of sleep I'd had in a very long time. I rushed through my bathroom ritual, charmed to find that at some point, he'd snuck into the bathroom to set out a toothbrush and other amenities for me. Or had he set them out before leaving for the club? In anticipation of bringing me back with him? Now I was just getting paranoid, I scolded myself, with a stern look in the mirror. I went and crawled into the bed, pretty sure I was asleep before my head hit the pillow.\n\n****\n\nI awoke late in the morning, because Francois was sitting on the edge of the bed. I rolled over, rubbing my eyes, and saw him holding a breakfast tray. I couldn't remember anybody ever serving me breakfast in bed. I gaped, I'm sure, but he just gave me that wonderful smile. \"Would you like tea or coffee?\"\n\n\"Um, whichever has the most caffeine,\" I said. \"Look, you really don't need to...\"\n\n\"I want to,\" he said sternly. \"Now sit up and start on this and I will get you some coffee.\"\n\nI immediately obeyed. Yup, submissive to the bone. He had brought me a warm croissant and butter as well as an assortment of fresh fruit. A very French breakfast. Not that I'd ever been to France or had a clue as to what they ate for breakfast. A few minutes later, he was back with very strong coffee and a little pitcher of milk. He set them on my tray then pulled open the curtains. Bright sunlight flooded the room. I decided right then and there that this was going to be my new happy place. Crisp, clean sheets, bright sunlight, breakfast in bed, even a tee shirt that smelled like Francois. What more could a girl want?\n\nFrancois sat on the edge of my bed and seemed to be studying me as I popped a grape in my mouth. I quickly ran my fingers through my hair, remembering the scary image in the mirror most mornings when I first got up. He continued to watch me as I finished the breakfast and sipped at the coffee. I was feeling very self-conscious under his scrutiny, not to mention trying to figure out a proper way to thank him for the hospitality. Let's face it, about all I had to offer was sex and he'd already given far more than he'd gotten from me. Besides, we'd only met last night and as far as I knew, he was just doing Randy a favor, keeping me out of trouble so Randy and DeDe could play. Maybe he was even contemplating how he was going to get rid of me! Damn, I was no good at this.\n\nAny of my friends would have known exactly what to do. Blondie would have jumped his bones the moment she woke up. Hell, she probably wouldn't have let him sleep all night, if her morning after stories were to be believed. Brunette was more the seductress. Let the guy think it was all his idea when she 'accidentally' flashed her cleavage at him. And Exotic, well, all she had to do was look at a guy and they would turn to mush. Really. Even gay guys, I suspected. But I was pretty sure a sub wasn't supposed to jump a Dom's bones, at least not without permission first, and I had no cleavage to flash. And I sure as hell didn't have Exotic's stupefying beauty, so the best I could come up with was to mutter, \"Thank you for letting me stay here last night. I'm not sure how to make it up to you.\"\n\n\"It was nothing,\" he replied, with a faint shadow of his beautiful smile. \n\n\"You have to let me repay you somehow,\" I protested.\n\n\"I had a very pleasant evening with a very charming young woman. That is more than payment enough.\" \n\nHe wasn't going to make it easy for me, and I suspect he knew damn well the quandary he was putting me in, because his lips were twitching in the corners, obviously chomping at the bit to break into one of his full throttled smiles. 'Mixed metaphors!' my school marm voice screeched. That was one voice I didn't miss in the least. And why the hell had all the other voices been so quiet as of late? Now when I needed their debate to help me solve my Francois mystery date, they were all off sunning themselves in Tahiti. Except for a couple I could as soon have done without.\n\n\"Francois,\" I complained, sounding entirely whiney. \"You're the Dom. Tell me what I can do for you!\" At last he ducked his head, no longer able to hold the smile in.\n\n\"That's not how it works, Skylar. I have not agreed to be your Dom and you have not agreed to be my sub. We are two people enjoying each other's company. If you want something, you simply need to ask for it. Now what is going on in that busy brain of yours?\"\n\nI blushed furiously. \"I want to have sex with you but I'm afraid you're just babysitting me as a favor to Randy and DeDe.\" I got it all out in a rush and refused to meet his eyes. He simply sat in silence until I finally had to look up. He was gazing at me with a very serious expression.\n\n\"Did I not tell you last night that you were desirable?\" he asked with the same lecturing tone my Dad would use when I would come home with my head hanging because I got a B in some class. Or when I dropped out of college. Or when I took a job doing data entry. \"Come with me,\" he said, standing and taking my arm to pull me from the bed. He may not have agreed to be my Dom, but I suspected some things were just in the blood.\n\nHe pulled me into the bathroom and turned me to face the mirror, standing just behind me with his hand resting on my shoulders. Real close behind me. It was most distracting. When I focused on the mirror, I cringed. My hair was a tangled mop and there were shadowy smudges where I hadn't been entirely successful getting DeDe's makeup job cleaned up. \"What do you see?\" he demanded.\n\n\"I see a hot mess,\" I answered in a squeaky voice.\n\nHe leaned down by my ear, and said in a low voice, \"I see a hot woman who doesn't let makeup or hair style get in the way of giving and receiving immense pleasure. I'd rather be with this woman...\" His hands squeezed my shoulders, just in case I wasn't sure which woman he was referring to, \"Than a perfectly coifed, air-brushed drama queen.\n\n\"Do you know why people like me, and Randy and DeDe \u2013 and you \u2013 enjoy BDSM?\" he continued. I tried to shrug, and his hands shifted to my hair, toying with it in a way that made concentration difficult. \n\n\"Because of the intensity. A Dom is freed to demand what gives him or her intense pleasure. A sub is freed to experience intense pleasure. There is no guilt, no social norms to follow, there are no rules about tab A having to go in slot B and nowhere else. There is only what two people consent to, which is to enjoy each other in any way they find pleasurable. Is that what you want, Skylar?\" he whispered.\n\nI nodded. \"Then let's make it so,\" he said with a last tug at my hair. \"Come join me in my shower.\" I turned to follow those broad shoulders and tight ass down the hall to the master bedroom and into an utterly modern bathroom all chrome and glass and bright white porcelain. The shower was nearly as big as my whole bathroom and had multiple sprayers. I was staring at it and wondering what those jets of water would feel like, given where they were aiming, when he grasped the hem of the tee shirt I had slept in and pulled it over my head. \n\nI suddenly realized there was something even more interesting to look at in the bathroom and spun around. He was just pulling his own tee shirt off. I started to drool. Where Dr. Tom had been a carved-in-stone hard body, Francois was both more muscular, yet softer, like you could melt into that strength and feel safe and protected. Which was just exactly what I needed at the moment. When he pulled his shirt free of his head and saw me admiring his yummy chest, he smiled warmly. \"Would you like to do the rest?\" he asked, hands resting on his hips just above his jeans.\n\nI nodded enthusiastically and dropped to my knees to free that part of him that was so obviously straining to escape. When his cock sprang free, I studiously resisted the urge to touch it until I had his pants down around his ankles and he stepped free. But once he had kicked them aside, it was all hands on board. I engulfed the head with my mouth, too impatient to even tease him. He kept one hand on his hip, and reached out with the other to play with my hair. I didn't remember anyone taking interest in my hair other than as something that either got in the way, or to be yanked on. I found I liked it. I also liked that he never gave any indication of wanting to shove any farther into my throat than I was already taking him. He was letting me be in control. What a novelty. Until, that was, he pulled me away and back up to my feet. \"Not yet, little one,\" he whispered, somewhat hoarsely. \"I want to savor you like a fine wine, one sip at a time.\" Just try listening to that said with a French accent and not get all hot and bothered. He pulled me close as he reached into the shower and started the water, like he was afraid I might disappear. Fat chance.\n\nAs he waited for the water to warm, he kissed me deeply, Frenchly, delicately teasing my tongue with his, like in an intricate gavotte. I moaned against his lips, feeling my knees getting weak already. Then we were in the shower, still kissing. The streams of water were coming from all angles, some as gentle mists and some like staccato massages. My hands were against his chest, but not to push him away. I could feel his heart beating, fast like mine. His erection was hard against my belly and his one arm about my waist pulled me against him, trapping his cock between us. It didn't seem to mind. His other hand was at the back of my neck, his fingers laced in my hair, and he was turning us slowly. I couldn't figure out why until one of those sprays of water shot right between my ass cheeks and I gasped. He immediately stopped turning and pushed me back slightly, toward the spray head, at the same time nudging my feet apart with one of his. \n\n\"Oh, my god!\" I exclaimed, trying to squirm away from the wickedly intense sensation and gasping. He just laughed and held me tighter until I was sure I was going to melt into a puddle and run down the drain. After a moment, he relented and sat me on a molded corner seat and was abruptly on his knees in front of me, pushing my legs against the adjoining walls of the shower. I'd barely had a chance to draw a full breath before his tongue was on my clit, as soft and tender as the water jet had been thumping and intractable. From somewhere above me, one of the misting sprayers was covering me with its fine, warm fog. I leaned my head back and moaned as his tongue plunged inside me. The jets of spray from everywhere had set all my nerve endings on high alert, so that even the mist now seemed to possess an intensity that bordered on unbearable. That was before he reached over and twisted a showerhead to spray directly on my already hard, hard nipples. The spray was rotating in such a way that there was no squirming out of its range and the almost sting of it shot right down to where his tongue was so busily attending other overly sensitized nerves. It all combined to push me over the edge until I was screaming wordlessly and writhing, trying to escape from one sensation only to run head long into another. When he finally let up on me, I slid to the shower floor and he lay over me, protecting me from most of the rampaging water jets until I could catch my breath.\n\nI wiped the water from my eyes and looked up into his beautiful smile. \"Are you trying to kill me?\" I demanded, \"Cause the mortician's gonna have a hell of a time wiping the just-fucked smile off my face.\"\n\nHe gave a full-throated laugh. \"You want to actually wash or would you rather just get straight back to dirty business?\"\n\n\"Dirty business, please,\" I replied, but as soon as he lifted off me and all those myriad sprays hit me again, I curled into a ball and moaned. \"Who knew showers could be so lethal,\" I whined.\n\n\"Janet Leigh,\" he answered, helping me to my feet and out of the shower. He pulled a huge bath sheet around my shoulders, then pulled me close again, rubbing my back through the soft terry. I tried to reach for his cock, resting impatiently against my belly, but he pulled my wrists away. \"We have to get the gentleman dressed before he can go a courting. Come on. Bedroom.\"\n\nI was still saying 'huh?' to myself as he somehow managed to wrap a towel about his waist and pull me toward the bed at the same time. When he reached into the night stand for a condom, I finally figured out what gentleman he was talking about. Just a little slow on the uptake. He pulled my towel off and rolled me onto the bed, then tossed his towel aside and 'dressed the gentleman' as I watched, licking my lips. Then he was crawling across the bed, leaning over me with a lecherous looking grin, saying \"How can I please you?\"",
        "\"I'm supposed to be pleasing you,\" I protested.\n\n\"Pleasing you pleases me,\" he said, then was kissing me before I could argue anymore. When he broke off the kiss, I took a deep breath, ready to relaunch my protest, but then he was at my breasts and I couldn't for the life of me remember what I was going to say. He straddled me, resting his ass on my legs as he kneaded my breasts with his hands and alternated sucking my hard, tender nipples. The sensation was overpowering, yet I kept arching my back, daring him to take more, suck harder, nip. I was almost sobbing when he finally slipped down between my legs, pushing them wide and resting the head of his cock at my entry. But then, he didn't move.\n\n\"Francois!\" I screamed in frustration, trying to wiggle down onto him. He simply grasped my hips and pinned me down.\n\n\"All in good time, little one. I've decided I need to taste you again.\"\n\nI couldn't think of a good argument against that, so I concentrated on catching my breath as he so slowly sank down between my legs, letting his warm breath wash over my pussy long before his tongue reached out and made contact. When it did, I jumped as if he'd completed an electrical circuit. How could I still be so sensitized? Not only that, but I was as wet as if I was still in the shower. When his tongue coyly avoided my clit, I couldn't stand it anymore. \"I'm going to lose my mind, here, Francois, and it's not going to be a pretty sight,\" I warned. \"In fact, if you have a house keeper, I can guarantee she'll quit.\"\n\nHe laughed, but he finally went to work on my clit and had me coming in a matter of minutes. Then he plunged inside me before that orgasm had even begun to fade. I pulled my knees up and wrapped my ankles around his ass, trying to pull him even deeper into me with each thrust. His hands slid up along my back until his fingers wrapped over my shoulders and pulled me onto his cock with each stroke. I reached for his ass, desperate to speed the release of the pressure that was expanding rapidly in my belly, but abruptly he was pulling out and I literally sobbed at the loss, until he flipped me over, pulled me to my knees and slammed back into me. It was like a pin in a balloon. I exploded from the inside out, screaming into the mattress. He was holding me up by the hips, slamming into me over and over again, riding me harder than anyone ever had. His balls were slapping sharply against my clit, and somehow, the sting of that slap sent me over yet another edge, though I had no breath left to scream with. \n\nI was only vaguely aware when he found his own release, groaning through gritted teeth as he strained to sink even deeper into me. Then he collapsed on top of me, our legs in a tangled mess not unlike my hair. We both struggled to catch our breath. At some point, he reached around me and pulled me closer against his chest. \"Are you cold?\" he asked with concern.\n\n\"I tell you what. If I'm ever cold again, I'll just remember this morning. That'll warm me right up.\"\n\nHe chuckled. \n\n****\n\nWhen we could both move again, I put the tee shirt back on and we had gone out to sit at his kitchen counter and have more coffee. I even tried his French style caf\u00e9 au lait. Mostly, I fought with my hair. Whenever I let it dry without working the tangles out, I swear I'll never do that again. So another rule broken, but this time I figured the reason was well worth it. On top of letting it dry with tangles intact, all I had with me was the pathetic little brush I carried in my purse. Francois watched me for a while with ill-disguised humor, then took the brush from me and set out to free the tangles that my efforts had just made worse. I must admit I teared up a little bit. Other than the occasional hair stylist, the only person who had ever helped to comb my hair was my mother, and she had died when I was thirteen. I didn't let Francois see, though. That was more of my baggage than he should have to deal with, especially given how much he was already dealing with.\n\nOf course, it was just about then that he announced he wanted me to come and stay with him until whatever was going on was resolved. He had said that Randy didn't tell him any more than that I had been in a troubled relationship, and I'd certainly avoided talking about it. But he obviously knew it had something to do with BDSM. I suppose that wasn't too hard a jump to make, given our discussion about whether I wanted a Dom and the fact that Randy was involved in some way, but still. \n\nI shook my head, wondering how I could explain just enough to make him understand that my refusal had nothing to do with him. He pretty much took that quandary off my hands, though, because his next question was, \"Are you afraid?\" That really didn't lend itself to an answer of 'It's not you, it's me.' I became suddenly, intensely interested in my lukewarm coffee. \"Skylar?\" he prompted, softly but firmly.\n\nI grudgingly nodded. \"Is there danger?\" he asked, when I didn't offer any explanation.\n\n\"Yes. I think so. I don't know. Maybe not,\" I said with brilliant clarity. I went to sit on the couch, hoping that would somehow end the conversation, which of course it didn't. He followed me. \n\n\"Talk to me,\" he ordered, sitting in the middle of the couch. Not close enough to be touching, but too close to ignore. I pulled my knees up to my chin and hugged them, as close as I could get to an upright fetal position.\n\nI sighed. \"He made threats against my family and friends. He said they'd be hurt.\"\n\n\"Because you ran away from him?\"\n\nI ran my fingers through my hair, tangling it all over again. \"Randy found out I'd been...\" I searched for a euphemism that sounded less stupid than 'seduced to the dark side.' \"...introduced to BDSM. He was concerned, wanted to be sure I was being safe. I guess I wasn't very convincing, because he took me to the club to show me... stuff.\"\n\n\"The rules, the consent forms?\" I nodded. \"Yes, he is proud of the club's efforts to practice safe BDSM. I am not surprised. But then what happened? Did you talk to this man about it, ask him to respect your limits?\"\n\n\"He was there. At the club. He saw me and he was furious. I was so scared, Randy insisted that I go home with him and stay with DeDe, not back to my apartment.\"\n\nFrancois seemed puzzled. \"Is your building secure?\"\n\n\"It was until he moved in and hacked the security system.\"\n\n\"I see,\" Francois said, as if it were an everyday occurrence. \"And then?\"\n\n\"He was waiting for me after work the next day. He said I was his and that he would hurt anyone else I 'played' with. He demanded that I come home with him so he could 'correct my behavior.' I made a scene and ran for a cab. Later, he sent a text saying he was going to hurt my friends and family.\" So much for only revealing the bare minimum to convince Francois he didn't want to get involved with me. \"If I stay here, that will just put you in danger, too.\"\n\n\"That is my decision to make,\" he said sternly. \"So, you are thinking of going back to him? Is that what DeDe meant last night?\"\n\n\"I'm afraid. For my dad, for my friends. Not for me,\" I said bravely, which of course he saw right through.\n\n\"You think he will hurt you, punish you, and then it will be over?\" he asked.\n\n\"Yes,\" I replied warily.\n\n\"Why?\" was all he said.\n\nI shook my head in confusion. \"Why? Because that is how it's always been with him. I disobey, and he punishes me and that's the end of it.\"\n\n\"Until the next time you disobey.\"\n\n\"Well, yeah,\" I said. It all seemed obvious to me. Action/reaction. End of story.\n\n\"How many times have you disobeyed him after he has punished you?\"\n\n\"Um, a lot, I guess.\"\n\n\"So what would you say is the chance that you will disobey again? If you go back to him now?\"\n\nI shrugged reluctantly. \"I'm not very good at obeying, I guess.\"\n\n\"And if you go back to him now, will that not show him that hurting people you care about is an even more effective punishment than hurting you?\"\n\nI was swiping angrily at the moisture that kept accumulating in my eyes. \"You don't understand,\" I snapped petulantly.\n\n\"Don't I?\" he said softly.\n\n\"Stop it!\" I shouted angrily. \"You're doing just what he does, twisting logic into ropes to tie me up with.\" I jumped off the couch and ran to the spare bedroom, finding DeDe's dress and heels, yanking the clothes on even as I searched for my purse. He followed me and stood in the doorway, looking hurt that I'd compared him to the asshole Dr. Tom. When I finally remembered that I'd left my purse in the guest bathroom, he was blocking my way.\n\n\"And just how did he twist logic?\" he asked. His accent seemed thicker with the hurt I'd caused him.\n\n\"To start with, he was going to make me strong and bold by teaching me to obey. He was going to take me all the way to the bottom so that I could realize I'd been falling and choose to become something else. He made me...\" I clapped my hand to my mouth, feeling sick.\n\n\"What,\" he asked softly.\n\nI sank to the floor in a heap and the pain I'd been keeping chained inside came flooding out in a gushing of tears, accompanied by great wracking sobs. I buried my face in my hands, the heels of my palms pressed to my eyes, but they couldn't stop the flow. Snot was running from my nose, mixing with the tears. I tried to curl into the tightest ball possible, but then arms were around me, a handkerchief was covering the parts of my face that my hands weren't. I slowly realized that my human ball of misery was encircled by his warmth and compassion, despite the cruel accusation I'd thrown at him in an attempt to save myself from my own ugly truth. He was sitting behind me, legs wrapped around mine, arms holding me tight, his head resting against mine so that his warm breath fell on the back of my neck. I have no idea how long we sat like that as I bawled my eyes out. Long enough that every muscle in my body ached and my eyes ran out of tears, though my stupid nose seemed to have an endless supply of disgusting, embarrassing snot.\n\nSomewhere around that point, he managed to scoop me up and move me onto the bed, then curl up around me again. My muscles screamed in protest, but eventually agreed among themselves that the bed was a definite improvement. When my sobs settled into intermittent sup-sups, and I'd blown my nose into the soggy handkerchief for the five hundred and sixty-third time, He asked again. \"What did he make you do?\" He wasn't going to leave it alone until he'd ripped my very soul open for inspection.\n\n\"That's the whole point,\" I said bitterly. \"He didn't make me.\"\n\n\"I don't understand,\" he said softly, so close to my ear.\n\n\"I did it. With no prompting.\"\n\n\"Did what?\" He was trying not to sound as confused as he must have been, given my cryptic soul searching.\n\n\"I apologized for touching my own body. For touching his property. And I fucking meant it.\"\n\n\"Skylar, if he can twist your mind to get you to cede yourself to him that completely, what can he wrest from you by threatening your family and friends? You can't let this go any further. You think it will stop if you go back to him, but you will only be giving him even more power over you. Let people help you.\"\n\n\"I don't want to get anyone else hurt. I couldn't live with myself.\"\n\nHe pulled me onto my back and rolled on top of me. \"Don't make decisions for other people. They don't like it any more than you like him controlling you.\"\n\n\"Oh, my god!\" I exclaimed as he stared intently into my eyes.\n\n\"What?\" he asked with more than a touch of alarm.\n\n\"I just realized what I must look like. Get off, get off! I need to go wash my face!\"\n\nHe rolled away, laughing at me, but when I emerged from the bathroom some time later, I noticed he had positioned himself at the end of the hall, just in case I decided to make a break for it. On the other hand, he held out a small bottle of Tylenol and a glass of water, both of which I desperately needed, so I decided to forgive him for assigning himself to guard duty. \n\nHe led me to the kitchen where he'd put together some cheese and crackers and slices of summer sausage. I wasn't in much of a mood to eat, but he kept pushing the plate closer to me. Finally, he sealed the deal by promising to call Randy and convince him to have DeDe stay there for the next few days, while I stayed with him. As an afterthought, I asked him to check with Randy to see if it would be safe to call my friends at work on Monday. I knew Randy thought the threats were idle, but I was not so sure and I wanted to at least let my friends know to be careful.\n\n****\n\nIn the late afternoon, we all met up at DeDe's apartment so she could grab some work clothes and I could get my suitcase. I found myself clinging to Francois as we parked and had to walk several blocks to her apartment. I still wasn't convinced that Dr. Tom wouldn't be able to find DeDe's place. I must say, though, that I felt a huge wash of relief when I passed a coffee shop on her block and saw Maurice, sitting in a window seat, keeping an eye on things. He winked at me as I passed and I immediately started breathing easier.\n\nWhen we reached the apartment, DeDe was going through her closet, trying to decide how many outfits to pack. She peeked out her bedroom then ran at me yet again to wrap me in her arms, pushing me back into Francois. I didn't complain, though I did step on his toe trying to catch my balance. DeDe was a force to be reckoned with. Randy had been on his phone but abruptly ended the call as I untangled myself from DeDe's hug and turned to him.\n\n\"I want to call my friends at work tomorrow,\" I told him, trying to sound stern.\n\n\"On the business line. After ten,\" he replied, \"I called in some favors to get the security team to run a sweep on the phone system first thing.\"\n\nI'm sure I looked deflated after preparing to go toe to toe with him over my demand. He gave me that nerdy smile. \"Just don't tell them too much,\" he warned. \"You don't want to frighten them.\"\n\n\"Okay. I'll just tell them I broke up with him and it was messy. I've told them something about his... proclivities. I can warn them to steer clear of him if they see him, right?\"\n\n\"Yup. But don't give them your new phone number.\"\n\n\"What? Why?\"\n\n\"You said he'd been on your old phone. He could have their numbers and try to find you through them.\"\n\n\"Oh,\" I said in my tiny voice.\n\nA short time later, we loaded my suitcase and DeDe's bag into the trunk of Francois' car and drove to a quiet restaurant in midtown to eat dinner. By unspoken agreement, we talked about weather and sports and everything but 'him.' That night, Francois invited me to sleep with him, just sleep, he emphasized. My exhaustion must have been plain to see. Bawling my eyes out does that to me. He also was emphatic that he would not be offended at all if I wanted to sleep alone. I'm no fool. I picked him.\n\n****\n\nAt ten o'clock sharp, I was dialing the business line for the company. When the switchboard answered, I asked to speak to Crystal, AKA Brunette, and was put through to her extension. After a few rings, it went to her voicemail, but I didn't leave a message since I couldn't give her my new phone number. I tried back, after racking my brain to remember Blondie's name. I knew her first name was Jessica, but we had a bunch of them. It took me a few minutes to remember that it was Jessica White. When her line went to voice mail, too, I began to wonder if there was a staff meeting or something. I hit zero to get back to the switchboard and asked for Shawna, AKA Exotic. She picked up on the first ring. \n\n\"Hey, it's Sky. What's going on? I can't reach Jessica or Crystal.\"\n\n\"Where are you? Why aren't you here? Why aren't you answering your phone?\" she demanded.\n\n\"I'm kinda going through a rough patch,\" I explained. \"I broke up with that kinky guy and he didn't take it well. I had to change my phone number.\"\n\n\"Jesus, did he beat you up?\"\n\n\"No, it's just, well, he's kind of scary so I've been staying with a friend. He knows where I work, so I've been staying away until he moves on. So where are Crystal and Jessica?\n\n\"Crystal didn't come in or call in today. Nobody can get hold of her. Jessica has a key to her place so she went over there to check on her. I haven't heard back, yet.\"\n\n\"Oh, my god,\" I moaned. \"Listen, give me their cell phone numbers.\" I glanced over at Francois, who seemed totally involved in whatever he was working on on his computer. \"And yours, too. I don't have them on my new cell phone.\" I wrote them out on the palm of my hand.\n\n\"What's your new number?\" Shawna asked.\n\n\"Um,\" I stalled.\n\n\"Shit, boss is coming. Call me back later,\" she instructed.\n\n\"I will,\" I said, though she had already hung up.\n\nI sent a text off to Randy. 'Crystal is missing. Jessica has gone to look for her.\"\n\n'I'll see what I can find out. Don't worry,' he sent back.\n\nI walked across the room to Francois, feeling very uncomfortable about disturbing him at his work, but he looked up with a smile. \"May I borrow your cell phone?\" I asked. \"I can't find a couple of my friends and Randy said I shouldn't call them from my new phone, just in case.\"\n\n\"Of course,\" he said, pulling it out and unlocking it before handing it over.\n\nI tried Brunette's number first, but it went straight to voice mail, so I tried Blondie. She picked up after a couple of rings. \"It's Sky,\" I told her. \"Did you find Crystal?\"\n\n\"Sky, where the hell are you? I thought you'd both gone missing!\"\n\n\"Long story. What about Crystal?\"\n\n\"She wasn't home, but it looks like someone was in her apartment. I called the police, but I don't know if they will come.\"\n\n\"What do you mean it looks like someone was in her apartment?\"\n\n\"Well, you know how neat she is, but there were some drawers left open and papers all over her desk.\" Actually, I'd never been in her apartment, but I did know how she complained about my place when she came by, so it made sense.\n\n\"Okay, I need you to listen carefully. I have some friends who might be able to find out something about Crystal. But in the meantime, I need you to know that I broke up with that kinky guy. He was really mad, so if you see him, just steer clear. Okay? Promise?\"\n\n\"Sure, okay. Is that why you haven't been answering your phone?\"\n\n\"I got a new phone. He wouldn't stop calling. Listen, I've got to go, but I'll let you know if I find out anything.\"\n\n\"But what's your new number?\"\n\n\"Gotta go! Sorry.\"\n\nI hung up and turned to give Francois his phone back. He was watching me with concern. \"Your friends?\"\n\n\"One of them is missing. She's not at her apartment and she's not answering her phone. I let Randy know. Blondie, um, Jessica says it looks like someone might have been in her apartment.\"\n\n\"I'm sure it's nothing to worry about,\" he said, trying to calm me.\n\n\"It's just not like her, though,\" I complained. \"She even says she wants to be buried with her cell phone. She can't stand being out of contact like this.\"\n\n\"Skylar, people lose their cell phones, break them, let the battery run down. You're letting your imagination carry you away.\" He stood and drew me into a hug. I savored that comforting closeness until my phone pinged with a text message. I pulled it out of my jeans pocket and looked at the screen. It was from Randy.\n\n'Crystal is in the hospital. More later.'"
    ],
    "authorname": "Chimera44",
    "tags": [
        "pussy eating",
        "shower sex",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/breaking-my-own-rules-ch-09"
}