{
    "title": "Zombie Girls and Monsters",
    "pages": [
        "Chapter 1: The Outbreak\n\nWhen I was in high school, there were slow, lazy days when I fervently hoped for the apocalypse. I had a long time later to reflect on how stupid I was. \n\nI had a good life. My parents were loving and kind, and we lived well. They ran a small mom and pop grocery store near the center of the little suburb where I grew up, and we lived in the two floors above the store. I had everything I needed and many of the things I wanted. \n\nBut life was so BORING. School was a slow torture every day, sitting behind an uncomfortable desk learning about past participles. I wasn't a bad student, but I couldn't stand having to be in school all day. And the city about 45 minutes from where we lived seemed fun, but nothing very exciting happened in our little commuter town. I desperately hoped for something, ANYTHING that would break me out of my crushingly dull routine. \n\nBeware what you wish for. \n\nAs late winter started to give way to spring, IT happened. It started somewhere far away, in another country. I remember people on the news saying it wouldn't make it to the United States, and then that it wouldn't make it to our area. We were probably safe. It wasn't like in the movies at all, it took MONTHS. A few cases in the U.S., a few police reports in the nearby city, and then weeks and weeks after it started there was an old man who owned a store on our street and got taken to the hospital. \n\nI remember most the truly absurd moments. Two High school baseball teams thought it would be safe to play a game with some extra security precautions. By the end of the night, they had lost half of one team. I also remember some middle aged woman weaving around someone staggering through the street, pulling up to our store, and asking to buy some milk. I guess everyone thought the police and the hospitals and the military would be able to handle it. But those were all made of people who had lives and families just like everyone else. \n\nThe most absurd moment was my parents leaving. Just before it got really bad, when there were still highway patrol cars keeping the roads open, my parents decided to go get my mother's parents and bring them back. I was so anxious, I remember my heart pounding and my palms sweating, I wanted to go with my parents so badly. But my dad had decided someone needed to stay and watch the store. \n\nI remember his speech just before they left. \"You're a man now, you're 18... it's time to start taking responsibility and supporting your family... we'll be back in two days.\" \n\nFamous last words. \n\nThe first four weeks after my parents left were a blur. I never left the shop, holed up in the living room on the second floor with all the shop windows and front door boarded up. Remarkably, the power went off twice, but it eventually came back on both times. I never understood how we still had power, because within days the tv stations had stopped transmitting and eventually even the radio went silent except for a repeating, \"This is a message from the emergency broadcasting system...\" message. Yet somehow, even the street lights stayed on at night. And for those first few months, water kept flowing through our taps. \n\nI had plenty of provisions in the store. I spent most of my days nervously watching out the window. The aimless, growling bodies shuffled by regularly, at least two or three an hour. They never ran and never stopped, just kept their slow shuffle, rarely ever in groups. I saw one catch a mangy, thin cat early in the outbreak. The zombie happily and ravenously ate the cat while the poor animal screamed. \n\nIt was remarkable how much pop culture had prepared us all for this moment, and how completely inadequate society was in responding to the outbreak. At night I slept in a makeshift fort made of furniture that I had built in one corner of the living room. \n\n Chapter 2: Sally the Zombie\n\nEverything changed for me about four weeks into the pandemic. I had already lost track of the days of the week, and don't know how long I would have continued doing nothing but sheltering in my house day after day, if not for this most random and chance of sightings. \n\nI spotted Sally shuffling down the street. There was no mistaking who it was, the buxom blonde queen of my high school, or the fact that she was a zombie. She was wearing a loose, white blouse that had been torn away over one shoulder, exposing her white bra and overflowing cups beneath. She also had on pink shorts that appeared to be torn near the bottom on her left side, and the loose sandals she was wearing looked filthy. \n\nI could see that the tall, disheveled blonde was a couple of minutes away from shuffling right in front of my store, and no one (or thing) else was within sight. I could never explain later what made me do it, maybe the same boredom that had made me wish for the end of the world, but I felt like I was running on instinct rather than thought as I sprinted down the stairs towards our front door. \n\nI remember whispering softly to myself over and over, \"What are you doing? What are you doing?\" as I loosened the bolts holding the heavy wooden board over the front door, and then slowly sliding back the iron grate while I held the rough, heavy burlap sack in my hands. The sweat trickling down the back of my neck had nothing to do with the temperature as I waited for what felt like an eternity for Sally to stumble past the entrance to our store. \n\nWhen I threw the sack over her head and dragged my classmate into the shop, her reaction was immediate. Like a cornered animal, she snarled and fought back against me, but I had her in a good grip from behind, her arms mostly pinned at her sides. I was tall and skinny at the time, just over six feet with a wiry frame. As I hauled the young blonde back into my family's dry goods store room, I first remarked to myself on how Sally's skin felt like it was on fire, like she had just baked in the sun for eight hours. Then I expressed my thankfulness that, even though zombie movies had led me to fear a zombie's strength, Sally felt weak with my arms wrapped around her. \n\nAs I hauled Sally into the store room, she kicked weakly. It was like her mind was awake and enraged but her body had almost no energy. It was much easier than I had expected to secure Sally's wrists with the soft but strong nylon rope we had, her ankles with bungee cord, and her waist with rubber tie downs. When I removed the sack from over her head, she snapped at me, but I had every part of her double bound with two sets of bonds. She could move a little around the room, but she was anchored by my ropes to the iron loops on the floor and in the walls. \n\nAfter checking that no one on the street had seen us, and carefully re-securing the metal grate and wooden board covering our glass door, I spent hours studying Sally. She had fallen so far from the prom queen and object of every boy's fantasies that I had known in high school. She existed in a different social stratosphere from me. We had five classes together in four years, and I wasn't sure if she knew my name. She was the head cheerleader, dating the football team's senior quarterback when she was a sophomore. She swam and played tennis. She was THE girl at my school. She was about 5'7\" and built like a centerfold. Flowing blonde hair down past her shoulders, thin waist and shapely shoulders from her swimming, long, shapely legs, toned stomach, all capped off by large D cup breasts. She was so pretty, a sweet smile with full lips and sparkling white teeth, high cheek bones and deep blue eyes. \n\nThe thing in front of me was like a distorted shadow of Sally. She had Sally's face and body but she looked half starved, hair a dirty, tangled mess behind her head, covered in filth. The most striking change was Sally's blue eyes. They were hollow and dead, like a shark or a wax figure, all faded pupils and empty hunger. \n\nSally snapped at me so much, staring at me in the doorway of the storage room, that I started to worry for her teeth. There was no thought behind those blue eyes, just gnawing hunger. I got a raw steak out of our meat freezer and tossed it to Sally, who grabbed it out of the air and started chewing on the frozen meat immediately. \n\nI went back upstairs to check on the situation on the street, and when I returned to Sally she had already finished the frozen meat. There was no recognition like what you would see from a pet who knew you had fed them, but some lower recognition like food had come from your direction. Then I learned something they never showed in zombie movies. Any doubt that she had previously soiled her own shorts was erased when she pissed herself in front of me. \n\nI made the momentous decision to clean Sally. It was almost comical, the errors I made struggling with her that first time for almost an hour. It took forever using a combination of broom sticks, knives, and an aluminum pole to keep her angry hands at bay while slowly cutting away her clothes and exposing the filthy skin beneath. \n\nLuckily we had a small drain in the floor of the storage room, so when I had gotten Sally's clothes off, I hooked a hose up to the nearby sink and just hosed her down, using a mop and dog shampoo to wash of her skin. The dirt and other filth that had accumulated on her young body drained away through the hole in the floor. \n\nWhen I was done, Sally looked remarkably more like her old self, but I had a new problem. Her blue eyes were lifeless, and she snarled whenever I got close, but she still had an amazingly sexy body. I had been so busy with scrubbing her, it wasn't until I was done that I noticed her large, full breasts, a perky teardrop shape hanging from her chest. I admired her light pink nipples, the outline of her abs visible just beneath the skin of her flat stomach, her shapely legs, and the blonde stubble just starting to grow back around a pussy that must have been completely shaved before the current chaos. She looked slightly thinner than I remembered, but somehow that accentuated the large swell of her perky bosom, and the round curve of her tight ass. \n\nMy cock was hard as a rock looking at Sally. Everything had been sad and difficult, so I hadn't jerked off in three or four days. \n\nI thought about it for a long time, standing there, admiring Sally's mindless nakedness. Eventually I pulled out my throbbing cock and started jerking off. She still had those full, soft lips I had imagined kissing. I wondered how heavy her smooth, round breasts would feel in my hands, or whether her pussy was still warm and wet. It didn't take long before I felt the familiar tingling in my body, watching this gorgeous creature strain in front of me. I was very careful not to get too close to Sally, but as my orgasm built inside of me, she pulled herself forward on her ropes, fixated on the fast motion of my closed grip as my hand jerked rapidly back and forth over my hard dick. As she leaned forward, her sexy nakedness less than a foot from my raging erection, I came hard. My hot, white cum shot forward, the edge of my blast just barely coating the tips of her pink nipples. \n\nI admired my white cum on the smooth skin of Sally's large breasts for a full minute. It was a site I had never expected to see. And then I hosed off her chest again before locking Sally in the storage room and heading back upstairs. \n\nIt was several hours before I returned to Sally, unsure what I would find. She was sitting in the corner when I threw open the door, but immediately leapt to her feet and was snapping at me once again, her bare arms and legs straining against the bonds that held her. The storeroom has always been a little warm, near the center of the building, and all the water from washing Sally had turned the room steamy. To keep my zombie captive from snapping her teeth at me, I threw her some raw hamburger from the fridge and shut the door again. \n\n Chapter 3: Playing With My Pet\n\nThat first day ended up being pretty typical of my time with Sally the Zombie, as I grew to think of her. I learned that Sally would eat just about anything edible, but she seemed to eat more quickly and grow calmer if I cooked her food and prepared her regular meals. I also got her a clean bucket where I left her fresh water from the tap. Sally never acknowledged in any way that I was taking care of her, she tried to bite me and strained against her bonds every time. At one point I had to change out the rubber straps around her waist because it was leaving red welts on her skin, fortunately I had a good supply of nylon rope. I also tried cooling the small storage room with a fan at one point, worried that she was getting hot, but that seemed to agitate her. She liked her room hot. \n\nI had no idea how long Sally was going to last like this, tied up naked in my family's storage room, but she was the best distraction I had. I spent a lot of time ensuring the building was locked up tight, inventorying supplies, and keeping an eye on the street in front of the store. But sheltering in a small building day after day, no tv or radio, no people to talk to, was incredibly boring. \n\nOnce every few days I would see a car drive by, or once every five days I'd even see a group of people walking on the street. But my fellow survivors never looked like the type who I'd want to stop for a chat. They were usually men armed with bats and metal spikes, searching for supplies. They would try the metal grate over the front of the store, sometimes knock on the heavy board covering the windows behind it, and then move along. So for the most part, Sally was the only interesting thing in my little world that existed outside of my head. \n\nI felt a little embarrassed that first time I jerked off onto Sally's chest, but a few days later I was horny again and found myself admiring Sally's shapely, naked body. She had lost a little weight since I last saw her, probably since she had turned into a zombie. I could see her rib cage beneath her skin. But otherwise she was holding up much better than the zombie movies had lead me to believe. Her skin was still smooth and soft, if burning hot to the touch. I wasn't taking good care of her hair, which got stringy, or her nails, which grew long. But her face still seemed pretty. Her ass was still round and taut. Her muscles still moved sinuously beneath her pale skin. The only things really off about Sally were her lifeless blue eyes and her constantly snapping, angry mouth. \n\nHer snapping led me to create what I called her muzzle, which I admit bore an unfortunately strong resemblance to a ball gag. I managed to tie some silk around a fat piece of cow hide that had been meant to be a chew toy for a large dog. I could fit it between Sally's teeth and keep her from cracking her own teeth, with the silk tied behind her head. I still had to be careful for her nails though, as she tried to claw at me \n\nWith the muzzle in place, I felt more comfortable, and soon every other day I was down in the storage room jerking off to the site of naked Sally. Her eyes bothered me sometimes, and I had to put a sleeping mask over them, but she was more interesting and arousing than the old porn I had on my laptop. \n\nI pulled a chair into the doorway of the storage room and would admire Sally's naked body while stroking my excited dick. Her toned, sexy legs looked so smooth and shapely, until they started to get a little hairy with blonde fuzz. Her lips were still full and soft, even wrapped around the chew toy. Her pale stomach was flat, with the outline of her abs visible beneath. And my favorite part to ogle was Sally's big, round breasts. They were so large and full, dangling from her chest. Sometimes when she strained at the edge of her bonds, I would cop a quick feel, weighing her heavy, smooth tits with my excited hand. Her pink nipples would swing back and forth as she struggled against the ropes to try to reach me. \n\nAt first I would jerk off a safe distance away and cum on the floor or at Sally's feet. I loved the idea of wrapping her big tits around my hard dick, or even fucking her sweet pussy, but I was too nervous to get within six inches of her. As I got braver, I would stand when I felt my delicious orgasm approaching and aim my cock at the shapely blonde struggling in front of me. Sally the Zombie seemed happy to oblige, and would react to my standing by pulling even harder against the ropes that held her, thrusting her chest towards me as her muscles strained just below her bare skin. \n\nIt wasn't long before I started repeating my first experience and was covering Sally in my cum. With her big, round boobs pointing towards me, it was easy to shoot my hot, white load over her nipples. I though about all the times she had gotten me hard in her tight tennis uniform or a thin summer dress, and I coated her exposed, light pink nipples in a layer of my wet spunk. Later I figured out I could pull my chair close, stand on it, and cum right on Sally's face. Zombie Sally reacted with surprise every single time my hot cum blasted forth and sprayed her in the lips or the nose. My sticky jizz covered her soft, pink lips, dribbled down her chin, pooled beneath her eyes, and dripped down her nose. I loved cumming on the face of the hottest girl at school, and I did it over and over. I'm embarrassed to admit now that I probably covered every inch of Sally from the bottom of her breasts to the top of her head with my hot cum, most places two or three times. \n\nI cleaned Sally at least once every three days, using the hose and mop. I noticed how quickly her hot skin seemed to dry. I also got aroused and ended up cumming on Sally every time I washed her, which kind of defeated the purpose of washing her because I had to clean her again. It was hard not to get turned on watching the water flowing over her sexy, naked body, seeing the way it was channeled between her big breasts and flowed over her tight stomach, or made her smooth, pale, round ass slippery. \n\nThe tit fucking started almost by accident. One day after her washing, I was jerking off, and Sally slipped in the water pooling on the store room floor in her efforts to try to get me. She fell initially to her knees, but in trying to get up she ended up rolling over and over, twisting together the ropes binding her hands and feet. Sally the Zombie ended up on her back, panting for air in frustration, with her wrists bound above her head and her feet tied together. Seeing her laid out and vulnerable below me, I couldn't resist. \n\nI straddled Sally's chest, slippery with the water from her washing, and rested my bottom lightly upon her lower ribcage. Sally snarled, twisted, and tried to kick her legs, but there was nothing she could do. In her right mind, she could have freed herself, but as a zombie she was stuck. \n\nI placed my throbbing cock between the big mounds of Sally's huge breasts. As I pushed her heavy tits together, I realized I had never really played with her nipples before. I rubbed my thumbs over her pink nipples, brushing back and forth against the little nubs as they hardened, and through her gag I could have sworn she let out a little moan. \n\nNot wanting to press my luck, I squeezed Sally's large, smooth mounds together and thrust my cock into the tight tunnel of tit flesh. Her heavy boobs completely surrounded my cock, rubbing against my sensitive head and squeezing my excited shaft. Her skin was very smooth and the water made it just slippery enough for me to slide my eager dick back and forth against her skin. The visual of my hard cock fucking in and out between her big, perky breasts was the best part of the experience. I was fucking Sally's tits, my cock disappearing between her big, firm boobs. I played with her pink nipples with my thumb as I fucked her soft chest, and could feel myself quickly building towards orgasm. \n\nI had already been jerking off, so I didn't last long that first time. I came hard and quickly between Sally's tits, shooting my hot cum deep in the tunnel of her tit flesh and watching a little dribble out onto her neck. The sight of my cum covered cock nestled between Sally's big, round breasts is one I will never forget. ",
        "I spent less than five minutes fucking Sally's tits, and then twenty minutes carefully cleaning her up and getting her untangled, without getting clawed or bitten.\n\nIt wasn't long before my wandering mind, without much to keep it occupied, came up with another terrible idea. In retrospect I know it's hard to defend, both looking at it from Sally's perspective, and the danger I was risking, but I was alone during the apocalypse. I felt like I had lost my whole world already, three days after the tit fucking there seemed no harm in trying. \n\nSally the Zombie was not hard to overpower, though she seemed to have more strength than I remembered from dragging her in off the streets. The ropes around her wrists actually made it harder to bind her arms the way I wanted, especially while trying to avoid her attempts to bite me (through the chew toy in her mouth) and claw me. \n\nAfter a few minutes, I had Sally the Zombie laying on her back with her wrists bound together, stretched tight above her head, and her ankles each bound to a rope tied tightly to the opposite corners of the storage room. I took a minute to admire her shapely form, acres of smooth, pale flesh on display, and decided to do something that was both stupid and risky. \n\nI got some shaving cream and a women's razor from the store, and shaved Sally's legs. I went slowly and carefully, since I wasn't totally sure what I was doing, but judging from the two times Sally growled angrily, I'm guessing I nicked her at least twice. The short, blonde hairs quickly fell away. I also trimmed back the growing bush of blonde hairs around her pussy, being careful to gently fold back and lift her outer pussy lips while I shaved her. \n\nWhen I stepped back to review my work, I was already hard, from touching Sally's pussy and looking at her long, smooth, shapely legs. The light reflected off something between Sally's legs, and when I probed with my fingers, I discovered that Sally was wet down there. This was unexpected, something not covered in any zombie movie I had ever watched. I figured it must be an automatic response to the stimulation, and as if to confirm my thoughts, probing Sally's Pusey caused her to moan softly. \n\nI decided to try something I had fantasized about doing with Sally a thousand times. I knelt at her side, gently cupped one of her full, round breasts with my hand, and leaned down to suck on her nipple. I drew the light pink nipple between my lips and suckled on the top of her teat. Sally arched her back and moaned in response, though her eyes still held their uncaring stare. As I licked wetly and pulled softly on her firm tit, I reached my free hand down and searched again for the hard little bump of her clit. When I found her most sensitive spot, I switched to suckling with my hot mouth on her other full, creamy breast, and started rubbing gently against Sally's sensitive nub. \n\nHer reaction was unmistakable. Sally's bound arms tensed above her head and she arched her back deeply, moaning around the chew toy in her mouth. Her soft pussy was now leaking her juices, and I ran my wet tongue around and around her pink nipple in my hot, wet mouth. Sally the Zombie began panting in a way I had never heard before, and I decided then I wanted to see if I could get a zombie to orgasm. But first, my cock was harder than it had ever felt before, sticking straight out so it was brushing against the smooth, soft skin of Sally's thigh, so I decided to fuck her. \n\nI wrapped my cock in a condom, no telling what nasty things you could catch from having sex with the undead, and positioned myself between Sally's legs. She didn't even look down at me as I pressed the fat head of my throbbing cock against the opening of her dripping wet pussy. The feeling as I pushed hard inside of Sally was incredible. She was so hot inside that the heat on my dick, even through the condom, was almost too much. She was a little tight, the slippery walls of her tunnel gripping me tightly, but she was so wet that I slid in to my hilt easily. As I rocked my hips backwards, withdrawing from her hot pussy, and then thrust myself hard back inside of her, I delighted in the feel of her wet slipperiness sliding back and forth around my thick, eager pole. Sally started moaning again as I fucked her. \n\nI placed my hands on either side of Sally and began pumping my cock into her in earnest. I was so hard, even with the condom, that I had no difficulty driving my long, thick meat into her tight hole over and over again. Sally moaned low and long, arching her back once again and thrusting out her big, round breasts. \n\nWhen I had decided I was going to fuck a zombie, I didn't know what to expect, but I never would have guessed that she would enjoy it. \n\nI had also expected to enjoy sliding my stiff cock in and out of Sally the Zombie's pussy, but the view of fucking her was what really turned me on. She was restrained beneath me, nowhere to go, a hole for my eager dick to use. The fact I could do what I want to this sexy body, go as fast and hard or as slow as I wanted, really turned me on. There was no pressure, only pleasure as my meat slid in and out of her hot, tight pussy. I loved watching her arm and leg muscles strain against her bonds as she moaned and panted beneath me. Most of all, I loved the sight of her round, heavy breasts rolling up and down across her chest as I thrust my manhood inside of her. Her breasts were almost too perfect, big and firm, and I was mesmerized by her pink nipples moving up and down as I fucked hard into her sweet pussy. \n\nI didn't think I was going to be able to cum in the condom, and had planned to pull out and jerk of onto her body. But Sally's moans were driving me wild, and her hot, juicy pussy felt so good. Her tight, slippery pussy walls were stimulating me towards orgasm. And then Sally the Zombie surprised me again, and she came. \n\nHer back arched so deeply that her big, firm breasts pressed upwards against me, she sucked in air around her gag, and her legs shook. She let out a high pitched moan so loud that it made me think of a wolf howling. \n\nMy throbbing cock exploded deep inside Sally's molten hot pussy, dumping spurt after spurt of my hot cum into the tip of my condom. My own body trembled as I came hard, my feet tingling and toes curling and my arms shook. I collapsed gently atop Sally's firm, smooth body, my head resting atop her smooth, round breasts as I caught my breath.\n\nIt took almost twenty minutes to clean myself up, then clean Sally and wash her, then carefully loosen her bonds again so she could move around the storage room once more. There was no doubt in my mind that taking all the time to tie her up beforehand and clean her up afterwards was totally worth fucking her again. \n\nAfter that amazing first experience, I fucked Sally almost every day. Some days I would be too tired to go through all the process of prepping her, after a long day of watching scavengers on the streets or ensuring all our supplies were stored well so they would last longer. I would either jerk off on her face or fuck her tits. But most days, I fucked my zombie companion. \n\nI never got tired of suckling on her little, pink nipples, running my hands over the tops of her big, round boobs, and playing with her teats using my warm, wet mouth. I made her cum twice just from sucking on her sweet nipples while rubbing her clit, her orgasms causing her to thrust her chest harder against my face and filling my mouth with her slippery tit flesh. \n\nMost days it was not enough stimulation to cum in a condom, and I would pull out near the end and jerk myself off onto Sally. I painted her all over with my hot, sticky jizz. I usually covered her face with my spunk, my cock shooting my man juice all over her pretty pink lips and cute little nose so hard that the ricochet spray went all over her face and chest. Sometimes I came all over her big breasts, coating her pink nipples with my hot, white frosting. Sometimes I squeezed her firm tits together and fucked them with my wet pole, cumming hard in the tight tunnel of her smooth tit flesh. \n\nAfter almost two weeks of fucking Sally on her back, I experimented with some new rope configurations, and managed to tie Sally down on all fours. The key was tying her down over a storage barrel I had filled with an emergency supply of water. It took longer than tying Sally down on her back, but it gave me the chance to add some variety to how I fucked her. \n\nI loved gripping her firm, round ass cheeks with my hands, running my palms over her smooth bottom just before spanking her lightly, and then gripping her hips and plowing hard inside of her. I fucked Sally hard across that barrel, driving my cock deep inside of her dripping wet pussy. Sally arched her back deeply and howled again as she came, my hand holding onto her hips and driving my thick meat into her over and over, pushing her hard through her orgasm. Her hot, wet pussy gripped my dick tightly as I plowed in and out of her hole. When I felt close myself, I pulled out, took off the condom, and came all over Sally's pale ass cheeks. \n\nI had no long term plans at that point, I wasn't even sure how much longer Sally would survive. I just tried to keep us both safe in my family's little building, keep Sally well fed and clean, and continue to survive. I couldn't go anywhere with Sally tied up in our storage room, we just had to shelter in the building and stay alive. \n\n Chapter 4: The Stranger\n\nA little over three weeks after I started fucking Sally, everything changed. \n\nI just happened to be upstairs, watching over the street in front of the store and rereading an old book, when I saw a woman come creeping down the street. She had long, brown hair and was dressed as if she was going out for a jog. She had a tight athletic shirt on over a sports bra, accentuating the swell of her large breasts, short jogging shorts, and running shoes. But she was not running today. \n\nIt had been several weeks since I last saw a woman on the street, which was understandable since the rare human I spotted tended to be part of a group of roving scavengers. This woman was moving carefully and quietly, her eyes darting all over the street in front of her as she moved. \n\nWhat put me on full alert, after the woman had crept down the street and out of sight, was seeing two men walking down the street after her. I couldn't tell for sure if they were following the woman, but they seemed to be following something in front of them, one with a bat in his hand and the other with a large knife. \n\nI hesitated for a moment, weighing the implications of my decision. It was impossible to know what could come from getting involved, and I was in no position to take on those two men by myself, but I sprang to my feet and quietly crept down the stairs. \n\nI had barely gotten to the front entrance of the house when I heard a scream, loud yelling, and then another scream that might have been someone calling for help. Quickly I loosened the bolt holding the heavy board over the front entrance, and pushed the board out just enough to reach through and unlock the metal gate over the entrance. I slide the gate back just enough to stick my head through, and spotted the woman running down the street towards our store. \n\nWe were both extremely lucky with the timing. I could tell that her face was full of terror as she sprinted towards me, her eyes wild with fear, but she saw my head pop out and without a word from me she headed towards our door. \n\nThe woman threw herself through the small opening I had made, wiggling her thigh and last leg through the hole. I quickly closed and locked the gate behind her, and retightened the heavy bolt securing the board over the door. I turned to the woman with a finger pressed over my lips, motioning for her to keep quiet. She was sweating now, and I noticed that her brown eyes were gripped by fear. After a moment, I realized my own eyes were probably just as worried. \n\nI heard a muffled voice ask, \"Where the hell did she go?\" and breathed a little easier knowing her pursuers had not spotted her ducking into my store. \n\nA few moments later, another voice called out, \"We just want to talk, honey, make sure you're okay.\"\n\nI gently took the strange woman by the hand and guided her through the store and up the stairs to the second floor. At first she resisted a little, but once we got to the second floor and she saw we were in an apartment, she followed me willingly. \n\nI peaked out the shaded and partially boarded window on the second floor, and the stranger silently joined me. One of the men was pulling on the board and the gate over our entrance, and finding them secure, he moved on to the bookstore next door. After a few minutes, the men had moved down the street and out of sight. \n\n\"My name is Rachel,\" the woman finally said, introducing herself. \n\n\"What were you doing out on the street?\" I asked. \n\nRachel explained that she had been holed up in her apartment with her boyfriend for the last three months, surviving on food they had managed to scavenge from their neighbors for the past four weeks. Two days ago her boyfriend left their building again to look for supplies and never returned. He had never been out of their apartment overnight, so after two nights without him, Rachel decided to go look for him. \n\n\"He said he was going to check the stores in this area for food, you haven't seen him, have you?\" she asked hopefully. \n\n\"Sorry, I only spend part of my day watching over the street, but I haven't seen a person out there for the last few days,\" I explained. \n\n\"I don't know where else to look for him,\" Rachel remarked sadly. \n\n\"Well I wouldn't recommend continuing to poke around out there,\" I responded. \"I've got a decent amount of food here, you can stay with me if you want.\"\n\n\"Are you alone, all by yourself?\" Rachel asked. \n\n\"Sort of,\" I responded. \"Basically.\"\n\nRachel nodding, thinking she understood. \n\nRachel was really hungry, so I made her eggs and bacon with some of the last of my fresh supplies, explaining I was trying to eat my way through the perishable food first. \n\n\"I haven't had eggs in weeks,\" she responded. \n\nAs she wolfed down the food I had prepared, Rachel explained that she was a nurse. During the initial outbreak, she was moved to the emergency room to try to help to treat the incoming cases of people at first described as \"going crazy.\" It took a few of her colleagues getting bitten, over a few days, and then coming down with the illness to understand this was something different. Rabies were suspected for a while, but new cases kept showing up, more and more poor souls out of their minds and requiring restraints. Police officers, the families of those first effected, and then ambulance crews kept getting sick. The staff was using the \"Z\" word long before public officials started using it. \n\nOne of Rachel's bosses told her to go home and rest for 24 hours, otherwise she would have probably been in the hospital when several patients escaped their confinement and the outbreak overwhelmed the building. She and her boyfriend hid in their apartment, a heavy dresser pushed up against the front door, listening to some of their neighbors lose their minds, until their own supplies ran out. Then her boyfriend started scavenging around their building and neighborhood for food. \n\nAs she talked, I couldn't help studying the only person I had spoken to in months. She seemed genuine, and forthright, telling her story openly and directly, without any obvious evasion. She also seemed nice, and a little shy. I was quick to notice that she was pretty, and seemed fit, like she ran or did yoga a lot. She was a little shorter, around 5'5\", with big breasts that only seemed average because they were much smaller than Sally's, I would guess a small C cup. \n\n\"So how long you been here by yourself?\" Rachel asked. \n\nI explained about my parents going away, as we cleaned up from the meal and Rachel helped me wash the dishes. I told her I had been alone since back before the tv stopped working, but added that I had something to show her, and guided her downstairs to the store's dry storage room. \n\nWhen I slowly opened the door, Rachel exclaimed, \"holy shit!\" in surprise. \"Who is this?\"\n\n\"A classmate of mine from high school,\" I explained. \"I saw her shuffling along in front of the store about two months ago now, and I grabbed her.\"\n\n\"Why is she naked?\" Rachel asked. \n\n\"It's easier than dressing her,\" I replied. Sally hissed through her gag, straining towards us as if to emphasize the point. \n\n\"Fair enough,\" Rachel responded. After a moment, she added, \"You haven't been... fooling around with her, have you?\" \n\nI sighed. \"I've been alone here for months with no internet, tv, or even radio. I've been very careful.\"\n\nRachel looked at me and then looked at Sally the Zombie. \"Something is wrong with her,\" Rachel said. \n\n\"Yeah, no shit. She's a zombie,\" I quipped. \n\n\"No, I mean...\" Rachel said, hesitating before she continued. \"She looks too good. You've been feeding her and giving her water, and cleaning her?\" \n\n\"Yeah, so what?\"\n\n\"Have you seen a lot of the zombies out there?\" Rachel asked. \n\n\"I've seen several from the window upstairs,\" I replied, unsure where she was going with this. \n\n\"You said your friend has been like this for months,\" Rachel explained. \"I've seen someone turn into a zombie and fall apart within a week. Their skin starts to fall off, they get nicked up and bleed all over the place. Their hair falls out and they lose limbs. It's not like in the movies, if you wound them too badly they eventually bleed out. They lose a leg and most of the time they just stop moving. You don't have to shoot them in the head to kill them, sometimes they just fall to pieces. Other than your friend's eyes and face, she looks normal, like she was infected yesterday. Something is off, maybe it happens but I've never seen a person be a zombie for weeks and look so good.\"\n\n\"So what are you saying?\" I asked. \n\nThe answer, apparently, was to stop fucking Sally. Rachel seemed equally disappointed and disgusted with what I had been doing with Sally, and impressed that I had been cooking meals for a zombie and feeding her regularly. At first, Rachel suggested moving Sally to a bedroom upstairs, but I insisted that was impractical and likely impossible. So Rachel set up a makeshift rubber mattress on the floor of the store room, had me tie Sally in a laying position, and we covered her with blankets. \n\nOver the next few days we fed Sally and gave her water, Rachel set up a bed pan and we worked together to keep her clean. Rachel helped me out around the house, both of us keeping an eye on the street for threats and for her boyfriend. Rachel helped with the meals. But Rachel also spent most of her time watching over Sally. \n\nAfter two days of Rachel sitting with Sally for hours, there was no noticeable change. The young blonde tried to bite Rachel every chance she got. I was almost certain that Rachel just missed being a nurse, or was desperate to try to help someone, and she was making a stupid mistake. Sally had been a zombie for months, why would blankets and water help her?\n\nBut then Sally got a high fever. The drugstore thermometer we had said her temperature was hovering just below 103 degrees. She trembled a lot, like she was shivering, and for the first time I could remember she seemed to fall into a kind of sleep. It was extremely odd being in a room with Sally the Zombie without her constantly trying to bite me. In response, Rachel covered Sally with heavy blankets and fed her more water. \n\nSally's skin started pouring sweat, like she was a bag full of water and all the liquid inside was leaking out. We both recognized something was happening, and I started helping Rachel. While Sally slept fitfully in her restraints, I carefully and gently cleaned the pooling sweat from her skin with a damp towel. ",
        "It was a little vexing, going from fucking this hot blonde every day to jerking off to old copies of dirty magazines. And now I was wiping away the sweat from her smooth, pale skin and cleaning the large swells of her breasts. But I also knew that if Rachel somehow turned Sally back into her old self, gently cleaning her skin might just be the start of a much greater penance that I owed my former classmate. \n\nSometime on the second day of that high fever, I was giving Sally a gentle sponge bath with hot water, when I looked over my shoulder and found Rachel watching me. \n\n\"You keeping an eye on me?\" I asked. \n\n\"A little bit, yeah,\" Rachel admitted. \"No offense but you had been using Sally as a toy just a few days ago. I'm not judging what you did, at least not yet, but you can't keep doing that. Something is happening with her.\"\n\n\"I know that,\" I responded with a mix of irritation and shame. \"I stopped. I'll help you take good care of her.\"\n\n\"I know,\" Rachel responded gently, trying to avoid a confrontation. \"In a way, we may both owe you our lives.\"\n\nWanting to change the subject, I asked, \"So what's happening to her? What did you do to her?\" \n\n\"I'm not completely sure,\" Rachel admitted. \"Rest and a lot of fluids usually go a long way to helping a body recover from illness, but this is something different. I gave her a lot of water, more than you had been feeding her I suspect. That first day I tried some doses of aspirin and ibuprofen, and not much changed. I think this had something to do with the Benadryl, antihistamine, that I gave her the third day.\"\n\n\"You think the Zombie Virus can be cured with allergy medicine?\" I asked skeptically. \n\n\"Well, what is a 'Zombie Virus?'\" Rachel asked in response. \"I worry that everyone has seen zombie movies, and so when people started acting like this, and it started spreading, most people assumed it was just like the movies. But I don't think this is voodoo magic, or the End of Days. I fear there is a scientific explanation and we're too used to pop culture to have reacted the right way.\"\n\n\"Look at the things we already know are wrong for this being a zombie outbreak from a movie,\" Rachel continued as I wiped the damp sponge over Sally's strong, bare thighs. \"You can kill people who get whatever this is without having to shoot them in the head, I've seen it. If you even seriously wound one of them, they eventually bleed out and stop moving, they can die just from wounds. And they don't just want to eat your brains, they're insatiable for anything edible, Sally here even eats the vegetables you feed her. And all the zombie movies I've seen depict them as strong and relentless. You said Sally seemed much weaker than you expected, and I've seen that elsewhere too. I've seen one of these poor souls bang against a thin window pane for hours without breaking through.\"\n\n\"I don't know what this is,\" Rachel continued, \"But I think it's a highly contagious virus or parasite of some sort that effects people's brains. And if it's not magic and has a cause, then maybe we can cure a person of it. Maybe not enough people got a chance to try curing this when this thing first started.\" \n\nWe kept up our routine with Sally for days. Rachel thought the fever might be a good thing, the body finally fighting back hard against the illness. Rachel kept giving Sally medicine from the store, feeding her and making her drink fluids, and I kept helping with the cleaning and cooking. \n\nFour days into Sally's high fever, and I was in my room with the door locked, looking at porn I had saved on my computer. I had recently finished another session of bathing shapely Sally, and needed some relief from my arousal after getting extremely horny from wiping down her curvy, naked body. \n\nI was just starting to get close to orgasm when there was a loud knock on my door, followed by Rachel's voice asking, \"Connor, are you busy?\"\n\n\"Um, yeah,\" I yelled back, slightly irritated. \"Can you give me a few minutes or is this an emergency?\"\n\n\"It's kind of urgent,\" Rachel responded, \"Something with Sally, I need your help.\"\n\n\"Just give me a few minutes and I'll be out,\" I tried, my hand still wrapped around my hard cock. \n\n\"Are you masturbating in there?\" Rachel asked. \n\n\"What?!\" I yelled in response. \"Why would you ask me that?\"\n\n\"Well you just gave Sally a bath and what else would you be doing in there with the door locked?\"\n\n\"God, Rachel...\"\n\n\"Any chance you could hit pause and come help me for a few minutes?\"\n\n\"Hit pause?!!\"\n\n\"Okay, open the door. Please. Just open the door.\"\n\nNow really irritated and decently frustrated, I got up and opened my door just a crack. \n\nRachel was careful to not try to peep in as she asked, \"How close are you to finishing? I could really use your help right now.\"\n\n\"I was getting close but I need a few minutes,\" I responded exasperated. \n\n\"Can I help?\" Rachel asked, a touch of contrived innocence in her voice. \n\n\"WHAT?!\" was all I managed in response. \n\n\"You've been sweet, and it must be hard for you to bathe Sally and not get to mess around, no pun intended, I understand. So I help you cum real quick and then you help me with Sally?\" Rachel shot out quickly, the words coming from her in rapid fire. \n\n\"Are you serious?\" I asked \n\nRachel responded by pushing on the door, and I let her. Her eyes quickly sized up my hand, covered in lotion, gripping the base of my rigid pole. \n\n\"Nice dick,\" Rachel replied to my question. \"You think a handjob from me would help speed things along?\" \n\n\"Rachel, this is too weird...\" I began. \n\n\"Fine,\" Rachel responded, sounding somewhere between exasperated and miffed. \"But I need your help now. So either finish up in the next minute or stuff that back in your pants and come downstairs with me.\"\n\nI stood there for a heartbeat, Rachel pointedly staring into my eyes instead of at my exposed erection. I sighed heavily and stuffed my hard cock back into my pants. \n\nAny concern Rachel may have been faking an emergency quickly dissipated when she ran down the stairs, forcing me to run to catch up with her. When we got to the storeroom, we found Sally laying on the wet floor, covered in some sort of black and greenish liquid. \n\n\"We've got to get her cleaned up,\" Rachel instructed. \n\nAs I went for the hose I asked, \"What is this? Is this contagious?\"\n\n\"I don't know, but it doesn't look good,\" Rachel replied. \"Some of it looks like old, coagulated blood.\"\n\n\"Is it coming out of her mouth or...\"\n\n\"Looks like both, unfortunately,\" Rachel responded with a grimace. \n\nNot wanting to get any of the gross looking goop on us, it took almost ten minutes to clean it off Sally. We hosed as much as we could off of her before wiping her clean with rags. After getting interrupted while jerking off, it was difficult not to linger as I wiped the wet cloth rag over Sally's big, heavy breasts. But Rachel was making it very clear that she was keeping a careful eye on me, so I finished wiping Sally's light pink nipples and moved on to her neck and cheeks. \n\nI was dabbing at Sally's lips when her eyes fluttered open. I was about to jump backwards to avoid the snapping teeth I knew would follow, when I noticed that the dead look in her eyes was gone. They were hazy, a cloudy version of her old sparkling blue. \n\n\"Connor?\" Sally asked weakly through the gag in her mouth. \n\nI still can't explain why I did it, but after a brief moment of stunned silence, I burst into tears. I sobbed heavily and I cradled Sally's Head against my chest. \n\n Chapter 5: A New Mission\n\nIt was another three days before Sally was strong and coherent enough again to stand, and then another few days of Rachel helping Sally to walk before she could move around on her own. \n\nRachel and I agreed early on that she would take over most of the caring for Sally. Sally was taller and much more shapely than my mom, but Rachel found her some loose clothes that kind of fit. We also agreed that Rachel could tell Sally everything that had happened. Sally moved out of the storage room and into my parent's bedroom with Rachel. \n\nI was putting together some dinner for the three of us when Sally walked into the kitchen. It was the first time we were alone, and I stood over the stove unsure what to do. \n\n\"Hey Connor,\" Sally said quietly. \n\n\"Hey Sally,\" I responded. \n\n\"Can I ask you something?\" she began without looking at me. \n\n\"Sure, anything,\" I replied tentatively. \n\n\"I mean.... I'm super grateful no matter what,\" the buxom blonde said hesitantly, finally looking up at me. \"I would be dead or who knows what if you hadn't grabbed me. But... I'm kind of wondering why you did it. Like, why take the risk? Is it because you were... planning to do things with me, or did you like me or something?\"\n\nI sighed and responded quickly, \"Look, first of all, I had no intentions of... doing the stuff I ended up doing with you. I had no idea that was even possible. Honestly, I'm not totally sure why I decided to grab you off the street, it was a split second decision. I was alone and scared and a little bored, and I recognized you and you didn't look like you were in bad shape, so I grabbed you. I had no plans other than taking care of you a little and studying what happened to see what I could learn about... you know... zombies.\"\n\nShe smiled, a bright smile that lit up her face, and said, \"Well I guess you learned a lot.\"\n\nReturning her smile, I offered, \"I guess I did.\"\n\nWe stood there for a few moments in a somewhat awkward but comfortable silence. I could tell Sally was digesting what I had said. \n\nI broke the silence with, \"Can I ask you something?\"\n\n\"Sure,\" Sally responded, smiling slightly again. \n\n\"How much do you remember?\" I asked. \n\nShe thought carefully for a second before responding, \"I don't remember you grabbing me. I don't remember much. It's like, when I've had a really bad fever before, I wake up when I'm better and I remember flashes of things, but it's hard to tell if it's even really memories or something I dreamed. It's a lot like that now.\"\n\nSally continued slowly, \"I remember stumbling around outside, being just desperately hungry. Ravenously hungry. Rachel says that's interesting. I remember you hosing me down more than once, and the water feeling very cold but the clean feeling very good afterwards. I remember you feeding me some cooked ground beef, and how delicious the saltiness of the meat felt in my mouth.\" Her blue eyes looked directly into mine as she went on. \"I have a memory of you pushing my breasts together, and rubbing your hard cock back and forth between them until your hot cum sprayed all over my chest. I remember how hot your cum felt. And I remember cumming at least twice, really hard, while you fucked me I remember the orgasm feeling so strong that it felt like my mind was melting, that my whole body was on fire. And I remember being so frustrated that I couldn't bite you.\"\n\nMy heart was racing by the time Sally finished, she was standing maybe a foot in front of me, studying my reaction. And then she turned and walked out of the kitchen. \n\nThere was a lot of awkwardness in the house after Sally and I first talked. We barely spoke to each other after that, and never alone, though we always smiled at each other and both acted very friendly. There was just something big between us that we couldn't get past. \n\nIt was also not easy being cooped up in the house with two very attractive women, the 18 year old busty Sally and the pretty and petite Rachel. I had to find a way to sneak off and jerk off at least once a day, usually at night before bed, though I was terrified of Rachel walking in on me again after she busted in on me that first time. \n\nThe routine of keeping an eye out for danger, organizing our supplies, and making sure the house was secure was helpful in keeping us distracted. We saw more and more scavengers in the streets, usually groups of three or four, and looking more and more desperate. They had a hungry, mean look about them, quick to kill any of the walking zombies they stumbled past. One even drove a truck with a snarling, angry zombie tied to the hood. \n\nOne group showed up and made an effort to get through the iron gate over our storefront. The ladies and I banged on the wooden boards over the windows, howling and moaning as if there were a horde of zombies inside. The scavengers abandoned their efforts and no one else tried that again. \n\nMaybe two weeks after Sally's recovery, Rachel asked that we have a house meeting during lunch. While we ate, she said, \"I think we need to take another zombie off the street and see if we can duplicate what we did with Sally. There are people out there, stumbling around the streets, and we might be able to help them. I can't do it without Connor, so I'm asking what you guys think.\"\n\n\"Well it's really dangerous,\" I offered, \"So we'd have to be really careful.\"\n\n\"But you're saying you think we could try it?\" Rachel asked. \n\n\"Sally was weak but she still almost got me a few times,\" I explained. \"We'd have to be very careful about who we choose, make sure it's someone we can handle, and make sure no one else sees us out on the street.\"\n\nRachel looked thoughtful, and Sally chimed in with, \"I think I would be dead right now if Connor hadn't taken me off the street. So I say we should help more people if we can, and I'll help however I can.\"\n\nWe talked more, made some preparations, and then lay in wait watching the street. The first few zombies that passed were a mess, skin hanging off in places, missing ears, some even missing a limb. It wasn't until day two that we spotted a possible target, an older woman with gray hair shuffling down the street. \n\nOur target proved easy to snatch, and not too difficult to get cleaned. But after two days of care, she died. She was too weak, and feeding her never seemed to improve her strength. Rachel was devastated, sobbing at first and then crying for hours afterwards. Sally seemed horrified by the whole experience, especially trying to keep from getting bitten while shredding the woman's clothes and trying to clean the mud and grime off of her. \n\nMy roommates requested we burry the woman behind the building, which seemed dangerous if not impossible. In the end we covered her with bricks and other loose material, which was much quicker. We seriously debated whether to even try again. \n\nThree days later Sally was watching the street and spotted a young woman bumping into walls as she walked. She was in such relatively good shape that Sally wasn't even sure at first if she was a zombie. She was rail thin, very fair skin with wispy blonde hair and light blue eyes. \n\nSnatching her off the street took longer than we wanted, she was on the opposite side when I grabbed her and put up a fight pulling her through our doorway. Cleaning her up took over an hour, we had to restrain her tightly and she would not stop trying to bite us. I couldn't help myself from noticing that her B cup breasts seemed fuller and larger than they initially appeared from under her worn T-shirt, and her nipples were so pale they almost blended with her skin. She would have had a very pretty face, delicate with high cheek bones where Sally and Rachel both had round faces, except her constantly snapping teeth and dead eyes filled me with more fear than arousal. \n\nSally remarked that she recognized the young woman, she was three or four years ahead of us at our high school. Once she was cleaned, I fed our new captive some grilled chicken. She inhaled her food, but shortly after defecated all over the floor and her legs, requiring another round of cleaning. \n\nI was in the bathroom in my bedroom, showering after the clean up, when there was a knock at the door. \"Yes?\" I called over the sound of the falling water. \n\nTo my great surprise, Sally walked into the bathroom and closed the door behind her. \"Sally!\" I yelled, \"I'm taking a shower! I'm naked in here.\"\n\n\"I've seen you naked before,\" she responded, \"in a lot more compromising of a position than this one.\"\n\n\"What do you need?\" I asked. \"Is something wrong?\"\n\n\"I have another question,\" she began. I was almost done and turned off the water so I could hear her better, but I stayed turned away from her to hide my private parts. \"You did all that for me, didn't you?\"\n\n\"What do you mean?\" I asked. \n\n\"You hauled me off the street, you cleaned me up. And you didn't even have Rachel with you, you were alone,\" Sally said softly. \"You fed me for weeks, and cleaned me up when.. I messed the floor like she just did. You kept me clean and fed and alive by yourself for weeks.\"\n\n\"Yeah,\" I replied, still not totally sure where she was going with this. \n\nSally pulled open the shower curtain, placed a hand lightly on my dripping wet chest, leaned forward, and kissed me. I had never kissed her before, far too dangerous when she was a zombie. After an initial moment of surprise, I closed my eyes and soaked in the feeling of her lips pressed against mine, soft and sweet. I realized she had never done anything to me before, she had always been passive, but she pressed her lips firmly against mine for a moment before pulling back. \n\n\"Thank you,\" she said very quietly, her blue eyes searching mine. \n\nIf I had thought logically about what was happening, events would have gone in a completely different direction. I would have overthought things, or hesitated. But caught completely off guard in the moment, my reaction was to place my hand softly against Sally's soft cheek and pull her in for another kiss. \n\nOur first kiss had been soft and sweet. Our second kiss was full of passion and eagerness. My tongue pressed against her lips, and when her lips parted, I drove hard into her warm mouth. Our tongues swirled wetly as our lips pressed firmly against each other. Sally's hand on my chest slid around to my back, and as her tongue pressed into my mouth she pulled me closer. \n\nTurning towards Sally, and drawing her towards me, my exposed erection bumped into her stomach. Sally looked down at my thick, rock hard cock, looked up at me with a smile, and dropped to her knees. \n\nIn one smooth motion, Sally wrapped her hands around the base of my hard member and swallowed my engorged tip. As she swirled her tongue around the fat head of my dick, I moaned loudly in arousal. Sally had never done anything to me before, I had only done things to her, and it blew my mind that she would give me a blowjob. Sally's head began bobbing up and down on my pole, her blonde hair swinging back and forth behind her as her hot, sucking mouth slid up and down the sensitive skin of my erect pole. Sally paused to swirl her tongue around my tip again, and I thought about how many times I had fantasized about this happening, and how it felt so much better than I had ever imagined. \n\nI was already turned on from cleaning our newest house guest, and was basically always horny being in this house with two attractive women. My balls were already tingling from Sally's sucking cheeks sliding over my throbbing cock, and watching her blonde head eagerly gobbling up my pole. \n\n\"Oh Sally, this feels amazing,\" I tried to warn. \"I'm going to cum.\"\n\nThe buxom blonde responded by pulling on my cock with her hand, gripping me tightly as her soft fingers joined her slippery mouth moving up and down my pole. The sensation overwhelmed me, Sally's hot, wet mouth sucking on my sensitive skin while her hand worked to milk me along with her soft lips. Her blonde hair bobbed, back and forth, tickling my thighs, and when her tongue swirled over the fat head of my dick again, I lost it. \n\nIt was all I could manage to stay standing as I came hard into Sally's eager, sucking mouth. My orgasm blasted up from my toes, shooting through my trembling legs, and set fire to my groin before bursting out of my cock in spurt after spurt of hot cum. Sally happily swallowed my heavy load and shot after shot of cum erupted between her smiling lips. ",
        "When Sally was done swallowing, suckling softly with her wet mouth, I was still tingling as she stood and smiled at me. She may have been done but I wasn't. \n\nI pulled her shirt over her head, and once she understood what I was doing, she helped shrug herself free of her top and shed her bra. Sally drew her shoulders back so her big, full breasts were on display before me. I dove straight in with my mouth, clamping gently onto one of her smallish pink nipples. Sally gasped as my hot mouth and wet tongue made contact with her sensitive skin. She placed her hands behind my head and drew me more firmly against her bosom, as my wet tongue slathered back and forth over her sensitive nipple. I suckled on the tip of her teat, causing her to arch her back and push more of her smooth, slippery tit flesh into my mouth. My left hand went to her free tit, running my thumb lightly over the tip and then palming her big boob gently. I marveled at the firm, substantial weight of her big breast, hefting it with my hand. \n\nSally moaned deeply as I switched to licking and sucking her other nipple. My tongue slathered wetly all over the smooth, pale skin of her breast. Then the next few moments were a blur, me half pushing and half guiding Sally towards my bed. She went willingly, and I was still dripping water as we fell into my sheets. \n\nSally had expected more kissing, but instead I kissed my way down her flat stomach. As my tongue trailed between her legs, she briefly protested, but her protests turned into a soft moan when I began licking at the outer folds of her eager pussy. I explored her womanhood with the probing tip of my tongue, lifting and licking her pussy lips. She had a lightly musky taste, and I could tell from her leaking juices that she was extremely aroused. \n\nSally's moans became loud and long when my mouth covered the top off her pussy and my tongue playfully probed the edges of her clit. As my tongue circled the outer edges of her most sensitive spot, Sally arched her back deeply and then moaned again when I began brushing directly over the tip of her excited little nub. I began alternating between suckling on Sally's little clit with my hot mouth and lips and flicking my tongue rapidly right over her most sensitive spot. Sally was moaning in earnest now, her head tossing back and forth as I suckled her clit and toyed with her button with my wet tongue. \n\nI could feel Sally's shapely thighs tensing around my head and slathered more wetly and firmly against her hard clit. I slipped two fingers into her hot, dripping wet pussy, and had barely begun finger fucking her tight hole when she came on my tongue, squealing her ecstasy, her firm body trembling as I steadily lapped at her clit.\n\nAs she regained her breath, I moved up to lay on the sheets next to Sally, surprised to find myself firmly erect once again, but content to admire the flushed cheeks and satisfied expression on my buxom, blonde companion. \n\nMy erection brushed against Sally's hip, and her blue eyes slowly fluttered open. \"You're hard again,\" she said, admiring my swollen member. \n\n\"Yes, and very happy to be here with you,\" I responded. \n\n\"I want you to fuck me,\" Sally said matter-of-factly. \n\n\"You sure?\" I asked skeptically. \n\nShe smiled and spread her legs wider in response. I didn't need any more encouragement. As I settled myself between Sally's shapely legs, I couldn't help but admire the amazing sight beneath me. Her fair, round cheeks were slightly flushed with arousal, her blue eyes sparkling with a hint of satisfied lethargy. She was still breathing rapidly from her orgasm, her smooth, pale stomach rising and falling with her breathing. She wrapped her creamy, shapely thighs around me as my hips settled atop hers. And of course her gorgeous breasts. They were big, round, firm, with little light pink nipples resting atop them, like huge dollops of cream deposited atop her chest and capped with cherries. I had cum before just from admiring those breasts. \n\nMy cock was rock hard, and as I pressed my fat cock head against Sally's wet outer folds, I realized I had never before fucked her without a condom. She made no move to stop me as I slowly thrust my hips forward, driving my hard on into her wet pussy. Sally's sex was tight, but so sopping wet that my thick dick slid inside her easily. She was so hot and tight and wet, I relished every inch of her slippery pussy walls as I fed my cock into her young body. \n\nI was so turned on, I quickly went to fucking her, bucking my hips and sliding my cock into her pussy to the hilt in long, quick motions. Sally responded by arching her back, thrusting her breasts towards me. I couldn't stop myself from leaning down and sucking on one of her little, pink nipples as I fucked her, slathering her teat with my wet tongue while I drove my cock home inside of her over and over and over again. \n\nI realized with surprise that I wasn't going to last long, even though I had already cum. Sally's tight, wet pussy was gripping my hard dick in the best way possible, milking my excited pole. And just as stimulating was the sight of Sally's nubile body beneath me, her pretty, sweaty face smiling up at me, her big boobs swinging back and forth on her chest from the force of my fucking, her blue eyes alive with happiness. \n\n\"I'm going to cum,\" I warned Sally, expecting her to be disappointed. \n\n\"Ooh, yes,\" she responded with encouragement. \"Try not to cum in my pussy, where else do you want to cum?\"\n\nI was still thrusting my thick cock in and out of her tight hole, so only had a moment to think as I felt the delicious orgasm approaching. \n\n\"Can I fuck your tits?\" I asked \n\n\"Of course,\" Sally replied with a bright smile, her blue eyes twinkling, \"Fuck my tits and cum between them.\" \n\nI pulled out and was thrilled when Sally lay flat on her back and pushed her tits together from the side. Just seeing the beautiful blonde submit willingly to my desires sent a tingle throughout my body. I spit on my cock, adding my saliva to her pussy juices, straddled her stomach, and then pressed my cock into the tunnel between Sally's tits. The feeling was incredible, Sally's smooth tit flesh pressing all around my cock, the sensitive skin of my dick rubbing against the warm skin of her firm breasts. Sally squeezed her boobs together, and her breasts gripped my meat more tightly as I slid my cock in and out between her melons. The visual of my hard meat disappearing between her big, round mounds was just as stimulating. \n\n\"I'm going to cum,\" I warned again. \n\n\"Yes, give me that cum,\" Sally begged. \n\nJust then the door to my bedroom opened, and Rachel shouldered her way into the room again. \"Connor, are you jerking off in here again?\" Rachel asked. \n\nI was too close to stop. One more thrust and I came hard, a short, sharp, and undeniably intense orgasm racked my body. I was looked straight into Rachel's brown eyes as I came, my hard cock shooting spurt after spurt of hot cum into the tunnel of Sally's tit flesh while I watched confusion and then interest flash across Rachel's pretty face. Sally just froze, not moving a muscle as my cock came between her tits, my white cum oozing our over the tops of her breasts and pooling in the hollow of her neck. \n\n\"Oh, sorry,\" Rachel said hurriedly before slipping back out the door. \n\n\"Why doesn't she ever knock?\" I asked, and Sally laughed. \n\nI helped Sally clean up in my shower, and as she put her clothes back on, I asked, \"So how did I deserve this?\"\n\nSally gave me a very serious look, her deep blue eyes studying mine, and she responded, \"You did a really good thing for me, and you still are.\" She leaned forward and kissed me lightly on the cheek, as she finished, \"And I can't stop thinking about all those great orgasms you gave me when I was sick.\"\n\n Chapter 6: Searching for Help\n\nThe next day, it was clear that our newest guest was getting better. Rachel was feeding her steady doses of Benadryl and lots of water. The new zombie girl had closed her eyes and fallen asleep, and though she still sometimes snapped at us she was becoming more peaceful. \n\nI was in the storeroom with Rachel, helping to clean the young woman. She was laying on a tarp atop some cushioning, restrained spread eagle on the floor. Rachel and I had cleaned up the last mess she made, pissing all over herself, and I had shifted to carefully washing the woman's skin with a wet sponge while Rachel cradled her head carefully feeding her some energy drink. \n\nWhen I started washing the blonde woman's young breasts with the sponge, Rachel started watching me more carefully. \n\n\"Why don't you trust me?\" I asked Rachel pointedly, the irritation evident in my voice. Rachel looked up and saw that I had seen her watching me. \"I know I fooled around with Sally, but that was before I knew she could get better. I haven't done anything since I learned someone could recover from whatever this is.\"\n\n\"I know,\" Rachel responded. She said nothing more for several moments, just sat there in silence carefully not looking at me, before she continued. \"It's just that you had a woman tied up in your storeroom and were... getting off on her. It's hard for me to get past that.\"\n\n\"I didn't know she was still in there, mentally,\" I said heatedly. \"If you don't trust me, don't ask me to help keep this new girl clean, you and Sally can do it.\"\n\n\"I get that,\" Rachel started. \n\nBut I was upset and cut her off. \"If anyone should be worried, it's me,\" I continued. \"This is my house I let you in, stranger, and you can't seem to stop busting into my room without knocking first.\"\n\n\"I know, I'm sorry about that,\" Rachel admitted. \n\n\"Why do you keep doing it?\" I demanded. \"You think I'm some kind of sex fiend or something?\"\n\n\"No,\" Rachel responded. After another long pause she continued, \"It's just... we're two, less powerful women in here with you. From the little of what I've seen on the outside, it's nasty and dangerous out there. With what you did with Sally.... it's just hard to be totally trusting. You could overpower us and do whatever you wanted if you wanted.\"\n\n\"Well I trusted you enough to bring you in here, a stranger off the streets,\" I retorted. \"And now I'm trusting that you know how best to deal with these poor, sick people and whatever is happening to them. You say restrain her and keep her clean and I'm doing it. If you still don't trust me enough to trust I won't abuse her while I'm cleaning her, then don't ask.\"\n\n\"You're right,\" Rachel replied. \"I'm sorry. I'm trying, I really am.\"\n\nAfter a minute I said, \"It's okay. Thanks for apologizing.\"\n\nWe continued what we were doing, and when I started putting away the sponge and other bathing supplies, Rachel spoke up to say, \"Can I ask you something?\"\n\n\"Sure,\" I replied. \n\n\"Don't you get really turned on wiping down a naked girl like this? She seems attractive, doesn't running your hands all over her body make you horny?\" Rachel asked. \n\n\"Of course,\" I admitted, \"But if I get turned on I just go take care of it quietly in the room.\"\n\nRachel nodded with understanding and said, \"I guessed that's what you did, which is why I offered to help if you wanted. I thought it was a little unfair to ask you to do this and then you have to go deal with it by yourself.\"\n\n\"Haven't you gotten yourself off since you got here?\" I asked. \n\nRachel hesitated before saying, \"We'll yes, once or twice. But I feel kind of guilty about it.\"\n\n\"Why?\" I asked. \n\n\"My boyfriend is out there somewhere, and I'm in here pleasuring myself,\" she replied. \n\n\"Well I think it's totally natural, just something you have to do and it makes you feel better,\" I offered. \"And if you ever need help, just let me know.\"\n\nTwo days later, our newest guest was weak and woozy, but back in control of herself and talking to us. Her name was Bridgett, and she was a 21 year old college student. When the outbreak started, she and her roommate decided to shelter in their apartment. But after their school closed and supplies started to run low, they changed their minds and started planning to run for Bridgett's parents house. Bridgett remembered preparing all the supplies they could find in their apartment that might be useful for the journey, but she remembered nothing after that. She had no idea what happened to her roommate, how she had made it back to her hometown, and only snippets of her time as a zombie, stumbling outdoors feeling ravenously hungry and freezing cold at night. \n\nBridgett quickly settled into the routine of our house, watching the street, cleaning the house, and preparing meals. I should have anticipated that she and Sally would become fast friends, having survived similar horrible experiences. I would often find them talking quietly together, both would stop and look at me and smile when I entered the room, but they wouldn't start talking again until I left. \n\nAt dinner, three days after Bridgett came out of her illness, she and Sally announced they had something important to say while we were all eating dinner. \n\n\"We have to do something more to help the zombies out there,\" Bridgett started emphatically. \n\n\"There's so many people stumbling around and it doesn't seem like the rest of the people who are okay know that the zombies can be saved,\" Sally chimed in. \n\n\"And we don't know what's going on away from this block. We don't know if other people know this isn't like a zombie movie. The zombies aren't monsters, they're just sick and they need our help. We can't just keep hiding here knowing what we know.\" Bridgett added. \n\n\"So what do you propose?\" I asked. \n\n\"Sally and I will go look for help,\" Bridgett stated as if it had already been decided. \"We'll try to see if there's a police station or hospital out there that can help us.\" \n\n\"It can't be you two,\" I responded. \"Too dangerous. Evil people might be looking for two young women out alone on the street.\"\n\n\"And we don't know what happened to you two that got you sick in the first place,\" Rachel added. \n\n\"We'll prepare tomorrow and then I'll go out the day after that and see what I can find,\" I suggested. \n\n\"I'll go with you,\" Rachel added. \n\n\"No, too dangerous,\" I tried. \n\n\"Much safer to have someone to watch your back,\" Rachel stated, \"And if something happened to you we would have no idea if you were out there alone.\"\n\nWe debated and argued for the next thirty minutes, but the plan had been laid out in that initial discussion. We decided Rachel and I would go to try to find help, and at least spread the word that the people who had turned into zombies could be saved. \n\nI had no idea what to expect when we left my house. Rachel had worn baggy clothes and a baseball cap to hide from a distance that she was a woman. There were more zombies on the streets than I had feared, and each made a bee line towards us when they spotted us. But they moved rather slowly, and there weren't so much that we couldn't dart around them as needed. It was easier to walk around, if we were careful, than I had expected. We started creeping along the walls of building to avoid being spotted, but quickly realized it was safer to walk down the middle of the street, where it was easier to spot a zombie coming towards you. \n\nWe headed for a fire station near our house, and then an urgent care. Both were overrun, empty shells, windows broken and zombies shuffling in and out. They made me realize the combination of the metal gate and wooden boards had saved my family's store, the zombies couldn't get through the gate to break the windows, and with the boards hiding the inside they weren't drawn to the store. \n\nAfter the urgent care, the next nearest building was a police station several blocks away. I was relieved to spot it guarded by two armed men wearing badges, and Rachel and I headed towards the structure. Although we were quickly welcomed inside, the police station turned out to be a scene from some particularly grim horror movie. \n\nTwo men introduced themselves as in charge, I think one of them was named Officer White or something like that. I think his first name was Tyler. It turned out only three of the twenty men taking shelter at the fortified police station had been cops there. The rest referred to themselves as a militia, I think their name was something cheesy like Neighborhood Avengers or something. \n\nThe men peppered us with questions, whether we had supplies, where we were located, and how we had managed to survive this long. They were sheltering four other people they called \"civilians,\" an elderly couple, a girl of about six, and a young man in his early twenties. Only the elderly couple was related. But those were far from the only people in the station. \n\nWe were shown a back area that had previously been used as a jail, with four cells. In one cell was an older male zombie, totally falling apart. Her was missing an eye, and one of his legs had been broken at some point so he hobbled around in an awkward shuffle that was painful to watch. The second cell had a young, busty woman tied spread eagle on the floor. I had a painful flashback to how I had restrained Sally, painful because I now knew she had been alive inside that snapping shell of a body, and this woman was alive too. The woman would have been pretty when she was alive, with long red hair, green eyes, and a sexy, shapely body. It was clear from the red marks between her large breasts and puffy pussy lips that the men were using her body for their pleasure. That though caused me another deep pang of regret. \n\nIn cell three were two women bound to opposite sides of the cell, arms tied sticking straight out from their sides, feet spread wide apart. One woman was an older blonde lady, maybe in her forties, with heavy, sagging breasts. The other was maybe in her twenties, slim with small tits. The fourth cell was very full, with four shuffling females, barely enough space to move around with the four of them in there. \n\nRachel immediately tried to explain that we had learned how to heal the zombies and get them back to their human selves. The militia men laughed uproariously at the suggestion. \n\n\"Lady, we tried for weeks to turn our sergeant back into a person again. That's him in the first cell,\" one of their leaders explained. \"We fed him, we gave him medicine, hell we washed and clothed him. He never did anything except try to bite us.\"\n\nRachel tried explaining to the armed men that you needed to keep the zombies fed and very warm, in addition to some antihistamines, but they didn't seem to want to hear it. There was fear in the old couple's eyes, and the man looked at me and shook his head slightly, as if warning me not to argue. \n\n\"Let's get out of here,\" I told Rachel, but she wanted to plead with the men that they only had to follow a few simple steps and their mindless prisoners would return to their healthy selves. \n\nShe was getting forceful in her arguments, and getting nowhere, so I finally had to put my hand on her arm and whisper, \"They have their hands on their guns now.\"\n\nThe realization made Rachel stop abruptly, and I again thanked our hosts for letting us talk to them but said it was time for Rachel and I to be getting back home. \n\n\"Probably a good idea,\" Officer White said. \"And you're welcome to stay or go, it's still a free country as far as we know. But we want to offer you the chance to fuck Red before you go.\"\n\n\"Excuse me,\" I asked, not comprehending at all what he was saying. \n\n\"Maybe you and your girlfriend here are an item, but a man has needs and Red here is great for helping with those,\" Office White explained crudely, indicating that he was referring to the woman with red hair tied to the floor in the second cell. \"You can do whatever you want with her, hell, put it in her ass if that's your thing. No red blooded man in these times could refuse an offer like that.\"",
        "\"You can't be serious,\" I responded. \n\nOfficer White stepped closer to me, his voice almost a low growl as he continued, \"We need to know you're one of us. Just cum somewhere on her, we won't watch, we're not fags... not that we're against gay people, but still. We won't watch, you do your thing, and after you drop your cum on her you're free to leave.\"\n\nI didn't want to ask what would happen if I couldn't cum. \n\nThe militia men left the cell room and closed the door behind them. Rachel quickly turned to me and said, \"This situation is totally fucked up.\"\n\n\"No shit,\" I replied. \n\n\"I'll give you a blowjob or a handjob or something and then we can get out of here,\" Rachel offered, more than a little panic and concern evident in her voice. \n\n\"No,\" I responded quickly. \"They have some camera or window or something. They're watching us.\"\n\n\"Well, do you think you can do it?\" Rachel asked. \n\n\"I think I can,\" I replied. \n\nI entered the cell with Red and checked her bonds, while Rachel waited outside. Satisfied that the redhead was sufficiently restrained, I took off my pants. I had not been expecting this situation, and my member was nowhere near hard. I tried stroking myself a few times, looking down at the pair of big, round breasts beneath me, but my cock was far from excited. I couldn't help but look into the dead green eyes of this woman, the dirty rag tied between her teeth, and think of Sally and what I had done to her. \n\n\"What can I do?\" Rachel whispered urgently. \"Should we tell those guys to fuck off, we're leaving?\"\n\n\"I can do this,\" I replied quietly. Rachel watching me struggle through this was the least weird part of the insane situation. \n\nI pressed the sides of Red's big, firm breasts together, wrapping my half hard dick in the tunnel of smooth, hot tit flesh. Her skin was so warm, even compared to my engorged cock. Ordinarily the sight of two big tits encompassing my dick would have gotten me rock hard, but in that setting it barely got me interested. \n\n\"Connor, look at me,\" Rachel urgently whispered. I turned my head to find her suggestively cupping her two big breasts through the loose fabric of the baggy, long sleeve shirt she was wearing. Rachel gently squeezed the round tops of her boobs in her small hands, making little dimples in her melons, and whispered, \"If you cum for us now, I will let you fuck my tits when we get back.\"\n\nI don't know why exactly, but Rachel talking dirty to me while I thrust my cock in and out of another woman's cleavage stirred something strong inside of me. I thrust a little more eagerly, feeling Red's smooth tit flesh sliding around my growing pole as Rachel's dark brown eyes fixed mine. \n\n\"That's right, Connor, that's it,\" Rachel encouraged, running her hands over the tops of her round breasts. \"You can fuck my tits all you want when we get back. I'll let you do whatever you want to them, oil them up, suck on them, spit on them. Just cum on that girl's chest right now and you can cum between my tits all you want when we get home.\"\n\nMy hard manhood was up to full length and tingling with pleasure as I fucked Red's big, round melons and listened to Rachel's dirty talk. I let Red's tits fall to the side so I could spit more lubricant between her smooth globes, then pushed them tightly together again and resumed fucking her chest in earnest. I've always loved the sight of my big, hard dick disappearing into the tunnel between two big, firm tits. \n\n\"Yes Conner,\" Rachel continued, \"I want you to fuck my chest, and I will beg for your cum.\" She began running over the tops of her breasts and weighing them with her hands just like I would. \"I will beg for your cum, I want your hot cum all over my breasts so badly. I will beg for your cum as you fuck my tits. Cum on my tits Conner, I want you to cum on my tits!\"\n\nI had gone from unaroused to the precipice of orgasm in less than four minutes. As I pressed Red's firm tit flesh more tightly together, I looked at Rachel's eyes and watched the way she fondled her own breasts. I could feel Rachel's breasts wrapped around my hard cock, see Rachel looking up at me as I thrust my meat against her chest, hear Rachel's voice begging me as I plowed my pole between her tits. \n\n\"Cum on my breasts, Conner,\" Rachel pleaded. \"I want your hot cum so bad, cum on my tits, Connor!\"\n\nA few more thrusts between Red's heavy, round tits and the orgasm blew through my body quickly. It was a long, scintillating burst of pleasure, and I kept fucking my cock against Red's smooth skin as I came, moaning through my climax. Most importantly, a thick stream of my white cum coated the valley between Red's tits after my orgasm, with one spurt of white spunk dribbling down her neck. \n\nI knew those bastards had been watching us, and they were in the room whooping and clapping before I had even stuffed my cock back in my pants. \n\n\"Nice man,\" One if them said, \"I knew you were one of us.\"\n\nAs the \"militia\" escorted Rachel and me out of their building, Officer White said, \"If you need to come back, feel free. Just don't bring trouble with you. Remember, this plague is God's punishment. It's Hell on Earth out there.\"\n\nThe closest I had even seen to Hell on Earth was going on inside those jail cells. \n\nRachel and I had made it barely a block away, and were discussing the need to take a meandering route home to make sure nobody followed us, when one of the militia men surprised us coming out from around a corner. I initially expected some sort of fight, but was even more surprised to see he was dragging one of the zombie women from the fourth jail cell behind him. \n\n\"Please,\" he pleaded, \"Please. If what you say is true, please take her with you and help her. She's my sister.\" \n\nI hesitated, but Rachel grabbed the leash leading to the chain around the girl's neck without hesitation. The man thanked us and disappeared back the way he had come. Without having to drag the new zombie girl behind us, It would have taken 30 minutes to carefully walk home. Saddled with another zombie, and needing to avoid other zombies without letting her bite us, it took almost two hours and was near sunset when we finally returned. \n\nChapter 7: A Fight for Survival\n\nSally and Bridgett were extremely relieved when Rachel and I returned. After we got the new zombie secured in the storeroom, they were horrified by the story we told of what we had found. Bridgett was trembling with fear and sadness at the news that the help we had sought turned out to be more dangerous than the plague afflicting our city. I left out most of what I had to do with Red, and Rachel didn't comment on my omission. \n\nOur newest rescue was a mess. Her skin had a slightly grey tint to it, and hung loosely over her arms and thighs. Rachel guesses that this girl had lost a lot of weight during her time as a zombie. Her teeth had also gone appallingly yellow, and her hair was a filthy mess. There were globs of sticky stuff in her hair, and we didn't want to even guess where that had come from. \n\nAfter a week of Rachel's gentle and simple treatment, the new zombie was showing no signs of improving. During my seventh night of carefully bathing her and cleaning up the messes she had made on herself, I suggested to Rachel she might be too far gone to save. Rachel said we should give it another week at least, but when Sally and Bridgett found out about our discussion, they were angry and said we would do everything we could for as long as we needed until we were absolutely sure we couldn't help this girl. \n\nOur semi-breakthrough happened one day while Rachel and I were again bathing our newest guest with buckets of hot water and sponges. The zombie was so clearly ill that it didn't arouse me to be running my wet sponge over her naked flesh. Having cleaned her up considerably, we could now tell that she had straight black hair, very fair skin, deep blue eyes, a thin frame, and small B cup breast, though she may have had a fuller, more athletic frame before she became ill. She was probably in her late twenties, though she could have been much older when looking at the wrinkles in her loose skin. \n\nRachel was carefully cleaning the girl's pubic area when she moaned. Both Rachel and I stopped, and looked at the girl's face. The zombie girl stopped gnashing her teeth for a moment, and her filmy blue eyes stared up at the ceiling. \n\n\"What did you do?\" I asked. \n\n\"I must have brushed against something sensitive with the sponge,\" Rachel replied almost defensively before adding, \"Have you ever heard her make a noise like that?\"\n\n\"Nope,\" I replied, \"Just angry wailing so far.\"\n\nRachel ran her wet sponge over the girl's sex, up and then down. The zombie's arms clearly tensed against the bonds holding her spread eagle to the floor, and her hips shook. \n\n\"Okay, this is too weird,\" Rachel said, standing up and taking a step back. \"This is clearly new behavior, maybe it means something good, but... I'm not into girls, especially ones that are tied up.\"\n\n\"What do you think we should do?\" I asked. We were almost done with the bath. \n\nRachel thought carefully for a while, and I waited patiently in silence until she said, \"You should see if you can get her to respond more.\"\n\nI won't bore you with too many details, because it was an incredibly awkward situation. In many ways it felt like pleasuring an old woman, because of the state her body was in, and it was extremely embarrassing how much the whole episode still aroused me. \n\nAt first I gingerly explored the woman's sex, and was surprised to find that she was a little wet down there. Even just running my fingers through her wet folds in search of her clit caused her to moan again, dead eyes still staring at the ceiling. Coated with her wetness, my fingers rubbed gently around the edges of her most sensitive spot. Eventually i found that she really enjoyed a steady circular motion around the edges of her clit, followed by a couple of light passes by my fingertips right over the top of her nub, before returning to the circles. The zombie girl strained at her bonds, what was left of her leg and thigh muscles tightening as I coaxed the pleasure from her with my fingers. When she came, not long after I had started, she let out a high pitched squeal and all her muscles seemed to tense and flex against the nylon ropes that were holding her. \n\nI looked up at Rachel and her cheeks were flushed. She was breathing heavily. No words were said between us, we quickly dried our zombie guest with the towels we had brought, dropped our cleaning supplies at the wash area near the back of the store, and both headed up to my room. \n\nRachel pounced on me as soon as the door was shut, her soft lips pressing insistently against mine, and her hand wantonly grabbing at my crotch to confirm that my cock was rock hard and waiting for her. \n\nWe tore our clothes off each other, I don't even remember what we had been wearing. But moments after we entered my room, I was naked and she was wearing only her bra. I kissed my way down the soft, smooth skin of her neck, and she licked my ear before nibbling lightly at the strong muscles of my shoulder. \n\nMy hands cupped Rachel's big breasts, at first feeling for her nipples through the fabric of her bra, and then tearing the bra away so I could cup her smooth fit flesh in the palm of my hand. Her breasts were full and firm, only slightly smaller than Sally's, and with a bit more sag. When I leaned down to suck one of her pink nipples between my teeth, Rachel pulled my head into her body, gasping as I suckled happily on her teat. \n\nI kissed my way down Rachel's flat stomach, intending that I would eat her pussy right there as she stood just inside my door, but apparently we both had the same idea. When we both dropped to our knees, there was a brief moment of light laughter before we ended up laying on our sides on the floor facing each other. I explored Rachel's sex with my fingers, surprised to find her completely shaved, and my tongue was soon searching for her clit. I felt her hot, wet mouth envelop my cock, her mouth sucking on my rigid manhood as her head moved back and forth around my pole. We spent less than a minute like that, Rachel blowing me while I lapped at her pussy with my wet tongue, because the angle was awkward. \n\nI pulled Rachel's hips with my hands as I rolled onto my back, and coaxed her to roll atop me. Soon the shapely brunette was bobbing her head up and down, her soft cheeks sucking tightly against the tingling skin of my cock, while I ate her out. With her legs now spread on either side of me, I could close my mouth over her spread pussy, surrounding her sensitive clit with my wet mouth and suckling over her sensitive little bump. Rachel moaned deeply as she continued to blow me, her wet mouth trailing up and down my pole, as I suckled happily on her sex, flicking at her clit with my tongue. \n\nRachel released my cock with a pop and a loud moan, and then quickly spun herself atop me. She moved so fast I was caught off guard when I could feel her pussy welcoming my cock into her slippery love tunnel. She wasted no time impaling herself on my dick, my meat slipping happily inside her tight, wet walls. Rachel began bouncing up and down on my pole, setting at almost frantic pace with her feet planted on either side of my body and her legs pushing her up and down my hard cock. I reveled in the feeling of her wet pussy milking up and down my rod, her slippery, warm tunnel walls rubbing against my manhood in such a pleasurable sensation. \n\nWhen I reached up with my hand and began gently playing with Rachel's heavy, swinging tits, running my rough palms over her nipples, she arched her back deeply and let out a loud moan. \n\n\"I'm close,\" she warned in a near whisper. \n\nI took that as my cue to begin thrusting my hips upwards in powerful strokes, meeting her downward stroke with an upward pump, ramming my hard cock home deep inside her wet pussy. It was hard to match her quick pace, but I fucked her hard and fast, shoving my thick meat into her over and over. Her mouth formed an O, and then I could feel her whole body trembling as she came, her strong thighs shaking next to me, her arms and torso tensing. \n\nThe sight of her orgasming atop my cock pushed me into my own orgasm. A few more powerful thrusts as she crouched motionless over me, and then I was cumming too, pumping my hot cum deep into her warm pussy, my orgasm filling me with pleasure and curling my toes as my balls emptied their load deep inside Rachel. \n\nAs we lay in each other's arms afterwards, we agreed we should have fucked much sooner. We also pondered whether getting our zombie guest to orgasm would help with her recovery. Only much later would we learn that the zombie's arousal and orgasm was a symptom of her improving health, not a cause of the improvement. \n\nFor five days after I brought her to orgasm with my fingers, our newest guest showed steady signs of improvement. The pinkish color returned to her skin, she stopped trying to snap at us, and seemed to fall into a deep sleep. She also started eating less, and I noticed her nipples went from a very dull pink to an almost red color. Her body looked so much better that I got aroused cleaning her. Rachel helped me with a blowjob right in the storeroom after one bath, swallowing my cum as I orgasmed between her sucking lips. I immediately returned the favor by eating Rachel out and fingering her to her own orgasm. She did her best to muffle her moans of delight as she came on my finger, her juices flooding her pussy. \n\nDuring the evening of the fifth day, two weeks after we had brought her into the house, we found the poor girl covered in black goo, just like Sally. Once again, it appeared to be coming out of both ends. We cleaned her up, trying not to vomit when the smelly goop started sticking to us like tar. We covered her with blankets for the night, and the next morning our newest member awoke, asked us where she was, and told us her name was Erin. \n\nI did a quick review of our remaining supplies, with help from Sally and Bridgett. With five people to feed now, we decided we needed to ration our remaining supplies, and even with the rations, we had at most eight weeks of food remaining. The water had finally stopped flowing, but we had stored a significant amount in barrels around the store. \n\nWe agreed that we needed to try to do some foraging for supplies. While Erin was still slowly recovering and regaining her strength, Rachel and I went poking around the neighborhood. The first trip was a disaster, the neighborhood was well picked over, and we almost stumbled into a pair of zombies that got close to biting Rachel. We also came across what was either another scavenging party or a patrol from the militia at the police station, and hid in an empty store to avoid them. \n\nThe next few foraging trips were slightly more successful. We decided to target apartments, being very careful to avoid any zombies inside. While at most we would find a few canned goods and some flour or rice in an apartment, the apartments were more reliable for finding supplies and safer than the gutted and looted stores in the neighborhood. \n\nThe lack of supplies led us all to agree that we couldn't afford to try to save more zombies at the moment. It was going to be hard enough to feed the five of us and keep us all safe. Rachel almost broke the agreement when we came across a young boy zombie in one townhouse, he was probably 12 years old. But he proved too difficult for her to wrangle, and she was heartbroken for days afterwards that she couldn't save him. \n\nTwo weeks into foraging, we got in trouble. One of the militia patrols spotted us and apparently followed us back to my house. They initially demanded that we let them in, and when we refused, they recognized us. Then they demanded that we provide them supplies, calling it a \"protection fee\" as if they were doing anything to keep the zombies away from us. I politely refused, and after a terse exchange of words they left. \n\nBut they never really left. The next morning there was a guy lurking on the street corner, at the edge of what we could see from the upstairs window. He left at some point, but later that afternoon another man appeared, one I recognized from the police station, and he lingered on the street corner until the sun started to set. \n\nIn a small way it made me feel safer to have the men there. Nothing crazy like a tidal wave of zombies coming down the street would happen without the extra set of eyes on the street corner noticing. But they had made no effort to contact us, just watched. For all they knew it was just me and Rachel in the building. When a third man appeared on a closer street corner the next morning, standing so he was half hidden around the corner of a nearby building, we decided to start keeping watch over the watchers. At all times during daylight, at least one of us was assigned to sit at the window sill, out of view from the street, and keep an eye on our \"protection.\"\n\nOn the third day of this new pattern, I was early into my midday shift watching out over the street when Bridgett entered the room and sat on my parent's bed, across from where I was sitting on the floor in front of the window. \n\nBridgett had been a little strange ever since she recovered from her zombification, which I was willing to allow without complaint. She had been through some ordeals. She rarely talked, except when she and Sally were alone, and often floated silently in and out of rooms, barely making a noise. Combined with her slight frame and long, wispy blonde hair, it gave her the air of a ghost who was haunting our house. \n\nThe ghost image was accentuated today by the loose, white long sleeve shirt she had chosen to wear, and the soft, baggy shorts, both of which I recognized as my mother's and both too big for Bridgett's skinny body. It was like the clothes floated on her. ",
        "\"Everything okay?\" I finally asked after she had been sitting across from me for several seconds, without saying a word, her light blue eyes fixed upon me. \n\n\"You and Rachel have sex sometimes?\" Bridgett finally asked, only the raise in her voice at the end of her sentence letting me know it was a question rather than a statement. \n\nEven though she had ignored my question, I chose to answer hers with a simple, \"Yes.\"\n\n\"Are you doing it because you two like each other, or is she paying you back in some way for taking us in?\" Bridgett asked. There was no hint of accusation or malice in Bridgett's voice, more a child like curiosity. \n\nI thought for a moment before finally responding, \"We both like each other enough but it's also about... our needs. We have needs and desires just like any other young adult.\"\n\nBridgett considered my answer briefly before asking another question. \"And you've had sex with Sally, since she got better?\"\n\n\"Yes,\" I freely admitted, suspecting she had heard as much from Sally. \n\nBridgett sat on the bed for another minute, just looking at me in silence. I glanced at the young man in the jeans and leather jacket across the street a couple of times, waiting to see where this was going. \n\nFinally, Bridgett stood up and said, \"I never properly thanked you for taking me in off the street and taking the time to heal me. So thank you. I really, truly appreciate it.\"\n\nAnd with that, the young blonde walked out of the room. I don't think we exchanged another word for the rest of that day. \n\nFive days after the militia started watching our house, I was down in the back area of the store, making sure the heavy door leading to the back alley was secure, along with the bars and wooden boards over the rear facing windows, when I heard Sally running down the stairs. \n\n\"Something is happening on the street,\" she whispered to me loudly, \"Come up to the window.\"\n\nBy the time I got to the window, there were five armed men standing in front of our store, with Officer White at the front. \n\n\"Hello up there!\" He called. \n\n\"Hello,\" I replied at a normal speaking volume. \n\n\"I understand you're refusing to share supplies with my men who have been watching over your street,\" White yelled up to me. \"That doesn't seem neighborly.\"\n\n\"I only have enough left for me and my friend to last two or three more weeks,\" I said back. \"I'm sorry we don't have more to share.\"\n\n\"Just a few weeks of supplies for two people, from this whole store?\" White called up, the disbelief evident in his voice. \n\n\"We didn't expect to need to ration for this long,\" I responded. So far nothing I had said was untrue. \n\n\"Well we want to help you,\" White said back. \"You're the only people we know of still holed up in this area. But we can't do it for free. Every minute my men spend watching over your street is a minute lost from foraging for supplies elsewhere.\"\n\n\"I'm sorry,\" was all I offered in response. \n\n\"Well...\" White yelled, \"It's getting dangerous out here. Don't say I didn't warn you.\"\n\nHe and his men turned and left, walking down the street back towards their station. \n\nVery early the next morning, before the sun had come up, a series of loud banging noises and some angry moaning woke everyone in our house. I ran to the window overlooking the street, and in the dim street light could make out three zombies banging on the metal gate over our storefront. \n\nThe women soon joined me at the window, wondering what had led the zombies to attack our building. Rachel and Erin had first run downstairs to make sure someone or something hadn't broken into the store, and had found nothing changed inside the building. It wasn't until the sun came up that we realized someone had smeared something all over the metal gate. By noon we had five zombies banging on our metal gate. They weren't hitting the gate very hard, but the noise was loud. \n\nI almost felt bad for the zombies. Unlike in all the horror movies I'd seen, they didn't have much energy in them, and even five of them were no match for the metal gate. One zombie woman seemed to barely have enough strength to lift her hands and occasionally fling them weakly against the gate. Another poor soul was missing his arm from above the elbow to his finger tips, and one of his ankles was bent at an awkward angle. He flung his shoulder against our gate, barely hitting it a couple of times. \n\nThe psychological effect, on the other hand, did take a toll on the five of us in the building. The noise the zombies made was constant, and there was always the fear that something would break or give way and we'd lose the metal gate. Now we needed to station one person just inside the entryway of the store, to make sure the zombies didn't break through, in addition to taking turns watching the street from the second floor window. We were also now trapped inside our building, unless we wanted to try going out the back door into the narrow rear alley. \n\nWorst of all, the zombies never stopped their noise. None of us slept much that first night, listening to them bang on the gate all night. Our nerves started to fray a little. The second night the noise lessened, and we woke to find only two zombies trying to break into the store. But the next night the loud noises returned, and we woke to find six zombies now banging against our gate, with clear evidence that something new had been smeared over the entrance to our building. Our best guess from the smell was that it was a combination of honey and cooked hamburger meat. \n\nFor safety and psychological comfort, we began all sleeping in my parent's room. Initially we had tried to keep an overnight watch, but with nothing to do the person on watch would inevitably get bored and fall asleep, so we gave up and decided to stay together each night in the master bedroom. The bedroom also had the advantage of a window that overlooked the street out front, where my bedroom faced the back alley. \n\nWe brought some water and snacks into the bedroom in case we got stuck there, and dragged my mattress onto the floor. I would stay up as late as I could, keeping watch from the second floor window, both over the street and making sure the zombies didn't break in. When I got tired, I would go to the bedroom, close the door, push a heavy chair in front of the door to make it difficult for someone to break in, and go to sleep on my mattress. Rachel always woke up first, would carefully remove the chair from in front of the door, peek her head out into the hallway to make sure we were still okay, and then tip toe to the window to make sure the zombies hadn't broken into the store while we slept. \n\nThe first night with this set up, all four women slept in my parent's bed. The second night, I entered the bedroom to find Sally asleep on my mattress on the floor. Bridgett lifted her head sleepily, saw it was me coming in, and went back to sleep. \n\nI assumed the women had run out of space and Sally had drawn the short straw moving to the floor. But as I settled into the mattress, Sally rolled onto her side and backed up her round bottom so I ended up spooning her. I settled a thin blanket over us, and eventually fell asleep with Sally's warm back against my chest and her firm ass nestled up against my crotch. \n\nIt didn't feel like I had slept long when I was woken by one of Sally's hands fumbling around between her legs, grabbing at my crotch. I had gone to sleep in jogging shorts and no underwear, and Sally's hand was quickly working its way up one leg of my shorts. I felt her small, delicate fingers brush against the tip of my cock, and then close gently over the head of my manhood. \n\nSally's intentions were quickly made clear when I took my arm, which had been resting on my side, and slid it over Sally's body. As my had dipped down towards her pelvis, I found her own hand already there, rubbing circles over her pussy. \n\nI wanted this even more than she probably did, so in my mind at the time, it was only a matter of doing it without waking the other three women in the room. My cock was rapidly inflating, further aroused when I moved the hand I had intended for Sally's pussy up to her chest and cupped one of her firm, full breasts. I could feel the weight of her tit in my palm, and her hardening nipple through the fabric of her night shirt. \n\nI rubbed the thick head of my dick against Sally's wet opening, trying to coat myself in her juices and further stimulated by the vibrations from her fingers circling over her clit. When I first tried to slide my meat into her hole, it was a little too tight and not wet enough, so I had to rub more of her natural lubricant onto my shaft. My second, determined thrust pushed my thick cock into her hot, wet pussy and she gasped softly as several inches of my stiff meat entered her. \n\nSally was rubbing furiously at her pussy, while I held her big breast as if to hold her nubile, young body in place while I rocked my hips to slide my hard dick in and out of her tight hole. I couldn't believe she had initiated this fuck session, so brazenly in front of our housemates, when four months ago she wouldn't have gone out of her way to say hello to me. The apocalypse does funny things to people. \n\nSally was clearly determined to get herself to orgasm, and I was happy to help, sliding my thick pole in and out of her slippery, wet pussy as quickly and as quietly as I could manage. I began gently rolling her nipple between my thumb and forefinger as I fucked her hard, and she whimpered softly in response. She was so wet that, even though her hot, slippery tunnel was tight, I was able to fuck several inches of my hard cock in and out of her pussy with ease. I loved the feel of her slippery insides gripping tightly against the tingling skin of my engorged member. \n\nWe lay like that, spooning and fucking, for less than five minutes, which was a good thing because she was so wet that she was starting to make wet squelching sounds while rubbing over her pussy. She came without warning, suddenly clenching her body into a tight ball as I steadily pumped my throbbing cock in and out of her tight hole. I continued to stretch her slippery pussy walls with my thick meat as she rode her orgasm, my hand grasping firmly onto her full, round tit until she finally arched her back deeply and muffled a low moan. \n\nFeeling Sally's tight young body tremble and shudder against mine as she came, not to mention her hot, wet pussy milking my tingling cock, brought me close to the edge of my own orgasm. Sally lifted her shirt up over her big boobs, then took my hand and guided it back on top of her big tit. Feeling her smooth tit flesh against my palm, feeling her hand pressing my own hand harder into her heavy, young cleavage, pushed me over the edge. I somehow managed to remain silent as the white hot bliss of my own orgasm overcame me, making my feet tingle and my legs shake as it exploded out of my loins. I pumped load after load of my hot cum deep into Sally's pussy, my body shaking as Sally kept my hand pressed against her big, firm breast. \n\nWhen she was sure that I was done, Sally quietly got to her feet and hustled into the bathroom. While I listened to the water running, I heard someone sit up on the bed. I turned my head to see Bridgett looking down at me. I wasn't sure, but in the dim light I thought she was smiling. Bridgett put her head back down before Sally returned to my mattress on the floor and we all fell asleep. \n\n Chapter 8: Salvation\n\nFor a few days, the incessant pounding of the zombies was both driving us crazy and had become routine background noise in our lives. We couldn't figure out how to get them to go away, it was like the militia was attracting new ones to our door. \n\nThen one afternoon, Erin yelled from the second story window, \"There's a tank on our street!\"\n\nI ran up the stairs, quickly joined by all the women. At the edge of our view, I saw some sort of armored personnel carrier with a mounted gun on top. It wasn't quite a tank, but if the militia had somehow found this piece of heavy armor and intended to use it against our building, we were screwed. Those fears were somewhat alleviated when we saw armed men in military uniforms carefully following behind the armored vehicle. \n\nThey were coming to our building to investigate the zombies banging on our gate. They didn't look or act like militia, so we called down to them. Everything that happened afterwards seemed to happen so fast, even though it took place over a few days. \n\nIt turned out they were National Guard. We trusted they were telling the truth partly because they didn't just kill the zombies at our door, they restrained them with zip ties and eventually had a large truck take them away somewhere. Not all of the country had fallen apart during the pandemic that spread the zombie virus, but our portion of it had been hit hard. We were far from the only people to discover the zombies could be \"cured,\" treated until they overcame the virus. In retrospect, it was kind of dumb that we feared we may be the only ones who knew. National order had not fallen apart, the military and government largely remained in control, although it had not seemed that way in large regions like ours that had been overcome by the virus. That also now seems like something we should have figured out, since the power never went out. The National Public Health Service had worked with military to ensure that key utilities and security services remained functioning. \n\nOur little group of survivors found this all out over the next three days. At first, the national guard people who found us insured that we were secure, explained that they were clearing and treating our city, and told us to sit tight. We saw more military vehicles and a lot more people the next day, and the zombies slowly disappeared. Eventually Red Cross volunteers made contact with us, had medical people look at us, and provided us supplies. I didn't realize what a lifeline communication had provided until the radio started picking up stations again. \n\nErin was the first to leave, very early, when we were still locking the metal gate over our entrance for most of the day. Her brother came looking for her, she thanked us profusely and said she would come back, but they had to go find the rest of their family. We sent her off with supplies, and I still see her around every once in a while. She and her brother still live in our town. \n\nBridgett was the next to leave, but not before an epic farewell with me. By the time she left, we had taken the boards off our windows, and left the metal gate up for most of the day. I had locked up the downstairs one night and was getting ready for bed when I found Bridgett in my room. She and the others were still sleeping in my parent's bed, but I had hauled my mattress back into my room, and I was surprised to find her there. \n\nShe was wearing a night shirt so large on her that it hung down almost to her knees, hiding any shape to her body except her thin, toned arms and narrow but still shapely legs. \n\n\"I wanted a chance to thank you,\" Bridgett said softly. \n\n\"For what?\" I asked. \n\n\"For everything,\" she replied with a smile. \"When I was tied up naked in your store room, did you ever want to fuck me?\" she asked. \n\n\"Sometimes,\" I admitted, making sure the door to the room was closed behind me. \n\nBridgett pulled the bottom of her long shirt up over her head, revealing that she was completely naked underneath. I had seen her body naked before, but she looked so much healthier now. Her skin had a pinkish color to it that had been missing, and although she was still skinny she had put on a little healthy weight, properly rounding out the curves in her ass and small tits. I drank in the sight of her smooth, flat stomach, her rosy pink nipples, the small swell of her pert breasts, and the exposed mound of her womanhood. \n\nIn one smooth motion she had wrapped each end of the shirt around one of her hands, and with the fabric stretched tight over her head she asked, \"Do you want to fuck me all tied up now?\"\n\n\"Keep those hands above your head,\" I directed, and in one smooth motion I dove with her onto the bed. \n\nI went for her nipples first, suckling the little nubs and some of her smooth flesh between my lips. As my hot, wet mouth worked the tip of her teat, I could feel the perky firmness of her little breast. She gasped as I suckled on her hardening nipple and licked wetly around it with my tongue, but she kept both arms raised above her head as I had directed. Then I switched to the other breast, suckling that nipple with joyful vigor, covering her smooth fit flesh with my hot mouth and eliciting another gasp from the nubile, young blonde. \n\nMy hand ran up Bridgett's smooth inner thigh until I was brushing my palm over the opening to her sex. I could already feel a little wetness on her pussy lips, and gently probed her opening by running my fingertips between her lips. As I sucked and licked her bare breast, my fingers traced their way upwards until I had found the hard little bump of Bridgett's clit. I began rubbing gently against her sensitive little spot as I switched back to licking and suckling on the first wet nipple, and Bridgett arched her back in response. \n\nI placed my free hand at the center of Bridgett's chest, and pushed her back gently until she was laying on her back on the bed. I was happy to see she kept her hands above her head, still holding onto her shirt, her skinny little body on full display and open to me. \n\nBridgett cried out loudly when my face went between her legs and I changed from sucking on her nipples to gently licking at her pussy lips. Her back arched when my hot, wet mouth closed over the top of her clit, and I began suckling against her most sensitive spot with my wet lips. She cried out again when my tongue began tracing wet circles around the edges of her sensitive clit, and then moaned loudly when I began flicking directly over her clit with the tip of my tongue. \n\nBridgett briefly tried to sit up and say, \"This was supposed to be for you...\" but I pushed her back down onto the bed before she could finish her sentence. \n\nMy tongue renewed its gentle ministrations, sliding wetly up and down over, and then around and around her pleasure spot. Gently sucking her whole clit into my hot mouth was rewarded by a \"holy shit!\" from Bridgett. I hadn't been at it very long when Bridgett's noises merged into one continuous moan, and I could feel her thighs quivering on either side of my face. I kept up the steady stimulation, licking and sucking, flicking the tip of my tongue and then running the full length of it over her clit, sucking her whole nub into my mouth and slathering it. She began to pant and moan, her chest flushing deep red as it rose and fell rapidly. \n\n\"Fuck, here it comes,\" she moaned as I circled rapidly and steadily, rubbing her pleasure spot with my solid tongue. And then she was cumming, her legs shaking around my head while she half muffled a squeal of delight. Her fair chest and cheeks flushed a dark pink, and a broad smile of delight lit up her face. \n\nI gave Bridgett a couple of minutes to come down from her orgasm high and catch her breath while I hurriedly stripped off my clothes. Then I was rubbing the fat head of my hard dick against her wet pussy lips. She was positively dripping juices, coating my hard cock head with the slippery evidence of her arousal. She looked up at me with a smile, her blue eyes slightly dreamy and her hands still above her head, and I thrust forward with my hips. \n\nI worked my hard, excited cock in and out of Bridgett's tight hole slowly at first, letting her get used to the feeling of my thick cock stretching her slippery tunnel. The skinny blonde was very tight, gripping every inch of my cock wetly as I fucked in and out of her hole. But once I bottomed out, my entire pole inside her sex, I began fucking her in earnest. ",
        "I withdrew to my tip, grabbed her thin hips, and shoved my entire cock home in her pussy. I maneuvered myself partly onto my knees so I could drive home my thick dick inside of her, rapidly working my thick member in and out of her slippery, wet hole. She felt so skinny and small beneath me, my body so much wider, as I pumped my hard meat rapidly in and out of her tight, hot hole. With her hands still tied together over her head, it felt like I was using her little body and hot hole as a fuck toy to get myself off. \n\n\"Oh fuck!\" Bridgett moaned, her blue eyes going wide. \n\nI pounded my meat into her, and it felt especially good to be rocking her skinny little body, impaling her with my cock, plunging my dick full speed into her excited pussy. Her body shook from my hard fucking, her small, pale breasts flowing up and down over her chest in response to my thrusts, her pink nipples flying. \n\nBridgett started moaning again, adding in a \"Fuck yes!\" as I rapidly pounded her pussy with my hard, thick meat. \"I might cum again,\" she warned. \n\nI withdrew my full cock, quickly flipped her over so her skinny but firm ass was in the air, and then reentered her from behind. I kept her legs together with my knees on either side of them, which both made her already tight pussy entrance feel even tighter and also gave me the leverage to fuck her fast and hard. With my elbows on either side of her back, I angled my hips and drove my dick hard into her hot, wet pussy, shoving the full length of my engorged meat into her tight little hole over and over and over. \n\n\"Oh shit,\" Bridgett pleaded in a high pitched voice, but there was no slowing me down. I had wanted to fuck this skinny little blonde for a long time, and now I was enjoying it, ramming my hard cock home over and over into her tight pussy. Her hands were still above her on the bed, and I was using her wet, slippery pussy to get my cock off. Her wet, slippery tunnel pulled at my cock so nicely as I slid my pole inside of her. I could feel my balls staring to churn from the hard, hot fucking. \n\nBut then Bridgett was shaking again, half crying and half squealing, \"CUUMMMMMMIIIIINNNNNNNNGGGG!!!\"\n\nHer little body shook beneath me again, tightening and flailing as the bliss of a beautiful orgasm swamped her senses. I kept pounding my long cock into her little body, stretching her tight hole as she came. When it was over, she scooted her body quickly up the bed and away from my hard, pounding cock, pleading, \"Hold on, too sensitive.\"\n\n\"I'm close,\" I warned, my hand immediately moving to jack up and down my excited pole, feeling the warm tingling spreading through my groin. \n\nShe smiled brightly and said, \"Cum on me. Cum wherever you want, cover me in your cum.\"\n\n\"I'm going to cum on your face,\" I told her, excited by the smile crossing her sweet lips, her blue eyes looking up expectantly at me. \n\n\"Yes, do it,\" she encouraged quietly, flipping onto her back and sliding back down the bed so her pretty, young face was just below my dick. \"Cum all over my face.\"\n\nLooking down at her sweet smile, her pretty face placed just below my cock, my hand furiously jacking my wet and throbbing member, I said, \"Because I can use you however I want, right? Tie you up and use you to get off.\"\n\n\"That's right,\" she replied with a broadening smile, her blue eyes locked onto mine. \"Use my face. Cover it with your cum. Cum all over my face, do whatever you want with it.\"\n\nI came hard with her words of encouragement, and watched the first spurt of my cum splash wetly across her smiling, pink lips. The pleasure was too intense, and I had to close my eyes as the orgasm lit up every nerve in my body. My mind was flooded with bliss. When I opened my eyes again, my white cum was dripping from the tip of Bridgett's button of a nose, splattered over her cheeks, and dripping down her chin. And with my hot cum on her face, she was still smiling, her blue eyes still looking up at me. \n\nBridgett dashed to the bathroom to clean herself up. If the other women had somehow missed the noises of what we had done, there was little doubt about what had happened after she decided to sleep in my bed with me that night, naked and curled up with her backside pressed against me. \n\nTwo days later she was gone. A national guard convoy was taking a group of survivors in the direction of the nearby city, and planned to pass through the outer suburb where she had lived. Rachel, Sally and I sent her with ample supplies and lengthy goodbye hugs. Only after Bridgett left did I realize that, despite all that had passed between us, we had never even kissed. We still text and email, now that the internet is back, but I haven't seen her in person since that day I said goodbye. \n\nSally was the next to leave, but not before we got a big surprise and my idiot parents returned with my grandmother in tow. It turns out that my grandparent's town was not as hard hit, they had ordered a shelter in place and then quarantine early in the pandemic, so my parents had a much easier time during the crisis than we had sheltering in the family store. The stress of the pandemic hurt my grandfather's health, so my parents had to leave him in a care facility before traveling back home to see if they could find me. I was both relieved and furious at them for having left me, and I let them know all of those feelings as we hugged and cried. They were impressed that we had kept the building intact and even more impressed that we had helped cure some zombies. \n\nSally had already planned to leave soon, her house was mostly intact and she wanted to focus on rebuilding there while searching for her family. My parents returning and reclaiming their bedroom hastened Sally's departure, she left the day after they returned. I still keep in regular touch with Sally, especially after phone service was restored. She found her brother in a survivor camp, and her mother had also caught the zombie virus and also been healed by helpful strangers. They never found out what happened to her dad. \n\nRachel stayed with us for a few more weeks, sleeping with me in my bedroom. After everything that had happened, my parents never questioned why we slept in the same room together. Rachel didn't love the idea of returning to her empty apartment, it felt lonely and at the same time dangerous with other surviving occupants slowly returning to the building. At the same time she was wracked with guilt about what had happened to her boyfriend. As everyone, including my family, worked on rebuilding our home and our lives and our town, Rachel spent a lot of her days searching everywhere for any information about her lost boyfriend. There were hundred of people doing the same thing just in our little area, searching for any word of loved ones that had gone missing. She was like a drop of water in a sea of desperate survivors searching hopefully for information. She never found out what happened to her boyfriend. \n\nWe had been sleeping cuddled together at night, but when Rachel finally decided that he was probably gone and she would move back into her apartment without him, it was like a thin barrier was removed between us. We had sex the night before she moved out. It started with light kissing, and I enjoyed the feeling of her full, soft lips pressed against mine. But then she was atop me, trying to devour my face, and suddenly we were rushing to discard our clothing. She grasped my cock and guided me home inside of her wet pussy, sinking her weight down atop me until I was all the way inside her hot hole. \n\nShe fucked me long and slow, lifting her curvy body up and down my hard pole like she wanted to savor every second of it. I was happy to enjoy her big, heavy breasts, dangling down from her chest. I rubbed my rough palms over her sensitive nipples, ran my finger tips over her smooth tit flesh, weighed her heavy firm breasts with my eager hands, all while she steadily and slowly lifted her wet pussy up and down on my cock. \n\nI eventually started suckling on Rachel's big tits, taking as much of her smooth flesh as I could into my hot, wet mouth and slathering her hard nipples with my wet tongue. That pushed her over the edge, though she didn't change her slow and steady pace as she came on my hard cock, her arms and chest shaking as my thick cock impaled her and my tongue danced across her sensitive nipple. \n\nRachel pulled herself off my cock, slid down my body, and wrapped her big, round tits around my throbbing pole. I was already so close to cumming, it only took a few thrusts fucking her tits, my tingling cock flesh sliding in and out of the tight tunnel of her smooth tit flesh, looking at my dick disappearing between her big breasts, and then I was cumming too. The pleasure crashed over me, flowing from the tips of my toes up to the top of my head, and Rachel held her breasts together for me as my cock shot spurt after spurt of hot cum deep in the valley of her cleavage. \n\nRachel and I still see each other almost every day. I wouldn't call it dating, she says I'm too young for her and she's probably too old for me. But it sure helps to have someone I can be with as we try to rebuild from the craziness that blew up our whole world. \n\nAnd then the National Reconciliation and Justice Council decided everyone should write a sworn statement, under oath, as best they could, of what they had done during the zombie pandemic, especially things they might have done wrong. So I'm writing this. This is what I did and how I remember it, the bad but also the good. I did some bad things, but I feel like I always tried to do what I thought was the right thing at the time. \n\n ADMINISTRATOR'S REVIEW: Subject was administratively sentenced to 60 hours of community service, working with those still recovering from the virus, for his interaction with the individual referred to here within as \"Red.\" Subject was also sentenced to six months probation for his interactions with other individuals infected with the virus. Full rehabilitation is expected, no further reviews required."
    ],
    "authorname": "spaldan",
    "tags": [
        "bondage",
        "facial",
        "mf",
        "straight sex",
        "tit fuck",
        "zombies"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/zombie-girls-and-monsters"
}