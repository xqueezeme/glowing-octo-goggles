{
    "title": "A New Way of Seeing Things Pt. 03 Ch. 29",
    "pages": [
        "Standard disclaimers.\n\nThis is a story about sexual exploration and, open relationships. Open relationships can and do happily exist; but they are not for everyone. If you do not believe it is at all possible for open relationships to exist without damage to any and all involved parties, please do yourself a favor and don't waste your time reading this.\n\n. \n\nAlso, this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental. \n\n*****\n\nIf my mother could see me now, Gwen mused as she sat poolside waiting for the second of five courses the chef was preparing. This was wealth and power of the highest order, the things Irene Curran had always respected most. Of course, she would not be so impressed that her daughter was sitting in the middle of it wearing nothing but a robe, or why she was even sitting there in the first place... \n\n\"So, how'd it go?\" Tim asked once they had finished carefully reassuring each other that their marriage was still strong after the massages they had received. \n\nGwen recounted her day, including in her details how revealing her clothes had become during the photo sessions but leaving out how thrilling the exposure had been. \n\n\"So I guess it wasn't too much of a leap to take 'em off then, huh?\" \n\n\"Oh, well, I didn't have to, at least not today. It sounds like I'll have to tomorrow, though...\" \n\nGwen sensed his mild disappointment at the news, something the Lady decided was just some sort of justification for her own perversion. \"Oh. He give you any details about tomorrow, other than that, I mean?\" \n\n\"Not really, just that I wouldn't need to try anything on tonight...\" Gwen felt a need to change the subject and keep her imagination at bay. \"And how did your day go? How was the fishing? Was your guide nice?\"\n\n\"The fishing was great! Vince\u2014real good guy, by the way\u2014made it sound like this little overgrown pond on the way over, but it was a small lake, and nobody but us on it! Caught a bunch and one of them's getting delivered to the house after it's stuffed and mounted. Holy shit Gwen, this bass was huge! I almost felt bad about keeping him but Vince said the pond's overstocked and good to get some of the bigger guys outta there. He also said Mrs. Danning will take care of the taxidermy, her treat.\"\n\n\"That's very nice of her.\" The skirmish over what wall at home his trophy would occupy could be fought later, Gwen decided. \"Does he, umm, know why you're here?\" \n\n\"You mean why you're here? I don't think so...if he does he didn't let on. He was really quiet until he figured out he didn't have to kiss my ass. Once he found out I worked for a living and could bait my own hook, he got a little more talkative. Said it's kinda unusual for this place to only have a couple of people in it\u2014it's usually full when it's being used, and that the people that stay here don't go in for fishing.\" He paused while Michelle brought the next course out, waiting until she had stepped back into the house before continuing on in a lowered voice. \"He also said he's heard they go in for some pretty wild parties here.\"\n\n\"Wild parties? Like how?\" \n\n\"He wouldn't say exactly, I think he was worried that if he said too much somebody would find out and he'd get in trouble. He just said that they're the kind of parties you have in private.\" \n\n\"Oh.\" Gwen had a guess as to the kind of parties they were, given what Michelle and Margaret had already hinted at. She felt a tingle run through her at the thought of the house full of people running around naked, doing...things... \n\n\"After a couple of beers he also asked if I had seen the basement yet.\"\n\n\"The basement? I didn't know this place had one. What's so special about it?\" \n\n\"He wouldn't tell me that either, just that he has a buddy who does some work down there from time to time and that's it a hell of a room.\"\n\n\"Huh.\" The conversation lapsed while they both considered the meaning of Vince's cryptic questions. \n\n***\n\nThe last rays of the sun had disappeared behind the grotto's walls some time ago, Tim and Gwen basking in the guttering light of the scattered torches and the warm glow of excellent food and drink in their stomachs. They both had thoughts of another swim before bed, each willing to wait just a little longer before being the first to suggest it.\n\nThe chirping of crickets was punctuated with the sound of Michelle's heels clicking across the marble floor. \"Madame, I am sorry to interrupt you and Monsieur, but your groom is here to see you. Would you like me to show her in?\"\n\nGwen rose, suddenly concerned. \"Of course\u2014please.\" \n\nThe young woman disappeared and returned a short time later, Cricket following close behind. \"Is everything alright?\" Gwen asked while Michelle excused herself. \n\n\"Oh\u2014yes, that's what I was coming to tell you. I just wanted to let you know Dart looks great and should be ready for tomorrow.\" She held out her hands defensively as the older woman approached for a hug. \"Sorry\u2014I don't smell so good right now\u2014it was pretty hot today, but you knew that already, and I went for a ride with Hannah and some of the exercise riders after we got Dart back to his stall and settled in. I hope that's okay...\" \n\n\"Seriously? You're worried that I might not like the smell of horse?\" Gwen said with a smile as she wrapped her arms around her friend. \"I'm glad you got a chance to get out and have a little fun. Did they give you somebody good to ride?\" \n\n\"Do you really believe there's a bad horse anywhere on this property? Once they started listing off his lines I was afraid I might break him or something. I was also afraid I might not be up to the other riders' skill levels...\" \n\nAnd were you?\" \n\n\"I held my own...\"\n\n\"You did a lot better than that, I'll bet. Did you eat yet?\" \n\n\"Not yet. Like I said, I wanted to make sure Dart was all set before I went riding, and then we went out right after that. I'm going back now to finish up my chores, and then I guess they've got dinner waiting for me in my room. Just wanted to let you know he's alright.\" \n\n\"Thank you for doing that, I appreciate it...if not food, maybe you want to rinse off with a quick swim before you head back?\"\n\n\"Oh, uhh, thanks, but I didn't bring a suit...\"\n\nGwen smiled and pulled the top of her robe open to reveal the bare skin beneath. \"Neither did we.\" \n\n\"Really? But what about, you know,\" she looked about the room, \"the others?\" \n\n\"Michelle is the only one we've seen, and from what I can tell bathing suits are kind of an afterthought here which doesn't bother her at all.\" Cricket didn't look convinced. \"I was going in,\" Gwen said, walking back on to the pool deck, \"come with me.\" \n\nThe young woman followed and gave Tim a shy wave. \"Are you going in, too?\" \n\n\"I will if you will,\" he answered with a grin as he rose from his chair. \"But let me hit the bathroom first.\" \n\nCricket stood and watched as Gwen shed her robe, laying it on a nearby lounge chair before slicing through the pool's surface with a neat little dive. Gwen. \"Leave your underwear on, then,\" she encouraged after breaking the surface and looking back at the young woman, \"it's like a bathing suit, right?\" \n\nCricket cautiously began to strip, looking back into the house after each item of clothing had been removed and carefully laid aside for easy retrieval later, hesitating first at her jog bra and then her panties before removing both and hurrying into the water. She swam towards her friend, the cool water refreshing and her nudity thrilling as she gave another look over her shoulder. \n\n\"How did you get those clothes?\" Gwen asked as the young woman drew close.\n\n\"Oh, Hannah thought it might save some time and trouble explaining why a guest was poking around the stables...I'm guessing it's because what I was wearing made me look like somebody who was up to no good.\" \n\nGwen laughed. \"You don't have the look of a troublemaker!\"\n\n\"I can't blame them, I mean if I had that kind of stable I would be very careful about who's hanging around it...on the other hand, you looked incredible today! I've never really gotten a chance to watch you work without my own horse to worry about...I knew you were a good rider, but wow!\" \n\n\"You're too kind,\" Gwen demurred. \"Hopefully my riding was enough to distract from my transparent wardrobe!\" \n\n\"Your outfits were pretty daring,\" Cricket admitted, \"but I thought they looked good on you. Hannah thought you looked really sexy in them and that you would have had a very large audience if the stable hands had been allowed to watch.\" Gwen's arousal flared at the reminder of her frequent dream material. \"She also noticed how interested Marco was.\"\n\n\"I have to guess it's his job to pay attention.\" \n\nCricket gave a curious smile, one that was a mixture of mischief and embarrassment. \"Oh, he was working, but he's still a guy...Hannah thought, well...she kept pointing out the bulge in his jeans, said that he was either naturally well-endowed or something was making him that way.\" \n\n\"Oh\u2014oh. Really?\" \n\nCricket nodded and smiled. \"She said if she were a guy she would have had one, too. I saw him, uhh, adjust himself once or twice when he thought no one was looking. At least, I think that's what he was doing...\" \n\n\"He's a young man,\" Gwen reasoned, \"I think they're all like that all the time, no matter what they're looking at.\" \n\n\"Maybe most of them...all I know is that even I was getting turned on watching you, and if I was, then he probably was, too. Sorry, probably not what you wanted to hear, but it's true.\" The young woman paddled backwards until she could stand and began moving her neck in circles, stretching.\n\n\"Sore?\" \n\n\"A little,\" Cricket replied, \"Sitting behind a desk makes my muscles forget what it's like to do real work all day.\" \n\nGwen glided towards her. \"Here, turn around, let me help.\" She stood behind her young friend and reached for her shoulders, gently massaging, getting a satisfied sigh and groan in response. \n\nThe fingers gently probing Cricket's muscles only paused for a moment when Tim reappeared from around the corner, tossing his robe aside as he moved towards the pool. The young woman took note of his flaccid member, never missing an opportunity to study the various states of his equipment now that she been given permission. His cock and balls bounced back and forth as he approached the edge of the pool, looking so harmless in that state, so different than when it awoke and turned into something much more serious. \n\n\"Cricket has a bit of a sore neck,\" Gwen said after he had surfaced. \"My hands are a little tired after riding all day, want to take over and work on her muscles a bit?\" \n\nTim was about to suggest that perhaps Margaret was still around but held his tongue, unsure how much Gwen had shared of their pre-dinner activities. \"Uh, sure,\" he replied simply, stepping behind the naked young woman as his wife moved away. He began to work the way he had discovered Gwen liked to be touched after she had started letting him, Cricket's shoulders near-perfect copies of his wife's. The young woman leaned back with another contented groan, the small of her back brushing against his soft member and giving it an excuse to rise should it be needed. She felt it begin to stir but did not move away, a swell of pride running through her in having caused that. Tim stayed where he was as well, quickly noting the body in front of him did not recoil at his growing cock's touch and if she was okay with it, then so was he. \n\nNone of them heard the click of Michelle's high heels until she was on the pool deck. Tim froze in place, caught in the act, while Cricket turned crimson and crossed her arms over her chest. True to Gwen's words, the young woman did not seem at all shocked. \"Will your groom be attending to Madame and Monsieur this evening?\" \n\nGwen looked up in confusion. \"I'm sorry?\" \n\n\"Your groom, Madam. Will she be attending to you this evening? There is a smaller room next to yours that I can prepare for her if you will be requiring her services until morning.\" \n\nThey all seemed to understand the implication simultaneously, Tim backing away while Cricket hurried to climb out of the pool, suddenly wanting her clothes and to get back to the stable. \"No, no, I have chores to do yet tonight, and dinner, and...\" she replied a bit too loudly, grabbing a nearby towel and hurrying to dress. \n\nMichelle looked expectantly at the woman still in the pool, as if asking for permission to allow the young woman to leave. \"See you in the morning?\" Gwen called out.\n\n\"Yes, in the morning\u2014bright and early, right?\" Cricket called back, stumbling a bit while stuffing her feet back into her boots, trying to regain her composure.\n\n\"Bright and early.\" \n\n\"Okay, good night then! See you in the morning.\" She didn't wait to be shown the way out. \n\n\"It will be just Madam and Monsieur tonight, then?\"\n\nGwen moved to the steps. \"Yes, just us.\" She allowed herself to be dried, not minding the attention paid to her breasts and sex at all. Tim received the same treatment, his flagging erection partially revived, and the couple sat poolside in their robes, sharing embarrassed smiles and enjoying one last drink before bed. They eventually rose to make their way to their room, Michelle magically appearing to escort them and turn down the bed before asking if there was anything more she might do for them that evening. \n\n\"No, thank you Michelle, I think we'll be fine.\" Gwen was moving towards her husband even before the door closed, dropping her robe and sinking to her knees in front of him as the latch clicked shut. His soft length was retrieved from beneath the folds of terrycloth and pulled out, lips gently kissing the crown and her tongue giving it a playful lick. \n\nTim laughed. \"That's a hell of a goodnight kiss.\" \n\n\"I got an urge to do this when I was watching you get your massage,\" Gwen murmured, kissing her way down the underside of his stiffening length towards his balls. \"Something I can give you that you don't get with a massage.\" At least, maybe not, the Slut offered. Maybe there's a massage style for that, too.\n\n\"You don't need to give me anything,\" Tim grumbled, gently cupping the side of her head while she worked, \"but I'll sure as hell take it.\" He was hard enough now for her lips to part and take him in, slowly sliding up and down the length to encourage his last little bit of growth. \n\nGwen patiently worked him, getting appreciative grunts and sharp intakes of breath when she found a particularly sensitive spot, teasing him towards orgasm before slowing her efforts to let him back down a bit. \"Enough,\" he finally rumbled, \"let me give you something you didn't get with your massage, either.\" She was lifted to her feet before being pushed back on to the bed, her ankles grabbed by callused hands and legs roughly spread wide. His hands found their way to her breasts even as his tongue made its first swipe from bottom to top, collecting her wetness. Tim did not show her the same subtlety he had received, instead bringing her to orgasm with insistent circling of his tongue and a mauling of her tits that had a delightfully masculine feel to it. He was mounting her even as the last tremors of her climax pulsed from her sex. \n\nTim slid into his prize in one long stroke. \"That feels so damn good every single time,\" he groaned from above her. \"Gotta tell ya, all day long I was thinking about what you were doing and getting so horny I was worried I was gonna get a hard on in front of Vince.\" \n\nGwen pushed back against his thrusts, filling herself with him, and the Slut's pride in what she had done to the poor assistant came tumbling out before she could stop it. \"Cricket told me she and the other groom thought Marco had an erection today,\" she coo'd. \n\nTim's hips came to a stop, his length buried to the hilt. \"You mean Danilo's little brother?\" \n\n\"Mmm-hmmm...\"\n\nHe chuckled and resumed his motion, a little more urgent this time. \"You musta put on a hell of a show. Betcha he started wearing it out as soon as he got a little privacy.\" \n\n\"What do you mean?\" Gwen felt obliged to ask, although she had idea exactly what he was talking about. \n\n\"I'll bet he jacked off thinking about you, probably more than once,\" Tim hissed in time to a particularly forceful thrust. \n\n\"Do you really think so?\" Detailed images of the young man naked and hard, right down to a nest of jet-black pubic hair that matched the curls on his head, came to mind unbidden, and despite the Lady's protests Gwen did nothing to chase them away. \n\n\"Maybe he's one of those guys who's into tribute pictures. He's gotta have access to the materials, right?\" \n\n\"What do you mean, tribute picture?\" \n\n\"Well, I hear some guys like to take pictures of women and, uh, decorate 'em.\"\n\n\"When you say decorate, do you mean...\" she lowered her voice to a murmur, \"come on them?\"\n\nTim nodded and grinned, and, it was Gwen's turn to laugh. \"You men have some really strange ways of getting your kicks. Did you ever do that?\" \n\n\"What, on a picture? Naw, never did. I like doin' it on the real thing...\"\n\nThe scene in her mind switched to one of Marco standing over one of her photos, stroking himself getting ready to decorate her...\"If you want to do that\u2014to me\u2014tonight, I won't mind,\" she panted between his thrusts.\n\nTim stopped again and looked down at her, a smile on his face. \"That's a great idea...\" He was quickly out of her, kneeling between her legs. \"Any spot in particular?\"\n\n\"Oh\u2014wherever you want. Is there a spot men like when they're doing this on pictures?\" \n\n\"Depends on what the picture is of, and how good their aim is, I guess...you know, a full body shot or a close-up of some, uhh, part...\"\n\n\"Like boobs, or...butt,\" Gwen continued, finishing his thought.\n\n\"Yeah, like those. Or their face,\" he added helpfully, feeling foolish for even thinking that information was necessary. \n\n\"Of course. That doesn't surprise me at all.\" At least any more, she thought. \"Would you like to do that? You know, mark me?\"\n\n\"You don't mind? You sure?\"\n\n\"I know you like to, so...\"\n\n\"Don't know why I do,\" he said with a chuckle, hurrying to place himself astride her chest, \"but there's just something really kinky about it...my way of getting' my kicks, I guess.\" \n\n\"Mmm, I'll bet...I like it when you're kinky.\" Gwen looked at the dark red helmet just beyond her chin, Tim's fist already making it darker with the blood he was squeezing into it. \"Just tell me when you're ready, alright?\"\n\n\"Will do.\"\n\nGwen looked up at her husband, his face a mixture of concentration and intensity as he pleasured himself with one hand while gently groping her breast with the other. She remembered Michelle's apparent disregard for the nicety of knocking before entering a room and wondered what her reaction would be if she did so now. Probably no different than when she had walked in on Tim's massage, pausing after setting down the full wine glass to smile at the cock Margaret was expertly handling. No, Gwen mused, his choice of targets would probably not shock her at all\u2014in fact, she might even offer to help clean up Madame after. \n\n\"Close your eyes,\" Tim commanded, and for several seconds she heard the slickness his fist was stirring and his harsh breathing. Both suddenly stopped a half-second before the first hot jet struck her on the forehead. She recoiled a bit even as the second pulse landed on her nose and in her nostril, getting a snort and a soft yelp from her as the third pulse landed on her lips and open mouth. There was no Michelle to help with clean up, but the man who made the mess was happy to get her a washcloth.\n\nGwen lay awake for some time after, waiting for sleep to come, feeling more than a little guilt over the fact that the man she was currently thinking perverted thoughts about was not the one whose arms she was lying naked in.",
        "She would have liked to have been a fly on the wall of wherever Marco was staying tonight, just to see if Cricket, and Hannah, and Tim had been correct in their assumptions. Maybe he had printed out a picture, but of what? She had no idea what Danilo had captured, would there be anything erotic enough to inspire a young man to masturbate to it? Plenty, both Lady and Slut agreed, and the possibilities were reviewed. Something where her breasts or thatch had been visible beneath translucent fabric? A close-up of her face? She couldn't imagine one that would be sufficient to induce the young man to come, but wanted to think there had. \n\nOr maybe he hadn't even needed them, that his imagination would be enough, thoughts of him doing things with\u2014or to\u2014the nearly-naked woman that had teased him all day. In her mind he was naked on the bed, stroking a penis that seemed a little too large for the body it was attached to. He was thinking of her...\n\nThe Lady harrumphed at the conceit, but the Slut had firm ideas what he would be imagining. She was naked and spread before him, or better yet he was in her, in the very same position Tim had been in a short time ago. The thought of her sleeping husband replaced by the naked young man brought her up short, and she pushed the thoughts away. Gwen let the arousal that had again been awakened simmer, reminding herself tomorrow started early. \n\n***\n\nThey were under the covers when Michelle brought their coffee in the next morning. Not that it matters, Gwen thought with a smile, she's pretty much seen it all anyways. Breakfast was a more hurried affair than the previous day's, both Vince and Rose waiting for their charges outside while the morning sun was still barely peeking above the eastern tree line. The stylist tried to make conversation during the drive to the field a couple of miles over, but Gwen was lost in her thoughts, concentrating on the task ahead. If the previous day's exercises had been any indication, the equestrian skills needed would not be at all demanding. It was the other part, though...the nerves she had expected, the excited anticipation she had not. \n\nThe ATV exited the pine forest into an open field covered with waist-high grass, the RV from yesterday sitting a short distance from a crude log lean-to, a horse trailer with Dart tethered to it not far off. She quickly counted four people standing nearby, the same group from the day before. Danilo strolled towards where Rose was parking near the RV. \"Good morning!\" he called out brightly.\n\n\"Good morning...\" \n\n\"Sleep well?\"\n\n\"Alright.\" It would have been better if I hadn't been imagining what your brother was doing, she added silently while glancing over his shoulder at the young man. \n\n\"Good! Well, not to rush you, but I want to make sure we get the right light this morning, so if you want to take a look at the tack that's been picked out for your horse, we can uhh, get you ready...\"\n\nShe gave Dart a quick greeting and look-over before following Danilo to the lean-to, the others trailing behind. The interior was every bit as rough as the exterior, and Dart's tack for the day matched the building. The bit was well-made unpolished iron, the traces thick black strips of leather. It was the saddle that interested her the most, something unlike anything she had seen before, a black leather frame supporting a mesh-like material. \"This is different,\" she murmured to no one in particular.\n\n\"Mrs. Danning's design, ma'am,\" Hannah offered helpfully. \"The fabric is meant to wick away sweat from the rider and keep bare skin against leather to a minimum.\" The young woman hesitated and blushed.\" She, uhh, has guests who like to ride au naturel from time to time...they find it quite comfortable and she thought you might, too.\"\n\n\"Oh\u2014Uh, I\u2014thank her for me.\" Hannah smiled and nodded as Gwen turned to the young photographer. \"Everything seems alright?\"\n\n\"Good, good\u2014why don't we head back to the RV so you can get ready, then.\" He accompanied her to the open door where Rose stood waiting, turning to attend to his own list of tasks as she entered. \n\n\"Wash and dry your hair, just a little makeup,\" Rose explained as she handed Gwen a robe. There was no offer of privacy while she got out of her clothes, and after a moment's hesitation decided it would have been a silly gesture, anyways. She was in the robe and the styling chair just a moment later. \n\nHer hair was just dried and combed after it had been washed, left to hang loosely while makeup was again sparingly applied. \"Okay, wardrobe,\" Rose announced after the last swipe of black eyeliner. \n\n\"Oh, I didn't know...\"\n\n\"There's not much,\" the stylist replied with a smile, \"but what there is...why don't you take off the robe and we can take care of it.\" Gwen stood nude as the woman produced a pair of black sandals, two rough leather cords hanging from each, and knelt before her. Her foot was gently lifted into each, the cords wound about her calves to secure them. \"Oh,\" Rose said casually as she raised herself enough to reach a nearby pair of scissors before settling again, \"as long as I'm down here,\" her fingers plucked at a tuft of Gwen's thatch as she looked up, \"do you mind?\" Her leg was gently prodded up onto a nearby chair, and her sex was open to the woman's face just inches from it. \"That's better,\" the stylist pronounced after a few cuts and stood. A collar was next, this time a wide black piece, roughly cut like all of the other leather. \"Not much else, I'm afraid,\" Rose said apologetically, handing her a pair of black kidskin gloves. \"How's it feel?\" \n\nGwen managed a smile of her own. \"Like I'm not wearing clothes.\" \n\n\"If you don't mind me saying so, it suits you...you have a beautiful body. Danilo wanted to make sure this is the look he had in mind before we get started.\" The woman leaned out the RV door. \"I think she's ready.\"\n\nGwen heard the sound of his tramping on the steps a moment later. The young man entered and critically evaluated his model before averting his eyes out of instinct, bringing them back just a second later. \"Yup.\" \n\nShe felt a strange thrill at being the object of this man's attention and smiled. \"Yup?\"\n\n\"Yup, this\u2014you-are exactly what I had in mind. I'm, uhh, kind of a geek, big into comic books, superheroes when I was growing up, you know, that kind of thing. The first time I saw you ride you reminded me of some sort of warrior princess\u2014\" the Lady rolled her eyes, oh please\u2014\"how serious and focused you were, how well your horse responded to your authority, how you, uhh, acted and looked. So I kinda got this idea in my head...\" he smiled sheepishly. \"You look incredible.\"\n\nShe blushed. \"Thank you.\"\n\n\"You okay to ride this way?\" \n\n\"Too late to back out now.\"\n\nHe smiled reassuringly and handed her the nearby robe. \"Put this on for now and come on out\u2014it's kind of chilly out there.\" Cricket and Hannah were nowhere to be seen, but Marco was standing there by the door, the young man making an obvious effort to avoid looking at the woman exiting the RV as he handed his brother a camera. He's going to have to look sometime, the Slut taunted, and Gwen risked a glance down at the man's midsection while he was occupied. He looks 'normal' down there, she thought, at least as far as her limited experience with the male anatomy went. The brothers talked quietly for a moment, Danilo reviewing one last time what he wanted from his assistant, then turned back to Gwen. \"So, umm, this'll pretty much be like yesterday...\" Hardly, the Lady opined. \"You walk to the barn, saddle up, go for a ride, I'll let you know what I'd like you to do when I want it. Sound okay?\"\n\n\"Sounds okay.\" \n\nDanilo squinted up at the brightening sky, studying it. \"Light looks good, so, uhh...Rose'll be nearby with your robe for when we reset or take a break...\" he motioned to a spot a few feet from where they stood, \"so maybe you could give it to her now and you can start over there?\" \n\nGwen took a breath to steady herself, knowing the moment was at hand, a strange mix of fear and excitement rolling over her. Despite the Lady's plea to at least leave the robe on until she was in her assigned spot, Gwen untied the sash and slipped it off, handing it to the stylist and getting her gloves in return. The Slut wanted very badly to see Marco's reaction, but Gwen pushed the distraction away and focused on her task, stopping where the photographer had pointed and turning back. \"Here?\" \n\nHis camera was already up and working. \"Perfect. So, just start walking towards the barn, okay?\" \n\nThe wide swatch of grass before her was emerald-green, shorter than the golden-yellow field beyond the lean-to that was her target. Gwen collected herself and strode forward with purpose, eyes up and forward, shoulders back, acutely aware of the situation she had put herself in. Before this craziness all began, Miss Ritter's demands that her student carry the same poise and confidence in the ring no matter how trying the circumstances, even naked, had been nothing more than a metaphor, an impossible scenario; now, it was a nerve wracking, thrilling reality. She had prepared for it yesterday of course, and her outfits had been certainly revealing enough to test her nerve and focus. But today was a whole new level, the ultimate test of what Miss Ritter had prepared her for all those years ago.\n\nGwen felt the lift and fall of her buttocks with each step, the slight bounce of her pert breasts with each footfall. The chill of the humid morning air against her bare skin raised goosebumps, but it was excitement that gave her nipples their straining erectness. This was so wrong, so nasty, so perverted, and she exulted in the moment. She knew Marco was trailing behind with a perfect view of her bare ass...what would he find most arousing when he was in his bed? Concentrate, she reminded herself, there's a job to do, and willed herself to not look at the photographer orbiting her, snapping away. \n\nGwen continued into the gloom of the rough lean-to, the air a bit warmer and fragrant with hay, ignoring Danilo just a couple of feet away as she put her head to Dart's. \"Think you can make me look good one more time?\" she murmured, and the horse lifted his nose in response. Gwen groomed and saddled at her normal measured pace, very aware of just how close the camera was every time she bent to pick up a brush or some tack, knowing the camera could not miss her upturned ass and the treasure below it.\n\nSandals, gloves and collar were all she wore as she led Dart from the barn, Gwen musing her horse was more dressed than she was. Danilo called a temporary halt while he adjusted some settings and reviewed what he had taken so far, Cricket and Hannah appearing from nowhere to tend to both horse and rider should anything be needed. Rose was there as well, but the robe she offered was rejected. They've all seen me naked, Gwen reasoned, her expression calm and impassive, almost daring the others to look. No one was able to resist the dare, sneaking furtive glances before pretending their interest was elsewhere. \n\n\"Everything going alright?\" Cricket asked in a murmur as she checked a cinch that she knew didn't need checking\u2014Gwen had done it, after all. \n\n\"I'm fine, you?\" \n\nThe young woman laughed. \"You look calmer than I do! God I hope I have half of your confidence some day!\"\n\n\"I might look confident, but inside...\" Gwen was surprised to hear herself admit that, a direct disobeying of Miss Ritter's instructions to never show anyone weakness. \n\n\"Then you make it look good, and I still want to learn how you do it.\" Cricket and the others moved away as Danilo announced he was ready to resume. \n\nJust like the previous day, Gwen was asked to mount and dismount several times, this time her breasts openly swaying and bobbing with the movement, her sex no longer covered by even transparent fabric and lewdly opening wide to the camera and anyone standing behind her. She did notice that was the spot Marco had chosen to stay in even as his brother continued to circle and shoot.\n\nSatisfied, Danilo sent her off into the tall grass beyond, calling for simple lines and moves as he had done the previous afternoon, horse and rider performing them flawlessly, the distraction of performing them naked held at bay by Gwen's training. \n\nThere was another distraction to cope with as well...it was while sitting erect in the saddle as Danilo snapped away at a standing pose that Gwen discovered Mrs. Danning's saddle included a firm ridge of leather underneath the yielding fabric that lined up nicely with the clitoris above it. The design was diabolically clever, keeping the hard strip out of the way of a rider in motion to avoid any painful smashing against it, but at rest, it presented something more tempting. Even the fabric covering it seemed different, softer and smoother as if to make sliding against it even easier. She fought to avoid the call of the leather ridge but found herself losing the battle as time went on, surreptitiously allowing her weight to briefly press against it during halts and breaks, eventually allowing for a quick flex of her hips to grind against the hardness as the morning wore on. She was thankful for the rising temperatures as the heat and the sweat it was causing could be blamed for the wetness she was certain was staining the saddle's fabric. She had no such excuses for her still-erect nipples. \n\nThe spot was large and very evident when she removed the saddle once she was directed back to the lean-to, the splotch darker against the dark fabric. Gwen keenly felt the arousal her bold performance had caused as Dart was tended to and wondered if her excitement was obvious enough to be apparent to the camera just a few feet away. Towards the end of her ride she had begun to idly debate just how an orgasm might be concealed or explained away if she were to give in to the saddle's call, the thoughts finally dismissed as foolish. Long-practiced training prevented any loss of control, although Gwen knew her desire would eventually have to be satisfied.\n\nAnd then it was over. Danilo announced he had what he needed and how pleased he was with it, Cricket and Hannah were hurrying to get Dart back to the stable and into the trailer for his ride home, and Rose was handing back the robe. Much to the Slut's joy, a quick glance at the young assistant's midsection did seem to indicate he seemed more filled out there than she remembered. Moments later Gwen was fully dressed and saying her goodbyes, outwardly calm but almost giddy inside over what she had just done, trying to comprehend the whirlwind that had been the weekend and the suddenness with which it seemed to be ending. \n\nRose chattered happily on the way back to the bungalow, telling her passenger how beautiful it had been to watch and how happy the photographer had seemed. Hugs and sincere thank yous were exchanged when she was dropped off at the front door where Michelle was waiting with a glass of wine for her, escorting her up to where Tim was again sitting by the pool, this time in jeans, t-shirt and apparently ready to go. \n\nMichelle turned to Gwen. \"Shall I tell your masseuse you will be along shortly?\" \n\nGwen turned to the young woman, a little startled. A massage would be nice if it was anything like yesterday's. It would also be short, given her current condition-too short, the Lady suggested, and she didn't want to give the impression that was what she had come for...\" \"Thank you, that's very nice, but we'll be leaving as soon as my horse is brought back up to the stable. We have a long drive home...\"\n\nMichelle seemed surprised. \"Did Margaret somehow displease you yesterday? If so, I can arrange for another\u2014\"\n\nGwen cut her off with a smile. \"No, not at all, she was wonderful, but as I said, we should be getting home and I'm afraid I might want to stay and relax after she...finishes. But I would like to take a shower, if that's alright.\"\n\nThe young woman's face brightened. \"Of course! But you are allowed to stay and relax as long as you wish! Madame Danning made it clear you are welcome here for as long as you like.\"\n\n\"I would love to do that,\" Gwen replied, \"but we have a home and business to get back to.\"\n\n\"I see. I will start your shower for you then.\" \n\nHigh heels clicked rapidly across the floor, and Gwen turned to her husband. \"Want to come wash my back?\" \n\nTim gave her a look of mock disinterest. \"I might get wet. I already took a shower...\"\n\n\"Then I guess I'll have to do it myself.\" She hesitated and smiled mischievously. \"Or ask somebody else to do it.\" \n\nTim laughed and rose. \"I wouldn't mind watching that.\" \n\n\"If you can watch you can do. Come on.\" They left a line of clothes across the bedroom to the shower and were under the already-warm spray a few moments later. Her back was washed as she had requested, but Gwen had another task in mind for the naked man behind her. She grabbed his hand, bringing a finger to her mouth and sucking for a moment before guiding it down to her cleft. Tim got the hint, circling the hard nub while he kissed her neck and his other hand palmed her tit. She moaned, pushing back into the freshening hardness wedged between her cheeks and came before it had a chance to be put to use, trusting Tim to hold her up as her knees grew weak and she put her own hands on the tile wall for support. \n\nSpent but with strength returning, Gwen bent forward, pushing the man behind her back, offering herself to him with a suggestive wiggle of her hips. He gladly accepted. With a push and a groan Tim sank deep, her hands still on the wall before her to brace for his pounding. \n\nThe warm spray rained down on the joined bodies as he roughly grabbed her hips and thrust, taking his time, enjoying the view of his wife before him and the sensation of his cock gripped by her tight cunt. \"Fuck me as hard as you want,\" Gwen panted over the sound of water falling on tile and the wet slap of his hips against her ass. Her encouragement spurred him on, grunting with each thrust. She wanted more, wanted to be well and truly used by this man, and turned her head to tell him so. \"Fuck me until-\" Her words suddenly stopped at the sight of the bathroom door opening, Michelle stepping in to put down the drinks they had left by the pool. \n\nTim looked to where his wife's attention had been drawn to. Michelle smiled at the couple in the shower as the couple looked back, both finding the presence of an audience incredibly erotic. With a final savage thrust and grunt he came, lewdly trying to push his seed deeper with each pulse, looking back at the woman in the doorway the entire time, making a show of this display of male sexuality at it rawest. \n\nGwen felt him give a last weak push along with a short exhale, and Michelle gracefully retreated. Tim chuckled, withdrew, and gave Gwen a playful pat on each cheek. \"Sorry. I couldn't have stopped\u2014\"he nodded to the door\u2014\"if I wanted to.\"\n\n\"I didn't want you to stop,\" she giggled, turning to kiss him. \"I'm sure she's seen a lot more than that. But to be honest, I don't know why they bothered with doors in this place, though. We should go.\"\n\nIt was still another hour before they left the bedroom, the bed offering a temptation neither could resist, both disappointed Michelle had not come to look in and see what the delay was."
    ],
    "authorname": "BusyBadger",
    "tags": [
        "husband",
        "wife",
        "photography",
        "cmnf",
        "public exhibition",
        "doggystyle",
        "outdoors",
        "voyeur"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-03-ch-29"
}