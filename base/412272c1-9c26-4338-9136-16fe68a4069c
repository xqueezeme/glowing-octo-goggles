{
    "title": "My Only Talent Ch. 13",
    "pages": [
        "Chapter 13\n\nSlave Training, Horse Trading, and F1 Entertaining\n\nNote: The descriptions and accounts in these stories are fictional and do not portray any actual people or events. \n\nMy mood improved slowly on the way to Lara's place as the girls regaled Rodney Driver with tales of our adventures at the party, and Lara asked him about doing some driving for an unexpected set of new visitors that her dad was entertaining next week during the run up to the Formula One race. He said he has some gigs already but he would hand them off to his cousin Hollywood or another driver and cover Lara himself if he could. He also said he was working on some special deals for transportation to the race from downtown hotels, and he had deals to drive a bunch of politicians around this week from now until the day after the election. He also related his information from what he called the limo driver gossip network about some of the party attendees who were Russian mobster types and that there were lots of FBI and DPS guys in town watching them. \n\nSuzanne suddenly said something like, \"Dolbo yeb!\" and slapped her own forehead. \"That's what they were talking about! There were some very suspicious looking guys speaking street Russian, including that guy 'Pavel' that was coming on to you, Lara. I think you should stay away from him. He is trouble!\"\n\nLara said, \"But he was so sweet to me. He called me his 'pretty pizda'!\"\n\nSuzanne looked angry. \"That's slang for 'cunt' and not in a nice way!\"\n\nLara looked aghast. Rodney took up the conversation again. \"Do you speak Russian Suzanne? The other drivers say these Russian guys are stone killers, looking for some kind of score during the race.\"\n\nShe looked worried. \"Yes, I speak it fluently. My grandparents grew up in Russia and they taught me when I was an infant, and then I lived there for four years with my parents when my father was posted in Moscow when I was still very young and got total immersion and lots practice. My grandparents also taught me why they were so desperate to get to America!\"\n\n\"What did you hear the Russians saying, Suzanne?\" I was wondering what 'score' they might have in mind.\n\n\"Something about an Italian package to keep hidden, and there was plenty of excess testosterone and emotion when Pavel told the other Russian guy to keep his mouth shut!\" \n\nWe rolled up to Lara's and got out, thanked Rodney, and headed upstairs. \n\n.....\n\nUnnoticed across the street, a windowless van with a cable TV logo on the side pulled into a parking space, and antennas and some telescope looking things swiveled toward Lara's apartment and stayed pointed there. There was a guy in a cable company uniform shirt much like Eddie Estigoy's who was driving, but there were three other guys in suits in the back sitting in comfortable swivel chairs with headphones and lots of video screens and keyboards that settled in for the night. \n\nThe oldest looking guy said, \"You guys are sure the blonde with the fancy apartment is the one that our 'translator' came on to?\"\n\n\"Yes, boss\", said the most junior agent. \"He's got good taste in women, at least. I wonder if she is stupid enough to let him fool with her. I'm using facial recognition to try to ID her by crossing the name with the leases in the building.\"\n\n\"Run all the others that rode with her to the party, too, assuming they are ESU students, let's see who our DPS friends are following and why!\" All three agents then studied their computer screens and typed frantically. \n\n.....\n\nWhen we got up to the apartment, I gave Lara a little kiss and said, \"Did you once tell me that you had a massage table in the closet?\"\n\nShe smiled. \"Yes, my father sent it to me when I told him I was signing up for one of the ESU informal classes for massage, but the schedule conflicted with the only section offered of the language lab I needed, so I couldn't take the massage class.\"\n\n\"Would you and Mille please get it out and set it up? I might want to give some special massages this afternoon.\" Her Suzie spiked and she went looking for Millie. I told Suzanne I needed to make a quick phone call, and ducked into the kitchen, and dialed on my mobile.\n\n\"Mom? Yes it's me. Yes I still live and breathe. I need to ask you about bringing a guest for Thanksgiving.\"\n\n\"No, it's not my roommate; she's a friend of a friend. Yes, she. No, I'm not sleeping with her, but I am dating her friend. Yes, she knows all about my relationship with her friend.\"\n\n\"Well, sometimes she does and sometimes she doesn't, so it's complicated. I want to talk to Dad about it, too. When does he get back?\"\n\n\"Uh-huh. OK. Well we expect to ride with Alley Shitty... What? OK, OK. Anyway we expect to leave Wednesday about noon so should be there by 6 at the latest even if Alley drives. OK. Love you, and tell Dad we need to have a long talk with just the three of us when I am there. What? Oh, I think we will go back Sunday about noon. OK. Love you too!\"\n\n.....\n\nIn the van outside of Lara's apartment, the young agent who had intercepted the call pulled up the caller ID data and address for the landline phone on the other end of the call and quickly had an ID on the 'Master' who was in fact an ESU freshman. \"Fuck me!\" the now whining agent exclaimed. \"That guy is a freaking first semester freshman in engineering. I never even saw girls that hot until I was a senior!'\n\nHis boss chortled. \"There weren't any girls that hot at MIT, Dweeb Boy, and when you were a freshman you were only 15, so even if there had been they wouldn't have been caught dead with you!\" The other agents roared. Dweeb Boy kicked off a software spider that would monitor Robbie's phone, crawl the agency database for any other recorded conversations, and build a table of all his other calls and texts try to connect them to names and addresses. He watched the network node icons fill up the screen, and other bots began to crawl all the other phones he had touched, and waited patiently for Bayesian inference to work. In the meantime, he wished he had video and thermal from upstairs, not just audio. \n\n.....\n\nMy mother had chastised me on the phone for using such a derogatory nickname for the daughter of one of our neighbors that I went to high school with. The daughter looked like Ally Sheedy, the actress, but she was such a controlling bitch that all the kids called her Alley Shitty. She naturally had a crush on me all through high school, but I couldn't stand her. She was very nice looking, and smart as hell, but she was also a pushy mega-bitch that always wanted things her way and had to have the last word on everything. But she did have her dad's old SUV, and her mother made her promise to give me a ride up and back for both Thanksgiving and Christmas break. I had already emailed her and she said she had plenty of room in the Suburban so bringing a guest would be no problem. Like my mom, she seemed to assume that I was bringing my roommate, and I did not make any effort to disabuse her of that notion.\n\nBy this time Lara and Millie had the massage table set up, and it was the kind that unfolded and rolled in like a hospital bed, and then sat on locking casters. It had multiple height adjustments and replaceable pads that could be set up for a chin rest, back angle blocks, and stuff I had never even seen before. Top of the line all the way, including a thermostatic heater, and it was easily the finest table I had ever seen. I set the thermostat to 38, put a big cotton towel on it, and gave it a few minutes to warm up. My plan was to start with Suzanne, who did not yet fully realize the extent of my massage skills since I had only given her a brief and limited one on her couch. I had Suzanne get up on the table on her tummy and covered her with another towel, and told her to just relax for a few minutes. \n\nOnce I got Suzanne fully relaxed with a traditional therapeutic massage I was going to give her the full Suzie signal treatment, too, using my talent to sense every nuance of her response to my touch, and try to give her intense and plentiful orgasms in the shortest possible time, to make sure when we had our little talk about wants and needs later tonight that she kept things in proper perspective. While doing that, I was going to let Millie warm-up Lara, treating her very roughly and taking her right to the razor's edge of too much kink and pain and getting her frantic, before I would come in and try to give her as many orgasms as I had Suzanne, to give her something very memorable to think about the next time some Russian asshole tried to flirt with her, but still leave her wanting more when I left to take Suzanne home. \n\nMillie and I began strapping Lara to the trapeze in the bedroom, with Suzanne out of sight but within earshot in the entry hall, relaxing on the massage table, but hardly patiently. Millie went to work on Lara, and I went in to start on Suzanne.\n\n.....\n\nOutside in the van, all the little software bots began to stitch the big picture together, and ID's and collateral data began to pop into green windows on the screen. The youngest agent whistled loudly. \"Oh, fuck, boss, our lives just got a lot more complicated!\" \n\nThe older agent looked irritated. \"For a kid with a supposed genius level IQ, you certainly have a narrow and predictable vocabulary. Expand and expound, please, Dweebo.\" \n\n\"The blonde is the daughter of an insurance billionaire from Dallas who does hundreds of millions in business with most of the F1 sponsors, but that's not the half of it. The hot looking dark haired girl in the red leather outfit is on our facial recognition watch list! She's Ambassador Pliskin's daughter!\" \n\n\"Holy Fuck!\" exclaimed the much more senior agent Jones, all evaluation of vocabularies now forgotten. How far up the line did he have to take this to save his own ass? He was all for showing initiative, but if anything happened to that girl the shit would fly from all directions and most if it would land on him. He told the other guys to keep digging, while he began to review his options. \n\n.....\n\nI had given Millie very specific instructions on how to work Lara up into a frenzy, which should take about 90 minutes before I needed to be there, which also defined my window of opportunity with Suzanne. She was now surprisingly relaxed and comfortable, in a way that only a woman on a well heated massage table can be. I listened briefly to her Suzie signal, and she was hoping for some rapid escalation and hard fucking sooner rather than later, so I was going to give her total relaxation, followed by slow ramping excitement until she literally begged me to fuck her. I knew I could not refuse a lady. \n\nI shut down my Suzie receiver, and just concentrated on pure massage technique, and feeling Suzanne's incredible musculature. I was fortunate to have such a delightful subject, and everyone who learned massage should get to work on someone in that kind of shape at least once just to understand how the body should and could respond. She was tight, she was pumped, but she also had circulatory responses most other people could only dream about, and I felt her body instantly respond as I worked on her. As I started at her feet and worked her muscles with almost as much force as I could use, she relaxed even further and just let my hands carry her away on a flood of pleasure, opening capillaries, and endorphins slipping into her bloodstream from released tension. Her breathing became steady and strong, and her features relaxed and she appeared very calm. I then tuned into her Suzie, and began a lighter and slightly teasing touch that was as much a caress as a massage. \n\nI had such a connection to her that I could sense her responses through her Suzie signals at the same time she herself recognized what was stimulating her, and I took full advantage of that. Her thighs were sensitized now, and she was very conscious of my alternating light and strong touch. I found a particular grip across the top of her thighs that seemed to speak directly to her pussy, and shared her astonishment at how wet she was becoming and how quickly my touch increased her flow. She was surprised at the pungent smell she was producing, but I was delighted. I sent her a Suzie blast that combined acceptance, trust, admiration, and just about everything I could send her short of just screaming out \"I love you\" which might produce unknown and undesirable consequences. She smiled, then looked a little worried, but did not open her eyes. I increased the strength of my motions on her thighs, using enough force to begin to slightly displace her nether lips and stimulate them. My hands were still 8 inches away from them, but my intentions were clear, and she liked my plan. Doing my best to tantalize her, I would move my hands up her thighs getting closer and closer to direct contact with her outer lips, manipulate her muscles to make them move a little more, then move back down to just above her knee and start the whole process again. \n\nI could read her Suzie increasing in anticipation as my fingers moved north, and she began to tighten up her thigh muscles to try to stimulate herself before my hands could get there. Every time she did it, I reduced the forcefulness of my massage to frustrate her. My only challenge was that the pheromones that her preternaturally perfect pussy was releasing into the air were acting directly on my lizard brain, clouding my judgment. But I had to get some information out of her before I went literally went completely fucking crazy on her. I forced my still functioning speech centers to begin the interrogation, starting my questions when my hands were at the bottom of her thighs, and kept moving up as long as I was getting answers. When she hesitated to answer, my upward progress would stop.\n\n\"So, Suzanne, everybody at the party seemed to already know at lot more about Erminia and Sapiento Gallo than I did, huh?\"\n\nShe laughed, saying, \"Well, you are not exactly a euro-centric business man, auto racing nut, or soccer aficionado. They might not have known who Paul Allen is, or Stephen Ross, or Alex Spanos, or James Irsay, or Stan Kroenke, for example, but you do, don't you?\" \n\n\"Billionaires who also own NFL teams?\" I asked.\n\n\"Right the first time, my animal! Sapiento probably tops the European billionaire list, although he hates publicity, and he owns two premiere European football clubs, a top rated Formula One team, and a basketball team. Those are just his hobbies, as he also owns several global shipping lines and industrial companies, and such significant stakes in most publicly traded companies worldwide that hedge fund managers often have to go through him to plan hostile takeovers. When he married the much younger Erminia, the beautiful widow of a famous fiery footballer and champion coach who died prematurely of a heart attack a few years ago, it was all over the popular press in Europe. It was almost as big a deal as when Jackie Kennedy married Aristotle Onassis. Spear Overtop scored a major coup when he got them to that party, and I am sure they found it refreshing that you didn't obsequiously suck up to them like most people do.\"\n\nI considered this for a moment. My father had taught me very few absolutes, but never sucking up to anybody was one of them. It was a combination of his egalitarian American values and his salesman's equivalent of the old military saying that he verbalized as, 'Those who know don't actually say anything, and those that say something don't actually know anything.' His idea was that if you want to sell something to someone important, don't suck up to them because if they do respond to it then they probably aren't all that important. Real decision makers appreciate direct and honest communications, not bullshit. If they are the decision makers and you can sell them with bullshit, they will soon be replaced by better decision makers anyway. \"That explains a few things. So Brujo Lagoria manages Sapiento's money?\"\n\n\"Yep, he is his most trusted advisor, and most of the business executives, money managers, and entrepreneurs in Europe would cut off a finger to get to talk to either of them one on one for five minutes, much less play a sex game with their wives and then sit with all four of them at lunch for an hour like we did. I will have a story to tell at the dinner table during Christmas break that will impress even my father! And most of the younger crowd that spoke romance languages was either part of Sapiento's entourage or trying desperately to meet him. The two young couples that I managed to enslave in the game all worked for Sapiento; for his holding company, his shipping line, or his F1 team. The fact that they got invited here this many days before the first American F1 race in years means that Sapiento and Brujo consider them very promising executives, indeed. \n\nThat gave me an opening. \"So will you tell your father what they whispered in your ear?\" When she hesitated, I slowed my progress up her leg, and she stretched toward me a little, urging me on. I waited her out. \n\n\"Well\", she smiled like a Cheshire cat, her eyes still closed, \"They propositioned me, inviting me to spend the rest of the week in bed with all four of them, or any combination of them that caught my fancy!\" She opened her eyes and gave me a smoking hot look that made me blush. \"And naive little Suzanne, perhaps foolishly, told them that they would have to talk to you about it, in the spirit of risk and return and sexual honesty, and all that jazz. That's why they looked at you like you were from Mars, because they just couldn't believe my response.\"\n\nI sent her another adoring Suzie blast, and continued my progress up toward the top of her thighs. \"Well it certainly sounds titillating, but maybe not the best idea from a risk standpoint. I would rather keep working on Nora. By the way, I am going to invite her to Thanksgiving as soon as I see her. On another subject, I did not like the look of the Russian guy that came after Lara.\"\n\nShe snorted. \"Oh I liked the way he looked just fine, but I wouldn't want to turn my back on him for a femtosecond. I don't trust him and neither should Lara or anyone else. He's got those 'dead eyes' that make me shiver, and his Russian dialect was pure Siberian gutter snipe, even though his English was very polished. That makes me doubly nervous about his background and training.\" She paused and drew in a deep breath. \"Are you ever going to actually touch my pussy?\"\n\n.....\n\nOut in the van, Dweeb Boy was frantic to try to improve his reception from the microphones they had placed in the apartment and the lasers they were bouncing off the windows. Unfortunately, wherever Robbie and Ms. Pliskin were was nowhere close to their good microphone locations, and he was only getting about every tenth word of their conversation. He caught reference to 'Sapiento' and his working botset quickly made that connection, and he tried changing the phasing and diversity mix relationships between his sources just as he heard Ms. Pliskin say, \"Are you ever going to actually touch my pussy?\" The other agents looked askance at him when he spit out his coffee and sputtered and coughed. Then he tried to look serious again and concentrate.\n\n.....\n\n\"Maybe\", I said pointedly. \"What exactly did you mean by stretching the rules a bit with regard to those two couples?\n\nShe laughed again. \"They begged and begged and when they all got a several questions right and we won a challenge because of it, staving off me losing them as slaves, I gave them a little reward. I unzipped my nipple covers and let them suck on my nipples for a while. I suppose that really was inside the boundaries of the soft swing rules, wasn't it?\" I said nothing, then she continued, \"But I was a good girl and left both of the bottom zippers closed when they kissed my leather pants, even through those two women were about ready to chew through the leather to get to my pussy! I think that talented Tammy could have made me come in a few more seconds, even through the leather. That was pretty hot, and it's why I was so horny when I saw you on the way to brunch!\" ",
        "Maybe I figured I had gotten all the information I could, or maybe her pheromones had captured me completely, but I decided it was time to touch a lot more than just her pussy. She was ready for penetration right now, but I wanted to get her to the point of demanding it. I began with gently kissing her thighs and legs, leaving little trails of saliva to evaporate and cool my tracks. She shivered, and her Suzie signal stuttered. I smiled at her adoringly, but kept working slowly. I breathed heavily on her mons, and she reached out to try to grab my head and jam it onto her snatch, but I dodged and kept kissing her thighs. I lifted her butt up off the table and very obviously looked at it, then blew some air on it too. I gave her a few wet licking kisses on each buttock, and then put her back down on the towel and settled in just in front of her, making it obvious that her pussy was my next target. I started about an inch outside her outer lips, with gentle kissing and licking, until her Suzie signal begin to pulsate. I circled all the way around her snatch, very gently licking her anus as I moved from right to left under her snatch and began a clockwise journey back around. Her breathing got ragged, and she began to turn her head from side to side, moaning softly. When I had completed a full 360 degree circle, I moved my head like I was going to work on her inner lips, and then started circling her outer lips again. Then I got the response I was hoping for, as she said loudly \"Damn it! Eat my pussy!\"\n\n.....\n\nThe other agents were beginning to wonder if Dweeb Boy was developing asthma, as he snorted again loudly and the headphones fell from his head, and he juggled them back into place clumsily. \n\n.....\n\nI moved on to her inner lips and kept up the gentle pressure, reveling in her growing wetness and increasingly loud breathing. She did have the most wonderful pussy ever, and it was calling out to me sweetly. I concentrated on her Suzie signals and when her modulation sent an image of me sticking my tongue into her strongly, I just barely touched her clit with the end of it and then went back to work on her inner lips. When her Suzie told me she was ready, I began flicking her clit, closer and stronger. Her signals told me exactly the force and timing she craved, and in ten licks she had her first orgasm, expelling a noisy breath. I upped the ante with more force and frequency, and soon she came again, this time squirting a little. She tasted so good. The third time was a charm, and she squirted very strongly, with a pelvic thrust lifting her butt off the towel, and then made her unique little sneezing noise that signaled a really good orgasm.\n\nThat was my cue to position myself above her and kiss her gently on the lips. She sucked my tongue into her mouth so hard that I was afraid I might not get it back. I put most of my weight on her hips but did not enter her, waiting for her to release my tongue. When she did, I took her head in my hands and rested half of my weight on my elbows resting just under her armpits, rubbing my cock against her outer lips. My plan was to try to just tease her clit with my dick without entering her, but I had underestimated her strength. She grabbed my ass, gripping my buttocks with both hands, spread her legs a bit and just muscled me right into her pussy before I could even react. She hooked her legs behind my knees and wrapped me up like an MMA fighter's death grip, and I began to worry that when I finished she might tear my head off and eat it, like a black widow. \"Fuck me, fuck me, fuck me!\" she cried at the top of her lungs, and I responded spinally, penetrating her as deep as I could. Luckily, I was in the zone: my cock felt like wood, and I was not even close to coming. I was merely an interested observer, marveling at how strongly her pussy gripped me, how perfectly we moved together, and how loudly her Suzie signal was ringing in my head. I had never felt such a connection with anyone. It was almost like masturbation, as I was so connected with her that I could thrust and move just so to please her the most. She came twice more, squeezing me so hard around the shoulders that I had to really work to expand my ribs enough to make a full inhalation. \n\nSuddenly I was beginning to feel that I might come soon, too. I leaned into her and said in her ear \"I am going to come in your mouth, so get ready for me, beautiful, and do your thing with your lips and your lungs to keep me hard!\"\n\nI was not sure she heard me, until she put her hands on my thighs and pushed me up out of her, and urged me toward her face, saying loudly \"Come in my month, come in my mouth!\" I quickly moved to comply, and she groaned and sucked me all the way in her mouth, absolutely trapping me and applying incredible suction. It was a reflex, and I shot almost instantly, and she began to suck me shamelessly, emptying me as soon as I spurted. She did her thing and moved my now empty but turgid dick in and out of her lips rapidly by moving her diaphragm, blowing me up and making me again hard as a rock. I pulled out of her mouth and flipped her over, and plunged my tongue into her ass. She keened and rocked, and I pushed my tongue as far into her little rosebud as I could, and snaked it around inside her like a madman. \"Fuck my ass, fuck my ass!\" she growled, and I could not refuse a lady. \n\nI was now in the zone again, and feeling large and in charge. I plunged my cock into her back door, and began giving her the hardest fucking I could manage. Her Suzie screamed at me. She moaned, \"Yes!\" when each thrust reached the bottom of her bottom. I lost count of the thrusts, but they were all wonderful. She came at least one more time, but it was all becoming a blur to me. Then she said the one thing that was sure to break me out of my reverie, \"Finish in my mouth again!\" I nodded yes, not sure if she understood that I had acknowledged her, but I needed a lot more friction before I was ready to pop again. I shifted more of my weight up onto the small of her back and got even more penetration from even rougher and more vertical thrusts into her anus, and her Suzie signal became a continuous roar. I drew myself a nasty mental picture of pulling my wet dick out of her hot little ass and immediately sticking it in her sweet little mouth, and suddenly I was ready to come. I jumped up and stood on the floor next to the massage table, turning her head to the side and fucking her mouth roughly. Her Suzie signal said she liked it just as much as I did, and I threw my head back and chanted, \"Suck me dry, baby, suck it all out of me!\" She did, perfectly, and it could not have been any better. Once I was again fully drained, I lay on the table next to her and kissed her gently. She was crying. So was I, but at least I was not sobbing like she was, I told myself.\n\n.....\n\nDwight \"Dweeb Boy\" Ebert hadn't witnessed very many female orgasms close up, but he was sure that all the ones he had just heard were genuine earth shakers, and he already had pictures of that incredibly hot Pliskin girl burned into his brain. He was not sure what kind of noises he had made, but he did realize that everyone in the van was now looking at him expectantly, and that he could not speak right now. He hit the 'auto edit' function on his screen, causing the software to string together an edit with the clear and recognizable words from the recording with three second samples of sounds that were not recognizable as words as filler in between, in chronological order. He hit play and turned up his speakers, so the other agents could hear what he had. There were three seconds of heavy breathing, followed by a husky female voice saying, \"Are you ever going to actually touch my pussy?\" This was followed by three more seconds of slurping and breathing, followed by the same voice saying, \"Damn it! Eat my pussy!\" There followed some juicy noises that the computer could not recognize, but all three agents could jealousy visualize exactly what was going on. There was a sneezing noise and then, \"Fuck me, fuck me, fuck me!\" followed by noises that must be just that. Then, the female voice said even more loudly \"Come in my month, come in my mouth!\" None of the agents was even breathing now, as the subsequent noises were pretty graphic, followed by a loud and growling, \"Fuck my ass, fuck my ass!\" There were then several grunts of exertion, several hissed \"Yes\" sounds, some more garbled words and then a hoarse male voice saying \"Suck me dry, baby, suck it all out of me!\" \n\nNobody said a word for 15 seconds. Dwight finally muttered to himself \"that fucking lucky freshman son of a bitch!\"\n\n.....\n\nI wrapped the dozing Suzanne up in another layer of towel, and then stumbled into the shower and just let the warm water pound me for a few minutes. I shampooed my hair, put in the conditioner that both Lara and Suzanne were both insisting that I use every time, and washed off my body. Then I rinsed out the conditioner and dried off, put on one of Lara's guest robes and padded into the living room. Millie was using the cat o' nine tails on Lara, who was shuddering with excitement and breathing like a steam engine. I could sense Millie's frustration. If someone did to Millie what she was doing to Lara, she would have come ten times already. But Lara was not wired like Millie, and she had been at maximum excitement for at least an hour without surcease, and she was desperate to come. Her Suzie told me she was at her limit of tolerating pain and humiliation. I took the whip from Millie's hands, and told her to go take Suzanne in for a shower and maybe a little ass worship, while I took care of Lara. She gave me a little kiss and headed for the hallway. \n\nI took Lara's head in my hands and kissed her gently. She was still breathing in a labored manner. Her Suzie said she wanted some hard fucking fast and some tender loving slow, and I was going to give her a mix of both in such a way that she could never be sure what was going to happen next. \"Lara, you are so beautiful that sometimes you make me so crazy that I just can't help myself!\" I adjusted her legs in the straps on the trapeze, spreading them to a completely exposed and helpless position, and she quivered. I noticed Millie had used hot candle wax on her, and there were red patches on top of both her breasts and her thighs, and welts from the whip on her ass. It gave me a window into what Millie herself wanted, but it wasn't working for Lara. \n\nI looked her in the eyes and said, \"Tell me about Pavel.\"\n\nShe looked surprised, and then began, \"I think he lost a challenge to me on purpose so he could be my slave. At first I was flattered, but there was something that made me hold back from him. He kept coming on stronger and inviting me to go out with him after the party. I told him that I already had a date. He asked me what it would take to get me to spend the night with him. When I told him I would have to get permission from you he got all cold and crazy for a minute, then got himself under control. He stayed all tense through the rest of the game. I was glad when the Brazilians lost to me and I had someone else with me besides him. He seemed to be fighting for control all the time, especially when he saw you. I let him kiss me good night after the game. That is all my master will allow. Other men can take me on dates, but all that ever can happen is a good night kiss.\" She looked wistful. \"I belong to my Master and him alone.\"\n\n\"Anything else I should know?\"\n\n\"You already know I love you, Master!\"\n\n.....\n\nDwight Ebert had perfect coverage of the bedroom, and he could hear every word and every breath perfectly, but he couldn't bring himself to tell the other guys what he was hearing this time, so he just sat with his jaw set, shaking his head. The boss could go back over the tapes, and the guys back at HQ certainly would due to the potential keyword \"Pavel\" showing up, which the bots had already tagged to the guy the boss called the 'translator' although Dwight thought he looked like a hit man. The boss was over in the corner looking very thoughtful, and then he sent a text message.\n\n.....\n\nI knelt and began gently kissing and licking Lara's ass, worshipping it like we both sometimes did for Suzanne. She sobbed and relaxed a little in the trapeze. I began to smell her pussy in the air, fragrant and delightful. I worked the same routine on her as Suzanne, teasing her and asymptotically approaching her clit and then veering off at the last instant. She strained against the restraints and ropes of the trapeze, trying to get more stimulation than I was allowing her, but could not manage it. I slowly zeroed in on her pussy, very gently blowing on her clit and just barely touching her lips and wonderfully fine and curly blonde pubic hair. Soon it was soaked and dripping with her juice, and I almost wanted to stop and take close up photographs of the light as it reflected off her beautiful curls. Her pussy was dripping wet, and I held my fingers under her to get them fully wet for my next step.\n\nI positioned my longest finger just outside her lovely little rosebud anus, and my thumb right at the entrance to her pussy, and visualized where I was going to clamp my mouth on her clit. Then I said \"You may come, Lara!\" ramming my thumb and finger into her and sucking her clit into my mouth. I felt her Suzie signal slam into me like an electric shock, so plugged in that I was feeling everything she was. She was counter balanced and the straps of the trapeze were supporting most of her weight. I began using my hand, shoving my thumb further into her pussy and finger further in her ass, gripping her like a bowling ball, to move her clit up and down against my tongue while I just held it still, protruding from my mouth. The resulting pressures were taking her rapidly toward orgasm, and I could feel her screaming Suzie just about to pop. I found the rhythm and pumped her swing over the top, and she screamed loudly as her stored tensions were released, and she squirted profusely at the same time. I tenderly licked her clean and kissed her pussy for a while, and her breathing slowed a bit, and then I slammed my hand into again and lifted her even higher. The Suzie connection was so good that making her come now was almost like picking a lock by feel -- I could just feel her responses like the click of the tumblers dropping into place and know she was about to pop again. \n\nShe screamed again and quivered, and as I knelt to gently lick her sex again, I realized I was suddenly as hard as a baseball bat, if not as big as one. A few more licks and she gushed again on my face, and I loved it as much as she did. I stood again and kissed her face and lips gently, and tears filled her eyes as she smiled at me, and then I put my hands on top of her shoulders and slammed my erection into her just as hard and hot as my legs would push. Her eyes got so wide I was afraid the little loops of muscles at their margins would be damaged, but then she closed them and began to move against me, meeting my rhythm with a sort of spooky expression. I was intending to come in her mouth, but she did two things that made that impossible. First, despite the restraints and the pressure of the ropes holding her weight, she managed to use her amazing tennis trained legs to get a purchase behind my knees and calves and pull me into her with the same kind of death grip that Suzanne had used, but her thighs and calves were even bigger and stronger. Secondly, as soon as her orgasm powered through her, her pussy gripped my dick so hard that if it had been a baseball bat, she would have taken the lettering right off of it. Her Suzie signal blasted into my hindbrain, and that and the pressure of her grip made me come like high pressure hose. I almost passed out, and when my legs folded, I realized she was fully capable of holding me up with her grip on my cock. I had never even imagined a feeling like that. She held me tight with arms and legs and pussy, and we were locked in stillness as I pumped half a dozen squirts into her, and then all motion stopped completely. Except for our hearts, which were beating like trip hammers, hers a few beats per minute faster than mine. Damn but she was amazing. \n\nWe stayed completely still for a few more minutes, and then I held her up and began untying her restraints. She put her arms around my neck and snuggled in under my chin, and I carried her into the bedroom, laying her on the bed. Suzanne and Millie emerged from the bathroom at that point, wrapping their wet hair up in towels, and settling on the bed next to us. Mille laughed, saying, \"Now which bitches look so fucking happy?\" recalling Suzanne's line from after the game at the party, and all three girls giggled. I snuggled in between them, but sadly, no one seemed very interested in my nipples. \n\nThe girls were soon snoozing contentedly, and I went to the kitchen and drank about two liters of cold water, which I desperately needed. There were grapes in the fridge and I inhaled half of those. I went back into the living room and gathered up my Master costume, and suddenly remembered the camera in the helmet. I wondered if its camera was jammed by the stuff our host, Spear Overtop, supposedly had installed in his house. I popped the micro SD card and put it the slot in my phone, figuring I would look at the pictures later to see how they turned out. I got a text from Oiler, saying he needed to meet with me Monday night about the last minute F1 visitors, and suggesting that I come to dinner at the UDP house, an invitation that I accepted. He said Esmeralda Estigoy and Oiler's girlfriend Gretchen were going to join us, too. I had sent him the list of visitors that Lara's dad had forwarded to her, and asked him to do some research on them and figure out what we could show them that would unique and more interesting than the standard stuff that the other tour groups would be getting. I did not know before then that Oiler was a major automotive technology and Formula One nut, and he was now committed to giving them the time of their lives, and making some contacts of his own. It would be interested to find out what he had in mind. \n\nI put on my regular clothes, and sat watching the NFL game until Suzanne was ready to go. I kissed Lara and Millie goodbye, told them about the creeps I had seen hanging out at Suzanne's apartment building on weekends and the need to escort her home. I took Lara aside and told her about why Millie had been so tough on her and so frustrated, and she got a funny expression on her face. As we left, I heard her say, \"Millie, come here, slut! It's time for some trapeze training for you.\" Maybe I should stay and watch, instead of having a talk with Suzanne? Suzanne's car was in the visitor's space for Lara's apartment, and when we rolled out of the garage onto the street we did not notice the cable TV van that pulled out about the same time. \n\n.....\n\nSenior Agent Jones had been working through a lot of scenarios in his head, and he was finishing up his planning as they followed Suzanne Pliskin's car out of the garage. He could still hear his old training officer saying \"accomplish the mission goals without ever being there\" meaning leaving no evidence that you were ever there, since you were no such agent, and there was no such agency. Even though he had been recruited 15 years ago, his official employment was still with the Department of Agriculture, he had a generic 2.4 digit numbered office and a parking space there that he had never visited, and his parents and his current girlfriend still thought he was some sort of middle management bureaucrat, administering farm subsidies and going to agriculture trade shows all over country and the world. Dwight the Dweeb Boy was carried on the org chart as a 'crop analyst' for crying out loud. He also didn't realize that if they had bugged the limo he would have already heard from Suzanne the clue he needed to figure out what the Russians were up to, and that most of his planning scenarios were invalid. ",
        "Subject Pliskin's old used car pulled into the parking lot of a nondescript apartment building a few miles from campus, in a much less tony neighborhood than the apartment tower they had just left. It looks like the ambassador had taught his daughter how to avoid standing out from the crowd, at least until she started hanging out with this 'Master' punk. Subjects Pliskin and Roberts exited the car and climbed the stairs to her second floor apartment, as the driver pulled the van into an open space right under the utility pole that carried all the cable TV and internet connections for the building. Using the external video to sweep their surroundings, Dwight Ebert noticed some 'low riders' hanging out playing boom boom conjunto rap music from huge speakers installed in their car. But something seemed a little funny about them. The guys had plain black leather shoes instead of trendy kicks, their dance motions were pretty wooden, and they had no tats. He fired up his ELINT suite and scanned the car and these 'latin homies', hoping for more insight. One of the other agents used the boom on the truck to hang a packet sniffer on the pole, and the other set up the audio bugs.\n\n..... When we got upstairs, Suzanne fired up her computer, and I looked over her shoulder. She didn't have Windows, but some fancy Linux shell. She didn't log into Gmail or the ESU email server, but used some sort of application called 'shadow boxer VPN and proxy' that took several minutes to finally bring up a browser and an email client. She checked her email and saw nothing special, then suggested I try to see if we got any email from the party. I used the browser to log into the 'Master321' account first and found 9 new emails; from Penelope Peters Perabo, Pavel, George and Tammy Wynette, Paulo and Astrid, Spear Overtop, Winifred Wimmers, one each from Erminia and Sapiento Gallo, and one from Vaya Perez. The other '321' accounts had no activity.\n\nSuzanne guffawed \"My, that's a lot of message traffic for one party!\"\n\n.....\n\nDwight's fellow agent was stymied. The Pliskin girl had logged into a virtual private network and cloud anonymiser set up by the IT division of a big private security contractor. It was located offshore and had maximum legal encryption with no agency back door and it would take even the big iron back at HQ a day or two to break it, and it was undoubtedly recommended by her father for just that reason. They had no keyboard trapper installed, and the girl used no wireless at all, not that it would help in this situation. She was probably getting email, but from whom? They could search all the email servers that they did have backdoor access to, but what were they searching for? He sighed and began inputting terms for one of the agency search expander programs, starting with known email addresses for people that had attended the party. He kicked it off and then turned to tell the boss the bad news.\n\n.....\n\n\"Which one do you want to fuck, er, ah, I mean, read first, my animal?\" She laughed at me wickedly.\n\nI decided to take them in the order received. Penelope's was very formal, inviting me and any and all of the girls to lunch with her, to discuss 'future social occasions' that might interest us. It sounded almost like the way my grandmother would proposition somebody, perish the thought. \n\nSuzanne was reading over my shoulder. \"I suppose we should start with high tea, then early afternoon cocktails, followed by strip poker, perhaps?\"\n\nIt struck me funny, and I laughed nervously, and then opened the one from Pavel. It was a not so subtly veiled insult, implying that Lara needed a man instead of a boy and offering to 'fill her obvious need' instead of me. Thanks a lot you Russkie piece of shit.\n\nSuzanne finished about the same time I did. \"Ugh! Creep status confirmed!\"\n\nGeorge and Tammy were inviting Suzanne and me to a 'full time cabana party' at the house they were renting for the week before and the week after the F1 race, indicating that they would dedicate a guest bedroom for us if we would stay a few days, to help us 'get a real feel for them' while they were in Texas. There was an attached photo of the two of them that looked like something from an adult dating site. \n\nSuzanne laughed, and reached around to pinch my nipples, and then whispered in my ear, \"Let's file that one as 'under consideration' until after our little talk tonight, animal!\"\n\nI opened the email from Paulo and Astrid, which started with a clear statement that they wanted nothing to do with Pavel and that I should not associate them with Pavel in any way. They did want to make crystal clear that they both wished to submit to Lara and me and serve us in any and every way we desired and commanded them to; either while they were in town for the race, if we invited them back to town later at our convenience, or should we ever wish to visit them and be their guests at their home in Brazil. They attached a very explicit picture of them together on their knees, naked, looking up at the camera expectantly.\n\nSuzanne made a funny noise as she read along with me. \"Oh, my, our friend Paulo is certainly excited by the prospect of submission, and he is packing some big iron there, animal, and I think Astrid's breasts and nipples are even bigger than Lara's. Would you like to play with what they are offering? I sure might! Have you ever been to Brazil? Let's put that on our discussion list!\"\n\nOur hosts email was understated, but amazing in its own way. He thanked us for attending his party, said that he would be so forward as to expect that we would respond positively to further invitations, and he also told us we could use his 'party house' should we want to have a party of our own, to which he would expect to be invited to if he was in town. \"It must have been your dazzling smile, Suzanne.\"\n\nShe smiled. \"Actually, I think he liked all of us, but he paid the most attention to Millie.\"\n\nWinifred Wimmers' email made a sort of sideways pitch to find out my political leanings, and invited me to a reception and election night victory party to be held Tuesday for James Craig's opponent, who was solidly leading in all the polls. I was a little disappointed it was not a little more personal. \"Why, I thought she wanted to add me to her string of conquests and leave me behind worn out and with a broken heart!\" I said plaintively. \"Do you want to go to the reception?\"\n\nSuzanne laughed. \"You aren't even old enough for her yet! I hear that she likes 'em to be at least 21 before she harvests their young bodies! I would like to go to the party, as long as we don't stay too late.\"\n\nSapiento Gallo's email was very formal, even more so than Penelope's. It reiterated his desire for me to help his wife, and his open acceptance of that. It was a very formal and genteel way to say 'it is okay with me for you to fuck my wife if it makes her happy, but I don't want to watch' and I was of two minds about it. It seemed in part unselfish and realistic, but it also made me really uncomfortable. If I was in Sapiento's shoes, I don't think I could do the same thing, but then I was an eighteen year old with raging hormones and he was pushing ninety and hopefully wiser. \n\nI had forgotten that Suzanne was reading over my shoulder, until she sighed loudly, maybe being just as torn as I was about it. I decided to ask her, \"What do you think?\"\n\nShe sighed again. \"He really loves her, and if they were closer in age I would say she should just shut her sexuality down and remain faithful to him.\"\n\nI spoke without thinking first, \"Like you did for Mike?\"\n\nHer face froze for moment, and then she said, \"Well, I definitely shut myself down, for three years, and it was driving me toward depression and maybe worse. I'm not sure what would have happened to me if you hadn't shaken me loose, so to speak!\"\n\nI waited, but she said nothing else. \"Do you think I should try to help her?\"\n\nShe laughed. \"You certainly helped me! But now I am getting to be as horny a little devil as you, and we have to talk about that. But yes, I think you and Millie should be the ones to touch her and train her, and I would like to talk to her before you do.\"\n\nI opened Erminia's email next. It simply said that she had Sapiento's blessing and that she would submit herself to me unconditionally for training on whatever schedule I should specify, and requested that it begin immediately. She and Sapiento had already leased a home here in the capitol, and she would be there whenever I asked her to be, and for as long as it took. \n\nSuzanne spoke first \"Wow! That's pretty straightforward. Wonder where the house is?\n\nVaya Perez's email had two themes. The first was a perfunctory request to interview me on camera as an ESU student about the AG situation, to get a student take on the upcoming elections, with the built in understanding that I might decline. The second was a request to meet for drinks, off the record and strictly on background, with no mention of me in any story she might do, now or later. That was an interesting offer for a reporter to make. Suzanne was just a beat behind me in her reading, and she snorted \"I can almost feel her hand on your leg, animal! Do you like it?\n\n\"I need to think about all this for a while before I reply to any of these emails. Meanwhile there is something else to look at.\" I took the SD card out of my phone and slipped it into the multifunction card reader in the front of Suzanne's computer. Her photo gallery app was a lot faster than mine, and soon dozen of photos from the 'batman cam' in my Master costume popped up as thumbnails on the screen. Most seemed to be blurry and out of focus, and I clicked on a few that were very out of focus, but about one in every 10 or 20 seemed to be okay. There were some clear views of the party, and even one of the underground subway. There were also a very clear picture of Pavel, Paulo, and Astrid with Lara emerging from the game area, and another at the brunch that showed Pavel with his group of 'associates', bathed in sunlight and in perfect focus. In fact, all the pictures from the brunch turned out fine. \n\nSuzanne reached over and hit a keyboard command, and a text window popped up underneath each photo, with data like camera ID, time taken, exposure, GPS location, and several other things. She studied it for a minute, and said, \"Spear Overtop was not just jamming the cell phone signals, he was also using infrared and ultrasonic sources to confuse the autofocus of the cameras. We got lucky, the camera in your mask used both ultrasonic and visible light for autofocus, and when the ultrasonic was confused it used visible light data alone. Most cell phone cameras would only have one good shot out of 100, just by random selection, but you got more like one in twenty.\" She dragged the whole folder over to copy it, then said \"May I send just the shot of Pavel and his crew to my father? Pavel makes all my alarms go off and I want to see if he has come to the government's attention already.\"\n\nI thought about of for two seconds, hoping that perhaps that Russkie piece of shit was on one of those lists that got you a one way ticket to Gitmo. \"Sure, let's find out who he really is and what he is up to!\" \n\nSuzanne zipped the picture using a public key private key encryption app, along with a text file that briefly said where we had taken the picture, what the limo drivers had said, what she had overhead Pavel say in a Russian with a Tartar accent, and that she had a very bad feeling about him. Then she looked at the clock for a minute, scribbled on a pad of paper, and then wrote down a completely gobbledygook email address full of letters and punctuation marks, typed it into the address line, and sent the message. \n\nThen she looked me soulfully in the eyes, saying, \"What exactly happens when Millie follows you into the bathroom at night?\" Her timing was good, because all the water I had downed at Lara's had moved through, and my bladder was very full. \n\nI laughed. \"Heel, slut, and I will teach you another way to serve me!\" I snapped my fingers and headed toward the bathroom. She hesitated a moment, then got on all fours and followed me just behind and to the left. I stood in front of the toilet bowl, unzipped, and began my race horse imitation, loosening up my dick and taking time to aim properly. I looked over at Suzanne, kneeling just to my left, and saw she was holding her mouth open with her tongue up against her upper lip, with her eyes glued to my dick. I decided that I better hurry up and finish peeing before I got too much of a hard on to do it. I began, and produced a satisfyingly voluminous stream. Suzanne had lived years in France, and other countries in Europe, so she lacked Millie's original inherently American, almost Victorian attitude toward male urination, but even so I detected some shock, shame, and then prurient interest as I tuned into her Suzie. \n\nShe knelt transfixed until I finished, and I fought my habit of shaking, and presented my still wet dick to her lips. \"Lick me clean, slave!\" \n\nHer gaze stayed on my dick for a moment, with an expression of complete shock on her face, and then she looked up at me and gave me a look that I interpreted as 'you are right on the edge of big trouble Mister', but then she got a look that was sort of a simulacrum of Millie's hot but haughty one. Then she snaked out her tongue and licked me in the same teasing way that Millie did, going on far longer than was required for the task at hand, but I was not a about to complain. Then a very self satisfied look crossed her features, and she got up and headed toward the kitchen saying, \"I am going to heat up some supper for us while you contemplate your responses to all those emails, and also get ready for our little talk.\" \n\nI heard her moving things around and running water, and then the oven door opening and closing. I sat on the couch and looked out the window. Suzanne soon emerged from the kitchen, sat on my lap, and proceeded to give me a through and wonderful kissing, then said \"It really did turn me on, but you are a truly nasty boy! It was every bit as disturbing as Millie said!\" and then she smiled wickedly. The timer dinged in the kitchen and she got up to finish off supper. She put everything out on the table and I joined her, and we had a wonderful 'King Ranch' casserole of chicken, cheese, tortillas, sour cream, tomatoes and jalape\u00f1o peppers, sort a Tex-Mex chicken lasagna. I was hungrier than I realized, and was soon completely absorbed in wolfing down my dinner. \n\nSuzanne watched me closely as she ate, and when we finished I did the cleanup and put everything in the dishwasher. By the time I was done, she was standing in the bedroom door wearing some sort of lingerie thing that altered my circulation as soon as I saw it. I guess she was trying to position things before our discussion, too. I took off my shirt, picked her up and kissed her sweetly, and put her down on the bed, encouraging her to put her head on my chest, and/or play with my nipples. Surprisingly, she did, complete with another soulful look and her tongue stuck up against her upper lip. Damn, but she was playing all her cards tonight.\n\nI just waited for her to begin. I knew she would. \"Robbie, you know how I feel about you?\" She almost never called me Robbie, and that put me on alert. \"But how do you feel about me, really?\"\n\nIt was my turn to laugh. \"Women can be so dense sometimes! You should know that if I hadn't given you that 'dump me anytime for free' card when we first met, I would have already fallen for you hopelessly. But I am not sure how you really feel about me.\"\n\nShe looked funny, confused. \"You saved my life, you idiot. How do you think I feel? I care enough about you to trust you with everything. I have no secrets from you, and I feel like I can tell you anything without worrying about my confidences being betrayed. That's why I need to tell you about the fantasies I have been having!\"\n\nI waited. She gathered her thoughts and began again. \"You like the way my breasts look, right?\"\n\nWow. Where did that come from? \"I like the way you look in toto, Suzanne. Your looks and body are practically perfect!\"\n\nShe smiled, and then tried to adopt a neutral expression. \"But you like Lara's breasts, too. She must be a 38D, compared to my little 34C cups. Don't you like big breasts?\"\n\nWhere was she going with this? \"Of course I like Lara's breasts. You like them to!\"\n\nShe laughed. \"I do. I like that they are big and they fill up my mouth and my hands. Don't you like that, too?\"\n\nI was lost. \"I like everything about Lara, just as I do with you.\"\n\nShe paused again, and then smiled. \"But when you play with Lara's breasts, it doesn't mean that you think they are better than mine, or that you never want mine again because they are smaller, it's just that Lara's are a little bigger, and a little different experience, right?\"\n\nLogic told me to say yes, but something told me to keep my mouth shut.\n\nLara continued. \"have you ever looked at a woman with really big breasts, like, say, 44DD, and a really big bubble butt booty call ass, and wondered what it would feel like to touch them, kiss them, suck on them, and maybe what it would feel like to pound up against that big thing?\"\n\nI knew I shouldn't but I was being honest, and said, \"Yes, sometimes.\"\n\n\"But if you did those things, to satisfy your curiosity, and even if you really liked it and it really got you off, you still wouldn't want just that girl in the future, and not want Lara or me anymore, would you?\"\n\nAlarm bells were ringing in my head, but I was still not sure why. \"I can't imagine not wanting either one of you, ever.\"\n\nShe smiled again. \"I feel the same way about you!\"\n\nShe paused, and then said, \"Have you had a woman like that, Animal, with huge teats or a really big ass? Was it as good as you fantasized before hand? Did it get you off?\"\n\nNow I was in trouble, and I knew it. \"And if I had?\"\n\n\"You still came back to me didn't you? You didn't lose your feelings for me, even if you wanted to try something a little different for a little while?\"\n\nOh Shit. I was speechless, but I knew what was next. \n\nShe looked a little guilty, and then started again, \"You woke me back up, Robbie. I was shut down, shut off, and miserable and you made me alive and happy again. But you also awakened some fantasies. I never knew how much I liked being with other women, until you introduced me to Lara, and then Millie. I never knew how amazing being dominated and being completely submissive to a man could make me feel until you showed me. And now I am having some other recurring daydreams, and night dreams, about some things that I now realize that I want to try. And I promised you and myself that I would always be honest with you about sex. So that's what I am doing now.\"\n\nI was thunderstruck. \"What exactly do you want, Suzanne?\" I was pole axed, and struggling to keep my head above water. Then I realized I did have one talent that might help me. I opened up my Suzie signal receiver, and tuned in, making a connection instantly. She was feeling guilt and excitement, humiliation and anticipation, all at the same time. I focused on her modulation, and saw her on her knees, looking up at two cocks, not just one, and one larger than the other. \n\nI was watching for other images when she spoke again. \"I want to get on my knees and have two cocks to suck!\" She said, feeling better for having said it out loud. \"I want to try out a really big one, too, to see how it feels. And I want to get it in the pussy and the ass from two real and warm cocks at once, not a cold plastic dildo. And I really, really want to get on my hands and knees and take one in my mouth and one in my pussy. I think about that all the time!\"\n\nSure enough, her Suzie carrier served up the modulated images of just what she was describing, with the final scene of her making the 'push-me-pull-you\" with a cock on each end sending her around the bend with excitement. The good news, if you could call it that, was that in all the images that I saw her project, one of the two dicks always seemed to be attached to me, and the other one was a larger anonymous dick with no face associated with it. ",
        "I couldn't say a thing, but she kept talking. \"Then I want to switch and take the one from my pussy and take it in my mouth and vice versa, and then switch back again!\" She was like a compulsive confessor, and now I really wanted her to shut up, so I could crawl under the floor and disappear. Desperate to find more good news, I saw that her Suzie signal carried only raw excitement and what she had described out loud, not the distorted ugliness and twenty guys standing in line to fuck her like Melanie's repulsive signal had carried. \n\nI was just listening to myself breathe, and was otherwise paralyzed. But she kept going, \"I don't want it just once with some anonymous risky guys, I want it multiple times with you and with someone we both trust and respect, just like we both feel about Lara. But I don't expect you to do anything with the other guy. I don't think you are wired like that, and it doesn't turn me on to think about that. I don't know why. Watching you fuck Lara or Millie makes me hot as hell, and I just want you more, but the idea of watching you with another guy does nothing for me.\"\n\nThank goodness for small favors. I could still inhale and exhale, but I still could not talk. She could. \"I want it to be someone you like as a friend, too, and someone that you approve of for me. And I will wait until you are on board and we find someone like that.\" Thanks a lot.\n\nSomehow I found my voice, \"You not only want to make me watch you do this and join in, you want to make me pick the other guy, the guy with a bigger cock than me, for you?\" I did not have to add 'you disgusting whore' because my tone of voice made that clear.\n\nShe blinked, and tears began to fall. 'Yes you idiot! I don't want it with two other guys; I want it with you and an ancillary cock. An accessory, a much less important bit player, a 'meat puppet' like you offered to be for me not so long ago! But you are so much more than that now. You are now important enough to me that I have tell you everything and this is something I want. I want to have the same kind of deal you have with Lara and me. Don't you think I could find two new guys to bang me from both ends if I wanted to?\"\n\nI answered without thinking. \"In a heartbeat, but that's not who you are! But I don't know if doing this with you is who I am either! What if you like it so much you never want me alone again?\"\n\nShe cried again. \"I spent two weeks planning how to tell you and make you see that that would never happen. It's the equivalent of you banging some with chick huge breasts and a big ass in your wild and crazy college days just to see what it's like, not like you are going to run off and marry the girl! Unfortunately I was in sexual suspended animation during most of what should have been my wild college days, until some hot young guy with a great ass not only woke me up but made me come like I never dreamed possible. And you have to admit you did an amazing job of finding Lara and Millie, two of the hottest and most wonderful and trustworthy women out there, so I figure you would find somebody much better than I could ever find myself.\"\n\nShit. I hate it when she makes sense, but I had to keep fighting. \"I have a feel for picking women, they interest me, they turn me on, I love everything about them! But I don't have that kind of feel for guys. When I walk around on campus, roughly 1/3 of all the girls I see start me wondering what they would look like naked and what it would be like to touch them. That has never happened with even a single guy! And I have never had an instant's desire to see some other guy doing my best girl!\"\n\n\"I don't expect you to want to fuck them. I just expect you to find 'a good guy' who is a 'safe bet' for me and eliminate the risky losers. Am I really your 'best girl' Robbie?\"\n\n\"You should know that by now, you slut, but I wanted you to be a slut for me only!\"\n\n\"Shouldn't reciprocity apply?\"\n\nDamn it sometimes smart girls can be a pain. My stomach was churning, my emotions were roiling, and suddenly her Suzie signal made it clear that she was getting horny again, and I realized I was to. What the hell was going on here?\n\nShe was still arguing her case, \"Back when we humans all roamed the savannah every night, just trying to maximize our gene content in future generations, men and women copulated openly with several partners each night, and may the best sperm win!\"\n\nI grabbed her shoulders. \"Yes, but since then we have developed civilization, agriculture, the horse collar, the germ concept of disease, and the nuclear family. I would never form a family with anyone without a clear understanding that mine are the only swimmers that ever get into to pool to compete, so to speak!\"\n\nHer eyes flashed, \"And you can also only swim in one pool?\"\n\nDamn it sometimes smart girls can be a pain.\n\n.....\n\nDwight the Dweeb had perfect microphone coverage in the apartment bedroom, but he almost wished he didn't. This Pliskin chick was beautiful, and very sexy, but boy was she ever high maintenance. Being with somebody like her would be amazing, but you couldn't help but fall for her and then she comes up with this shit to break your heart. Maybe he didn't envy this freshman so much after all. He continued to think about it for a minute when the tactical alert tone went off on the boss's phone. He had only heard that tone twice before in the last five years, and both times it had meant trouble. \n\nSenior agent Smith read the message on his phone, and then looked at the attached picture. He was very glad he had already sent a sitrep that included their recognizing Ambassador Pliskin's daughter at the party with the unidentified Russian crew, and Sapiento Gallo's entourage. The agency apparently had another asset at the party, one that had produced a crystal clear high resolution photo of the Russians, thoughtfully posed together. The facial recognition programs at the agency had gone off like a slot machine hitting the jackpot. The guy they called the 'translator' was using the name 'Pavel' but was identified as a high level mob enforcer and team leader from Omsk. The guys with him were former Russian Special Forces types who had been implicated by Interpol in several kidnappings for hire in Europe and the Middle East, and the agency suspected they may be going after Sapiento Gallo or his wife. More teams were on the way, but they were tasked to stay glued on Pliskin's daughter until further notice and report hourly.\n\nDwight's phone beeped a 'normal' tone, and he had a reply to his inquiry about the supposed low riders in the parking lot. They were Texas Rangers, undercover, and the agency thought they were originally watching the blonde's girl's apartment and then followed the Pliskin girl here on a previous occasion. At least they weren't spotting for the Russian crew. \n\n.....\n\nSuzanne had stepped up her attention to my nipples, making very hard for me to get up and leave. Soon she was gently kissing my nipples and running her hands all over me, and it was making me crazy. She looked at me, holding her tongue up against her top teeth, and then said, \"Why don't you just lay there and think about it for a while?\" She was soon unbuttoning my pants and caressing my cock, and had my full and undivided attention. She proceeded to give me a slow and sensuous, patient and teasing blow job better than the best I have ever had. She would get me right to the edge then back off and kiss my navel for a while, come back up and kiss my nipples, then my mouth, and then move back down and really suck me down hard all the way into her throat and bring me to edge again. It was amazing. I relaxed and tuned into her Suzie signal, and realized that when she came up to kiss my mouth, she was imagining that she was about to go down on a second, different cock, then coming back up and switching over to mine, then alternating again. She was turned on as hell, and I was getting all the benefits, at least for now. \n\nThe next time she moved up to my mouth, I said \"Do you want me to talk in a different voice when you switch cocks, to make it more realistic for you?\" Her eyes snapped open and her expression was a combination of embarrassment and excitement. But by that time I was thinking as much with my dick as with my brain. I grabbed her head and pushed it back down to my crotch, saying, \"You better do a good job on both cocks, slut!\" Her breath whistled through her nose, and then she worked on my dick even more frantically than before.\n\nSoon she signaled that she was desperate to have me come, and she sucked me like a starving calf, breaking through all my resistance and swallowing everything I could shoot. She kept her mouth glued to me and began her patented instant penis revival process, and swung her legs up and planted her pussy right on my mouth. I guess I could not refuse a lady. She was wet and frantic and tasty, and I lost myself in her, forgetting all about Suzie signals, fantasies, and future problems. Two hours later, she was driving me back to campus, and for the first time I noticed the cable TV van. Hadn't I seen it parked in the parking lot earlier, along with the boom box low rider guys?\n\nI didn't make my 10 PM bedtime, but I wasn't too late, and I slept like a dead zombie. Despite the wonderful supper, I was ravenous when I awoke, and was Johnny on the spot at early breakfast. So was Nora, and we began talking as we went through the buffet line.\n\n\"Hey beautiful, How was your trip to Lubbock?\"\n\nShe smiled, \"It was good. I was not the most enthusiastic football fan, but I enjoyed to trip a lot. I think I am catching on to the rules of the game, and I was not even up on rugby until I came to school here. One of the other girls suggested I rent 'Friday Night Lights' for more insight into the cultural significance of football in Texas. I have never heard of anyone throwing thousands of tortillas on the field before!\"\n\nI laughed. \"That's mostly a Lubbock thing, and in Arkansas sometimes it's bottles.\"\n\nShe told me a little more about the trip, and I realized I was fascinated in listening to her. Finally she paused and I said, \"I want you to come home with me for Thanksgiving holiday so you aren't stuck here alone!\" \n\nHer eyes grew wide, and she looked frankly shocked. \"What about Lara and Suzanne?\"\n\n\"Well, Suzanne is going to spend Thanksgiving with Mike's family.\" Nora made an unpleasant face. \"Lara's dad is coming here for the football game, but I want to see my family, and it's a little tougher for my grandparents to travel than it used to be, so I am heading home. We will watch the football game at home on TV, and we'd love to have you there with us.\"\n\n\"That's sweet, but I don't' want to impose, and...\"\n\n\"No imposition at all, in fact you will have to pitch in to help cook, taking some of the load off my grandmother. And I really need someone to ride home with me, because the girl I am riding with would be totally insufferable if I had to be trapped alone with her for the whole trip up and back. Plus my older sister is spending Thanksgiving with her fianc\u00e9's family, so you would be distracting my mother from missing her so much. We have a nice guest room ready for you, too. Can you be ready to leave the Wednesday before Thanksgiving at noon?\"\n\nShe smiled, and her almost squelched Suzie leaked excitement, warmth and acceptance. \"I am really welcome?\"\n\n\"Absolutely, and Suzanne would kill me if I let you stay here alone. You are our friend, whatever else happens in the future.\"\n\n\"Okay.\" She looked incredibly pleased, and it made me happy that she did. \"And by the way, I got a call from your friend Strelsa over the weekend, inviting us to dinner with her and Gunther at their apartment. I reiterated that you and I were friends, but you were dating Suzanne, and told her she should call and invite the two of you. So you should expect that call.\"\n\nI gave her a hug, which was returned with more fervor than ever before, and a further hint of some leaking Suzie, and then I headed for my Rhetoric and Composition class, hoping to get there early to talk to Sarah. She was there early, too.\n\n\"Hey there!\" she smiled at me as she said it. \"How was your weekend?\"\n\n\"Busy, but mostly it was very good! I went to a fantastic party, but my date got mad at me!\"\n\n\"I went to the best party I have ever been to. Did you party a little too hard? Get too drunk?\"\n\nI smiled. I was going to have some fun with her, hoping she had not recognized me at the party. \"No, I don't drink!\"\n\nShe smiled again. \"Oh, yeah, and you don't smoke or chase women either, I suppose?\"\n\nI laughed again. \"I don't drink, smoke, or do dope, but I do chase women, and that's what got me in trouble with my date.\" I leaned close to her conspiratorially, and said \"You see, there was this super hot girl at the party, so hot that I couldn't stop looking at her, and that's what got me in trouble. She was dressed up like a Playboy bunny, one of my childhood fantasies, so to speak, and she was smoking hot looking! But she had this real dork of a date, dressed up like Hugh Hefner, and she was much too wonderful to be with a loser like that!\"\n\nSarah looked around and then back at me, as if trying to figure out if I was serious or not. Then she got this very pleased looking expression on her face, and I sensed her Suzie cranking up and crowing. She leaned even closer to me, and said, \"What were you thinking about when you were looking at this girl?\"\n\nI looked around like I was worried someone was watching, and I leaned over and whispered in her ear, almost touching it, \"Promise you won't be shocked or offended?\"\n\nShe laughed. \"Okay.\"\n\nI realized the bell was just about to ring, and said, \"I wanted to rip that costume off of her and lick every inch of her!\" and then walked in to the class room, leaving her standing with her mouth open, which gave me some ideas. The class was not nearly as interesting as those ideas, but it was a whole new set of famous books and chapters analyzing them, with several assigned papers, all to be finished before Thanksgiving break. It was time for me to buckle down for a while and pay attention. When class ended, Sarah buttonholed me in the hall. \n\n\"So this party you went to, was it a costume party?\"\n\n\"Yes.\"\n\n\"What did you go as?\"\n\n\"Well, I went with a date and two friends. I had on a black leather suit that I would call a BDSM outfit, and they had one red and white ones, plus one girl had a very skimpy metal jewelry costume. Her eyes got as big as saucers, but I said \"I have to get to my next class\", and her Suzie signal resounded through the hallway. I sure hope Ms. Wyrickie, our hot TA, made her smoke free goal, because that would mean that the three of us would get together soon.\n\nProfessor Lillehammer took delight in laying out a whole new and challenging set of material, complete with lots or reading and some engineering 'cases' to be written up, also to be completed before Thanksgiving. He also told us about a meeting Tuesday at 5 for the engineering department's 'distributed education' program, where you worked for a semester, then attended school for two, then worked again. It gave students some real work experience, and gave both students and prospective employers a chance to try out a working relationship before making a long term commitment. When class ended, he made a point of telling me that he really wanted me to attend that meeting. I hope it didn't last too long, so I could still go to the election night reception. \n\nI dashed over to the track, skipping lunch, and got my initial seven miles in before Suzanne arrived and fell into step next to me. \"Hello, my animal. Did you get enough breakfast?\"\n\n\"I hope so, because I am skipping lunch.\" \n\nWe ran silently for a while, then she said \"Have you thought about what we talked about last night?\"\n\n\"Yes, but I haven't reached any conclusions yet.\"\n\n\"Okay. Let me know. Do you think you would be ready to try to make 15 miles beginning next week?\"\n\n\"Maybe, why?\"\n\n\"Because I would like to see you get to 15 as a habit for three weeks or so, and there is a marathon coming up in December that I would like us both to enter, so you can say you have done it, and I can be proud of you!\"\n\nWe ran for a few more minutes in silence, and then I said, \"Nora is coming home with me for Thanksgiving, and it will really help to have her take some of the load off my grandmother. She seemed very pleased with the invitation. It should work out fine!\"  \n\nI made my afternoon classes and used the time in between to attack all the new material that had been assigned. I was famished by 4 PM, and was looking forward to some of UDP's usual excellent fare for dinner tonight. I blocked out all my assignments from my first day back to MWF classes, and it looked like I could get things done. I started walking over to UDP at 5, and there was a real chill in the air, fall having arrived completely. The capitol city didn't really have much of a winter; it only snowed about every three years, and only stayed on the ground once in five. But it looked like there would be good cool football weather for Saturday's game.\n\nAbout halfway to UDP, my phone rang. It was Lara, calling about Millie. \"Can you come over here and help me with Millie? I promised her some time on her 'fuck rug' and she is insatiable! She needs to be pounded.\"\n\n\"I am on my way to the UDP port to meet with Oiler about the schedule for your dad's last minute F1 group. I am asking them to move mountains to make this happen, so I have to be there!\"\n\nShe sighed. \"Why to they call it the UDP 'port' instead of a 'house' like every other frat does?\"\n\n\"It's nerd thing, beautiful. It's one of those inside jokes.\"\n\n\"Okay. But what should I do with Millie. She is wearing me out!\"\n\n\"What did you do to get her off Sunday night after we left?\"\n\n\"I tied her up to the trapeze and whipped her ass, used the candle wax, spanked the bottom of her feet, everything she tried with me and more. It got her off like crazy, and I can't believe she can come like that from pain, but she does. She literally made a puddle on the floor under the trapeze. She really lived up to her 'wet spot' nickname. But I swear today she even more demanding than ever!\"\n\n\"Turn it around on her, beautiful. Make her serve you. She also gets off to being dominated and humiliated, even without the pain. Make her worship your ass for an hour. Tie her hands behind her back painfully and make her kiss your sweet little blond pussy for another hour, and then whip her ass and tell her she is doing a lousy job and needs to try harder. She will love it and so will you.\" Lara laughed. \"It worked on me didn't it?\"\n\nI realized there was a girl walking behind me that had been listening to my side of conversation. I finished up with Lara, saying, \"It sure did work on you and that was one of the greatest things that ever happened to me, beautiful!\" Lara drew in a sharp breath and sounded like she was about to cry. \"I am just walking into UDP. Can I call you later to see how it went?\"\n\nShe drew in another deep breath. \"You know you can do anything you want, Master. I love you.\"\n\nI looked around at the girl, and she avoided my eyes, but I made a point to make eye contact with her, and smiled. She looked worried and uncomfortable as I mounted the steps at the front of the UDP house. She stopped right at the threshold, and then watched me walk in, and I realized that she was planning on going in as well. I held the door open for her, and she walked in, eyes down toward the floor at all times. I was a few minutes early before dinner. Cisco was sitting on one of the couches in the entry hall, and stood up to greet me. \n\n\"Hey, Robbie, have I ever got a story to tell you!\"\n\n\"Hey, Cisco! How was your weekend?\" He stopped and looked behind me at the girl that had come in through the door. ",
        "\"Hello, you must be Cindy Nelson! I'm Cisco. Mei Ling is the dining hall. Go down the main hall (he pointed) take the second left. I'll join y'all in just I minute.\"\n\nShe smiled and followed his directions. He motioned for me to sit on the couch with him for a moment. \"That's one of Mei Ling's friends; she is going to help us with the F1 tour. She is a recent ESU graduate who has started her own event organizer firm and wants the chance to meet some potential clients.\"\n\nHe sat back, crossed his legs and looked very self-satisfied. \"Speaking of Mei-Ling, your advice proved not just good, but spectacular. l already thought she was the hottest and most wonderful woman I had ever met, but when I came on so strong with her the way you told me to, she melted like ice cream on a hot day. It was the most amazing sex I have ever had, and she must have come a dozen times. I could not believe it. When I tied her hands behind her, I was afraid she was going to break both my legs, and we both knew she could do it if she wanted to. But she got down on her knees and started dripping like a leaky faucet. I followed your advice, and told her she was the most beautiful thing I had ever seen, and I was going to have my way with her. She opened up like a blooming flower. I am the happiest guy on the planet, and I owe you big time!\"\n\nI gave him the URL of the website where Lara had found her special collar, and told him to get her an understated collar as a present. \"That's a great idea!\" he said, \"I'll put her initials on it!\"\n\nI smiled, saying,\"You're not thinking like a Master, Cisco! Put a little heart symbol on it with your initials. Trust me!\"\n\nHe smiled widely, and we walked toward the dining hall. Oiler was already there, gazing adoringly at Gretchen, and he introduced me formally to Cindy Nelson, who had trouble meeting my gaze. I wonder if Mei Ling had told her about her weekend with Cisco, or what she saw when I picked up Millie at the Bi Phi house for her second 'coming out' party. We all went through the serving line together, with Oiler leading the way and making sure everyone was introduced. I was hoping for fried chicken, but it was not to be. They did have abundant servings of corn beef and cabbage, navy beans, and fresh cantaloupe with strawberries. I stopped after two loaded plates, feeling pretty satisfied. \n\nOiler led the way to one of their small meeting rooms, and laid out his vision of what the visit should encompass. Oiler was nothing if not thorough, and his research was amazingly productive. I did not want to speculate that perhaps he hacked into a few email accounts or browser histories to get the straight skinny on what really interested the attendees, because I really didn't want to know. He also apparently had managed to get the detailed itineraries of almost all the other F1 tour groups, so he could make sure ours was truly differentiated. \n\nThe largest subset of the group was hardcore mechanical engineering types, and he had conspired with Professor Lillehammer, the UDP faculty sponsor, to wow that bunch. The professor was a reviewer for one of the most prestigious ME journals, and recalled a recent article that he had read that had not yet been published about the research one of the tour group members had done on brake system cooling in F1 cars. He hooked Oiler up with the director of the visualization lab at the supercomputing center to do a simulation and visualization right out of the 'suggestions for future work' from that paper, directly relevant to racing and literally state of the art. The university wanted some joint projects with the F1 crowd, too. They would make about a very intense 2 hour engineering presentation to the group, and then take them for an 'insider' tour of the football stadium, which was not offered to any other group even though one of the local backers of the F1 track was a big ESU football fan. This would be followed by lunch at the university club, and then a tour of the materials research labs that had the most to promise for racing. The plan was to have this group join the others for a final evening meal that brought them all together. \n\nThe next largest group, three foursomes worth, wanted to play golf, and Mei Ling had already tapped Dana to arrange things for the University golf club, complete with two famous ESU alums who were also well known PGA touring pros, Dana as the ladies star, and a male ESU freshman that had done very well in the last two US opens. It looked like that was handled. I would be perfectly happy just to watch Dana play from close up, and I assumed a group of horny Europeans would too. It was too bad the weather would likely be too cool for her to wear a halter top. \n\nThe final, smaller group, that Oiler called 'The Culture Set' was interested in two things: seeing the University's amazing collection of art, and birding in Texas. Oiler was stumped. The folks at the humanities center had brushed him off, and he didn't even know anyone who was interested in bird watching. I volunteered that I had one friend that might be able to help, but suddenly realized that it would mean at some point in the evening Peggy would probably have to meet Suzanne. But by that point I had already 'opened my yap' as my granddad would say. I texted Peggy a summary of the problem before I lost my nerve, and asked for her help.\n\nThe final sticking point was where to take the group for dinner. In the course of their other tours, they would encounter most every BBQ joint, Tex-Mex venue, celebrated Sushi place, and famous food trailer in town, so we had to come up with something a little different. I texted Lara and Suzanne and hopefully delegated the action to them to come up with a good idea. We had to move decisively, because the tour was planned for this coming Thursday. Oiler had set up a discussion and file exchange area on one of the university systems, and we were really going to have to hustle to pull this off. \n\nI headed back towards the dorm and called Lara, and it went right to voicemail. She and Millie must have found a way to help each other out. I had to get back to the dorm and knock off two chapters worth of reading in one class, and three in another, if I was to stay on track before tomorrow's new classes. Then I had to reply to all those emails from the party. It was going to be a hectic week, and I hadn't fully arranged my dating calendar yet. Saturday was all booked, going to the football game and then dinner with Lara, her dad, and Lillian Gush. Friday was up in the air, as Suzanne had soccer games Friday night and Saturday night, so I was planning to see her Sunday. I maybe should plan to spend Friday with Peggy, serving her fancy faithfully, especially if she helped me out with the F1 tour group, but wondering if that was somehow coupled to agreeing to Suzanne's planned adventures. I was of at least three minds about that, and two of them were crazy. It's not always easy in Texas."
    ],
    "authorname": "conanthe",
    "tags": [
        "anal",
        "group sex",
        "oral",
        "football",
        "bdsm",
        "urolagnia",
        "fraternity",
        "sorority"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-13"
}