{
    "title": "Secret Smiles and Three Little Words Pt. 14",
    "pages": [
        "Chapter 16\n\nAlex dropped her purse off on the table as she sorted through her mail. Nothing, as usual.\n\n\"Hey stranger!\" Lena called out.\n\n\"Hey!\" \n\nAlex turned the corner and Lena was on a chair changing the light bulb in the overhead light.\n\n\"Don't fall,\" Alex marveled. \n\n\"What's with that look?\" her roommate asked seeing the grin on her roommates face.\n\n\"Well,\" Alex smiled crossing her arms. \"I thought you were afraid of heights or something, because you would never change that lightbulb before! It could be out for days and you would still leave it for me!\"\n\n\"Well,\" Lena shrugged. \"I guess it's because my roomie isn't around much anymore!\"\n\nAlex frowned. She hadn't thought about how this new relationship was going to affect Lena.\n\n\"Don't,\" Lena warned her seeing her disappointment. \"I was teasing! I am super happy you finally have a guy!\"\n\n\"Finally?\" Alex asked with a tapping of her foot in mock anger.\n\n\"Honey,\" Lena said getting off the chair. \"It had been so long I thought poor Gavin was going to have to dust it off!\"\n\n\"Hey!\" Alex defended with a smile. Lena shrugged.\n\n\"So?\"\n\n\"It was fantastic,\" Alex smiled. \n\n\"Come over here and fill me in!\" Lena smiled taking her by the arm and leading her to the couch.\n\n\"There is nothing to fill in!\" Alex tried.\n\n\"Bullshit!\" Lena gasped. \"You are a kinky bitch, I want to know what deviate behavior you have had to do!\"\n\nAlex laughed, but Gavin's discussion from the airport came back. That their lifestyle was labeled deviate. Lena meant it as a joke, but there it was. The first words out. Deviate.\n\n\"Nothing too bad,\" Alex assured her. \"There really is nothing deviate about it.\"\n\n\"Come on!\" Lena laughed. \"All Paul and I do is the missionary position! If he is being lazy I get to be on top to spice it up! I want some freaky sex, so I have to live vicariously through you! Now details!\"\n\n\"What do you want to know?\" Alex laughed as Lena folded her arms.\n\n\"I don't care,\" Lena told her. \"Let's start off with the craziest place!\"\n\n\"Well,\" Alex smiled. \"I gave him a blow job in a stall of the men's room in an upscale restaurant.\" She smiled with an embarrassed shrug as her face heated up.\n\n\"What?\" Lena gasped. Just then Alex's phone went off and she was thankful. She smiled and showed Lena it was Gavin. She nodded.\n\n\"Hey,\" she said into the phone, she tried to get up but Lena took her by the arm to keep it from happening.\n\n\"Did Pavy get off alright?\" Gavin asked her.\n\n\"No problems,\" Alex assured him.\n\n\"What did the drunk big mouth tell you that he shouldn't have?\" Gavin's question was hard and she held her breath as she wondered what he meant. Did Pavel call him and warn him that Alex knew about Carla? Would he be pissed off she knew?\n\n\"What do you mean?\" Alex asked cautiously.\n\n\"I mean the guy will say anything to get me in trouble,\" Gavin laughed. The laughter meant this had nothing to do about Carla. Thankfully.\n\n\"Well,\" Alex smiled sheepishly. \"He told me you went on a honeymoon, but didn't get married?\" Gavin growled on his end of the phone. \n\n\"I told you not to believe anything he says, right?\" Gavin reminded her.\n\n\"You did, but after all I learned last night, I get the feeling that the more time I spend with Pavy, the more I'm going to learn about you!\" She laughed. \"I noticed you didn't outright deny the story.\"\n\n\"Christ! I was in high school!\" Gavin defended.\n\n\"Well perhaps you should just tell me, or I'm going with Pavy's version,\" she teased.\n\n\"What did he tell you?\"\n\n\"He said, you were having this fling with a chick you worked with at a restaurant,\" Alex smiled at Lena who was hanging on every word. \"She got married, but it wasn't your typical wedding, while the groom went out that night drinking with his buddies, she came into work and saw you.\"\n\n\"Fuck,\" Gavin hissed. \"She was pissed that he left on their wedding night,\" Gavin explained slowly. \"She came in and we went out afterward. I...I can't believe he told you this story.\"\n\n\"And you fucked her, so she could have her revenge,\" Alex finished for him laughing into her hand. \"Well every bride should get laid on her wedding night, traditionally it's the groom, but in a pinch...a gorgeous dark knight will do just fine!\" She defended for him.\n\n\"I'm going to kill him,\" Gavin growled. Alex laughed as Lena covered her mouth in disbelief.\n\n\"Not denying any part of that story I see,\" Alex pointed out.\n\n\"Anything else?\" Gavin asked her. Alex held her hand over the mouthpiece while she controlled her laughter. \"Oh damn I hate him!\" He growled. \"What?\"\n\n\"Well...,\" Alex laughed.\n\n\"Never mind,\" Gavin interrupted. \"I don't want to know.\"\n\nElizabeth sat at a table in lounge. The papers from the conference lay in a scattered mess on it. She had tried to put last night out of her mind. It wasn't working, she had been distracted all day. \n\nThe events of last night came in struggled thoughts. There was Royce, on his knees injecting her with heroin. There was the feeling of elation as the drug pumped through her. Then it all faded into a dream like state. She remembered Royce on her. Felt him in her. She was unable to say anything. She then was on her stomach. Royce still in her. Having his way with her and she was unable to stop it. On one hand she was angry that Royce took advantage of her. On the other hand, she had her ultimate desire.\n\nRoyce's promise that if she left Gavin and became his sub he would let her ride his coat tails to Congress. The promise that Royce's father would help Royce become President. \n\nIf Royce wasn't lying to her, she could be a First Lady. If Royce wasn't lying. If nothing else she would be a congressman's wife. That in itself would be higher than she ever dreamed of. But a shot at the White House? Ridiculous. Only if Royce wasn't lying to her. He could very well be covering his ass. He knows he fucked up, could this all be a ploy to pacify her? To keep her from ruining him?\n\nThe rest of what he said the next morning after finding him in her bed bothered her as well. It was a threat. A subtle one. The threat of if she try to ruin him he would in turn ruin her. He would use the drugs against her. It would end the relationship with Gavin. She would be humiliated. She would be just another woman who would be ridiculed in the press if she went with just her word. She would have to rectify that.\n\n\"Hey,\" the voice drew her head up and she smiled pleasantly. It was one of her coworkers.\n\n\"Did you understand any of that shit?\" the woman asked as she sat down.\n\n\"No,\" Elizabeth laughed at the dry statistic filled lecture they had to endure.\n\n\"You ok?\" the woman asked her. \"You look a little run down.\"\n\nShe did feel run down. She assumed it was an after effect of the heroin. She felt sluggish and her head hurt. She rubbed her toes under the table. The injection site itched as well. She remembered that is where Royce injected her, in between her toes, to keep it from Gavin. She would have to stay away from the needles until she was away from Gavin. She would also have to stay away from Royce. She couldn't go back against her vow with Gavin.\n\n\"Look,\" Elizabeth told her coworker. \"I'm gonna hit the sack early, see if I can shake this bug before it gets started. See you in the morning for another fun filled day of dronery!\"\n\nElizabeth sat at the desk working on the computer. She was waiting for Royce. She had texted him to meet her in the room. He never responded so she wondered if he even got it. The knock at the door told her he did.\n\nOpening the door she saw him with champagne in his hands.\n\n\"I figured if you were going to turn down my offer you would have done it over the phone,\" he smiled holding up the bottle.\n\n\"There are some things I want to get straight,\" Elizabeth said moving away from the door.\n\n\"Ok,\" Royce frowned. \"Sounds ominous.\"\n\nWaking in she pointed to the chair and he sat. She smiled and took the bottle from him. Popping the top she poured them drinks.\n\n\"I want it on the record that what you did was wrong,\" she told him handing him a glass of champagne. \"You took advantage of me, while I was passed out!\" He nodded with a frown.\n\n\"Look,\" he began with a shake of his head. \"I said I was sorry! You were just so damn sexy...I didn't think you would mind really. I mean you are leaving Gavin and are wanting to be with me...it was just a matter of poor timing!\"\n\n\"No,\" Elizabeth said. \"I decide if and when we fuck. I was out, you should have respected the fact I couldn't give you my permission and left me. But you didn't. You raped me.\"\n\n\"Rape is a strong word,\" Royce told her with a firm voice. \n\n\"What would you call it? Better yet, what would Gavin or a court of law call it? A woman, unconscious? You fucked me without permission, knowing I would have never given it to you!\" \n\n\"What do you want me to say? I'm sorry? Fine, I'm sorry,\" he told her standing up. She dropped her head.\n\n\"You think that is enough?\" Elizabeth asked him. \n\n\"I said I would make it up to you,\" Royce said with a tender hand to her face. \"What do you want me to say? How can I make it up to you?\"\n\n\"You can admit to me, for my conscious, that you raped me. That I had nothing to do with it. I didn't lead you to believe it would be ok,\" She said with a tear.\n\n\"I admit it,\" He said tilting her head up. \"I took advantage of you.\"\n\n\"You raped me,\" she repeated.\n\n\"I raped you,\" he told her softly. \"I can't take it back.\"\n\n\"Don't ever do it again,\" she warned him. \"I belong to Gavin. Until that is over, I have a vow. Do you understand me?\"\n\n\"I understand,\" he smiled. \"Forgiven?\"\n\n\"Only if you hold up your end of the bargain,\" she told him heading for the door. \"I think you should leave, I don't want to screw up my last few weeks with Gavin. If he finds out you were in my room...he will know we fucked, I can't live with that if he knows. You keep your mouth shut, I will do the same.\"\n\nHe went to the door and looked down at her.\n\n\"Are you going to the White House with me,\" Royce asked her. She didn't answer, her smile was answer enough. Royce winked at her.\n\n\"Think about leaving him sooner rather than later,\" Royce said with soft plead. She nodded.\n\nOnce he was gone she leaned against the door and wiped the tear away. She went back to the computer and pulled up the video record function. She hit stop. That went better than she expected it to. Now if he backed out. She would ruin him! She also had proof for Gavin. If he found out that Royce fucked her, she had proof that she didn't want it. He would still be pissed about the drugs, but that could be forgiven. Violating his absolute of not sharing, well that couldn't be.\n\nChapter 17*\n\nAlex was busily making dinner when his hands enveloped her around her narrow waist. His lips were next to touch her and it caused a river of shivers down her back. She gasped as she reveled in the soft feel of his warm lips.\n\n\"You don't have to cook for me,\" he whispered as he nuzzled her neck, pushing her pony tail to the side with his face so he could hit that one spot that always made her a puddle.\n\n\"I want to,\" she smiled as her legs quivered.\n\n\"So, Pavel got off ok?\" he asked her.\n\n\"What-ever do you mean, Sir?\" she teased as she dropped her whisk and gripped the side of the counter.\n\n\"What?\" He asked, pulling his lips from her neck as the taste of her flesh was blinding him to the question. He then laughed at the unintended innuendo. \"I love your dirty mind.\"\n\n\"Yes, he made the plane just fine,\" she smiled. \n\nShe kept her fingers gripping the counter to keep herself from touching him. That's what she wanted to do, to spin and put her hands on him. She never realized how much of a 'hands on' type person she was. She guessed it was because in her drawings and paintings she was touching the person she was drawing at all times.\n\n\"My dinner is going to burn,\" she warned him.\n\n\"I hope it's not the only thing on fire!\" he teased, licking up the nape of her neck causing her to shiver uncontrollably. \n\nThey were eating dinner and Alex couldn't help loving the feel of the atmosphere. It was what she had been wanting. Gavin alone. No distractions. No Elizabeth. No party. Hopefully no phone calls.\n\n\"This is delicious,\" he complimented from behind his wine glass.\n\n\"Thank you, Sir,\" she beamed. \"I love cooking. I love doing things with my hands despite those who like to keep me from it!\"\n\n\"I have no idea what you are referring to,\" he laughed. She rolled her eyes with a playful smile.\n\n\"How was your appointment?\" \n\n\"It was fine,\" he grimaced. It told her it wasn't fine.\n\n\"I love that you protect me at all times,\" she said shaking her head. \"But do you think sometimes it does me a disservice?\"\n\nHe looked at her and frowned.\n\n\"Look, like I said, there are some that shouldn't be Doms. They don't know how to control the situation. They risk too much. They go too far. It's easy to do in this lifestyle. You complain about the fact that I never let myself go, well that's why. I see the after of going too far, too often,\" he said setting his wine glass to the side.\n\n\"Was the sub alright?\" she asked.\n\n\"Yes, he'll be fine,\" he shrugged. He then folder his hands under his chin and began to devour Alex from across the table.\n\n\"It blows me away that there are male subs!\" Alex laughed. \"So his mistress went too far?\"\n\n\"Yes, even women can take it too far,\" Gavin nodded. \"I stopped by Madelyn's on the way back and checked on Kelly.\" He said hoping to hide some of the darkness of his world with some good news for her.\n\n\"How is she?\" \n\n\"She is good,\" Gavin nodded. \"Her throat should be fully healed in the next couple of weeks. She is meeting a new Dom next week.\"\n\n\"Already?\" Alex asked the concern filling her.\n\n\"Yes,\" Gavin smiled noticing her concern for a woman she barely knew. \"He's a good man, this will be his third sub so she won't have to go into anything right off.\"\n\n\"Three subs?\" Alex gasped.\n\n\"Yeah,\" Gavin said with a disapproving voice. \"He likes to have several, a harem, if you will.\"\n\n\"Why don't you like that?\" Alex asked him getting up and moving closer to him.\n\n\"I like the one on one closeness,\" he told her as she knelt at his feet. \n\nShe put her head on his leg and stroked his inner thigh.\n\n\"Stuff like this,\" he smiled as he stroked her pony tail softly. Running his fingers through her hair, starting at the knot of the bind in her hair and moving down to her free flowing hair.\n\n\"You can still have this,\" she smiled. \"And have more than one sub.\"\n\n\"Alright,\" he laughed. He wanted to prove a point. A point he knew for a fact. \"Let me ask you this, and be perfectly honest with yourself, even if you can't be with me.\"\n\n\"I'm always honest with you,\" she said in a hard tone that he smiled at.\n\n\"Have you not had a moment in the three weeks we have been together, where you looked at Elizabeth and didn't like her?\" He asked with a gentle tug of her hair. \"Where you didn't want her to be there. Or were just flat out jealous?\"\n\n\"In all honesty,\" Alex smiled as she kissed his leg. \"Yes.\"\n\n\"See?\" he smiled. \"Jealousy is very common in our world.\"\n\n\"I know,\" she laughed. She hated to admit he was right. She was afraid he would use it later against her. \"I am a part of it. The kittens hate me!\"\n\n\"Hate is a strong word,\" he smiled.\n\n\"Candy would claw my eyes out if she thought it would let her take my place,\" Alex laughed.\n\n\"Oh Candy!\" he laughed. \"Not even remotely interested in that one.\"\n\n\"That one?\" \n\n\"Oh don't start!\" he teased.\n\n\"No,\" she smiled. \"I guess you're right. I am jealous. Jealous of Elizabeth. Jealous that she has you and I don't. I mean, if Elizabeth stays...,\" she let her voice trail off.\n\n\"If Elizabeth stays,\" he smiled at her. \"What happens?\"\n\n\"You will push me away,\" she said picking up her head and looking at him. \"Your absolutes will win out. If Elizabeth at some point says she is not leaving. I will be the one left standing when the music stops.\"\n\n\"You think that?\" Gavin asked her with a cocked head.\n\n\"I know that,\" she frowned. \"So, part of me hopes she leaves quickly. Part of me hates that I want that. And part of me is just utterly confused at how this is all happening.\"\n\n\"You said it yourself,\" Alex frowned putting her head back down. \"It's the sub that decides to end it. You decide to start it, but the sub, always...always, decides when it stops. If Elizabeth stays on, you will push me away. That I know as fact.\"\n\n\"Yet, here you are,\" he smiled putting his fingers on her skin. \"Kneeling at my feet.\"\n\n\"Isn't that what I'm supposed to do?\" she asked him.\n\n\"You can,\" he smiled. \"It's not a big deal with me, I like the submissive position but not necessarily at my feet. Although right now, I loving it!\"\n\n\"And that, for sure, is what I'm supposed to do, please you,\" she sighed. \"I love doing that. I can't explain why that is. I can't explain why I have the drive to please you! It overwhelms me. Consumes me. I can think of nothing else. Have you put some spell on me?\"\n\n\"I have,\" he whispered. \"It's called pleasure. You are reciprocating the pleasure I have given you. It's an innate desire humans have. To repay. It can be both good and bad. Vengeance and repayment of pleasure. Two primal desires not yet stifled by civilization!\"\n\nShe looked up at him and saw the fire crackling in his eyes. Desire. Another human trait not yet stifled she smiled.\n\n\"How can I please you sir?\" she asked him kissing his hand.\n\n\"Stand up,\" he said softly. \n\nShe obeyed immediately and he pulled her in between him, seated in his chair, and the table. He slowly undid the buttons on her blouse, never dropping his eyes from hers. He slid his fingers along the edge of her bra cups causing her flesh to raise in pleasured bumps. \n\nHis fingers went up and over her clavicle, pushing the blouse from her and she let it drop to the table. His fingers came back down, lightly brushing her skin, down the center of her chest, across the soft globes of her breast which rose and fell quickly with her ever quickening breaths. \n\nHe didn't look at her, not in the face. He watched his fingers lightly touching her. He seemed fascinated by them. The way they felt on her. The way her skin responded to his touch. The way her soft brown skin, tanned by the sun, seemed to warm as he went. Like he was pushing a fire from the tips of his fingers into her skin. \n\nPulling her bra cup slightly he saw the color difference, from soft brown to the white from where her bikini covered her. He liked that. It was unlike Elizabeth who had just the one color. The milky white as she never went outdoors. \n\nDown his electric fingers went, causing her to sigh. He smiled at the sound. Another pleasure of his. The sighs of pleasure. Unintended noises made by his subs letting him know that they were pleased. \n\nDown to her skirt waist. Down the outside of her hips to the hem in her soft skirt. It was loose and free flowing. Easily accessible for his hands. Not tight like Elizabeth's. He liked the differences. A world of differences. \n\nUp the outside of her thighs, the stockings she was wearing to drive him crazy. She told him she was never a big fan of them. But she recognized the look in his eye when she paraded around in them when she modeled a new outfit before he bought them for her. There was something sexy about black stockings, attached to garters.\n\nHe ran his fingers along the edge of them. Her legs opened easily, he felt her warmth between her legs. The thong she was wearing was easy to move to the side and he felt her wetness. He let his fingers drift through her soft pubic hair. It's soft line leading to pleasure. His and hers.\n\nHe put his head on her stomach and cupped her ass in his strong hands. He was fighting his own demons. He wanted to ravage her. To consume this delicious piece of sweet dessert. A perfect dessert to a perfect dinner. Her flesh. His dark demon begging to be released on her. To show her why he was so careful to control himself.",
        "\"Don't,\" she whispered.\n\n\"Don't what?\" he asked never lifting his head.\n\n\"Deny yourself,\" she said softly.\n\n\"I can't,\" he closed his eyes. She wasn't making this easy.\n\n\"Take me,\" she begged. \"I want all of you!\"\n\n\"I can't,\" he said again. This time a little less convincing. \"If I were to hurt you...\"\n\n\"I have my safe words,\" she reminded. \"I am protected. You won't harm me!\" \n\nHe shook his head as it rested on her abdomen. She was killing him as his dark side nudged closer to the surface.\n\n\"Take me,\" she said again. \n\nHis fingers dug into the soft underside of her ass cheek, as he lifted her and set her on the table gruffly. He stood and she leaned back, her hands acting as props to keep herself upright as his mouth ravaged hers with a force she desired. Their teeth clicking off one another by his shear force. His tongue demanding servitude from hers. Her smile covered by his mouth, but this is what she wanted. Her body exploded in a summer heat, simmering like the heat waves off the pavement in a mid-day sun.\n\nWith one hand he took hold of her pony tail and with a twist of his wrist, her head was drawn sharply back or he would remove hair by the roots. She hissed in pain. He looked at her eyes and saw a glimmer. Not quite fear, but nervousness.\n\nShe watched the storm in his eyes. The fight of good versus evil within him, when he pulled her hair she tingled slightly. He brought his free hand up and took hold of her jaw tightly. He licked her lips with his tongue. She brought her tongue out to play with his.\n\n\"I didn't fucking ask for your tongue,\" he warned her and she pulled back in. With the tight hold of her hair, her mouth seemed forced open and available to him. Her throat was enticingly inviting him. Like he was some sort of dark creature that Hollywood was so infatuated with.\n\nHis teeth dug into her neck and she winced at the gnashing of his pearly whites there. His mouth moved slowly to her ear as he devoured every inch. His free hand pulled her breasts from their cups and the nipples hardened almost immediately in the coolness of the air conditioning and his manipulations. Or perhaps they were already hard from the eroticism of the moment.\n\nHe ran his tongue down her throat, pausing at the notch in the base of her throat. She gasped as he bit there. Hard. She wanted to look down at him. To get a read of him. But his constant yank of her hair had her scalp tingling in subtle pain.\n\nFarther down his tongue led. Circling a nipple made her smile. His mouth clamping down on her nipple and areola caused her to jump. His teeth grinding on her still sensitive nipples from the other day. \n\nShe yelped and he released it. He looked at the red blood rushing to where he had just clamped. Just under the skin causing it to darken. He continued. Over to the other nipple taking it just as forcefully. She gritted her teeth. He released her and watched it darken up. His inner darkness reveling in how receptive her skin was. How easy it was to mark her as his. She was his the dark side growled in his head. \n\nHe stood up and looked at her face. She was stunning. Her neck craned and every delicious inch of her was available. He ran his hand around her throat and squeezed. He felt her try to swallow, something she did with difficulty with his hand there and her head back.\n\nComing back up to her face he peered into her blue eyes. He reveled in that. Her eyes a soft blue, wondering.\n\n\"Is this what you wanted little one?\" he asked her harshly. \"You wanted the wolf?\"\n\n\"Yes, sir,\" she whispered.\n\n\"What if you can't handle it?\" he growled biting her lip with his teeth. The soft taste of copper hit his taste buds. He pulled back and saw the soft line of crimson.\n\n\"I'll work on it, to get better,\" she whispered. She let her tongue go out and tasted the blood. She shook nervously. This was not what she was expecting. This was something else. She thought about her safe words. Would he stop if she used them? She hoped so. Not yet she decided. He wouldn't harm her. That she knew. That she felt in her deepest recesses. He would never harm her. Never. \n\nHe looked down at the mixture of saliva and blood on her lip. She saw the wolf in his eyes lighten. As if the wolf was sulking away from her.\n\n\"No!\" she barked out. \"I want the wolf!\" She begged. His eyes went back to the stare. His face hard. His jaw muscles flexing. His fingers took her nipple tightly and she gasped under their force. Pulling them outward as he squeezed making them cone up as her skin was stretched. He released it and it snapped back into place.\n\n\"Green,\" she said as he looked at her hard. He took the other and gave it a similar treatment. This one he held a little longer. Pulled a little farther out. And held it tighter between his thumb and forefinger. \"Green,\" she repeated under duress causing him to chuckle diabolically as he released her.\n\n\"To break you?\" he growled. \"Should I make you use a safe word?\" He searched her eyes. She didn't answer as she could tell she should say nothing. It wasn't a question for her to answer. It was one for him and his wolf. So she waited.\n\nHis fingers moved slowly down her stomach and back under her dress. Gripping her panties he curled his fingers around it. He felt the dampness in her pussy. His ravenous smile came out. Her breathing, she decided, was more suited for a sprint race. Her breast heaved with every breath. Her face flushed with heat. Fuck she was loving this! This not knowing what he was going to do. It appeared he was taking whatever he desired. That she loved!\n\nShe saw his jaw muscles tighten and he jerked on her panties causing her ass to lift off the table as the cloth dug into her skin causing her to cry out before she clutched her lips closed. She heard the cloth rip, but it didn't give way on the first yank. So he yanked again, this time harder, he would have pulled her off the table put his fistful of hair kept her in place. With one final yank they came free from her body and she saw the destroyed satin in his knuckles.\n\nHe pulled it to his nose and inhaled deeply while her hips and inner thigh screamed at the burn of the cloth that had dug into her. She watched as best she could. Her head back made that a challenge. Her neck muscles ached as she tried to watch him. Mesmerized.\n\nHe released her hair and she lifted her head slowly to watch him. She pulled her lower lip in and felt the tenderness of where he drew blood. That shocked her. She knew she was on fire, but she didn't know if that was the reason. Or was it what was coming? The unknown. He pushed her on the chest and she went back to lie on the table. The leftover food from dinner under her.\n\nHe sat in his chair and pulled her to the edge of table. Draping her legs over his shoulders he inhaled her scent first. Drawing in her essence. His mouth watering. He buried his face without warning causing her to cry out in surprise and pleasure. His face firmly planted in her sex. Not like before where he held his face back from her and only used his mouth and tongue. This felt like he was using his face to fuck her. His tongue was there as well, but the pressure let her feel his nose, his lips. His jaw. His teeth.\n\nShe craned her neck at the feel of it. Causing her back to arch. She gripped the table, her nails digging into the mahogany. Her body began to twist as her orgasm began to build like a boiler. Why this was making her boil faster, had her nervous. Was she like Elizabeth? Would she be wanting this all the time?\n\nHis face lifted as her orgasm rushed from her. She didn't even try to hold back the scream of pleasure this time as it rushed from her lungs and out her mouth to fill the room. Neighbors be damned! She collapsed on the table with a thud. A small bead of sweat trickled off her forehead and down her temple. This was so hot she was sweating and gushing! She felt the trickle of cum down the crack of her ass, only to feel his tongue draw it up into his mouth. His tongued jabbing at her anus.\n\nHe lapped at her now. Full tongue, flat against her sex, from the bottom of her slit to the top of her clit causing her to lurch at every apex lick. He drove his fingers in her, three of them causing her cry out and wince. He flicked his tongue on her button while he fucked her with his fingers. Nothing soft. All forceful. His tongue like a hammer on her sensitive button. His fingers pounding in her like they were trying to stuff her innards back in.\n\nHer cum came in a gush causing the sound of squishing to fill her ears as she screamed out. Her body twisted on the table, her top half on her side, the bottom half flat as he held her there. His face buried into her thigh, just to side of her sex and she yelped as he marked her again. The smile she wore was a mixture of supreme pleasure and slight pain as the wolf ravished her.\n\nSuddenly his fingers were gone. As was his mouth, before she could sit up he yanked her from the table causing her nails to clack against the wood as she couldn't release them fast enough.\n\nHe had her on her feet but spun her gruffly as he stood. Shoving her face down on the table she narrowly missed the butter dish with her face. Holding her down with the palm of his hand in between the shoulder blades she knew better than to adjust her positon. She thought about the last time someone took her like this. It ended in disaster. Her ass sore for days. She looked back and him as she felt him use one hand to undo his pants and drop them, his cock sprung from its enclosure and hit her sex causing her to gasp in revelation.\n\nHe slammed it into her. No warning, no initial probing to let her know he was about to enter her. She felt the hot, heavy head against her soft warm folds of her sex, then suddenly she was filled by it. His weight causing her hips to dig into the edge of the dining room table. She reached out and took hold of the sides again.\n\nHe took a fist full of hair and pulled her head up and forced her neck to crane. His hips slammed into her, driving her against the table. The pleasure of his hard shaft splitting her apart, followed by the sharp sting of the table digging into her hips. She tried to back up a bit to keep the table from digging into her but his power made that impossible. Each and every stroke slammed her back into it.\n\nShe cried out blissfully, a mixture of pain and carnal pleasure. His growl caused her to cum. She had awoken the beast. The wolf he called it. She was ecstatic about it. He wasn't holding back. He was fucking her. Not concerned about her pleasure at the moment. Just his and that in turn brought her a new found pleasure. One of complete submissiveness.\n\nHe slammed his body into her with such force that the dishes on the table jumped with every powerful thrust. A sudden clash of porcelain caused her to look to see her plate no longer on the table. It was violently shoved off by his powerful fucking. Her pussy began to throb. His fingers, her orgasms and now his powerful cock beating her from the inside out. It wasn't used to this. \n\nShe cried out on every thrust, her body began to ache. From where the table dug into her hips. Her nipples hurt from the way the tablecloth rubbed the sensitive spots he left her nipples with after biting them viciously. The inside of her thigh which now bore his mark was tender to his thighs hitting it every so often as he rammed her from behind. Her scalp from his fistful of hair. Her lip, it wasn't bleeding any more, but it was there. She couldn't wait to see them. All of them. Gavin's marks as he claimed his property. As he used her body to satisfy the wolf!\n\nHis cock suddenly left her feeling empty as she felt the head against her ass. She panicked. The sudden thought he was going to ravage her ass with the same force he was fucking her battered pussy caused her to look back as he positioned himself. The wolf was going to take her ass. She wanted it, but wanted to be softer than the way he pummeled her pussy. She swallowed hard.\n\n\"Yellow!\" she said softly at first drawing his eyes up from her ass to her eyes as she looked back at him. \"Yellow!\"\n\nAnd just like that, much to her disappointment, the wolf was gone. He leaned over her and kissed her mouth. Hard, not as hard as before but hard.\n\n\"I didn't say red,\" she said regretfully as he slowly pulled his lips from her. She screamed at herself for her cowardice. For begging for the wolf then denying him when he was there. God dammit she howled.\n\n\"I know,\" he smiled into her back as he growled as he fought to control himself. \"I know, my little one.\" \n\nHe dropped the head of his cock a little lower and slid is cock back in her slowly. The feel of it causing her to gasp as her nerves were super sensitive from the battering his cock had just given her.\n\n\"Fuck my ass,\" she pleaded.\n\n\"Soon,\" he smiled as he kissed her neck. \"Very soon!\"\n\n\"Now, please?\" She knew he was disappointed. She could feel it radiate off him. She wanted to take that disappointment from him. She wanted him fully satisfied. But she looked back at him and knew.\n\n\"No,\" he said firmly. In a tone that told her that moment was done.\n\nHe pulled her hips back and his fingers caused her to hiss as they gripped where the table had dug into her. She looked back at him.\n\n\"Oh no, little one,\" he smiled as he began to slam his hips into her. \"I'm not done with you yet!\" She smiled as she laid her head down and he fucked her. Not with the utter abandon he had just done but one step short. Part of her was disappointed, part pleased as she had his marks again.\n\nPulling her off the table he forced her to her knees and put his cock in her mouth. Pulling on her hair he used her mouth to jack his cock off. He wasn't fucking her mouth, she wasn't sucking him off. He was pulling on her head to jack off with the convenience of her mouth ready to accept his cum.\n\nHe gave it to her with a growl as he filled her mouth with the salty taste of his hot cum. His head thrown back as his body tightened as it pumped from his body causing his thighs to shake under her hands as she held them.\n\nHe dropped his eyes to hers as he pulled his cock out.\n\n\"Swallow,\" he answered her silent question as she held his cum in her mouth. She did so with a subtle smile. He dropped his mouth to her and kissed her. She was in the process of swallowing a second time to make sure it was all down, but he didn't give her time. Now their tongues danced in the remnants of him. She was surprised. And exhilarated. And exhausted.\n\nShe collapsed under the table when he released her head. He pushed the table away from her and picked her up from the floor. She tucked her head on his shoulder, her lips kissing his neck as he carried her to the bed. Laying her gently within the sheets before pulling up alongside of her, stretching his body against hers. His now softening cock against her ass. His arms sliding around her upper body where she intertwined her fingers in his.\n\nHe nuzzled the back of her head lovingly as she stroked his outer forearms as he held her tightly in his embrace. She felt like a butterfly in a cocoon. Safe. Secure. Loved. She listened to his breathing behind her. The way his heart beat on her back. The way the hair on his chest tickled her back slightly. If there was a heaven she decided. It was in an embrace such as this.\n\n\"I'll go run you a bath,\" he whispered softly in her ear. She gripped his arms keeping him from leaving her. \"You don't want a bath?\"\n\n\"No,\" she smiled as she adjusted her head to lay it on his hands. \"I want this.\"\n\n\"As you wish,\" he said pulling her tighter. She sighed. \"Let me know when you are ready.\"\n\n\"In a bit,\" she whispered kissing his hands. His talented hands.\n\nHer head lay softly on his chest, his fingers dripping water on her causing a rain like feel on her sensitive nipples. It brought a smile to her face. She loved the tenderness he always showered her with afterward. A pampering she had never known.\n\nHe brought the bottle of soap to his hands and put some in. Using his hands to massage the soap into a lather on her chest. His fingers becoming slippery as they pushed the bubbles around her chest. \n\nShe let her eyes flutter closed as he massaged her skin, gently rubbing his fingers up her throat causing her to tilt her head up to let him fully clean it. Down his fingers went encircling her breast before moving to her stomach and gently massaging there. She was lost in the feel of his hands on her body.\n\n\"What?\" she asked when she realized in her dream like state she missed his question. It caused him to giggle.\n\n\"I asked you how long it would take you to do some additional paintings,\" he repeated kissing her head.\n\n\"Why?\" she asked turning her head to him. \n\n\"I talked to Maole,\" he smiled. \"He is eager to set up a show for you.\"\n\n\"What?\" she turned and faced him now. Getting up on her knees in the massive tub.\n\n\"Maole owns a gallery,\" Gavin smiled as he pushed her hair over her ear. A tender touch that caused her mouth to kiss his hand instinctively, as a thank you, before he pulled it back. \"I showed him the painting, he loved it.\"\n\n\"He loved it?\" Alex asked stunned. Gavin nodded.\n\n\"So,\" he smiled. \"How long?\"\n\n\"I don't know,\" she gasped. \"I don't know!\" The excitement was blocking her from thinking clearly.\n\n\"Well,\" Gavin shrugged. \"Let's take what you do have, see if he likes them. Then tomorrow while we are out, we will get some supplies.\"\n\n\"Are you kidding me?\" she screamed as she jumped into his arms.\n\n\"I thought you said it wasn't that big of a deal to you to have a show?\" he asked as he kissed her lips.\n\n\"I lied,\" she snickered the disbelief filling her eyes. \"I just...well I guess I was afraid.\"\n\n\"Of what?\"\n\n\"Rejection,\" Alex shrugged. \n\nHe turned her back around and leaned her forward to wash her back.\n\n\"You are a fantastic artist,\" Gavin assured her. \n\n\"Nobody has even looked at my stuff,\" she whispered as she pulled her knees up and rested her chin on them while he washed her back. \"I guess I figured it wasn't good enough.\"\n\n\"Maole has a great eye,\" Gavin assured her. \"He knows what's good and what isn't.\"\n\n\"What gallery?\" Alex asked turning to him. He turned her back around. If she kept moving he would never get her clean.\n\n\"The Chicago Riverwalk Galleria,\" Gavin smiled.\n\n\"What?\" she turned fully again causing Gavin to drop his hands exhaustedly. \"That is one of the best galleries in the country!\"\n\n\"I know,\" he smiled.\n\n\"I don't belong in a gallery like that!\" Alex gasped. \"I mean, that gallery sells masterpieces!\"\n\n\"I know,\" he repeated with a shake of his head as he pulled his wine down off the back of the tub.\n\n\"How?\" she blurted. She had doubts that she could enjoy such a location. Did this Maole owe Gavin a favor? Was he doing it because she was good enough or because of a debt? Was he in the life?\n\n\"How?\" Gavin asked her. \"Because he liked your work.\" He said with a shrug.\n\n\"Really?\" she asked with an arched brow of disbelief. \"He doesn't owe you, or he isn't doing this because you're his doctor?\"\n\n\"Why is this so hard for you to believe?\" Gavin asked her his temper rising a tick.\n\n\"Stuff like this doesn't happen to me!\" Alex explained. \"I mean, I never would have dreamed something like this!\"\n\n\"Little one,\" Gavin smiled leaning forward and kissing her. He turned her and held her in place to let her know she wasn't to move. She smiled at the silent command. \"Maole knows talent. He owes me no favors, he is not part of the life. I have bought some art from him. I, on occasion, attend some shows there. I asked him to take a look at something I had picked up and told him to give me an honest appraisal.\"\n\nHe brought the shampoo out and lathered her hair. His fingers gently massaging her scalp. This made her shiver with pleasure. No man had ever paid this type of attention to her. To bathe and wash her hair? Not in her life. Her dreams maybe, the occasional movie or fantasy, but not real life. Gavin did it on a regular basis!",
        "\"He spent the day with it,\" Gavin continued as he worked. \"He called and asked where I got it.\" He tilted her head back and rinsed her hair.\n\n\"I told him that I knew the artist,\" he continued. \"It was something I liked and was going to buy it, but wanted to give her a good price.\"\n\n\"You are not buying that painting!\" Alex said firmly interrupting him.\n\n\"Shush,\" he commanded causing her to laugh.\n\n\"He said with any artist it's all about what you are willing to pay,\" Gavin continued pulling her back to his chest. He then handed her a glass of wine.\n\n\"He said work like that usually goes for two to three thousand in his gallery,\" Gavin finished with a clink of her glass.\n\n\"What?\" she gasped. \"I've been taking fifty to hundred bucks!\"\n\n\"Not anymore,\" he smiled. \"Maole then asked if you had any more, I said you did. He wants to meet you and discuss setting up a show.\"\n\n\"Ok,\" she laughed. \"If somebody wakes me from this unbelievable dream! I'm killing them!\" She turned and cupped his face. \"You are a dream!\"\n\n\"I,\" he smiled. \"Am just a man, a man who is trying very hard to win your approval.\"\n\n\"You have it!\" she kissed him before the words were fully out."
    ],
    "authorname": "CJT",
    "tags": [
        "hard sex",
        "swallowing",
        "bruising",
        "rough sex"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-14"
}