{
    "title": "The Wallflower Ch. 10",
    "pages": [
        "This is not a very long chapter, just so you know. I promise the next chapter will be back to the usual 4 pages. Tune in on November 2015. I'll be joining in on the National Novel Writing Month. I'll be posting chapters of my new novel. It will be in the BDSM genre. 50,000 words, which is about five chapters plus two Wallflower chapters. So, rate/comment/email me. Hope you enjoy the chapter :D \n\nP..S Thanks for whoever spotted Nicholas's age discrepancy. I went back to look at my character profiles and realized he is in fact 23. I'll edit it when I do my final draft. \n\n***** \n\n'What am I going to do with my life...I can't spend it the way it is now.' \n\nLily sighed as she looked at the fridge. One...two...three...four...five...six... It had been six weeks since she had graduated from high school. Other than her recent change in lifestyle, friends, and living situation, not much had changed. With the way things were going in her life, she'd be an old, forty-year old woman with nothing going on in her life, but a sadistic Spirit to keep her company. \n\n'Oh fun,' Lily thought, rolling her eyes as she flipped some of the bacon in the frying pan. When she placed the cooked bacon on plate, she looked back at the calendar. Her bland future was not the only thing that had Lily begrudging the coming days of her life. Next month was the first days of college. An experience that she wouldn't be able to get to be apart of. The bitter thoughts of the unfairness of it all clouded her brain and made its way down to the tip of her tongue. Lily didn't want to say it. She didn't want to add being a bitter old woman on top of her life sentence. But the words tickled her tongue, urging her to at least say it once. \n\n\"All that hard work...and all I get is a dead end minimum wage job,\" Lily said aloud as she pushed the scrambled eggs around in the skillet. \"No...because of some bitch who has the audacity to call herself a mom.\" Lily's temperature rose as her anger wanted to erupt with just thinking about her. \n\nShe hadn't thought of her mom in weeks, and she liked it that way. The woman was apart of her past, and that is where Lily wanted her to stay. Her mom never called her to see if she was OK, sick, or even possibly dead, so Lily held the same attitude towards her. She didn't even entertain any wishes of misfortune on her either. Her mom couldn't do anything to hurt her anymore. Lily just had to pick up the pieces of her life and go on from there. The only piece that seemed to be in place was her job. \n\n'I mean I like my job, but...I can't waste my life away there. Only thing I can do is get an education.' \n\nAnd getting an education cost money. Money she was surprisingly able to save because of low rent and the few times she actually needed to use her car. But of course she didn't have the kind of money to be able to go to a university at the moment. Only a community college. Lily mentally sighed at the thought. She had been a straight A student who was apart of every honor society available and graduated top ten percent. Lily smirked to herself as she flipped over the pancakes. But there were so many other students who had backgrounds the same as hers, but only a select few got full scholarships. \n\nAt first, she had protested the thought of not going to college. She had the grades, the awards, and the extra curricular activities. A school had to give her enough money to go there without paying a dime. That's when she realized reality was a real bitch. And that reality was no matter how good her grades were, unless she was some six-foot heavy bound football player with an impressive record no school was going to give her a full scholarship. And America is supposed to be supporting academics? Supporting academics her ass. \n\nAt that point of her life, Lily thought community college was out of the question, but at this stage in her life, she had no choice. She had to apply to a community college, fill out FAFSA, and unfortunately, apply for a student loan that would take forever to pay off. But, hey, she had to do what she had to do. \n\n\"What's with the long face, cowgirl,\" she heard Nicholas say behind her. Lily looked behind her to find Nicholas lumbering into the room with an extreme case of bed head and dressed in only his boxers. Lily no longer stared at him in his state of undress. This was now her normal to serve Nicholas breakfast in his underwear. \n\n\"Nothing,\" she muttered. \"Just thinking.\" \n\n\"About what?\" Nicholas asked as he looked into the fridge for his personal carton of orange juice. \n\n\"About going to college.\" Lily reached into the cupboard and got a plate to put the pancakes on as they began to turn a golden brown. \n\n\"You should go. You're smart. Where do you want to go?\" Lily glanced out of the side of her eye to see Nicholas leaned onto the fridge, drinking his orange juice while staring at her through his hair. \n\n\"The local community college.\" She flipped the pancakes onto the plate, but stopped as she heard Nicholas splutter and choke on his juice. She turned around and saw Nicholas was bent over and coughing while turning red. Lily quickly placed the plate on the counter top and hurried over to him to give him a couple of smacks on the back. \n\n\"What in the blue devil is going on?\" Mrs. Yates said, appearing in the doorway. \n\n\"Nicholas just choked on some juice is all.\" Lily looked down at Nicholas, rubbing his back as his coughs subsided. Nicholas began to stand up while gasping for air. He wiped way the drool before fixating his eyes on Lily. \n\n\"Are...are you...out of your...mind?\" Nicholas asked while still gasping for breath. Lily stared at him confused. \n\n\"What are you talking about?\" \n\nNicholas let out s final cough before straightening up. \"Lily, you have to be out of your mind to go to community college.\" \n\nIt felt like a weight fell on Lily's head. When being around Nicholas, this feeling became the usual. \"You have got to be kidding me!\" Lily raised up her arms in exasperation as she walked back to the stove to check on breakfast. \"I think you're nearly choking to death, but what you're really doing is just being a drama queen!\" \n\n\"Did I miss something?\" Mrs. Yates asked as she sat down at the table \n\n\"Nicholas is having a drama queen moment,\" Lily murmured. \n\n\"Well I just think that you're too smart to be going to community college.\" Nicholas interjected. It's for people who didn't do good in highschool, don't know what they want to do, or-\" \n\n\"Or what Nicholas?\" Lily turned around and placed her hand on her hip. \"Broke? Because that's what I am. I work a minimum wage job, have to room with you and a sadistic ghost for low rent, and end up only having enough to pay for groceries and maybe a few extra things. I don't have enough to pay for community college even when I get paid! I have to take out a student loan just for that!\" \n\n\"Why don't you just apply for a scholarship like everyone else?\" \n\n\"Scholarship month has already past. I have to use my own money to pay off the tuition, classes, and books.\" \n\nNicholas and Lily stared off against each other. She, daring for him to say anything else, stared back with crackling fire in her eyes. He, trying to think of something to get her to abandon her thoughts of going to community college, scrunched his face but realized this was one battle he was going to lose. \n\n\"You're eggs and bacon are done, hon,\" Mrs. Yates interrupted while sipping on coffee that Lily didn't even notice she had gotten during their exchange. Lily tore her eyes away from Nicholas to take the skillets off the heat and scrape them onto a plate. She sat each plate down before retrieving a plate for herself. \n\nWhen she turned back around, Lily saw Nicholas's back as he walked out of the kitchen. \"Aren't you going to eat breakfast?\" she yelled behind him. \n\n\"I don't feel like eating,\" he called back, barely containing his anger as he trudged up the stairs. It took all the will Lily had to not slam the porcelain plate on the table as she sat across from Mrs. Yates. \n\n'That fucking, ungrateful, sonofa-' \n\n\"He really can be insufferable,\" Mrs. Yates remarked before pressing her lips to her mug of coffee. Lily gave a small snort in response as she reached over to put a few stacks of pancakes on her plate. \n\n\"More like bipolar. One moment he has this carefree attitude, the next he acts as if I pissed in his cereal.\" \n\n\"Maybe it's because he likes you.\" \n\nLily's face heated from the possibility but easily pushed it aside and put a piece of pancake in her mouth. \"We're just friends.\" \n\n\"I never inferred you were anything else, dearie. It's just obvious.\" Mrs. Yates got up from her seat as she fetched herself a plate. \"If you never came to live here, he'd still have kept that woman around both here and at work. What happened at that shop was a disaster waiting to happen. Just too bad that you had to get caught up in all that.\" \n\nIt was just Lily's luck, or Anna Belle's stupidity, that the unstable woman tried to attack her while Nicholas was right beside her. Now that Lily really thought about it, the incident was definitely due to Anna Belle's stupidity. Nicholas was Anna Belle's boss. How did the woman think she had the balls to get in his way, literally, cause a scene in front of everyone, and try to attack someone in HIS shop right in front of him? Lily rolled her eyes at the remembrance of the whole thing. \n\n'He really needs to pick his stalkers better,' Lily thought as she speared another piece of pancake to put in her mouth. \n\nAt least Anna Belle would no longer be a problem. According to Nicholas's employees, the chick was in a mental hospital. Lily knew the chick was crazy, but not to that extent. But then again all Anna Belle really needed was a little \"push\" off the deep end. \n\nLily's fork clattered onto her syrup laden plate as the thought flickered like a sparking lighter and then grew to consume her entire brain. When she was first told of Anna Belle's fate, she had chalked it up to the chick over reacting to Nicholas cutting any ties with her and as a result her obsession with him consumed her. But then again, what had caused Nicholas's epileptic attack after he left? It could have very well have been stress. But with the Spirit inside of him, Lily could not rule out that He caused Anna Belle's insanity. Whatever he did, it was worse than what he had done to Louis. The possibility of something worse than his \"pranks\" were unfathomable. Could the Spirit really be that cruel? \n\nBut anything was possible when the Spirit was involved. \n\n~~~~*~~~~*~~~~*~~~~*~~~~*~~~~*~~~~ \n\n\"What in the world did you do to Nick?\" Sal asked the moment she walked through the door with his lunch. \n\n\"What are you taking about?\" Lily asked with a blank stare. \n\n\"Ever since he got here this morning he's been acting like a total heel.\" Sal looked behind him, causing Lily's to follow along with him. He was right. Nicholas's hold demeanor was rigid and tight as he worked on a man's tattoo. It was so bad that it looked like he was glaring at his own creation before he was even finished. Nothing about him gave way the usual care free personality he had at his job. \n\n\"He's just being a drama queen,\" Lily rolled her eyes. \"And who says I did anything?\" \n\nSal turned around and gave her a look that said \"It's so freaking obvious.\" \n\n\"Never have I seen Nicholas come here with a moody expression like that until you started rooming with him. And he's only like that when you two get into a disagreement. It's like a raincloud hovering over him and unfortunately, for us, we get wet too. So spill it.\" \n\n'Are you serious?! What is Nicholas's deal? It's just community college for God's sake!' \n\n\"I decided I wanted to go to college,\" Lily said. \n\nA pause in the conversation lingered between her and Sal. Sal look at her, expecting more. But when none came he tried to urge her for more information. \n\n\"And yooooourrrree...moving out?\" \n\n\"Nope I'm staying where I'm at.\" \n\n\"You're going to do something extreme to pay for it?\" \n\n\"No.\" \n\n\"Then what's he so pissed about?\" A tinge of annoyance was in his words as he crossed his arms. \n\n\"He hates the fact that I'm going to apply for community college.\" \n\nSal stared at her dumbstruck as he took the time to absorb the lunacy of the whole situation. \"I'm going to kick his ass. He's been barking at us all day and a real stick in the mud because of something as small as that?\" Sal let out an exasperated sigh as he rubbed his temple. \"I've been friends with him for years and I wonder what has kept me from clocking him in the back of the head.\" \n\n\"Because you work for me.\" Lily and Sal both jumped when Nicholas's cold voice came from behind her. Lily turned around and met with the hardened gray stare. She glanced back to see that even Sal had powered down the moxy he had just worked up a few seconds ago. It was almost comical to see the Goliath of a man yielding to the silent power of David. \n\n\"And I would appreciate it if you would keep my personal life out of the shop,\" Nicholas said, interrupting her thoughts and brought her eyes back to him. He looked down at the bagged lunch in her hands and took it from her. He muttered a small thanks and went off to the back room. \n\nSal and Lily stared off after him, ensuring that he had shut the door before going back to the conversation. \"Where did he come from?\" Sal whispered, not taking any chances that Nick would play another Houdini act. \n\n\"I thought you would know,\" Lily whispered back, while looking behind her. \"Maybe we were just too preoccupied to notice him.\" Lily gave a short shrug before turning her body towards the exit. \"Well since he doesn't look like he wants to talk to me, I'll be going. I'll see you tomorrow, Sal.\" Lily gave Sal a wave before stepping out of the shop. \n\nShe let in the humidified air into her lungs and let out the steam through her nostrils. Lily looked up at the sun beating down on her. God, today was hot. Had to be the hottest day of the summer. And she chose today to go back to her highschool to get her transcript which was on the other side of town. \n\n'It's not like I don't have gas in my car. I'll just drive over there.' Even the drive over there wouldn't even put much of a dent in her gas. Lily let out a sigh as she walked back to the townhouse. It was a pain to have to think about money. Living around it for so long, she was just so immune to it. But for the next part of her adult life she'll have to worry about paying her tuition, paying off student loans and working extra jobs to pay if off. Lily pushed the hair out of her face as the humidity plus the appending frustration weighed on top of her. \n\nBy the time she got to her car, her body was dripping with sweat, which frustrated her further. 'C'mon, Lily. Stop stressing out. Don't stress out about it now. All you're doing is getting your transcript.' Lily let out a breath as she turned the ignition on and put the car in drive. \n\nBut the more she kept telling herself to pull it together, the more her vision began to swim. The more her ears started to tune out the everyday noise of the streets. The more she could hear...something. It was whispery and faint but then grew to a dark and guttural laugh. The laugh was on the borderline of violent and sadistic but yet maintained its sanity. Knowing that its very existence, though only audible, crawled underneath her skin. When Lily felt the crawling of fingers climbing up her legs, she opened her eyes and screamed. \n\nSlamming on the brakes, she screeched to a halt just behind the stop line at the red light. Lily pushed back her hair and rested her head against the steering wheel while blinking rapidly to ensure that she was still awake. When did she black out in the first place? Maybe it was the stress. \"Why would I be stressed out from going back to highschool?\" Lily asked herself, annoyed at the fact that she nearly got into an accident because of some stress. \n\nAngry beeping from behind alerted her to the changing light. She pressed her foot on the accelerator as she headed towards her destination. Lily thanked the Lord that the school was only a few blocks away, but when she pulled up in front, she froze in her seat. Now she remembered why this place gave her anxiety. Of course there was Brandon and his sill relentless abuse. Abuse...yeah, that's what Nicholas called it. \n\nLily shrugged off the ever-present Brandon drama and unbuckled her seatbelt. But no, the problem with this school was not only just Brandon. It was the crowds of nameless people that disturbed her. The students that either stared in enjoyment as if your life was an entertainment reality TV show, wondering what will be today's episode. Other students would join in with Brandon and hurl insults at her while they witnessed him physically abuse her as if she deserved it. And then there were the few that turned their heads to see what was going on and then turn their head as if they didn't care to get involved. There wasn't one person who ever came to her rescue. There was no hero in her story. \n\n'Suck it up, Lily,' she scolded herself as she felt the impending tears behind her eyes. 'It was in highschool. Get over it.' Even though she scolded herself, a small voice inside her said 'Yeah, but higschool was two months ago. And higschool lasted for four years...and so will college.' \n\nBefore the smaller voice gained any more power, she launched herself out of her car and clomped across the parking lot. She pulled the door open to the front entrance of the school and made her way to the front office. It was now or never. \n\nLily pushed open the door to see a familiar face. Miss Jolene. She was one of the counselors at the school that Lily was assigned to. Miss Jolene was one of the few counselors that took her job seriously. She wanted the students that were assigned to her to reach their maximum potential, whether it be trying to go to Stanford or go straight to work. And if she felt that a student was, as she said, \"undervaluing themselves\" then she would say so. Lily just imagined the look of disappointment on Miss Jolene's face when she tells her why she's here. \n\n\"Hey, honey,\" Miss Jolene got up from her seat and held her arms out, welcoming Lily in for a hug. Lily accepted the hug as Miss Jolene rubbed her back with a warmness that spread throughout Lily. Miss Jolene patted her on the back and stepped back to sit back in front of the computer. \"How's it goin', since you walked across that stage from all of this?\" she said motioning about the building itself. \n\n\"I'm fine,\" Lily said, putting on a weak smile. \"I've been working and got myself an apartment.\" \n\n\"What about school?\" Miss Jolene turned from her computer with hands brought together and a searching stare that knew Lily was holding something back. \n\nLily let out a small sigh and thought to herself 'Here we go.' \n\n\"That's why I'm here. I need my transcript to apply...to community college. I know it's late but I need to do this or else I never will,\" Lily rushed out. \n\nMiss Jolene gave her an expressionless look before asking her next question. \"Lily, I thought you wanted to go to the big university here. I know you'd do well in the classes.\" \n\nWhat was Lily to say? The truth was she didn't have the money for university. The truth was her mom basically forgot she had a daughter and kicked her out. The truth was she lived in a sinister apartment because she didn't have a place to go. None of it sounded good... so she lied. \n\n\"I just want to get the general education courses out of the way before transferring to the university.\" \n\n\"Lily...hon...please stop those lies.\" Miss Jolene looked her straight in the eye. The look that was as stern as iron and as sharp as a harpoon. \"You and I both know your AP scores. If you went to community college for the reason you gave me, you would only be there for one semester as a part time student taking one or two classes. And honey, you will be bored.\" ",
        "A silent pause sat between them as the evidence to her blatant lie was revealed. \n\n\"I'll print out the transcript for you, but know that I know when you're lying to me about school because I have all your grades and I know all your AP scores.\" Miss Jolene got up without another word and went to the printer to get her transcript. When she came back and handed Lily two envelopes, Lily looked at her confused. \"Lily, I really think you should apply to that university, so I printed out two copies of your transcript if you do take my advice.\" \n\nLily took the envelopes and gave a silent thank you before heading out the door and back to her car. \n\n~~~~*~~~~*~~~~*~~~~*~~~~*~~~~*~~~~ \n\nLily wanted to send the transcript immediately when she got back to work on Monday, but when it came, she was reluctant. She even came hours before her shift just so she wouldn't be scolded for doing non work related activities on her boss's dime. Miss. Jolene's words haunted her. What would she be going to community college for if she had pretty much passed all the necessary general education courses. She would be taking other courses that may not even count when she transferred. \n\nOr should she even transfer? \n\nSince her AP scores knocked out the reason to even go to community, then why even waste money, time and energy transferring? Because she wasn't ready to be on a larger version of highschool. Lily closed her eyes and let out a shaky breath. The possibility of anything worse than what Brandon did to her made Lily want to lay down in a fetal position just thinking about it. It even made her reconsider going to college at all. \n\nThen the image of being a forty year old bag working at a library with nothing to look forward to in her life flashed before her eyes. Lily pushed away from the computers and went to ask her boss if she didn't mind her working early. \n\nFor days it went on like that. Getting to work early to apply, having second thoughts, chickening out, then working early. At this point the question was what she was the least afraid of. Losing money, being harassed, or becoming an old maid? And on Friday, she concluded that she was the least afraid of losing money. So she went to her job early in the morning and this time she filled out the application, paid the admission fee, printed out the address to the community college and pasted it as the addressee. \n\nSatisfied, Lily sat back from her work and thought to herself, should she apply for the university. If she ever went to visit Miss Jolene again, Lily at least wanted to tell her that she tried. Lily shrugged her shoulders and searched for the school's address and printed it out. When Lily searched through her bag for the envelope...she couldn't find it. 'What the hell?' Lily thought. \n\nShe searched through every compartment, pocket, and crease to find the envelope. When that didn't work, she pulled out every object in her bag out. Running out of ideas, she frantically looked to see if the letter was possibly hidden inside any of the objects. But no such luck. \n\nLily returned her stuff to her bag and exhaled through her nose. 'I guess it wasn't meant to be,' Lily thought to herself. She got up and slung her bag onto her shoulder before exiting the library to send in her letter. \n\n~~~~*~~~~*~~~~*~~~~*~~~~*~~~~*~~~~ \n\n\"Did you finally do it today?\" \n\nSal looked at her with expectant eyes as he leaned back in his seat. Lily had been talking to him about her decision all week. She even told him what kept her from wanting to go to university. Everything from the daily bullying to apathetic teachers and drama crazed classmates. Even Nicholas didn't know any of that. Lily supposed that it was because Sal was so easy to talk to and let her tell him instead of forcing it out of her. \n\n\"Yeah, I did it,\" Lily said, giving him a large grin. \n\nOne moment she was on her feet, smiling ear to ear and the next she found herself in the air giggling as Sal wrapped her into a bear hug. \"You did it, hon! I'm so proud of you.\" \n\nLily still continued to laugh as he set her back down on unsteady feet. She stopped laughing when her back his something hard like a brick wall. Hands held her shoulders and straightened her up. Before she could apologize, she was met with smoke filled gray eyes. \n\n\"What's going on?\" Nicholas asked less coldly than usual. \n\n\"I finished the application for community college,\" Lily said matter of factly with two fists on her hips, readying herself to Nicholas's negativity and objections to the idea. He had become less cold as the days went on, but Lily knew he was only that way because she was deciding on whether to apply at all. Now that it was confirmed, Nicholas was going to, without a doubt, throw a fit. \n\n\"Cool.\" Nicholas shrugged his shoulders and took his bagged lunch from her hands and headed back to the break room. \n\n'Cool?! No...wait...what the fuck?!' Lily looked after him more pissed off that he was so aloof with only a single word to say on the matter than the expected berating about how she was making a horrible decision and needed to reconsider. Lily knew it didn't make sense, but she had gotten immediately defensive, ready for whatever he was about to say. Except a single word that made all the preparation for not. It was like being ready to defuse a bomb, but instead figure out it wasn't even active in the first place. \n\n\"Wow,\" Sal said, watching the situation unfurl. \"Was not expecting that.\" \n\n\"I wasn't either,\" Lily grumbled. \"With the way he's been barking at ya'll of late, I was expecting an explosion.\" \n\n\"And where the hell does he keep coming from,\" Sal looked behind her to see if there was some secret entrance behind her or something. \"How does he keep managing to sneak up on us? Either I'm going blind or I'm too distracted to keep tabs on him.\" \n\nLily gave Sal a shrug. \"I don't now but I'm going to go back to work before Mr. Boss Man gets you for slacking off.\" \n\n\"Ok, see ya later hon.\" \n\nLily gave him a wave before heading out the jingling door. \n\n~~~~*~~~~*~~~~*~~~~*~~~~*~~~~*~~~~ \n\n\"I don't know any of this crap,\" Lily muttered underneath her breath as she sat on the floor trying to do her FAFSA. The thing was annoying as mess! The first part was easy-well except for the 'are you a dependent or independent' question. In truth, she was independent but based on that question it asks about IRS questions based on being a dependent and all her papers are for when she stayed with her mom in the previous year. When she had that all figured out, after she called the people for help, then came the annoying part. \n\nFilling out the part that specifically asked how much her and her mom made last year. \n\nLily pushed her curly hair out of her face and let out an exaggerated sigh and looked at the clock. She had been at this for three hours since she came home from work. There was no way she was going to answer those questions tonight. For one, she didn't have the IRS papers. And two because she was too damn tired. \n\n\"Ahhh, I see you're doing FAFSA,\" Lily heard behind her. \n\nLily nearly jumped out of her cross-legged position on the floor until she looked back to see it was only Mrs. Yates in the arm chair behind her. Mrs. Yates's lips twitched, trying not to smile, as she sipped her tea. \n\n'Like mother, like son,' Lily mumbled in her head. \n\n\"Yeah,\" Lily said, as she turned back around to log out of the account. \n\n\"Pain in the arse, isn't it?\" Lily peaked back to see Mrs. Yates still sipping her tea. \"I remember I had to do that for Nicholas. The people and the school had me going crazy trying to reach deadlines to get the stuff processed.\" \n\n\"Why would you need to worry about FAFSA, Mrs. Yates? Seeing as how you and Nicholas live, it seems like y'all are pretty well off.\" \n\nLily heard a withering breath from behind, which caused her to turn around. \"It looks that way doesn't it. Well, Lily, I'm not one of those women who came over and...well made it into middle class. I'm one of those statistics of women who married a well off man, became housewife, and didn't have to work a day in my life. I was...kept.\" \n\nLily saw Mrs. Yates hand tremble slightly as she looked down into her tea in deep thought. For once since Lily came to live with Mrs. Yates, she didn't just see a bold old woman who wasn't afraid to pop you with a couple of wise cracks. She saw a younger woman past the wrinkles and white hair. She saw a lifeless attractive black haired beauty with sad gray eyes. It was hardtop believe that this woman was...- \n\n\"Yes, I was a gold digger,\" Mrs. Yates licked her lips nervously as she put her tea on the side table. \"And Lord knows I'm paying for it everyday. I didn't like to admit it, but when I divorced my husband, I realized that I was a single mother with no skills, no degree, and only enough money to survive on for a good six months. Since Nicholas was nothing but a babe, I was a cleaning woman. So, like what you're doing now, I filled out loans, FAFSA and other annoying paperwork in order to put Nicholas through school.\" \n\n\"Why didn't you ask your ex-husband for alimony ...or child support?\" Lily asked. \n\nAnd there it was. The twisting grimace that began the contortion of what had been a lovely face. A grimace so foul and full of hate that it surely cursed anyone who saw it. Whatever her husband had done, Mrs. Yates was surely paying for it. \n\nRRRRING RRRRING! RRRRING RRRRING! \n\nLily's brought her cell phone up to see who was calling. It was a number that she didn't recognize, but it was definitely a local number. Lily unlocked her phone and brought it up to her ear. \n\n\"Hello?\" \n\n\"Is this Lily?\" a chipper female voice said through the receiver. \n\n\"Yes...who's this?\" Lily replied, arching her eyebrow. 'How is anyone this perky at six o' clock at night?' \n\n\"I'm from the admittance office from the University of Alabama. I just called to congratulate you on your excellent academic achievement and your acceptance into the university. I'm calling to let you know -\" \n\n\"Hold on. I didn't apply to the university.\" \n\nA pause sat between Lily and the admission officer. \n\n\"Are you not Lily Bellamy, who graduated top ten percent of her class, and currently lives at 760 Meridian Street in Tuscaloosa?\" \n\n\"I'm her but... I don't recall sending it in.\" \n\n\"Well someone sent in an application for you, and I'm calling to notify you that if you choose to come to the University of Alabama that your tuition, classes, and books are covered for by scholarship for the four years it takes to get your degree.\" \n\nLily almost passed out when she just said covered. This was one of said schools where the only students that were \"covered\" were promising football players to lead the school to another SEC championship. That she got a scholarship at all this late in the game was startling as it was. But fullride?! \n\n\"All you have to do now is confirm that you will be coming in the fall, sign up for a day to attend the necessary Bama Bound Orientation on campus, and sign in to your mybama account, which I have sent to you in an email with instructions. Have a good day.\" With that the woman hung up. \n\nLily held the phone to her ear for a few moments longer before throwing up her hands, screaming \"YEEEEEEEEEEEESSSSSSSSSSSSSSS!!\" \n\n\"I'm guessing that was good news,\" Mrs. Yates said, obviously startled. Lily looked behind her and saw that Mrs. Yates had her hand pressed against her chest, trying to still her racing heart. \n\n\"I'm sorry, Mrs. Yates. I didn't mean to scream,\" Lily apologized. \n\nMrs. Yates smiled as she waved away her apology. \"Yes you did. Only a woman who has experienced a miracle shouts like that. Now tell me what happened?\" \n\n\"I got accepted into the university with a full ride scholarship,\" Lily squeaked unable to contain her excitement. Lily firmly shut her laptop closed. \"No stupid loans and no stupid FAFSA!\" \n\n\"I thought you applied to the community college.\" \n\n\"I did but somebody applied for me,\" Lily shrugged her arms as if it didn't make much of a difference to her. \n\n\"Hon... doesn't this whole plan stink of, I don't know...Nicholas?\" \n\nLily stopped stone cold in her tracks as his name reverberated through her ears. She felt heat creep up her cheeks as she thought of the possibility. Possibility her ass. It stunk of Nicholas! Anyone could have known where she lived, but not everyone knew that she had two copies of her transcript and be close enough to search her bag for her information to answer the questions needed to apply. Only someone who specifically lived in the same house and the same room as her would be able to gather the information to send in her application. \n\n\"Mrs. Yates, is the tattoo parlor still open?\" \n\n\"Yeah. He doesn't close the place down till ten pm.\" \n\nLily got off the floor and stuffed her cellphone in her bag while getting her keys before stomping off to the front door. \n\n~~~~*~~~~*~~~~*~~~~*~~~~*~~~~*~~~~ \n\nInside the parlor, Lily heard boisterous laughing as she stepped carefully around the door to keep from setting off the bell. Lily stood at the front desk while looking at the employees joking about and trading gossip. All the tattoo artists and Sal were sitting around in booths while Nicholas was working on a guy's back. His eyes were knit in concentration as he worked on the intricate details. For once, Nicholas's hair was out of his eyes. The top part of his hair was pulled back into a short, curly ponytail. \n\nAs if on cue, his eyes looked up and met hers. Lily's face immediately heated up, but she stomped it down as best as she could. But it was a losing fight the longer her he stared at her. \n\n\"Ok, Matt, I've done a good portion on you today,\" Nicholas groaned as he pushed back the stray hairs. \"One more session tomorrow and I'll be done, big guy.\" \n\n\"Thanks, Nick,\" the giant of said back as he got his shirt in hand walked towards the exit. \n\nOnce he was out, Nicholas cracked his back and turned his attention back to Lily. \"Are you just going to lurk in the dark like a skulker, or am I going to have to drag you out myself.\" Nicholas rubbed his jaw slowly, waiting for him. \n\nOh...she'd come alright. \n\nSMACK! \n\nNicholas's cheek burned a bright red against his pale skin as he glared down at the woman who was a full foot shorter than him. She right back at him with her own unwavering glare. Her right hand in a firm, straight line was beginning to turn red as well. Her wrist was throbbing from impacting his hard jaw, but she didn't even shrink back in pain. \n\nFinding enough pain tolerance, Lily pointed her finger at him. \"That...is for going through my personal stuff without my permission and undermining my plans by going behind my back to do whatever you wanted to manipulate my life!\" \n\nSMACK! \n\n\"That is for giving everyone a hard week just because you couldn't have it your way for once and barking at everyone for your sour mood over something that wasn't even a legit reason to be mad in the first place!\" \n\nSMACK! \n\n\"That was just for being an asshole! And above all-!\" \n\nThe room went quiet as everyone anticipated another resounding smack, but all was silent. \n\nIn the middle of the tattoo parlor, Lily wrapped her arms around Nicholas's waist and snuggled her face against his chest. Tears running down her face she hugged him a little tighter. She sniffed a little, taking in some of his woodsy scent. \"This... is for being my friend and not giving up on me.\" Lily let all the tension leave her body as she settled into his body. She felt warmth run across her back as she felt his has hand encircle hers and rest his chin on top of hers. \n\nThey stood just like that for a few moments in time, neither moving to break the embrace. \n\n\"Y'all are both such drama queens,\" Mike said, interrupting the peaceful moment between the two. \n\n\"Then y'all must be the audience, because I didn't see none of my WELL PAID employees come to my defense while this crazy woman over here is slapping me upside the head,\" Nicholas countered while still holding onto Lily. \n\n\"Maybe we think you deserve it for barking at us,\" Kelly shot back. \n\n\"I don't care what y'all say, I ship them so much,\" Sal said while chuckling. \"They're going to drive each other insane.\" \n\n\"We're just friends, Sal,\" Lily and Nicholas both said in unison. \n\n\"Friends who've been hugging for...five minutes?\" \n\n\"I'm cold,\" Lily lied. \n\n\"It's July,\" \n\n\"Maybe Anna Belle wasn't too far off,\" Mike snickered as he joined in on teasing them. \"Last week it was holding hands, and this week it's hugging. I wonder what they'll do next week.\" \n\n\"New rule,\" Nicholas interjected. \"No one bring up that crazy bitch's name.\" Nicholas let go of Lily, taking all the warmth with him. When she turned to everyone else, she saw them trying as hard as they could to hide their smiles. \n\n\"So what's the special event for season's beatings?\" \n\n\"I got into the university!\" Lily announced. \"And Nicholas is coming with me to orientation.\" \n\n\"Say what?\" Nicholas looked at her like she was out of her mind. But as Lily saw it, he got her into this, he was going to see it through with her. \n\n~~~~*~~~~*~~~~*~~~~*~~~~*~~~~*~~~~ \n\n\"How big is this damn campus?!\" Nicholas groaned behind her carrying a souvenir he got at the campus store. \n\nLily would've turned around and called him a wimp if only he wasn't right. They had been walking since 8 o' clock in the morning for the orientation. It was now noon and her feet felt like lead and she was in dire need of a drink of water. She was so grateful that she was wearing shorts and a tank top. It was Alabama in July for God's sake! Where the temperature got no lower than seventy degrees and the humidity made the sweat from four hours ago stick to your skin like glue! \n\n\"I don't know, Nicholas. The map sucks here,\" Lily groaned. \n\n\"Where's the parking garage then? I want to be in the car and off this campus when I roll one.\" Nicholas wiped his hand across his brow as he eyed the police car rolling down the street. \n\n\"Aren't you supposed to be checking out the college girls?\" Lily got out the campus app that she was told to download to use the interactive map, which caused them to halt. \"I mean they party, they're hot-\" \n\n\"Do not say hot.\" Nicholas bent over and clutched his knees. \"And I've been to college already. Did my time. Got out because I was too fucking awesome.\" \n\n\"You didn't get laid did you?\" A smirk pulled on Lily's lips before it vanished. Lily inwardly cursed the map as she tried repeatedly to get it to tell her where the parking garage was, but all it did was tell her how to get from there to where they were. 'Out of all the football games the school wins, they couldn't buy a decent gps system for the campus?' \n\nOut of nowhere, Nicholas took the phone out of her hands. \"Hey!\" Lily protested. \n\n\"Better question Lily is have you gotten laid yet?\" Nicholas said while fiddling with her phone. \n\nA newfound heat scorched her already burning skin as it raced up her body to her face. \"No.\" \n\n\"Then stop asking me about my business, Ms. Nosy. And here you go.\" Nicholas handed her phone back to her and saw the directions as plain as day in Google Maps. \n\n\"How...\" \n\n\"I used that same trick for when I went to college. Now let's go.\" \n\n\"Lily?\" A familiar voice came from behind them. Lily turned around as Nicholas groaned. Louis jogged up to them as he waved and smiled. \"What are you doing here?\" \n\n\"Can we carry this conversation towards the car?\" Nicholas interrupted. \"I really need some air conditioning.\" \n\n\"Fine,\" Lily said as he took his hand and lead Nicholas along as she turned back to talk to Louis. \"I'm coming to school here in the fall.\" \n\n\"Awesome that means we'll get to hang out and everything.\" Louis beamed at her. ",
        "\"If you catch me at the campus library I guess.\" Lily shrugged. \"I'm still going to be living with Nicholas and working in the city library.\" \n\nThe conversation turned silent as they waited for the cars to pass, so they could cross the street. \"Well what about football games? Everyone knows you're not a true Alabama student if you don't go to a football game. Plus, Brandon's on the team.\" \n\nLily felt herself stiffen as Nicholas's hand tightly wrapped around hers. How could she forget that prick went here? The whole goddamn school had a huge celebration when the star football player was going to be on national TV playing for the University. Lily mentally rolled her eyes. But Louis didn't know there was bad blood between the two of them, but neither did she want him to opening his mouth to Brandon. \n\nLily feigned a small smile as she rubbed Nicholas's back, but he shrugged it off and took his hand away. \"Actually I'm not much of a football fan,\" she whispered to Louis, pretending she actually cared that she was surrounded by hardcore football fans. \"I only watch on Thanksgiving really. But don't let him know that, it may break his heart. In fact don't let him know I'm even a student, so he doesn't look down at me with total disdain.\" She laughed as she put on a show of mock sadness. \n\n\"OK, Will do,\" Louis laughed along with her. Only Nicholas didn't join in on the joke. \"Will you at least come to the parties?\" \n\n\"Sure.\" \n\n\"Mind if I come along, too?\" Nicholas asked with a voice as cold as stone. \n\n\"Um...sure.\" Louis answered. \"If you don't mind partying with a bunch of kids.\" \n\n\"As long as you provide me with booze and give me a place to smoke, I'm straight.\" \n\n\"Cool.\" \n\nThe rest of the way to the garage was in silence. When they arrived at their car, Nicholas took Lily's keys and got in, turning on the car to put the air conditioning on blast. Lily looked back at Louis apologetically as she gave Louis a quick hug and promised to see him later. When Louis started to jog away toward the exit, Lily slid into the driver's seat. \n\nLily turned to look at Nicholas, but he simply sat back in his seat, staring straight ahead as he took a blunt from behind his ear and put it to his lips. Lily rolled down the windows as she put the car in drive and pulled out of the garage. The ride was in silence. Both knowing what needed to be said. \n\nLily wished he would just say something because she knew a silent Nicholas was usually as dangerous as a lurking spirit. \n\nShe pulled up to the curb in front of the townhouse and let out a sigh. Lily turned off the ignition. Looking straight ahead as she said. \"Whatever you're going to say Nicholas, say it now.\" \n\n\"If I am to say anything, I would say that was a spectacular performance out there,\" a deep, velvety voice spoke next to her as a slow lonely clap resounded inside the vehicle. \n\nLily closed her eyes and rested her head against the top of the vehicle. She had avoided him for two weeks. He had laid dormant within Nicholas for so long watching and listening. And with his bit of news, he'd been less than pleased. \n\nA hand wrapped around her arm, causing a scream to emit from her body to only be caught in his rough hands. \"Come on.\" Lily exited the car and let Him lead her to the townhouse. He opened the door and pulled her in. \n\n\"Hey, Lily,\" Mrs. Yates greeted as she was coming down the stairs. \"How was orienta...\" Her sentence continued into nothing as she saw the red eyes glaring back at her. \n\n\"Go,\" He said and nothing more. Mrs. Yates turned around and hastened up the stairs. He did not moved until a resounding click was heard from upstairs. \n\nThey were alone. \n\n\"Well, well, Ms. Lily,\" He crooned in her ear. \"That was a grand performance out there today. To pretend that you are actually friends with this ...person.\" He let go of her arm and carefully began to walk in a circle around her lie a spotlight. And she was the star. \n\n\"You are not to talk. This is not one of those times where I let you talk. Every time I give you the chance, you lie to me.\" The Spirit rolled his back as if getting used to being back in his body after so long. \"You play with me as if I can be toyed with. You have lost your privilege to talk. You will be as silent as me.\" \n\nHe made a few more thoughtful walks around her. The squeaking of his shoes on the hardwood floor was all that could be heard. \n\n\"Such a lovely actress,\" He said, stopping in front of her to caress her cheek. He gazed into her eyes in mock longing. \"Carefully wording your lines. Playing the right emotion at the right time. Hiding all the pain away. Behind lies and smile while you suffer in the one place you can not escape.\" \n\nHis finger traced along the contour of her face. \"And that is here.\" He touched her forehead lightly, but it felt like a lead in her gut. \"The darkness of your mind where the dark truth resides.\" His face lost all mirth watching her squirm underneath her skin and turned into somewhat of a glower. \n\n\"But know this, Lily. I'd advise you to stop pretending that there is no problem. That this man aims to ruin you. If you think he will stop by stooping to beating you, ostracizing you, and lying about you. Lily, if he hasn't stopped at your high school and in your adult life...when is he going to stop. Never. This man means to own your mind, body, and soul. Nicholas has told you something like this already. But you...don't...listen.\" \n\nHe took another few step till he was directly behind her. She froze as she felt his hands wrap around her stomach and feel his weight on top of her. His face nestled against her cheek, making her feel Nicholas's lip ring nestle against her. \"Know Lily...that I will be watching,\" He whispered into her ear. \"I will be as close to you as I am now. Whenever that bastard dares to be even in the same room or hallway as you, I will be there.\" \n\nA silence descended upon the room as he let out a sigh. \n\n\"You only brought this upon yourself, Lily. I was appeased for some time until your little stunt today. But now I can not trust you, so I will be staying for awhile.\" She felt a light kiss on her cheek as he stroked her curly tresses. \"I will not let anything happen to my precious wallflower.\""
    ],
    "authorname": "BlessingAndCurse",
    "tags": [
        "spirits",
        "black woman",
        "white man",
        "tattoos",
        "piercings",
        "spirit"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-wallflower-ch-10"
}