{
    "title": "The Double D's Play D&D",
    "pages": [
        "\u201cAs you all should have learnt in this class, we live in a multicultural society,\u201d droned Mr Bartholomew, the Downtown High social studies teacher, in his usual boring monotone. \u201cFor this weeks homework I want you to select one culture and spend some time immersed in the culture. I want a five hundred word essay on your findings by Monday.\u201d There was a groan from the class, they\u2019d been hoping to get away without any homework. A hand shot up at the back of the class. \u201cYes Danielle?\u201d\n\n\u201cCan we pair up for this sir?\u201d asked the blonde student. Danielle was the drop dead gorgeous captain of the school cheerleading squad. Every boy in the school desired Danielle and her best friend Devon, they were nicknamed the \u201cDouble D\u2019s\u201d. Partly for their names and partly for their remarkably perfect D sized racks. The two girls made every male in the school, both teacher and student alike, go weak at the knees and hard in the crotch. Danielle\u2019s face was the perfectly sculptured face of an angel, fine featured with a flawless complexion, a face that a Hollywood Starlet would die for. Devon was equally beautiful, with the face of a she-devil that men would kill for, a living, breathing succubus put on the earth to tempt even the most strong-willed of men. Both girls had bodies that were every man\u2019s ideal fantasy. Slim, toned figures, ultra long legs, tight, nicely rounded buttocks, curving hips to a slender waist and massive tits, who\u2019s impressive size seemed to defy gravity.\n\nMr Batholomew sighed, every time he handed out homework Danielle would ask the question, and invariably the following Monday he would receive identical essay\u2019s from both Danielle and her best friend Devon. \u201cVery well,\u201d he agreed, deciding it was not worth fighting it.\n\n\u201cYippie!\u201d squealed Devon in joy, tossing her long silky brown hair.\n\n\u201cOkay, that\u2019s all,\u201d said the social studies teacher. \u201cI\u2019ll see you all Monday.\u201d\n\n\u201cWhat culture are we going to pick?\u201d Devon asked Danielle as they headed for the door. Devon didn\u2019t even notice Billy Myers staring at her perfect ass it swayed seductively in her short skirt. \u201cOur gardener is from China I think,\u201d she offered helpfully. \u201cAnd I love Chinese food, especially the one with noodles.\u201d\n\n\u201cNo, I\u2019ve got a much better idea,\u201d said Danielle smugly as they headed down the hallway, drawing numerous leering male gazes at the slight jiggle of their ample bosoms and the movements of their long tanned legs. \u201cThe geeks.\u201d\n\nDevon frowned at that. \u201cEw, what about them?\u201d she asked.\n\n\u201cWe\u2019ll study nerd culture,\u201d explained Danielle. \u201cI bet no one else will do that and we\u2019re bound to get an A plus!\u201d\n\nDevon smiled, \u201cThat\u2019s brilliant Danielle! Do you know any geeks that will help us though?\u201d\n\n\u201cNo,\u201d Danielle admitted with a shrug that did mind boggling things with her massive jugs. \u201cBut they\u2019re boys, when was the last time a boy said no to us?\u201d\n\n\u201cTrue,\u201d Devon said with a wicked grin. \u201cLet\u2019s find us some geeks!\u201d\n\nThe two gorgeous cheerleaders made their way to the place they thought most likely to contain geeks, the school library. Sure enough, in one corner, amongst the boring science books that Devon and Danielle had never visited, sat David and Murray. They were both skinny, had thick rimmed black glasses, buckteeth and annoying laughs. Definite nerds and perfect subjects for the girls\u2019 social studies assignment.\n\nDanielle took a deep breath, causing her gigantic chest to swell out even further. \u201cLet\u2019s do this!\u201d\n\nWith that both girl approached the two nerds who were in heated debate and did not even notice the approach of the two prettiest girls in school.\n\n\u201cThe changes Jackson made were just sacrilege!\u201d insisted Murray, his face passionate as he argued with his best friend David.\n\n\u201cNo way!\u201d protested the pimple faced David, equally zealous. \u201cThe book would never have translated to the big screen without making at least some changes!\u201d\n\nDanielle pointedly cleared her throat. The two nerds turned in surprise and both almost fainted at the sight of the two stunning girls standing in front of them.\n\n\u201cWe need your help,\u201d said Devon, after a moment as she realized the boys weren\u2019t about to speak.\n\nDavid swallowed, but still didn\u2019t answer, his wide-eyed gaze draw involuntarily to Danielle\u2019s swelling chest and low cut blouse. Murray nodded slightly but otherwise remained silent.\n\n\u201cWe\u2019re doing a social studies assignment and need to spend some time with you two,\u201d Danielle tried to explain.\n\n\u201cWith us?\u201d Murray managed to gasp, why were the Double D\u2019s even talking to them?\n\n\u201cYes!\u201d Devon confirmed cheerfully. \u201cWe need to find out what you guys do.\u201d\n\n\u201cDo?\u201d stammered Murray, David merely nodded again.\n\n\u201cYeah, we\u2019ll do whatever you do,\u201d said Danielle.\n\n\u201cDo?\u201d repeated Murray, unable to focus his thoughts.\n\n\u201cYeah, like what are you doing tonight? What do you nerds do on a Friday night?\u201d Danielle asked.\n\n\u201cD&D,\u201d David said abruptly.\n\nDevon smiled, \u201cWhat\u2019s D&D?\u201d\n\n\u201cDungeons and dragons,\u201d Murray said after a moments silence when he realized David wasn\u2019t going to answer.\n\nDanielle groaned, \u201cThat\u2019s so uncool.\u201d\n\n\u201cNo it\u2019s not!\u201d insisted Murray, automatically defensive. \u201cIt\u2019s what\u2019s called a role playing game, it\u2019s kind of like acting.\u201d\n\n\u201cActing is cool!\u201d Devon agreed. \u201cI want to be an actress when I finish college.\u201d\n\n\u201cWhatever,\u201d shrugged Danielle. \u201cWhen and where?\u201d\n\n\u201cUm, 6 o\u2019clock at my place,\u201d said Murray. \u201cMy big brother Adam is DM.\u201d\n\n\u201cDM?\u201d\n\n\u201cDungeon master,\u201d the geeky teen replied.\n\nDanielle rolled her eyes. \u201cOkay boys, we\u2019ll see you tonight then,\u201d she said, flashing them one of her winning smiles which, had they been standing up would have caused them to go weak at the knees. Both girls then turned and left, making sure to put an extra sway in their hips and give the geeks a thrill as they departed.\n\n\u201cIsn\u2019t Tony Saunder\u2019s party tonight?\u201d Devon asked her friend.\n\n\u201cToo bad,\u201d said Danielle. \u201cI want to get this over and done with so we\u2019ve got the whole weekend to go shopping.\u201d\n\n\u201cGood idea!\u201d agreed Devon quickly.\n\n**\n\nThe girls arrived at Murray\u2019s house fashionably late at 7pm that night. Devon wore the same, very short, bright blue skirt and a tight fitting white v-necked t-shirt that she had worn to school that day. The skirt was slit up both sides displaying an ample portion of her long tanned legs whenever she moved. The v-neck of her top plunged deep into her cleavage, giving Murray an eyeful as he greeted the girls at the door. Danielle\u2019s attire was equally sexy. She wore a pair of black, low-slung pants that were skintight across her beautifully tight round ass. To avoid a panty line she wore a bright pink g-string, the sides of which were visible above the top of her hipster trousers, displaying a teasing hint for the boys. Danielle also wore a pale pink crop top that came down just below the outthrust shelf of her massive tits and left her flat stomach bare.\n\nOnce Murray had managed to get his eyes back into their sockets he led the two sexy cheerleaders into his dining room where the boys had the table set up for their role playing game night. Murray\u2019s parents were away for the weekend so they had the whole place to themselves.\n\nSitting at the head of the table, behind a small cardboard screen that covered a few books, sheets of paper and dice, sat Murray\u2019s older brother Adam. Adam was four years older than the rest of them, he had grubby longish black hair that hung in a mess to his shoulders and looked as though it hadn\u2019t been washing in several months. His stubbled face was unshaven and gaunt looking, but at least he did not share Murray and David\u2019s need for glasses. The older geek\u2019s eyes went wide at the sight of the two beautiful cheerleaders. When Murray had said that a couple of girls from school were coming around tonight he\u2019d never even imagined anything like this.\n\n\u201cUm, you\u2019ll need to roll up new characters first I guess,\u201d he managed to squeak out as the two girls took their seats opposite David and Murray at the dining room table. The girls found a couple of complicated looking forms pushed in front of them, which Adam explained where their character sheets.\n\n\u201cSo what class do you want to play?\u201d Adam asked the girls.\n\nDanielle shrugged. \u201cSocial studies?\u201d she replied uncertainly.\n\n\u201cNo, what class character?\u201d Adam clarified. \u201cWizard, Warrior, Rogue or Priest?\u201d\n\n\u201cI wanna be a wizard like Harry Potter!\u201d blurted out Devon abruptly. Danielle turned to her brunette friend in surprise, wondering if she was actually getting into this goofy Dungeons & Dragons thing.\n\n\u201cWhat about you Danielle?\u201d asked David, his voice trembling slightly as he tried to avoid staring at the swelling front of Danielle\u2019s tight pink top.\n\n\u201cWarrior maybe,\u201d she said with a shrug, picking one of the other\u2019s at random.\n\n\u201cNow you need names,\u201d said Adam.\n\nDanielle screwed her face up, was this guy thick or something? \u201cWe already have names.\u201d\n\n\u201cNo I mean..oh never mind, just put your own names down,\u201d Adam said with a sigh, it was going to be a long night he decided.\n\n\u201cMy character is called Veldin the Black!\u201d said Murray theatrically. \u201cI am a mighty wizard like you Devon, only I\u2019m 12th level.\u201d\n\n\u201cAnd I\u2019m Thrud the Barbarian!\u201d exclaimed David, flexing his skinny arms as if he had muscles.\n\n\u201cErr, cool,\u201d Devon said, glancing Danielle\u2019s way and rolling her eyes.\n\n\u201cNow you need to roll stats,\u201d said Adam, handing the girls a handful of dice each. They were all sorts of different shapes and colors and certainly didn\u2019t look anything like normal dice to the girls.\n\n\u201cThey look a bit like jewels,\u201d commented Devon.\n\n\u201cThey\u2019re called gem dice. Roll the six sided one three times for strength first,\u201d said David helpfully. Danielle rolled one of the dice at random. \u201cNo, the six sided one!\u201d repeated David, pointing to the most normal looking of the dice.\n\nWith that the girls began rolling up their characters. The entire process took almost three quarters of an hour and mostly consisted of the boys handing dice to the girls and telling them to roll. Danielle and Devon rolled the dice as they were given them and watched the boys fill in various parts of their so-called character sheets. They had no idea what was going on and were quickly growing tired of this stupid \u2018Dungeons & Dragons\u2019 carry on.\n\n\u201cRight, all done,\u201d Adam finally announced, much to the relief of the two beautiful cheerleaders. \u201cTime to begin the adventure.\u201d\n\n\u201cWe haven\u2019t started yet?\u201d said Danielle in disbelief.\n\nAdam just ignored her, he was starting to get pissed off at these two hot chicks turning up and ruining a perfectly good night of D&D. Hopefully things got better.\n\n\u201cOkay, the four of you are gathered in a campsite deep the Forests of Doom, it is dawn but no sunlight comes through the thick canopy of trees above. Veldin holds a lantern up as you all crowd around to gaze up the treasure map that Thrud holds in his big hands,\u201d said Adam, dramatically setting up the scenario, ignoring the snigger from Devon. \u201cThe treasure map leads to a dungeon entrance about two hundred yards from your current position.\u201d\n\n\u201cLet\u2019s go get that treasure then!\u201d said David boldly.\n\n\u201cWhat do you think ladies? Ready to go?\u201d Murray asked the two girls.\n\n\u201cSure, whatever,\u201d agreed Devon.\n\nMurray reached across the table and grabbed Devon\u2019s soft hand. \u201cFollow me m\u2019lady,\u201d he said gallantly, bending forward to gently kiss the back of Devon\u2019s hand before releasing it. Danielle rolled her eyes at his display, but Devon gave a little giggle.\n\n\u201cI\u2019ll draw my bastard sword and lead the way,\u201d David said.\n\n\u201cThe entrance to the dungeon is under a large rock, there is a small gap on one side by it\u2019s not wide enough for any of you to slip through,\u201d Adam said, describing the scene.\n\n\u201cSo we\u2019ll push it out of the way and head down,\u201d said Devon, trying to get into the spirit of the game.\n\n\u201cMake a strength check,\u201d said Adam, Devon just looked blankly at him. \u201cRoll a D-20.\u201d She still looked blankly at him. He picked up a 20-sided dice and handed it to the pretty brunette. \u201cRoll this.\u201d\n\n\u201cA fifteen,\u201d Devon said, looking at the result.\n\n\u201cYou can\u2019t move it,\u201d Adam replied, glancing at her character sheet.\n\n\u201cWhy not?\u201d\n\n\u201cBecause you failed the strength check,\u201d explained the Dungeon Master.\n\n\u201cI\u2019ll try,\u201d said David quickly, when he saw Devon about to argue further with Murray\u2019s brother. He rolled the dice and also got a fifteen.\n\n\u201cYou shove aside the large rock, revealing a stone staircase leading down into the darkness,\u201d said Adam.\n\n\u201cHey!\u201d protested Devon, \u201cHow come he made it, I rolled the same as him.\u201d\n\n\u201cBecause your character has a lower strength,\u201d explained Adam.\n\n\u201cWhy? Because I\u2019m a girl?\u201d she demanded.\n\nAdam groaned, \u201cNo, \u2018cause that\u2019s what you rolled for your strength before.\u201d\n\n\u201cAnd I\u2019m wearing magical gauntlets,\u201d added David helpfully.\n\n\u201cWhy don\u2019t I have magical gauntlets?\u201d complained Devon.\n\n\u201cBecause you\u2019re a brand new level one character, Thrud is level twelve and has been on lots of adventures,\u201d explained an exasperated Adam.\n\n\u201cThat\u2019s not fair,\u201d Devon said, giving Adam one of the cutest pouts he\u2019d ever seen.\n\n\u201cLet\u2019s just head down,\u201d suggested Murray, trying to keep the peace.\n\n\u201cFine,\u201d replied the sulky brunette.\n\n\u201cYou head down the dark stairs, Veldin holding the lantern aloft as you descend into the dungeon. At the foot of the stairs, an inhuman roar suddenly breaks the silence of the crypt. Out of the darkness charges three orcs, waving swords above their heads with looks of murder in their eyes,\u201d Adam announces theatrically.\n\n\u201cI\u2019ll charge and attack!\u201d David said at once.\n\n\u201cI\u2019ll shoot a fireball at them,\u201d said Murray.\n\nEveryone looked at the two busty cheerleaders expectantly.\n\n\u201cUm, I\u2019m a warrior like David so I guess I\u2019ll attack as well?\u201d Danielle said uncertainly.\n\n\u201cI\u2019ll shoot a fireball too then,\u201d said Devon.\n\n\u201cYou can\u2019t, you don\u2019t have that spell,\u201d said Adam.\n\nDevon bit back a moan, \u201cSo what spells do I have?\u201d she asked.\n\nMurray helpfully checked her character sheet for her. \u201cAs a first level wizard you have the Feather Fall spell.\u201d\n\n\u201cWhat does that do?\u201d\n\n\u201cIt lets you float down from heights like a feather,\u201d Murray explained.\n\n\u201cWell that\u2019s not gonna be much use,\u201d Devon said. \u201cWhat the hell kind of wizard am I? I guess I\u2019ll attack then too.\u201d\n\nAdam rolled some dice behind his screen. \u201cYou\u2019re fireball hits one of the orcs, roll for damage.\u201d\n\nMurray picked up three of the dice and rolled them, \u201cThirteen.\u201d\n\n\u201cThe orc burns to death, two left,\u201d said Adam. \u201cDevon, because you\u2019re only using a dagger you have the highest iniative, roll to hit, you need an eighteen or higher.\u201d\n\n\u201cAn eighteen? That\u2019s impossible!\u201d complained Devon.\n\n\u201cNo you dumb woman, it\u2019s a twenty sided dice!\u201d said Adam, infuriated by the girl.\n\nDevon swallowed her protest and rolled the dice that Murray handed her. She got an eleven.\n\n\u201cYou miss,\u201d Adam said. \u201cNow you Danielle, you need a sixteen.\u201d\n\n\u201cHow come she only needs a sixteen?\u201d Devon asked.\n\n\u201cBecause she\u2019s a warrior, she\u2019s trained at this sort of stuff,\u201d David said.\n\n\u201cNo she\u2019s a cheerleader.\u201d\n\n\u201cHer character is a warrior, remember, role-playing, acting?\u201d he reminded her.\n\nDanielle rolled the dice and got a twenty. \u201cI hit!\u201d she exclaimed, smiling smugly at Devon, this was the first sign of interest Danielle had shown during the whole game so far.\n\n\u201cRoll a D-6 for damage now,\u201d said Adam.\n\nShe rolled a 3.\n\n\u201cThe center orc takes a painful cut across the ribs but doesn\u2019t go down,\u201d said Adam. \u201cYour turn now David, you need a nine.\u201d\n\nDavid easily hit and then rolled two dice for damage, \u201cTen damage.\u201d\n\n\u201cHey, how come he rolled two dice?\u201d objected Danielle. \u201cAnd he rolled a six and three anyway so that\u2019s nine not ten.\u201d\n\n\u201cI\u2019m using a bastard sword, you\u2019ve only got a short sword,\u201d explained David. \u201cAnd I have seventeen strength so get plus one damage.\u201d\n\nDanielle shook her head, \u201cI don\u2019t understand this game at all, it\u2019s worse than maths class.\u201d\n\n\u201cThe orc in front of Thrud is decapitated by the blow, just the one that Danielle wounded left,\u201d said Adam. \u201cThe orc takes a swing at Devon,\u201d he said, rolling another dice behind the screen. Devon bit her bottom lip and held her breath in anticipation as she awaited the outcome. \u201cBut it misses,\u201d she released the breath. \u201cRound two, are you all doing the same?\u201d Adam asked.\n\n\u201cNo, I\u2019ll let the warrior finish the last one off,\u201d said Murray.\n\n\u201cOkay, you\u2019re up first then Devon.\u201d\n\nThis time Devon hit and she whooped with joy.\n\n\u201cRoll D-3 for damage from your dagger,\u201d instructed Adam.\n\nDevon hesitated, \u201cNow I know you\u2019ve got a bunch of crazy dice here, but there\u2019s no way you can have a three sided dice.\u201d\n\n\u201cJust roll a six sided one and half it,\u201d Murray explained.\n\n\u201cA four\u2026okay so that\u2019s two damage.\u201d\n\n\u201cThe orc dies from your attack,\u201d said Adam. \u201cThey\u2019re all dead.\u201d\n\n\u201cGood work everyone,\u201d Murray said to David and the two cheerleaders. \u201cWhat does the corridor at the bottom of the stairs look like?\u201d he asked, turning to his brother.\n\n\u201cIt stretches off in only one direction,\u201d replied the Dungeon Master Adam.\n\n\u201cOkay, lead the way Thrud,\u201d Murray said to David.\n\n\u201cSure,\u201d said David. \u201cAfter we take a few steps I\u2019m going to stop and turn around,\u201d he said. Devon and Danielle suddenly jumped in fright as David slammed his fist down onto the table with a booming thud. \u201cNone shall pass!\u201d David boomed in his best Gandalf impersonation.\n\n\u201cYou\u2019re second in line Danielle,\u201d said Adam, \u201che\u2019s blocking your way.\u201d\n\nDanielle rolled her eyes, \u201cI\u2019ll push past the idiot.\u201d\n\n\u201cNone shall pass!\u201d boomed David again, slamming his fist down on the table a second time and making the dice jump. \u201cI\u2019ll keep blocking her way.\u201d\n\n\u201cLet me past you dick!\u201d snapped Danielle, starting to get a little angry, what the hell was he playing at anyway?\n\n\u201cYou must bare your bosoms and I will let you past!\u201d David replied, his voice still booming although he had a cheeky grin on his pimple dotted face.\n\n\u201cFine,\u201d Danielle sighed and rolled her eyes heavenward again. She then reached up and started to reach for the bottom of her pink crop top, remembering the way Murray had kissed Devon\u2019s hand and done such a good acting job.\n\nDavid\u2019s eyes went wide as Danielle started to pull her top up and he saw a hint of her lacy black bra. \u201cNo, I meant your character,\u201d he said quickly and apologetically.\n\nMurray slapped David on the back of the head. \u201cIdiot,\u201d he snapped, then looked Danielle\u2019s way where she sat frozen with the bottom of her top still in her hands. \u201cSorry Danielle, ignore this fool. You\u2019re doing a great job of role-playing, keep going.\u201d\n\nDanielle shot David a superior smile and then lifted her top up around her neck, unveiling her massive D cup tits, encased in a very sexy, lacy black bra. The bra lifted her already perky breasts and pushed them together forming an impossibly deep cleavage where the ample flesh of her upper breasts welled up against each other. The bra was rather low cut so there was plenty of tanned flesh for the three young men to feast their hungry gazes upon.\n\nDavid\u2019s eyes almost popped out of his skull as he took in the sight of Danielle\u2019s massive rack in the sexy push-up bra. Adam and Murray also gasped in admiration, the impact of the remarkable sight sending thrills directly into their crotches.\n\n\u201cWow those things are big!\u201d exclaimed Murray in appreciation of Danielle\u2019s lingerie encased hooters.\n\n\u201cSo can I pass?\u201d Danielle asked, her tone almost bored.\n\n\u201cY\u2026yes,\u201d David managed to gasp after a moment, his voice a struggled whisper, his eyes not leaving Danielle\u2019s exposed chest.\n\n\u201cGood,\u201d she said, yanking her top back down, it hadn\u2019t been the first time Danielle had flashed her bra to get her way and she smiled to herself as she realized that it seemed to work just as well in this virtual Dungeons and Dragons world as well.\n\nThis time Danielle led the way as the party of adventurers made their way deeper into the dungeon, in search of lost treasure.",
        "\u201cYou travel for about five minutes down the straight corridor and come to an arched doorway, the door has long since rotted away and you can see the rusted hinges still hanging from the stone frame.\u201d\n\n\u201cI\u2019ll walk through,\u201d said Danielle with the shrug.\n\n\u201cWait!\u201d exclaimed David, causing Danielle to jump in surprise. \u201cLet me go first!\u201d\n\n\u201cToo late!\u201d snapped Adam quickly, he was getting tired of these two dumb cheerleaders asking so many stupid questions and ruining his game. He was not going to show them any mercy. \u201cAs you step through the door a ferocious four legged beast leaps from the shadows. It has a bear like body with a tentacled head and thick black fur. It immediately attacks you Danielle, taking you by surprise.\u201d Adam rolled a dice behind the screen. \u201cWhat\u2019s your armor class?\u201d\n\nDanielle shrugged as David read her character sheet over her shoulder, unable to help himself from glancing briefly into the depth of her cleavage as he leaned over her. \u201cFive,\u201d he announced.\n\n\u201cIt hits!\u201d said Adam, almost gleefully. He rolled another dice. \u201cTake six damage and make a save verse paralyzation .\u201d \n\n\u201cOh oh!\u201d said Murray in a worried tone.\n\n\u201cWhat?\u201d asked Danielle, rather anxiously. \u201cWhat does that mean?\u201d\n\nDavid helped out again, he showed her how to cross off six hit points from her rather slim total of ten and then told her to roll a D-20, she needed to get above an eighteen for the saving throw.\n\n\u201cOnly a seven,\u201d Danielle said once she had rolled, she was getting kind of nervous about what was happening to her character.\n\n\u201cYou have been paralyzed,\u201d explained Adam. \u201cYou can\u2019t move a muscle.\u201d Danielle instinctively froze in her seat.\n\nDavid leapt to his feet, jumping out of his chair. \u201cI\u2019ll protect Danielle!\u201d he declared bravely, stepping behind Danielle\u2019s chair and resting his hands on her shoulders.\n\n\u201cMe and Murray will attack the beast!\u201d Devon said, quickly finding herself getting caught up in the adventure and the fate of their characters.\n\n\u201cVeldin you mean,\u201d corrected Murray.\n\nAs Murray and Devon started their to-hit rolls against the monster, David stood above Danielle. He noticed that from his current location he had an even better view down the front of Danielle\u2019s pink crop top that when he had leaned over to check her character sheet. His grip slightly tightened on her shoulders as he gazed down at the busty cheerleaders lovely breasts. Inside the tight fitting pink top the firm orbs of her tits looked so perfectly round, like two large melons that sat on her chest, just aching to be touched. David sucked a small dribble of saliva that had started to trickle from the corner of his mouth, he was drooling at the sight of Danielle\u2019s perfect breasts.\n\nDavid gave a quiet moan as he gazed down at the angelic eighteen year old, God she was sexy! He barely heard Devon and Murray as they both announced they had hit the beast and were rolling for their damage.\n\nIt was almost like an out of body experience, David seemed to watch his own hand slowly descend from Danielle\u2019s shoulder. He had absolutely no control over himself as his trembling hand moved down across Danielle\u2019s upper chest. The beautiful blonde was so caught up in the battle with the beast that she didn\u2019t even notice David\u2019s hand moving until it reached her right tit.\n\nDavid gave an audible moan as he squeezed Danielle\u2019s big, succulent breast through her pink top. The large melon completely filled his palm, overflowing as he squeezed the firm round orb, his fingers sinking into the firm flesh. It was the first tit that David had ever groped and it felt even better than he had ever imagined.\n\n\u201cOi!\u201d snapped Danielle as she realized David was feeling her up. She slapped at his hand and David immediately jerked it away.\n\n\u201cNo!\u201d growled Adam. \u201cYou\u2019re paralyzed Danielle, you\u2019ve got to role-play. You\u2019re not allowed to move a muscle.\u201d\n\n\u201cSorry,\u201d said Danielle, letting her hand drop back down into her lap. David\u2019s hand immediately moved back to where it was, cupping her right breast through her clothing and squeezing at the firm orb greedily. The commotion had drawn Murray and Devon\u2019s attention as well and they looked on in surprise as David felt up the busty blonde cheerleader.\n\n\u201cI\u2019ll attack again!\u201d said Devon, interrupting the moments silence.\n\n\u201cWhat about you Murray?\u201d Adam asked, turning to his little brother who was still staring at David\u2019s hand as it moved over Danielle\u2019s chest, groping her big tits.\n\n\u201cHuh?\u201d he asked, snapping out of his daze.\n\n\u201cWhat are you doing?\u201d\n\nMurray stood up and hurried over to Danielle\u2019s other side, \u201cI\u2019m going to help protect Danielle!\u201d he decided, reaching down and giving a deep sigh as his hand closed over Danielle\u2019s other breast.\n\nDanielle squirmed slightly as the two nerds groped her tits eagerly. It wasn\u2019t the first time she\u2019d been felt up, but it felt odd trying to pretend she was paralyzed while her boobs were being molested.\n\nDevon battled on alone against the paralyzing monster as her friend\u2019s D cups were squeezed, stroked, rubbed, and generally manhandled.\n\n\u201cThe monster hits! Take three damage and make a save verse paralyzation!\u201d announced Adam, he had them now!\n\nDevon rolled the dice. \u201cA twenty! I made it!\u201d\n\nAdam concealed his disappointment. \u201cOkay, you\u2019re turn to attack,\u201d he said as the pretty brunette rolled the twenty-sided dice again.\n\n\u201cI hit! Three damage!\u201d she announced.\n\n\u201cThe beast dies!\u201d Adam said.\n\nDevon leapt to her feet and whooped with joy. She jumped up and down and clapped her hands, the triumphant celebrations causing her ample breasts to jiggle around inside her white shirt, drawing Adam\u2019s gaze, boy were they big. Murray and David didn\u2019t even notice, Danielle\u2019s large rack holding their complete attention.\n\n\u201cThe paralyzation wears off,\u201d Adam said to Danielle, who immediately pried the groping hands from her tits.\n\n\u201cThanks for protecting me boys,\u201d she muttered dryly as they returned to their seats, their crotches bulging. \u201cYou can lead the way again now I think Thrud,\u201d Danielle added.\n\n\u201cThe far side of the room opens up into a large cavern with a deep chasm in the center,\u201d Adam said, describing the new scene before them. \u201cAcross the center of the seemingly bottomless chasm is a very thin stone bridge, barely wide enough for a single person to balance across. It doesn\u2019t look especially sturdy.\u201d\n\n\u201cOkay, we\u2019ll head slowly across,\u201d David said.\n\nAdam nodded, concealing a smile behind his screen. \u201cWhen you are about halfway across the chasm, a sharp shudder runs through the bridge and it starts to crumble around you.\u201d\n\n\u201cRun for it!\u201d cried out Murray, almost shouting, Danielle jumped in surprise.\n\n\u201cLet\u2019s go!\u201d agreed David.\n\n\u201cYou sprint towards the other side of the chasm, the stone bridge falling beneath your feet. As you get closer to the end you see that a gap is starting to form between the end of the bridge and the other side, and it is getting wider and wider with alarming speed,\u201d Adam told them.\n\n\u201cWe\u2019ll jump!\u201d exclaimed David.\n\n\u201cOkay, Thrud is first so he has the smallest and easiest gap. The rest of you need to roll a D-10. Danielle who\u2019s next needs above a 4, Veldin needs a 6 and Devon who\u2019s last has the biggest gap to jump and needs an 8 or higher,\u201d explained the Dungeon Master.\n\n\u201cWhich one\u2019s a D-10 again?\u201d Danielle asked, frowning at the numerous dice on the table in front of her. This game was so confusing.\n\nDavid handed her a roughly diamond shaped red dice. Danielle rolled a 7 and made the jump. Murray rolled next and got a 0.\n\n\u201cYou fall!\u201d gasped Danielle, surprised to find herself actually caring.\n\n\u201cNo, a 0 is a 10,\u201d Murray said. Danielle made a face as if she thought Murray was trying to cheat, and she glanced up at Adam.\n\n\u201cHe\u2019s right,\u201d Adam said. \u201cOkay Devon, you need an 8 or more now.\u201d\n\nThe dark haired cheerleader swallowed nervously as she picked up the dice, her character had been such a pain to make she would hate to fall and die. Devon closed her eyes as she tossed the dice onto the table. Devon heard a gasp from Danielle and opened her eyes. To her horror she saw that she had only rolled a 2!\n\n\u201cYou don\u2019t make it and fall and die!\u201d Adam proclaimed almost gleefully.\n\n\u201cI\u2019m dead just like that?\u201d Devon asked in distress.\n\n\u201cI\u2019m afraid so.\u201d\n\n\u201cBut that\u2019s not fair!\u201d she complained. \n\n\u201cSorry,\u201d Adam said with a shrug, glad that there would be one less cheerleader ruining his game. \u201cBut the rules are the rules,\u201d he insisted adamantly.\n\n\u201cNo! I protest! I object!\u201d argued Devon, thinking of her favorite lawyer movie.\n\n\u201cYou can\u2019t,\u201d David said, sympathetically patting the lovely girls hand. \u201cThe Dungeon Master\u2019s word is final, we have to do what he says.\u201d\n\n\u201cNo!\u201d snapped Devon, snatching her hand out from under the geeks. \u201cI want to see you in your chambers Judge!\u201d she said, looking at Adam.\n\n\u201cDungeon Master, not Judge,\u201d David offered helpfully. Devon ignored him, staring straight at Adam, her jaw set.\n\n\u201cMy chambers?\u201d asked Adam in bewilderment.\n\n\u201cYes!\u201d Devon said, pouting.\n\nAdam sighed, she looked dazzling with that beautiful pout. \u201cOkay fine,\u201d he agreed, deciding to humor the lovely cheerleader.\n\nAdam stood up and led Devon down the hallway to his bedroom, about the closest thing to his chambers he supposed. The night was already pretty much stuffed so he might as well just go along with her and get it over and done with, there was obviously no arguing with her. Adam\u2019s bedroom was quite small and cramped, with dark black curtains that almost perpetually shaded the room in darkness. As the pair entered, Adam switched on the light, revealing a small, unmade single bed and a pile of grubby clothes on top of what appeared to have once been a writing desk. The room had a musty smell, but Devon did her best to ignore it.\n\nOnce they were inside she pushed the door shut. \u201cIsn\u2019t there anyway I can live through this?\u201d she asked, almost pleading.\n\n\u201cLook,\u201d Adam sighed, \u201clike I said out there, the rules are the rules. You didn\u2019t make the jump so you fall and die.\u201d\n\nDevon bit her lower lip thoughtfully, God she looked good Adam thought to himself. The beautiful eighteen year old stepped closer to Adam, reaching up and running a hand across his chest. \u201cAre you sure we can\u2019t work something out?\u201d she asked her most sexy voice, flirting usually got her everywhere.\n\n\u201cI\u2026I don\u2019t know,\u201d stammered Adam as he felt her step even closer, her ample chest lightly brushing against his.\n\n\u201cPlease,\u201d begged Devon, \u201cI\u2019ll do anything.\u201d As she said this her eyes playfully darted downwards.\n\nAdam swallowed. \u201cAnything?\u201d he asked, his voice cracking.\n\nDevon licked her lips seductively. \u201cWhat do you want me to do Adam?\u201d she asked in a husky purr.\n\n\u201cI\u2026I\u2026\u201d Adam stammered, gasping as Devon\u2019s hands slid down to his hips and she pulled the sexy curves of her body tight against Adam\u2019s. The lovely cheerleader leant in close and gently kissed the corner of Adam\u2019s jaw, her lips incredibly soft.\n\n\u201cDo you want me to unzip your pants?\u201d she whispered seductively into his ear.\n\nAdam gave a slight moan, he could not believe what was happening. He gave a silent nod, his body trembling.\n\nKeeping her breasts pressed against Adam\u2019s chest, Devon\u2019s soft hands slid down off Adam\u2019s hips and reached for the front of his jeans. Adam\u2019s heart leapt into his throat as she unbuttoned the top of them and yanked down the zipper. His cock was now fully erect and straining against his underwear, was this drop dead gorgeous brunette really seducing him over a game of D&D?\n\n\u201cDo you want me to reach into your underwear and touch it?\u201d Devon whispered into the older nerds ear, her lips brushing his earlobe teasingly.\n\n\u201cOh God yes!\u201d Adam breathed with a groan of lust.\n\nDevon smiled wickedly and slid her cool left hand inside the waistband of Adam\u2019s underpants. His cock was hot and thick, fully erect and she gave a slight sigh of her own as she closed her hand around it, his urgent hardness throbbing against her palm. Adam groaned again as Devon pulled his cock out from his pants and stroked it in both her hands.\n\n\u201cMmmm,\u201d Devon gave a moan as she rubbed the head of Adam\u2019s cock against the front of her skirt, leaving a slight shimmering trail of his precum. \u201cYou feel good.\u201d Devon then gave Adam a wicked smile and she slowly lowered herself to her knees in front of him, letting her heavy breasts slide down his body, making sure they rubbed across his bouncing cock.\n\nWith her face at cock level, her full lips mere inches from the pulsing tip of Adam\u2019s cock, Devon blew gently on the moaning nerds shaft. Her hands danced up and down the hard length of him and she toyed with his balls on her fingertips, driving him absolutely wild.\n\n\u201cDo you want me to suck it?\u201d Devon asked, remembering how her science teacher had agreed to do absolutely anything for her when she\u2019d made him the same offer, so surely she could convince this Dungeon Master to save her character for the same reward.\n\n\u201cOh God!\u201d groaned Adam. \u201cYes!\u201d\n\n\u201cWill you let my character live?\u201d she asked, she\u2019d been fooled once into sucking a guys cock without getting him to agree to her demands first and was not intending to repeat the mistake.\n\n\u201cYes!\u201d moaned Adam, hell it was just a game, he\u2019d let her fly if she really wanted to.\n\n\u201cAsk me then,\u201d Devon whispered playfully, still moving her soft hands up and down the length of Adam\u2019s rock hard erection. \n\n\u201cWhat?\u201d\n\n\u201cAsk me.\u201d\n\n\u201cPlease!\u201d begged Adam, his hips thrusting forward slightly, but Devon had a tight grip on his cock so he wasn\u2019t going anywhere without her permission.\n\n\u201cI want to hear you say it, ask me,\u201d she said firmly, wetting her lips with her delicate tongue.\n\n\u201cPlease suck my cock!\u201d Adam gave a massive loud groan as Devon\u2019s head suddenly dived forward and she swallowed the head of his cock into her mouth, bathing him in the wet warmth of her lips. \u201cOh fuck!\u201d gasped Adam as Devon\u2019s skillful mouth immediately started to suck on his hard cock. \u201cFuck that feels so good!\u201d\n\nAdam had to reach down and steady himself with one hand on Devon\u2019s shoulder as her mouth bobbed aggressively over his crotch. The feel of his hard cock sliding across her tongue and into the back of her mouth was absolutely incredible, and the friction of Devon\u2019s tight lips noosed around his shaft was mind blowing. Adam had never had a blowjob before, the furthest he\u2019d gotten with a girl was groping a crowd surfer at a Red Hot Chilli Peppers concert last year. Now one of the prettiest girls he\u2019d ever laid eyes on was sucking noisily on his cock, who\u2019d have thought a game of D&D would pay off like this?\n\nDevon moaned around Adam\u2019s cock, her head moving faster as she sucked him deeper, taking almost all of his hard shaft inside her mouth with each slurp. Adam had both hands leaning heavily on her shoulders now, his body hunched as he started to push back with his hips, forcing his cock deeper into her willing mouth.\n\n\u201cOh God you\u2019re good,\u201d he gasped as Devon leaned forward slightly, improving the angle of her throat to take more of him inside her mouth. Adam cried out as he felt the noose of her tight lips press right against the base of his cock, her nose pressed into his pubic hair and his balls resting on her chin. The happy nerd reached up from her shoulders and grabbed the back of her head, holding her tight into his crotch and just luxuriating in the feel of being buried in her glorious mouth.\n\n\u201cOh fuck!\u201d he groaned, his back arching as he held the pretty cheerleaders face against his groin. They remained like that for about half a minute, his cock throbbing on her tongue, before Adam finally released her.\n\nDevon immediately pulled off his cock and gasped for air.\n\n\u201cDo you swallow?\u201d Adam asked her breathlessly.\n\n\u201cSure,\u201d Devon agreed with a shrug, she kind of enjoyed the taste of men\u2019s cum and had never minded boys cumming in her mouth. \u201cAre you close?\u201d\n\n\u201cYeah, not much longer,\u201d Adam said with a nod, his cock was hard and red, pointed at Devon\u2019s face as she knelt before him.\n\n\u201cFuck my face then,\u201d Devon whispered wickedly, \u201ccum down my throat.\u201d\n\nAdam gave a groan, reaching down and grabbing the top of Devon\u2019s head and shoving his hard cock roughly back into her mouth. The busty cheerleader moaned as the Dungeon Master began to lustfully fuck her face, his hard cock ramming vigorously between her lips. For a full two minutes Devon let the older boy use her mouth for his pleasure, his insistent cock not once slowing as he used her mouth as if it was her cunt.\n\nThe nerd suddenly gave a loud cry, his body tensing as he exploded straight into Devon\u2019s pretty mouth. The busty cheerleader swallowed rapidly as her mouth was filled with his cum, Adam yanked her head hard against his loins as he spent his load inside her. Devon managed to swallow his entire load, not spilling a drop as she drunk all his cum. The brunette pulled off his cock and swirled his tongue over Adam\u2019s length, licking up the last of his seed.\n\n\u201cOh man that was good!\u201d breathed Adam enthusiastically.\n\nDevon kissed the tip of Adam\u2019s cock. \u201cNow we can\u2019t tell the other\u2019s about this,\u201d Devon warned him.\n\n\u201cNo, of course not. A gentleman never kisses and tells,\u201d Adam replied with a wide smile as he pushed his now cleaned cock back into his underwear.\n\nThey headed back to the dining room where the other three were waiting with rather bored expressions.\n\n\u201cTook long enough,\u201d complained Danielle as they sat back down and resumed the game. Devon took a long swallow of her coke, rinsing it around in her mouth before swallowing it.\n\nAdam ignored her, he had a big silly grin on his face as he described the new scenario to the other players. \u201cDevon didn\u2019t make the jump, but she was able to get off her Feather Fall spell and managed to float down onto a ledge about fifteen feet from the top of the cliff.\u201d\n\n\u201cShe can\u2019t cast while she\u2019s falling!\u201d complained Murray.\n\n\u201cI said she managed to get the spell off!\u201d snapped Adam, glaring at his brother.\n\nMurray shrugged. \u201cOkay fine. Anyone got some rope so we can pull her up?\u201d\n\nThe four of them checked their character sheets, David making sure that he leaned far over Danielle and got a good eyeful before confirming she didn\u2019t have some.\n\n\u201cNo one?\u201d Murray said in surprise. The other three shrugged.\n\n\u201cI know!\u201d David suddenly exclaimed. \u201cWhy don\u2019t we tie clothes together and make a rope? We could use our shirts.\u201d\n\n\u201cGreat idea!\u201d agreed Murray.\n\n\u201cOkay, who\u2019s got shirts, hand them over,\u201d said David holding out his hands.\n\nDanielle reached for the bottom of her shirt and then paused. \u201cWhat about yours?\u201d she asked David when she saw that he wasn\u2019t moving.\n\nDavid pointed to his character sketch that showed a ridiculously muscle bound brute wearing only a loin cloth. \u201cThrud doesn\u2019t wear a shirt.\u201d\n\n\u201cOh, fair enough I guess,\u201d Danielle said, \u201cWhat about you?\u201d she asked Murray who also wasn\u2019t moving. Meanwhile Devon had already tugged her t-shirt up over her head, revealing her ultra firm D cups in a white satin push up bra. The silky material was patterned with tiny red roses and complemented the creamy flesh of her boobs fantastically.\n\nMurray tore his gaze from Devon\u2019s chest, \u201cVeldin only has a black robe. If I take that off I\u2019ll be naked,\u201d he apologized with a shrug.\n\n\u201cTwo shirts will be enough to reach down,\u201d Adam said helpfully, encouraging the busty role-playing babes to strip off.\n\n\u201cGreat!\u201d said Murray as he watched Danielle shrug in resignation and yank her shirt up over her head, once again displaying her sexy black bra to the boys.\n\nDavid and Murray couldn\u2019t help but grin as they sat beside the two bra clad beauties. Both had their large D cups covered by skimpy push up brassieres, their bare stomachs perfectly flat and oh-so-sexy.\n\nAdam cleared his throat after a moment of admiring the girls\u2019 chesty charms. \u201cIn the old days of D&D there are no such thing as bra\u2019s,\u201d he reminded them.\n\n\u201cI thought you said the shirts were enough to reach me?\u201d Devon said, she wasn\u2019t happy that Murray\u2019s older brother was still being awkward about all this despite the fact she had given him the best blowjob of his life. Devon took another sip of her coke, she still had the musty taste of his cum in her mouth.",
        "\u201cYes, that\u2019s right,\u201d Adam agreed. \u201cbut if you\u2019re role playing then you need to take off your bra\u2019s as well.\u201d\n\n\u201cOh right,\u201d Devon said, finally understanding. Without batting an eyelid she reached behind for the clasp of her bra, arching her back out and causing her enormous tits to jut out incredibly. The piece of lingerie finally came free and fell from Devon\u2019s chest revealing her huge, bare breasts. As Devon\u2019s bra dropped from her breasts and the perfectly rounded orbs swung free, they barely sagged at all, the brunette cheerleader\u2019s flawless melons seeming to defy gravity.\n\nDanielle reached for the hook on her bra strap after she saw Devon strip off, her lacy black bra clasped at the front, inside her cavernous cleavage. Beside her, Murray gasped in admiration as the beautiful, busty blonde pulled off her bra and exposed her equally perfect D cups. Mouthwatering, dark nipples topped Danielle\u2019s massive melons and Murray found his gaze instantly drawn to the burgundy buds that crested the wonderful peaks. \n\n\u201cUsing the rope made from your shirts, Devon climbs up to join the rest of you at the top of the ledge,\u201d Adam said, his voice shaking slightly as he gazed at the two topless women, neither of them were covering their chests, both proud of their most talked about features. They were called the \u2018Double Ds\u2019 after all. \u201cJust as you reach the others there is a sudden shudder through the earth and you stumble, almost falling back off the edge again.\u201d\n\n\u201cLet\u2019s get out of here!\u201d said Murray quickly. The others nodded in agreement.\n\n\u201cYou rush back across the edge to a cave entrance against the far side. As you step into the tunnel the edge where you were just standing crumbles away, falling down into the chasm,\u201d Adam explains.\n\n\u201cYikes, that was close,\u201d said Danielle, grinning at her friend Devon. \u201cCan we put our tops back on yet?\u201d she asked.\n\n\u201cSorry, your shirts fell when the edge crumbled away,\u201d said Adam, not looking Danielle in the eye, but staring at her bare chest as it rose and fell with each breath she took. He couldn\u2019t help but lick his lips as he watched the slow movement of her heavy breasts. After a moment he continued with the adventure. \u201cThe tunnel only leads for a short distance, once again opening into a wide cavern with a second chasm in the middle.\u201d\n\n\u201cIs there a bridge this time?\u201d Devon asked, rather dubiously.\n\n\u201cNo, but against the left wall you see a red carpet rolled up,\u201d Adam said.\n\n\u201cI know what that is!\u201d exclaimed Murray. \u201cA magic carpet! We can use it to get across the chasm.\u201d\n\n\u201cCool!\u201d said David.\n\n\u201cI\u2019ll head over and unroll it,\u201d said Murray.\n\n\u201cIt\u2019s quite small once you have it open, only big enough to seat two people,\u201d explained Adam.\n\n\u201cBut there\u2019s four of us!\u201d said Devon with despair.\n\n\u201cHow about you girls sit on our laps?\u201d suggested Murray, trying to hide his eagerness. \u201cThen we can all fit.\u201d\n\n\u201cGood idea,\u201d agreed Danielle, standing up and moving over to Murray. The beautiful, topless blonde then sat her perfect ass down onto the surprised nerd\u2019s lap, her ass pressing directly onto the bulge of his crotch.\n\n\u201cGuess you\u2019re with me then Devon,\u201d said David, slapping his knee as he looked longingly at the other half naked cheerleader. Devon gave a shrug and moved over to David, gingerly sitting on the end of his knee and smoothing down her short, blue skirt to make sure she didn\u2019t uncover too much thigh. David immediately grabbed the buxom brunette around the waist and pulled her in close against him so that her ass was right against his groin just like Danielle and Murray.\n\n\u201cOkay, off we go!\u201d said Danielle once they were both seated. Murray had his hands around Danielle\u2019s waist and made sure to \u2018accidentally\u2019 brush the backs of his hands and wrists against the undersides of Danielle\u2019s bare breasts as they began their imaginary journey. He could scarcely believe that a few minutes earlier he had been groping those perfect orbs. Murray\u2019s cock twitched against Danielle\u2019s firm ass and the cheerleader teasingly pressed herself further into his lap as she settled into a comfortable position.\n\n\u201cRighto,\u201d said Adam, watching a little jealously as the two younger teens positioned the topless girls on their laps. \u201cYou head off across the second chasm, the magic carpet is quite old and the journey is rather bumpy.\u201d\n\nMurray started to bounce Danielle on his lap, humping his hard crotch up against the cheerleader\u2019s lovely ass and jolting her around over his groin, half simulating the bumpy ride and half dry humping the girl. David followed his friend\u2019s lead and started to buck up against Devon even more forcefully, causing her to bounce around wildly on his knees.\n\nMurray gave a small moan as he felt his hard cock insinuate itself between the perfect globes of Danielle\u2019s ass, their thin clothing providing little barrier. As the busty blonde cheerleader rode on his lap, her buttocks stroked up and down Murray\u2019s hard shaft. The inexperienced eighteen year old had never had a lap dance, but this was just as good. He glanced over Danielle\u2019s shoulder to where David was giving the other cheerleader a similar treatment, Devon\u2019s huge tits jiggling vigorously as David jumped her around on his groin. \n\nMurray moaned again as one of Danielle\u2019s own bouncing breasts, brushed against the top of his hand. \u201cOh God!\u201d he groaned aloud.\n\n\u201cAre you okay Murray?\u201d Danielle asked over her shoulder, twisting slightly and in the process pressing her ass tighter down into his lap. \n\n\u201cOh God!\u201d cried out Murray, suddenly lurching on his seat as he exploded into his own pants. Danielle\u2019s eyes went wide as she realized what was happening, the little punk was getting a cheap thrill from her sitting on his lap. She thought she\u2019d been sitting on something hard but had assumed it was just his keys or something. Murray rocked again beneath her, holding her tightly about the waist and humping up against her ass as his cum leaked out into his pants.\n\n\u201cYou make it safely across to the other side,\u201d said Adam at last and Danielle immediately ripped herself out of Murray\u2019s grasp and leapt to her feet. She could feel a wet spot against the back of her pants.\n\n\u201cEww! You gross little terd!\u201d yelled Danielle angrily. \u201cYou\u2019ve ruined my pants.\u201d\n\n\u201cDude!?\u201d exclaimed David in surprise as Devon got off his lap leaving a bulging crotch behind. \u201cYou came?\u201d\n\n\u201cI was just role-playing,\u201d said Murray, lamely trying to cover up as David starting laughing at him and Danielle glared angrily at him.\n\n\u201cHere, give me your pants and I\u2019ll put them in some water to soak,\u201d Adam offered Danielle gallantly, trying to take some of the heat off his little brother.\n\nDanielle started to unbutton the front of her tight black hipsters without a second thought, she figured she was topless and had just given Murray a lap dance so there wasn\u2019t a whole lot of point in being modest. David gave a murmur of appreciation as her wet pants came off, beneath she had a black g-string that matched her long since discarded brassiere. The g-string left her perfect ass almost completely bare, the ass that had given Murray such a ride.\n\nAdam swallowed as Danielle handed him her pants, he couldn\u2019t believe that there was this stunningly beautiful babe with big tits standing in the middle of their D&D game wearing only a skimpy black g-string and a smile.\n\n\u201cYou don\u2019t exactly have self control!\u201d Murray snapped angrily at David as his friend continued to taunt him about his quick shooting.\n\n\u201cHa! I\u2019m an uber stud next to you!\u201d retorted David, poking his tongue out at his friend.\n\n\u201cYou wouldn\u2019t last ten minutes in Danielle\u2019s mouth!\u201d challenged Murray.\n\n\u201cWhat?\u201d exclaimed Danielle in surprise as she took her seat once again.\n\n\u201cI could do that,\u201d asserted David.\n\n\u201cLet\u2019s see it then!\u201d\n\n\u201cHang on just a second!\u201d cut in Danielle, \u201cThere is no way I\u2019m putting any of your geek dicks in my mouth!\u201d\n\n\u201cWait a sec,\u201d said Adam, pretending to consult some pages behind his screen. \u201cIs your charisma greater than twelve?\u201d Adam asked David.\n\nDavid glanced down at his character sheet, \u201cyeah, it\u2019s thirteen.\u201d\n\n\u201cOkay Danielle, if you want to refuse their request you need to make a willpower check,\u201d Adam explained to the busty, semi-naked blonde.\n\n\u201cA what?\u201d\n\n\u201cA willpower check. You need to roll below your Wisdom score on a D-20.\u201d\n\nIt was Danielle\u2019s turn to consult her character sheet, \u201cAw man! My wisdom is the lowest, I only got a six!\u201d\n\n\u201cSlut,\u201d Devon teased her friend with a grin.\n\nDanielle ignored her D-cup friend and picked up the twenty-sided dice, she must be getting better as she grabbed the right dice without being shown. \u201cHere goes nothing,\u201d she said in a soft prayer, blowing gently on the dice. Danielle closed her eyes and dropped the dice onto the table, unable to look at the result.\n\n\u201cEleven!\u201d whooped David happily. He was about to get his first blowjob! \u201cStart sucking baby!\u201d\n\nDanielle reluctantly opened her eyes and saw that the celebrating nerd was right, she had failed her willpower check and had to give the pimple faced teen a blowjob. As Danielle moved to her knees on the floor, David slid his chair out from under the table to give her better access to his cock. As she crawled over to his feet, he unzipped his fly and pulled out a rock hard erection, it seemed he had enjoyed Devon\u2019s ass on his lap almost as much as Murray had enjoyed hers.\n\n\u201cSuck on Thrud\u2019s powerful manhood honey!\u201d said David, loving every minute of this.\n\nDanielle raised an eyebrow, the nerd\u2019s cock looked like it was only around four or five inches, not exactly powerful but she decided not to argue and just get this over with. \u201cWarn me if you\u2019re gonna cum,\u201d she told David.\n\n\u201cMighty Thrud will last,\u201d David assured her. It wasn\u2019t mighty Thrud she was worried about however.\n\n\u201cOkay, ten minutes,\u201d announced Adam, looking at his watch. \u201cStarting\u2026now!\u201d\n\nThe kneeling cheerleader gave one last reluctant sigh and then leant in over David\u2019s lap, parting her full red lips and taking the head of his hard cock into her mouth. David immediately gave a loud groan as the tip of his penis was suddenly flooded with the heat of her mouth and tongue. He couldn\u2019t believe that he was actually getting a blowjob! And it was being administered by the hottest girl in the entire school! And she was only wearing a g-string! \n\nDavid gave a abrupt yelp and he lurched on his seat. His eyes rolled back and his hips twitched and suddenly Danielle jerked her head out from his lap. A rope of cum shot from the end of his cock as Danielle retreated and splashed over her cheek.\n\n\u201cOh yuck! You gross asshole!\u201d swore Danielle as she pushed down on David\u2019s cock, aiming it up against his belly as he shot the rest of his load. \u201cYou came in my mouth you dickhead! I told you to warn me!\u201d Danielle grabbed a sheet of notepaper from the table and spat into it, trying to get the taste of David\u2019s cum out of her mouth.\n\n\u201cHa!\u201d shouted Murray, pointing accusingly at David. \u201cYou didn\u2019t last ten seconds!\u201d\n\nDavid had a stupid grin on his face. \u201cHer mouth was so sweet!\u201d\n\nAdam couldn\u2019t help but join David in his grinning, if Danielle\u2019s mouth had been even half as good as Devon\u2019s then no wonder David hadn\u2019t lasted long.\n\n\u201cYou\u2019re a shithead David,\u201d swore Danielle, taking a big gargle of her coke.\n\n\u201cI guess you lost the bet,\u201d Devon said to David, she couldn\u2019t help but smile at her friend\u2019s discomfort, Devon knew that unlike her own oral fixation, Danielle hated to give blowjobs. On many a date, the busty blonde had put out, just to avoid having to suck some football players cock.\n\n\u201cDamn straight he did!\u201d agreed Murray.\n\n\u201cHold on,\u201d said David, turning to Adam the Dungeon Master. \u201cSure me David failed, but my character Thrud is a big brawny barbarian and he wouldn\u2019t have lost it like that.\u201d\n\n\u201cThat\u2019s true\u2026\u201d said Adam thoughtfully. \u201cOkay, make a stamina check. What\u2019s your constitution?\u201d\n\n\u201cEighteen,\u201d David replied with unconcealed pride. Danielle rolled her eyes, why did their characters have high scores in everything? David reached for the twenty-sided dice and rolled a six. \u201cI made it!\u201d\n\n\u201cOkay Danielle, Thrud made his stamina check so he hasn\u2019t cum yet,\u201d Adam said, looking expectantly at the half naked cheerleader.\n\nDanielle raised one eyebrow. \u201cSo?\u201d\n\n\u201cSo you need to role-play,\u201d Adam told her. \u201cYou need to keep sucking and pretend that he hasn\u2019t exploded yet.\u201d\n\nDanielle looked down at David\u2019s lap, where his limp cock was dripping with cum. \u201cEw!\u201d she screwed up her face in revulsion. \u201cHe\u2019s all sticky, and he can\u2019t even get it up. I can\u2019t put that ugly thing back in my mouth.\u201d\n\nAdam gave a mock sigh. \u201cLook Danielle,\u201d he said patronizingly. \u201cLike we said this is like acting. You\u2019re not actually giving him a blowjob, you\u2019re just role-playing.\u201d\n\n\u201cI guess so,\u201d she tentatively agreed.\n\n\u201cGood,\u201d said Adam with a reassuring smile. \u201cNow get back down there and start sucking.\u201d\n\nDanielle dropped back to her knees and reached gingerly for David\u2019s sticky cock. Using just the very tips of her fingers she lifted the limp, cum-covered organ up and leant in towards it with a grimace on her pretty face. David smiled down eagerly as her tongue slipped out and hesitantly licked the sloppy end of his penis. Danielle\u2019s tongue quickly retreated at the taste and her face once again slipped into a grimace. She paused a moment to steel herself and then leant down once again and licked the end of the nerds slimy cock.\n\nDavid gave a moan as Danielle\u2019s tongue slid all over his small, withered cock, licking up the cum that covered it and cleaning him completely. Danielle then moved down to his balls, giving them a thorough tonguing till they were also clean enough to satisfy her. She then moved back to his still limp cock and sucked it deep into her mouth. His small shaft felt rubbery against her tongue and she started to slurp noisily on it. Danielle had once read in a Cosmo magazine that it was a thrill to take a limp penis in your mouth and feel it grow to erection, filling your mouth, but feeling David\u2019s flaccid, lifeless organ roll around her tongue was doing nothing for her.\n\n\u201cThree minutes to go,\u201d Adam announced.\n\n\u201cThat\u2019s good,\u201d breathed David, reaching down and running his fingers through Danielle\u2019s long blonde hair as she sucked on him. \u201cThrud likes that,\u201d he added with a groan as Danielle bobbed her head over his lap.\n\nDanielle gave a small moan of surprise as she felt the nerd\u2019s shaft start to thicken between her lips. Encouraged, she started to move her mouth up and down the short length of him, keeping her ovalled lips pressed tight around his shaft, almost as if she was jerking him off using her mouth. David moaned in appreciation as he felt Danielle start to use her tongue, fluttering it along the underside of his growing penis as she worked her mouth up and down.\n\nFor the next few minutes David\u2019s cock continued to swell until it reached full erection and Danielle\u2019s mouth was bobbing over a rock hard penis, the head pressing against the back of her throat as she worked her lips down to the base of his shaft.\n\n\u201cOh fuck that\u2019s good Danielle!\u201d groaned David, staring down at Danielle\u2019s g-string clad posterior as she knelt in front of him.\n\n\u201cTime\u2019s up!\u201d announced Adam, \u201cyou made it.\u201d\n\n\u201cAw man! I was just starting to get warmed up again!\u201d complained David as Danielle lifted her mouth up from his lap, uncovering David\u2019s rock hard erection that jutted up from the open front of her pants.\n\nDanielle immediately returned to her seat and took a long drink of her coke, emptying the glass.\n\n\u201cWe\u2019ve reached the halfway point of the adventure,\u201d Adam revealed. \u201cI\u2019ll add up everyone\u2019s experience points so far while you go get new drinks and snacks Murray,\u201d he said to his younger brother. \u201cEveryone take five.\u201d\n\nWhile Murray disappeared from the room to get more drinks and Adam started scribbling notes behind his screen, David excused himself to use the bathroom.\n\n\u201cI had no idea that D&D would be like this,\u201d Devon said across the table to Danielle.\n\n\u201cYeah,\u201d agreed Danielle with a smile. \u201cIt\u2019s actually kind of fun.\u201d\n\n\u201cThis is such good practice for when I become an actress,\u201d said Devon. \u201cI was so bummed when I thought I\u2019d died in that chasm though.\u201d\n\nDanielle laughed, \u201cYeah, what did you say to the Dungeon Master in his chambers anyway?\u201d\n\nDevon blushed slightly. \u201cOh nothing much,\u201d she shrugged.\n\nThey were interrupted by Murray returning to the room with a tray of food and drinks, Danielle noted that the geek had changed out of his cum stained pants and was now wearing a pair of shorts.\n\n\u201cSo how did we go?\u201d asked David as he returned to the room a couple of minutes later.\n\n\u201cEveryone gets three thousand experience points,\u201d Adam told them all.\n\n\u201cWhat does that mean?\u201d Devon asked. David pointed to where she should add that to her character sheet.\n\n\u201cYou go both go up a level,\u201d Adam said to the two girls.\n\n\u201cCool!\u201d exclaimed Danielle, \u201cwhat do we get for that?\u201d\n\n\u201cDanielle gets an extra ten hit points and Devon gets four,\u201d Adam explained.\n\nDevon poked her tongue out at Danielle for getting more than her.\n\n\u201cDanielle you also get a better chance to hit because you\u2019re a better fighter now,\u201d Adam added.\n\n\u201cWhat about me?\u201d Devon asked, so far it sounded as though she was getting the short end of the stick. Although comparing David and his Adam, perhaps Danielle had got the shorter stick.\n\n\u201cYou can now learn two spells, but you have to learn a second one,\u201d Adam told her.\n\n\u201cHow do I do that?\u201d she asked.\n\n\u201cYou need to get a more powerful wizard to bestow you with the new magic powers,\u201d Adam said, an idea coming to him.\n\n\u201cWhat about Murray\u2026I mean Veldin?\u201d\n\n\u201cSure, I\u2019ll teach you,\u201d Murray agreed with a shrug.\n\n\u201cOkay, how does this work?\u201d the topless brunette asked.\n\n\u201cYou need to draw his magical powers into you,\u201d Adam said quickly, cutting in before Murray could answer her.\n\n\u201cHow?\u201d\n\n\u201cMagical energy is transferred through sexual energy,\u201d Adam explained, trying to keep a straight face. \u201cYou need to roll a D-4 to determine the method of transference.\u201d\n\nAdam shot a wink in Murray\u2019s direction and the younger nerd made a mental note to thank his brother tomorrow.\n\nDevon rifled through the pile of multi-sided dice and found a four-sided pyramid dice that had three numbers on each side. It was the strangest thing she had seen, \u201chow does this thing work?\u201d\n\n\u201cWhen you roll it the numbers around the bottom edge, the face up ones are your roll,\u201d Adam told her.\n\nDevon nodded and gave the strange pyramid a roll. \u201cA two,\u201d she said with a frown as she struggled to work out the result. \u201cWhat\u2019s that mean?\u201d\n\n\u201cIt means you need to use your, ah\u2026boobs to milk the magic out of Murray,\u201d Adam told her with a blush.\n\nDevon gave the Dungeon Master a dubious look. \u201cI titty-fuck him to get the new spell?\u201d\n\n\u201cYes, that\u2019s right,\u201d Adam nodded.\n\n\u201cOkay, that\u2019s not so bad,\u201d she decided, thinking of the messy cocksucking that Danielle had just been put through. From the way Murray\u2019s gaze was constantly straying to both her and Danielle\u2019s exposed chests it shouldn\u2019t be too difficult to satisfy him. Devon knelt at Murray\u2019s feet in much the same way Danielle had done to David and then reached up to unfasten the front of his newly put on shorts.\n\nMurray was breathing heavily as the busty, topless brunette unzipped his shorts and tugged down his cum-soaked underwear, revealing his flaccid penis. Devon ran her soft hands up over Murray\u2019s thighs, he gave a groan as her fingertips traced over the length of his cock and then gently brushed over his testicles. Murray gasped as Devon\u2019s hand then closed around his cock and she began to stroke him slowly in her fist, getting him hard for the forthcoming titfuck. This was the first time anyone other than his own hands had touched his bare cock and it felt wonderful.\n\nUnder Devon\u2019s skillful fingertips, Murray\u2019s fortunate cock rapidly grew to full erection. \u201cAre you ready?\u201d the buxom cheerleader asked her magic teacher.",
        "\u201cOh yeah!\u201d Murray hurriedly nodded.\n\nDevon gave a sinful grin and then shuffled up further between Murray\u2019s spread legs, lifting her own heavy breasts in her hands and wrapping Murray\u2019s erect penis up in her cleavage. Murray gave a long moan of pleasure as his cock was enfolded in the warm, soft flesh of Devon\u2019s plump boobs. The busty cheerleader began to slide her tits up and down the sides of Murray\u2019s hard cock, the ample mounds forming a tight sheath for his cock to glide through.\n\n\u201cOh man your tits feel good around me!\u201d gasped Murray, his hips humping up off the seat of the chair as he thrust to meet Devon\u2019s bouncing tits. With each thrust the tip of his cock emerged at the top of Devon\u2019s cleavage, jutting against the underside of her chin when Murray got particularly vigorous. Murray bucked against Devon\u2019s big tits for a few minutes before he started to feel his orgasm impending, despite having recently filled his pants thanks to Danielle.\n\n\u201cAre you ready to receive the magic?\u201d he managed to grunt as her wonderful tits worked his throbbing cock, his balls slapping into the lower side of the large melons with each thrust.\n\n\u201cOh yeah, give it to me Veldin!\u201d moaned Devon, getting a little turned on despite the weirdness of the situation. Devon always appreciated a good tit-fuck.\n\nMurray lurched to his feet and took his trembling cock in hand, jerking it rapidly in his fist as he aimed it towards Devon\u2019s outthrust chest. \u201cHere it comes!\u201d Murray gave a nasal grunt as his seed burst from the tip of his cock and splashed onto Devon\u2019s proud chest. The nerd\u2019s knees sagged slightly and he gave another snort as a second spurt launched out onto the kneeling beauty. \u201cOh fuck yeah!\u201d groaned Murray, slowing his pumping hand and dribbling the last of his semen onto Devon\u2019s breasts.\n\n\u201cCongratulations Devon, you\u2019ve learn the magic missile spell,\u201d Adam told her, deciding the spell seemed appropriate given the delivery method.\n\nDevon grabbed a hand towel that Murray had brought out with the drinks and wiped her cum-spattered bosom as she sat back down at the table. \u201cNow we can get on with the adventure,\u201d she said. \u201cWhere were we?\u201d\n\n\u201cYou\u2019ve just landed on the other side of the chasm and got off the magic carpet,\u201d Adam reminded them. \u201cThere\u2019s another tunnel just ahead.\u201d\n\n\u201cLet\u2019s head that way then,\u201d said Danielle with enthusiasm, both the boys were wearing silly grins so it seemed that it was up to the girls to lead the way.\n\nAdam nodded. \u201cYou head down the tunnel very shortly leave the naturally formed cave, heading into a clearly man made hallway. For about two hundred yards the hallway continues before coming to a arched doorway. The doorway has a sparkling blue field of energy over it. Along the outer rim of the archway is some strange writing.\u201d Adam turned to Murray. \u201cYou recognize the writing as elvish.\u201d\n\n\u201cI\u2019ll read it. What does it say?\u201d Murray asked his brother.\n\n\u201cThis field can only be broken by the most voluptuous of women.\u201d\n\nDanielle frowned. \u201cWhat does that mean?\u201d\n\n\u201cThe biggest tits,\u201d supplied David, unable to stop his stare from once again being drawn to the voluptuous brunette\u2019s bust.\n\n\u201cThat\u2019s me then,\u201d said Danielle, arching her back slightly to proudly jut her tits out.\n\n\u201cMine are bigger than yours!\u201d disagreed Devon, sticking out her own breasts that had just received a cum-shower from Murray.\n\nDavid looked at both the girl\u2019s chests and cocked his head to the side trying to judge their size. \u201cThey both look big, what size bra\u2019s do you wear?\u201d\n\n\u201cWe\u2019re both D-cups, but mine are bigger!\u201d insisted Danielle.\n\n\u201cNo way you bitch!\u201d snapped Devon, starting to get a little pissed off at her friend. \u201cTell her Murray.\u201d\n\n\u201cUm, yeah,\u201d Murray said with a nod, licking his lips and remembering the incredible feel of Devon\u2019s big knockers around his cock.\n\n\u201cI\u2019m not so sure, Danielle\u2019s are pretty big,\u201d David said thoughtfully eyeing up the girls\u2019 chests.\n\n\u201cNow, now, don\u2019t argue folks,\u201d said Adam. \u201cDevon, Danielle, stand up, side-by-side. I\u2019ll be the judge to see who has the biggest tits.\u201d\n\nBoth the lovely eighteen year olds agreed to this and stood beside each other, Danielle still wearing only a g-string and Devon in her short blue skirt. Adam got up and moved around the table to stand up front of them both.\n\nHe stood in front of the pair of busty cheerleaders, moving his head from side to side as he looked at each pair of tits in turn, comparing them. \u201cHmm\u2026\u201d Adam murmured thoughtfully as he reached out and cupped the underside of each girl\u2019s right breast in his palms, one in each hand. Devon gasped slightly at his touch, but Danielle said nothing as Adam moved his hands to their other breasts, jiggling the weight slightly on his palm as if comparing size.\n\nAdam gave a frown as if deep in thought and then stepped to his left, directly in front of Devon. He reached up and cupped both her breasts, one D-cupped mound in each hand. Adam gave the two perfect orbs a firm squeeze, watching the ample flesh well up between his fingers as he sunk them into the perky melons. He then cupped his palms around the undersides of Devon\u2019s twin peaks and lifted their weight, jiggling them in his hands. Adam then spread his fingers wide and pressed his hands to her breasts, letting her nipples jut against his palms as his fingers circled back and forth around the slopes of her breasts as if measuring their circumference. His fingers then squeezed back into Devon\u2019s ample tit-flesh as he pressed the orbs up and together the abundant melons welling up into an impressive cleavage.\n\n\u201cHmm\u2026\u201d he repeated, giving Devon\u2019s breasts a departing squeeze before stepping sideways to stand in front of Danielle.\n\nAdam reached up and repeated the ritual with Danielle\u2019s hefty jugs, first squeezing and then shaking her large boobs in his groping hands.\n\n\u201cIt\u2019s very close,\u201d he said, moving back to Devon and giving her breasts another examination, mashing them more roughly this time in his hands and lifting them up by the nipples, watching the flesh quiver and shake in his hands. \u201cHmm\u2026\u201d he murmured for a third time, stepping back to Danielle and thoroughly groping her tits, letting their weight full his busy hands.\n\nIt was a full ten minutes before he finally stepped back from the two busty cheerleaders, having completed a very, very thorough assessment and comparison of their hooters.\n\n\u201cYou both have very nice, and very big racks,\u201d Adam said, \u201cbut I think Danielle\u2019s are ever so slightly bigger.\u201d\n\n\u201cDamn,\u201d swore Devon in disappointment as the girls returned to their seats.\n\nAdam sat back down behind his screen at the end of the table, adjusting the bulging crotch of his pants as he took his place once again. \u201cAs Danielle steps through the blue force field it gives a shimmer and then vanishes. Beyond is a pitch black room that not even the light of your lantern can illuminate.\u201d\n\n\u201cMagical darkness!\u201d said Murray in a slightly awed tone. \u201cI\u2019ll put on my ring of infravision before entering.\u201d\n\n\u201cMe too,\u201d added David.\n\n\u201cWhat\u2019s infravision?\u201d asked Danielle, still sitting with her chest proudly pushed out, delighting in her victory over her busty best friend, Devon.\n\n\u201cIt means you can see into the infrared spectrum and see heat patterns, kind of like night vision goggles,\u201d Murray told her.\n\n\u201cCool, do we have them too?\u201d asked Danielle hopefully.\n\n\u201cNo,\u201d said Adam, pulling out two black blindfolds and handing them to the girls. \u201cPut these on to simulate the darkness.\u201d\n\nThe topless girls did as they were instructed and then felt themselves being pulled to their feet and led from the room by a nerd\u2019s hands on their hips, urging them forward.\n\n\u201cCareful of the door,\u201d David whispered to Danielle, who\u2019s slim waist his hands rested on. It felt so good to be holding such a gorgeous woman. As David gently pushed Danielle through the doorway into the kitchen he looked down at her beautiful g-string covered posterior. Her ass looked incredible, almost naked, yet each cheek framed by the skimpy piece of black lace. Unable to help himself, David let one hand drop down off her hip to cup on firm butt-cheek and give it a gentle squeeze. \u201cWow!\u201d breathed David as he pinched Danielle\u2019s ass, the flesh was cool and incredibly soft, her ass much more firm than he\u2019d expected it to feel.\n\nOnce both girls were positioned in the center of the kitchen Adam spoke. \u201cOn the far side of the room are three penises, two belonging to elves and one belonging to an orc. To pass this room you must each select one of elf penises and tug on them both at the same time. To tell the cocks apart you can only use your mouths,\u201d Adam told them, no longer even bothering to try and make the adventure seem real, this was all too much fun.\n\n\u201cI will play the role of the orc,\u201d Adam continued, pleased when he saw neither of the two bimbo\u2019s complaining about the plot twist. \u201cDavid and Murray will help me out by playing the two elves. Please kneel down where you stand and we\u2019ll started.\u201d\n\nThe two nerds helped the lovely cocksuckers to kneel down on the floor, making sure that their blindfolds were still in position.\n\n\u201cOw!\u201d complained Devon as she knelt down on the polished wooden floor of the kitchen. \u201cCan we get a cushion or something? This hard floor is painful on the knees.\u201d\n\n\u201cEr, okay sure,\u201d Adam agreed, he hadn\u2019t thought of that. He quickly went back into the other room and grabbed a pair of cushions of the sofa, returning to see that Murray and David were already stripping off their pants. Adam gave each girl a cushion for their knees and then took off his own pants, eager to begin the game.\n\n\u201cWe\u2019ll come by one at a time,\u201d Adam explained. \u201cThen at the end you can call us over by our numbers to make your selection. If you choose incorrectly, you will die. Here\u2019s number one now.\u201d With that Adam gestured for David to step up to the girls to have his cock sucked first.\n\nTrembling in anticipation, David stepped up in front of Devon first, eager to sample her oral skills after enjoying her friend\u2019s warm mouth so much. His cock already starting to swell, David moved right in front of the kneeling brunette, pressing the tip of his cock against her closed lips. Devon jumped slightly, startled at the blind touch, then she parted her lips and accepted the end of David\u2019s cock into her wet mouth, immediately sucking on him.\n\nDavid stifled a groan of pleasure as the busty cheerleader sucked on his cock, drawing more and more of him into her mouth even as he grew to full hardness. Breathing heavily David\u2019s hips gently rocked as he fed his penis into the buxom girls willing mouth. Watching the clock, David enjoyed a full minute of Devon\u2019s oral talents before reluctantly tugging his erection out of Devon\u2019s heavily sucking mouth. Where Danielle had been hesitant, Devon was practically gobbling his cock down.\n\nHis cock trembling at full mast, David moved over to the next of the kneeling beauties, pressing the head of his cock against Danielle\u2019s familiar lips. Seemingly resigned to her fate, Danielle didn\u2019t pause this time as she opened her mouth and sucked David\u2019s hard member inside. David was unable to stop his groan of pleasure this time as Danielle started to bob her head over his hard cock, pushing the shaft deep into the back of her mouth. David saw Devon\u2019s ears perk up at his moan, obviously trying to identify his voice as Danielle sent waves of pleasure through his body.\n\nWhen the next minute was up David grudgingly pulled his cock free from Danielle\u2019s mouth and stepped back to the other two young men.\n\n\u201cNow for number two,\u201d Adam told the girls, stepping forward himself.\n\nAdam\u2019s cock was already fully erect, and he moved in front of Devon, pushing his cock against her lips and forcing the hard shaft into her mouth. Devon parted her lips at the insistent prod of Adam\u2019s erection, the older nerd exhaling loudly as he felt his cock slide over Devon\u2019s tongue. Adam reached down and grabbed the top of Devon\u2019s head in both hands, starting to fuck her willing mouth just as he had done in his bedroom earlier on that evening. He gave a quiet grunt as he lustfully used her mouth for the full minute, making the most of the opportunity.\n\nWhen he pulled out and moved on to Danielle, both him and Devon were breathing heavily. Adam gave Danielle the same treatment, grabbing a handful of her soft blonde hair as he shoved himself in between her compliant lips and fucked her mouth as if it were a cunt. Danielle gagged initially at the rough entrance, but then accepted his cock as he lustfully used her mouth for his pleasure. After a minute with the blonde\u2019s mouth Adam stepped back again.\n\n\u201cAnd finally number three,\u201d Adam announced, making sure he was back where the other two stood before speaking so as not to give them any hints.\n\nHaving watched the other geek\u2019s enjoy the cheerleaders, Murray was hard and ready for action as he stepped up to Devon first, glancing down at the full breasts that had pleasured him not so long ago. He pushed his cock against Devon\u2019s mouth and it immediately opened to take him inside. Devon started to slurp noisily on Murray\u2019s cock, her head bobbing back and forth as she savored the relative gentleness of his manhood after Adam\u2019s vigorous onslaught. Adam was happy to let her do the work, the skillful movements of her mouth up and down the length of his shaft making him go weak at the knees.\n\nAfter a minute of Devon sucking on his cock, Murray moved over to Danielle, pausing for a moment as he stood in front of her to gaze down at her beauty. He could hardly believe that the hottest chick in all of Downtown High was on her knees in front of him, wearing only a g-string and about to suck on his cock. God she was beautiful. His heart racing, Murray stepped up, holding the base of his cock as he guided it in between Danielle\u2019s full lips and into her hot mouth.\n\nThe stunning blonde sucked willingly on Murray\u2019s trembling cock, working up and down the entire length, her tongue fluttering along the underside as she worked her magic. Murray reached down and ran his fingers through her long blonde hair, loving the softness of it as her tongue drove him wild. When he reached the end of his minute he pushed forward with his hips, forcing more and more of his cock into Danielle\u2019s mouth till her lips were pressed right to the very base of his shaft and her nose tickled against his pubic hair. Breathing heavily he finally stepped back, his cock popping free from Danielle\u2019s mouth with a loud smacking noise.\n\n\u201cTime for your guesses now,\u201d Adam told the girls. \u201cRemember, if you get it wrong you will die. Danielle you can go first, pick one of the elvish penises.\u201d\n\n\u201cNumber one please Dungeon Master,\u201d Danielle said. David immediately moved in front of her and she reached up and wrapped her hand around his still hard cock, ready to tug on it. David moaned softly as her hand squeezed him.\n\n\u201cDevon?\u201d Adam asked the other cheerleader.\n\n\u201cNumber three,\u201d said Devon. Murray smiled and moved in front of the lovely brunette. She reached up and took hold of his cock, then both the girls tugged on the cocks.\n\n\u201cGood, now put them in your mouths and take off your blindfolds,\u201d Adam instructed, kind of disappointed that they had chosen correctly. Perhaps if one of them was killed he\u2019d get another blowjob like he had from Devon, or maybe even a chance to fuck one of the beauties.\n\nThe girls leant in once again and took the two cocks into their mouths. They then reached up and took off their blindfolds, blinking at the sudden light as they looked up to see if the cocks in their mouths were of orcish or elvish origin. \n\n\u201cSweet!\u201d exclaimed Devon as she looked up and saw it was Murray\u2019s cock in her mouth. She stood up and they all headed back to the gaming table. \u201cHow\u2019d you guess?\u201d Devon asked her friend.\n\n\u201cWell the second cock was the biggest and roughest, I almost choked on it so I figured it must belong to an orc not an elf,\u201d Danielle explained. \u201cWhat about you Devon?\u201d\n\n\u201cOh, I just recognized the taste of Adams\u2026\u201d Devon began then suddenly blushed as she realized what she had revealed. \u201cI mean lucky guess I think,\u201d she covered lamely, taking her seat back at the table.\n\nDanielle didn\u2019t push the point as Adam continued with the adventure, none of the boys had bothered putting their pants back on and all sat with their still stiff dicks pointing skywards from their laps.\n\n\u201cWhen you correctly identify the elven cocks light suddenly fills the room and the three cocks disappear back into the wall. Ahead you see another long hallway stretching off into the darkness.\u201d Adam told them all. \u201cAs you start to make your way down this new hallway you hear a roar from further ahead.\u201d He hadn\u2019t been able to think of another excuse to play with the topless babes again so he\u2019d switched back to the original adventure.\n\n\u201cWe\u2019ll get our weapon\u2019s ready and continue,\u201d David said.\n\n\u201cAs you reach the room at the end of the hallway you are shocked to see a massive minotaur, a half man, half bull-like creature. As you enter the monster roars,\u201d said Adam.\n\n\u201cI\u2019ll fuck the minotaur into submission so we can get past,\u201d said Danielle, causing everyone to look at her in surprise. Devon gasped at her friend\u2019s boldness.\n\n\u201cUm,\u201d Adam hesitated, boy was she getting into the spirit of the game now. \u201cAh\u2026roll D-4 then I guess,\u201d he said, trying to run with her suggestion.\n\n\u201cLike Devon\u2019s magic lesson?\u2019 Danielle asked as she picked up the four-sided dice.\n\n\u201cYeah,\u201d Adam nodded.\n\nDanielle rolled the dice, secretly hoping for a two as she had a thing for titfucks, so long as it wasn\u2019t another blowjob she\u2019d be happy. \u201cA four,\u201d she announced when the dice stopped. \u201cWhat\u2019s that mean?\u201d\n\n\u201cAnal,\u201d Adam replied, hardly able to believe his luck.\n\nDanielle\u2019s face paled at this. \u201cEww! I don\u2019t do that! It\u2019s gross!\u201d exclaimed Danielle in horror, she had not expected that to happen when she volunteered to take on the minotaur, and if it was half bull then it probably had a big dick.\n\n\u201cYou rolled a four, you don\u2019t have a choice, \u201cAdam said sternly, reaching under the table to stroke his cock. \u201cBesides your character loves anal, so you just need to role-play and it\u2019ll be fine.\u201d\n\n\u201cOh yeah, I guess if it\u2019s just role-playing then that won\u2019t be so bad,\u201d Danielle agreed. \u201cMy character loves it you say?\u201d\n\n\u201cIt\u2019s her favorite,\u201d Adam assured Danielle as he stood up from behind the table, stroking his erection in one hand. \u201cI\u2019ll act out the role of the minotaur for this. Why don\u2019t you bend over the table and assume the position.\u201d\n\n\u201cSure,\u201d said Danielle with surprising cheer as she stood up and bent over the edge of the table, resting on her forearms, her ample D-cups squashing flat over her character sheet.\n\nLicking his lips in anticipation Adam moved around behind the bent over blonde, admiring the perfect, firm cheeks of her ass. Adam reached out and ran a hand over the smooth globes, then hooked a finger into the back of her g-string, lifting the strip that ran down between her buttocks and tugging it to the side. In her bent over pose, Danielle\u2019s vagina and asshole were visible between the beautiful rounds of her ass.\n\nAdam slipped a fingertip into Danielle\u2019s ass, causing her to sharply suck in a breath of air. \u201cI might need a little lubrication,\u201d he said as he probed the digit gently inside her. \u201cDevon can you pull your chair over here a moment,\u201d he said as he withdrew his finger from Danielle\u2019s ass and moved it down further to slide into her vagina.\n\nDevon moved her chair closer and Adam offered his cock up towards her lips. Seated she was at the perfect height to suck him off. \u201cMake sure it\u2019s sloppy,\u201d he murmured as Devon opened her lips and once again took Adam\u2019s cock into her mouth. The voluptuous brunette immediately started to slurp on Adam\u2019s cock as he began to pump his finger in and out of Danielle\u2019s cunt.\n\nDevon slobbered noisily over Adam\u2019s shaft till he was dripping with saliva and hard as a rock. Once he was satisfied with the lubrication he drew his finger out of Danielle\u2019s cunt and wiped her own juices onto the tightly puckered hole of Danielle\u2019s lovely ass. He then guided the tip of his cock against her ass. \u201cAre you ready to subdue the minotaur?\u201d he asked the busty blonde cheerleader.",
        "\u201cI think so,\u201d Danielle replied uneasily. Adam\u2019s hands took a tight grip on Danielle\u2019s slim waist and he slowly and steadily pushed forward with his hips, piercing her ass with his hard cock. \u201cAh!\u201d Danielle gasped at the entry of his penis, her ass clutching tightly at him as he pushed deeper.\n\n\u201cFuck that\u2019s tight!\u201d groaned Adam as he began to leisurely rock back and forth, warming up Danielle for her ass-fucking. He ran his hands admiringly over Danielle smooth bare back, his cock sawing deeper in and out of her ass.\n\n\u201cIsn\u2019t this hot?\u201d Devon murmured across the table to Murray who nodded in agreement. He couldn\u2019t believe he was watching his brother buggering the captain of the cheerleading squad.\n\n\u201cOh yeah!\u201d groaned Adam, looking down at the fantastic spectacle of Danielle\u2019s magnificent buttocks clutching around his hard cock as he thrust against her. \u201cThe minotaur is loving this Danielle!\u201d he gasped, it was amazing how good this felt. \n\nAdam began to increase the speed of his thrusts, driving his cock deeper into Danielle\u2019s ass as she began to get used to his intrusion and relax. His hips slapped against Danielle\u2019s firm buttocks, the smacking of flesh filling the room as Adam grunted and humped Danielle from behind. The busty blonde moaned and pushed backwards to meet Adam\u2019s thrust, his cock buried up her anus was rather uncomfortable and she wanted to get him off as quickly as possible. He actually felt like a bull as he rapidly fucked her tight hole.\n\n\u201cLick my balls while I fuck her Devon,\u201d Adam commanded the other cheerleader, \u201cit\u2019ll get the minotaur off quicker.\u201d\n\nDevon grinned, apparently pleased with the idea and crawled underneath the bucking pair. From beneath she could see Adam\u2019s cock pumping in and out of her friend\u2019s snug ass, Adam\u2019s balls slapping as he bucked against her. Devon craned her head up, her tongue flicking out to swipe across Adam\u2019s swinging testicles as he thrust back and forth. \u201cOh yeah!\u201d groaned Adam at the touch of Devon\u2019s tongue. The brunette\u2019s tongue fluttered across Adam\u2019s balls and then swiped up the length of her friend\u2019s vaginal slit, causing Danielle to join Adam in her moans.\n\nAdam gave a shudder and suddenly stopped thrusting, burying his cock right up inside Danielle\u2019s ass as he arched his back and exploded inside her. Devon sucked at his balls as they tightened and shot their load up the length of his shaft and out into Danielle\u2019s ass. The bent over blonde cried out as Devon\u2019s chin scraped against her clit and Adam\u2019s pulsating cock filled her ass.\n\n\u201cYes!\u201d grunted Adam, spending himself into the blonde\u2019s rear passage. He withdrew from the tight tunnel and staggered back to his chair, breathing heavily. Devon gave Danielle\u2019s pussy one last lick before the blonde straightened up and slumped back into her own chair.\n\n\u201cThat was wild,\u201d breathed Devon as she emerged from beneath the table, who\u2019d have thought that D&D would be this much fun. \u201cSo has the beast been defeated?\u201d she asked Adam who was still reveling in post-orgasmic bliss. \n\nDanielle excused herself to freshen up in the bathroom whilst Devon took a long swallow of her coke. \n\nA few minutes later Danielle returned with a towel wrapped around her torso and the adventure was back on.\n\n\u201cWith the minotaur defeated you have finally reached you goal,\u201d Adam told them all. \u201cSitting in a glowing light is a golden chest, about the size of this table.\u201d\n\n\u201cLet\u2019s go take a closer look,\u201d said Danielle, she\u2019d worked hard for this treasure and was eager to see what awaited.\n\n\u201cThe chest is very ornate and looks as though it\u2019s made of solid gold. The lid is closed and there is no obvious lock.\u201d\n\n\u201cI\u2019ll try and open it,\u201d said Danielle.\n\n\u201cUnfortunately the lid won\u2019t budge, but as you touch it a glowing red writing appears on the lid, the text appears to be in the same elvish language as the writing around the blue force field earlier on,\u201d Adam told them.\n\n\u201cI\u2019ll read it, what does it say?\u201d Murray asked his very satisfied looking brother.\n\n\u201cThis treasure chest can only be opened by intense sexual energy,\u201d Adam said.\n\n\u201cHow are you going to do that?\u201d asked David.\n\n\u201cLet\u2019s all fuck!\u201d suggested Devon, watching Danielle and Adam going at it had made her horny as hell. The busty brunette stood up and unzipped her skirt, letting it drop to the floor. Her underwear quickly followed. \u201cYou do me David, Murray can do Danielle,\u201d Devon suggested as she got down on her hands and knee\u2019s, facing away from them and offering up her beautiful posterior.\n\nDavid grinned and didn\u2019t have to be told twice, he knocked his chair over as he scrambled to his feet and dropped down behind the kneeling beauty. The horny nerd ran a hand over Devon\u2019s smooth ass and then up her side, reaching underneath her to cup and squeeze one of her ample D cups. \u201cDo you want it up the ass too?\u201d David asked eagerly as he rubbed the tip of his hard cock across Devon\u2019s smooth ass, leaving a glistening trail of pre-cum. \n\n\u201cNo, in my pussy honey,\u201d Devon replied.\n\nBack at the table Murray looked hopefully at Danielle who was still looking rather worn out from her recent session with Murray\u2019s older brother.\n\n\u201cFine,\u201d she sighed wearily, deciding to let Murray have his fun. \u201cLet\u2019s get this chest open.\u201d She stood up and pulled off her towel, revealing her completely naked, curvy body beneath. Danielle then knelt down on her hands and knee\u2019s right beside Devon as Murray hurriedly moved behind her.\n\n\u201cOh shit that\u2019s good!\u201d gasped David as he slid his hard cock up into Devon\u2019s pussy, driving completely up inside her till his hips were pressed tight against her ass.\n\nBeside him, Murray rubbed the end of his cock down over Danielle\u2019s slightly sore asshole and then over the slit of her cunt. Danielle moaned softly as Murray nudged her clit with the head of his cock and then pushed his cock against her vagina, slipping up inside her. Murray held onto the curves of Danielle\u2019s waist as he started to fuck her doggy style, his best friend David fucking the other busty cheerleader right beside him.\n\n\u201cThis is so cool,\u201d grunted David as he bucked away at Devon, turning to grin at his friend beside him.\n\n\u201cHell yes!\u201d moaned Murray in agreement.\n\nAdam stood up and walked around to the front end of the two girls, \u201cThe chest groans slightly and you see the lid open a crack, it\u2019s obviously working!\u201d He knelt down in front of the two girls and his younger friends hammered away at them from behind and offered his cock up towards Devon\u2019s face. The busty brunette opened her mouth and took his flaccid organ without pausing. As Devon started to suck on his cock, Adam reached over and squeezed Danielle\u2019s breasts.\n\n\u201cLet\u2019s swap,\u201d said David after a few minutes of screwing Devon.\n\n\u201cCool!\u201d agreed Murray and the two teenagers swapped position, Murray sliding his cock up into Devon\u2019s pussy and David thrusting into Danielle. At the other end of the girls Adam swapped as well, withdrawing his now half-erect cock from Devon\u2019s mouth and feeding it to Danielle.\n\nDavid and Murray high-fived each other and resumed their doggy style fucking, slamming vigorously against the two perfect asses that were presented for their pleasure. If it hadn\u2019t been for their previous orgasms both the eighteen year old geeks would have emptied their loads into the cheerleaders long ago, as it was they were both rapidly approaching exploding.\n\nAdam drew out of Danielle and moved the head of his cock back over to Devon\u2019s lips, he rested a hand on both the girls heads and pushed their faces together around his cock so that they both began to lick and suck at his member. \u201cOh yeah, suck my cock ladies!\u201d he groaned as the two girls serviced him.\n\n\u201cI\u2019m gonna cum soon!\u201d groaned David as he pumped Danielle\u2019s world class pussy faster and faster.\n\n\u201cMe too!\u201d said Murray, thrusting against Devon, his movements pushing her mouth further forward on Adam\u2019s cock. \u201cLet\u2019s swap one more time!\u201d\n\nDavid nodded, he was out of breath as the two nerds quickly changed position. \u201cOh fuck!\u201d moaned David as he pushed back into Devon, the friction of sliding back inside her hot pussy sent him over the edge and he immediately started to cum inside her.\n\nMurray thrust up into Danielle as his friend orgasmed beside him. He tightly gripped Danielle\u2019s hips and pistoned his cock rapidly into her, letting himself go and enjoying the ride.\n\nDavid thrust hard into Devon one final time, milking the last of his cum from his cock and just taking pleasure from the sensations of being inside the beautiful girl. He could hardly believe that he and Murray had lost their virginity to the Double D\u2019s. Beside him Murray cried out as he had his own orgasm, cumming deep inside Danielle, captain of the cheerleading squad. Without a doubt this was the best Dungeons & Dragons session they\u2019d ever had.\n\nAdam stood back up as he saw both boys had cum, his cock was still only at half-mast, glistening with saliva. Despite the very welcome attentions of the busty Double D\u2019s he\u2019d been too spent to get it up again so soon. \u201cAs Veldin and Thrud cum the lid of the chest rises, revealing a massive pile of gold,\u201d Adam said.\n\n\u201cWoohoo!\u201d cried out Danielle, \u201cWe did it!\u201d\n\n\u201cYour mission is a success!\u201d Adam agreed.\n\n\u201cThat\u2019s it?\u201d Devon asked.\n\n\u201cYep, all done,\u201d the Dungeon Master confirmed.\n\n\u201cI don\u2019t think I get it,\u201d Devon said with a frown. \u201cI mean, I saw the dungeon but where was the dragon?\u201d\n\n**\n\nAbout twenty minutes later, once everyone had washed up from their sweaty session and got dressed again, the three boys saw the Double D\u2019s to the door.\n\n\u201cThanks for coming along, hopefully it helped with your assignment,\u201d said Murray, despite the fact he had just soundly fucked both of the girls he found himself suddenly feeling nervous and inferior once again.\n\nDanielle smiled, \u201cI\u2019m sure we\u2019ll get an A.\u201d\n\n\u201cWhat time\u2019s next weeks game?\u201d Devon asked the boys.\n\n\u201cAre you kidding?\u201d Adam almost choked.\n\n\u201cNo, what time?\u201d Devon insisted.\n\n\u201cYou enjoyed that?\u201d David asked, sharing Adam\u2019s surprise.\n\n\u201cHell yes!\u201d Danielle and Devon both said at once. \u201cIt was great, we can\u2019t wait for next week!\u201d Devon added, grinning broadly.\n\nTHE END"
    ],
    "authorname": "GeorgeTasker",
    "tags": [
        "devon gave",
        "danielle ass",
        "hands danielle",
        "finger danielle",
        "magic carpet",
        "cum adam",
        "inside devon",
        "adam balls",
        "brother adam",
        "danielle mouth"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-double-ds-play-dandd"
}