{
    "title": "Justice Ch. 04: Old Scores",
    "pages": [
        "Justice Ch. 04: Old Scores\n\nAlthough this story can be read on its own, I suggest you first read Justice Ch. 01, Justice Ch. 02 and Justice Ch. 03 to get the full context of what is happening here.\n\nSheriff Ryan Caldwell and his wife Beverly first appeared in my seven-part series, \"A Father's Justice.\" And for those who wish to pick nits (you know who you are), the town of Hard Rock, Texas is a figment of my imagination.\n\nMany thanks to those who offered comments and constructive criticism on my previous stories. For those who want to say this or that would never happen, remember this is my universe, a place where nearly anything can, and often does, happen. At least on paper... \n\nPlease refer to my profile for more on my personal policy regarding comments, feedback, follows, etc. (Yes, I DO moderate comments) And please remember, this is a work of fiction, not a docu-drama...\n\n...\n\nJune 17, 1855\n\nThe young man sat on his horse and looked down at the tiny town below him. The locals called this place, \"Hard Rock,\" supposedly after a large outcropping of rock the natives allegedly used to punish slaves and others who ran afoul of their edicts. According to legend, the poor victims were tied down to the rock for days or weeks, exposed to the elements until they either died or had suffered sufficiently to atone for their misdeeds.\n\nHe took in the few buildings that made up the sleepy town. There was a saloon, a hotel, a general mercantile, the sheriff's office/jail and a few other buildings. The building that caught his attention was the saloon, where he saw three horses tied at the hitching post. He knew those were the horses whose tracks he had followed for the better part of the day. He double-checked his pistols and headed into town, going straight to the saloon.\n\nHe got off his horse and tied it to the hitching post. Entering the dark saloon, he instantly saw her -- Lizzy, his wife. He noticed the garish dress she was wearing along with the two gunmen next to her, leering at her nearly-exposed breasts. It was clear she was not there of her own accord.\n\nNext to them was the man responsible for this scene -- Jackson Abercrombie, formerly of New York City, now here working to take over the small farms and ranches that had sprung up around town. Jack looked up as the man walked in.\n\n\"Eli,\" Jack exclaimed. \"Took you long enough to get here.\"\n\n\"Let my wife go, Jack,\" Eli said. \"We can settle this like men.\" Jake laughed.\n\n\"You think it's gonna be that easy, Eli?\" Jake asked. \"I don't think so.\"\n\n\"What do you want, Jack?\" Eli asked.\n\n\"You know what I want, Eli,\" Jack said, a sneer on his face. \"Your father's ranch. Either that, or my boys and I will take something a bit more precious to you. Like, your woman. After she performs for us.\" The other two laughed at that. \"What'll it be, Eli?\" Eli looked and saw Lizzy struggling against the ropes they had bound her with. Fire burned in his eyes as his fury threatened to erupt. As angry as he was, he knew he would have to play it cool. He studied the two men and as he watched, he saw one of them move his hand toward a pistol holstered on his hip. Eli beat him to the punch.\n\nPulling out his Colt 1851 Navy revolver, he put a .36 caliber bullet in the forehead of the first man, and another in the second man, even as he reached for his pistol. As their blood soaked into the wood floor, Eli pointed his pistol at Jack and cocked the hammer. Jack held up his hands and got out of his chair.\n\n\"Now, Eli, there's no call for that,\" he said, his voice shaking. \"As you can see, I'm unarmed. You wouldn't shoot an unarmed man now, would ya?\"\n\n\"Considerin' that mah brother was unarmed when your boys shot him, and considerin' that you took my wife against her will, yes,\" Eli said. Jack shook his head as Eli approached him.\n\n\"No, Eli, please,\" Jack begged.\n\n\"Make yer peace with God, Jack,\" Eli said. \"Maybe he'll have mercy on ya. Because I won't.\" Jack's eyes grew wide with fear as he realized his end was coming. His teeth clenched, Eli pulled the trigger, sending a .36 caliber bullet into Jack's chest. Jack's body slammed against the wall behind him, then fell forward, hitting the table as he went down. He tried to take a few last breaths and managed to gurgle his final remarks.\n\n\"This ain't over, Eli,\" he said, blood dripping from his mouth. \"If I have to crawl out of the pit of Hell and damnation itself, I'll be back.\" He slumped on the floor, dead. Eli hawked up some mucus and spit, hitting Jack on the back of the head.\n\n\"Reckon not,\" he said quietly. He holstered his pistol and went to his wife. He pulled her ropes off and looked her over. \"Are you okay?\" he asked. Lizzy nodded her head.\n\n\"I am now that you're here,\" she said, wrapping her arms around him.\n\n\"You got some decent clothes to wear?\" Eli asked.\n\n\"Yes, in the back,\" she said. \"They made me put... this... on and said I would be their entertainment when you got here.\"\n\n\"Well, them fellers won't be in any need of entertainment now,\" Eli said, causing her to chuckle. \"Why don't you go on back and put something decent on. I don't want to take you home looking like a hussy.\" She nodded her head and went into the back room of the saloon.\n\nJust then, a tall man came through the saloon door. Eli looked up to see the town sheriff, a worthless piece of crap on a good day. The sheriff looked around at the bodies on the floor.\n\n\"What the hell happened here?\" he asked.\n\n\"Them three fellers came in here with Lizzy Jones, made her dress up like a dancing girl, then tied her up so they could bushwhack Eli, sheriff,\" the bartender, Jake, said. \"Eli came in, one of them boys started going for his gun, but Eli beat him to it. It was self defense, sheriff.\" The sheriff looked at Jake and nodded his head.\n\n\"Uh huh,\" he said.\n\n\"That's my story and I'm sticking to it,\" Jake said.\n\n\"Alright,\" the sheriff said. \"Can you at least help me get them over to the undertaker?\"\n\n\"Yeah, reckon I can do that,\" Jake said. \"Then I need to get back over to the hotel.\" The sheriff turned to Eli.\n\n\"What's yer story, Eli?\" he asked.\n\n\"I was out tending to the herd when I heard gunfire,\" Eli said. \"I rode back to the house as fast as I could, and saw they had shot my brother, Bill. He's gonna be alright, the bullet went in and out, didn't hit anything vital, but he's gonna be laid up fer a bit. Pa told me that Jack and his boys grabbed Lizzy and left. I followed their tracks here. You know the rest.\"\n\n\"Alright, well, you get yer wife on home and see to yer brother,\" the sheriff said. \"I'll take care of these fellers.\"\n\n\"Thanks, sheriff,\" Eli said. By then, Lizzy had returned, wearing the clothes she had on when Jack and his boys snatched her from the ranch. He put her on his horse and slowly rode out of town, thankful that Lizzy wasn't hurt.\n\n...\n\nSeptember 25, 2020\n\nJessica Shriver sat in the four-wheel drive Hummer with her friend, April Jennings, watching her laptop for any signs of activity from the various cameras they had set up in and around the small adobe structure. April was also watching her laptop, switching from one camera to the next.\n\nJessica and April were more than just two long-time friends. They were part of a paranormal group that liked to investigate historic sites in hopes of perhaps finding evidence of the paranormal that might help unlock the secrets and mysteries of the past.\n\nThey traveled around the country, and used the best equipment available. They were funded in part by a website in which they published video and blog posts -- for a price. The vast majority of their funding, however, came from a trust fund April inherited when her grandfather died.\n\nThey had dreams of perhaps getting a television show of their own, but they were concerned the commercial aspect of such a show and the desire to produce \"evidence,\" whether real or not, would ruin the reputation they had built up over the last five years.\n\nThey had been looking at this site off and on for the last two months -- ever since they got word the state was interested in making it a protected historical site. So far, they hadn't gotten much for their efforts.\n\nAfter examining hundreds of hours of video and audio, they've only gotten a handful of \"anomalies\" on video -- what might be considered \"orbs,\" and a few possible shadows. They did, however, capture several migrants stopping at the place after crossing the border. They didn't stay very long, for some reason, and were quite eager to leave when they did.\n\nAs for audio, they only captured a handful of EVP's, or electronic voice phenomenons. Most were garbled, but a couple could be distinctly heard. In one, a man is heard sobbing. Another was of a woman saying only, \"Eli,\" and the third wasn't a voice, but a very clear gunshot. Their research indicated the man who built this place had a son named Elijah. Was there a connection, they wondered. And what happened to him?\n\n\"You know, this place just gives me the absolute creeps,\" Jessica said.\n\n\"You and me both,\" April said. \"I can't imagine anyone actually lived in this place once upon a time.\"\n\n\"Yeah,\" Jessica replied. \"It may have been the cat's meow back in the 1800s, but it sure sucks now.\"\n\n\"Seen anything yet?\" April asked.\n\n\"Nah,\" Jessica answered. \"Let me switch to infrared. Maybe we'll catch something there.\"\n\n\"Did you hear they've got someone coming out to do an initial site survey for the historical commission?\" April asked.\n\n\"What, again?\" Jessica asked. \"When are they finally gonna make up their damn minds?\"\n\n\"No idea,\" April told her. \"My friend at the commission says the governor's office is sending someone out as early as next week.\"\n\n\"Think we can find out who they're sending?\" Jessica asked.\n\n\"Already know,\" April said. \"Some lawyer named Danni Jones.\"\n\n\"Jones?\" Jessica asked. \"Think there's any relation to the original builders of this place?\"\n\n\"I doubt it,\" April said. \"You can't swing a dead cat without hitting someone named Jones.\"\n\n\"I guess you're right,\" Jessica said. \"Still, it would be kinda cool to meet someone related to the people who built this thing.\"\n\n\"I suppose,\" April said. Suddenly, Jessica thought she saw movement on one of her infrared cameras.\n\n\"Wait, I think I just saw something,\" she said.\n\n\"Really?\" April asked. \"Show me.\" Finally, after days of getting nothing but shadows and the odd sound, they captured something on video. She craned her neck to see Jessica's screen. Jessica rewound the digital video on her laptop and pressed play. Everything on the screen had a reddish tint, but as they watched, they clearly saw what looked like a black shadow slither out of the ground and shoot away from them.\n\n\"What the hell was that?\" April asked. Jessica shook her head.\n\n\"Don't know,\" she said. \"It moved pretty fast. Maybe it was an animal. I'll back up and play it slower.\" She rewound the video and played it, slower. They watched the black shadow appear to climb out of the ground and run off away from them. Jessica rewound again and played it, even slower.\n\nChills ran up their backs as they watched the thing. They weren't scared, but they were surprised. It appeared to actually claw its way out of the ground. They could discern what looked like a head and shoulders. The \"head\" seemed to look around. When it did, they thought they spotted a set of yellowish eyes. The head turned back around and the thing took off, as though running. They looked at each other, shocked.\n\n\"That's no animal,\" April said.\n\n\"I agree,\" Jessica said. \"We need to get this back to Roger, see if he can make heads or tails of it.\" Roger Greene was the team tech guru, and was also a very capable analyst. Being confined to a wheelchair, he generally didn't work in the field. Instead, he worked on what was sent to him through the Internet in his well-appointed home office. If anyone could make heads or tails of this, he could.\n\n\"I say we pack up for the night and head back to camp,\" April said.\n\n\"Sounds good to me,\" Jessica said. \"We've got lots of video to analyze anyway. Come on, let's go.\" She turned on the high-power overhead lights, bathing the entire site in bright light. They got out of the vehicle and collected their gear, rolling up the cables as they went. Nothing was said. Nothing needed to be said.\n\nSuch was the beauty of their teamwork. They knew what had to be done and they simply did it. When it was time to work, they worked. And when it was time to play, they played. After about 45 minutes, they had everything packed up.\n\n\"Let's roll,\" April said when she closed her door, flipping her long dark hair over her shoulder.\n\n\"On it,\" Jessica said, turning the vehicle around.\n\n...\n\nOctober 1, 2020\n\n\"You gonna be okay taking care of the munchkins for a few days?\" my wife, Danni, asked after I helped her carry her bags into the airport.\n\n\"I'll be fine,\" I told her. \"Don't worry about a thing. Maybe Grandpa will come out and spend some time with them. You know how he loves to play with them.\"\n\n\"Yeah, I do,\" she said.\n\n\"You gonna be okay out there in the middle of nowhere?\" I asked her. She was part of a state historical commission and the governor's office had asked that she look over a small site the commission was interested in adding to its list of protected historical sites. From what I could gather, it was little more than an old adobe building that had been built sometime before the Civil War.\n\nShe accepted the assignment but was stymied when she tried to book a hotel or motel room for the weekend. It seemed that an agricultural convention had already booked up everything that was available, so the local sheriff offered to let her stay with him and his wife at their house. I spoke to the man myself, a fellow named Ryan Caldwell, a one-eyed veteran who had recently been cited for bravery by the governor himself.\n\nHe seemed like a decent guy, at least over the telephone, and I figured if Danni wasn't safe with the local sheriff, she wouldn't be safe with anyone.\n\n\"Don't worry about a thing, Amos,\" she said. That's me, by the way -- Amos Jones. \"You worry too much. It's just an old building in the middle of nowhere. It's not like there's gonna be an army of insurgents waiting to kidnap me.\"\n\n\"Been there, done that, remember?\" I told her.\n\n\"Don't remind me,\" she said. \"I'll call you tonight, okay?\"\n\n\"You'd better,\" I said with a laugh.\n\nI kissed Danni and watched as she made her way to the small airplane that would take her to Hard Rock, a fairly small town in west Texas. I had personally never been there, but I knew my Grandpa Elijah lived there before moving back to Indiana with his wife, Elizabeth.\n\nGrandpa told us they first went to Texas in the late 1840s with his parents and two brothers. He and his young wife, Elizabeth, or Lizzy, moved back in about 1856 when her father died. Lizzy, he explained, needed to help her mother, who was now alone, run the family store. After war broke out in 1860, he enlisted, joining what would later become the 8<sup>th</sup> Regiment of Indiana Cavalry.\n\nHe was later killed by a Confederate bullet during Sherman's March to the Sea, leaving Lizzy to raise two children on her own. She never remarried, and kept a journal of her experiences for future generations of the family. My mother still has her journal and I've read it more than once.\n\nBy now, you're probably scratching your head wondering how it's possible that a man who died over 150 years ago could tell me all about this in the 21<sup>st</sup> century. Believe me, you wouldn't be alone. I've been scratching my head over it from the beginning and I've since decided it's just one of those things I'll never fully understand this side of the grave. What I can't deny are the things I've witnessed since he came into my life.\n\nI watched her airplane ascend into the sky, then headed home. My first stop was to pick up the kids from her parents' ranch. Then it was home to tend to the horses.\n\n...\n\nSheriff Ryan Caldwell had just finished his morning report when Elaine, the female desk sergeant who ran the front office with the efficiency worthy of a military operation, tapped on his door and stuck her head inside.\n\n\"Sheriff, there's a Mrs. Jones here to see you,\" she said.\n\n\"Oh, thanks, Elaine,\" he said. \"Please show her right in.\" She left and a few moments later, came back with Danni in tow. Ryan stood up and extended a hand.\n\n\"Mrs. Jones, I'm glad to see you made it okay,\" he said. \"I trust you had a good flight.\"\n\n\"Very good, Sheriff, thank you,\" she said, shaking his hand. \"And please, call me Danni.\"\n\n\"Very well, Danni,\" he said. \"And please call me Ryan. So, what does your schedule look like today?\"\n\n\"Well, Ryan, I'd like to get out to the site as soon as possible so I can start taking photographs and cataloging what's out there,\" she said.\n\n\"I can understand that,\" he said. \"What are you driving?\"\n\n\"I've got a rental,\" she said. \"A Toyota Camry.\"\n\n\"Well, Danni,\" he said. \"That's pretty rough terrain out there. Your Camry won't make it. You'll either need a four-wheel-drive or go in by horseback. I guess you could charter a helicopter, but I don't know if one can be arranged on such short notice. Tell you what, though. I'm actually done here for now. Why don't you follow me to the house. You can stash your gear in a spare bedroom and I can take you on out. My vehicle is designed to handle terrain like that.\"\n\n\"That sounds good, Ryan,\" she said with a smile. \"Thank you.\"\n\n\"You might also want to think about changing your shoes before we go out there, though,\" he said. \"Like I said, it's pretty rough. You have any boots?\"\n\n\"Never go anywhere without them,\" she said.\n\n\"Good,\" he said. \"Let's get going, then.\" They left the office with Ryan giving instructions to Elaine on the way out. Danni followed Ryan in her rented Toyota and soon, they were pulling into the long driveway leading to his house. When they went inside, Ryan called out to his wife, Beverly.\n\n\"Hon, I'm home,\" he said. \"Got us a visitor. Mrs. Jones is here.\" An attractive blonde woman came out of the kitchen and met them in the front room. She extended a hand to Beverly.\n\n\"Mrs. Jones, it's good to meet you. Please call me Beverly or Bev,\" she said.\n\n\"Good to meet you Bev,\" Danni said. \"And please call me Danni.\"\n\n\"Alright, Danni,\" she said. \"Why don't you let Ryan grab your things and I'll take you on up to your room.\" Danni turned and saw the scarred, one-eyed sheriff had already picked up her suitcases.\n\n\"Great,\" she said. They went upstairs, and Ryan set her bags on the bed as Bev showed her around the upper floor. He was waiting in the front room when she came down, wearing boots and jeans more appropriate for the work ahead.\n\n\"We're heading out to the old homestead, hon,\" he said. \"We should be back in time for dinner.\"\n\n\"Okay,\" she said. \"Is lasagna okay for dinner tonight.\"\n\n\"Oh, yes,\" he said. \"I hope you like lasagna,\" he told Danni.\n\n\"I love it,\" she told him.\n\n\"Alrighty then,\" he said. He reached over and kissed Beverly. \"Be back as soon as we can. Love you.\"\n\n\"Love you too, babe,\" she said. \"Be careful out there.\"\n\n\"We will,\" Ryan said as they left the house. Danni and Ryan climbed into his truck and they took off.\n\n\"Nice town you have here, Ryan,\" she said.\n\n\"Thank you,\" he said. \"It kinda grows on you after a while, and the folks here are as friendly as they come. I like it and I get paid to keep it nice and quiet.\"\n\n\"Must be nice to live in a place relatively free of crime,\" she said.\n\n\"It is,\" he said. \"But don't kid yourself. We do have our own criminal element, like any other town, but they generally stay underground, like gophers in their borrows. When they pop up, though, we're there to nab 'em.\"",
        "\"I'm curious, how'd the town get its name?\" she asked.\n\n\"There's a big outcropping of rock a few miles out the other side of town,\" he said. \"Legend has it the native Apaches who used to live here would tie prisoners to it for days on end. Not sure if any of that is true, but that's what the legend says.\"\n\n\"Well, you know what they say,\" Danni said. \"Every legend has some basis in truth. You think maybe we could go take a look at it before I head back?\"\n\n\"Reckon so,\" he said.\n\n\"So, what can you tell me about this site?\" she asked.\n\n\"Not much, really,\" he said. \"It's been out there forever. Not a lot to see. Just an old adobe house in a box canyon. There used to be a barn, but it fell down on itself a long time ago. You can still see some fence posts, but I don't know how old they are. No one's lived in the place full time since before the depression, though.\"\n\n\"No one?\" she asked.\n\n\"Except for the occasional migrant coming up from the border, no,\" he said. \"Sometimes, kids go out there for Halloween or to make out, but they usually don't stay very long. Especially at night. There's no electricity and I don't think I'd trust any of the old plumbing there.\"\n\n\"Oh,\" she said. \"So who owns the place now?\"\n\n\"The county's been in control of it since about 1930,\" he said. \"They still can't decide what they want to do with it, even after 90 years.\"\n\n\"I guess that's modern government for you,\" Danni said. Ryan laughed.\n\n\"Isn't that the truth?\" he asked sarcastically, causing Danni to laugh.\n\n\"By the way, there's a paranormal group that's been coming out from time to time over the last couple months,\" he added. \"They come out for a few days at a time, set up some cameras and stuff, then leave. They're here now, as a matter of fact. They rent a space on the edge of town and have an RV parked there when they come. That's how I know they're here. They seem to be good kids, keep pretty much to themselves, don't cause any problems. Personally, though, I honestly don't know what they expect to find out there.\"\n\n\"I take it you don't believe in ghosts or the afterlife,\" she said. He snorted.\n\n\"I don't know know about that, but I have seen some pretty strange things in my day,\" he said.\n\n\"You think it might be possible to talk to these paranormal people?\" she asked. \"I'd be curious to see what they've come up with.\"\n\n\"Your call,\" he said. \"I don't have a problem with it, but I don't know how much good they'll be to you.\"\n\n\"You never know,\" she said. \"As they say, the devil's in the details.\"\n\n\"Reckon so,\" he said. \"Maybe if there's enough time after we're done at the site, we can head over. The park they stay in is right on the way.\"\n\n\"Sounds like a plan, Ryan,\" Danni said. They made small talk for the rest of the trip. They spent a good part of the journey on a rough \"road\" that consisted mostly of two ruts with weeds growing between the ruts. Because of the deep holes in the trail, Ryan was forced to drive fairly slow so as to avoid the worse part of the road.\n\n\"You were right,\" Danni said. \"That Camry would never have made it through this.\" He laughed.\n\n\"Hate to tell you this, but that was the GOOD part of the road,\" he said. From there, the \"road\" became rocky and uneven, with a deep ravine on one side and piles of rock on the other. Eventually, it evened out somewhat, and they came upon a box canyon. The dirt trail led to the door of the adobe shack, which sat in the middle of the canyon. Ryan stopped the truck and they got out.\n\n\"Careful,\" he said. \"There's all kinds of crawling things out here. Don't want you stepping on a snake by accident.\"\n\n\"I was raised on a ranch, Ryan,\" she said. \"But thanks for the warning anyway.\" She looked around and took a few pictures from the truck. She walked around and saw tire tracks, perhaps left behind by the paranormal investigators. She walked up to the door of the house and opened it up.\n\n\"Careful now,\" Ryan said. \"Those floorboards are probably 100 years old.\"\n\n\"Got it,\" she said, easing herself inside. She found herself standing in what looked like a combination living room and dining area. The exterior walls were surprisingly quite sturdy and seemed to be about a foot thick. The rest of the place, however, left a lot to be desired. Every window in the house was either cracked or broken and the floor was covered with dust and dirt.\n\nShe spotted a few electrical outlets, no doubt using old knob-and-tube wiring. It was clear these had been added a long time ago, perhaps in the late 1910s or early 1920s. She could see bare spots on the dirt-covered floor where people had slept and observed a few places where mice had left their droppings.\n\nLooking around, she saw a kitchen with an old stove and a large sink. Except for an ancient tub-style washer, and an old refrigerator, there were no other appliances. A door in the kitchen led outside, perhaps where an old outhouse was located.\n\nShe could make out three bedrooms off the main room and a bathroom off the kitchen that had obviously been added after the place was first built. She carefully walked through the old place, testing the floor as she went. She could hear the floorboards creak as she walked around.\n\nDid Elijah's family really live here, she asked herself. If he did, it must've been horrible. The place was tiny and would've been quite cramped with six people. She pictured them walking around in the small place in her mind and wondered what it must've been like.\n\n\"Did you really live here, Grandma Lizzy?\" she asked quietly. She almost expected to get an answer, but none came. She took pictures as she walked around, then headed back outside.\n\n\"What do ya think?\" Ryan asked.\n\n\"Not exactly 'Good Housekeeping' quality, but interesting,\" she said. \"I can't imagine people actually lived way out there back in those days. What did they do for food, water and supplies?\"\n\n\"They dug a well,\" Ryan said. \"You can see what's left of that over there next to the place. I suspect they had a garden out here and probably raised cattle over there in the field. Back then, the town was about seven miles in that direction,\" he added, raising his arm. \"I doubt they went to town very often, given the terrain. It probably would've taken most of the day to get there and back with a horse and wagon.\" Danni walked around the old house, taking photos as she went.\n\n\"Any idea what this might've been?\" she asked, looking at a bare rectangular area in the dirt.\n\n\"No telling,\" Ryan said. \"Maybe an old garage or a stable where they kept horses. If you look over there, you can see where the old barn was. It's been down for quite some time, though. You can see where the old well was, over there, and they had an outhouse in the back.\" She walked around a bit more, taking pictures of everything she could. After an hour or so, she stopped and took one last look around.\n\n\"I think I've seen all I need to see right now,\" she said. \"Maybe we can come back out later if necessary, if that's alright.\"\n\n\"Sure,\" Ryan said. \"Where to now?\"\n\n\"I'd like to speak with those paranormal investigators if that's alright,\" she said.\n\n\"As you wish,\" he said. They got back in his truck and headed out.\n\n...\n\nThe two girls lay in bed, their naked bodies intertwined after a bout of lovemaking. April and Jessica had been lovers since their senior year in college, about six years ago. They had known each other for three years at the time they consummated their relationship during the spring break of their senior year. Over time, their love grew and blossomed.\n\nSometimes, they would invite a man to share their bed, but their love was reserved for each other, and the odd man would find that he was a third wheel -- a human dildo to satisfy a physical urge and nothing more. In all, they could count the men they had during their years together on one hand. As April gave her love a kiss, she heard a knock on the door of their RV.\n\n\"Shit, someone's at the door,\" she said, rolling out of the bed. She threw on a pair of shorts and a t-shirt, not bothering with underwear. Slipping her feet into a pair of flip-flops, she stood up and looked at her lover. \"Better get something on,\" she told Jessica as she headed for the door.\n\n\"Okay, okay,\" Jessica said as she sat up. April opened the door and found herself staring at a large, one-eyed bearded man in uniform and an attractive blonde who stood next to him. She recoiled a bit when she saw the scar running down the left side of his face. What happened to him, she asked herself.\n\n\"Yes, sheriff, what can I do for you?\" she asked.\n\n\"April Jennings?\" the man asked. April nodded her head in the affirmative. \"I'm Sheriff Caldwell and this is Mrs. Danni Jones. She's doing some work for the state historical commission and would like a word with you about the old homestead if that's okay.\"\n\n\"Oh, okay,\" April said. She glanced back and saw that Jessica was dressed much as she was and turned back to the sheriff and Danni. \"Come on in. I hope everything is okay. We have our permit from the county.\"\n\n\"Yes, I know,\" he said. \"There's no problem with that at all.\" He guided Danni up the small stairs leading into the large RV. They both noticed her hair was disheveled and her nipples threatened to poke through her t-shirt. They stepped into the vehicle and saw the place covered with books, charts, computers and other equipment. They also detected the scent of vanilla, which did almost nothing to mask the odor of sex.\n\n\"This is a mighty big rig. Are you girls by yourself?\" Ryan asked, seeing Jessica was in the same state as her companion. April nodded her head.\n\n\"Yes, it's just the two of us,\" she said. \"My parents have a rig much like this one and my father taught me how to drive it when I was 17. I taught Jessica and we go everywhere in it. It beats having to rent a motel room.\"\n\n\"Reckon so,\" Ryan said. \"I suppose I should also ask if you girls are armed.\"\n\n\"Yes, we are,\" April said in a matter-of-fact tone of voice. \"Two girls on the road, alone? You better believe we're armed. And we know how to shoot. I've got all the permits if you'd like to see them.\"\n\n\"No, that's quite alright,\" Ryan said.\n\n\"Ms. Jennings, I just want to talk with you about your investigation of the homestead if that's okay,\" Danni said.\n\n\"Sure,\" April said. \"Please, call me April. This is Jessica.\" They all shook hands. \"Please have a seat if you can find one. Feel free to move some of that stuff if you need to,\" April said. \"Can I get you something to drink? A Coke, maybe?\"\n\n\"Coke would be fine,\" Danni said. \"And please call me Danni.\"\n\n\"One coke coming up,\" April said, handing her a cold can out of the small refrigerator. \"How about you, sheriff? Would you like a coke?\"\n\n\"Don't mind if I do,\" Ryan said. \"Thank you,\" he added when she handed him a can. She pulled out two more and handed one to Jessica as she sat on the small couch with her lover.\n\n\"So what would you like to know?\" April asked.\n\n\"I'm curious to know what you've found so far,\" Danni said.\n\n\"You mean, have we encountered any ghosts or something that might scare off potential tourists?\" April asked.\n\n\"Well, just in general,\" Danni said. \"I'd like to find out what you've learned mostly.\"\n\n\"Uh huh,\" April said. \"Well, Danni, let me start by saying that the vast majority of what we do is research. Unfortunately, most people think that all we do is go someplace after hours with audio and video recorders, shout at the air and 'poof,' ghosts magically appear or start talking to us. It's not like that at all, is it, Jessica?\"\n\n\"No, not hardly,\" Jessica said. \"You see, we might collect hundreds of hours of audio and video and maybe -- just maybe, we'll get maybe a total of one or two minutes of what might be considered evidence. Then we spend hours combing through all that audio and video and try to debunk what evidence we may collect. Mind you, about 85 percent of what we capture can be explained. What's left -- the 15 percent of that one or two minutes worth of evidence -- is what we consider unexplained and possible paranormal.\"\n\n\"That doesn't mean there's ghosts or anything like that,\" April added. \"It's 'para' normal, which simply means it's outside of what we can reasonably explain. We send that evidence off to an outside resource for additional analysis. The rest of the time, we go through libraries, county records and newspaper archives to learn everything we can about a place. In fact, we spend more time doing that than anything else.\"\n\n\"What has your research uncovered about the homestead?\" Danni asked.\n\n\"From what we've learned, the original house was built in 1849 by Tobias Jones. He came here from Indiana with his wife, Margaret, his three sons, William, Travis and Elijah, and a daughter-in-law, Elizabeth. She was married to Elijah,\" April said.\n\n\"Elijah and his wife left in about 1856 and returned to Indiana,\" Jessica said. \"He joined the cavalry when war broke out and was killed during Sherman's March to the Sea. Travis joined the Confederates in this area and was part of the push to take Santa Fe. He was captured by the Union Army and died in captivity. Tobias died in 1870 and Margaret died five years later. William stayed on the homestead until he died in 1903. They're all buried in the Hard Rock cemetery.\"\n\n\"The house was bought by a young couple in 1905,\" April said. \"They stayed until just before the crash in 1929 and moved to California. The house has sat empty ever since, although the county did use it as storage for a few years after they took the property over. They quit using it because the road was simply unusable.\"\n\n\"Sounds like you ladies have done your homework,\" Ryan said.\n\n\"Thank you, Sheriff,\" Jessica said. \"We have to. Without it, we can't even begin to provide context for any evidence we might get.\"\n\n\"Have you gotten any evidence so far?\" Danni asked.\n\n\"Yes, we have,\" April said. \"It's not much, but that's not too unusual. Would you like to see it for yourself?\"\n\n\"Could I, please?\" Danni asked, excited. Ryan said nothing, but was also interested in seeing what they had found. April looked at Jessica, who gave a slight nod of approval.\n\n\"Of course,\" April said, stepping up to the small table between Danni and Ryan. \"There's four pieces we haven't been able to explain or debunk. They're still being looked into by our analyst, but he hasn't been able to explain them, either. There's three pieces of audio and one video. Here's the first piece of audio.\" She pressed a button on her laptop and everyone listened intently. They were surprised to hear what sounded like a gunshot.\n\n\"Can you play that back again, please?\" Ryan asked.\n\n\"Sure,\" April said. She played the audio again as Ryan listened.\n\n\"That certainly sounds like a gunshot,\" Ryan said. \"But it's obviously not a modern firearm. The report is much different.\"\n\n\"That's what we thought as well,\" Jessica. \"We did some digging to see what we could learn and found an entry made by the sheriff back in 1855. From what he wrote, William had been shot but was recovering. We know that William had a difficult time getting around, which is why he never went into the army.\"\n\n\"I see,\" Ryan said. \"What else have you got?\"\n\n\"Here's the second one,\" April said. \"It's very short, but you can clearly hear what's going on.\" She played the audio, and as Danni and Ryan listened, they heard the sound of an older man sobbing. April stopped the audio.\n\n\"Sounds like a man crying,\" Danni said.\n\n\"Yes, it does,\" April said. \"But we don't have anything to put it into context. Here's the third piece of audio.\" They listened and heard an older woman say, \"Eli.\" She sounded like she was in distress when she said it.\n\n\"I heard her say, 'Eli,'\" Danni said when it was finished.\n\n\"That's what we heard as well,\" Jessica said. \"And it sounded to me like she had been crying when she said it.\"\n\n\"That's what I gathered as well,\" Danni said.\n\n\"Again, we can only make an educated guess based on what we know of the family,\" April said. \"But it sounds to me that the woman could very well have been Margaret, perhaps mourning the loss of her son in battle.\"\n\n\"Interesting,\" Danni said, her mind racing. \"You said you also have video.\"\n\n\"Yes,\"April said. \"This one has us both stumped. We captured this last Friday night using an infrared filter. Our tech guru still hasn't been able to figure it out.\" She pulled up the video and pressed play. Danni and Ryan watched the blob as it appeared to crawl out of the ground and run away.\"\n\n\"What the hell was that?\" Ryan asked as tingles ran up his spine.\n\n\"We don't know,\" April said. \"You can see more if you watch it at a slower speed.\" She restarted the video, playing it again, only much slower. They saw the thing turn what looked like a head and saw the two yellow \"eyes.\"\n\n\"Holy crap,\" Ryan said when it was finished. \"That doesn't look like an animal to me.\"\n\n\"That's what we thought as well,\" April said. \"We've got some old drawings of the property that were done in the very early 1900s. It looks to us like this was the location of the original well, which has since collapsed in on itself. I don't know if that has anything to do with this, though.\"\n\n\"You haven't seen anything like this since then?\" Ryan asked. Jessica shook her head.\n\n\"No, nothing,\" she said. Danni closed her eyes and thought to herself for a few moments before speaking.\n\n\"You said Elijah was married to a woman named Elizabeth, right?\" she asked.\n\n\"Yes,\" April said.\n\n\"One of my husband's ancestors was named Elijah, and he was married to a woman named Elizabeth,\" Danni said. April and Jessica looked at each other, excitement evident on their faces. \"We know he served in the Union cavalry and was shot just as you described. We also know they lived in this part of Texas before the war. From what you've said, they could very well be the same ones who lived here. In fact, this was her engagement ring,\" she added, lifting her left hand.\n\n\"Wow,\" April said.\n\n\"There's more,\" Danni said. \"After Elijah died, Elizabeth, or Lizzy, as she was called, began keeping a journal. That journal has been in my husband's family ever since. Would you be interested in seeing it?\"\n\n\"Yes, we would, Danni,\" Jessica said. \"Very much. I promise, we'll take very good care of it.\"\n\n\"I can't promise anything, but I'll talk to my husband about it today,\" Danni said. \"I know his mother has made copies for the family, and keeps it under lock and key. She's very protective of it.\"\n\n\"I don't blame her,\" April said. \"Yes, if you can get us a copy of that journal, that would be outstanding.\"\n\n\"Alright,\" she said. \"How long are you two planning to be here?\"\n\n\"We're planning to be here for another week, but we'll be back,\" April said.\n\n\"Okay, I'll let you know what he says tomorrow if that's okay,\" Danni said.\n\n\"We look forward to seeing you then, Danni,\" Jessica said. Danni and Ryan stood as they prepared to leave.\n\n\"Until tomorrow,\" Danni said, extending her hand. April and Jessica shook her hand and escorted them to the door. They watched the two leave in Ryan's official truck and turned to each other, squealing with excitement.\n\n...\n\n\"You really think your husband's grandparents are the ones who lived in that old house?\" Ryan asked as he drove home.\n\n\"I do,\" Danni said.\n\n\"Talk about a small world,\" he said.\n\n\"Yeah,\" Danni said quietly. \"What do you make of that video? Have you ever seen anything like that?\"\n\n\"No, I haven't,\" Ryan said. \"I gotta admit, it sure was pretty compelling.\"\n\n\"Yes, it was,\" she said.\n\n\"Reckon I'd better keep an eye out for shadowy blobs with yellow eyes,\" he said, half-jokingly.\n\n\"Maybe you should put out an APB,\" Danni said with a smile, causing Ryan to laugh.\n\n\"Yeah, I can see it now,\" he said. \"They'd probably lock me up in the loony bin if I did.\" They finally got back to his place, where they settled down for a nice dinner.",
        "...\n\nThat night, Danni called and told me what happened.\n\n\"So, they want to see a copy of Grandma Lizzy's journal?\" I asked. \"Really?\"\n\n\"Yes,\" she said.\n\n\"Do you really think that's the house they lived in?\" I asked.\n\n\"I do,\" she said. \"Everything seems to fit.\"\n\n\"Well, if it'll help, I guess so,\" I said. \"I already have all her journals scanned and saved as PDF files. I also have some photos I've scanned. I can email them to you and you can give them a copy.\"\n\n\"That's a great idea,\" Danni said. \"That way, we won't have to mess with mailing them and it'll be a lot quicker. Yes, please email them to me and I'll get a copy over to them tomorrow.\n\n\"Okay,\" I told her. \"Consider it done. Wanna talk to the kids?\"\n\n\"Sure,\" she said. After talking with the two youngsters, she spoke with me one last time.\n\n\"I miss you, sweetheart,\" she said.\n\n\"I miss you too,\" I told her.\n\n\"Love you,\" she said.\n\n\"Bet I love you more,\" I told her. We ended the call and I headed for the office. After I emailed all the files to Danni, I turned back to the children. As I started to get them ready for bed, there was a knock at the door.\n\n...\n\nThe man looked at himself in the long mirror and smiled. It had been seven days since he climbed up from the well at the old Jones place and he noticed that his corporeal form was finally beginning to take shape and solidify, just as his boss/benefactor said. It still wasn't perfect, but it was good enough for what he had in mind that night.\n\nAccording to the being who sent him back, he needed something called \"Eye Dee\" and modern money. He was told where to go for that, so he decided to make a visit. Because he was still in flux, he was able to move through solid objects at will, the same way he came up through the ground. He looked out the window of the old abandoned warehouse where he was hiding and looked at the lights of the town outside.\n\nHard Rock had changed a lot since he was here last. The place had grown considerably. The streets were paved and people moved around in strange-looking carriages that moved without the benefit of a horse. In fact, he had yet to see an actual horse since he got here. They even had big metal birds that flew through the sky. What kind of a place is this, he wondered.\n\nHe had spent the last few nights prowling around, hiding in the shadows so as not to be seen by the locals. He observed the people walking around, shocked at how little clothing women wore these days. They might as well be naked, he thought. He looked in the stores and browsed all the items that were available for purchase. They had nothing like this when he was alive. And people seemed to be much better off as well.\n\nThere was very little of the town he remembered. The old saloon where he was shot was gone, as were almost all of the other buildings. If he looked hard enough, he could see a reminder here and there, but otherwise, nothing here was the way it used to be.\n\nOnce upon a time, he had dreamed of owning this town and all the land around it. But those dreams were shattered when Eli put a bullet in his chest so long ago. Damn him, he thought. He remembered his promise when it happened, and now it was going to be fulfilled.\n\nHis benefactor was also interested in seeing Eli pay, but for a different reason. Nowadays, Eli called himself, \"Justice O. Peace\" and generally made a nuisance of himself, repeatedly stymieing the being's efforts. He had good reason to be upset with Eli, but the reason didn't really matter. All that he was concerned about was putting the man down, once and for all. And if necessary, his progeny.\n\nBut he had other priorities at the moment, namely, food, drink and pussy, and not necessarily in that order. Of course, he didn't really NEED the food or drink, but he wanted them, since it had been so long since he had tasted a thick juicy steak and a glass of whiskey. He also missed sinking his meat into a nice warm pussy.\n\nHe was told that he would be very well equipped for that, and he looked down at himself. Sure enough, his manhood, even though not completely formed, was much larger and thicker than most men, and certainly much bigger than he remembered.\n\nNow that it was dark enough, he closed his eyes and willed himself to his destination. He opened his eyes and looked around. There he was, the man who would give him his Eye Dee and whatever else he would need to pass for a local in this modern version of Hard Rock. He cleared his throat to get the man's attention.\n\n\"Geez, you scared the shit outta me,\" the man said when he turned around. \"Dontcha know how to knock?\" His tone changed as he looked at the being before him. \"Oh my God, it's you,\" he said. \"What happened to you? Did you get burned or something?\"\n\n\"Don't worry about me and don't ever use that name around me,\" the man said. \"Are you Johnson?\"\n\n\"Yeah, that's me,\" Johnson said.\n\n\"You have what I need?\" The frightened man nodded his head and went to his desk.\n\n\"Right here,\" he said. His hands shook as he held out the small packet. The man took the packet and looked through it. There was a wallet with something called a driver's license and it was full of crisp $100 bills.\n\n\"Where's the Eye Dee?\" he asked. Johnson pointed to the license, frightened.\n\n\"That's it,\" he said. \"Your ID -- identification. Your driver's license. You'll need that to do pretty much anything these days. It's already got a picture and everything.\" The man looked at the license and saw it was inscribed with his old name -- Jackson Abercrombie. It even had a picture that could pass for him. Good, he thought.\n\n\"What about clothes?\" the man asked.\n\n\"Right over here,\" Johnson said, walking to a rack filled with men's clothing. \"I went by the instructions in the email I got. Take whatever you want. There's shoes, boots and socks if you want them. You'll blend in perfectly, trust me.\"\n\nThe man went to the rack and browsed through the clothing. He selected a pair of denim jeans and a plain long-sleeve shirt. He put on a pair of socks and slipped his feet into a pair of black cowboy boots. He couldn't help but notice how much better they felt -- clean and soft, not hard and scratchy the way his old clothes felt. He looked at himself in the mirror and liked what he saw.\n\n\"You got a hat?\" he asked.\n\n\"Yeah, right here,\" Johnson said, handing him a black Stetson. The man nodded in approval and placed it on his head.\n\n\"Very nice,\" he said as he looked at himself again. He turned to Johnson. \"Tell me, where's the best place in town for steak and women?\"\n\n\"Well, there's a bar and grill over on Main, called 'The Joint,'\" Johnson said. \"Food is great, and the women, well, they're to die for.\"\n\n\"Never saw a woman I'd die for,\" the man said. \"I usually make other men die for their women. These women, do they like sex?\"\n\n\"Oh hell yeah,\" Johnson said.\n\n\"They married?\" the man asked. \"I prefer married women.\"\n\n\"A lot of 'em are, yeah,\" Johnson said. \"They usually go there to get laid.\"\n\n\"Sounds like my kind of women,\" the man said. He looked around Johnson's place and was impressed. It was certainly a lot more comfortable than that old warehouse and probably even had a real bed. \"Tell me, do you live here alone?\" Johnson nervously nodded his head.\n\n\"Yeah,\" he said. \"So, when do I get paid? I was told you'd take care of that.\"\n\n\"And you were told right,\" the man said. \"Why don't we settle up right now?\"\n\n\"That would be terrific,\" Johnson said. \"I could really use the cash.\" The man smiled as best as he could, then approached Johnson.\n\n\"I bet you could,\" he hissed. He reached out and took Johnson's head in his hands. Johnson's eyes grew wide as the strange man began to crush his head. \"Don't worry, you won't need cash where you're going,\" the man said as he squeezed harder.\n\nThe man wasn't just crushing Johnson's head -- he was sucking everything he could from Johnson -- memories, knowledge and yes, his life essence. Suddenly, Johnson's now-emaciated body was wrapped in a strange red glow and the man could hear him scream, even after he had disappeared in a brilliant red flash. Johnson's clothes fell to the floor in a heap.\n\nAfter absorbing what Johnson had to offer, the man realized he had a set of new memories, and new knowledge to go with it. He rifled through Johnson's pants and grabbed his wallet and his keys. There was a nice wad of cash in the wallet, along with a couple of cards, which he slipped in his pocket. He looked around what he now knew was called a \"condo.\"\n\nAs he looked, he realized that he knew what every appliance was and how to use it. He also realized there was something called a \"computer\" in Johnson's office. He knew how to use it, and even knew all of Johnson's passwords. He went into Johnson's bank account and saw he had over $100,000 sitting there. Damn, he thought. These people are fucking RICH! He looked at the credit card in his pocket. Time to celebrate, he thought to himself.\n\nHe looked at himself in the mirror and noticed that his body was solidifying quickly now. Out of curiosity, he lowered his jeans and saw that his manhood was also completely formed. It was also huge, just as his benefactor promised. Flaccid, it had to be at least eight inches long.\n\nDigging deeper in Johnson's memories, he noticed something else. The man liked to watch naked women on his computer. He went to one of the websites in Johnson's memories and was shocked at all the choices available to him. His enlarged penis grew painfully hard as he watched several movies. It seemed these women were willing to do just about anything, anywhere, he thought. Yes, it's time to celebrate, he thought.\n\nHe left the condo and went to the garage, where he saw Johnson's car, something called a \"Camaro.\" Using his new-found knowledge, he opened the door and slid inside. He got the car started and managed to back it out without destroying anything. He found rather quickly that having the knowledge to drive this thing and actually doing it were two different things. Everything felt so strange, and he hadn't quite developed the coordination required to operate something like this.\n\nAfter a few abortive starts and some test runs in the parking lot, he finally figured out how to make the thing work and headed for The Joint.\n\n...\n\nI went to the door and looked through the peephole to see who had knocked. It was my Grandpa Elijah, so I opened the door and invited him inside.\n\n\"You don't have to knock,\" I said. \"My house is your house.\"\n\n\"I know, just like to be polite,\" he said. \"Thought I might come by and spend some time with my two favorite grandkids,\" he added, looking at the two youngsters.\n\n\"Wait a minute,\" I said, smiling. \"I thought I was your favorite.\"\n\n\"You are, but they're my favorite great-great-great-great-great-great-great-great-great grandkids,\" he said, ticking off the nine \"greats\" with his fingers.\n\n\"Well, that's different,\" I said, laughing. He played with the kids until they were about to drop from exhaustion, then helped me put them to bed. They fell asleep the second their heads hit the pillow. Grandpa smiled and kissed them on the forehead, telling them he loved them. We went back downstairs, grabbed a beer and went out back for a smoke.\n\n\"I hear Danni's in Hard Rock,\" he said, taking a drag off his cigarette.\n\n\"Yeah, she's doing something for the governor's historical site commission,\" I said. \"Didn't you used to live there once upon a time?\"\n\n\"Yeah, once, a long time ago,\" Eli said. \"How long is she planning to be there?\"\n\n\"Maybe a couple days, I don't know. Why?\" I asked.\n\n\"Oh, just wondering,\" he said.\n\n\"C'mon, Grandpa, there's more to it than that, isn't there?\" I asked, concerned.\n\n\"'Fraid so, son,\" he said. \"We may have a problem there.\"\n\n\"Well, she did say she thinks the place she's checking out was the house you used to live in,\" I said. \"Does it have something to do with that?\"\n\n\"It could,\" Grandpa said. \"Let me tell ya a little story. I think it was in 1855. There wasn't much to Hard Rock back in those days. We lived about seven miles outside town. Took the better part of the day just to go in, stock up and get back home. I was out tending to the herd one day. A piece of crap named Jack Abercrombie came by with two of his boys. They'd been pressuring my folks to sell the place. Jack was what the southerners would later call a carpetbagger. Came from New York with delusions of power and thought he could buy everyone out.\n\n\"He did manage to swindle a few people out of their homes, but after a while folks started standing up to him. So he upped the ante. That day, he came and threatened my folks. Pa told him to go to hell. He left, but then he saw Lizzy out in the garden. His boys grabbed her. She screamed when they took her and my younger brother William ran out to stop them.\n\n\"They shot him in the leg and took off. Bullet went clean through him. He never walked right after that. Anyway, I heard the shot and came running. By the time I got there, Travis and my parents had gotten Bill back into the house and were tending to his wound. I saddled up, jumped on my horse and took off after 'em. I followed their tracks and realized they were heading to town.\n\n\"They already had a pretty good head start on me, maybe an hour, but I had a pretty good idea where they were going. I figured they'd head for the saloon, and sure enough, that's where they were. I went in and saw my dear sweet Lizzy, tied up and dressed like a damn dancing girl. Jack said she was going to be their entertainment.\n\n\"I lost it. I pulled my pistol and shot them fellers, just like you did with that Roscoe guy and his two thugs, remember?\" I remembered all too well.\n\n\"Yeah, I remember,\" I said.\n\n\"I'll never forget it,\" Grandpa said. \"He was laying on the floor, bleeding. Blood was coming out of his mouth and his chest. He looked up and me and said it wasn't over. Said he'd crawl up out of the pit of Hell and damnation itself to get back at me. Of course, I didn't believe him at the time.\n\n\"That was the first time I ever killed a man. I'll never forget it. I felt like I had no choice, though. They had my wife and woulda done God-knows-what to her if I hadn't stepped in and done something,\" he said. \"Little did I know that five years later, I'd be fighting a war.\"\n\n\"And you think this Jack fella has actually come back?\" I asked. He nodded his head.\n\n\"I think so,\" he said. \"I never woulda believed it was possible, but I've seen way too much since then. Believe me, son, anything's possible.\"\n\n\"I know that,\" I said. \"But how could he have done that? Couldn't you have been warned? Couldn't they let you know? I've seen it happen before, right here.\"\n\n\"Well, son, ya gotta remember there's two sides in the grand scheme of things,\" Grandpa said. \"And I've made quite a few enemies doing what I do. Some of 'em are pretty eager to get back at me. I reckon there's a lot of old scores to settle. And you have to remember there's a whole different set of rules at play here, what you might call dynamics. It's too complicated to get into right now.\"\n\n\"So, what are ya gonna do?\" I asked.\n\n\"I need to get to Hard Rock,\" he said. \"Take a look around, see what I can see. I've met the sheriff there and he seems like a good fella. I'll need to talk to him.\"\n\n\"Maybe I should go with you,\" I said. \"Especially if Danni's in danger.\" He shook his head.\n\n\"No, son,\" he said. \"The best thing you can do is stay here and look out for yer young'uns. Believe me, if what I think happened has happened, there's nothing you or yer Winchester can do. I gotta take care of this myself.\"\n\n\"Maybe I should call Danni and let her know,\" I said.\n\n\"That might be wise, son,\" he said. \"Careful what you tell her, though. I want her to keep an eye out, but I don't want her jumping at shadows. It may be nothing, but then again...\"\n\n\"True,\" I said. \"Plus, she's with that Sheriff Caldwell.\"\n\n\"That's even better,\" Grandpa said. \"Besides, I don't think anything will happen tonight. Maybe I can speak to both of 'em at the same time.\" We finished our beer and our smokes and stood up. \"Don't worry, son,\" he said. \"I'll look after Danni.\"\n\n\"Thanks, Grandpa,\" I said. He looked at me for a minute and gave me a manly hug before he left. I sat back down and looked at the time. I knew Danni would probably be asleep, so I sent a text message asking her to call me first thing in the morning before she did anything else. I checked on the kids and headed to bed.\n\n...\n\nJack Abercrombie, or rather, the reconstituted creature known as Jack Abercrombie, sat at his table in the restaurant of The Joint, enjoying his T-bone steak. It melted in his mouth and he savored every bite. The cold beer he had with it was also good, much better than the swill Jake used to serve in the old tavern. And he didn't even need to suck on a piece of hard mint candy.\n\nWhen he finished his meal, he paid the bill, shocked at how much they charged, and headed into the bar. The area was packed with people, drinking, dancing and having a generally good time. He ogled the women and took note of their skimpy attire.\n\nThe place also had a small stage where three women were dancing topless. All they wore were tiny strings around their waists with a bit of cloth that barely covered their crotches. Things sure have changed over the last 165 years, he thought to himself. He sidled up to the bar and took a seat.\n\n\"What'll you have?\" a young bartender asked.\n\n\"Whiskey,\" Jack said. The young man looked at him for a minute before saying anything.\n\n\"Uh, what kind of whiskey?\" he asked.\n\n\"What do you mean?\" Jack asked in response.\n\n\"We have all of the most popular brands,\" the bartender said. \"Take your pick.\"\n\n\"I don't know,\" Jack said. \"What do you like?\"\n\n\"I like 'em all,\" the youngster said. \"But my personal favorite is Maker's Mark. Would you like to try that?\"\n\n\"Uh, yeah, sure, I reckon,\" Jack said. The bartender poured some into a small shot glass and placed it on the bar in front of Jack.\n\n\"That'll be $5.50, please,\" the bartender said. Jack was stunned. Five and a half bucks for a tiny shot of whiskey? The last time he bought a shot in Jake's bar, he only paid 12 cents. No wonder people were so rich these days, he thought. They had to be if they wanted to buy anything. He pulled out $6.00 and placed it on the bar.\n\n\"Keep the change,\" Jack said. \"How much for the whole bottle?\"\n\n\"Sorry, pal, we don't sell by the bottle,\" the bartender said. \"Shots and mixed drinks only. A mixed drink will cost ya $8.50. If you want a bottle, you'll have to go to the liquor store, and they usually charge about $35.00 or so, depending on what you get.\"\n\n\"Okay,\" Jack said, disgusted. He couldn't believe what he just heard. He took a tiny sip of his whiskey and felt the familiar burn. He had to admit, this stuff had a much different flavor and was much smoother than the rotgut Jake used to pour.\n\nHe looked to his right just as a very attractive brunette in the skimpiest dress he had ever seen walked up to the bar, a few feet from him. He checked her out from top to bottom. Her hair was long and wavy and the top of her dress was little more than two pieces of cloth that came up over her breasts and joined at the back of her neck, exposing her cleavage almost to her navel. Her back was completely bare and it was obvious she wasn't wearing a bra. The bottom of the dress fell a couple inches below her ass and was slit up one side almost to her waist.\n\nShe looked at him and smiled as she checked him out. He was surprised at the way she openly stared at the bulge in his crotch.\n\n\"Hello there, cowboy,\" she said in a sultry voice.\n\n\"Well hello there yourself, pretty lady,\" he responded. He wondered what guys said these days when they wanted to pick up a woman. He searched through Johnson's memories and recalled some of the videos he watched earlier. \"Say, you wanna... fuck?\" he asked. She laughed, her face blushing at his candor.",
        "\"Short, sweet and to the point, huh?\" she asked, facing him directly. \"I can appreciate that. As a matter of fact, yes, I wanna fuck. But not after a line like that. You want a piece of this ass, cowboy, you're gonna have to do a lot better than that. Here, let me give you something to think about.\"\n\nAs he watched, she pulled her tiny panties down over her legs. Pulling them off her feet, she held them to his nose. He could smell her arousal on them and took them out of her hand.\n\n\"Think about it, cowboy,\" she said. \"But don't wait too long.\" She smiled, took her drink off the bar and turned away, flipping the back of her skirt up so he could see her bare ass. Damn, he thought to himself. He watched as she went to a table where she began talking to a couple other women. They glanced his way and he saw they were smiling. He turned back and saw the bartender looking at him.\n\n\"What's her story?\" Jack asked.\n\n\"Her husband travels a lot,\" the bartender said. \"She comes in here when he's gone, trolls the place looking for a bit of strange.\"\n\n\"Strange what?\" Jack asked. The bartender chuckled and shook his head.\n\n\"You from a different planet or something?\" he asked. \"Strange dick. You know, something on the side.\"\n\n\"Oh,\" Jack said.\n\n\"Let me give ya a little piece of advise, pal,\" the bartender said. \"This is probably the best place in the world to get laid tonight, what with the convention in town and all. But if you really wanna score, you're gonna have to up your game a bit. Use a little finesse. Know what I mean?\"\n\n\"Reckon so,\" Jack said, realizing that Johnson probably wasn't the sharpest tool in the box. The bartender walked off to take care of another customer. Jack took a sip of his drink and turned back around. The woman was still at her table, talking to her friends. He quickly finished his drink and set the shot glass back on the bar, then walked over to the woman's table. She looked up as he approached.\n\n\"Excuse me, miss,\" he said. \"I'm sorry if I came on a bit too strong. It's been a while since I've frequented establishments like this. My name's Jack, by the way,\" he added, extending his hand. She smiled and held her hand out. He accepted it, lightly kissing the back of her hand, causing her smile to widen.\n\n\"Well, Jack, apology accepted,\" she said. \"My name is Stephanie. This is Nadine and Linda.\" Jack nodded and tipped his hat.\n\n\"A pleasure to meet you ladies,\" he told them before turning back to Stephanie. \"Would you care to dance?\"\n\n\"Of course I would,\" she said, standing.\n\n\"It's been a while since I've danced with a lovely lady such as yourself, so I may be a bit rusty,\" he said.\n\n\"No problem,\" she said. \"Just follow me.\" He followed her onto the dance floor and did his best to emulate her moves. He finally decided to let her make her moves while he simply copied what he saw some of the other guys doing. Eventually, she was rubbing herself against him and he could feel his enhanced manhood begin to respond. It helped that he could see her nipples poking through the material of her dress and the shaved junction between her legs.\n\n\"What is this monster you're packing?\" she whispered in his ear as she brushed her hand over his crotch. \"Is this all for real?\"\n\n\"Yes, ma'am, it's all real,\" he said.\n\n\"I gotta see this,\" she said with a sultry smile. \"Wanna come see my bedroom?\"\n\n\"Sure,\" Jack said. They walked back to her table where she told her friends she was leaving and had already gotten a lift home. She grabbed her purse and the two of them walked out of the club. Looking back, Jack saw the bartender give him a thumbs-up. He returned the gesture.\n\n\"You're gonna have to give me directions,\" he said after they got in the car. \"I'm fairly new in town.\"\n\n\"No problem,\" she said. He followed her directions and found that he had gotten used to driving this \"Camaro\" enough that no one honked their horn or yelled at him the way they did earlier. It wasn't easy to do, given that Stephanie had opened her dress, revealing her naked body in the seat. One hand rubbed a breast as the other worked between her legs.\n\nWhen they got to her house, she jumped out of the car, her open dress flying around her body. He got out of the car, his jeans stretched from his growing cock. He followed her upstairs into the bedroom she shared with her husband. She tossed her dress on the floor and kicked her shoes off. He took his clothes off as fast as he could.\n\nHe marveled at her naked body, having never seen a shaved pussy in real life. He found it highly erotic and his huge erect cock jutted out in front of him. Stephanie gazed at it before taking it in her hands.\n\n\"I gotta have this,\" she said as she tried to fit it into her mouth. She was barely able to get much more than the head inside her mouth, so she simply licked the length of it, moaning with delight. \"How big is this thing?\" she asked.\n\n\"I don't know,\" Jack said. \"Never measured it.\"\n\n\"It must be at least 10 inches,\" she said. \"I've never seen one this big. It's certainly a lot bigger than my husband's. C'mon, let's do it. Fuck me in my marital bed. Don't worry about my husband. He's out of town and won't be back for a couple days. He'll never know, anyway.\"\n\nHe climbed on the bed with her and was soon buried to his balls in the hottest, wettest pussy he had ever experienced. 165 years of pent-up sexual frustration overwhelmed him as he began working into her. As he drove deeper, she cried and moaned in ecstasy.\n\n\"Oh yes, fuck me,\" she moaned as he pumped into her. \"Keep fucking my married pussy.\" She tossed her head from side to side, crying out as he fucked her. He found that not only was he much larger and more virile than ever before, but his mind had been infused with numerous sexual techniques from the ages. He used those techniques to prolong his pleasure, and hers.\n\nHer constant stream of dirty talk kept him aroused and wanting more. Additionally, he got a perverse sense of pleasure from the fact that he was fucking this beautiful woman in the very same bed she shared with her husband.\n\nHe wanted to take her every way he could, and he did. By the time it was over, several hours later, he had filled her womb with several large loads of his very potent seed and she was nothing more than a quivering pile of naked female flesh, having experienced a number of toe-curling wet orgasms.\n\nHis now flaccid cock dropped out of her gaping pussy, and he could see a veritable river of semen pouring out and into the crack of her ass. He knew that she was now ruined for her husband forever and he wondered if the poor sap would ever feel the inside of her now very-well fucked pussy. He laughed to himself when he thought about it. He didn't even care if he got her pregnant. He would be long gone and her husband would be stuck with the kid -- and the bills.\n\nHe laid down next to her and watched as she got on her knees, licking their combined juices off his cock.\n\n\"This tastes so fucking good,\" she said. \"I swear, this thing is bigger soft than my husband's is hard.\" She straddled him, sliding her wet pussy along the length of his cock. \"Maybe I ought to have you come over and show my husband how to fuck. Would you like that?\" He smiled at the thought of cuckolding the puny mortal in person.\n\n\"That sounds delightful,\" he said.\n\n\"Maybe I'll have him clean me out with his tongue after you cum inside me,\" she said. They both laughed at that. Eventually, she fell back on the bed next to him, drained. \"I'm so tired,\" she whispered. \"You literally fucked my brains out, Jack. I swear, I've never been fucked so damn good in my whole life.\"\n\n\"I'm glad you enjoyed yourself,\" he said.\n\n\"Oh yes, I did,\" she murmured as she drifted off to sleep. He didn't need sleep, but he liked the way her bed felt, so he laid there with her and closed his eyes. As good as this was, he knew that he had to stay focused on the job he had been sent to do. According to his benefactor, the wife of Eli's descendant was supposed to be in town, looking over the old Jones place. He knew that in order to get Eli, he had to first get her. But how?\n\nEventually, his mind drifted off. The next thing he knew, it was getting light outside, and Stephanie was on her knees over his cock, trying her best to fit it all into her mouth. He savored her warm wet mouth as she licked and sucked. Finally, she got on top of him and impaled herself on his fully-erect penis. He looked down and could see her juices covering him as she lifted herself up. He watched as her gaping pussy went up and down on him.\n\nHe bucked up and down as she rode him, her head back, her eyes closed. Her nasty talk egged him on even further. Finally, he erupted inside her yet again and he could see some of his thick semen coating his cock as she raised herself up. As she climbed off, he saw globs of cum dripping out of her gaping pussy. She got on her knees and eagerly cleaned him with her tongue, swallowing everything she could.\n\n\"Good morning,\" she said when she finally finished.\n\n\"Good morning yourself,\" he said. She got up and went into her bathroom. She came out a bit later, wearing a short robe.\n\n\"Care for some breakfast?\" she asked. What the hell, he thought. I fucked a man's wife and now I'm going to eat his food, he said to himself.\n\n\"Sounds wonderful,\" he said. After doing his business, he dressed and went downstairs where she was preparing bacon and eggs. Ahh, the smell of bacon, he thought. Thankfully, some things never change.\n\n\"So, what's on your agenda for the day?\" Stephanie asked as they ate.\n\n\"I have some work I need to get done today,\" he said.\n\n\"Oh,\" she said. \"Will you be coming back by tonight?\"\n\n\"You want me to?\" he asked.\n\n\"I'd like it if you could,\" she said. \"I'm still tingling from last night and this morning.\" He smiled at that.\n\n\"Let me see how things go today,\" he said. After they finished eating, he helped clear the table, took his leave and headed for the door. She called out to him before he left.\n\n\"I hope last night wasn't a one-time thing,\" she said. \"I really enjoyed it.\"\n\n\"I'm glad,\" he said. \"I enjoyed it as well. Haven't felt that good in ages.\"\n\n\"Feel free to come by any time,\" she said. \"And I do mean ANY time. If I'm not here, I'll probably be at the club.\"\n\n\"I'll remember that,\" he said before leaving. As he went to his car, Stephanie slipped a hand under her robe and gently stroked herself. There was something different about this guy, but she couldn't quite place it. Still, she found herself missing him already. It had been years since she felt like this about any man, even her husband. God, I hope Jack comes back, she thought.\n\n...\n\nI woke up a few minutes before my alarm went off. That wasn't unusual when Danni wasn't around. I rolled over and turned the clock off before getting up. I did my morning routine and got dressed. Suddenly my phone rang. Seeing it was Danni, I answered.\n\n\"Good morning, sunshine,\" I said. \"About time you woke up.\"\n\n\"Ha ha,\" she said. \"Good morning to you as well. What's going on? You said you wanted me to call first thing, so that's what I did.\"\n\n\"Grandpa came by last night,\" I said.\n\n\"Oh?\" she asked. \"What did he want? Besides playing with the kids?\" I told her what Grandpa relayed to me. When I finished, I waited for Danni to respond. \"Are you there?\" I asked.\n\n\"Yeah, I'm here,\" she said. \"Sorry, I was just thinking about what you told me. So, he's coming here? To Hard Rock? And he thinks I may be in danger?\"\n\n\"Yes, yes and I don't know,\" I told her. \"He's on his way there, or is probably already there. And we don't know if you're in danger or not. The bottom line is that you need to be extra careful. I want you to stick as close as you can to either Grandpa or Sheriff Caldwell.\"\n\n\"Well, some of my work involves research at the public library,\" she said. \"I can't expect them to watch over me every minute of the day. Besides, I'm a big girl and I can handle myself just fine, thank you very much.\"\n\n\"I know, but I'm concerned about you. I almost lost you once before and I don't want to go through that again. Maybe the sheriff can assign a deputy or something to keep an eye on you,\" I said. \"You remember that code we set up after the incident in Mexico?\" After she and the kids were kidnapped and taken to Mexico by Enrique Castillo's goons, we came up with a \"911\" phone code she could send if she was in trouble. We had practiced it many times until she got to the point that she could surreptitiously send it with one hand.\n\n\"Yeah,\" she said.\n\n\"Use that if need be,\" I said. \"We still have the phone finder app set up so I can at least track where your phone is and can report that to the sheriff. Will you do that?\"\n\n\"Okay, Amos,\" she said. \"I will. And I'll tell Grandpa when he gets here.\"\n\n\"Good,\" I said. \"I think I'll take the kids and head over to your folks' place after I tend to the horses. There's safety in numbers and I think the kids would like to spend the day with their grandparents anyway.\"\n\n\"That's a good idea,\" she said.\n\n\"Alright, well, I'd better get the kids' breakfast going,\" I said. \"I'll text you when I get to your parents' house. Do me a another favor and text me so I know where you are and where you're heading. That way, I'll have an idea of what's going on just in case I need to get in contact with the sheriff.\"\n\n\"I will,\" she said. Danni is a smart woman and I know she can handle herself, but I wanted to cover all our bases. We ended the call, expressing our love for each other as we always did. I headed downstairs to start breakfast. I knew they would be up soon, eager to watch their Saturday morning cartoons. I figured I would take care of the horses while they watched television, then take them over to see their Grandpa Bill and Grandma Kate.\n\n\"Come and get it!!\" I yelled as I finished the bacon and eggs.\n\n...\n\nAfter ending the call, Danni climbed out of bed, put on a robe, then grabbed her things and went into the upstairs bathroom to shower and dress. Ryan and Beverly were already up and Danni could smell breakfast cooking downstairs.\n\n\"Good morning,\" Beverly said as Danni came downstairs. \"Care for some coffee?\"\n\n\"Coffee would be terrific right about now, thanks,\" she said.\n\n\"I hope we didn't wake you up this morning,\" Bev said. \"I'm always up early to tend to the chickens and Ryan comes with me most days. We've got a young couple that live in my old house now and they take care of the chickens in the mornings, but I usually go over anyway. They're my babies, I guess and I reckon old habits are just hard to break.\"\n\n\"I understand that,\" Danni said. \"I grew up on a ranch and my husband and I have a couple horses, so I know all about getting up early.\"\n\n\"I'll bet you do,\" she said. \"That can be hard work.\"\n\n\"It can,\" Danni said. \"But it can also be a lot of fun. So, how many chickens do you have?\"\n\n\"Well, we just increased our flock, so we're now up to 150 hens,\" Beverly said.\n\n\"Wow,\" Danni said. \"That's a lot of chickens. You sell the eggs?\"\n\n\"Sure do,\" Beverly told her. \"I've been doing it for years. At first it was just a way to bring in a little extra money, but lately, it's turned into a real business, thanks to Ryan. I even had to lease a truck and the guy who lives in my old house makes deliveries every day.\"\n\n\"She's done a real good job with that little venture of hers,\" Ryan said. \"Mighty proud of her, by the way.\" Beverly smiled as he said that. They sat down and ate a hearty breakfast as they discussed the day's agenda.\n\n\"So you wanna head back over to see those two paranormal investigators?\" Ryan asked.\n\n\"Yes,\" Danni said. \"My husband sent me a copy of his grandmother's journals and scanned in some old photos.\"\n\n\"You think there's anything to what those girls found out there?\" Ryan asked.\n\n\"I don't know,\" Danni said. \"I've seen a lot of strange things in my life that I can't explain. Once I'm done there, I'd like to go to the library. Is it open on Saturdays?\"\n\n\"Yes, it is,\" Ryan said. Just then, his phone rang. He looked at it to see who was calling, then answered. \"Sheriff Caldwell,\" he said.\n\n\"Sheriff, this is Sergeant Meyers,\" the woman on the other end said.\n\n\"Yes, Rhonda, what can I do for you?\" Ryan asked. Rhonda Meyers was the weekend desk sergeant and she rarely called, so Ryan knew this had to be important.\n\n\"Sheriff, there's a Texas Ranger here looking for you,\" she said. Ryan had a feeling he knew who it was.\n\n\"This Ranger, does he look like something that just stepped out of an old movie?\" Ryan asked.\n\n\"As a matter of fact, yes,\" Rhonda said. \"Should I have him come out to your place?\" Ryan thought for a moment before answering.\n\n\"Sure, Rhonda, have him do that,\" Ryan said.\n\n\"Okay, I will,\" she said. He heard her cover the mouthpiece as she spoke to the Ranger. After a few moments, she came back on. \"He says he knows where you live, and he'll be out directly. He's on horseback, by the way.\"\n\n\"Horseback?\" Ryan asked. \"Well, I guess he won't be here for a couple hours yet. Thanks, Rhonda.\"\n\n\"No problem, Sheriff,\" she said. \"Talk to you later.\" Ryan ended the call and looked at Danni before speaking.\n\n\"Got a visitor heading out,\" he said. \"He's on horseback, so it'll be a while before he gets here.\" Just then, they all heard the sound of a galloping horse coming to a stop in front of the house. \"What the hell?\" Ryan asked as he went to the front door. Danni followed him onto the front porch.\n\nThey saw the tall man climb off the horse and wrap the reins around a decorative hitching post Beverly had Ryan install by the front fence. He came through the front gate and approached Ryan and Danni.\n\n\"How the hell did you get here so fast?\" Ryan asked. \"Didn't you just leave my office?\"\n\n\"It's a Ranger thing as my grandson might say, Sheriff,\" Eli said as he extended a hand. \"Good to see you again.\" Ryan shook his hand and introduced him to Danni, not knowing the man already knew her.\n\n\"Please have a seat, Ranger,\" Ryan said as they stood on the porch. \"Mind if I smoke?\"\n\n\"Not at all, Sheriff,\" Eli said. \"Mind if I join ya?\"\n\n\"Help yerself,\" Ryan said. \"Care for something to drink? Tea? Coffee?\"\n\n\"Coffee sounds good, thank ye,\" Eli said. Ryan looked at Danni and nodded his head. She got the message and went inside, coming back out with two cups of coffee.\n\n\"You know, I did some checking the last time you were out,\" Ryan said. \"I found no reference to a 'Justice O. Peace' anywhere. You do know it's illegal to impersonate an officer of the law.\" Eli nodded his head.\n\n\"Interesting you should mention the law, Sheriff,\" Eli said quietly. Ryan looked at Danni before responding.\n\n\"Maybe you should go inside, Mrs. Jones,\" he told her. Eli waved his hand.\n\n\"No need,\" he said. \"What needs to be said can be said in front of her. I have no secrets from my grandson's wife.\"\n\n\"You know this man?\" Ryan asked Danni, surprised.\n\n\"Yes, I do, Sheriff,\" she said. \"And I suggest you listen to what he has to say.\" Ryan nodded his head.\n\n\"Were you thinking about the law when you, your son-in-law, your wife and a small group of mercenaries went into New Mexico to rescue your daughter and grandson?\" Eli asked. \"Were you thinking of the law when you took out Elmer Jenkins? You were going to do the same to Jacob Knight in that restroom, but he had the gall to die before you could do anything.\" Ryan's one good eye went wide.\n\n\"How do you know about that?\" he asked.\n\n\"It's my job to know,\" Eli said. \"I know all about you. I know what you did for nine years after your first wife left you. I also know what you did for that woman in there,\" he added, nodding his head toward the house.\n\n\"The FBI report said,\" Ryan began.\n\n\"I know what the FBI report says, Sheriff,\" Eli said, cutting him off. \"Do you remember that chapel you went into the day you left Central City? Do you remember what you prayed for?\"",
        "\"Yes, I do,\" Ryan said.\n\n\"Probably the best 30 minutes you ever spent on yer knees,\" Eli said. \"You asked for forgiveness. And you got it. Without reservation. And you'll be happy to know that Dawson is doing quite well.\" Ryan looked at him, shocked. Dawson was a comrade who gave his life saving the rest of the team. Eli smiled.\n\n\"Personally, I don't blame you for what you did,\" Eli said. \"Them fellers deserved what they got, if you ask me. Oh, and for the record, I was a Texas Ranger. Once. A long time ago. Served under a different name. I still serve, in my own way. And I now work for a much higher authority. Just so you know, I have no quarrel with you. None whatsoever. You remember that day I first met you? Remember what I said?\"\n\n\"Something about charging the gates of Hell with a bucket of water,\" Ryan said. Eli nodded his head.\n\n\"That's right, son,\" he said. \"I think that day may be coming sooner than you think.\" Ryan looked at Eli, wondering what he meant.\n\n\"What can I do for you, then?\" he asked. Eli smiled and held out his hand.\n\n\"You can start by calling me Eli,\" he said. \"All my friends do.\" Ryan looked at the outstretched hand and took it. After a hearty handshake, Eli continued.\n\n\"Tell me, Sheriff, what do you know about a feller named Irwin Johnson?\" he asked. Ryan shook his head.\n\n\"Name doesn't ring a bell,\" he said. \"Why?\"\n\n\"Not surprised,\" Eli said. \"Fairly new to town. He's gone missing.\"\n\n\"Oh?\" Ryan asked. \"I don't recall any report of a missing person. Even so, we typically don't do anything about missing person reports for at least 24 hours. Do you suspect foul play?\"\n\n\"The most foul,\" Eli said. He pulled a piece of paper out of a pocket and handed it to Ryan. \"This is where he lives. You might want to check the place out.\" Ryan looked at the address and recognized it instantly. It was the new condominium complex just north of downtown.\n\n\"You think his disappearance is related to something you're working on?\" Ryan asked.\n\n\"I do,\" Eli said. Ryan thought for a moment before responding.\n\n\"Okay, Eli,\" he said. \"Tell you what I'll do. I'll get a search warrant together and dispatch a team to check this place out. Will that help?\"\n\n\"It will,\" Eli said. \"In the meantime, I'll go with Danni to see those paranormal investigators.\"\n\n\"You know about that?\" Ryan asked. \"We were just talking about that this morning over breakfast.\"\n\n\"I know,\" Eli said with a smile.\n\n\"Is there anything you don't know, Ranger?\" Ryan asked sarcastically. Eli smiled and nodded his head.\n\n\"A few things,\" he said. He looked up at Danni. \"You about ready to head out, Danni?\"\n\n\"I am, Grandpa,\" she said. Eli turned back to Ryan.\n\n\"Don't worry about my horse,\" he said. \"She's very well trained. I'll be back to get her directly.\"\n\n\"Yeah, okay,\" Ryan said. He watched as Eli and Danni got into her rental car. As they drove off, he wondered what he had gotten himself into. And how DID Eli know so much about him? When they left, he pulled out his phone and called Rhonda.\n\n...\n\nJessica looked out the window of the RV she shared with April and saw the woman pull up in her rented car. This time, she had a tall man with her who looked like he could've been in an old 1950s western movie. She saw the badge on his red shirt and the two pistols on his hips.\n\n\"We got company,\" she shouted out to April, who was in the back of the RV getting dressed. \"That Jones woman and another lawman. Looks like maybe a Texas Ranger or something.\"\n\n\"Texas Ranger?\" April asked. \"Well, let 'em in, let's hear what they have to say.\" Jessica opened the door and greeted their visitors.\n\n\"Please come in,\" she said. \"Danni Jones, right?\"\n\n\"Yes,\" Danni said. \"This is...\"\n\n\"Justice O. Peace,\" Eli said as he extended a hand. Jessica accepted his hand and felt a strange sensation wash over her. Eli noticed it as well and looked at her closely. Was it possible that she was gifted, he asked himself.\n\n\"I'm Jessica,\" she said as she withdrew her hand. \"This is April,\" she added as she eyed Eli cautiously.\n\n\"Ma'am,\" Eli said as he tipped his hat.\n\n\"I have copies of the journals my husband sent me, along with some pictures he scanned,\" Danni said. \"Do you have a way we can transfer this off my phone?\"\n\n\"Sure,\" April said, grabbing a cable. \"May I?\" she asked, her hand out. Danni handed her phone to April and watched as she copied the files to her computer.\n\n\"You say these are copies of the journals your husband's grandmother wrote?\" April asked.\n\n\"Yes,\" Danni said. \"She wrote about their life here, then about the trip back to Indiana. She added quite a bit later on, after her husband was killed in the war. I hope this helps.\"\n\n\"Oh it will,\" April said. \"It'll go a long way toward putting the history of the place in context.\"\n\n\"I'm curious,\" Jessica said. \"Why would the Texas Rangers be interested in an old adobe house out in the middle of nowhere?\"\n\n\"The Rangers aren't,\" Danni said. \"But he is. He's related to my husband. Do you think it might be possible for him to see and hear your evidence?\" April and Jessica looked at each other for a bit.\n\n\"I guess it wouldn't hurt,\" Jessica said. \"Go ahead, April. Show him.\" April handed Eli a set of headphones.\n\n\"You can probably hear better with these,\" she said. \"I'm going to play three pieces of audio we captured in the old house.\" Eli put the headphones on and listened. The first piece of audio was that of a man crying.\n\n\"Pa,\" Eli said quietly, a tear threatening to run down his face. Neither April nor Jessica reacted, but Danni saw his reaction.\n\n\"This is the second piece of audio,\" April said, bringing up the short audio of a woman calling for Eli. Again, Eli's face looked pained as he heard the quiet sound of a woman crying out Eli's name. \"Here's the last piece of audio,\" April said as she brought up the last file. Eli listened as he heard the gunshot.\n\n\"Can you play that again, please?\" he asked. April started the file again. After he listened, he took the headphones off. \"Did you hear that moan after the shot?\" he asked. Both girls shook their heads.\n\n\"No, we didn't hear that,\" April said.\n\n\"You say you have video?\" Eli asked.\n\n\"Yes, we do,\" April said. \"We still haven't been able to make heads or tails of it.\" She turned her computer around and played the video, then played it again at a slower speed. Eli watched closely, his face taking on an expression Danni had never seen before. It was almost as if he was... afraid.\n\n\"You say you have no idea what this is?\" he asked.\n\n\"No, none,\" April said. Eli nodded his head slowly. He knew what it was, and he also knew where it came from. But he had no way of tracking the thing and he couldn't sense Jack's presence.\n\n\"I've seen your face before,\" Jessica said, causing Eli to look at her.\n\n\"Oh?\" he asked. \"Where?\"\n\n\"Here,\" she said, grabbing a stack of printed photos. She shuffled through them until she found what she was looking for. She put the picture on the table next to Eli. It showed a man in the uniform of a Union soldier. He had sergeant's chevrons on his arms. \"The resemblance is rather uncanny, wouldn't you say?\" she asked. Eli looked at the photo and nodded his head.\n\n\"Reckon so,\" he said. Jessica moved her chair close to Eli and took his hands in hers. He looked at April, confused.\n\n\"Jessica is what some people might call 'gifted.' She has a way of discovering things about people,\" April said. He looked back at Jessica, who sat with his hands in hers, her eyes closed. After a few moments, she opened her eyes and looked at Eli, surprised. She felt his wrist as if checking for a pulse. Then she leaned down and listened to his chest. She put her hands on his chest for a moment, then jumped back, her eyes wide.\n\n\"What's wrong, Jessica?\" April asked.\n\n\"It's him,\" Jessica exclaimed. \"The man in the picture. He has no heartbeat and I can't read anything from him. Plus he has a deep hole in his chest. You're him, aren't you?\" she asked. Eli looked at Danni for a moment before responding.\n\n\"Yes,\" he said quietly, causing April and Jessica to gasp.\n\n\"How is this possible?\" Jessica asked.\n\n\"What was it the Bard once wrote?\" Eli asked. \"Oh yeah, 'There are more things in heaven and earth, Horatio,Than are dreamt of in your philosophy.' He was right, you know. Trust me, there are some things you aren't meant to know.\"\n\n\"You know Shakespeare?\" Jessica asked.\n\n\"Personally,\" Eli said. \"He's a pretty decent fella once you get to know him. Years ahead of his time.\"\n\n\"Can you explain the evidence we showed you?\" April asked.\n\n\"Yes,\" Eli said.\n\n\"Can you tell us?\" Jessica asked. \"Please?\"\n\n\"Ordinarily, no,\" Eli said. \"But it seems that you've already surmised more than you should really know. So I'll make an exception in this case. The woman you heard was my mother. I appeared to her some time after my father's death. It wasn't easy for me to do at the time, but I wanted to let her know I was in good hands.\"\n\n\"And the man was your father?\" April asked. Eli nodded his head.\n\n\"Yes,\" Eli said. \"That happened when he learned of Travis' death at the hands of his Union guards. You see, Pa lost two sons in that damn war. One to a Confederate bullet, and the other to mistreatment at the hands of Union soldiers. He cursed God for that, and did so even on his deathbed.\"\n\n\"Oh my God,\" April said. Eli nodded his head.\n\n\"So, what about the gunshot?\" Jessica asked.\n\n\"I believe that's the shot that crippled my younger brother William,\" Eli said. \"If you listen closely, you can hear him moan after the shot.\"\n\n\"What about the video?\" April asked. \"Can you explain that?\"\n\n\"I believe so,\" Eli said. \"Let me tell you a little story first.\" He recalled the incident from 1855 in which he killed Jack and his thugs and saved Lizzy.\n\n\"So you think that thing we saw was Jack Abercrombie crawling out of Hell?\" April asked, incredulous.\n\n\"Not the Jack Abercrombie who once walked on this earth,\" Eli said. \"At least not the exact same one. It's difficult to explain. He's not the same as before. He may look the same, sound the same, even have the same memories, but he's been changed somehow. That's why I can't sense his presence the same way I can sense the presence of others, like you or Danni.\"\n\n\"And you think he's come back to settle an old score or something?\" Jessica asked.\n\n\"That, and possibly more,\" Eli said.\n\n\"But why would he come up on your old property like that?\" April asked.\n\n\"That was the location of the original well we dug,\" Eli said. \"Pa filled it back in after an old Apache medicine man told him the well could be used by unholy things as an entry point into this world. Pa wasn't a very religious man, but he respected the Apache people. We filled in the well and dug another where the medicine man said it was safe to do so. After we did that, the medicine man cleansed the property and said we would be safe from the unholy things as long as we lived there.\"\n\n\"Wow,\" Jessica said. Eli smiled.\n\n\"Indeed,\" he said. He looked at Danni and stood up. \"I hope this helps you fill in some of the blanks.\"\n\n\"It does,\" April said. \"Thank you for telling us.\"\n\n\"You must never repeat a word of what I've told you,\" he said. \"To anyone. You already know far more than you should and you're dealing with forces you cannot possibly begin to understand. Take my advice. Do what you came here to do, then move on and forget you ever met me.\"\n\n\"Will we ever see you again?\" Jessica asked.\n\n\"If you need me, I'll be there,\" he said. Standing up, he turned to Danni. \"I think our business here is finished.\" Danni picked up her phone and turned to April.\n\n\"I hope the journals and pictures help,\" she said. \"You have my number if you need anything more.\"\n\n\"Thank you, Mrs. Jones,\" April said. \"It was a pleasure meeting you both.\" The girls watched as Danni and Eli went out to her car and drove off.\n\n...\n\nEli looked at Danni and wondered why she pulled over to the side of the road.\n\n\"What's wrong?\" he asked.\n\n\"There's more to that story you told them, isn't there?\" she asked. He looked out the front window before answering. He slowly nodded his head.\n\n\"Yes,\" he said. \"Would you like to hear it?\"\n\n\"You know I would,\" she said.\n\n\"That day when the medicine man performed the cleansing ritual, he performed a ritual on each one of us,\" Eli said. \"When he came to me, he looked me square in the eye and told me something I've never forgotten.\"\n\n\"What's that?\" Danni asked.\n\n\"He said, and I quote, 'one day the Great Spirit will lift you up to be his instrument of justice.' I didn't understand or think too much of it at the time,\" he said. \"When I joined the Army, I thought maybe that's what he meant. I realized later it wasn't.\"\n\n\"Is that why you call yourself Justice O. Peace?\" she asked.\n\n\"Yeah, it is,\" he said.\n\n\"There's something else, isn't there?\" she asked.\n\n\"Yes,\" he said. \"I'm afraid you may be in danger.\"\n\n\"I've been there before,\" she said. \"But I can't let that stop me from doing my job. And you can't spend all your time babysitting me. I have work to do. And so do you.\"\n\n\"What do you suggest?\" he asked.\n\n\"I'm going to the library to do some research,\" she said. \"I want you to bring Amos out. He'll watch over me while you go after this Jack character.\"\n\n\"Amos needs to watch over the children,\" Eli said.\n\n\"The kids are with my parents,\" she said. \"Between them and the ranch hands, they'll be okay. I want Amos here with me, Grandpa. I'll call the sheriff and have him send a deputy to meet me at the library. I want you to go get Amos and meet us there.\" Eli chuckled as he looked at her.\n\n\"I swear, you're more like my Lizzy than you know,\" he said.\n\n\"Is that a bad thing?\" she asked.\n\n\"Not at all,\" he said. \"Okay, we'll do it yer way. I'll go get Amos and bring him to the library. Promise me you'll call Ryan right away.\"\n\n\"I will, Grandpa,\" she said. He nodded his head and gave her a kiss on the cheek.\n\n\"You stay safe,\" he said. \"Lizzy will tan my hide if anything happens to you.\"\n\n\"I'll be fine,\" she said. He got out of the car and was gone in a flash. She pulled out her phone and called Ryan.\n\n...\n\nRyan looked around Irwin Johnson's condo as the team of investigators took photos and cataloged their evidence. Danni had just called and said she was on her way to the library and wanted to know if he could get a deputy to meet her there. He promised to get someone out and called Rhonda to dispatch someone to the library.\n\n\"Make sure he doesn't let her out of his sight,\" he told Rhonda.\n\n\"Got it, Sheriff,\" she said. When they ended the call, he walked to the center of the front room, where a forensic specialist dressed in tyvek coveralls was studying a shirt and a pair of shoes left in the middle of the floor.\n\n\"What do ya think, Ron?\" Ryan asked. Ron shook his head.\n\n\"Not sure, boss,\" he said.\n\n\"What do you make of that powder on the inside of the shirt and shoes?\" Ryan asked.\n\n\"Hard to tell,\" Ron said. \"I'll have to analyze it back at the lab.\"\n\n\"What does your gut say, Ron?\" Ryan asked.\n\n\"Off the top of my head, I'd say it was ash,\" Ron said. \"The same kind you'd see in a cremation.\"\n\n\"Is there enough there to account for a whole person?\" Ryan asked.\n\n\"Not even close,\" Ron said. \"We've found it spread throughout the condo. It's also inside a pair of jeans laying on the floor in the bedroom. You know what this reminds me of?\"\n\n\"No, what?\" Ryan asked.\n\n\"That War of the Worlds movie, when the aliens hit people with their death ray,\" Ron said. \"The bodies just went, 'poof' and turned into ash.\"\n\n\"So, maybe we should put out an APB for aliens with death rays? Is that what you're telling me, Ron?\" Ryan asked sarcastically.\n\n\"Of course not,\" Ron said. \"I'm just saying that's what this reminds me of.\"\n\n\"Interesting,\" Ryan said. He stood when another deputy came up to him. \"What'd you find out?\"\n\n\"Well, Sheriff,\" the deputy said. \"Police in Albuquerque have a warrant for Johnson. Counterfeiting and false IDs mostly. Low-level stuff.\"\n\n\"That explains the stuff we found on that desk over there,\" Ryan said. \"Any idea who Jackson Abercrombie is? Some of the stuff we found had that name on it.\"\n\n\"No idea, Sheriff,\" the deputy said. \"There's no record of anyone with that name. We did learn something odd though.\"\n\n\"What's that?\" Ryan asked.\n\n\"Well, some of the neighbors say they saw this guy's car pull out late last night. A dark Camaro,\" the deputy said. \"Strange thing though.\"\n\n\"What?\" Ryan asked.\n\n\"They said he drove forward and backward a few times. Almost as if he was just learning to drive or something,\" the deputy said.\n\n\"Well, there can't that many dark Camaros in town,\" Ryan said. \"Put out an APB on that car and anyone named Abercrombie.\"\n\n\"Will do, boss,\" the deputy said.\n\n\"Anything else, Ron?\" Ryan asked.\n\n\"Not much,\" Ron said. \"We've dusted for prints and took his computer to the lab for analysis. Maybe we can get something out of that.\"\n\n\"Okay,\" Ryan said. He looked around the condo some more. He got the impression Eli was holding out on him. He knows something happened here, Ryan thought to himself. But what? \"Call me if you find out anything,\" he said. \"This is top priority.\"\n\n\"Got it, boss,\" Ron said as Ryan walked out of the condo.\n\n...\n\nDanni pulled into the library parking lot and saw a group of deputies standing around as a dark sports car was being pulled onto the back of a flatbed tow truck. She parked her car and headed for the entrance, where she was met by a deputy in uniform.\n\n\"Mrs. Jones?\" the deputy asked.\n\n\"Yes, that's me,\" she said.\n\n\"I'm Deputy Winthrop,\" he said. \"Sheriff Ryan asked that I meet you here. I'm under orders to keep an eye on you while you're here.\"\n\n\"Oh good,\" she said. \"Thank you. I'll be doing some research for a bit, and I'm expecting my husband and a Texas Ranger to come by.\"\n\n\"Yes, ma'am,\" the deputy said. \"I'll try to stay out of your way.\"\n\n\"Thank you,\" she said. They went to the second floor and Deputy Withrop sat on one of the couches as Danni looked through the archives. After about a half-hour, he came to her side.\n\n\"If you'll excuse me for a minute, Mrs. Jones, I need to use the men's room,\" he said.\n\n\"That's fine, deputy,\" she said. \"I'll be right here, and it doesn't look like there's anyone else here at the moment.\"\n\n\"Thank you,\" he said. \"I'll be right back.\" She turned back to her work as he walked off. A minute or so later, she heard footsteps behind her and thinking it was the deputy, she turned.\n\n\"That was fast,\" she said. Then she realized the man who crept up behind her wasn't the deputy. \"Uh, I'm sorry. Is there something I can do for you?\"<br >\n\n\"Matter of fact, there is,\" the man said with a wicked grin. Before she could do or say anything, the man grabbed her, putting one hand over her mouth. She instinctively reached for the phone in her purse and began pressing buttons. Suddenly, she realized she was no longer in the library.\n\n...\n\nI had just returned from Bill and Kate's place, having dropped off the children. As I pulled in front of the house, I saw Grandpa standing at the door. I stopped and got out of the truck.\n\n\"Everything okay, Grandpa?\" I asked.\n\n\"Yeah,\" he said. \"Danni insisted I come get you. Are the kids okay?\"\n\n\"Yeah, they're over at their grandparents house,\" I said, opening the door.\n\n\"Alright, get yer stuff and let's go,\" he told me. \"And don't forget yer badge.\"\n\n\"Got it,\" I said, grabbing it off the counter. I also grabbed the Winchester, just in case. We went outside and before I knew it, we were standing in front of the Hard Rock Municipal Library. Grandpa had a funny look on his face.\n\n\"You smell that?\" he asked, looking around. I sniffed but didn't smell anything.\n\n\"Smell what?\" I asked.\n\n\"Kinda like rotten eggs,\" he said. I sniffed again, but still didn't smell anything.",
        "\"Sorry, I don't smell anything,\" I said.\n\n\"He's been here,\" Grandpa said. Just then, my phone buzzed. I looked and saw it was Danni's \"911\" code. I quickly pulled up the phone finder app and saw her phone was at a remote location outside town.\n\n\"Yeah, and Danni's in trouble,\" I said.\n\n\"She's out at the old homestead,\" Grandpa said. \"Call that Sheriff Ryan and have him get out there.\" I hit the speed dial and got Sheriff Caldwell.\n\n\"Caldwell,\" he said when he answered.\n\n\"Sheriff, this is Amos Jones, Danni Jones' husband,\" I said. \"She's been abducted and is at the old homestead. We'll meet you out there.\"\n\n\"On my way,\" he said before ending the call. I put my phone away and looked at Grandpa.\n\n\"Let's go,\" I said. He nodded his head and the next thing I knew, we were at the old Jones place. I saw a man wearing a fairly new Stetson, holding Danni with one arm around her waist. She was struggling to get away from him, but he was too strong.\n\n\"Eli!\" the man yelled. \"I tol' ya I'd be back. This place shoulda been mine. Yer pa shoulda sold out to me when he could. But no, he had to be stubborn.\"\n\n\"Let the woman go, Jack,\" Grandpa ordered. \"This is between you and me. You don't have any quarrel with these kids.\"\n\n\"I don't think so,\" the man yelled back. \"You know, I think this one's a bit more feisty than yer wife. I think she'll do jes' fine. Maybe I'll take her back with me. I think the boys'll get a real kick outta her. What do ya think?\"\n\n\"I think I'm going to fucking kill you if you don't let her go,\" I said as I started to shoulder the Winchester. Grandpa saw me raise the rifle and put his hand up to stop me.\n\n\"You won't be able to take him, son,\" he said.\n\n\"I gotta do something, Grandpa,\" I said. \"I can't let him take her.\"\n\n\"I know,\" he said. \"I said YOU can't take him. But I know someone who can.\"\n\n\"Who, Grandpa?\" I asked.\n\n\"That would be me,\" said a woman's voice next to me. Startled, I turned to see my Grandma Lizzy. She wore an old-style dress and her body was bathed in a bright aura. She reached out one hand. \"May I?\" she asked with a smile.\n\n\"You want my rifle?\" I asked. She nodded her head. \"But Grandpa said it probably would work against him.\"\n\n\"But I've got the magic bullet right here,\" she said, lifting a bullet from her purse. The sun's reflection off the bullet nearly blinded me. I handed the rifle to her and watched as she loaded the bullet. Cocking the rifle, she turned to Danni and the man holding her.\n\n\"You're not the only one with an old score to settle, Jack,\" she said. She nodded her head and Danni stomped on the man's foot as hard as she could. He let go of her as he screamed in pain. She saw her chance and ran away from him as fast as she could, ending up in my arms.\n\n\"It's time for you to go back to the Hell from whence you came, Jack Abercrombie, never to return again,\" Grandma Lizzy said, shouldering the rifle. She took careful aim and fired one shot. His head exploded as the bullet struck him between the eyes.\n\nAs we watched, his body seemed to melt like the evil witch in the old Wizard of Oz movie. Soon, he was nothing more than a black blob slithering toward the spot where the old well was located. When he got there, he seemed to disappear into the ground in a way that reminded me of something being flushed down the toilet.\n\n\"Remember, Amos, always use the right tool for the job,\" Grandma said as she handed the rifle back to me. \"Are you alright, Danni?\" she asked.\n\n\"I am now,\" she said. \"Thank you.\" Lizzy smiled and wrapped her arms around Danni.\n\n\"You're welcome, my dear,\" she said. \"We Jones women have to look out for one another, you know.\"\n\n\"How did you know I was here?\" Danni asked. Lizzy looked down at Danni's left hand. \"The ring?\" Danni asked. Lizzy smiled and nodded her head.\n\n\"Of course,\" she said. \"You and I have a connection very few can understand.\" She looked around at the old homestead. \"This place sure has changed a lot since the last time I saw it.\"\n\n\"Yes, it has,\" Grandpa said.\n\n\"The state is thinking about turning this into a historical site,\" Danni said. Lizzy nodded her head in approval. \"Are you okay with that?\"\n\n\"Of course, dear,\" she said. \"It's sat empty for far too long. I admit, it was a hard life, but there was a lot of love here.\"\n\n\"But what about the old well?\" Danni asked.\n\n\"I don't think that'll be a problem,\" Grandpa said. We looked and saw the image of an old Native American medicine man next to the well site. We could hear him chanting as he spread something over the ground. He turned to look at us, nodded his head and raised a hand in greeting. Grandpa nodded his head and raised a hand in return and the medicine man disappeared from sight. Just then, we heard a siren coming up the road.\n\n\"I should probably get back,\" Lizzy said. Grandpa gave her a kiss.\n\n\"I'll see you soon, dear,\" he said. She smiled and disappeared from sight. By then, Ryan's truck had made it to the clearing. He stopped and got out of the vehicle.\n\n\"What's going on?\" he asked. \"Is everyone okay?\"\n\n\"We're fine, Sheriff,\" Danni said.\n\n\"The word I got is that you were abducted,\" Ryan said.\n\n\"I was, but everything's been taken care of,\" Danni told him. Ryan looked from Danni to me to Grandpa.\n\n\"I hope you have an explanation for this,\" he said.\n\n\"We do, but I don't think you really want to write it up the way it actually happened,\" Grandpa said. \"Suffice it to say, Abercrombie has been dealt with for good. You won't be seeing him ever again.\"\n\n\"By the way, how's Deputy Winthrop?\" Danni asked.\n\n\"He was found unconscious in the library men's room,\" Ryan said. \"He's okay, though. Said he was hit on the head as soon as he walked in. Never saw who did it, though. You realize I'm going to be buried in paperwork over this little incident?\"\n\n\"That's the way it goes, Sheriff,\" Grandpa said. \"Listen, would you mind giving Danni a lift back to the library? I need to get Ryan home, and then I'll be by to get my horse.\"\n\n\"Okay,\" Ryan said with a heavy sigh. \"C'mon, Mrs. Jones, let me give you a lift back. And I'll expect a full statement from you.\"\n\n\"Whatever you say, Sheriff,\" she said. She turned to me and gave me a deep kiss. \"I love you, sweetheart,\" she said. \"Call me when you get home, okay?\"\n\n\"I will,\" I told her.\n\n...\n\nEpilogue:\n\nDanni gave Sheriff Caldwell a full statement of what happened that day. He had a very hard time believing her, but wrote a carefully-crafted report anyway, calling it an \"unresolved\" case since the perpetrator, namely Jackson Abercrombie, was never found. Ryan was never able to explain the disappearance of Irwin Johnson. The case remains open.\n\nA few weeks later, Stephanie Carmichael discovered she was pregnant. Her husband, George, was ecstatic at first, until he realized that she had gotten pregnant while he was on one of his frequent business trips. He filed for divorce and left the house. A week later, he returned to get some of his things and got the shock of his life when he went into what used to be his master bedroom.\n\nAfter he finished throwing up, he called 911. Stephanie's body looked like something had chewed its way out of her abdomen. Following a trail of bloody prints, they found a tiny disfigured creature with jagged teeth chewing on a gas line. When they smelled gas, they quickly left the house and called the fire department. Before firemen could arrive, however, the house exploded and burned to the ground. No one was able to explain the charred burned remains that were recovered.\n\nThe state eventually accepted Danni's report and turned the old homestead into a historic landmark. The road was fixed, the site cleaned up and a replica of the old barn was put up. The house itself was restored and made safe for tourists. Pictures of the Jones family were featured in the house along with snippets of Lizzy's journal. Displays showing how the original settlers lived were also installed.\n\nRyan was impressed with what had been done to the place. He looked around the displays, read the journal entries, but got a shock when he looked at the photograph of a younger Elijah Jones in his Union Army uniform. No, he thought. There's no way. As he looked closer, he thought for a moment he saw the man in the photo smile and wink.\n\n\"I've been out in the sun too long,\" he thought to himself.\n\nApril and Jessica continued their paranormal work, traveling around the country investigating historic sites. They had seen a lot in their work, but nothing compared to what they experienced in Hard Rock. They eventually married, wrote a series of books and retired off the royalties.\n\nAs for us, well, life went on. The kids continue to grow and Grandpa comes by whenever he can get away to spend time with them. Lately, though, we've been seeing more of Grandma Lizzy and she spends a lot of her time with Danni. All-in-all, life in the Jones house is good.\n\n \n"
    ],
    "authorname": "saddletramp1956",
    "tags": [
        "bar",
        "cheating",
        "justice",
        "scores",
        "wife"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/justice-ch-04-old-scores"
}