{
    "title": "Time Flies Ch. 03",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racism, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n***\n\nPart 11 - Codes and Conspiracies\n\n5:00pm, Thursday, January 9th. The Chief and I met in the Main Conference Room with the leadership of my Detective Corps, which comprised of Captain Perlman, Lieutenant Mary Milton, Lieutenant Jerome Davis, and Lieutenant Micah Rudistan.\n\n\"We got the pay data under a warrant.\" Mary Milton said. \"The janitors, like every other employee of the University, including the Head Professor of the Psychology Department, must submit a written, signed form with their hours, and have it signed off, every week. In the case of Dr. Fredricson, her assistant fills it out, Laura signs it, and the University President's Finance Officer signs off on it on behalf of the University President.\"\n\nMary: \"In Fisher's case, Hamm himself approved the forms, and it looks like he himself may have been filling them out. The handwriting curiously matches his own pay submissions. And Fisher was the only employee in the Sanitation Department like that.\"\n\nMary: \"Hamm's finances are very interesting, as well. He's got a lot of cash deposits of between $7000-9000, making him very eligible to be looked at by the IRS for attempting to avoid the $10,000 threshold. He put a lot of that money into an investment account... a legitimate one with one of the big brokerage firms... but not all of it. He eats at expensive restaurants, buys rounds at parties at bars, and his car is not cheap... Cadillac Escalade, tricked-up with bulletproof glass and tires.\"\n\n\"Sounds like the Commander's vehicle.\" said Tanya with a twinkle in her eye and a wicked grin.\n\n\"I know what I need mine for.\" I replied. \"What does a Manager of the Sanitation Department need that for? Is he afraid the Wildcats or State Tech janitors are gonna come for him?\"\n\n\"Exactly, sir.\" said Rudistan with a jovial grin. \"We don't have everything yet, but I think we're moving in the right di-rec-tion for a drug co-nnec-tion.\"\n\n\"Stop that.\" I said. \"You're making too much sense, Mr. Rudistan. Seriously, yeah, it looks like Hamm is a person of interest, but we don't have anything connecting him to Fisher's murder yet... or do we?\"\n\n\"No sir,\" said Mary, \"but we have even more potential drug connections... past history. Hamm was a student here at the University, and was busted not once but twice for drug possession. My Intel people dug deep into that, and found out the original charges in both cases was possession in quantities that showed intent to distribute, but the charges were reduced both times. Not pled down, but simply reduced.\"\n\nMary: \"Hamm had a DUI two years after graduating from School, and got a $500 fine. Four years ago, he was charged with misdemeanor possession of marijuana, and my Intel guys dug deep and found that in reality he was busted with a hundred pounds of weed, again plenty enough to make a felony distribution charge, but the charges were reduced. Not pled down, but reduced.\" The Chief emitted a long, low whistle at hearing that.\n\n\"Was he busted on Campus with these drugs?\" I asked.\n\n\"Yes, for the busts when he was a student.\" Mary said. \"But the DUI was in Coltrane County, and the more recent pot bust was in the City.\"\n\n*KNOCK KNOCK KNOCK KNOCK*\n\nThe door opened to reveal Lt. Myron Milton. The Chief had him come in, and he sat down next to his wife. \n\n\"Sir,\" said Myron, \"we got into Fisher's cellphone. He had some photos on it that might be helpful, including some taken the afternoon of his death... at Southpoint Mall. But more importantly, he had 38 texts, all incoming, none outgoing. We hit the senders, and came up with four distinct phone numbers, all burner phones bought at different locations.\"\n\n\"Okay, let's see the texts.\" I said. Myron plugged his laptop in, and texts began showing up on the monitor. \"These are the last seven texts. There are 31 more just like it from earlier months.\"\n\n08112 72735 32273 32936 28360 21215 20270<br>28112 72728 27273 33636 28360 11301 12120<br>27112 72827 28272 93636 31360 11215 20300<br>27112 72827 34273 22731 29310 11215 20280<br>28112 72828 32272 92836 31360 11215 20290<br>17112 72829 36273 02936 33360 21215 20290<br>28113 62736 34273 13031 30360 11301 12120\n\n\"Wow.\" I said. \"Looks like I've got a long weekend ahead of me.\"\n\n\"No sir.\" said Myron. \"We've already cracked it.\"\n\n\"Great!\" I said. \"How?\"\n\n\"We have a new program that aids in cracking encrypted codes.\" Myron said. \"And part of that grant money 'R.C. Christian' gave to us went to buying a supercomputer array that can crunch a lot of data very fast. Nowhere near what the Federal Government can do, but a couple million dollars can buy a lot, these days.\"\n\nI grinned. \"I'll take your word for that. It's good we have it. And how much did you pay for the program itself?\" Myron and Mary suddenly got quiet, and looked like they'd been caught with their hands in the cookie jar. \n\n\"Okay,\" I said, \"if you had bought it instead of stealing it off a Federal Government computer, what would it have cost?\"\n\n\"Thirty million dollars, sir.\" Myron 'confessed'.\n\n\"Oh my goodness.\" said the Chief.\n\n\"If anyone asks,\" I said to everyone, \"we bought this and lost the receipt. And when they say it takes a Federal Agent to buy it, tell them I did it. At least I'm an FBI Consultant, so I can't be charged with impersonating a Federal Officer.\"\n\n\"And when they arrrrest yoooo, Mr. Crowbar?\" asked the Chief.\n\n\"You don't need me any more, Chief.\" I said. \"You've got a 30-million-dollar decryption program to solve everything.\" Everyone laughed, and Tanya burst out into uncontrollable laughter at that.\n\n\"It would take a lot more than 30 million dollars to replace yooooo, Mr. Crowbar.\" said the Chief. \"Sooooo, Mr. Millll-ton, what did our pur-loinnnnned program get us to-dayyyyy?\"\n\n\"The first part was fairly easy, sir.\" said Myron. \"Since the last digit in the every group was zero, it dropped the zero and regrouped into sets of two.\" He brought up another screen:\n\n08 11 27 27 35 32 27 33 29 36 28 36 02 12 15 20 27<br>28 11 27 27 28 27 27 33 36 36 28 36 01 13 01 12 12<br>29 11 27 28 27 28 27 29 36 36 31 36 01 12 15 20 30<br>20 11 27 28 27 34 27 32 27 31 29 31 01 12 15 20 28<br>28 11 27 28 28 32 27 29 28 36 31 36 01 12 15 20 29<br>17 11 27 28 29 36 27 30 29 36 33 36 02 12 15 20 29<br>28 11 36 27 36 34 27 31 30 31 30 36 01 13 01 12 12\n\nMyron: \"The program recognized that there is no number higher than 36. That suggests 26 letters of the alphabet and ten numerals. So it first tried the ol' 'A=1, B=2' iteration, and so on, with '27'=1, '28'=2, and so on to '36'=0. And we think that it hit a home run on the first pitch.\"\n\n\"How does it know '27' is '1'?\" I asked. \"Couldn't '27' be '0' and '36' be '9'?\"\n\nMyron said \"If you'll bear with me, sir, that'll be explained in just a second.\" Myron did not like his narratives to be interrupted, and I'd just committed the sin. So I nodded and let him go on. He said \"This is what came out.\"\n\nh k 1 1 0 6 1 7 3 0 2 0 b l o t 1<br>2 k 1 1 2 1 1 7 0 0 2 0 a m a l l<br>3 k 1 2 1 2 1 3 0 0 5 0 b l o t 4<br>t k 1 2 1 8 1 6 1 5 3 5 a l o t 2<br>1 k 1 2 2 6 1 3 2 0 5 0 a l o t 3<br>q k 1 2 3 0 1 4 3 0 7 0 b l o t 3<br>2 k 0 1 0 8 1 5 4 5 4 0 a m a l l \n\nMyron: \"You can see the words 'mall' and 'blot', so we suspended the algorithm to look at this. At this point, we have to help the program with human brain power. The world 'mall' is pretty self-evident, but we had to guess if that's 'a lot' and 'b lot', or just 'lot' followed by the numbers.\"\n\nMyron: \"The first guess is that 'a mall' doesn't make sense, so we separated that first letter, getting this:\n\nh k 1 1 0 6 1 7 3 0 2 0 b lot 1<br>2 k 1 1 2 1 1 7 0 0 2 0 a mall<br>3 k 1 2 1 2 1 3 0 0 5 0 b lot 4<br>t k 1 2 1 8 1 6 1 5 3 5 a lot 2<br>1 k 1 2 2 6 1 3 2 0 5 0 a lot 3<br>q k 1 2 3 0 1 4 3 0 7 0 b lot 3<br>2 k 0 1 0 8 1 5 4 5 4 0 a mall\n\n\"So we took a shot,\" said Myron, \"and told the computer that. We also noted that the second letter is 'k' in every message, so we grouped the first two letters. We inputted that and started up the algorithm again, and the computer decided that the next 8 numbers were possibly dates and times, to wit.\"\n\nhk 1106 1730 20 b lot1<br>2k 1121 1700 20 a mall<br>3k 1212 1300 50 b lot4<br>tk 1218 1615 35 a lot2<br>1k 1226 1320 50 a lot3<br>qk 1230 1430 70 b lot3<br>2k 0108 1545 40 a mall\n\n\"Ahhh.\" I said in a high falsetto voice, then continue: \"I'll bet 'k' stands for 'kilo'. These are drug orders. 'qk' is 'quarter kilo', 'hk' is 'half kilo', 'tk' is 'three-quarter kilo'. Upwards from there, the orders would be in full kilo blocks.\"\n\n\"What if they want a kilo and a half?\" asked Tanya.\n\n\"Ma'am,\" said Lt. Rudistan, \"once buyers want more than one key, they usually are buying whole bricks. A kilo is a lot, and runs in the tens of thousands of dollars.\"\n\n\"And three kilos?\" I said. \"That's a lot of weight in one order. So that suggests the next four numerals are dates. They went from November 21st through the Thanksgiving holiday, and needed a 3 kilo resupply on December 12th. And they under-ordered, and asked for an extra quarter-kilo four days after getting just one kilo on December 26th.\"\n\n\"See?\" drawled the Chief. \"You are still good for something, Mr. Crowbar.\" Everyone chucked again as a red crowbar was waved in the Chief's general direction.\n\n\"And that's why '36' is zero.\" I said. \"Makes a lot more sense in the next block, which must be the meeting times.\"\n\n\"Yes sir, that's what the computer surmised.\" said Myron. \"It saw the blocks of '36's and guessed first that they were the zeros. And with the dates and times, that looks to be right. These guys aren't gonna say a meeting is at eleven minutes after the hour.\"\n\nMary said \"What we don't know is what those two block numbers and the 'a' and 'b' stand for.\"\n\nMyron replied: \"When we put 'em together into one group, we get this.\"\n\nhk 1106 1730 20b lot1<br>2k 1121 1700 20a mall<br>3k 1212 1300 50b lot4<br>tk 1218 1615 35a lot2<br>1k 1226 1320 50a lot3<br>qk 1230 1430 70b lot3<br>2k 0108 1545 40a mall\n\n\"Parking lot spaces?\" guessed Jerome Davis.\n\n\"Or apartment numbers?\" asked Captain Perlman.\n\n\"Theorizing without sufficient data, are we now?\" I asked. \"Seriously... Myron, you and your team have done great getting us to this point. But let's not go overboard. For example, I doubt they'd get so granular in their message to say which parking space, when just the lot is likely to be sufficient. And I just made the bad job of assuming that 'lot' is a parking lot, but I'm surmising that the last message is the one that led Fisher to his death. And he was found not far from Southpoint Mall, and his car at the mall, n'est pas?.\"\n\nI continued: \"And having gotten this far, we can do a lot with this data. For example, I'm sure you're trying to trace the burner phones that sent these texts to Fisher's phone?\"\n\n\"Yes sir.\" said Myron. \"But there is one problem, sir. It would make more sense for each text to be a day or two before the meeting dates, but these aren't. They were sent to this phone in groups of between 8 and 12 texts at a time. Each group was from different burner phones.\"\n\n\"So when he changed burners,\" I said, \"he sent the texts on that burner to his own cellphone. Now why do that?\" My musings were on the verge of becoming a reverie.\n\nFinally, I said: \"There's something else we can do, also. Myron, if you can trace the burners that sent the texts to Fisher's phone, see if you can see what was sent to those burners. And to those burners and from what burners. And come see me in my office after this meeting. Okay, anything else?\"\n\nLt. Jerome Davis said \"My guys went by the Campus Police Headquarters, and I understand the Intel people accessed their databases. There are no records, at all, of Fisher being arrested, nor of any sting operations against him. He's totally a ghost, as far as they're concerned.\"\n\n\"There's nothing in the SBI-NTF databases, either.\" I said. \"Which means absolutely nothing, knowing how poorly they keep records. Okay, one thing I need for Intel to find out is who Hamm associates with. Friends, dates, everything. Someone was helping him reduce his criminal record, and I need to know who...\"\n\n* * * * * * * * * * * * * *\n\nMyron and Mary Milton followed me into my office after the meeting. After we sat down, I turned on the bug killer and said \"Myron, this is one of those things you can say 'no' to, but should you choose to accept it, I'd like you to ping James Hamm's cell phone location. It's likely at his home. What I really am hoping to see is that he really is as dumb as he has been acting, and he'll use a burner phone from the same location his regular one is at.\"\n\n\"I'll be glad to do it, sir,\" Myron said, \"but what do we do if he really does do that? We'll have to have some kind of probable cause to get a warrant.\"\n\nI replied: \"You and Mary can legally dive into research on the cellphones that sent something to Carl Fishers cellphone, and keep working back. If... and I admit it's a big 'if'... but if one of those burners can ultimately be shown to have a connection to Hamm's burner, we'll work backwards, and say we have the other phone, and want to research the burner that 'hey, presto!' ends up being Hamm's burner phone. And then we show the burner's location, and work backward to Hamm from there.\"\n\n\"And once we have that, sir?\" Mary asked.\n\n\"Then we get a warrant for Hamm's cellphone and the burner, if we can find it.\" I said. \"And if we can find text with codes like the ones found on Fisher's phone on anything related to Hamm? We'll have enough for a warrant to bring Hamm back in on suspicion in the murder case...\"\n\n* * * * * * * * * * * * * *\n\n6:30pm, Thursday, January 9th. It was too cold to sit on the deck of the Cop Bar, even with fires in the pots, so we sat in the back Command Room and had beef nachos and beer. Teresa was there already, at the near end of the table, and somewhat to my surprise, Cindy was sitting to her right.\n\n\"How's the murder case going?\" Teresa asked as I sat down to Cindy's right.\n\n\"Not bad.\" I said. \"That new Intel Branch is really paying off for us. We still need Myron's help on some of the hardware issues and things like tracing cellphones, but the Intel people are like vacuum cleaners when it comes to getting data. They just suck up anything out there.\"\n\n*Whirrrrrrrrrrr*\n\n\"Thank you sir!\" Tanya said as she drove up, with Jack Muscone in tow. \"I think they're doing a great job, too!\"\n\n\"And it was your idea.\" I said. \"Worthy of a commendation, fer sure.\"\n\nJack sat down at the far end of the table, to my right, and Tanya to Teresa's left. As my Angels talked amongst themselves, I asked Jack \"Didn't bring Dwight Stevens with you?\"\n\n\"I invited him, but he said he has a meeting.\" Jack said. \"But I'm not an Agency of the Weak Minded, either. He and Fred Merkle and others are working your Fisher murder case, but from the Federal drug angle.\"\n\n\"They find anything new?\" I asked.\n\n\"No,\" said Jack, \"but I'm worried that Dwight is not telling me everything he knows, and everything he is doing.\"\n\n\"He doesn't trust me, does he?\" I asked, a bit acerbically.\n\nJack said \"I don't think he ever got over the Marcie Harper case, and how you handled it.\" (Author's note: 'Schoolhouse Rock'.) \"I've told him a number of times that he not only should trust you, he should let you make his job easier, like I let you make my job easier.\" I chuckled at that one.\n\n\"Well,\" I said, \"I am trying to be patient with him, knowing that I didn't give him a lot of reason to trust me during the Harper case. And it's a double edged sword. You and Karina White and Owen Lange have taken my side, and the Swamp Frogs like Robin Isley and Curtis Halsey really came after you. Good and honest Agents are probably wary of me, because helping me can make them targets. But at some point, Jack, Stevens has to make a decision to trust me or not. And I'm not waiting forever for him to figure it out.\"\n\n\"I hear you.\" said Muscone. \"As to this case, I did a little private digging, and I found out that Stevens and especially Fred Merkle have invested a good bit of time in the drug aspects of this case, as has their boss, DEA SAC Rutherford Lyndon. For right or for wrong, I think they're worried that you're going to screw up their investigations.\"\n\n\"I'd be able to try a lot harder to not do that,\" I said, \"if they'd just tell me where the land mines for them are. And something else bothers me, Jack... we found Carlton Bellows very quickly, and very easily. I simply cannot believe that the DEA did not know of his double identity before he was murdered.\"\n\n\"And this where we come full circle to me wondering what they're not telling me.\" said Jack. \"I agree that they should've easily found that. And maybe they did.\"\n\nI nodded, then said \"There's something else I need to know. Was Carl Fisher, either as Fisher or as Bellows, an Agent or truly a C.I.? And ditto that for James Hamm. His actions are those of either a guilty man... or a man trying to keep his cover and operation as an operative. I need to know which.\"\n\n\"I'll see what I can find out.\" said Jack.\n\nWe turned to talk to the others. Cindy said \"You guys need to come to the Country Music Palace tomorrow night. Trace Brown is performing, and we're going to start the Line Dance competition. Groups of 12 are competing.\n\n\"Are you can Callie forming a group?\" I asked.\n\nCindy said \"No. Trace, Callie, and I are the judges. Free beer, dontcha know.\"\n\nI pointed my thumb at Muscone and said \"We'll have to get this guy some proper clothing. All he has in his closet are matching FBI-issue suits, shirts, and ties.\"\n\n\"Hey, I'm not Martin Nash!\" protested Jack. Everyone laughed, then realized I'd gone into a reverie...\n\nPart 12 - Double Coverage\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the redheaded MILF reporterette at 7:00am, Friday, January 10th, from the top of the building at Riverside and College, on the southwest corner of Courthouse Square, with the State Office Building in the background. \"Another blow for Donald Troy in the Courts!\"\n\nBettina began: \"After Judge Patrick R. Folsom dismissed a lawsuit by the Social Justice group Citizens for Secular Atheism against Donald Troy's entity that held a Christian concert on public grounds on Christmas Eve, Appellate Judge Leahy overruled Folsom's decision and ordered that the lawsuit could continue. Commander Troy's attorney Mike G. Todd immediately filed an appeal to the State Supreme Court.\"\n\nBettina: \"And there has been no progress by the Town & County Police in the murder of Carlton Fisher. Channel Two News has learned that Mr. Fisher was an employee of the University Sanitation Department. Police used excessive force in arresting the Department's Manager, but Judge Harry R. Nance dismissed all charges against the Manager, who has not been charged nor implicated in the murder, and whose name we are withholding to protect his identity and reputation.\"\n\nBettina: \"And in State news, the State House is moving inexorably towards impeaching deeply unpopular Governor Val Jared on a wide variety of charges, the worst being Abuse of Power. We have with us Dr. Adam S. Keller of the City University Rodham Foundation for Social and Political Change. Dr. Keller, shouldn't Governor Jared just resign before the Legislature impeaches and convicts him of these blatant and obvious charges?\"",
        "Pencil Neck Keller spoke in his smooth, even way of talking: \"Bettina, Jared's crimes are among the most shameful in the State's political history. His abuses of power are so egregious that even if he did resign, the Legislature has the right to continue the Impeachment, which they should do so that Jared can never hold public office again, and the truth of his crimes can be completely exposed to the People of the State.\"\n\nBettina: \"Dr. Keller, is there any hope of bringing criminal charges against Commander Donald Troy for abuse of his Police power as well as perjury in previous testimony before the Legislature?\"\n\nPencil Dick Keller: \"Bettina, we can always keep hope alive that Commander Troy will get what should be coming to him. But for now, exposure of Val Jared for his actions while Governor are what the Legislature, and also the Media, should focus on like a laser beam.\"\n\n\"Thank you Dr. Keller.\" Bettina said happily. \"And finally, Channel Two News has learned that ADA Franklin Washington may take a leave of absence from the District Attorney's Office as he pursues the judicial seat currently occupied by Judge Harry R. Nance. Sources tell Channel Two News that Washington's decision is, quote 'imminent', close quote...\"\n\n* * * * * * * * * * * * * *\n\n\"So they'll name the dead man Fisher, but won't say Hamm's name?\" I noted as we drank coffee in the Chief's Conference room, once again sans Deputy Chief Ross, who was meeting with Captain Damien Thompson in her office. \"I don't mind them not saying Hamm's name, but they should at least be consistent.\"\n\n\"And what, no 'Commander Troy refused to comment' from Bettina, there?\" asked Lt. Commander Teresa Croyle.\n\n\"Did you even know about the Appellate Court decision, Don?\" asked Captain Tanya Perlman.\n\n\"Yes.\" I said. \"Mike Todd got the notice late yesterday afternoon, but had time to file the appeal with the State Supreme Court. We were pretty much expecting that from Leahy, so we had it ready to go at literally a phone call's notice.\"\n\n\"I'm not a lawyer,\" said Teresa, \"but isn't the law squarely on your side, Don? How could Leahy overturn Folsom's ruling?\"\n\nI said \"He only said the lawsuit could go forward; he didn't rule for the other side. And I agree that you're right, and the law is on my side. But Leahy is activist, and very Leftist, and he wants to use the Judicial Branch to crush Christianity just like Nance does.\"\n\n\"Think your case might be the one that ultimately reaches the US Supreme Court,\" asked the Sheriff, \"and reverses that 'separation of Church and State' crap?\"\n\n\"I'd love it if it was, Sheriff.\" I said. \"But I'm not optimistic that'll ever be overturned---\"\n\n*BRING!* *BRING!* *BRING!* *BRING!*\n\nIt was my Police iPhone. I answered it, said \"Bring him to my office.\", then disconnected. \"That was the Duty Desk.\" I said as I stood up. \"Artis Lattimore is here and wants to talk to me. If you'll excuse me...\"\n\n* * * * * * * * * * * * * *\n\nArtis Lattimore came in, and accepted my offer of coffee. After he sat down, he said \"Thanks for seeing me, Commander.\" It may be stereotypical to say this, but I began realizing that Lattimore was a lot more articulate than he appeared to be, and that appearance might've been an intentional act on his part.\n\n\"You said it was urgent?\" I replied, getting right down to it.\n\n\"Yes sir.\" said Lattimore. \"It's about Jackson Ripley. There's a couple of things you need to know. First, the reason we had some drug intel that you guys didn't have yet is not because we were trying to one-up you. Ripley was the source of that information.\"\n\n\"Ahhhhh.\" I said. \"I think I know what you're going to tell me: Ripley is a DEA Agent.\"\n\n\"Yes sir, that's it.\" said Lattimore. \"And he's always been one. That story that he was a P.I. in Southport was pure cover, and it was also a cover story that he was in the Bureau of Indian Affairs. He was really DEA then, too.\n\n\"That makes sense, on a lot of levels.\" I said. \"I'd imagine Ripley has been undercover in Turpin Heights, in the State south of us, down from Southport.\"\n\n\"Yes sir.\" said Lattimore. \"And the DEA worked out an arrangement with D.A. Walters for him to pose as in Investigator in her office for a while. She agreed to do it, in exchange for setting up that incident with the TCPD outside of Luigi's. But after he said that about your and Paulina's daughter, Ms. Walters had to terminate the agreement.\"\n\n\"Is Ripley part of Dwight Stevens's team?\" I asked.\n\n\"I don't know that.\" said Lattimore. \"What I do know, and the reason I came here today, is because Ripley asked me to meet him for a beer last night. He said that murder spooked him. The DEA has been after that Fisher guy for a while, and for him to come over all dead should have them taking a breather and figuring out what was going on.\"\n\nLattimore continued: \"But that's not what they're doing. Some guy named Merkle is trying to set up a drug buy with the perps, and he wants Ripley to go to the meet with him as his 'bodyguard'. Ripley's worried about it. This is not a good situation to go into.\"\n\n\"So why doesn't he just refuse, or just tell them they need to hold off?\" I asked.\n\n\"He did.\" said Lattimore. \"Well... he voiced the concerns about it. Merkle told him they were going through with it anyway, because if they didn't they'd lose months and years of work. And from what Ripley was telling me, he wasn't being given a choice.\"\n\n\"Is Rutherford Lyndon the SAC?\" I asked.\n\n\"I don't know for sure.\" said Lattimore.\n\n\"So who are these perps with whom Merkle wants to make a deal?\" I asked. \"Any names?\"\n\n\"I don't know.\" said Lattimore. \"Ripley never told me, he just said there was a ring that was a major pipeline to the Campus students. If it was that guy in the Sanitation Department you arrested, he didn't say. He was just worried about the way they were trying to go into this drug buy.\"\n\n\"Final question: does Miriam Walters know you came to me with this?\" I asked.\n\n\"Yes sir.\" said Lattimore. \"I'm not the one to be doing end runs around my boss. I told her what was going on and said I thought we should tell the TCPD about it. She said it was my decision to say something or not, and she'd back me either way.\"\n\n\"Well, I'm glad you did come in.\" I said, standing up. \"It certainly helps my confidence in you and my guys working together.\"\n\n\"Thank you, sir.\" Lattimore said, also standing. \"And sir... D.A. Walters ain't like Krasney, and she ain't one the bad guys. And I'm not sure what's going on with her and Franklin and Paulina, but I don't think Ms. Walters is a racist.\"\n\n\"That's my feeling, also.\" I said. \"My issues with her are ones of trust. But moving forward, here's something I need you to do...\"\n\n* * * * * * * * * * * * * *\n\n\"Wow, that's surprising.\" Teresa said as we held the Angels meeting in the Chief's Conference Room. The Sheriff and Police Chief were no Angels, but they were in the meeting, as well. I'd just briefed them on what Artis Lattimore had told me.\n\n\"Looks like I'm going to have to have another long conversation with Ms. Walters.\" growled Sheriff Griswold. \"She absolutely should not have held that information about Ripley from us.\"\n\n\"And worse,\" Teresa said, \"if our Officers had reacted to Ripley's baiting, they could've been charged with the double whammy: assaulting a Federal Agent in addition to anything else. That's really dirty pool on Walters's part, and I'm really not forgiving it.\"\n\n\"And it has crossed my mind that the US DOJ Civil Rights Division might've had a hand in it.\" I said. \"Taking Lattimore at his word that Miriam didn't put Ripley up to what he said about Tasha, that means it was either the Press behind it... or the Feds.\"\n\n\"Geez, whatta mess.\" grunted Sheriff Griswold, shaking his head.\n\n\"And it's going to get worse, much worse, before it gets any better.\" I said. \"But for right now, I've got a lot of questions about this murder and the drug case stemming from it. And I need to get a hold of Dwight Stevens as soon as possible. So, would you all care to join me in a meeting with the Detective Corps?\"\n\nPart 13 - Moving Inexorably\n\nAs I came into Classroom 'E', I said quietly to Tanya \"I can't get hold of Dwight Stevens nor Muscone. Can you call Jack and see if he'll take your call, and tell him it's really urgent?\"\n\n\"Sure.\" said Tanya, knowing I would never ask her to do that if it weren't really urgent.\n\nAs we settled down around the table, the Chief said \"Okayyyy, Captain Perlman, what do we havvvvve?\" Tanya nodded to Lt. Mary Milton.\n\n\"Ladies and gentlemen,\" said Mary, \"here's what we have, including what Myron was able to help us with. First, James Hamm's personal cellphone remained at his home last night, and began moving this morning... but straight to his office on Campus. Second, no burner phones from within 300 ft. of his house have been detected. It's impossible to say that about his office, because there's so many University students in the area with cellphones.\"\n\nMary: \"We also worked on the burners that texted Fisher's phone. The locations the phones were at coincided where his cellphone was, so we think the burners were his, also. Why he would text to his own phone is something the Iron Crowbar will have to tell us.\"\n\n\"Elementary, my dear Milton.\" I said. \"He was preserving the records of the texts sent to him, in case something 'wet' happened to him... which did. So what did his burners have for us?\"\n\nMary said: \"First, those burners only sent texts to Fisher's cellphone. None were sent to any other phone. But since we had the phone numbers, we were able to get the numbers that called or texted Fisher's burners. There were six different ones over time, and they were burners, too. Probably changed out every so often, like Fisher's were. But we don't have the means to determine where those burners were without a FISA warrant, nor what any of their texts might have said. And none of them ever called Hamm's work place or home phones, so we don't have enough connection to get any kind of warrant on him.\"\n\nMary: \"We looked further into Hamm's credit cards, where he went, stuff like that. We were trying to find if he had a regular circle of associates. But he doesn't. He'd occasionally purchase the services of an escort girl, but never the same one more than one time, and he used different escort agencies. He frequents bars along the University Avenue neighborhood of bars, but not the same ones in anything we could make a pattern out of. He does not associate with with others in the Sanitation Department, as near as we can tell. There's just nothing that sets a pattern, just no 'there', there.\"\n\n\"Can I ask a question?\" asked Detective Julia Rodriguez. We all nodded, and she said \"Are we absolutely sure that Hamm is part of a drug ring, not to mention involved in the Fisher murder?\"\n\n\"Not yet, of course.\" I replied. \"But we have some circumstantial data that gives us a connection. Hamm has expensive tastes and habits. He is the Sanitation Department manager that 'handled' Fisher, so to speak. Hamm set up Fisher's pay structure that gave Fisher a job he didn't have to go to all day every day. He has every right to invoke his legal rights, of course, but his attempts to stop any of his employees from talking to us seems strange along the 'he doth protesteth too much' concept. So it's a thread that we've found, and it seems the harder we tug on it, the more Hamm squirms.\"\n\nI continued: \"But you make a good point. We should not assume that Fisher was dealing drugs directly with Hamm. There could easily be a middleman.\"\n\n\"It likely is a middleman, sir.\" said Christopher Purvis. \"Hamm and Fisher could easily have found ways to communicate verbally, and not have to send texts.\"\n\nTheo Washington asked: \"If Fisher is part of the drug pipeline, was he the buyer or the seller of the product? And was the meeting where he was shot a drug buy, or did someone just shoot him, as in a pro hit?\"\n\nCaptain Perlman said \"The last code message on his phone could easily have been a meeting for a buy, especially if what we think is the date and time in that code... they coincide with the date and likely the time of the murder. However, we had Uniformed Officers go to both the Southpoint Mall and the Mall northwest of Town, and no blood or anything was found that would suggest the murder happened at those locations. They also got inside the malls and didn't find blood anywhere.\"\n\n\"That's good, thorough work.\" I said. \"Commander Croyle, extend my compliments to your Officers.\" Teresa nodded, then I said: \"It's a good question, Theo. I have some anecdotal data... thin, unconfirmed, but still a data point... that another drug buy is being set up. So if Fisher had the drugs on him when he was murdered, his killer would have two keys of product in his or her hands now, and would not need more for days if not weeks.\"\n\nI continued: \"Also, Fisher was a longtime dealer of money, either through legit investments or not-so-legit money laundering. And he even had $28,000 seized from him in an asset forfeiture. So I'm going to go out on a limb and speculate for now that Fisher had the cash in the transaction.\"\n\n\"Sir,\" said Grubby Paul, \"another data point is that drug buys usually are three-on-three meeting, and definitely at least two on each side. Going alone is just asking to get capped.\"\n\n\"And he was capped.\" said Julia, generating some brief laughter. \"But I don't know what the DEA is doing, so I'll make the right career move and agree with Commander Troy.\" That generated a bit more laughter.\n\n\"So does that mean Hamm was the supplier of the product?\" asked Vice Detective Statler. That started some back and forth, with some adhering to Tanya's assertion that the code texts weren't needed between Hamm and Fisher, and others saying they still could've used the codes to confirm meetings. Over time, everyone began to notice that Your Iron Crowbar was looking at the ceiling... in a deep reverie.\n\nWhen I finally came out of it, Tanya said \"If someone put a Bear Bryant hat on your head, Commander, you wouldn't have realized it.\"\n\n\"Har har.\" I said. \"Something struck me about all this, something that fits the data better than the buys being between Hamm and Fisher. I might suggest that Hamm provided Fisher the money, and Fisher made the buys from a third party, and got the drugs to Hamm.\" \n\n\"So a third party shot Fisher?\" asked Julia Rodriguez.\n\n\"I didn't say that.\" I said. \"Hamm still could've shot Fisher, though we obviously need to find motive for that.\"\n\nChristopher Purvis said \"There are no records of Hamm buying nor owning a gun, for what that's worth.\"\n\n\"Which is not much.\" said Tanya. \"If he knows his way around drug circles, he could easily pick up a 'clean' piece. I have two big questions. First, who reduced Hamm's charges, and why. And second, how might he have been distributing product to his customers? There has to be connections there, and trails leading to someone. And we need to find those trails.\"\n\n\"I entirely agree.\" I said. \"So, let's talk generally about who is running drugs in my County. Who could be the third party these bozos are working with?\"\n\nLt. Rudistan deferred to Detective 'Grubby' Paul, who said: \"Going back a few years, since the Beanstalk Gang and the Viscottis were shut down, T-Square was the major player in the County's drug markets. But he went clean, so we've got several contenders.\"\n\nGrubby: \"First is T-Mac, once T-Square's lieutenant but now on his own. T-Mac is still supplying the clubs in the Tenderloin District. He's getting his product from an out-of-County supplier, though, likely someone from the City with the Jasmine Nix faction. A deal with the likes of Fisher or Hamm isn't his style, and he's a buyer of product for dime bag distribution, not a seller of bricks by the key.\"\n\nGrubby: \"Next is the rising threat from The Eighth Street Latinos. Captain Malone and subsequently T-Square used to run the Latin gangs out of here; they really came down on them hard. So did Pastor Westboro, but for his own reasons. The Hispanic community in this County is not large, but it's growing in Coltrane County and further south of here. The leader of The Eighth Street Latinos is believed to be Jos\u00e9 Raoul Ramon, known as 'Raoul'. He's been around these parts for a long time, and sparred with Captain Malone's friends in the Beanstalk Gang, but managed to keep himself out of jail. Now he may be building his own gang. He's a candidate for this type of drug deal, but he's not known to be a killer, and only gets involved in violence in defense or retaliation.\"\n\nGrubby: \"Next is Jacquez Wilson. We've been watching this guy as a militant organizer for black causes, and his hatred of whites and especially the Police is unlimited and unappeasable. He's working his way into the Southwestern Ghetto, and just looking for an excuse to run T-Mac's people out of there. He is a mean m-f-er, and is known to commit rape and murder at the drop of a hat, but we doubt he'd do business of any kind, much less drugs, with White people or Hispanics.\"\n\nGrubby: \"Last is a group that call themselves the 'Smooth White Boys'. We think they're just a front for the Kappa fraternity, which is well-known as a white superiority Fraternity. They were going to be kicked off Campus for flying the Confederate Flag at their Frat House, but they sued for violation of their First Amendment Right of Free Speech and won. But they're on a short leash with the University, so they keep at least half of their membership names secret.\"\n\nGrubby: \"One reason the Smooth White Boys are still in business is because they have become the de facto sole source for drugs on the University Campus. You want a dime bag, you talk to a Kappa. You want a quarter key for a big party, a Smooth White Boy will hook you up. Somehow they have without violence become the drug monopoly on Campus, especially after the Taus were taken down by the Iron Crowbar. Finally, we're not sure who the leader of the Smooth White Boys is, but we're working on getting some intel on that.\n\n\"Good report.\" I said as I stood up. \"Okay, I've got some calls to make and data to gather. Y'all are doing great, so keep pushing. Get the Crime Lab techs to go back over Southpoint Mall... it's still the likeliest place the crime occurred, and they might can detect cleaned-up bloodstains...\"\n\nPart 14 - Talk Amongst Yourselves\n\n\"This is ridiculous.\" said Julia Rodriguez as the MCD Detectives worked at their desks. \"There are so many moving parts to this murder, from him being moved and found in that field, to the wristwatch being set wrong, to the code texts. We're missing something.\"\n\n\"I'll tell you something else that has been nagging the hell out of me.\" said Roark Coleman. \"I was on the streets as a beat cop and then in Vice for a long time. And from what I'm seeing, either of these guys could be undercover. The way Hamm is acting, spending money, getting attention... that's classic undercover acting. And Fisher saving those code texts and his double life... that could also be cover.\"\n\n\"That code is nagging at me.\" said Teddy Parker. \"Take a look at this again.\" He expertly used his computer mouse to bring up an image of the codes on the big screen matrix of monitors on the wall. \"The part we haven't figured out... the '40a' and '50b'... I have a feeling that's important.\"\n\n\"I was talking with Lieutenant Mary Milton about that.\" said Lt. Jerome Davis. \"Her people in Intelligence thought 'a' might be 'ahead', and 'b' might be 'behind', as in '40 minutes ahead' and '50 minutes behind'.\"\n\n\"Ooooh, I like that!\" Julia said.\n\n\"Only problem is,\" Jerome said, \"that last message said '40a', meaning ahead, and his watch was actually set forty minutes behind. So it doesn't fit the data.\"",
        "\"Unless he made a mistake,\" said Teddy Parker, \"and set his watch the wrong way.\"\n\n\"Or '40a' actually means behind, and '40b' would mean ahead.\" said Julia. \"Like 'Opposite Day' in the Calvin & Hobbes cartoons.\"\n\n\"Seems like an unnecessary layer of finesse.\" said George Newman. \"The code itself wasn't as complex as it could've been, so why do that little trickeration? It just creates potential for a mistake.\"\n\n*Whirrrrrrrrrrr*\n\nCaptain Tanya Perlman drove her wheelchair into MCD, and saw what they were looking at. \"Oh,\" she said, \"you're looking at the code, too.\"\n\n\"Yes ma'am.\" said Lt. Davis. \"And I told them about the speculation that 'a' and 'b' being 'ahead' and 'behind', though Fisher's wristwatch was behind and the code suggested 'ahead'. And that brought Calvin & Hobbes into the mix.\"\n\n\"Opposite Day?\" asked Tanya with a grin. \"Good thinking. But none of this explains why someone moved the body from the place he was shot... and went through an elaborate scheme to do so. And there's that question on my mind: who reduced Hamm's charges?\"\n\n\"Ma'am,\" said Julia, \"we've been discussing that either Fisher or Hamm was or is an undercover agent of some kind. Hamm's charges could be a backstop, and for that matter, so could Fisher's. Also, if Fisher was undercover or a C.I., and discovered to be one, they might kill him and put him out there to be found to let the world know that that is what happens to undercover agents and snitches.\"\n\n\"Good points.\" said Tanya. \"And the Iron Crowbar is trying to find that out, also... but by the more expedient method of asking the Feds directly.\"\n\n\"Would they tell him?\" Julia asked. Seeing Tanya's 'look' at her, she said \"No disrespect, ma'am, but the DEA might refuse to answer, to protect a source or undercover agent.\"\n\n\"And protect their operation, if there is one.\" said Lt. Davis.\n\nTanya nodded. \"I can see that. But you're forgetting one thing: it's the Iron Crowbar who is doing the asking.\"\n\n\"That's right.\" said a voice in the door to the back hallway. Everyone turned to see Your Iron Crowbar standing there. \n\n\"I will indeed be asking our Federal friends some very pertinent questions.\" I continued. \"But in the meantime, I like the way you guys are thinking about all of this. Keep at it...\"\n\n* * * * * * * * * * * * * *\n\n10:00am, Friday, January 10th. FBI Special Agent In Charge Jack Muscone appeared in the door to my office, and he brought someone with him: DEA Special Agent In Charge Rutherford Lyndon. I got up and shook hands with both of them, and poured a 'round' of coffee for each of us.\n\nMuscone said \"I got your messages, and Tanya's. Apologies for not getting back to you sooner, but I was in meetings with SAC Lyndon and EAD Owen Lange, and we decided to just come over instead of calling you back. So how can we help you?\"\n\n\"Thanks for coming.\" I said. \"The relatively urgent thing I need to ask you about is this Fisher murder. I'm not trying to step on any operations or blow anyone's cover... but I really need to know if Hamm is an undercover Agent, or if Fisher was one... a real one, not a Fake News C.I. And it's urgent because I am beginning to fear that people are in danger right now.\" \n\nMuscone and Lyndon looked at each other, then they turned to me and Muscone said \"No, neither of them are any more than what you've been told already. Merkle tried to flip Fisher, but apparently without success.\"\n\n\"That's correct.\" said SAC Lyndon. \"And with the TCPD getting more involved in recent drug operations in this part of the State,, and with those maybe spilling over the State Line, I agree with SAC Muscone that we need to bring you more into the loop than we have in the past. So since I'm here now, ask anything you like and I'll answer to the best of my ability, within protocols, of course.\"\n\n\"Okay, then.\" I said. \"Was Carl Fisher sent to a drug buy, as a sting or on behalf of the DEA in any way?\"\n\n\"If he was,\" said SAC Lyndon, \"it was without my knowledge, much less my sanction.\"\n\n\"Mr. Lyndon,\" I said, \"since you have no knowledge of it... and I believe you when you say that you don't... can you get Dwight Stevens on the phone, and have him answer that question directly? And Fred Merkle? And Jackson Ripley?\"\n\nLyndon visibly started when I mentioned Ripley's name, and I let my gray eyes bore in hard on him. \"Okay,\" he said, taking out his cellphone, \"I'll see what I can do.\" \n\nAs he began dialing numbers, I texted Myron: \"Lyndon's phone.\" I looked up to see Jack Muscone peering at me, and I peered back.\n\nEAD Rutherford spoke into his phone three times, asking the recipient of his calls to return his calls ASAP. \"Okay,\" he said after disconnecting the last call, \"all three phones went straight to voicemail. And you heard me leave messages to call me back.\"\n\nI nodded. \"Thanks for trying.\" I said. \"Let me ask you this: if my Chief or the Sheriff were calling me, I'd have to be in personal combat with an armed thug to not take the call. If your guys aren't taking your calls, does that mean they're undercover now? busy? or just not taking your calls?\"\n\n\"They'd better be taking my calls, if they're physically able to.\" said Lyndon. \"And to answer your question... for all three not to answer suggests they are out of cellphone range, or on an undercover mission.\" I nodded thoughtfully.\n\n\"Just one more question, sir.\" I said. \"Chain of command. Is Fred Merkle in Dwight Stevens's chain of command? And ditto that for Jackson Ripley?\"\n\n\"No.\" said Rutherford. \"Stevens is the SSA for the City area, though I have him working all over the State and region if need be. Merkle has been the primary in Southport, along with Morales, though neither is formally an SSA just yet. And Ripley was deep undercover in the Turpin Heights area for some time, and his chain of command was through the Bureau of Indian Affairs, to help his cover if there were any moles in the DEA down there. He's never been formally assigned to Stevens up here. So I guess I'm their direct chain of command, if you want to look at it that way...\"\n\n* * * * * * * * * * * * * *\n\nJack Muscone and Rutherford Lyndon went back to the Federal Building, and I made deductions from the observation that Jack did not mention lunch at the Cop Bar. I went to Cindy Ross's door and knocked on it. When she invited me inside, I closed the door behind me.\n\n\"Have a seat.\" she said. \"Whassup?\"\n\nI sat down, then said \"I could use your help, if you're willing to do it. Here's what's going on: DEA Agents Dwight Stevens, Fred Merkle, and Jackson Ripley cannot be reached by their own boss. I really need to know where they are and what they are doing, or they might end up like Carl Fisher. I am going to call Ted Crenshaw in Southport, and will subsequently call Tim Jenkins... unless you'd like to call Jenkins at the same time I call Crenshaw.\"\n\nCindy peered at me and said \"I'm tempted to say something about staying in my lane, but I can tell you're on edge. Okay, what are we asking them?...\"\n\n* * * * * * * * * * * * * *\n\n\"Hi Don.\" said FBI Supervisory Special Agent Ted Crenshaw as he answered my call. \"Is this about Cerone coming up to your Town & County today?\"\n\n\"Uh, no.\" I said, surprised. \"I called about something else, and let me ask about it first. Do you work with DEA SSA Dwight Stevens down there in Southport?\"\n\n\"Oh sure.\" said Crenshaw. \"He works out of the City, but our DEA Agent down here, Juan Alberto Morales, works with him all the time. Why?\"\n\n\"Is Stevens down there now?\" I asked. \"Or have you heard from him? And what I'm really asking is for you to tell me in confidence if he's on an undercover mission down there.\"\n\n\"Uhhh...\" stammered Crenshaw, and I could tell he was deciding what he should tell me, if anything. Then he said \"Hold on one second.\" After several seconds, he got back on the line and said \"Okay, I see you had Commander Ross call Tim Jenkins.\"\n\n\"Just to save time.\" I said. \"And this really is urgent, or I wouldn't be bothering either of you.\"\n\n\"I get that.\" said Crenshaw. \"Okay, here's the story. Stevens has very recently been working on a guy who has a home down here, across the State Line River, but has been spending most of his time up your way. Stevens thought he was the Mob's man bringing drugs to University students, or at least the means to worm the DEA's way into whatever organization is up there. Problem is... that man came up dead the other day, and I'm sure you're working on that case now.\"\n\n\"Yes I am.\" I said. \"What about DEA Agent Fred Merkle?\"\n\n\"Oh, him.\" said Crenshaw. \"We came across him while watching Mob figures down here. Turns out he's DEA, but he's never checked in with us to let us know who he is. Then we got word from Rutherford Lyndon, the DEA's SAC in this region, that Merkle was probably undercover when we saw him, so we should leave him alone.\" \n\n\"Is there any information you can get on all that and send to me?\" I asked.\n\n\"No.\" said Crenshaw. \"I do know Merkle has another DEA Agent working with him, but I don't know who that is. Morales said he's being kept out of the loop, as well. I bitched to Jack Muscone about the lack of communication between them and us, and Muscone said he'd ask about it. And I think he did, and also got a runaround. And that's all I know.\"\n\n\"Okay, thanks very much for the info. I owe you one.\" I said. \"So what was that about Cerone coming up here?\"\n\n\"Yeah.\" said Crenshaw. \"As you know, we've continued to watch Cerone, even though it looks like he really did get clean... if a State Legislator can be clean, but I digress. Anyway, he left Midtown for your Town & County early this morning, even though the Legislature is in session. Not sure what it is that couldn't wait until tomorrow, Saturday, but he's up there...\"\n\n* * * * * * * * * * * * * *\n\nBack in Cindy's office, after I told her what Crenshaw had told me, she said \"Tim told me the same thing. And Crenshaw realized he was talking to me while Crenshaw was talking to you, and I told Tim we were trying to save time, as you suggested we do if they caught on to us. Tim said one extra thing, though: he thought that Stevens and Merkle may not be working together, that Merkle was on his own mission, and Stevens wasn't aware of it until very recently. But Stevens hasn't been forthcoming, either.\" \n\nI nodded. \"Well,\" I said, \"at least it's not just me that Stevens isn't trusting. But I'm really disappointed in him.\"\n\nCindy said \"Yeah, I thought he was one of the good guys. Why is he doing this?\"\n\nI replied \"Well, I don't think he's a Swamp Frog. But remembering the Marcie Harper case, I think he wanted to take the credit for busting her up, but that didn't work out for him.\" (Author's note: 'Schoolhouse Rock'.) \n\nI continued: \"So he and Merkle get onto Carlton Fisher, a.k.a. Bellows, and they think they've got a big connection between the Southport Mob and a drug pipeline into this County. And they'd just love to make a bust, especially right under my nose. But things went wrong for them again, and Fisher came over all dead. And because they won't trust me, I can't get the data I need to bust a murderer and prevent more people from getting killed... possibly these aforementioned uncooperative DEA Agents.\"\n\n\"So you don't know who killed Fisher?\" Cindy asked, peering hard at me.\n\n\"No, I don't.\" I said. \"If we can find burners that have those coded texts, we're on our way. And with that, we're right back to the DEA not cooperating again. If they have anything at all on James Hamm, we could use it to get warrants.\"\n\n\"So you think he's the one?\" Cindy asked. \n\nI just threw up my hands in a shrug. \"I don't know. I just don't know.\" I said. I got up. \"Thanks for your help. I'd take you to lunch, but I'm expecting a phone call---\"\n\n*BRING!* *BRING!* *BRING!* *BRING!*\n\n\"And there it is.\" I said. Answering, I said \"Hello, Mr. Cerone, how can I help you?...\"\n\nPart 15 - Critical Mass\n\nDressed in civilian attire with my badge on my belt and my gun holstered under my armpit, I was escorted by the Manager of the local Luigi's Italian Restaurant to the private dining room upstairs. State Senator Jimmy 'Coffin' Cerone was at the back table by the window, looking out over the gray skies and the barren fields beyond the River.\n\n\"Thank you for coming, Commander.\" Cerone said as we shook hands and sat down opposite each other, Cerone looking left and me looking right to see through the window. \"I know you're a very busy man.\"\n\n\"And you're even busier, with the Legislature in session... in Midtown.\" I said, and Cerone got my meaning.\n\n\"Yes,\" he said, \"but it's all Committee meetings today, and nothing is moving at all. Forgive my crudeness, but this Impeachment talk is like a bowel blockage, and nothing else can get through.\"\n\n\"An admirably exact analogy.\" I said. \"I'm a little surprised you came up here, to my County, though, what with the murder case and all.\"\n\n\"I had some things I need to tell you about.\" said Cerone. \"And why would your murder case affect me in any way?\" I peered at Cerone. He seemed genuinely surprised at what I'd said.\n\n\"You know our victim was Carl Fisher?\" I said.\n\n\"I heard the name on the news, but it means nothing to me.\" Cerone said. Then he peered at me. \"What's it about?\"\n\n\"Did you know a man named Carlton Ernest Bellows?\" I asked.\n\nCerone looked confused as he said \"Yeah, he was my brokerage investor for a long time. Legitimate all the way. Why?\"\n\nI had a vibe, and said \"Wow, you really don't know... Carl Fisher is Carlton Bellows. Or was.\"\n\nCerone looked genuinely shocked. He stared at me in stunned disbelief as he asked \"Really? Are you serious?\"\n\nI took out my Police iPhone and brought up Fisher's photo. \"Does he look familiar?\" I asked as I showed Cerone the photo.\n\n\"Holy shit.\" Cerone muttered under his breath. Then he sat back, looking dazed, and said \"No, I had no idea. And no, I might not've come up here if I'd known. But I'm here, so if you have something to ask, go ahead.\"\n\nI said \"He was investing your money?\"\n\n\"Yeah.\" said Cerone. \"Back when I was running my businesses in Southport. He did very well with my money, too. One reason I was able to retire and be a humble Servant of the People in the State Legislature is because my investments with him did so well. And it was all clean and aboveboard, too.\"\n\n\"Yes, it's all good.\" I said. \"Were you his only client? Or did any of your... associates... invest with him, also?\"\n\n\"I was his biggest client, by far.\" said Cerone. \"He sold off everything after I retired. Orrin B. Taggart chose not to invest with Bellows, one of Taggart's less wise choices, if you ask me. And as far as I know, Bellows had plenty of money, a nice house across the State Line River in a good neighborhood, paid for. He didn't really need to work anymore. So how did he get himself killed? And under another name, you say?\"\n\n\"Looks like it.\" I said. \"He was shot, double tap to the chest. And we have very little to go on as to who killed him, and why.\"\n\nOur food came, a casserole of lasagna. And for the first time in my memory, Cerone seemed to have lost his appetite. He picked at his food as I hungrily consumed two platefuls of the delicious dish.\n\n\"So,\" I said as I finished up, \"what did you want to talk to me about?\"\n\n\"Ah, yes.\" said Cerone, perking up a bit. \"As you know, Senator Molinari and I have become something of the State Senate's 'brokerage house', for lack of a better term. And you know how things work: we have lunches with our Senate colleagues of both Parties, and Members of the State House, good excuses to have some good food, if nothing else. And we talk about bills, and getting them through, and who trades what for what. Especially with the Budget.\"\n\nCerone's appetite had returned, and he consumed his lasagna and got some more. I slowed down my eating, patiently waiting for him until he continued: \"This year... it's different. Unlike anything most of us have ever seen. First of all, no one is talking about the Budget. At all. It's almost like everyone is conceding there won't be a Budget this year.\" I nodded.\n\n\"Second,\" said Cerone, \"the State House Select Committee is going through the motions on Impeachment, but there are no strategy sessions about it. However, there are meetings going on, especially meetings of the House and Senate Black Caucus Democrats. I thought they were about Impeachment... but they're not, and I can't get anyone to tell me what they are about. All I can get is that it's about defunding the Police, and they'll start publicly chanting about it when some incident occurs between the Police and blacks.\" I nodded, mostly wondering if D.A. Miriam Walters knew something about that.\n\n\"And that brings things around to you, Commander Troy.\" said Cerone. \"Your name is being brought up a lot, and in a manner of 'we have to get Commander Troy out of the way'. Despite our best efforts, which are considerable, neither Molinari nor I could find out exactly why they want you out of the way, or how they plan to do it. But something's coming... and soon.\" I nodded.\n\nCerone said \"And as part of that... well, you know that Katherine Woodburn and I have become pretty good friends the last few years. She's really become a leader in the Senate and among State Democrats. I was thinking she might run for Governor this year, or Lieutenant Governor, but she says she's re-running for her State Senate seat. Of course she's young, there's plenty of time for her to move up the ladder of political power.\"\n\nCerone: \"She also won't admit it, but she has a huge crush on you, Don. I suspect you're the only man in this State who has balls enough to impress her.\" I (almost) silently began whimpering with laughter, shaking my head. Cerone helped himself to more of the salad.\n\nCerone: \"Well, Katherine hasn't been saying much to me lately, not even 'No!' on Budget issues. And she's been meeting with Tasheeka Harris, who has been leading the charge against Jared in the Impeachment inquiry, and also is very active with Maxine Watts and the 'Black Voices Raised' group. Those meetings may be about the US DOJ's civil rights lawsuit against the TCPD and against your Mayor, but they're definitely about you.\"\n\nCerone: \"And last but not least, Katherine has been meeting with Bettina Wurtzburg. No less than four times since the Legislative session started. And down in Midtown, not up here. I know Katherine used to own KXTC and she's still good friends with Bettina, but they've never met that often before, at least not in Midtown. I casually asked Katherine about it, and she just said she's giving interviews to local reporters in her District.\"\n\nCerone: \"But on one of those visits, Bettina Wurtzburg brought a guest, a woman, and the three of them met for over an hour just a couple of days ago. Not that he was trying, but one of my staffers just happened to see them coming out of Katherine's office, and just happened to have been using his iPhone and got this.\" \n\nHe showed me a photo on his iPhone, taken from the video the staffer had shot. I recognized Katherine Woodburn and Bettina Wurtzburg...\n\n...and I recognized the third woman, as well: FBI EAD Dr. Robin Isley! \n\n* * * * * * * * * * * * * *\n\nWhen I got back to my office, my assistant Helena said that Lt. Myron Milton had called and asked to see me as soon as I got back. I asked her to call him and tell him to come to my office. Moments later, he came in and sat down at my bidding.\n\n\"I pinged the cellphones that SAC Lyndon was calling.\" said Myron. \"One of them, Dwight Stevens's phone, was pinging from the Federal Building. I have to be careful there, because of their Communications Room on the top floor. It's highly classified, and I want no part of being seen pinging phones anywhere near it.\"",
        "\"I don't blame you.\" I said. \"What about the other two guys, Merkle and Ripley?\"\n\n\"Their phones are shut off, and I couldn't turn them on.\" Myron said. \"And they haven't pinged off any tower in the tri-State region up here for several hours. The last pings we got triangulated to the old Post Office Building behind the Federal Building. We know the Feds use that building sometimes as a staging area or annex.\"\n\nI nodded. \"Okay, so Merkle and Ripley are undercover, I would guess. Did you ping James Hamm's cellphone?\"\n\n\"Yes sir.\" said Myron. \"It's at the Campus Sanitation Department, probably his office. It hasn't moved for hours. Mary had Goodwright and Scott of Intel go through the parking lot in their unmarked POV on the way to lunch, and Hamm's car was there, in its marked space.\"\n\nI nodded. \"All right, thanks Myron. And keep trying to find Merkle and Ripley...\"\n\nAfter Myron left, I sat there for long minutes, in what some would call a reverie, but was actually me trying to decide what to do. This was the part of my job that sucked, but was where I earned my money. I could have Commander Croyle flood the malls and major parking lots with patrols, hopefully scaring off any drug deals. But if I stopped the DEA from making a good bust, future drug sales to our School students would be my fault, on me. But if I did nothing, and Agents died because of my inaction, that'd be worse...\n\nPart 16 - Detonation\n\n2:30pm, Friday, January 10th. My Police iPhone rang.\n\n\"This is Artis Lattimore.\" said Artis Lattimore. \"I can't get a hold of Ripley at all. His vehicle is parked at the Old Post Office, but nobody's there. I went to the Federal Building, but they wouldn't let me past the first floor, even with my badge.\" As a D.A.'s Investigator, Lattimore had a gold badge that looked like the TCPD, TCFD, etc., but it was in black lettering with the Scales of Justice instead of the Public Safety insignia.\n\n\"All right, thanks.\" I said. After disconnecting, I called Jack Muscone. Somewhat to my surprise, he answered. \n\n\"Sorry, Don, but I've got nothing.\" said Muscone. \"Lyndon's en route back to the City. Stevens is upstairs in the Communications Room, so I think the DEA is doing a drug sting. I'll see if I can get something out of him.\"\n\n\"All right, thanks.\" I said. Very frustrated, I headed towards MCD. Detectives and their Captain were in a semi-circle around the whiteboards. Commander Ross was listening in.\n\n\"Hello, sir.\" said Captain Perlman. \"We're going over all this again, from the beginning, if you'd like to join us.\"\n\n\"Don't mind if I do.\" I said, pulling up the 'Commander's chair' from the back corner near the coffeemaker. \"Please, carry on.\"\n\nJulia Rodriguez said \"We agreed that we've concentrated too hard on the drug angle, and need to go back to the murder itself. We have a little more from the State Crime Lab's Ballistics team. They confirm that the slug recovered from the body was a 9mmP round, and it traveled downward through the victim's chest, suggesting he was on his knees when he was shot.\"\n\nJulia: \"His clothing from the pants down is that of a white-collar business man, but the flannel shirt and windbreaker are more representative of the working class. We since learned that he had identities that were of each class, but why the mixed attire is one of the many 'strangenesses' of this case.\"\n\n\"You got that right.\" I murmured.\n\nJulia went right on: \"His watch was set wrong; it was forty minutes behind the correct time. And why bother having a watch, when a cellphone would give the correct time?\"\n\n\"Cellphones can be traced.\" said Roark Coleman. \"Old-style wristwatches, not so much. But yeah, they can be wrong.\"\n\nSomething about that comment piqued me, as if a lock in my head were being turned, and the first tumbler crashing into place...\n\nJulia: \"Moving on, he did not bleed out where he was found, suggesting his body was moved. A thorough examination of Southpoint Mall and its parking lots have found no blood, which isn't easy to just wipe up, though the snow that night and it melting might've washed some of that away. But the bottom line is that we don't really have a crime scene where he was shot, only the place where he was found.\"\n\n\"Let's pause here.\" Tanya Perlman said. \"Why bother moving him? Why was it so imperative he not be found where he was shot?\"\n\n\"Stating the obvious,\" said Theo Washington, \"the place he was shot must be somewhere that could lead us back to the killer.\"\n\n\"Thanks for that, Captain Obvious.\" quipped Teddy Parker.\n\n\"Oh, you ain't making Captain in this here Police Force with that.\" Cindy Ross said. \"I think it's obvious that what Commander Troy said earlier is true: they wanted us to find the body.\"\n\nAnother tumbler in my mind was crashing into place as I replied: \"I never was a Captain in this here Police Force. So both theses can be true. They didn't want to find it at Point A, and did want us to find it at Point B, emphasis simply on finding it.\"\n\nJulia: \"And there were strangenesses with that, too, sir. Two mock Gas Company trucks block traffic long enough to dump the body where it can be seen, suggesting a ring of multiple persons in this gang.\"\n\n\"Hell,\" said George Newman, meaning it lightly, \"maybe it was the DEA that moved the body after their sting went wrong.\"\n\nTime slowed down.\n\nI literally felt the last of the tumblers crashing into place in my mind, unlocking it. Suddenly, I was seeing it, all of it. \"Whaa?\" I gasped. \"Ohhhhhh shiiiiitttt...\"\n\n\"What is it, sir?\" asked Tanya.\n\n\"Newman gets the blue crowbar for this.\" I gasped. And then I unconsciously began giving orders: \"Ross! Get your armor and your crowbar, and come with me. The rest of you, get your armor and weapons, and get ready! I'll radio in where you'll need to go.\"\n\nAnd with that, I was racing out of the room and to my office. I threw off my trenchcoat, put on my armor, and put my trenchcoat back on. As I was exiting the office, Cindy was exiting hers.\n\n\"Where to?\" she asked.\n\n\"The Federal Building!\" I all but yelled as I flew out of the anteroom and down the hall, Cindy racing to keep up.\n\n* * * * * * * * * * * * * *\n\n\"I'm coming over there!\" I yelled into my cellphone as I drove out of the parking lot, with Cindy riding shotgun. \"Get him out of the Communications Room, or I'll bust in there to find him!\"\n\nMy Police SUV easily bypassed the barricades on Elm Street that closed it off to vehicle traffic, by going over the curb. I flew up to the Federal Building. Cindy scampered after me as I flew into the building.\n\nI just held up my badge as I flew past the guards to the FBI suite. I burst into the Conference Room, where Jack Muscone, Karina White, and Dwight Stevens were.\n\n\"Where is it?\" I yelled at Stevens. \"Where is the drug deal going down? Where are they meeting?\"\n\n\"That's none of your goddamned business.\" snarled Stevens.\n\n\"Look, your Agents are walking into an ambush!\" I said. \"I need to know----\"\n\n\"NO!\" yelled Stevens. \"This deal is going down! It's in progress now! You stay out of our business!\"\n\n\"God-DAMMIT, Stevens!\" I yelled. \"Why won't you fucking TRUST me?!\"\n\n\"After what you pulled with Marcie Harper, asshole?\" Stevens yelled back as loudly as he could. \"Why SHOULD I trust you?\"\n\n\"BECAUSE I'M TRYING TO SAVE YOUR AGENT'S LIFE, GOD DAMN YOU!\" I yelled back. \"WHERE IS THE DEAL GOING DOWN?\"\n\n\"Come on, Dwight, tell him!\" yelled Muscone. \"That's an order! TELL HIM!\"\n\n\"NO!\" yelled Stevens. \"You're not my boss! This is the DEA's operation! Both of you stay out of it!\"\n\n\"I don't have time for this shit.\" I growled, turning for the door. \"Your Agent is dead if I don't find him in time! Come on, Ross!\"\n\nCindy followed me, and we ran down the stairs and back to my Police SUV. A cloud of black smoke from burning rubber rose as the sound of screeching tires echoed over Courthouse Square...\n\n*BRING!* *BRING!* *BRING!* *BRING!*\n\nIt was my Police iPhone. Cindy answered it for me...\n\n* * * * * * * * * * * * * *\n\n\"There he is.\" said Fred Merkle as he drove his Toyota Corolla through the back parking lot of the Southpoint Mall, seeing the older model pickup truck parked near the back entrance, right next to the wall of the building, almost camouflaging it. \"You know what to do.\"\n\n\"I'm your bodyguard, holding the cash.\" said Jackson Ripley. \"We make the exchange, then we drive out, and the other team comes in and takes him down.\"\n\n\"Got your armor on?\" asked Merkle. \"Not that you'll need it or anything.\"\n\n\"Yeah, but it's thin, like you suggested.\" said Ripley. \"It won't be obvious on my body, but small-caliber rounds can get through it.\"\n\n\"Don't sweat it.\" said Merkle as he stopped, his car facing the other vehicle head-on. \"Okay, here we go.\"\n\nThey got out of their van, and the driver of the pickup truck also got out.\n\n\"I wasn't expecting you.\" Merkle said. \"Do you have the product?\"\n\n\"Who is this guy?\" asked the other man. \"You brought a nigger with you?\n\n\"He's my bodyguard.\" said Merkle. \"I've got the 22K, and I don't like carrying this much cash alone. I'm surprised you're alone. Do you really have the product on you?\"\n\n\"Of course.\" said the other man. \"But I have one question first: what time is it?\"\n\nTo be continued.\n\nDear Readers, you have the clues. What is going on? And who murdered Carl Fisher? Answers in the exciting concluuuuusion of the story..."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "crime drama",
        "drama",
        "iron crowbar",
        "mystery",
        "police drama"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/time-flies-ch-03"
}