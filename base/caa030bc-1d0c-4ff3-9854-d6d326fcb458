{
    "title": "The Office Hottie Ch. 04",
    "pages": [
        "Saturday morning I woke a bit on the early side than usual. Kisa was there at her normal spot at the foot of the bed, curled up and sleeping peacefully. I was really looking forward to getting out, I've been on a naughty kick the past few days and wanted to go out and really explore, have some fun with my body somewhere besides at home. My mind had been on the neighborhood park and was thinking of a few naughty things to do there. \n\nI took a quick shower and shaved my armpits, legs, and pubic area. I wanted to look my sexiest for my world exposure. I put on a pair of tiny, white bikini panties and padded around the apartment enjoying my nakedness while I made breakfast and ate. I made a cup of coffee and sat in my panties drinking it while fondling my boobs and made naughty plans for the day. The more I thought about it the hornier I got and almost started playing with myself right there. I forced myself to calm down, saving my playtime for the park and gathered my things. \n\nI decided to wear a short jeans skirt, something easy to get in and out of. I put on a thin shear bra and for a top I chose a red, short-sleeve half shirt that buttoned in the front and left my belly bare. I've had the top for a few years and, between washings and my bust growing, it now seemed like it was a half size too small. My boobs looked like they strained to burst out, threatening to pop some buttons. In fact, it was difficult to take a deep breath in. For that reason I never wore it anymore but today it seemed perfect. It was easy to see my bra inside between the button holes and I loved the way it made me look and feel sexy. Sexy without being slutty. \n\nI brushed my hair, pulled it back into a ponytail and contemplated wearing my old softball hat but decided against it, fewer things were better, I thought. I added a quick touch of makeup then grabbed a small knapsack and threw in my hairbrush, a full water bottle, an extra pair of panties and a T-shirt, then added a small package of tissues, a few paper towels, a plastic shopping bag, and a small hand towel in case I needed something to sit on. Feeling fresh and horny, I put on a pair of light sandals and set out to explore my naughty day. \n\nI left a little after 10:00 and drove over to the park. It was a very nice morning, warm and sunny and the lot was only about half full. The park was busy and sure to fill up soon. I found a place to park, grabbed my knapsack and my sunglasses, locked the doors and headed into the park. \n\nI walked out to one of the picnic tables that had a pretty good view of the park and sat down to survey everything. Most everybody was either at another table or in some trees for shade. A couple families were on the far side in the kiddie area. I was a little intimidated by all the people at first, but the longer I sat there the more comfortable, and brave, I became. \n\nI leaned forward and looked around, there was the occasional looker but no one really watching me. I reached up and slowly pulled the bra strap off my right shoulder, down around my elbow and pulled my arm out. I waited then did the same for my left bra strap. I sat and waited, looking around, when I was sure no one was watching I reached behind up under my top and unhooked my bra. So many people around but no one near, it felt exciting what I was about to do. I waited and looked one last time, reached up under my top and pulled my bra out, folded it up and set it in the table. \n\nMy tits felt so good being braless and set free, looking down I could see my excited nipples poking through my top. It was very obvious I was braless, and I scratched a nail across my nipples feeling little electric jolts through them and into my breasts. This turned out to be a dangerous top, anyone looking at the right angle could see my boobs inside between the button holes and the buttons looked and felt like they'd pop any second. That just added to my excitement and I unbuttoned the top two and folded them under exposing some cleavage, making it more dangerous. I looked and was feeling really sexy, I could feel my pussy was already wet. Time for a little parade. \n\nI stood up and grabbed my bra but held onto it still folded as I walked the path around the park, almost as proof to the world I was braless. I wandered around avoiding families with kids. My tits bounced lightly with each step and I got a few looks, mostly from guys but a few girls, too. I ignored them all and continued walking, enjoying my little show. My pussy was enjoying the show too, getting warm and tingly. \n\nI wandered out into the grassy area, it had been mowed just within the last day or so and looked comfortable to sit on. I walked out to the middle of it and sat down cross legged, placed my bra on the grass in front of me and surveyed the area. With my sunglasses on I watched the people in the park, I was far enough away from people where no one would be able to see very much. I was looking sexy, feeling sexy, and getting looks from several guys around the area but I was too far away for anyone to get a good look. A perfect little tease for them and myself. I sat back with my arms behind me, and my legs flat in the ground spread out in front of me. My skirt was just long enough to cover my private area.\n\nI tilted my head back and let the sun warm my face and body, baking my braless tits under my top. I wanted to get naked so bad, my pussy did, too. I sat forward and looked around, seemed like everybody had stopped looking my way. I turned so I wasn't facing anybody directly then sat for a while and looked around to see if anyone was watching me. Seeing the coast was clear I hitched my skirt up, put a thumb under each band of my panties, gave one last look and lifted my butt just quick enough to slide my panties past. Mmmm.. the feeling of the warm, freshly mowed grass poking my bare butt like a hundred little needles. I waited and looked around again and slid my panties to my knees. I looked around one last time and slid one leg out of my panties then the other and laid them next to my bra. I crossed my legs, pulled my skirt up a bit and leaned back again, tilted my head back; my face, my braless tits and my pussy soaking up the sun. \n\nMmmm... the feeling of my bare pussy freely exposed to the world, the mowed grass poking my butt. So many people around. Erotic as hell, my wet kitty was warm and tingly. It was all I could do to keep my fingers away from it, I wanted to stroke it so much. I wanted to get naked really bad. In due time, I told myself, in due time. Right now just enjoy the tease of my body and my mind. Let the sexual tension build. \n\nI sat back with my legs flat on the ground and spread a little. enjoying the sun on my braless boobs under my shirt, my nipples poking through making it evident I was braless, and excited. I scratched a fingernail across each nipple, teasing then to full erectness. I undid another button and folded the shirt under, increasing my cleavage, just one strained button keeping it from springing open. \n\nMmmm... I felt so sexy, out In the middle of the field, exposing myself, soaking up some sun. I sat there for a few minutes letting my arousal build and wanting so much to touch myself. I sat up and looked around, no one was watching. I unbuttoned my top all the way and let it hang loose but still covering my boobs and sat back again. \n\nAnyone walking close by would have had quite the treat seeing me there, half naked, my top barely covering my tits and such an easy upskirt view of my pussy. It was so erotic and it was all I could do to keep my top on and my hands off my pussy. I leaned forward letting the top hang loose and exposing my boobs. I played in the grass with one hand and reached up with the other and caressed a breast, lightly teasing the nipple with my nails. \n\nExcept for the wet T-shirt contest with my girlfriend Denni, I'd never done any public exhibition like this before and it was really getting me excited. I had to find a place and fondle myself until I cum. I buttoned the first few buttons of the top, leaving some cleavage showing, then stuffed my panties and bra in the knapsack, stood up and brushed the grass off my butt and headed over to some trees. \n\nThe trees didn't offer as much privacy as I wanted and I walked around the park looking for a nice place. Too many people around and I thought I might have missed my chance until I found a picnic table by itself. I sat down on it facing the park with my back to the woods. This would do very nicely.\n\nThe nearest people were three couples and close but not so close that they'd see very much if I was careful. The girls were attractive and wore shorts and T-shirt's or halters. I should have brought a book or something to make it look like I was reading. Instead I put my knapsack on the table and made like I was fussing over something. I sat there a few minutes watching them and moved my hand up under my top caressing and squeezing my boobs. Sure enough, the last button popped free and I hurriedly buttoned it back up. I was really wet and my pussy had been ignored for way too long. \n\nI scooted closer to the edge of the bench and spread my knees wide as I lowered a hand towards my ravenous pussy. I closed my eyes and shuddered when a finger found my love button, very wet, engorged and eager to play. I stroked it a few times with one finger and teased my nipples with the other hand while watching the girls through my sunglasses.\n\nMmmm... the pleasurous feeling was exquisite, so erotic. Masturbating outside in a public place, surrounded by so many people. I was very well placed and could see everybody, my hand hidden under the table and stroking my clit, occasionally dipping a finger inside. I was so wet, so dripping wet, I lifted my skirt to avoid getting it wet. The bench surface was rough and had some gravel on it digging into my butt cheeks. I thought about getting out my towel to sit on but I loved the feel of the rough surface of the bench on my bare butt. I discovered braces on each end of the table and I put a foot up on each brace, my legs spread wide, my pussy exposed to the world under the table. It was an awkward position but made it so easy to stroke my pussy and slide a finger in and out. \n\nThe girl in the halter was really cute and sweet; medium height, long auburn hair, pretty green eyes and lips that just begged to be kissed. The halter she wore was filled out nicely with her boobs but covered way too much, I thought. Her butt was a little on the big side but her shorts hugged her just right and I thought she'd look just fine sitting on my face. I wished so much I could have gone up to her and dragged her off into the woods for some mutual pussy licking. \n\nI wanted to finger fuck myself so bad but knew it would be very obvious. I had to be careful out here and keep my motions in check. It was so erotic and I felt an orgasm coming. I continued stroking my clit in shorter, faster strokes with just my palm moving. The couples weren't paying any attention to me and I tried to keep watching the girls without being obvious as I came in a sudden explosion of ecstasy. Mmmm... that was sweet, I thought as I licked my pussy juice off my finger. \n\nThe park was getting really crowded and I needed a change of pace and more privacy. I took a couple paper towels out of my pack and cleaned my pussy and thighs, folded them up and put them inside the plastic bag. I stood up and brushed the dirt off my bare butt, grabbed my knapsack and smiled at the wet spot I left on the bench as I walked away. \n\nThe path took me by the couples on the way to the parking lot and I took my sunglasses off so I could get a good look, they said hi as I passed and I smiled a hi back and bravely gave a wink to the hot one, dropping my eyes to her boobs. She smiled back which really aroused my interest, and my pussy, wondering how far I could take things. \n\nThe car was hot inside and I ran the AC to cool it down. While I was waiting I unbuttoned my top all the way and let it hang loose with my boobs showing. My pussy tingled in delight at what I looked like and as I drove through the parking lot I passed a couple of guys. I moved to cover myself but I had a clear escape route in front of me and let my arms drop as I slowly passed by. Neither one looked at me and in a way I was a bit disappointed. Their loss, they would have been pleasantly surprised had they been paying attention. \n\nI drove down to the nature sanctuary with my tits hanging out, loving the naughty feeling I had. I did get a little nervous while sitting at a red light but managed to position myself so I wasn't in a direct line of site with anybody. It was a busy intersection, one guy ended up checking me out but I didn't think he could see my boobs and I ignored him. But maybe he did, I smiled naughtily. Once I got to the sanctuary I parked and buttoned up my top except for the top three and folded it under to expose my cleavage, got out with my knapsack and locked the doors. \n\nThe sanctuary has several nature trails, all very easy, level and well maintained. They take you through a variety of wooded, grassy, and wetland areas and there's always squirrels, rabbits, the occasional moose, tons of songbirds, and ducks and geese, especially in the spring. \n\nI set out on one of the longer loops and noted that there were only a couple of cars in the parking lot, it didn't appear that there would be too many people on the trails. The mosquitoes were relatively non-existent this time of day and once I got out of sight of the parking lot I unbuttoned my top and took it off. \n\nIt felt so wonderful to be walking through the woods, topless, my firm boobs lightly bouncing as I walked, wearing only my jeans skirt and no panties. I wanted to take it off too, but really didn't want to push it. The woods weren't that thick and could probably see people coming but I was risking it as it was. \n\nIt was pretty hot in the grassy field at the park but in the shade of the woods it was relatively cool. My nipples were hard in the cool air and I plucked at them occasionally as I walked. The air was alive with bird song and the earthy smell of the woods, full of birch and spruce, lots of wild rose bushes and alders, wild flowers in abundance, with the occasional blueberry and raspberry patch. Way too early for berries but I kept them in mind for later in the season. \n\nThe trails have wooden benches set up here and there for resting. I found one that had a good view on the trail on both sides and sat down. I leaned back and massaged my boobs and ran my hands all over my body. I plucked a dandelion and brushed the flower across my nipples, feeling the petals tickling them. The flower left a yellow dusting of pollen and I wished I could have licked it off. I was incredibly horny but kept my fingers off my pussy. It was wet and really wanted my finger inside but I knew I'd get lost in it and I certainly didn't want to get surprised by anyone. \n\nI stood up and continued walking down the trail, my firm naked tits lightly bouncing with each step. I fondled them and plucked at my nipples, teasing them and myself. I relished in my nakedness in the woods, feeling like a wood nymph or a fairy. It was so erotic and I was so turned on that I almost didn't hear the voices coming. I dropped my knapsack and hurriedly put my top on, managing to keep a tree between me and the hikers. I'd just got the last button done and picked up my pack when an elderly couple came into view. \n\nWe said hello as we passed and the gentleman respectfully kept his eyes to himself. I gave it time to put some distance between us before wanting to take my top off again when two ladies came walking down the trail. I decided to keep it on after that but undid all the buttons and let the top hang with my tits bare. \n\nMy pussy was really in need of attention when I found another bench to sit on. I sat, pulled my skirt up and spread my knees wide with my ankles together, exposing my pussy to the woods. My kitty was so wet and begging for attention so much I couldn't stand it. I moaned and threw my head back as my finger slid right in all the way. I finger fucked myself while fondling my tits, feeling an orgasm building up. More voices coming, I reluctantly stopped and buttoned my top then stood up to continue down the trail passing a young couple. \n\nI was getting frustrated but told myself it's all part of the tease, almost like someone else being in control of me. The anticipation of my next lust stop was starting to drive me wild. I'd occasionally stop and squat down, finger fuck myself for a little while, then continue on. \n\nThe trail eventually opened up to a wide grassy glade. In the middle of it was a platform about ten feet off the ground with solid wood sides. Oh, that would be so perfect, I thought. I quickened my pace making my tits bounce a little harder. I got closer and realized a man and two women were up top but by the time I got to the bottom of the stairs they were coming down. \n\nWe exchanged hellos and I quickly ran up the stairs. At the top I had an amazing view of the area, I could see the trail from one side of the glade to the other and would know if someone was coming. This was perfect as I dropped my knapsack, unbuttoned and removed my top. I stood there topless until the threesome went down the trail into the woods and I took my skirt off. \n\nAt last I was naked, outside basking in the sunshine, horny as hell and really wanting to fuck something. Mmmm... I really wish I had a cock to fuck. It was unfortunate that there weren't benches on the platform but the sides were high enough I could lean against them comfortably. Each side had a plaque describing the local flora and fauna. I leaned on one of them resting my naked boobs on the wood while keeping an eye on the trails. The plaque was hot and I could almost feel my tits sizzle against them, my nipples heating up with pleasure. \n\nI walked around the platform enjoying my nakedness. I mashed my tits on the warm wood of the rails, moving back an forth and dragging my nipples along the rough wood, wincing with pleasure occasionally as they'd catch on something. I turned, leaning my back against the side and ran my hands over my body, caressing my naked body and my bare boobs. \n\nThe platform was hot and I was thirsty. I pulled my water bottle out of my pack and took a long swallow. Then I took the top off, sprinkled some water on my boobs and rubbed it in and my belly as it dribbled down. I dribbled a tiny stream on each nipple, teasing them to full, aching erectness. My kitty was craving for attention, I had put the water bottle down to pet it. I slipped a wet finger inside and moaned, the sweet pleasure of my pussy washing over me and I leaned my head back with my eyes closed, slowly finger fucking my pussy as I fondled my tits. I switched hands and sucked my pussy juice off my finger while fucking myself with the other. \n\nI so wish I had a toy and made myself promise to shop for something when I got home. Then I remembered my hairbrush. I tore the pack open and took out my brush. A bit on the skinny side but would do just fine. I surveyed the area making sure I was alone, squatted down in the sunny corner of the platform and inserted the handle of my brush, pushing it in slow, as deep as it would go, the bristles of the brush tickling my lips. \n\nMmmm... fuck, that felt so good, my head laid back and eyes closed, the brush sliding in and out of my wet pussy, my other hand squeezing my tits, pinching and pulling my nipples. Faster and faster I worked my brush inside me, an orgasm was fast approaching. I stopped my pussy fuck and stood up, surveying the area, I was still alone, naked on the platform, horny as hell, with a pussy screaming for an orgasm. \n\nI leaned back in one corner and continued fucking my pussy, one hand on the brush and the other on my clit, gliding a finger on each side. The orgasm hit me like a title wave, crashing down on me as my body spasmed, I squeezed my eyes shut, sucked in a breath and held it as I came, waves of pleasure passing over me as I cursed and cried out. ",
        "Fuck, that was intense! I stood up and looked around, breathing hard and still fucking my pussy with the hairbrush. I was still alone and I leaned forward on the platform wall, my tits mashed up against the rough wood of the rail, my legs spread wide, my hand pumping my hairbrush in and out of my pussy, faster and faster until I came again, my knees buckling against the wall as I continued to fuck and held on through the intense orgasm. \n\nMy chest was heaving and I paused to catch my breath, my hairbrush stuck in my pussy and soaked with my juice. I leaned back against the rail, resting, each elbow on the rail, my tits stretched out soaking up the sun. I felt I could stay up here all day long, just fucking myself. \n\nMy pussy reluctantly released my hairbrush as I pulled it out. I turned around and leaned against the wall, sucking on the handle of the brush, tasting my sweet juice, as I admired the view. I felt sexually satisfied, for now, but knew I couldn't stay for long and felt lucky I didn't have any visitors. \n\nI took some paper towels out on my knapsack and wiped off the hairbrush, cleaned myself up and stashed the hairbrush and towels in the plastic bag. I took out my panties and put them on. I stood there on the platform, wearing nothing but my panties, fondling my boobs, as I looked around the grassy glade. I really wanted to stay and enjoy the beauty of the glade and my nakedness here but I knew it wouldn't be long before someone showed up. \n\nSure enough, a couple came out of the woods on the trail. I hurriedly put my skirt on and my top. I took one last look at the wet stain I left in the corner and smiled, I definitely will be back. \n\nI climbed down the stairs and continued along the trail, stopping every once in a while to take in the view, really feeling at peace with myself. My sexual appetite was satisfied for now but I still felt a little naughty streak and hurried back to the parking lot. Once in the car I pulled out of the parking lot, and headed towards the highway that ran through the middle of town. \n\nIt was hot in the car and rather than run the AC I rolled the front windows down. I pulled out on the on-ramp and sped up to highway speed. When I merged into traffic I took one hand and unbuttoned my top, wriggled out of it and put it on the passenger seat. Mmmm... the thrill of driving around with just a bra on was a great feeling. \n\nI managed to time the red lights and traffic so I wasn't right next to anybody. At the edge of town I stopped at a red light to make a u-turn to head back into town. While I was stopped I reached behind me and I did my bra. Once the light turns green I made the u-turn and headed back up the on-ramp onto the highway. \n\nOnce I got onto the highway I pulled the bra off. I loved the feeling of the air rushing into the car, totally topless and timing traffic so I didn't get stuck next to anybody only to have them ogle me. I know I got seen a couple times by some truckers and got honked at, it really added to my excitement and horniness. \n\nI stroked my pussy through my panties a few times while I drove and wanted to insert a finger but had to draw the line. I had to be careful and pay attention to the road but the feeling was just too good. I made a couple of circuits on the highway until my pussy begged for mercy. \n\nI took an off ramp and pulled into the Walmart parking lot. I'd been in there a number of times and knew there's a part of the parking lot that doesn't get much traffic. I drove over to that section and backed into a space by the fence as turned the engine off. I had a view of the entire section on the lot. \n\nI took my seatbelt off, raised the steering wheel and leaned the seat back to get comfortable. I kicked my sandles off and wriggled out of my jeans skirt then put it on the passenger seat. I sat there wearing just my panties, letting my hands roam over my boobs, my erect nipples, my belly, my thighs. I was so turned on, so excited thinking about my naked adventures of the day. \n\nI couldn't help it anymore and peeled my panties off and tossed them on the seat next to me. I remembered the towel, pulled it out of the glovebox and slide it under my butt. I also grabbed a couple of napkins and put them on top of my pile of clothes. I lifted my right leg and pulled it over the shifter to rest my thigh on the console with my foot on the passenger seat. I was in my own little erotic world; naked in my car, in the Walmart parking lot, with my wet pussy exposed to the world. \n\nI closed my eyes and laid my head back while I brushed my fingers over my naked nipples, pinching and pulling them. I moaned at the pleasurable feeling my nipples were giving me. I fondled my tits, groping and squeezing them, massaging and crushing them.  \n\nI so love to have my tits played with, the feeling I get from having them squeezed and massaged is heavenly, it gets me so wet and excited. Thoughts of Kelly and her tits swam back to me. I closed my eyes and imagined her hands on my tits, squeezing and massaging them. I dreamed of the two of us in the forest naked, kissing, playing with each other, our hands exploring each other's bodies. \n\nMy pussy was craving attention and I couldn't ignore it anymore. I slipped a finger in and sighed a luscious moan, my head back, my eyes rolling into the back of my head. In and out I finger fucked my pussy, my other hand gliding a finger on each side of my clit. The pleasure was exquisite, so sweet and wonderful. The feeling of my pleasure flooded my body, from my pussy to my tits, down to my toes and up into my head. \n\nI stopped fucking myself and ran my soaked fingers over my nipples, teasing the tips of them in little circles, lightly pinching them with my nails, delighting in the feeling that ran through them and into my breasts. I finger fucked my pussy more and rubbed my dripping fingers all over my nipples, my boobs, the slick skin of my tits glistening in the sunlight. I loved the feeling of my boobs as I massaged and squeezed them, so wishing Kelly was here massaging them so I could fuck myself. \n\nMmm.. maybe that hot little bitch at the park. She could be playing with my tits while Kelly licked and sucked my pussy, fucking it with her fingers. I dreamed about being ravished and violated by those two girls as my finger pumped in and out of my pussy, my other hand busy with my tits. \n\nAn orgasm was coming and I edged it away, it was strong and hard to control, threatening to crash over me. I stopped my pussy fuck to cool down, it was hot but a cool breeze was running through the car. My nipples were aching, my tits warm, I massaged and squeezed them, pinching and pulling my nipples. I was in serious heat, my sexual excitement pulling in my orgasm and getting stronger as I continued to play with my tits. \n\nI wondered if I could give myself a nipple orgasm but my pussy ached and begged to be fucked again. I plunged two fingers in deep, pumping then in and out, rubbing the palm on my clit, my other hand pinching and pulling my nipples. The harder I pushed my orgasm away the stronger it became. I tried to slow my finger fuck but my pussy wouldn't allow it, forcing me to continue pumping my fingers in and out. \n\nThe orgasm was coming and I felt I couldn't stop it, my pussy calling it, like a Siren, coaxing it closer and closer. I was moaning and crying, holding my breath and gritting my teeth, trying to push it away but it continued coming closer and closer, stronger and stronger. My fingers were a blur pumping in and out of my pussy, my nails cruelly pinching my nipples as the orgasm hit, a massive wave of sadistic sexual energy, waves of orgasmic pleasure washed over me. My back arched and I thrashed about in my seat as I came, my fingers pumping in and out as I came again, stronger, cumming and cumming. My hand couldn't stop fucking my pussy as it angrily demanded more. Another orgasm hit, my tits crushed under my hands, sobbing and crying as the sexual wave swept over me. \n\nI sat there breathing hard, my chest heaving, my pussy asking for one more, but my arm was too tired. I swallowed hard, gasping for breath. So thirsty but I couldn't sit up to get to my pack for the water bottle. Sweat plastered my hair on my forehead and I wiped a pussy soaked hand across it to wipe some away. I closed my eyes as I licked each finger, the salty, sweet taste of my pussy so delicious. \n\nI sat up in my seat almost expecting an audience gathered around my car as I realized I hadn't been keeping watch. No one was in sight, all the shoppers and cars were on the other side of the lot. I sat back wanting to doze but knew that was dangerous, I had pushed things as it was and considered myself lucky so far. \n\nI drew a deep breath and released it then opened my knapsack and took out the water bottle. I sucked hard on the bottle, not realizing how thirsty I was, and drew a deep pull of sweet water. I used some of the water and paper towels to clean off my hands then dampened a fresh towel and wiped down my forehead, face and my boobs. I sat there naked in my car, resting, contemplating my naughty day, smiling to myself, still slightly aroused. My pussy felt satisfied but still tingling, like it was resting but waiting for more.\n\nIt was way past noon and I was starving. I got dressed with my bra and the T-shirt and fresh panties from the pack. I straightened up the seat and the steering wheel, checked my hair and face in the mirror and pulled out, thinking of a cafe for lunch. \n\nAlong the way I kept thinking of my naughty day, the risks I took, the excitement, and my numerous orgasms. I'd kind of lost count. One really nice, long orgasm, that was awesome. Or were they three separate ones? The high was incredible. I love edging my orgasms, it brings the pleasure to a whole new level. \n\nMy fingers were fine but I needed more, the hairbrush was a good substitute but not adequate. It'd been a long while since I was fucked, and fucked good. I admit, I miss cock but am dealing with things from my ex and don't want to pursue anything. I started to smile at the thought of Kelly, naked with a strap-on and fucking me. That would most certainly satisfy me, but highly unlikely it would happen. \n\nTonight I was going shopping for a cock."
    ],
    "authorname": "Lorelei907",
    "tags": [
        "lesbian sex",
        "masturbation",
        "outdoor",
        "public",
        "public masturbation"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-office-hottie-ch-04"
}