{
    "title": "I Thought I Hated Him Ch. 09",
    "pages": [
        "[For Diatikan -- you cannot lose true friends - only misplace them for a while. Keep writing, my friend, you're better at it than you think. It's been a pleasure and honour to get to know you. Thank you for all your help. Wherever you are, I hope you are well.]\n\n*\n\nMrs. Kendall stood in the centre of the fire hall and laughed. The cleaning crew had come and gone, and around us the movers bustled about, cursing Daniel under their breaths as they moved his heavy furniture up the narrow, winding staircase to the second floor.\n\n\"You kids are crazy,\" Mrs. Kendall teased, wiping away her tears of mirth as Daniel ripped into yet another mover; we could hear him yelling from the second floor. \"Maddock's spitting nails about you two quitting, I'm sure.\"\n\nI shrugged, really no longer concerned about what Robert Maddock thought of me. He'd been unsurprised at my resignation from his firm and had sent me on my way with dire warnings of how I was \"throwing away my career\" and \"taking a chance on an unstable enterprise\", but for all his bluster there hadn't been any real concern behind his words. I'd been pleased to find I didn't care that I was leaving Maddock Architects.\n\n\"So, give me a tour,\" Mrs. Kendall chided with a good-natured grin. She certainly had not been upset that her architects had parted ways with their old firm. She made the transition with us gladly, which certainly bolstered my faith in the old Battle-axe. In fact, she was quite keen to be part of the process of Daniel starting his own firm, which is how I found myself giving her the tour on moving day.\n\n\"This will be our reception area, when and if Daniel ever gets around to hiring a receptionist,\" I began, starting the tour inside the front door. I lead Mrs. Kendall to the spot just inside the open fire-engine bay doors where the sun shone through the windows for the lengthiest part of the day. \"This is where Daniel and I are setting up our work stations and drafting tables, and back in the corner is where the boardroom table will be. There are two storage rooms along the rear of the building - one's going to remain storage for files and plans and the other we're renovating into washrooms for clients and staff.\"\n\n\"And upstairs?\" Mrs. Kendall prompted with a mischievous smile.\n\nI fell into her trap blindly. \"Oh, upstairs is Daniel's apartment.\"\n\n\"Just Daniel's?\" Mrs. Kendall teased.\n\nI stopped dead in my tracks, blushing. \"H-how'd you know?\"\n\nMrs. Kendall patted my arm gently. \"My Dear, I may be old, but I'm not blind yet. I see the way you two look at each other when you think no one is looking. I practically get hot flashes every time I'm caught in the cross-fire. Not that I blame you,\" she laughed like a young girl. \"That man of yours is entirely too handsome for his own good. In many ways he reminds me of my Leo.\"\n\nI watched as the lines around Mrs. Kendall's mouth deepened. \"Leo was your husband?\"\n\nMrs. Kendall nodded, her smile morphing from mischievous to wistful. \"Dear Lord how I loved that man. I was a positive fool for him from the first second I saw him. Of course, I had to work damn hard just to get him, but once I got my talons into him I wouldn't let go. He married me eventually.\n\n\"Leo was seventeen years older than me,\" Mrs. Kendall sighed. \"And he was a confirmed bachelor by the time I came along. I was a young and silly thing who didn't know her mind one day to the next, but there was never any doubt I wanted Leo. I used to think we'd burn a hole in the mattress things were so hot between us.\"\n\nMrs. Kendall sat down on a stack of boxes and patted the space beside her in a friendly gesture. I joined her.\n\n\"Leo and I were together for forty-three years before he died. He was a difficult man at times, but that's part of the reason why I loved him so fiercely, and I suppose in my own way I was difficult too. I won't lie to you Honey, and tell you it was easy, but whatever our difficulties were they were more than made up for by the good times. I've never loved anyone the way I loved my Leo and while you might not want to admit it, I see the same look on your face as I saw on my own all those years ago. Daniel Sutcliffe is a difficult man, but trust me when I say he'll be worth the trouble.\"\n\nI considered Mrs. Kendall and her wisdom-filled smile for a moment before answering with a smile of my own. Daniel's voice drifted down from the second storey with such authority even the burly, experienced movers didn't dare argue with his commands. I laughed softly in unison with Mrs. Kendall.\n\n\"Do you think I'm crazy?\" I asked, toying with a loose thread at the hem of my t-shirt. \"I think Maddock does, never mind more than half of our mutual acquaintances.\"\n\nMrs. Kendall shook her head, the gesture punctuated by yet another wistful sigh. \"My dear child, I think tossing over Maddock Architects is the best decision you and your Daniel have ever made. A fresh start is what both of you need. You're a talented young lady, I knew that from the start, and there isn't any doubt in my mind your relationship with Daniel will enhance that talent -- both professionally and personally, I suspect.\"\n\nShe patted my knee in a friendly way. \"Take it from an old lady, Clara. Men like Daniel Sutcliffe come around but once in lifetime -- don't let him pass you by. Dig in your talons.\"\n\nDaniel came bounding down the spiral staircase, scattering movers in his wake. Even clad in blue jeans and an old grey t-shirt he looked for a moment as if he were too good to be true and I knew in an instant I'd heed Mrs. Kendall's advice without fail. Daniel was one-of-a-kind.\n\n\"Damn if they didn't scratch the hell out of my Parson's chair,\" Daniel grumbled, stopping abruptly in front of me and Mrs. Kendall and scowling with menace. \"You'd think that at the rate I'm paying them they could at least treat my antiques with a bit of respect.\"\n\nMrs. Kendall fielded Daniel's ire with practiced smoothness. \"Total savages, my dear Mr. Sutcliffe. Perhaps we should get out of their way? I could certainly use a cup of tea, and while Miss Kovacs is a charming hostess, I'd very much love to hear the history of your lovely fire hall. Perhaps you could show me the outside of the building? I'm sure the movers can handle themselves. Miss Kovacs will keep an eye on them, won't you dear?\"\n\nI nodded, watching as Mrs. Kendall captured Daniel's single-handed interest with ease. He took her arm and I could hear Daniel's architectural lecture begin before the pair even got outside. Laughing to myself, I started forward to smooth things over with the movers.\n\n-------\n\nFor the first time all day I was alone, but I was too tired, sweaty, and frustrated to enjoy it. From my cramped position under my desk I could just see the last rays of the day's sunshine fade across the cement floor. It was strangely stark and beautiful but all the dreaming in the world wasn't going to get the computers hooked up.\n\nThe movers had finally gone, leaving in their wake an empty silence in the large space which surprised me. Daniel was gone too, having swept Mrs. Kendall away to a late lunch with my blessing. I had no problem with him schmoozing our most important client, for which Daniel's relief had almost been tangible. I had resisted the urge to tell him to play nice while wining and dining our most important client. She was, after all, our only client. But I suspected my warning would have gone unheeded. Daniel would enjoy sparring with the irascible Mrs. Kendall just as much as she would enjoy pushing his buttons in return.\n\nSo that left me alone in the fire hall, on my hands and knees on the cold concrete, trying to remember which outlet was the USB port and which was the outlet for the mouse. In the dying afternoon light they all looked pretty much the same to me. Daniel had foisted the job off to me with obvious relish, claiming I knew more about computers than him, which was probably true. In that respect we were doomed.\n\nI half-crawled out from beneath the desk to jiggle the mouse around a bit but still the cursor wouldn't move across the screen. \"Fuck,\" I muttered, staring at the offending bit of hardware with malice. I think I'd plugged the damn thing into every outlet on the back of the hard drive at least once with no success.\n\n\"Bloody Hell,\" I grumbled as I crawled back under the desk. My knees screamed in protest and I could feel my extremities getting colder the longer they were in contact with the cement floor. I didn't care if Daniel thought it was aesthetically obtrusive, I was getting a carpet for beneath my desk if it was the last thing I did.\n\n\"And that is one hell of a view.\"\n\nDaniel's voice was so unexpected it startled me. I jumped, hitting my head on the underside of the desk. I swore loudly and tried to back out to stand up in order to give him shit for scaring me, but Daniel had other plans. His hands quickly met my hips and kept me from moving out from under the desk. His low whistle grated on my nerves.\n\n\"Let me up, Daniel. It's cold down here,\" I snapped. His answered chuckle was licentious. \"Seriously,\" I said with a growl, \"it's not funny.\"\n\n\"And I'm not laughing,\" Daniel teased, using one hand on my hip to keep me from moving and the other to caress the rounded curve of my ass. \"Nothin' funny about this view. These jeans of yours are positively criminal. Every single man in the place did nothing but stare at your ass all day, it's a wonder any of my furniture survived.\"\n\nI couldn't help but laugh, secretly pleased Daniel had noticed both my jeans and the movers checking me out. The jealous note in his voice pleased me too.\n\nDaniel's touch grew more exploratory and under the power of his caresses I forgot for a moment that I was stuffed beneath a desk.\n\nDaniel knelt behind me, pressing his erection suggestively against me. \"This gives me an idea,\" he purred.\n\nI laughed through the haze of my sudden arousal. Even through the thick denim of our jeans I could feel the heat and length of Daniel's hardness. I was sore and tired, but never had I been more ready for a few good hours in bed with Daniel. When I confessed that thought to him his laugh was self-satisfied.\n\n\"I know, it feels like I haven't had you beneath me in weeks,\" Daniel said with a sigh. He pulled at my hips and helped me to stand. Every joint in my body creaked in complaint and the sudden change of altitude made me a little dizzy.\n\nIt had been a long few weeks. Between packing and moving two apartments and two offices and merging them into one, it was little wonder that we'd barely had time to sneak in a few earth-shattering kisses, never mind a more serious bout between the sheets.\n\nNobody had been more surprised than me when Daniel asked me to move in with him. Actually, 'asked' wasn't really what happened -- Daniel assumed I was moving in and then had been angry when I seemed shocked by the idea, which led to a window-rattling argument, which in turn led to window-rattling sex, and by the time it was all over I guess I agreed because less than twenty-four hours after that I'd terminated the lease on my apartment and started packing my things.\n\nDaniel reached down to tuck a wayward curl behind my ear. He looked as tired as I felt, but still so damn handsome.\n\n\"How was lunch with Mrs. Kendall? You two certainly took your time.\" I was curious to hear how he'd handled the delightfully troublesome old lady.\n\n\"Productive, actually,\" Daniel said with a weary grin. \"I think we might have another client.\" He traced the path of an escaped tendril of my ponytail across my neck. I shivered.\n\n\"Really?\"\n\n\"Yeah, her brother-in-law just bought lakefront property north of the city and wants to build a cottage. She took me out to see the spot -- it's amazing.\"\n\nI tried to picture the potential cottage as Daniel described the scenic property to me. \"Like quaint, rustic log cabin sort of cottage?\" I asked finally, unable to form a mental picture.\n\nDaniel shook his dark head. \"Like multi-million dollar, 6 bathroom, 10 bedroom, in-ground pool, clay tennis court sort of cottage,\" he chuckled. \"I think I'm beginning to like having wealthy clientele.\"\n\n\"I guess so,\" I murmured, my brain suddenly full to the brim with possibilities. It would have to windows everywhere, floor to ceiling. I grinned. I love windows. The cottage would need a terrace which would stretch to edge of the lakefront - anything to take advantage of the view. We'd find a way to plan all the bedrooms so they'd have a view of the water as well, and an open-concept living room with cathedral ceilings and miles of glass, also overlooking the lake. \n\n\"Clara?\" Daniel prompted with a gruff laugh. He waved a hand in front of my unseeing eyes. \"Hello? We were sort of in the middle of something, architecture can wait for later.\"\n\nI focussed on Daniel's amused silver eyes with difficulty. I could feel the itch in my fingers which normally drove me to find a pencil and start sketching. Daniel's expression was half bemused, half flirtatious. \n\n\"I'm sorry,\" I murmured, feeling myself blush. \"I got distracted.\"\n\n\"Well then,\" Daniel teased, circling my waist with his arms and pulling me against the solid wall of his body. \"I'll just have to un-distract you.\" He bent to plant a kiss on my neck, his breath hot in my ear. \"I think we should move this upstairs.\"\n\nWithout warning Daniel grabbed my hips and spun me about until I faced the wrought-iron staircase spiralling to the second floor. He pressed himself against me once more, allowing me to feel the hard length of his erection against my lower back. Suitably distracted from daydreams of buildings, I wiggled against him, happy to hear him growl in a low tone.\n\nUnder his direction I managed to climb the stairs, all the while trying to teasingly dodge Daniel's attempts at grabbing my ass. His renewed grip on my hips as we hit the second floor was possessive and filled with wordless intent.\n\nI stopped dead in my tracks, however, and surveyed the main living area. For the most part it looked as if the movers had just dumped everything destined for the second floor at the top of the stairs. The stacks of boxes and odd bits of furniture towered almost to my head and stretched off in two directions, one bit towards the livingroom/kitchen, and the other towards the back of the building where we'd planned on setting up the bedroom and another office.\n\n\"Daniel,\" I groaned, trying to ignore the heat of his body behind me. \"We can't leave this mess the way it is.\" My aching exhaustion of earlier came back full force as I surveyed the barely contained chaos. \"I don't even know where the bed sheets are, and there's food in some of those boxes which should be unpacked. It's almost dinner time and we can't cook without unpacking the dishes. Plus we'll need towels at some point, and I have no idea where those are.\" I could feel panic creeping up my throat. It would take all night to find what we needed just to get through until morning. I guess I hadn't planned the move out as carefully as I thought.\n\n\"Clara,\" Daniel said in a low snarl. \"It can wait.\"\n\n\"It can't wait,\" I rushed on, trying to take a step towards the mountain of boxes. Daniel snaked an arm around my waist and held me against him. I struggled to free myself, feeling my temper rise as it coupled itself with my fatigue. \"We don't have time for this,\" I snapped peevishly. \"There's too much to do.\"\n\nDaniel's strong hold didn't let up.\n\n\"Stop it,\" I gasped, squirming against him. \"I'm not in the mood now, let me go!\"\n\nDaniel's mouth was right against my ear, I could hear his breathing become more rapid the harder I struggled against him. His breath was scalding hot and felt entirely too good if I thought about it. His hand crept up beneath my sweater to clutch at my breast. Traitorously, my nipple hardened in an instant. Daniel chuckled.\n\n\"Stop it,\" I said, trying to ignore the flash of desire that shot through me at his touch. His thumb thrummed roughly over my bra-clad flesh, making me moan. \"Daniel!\" I reprimanded.\n\nHe bit my earlobe with very little gentleness, laughing again as I shuddered against him. I opened my mouth to voice another feeble protest, but Daniel cut me off. \"Be quiet, Clara, for once.\" His tone brokered no argument and I could feel my will to resist rapidly dissipating. Fighting him was more exhausting than giving in, and besides, I could feel the dampness spring up between my legs, accompanied by a pleasant tingle which only Daniel could make go away. \n\nDaniel clutched at my breast, testing its weight, relearning its roundness. His voice in my ear was raspy and low. \"That's a good girl,\" he whispered, giving my breast another possessive squeeze. \"You be quiet and I'll tell you how this is going to be. Personally, I don't care if there are towels in the washroom or sheets on the bed. Hell, I don't even care if there is a bed. I haven't had you in a long time and I'm through with waiting. I want you now, here, and you're going to co-operate with me. Aren't you?\"\n\nI nodded, feeling light-headed from excitement. Daniel jerked my bra down enough to free my nipple to his bare touch. My knees wobbled, but his other arm held me solidly against him so I wouldn't fall.\n\n\"You want me just as badly as I want you, don't you Clara,\" Daniel whispered. I closed my eyes, gasping for breath. \"I bet you're wet as hell right now. Wet for me,\" he bit my neck again, no doubt leaving a mark that wouldn't fade until morning. \"I don't know why you still fight me after all this time. You think you'd have learned by now that everything I do will make you feel good, make you eventually come.\"\n\nHis laugh was low and predatory. I clutched dizzily at his arm as he squeezed my breast, pinching my nipple roughly. My whimper of protest and desire only seemed to push him further. I could feel the hard heat of his cock pressing against the top of my buttocks; it twitched every time I wiggled against him.\n\n\"This time, it'll be fast and hard,\" Daniel promised as the fingers of one hand worked my nipple while the fingers of the other released the button fly of my jeans. He slid his hand down to skim across the exposed top of my panties, teasing at the place where skin met lace.\n\n\"The second time I'll go slow, teasing you, making you beg. You'll pout and arch your back, completely unable to lie still as I touch every part of you.\" His fingers skimmed over the fabric of my panties, barely touching my curls but making me moan nonetheless. \"But you'll have to wait for me to give you what you want, to touch you where you're the wettest, the hottest.\" He dipped his hand into my jeans roughly, cupping my pussy through my underwear. He laughed with satisfaction when he found the dampness he'd created.\n\n\"Daniel, please,\" I cried weakly, struggling once more against his iron-grip, desperate for him to put me out of my misery.\n\n\"Shhhh...\" he purred into my ear. \"You didn't want this, remember? There's too much else to do.\"\n\nEverything in my head was a jumble of half-formed thoughts and sensations. I couldn't breathe, couldn't focus on anything but Daniel and his rasping voice in my ear. His hands were anchors against my body, holding me up, keeping me from melting to a puddle on the floor. My gasps for air were punctuated by small mewling noises as Daniel rolled my nipple between his thumb and forefinger. His other hand was too still for my liking. I wanted him to touch me, to rip aside my panties and delve into the heat he'd caused, to seek my clit and end my frantic, tingling anticipation. \n\n\"Oh God,\" I moaned on an exhaled breath as he kissed my neck, laving the sensitive place he found there with the rough width of his tongue. \"Please.\"\n\n\"Please what, Clara?\" Daniel rocked his hips against my ass, causing me to whimper again as I felt his hardness.\n\n\"Please Daniel,\" I clawed at his bare arm, trying to get him to move his fingers against my pussy. \"Fuck me, please.\"",
        "His answered growl was positively chilling and Dragon-like, but it only further fuelled the burning need in my belly. \"Where,\" he asked, his voice caught huskily in his throat.\n\n\"Here,\" I gasped, beyond caring where we were. \"Now. Please.\"\n\n\"Pull your jeans down,\" Daniel ordered. He wrenched at my bra until it circled my waist and quickly reclaimed my right breast with one hand, leaving the other to be chaffed teasingly by the rough wool of my sweater. \n\nI shimmied my jeans over my hips, letting them pool forgotten at my feet, followed seconds later by the thin, damp wisp of panties I'd been wearing. The air in the room was cool, but couldn't account for the goosebumps which pimpled me. With his free hand Daniel pushed me forward, grunting his encouragement as I braced myself against the stack of boxes closest to us. I could hear the loud release of his zipper over the rasping, frantic rhythm of our breathing.\n\n\"Good God,\" Daniel whispered, running his hand up my spine, pushing my sweater up as he did so. His caress was strangely gentle and comforting. \"First time fast and hard, second time slow,\" he promised, his fingers trailed down my back and into the cleft of my buttocks until they found hot, wet, flesh. We both moaned.\n\nDaniel didn't even bother removing his own jeans - he just unzipped his fly and freed his hardness from the confines of his boxer shorts before burying it in me with no warning save his loud grunt of approval as we connected. The sudden fullness made me cry out with pleasure and surprise. \n\nHis hands gripped my hips roughly as Daniel gave me no quarter, but plunged to full depth with each breath, withdrawing quickly and almost completely before thrusting again. My orgasm didn't wait for him, but sprung from my lips with a keening cry which echoed loudly around the unfurnished room. \n\nDaniel's words of encouragement were an almost incomprehensible torrent of sound which danced alongside the sensation of him filling me again and again, and when he reached around with one hand to connect with the burning nub of my clitoris, I practically collapsed with the pleasure of it all, almost too forgone in another orgasm to notice the spasming contractions of Daniel's own release within me.\n\nHis long moan of completion echoed with pleasing gratification in my own head. Hell yeah, I had wanted him, and I'd never get tired of knowing he wanted me too -- that was satisfaction of an entirely different sort. My smile was triumphant. \n\nDaniel pulled me gently to the floor, before he wrapped his arms around my torso and nestled me into the long length of his body. He still remained inside me, and the fullness of it was comfortingly pleasant now that the excitement was over. My muscles contracted weakly around him as the last vestiges of my orgasms melted away. \n\n\"Mmmmm...,\" I sighed, opening my eyes to gaze up at the towering mountain of boxes. The floor beneath us was hard and cold, but I couldn't bring myself to care.\n\n\"Clara?\" Daniel murmured against the damp skin at the back of my neck. \"Are you okay?\"\n\nI turned slightly in his arms until I could see the blue-grey of his eyes. The concern floating within them made my heart all but stop in my chest. \"Yeah,\" I whispered, reaching up to trace the line of worry between his brows. \"I'm more than okay, I'm fabulous.\"\n\nDaniel's smile bloomed slowly across his handsome face. \"You had me worried there for a second.\"\n\nI flexed my internal muscles around him and we both moaned in unison as he slipped out of me, leaving me empty and feeling inextricably hollow. \"No need to worry, I've never felt better.\"\n\nHe chuckled against my hair before leaving a kiss there. \"You know I would never deliberately hurt you, don't you?\"\n\nI nodded, relaxing into the warmth of Daniel's embrace. Against my back I could feel the still rapid beat of his heart. \"I know, Daniel. I've always known that. I trust you.\"\n\nDaniel closed his eyes, hiding from me the quick flicker of emotion I thought I glimpsed within them. I tried not to be hurt as I watched his handsome face become stoically composed once more. I pushed back the dark wave of hair which slipped over his forehead, tugging playfully at the grey strands woven throughout.\n\n\"Are you okay?\" I asked after his silence stretched on for a little too long. Daniel opened his eyes, and the intensity of his silver gaze made me gasp. And then Daniel \"the Dragon\" Sutcliffe opened his attractive mouth and said five words I never thought I'd ever hear in my life.\n\n\"Clara, will you marry me?\" "
    ],
    "authorname": "firstkiss",
    "tags": [
        "co-workers",
        "older man",
        "younger woman",
        "drama"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/i-thought-i-hated-him-ch-09"
}