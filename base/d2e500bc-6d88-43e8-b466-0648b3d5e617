{
    "title": "A Tale of Revenge Ch. 08",
    "pages": [
        "Dear most wonderful readers! I am back and the story is finished! There will be 8 more chapters and an epilogue to come...to think I started this with no more than 8 chapters planned. Anyone new to the story, please do consider reading earlier instalments first. They have been edited and updated and this is meant to be read as a whole. \n\nAlso, as a warning, things are going to take a dark turn for the next few chapters. I did warn that things were going to get worse for Anna and I meant it. I have a love/hate relationship with non-con and the next act is a lot of the \"hate\" part of that equation. Also note there will be a lot of plot and world-building coming up. Again, read previous chapters to catch up on characters and lots more naughty bits. \n\nI want to thank my amazing beta readers/editors Lee andLethicia. This story is so much better thanks to both of you and your amazing attention to detail and investment in the plot and characters. I owe you both big time. \n\nWithout further ado... \n\nCh. 8 \n\nThe capital was a messy place for two country-bred travelers. Dev was more at home than Anna, having been a regular visitor during the busiest times for the city. Anna tried very hard to keep the wonder off her face but she was finding it impossible given the sheer amount of things within her line of sight at any given moment. Dev gave a laugh and warned her against appearing too green and attracting pickpockets. Anna tried to school her features to neutral but he had to remind her several times. \n\nThe capital had once been the seat of a great empire. The Empress that had ruled and conquered the neighboring kingdoms had created a prosperous and progressive city where children were educated and inventors came together with scholars to create and learn together. Anna had heard tales of the golden age, her grandmother had been taught in just such a school. But the Empress's son had failed to live up to his mother's work and when his daughter took the throne, the fissures that had begun in his reign broke entirely. \n\nThe city still held the promise of greatness. Magnificent buildings littered the banks of the river. A bridge, once thought impossible to build in such a deep body of water, was clogged with traffic, connecting the two banks. Anna squeezed across with Dev, moved as they were with the crowd. In the center she looked up into the face of the Empress as her statue gazed out across the city she had built. For a moment Anna thought the statue looked rather sad for what was meant to be a triumphant monument, but she lost the chance at a second look as she was pulled back into the swell of the crowd and the statue was out of sight. \n\nThe wonder wore off faster than she thought. The crush of humanity came with its own drawbacks and she found herself soon overwhelmed in a completely different way by the smells and the constant push of the city dwellers as if they were trying to move through her. \n\nHer dark mood from before they entered had not entirely lifted, despite the myriad of distractions before her. She found her mind constantly drifting back to the last few days, attempting to make sense of all that had happened and instead found herself overcome and confused. Dev had seen her apprehension and offered his support but this time she had closed herself off to him again. Anything that had to do with Leonid was too hard for her to sort out and she certainly couldn't tell Dev about it. \n\nShe came to a sudden halt in the lower market in front of a stand full to the brim with trinkets and utensils, all in the brightest blue glass. Her horse, surprised at her sudden stop, nearly walked into her and Dev was brought up short as well. \n\n\"It's called cobalt,\" he said when he saw what she was looking at. He came up next to her, the lead of his horse held tightly in his hand against thieves. Anna was jostled from behind but too distracted to be annoyed. The color was not nearly as vibrant as Leonid's eyes but it diverted her all the same. \n\n\"I remember. The gypsies brought it through my village a few years ago. The blacksmith bought his wife a necklace of beads. It was the most beautiful thing I'd ever seen.\" Anna said quietly, remembering the outrageous expense the whole village had been whispering about. She had followed June shyly to the house where their daughter had snuck them a peek at it before it was put away again in some secret place. She wondered if it was still there, buried in the rubble of the house. Suddenly tears stung her eyes and she turned quickly away, the memories of home offering no comfort. \n\nDev followed behind her. It was so unusual to hear her speak of her home or past that he hadn't wanted to scare her off the subject. But it seemed her memories had taken care of that for him. He paused a moment longer and then turned to follow her. \n\nAnna settled on an inn called the Dancing Dove near the upper markets. They still had plenty of funds but anything beyond this point in the city was more than what they could consider reasonable. Anna had wanted to get closer to the castle but Dev had assured her there was no way. Beyond the upper markets were much more lavish lodgings, then the aristocratic homes and temples. This was as close as they could reasonably hope to come. And besides, he said, they should save some coin for when they left. \n\nThis surprised her more than it should have. She was so focused on the goal that she had given not a moment's thought to what she would do when it was over. Besides the brief consideration Leonid had inspired the night before, Anna had never contemplated what would come once she succeeded. The thought was not a pleasant one and she stubbornly refused to even consider it. Dev must have sensed her unease because he quickly engaged the innkeeper about a room. Anna, still dressed as a boy, withdrew beneath her hood and tried to send every silent signal possible that she was not to be spoken to. \n\nThe owner at the Dancing Dove was a jovial man who seemed completely immune to Anna's prickly demeanor. Truth be told, she was feeling uneasy at the sudden press of the crowds and this man's friendliness actually felt strange to her after so many months of conflict. Despite her disguise, the proximity of so many people made her feel like she was always on the verge of being found out. Dev, not suffering as she did, fell into an easy conversation with the man. \n\n\"And what do you know? The war is turning around and soon things will be back to normal.\" The man was saying. Gravis was his name, Anna reminded herself. She had not been terribly attentive at his introduction. \n\n\"So soon? It feels like only a season ago that we heard of possible defeat. Have they so quickly turned the tides?\" Dev said surprised. Anna started paying attention at last, politics interesting her more than the pleasantries they had been engaging in up until now. It wasn't hard to pick up on. Everywhere they went people were speaking of the war and the coming winter. \n\nGravis laughed. \"Well the king is eager to see it settled. Too much strife can tear apart the country, especially with the nobles sniffing at his legitimacy and tales of long lost heirs being turned into ballads for the crowds.\" \n\nAnna's eyes grew wide. It seemed impossible to her that people could speak so freely about their monarch. Gravis noticed and gave her a wink \"Most wouldn't dream to tell you that lad, but I've never been one for propriety.\" \n\n\"Aren't you worried?\" Anna asked without thinking. \n\n\"The king has bigger fish to fry than an old loud mouth in a tavern,\" Gravis said, confident and jovial as ever. \n\nAnna shook her head, tightening her lips as if saying she wouldn't dream of saying a thing like that. \n\nDev took the conversation elsewhere and Anna excused herself to her room. She and Dev would be sharing this time to save money. She wondered how it would work before she found the bed was actually two cots pushed up next to each other, their mattresses held together only by some cleverly folded sheets. Anna separated the beds and collapsed into hers. For the first time since beginning this trip, she wasn't sure what was coming next. Tonight she would try to scout the barracks, to see if any of her targets were accessible. If they weren't though, she didn't have another plan. \n\nShe imagined what it would take to sneak into the palace and the thought unnerved her. But if she were honest there was still a nagging feeling left over from Leonid's visit. Dread of both the unknown she faced and the withdrawal of her godly owner sat in her gut like a stone. She felt his absence acutely; knowing he would not come was infinitely worse than not knowing when he might appear. Her troubled thoughts kept her up a while longer but finally she drifted off as the sun reached midday outside. \n\nEvening found her yanking at her spare dress as she tried to get the bodice to sit right. Dev was facing away, giving her privacy as he mended a hole in her leather breeches, which were now much worse for wear. \n\n\"Damn this bloody dress,\" she muttered. \n\nDev laughed. \"If you rip that as well you'll be sitting here for a while. I'm not much of a tailor.\" \n\nFinally the dress sat on her body with minimal discomfort and she huffed over to where Dev was sitting. She took the mending project from his hands and set about doing it in rapid, studied motions. Dev's eyes went wide as he took in the sight of her. \n\n\"Don't stare. It's impolite,\" Anna said crossly. She was feeling miserably uncomfortable in more ways than one. Her sight had been completely blocked as she reached it out towards the palace and she was beginning to get more apprehensive about her lack of a plan. \n\n\"Sorry,\" Dev said with a smile. \"Seeing you in a dress is quite a shock. You might fool some of these city-dwellers into thinking you're a girl.\" \n\n\"I am a girl,\" Anna snapped back. \n\n\"Keep telling yourself that,\" Dev replied calmly and got up from the bed. \n\n\"What's that supposed to mean?\" Anna said, frowning down at a particularly gnarled part of the patch Dev had been working on. She saw him shrug as a reply out of the corner of her eye. \n\n\"Sitting on thorns again?\" he asked conversationally. \n\nShe sighed, untangling the thread and finally setting the seams against each other. \"I'm feeling decidedly uncertain about what to do next. I can't see the soldiers here, I only know that they are somewhere beyond the wall of magic around the castle.\" \n\n\"Strange,\" Dev said with a distracted air. \n\n\"What's strange?\" she kept at the work. The familiarity of the motions was soothing to her and helped lessen the unease that had been eating at her all day. \n\n\"Well most of the army is gone to war, which means only the king's guard should be left at the castle, if that. I mean, the king himself has been at the front lines until just this week.\" He paced back and forth before continuing. Dev had been infinitely more successful at gaining information during their trip, and could put the pieces together better than she could. \"That means this troop of guards has been either absent from their duties to the king or acting in direct response to some order.\" \n\nAnna looked up at him. \"You mean to tell me that the king himself must have sent these soldiers across the country to destroy a small village?\" Was the king ultimately responsible for this? If so how could she possibly imagine being able to bring justice down on his head? \n\n\"It's a theory,\" Dev muttered. \"Or perhaps they were left behind to guard the castle and decided to get their jollies by marching with a group of their old comrades out to some remote village to have their way with everyone in their path.\" \n\nAnna sighed and went back to her mending. They were back where they began. Dev continued to pace. \n\n\"I think we have to get close to the castle tonight. We should try to see what's there and how it's blocking my sight. Perhaps if there is a way around it, I can find out more about what's on the other side.\" \n\nDev made a frustrated noise before conceding the point. They had hopelessly little alternative. \n\n* \n\nMidnight found them on the periphery of the temple district. Anna had shielded them as they slipped through town on foot but the walk was a long one and it had taken the better part of the evening to arrive at the edge of the castle grounds. The grand structures around them fell away and the ground before them rose up on a steep slope up towards the expansive building beyond. There was no cover, of course, but that meant little with Anna's magic. She surveyed the building and its fortifications, wondering where she might find the soldiers' quarters. \n\nDev yanked on her sleeve. She turned towards him and he pointed towards an easier incline off to their left and she nodded to follow him. They followed a small servant's path up the side of the hill to a heavily barred postern gate in the fortifications. There were soldiers posted above them but they seemed to be more interested in joking loudly to one another about the dangers of their post. Anna and Dev slipped invisibly under the heavy stone framework that hung out over the door. \n\nAnna placed her hand against the wood and called upon her magic, seeking out some mode of entrance. Just as the magic was reaching out of her fingertips, something stirred beneath her fingers. Anna took her hands off the door as if they had been burned, just managing to keep the fire in her fingertips from touching the strange magic in the wood. Dev grasped her shoulder, and she could feel his apprehension. Anna looked at the wood, as if expecting it to move. But it had been magic that she had felt, not the wood itself. \n\nShe reached in with her sight, pulling on the black fire inside her to the surface. She felt an answering movement in the wood but no contact was made. When she opened her eyes the world was lit up with the shimmer of magic, burning a deep steely grey in her vision. The magic in the door reached far beyond the confines of the wood and she found herself stepping out from under the stones that shielded them from the guards' view and she gazed up at the palace in wonder. \n\nThe entire wall was covered in the finest net of gleaming power, and where the wall ended above her, the net continued upwards, swaying slightly in the breeze as it formed a magnificent shining dome over the entirety of the grounds. Anna's jaw fell open and she stepped further back. She had never seen anything like this, even with her admittedly slight knowledge of the nature of magic this seemed remarkably inspired. Someone had woven their spells together as if they were thread, creating a self-sustaining meshwork of protection that floated over the sprawling grounds. \n\nShe stepped further back and stumbled, forgetting that the path was bordered by another steep slope down towards the city proper. Dev caught her arm before she fell in earnest, but not before they made enough noise to be noticed by even the neglectful guards above them. \n\n\"Oy! Who's there?\" one of the startled guards called down. Anna froze, as did Dev. She was still obscuring their forms so the guards would not be able to see them, but there was a limit to what she could do past the barrier of magic. She heard the sounds of the inner door opening. Dev grabbed her hand and started pulling her down the path, swiftly but silently as the sounds of voices grew nearer and the outer door where they had been standing a few moments before was thrown open. \n\nAnna hazarded a look back and froze in her tracks. She recognized the faces of the men who had been in her village instantly. At least two of them stood there, squinting into the darkness. With the magical wards she had just seen, Anna recognized that this was an opportunity that might not repeat itself. Dev tugged at her arm, growing more desperate as the soldiers advanced and yet she didn't move. Anna shot Dev an apologetic look, which only added to his confusion. \n\n\"Sorry,\" she whispered. She sent her magic out to him, drawing him against a nook in the wall so he was off the path and out of the way. She bound him there so he could not move or speak, and cast a rune over his body so that he would not be seen. His eyes pleaded with her, confusion in every line of his face. But she finished the rune and he disappeared from view. \n\nTurning back towards the advancing group she lowered the spell that hid her from them and she slowly made her way out onto the path, her hands held up, her face fearful and wide eyed. She was the perfect picture of innocence in her country dress, all her weapons well concealed. The soldiers came to a halt. There were four in total, three from the very troop she was interested in. \n\n\"What in the Dark God's teat is this?\" one of them gasped, lowering his weapon as he caught sight of a girl. \n\n\"I'm sorry! I'm sorry,\" she said, terror in her tone. \"I just wanted to see the palace from close, and my father told me I wasn't allowed, and I thought I could just come up and touch the wall then it'd be as if I'd seen the whole thing. Please don't kill me, I didn't mean anything. I'm sorry.\" She said this all very fast. The other soldiers dropped their weapons to their sides as they saw their opponent and judged her no threat. One of them came forward as she spoke and cut her off as he grabbed her wrist tightly in his fist. \n\n\"Do you have any idea how much trouble you're in?\" he took a moment to look her over, his eyes lingering on her breasts before returning to her face. But instead of the terrified girl he had grabbed he saw the smug satisfaction of a hunter whose bait had been well taken. \n\n\"Do you?\" she hissed back. With that she sent vines of black fire up the legs of the soldiers who stood there. They yelped in surprise as they found themselves quickly incapacitated, their mouths soon filled to blot out any more sound. \n\n\"What a pretty picture you make, all trussed up and ready for me,\" Anna said, looking directly into the eyes of the one who had grabbed her. His eyes widened. It was what he had said to the blacksmith's wife when he had tied her to her own kitchen table before he inflicted himself on her. \n\nShe turned her attention to the others, finding their actions no less horrible. The fourth, however, was a new recruit barely a month into training. Anna lowered the magic from his mouth to his neck so he could speak, but she kept a steady pressure on his throat in warning. \n\n\"Where are the others in your unit?\" she said harshly, she kept her burning eyes on him. She could see the fear and panic in his eyes. He was not so battle hardened as the others and was easier to manipulate. \n\n\"O\u2014oth\u2014others,\" he stammered. \n\n\"Now,\" she said tersely. \n\n\"Sleep\u2014sleeping, or at the n\u2014name day celebration,\" his voice shook in terror. \n\n\"Where is the name day celebration?\" Anna felt a rush of excitement. If there were more of them beyond the barrier she and Dev could take out even more of them. Fortune had turned her wheel for her tonight. \n\n\"T-Tom's Kitten, in Blower's Edge,\" his voice was barely above a terrified whisper. \n\n\"Thank you,\" Anna smiled with all the savage satisfaction she was feeling. This was going to be a productive night. She turned her attention back to the other men. She made her way through them, cursed them each and made sure they could neither mention nor act on anything they had seen and heard tonight. They might burn with anger towards their new recruit but they would not be able to hurt him or reveal why they felt this way. Their curses would haunt them silently so as not to give away what had happened. They would act normally, but inside their own heads they would suffer greatly. \n\nFinally she turned back to the young boy. \"I'd find a way to get reassigned if I were you.\" Then she bound him to silence as well. \"Now go back to your posts.\" The four of them turned with a will that was not their own, and shuffled back towards the door. ",
        "With smug satisfaction she raised the spell she had placed on Dev and watched him unfold from the hiding place she's forced him into. He was not pleased. As soon as he was free he threw himself down the path, not glancing back at Anna until they were well into the temple district. \n\n\"Dev,\" she started, reaching out to him. \n\n\"Don't, Anna.\" His voice was tight with anger. Suddenly he stopped and whipped around to face her. \"Why did you do that?\" she could almost feel the hurt radiating off of him but he managed to keep his voice down. \n\n\"I had to think fast. There is a ward on the palace that I can't get past or around. I saw the soldiers we were after and I had to take the opportunity when it presented itself.\" She was relieved to tell him about the magic, now he couldn't still be angry. \n\n\"And locking me in place like that? Do you have any idea how terrifying it is not to have control of your own body? You could have just motion for me to stay hidden. You think I'd have compromised you in some way? That I can't be trusted to keep my mouth shut and let you, all-powerful one, get to work?\" He looked at her, pain and anger in his face. She had taken his control without even thinking twice, or considering his position. \"How long do I have to be by your side before you trust me?\" \n\nAnna visibly jerked back from him. Trust him? Didn't she trust him? Hadn't she let her guard down with him just the day before? She was about to open her mouth and snap at him when she realized she had closed off from him again almost immediately following that brief exchange. After Leonid she had been left scared and confused; she had shut Dev out, folded back into herself. A sharp pain ran through her when she thought of Leonid but she pushed it away quickly, trying to focus on her friend before her. Trust, the tricky, sneaky word wormed its way into her and settled uncomfortably behind her breastbone. Could she trust Dev? That she didn't know. But it wasn't his fault if she couldn't. She looked up to his face and held up her hands plaintively towards him. \n\n\"I'm sorry, Dev,\" she said softly. She meant it. \"It was wrong of me to do that to you. I won't do it again.\" There was a deep affection she had for him, one which longed to express itself and yet she buried it too deeply inside of her, terrified of what might happen to him if she gave into it. Hurting him was unintentional and she repented having been the source of his pain. \n\nDev was obviously surprised and took a long moment to look at her. He considered her for a moment longer and then nodded, turning back towards the cobblestone road before them. \"Blower's Edge is about an hour's walk.\" Anna fell into step next to him as they made their way through the city. \n\nAs the streets deteriorated in quality, they also became increasingly crowded despite the late hour. Anna's mind kept drifting back to the magical net she had seen over the palace. She had never learned how to channel her magic that way, to build something out of it instead of simply willing the effects to take place. Then again, hadn't she been doing it slowly? She wove her magic into her words to enforce commands. It wasn't as delicate as a spell but it was something. She had begun to create things too, ropes and vines, runes and the like. Maybe, once all this was over, she could spend more time with the magic, learn how to channel it better. She let her lips curve into a small smile. There was some relief in the idea that there would be something beyond her mission. \n\nShe looked at Dev, considering him for a moment, letting herself recognize that he was her family now, the only person she cared for, loved even. Quickly she wrapped that thought up and tucked it away. But she saved it, giving herself permission to seek it out again when they were finally done with all this. \n\nDev slowed down as they entered even narrower streets. During the day this area was sweltering with the heat of the glassmaker's furnaces but at night the pubs and bawdy houses took over and filled the space with noise and smells that no respectable area of town would permit. Dev stopped and slipped a coin to a raggedy looking boy who pointed them towards the pub in question and they found it still raucously loud. \n\nThey slipped up to the window and Anna surveyed the room through the smoke. It seemed as though things were dying down, the crowd was thin and those left were either unconscious or part of the small party of soldiers who persisted in shouting and singing as the night began to wane into morning. Anna reached out with her sight and turned back to Dev. \n\n\"Six more,\" she said, not bothering to keep her voice too low. No one inside would hear them. \"Three others with them. This is going to be a good night. There should only be a few more left. With any luck I can suggest to one of these men that they send the rest out tomorrow night.\" Her eyes were wide with excitement. She was flushed with their unexpected victory tonight. \n\nDev was less enthused. \"What's your plan for access? We can't walk in there as patrons; it's too suspicious. If we are invisible someone will surely knock into us.\" He eyed two soldiers who started play-wrestling drunkenly. \"It doesn't seem like they are leaving anytime soon. I don't know if this is such a good idea. Perhaps we could just wait for them.\" \n\nAnna narrowed her eyes, \"I've been after these men for weeks and suddenly now that I'm in a dress you think I can't take them?\" \n\nDev looked away, embarrassed a bit, confirming Anna's suspicions that he was feeling more protective of her than usual. She sighed and turned back, eyeing the group again. He wasn't completely without a point. She could pose as a whore but she didn't want any of the women in there to get territorial. If she could insinuate herself into the group, she could curse each one silently, while the others were none the wiser. The thought made her smile again. She was so close to being done. Something close to hope blossomed in her chest; she was beginning to see the other side of this. \n\nSuddenly one of the soldiers got up from the table and stumbled slightly as he made his way towards the back door, struggling to untie his breeches as he went. She grabbed Dev and started to move towards the back alley where the soldier would be relieving himself by now. Sure enough, as she peeped around the corner, the man was whistling to himself as the sound of his piss hit the damp ground. Quickly she reached into his past, witnessing his crimes in the blink of an eye. She turned back to Dev. \n\n\"You have to slap me and call me a prudish bitch,\" she said in a rush. \n\n\"What?\" Dev gaped openly at her. \n\n\"Now Dev!\" She heard the soldier finishing up. In a loud voice she called out in a plaintive, feminine voice. She took Dev's hand and wrapped it around her upper arm before she stumbled into the mouth of the alley so they were in full view of anyone back there. \"Please,\" she whimpered. \"My father has sworn to check on me every night until the marriage. You must believe me.\" \n\nDev looked at her murderously, and he was not acting. She sighed internally; he was the one who had asked her to trust him. Now it was his turn to help her. His hand tightened on her arm and he brought his hand up. He brought it down on her face but didn't follow through, letting her snap her head dramatically with little more than a sting from his hand. \n\n\"You prudish bitch,\" he growled at her. He brought her hard against his chest and she cried out softly again, as if he was delivering some amount of pain. \"Across the larger road I'll be watching from the roof of the furnace marked with a peacock,\" he whispered. He shoved her body into the wall of the pub and stalked away. \n\nAnna whimpered, crying softly into her hands. The rest of her was keyed to the sound of the soldier approaching from the back door of the pub. His footsteps grew closer but she didn't move. She'd be too pained to pay attention to her surroundings. \n\n\"There now,\" a soft voice came from her right. \"What's all this?\" \n\nAnna looked up into the face of the guard. His skin was dark enough that it was hard to make out his features clearly in the low light but his teeth gleamed against his skin as he smiled down at her. He handed her a handkerchief, which she accepted timidly. \n\n\"Thank you sir,\" she said in a small, pathetic voice. She breathed deep as though gathering herself together. She wiped the tears from her cheeks and handed back the cloth but he refused it. \n\n\"You keep it,\" he said with another smile. \"What's got a beautiful girl like you crying in a back alley at this time of night?\" \n\nAnna sniffed loudly, her lips shaking as if she were about to break down again. \"My betrothed and I have had a disagreement, that's all. Thank you for your kindness but I really must be getting home.\" \n\n\"Nonsense!\" the guard cried, coming closer to her. His hand rested on her shoulder. \"Torments of love must always be drowned with liquor! Come, it is my name day after all, and you can be the guest of honor!\" With that he gripped her arm and led her back into the bar, her soft protests falling on deaf ears. \n\nAs he dragged her back into the pub her eyes grew wide and she put on an apprehensive face. He pulled her over to his friends who, though well intoxicated, were still managing to hold their liquor rather well. With the benefit of the light in the pub Anna could make out the guard's face a bit better. His skin was darker even than Leonid's and his hair was blacker than hers, pulled tightly back against his head and knotted in the back. His fellow soldiers also appeared as if they had origins in the far corners of the country, and possibly beyond. Two were so dark they must have come from the Far East where cities grew out of the dense jungle. Anna smiled shyly as she was pushed into the group. \n\n\"This little flower was wilting outside due to an ungrateful suitor, gentlemen,\" the guard from the alley was saying. \"She agreed to grace us with her presence in pursuit of oblivion to soothe her broken heart.\" \n\nThis was met with enthusiastic agreement from the other men and another round of drinks was ordered. The harried barmaid gave Anna a worried look before hurrying away, no doubt concerned about the innocent lass amongst all the wolves. Anna smiled slightly; she was far more dangerous than any of these men. After a raucous toast to broken hearts and endangered flowers, her savior from the alley sat down heavily next to her, tossing a gigantic arm around her shoulder and pulling her into his chest. \n\nShe feigned surprise, and placed her hand against his chest as if she were about to lose her balance. \n\n\"Now why don't you tell Agunaldo,\" he said, referring to himself, \"why your betrothed is such a simpleton to leave you alone in such a bad part of town.\" \n\n\"It was nothing, really, I don't wish to think of it.\" Anna's voice was low with false hurt. \n\n\"Come now, indulge a drunk soldier on his name day,\" he brought his face close to hers till his sour breath invaded her nostrils and it was all she could do not to jerk away. \n\nInstead she slipped her hand against his heart and pulled on her magic. \"He was unsuccessfully after my virginity. Lucky for you though, because you like them young and untried.\" The soldier nodded in agreement before the strangeness of her statement finally made it through his drunken haze. \"You like to watch them struggle as you debase them the first time, as you touch them where no one else has,\" she continued, moving her magic into his body, keeping him relaxed and smiling though she could feel his mind try to pull away from her. \"And then you call them whores, watch as their faces flicker with confusion as you push the fault of your crimes onto their heads, fill them with the thought that a woman is nothing more than a walking receptacle for your lust.\" \n\nShe could feel him trying to pull away from her in earnest now but she had him fast. To his friends, he seemed to be enjoying flirting with the pretty girl he'd snatched up from outside, but inside he was screaming at the loss of control. \"From this day on, you will never touch another woman without feeling pain. You will lust and desire but you will be impotent to act. You will be degraded by those around you as you have done to others and you will never be able to raise a hand in violence no matter what is brought down on your head.\" She finished by binding him to silence and inaction as she had done to the others, and as a final insult before she released him, she kissed him softly on the cheek as he screamed in fury inside his own head. \n\nAnna pulled out from under his arm. He turned to talk to his friend and she could hear no difference in his tone or words. She felt flushed with success and turned towards the soldier at her right. Just as she was about to speak, the door of the pub opened and she was brought up short by a pair of piercing blue eyes that stared directly at her. Their owner stepped into the pub, slowly coming into view. \n\nAnna's flush of excitement cooled rapidly. The man who stood at the door was looking straight at her as one would an opponent, not some nameless girl in a pub. She looked him up and down. He could not be taller than she was but he was stocky and strong looking. A clear northerner, his eyes were ice blue and narrow, his skin pale and smooth against high cheekbones. His hair was dark and pulled back tightly from his face as all the other soldiers wore theirs. She took in his defensive stance and a spike of energy sounded out within her, jolting her to her feet. This night would not end as quietly as she had thought. The soldier at her side had not been paying attention and reached out to her as she began to back away. \n\n\"Mandeep, get away from her,\" the northerner's voice was slightly accented. The soldiers finally noticed his presence and followed his fixed gaze back to the girl who had just recently been flirting with their friend. The soldiers jerked out of their seats and Anna took a few more steps back. She let her senses flair out into the room, keeping track of everyone there to avoid a surprise at her back. \n\n\"What's going on?\" the one he called Mandeep demanded, his voice struggling against his drunken tongue. \n\n\"That, gentlemen, is a witch. He has requested we bring her back to the palace to answer for some nefarious work against our comrades in arms.\" The northerner advanced on Anna and she took another step back. She reached further with her sight, sensing for Dev beyond the pub. She had to get to him and get them out. \n\nThe soldiers turned to her, drawing their weapons and advancing on her, though she noted that Agunaldo was not threatening her but merely standing with his sword in hand, like a page at his first fencing lesson. She kept the man at the door in her line of sight though, something told her he was not one to be underestimated. The ruse was over and she would have to get out of this today to be able to come up with a new plan of action tomorrow. She backed away, noting that the other patrons had either fled or made themselves scarce behind the bar. \n\nShe gave the soldiers a smile. \"Sorry boys,\" she said with a flourish as her fingers drew the rune to obscure their sight and she vanished to them. Without waiting for them to gather themselves, she slipped past the group and forced her way through the back door, not caring that they would inevitably see the movement and follow her. There was another sentry there but he saw nothing as she slipped past him into the dark. She had to get to Dev. \n\nShe ran, still nothing but a spirit to anyone she might pass, but the streets had mostly emptied and she made her way to the sign with the peacock on it. She dropped the spell as she entered the still studio. Dev appeared from the roof, drawn by the sound of her entry. He made his way to the ground floor, fear in his eyes as she bolted the door behind her. \n\n\"There are more soldiers around, I counted four at the exits to the pub,\" he started before he saw the wild look in her eye. \n\n\"We have to go,\" she gasped and she grabbed his hands, bringing her magic within her to full burning flames, \"Someone came, they knew about me.\" Dev stared at her for a fraction of a moment and then moved towards the door. \"No,\" Anna said, dragging him back to her, \"not that way.\" \n\nShe began to interlace the streams of fire around their bodies. As she had done so many weeks ago on the day they had first met, Anna set in her mind a destination and pulled the fire around them, urging it to move them through space to safety. This was by far the hardest feat she had ever managed with her power and she found herself gritting her teeth in the effort. So flushed with success, she hadn't noticed how much of it she had expended tonight. The sound of the guards grew nearer. She had precious little time. \n\nAnna bore down on the spell, pushing more energy into it instead of more finesse. She brought to mind the slope outside the capital, moving it into the fire. They were right outside the door. How could they have found her so fast? \n\nShe looked up at Dev, his eyes were wide and he gripped her hands tighter. He turned to look at the door and then back at her. \"Anna, you have to go, you don't have enough energy left for both of us.\" She shook her head. \"You can come back for me.\" \n\nAnna thought of the wards on the castle; she would never get to him in time. She shook her head again. \"I'm sorry, Dev,\" she whispered and she threw the fire from her body onto his. The soldiers were banging on the door now, threatening her focus. \n\n\"No!\" He tried to grab her hands as she pulled away from him. Anna held out her hands, her fire streaming to him, tightening around his body. \n\n\"Run, Dev,\" she called to him as the magic spilled from her fingertips. Just as the door gave way, her spell pulled Dev from the room and he was gone from their sight. Anna sagged slightly as the spell drained her energy after it. The soldiers streamed in, spreading out around her with their weapons raised. There was no time to rest yet. \n\nShe turned to face them, pulling two daggers from their hiding place at her back. This was not going to be easy. The first two attacked, she managed to avoid their blades, forcing them to follow her as she darted back. She put a large caldron that hung on a chain between her and her attackers, taking stock of her surroundings as fast as she could. They came at her again and she parried one blow while avoiding the other. Her fist shot out and struck one man in the ribs, driving him into his friend. The two of them fell to the floor. \n\nA third was already on her, and she blocked three rapid blows. For all their drinking, these men were well trained enough to still be deadly. She saw another come up on her left as the one attacking bore down on her. She twisted out from under his attack, crouching low and sweeping her foot out, knocking him to the ground. She struck him in the fleshy space below the bottom of his breastbone with the butt of her knife as he fell, the air leaving his body with a whooshing sound. The fourth was right above her and she brought her blade into the heavy muscle of his thigh, while her other blade caught his sword before it met her flesh. She left the knife in his leg and scooped up the other's sword. There were more coming for her and there was no time to catch her breath. \n\nThree came at her. She lashed out with the heavy sword, sending them scurrying away from her wild swing. She dipped below the closest one's guard and kicked her foot out, landing a punishing blow to his side. He crumpled under the force of it. She drew back from the other two who were now advancing more carefully, fully aware that they were facing a formidable foe. The first two had recovered and were making their way around the large furnace to flank her. Three were still in front of her. ",
        "Her foot met one of the long metal pipes used to make bigger pieces. It was held by two stands used for support by the glass blower. It was too long and heavy for a man to use as a weapon, but not for her. Anna swept her foot under the pipe and kicked it into the air in front of her. As it rose she dropped the blades and grasped the metal pipe at its thinner end. She spun around, swinging the pipe out towards the group in front of her, aiming beneath their raised swords, and swung it as if she were chopping at a tree. She released it and watched as it flew into their guts, felling them all in a single blow. \n\nShe turned, scooping up her blades as the two at her back came at her again. She was still rising as they came down on her and she struggled to block their attacks. Finally one of them landed a blow on her arm, cutting into her right shoulder as she twisted away from the blade, saving herself from the worst of the damage. She moved back into the attack when a cool awareness of someone approaching her from behind trickled through her battle focused mind. She lashed out at the closer guard, forcing him back and then she spun to face whoever was sneaking up behind her. \n\nThe violence of her movements came to a complete halt as something snapped around her neck. Once again she found herself staring into the intense eyes of the northerner, but the force of his gaze was much more powerful this close. Her knife was lodged in his side; she hadn't realized how close he was when she turned. He didn't seem to register the pain. How did he get so close without her hearing him? Anna's frantic mind denied the heaviness she felt in her limbs, the weight of the metal around her neck. His hands were still at the base of her neck, holding a collar he had managed to close around her even as she moved. The room was painfully still as the sound of the locking mechanism on the collar clicked into place. \n\nA painful flash of power radiated through her body from the metal at her neck. Anna's skin went numb as an icy sensation moved outwards from the metal. The weapons fell from her hands and her muscles seized in pain. Tiny daggers seemed to push into her skin from all directions, aiming directly at the fire in her center. Her head felt as though something was gripping it, pressing in on her skull until she felt as if it would crack under the pressure. Her limbs locked as this strange magic flowed through her veins and wreaked havoc on her ability to direct her body. Her eyes were wide and she felt tears start to slide down her cheeks. Agony shot through her, worsening every moment but she couldn't move or even voice the pain. The man was still standing in front of her, looking intently into her face as the magic in the collar did its work. \n\nThe spell worked its way through her and finally settled in an icy sphere around her power, containing it despite her magic's attempts to burn away the invader. The foreign magic left her limbs and her head to reinforce the barrier and Anna felt her body give way. She crumpled on the floor at the northerner's feet, the pain now only a dull ache at her center and a terrible weakness throughout her body. Her bloody knife clanked on the floor next to her head but she didn't have the strength to reach for it. The northerner's face came into view again as he checked her state. Without a word he brought down the pommel of his sword to her temple and she knew no more. \n\n*** \n\nThanks for reading! Please vote and comment. I'll be posting chapters once a week until it's all up. \n\nAlso to anyone who caught my Easter egg: I love you."
    ],
    "authorname": "AmoryParks",
    "tags": [
        "leonid",
        "anna",
        "revenge",
        "bargain",
        "soldiers",
        "fight",
        "collar",
        "caught",
        "capture",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/a-tale-of-revenge-ch-08"
}