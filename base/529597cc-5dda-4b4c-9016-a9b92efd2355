{
    "title": "Across the River - Telescopes See All",
    "pages": [
        "Before I tell my story, I need to share some background on my upbringing. My name is Kelsey and I am an only child. I was raised from the age of ten by my mom as a single parent. We lived in a nice house that my parents had built in a small suburb of a major midwestern city. My dad was killed by a drunk driver going the wrong way on the interstate. It was a crushing blow for Mom and I.\n\nI had been a daddy's girl and a bit of a tomboy. I adored my father, and I know he loved me. He was busy a lot with work. He was a very successful architect, but he still found time to take me on adventures. Creative stuff like bird watching, theater, and astronomy. He bought a really expensive spotting scope that we took on bird watching forays. We also used it to star gaze in the back yard. It was good enough to really see the details on the moon, and if the sky was dark enough, you could make out the rings on Saturn and a couple of Jupiter's moons.\n\nMom and I were set financially. There was a big life insurance policy from his work, and another he had taken out himself. Mom had her lawyers sue the other driver's insurance company for wrongful death. He was driving a work van at the time of the accident, and they settled rather than go to trial. So I had a nice trust fund that would pay for college, and Mom didn't have to work unless she wanted to.\n\nThe next couple of years were pretty dark as we grieved together. Mom got us both into counseling, and she made sure we talked openly with each other and didn't bottle up our emotions. We cried a lot. People told Mom to move, that she'd just be walking around a house with memories of dad that she'd have a hard time moving past. She disagreed. Dad had designed the house and she felt like he was part of it and was still there protecting us. I completely agreed. So we stayed put, and eventually we began to feel like we were going to be okay.\n\nSomewhere in there my mom sat me down and told me about the birds and the bees. I learned later from friends that the talk she had with me was much more than what a parent typically does. And I also figured out that it was going to be more of an ongoing dialog rather than a one time discussion. She was keen on explaining the difference between having sex and making love. That sometimes people had sex because of physical desire, and sometimes it was because they wanted intimacy with a special person.\n\nShe told me how normal it was to want to experience sexual pleasure, and as I got older, she told me more and more specifics about sex. She said I was going to find out about it on the internet anyway, and she'd rather it came from her. She told me that most of what I would see on-line was choreographed and acted, and not people in true relationships.\n\nBy the time I turned eighteen early in my senior year of high school, Mom had pretty much completed my education. I knew about masturbation and sex toys, which she actually encouraged me to try. She said she often did it, and she thought it was better for me to learn my own body before I got into a sexual relationship with someone. She told me about oral and anal sex, and about various positions for intercourse. She said she expected me to experiment because all young adults do, but she wanted me to be smart about it. She took me to the doctor to get birth control pills and to get the HPV vaccinations. And after all that, she told me I could always ask her questions.\n\nDuring my high school years, when I was old enough to not need a babysitter, Mom started dating again. She never brought any of the guys home. I guess she just wasn't serious enough about any of them, but occasionally she would call to say she was staying over with a friend. I knew what that meant, and I didn't question her about it.\n\nI was a late bloomer physically, and it wasn't until that senior year that I started to be sexually pretty active. I liked what I saw when I looked at my nude self in the mirror. We often were naked around each other, walking from the shower or getting dressed in the morning. Mom commented on how I'd grown up to be a beautiful young woman. That made me blush. My mom is really pretty. Guys are always shooting her glances when we are in a restaurant or shopping. I had always hoped I'd look like her when I grew up. It made me happy to know that my mom thought I was attractive. Looking back, it was all in keeping with Mom's straightforward honesty on self-image, self-awareness and sex.\n\nI lost my virginity later that fall in a predictably forgettable episode with a friend's older brother that I had a school girl crush on. After that, I stuck to playing with myself. I'd seen my Mom's vibrator on the nightstand a couple of times. It was a light purple, rabbit-style device. I ordered something similar to it on-line and when it was delivered, it became a regular part of my masturbatory routine. I often found myself feeling horny. Hormones I guess.\n\nOne evening after dinner I had gone up to my room to do school work. Sitting at my computer, I just couldn't concentrate, so I clicked on the mouse and redirected to one of my favorite porn sites. I got my vibrator out of my bedside table, and in the blink of an eye I was back at the computer with my pants and underwear around my ankles and my shirt and bra pulled up over my breasts. I had my rabbit on high and jammed completely into my pussy and my free hand was twisting at my nipple. I was watching a particularly raunchy video of a women and two men. The woman was on her hands and knees with her mouth locked onto one guy's cock. The other guy was screwing her anally. Grinding the rabbits buzzing ears onto my clit, I came quickly and hard. I was going to go for a second orgasm when my Mom walked into the room with a basket full of clean laundry.\n\n\"Jeez Mom, don't you knock?,\" I exclaimed as I removed the vibrator and turned it off.\n\n\"I'm so sorry Kelsey. I thought you were studying. I'll just leave the laundry and you can go back to what you were doing.\"\n\n\"No that's okay. Now I'm kind of distracted,\" I said as I stood to pull up my pants. \"Do please try to knock though when my door is closed, though. I kind of have been doing this a lot.\"\n\n\"I understand completely. And again, I'm sorry,\" she said as she turned for the door.\n\n\"Hey Mom, wait a minute. Can I ask you some questions? About sex?\"\n\n\"You know you can. What's on your mind?\"\n\n\"A couple of things. Have you ever had, um, anal intercourse?\"\n\n\"I've tried it, yes. I don't enjoy it. I find that it hurts. I do like it occasionally if a man inserts his finger there though, provided its lubricated and he is gentle about it. It can take an orgasm to the next level.\"\n\n\"That's what I figured. In all these porn videos I see the woman pretends to love taking a penis back there. I just can't see that it would be pleasurable. Ok. Next question. Most of the women in porn videos have shaved their pubic hair. And I noticed the other day when you came out of the shower that you had too. Why?\"\n\n\"Well, that's a little complicated. I do it because I like the way it feels, and I find the look to be sexy. There's a practical reason too; it can make it more appealing for your partner to perform oral sex. Unfortunately, a lot of women shave because men tell them to. And porn has glorified the bald pubic mound to the point that women think they have to shave. That's not right. If you do it, do it for yourself. And by the way, if your partner wants oral sex, don't be afraid to ask him to trim or shave either. It's a two way street.\"\n\n\"And, um, about oral sex. When you give a guy a, you know, blow job, do you let him cum in your mouth? In these videos, some women let the guy shoot their semen in their open mouth and then spit it out. Some swallow it. And some pull out the cock before the guy ejaculates, and then they cum on the girl's face or breasts, or sometimes in their hair. It all seems kind of gross.\"\n\n\"So you've never given oral sex?\"\n\n\"Never given, never received. Most of my experience is pretty vanilla so far.\"\n\n\"Well again, it isn't a simple answer. Yes, when I am giving oral sex, I usually let the man cum in my mouth and I swallow it. It's an acquired taste, but I don't mind it. And from a practical perspective, it's not as messy. You don't have to wipe the guy's load off of your face or body or clothes or sheets. I guess I'd say try it, you might like it. But you do what you are comfortable with, not what a guy tells you to do.\"\n\n\"I totally get that. Ok, one more. Have you ever been in a threesome?\"\n\n\"Nope. I'm a one partner gal. I suppose if it was a casual encounter, a threesome might be interesting, but the two girls-one guy scenario just seems awkward. I wouldn't know how to share. And two guys and me seems like I'm more of an object to be used, or that I have to perform. To be honest, the opportunity has never come up and I've never sought it out. Why, are you thinking about it?\"\n\n\"No not really. It turns me on when I see it on-line, but I just don't think it's realistic. I'm having a hard enough time finding one guy I like, let alone two. And being in a sexual situation with another girl would kind of freak me out I think. I was just curious.\"\n\n\"Ok, anything else?\"\n\n\"No, I really need to get my homework done. Thanks for the talk Mom.\"\n\n\"Any time.\"\n\nA couple of weeks later, Mom started to see a new guy. His name was Doug. It was serious enough that after a while, she brought him home to introduce him to me, which she had never done with any of her previous boyfriends. He was a nice guy. A little nervous about meeting me I think, but pleasant enough. He began to come over for dinner fairly regularly and we got to be more familiar with each other. Then one Friday night, he stayed later than he usually did and it was obvious to me he was going to sleep with Mom. I was okay with that. I still really missed my dad and considered our house his turf, but I wasn't going to begrudge my mom a chance to move forward with her life. I made some excuse about having a headache (not true), and a soccer game the next morning (true) and went to bed.\n\nThe next morning was really gray, humid and windy. The forecast called for scattered showers, but it sure looked like it was going to be worse than that. Doug and my mom didn't surface as I had breakfast and got my gear together, so I got my car out of the garage and drove to my game. I remembered at the last minute to throw in an umbrella.\n\nIt was already sprinkling when I got to the soccer complex, and the officials were huddling around the equipment building looking at their phones. There was a distant rumble of thunder and the rain started to pick up. I went over to where the rest of my team had gathered around our coach. We all pressed against the side of the building, trying to stay dry under the eaves. There was a flash of lightning in the distance as one of the officials walked over.\n\n\"It looks like a strong band of storms is on the way. Lot's of lightning,\" he said. \"As far as we can tell, it's going to be a couple of hours before it passes all the way through. Even if it's quicker than that, the field is going to be a mess with all this rain. We're going to cancel the game. You can call the league about rescheduling.\"\n\nI was relieved. It was the right thing to do. The lightning was getting scary, and I hadn't been looking forward to playing in the muck. We all gathered our things and headed back to our cars.\n\nThe rain was really coming down as I drove home, so it took me longer than usual. Visibility was very limited, and I had the windshield wipers on high the whole way. As I pulled into the driveway, I punched the garage door opener. As the door opened, I saw that Doug's car was in my spot. I figured Mom had him pull in to avoid the rain, which I understood, but it still pissed me off a bit. I parked the car and made a dash to the garage. Even with the umbrella, I got pretty wet. I was glad I was in my soccer uniform instead of nicer clothes. I kicked off my wet shoes and put them in a boot tray by the door and went into the house. I was going to go straight upstairs and change into something dry.\n\nAs I walked through the kitchen, I became aware of rhythmic grunts coming from the great room. Subconsciously I probably knew what it was, and that I should stop in the kitchen, but it didn't completely register, and my momentum carried me to the doorway. What I saw there caused me to come up short. My mom was standing facing away from me, bent over the back of the couch, and Doug was vigorously fucking her from behind. They were completely naked. The grunts were coming from Mom, and were in time with the thrusting Doug was doing.\n\nWith all the thunder and rain, they obviously hadn't heard me come in. I had, of course, seen this type of thing on the internet, but seeing someone else having sex in the flesh, so to speak, was a decidedly new experience. I felt the familiar stirrings of arousal between my legs, and although I knew I should announce my presence, I just stood there frozen in my tracks.\n\n\"Oooooohhhh. Yessssss!,\" Mom groaned. Then she started moaning loudly and I knew she was having an orgasm. I couldn't tear my eyes from the two of them. Doug grabbed Mom by the hips and continued to slam his cock into her pussy. Her legs were shaking as the pleasure rippled through her body. I was surprised that I had a twinge of jealously. I wished that I could stick my hand down the front of my shorts and play with myself. I knew I would find that I was wet.\n\nSuddenly, Doug announced that he was going to cum as he stepped back and pulled his cock out of Mom's vagina. She quickly wheeled around and dropped down to her knees. She grabbed his erection and stuffed it into her mouth. Only then did she look past Doug to see me standing in the doorway. Her eyes went wide, but she continued to move her mouth up and down Doug's cock, sucking hard. Doug gave a long groan of appreciation. He had no idea that I was there.\n\n\"Here it comes,\" he said. I could see his butt cheeks flexing and I knew he was ejaculating forcefully into my mother's mouth. She kept her eyes directly on me as she accepted his load. I could see her throat working as she swallowed several times. Eventually she let his erection fall from between her lips.\n\n\"I'm sorry about this,\" she said, scooping up a small drop of jism that had escaped the corner of her mouth and licking her finger clean. \"I thought you had a game.\" Doug turned around and raised his eyebrows in surprise.\n\n\"Kelsey!,\" he gasped, trying to cover his glistening, semi-hard dick with his hands.\n\n\"The game got cancelled because of the lightning,\" I said. \"Sorry I didn't tell you that I was here. I was a little stunned I guess.\" Mom reached over and moved Doug's hands from his groin. I noticed that his balls were completely shaved, as was most of the area around his cock.\n\n\"Hey, it's okay. Kelsey and I are very open about sex. Consenting adults shouldn't be embarrassed or ashamed. They should probably get dressed though,\" she said, smiling at me. She picked up her panties which lay discarded in a wad on the floor. Then she and Doug grabbed the rest of their clothes from the couch.\n\n\"I guess we should set some ground rules since Doug is around,\" Mom said as she pulled on her top and pants. \"Kind of like me knocking when your door is closed. Who knows? It could be reversed. We could walk in on you.\"\n\nI laughed. \"I'm pretty sure I'm not going to put myself in a position where you walk in on some guy bending me over the couch and taking me from behind. But I get your point.\"\n\nNeedless to say, we worked out an arrangement so that future episodes of sexual intimacy occurred in private. But I never forgot the thrill that ran through my loins while I was watching the two of them.\n\nFast forward to today and now I'm thirty. I'm a graphic artist at an electronics company. I do a lot of work on technical publications, like those user manuals no one ever reads, or the installation instructions everyone hates. I moved into the city when I got my job coming out of college, and live in a one bedroom unit on the twelfth floor of a high rise apartment. The building is fairly new and situated in a trendy area along the river. The river isn't very wide at the point where my apartment building is, but when you look across the river, it still feels like you are looking across the border into another country.\n\nAll the apartment buildings in the neighborhood have balconies, and most are like mine with floor to ceiling windows. My balcony extends from my living room to in front of the single bedroom. The windows have shades that I have learned to close at night, like almost everyone else. I was a little creeped out at first that people across the river could see into my apartment, but the distance is far enough that it is hard to really see anything, and it didn't take long for me to forget all about it.\n\nI think I'm pretty attractive. I have brown eyes and longer, brown hair that hangs just below my shoulders. More often than not I wear it up or in a pony tail. I'm proud of my figure, and I run or swim regularly to keep in shape. I'm not skinny by any means, but my curves are defined. My breasts are 34C, and are in proportion to my five foot five inch frame.\n\nThanks to my Mom's healthy and open attitude, I'm pretty uninhibited when it comes to sex. I haven't found the guy that I think will give me a relationship like my mom had with my dad, so for me it's all been about having sex and physical pleasure rather than making love. I really enjoy having someone go down on me, and I like to return the favor. As my mom recommended, I shave my pussy completely bare. I've experimented with anal sex a couple of times and actually found that I like it if it's done right. I have a number of vibrators that get regular use. I even had a fling with another girl in the office about four years ago. She flirted with me at an end of work happy hour and I was horny. After a few drinks she took me back to her apartment and we explored each other's bodies for hours. It was a one night thing though, not a habit. I consider myself a straight on heterosexual.\n\nMy most current relationship ended about three months before, and I was starting to feel like I needed to get some guy into bed. I came home from work and took a run, then showered and made a quick dinner. I considered going clubbing with some friends and possibly looking for a good candidate for a hook up, but it was a Monday night and I had work the next day. That kind of put a damper on that idea.\n\nI was watching the local news and the weather guy said it was going to be a cloudless night with a full moon rising in the early evening. I got a little nostalgic thinking about my dad. I hadn't done any star gazing since I moved to the apartment. The city lights pretty much wash everything out, but a full moon would still be visible. Mom had given me the spotting scope when I moved to college, and I still had it stashed in the back of my utility closet at the apartment. I poured myself a glass of wine and went out on the balcony with the scope.\n\nIt was still a good half hour before the moonrise, so I spent some time watching people walk along the river. Then I decided to look at the balconies across the way to see if there were any good ideas for furnishing mine. I just had two cheap plastic Adirondack chairs and a small table. There was quite an assortment of different approaches. Some people obviously used their balconies for storage, especially for bikes, or strollers, or coolers. Some were basically gardens with tomatoes, peppers, flowers or herbs. Others were similar to mine with simple seating. At the opposite end of the scale, some had hanging lights, and planters and upscale furniture. I decided a plant or two wasn't a bad idea and made a mental note to go shopping the next weekend.",
        "I swung the scope back to check a balcony I had noticed with some sort of hammock set up. It was at the same level as my apartment in a building directly across from me. As I worked to make the image sharper, I overshot and focused instead on inside the apartment. There was a guy sitting on a couch watching TV. He looked to be maybe five years older than I was. I moved the viewfinder to look at the rest of the apartment. I audibly gasped when I realized that there was a woman standing near the window with her own telescope. She appeared to have it trained directly at me.\n\nShe stood back from the scope and looked over at what I assumed was her boyfriend or husband, then turned back toward me and gave me a smile and a little wave. She was gorgeous. She was my age or a little older. Light complexion but tanned, with blond curls cascaded down to her shoulders. A typical Scandinavian beauty. I waved back to her and then stepped back and mouthed the word \"sorry\" and adjusted my scope to look up at the moon which was climbing into the sky.\n\nThe next night I came home from work and almost immediately began thinking about the mystery girl across the way. Why was she standing back in the apartment with her scope instead of out on the balcony? Was she spying on people? Eight o'clock at night wasn't a time when she was going to catch many people in their bedrooms, so I doubted she was a peeping Tom type. The more I thought about it, the more curious I became. As it came closer to eight o'clock, I decided to see if last night was a fluke. I set up my scope near the window and directed it across the river to the same apartment.\n\nSure enough, she was there again, watching me. She waved at me and mouthed \"hello\" I noticed that she was dressed like she was getting ready to go to bed. She had on a man's dress shirt that hung down to her thighs. She had the cuffs rolled up, and the first two or three buttons were undone so that you could see the top of her cleavage. It was a very sexy look and was a stark contrast to the sweatpants and t-shirt that I had thrown on.\n\nAs we continued to stare at each other across the void, her partner came out of what I concluded must be the bedroom. He was dressed in just a pair of pajama pants with a drawstring. He was an attractive guy that looked to be in pretty good shape. No six pack abs or anything, but my guess is that he worked out. He came up behind the girl and wrapped his arms around her waist and kissed her neck. She grabbed one of his hands and squeezed it and stood up from the scope. As he led her towards the bedroom, she looked back over her shoulder and winked at me. She had a little skip in her step as she went through the doorway. I looked over at the bedroom window just as the lights went out. The shades were drawn. I was sure that they were going to have sex. I wondered if she had planned for it to happen at specifically that time and decided that she must have.\n\nWednesday night I couldn't wait for eight o'clock. It seemed like it took forever to arrive. I again set up my scope and looked to see if the couple was home. I'd begun to think of them as Dick and Jane, just so that they'd have names. Silly I know.\n\nI focused on the apartment and was disappointed that no one was there. The lights were on and the scope was in its place, but no Jane looking back at me. Then I noticed a small piece of paper stuck to the window right beside the scope. I zeroed in on it hoping there was something I could read, but instead of handwriting, there was a simple arrow drawn in black marker pointing to the left, in the direction of the bedroom. I zoomed back out a bit and swung over to the bedroom window.\n\nWhat I saw stunned me. A small lamp was on and the shades were open. A king size bed was set with its headboard on the wall farthest from me and the foot of the bed in front of the window. Dick and Jane were on the bed. I mean, I assume it was Dick. I couldn't see much of him. My view was basically looking directly up between his spread legs at his cock and balls. Jane was straddling his body in a sixty-nine position and sucking his rod. Best I could tell, she had her pussy pressed down on his face for him to lick. I wondered how she had talked him into this.\n\nI don't know how long they had been going at it, Dick was thrusting up into Jane's mouth at a pretty quick pace, so I figured he was a fair ways along. His cock looked big, although it was hard to tell with all the movement. The whole thing had a silent movie aspect to it. When I watch porn, it's all moaning and groaning and bodies smacking together. All I could hear now was my own ragged breathing.\n\nAs I continued to watch, I unsnapped my jeans and tried to get my fingers down to my clitoris. My panties already had a damp spot, and I knew before the night was out, I was going to get myself off. I found my slit and ran my fingers up and down its slick length until I moved them up and concentrated on rubbing my clit. I shuddered as I made contact. It had been too long since I'd had a good cum.\n\nAt that moment, Jane sat up on Dick's face and tossed her hair back out of her face. She was looking across at me. I don't know if she could see me, but she smiled. Jane was even more beautiful naked. She had stark tan lines from a bikini that set off her breasts and her mound like they were in spotlights. I could see that she shaved all but a small landing strip of pubic hair at the top of her vulva. She also had a small tattoo just below her bikini line. It was a pair of hearts with Cupid's arrow shot through them. I found it interesting that the arrow pointed directly toward her pussy, and wondered if that was intentional. Finally, I noted that Jane had a wedding ring on her ring finger. So they WERE married.\n\nJane was really getting animated. She was grinding down onto Dick's tongue and tugging at her own nipples. Her chest was flushed between her breasts. Her eyes were closed and her mouth was hanging open. I continued to strum my clit. My hand and panties were getting sticky from my fluids. I was having trouble standing still enough to keep my eye to the viewfinder, but I managed.\n\nThirty seconds later I saw Jane's eyes fly open and she hunched forward at the waist. She was cumming, and it looked like it was intense. For a minute she stayed locked in that position, jerking her shoulders in a pattern that I knew was in synch with the pulsing contractions of her vagina. I would have loved to have orgasmed at the same time, but I couldn't get the right angle with my hand down my pants to get me there.\n\nAfter a minute, Jane relaxed and climbed off Dick's face. She immediately went back and took his erection in her mouth and began to aggressively stroke it with her hand. Shortly after, I saw Dick say something and Jane took her mouth off his cock and continued to pump it hard. I could see now that his tool was quite large, as she couldn't close her fingers around its girth. Dick arched his back and a huge rope of semen shot straight up into the air. Several more followed and Dick collapsed back into the pillows. After a minute or two, he got up and went into what I assumed was the bathroom, likely to clean up. When he left, Jane got up and came to the window. She held up a finger to her lips in a \"shush\" gesture, and then shut the shades. So maybe Dick DIDN'T know I was watching. I didn't care, I needed to finish.\n\nAs I hurried to the bedroom I almost tripped as my jeans and panties fell down to my feet. I kicked them off and jumped up on the bed, spreading my legs wide and bringing my knees up so that my lips opened and my clitoris, which was hard as a diamond, was completely exposed. I took the three middle fingers of my right hand and rapidly rubbed them across my clit, pressing down hard to maximize the contact. Then I took my first two fingers of my left hand and stuck them in to my vagina in search of my G spot. I was so turned on that my juices were dripping down from the opening of my vagina to my anus. The orgasm, when it hit, was going to be huge.\n\nI thought back to the sight of Jane hunching over Dick's face in the throes of her climax, and the spurting cum shot from Dick's big shaft. I felt my vagina starting to spasm lightly around my fingers and new I was going over the edge. I pumped my fingers hard against my G spot and redoubled my efforts on my clit. I felt the contractions get stronger, and pulsing flashes of pleasure radiated out through my groin. I was cumming. One wave after another hit me. Every muscle in my body tensed and my toes curled. A second orgasm arrived that was even stronger than the first. My teeth clenched and I rode the sensations until they finally subsided. I dropped my hands to my sides and let my legs fall flat. I was spent, but supremely satisfied. I already knew I'd be back at the scope on Thursday night, but I was going to make some adjustments. I was going to wear shorts with an elastic waist and no panties, and I was going to set my rabbit vibrator out ahead of time so that I had quick access.\n\nImagine my disappointment on Thursday when the appointed time came and Dick and Jane weren't home. I don't know why it surprised me. It's not like they could live their life with the sole purpose of having sex while I watched. But still. It was a let down. I put my vibrator back in the drawer for the next night.\n\nFriday was the same, but for different reasons. When I looked over that evening, they had two other couples with them and they were obviously hosting a dinner. I hadn't gotten my hopes up quite as high this time, but I was still bummed.\n\nSaturday, I made good on my plans to go shopping for some things to upgrade my balcony. I bought a nice potted hibiscus and small set of wind chimes. I also got a small bird feeder I could attach to the balcony railing and some no-mess seed. I didn't know if I could attract birds twelve stories up, but I was going to give it a shot. I got some Thai takeout for dinner and headed home.\n\nAfter I ate, I checked my emails and social media, looking up at the clock about every two minutes. Finally, it was closing in on eight. I went into my room and stripped, then put on a simple white t-shirt and a pair of loose jogging shorts. Nothing else. I set my vibrator on the bed and headed to the scope.\n\nI closed my eyes and made a silent wish that Dick and Jane would be back at it tonight, and then looked into the scope. I almost cheered out loud when I saw the lights in their apartment were on. But no one was in the main room. I panned left to the bedroom window and hit the jackpot. Dick was sitting naked on the side of the bed and Jane was kneeling in front of him bobbing her head up and down as she gave him an energetic blowjob. I now could see that Dick was really hung. Jane wasn't even able to swallow half of his erection. And the thickness of his cock stretched her mouth so that saliva was leaking out the sides and running down to drip off his balls.\n\nMy right hand flew down to my pubis mons, and I raked my fingernails across the hood of my clit. My legs buckled a bit from the sensation. My friend, and I thought of her as that now, continued to suck the head of Dick's penis into her mouth. She occasionally had to back off, probably to rest her jaw, but even then, she licked the tip and the frenulum as she jacked his erection with one hand and fondled his sack with the other. I got down to business too, grabbing my clit between my thumb and forefinger and rubbing it between them. I could feel myself lubricating, the warmth of my arousal was like someone had set fire to my cunt.\n\nI watched as Dick took Jane's head in his hands and pushed his rod further into her mouth. He held her there as he rocked is hips forward and backward to feed her his manhood. I imagined that he was feeding his massive length into my tunnel, and shivered at the thought. I felt a trickle of my juice run down the inside of my right thigh. I was close to cumming.\n\nDick took his hands of Jane's head and said something to her. She looked up at him and smiled and tilted her head back and closed her eyes. I figured he had told her he was going to squirt, and sure enough, as Jane continued to slide her hand up and down his shaft, he erupted. One, then two, then three ropes of his semen shot forward and landed on Jane's upturned face. There were a couple of weaker shots that dripped down and landed on her naked breasts. I had a small, sharp orgasm as I watched. I stopped pinching my clit and began to rub it hard. Dick had fallen back on the bed and had his eyes closed, his right hand casually stroking his cock. I looked as Jane got up from the floor and walked toward the window, her face covered with stripes of Dick's goo. She gave me the \"shush\" motion and closed the shades. He still didn't know he was being watched!\n\nI ran to the bedroom and grabbed the vibrator. My pussy was still pulsing from the first orgasm and it wasn't going to be long before I sailed off the cliff into a second. I wasn't subtle about it. I turned the vibrations and rotations to high and easily slipped the rabbit up to the hilt into my steaming canal. With my other hand, I pressed the buzzing ears to either side of my erect clit. Fifteen seconds later I was past the point of no return. My legs shook as my climax began, and the contractions coursing through my pussy were so strong they almost forced the vibrator out. But I held it in place and let myself be overwhelmed by the orgasm. It was mind blowing. I could hardly breath. Eventually, my arousal subsided, and I was left with a wonderful glow as I fell asleep.\n\nI was distracted all day Sunday thinking about the episode Saturday night. I wondered if I should feel guilty about watching, but Jane clearly knew I was there, so that seemed to imply consent. Even if Dick didn't know what was going on, he sure seemed to be enjoying himself. I decided it was a win-win all around. I did some grocery shopping for the week, and got caught up on laundry. I washed my sheets because of the series of wet spots I had left from my self-pleasuring. And I watched the clock. Eight couldn't come soon enough.\n\nI got set up and peered through the eyepiece. No one in the main room again but the lights were on. Time to check the bedroom, and just when I thought Jane couldn't surprise me, she changed the rules of the game. Dick was standing naked in front of the window looking directly at me. Jane had obviously clued him in about our little meetings. His cock was standing straight up, fully erect. The tip of the head went up to just past his navel. He had to be nine or ten inches long. Jane was standing behind Dick and was reaching around him and giving him a hand job. She was wearing a pair of white lace panties and a camisole that left her midriff bare. Either this was going to be all about Dick, or she was going to get hers later.\n\nI was warmed by the fact that both of them were now willing to perform. I was also mesmerized by the purple head of Dick's cock disappearing and reappearing from Janes curled hand. She was really pounding him, and I suspected this was going to be a quick session. No sooner had that thought run through my head than Dick closed his eyes and started thrusting his hips. Jane aimed his rod straight at me and it began to spew.\n\nThe squirts came fast and furiously, each one landing on the inside of the window and starting to slowly run downwards. Dick must have fired eight or ten shots because the window was pretty well plastered. And just like that it was over. Jane went into the bathroom and came out with a washcloth. Dick watched as she wiped off the window. Then they stood arm in arm and both waved. Jane closed the shades and they were gone. It had all happened so quickly, I hadn't even thought about me. I decided to take a night off and process the fact that I was involved in some sort of exhibitionist, voyeuristic threesome with two people I'd never even met or talked to. But for some reason that didn't bother me. Credit to my mom. I didn't feel guilty at all about pursuing physical pleasure, despite the fact that this was more than a bit kinky.\n\nMonday flew by at work, and Mondays never fly by. I wasn't necessarily very productive, but I didn't care. By the end of the day I knew I'd have to change panties when I got home. I kept fantasizing about everything I had watched, and it seemed like I was in a constant state of arousal. I couldn't wait to see what Jane had planned for tonight, because I was pretty sure that Jane was the instigator of all this and that Dick was along for the ride.\n\nThat night, I got into my now standard masturbation outfit of shorts and a T-shirt and settled in with the spotting scope. Another surprise awaited me. Dick and Jane were both standing by the scope in the main room. They were dressed in pajamas, but they were dressed. I wondered what was up. When Jane saw that I was looking at them she said something to Dick. He held up a piece of typing paper with something written on it. I zoomed in, read it and gasped. It said \"Your Turn\" I instantly realized that they wanted to be the observers this time. They wanted to participate by watching while I got myself off. I was simultaneously terrified and turned on by the idea.\n\nI looked back at them and saw Dick nodding and pointing at me. He had his hand down the front of his pajamas and I knew he was working on a growing hard on. Then he looked through the scope at me. As far as I knew, it was the first time he had seen me \"up close\" Jane was just standing there with her arms crossed on her chest, her face set in a mischievous grin. I knew I had no choice, so I took a deep breath and nodded. I motioned to my bedroom and backed slowly away from the scope.\n\nWhen I got to the bedroom, I turned on the lamp that was on my bedside table and then opened the shades. I could only hope that Dick and Jane were the only ones watching, but who knew? It was odd without being able to see them through the scope. I knew they were over there, but couldn't make them out, and couldn't see what they were doing. I began to understand what a turn on being on the exhibitionist side of the equation really was. I was going to masturbate myself to orgasm with no idea what their reactions were.\n\nMy bed was situated the same way theirs was, so if I got on the bed with my head on the pillows, they would have a clear view of my bald, no doubt dripping snatch. I decided I wasn't going to draw this out. I faced the window and pulled my t-shirt over my head, letting my breasts swing free. My nipples were totally engorged and pointing straight out. I hooked my thumbs in the elastic of my shorts and quickly pushed them down to my feet and stepped out of them. I stood there for a bit, assuming they might want to look at my nakedness before I got started.\n\nAs I climbed onto the bed, I decided to go with a tried and true method. Hard rubbing of my G spot with one hand and a determined assault on my clit with the other. I fluffed the pillows up and leaned back into them, drawing my knees up and out to fully expose my inflamed genitals to my audience. As usual, there wasn't going to be any problem with lubrication. I dipped several fingers of my right hand into my honey pot to get them wet. I pulled them out and began to rub them left and right across the top of my pussy lips where my clitoris had emerged. I quickly replaced my right hand with my left, zeroing in on my G spot. And then I went to work.\n\nI looked across to Dick and Jane's apartment and could make out their outlines by the scope. They seemed to be taking turns watching. I felt sorry for them. I had exclusive use of mine when I watched them. They had to share.\n\nFaster and faster I frigged my clit, curling and pistoning my fingers in my vagina at the same time. My whole crotch was wet, and I knew there was going to be evidence of this session on the sheets. It didn't matter to me. I kept on jilling myself. I was starting to climb the mountain to an epic orgasm, and it wasn't going to be much longer. I was gasping for air, tossing my head back and forth as my fingers moved so fast, they were a blur. At that moment, for some reason, I remembered my mom telling me that a finger in her ass could take her orgasm to the next level. I had no idea if Dick and Jane were going to think this was nasty or not, but I wouldn't be able to see them to tell, so I didn't care. I continued to rub my clit, but took my fingers out of my pussy. I curled my hand under my left leg and slowly pushed one finger into my asshole up to my second knuckle and held it there.",
        "God it felt good, and I knew at that moment I was going to come like I never had before. I started to slowly withdraw my finger and then pushed it back in. I was soon fucking my ass with it, and that toppled me over the edge. When my orgasm hit it was like my whole lower half went into a seizure. Again and again, I thrust my hips off the bed as the spasms coursed through me. I tipped my head back and let out a loud groan. My legs were shaking uncontrollably. The orgasm lasted well over a minute before my muscles started to relax. I'd never felt anything like it. I was completely spent, but I forced myself to get up and walk to the window. I winked in the direction of Dick and Jane and closed the curtains. I went back to bed and fell into a deep, post orgasmic sleep.\n\nI woke up Tuesday morning not entirely convinced that it hadn't all been a dream. The fact that I was naked, and the state of sheets convinced me that it wasn't. I dragged myself out of bed and went to work. I had quite a backlog of projects on my desk, so I threw myself into them. They kept my mind engaged and I managed to get through the work day with a minimum of distractions. Although I found myself staring into space at times, trying to pin down why I didn't feel embarrassed or guilty about openly masturbating as a performance for people I didn't know. I decided it didn't matter, and frankly, I thought the novelty of the whole situation would wear off. I assumed the frequency of this virtual m\u00e9nage a trois would fade, sooner rather than later, especially if I started dating someone again. No way I was going to tell some new guy about the whole arrangement.\n\nBut in the meantime, it kept up almost daily. That night I looked over to see Dick and Jane laying next to each other, with Dick jacking his cock and Jill with a vibrator pressed into her vagina. They were smiling and it looked like they were racing. Dick won, shooting a geyser of his gunk all over his chest just before Jane arched her hips off the bed as she came.\n\nWednesday night they pointed to me again, and I started a languid session with my rabbit vibrator that quickly turned into three leg-shaking orgasms.\n\nThursday it was raining so hard I couldn't see across the river, so I streamed a movie for the first time in what seemed like months.\n\nFriday, Dick had Jane bent over the couch and was drilling her from behind. It was almost an exact repeat of the scene I walked in on with my mom. Right before he came, Dick stepped back and Jane took his cock in her mouth and swallowed his load. Afterwards, I couldn't get my vibrator lodged in my pussy fast enough.\n\nTime stood still again Saturday as I anticipated that evening. My expectation was that Dick and Jane would indicate it was my turn again, and I was having trouble thinking of something new to do. Looking back, it's funny how the sessions had become performances. No rehearsals of course, but I genuinely wanted to satisfy my audience. Without a partner, there are only so many things a girl can do that are unique. Turns out, I needn't have worried.\n\nAs eight o'clock approached, I decided to get ready. One thing I could improve on was my look. Running shorts and a t-shirt falls a bit short of sexy. I brushed out my hair and put on a little make up. I took off all my clothes and put on the sexiest teddy I had. It's a deep, emerald green lace thing that is completely sheer. It has a plunging neckline and no panel in the crotch. You can see everything, and I mean everything. I had my vibrator out and ready as I moved toward the scope. The air conditioning in the apartment had my nipples fully erect, and I was already moistening between my legs.\n\nI looked through the scope and Dick and Jane were in position in their great room. They were both naked and Dick was stroking himself. I figured that either they were going to play with themselves as they watched me. Or maybe the turn-taking was random and not planned and they wanted to perform?\n\nSeeing that I was at the scope, Jane handed Dick a piece of paper. He held it up for me to read and I adjusted the focus. My jaw almost hit the floor. The paper said \"Join us?\" A million thoughts ran through my head, but most of them were things like did I shave my legs today? And, I've never been in a threesome. And, can I handle his enormous cock? None of the thoughts were even close to don't do it. I knew I wanted to, and if I hesitated, I might chicken out and regret it forever. I looked up from the eyepiece and slowly nodded my head.\n\nJane handed Dick another piece of paper and I looked back through to read it. Jane had a big smile on her face and she did a little play clap. The paper had their street address on it, apartment 1216E. I nodded again and slowly stepped away and went into my bedroom. I tried to focus my mind on what to bring, not what might happen. I quickly brushed my teeth and dabbed on a little perfume. I packed my bath kit in a duffle bag and put in a change of clothes. At the last minute, I also threw in my vibrator. Now, what to wear over there?\n\nI decided if I was in for a penny, I was in for a pound. I left the teddy on and put on light rain jacket that came down to about my knees. I giggled to myself that I probably looked like a female flasher, but Dick and Jane were probably still going to be naked when I got there, and I didn't want to be far behind. My pussy had started to drip, and the teddy was becoming even more sheer as a damp spot formed and spread. I threw on a of pair flip flops and headed to the elevator.\n\nI had to walk half a block to get to a pedestrian bridge over the river. The whole way, images of the three of us intertwined in various sexual positions ran quickly through my head. My nipples were nearly unprotected and were rubbing against the inside of my jacket, sending jolts to my clit. I tried not to look people in the eye as they passed. I wondered if Dick and Jane were watching me cross the bridge, but I forced myself not to look.\n\nFive minutes later and I was in their apartment lobby. I found the button for 1216E. The name next to it was Petersen. So now I knew more about them than they did about me. I hesitated for a minute as a chill ran down my spine. I was extremely nervous, but also incredibly turned on. I tentatively reached out and pushed the button. I thought they would ask who it was on the intercom, but the latch for the door buzzed. I pulled it open, and went in. It was a fancier apartment building than mine, and it took me a minute to find the elevators, but soon I was riding up to the twelfth floor. As I stood in the car, I was aware of the aroma of my arousal. I giggled a bit. Lucky I was the only one there. What would someone have thought?\n\nThe elevator doors opened and I followed the signs down the hall and found the door to 121 6E. The moment of truth had arrived, but I knew there was absolutely no way I was backing out now. I reached out for the simple brass knocker and tapped on the door. It swung open almost immediately and I was face to face with Jane. She was nude, but stood confidently in the doorway. She reached out with both hands for mine.\n\n\"Come in beautiful,\" she said. \"We've been waiting for you.\" She walked backward into the apartment, pulling me with her. I dropped my duffel bag by the door. Dick was standing by the side of the couch. His cock pointing straight at me.\n\n\"Welcome,\" he said while giving me a wave. \"Do you mind if we ask you your name?\"\n\n\"It's Kelsey,\" I replied shyly.\n\n\"We weren't even close,\" Jane said laughing. \"I had you pegged as a Christine, and he was betting on Simone. My name is Bridget, and my husband is Leo.\"\n\n\"I'm a little embarrassed,\" I said. \"I didn't put much thought into what your names were. In my head you were Dick and Jane.\"\n\n\"That's hilarious,\" laughed Bridget. \"I can imagine the picture book now. See Dick orgasm. Orgasm, Dick, orgasm.\"\n\nI laughed too. \"Yeah, never occurred to me where I pulled the names from. Nice to meet you Bridgit. You too Leo.\"\n\n\"Oh I think the pleasure is going to be ours. Let's see what this coat is hiding,\" purred Bridget as she unbuttoned the front. She pushed the coat off my shoulders and gave the sleeves a tug. It fell to the floor and there I was, basically naked in front of them.\n\nBridget wasn't done yet. She quickly plucked at the spaghetti straps of the teddy and peeled it down my body, freeing my breasts. Then she pushed it down over my hips and it fell to my feet. \"Looks like someone is a little turned on,\" she said, noticing the damp fabric that had been between my legs. \"Why don't we go into the bedroom and get started? There's no time like the present.\"\n\nShe took me by the hand and I followed her into the bedroom. Leo walked behind us, letting Bridget take control. It seemed crazy to me that, although I'd never actually been in the bedroom, I knew exactly what I would see. The only difference is that the shades were closed. Bridget saw me glance at them.\n\n\"I think this should just be about us, don't you?\" she asked. I just nodded in response. \"Kelsey, we really don't know each other, so just so everyone is comfortable, let's set a safe word. Anyone says the word, and we stop, okay?\"\n\n\"Yes, thank you. Great. What word should we use?\"\n\n\"I was thinking 'telescope',\" she said. \"Seems appropriate don't you think?\"\n\n\"Yes, telescope. Perfect.\"\n\n\"Okay, with that settled, why don't you lie on the bed? If you don't mind, I'd like to taste you.\" I was startled by her bluntness, and my surprise must have been evident.\n\n\"Sorry Kelsey, have you ever been with another girl? I shouldn't have assumed . . . . but I've been fantasizing about going down on you for a while. If you don't want that, there's plenty else we can do.\"\n\n\"I've done it. But only once, and I'd had a lot to drink. I, um, I guess I'd like to try again with you.\" I tentatively climbed on the bed and lay back into the pillows and slowly opened my legs to reveal my vagina. I watched mesmerized as Bridget crawled up on her knees between them. Leo got up and lay next to me on the bed with his head propped in one hand.\n\n\"You're sure?\" Bridget asked.\n\n\"Y-y-es,\" I stuttered.\n\nBridget dropped her head down to my pubis. I looked down at her golden curls cascading down over my thighs. It tickled a bit. Bridget made eye contact as she reached her tongue out and flicked it at my clit. \n\n\"Fuckkkkk,\" I moaned.\n\nShe immediately picked up the pace and I knew I wasn't going to last more than a few minutes. I'd basically been at the edge of cumming when I walked into the apartment, and the situation was so overwhelming, physically and mentally, that I was almost out of control. Leo reached over and began to gently tug and twist my nipples, first one, then the other.\n\n\"Unnnnngggg,\" I groaned as my body shuddered under this new stimulus. \"So close. Already. So close.\"\n\nBridget accelerated her efforts, now lashing her tongue completely up and down from the opening of my vagina to my clitoris. She mashed her tongue hard against my clit, the pressure of the contact adding to my excitement. My legs started to twitch even before my orgasm began. Then Bridget took my clit into her mouth and started to suck it. The dam burst and I began to climax. I grabbed the sheets with both hands and hung on for dear life as my entire body clenched as if it was one contracting muscle.\n\n\"Ahhhhhhhhh. Ahhhhhhhh. Ahhhhhhhh,\" I grunted in time with the rhythmic pulses that were overtaking me. Bridget kept lapping at my slit. Over and over the spasms coursed through my cunt. I was afraid my thrashing legs would somehow injure her, but I couldn't control them. Eventually, the intensity of the orgasm began to wane, and Bridget stopped her ministrations and looked up at me.\n\n\"Wow. So it was good?\" she asked playfully.\n\n\"Godddyess,\" I mumbled.\n\n\"Okay then. My turn,\" she said pushing Leo out of the way and lying on her back with her legs spread wide. \"Eat me,\" she said with that devilish twinkle in her eye.\n\nLooking back on it now, I'm surprised that I didn't even hesitate. I guess I was on some sort of sexual auto-pilot. I mean, I'd only ever gone down on one girl, and when I was in a drunken state. I was hardly an accomplished partner. In any case, I remember being eager to return the favor. I put my face between her thighs, spread her pussy lips with my hands, and began to furiously lick her snatch.\n\n\"Mmmmmm, yesss,\" she murmured, putting her hands on my head and holding me gently to her womanhood. Taking that as positive affirmation of my technique, I kept at it. I tried to think of what brought me pleasure when guys had performed oral sex on me, and had an inspiration. I paused just a moment to put two of my fingers in my mouth to lubricate them.\n\n\"Don't stop Kelsey,\" Bridget panted. \"Please, keep going.\"\n\nI returned my tongue to her clit and at the same time, firmly pushed my fingers into her vagina and hooked them toward the front wall in search of her G-spot. It didn't take long to find, and I tried to time the pumping of my fingers in and out of her sex with the trilling my tongue was giving her clit.\n\nAt that moment, I became aware of Leo moving on the bed. I had been so focused on pleasuring Bridget, I had all but forgot about him. I glanced back over my shoulder and saw that he had positioned himself directly behind me. He was on his knees, and that massive cock of his was pointing almost directly straight up, the plum-colored head dribbling pre-cum. He didn't say anything. He just tilted his head as if asking a question. It was obvious what he wanted. I raised my rear higher in the air.\n\n\"Yes,\" I said. \"Do me.\" Then I returned my attention to Bridget, who was gasping loudly now in time with my fingers' insertion and withdrawal. She was close to cumming. I put my tongue back to work as I felt Leo shifting behind me. At this point, I wasn't concerned about Leo's size. I was so wet, I knew I'd be able to take his tool.\n\nI felt Leo put his cock head at my vaginal opening. Then, he reached down and grabbed me by the hips. I figured he was planning to ride me hard and fast, and I was ready to be vigorously fucked. He didn't disappoint. I yelped loudly as he pulled back on my hips and drove his rod into me in one sudden push. I felt the tip of his cock bounce against my cervix and knew this was going to be a skewering for the ages.\n\nI tried to pay steady attention to Bridget's impending orgasm, fingering her and slurping up her juices. At the same time, Leo was jamming his pole deep into me at a furious pace, filling and stretching my canal like it had never been before. It was inevitable that I was going to have another huge cum. I wanted to get Bridget off so that I could concentrate on my own orgasm, so I took a page from her book, taking her clit in my mouth, and sucking it hard while my fingers plumbed her cunt. As it did for me, that sent her over the edge. She pushed her hips up off the bed and pushed my head into her mound, and came.\n\n\"I'mmmm cuummmmming,\" she wailed. \"Yessssss, yesssss, fuccckkkk.\"\n\nAll the while, Leo continued the pounding he was giving me. He was audibly grunting now, and I figured he wouldn't last long. There was a slap, slap, slap sound as he thrust into me again and again, his hips colliding with my ass every time he buried himself in me. His cock was rasping over my clit as he worked it in and out, and my orgasm was building.\n\nBy now, Bridget had relaxed and was watching as her husband fucked me doggy style. I assumed he was looking at her too, as he took another woman in front of her. I was right on the edge of cumming, so I dropped my head down onto the bed and reached back between my legs with one hand and started to frig myself. I could feel Leo's erection sliding in and out, past my fingers. It all felt so good, I started to cum on his cock.\n\n\"Going to cummmmmm,\" I mewled. \"Ahhhhhrrrgggg.\"\n\nMy legs started to weaken and shake as the orgasm hit me hard. Leo was still grabbing my hips and fucking me for all he was worth. I was lost in a tidal wave of sensations as I came and came. Then with one last deep thrust, Leo pulled me back onto his cock and held me there. I felt his cock get even larger, and I knew he was going to shoot, basting my cervix with his wad. I felt him pump his semen into me as he held me on his throbbing rod, my vagina milking him as my orgasm continued. I could barely breath.\n\nEventually, my orgasm subsided. Leo must have sensed that I was spent. He withdrew his dick with a plop, and we all collapsed on the bed.\n\n\"My God, that was intense,\" said Bridget, a huge smile across her face. \"Even better than my fantasies.\"\n\n\"How long have you been thinking about doing this?\" I asked. \"When did you start watching me?\"\n\n\"I noticed you for the first time about two months ago. I wasn't trying to spy or anything. You were sitting out on your balcony and I thought you were pretty. I've been checking every once in a while, just to see what you're up to. I don't know when I started thinking about you sexually. It just kind of happened.\"\n\n\"She didn't tell me anything about it,\" said Leo. \"The first I heard about you was a week ago when Bridget told me afterwards that someone had watched me cum on her face. I thought she had gone crazy. Then she clued me in. I should have known something was up. We aren't usually in a sex every day routine.\"\n\n\"Speaking of which. Any man in your life Kelsey?\" Bridget queried. \"I haven't seen anyone.\"\n\n\"No, not now. I broke up with a guy three or four months ago. I haven't been motivated to get back into the dating scene yet.\"\n\n\"Lucky for us then,\" said Bridget. \"We don't have to share you with anyone else.\"\n\nI smiled and I could feel myself blushing. I could also feel some of Leo's spunk dripping down the inside of my thigh.\n\n\"If you guys don't mind, can I use the bathroom to, um, clean up a little.\"\n\n\"Oh yes, for sure. I'm sorry. I should have offered. I know Leo can be, how should I put this, high volume. Go right ahead.\"\n\n\"I'm not complaining. I haven't cum that hard in a long time. If you don't mind me asking, how big is his, you know, penis?\"\n\n\"It's nine and half inches long if I'm really hard, and six and a half inches around. Not that we've measured,\" he said a little sheepishly.\n\n\"Well you sure know how to use it,\" I said as I rolled off the bed. I went into the bathroom to freshen up. I looked at myself in the mirror and saw how disheveled I looked. My hair was a mess, but I felt incredibly sexy. I went back out into the bedroom. Leo and Bridget were sitting up in bed. Bridget was idly fondling Leo's cock.\n\n\"Are you up for another round before we go to sleep?,\" she asked. \"I think Leo has another load in him, and I could use another cum.\"\n\n\"You sure know what you want,\" I said, laughing. \"I'm still recovering from the last session, but I'd be happy to help. What are you thinking?\"\n\n\"I'm thinking I want to see my husband's cock in your mouth while I get myself off with this vibrator,\" Bridget said as she retrieved a large blue dildo from the drawer in the bedside table. \"But remember, there is always the safe word if you don't want to do something.\"\n\nI didn't say anything as I got back on the bed next to Leo. I looked down at his dick. Even semi-hard it had to be six inches long.\n\n\"I'm in,\" I said softly as I moved down and took the tip of his cock in my mouth. Next to us I heard the vibrator come to life with an oscillating pattern of buzzing. I looked up over Leo's thigh to see Bridget insert the vibe into her vagina with both hands.\n\nLeo was content to lean back with his hands behind his head and watch me blow him. While his rod was still a bit soft, I tried to take as much of it in my mouth as I could. But he was rapidly becoming erect and before long, I could hardly get the head and more than an inch or two of his meat in my mouth. I concentrated on sucking on the head as hard as I could and used one hand to start to jack him.",
        "Bridget was watching with obviously keen interest. She was unabashedly sawing the dildo in and out of her pussy. Her legs were drawn up with her knees spread wide apart. As I looked at her, she turned the vibration intensity up. \"Soon,\" she said. \"Want to race?\"\n\nI couldn't very well talk with my mouth full of Leo's erection, so I just nodded. I started to really jack him now, and bobbed my head up and down, trying to stuff even more cock into my mouth. It occurred to me that I was probably at a disadvantage, since Leo had already shot once, but I was going to try my best to get him to blast before Bridget came.\n\nLeo was stroking my hair with one hand, and was beginning to rock his hips on the bed in an effort to lodge his cock deep into my throat. Next to us, Bridget turned the dildo up to full power, jammed it into her vagina and held it there with one hand. She used to other to start quickly rubbing her clitoris. Her eyes were closed, and her chest was flushed between her breasts. I knew she was close.\n\nI took my other hand and started to massage Leo's sack. He started to fuck my mouth even more aggressively.\n\n\"Almost Kelsey,\" he moaned. \"Keep going. Almost there.\"\n\nBut just when I thought I had a chance to win, Bridget started to orgasm.\n\n\"Fuck. Fuck! Cummmmmnmming,\" she wailed, as she continued to rub her clit. Her legs shot straight out and twitched as she hit her climax.\n\nMy jaw was starting to get tired, as was my right arm from masturbating Leo. I was beginning to wonder if I was going to be able to finish him. But at that moment, Leo let out a low groan.\n\n\"I'm going to cum Kelsey. Right now. I'm going to spurt.\"\n\nI really appreciated the warning, but I wanted him to shoot his jism down my throat. I relaxed my jaw and withdrew his erection until just the head was in my mouth. Almost instantly, he erupted. The first shot went all the way to the back of my mouth, coating my tongue. Then came the next, and the next, rapid fire. My mouth quickly filled and I swallowed to try to keep up. If there was any reduction in volume from Leo's earlier cum, it wasn't apparent. I couldn't gulp it down fast enough and some of his juice dripped out the corners of my mouth and down his shaft. Eventually the shots tapered off. I swallowed a final time and then let Leo's cock fall to his stomach. I scooped the sperm dribbles off of my chin, and off of his cock with my fingers, and licked them clean. I sat back on the bed.\n\nBridget lay there with her legs askew, vibrator still buried in her pussy but with a look of contentment on her face. She was holding hands with Leo, who cast his gaze alternatively from me to her.\n\n\"I guess you won,\" he said to Bridget. \"But second place sure felt good. Thanks Kelsey. That was fantastic.\"\n\n\"I'd say anytime,\" I replied, smiling a little. \"But I'm not sure that should apply here. God you cum in buckets.\"\n\n\"Yeah, I don't normally swallow for him,\" said Bridget. \"So that was a special treat. And I wouldn't have cum first if I hadn't been watching the two of you, so I think everyone won. We're done for the night, right? I mean, I'm worn out.\"\n\nLeo and I both nodded. Everyone had enjoyed two monumental orgasms, so it seemed like a good time to dial back the sexual activity and get some sleep.\n\n\"We can all sleep together, if you're okay with it,\" Bridget offered.\n\n\"That would be nice,\" I said. The intimacy of sleeping together after our various couplings was very appealing to me. We all cycled through the bathroom and then burrowed into the bed in a comfortable tangle.\n\n\"It's probably too soon to ask where this may lead, isn't it?\" Leo asked.\n\n\"I think so,\" I said. \"Right now, I'd like to think of this as a single, wonderful experience. I don't really even know you guys. That doesn't matter tonight, but I need to think about what just happened, and what has been happening with the telescopes.\"\n\n\"Fair enough,\" said Bridget. \"I think I'm in the same place. Let's get some sleep.\"\n\nWhen I woke up the next morning, I freaked out a little bit because I didn't know right away where I was. And because I was already sexually aroused. It took me a moment to take stock of my surroundings, and for the replay of the prior night to flash through my head. It also took a moment to figure out why I was so turned on.\n\nI could feel Bridget's body spooning me from behind. Her arm was across my hip and her hand was between my legs, her fingers languidly toying with my clit. Leo lay spooned behind her, his arm across both of us, fingers gently tugging one of my nipples. I knew my slit was already wet.\n\n\"Good morning beautiful,\" Bridget whispered in my ear.\n\n\"Mmmmm, good morning. You guys know how to wake a girl up. So much better than an alarm clock, but I need to run to the bathroom.\"\n\nWhen I got back, I was greeted by the sight of Leo on his back with Bridget straddling and slowly fucking him. \n\n\"I couldn't resist the opportunity to ride his morning wood,\" she said. \"Do you mind? Maybe you can play with yourself and watch?\"\n\n\"Why would I mind? He's your husband,\" I said. I went to my duffle bag, happy to remember that I had packed my vibrator. I grabbed it and got up on the bed next to them.\n\n\"It may take me a bit,\" said Leo. \"I'm kinda sore from last night.\"\n\nBridget smiled. \"Suits me. Nothing wrong with a slow screw.\"\n\nI turned on the rabbit and let the buzzing tip settle on the hood of my clitoris. It felt wonderful, and I briefly considered challenging them to another race, but I didn't want to get too far ahead of them. I kept the vibrations at a low, pulsing setting and concentrated on the sight of Leo's cock repeatedly disappearing and reappearing from Bridget's pussy. \n\nIt was a quiet, gentle, sexy scene, and I had an idea. I got up from the bed and opened the bedroom shades and then got back on the bed. \"Who knows if anyone is watching, but we should finish the way this all started, don't you think? Putting on a show?\" I repositioned the vibrator and winked at Bridget.\n\n\"Mmmmmm. Good idea. Kind of brings things full circle.\"\n\nGradually, everyone began to pick up the pace, and assorted soft moans and grunts were clear evidence that orgasms were building. Bridget was now bouncing on Leo's pole, rather than riding it, and Leo was flexing his hips to meet her down thrusts with an aggressive upward spearing of his own. I had my rabbit constantly vibrating on the highest setting now. It's entire length deep in my pussy and the ears deliciously strumming my clit. \n\nBridget had dropped one hand down to find her clit and was rolling her nipple between the finger and thumb of her other. Leo saw her, and reached over and grabbed one of my nipples and did the same. That did it for me. My orgasm hit immediately.\n\n\"Yesssss. I'm cummmming,\" I groaned.\n\nMoments later, Bridget went over the edge. She threw her head back, closed her eyes and sighed loudly. She kept aggressively screwing Leo until finally, he grabbed her hands and held her down on his cock.\n\n\"Here it comes,\" he said, and he began to ejaculate into her waiting snatch. Bridget rocked slowly on his erection until he was finished, and then gently dismounted and lay between us. \n\n\"Nice way to start the day,\" she said, chuckling. \"I'll grab first shower.\" She walked into the bathroom and we heard the water start running. Leo rolled onto his side and looked at me. Cautiously, he put his hand on my mound.\n\n\"Want to go again Kelsey? I can't get it up right now obviously, but my tongue still works.\" He began to run his finger up and down my slit. My clit was super sensitive from the vibrator, and when his finger hit it, I jumped a little. I couldn't believe it, but I wanted to cum again. I didn't say anything. I just moved Leo's hand and spread my pussy lips with my hands and stared at him. He didn't need any encouragement. He moved his face to my crotch and latched his tongue onto my clit.\n\n\"Use your fingers too,\" I urged him. He complied, inserting two fingers into me. In no time I was headed up to another peak. I squirmed under his oral attack, trying to push my nether region hard against his probing tongue. I looked over Leo's head and out the window. I could see my own apartment across the river. I wondered if anyone was watching us now, as I had watched this same bedroom. The thought further excited me. I felt wicked, and lewdly exposed. I consciously spread my legs as wide as I could to put more of myself on display for any spectators.\n\nI heard the bathroom door open and looked over to see Bridget, naked, brushing out her beautiful blond hair. She stood and watched us without saying anything. Leo must have sensed that I was closing in on my orgasm. He pushed a third finger into my cunt and increased the pace of the digital penetrations. I whimpered as I began to cum, holding Bridget's gaze the entire time. It was so erotic, having someone again watch me as I climaxed. The orgasm rolled on until I couldn't take it anymore, and I reached down to block Leo's tongue with my hand.\n\n\"Enough. Enough, please.\" \n\n\"You two are kind of naughty, carrying on without me,\" said Bridget. For a minute, I thought she was actually cross, but then she smiled. \n\n\"It was his idea,\" I replied. \"I was just lying here, minding my own business.\"\n\n\"I made sure I had consent,\" Leo said, laughing. \"Didn't force her into anything. And it sure seems like she enjoyed it.\"\n\n\"I did for sure. Thanks Leo,\" I said, giving him a little peck on the cheek. He kissed the side of my neck and got up to take his shower.\n\n\"I was thinking while I was in the shower. We should talk a bit about, you know, all of this,\" Bridget said. \"The last twelve hours have been incredible. I don't want it ruined because someone feels guilt or regret. It seemed like a good idea when we invited you over here, but I have to admit, it was an impulse based on a fantasy I've had rolling around in my head for a couple of weeks. I convinced myself we were friends and that it was a natural thing to do. But like you said, we don't know each other at all. How comfortable are you?\"\n\n\"I'm really comfortable with what we've done. Consenting adults and all that. But I'm not comfortable assuming that we keep this up. I'd rather get to know you two as friends, and honestly, while this has been mind blowing sexually, it isn't really something I see myself maintaining. An on-going threesome I mean. The reason it worked for me now is that there isn't a boyfriend in the picture currently, but I expect that will change.\"\n\n\"So one time thing?\" Bridget asked.\n\n\"This was fun, and erotic, and I came like a freight train, but yeah, one time thing. No offense.\"\n\n\"No offense at all. It took Leo and I a couple of days to convince each other that a threesome was a good idea anyway. There are all sorts of stories about how they can wreck marriages. But we decided to give it a try. I'll let you in on a secret. I think I want to do it again, but with two guys. I've got my eye on a guy two floors up from you that looks to be single. My new fantasy is taking two cocks at the same time. We'll see if I can convince Leo.\"\n\n\"I'll give you my cell. If that happens, maybe you will let me know so that I can watch?\"\n\n\"Ha. Sure. If I've learned anything in the last week or two, it's that performing for an audience really gets me off.\"\n\n\"You aren't the only one,\" I said with a little giggle.\n\nLeo came out of the bathroom and we filled him in on the discussion, leaving out Bridget's fantasy of being banged by two men. I showered, got dressed and packed up my stuff. When I came out of the bedroom, we all gave each other big hugs and said our goodbyes. Bridget and I traded phone numbers and we promised to get together soon, but not in a bedroom, and with all of our clothes on. And we all gave our word not to watch each other without permission, but I'm not sure any of us believed we'd be able to keep that promise.\n\nAs I walked back across the bridge to my side of the river, I looked up at their apartment and waved. I felt like I was going back into another country where there was a different version of myself. But I was happy, and sexually fulfilled. What an incredible experience."
    ],
    "authorname": "badge_25",
    "tags": [
        "anal",
        "clit",
        "cream pie",
        "doggy",
        "massive cock",
        "masturbation",
        "swallow",
        "telescope",
        "threesome",
        "vibrator"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/across-the-river-telescopes-see-all"
}