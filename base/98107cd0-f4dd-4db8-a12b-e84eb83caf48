{
    "title": "Jazz Man",
    "pages": [
        "\"Kyle, I gotta tell you, I don't understand why you're doing this.\"\n\n\"Sir, I joined the Army to be part of something greater than myself.\"\n\n\"Um...you're in the Army, Sergeant Roberts,\" the lieutenant colonel said.\n\n\"Yes, sir. I am. But I...play a saxophone.\"\n\n\"A job you had to audition for. One you earned because you're that good. And after all that you want to leave the Army? Help me understand what I'm missing.\"\n\nSergeant Kyle Roberts had dropped out of college halfway after his junior year because he felt like he was going nowhere. He was doing well enough in school, and had a very respectable GPA of 3.45. He just couldn't 'find himself', and after doing a lot of soul searching, he saw several recruiters on campus one day, and on a whim, went to talk to them.\n\nHe had nothing against the Navy or the Air Force, they just didn't fit his stereotype of what a 'real' soldier did. He really wanted to join the Marine Corps, but he'd talked to a friend who came home after boot camp, and the stories he told scared the hell out of him. Another friend had enlisted in the Army, and when he came back home on leave, he told Kyle it wasn't hard at all. It wasn't a cake walk by any means, but it was less challenging than wrestling practice had been, and both stories had stuck with him since he was18.\n\nBut at 21, he he found himself looking for something that mattered; something to give his life a sense of purpose. College was fine, but every day was deja vu all over again. Get up, work out, eat, go to class, study, eat, go to class, eat, study, and go to bed. He managed to find time to play the sax and even made some money playing at local bars on the weekends.\n\nAnd there were plenty of co-eds ready, willing, and able to...put out...but even that had lost its charm. So after spending an hour with an Army NCO, he agreed to take the required aptitude tests, passed the physical, and enlisted on a four-year contract.\n\nWhile it wasn't exactly what he'd envisioned, being an infantryman was, for the most part, what he'd been craving. He couldn't have articulated that before becoming one, but it gave him the sense of purpose and belonging he so desperately wanted and needed, and the feeling that he was a part of something larger than himself. \n\nBut there was another intangible that made it even more satisfying. He felt like he was doing something for the greater good. 'The greater good' was a term that got thrown around all the time by people from all walks of life from anarchists to missionaries and meant whatever the person using it wanted it to mean. That aside, that's the feeling Kyle got from being in the Army in general and the infantry in particular.\n\nMaybe a lot of that was due to being raised by a single mom and needing some kind of authority figure in his life. Maybe it was the fact that she died at the beginning of his junior year leaving him adrift on the sea of life. Maybe it was the camaraderie. Maybe it was nothing more than his sense of adventure, or as he'd recently discovered, his sense of duty. Whatever the reason, he'd signed up, finished basic training and then infantry training, and unlike most of his peers, he loved what he was doing and planned to stay in.\n\nAlso unlike his peers, Kyle was a talented musician. He'd grown up playing the piano from the age of five then transitioned to the saxophone in middle school and had played ever since. He was first chair in high school and good enough to play in the college band, something he'd never explored, because, by then, it wasn't something he wanted to do unless he could play what he wanted when he wanted.\n\nHe loved music, but it was a side show in his life. He enjoyed it, but it didn't give him that sense of purpose he so deeply craved. Like sex, it was pleasant but unable to satisfy the hunger deep inside him.\n\nOnce he was on active duty, it was no secret in his platoon and company that he could play, and play quite well. But when he played it was always for the entertainment of his buddies after they'd had a few, especially after being in the field for a several days living in holes and eating MREs. \n\nThat's when he'd pull out the sax and in no time, guys would get up and start moving around. His black friends in particular loved his style and would often be the first to strut their stuff. Many asked him why he didn't play professionally, but he'd always just smile and say somethin like, \"Nah. I'm not that good.\"\n\nBut word got around, and during his first December on active duty, he was asked to perform at a brigade-level function before people started going home on Christmas leave. The brigade commander, an Army colonel, knew the director of the Army band in Washington DC, and after hearing Private First Class Kyle Roberts play, he gave his old friend a call.\n\n\"If he's that good, I want to set up an audition,\" the lieutenant colonel or LTC, said.\n\nThe brigade commander passed that on to Kyle's battalion commander who, in turn, passed it on to his company commander, and the next day, the battalion command sergeant major was summoning him to his office.\n\n\"The battalion commander has directed me to tell you that you're going to audition for the Army band.\"\n\n\"Sergeant Major?\" the very surprised young soldier replied, not sure he understood.\n\n\"You're going to play the sax for the Army, son. If you're good enough. And you WILL do your best during the audition. Is that understood?\"\n\n\"Um...yes, Sergeant Major,\" PFC Roberts replied, still not sure what was going on.\n\n\"I have here, in my hot little hands, the time, date, and location of said audition. You will report there in your Class A uniform along with that shiny gold horn of yours, and you will play...\"\n\nThe sergeant major sifted through his notes and found the piece of music Roberts was to play and said, \"Ah. Here we are.\"\n\nHe held it out and said, \"Whatever the hell this is.\"\n\nKyle looked at it and cringed. It was the kind of music he'd been forced to play when he was learning, and had no interest in ever playing again but could still do in his sleep. But since this wasn't a request, he accepted the sheet music and the order the way any good soldier would.\n\n\"Will that be all, Sergeant Major?\"\n\n\"That's it. Just be there on time. And by on time, I mean 30 minutes early. Capiche?\"\n\n\"Roger that, Sergeant Major!\" Kyle replied as he stood up then did an about face and marched out.\n\nKyle did his best, and much to his chagrin, his performance so wowed the director of the Army band and one of the best sax players in the Army who was also evaluating him, that the young soldier received orders within a week, and two weeks after that, he found himself in Washington DC on TDY (temporary duty) with a new military occupational specialty or MOS of...band geek.\n\nThe only good news was that it came with a promotion to the rank of Specialist or pay grade E-4, as well as a $2,000 bonus. He would receive a modest monthly stipend as a member of the band, but most of that would be eaten up dry cleaning the dress uniforms he'd have to wear nearly every time he played. \n\nExactly which of the Army's bands he'd be assigned to was still up in the air, but as a saxophone player, there were only a couple of real options. Within two days, he learned he'd be stationed in Sembach, Germany, as a member of the US Army Band and Chorus. \n\nSembach Kaserne was an Army installation located in Sembach, a municipality of the Kaiserslautern district in the Rhineland-Palatinate, Germany. Sembach was about 200 miles from Luxembourg to the northwest and around 100 miles to the border of France.\n\nKyle spent the rest of his enlistment there with much of that time on the road playing at various posts and bases throughout Europe, the Pacific, and occasionally, stateside. In terms of the job, he often felt like he was a civilian more than a soldier. Playing was enjoyable, although he was never free to play what he wanted. He was told when to play and what to play, and no deviations were allowed. But then this was still the Army, and orders were orders.\n\nBeing an Army musician gave him time to have a social life, and he wasn't at all surprised to find that there were quite a few German girls who were more than willing to, um...spend time with him. Most were casual in nature, but there was one that stood out in his mind. \n\nHer name was Hannah, and what was unusual about it was that she was a lot older than him. She was beautiful, and like so many other Germans, she spoke English perfectly with only the slightest hint of an accent. \n\nSure, there were the Sgt Schultz types who said, \"Ja, und wie are very much liking zie Americans,\" but the number of people who spoke English fluently was not only a pleasant surprise, but one that made learning German unnecessary. He picked up quite a few words during his time there, but he still couldn't understand the answer to anything he asked in German, so after a few tries, he'd just ask if they spoke English.\n\nHannah was 36 when he met her and had a 7-year old daughter named Anna, and had she been willing to leave Germany, Kyle would have very likely asked her to marry him. The sex was not only good, it was fantastic. But it was her personality that made him fall in love with her. And he would have gladly raised Anna as his own, but the girl's father lived nearby and loved his daughter every bit as much as Hannah did, and in the end, Kyle wasn't sure he could have lived with taking this little girl so far away from her father.\n\nSomehow, when it ended, he managed to say goodbye without getting emotional or having his heart broken. Perhaps that was because they both knew from the first time they went out that she would never, under any circumstance, leave her country.\n\nSo now, at the age of 25, Kyle was down to just 90 days left on his enlistment, and found himself in front of the band director, who wanted to know why he was leaving the Army, especially after having just been promoted to sergeant, pay grade E-5.\n\n\"This is the best of both worlds, Sgt Roberts. You're big on service, and you're doing that. You're a soldier. You wear a uniform. But it's also close to civilian life. You play in nice clubs, wear a clean, sharp-looking uniform, and the pay isn't terrible. Especially now after this latest promotion.\"\n\nKyle had to admit the director was right on all counts. And since Kyle had never had money, what he made seemed like a lot and was more than enough to live well on. So much so that a good share of it went into the bank every payday along with the bonus money he'd never spent.\n\nBut the problem was this haunting sense of being unfulfilled. Just wearing the uniform was an honor, but playing a saxophone didn't cut it, and the chance of ever going back to the infantry was zero. At least as an enlisted soldier.\n\nRecently, Kyle had been thinking about something he'd never seriously contemplated before, even when he was in college. He needed just two more semesters worth of credits to graduate, and once he had the sheepskin in hand, he would still be young enough to serve as a commissioned officer. And with any luck, he could be back in the infantry doing what he loved.\n\nHe hadn't shared this with anyone, and had no intention of doing so. And that was doubly true with regard to the other wrinkle to this new idea of his he'd been toying with for several weeks.\n\n\"You're right, sir,\" Kyle told the director. \"On every count.\"\n\n\"But?\"\n\n\"Sir, I joined the Army to feel like I was doing something for the greater good. And please don't take this the wrong way, but blowing a saxophone isn't what I had in mind.\"\n\nWith a long sigh of resignation, the band officer looked at his newest NCO and asked, \"So what are you going to do?\"\n\n\"I suppose I'll go back home to North Carolina and us the GI Bill to finish college, and I'll probably play the sax on weekends to make some extra money. Beyond that, I'm still not sure.\"\n\nIt was true that he didn't know for sure what he'd do yet, and it was very possible something else would come his way that made better sense or appealed to him more. But for now, at least, this was the best, most honest answer he could give.\n\n\"Okay. It is your decision,\" the director told him. \"But in the meantime, I want you to make a videos.\"\n\n\"A video?\" Kyle asked even though he was pretty sure he knew what this meant.\n\n\"You've seen the Saxophone Standard videos, right?\"\n\n\"Yes, sir.\"\n\n\"Then you also know they're the latest in the Army Field Band's Instructional Video Series. We've been tapped to provide one saxophone player to make the next one, and that lucky person is you.\"\n\nEven though the director was an Army officer, he was unlike any other officer Kyle had ever known. While he would never try it, Kyle was pretty sure he could even call the man by his first name and not be reprimanded for it. But even so, this was an order, and until the day he left active duty, he had to play somewhere.\n\n\"Sounds good, sir. When and where?\"\n\nKyle got the date and the location then went to the admin section that took care of their orders and let them know he needed a set. The following week, he was in Munich with two other sax players who were at a local recording studio the Army had rented for them to make the video. It was all very simple and very cut and dried.\n\nKyle was one of three Army sax players providing free lessons to the public. They would take turns going over the part of the lesson they'd been tasked to provide while making sure to smile and represent the Army well, all the while wearing their dress uniforms.\n\nIt wasn't lost on him that all three of the men who were chosen were good looking guys. He wasn't exactly an expert when it came to which men were or weren't attractive, but he knew enough to know that the other two guys fit the mold. And he'd been told for as long as he could remember that he was handsome, cute, attractive, or some other similar word, for whatever that was worth.\n\nKyle was the first to realize that his facial symmetry was nothing but the resort of dumb luck. He had nothing to do with it. The only thing under his control was his body, and he'd taken very good care of it since he was about 12 years old.\n\nBaseball had been his first love, but when he got into the 7th grade, he tried out for the wrestling team. He was well behind his peers in terms of skill, but he was a fast learner and quickly closed the gap. He became a very good wrestler and had the body that went with it.\n\nHe gave up organized sports in college, but he stayed with fitness in general and regularly ran, swam, and/or lifted light weights. As a result, he still had the kind of body that Hannah had often called 'un sehr fickbarer K\u00f6rper' which translated as 'a very fuckable body'.\n\nThe first time she said it, it made him laugh, and he still occasionally thought about it whenever they made love after that. Now, looking back, he found himself wishing he could meet a woman like her to fall in love with again as the single life was beginning to grow old in spite of his still being very young. But that would have to wait until he was out of the Army, and most likely until he had a job that paid enough to support this as-of-yet-unknown woman, whoever she might be.\n\n****\n\nSix Months Later. Near Charlotte, North Carolina.\n\n\"Mom! Check this video out!\" her 11-year old son said, no small amount of excitement in his voice.\n\nShe was exhausted from waiting tables all day, but she gladly did that because she loved her son, and well, because being a divorced single mom, they desperately needed the money.\n\n\"What it is it?\" she asked, forcing herself to smile and sound interested.\n\nHe brought his iPhone 7S over to her then turned it her way.\n\n\"It's the Saxophone Standard.\"\n\n\"Oh,\" his mother replied, having no idea what that meant.\n\nShe did know that her son loved playing the saxophone, and that her ex-husband's only interest in their son's life came in the form of a monthly check that included extra money for lessons. \n\nShe'd hadn't asked for it nor would she, but she knew him enough to know that it was his way of bribing their son, Shawn, into thinking his father cared while he was still young enough to believe that he did. But the only thing he cared for was himself and whatever co-ed he was currently banging. \n\nKim Cook did her best not to get angry or even be resentful where her ex was concerned, because he was out of her life forever, and thinking about him or the time she found him at home, in their bed, boinking an 18-year old student made her crazy.\n\nShe'd done nothing to deserve it, and had even done everything a woman could reasonably to do remain attractive to the man she loved. But no amount of working out, eating right, or wearing the things he liked made any difference. \n\nThe bottom line was he wasn't cut out for monogamy, and as the old song said, \"That's just the way it is. Some things will never change.\"\n\n\"They're all very handsome,\" his mom said, looking at the three men, as he hit 'play'. \"Just like my son.\"\n\nShawn smiled then said, \"Thanks, Mom. Oh, and one of the guys said he's from Charlotte, North Carolina, and that's really close to us!\"\n\n\"Yes it is. Pineville is only a few minutes away from Charlotte.\"\n\n\"Mom. I already know that. We go there all the time, remember?\" her son informed her.\n\n\"Sorry. Yes, we do.\"\n\nShe looked at the three attractive, younger men then asked which one lived in Charlotte.\n\n\"This guy,\" Shawn said as he pointed to the most attractive of the three. \"But he doesn't live in Charlotte. He lives in Germany. He's just from there.\"\n\nShawn's attention to detail often surprised and even amazed his mother. There were times when it was annoying, but it was one of many things she loved about him. And she had to admit the saxophone player who was from Charlotte but not currently living there was very nice looking.\n\nShe listened for a minute or so, and as much as she enjoyed jazz and supported her son's passion for the sax, watching someone give a lesson on how to play the instrument was about as exciting to her as watching the grass grow.\n\n\"I'm gonna go try to play that,\" Shawn told her when she handed the phone back.\n\nShe felt guilty for being happy to see him go to his room, but as long as he was happy, she was happy.\n\n\"Okay. Sounds good, honey,\" she told him with another smile before closing her eyes and falling asleep in the recliner at 8pm like she did most nights.\n\nKim had recently turned 39 and, as of a year ago, working again for the first time since she gave up her job at her husband's insistence some 15 years earlier. She'd loved being a stay-at-home mom and raising their son after Shawn was born, but she'd also missed working and being around other adults.\n\nThe day her life changed forever and sent her back to work was permanently etched in her mind. She came back from her parents' home a day earlier than expected two years ago that week and heard unspeakable noises coming from her bedroom. \n\nIt took her unsuspecting brain a moment to recognize the sounds, and even when she knew what they were, Kim assumed her husband was watching porn. She was almost certain he at least occasionally did that, and while she wasn't thrilled about it, as long as he was pleasuring himself to some video and remaining faithful to her, it didn't seem like a big deal.\n\nBut as she went up the stairs toward their bedroom, she heard the female voice call out her husband's name. Suddenly feeling sick to her stomach, Kim stopped and listened. Whoever was in her bed was extremely vocal, and at the same time that she felt like vomiting, Kim realized she had no job skills. \n\nIt was a very unusual thing to have come to mind after finding her husband naked and screwing the daylights of a very pretty young girl who had been in high school just four months before. But for whatever reason, that was one of the first things that came to her after the girl saw her and screamed and just before her former husband started babbling things like, \"This isn't what it seems,\" or, \"I can explain this if you'll give me a chance.\"",
        "Out of the kindness of her heart she gave him a chance to get dressed and...get out.\n\nAs to the job, a friend of a friend owned a skilled nursing facility, the more politically correct name for a nursing home, and had offered her a job at the time when she'd needed one the most. She'd waited tables when she was 17, and while she remembered being tired after working all day, she had no idea how exhausting it was to work a 8-hour shift dumping bed pans, changing sheets, and doing all manner of things for those who lived there and could no longer do them for themselves. Her legs were constantly sore, her feet hurt, and and the only thing she wanted to do was get home, lay down in her soft, comfortable chair, and fall asleep.\n\nBut Shawn, who had just turned 11, had boundless amounts of energy, and after not seeing her all day, he needed to tell his mom about everything he'd done. Even more importantly, he needed her to do things with him; things she was too tired to do but did anyway because he was the most important thing in her life. A life that was now one exhausting, vicious cycle of working and sleeping and trying to fit her son in where she could rather than him being the center of her life the way he always had been in the past.\n\nKim was so exhausted she never heard a single note from Shawn's sax after he went back to his room. He always made sure to close the door and tried to be as quiet as he could with an instrument designed to make noise. He'd lost interest in sports when his father left, and while he wasn't a mama's boy, he was now completely reliant on his mother for everything to include emotional support.\n\nThe divorce had hurt Shawn the most, and yet he never rebelled or acted out. Instead he became ultra conscientious and thought of his mom before doing (or not doing) anything. She, in turn, was very aware of the change in their relationship and did everything she could to support him, love him, but most of all to never baby him. \n\nAs a woman, that was hard for her. It broke her heart to know her son had been so deeply hurt, and even more so that his father rarely spent any time with him. But as a mother, she knew that her son was growing up, and that meant he would be a man in just a few short years. \n\nShe didn't need him, nor did she want him, to become some kind of loud, swaggering, macho caricature of a man. But she also didn't want him to be a dishrag, unable to make decisions or do difficult things. The problem was that Kim had always been a girly girl. She wasn't frilly or overly effeminate. She just preferred doing things that were typically female and her son needed a male role model. \n\nWhen she wasn't too exhausted to think about it, she thought about the importance of finding another man; hopefully a good, decent, honest, loving, faithful man. She didn't have a long list of requirements like some women did, something she found unrealistic. Wanting one who thought she was the only woman he would ever need seemed pretty reasonable to her. Beyond that he would have to love Shawn like his own son, and while it wasn't essential, it would be very nice if were easy to look at.\n\nBut there were times now that when she looked at herself in the mirror, she wondered just how attractive men found her. The truth was she was still quite attractive, but after having been cheated on, she couldn't help but wonder if she might not be pretty enough to ever attract a man she found attractive who wasn't a 'player' or worse. She did her best to stay healthy and fit, but after going back to work, she had precious little time and no energy to do much of anything.\n\nThree months later.\n\n\"You ready for school?\" his mom asked.\n\n\"Almost!\" Shawn called back as he grabbed his book bag and saxophone case.\n\nIt was the 4th day of 6th grade, and it was also the first day that middle school students taking band would be playing their instruments. Shawn had continued taking lessons, watching videos, and spent as much time as he could practicing. \n\nKnowing very little about music, his mom had no way of assessing her son's progress beyond what she heard, and over the months since he'd started playing, the noise coming from his room had gone from making her cringe to making her smile. Until he hit a wrong note which sometimes still made her laugh.\n\n\"You need to hustle! I've gotta drop you off and get to work on time!\" Kim hollered back.\n\n\"Coming, Mom!\" she heard before her son walked in looking like he was going to war with a huge pack strapped to his back and an even larger 'weapon' in his right hand.\n\nAs she looked at him, Kim saw his father's eyes, but other than that, he had all of her best features, and was grateful that her son at least didn't get teased for something physical over which he had no control. Being called a 'band geek' was something she could live with, but it hurt her to think of other kids who were mocked or taunted for physical attributes they'd been born with. But for now, they needed to get moving, and there was no time to for her to spend feeling sorry for anyone.\n\nKim pulled into parent pickup, said goodbye to her 11-year old son, and made it to work with just two minutes to spare before beginning another insanely busy and exhausting day. But this job paid the bills and put food on the table, so Kim did her best at it no matter how she felt about doing it.\n\nBy Friday she was so worn out, all she wanted to do was spend the weekend in bed recovering, but she knew Shawn would be dying to get out and do things, so she forced herself to get up at 8am Saturday morning. After a cup of coffee and a hot shower, she got dressed while Shawn ate then came back downstairs and asked what he wanted to do.\n\n\"Can we go to the NASCAR hall of fame?\" her son asked, surprising his mother greatly.\n\n\"Seriously? Since when do you like NASCAR?\"\n\n\"I just do!\" Shawn told her in a way that she understood meant he didn't want to tell her.\n\n\"Oh. Okay.\"\n\nShe smiled once then said, \"Is there by chance someone you met at school who also likes NASCAR?\"\n\n\"Maybe,\" her son said, a goofy smile on his face.\n\n\"Ah. Okay. Would this 'someone' maybe be...a girl?\"\n\n\"Mom!\"\n\nNow that she knew, she wanted to make sure he understood there was no reason to be embarrassed.\n\n\"Shawn, it's okay to like girls. You're too young to go on dates with them, but it's perfectly normal for boys your age to like them.\"\n\n\"Her name is Kelsey.\"\n\n\"That's a pretty name.\"\n\n\"Mom. She is SO pretty!\"\n\n\"I see.\"\n\n\"And her dad works in a pit crew.\"\n\nKim had to think for a moment but understood.\n\n\"Oh, okay. I know what that is.\"\n\n\"She said their whole family is totally into NASCAR.\"\n\n\"Well, in that case, maybe we should go check out the museum,\" his mom replied as supportively as she could even though she had no interest whatsoever in loud cars that raced around tracks.\n\nKim knew the tickets wouldn't be cheap, but the $25 she paid for for hers and $18 for Shawn's was a lot of money to her. Even so, she paid for them with a smile, because her son didn't need her to pass on her financial stress to him.\n\nAnd the way Shawn's face lit up once they got inside made the steep price seem trivial. To his mother, everything looked pretty much the same, but Shawn quickly became obsessed by the cars which she had to admit were pretty impressive. His interest soon expanded to drivers and the protective gear they wore and then came the pit crew.\n\nBy the time they left three hours later, he was rattling off names, dates, and the kinds of things members of pit crews did and how fast they could do it.\n\n\"So you had a good time?\" his mom asked on the way to their car.\n\n\"This was the best time ever!\" he told her.\n\nShe never lied to her son, so when he asked her how she liked it, she only smiled and said, \"I had a fantastic time watching you enjoy it.\"\n\nThat seemed to satisfy him, so she asked what he wanted to do next. Even though his mom tried not to stress over money, Shawn knew they didn't have a lot.\n\n\"Maybe a hotdog?\" he asked hopefully.\n\n\"We can do better than a hotdog,\" she told him. \"How about Burger King?\"\n\nThat was her son's favorite place to eat, and again, just watching his eyes light up made her happy.\n\nSomehow, he put away a quarter pounder, fries, and a milkshake, while she ate most of a chicken sandwich with a cup of water, and both of them were full when they left.\n\n\"Do we have to go home now?\" Shawn asked as they walked outside.\n\n\"Well, I suppose we could go over to Freedom Park while we're here.\"\n\nWhen Shawn said, \"Yes!\" she knew that would be okay.\n\nIt wasn't overly exciting, but it was a very pleasant place to walk around, and the reasonably warm August weather was a very pleasant surprise. It was often brutally hot that time of year, but it was around 85, the humidity was down, and it was a perfect day to stroll around, her aching feet aside.\n\nShe hadn't been there in months but always loved going there, and the only thing she could think of that would make it even more enjoyable was holding hands with Shawn. But he'd recently pulled his hand away when she tried to take it while in public, so she took that as another sign her little boy was growing up. \n\nEven though she knew he had to, it mad her sad. Being a realist, Kim told herself she needed to at least try and find someone who wasn't 11 to hold hands with, and that made her laugh as she wondered just how old he would need to be when Shawn stopped walking and touched her arm.\n\n\"Mom! Do you hear that?\"\n\n\"Hear what?\" she asked as she stopped, too, and paid attention.\n\n\"That's a saxophone!\"\n\nShe heard it, too, and tried to figure out the direction it was coming from.\n\nShawn figured it out first and said, \"Mom! This way!\"\n\nShe was so surprised when he took her hand that she nearly lost her balance when he pulled her toward the sound of the music. As they walked, the sound got louder and the music got clearer. By the time they located the sound's source, Kim was smiling.\n\n\"Wow. Whoever that is, he's really good!\" she said as Shawn continued pulling her toward it as the sweet sounds of jazz coming from the sax did the same thing.\n\nAs they got even closer, Kim saw a small crowd gathered around whoever was playing, and once they got to the group of people, she noticed many of them were women. Younger women. Attractive younger women.\n\nShe didn't think too much about it until she got her first look at the person playing the instrument. Just as she did, a girl who looked to be maybe 19 or so said to her friend, \"He is SO hot!\"\n\nKim heard her, and after maybe two seconds she looked at the guy playing and thought, \"Oh, my goodness! He's gorgeous!\"\n\n\"Mom, I can't see!\" Shawn said as he stood beside her at the rear of the crowd. \"Can I move up?\"\n\nShe took a quick look around, saw nothing of concern, then told her son that was okay. Shawn wasn't tall for his age, and he was also very thin, so he wouldn't be blocking anyone's view, he'd be able to see, and more importantly, Kim would be able to see him.\n\nShe recognized the tune that was playing as Songbird by Kenny G from 1986. Kim had seen the instrument he was playing, a soprano saxophone before, but didn't know it was a saxophone because it didn't have the part at the bottom that turned up like a 'J'. But she did know beautiful music when she heard it, and this sounded wonderful to her.\n\nA man about her age was nearby, and noticed her. He took a side step toward her, then without taking his eyes off the musician leaned her way a little then said, \"I've heard this guy play here before. He's good. Really good!\"\n\nHe paused before also telling her he'd played the sax for years and still couldn't play anywhere that well.\n\n\"He seems very talented,\" Kim agreed.\n\n\"He was out here last weekend, too. Someone said he's a college student who plays for tips.\"\n\nShe glanced over at the man who glanced back, and when he did, Kim kind of smiled once she noticed he was rather good looking.\n\nBut what he said next deflated her 'hope balloon' in an instant.\n\n\"I'll tell you what. If he was gay, I'd be all over that guy!\" the man said.\n\nKim replied with a nervous, \"Oh,\" before looking away so fast it made the other man laugh.\n\nShe thought to herself, \"Way to go, Kim. You sure can pick 'em,\" just as Shawn called her name loud enough for her to feel a bit embarrassed.\n\n\"Come here!\" she said just loudly enough for Shawn to hear, and he twisted and turned his way back to her.\n\nBefore his mom could remind him not to be so loud, he said, \"Mom! That's him!\"\n\n\"That's...who?\" she asked as she stepped back a few feet and pulled Shawn with her.\n\n\"The guy in the video!\"\n\n\"What video?\"\n\n\"Mom! The Saxophone Standard video. With the Army guys. Remember?\"\n\nKim was kind of bent over to talk to her son but stood back up to look. She was about 30 feet away, but even so, she realized he did resemble one of the soldiers she saw in the video.\n\n\"Are you sure?\" she asked, not sure herself.\n\n\"Yes. I'm positive!\"\n\nShe looked again and still wasn't sure. The man was sporting about three days worth of stubble, but the face was handsome enough to be his. And while the hair was slightly longer, he really did look an awful lot like the soldier she vaguely remembered. \n\n\"Can we go say hello?\" Shawn nearly pleaded.\n\n\"Honey, he's busy. He's playing right now.\"\n\n\"I know. But if we wait, we can go say 'hi'. Can we?\" \n\n\"I...I don't know, Shawn. I have no idea how long he'll be playing.\"\n\n\"But we don't have anything else to do, and we just ate. So...can we?\"\n\nKim looked down at her son and once again, her heart broke. Maybe it wasn't as bad as she was imagining, but she felt like the reason Shawn was so enthralled with this saxophone player because there was no man in his life. That wasn't her fault, but she still felt terrible and blamed herself even though she wasn't the one who broke her marriage vows.\n\n\"I guess we can stay a little longer,\" she said without actually committing to staying until he quit playing.\n\n\"Thanks, Mom!\" Shawn said.\n\nShe was very surprised when Shawn threw his arms around her in public, but even that short hug was enough to make her glad she'd agreed to stay. He still hugged her and even kissed her goodnight at home, but public displays of affection were all but over. \n\nThe next song the guy she nicknamed 'jazz man' played was every bit as beautiful, but this was one she didn't know. \n\nWhile she stood there listening, more people gathered around, and quite a few had gone up and dropped money in some kind of green metal container; a container that was actually an ammo can. Kim didn't know that, but neither did anyone else who put money it. It was something Kyle had kept as a reminder of his tour with the infantry and now used as a collection plate.\n\nWhen he left active duty, one of his friends took it to have Kyle's name, rank, and dates of service stenciled on the side in yellow as a farewell gift. Anyone who got close enough would see: SGT Kyle Roberts, US Army, 2016-2020 on the side.\n\nHe played three more songs, and when they were over, Kim realized her aching feet weren't bothering her. She'd gotten so caught up in the beautiful melodies that she paid no attention to anything else. To include her son, and for the briefest of moments, she had the sickest feeling she'd ever experienced\u2014with one very important exception. \n\nA quick scan located Shawn just a few feet from where she'd last seen him, and a wave of relief washed over her. Less than a minute later, the sax player Kim's jazz man finished the number he was playing then sat the sax down. When he did, the crowd applauded enthusiastically, and the attractive young man waved then spoke.\n\n\"Thank you all so much. I appreciate that as well as the tips. I'm going to take a 15-minute break then play one more set. So if you'll excuse me...\"\n\nHe stood up, stretched, then waited, knowing people would come up to talk to him. Shawn shot toward him and ended up third in line. His mom stayed back to let her son have some time alone with the jazz man while she was able to keep an eye on him.\n\nAs Shawn moved up to number two in the line, Kim realized she'd been subconsciously inching her way forward and had closed half the gap. When it was Shawn's turn to speak with the sax player, she was just a step or two away.\n\n\"Hey, there. What's your name?\" the jazz man asked.\n\n\"Shawn. And I know you!\"\n\n\"Oh. I believe I'm at a disadvantage then,\" the older man said with a smile.\n\n\"I don't know your name. I just know who you are.\"\n\n\"I see,\" Kyle said with a smile before noticing the attractive woman who was now standing next to her son and asked who the beautiful woman was.\n\n\"Oh, hi. I'm Kim. Shawn's mother. He thinks he saw you on a video, but I told him you might not be the same person.\"\n\n\"He is, Mom! He's the Army guy.\"\n\nKyle laughed politely then said, \"Well, I was in the Army, and I did play the sax for them. I also made a video, so maybe that was me.\"\n\n\"The Saxophone Standard!\" Shawn said. \"I can do everything you showed in the video!\"\n\n\"Wow. Okay. Well, I guess that was me,\" Kyle told him before telling the boy his name.\n\nHe grabbed a spare reed, replaced the one in the sax, then said, \"Show me what you can do.\"\n\nKim could tell her son, who was very shy, was a little embarrassed, but it was obvious he wanted to do this.\n\n\"I've never played a soprano sax,\" the boy told him.\n\n\"Oh. Okay. No problem.\"\n\nKyle produced a tenor sax he also had with him, then asked if that was better.\n\nShawn nodded then took the horn and after making a couple of loud squeals played several bars of something he'd memorized.\n\n\"Nice work, Shawn!\" Kyle told him. \"You're really good. Do you like playing?\"\n\n\"Uh-huh.\"\n\n\"Do you take lessons?\"\n\n\"Yes,\" Shawn told him.\n\n\"Oh, okay. I was gonna offer to tutor you\u2014for free. But if you have a teacher...\"\n\n\"Mom! Can Kyle be my teacher?\" Shawn asked, again nearly begging.\n\n\"Honey, I'm sure he's very busy, and...\"\n\n\"I have time,\" Kyle told her in a quiet, baritone voice, a smile on his handsome face.\n\n\"You...you don't have to do that,\" Kim said, a flutter in her tummy as he smiled at her.\n\n\"Your son is the first person I've met since leaving the Army who recognized me. He has some real potential, and I'd be more than happy to help out.\"\n\n\"We couldn't ask you to...\"\n\n\"Mom. Please???\"\n\nShe looked at Kyle who smiled and shrugged as if to say, \"How are you gonna say 'no' to that?\"\n\n\"Are you sure?\" she asked the jazz man she now knew was named Kyle, a look of uncertainty on her face.\n\n\"Absolutely. Well, if you live nearby. I can't drive to New York or Texas, but if you're anywhere near Charlotte, then...yes.\"\n\n\"We live in Pineville!\" Shawn offered without thinking.\n\nThere were other people waiting to talk to Kyle, so he asked if he could get her name and number.\n\nSuddenly aware that they were holding up the line she stepped aside then apologized to the people behind her. Kyle grabbed his phone then said, \"Okay. Let 'er rip.\"\n\nKim moved a little closer then quietly said, \"Kim Cook. With a 'C',\" as though it might not be. \"My number is 704-567...\"\n\n\"Got it. I'll give you a call and see what we can work out,\" the jazz man replied before looking at Shawn and saying, \"and you keep practicing, okay?\"\n\nShawn promised he would, and one of the people behind Kim who'd been listening said, \"Looks like your son is good hands.\"\n\nKim smiled politely then said, \"Um...yes. I...I agree,\" before apologizing to Kyle for taking up so much of his time.\n\n\"Nonsense! I'm really glad Shawn said 'hello', and it's never an inconvenience to meet a beautiful woman like yourself.\"\n\nKim's tummy flip flopped again as he also smiled at her, and she nervously thanked him for the compliment.\n\nAs the next person said 'hello', Kyle promised Kim he'd call her later that same day.",
        "On their ride home, Kim couldn't remember the last time Shawn was so excited. He wasn't just excited, he was...stoked. She laughed at the word, but it accurately described her son's mood as he went on and on about Kyle and how he was going to be his new teacher.\n\n\"We can't just let your regular teacher go. That's not fair to him,\" his mom said, referring to the 50-something year old man Shawn saw three times a week at his father's expense.\n\nShawn thought for a second then said, \"But I'll be twice as good!\"\n\nKim laughed and told him he was already good. \n\n\"Kyle said that, too!\"\n\n\"Yes, he did.\"\n\n\"He's really good. Mom? Do you think I'll ever be that good?\"\n\n\"I'm sure you will be if you keep playing.\"\n\nShawn was now old enough to safely ride upfront, and when she looked over at him, she got another very pleasant surprise when her son said, \"I love you, Mom!\"\n\nShe blinked back a tear that appeared out of nowhere then said, \"Ahh! I love you, too, honey.\"\n\nAs soon as they got home, Shawn went straight to his bedroom and grabbed his saxophone and started playing. It didn't sound quite as nice as Kim remembered it, but she was having a hard time concentrating for some reason. \n\nShe didn't give it any thought, and even if she had, her brain wouldn't have allowed her to attribute the reason to her handsome jazz man. He may have been a very nice looking young man, but the key word there was 'young', and Kyle was clearly very young. \n\nAnd yet she found herself recalling his beautiful music, his calm, steady voice, and that incredible smile that, at one point, gave her goose bumps.\n\nBy 8pm that evening, she'd mostly stopped thinking about him until her phone rang. She saw the name Kyle and had another flutter that was more intense than the ones she'd experienced at Freedom Park as she answered the call.\n\n\"Hello?\"\n\n\"Kim?\"\n\n\"Yes. Hi.\"\n\n\"Hi. This is...Kyle. From the park?\"\n\n\"Hi. Yes. Hi,\" she said, feeling silly for saying it yet again.\n\n\"I promised I'd call, and I just finished studying, and wanted to touch base with you.\"\n\n\"Studying?\"\n\n\"Sorry. Yes, I'm back in school. I dropped out after my junior year four years ago to join the Army, and it's really nice to be back in school.\"\n\n\"That's...impressive. And thank you for your service.\"\n\nKyle chuckled, told her it was his pleasure then said, \"I spent most of it playing the sax, so the only danger I faced was dropping it on my foot, but...\"\n\nKim nearly giggled as she laughed, and felt even more foolish.\n\n\"Mom, is that Kyle?\" she heard Shawn ask who came running in from his bedroom.\n\n\"Yes,\" she whispered as she tried to cover the receiver.\n\n\"Is that Shawn?\" Kyle asked.\n\n\"It is. He heard me talking from his bedroom and came screaming out here.\"\n\n\"Mom!\" Shawn said, letting her know she was embarrassing him.\n\nShe mouthed the word 'sorry' just as Kyle asked if they could discuss when and where to meet.\n\n\"It was extremely kind of you to offer to do this, but you know you don't really have to if you've reconsidered,\" Kim told him.\n\nShe held her hand up knowing Shawn would immediately protest.\n\n\"Reconsidered? No way. I gave you my word. And the truth is, I'm actually looking forward to it, and I can assure you, it's no problem at all.\"\n\n\"I...I can't afford to pay you, Kyle, so...\"\n\n\"Pay me? Don't be ridiculous! I don't want any money.\"\n\n\"Well, okay. I...I work Monday through Friday, but I'm home by 5:30 each day.\"\n\n\"I don't want to interrupt your dinner time, so if you just let me know what works best for you, I'll make that happen.\"\n\nShe wanted to tell him she normally fell asleep well before 9pm, but said, \"I guess around seven?\"\n\n\"Okay. Seven it is. May I ask the day of the week and the where part?\" he said in a way that told Kim he was smiling.\n\nRealizing that telling him the time alone wasn't enough she said, \"Oh, duh. Yes. Maybe...Tuesday? And we live at...\"\n\nA brief moment of panic hit here when she thought he could be some kind of...serial killer.\n\n\"All right. Got it. I'll see you Tuesday at seven.\"\n\n\"Okay. And Kyle? Thank you,\" Kim said, still not sure if she'd just made a colossal error in judgment.\n\n\"My pleasure. And Shawn? If you're still listening, keep practicing, okay?\"\n\n\"I will! I promise!\" \n\nKyle chuckled then wished them both a good night.\n\n\"You, too, Kyle,\" Kim said as Shawn nearly hollered the same thing.\n\nShe turned to her son who was grinning from ear to ear and said, \"Looks like we'll have a visitor this week.\"\n\nKim got another pleasant surprise when her son gave her a real hug, his arms wrapped tight around neck while she sat in the recliner.\n\n\"A famous person. At our house. Mom, this is so cool!\" Shawn said when he let go.\n\nHis mom ignored the 'famous' comment then said, \"You understand this means someone needs to make sure his room is very clean on Tuesday, right?\"\n\n\"It will be!\" Shawn promised as he headed back to his room humming something his mom didn't recognize.\n\nShe also failed to recognize that she hadn't stopped smiling since she hung up the phone several minutes earlier. Then again, she wasn't even thinking about such things\u2014at least not consciously. But were she to give it some consideration, she would have realized that she was feeling good again for the first time since coming home to a scene she would never forget. \n\nKim even began humming something herself, again oblivious to what she was doing or why.\n\nLike every work day, Monday and Tuesday were exhausting. But because they had a visitor coming over, Kim and Shawn spent some time after getting home both days cleaning the house. It wasn't dirty or messy, there were just things Kim had been neglecting because she was too tired to take care of them.\n\nBut by the time Kyle was due on Tuesday, the house, and Shawn's bedroom, looked just the way Kim wanted them to, and she still had enough time to change into something nice. Because, well, they had a visitor coming over, and she needed to look nice. Not to impress him, of course, but because it was the right thing to do. Or at least that's what she told herself as she got ready.\n\nAs she took a last look at herself before getting ready to welcome Kyle, Kim was very glad she hadn't cut her hair. She was the last woman in her circle of married friends who hadn't, and had her husband not done what he did, she was pretty sure it would now be chin length rather than to her shoulders.\n\nShe was also glad she'd stopped bleaching it. Her husband preferred blondes, like the young co-ed he was boinking, but because her hair was naturally very dark, it never looked quite right. But in its natural color, it framed her pretty face quite nicely, and it had a silky sheen to it with just a hint of a soft wave.\n\nIt was cold outside, but it was a very comfortable 72 degrees in her house. Even so, Kim chose a light-pink, long-sleeved sweater she hadn't had a reason to wear in nearly a year. The crew neck in front prevented any cleavage from showing, but then Kim wasn't exactly...huge. Still, she thought that her full-B cup breasts filled the ribbed garment out quite nicely as she looked at her profile. With black pants and a pair of silver earrings under her very dark hair, she actually liked the way she looked, and that was a rarity for her these days.\n\nWhen she left her bedroom, Shawn was waiting for her.\n\n\"Hi, honey. What's up?\"\n\nShe saw him smile one of his shy smiles then said, \"Wow. You look really pretty!\"\n\n\"Ah! Thank you!\", his mom said. \"Are you sure there's nothing else you wanted to say?\"\n\nShe gently turned her son around as she walked him toward the living room, and after a couple of steps, Shawn asked, \"Mom? Is Kyle someone you might...\"\n\nThe doorbell stopped Shawn in his tracks before he bolted for the door hollering, \"I'll get it!\"\n\nKim smiled then laughed a little, happy to see her son so excited about anything. As she got to the living room, she heard Kyle's voice saying, \"Thanks, Shawn. How you been doing?\"\n\nJust as Kyle saw her, Shawn said, \"Fine,\" then turned around to see who Kyle was looking at, as though there might be someone else in his house.\n\nHe smiled once he caught her eye, and as she walked up to him, he gave her a very quick 'once over' then said, \"Just...wow!\"\n\nShe went to thank him, but Shawn loudly said, \"That's what I said!\"\n\nKyle put his hand on the boys shoulder then said, \"Well, you were right, that's for sure.\"\n\n\"Listen to you two!\" Kim replied, secretly loving the kind words before noticing the large case Kyle was holding.\n\n\"Come in, and we'll find a place for you to set your saxophone down,\" Kim told him.\n\n\"Can I carry it?\" Shawn asked.\n\nIt was only about ten steps, but Kyle held it out and said, \"Sure. Thanks!\"\n\n\"You're welcome!\" Shawn told him as he carefully grabbed the case which was the same size as the one he had.\n\n\"I brought the tenor sax with me, because that's the one you play, right?\" Kyle asked the boy.\n\n\"Uh-huh, and I've been practicing. A LOT!\"\n\n\"He really has,\" Kim said. \"And I think he's sounding better every day.\"\n\nShawn beamed as Kyle said, \"I have no doubt. This guy has talent.\"\n\n\"Thank you!\" Shawn said as he asked if the spot he'd chosen was okay.\n\n\"Sure. That's perfect,\" Kyle told him. \"Where's yours?\"\n\n\"I'll go get it!\"\n\n\"He is SO excited, Kyle. Thank you for doing this.\"\n\n\"It's my pleasure. I enjoy teaching, and if I can help a someone like Shawn get excited about playing, it's doubly good.\"\n\n\"He is definitely...pumped,\" Kim told him with a little laugh as her son came back toting his own sax in the case.\n\nHe set it down, unsnapped the case, then told Kyle that was his horn, just in case he didn't know.\n\n\"Nice. Why don't you go ahead and pull it out and play a few bars.\"\n\n\"Okay!\"\n\n\"One second!\" his mom said before turning to Kyle and asking if he'd like something to drink. \"Coffee? Water?\"\n\n\"I'm fine, thank you for offering, though.\"\n\n\"Now?\" Shawn asked, waiting for his mother's approval.\n\n\"Yes. Now!\" she told him.\n\nKyle listened for about 30 seconds, and in that short amount of time, he could tell there were a couple of things Shawn needed help with. \n\n\"Can I see your sax?\" he asked when Shawn paused to take a breath.\n\nOnce he had it, Kyle asked him to come closer.\n\n\"See how I place my fingers?\"\n\n\"Uh-huh.\"\n\n\"This is how you were holding yours. Do you see the difference?\"\n\nShawn nodded then waited to find out what else he could do better. Kyle showed him two other small things then asked him to try again.\n\nAfter he did, Shawn said, \"That made it a lot easier.\"\n\n\"And it sounded better.\"\n\nHe looked to Kim for support, but she couldn't tell the difference.\n\n\"Sorry. I think I may be tone deaf,\" she said almost apologetically. \"I have no ear for music.\"\n\n\"The difference was pretty subtle, so if you didn't catch it, it's not surprising. I'm probably no better at it than you are, I've just been playing the sax since I was...\"\n\nHe looked at Shawn then said, \"About this guy's age. Or so.\"\n\n\"Can you play something?\" Shawn asked, anxious to hear Kyle play.\n\n\"I could, but I came over to help you play. So how about this? You let me help you for a half hour or so, then if you\u2014and your mom\u2014still want to hear me play something, I'll be glad to.\"\n\n\"Okay!\" Shawn said without hesitation.\n\nKim sat and listened as Kyle made one correction after the other, and while she still couldn't hear any difference in the 'before and after', she noticed how good Kyle was to her son. His corrections were more fun than anything else, and he had this gentle, easy way with Shawn that made her smile quite a few times. \n\nBut just before Kyle said that was probably enough for the first time, Kim had a sudden flash of anger that surprised her. Not at Shawn, and certainly not at Kyle. It was directed at her ex-husband who had never taken that kind of interest in their son. He was a professor of anthropology at the University of North Carolina, and he was more interested in long-dead cultures (and pretty, blonde co-eds) than he was in his own son.\n\nKim realized Kyle was asking her something, and she snapped out of her mental snit to apologize for not having heard.\n\n\"I was just wondering if you had a request. That is, if you still want me to play something.\"\n\n\"Yes. Definitely!\" she replied. \"I mean, yes, I want you to play something. I just don't know what to ask you to play.\"\n\n\"Have you heard Baker Street by Gerry Rafferty?\" Kyle asked.\n\nKim thought for a moment, then it came to her.\n\n\"The song that goes, 'Winding your way down on Baker Street'?\"\n\n\"Light in your head and dead on your feet,\" Kyle said with a laugh as he finished the first part of the first stanza.\n\n\"Yes! I love that song. And the saxophone is...amazing!\"\n\n\"It is, and it's one of my favorites.\"\n\nKyle reached for his own sax then stood up. When he did, Kim motioned for her son who came over and sat next to her. He didn't even pull away when she put her arm around him. In fact, he put his around her waist and waited, a big smile on his face. Just like his mom's, who couldn't wait to hear the saxophone solo at the start of the song.\n\nKyle smiled at them both then said, \"Lady and gentleman, it is my honor to play for you this evening, and the opening number will be Baker Street.\"\n\nHis 'audience' clapped then waited as Kyle placed the mouthpiece between his lips.\n\nEven though Kim was expecting volume, she still flinched when Kyle played the first note. It was much louder than she'd expected, but it sounded exactly like the song she'd heard so many times on the radio over the years.\n\nKim would have listened for hours, but Kyle stopped after about two minutes as the sax part of the song would have been repetitive were he to keep playing. She and Shawn clapped loudly again, and Kim told him that was wonderful.\n\nKyle smiled and bowed before thanking them both for being such a great audience.\n\n\"Can you play something else?\" Shawn asked, in that pleading tone of voice.\n\n\"Honey. I think that's enough, don't you?\" she said as she looked at Kyle.\n\n\"I guess,\" her son replied, the sound of dejection now replacing the pleading.\n\n\"Next time, okay, Shawn?\" Kyle said.\n\nHearing 'next time' cause Shawn to perk right back up.\n\n\"Okay!\" he said before looking at his mom in case there wasn't going to be a next time.\n\n\"Yes. Definitely,\" she said. \"If Kyle wants to, of course.\"\n\n\"I do,\" he said as he looked at her. \"Very much so.\"\n\nThe way he looked at her made her shiver even as she thanked him for coming over.\n\n\"Again, it was my pleasure.\"\n\n\"Would you maybe like something to drink now?\" Kim remembered to ask.\n\n\"You know what? That sounds really nice. Yes, please.\"\n\nShe'd lost track of time, and glanced over at the clock which read 7:48. It seemed like Kyle had only just arrived, but it had been closer to an hour than the five or ten minutes it felt like.\n\n\"I mentioned coffee, but it's getting late,\" Kim said as she got up.\n\nBefore she could offer something else, Kyle said, \"I'd love a cup.\"\n\n\"I...I guess I could have one with you,\" she replied, a very nice smile on her face.\n\n\"I have studying to do, so I probably won't get to bed until after midnight.\"\n\n\"Oh, my. I can't remember the last time I was up that late,\" Kim told him as she went to the kitchen.\n\nKyle got up and followed her, but Shawn stayed seated and watched, a big old smile on his face.\n\n\"I'm lucky to still be awake at 9 o'clock these days,\" Kim told him as she grabbed the carafe.\n\n\"May I ask what you do?\" Kyle asked as politely as possible.\n\nKim explained her job, then sighed, and then immediately apologized.\n\n\"Sorry. I was about to say something about why I have the job I do, but that's probably not something I need to say.\"\n\nKyle had the impression it involved something personal and didn't ask. He'd noticed the lack of a wedding ring at the park, and after taking another quick look, was reasonably certain she wasn't married. Divorce seemed more likely because most, but not all, widowed women continued to wear their rings for years after losing their spouse.\n\n\"I can see how that would wear you out,\" he replied, trying to be friendly and supportive.\n\n\"I'm very grateful to have a job at all, but yes, it's exhausting.\"\n\nShe smiled then said, \"And as you can see, I'm not getting any younger.\"\n\n\"I hope this comes across the right way, but I'd say you not only look young, you look very beautiful.\"\n\nKim shivered again then smiled.\n\n\"Thank you, but I do have a mirror and it says something very different.\"\n\n\"Then you need a new mirror,\" Kyle told her, a smile on his face, too.\n\nNeither of them noticed Shawn who'd walked over and heard the last exchange.\n\n\"Isn't my mom pretty?\" he said to Kyle then looked over at his mom who's eyebrows were raised high in what was mostly mock disbelief.\n\nKyle looked down at Shawn then looked back at Kim before saying, \"Pretty? Okay. But don't you think 'beautiful' is the better word?\"\n\nHe looked back down at Shawn just in time to see the boy's face light up.\n\n\"Uh-huh,\" he said before looking at his mother who was now smiling very happily.\n\n\"I don't know about you two,\" she said with a shake of her head.\n\n\"We're just telling the truth, right?\" Kyle replied as he looked to Shawn for support.\n\n\"Yeah, Mom. We're just stating facts!\"\n\n\"Stating facts! Listen to you!\" Kim said, unaware she used the same phrase again.\n\nKyle did his best to imitate Jack Webb of Dragnet fame and said, \"Just the facts, ma'am.\"\n\nShawn had no idea what that meant, but his mom did, and it made her laugh. When Kyle saw the puzzled look on Shawn's face, he explained where it came from.\n\n\"It's a really old detective show.\"\n\nKim laughed then chimed in.\n\n\"It's even older than me!\"\n\n\"You're not old, Mom. You're pr...beautiful!\"\n\nKyle held up a hand and got a high five as Kim shook her head as though she didn't know what to do with either of them but loving the way she felt.\n\nThe three of them sat at the kitchen table and talked until 9 o'clock when Kim said, \"I believe it's bedtime for someone.\"\n\n\"Mom, do I have to go to bed already?\"\n\n\"You have school in the morning, and sometimes someone doesn't like to get up if he stayed up late.\"\n\nKyle saw the sheepish smile on Shawn's face but stayed out of it because it was none of his business.\n\n\"Can you tell Kyle 'thank you' and 'goodnight'?\"\n\n\"Thank you, Kyle, and goodnight,\" the boy said.\n\n\"Goodnight, buddy. And I'm really glad I got to come over.\"\n\nKim watched as her son debated what to do, and when he stuck his hand out, she did her best not to smile. But when Kyle not only shook it but pulled her son close and gave him a hug, it was all she could do not to tear up.\n\n\"See you soon, okay?\" Kyle said as he mussed up Shawn's hair.\n\n\"See you soon, Kyle!\" he said back before looking at his mom.\n\n\"Are you too old to hug me in front of someone?\" she asked with a hint of teasing.\n\n\"I'd love to be able to hug my mom,\" Kyle informed him.\n\n\"No,\" Shawn replied to his mom before giving her another real hug.\n\n\"Goodnight, buddy. I love you,\" she told him.\n\n\"Love you, too!\" he said before telling Kyle goodnight again.\n\n\"He is a really great kid,\" Kyle said once Shawn was gone.\n\n\"He really is,\" his mother agreed.\n\nShe hesitated, but after thinking about it for a second or two said, \"I feel so bad for him. His father lives less than five miles away, and I don't think he's spent one day a month with Shawn since he left.\"\n\nShe assumed from Kyle's facial expression that she'd said too much and apologized.\n\n\"No. It's okay. I wanted to say several things, but I don't suppose I have any right to say anything,\" her guest said.\n\nKim smiled at him understandingly just as he told her, \"Okay, the thing is, I'm sorry, but I don't really care why he's gone. I just can't understand how any man could not want to spend time with his son. Especially one as nice as Shawn.\"",
        "Kim never, ever said anything negative about Shawn's father when he was present, but since he was in the bathroom getting ready for bed, she told Kyle why he no longer lived there.\n\n\"Wow. I...I can't even imagine.\"\n\n\"It was...difficult...to see,\" Kim replied.\n\n\"Yes. That, too, but I was referring to any man cheating on someone as kind and...beautiful as you, Kim.\"\n\nHe looked right at her as he calmly and quietly said those words, and the way he said them forced her to break eye contact and look down at her coffee cup.\n\n\"If I had someone like you in my life, and a son like Shawn, nothing on earth could ever tear me away from you.\"\n\nKim looked back over at him just as he added, \"Either of you.\"\n\nShe realized her heart was beating faster, and as she looked at Kyle, she understood why. But she also understood that even though he was being sincere, he was still a very young man who could say such things to a woman her age without any hint of a deeper meaning; a meaning along the lines of maybe...wanting to get to know her better. \n\n\"I...I was wondering how you ended up playing an instrument for the Army,\" she said, hoping to move the conversation to something less...uncomfortable.\n\nKyle laughed, sighed, then told her about the Christmas party and the audition.\n\n\"So you went from the infantry to...\"\n\n\"The saxophone,\" he said, finishing her thought as he laughed about it. \"Yep. From ground pounder to...band geek.\"\n\nKim smiled then said, \"I...I kind of knick named you...Jazz Man. After hearing you at the park.\"\n\nKyle laughed loudly enough that Shawn, who was now in his PJs, came back out to see what was so funny.\n\nKyle leaned his way then whispered rather loudly, \"Your mom calls me Jazz Man.\"\n\n\"She does?\"\n\n\"What's wrong with that?\" his mom replied, a little defensively, but mostly in fun.\n\nShawn looked to Kyle because he had no idea why it might be inappropriate.\n\n\"Nothing,\" Kyle told her. \"Nothing at all.\"\n\n\"I'm confused!\" Shawn said.\n\n\"No, you're going to bed!\" his mom insisted.\n\n\"Night, buddy,\" Kyle told him again before Shawn gave his mother one more hug.\n\nKyle looked at his wristwatch then said, \"It's getting late, isn't it?\"\n\nKim kind of winced then said, \"Pretty pathetic, huh?\"\n\n\"No. Not at all,\" Kyle replied so quietly and so understandingly that it made her body quiver this time.\n\n\"You work hard to take care of your son, and while it may not feel very glamorous, you do a very important job for people too old to take care of themselves. I'm sure most of them are very appreciative of that.\"\n\nThat part was true. Many of them often told her how much they appreciated what she did for them. And sadly, many said they saw her more like a daughter of their own than one of their biological children who never or maybe rarely came to visit.\n\nKim shared the latter part of that with Kyle who shook his head.\n\n\"I know there are circumstances that make visiting impossible. Like...being in the Army. But I don't know how anyone could let their parent endure that kind of loneliness if there was any way they could get there and spend some time with them.\"\n\n\"We have plenty like that. But we also have some whose adult children come every day or several times a week. One 65-year old woman even drives a hundred miles every weekend to see her 89-year old father.\"\n\nShe watched Kyle's face who seemed to be thinking.\n\n\"Do you think they'd let me play for them?\"\n\n\"What? Yes. Yes, of course. They'd love that!\"\n\nHe asked for the name of the home and told Kim he'd stop by there in the next day or two and see what he'd need to do to make that happen.\n\n\"You are going to make a lot of people very happy, Kyle,\" she told him as he said he again he should be going. \"Just like my son.\"\n\nKyle started to turn around but stopped then asked with a smile, \"But...how'd I do with his mom?\"\n\nKim was so surprised by his question that he mistook her being tongue tied for inappropriateness.\n\n\"Sorry. I hope I didn't offend you,\" he told her quietly as he finished turning around. \n\nKim's mind was racing as she walked a step behind him. She wanted to tell him he'd made a very good impression on her, but she was afraid it would sound like she was flirting. But there was a part of her that seemed to want to flirt, or at least let him know that she found him...\n\nShe knew she wouldn't say 'attractive' for the same reason, and 'nice' seemed trite.\n\nWhen they got to the front door, Kyle turned around again, but the look on his face was different. It was as though the entire dynamic between them had somehow changed, but the only possible reason was because of the question he'd asked and that she'd avoided answering.\n\nHe began thanking her again for having him over and for the coffee\u2014and the conversation\u2014when Kim spoke before he could finish.\n\n\"You...you made a...a very good impression on me, Kyle,\" she told him even as she wished she could recall her words.\n\nShe quickly looked down but needed to see his reaction, so she looked up at him again only to see him smiling the way he'd done all evening.\n\n\"I uh, I think maybe I might have...misread things a little,\" he told her as though he were apologizing for something.\n\n\"I...I don't understand,\" Kim said, her eyes rapidly moving from one eye to the other.\n\n\"I believe I may have...assumed...that you might, that you could possibly...\"\n\n\"Yes?\"\n\n\"I suppose I was hoping that you might have...similar feelings.\"\n\nKyle saw her stunned look and realized she didn't understand.\n\n\"For me.\"\n\n\"For...you?\" Kim asked as her heart raced and her eyes darted back and forth between his.\n\n\"Yes. I think maybe I was wishing that you felt the same way about me that I feel about you,\" he explained, an explanation that caused both another shiver and a quiver.\n\n\"Feelings as in...romantic...feelings?\" Kim asked, her mouth dry and barely able to speak.\n\n\"Pretty ridiculous, huh?\" Kyle said, as though it was now obvious that any such idea really was ridiculous.\n\n\"I don't think I understand. At all,\" Kim quietly replied as he continued staring into her eyes.\n\n\"Which part? Romantic or feelings?\"\n\n\"You have...romantic feelings. For...me?\"\n\nKyle tilted his head a little, raised one eyebrow, then said, \"I...I kinda do.\"\n\n\"I...I still don't understand.\"\n\n\"You've never dated a younger man, have you?\" he asked as gently as he could.\n\n\"Well, no. Or...yes. I...I dated a junior when I was a senior in high school.\"\n\nKyle was able to keep from laughing, but he couldn't help smiling.\n\n\"When I was in Germany, I dated an older woman.\"\n\nHe paused then said, \"Much older. Than me.\"\n\n\"Oh,\" Kim said, not knowing what else to say.\n\n\"So, to me, it's no big deal. But I can tell it is for you, or maybe it's not the age as much as it is me?\"\n\nHis second sentence started out as a statement but ended up as a question.\n\n\"My younger guy was only 14 months younger,\" Kim managed to say.\n\n\"Well, I'm 25, so...\"\n\n\"Oh...my...goodness,\" Kim said, slowly and one word at a time.\n\n\"That's a little more than 14 months, isn't it?\" Kyle said with a gentle smile.\n\n\"That's...that's...14...years,\" Kim said, the words themselves surprising her as much as the meaning they conveyed.\n\nKyle cocked his head a little as though he were thinking then said, \"Fourteen. That's the same about there was between Hannah and me.\"\n\n\"Kyle? What exactly are you saying?\" Kim asked, as her heart began beating even faster than before.\n\nHe slowly reached out with one hand until it touched the sleeve of her sweater then said, \"I'm trying, albeit rather abysmally, to tell you that I like you, Kim. And that I'd like to...ask you out.\"\n\n\"Ask me out. As in...a date...ask me out?\"\n\n\"That is how it works, right?\"\n\n\"But...I'm...and you're... I mean, we're...\"\n\n\"Adults?\"\n\nKim never took her eyes off of him, but rather than keep pushing his luck, Kyle said, \"Would you at least think about it?\"\n\n\"Please?\"\n\nToo confused to say what she really wanted to say, and unable to even know what that might be, she only said one word, and it was spoken so quietly Kyle barely heard her.\n\n\"Okay.\"\n\n\"Then I'll say goodnight and leave you alone.\"\n\nHe smiled then added, \"For a day or two. Is that okay?\"\n\nKim nodded but her mouth now felt like she had cotton balls in it and couldn't say anything.\n\n\"Good night. And thank you again, Kim.\"\n\nHe opened the door and let himself out, and once he was gone, Kim shut it and just stood there, her back to the door, unable to think at all as she tried to understand what had happened and happened so quickly.\n\nIn the space of the two minutes she stood there, Kim felt embarrassment, joy, foolishness, hope, angry with herself, amused, frustrated, happy, and several other things she couldn't quantify. Unable to sort through any of it, she moved away from the door, suddenly so tired she could barely keep her eyes open.\n\nThings didn't get any better during the next two days during which a part of her silently hoped and prayed Kyle wouldn't call back, because that would make the constant state of confusion in her mind go away. But another part of her yearned to hear his voice, and although even that part of her wouldn't admit it, to hear him tell her again that she was beautiful and that he really did want go out with her.\n\nShawn only contributed to her mental turmoil by asking if Kyle had called yet four different times. Was he coming back over? Would there be another lesson? \n\nIt was obvious her son had a 'man crush' on the older male who was filling the role of a much older man who should be there for him. But that man would probably never be there for his son, and Kyle was. Unless, of course, he wasn't being sincere, and after 48 hours passed without a word, Kim began wondering if that might be true.\n\nIt was almost 9pm on Thursday, and Kim had fallen asleep in the recliner again. Totally out of it, something seemed to be waking her up, but it took her a few seconds to realize her phone was ringing. It was on the lamp stand beside her, and when she saw 'Kyle' with the one eye she'd opened, a shot of adrenaline coursed through her.\n\n\"Hello?\" she said, as she sat up straight just as Shawn came running in.\n\n\"Kim? Hi. It's Kyle.\"\n\n\"Mom. Is that Kyle?\"\n\nKyle heard him ask and also heard his mom say, \"Shhh!\"\n\n\"Yes. Hi. How are you?\" she asked, as Shawn stood there grinning.\n\n\"Good, thank you. I'm sorry for calling so late. I know you go to bed early, but I...\"\n\n\"No. This is fine. I was just...relaxing,\" she told him, knowing it was a little white lie.\n\n\"Oh, good. I said I'd call within a day or two, and the truth is I wanted to call you as soon as I got home on Tuesday then again all day Wednesday. But I knew I needed to give you time to think, so I held off until now.\"\n\n\"Oh,\" Kim said, embarrassed for sounding so...embarrassing.\n\n\"I hope your response doesn't mean you thought it through and decided you don't want to see me again,\" he said cautiously.\n\n\"What? No. I...I'm sorry for the blah response. I didn't mean it like that. I think maybe I'm still just a little confused about...all this.\"\n\nBefore Kyle could respond, Kim said, \"Not that there's any 'this'. I just mean that I don't really understand what's going on. Or...why.\"\n\nShe could tell Kyle was smiling, and she also knew her heart was beating faster again.\n\n\"So far, anyway, there isn't any 'this', but that's why I'm calling. Well, that and I'd like to keep working with Shawn no matter what you say, but I really was hoping that you might be willing to at least let me take you out sometime.\"\n\n\"Mom. Is he coming back over?\" Shawn asked, something else Kyle heard.\n\nKyle wasn't sure how it would go over but decided to say it anyway.\n\n\"Yeah, Mom. Is Kyle coming back over?\" \n\n\"Et tu, Brute?\" Kim asked, trying not to laugh.\n\n\"It's a valid question,\" Kyle said very authoritatively. \"And...inquiring minds want to know.\"\n\nThis time, Kim couldn't help herself and she laughed.\n\n\"That sounds like a 'yes'!\" Kyle said, egging her on in the nicest possible way.\n\n\"Okay. Yes. You can...come over again,\" Kim said as though she was really making some huge sacrifice.\n\nKyle heard Shawn call out 'YES' and laughed again.\n\n\"Great. But what about my other question?\" Kyle asked in a flirty way.\n\n\"Oh, right. That question.\"\n\n\"Uh-huh. That question. The...you and me...question.\"\n\nKim came very close to blurting out, \"I'd love to!\" but instead said, \"how about you come over again to work with Shawn and we'll see?\"\n\n\"Okay. If that's what it takes to win you over, that's fine,\" Kyle replied as though he were now making some huge personal sacrifice of his own.\n\nKim laughed again, mostly out of nervousness, then said something she probably shouldn't have.\n\n\"I really am looking forward to seeing you again, Kyle.\"\n\nWhen he said, \"YES!\" just like Shawn had, Kim laughed so hard she had to cover her mouth.\n\n\"Goofball!\" she said, as she continued laughing and smiling.\n\n\"Hey, I'm willing to make a fool out of myself, too, if that's what it takes.\"\n\nKyle's voice was again calm and steady, and the way he said it gave her goose bumps.\n\n\"When would you like to come over? To help Shawn,\" Kim asked.\n\n\"Is tomorrow okay? Unless you have a hot date lined up.\"\n\nKim let out a 'ha!' then said, \"Hot date. You're very funny!\"\n\n\"Funny? Why are you bringing up my looks?\" Kyle said as though he'd just been deeply offended.\n\nIt took Kim a second to get it, but she laughed loudly again as soon as she did.\n\n\"Right. Says the handsome, younger guy who could go out with anyone he wants to!\"\n\nKyle got serious again then told her, \"I already know who that is. I just need to find a way to get her to feel the same about me.\"\n\n\"Oh,\" Kim said again, suddenly silent and feeling something she hadn't in a very long time.\n\n\"Is seven okay?\" Kyle asked.\n\n\"Um, yes. Seven is fine.\"\n\nKim hesitated then said, \"Unless you'd like to join us for dinner.\"\n\nKyle heard another loud \"YES!\" from Shawn and laughed.\n\n\"I'd love to. Can I bring something? A bottle of wine maybe?\"\n\n\"If...you don't have to do that, Kyle.\"\n\n\"Red or white?\" he asked, the 'spring' back in his voice.\n\n\"Red?\" Kim said more as a question.\n\n\"Red it is. And I'll see you at...six?\"\n\n\"Yes. Six o'clock. For dinner.\"\n\n\"Okay. I'll see you...both of you...then. Goodnight, Kim. And Shawn!\" he said a little louder and got a, \"bye, Kyle!\" back from Shawn.\n\n\"Goodnight,\" she said so quietly Kyle barely heard her before ending the call and immediately getting peppered with questions from her son.\n\nIt was 10 o'clock before Kim went to bed, and when she did her mind was still racing. At some point she told herself that enough was enough.\n\n\"It's just dinner. And it's just someone helping Shawn learn to play better. That's it. There's nothing more to it.\"\n\nSomehow it worked well enough to let her fall asleep, but within minutes of waking up, her mind was all over the map again.\n\n\"Why is this such a big deal?\" she tried asking herself. \"It's not like you're going to marry this guy.\"\n\nBut as soon as she told herself that, she thought, \"How do you know that?\"\n\nThat then made her ask what difference it made even if something that unlikely were to happen.\n\n\"Because he's too young!\" came the answer from 'who' ever it was that could say things to her that wasn't...her. Which made even less sense than her senseless worrying.\n\n\"Too young for what?\" the other 'person' in her head shot back.\n\n\"For me!\" Person #1 replied.\n\n\"Based on what? Do you have some kind of magic age formula or something?\" Person #2 countered.\n\n\"We don't need a formula!\" #1 said with an attitude. \"Anyone with half a brain just knows what I'm saying is true!\"\n\n\"Says the one with half a brain!\" #2 said sarcastically.\n\n\"STOP!\" Kim told them both, not sure who 'she' was or who 'they' were, tired of them both. \n\nShe had to get ready to go to work and still had to get Shawn fed and his lunch packed. And she had to decide what to make for dinner, and just as importantly, what to wear.\n\n\"If you didn't like him, you wouldn't care what you wore,\" one of the 'people' in her head said.\n\n\"I don't like him!\" Kim said out loud just as Shawn walked into the kitchen where she was sitting.\n\n\"Who don't you like, Mom?\"\n\n\"Oh. Shawn. Sorry, honey. I was just thinking about...something.\"\n\n\"Oh, okay. Can I have Frosted Flakes?\"\n\nKim smiled at her son, and for a brief moment, things seemed normal again. But only for a moment.\n\n\"Kyle's coming over tonight, right Mom?\" Shawn said excitedly as he got the cereal box out of the pantry.\n\n\"Yes. Yes, he is,\" his mom replied before sighing loudly.\n\n\"Mom? Do you think Kyle is handsome?\"\n\nThe question shocked his mom who shook her head then said, \"What?\"\n\n\"Kyle. Is he handsome?\"\n\n\"Why would you ask me that?\"\n\nShawn didn't look at her as he poured cereal into his bowl but said, \"Well, you're pretty, and if he's handsome, couldn't you, you know, like go out or something?\"\n\n\"Go out?\" his mother asked, a wide-eyed look of surprise on her face even though she'd been thinking about the very same thing just moments ago. \n\nShe threw up her hands then said, \"Shawn Patrick Cook, where is this coming from?\"\n\n\"From my brain!\" her son told her as he opened the fridge to get some milk.\n\n\"Maybe your brain needs to be checked,\" his mom replied with a smile.\n\n\"I see the way you look at him,\" her son informed her.\n\n\"The way I...look at him. I don't have a...way.\"\n\n\"Yes you do. You get all...gooey.\"\n\n\"Oh, my goodness! You...you're...\"\n\n\"Right?\" Shawn said with a big old grin that made his mom realize her son might just be right.\n\nShe shook her head and gave up trying to prove him wrong, because somewhere deep inside her, she knew Shawn was right. She couldn't admit it to herself yet, but it was true. \n\nKyle was handsome, and she probably did look at him like that. But she told herself it was only because he was the first man, of any age, to really take an interest in her. And more importantly, in her son.\n\nBut that wasn't true, and she knew it. There had been three other men since her husband moved out who'd shown interest in her. Two of them had shown a lot of interest. She just hadn't shown any back and only a small amount to the third who gave up trying. \n\n\"Eat your cereal,\" Kim finally said, knowing she was losing this battle; a battle she couldn't believe she was even fighting and got up to take a shower and get ready.\n\nWith money always an issue, Kim bought a couple of boxes of pasta, a jar of spaghetti sauce, and a loaf of French bread for dinner after work, and hoped it would be enough. Shawn always wanted meatballs, and while she couldn't really afford it, she bought just enough ground beef to let him and Kyle have three apiece.\n\nWith dinner settled, she turned her attention to clothes, and after a 20-minute battle decided on a black blouse that was nearly sheer from just above her breasts to her neck. It looked nice on her, and she thought it might even be a little sexy, but she told herself she was just trying to look her best without asking why she was doing that.\n\nThe voices in her head had left her alone all day once she got busy, and now it was too late to fret about things. She got dressed, brushed out her hair, then added a bit of mascara, a hint of gray eye shadow, and some lip gloss. Just to look her best, of course.\n\nWhen Shawn saw her, she got the same reaction from him as she did on Tuesday. Only this time he added, \"Kyle is gonna love that top, Mom!\"\n\nShe wanted to tell him that wasn't why she was wearing it, but something stopped her because it was the only reason she'd chosen it. But before she could get down-and-dirty honest with herself, the doorbell rang, and Kim smiled as Shawn once again ran to the open it. Without checking to see who it was, Shawn flung the door open, and Kyle smiled when he saw the boy staring up at him with that look in his eye that told him he idolized the older man.",
        "\"Hey, dude! How you been?\"\n\n\"Fine! Do you need some help?\" Shawn asked.\n\nKyle's sax case was beside him, and he was holding a bouquet of flowers in one hand and a bottle of wine in the other.\n\n\"That would be great. Can you get the sax again for me, please?\"\n\n\"Uh-huh!\"\n\nHe let Shawn pick up the instrument, turn around, and move away before taking a step, and as that was happening, he saw Kim who smiled at him.\n\nShe moved closer, closed the door, then said, \"Hi.\"\n\nKyle stood there and looked at her then said, \"I don't know how it's possible, but you look even nicer than you did the last time I was here.\"\n\nKim not only smiled, she had another flutter and thanked him.\n\n\"These are you for you.\"\n\nKyle held out the roses, and Kim didn't just flutter, she shuddered. No man had bought flowers for her other than a corsage for prom. Back when she was dating a 'younger man'.\n\n\"Oh, my goodness! These are gorgeous!\" Kim said as she smelled the bouquet.\n\n\"Yes, you are,\" Kyle said, drawing a little 'come on now' look from Kim along with another beautiful smile.\n\n\"We're having spaghetti!\" Shawn said as soon as he had a chance to speak. \"With meatballs!\"\n\n\"Nice!\" Kyle said back. \"And it smells like garlic bread.\"\n\n\"I love garlic bread!\" Shawn informed him. \"And meatballs!\"\n\n\"Me, too, buddy. Me, too.\"\n\n\"Doesn't my mom look pretty?\" Shawn said, that silly little smile on his face that said he knew he was going to be in trouble.\n\nShe turned around immediately and gave him her own look just as Kyle said, \"You can say that again.\"\n\nShawn did say it again, and his mother pretended to be overwhelmed.\n\n\"I don't know about you two,\" Kim said as she had before as she turned back around as she began trimming stems.\n\n\"What? Can't we compliment our favorite girl?\" Kyle said as he walked up beside her and set the bottle on the counter.\n\n\"Yeah, Mom. We both think you're pretty!\"\n\nKyle leaned her way, put his cheek next to hers then quietly said, \"Yeah, Mom. We do.\"\n\nKim's body didn't shudder and her tummy didn't flutter, but something else happened for the first time in ages. She felt a growing...wetness in a place that ached for something it hadn't had...in ages. \n\nSuddenly, Kyle's...age...didn't seem quite as big an obstacle as it had since he let her know he was interested in her.\n\n\"Well, I guess if the two most handsome men I know think that's true, then I suppose I should tell them both 'thank you'.\"\n\nShawn was smiling and watching the adults as his mom turned toward Kyle and smiled.\n\n\"You do look amazing,\" he told her, causing the wetness and its intendant warmth to radiate out to other parts of her body.\n\n\"Thank you,\" she replied very sweetly before finishing the last stem as the timer went off. \"Dinner is ready. Could you get the bread out the oven while I rinse off the pasta?\"\n\n\"I can,\" Kyle told her as he again leaned her way and said it from an inch away from her ear.\n\n\"Thank you,\" Kim whispered.\n\n\"You're welcome,\" Kyle whispered back as Kim's body trembled and her knees felt weak.\n\nJust seconds after sitting down, the conversation started, and her anxiety ebbed. Within minutes, Kim felt like this was the most normal thing she'd ever done. Just her, her son, and Kyle Roberts, the Jazz Man, who seemed to belong there with them.\n\nOver the course of dinner she learned more about him than she had since they'd met. He was hesitant to talk about himself, but she got him to tell her about his childhood, the death of his father, going to college, dropping out, his mother's passing, and how and why he'd joined the Army and the full story as to how he went from the infantry to the band, his return to college, and what he was majoring in.\n\nKim told him how sorry he was about both parents then asked, \"So what do you think you'll do when you graduate?\"\n\n\"Thank you. Well, I've thought a lot about going back in the Army,\" he told her as he watched her reaction.\n\n\"I think service is a very noble profession,\" Kim said, pleasantly surprising him.\n\n\"But?\"\n\n\"No buts. I think that's great if it's what you want to do. Would you be in the band again?\"\n\nKim had very little understanding of the military, so Kyle explained what he meant.\n\n\"No. Well, yes. Were they to allow me to re-enlist, I'd be back in the band. But I have no intention of doing that.\"\n\n\"I don't understand,\" Kim said as she tried to make sense of what he was telling her.\n\n\"I loved being an enlisted soldier, but if I go back in, I'll do so as a commissioned officer.\"\n\n\"That's higher up, right?\" she asked, feeling silly for not knowing.\n\nHe thought about making a joke about second lieutenants, but he was pretty sure she wouldn't understand it, so he answered truthfully.\n\n\"Yes. All jobs are important, and no one is any more important than anyone else. But in terms of the um...pecking order, if you will...yes, it's...higher.\"\n\n\"So you'd get a lot of money?\" Shawn asked.\n\nHis mom gave him a look that made him ask, \"What's wrong with that?\"\n\n\"It's okay,\" Kyle said as he looked at Kim.\n\n\"I'll never be rich if I stay in the military, but money isn't my goal. But to answer your question, yes, I'd make a lot more than I was, but I'd be doing it because I still have this...this need...to do something for the greater good.\"\n\n\"Well, I think that's very admirable,\" Kim told him, the tone of her voice somehow different.\n\nKyle could see something had changed in her demeanor but didn't mention it until he and Shawn had finished practicing and playing, and the boy went to bed.\n\nHe and Kim had a second glass of wine as they sat down on the couch together, and after touching glasses, Kyle asked her if everything was okay.\n\n\"Yes. Fine. Why do you ask?\"\n\n\"I got the sense\u2014the very strong sense\u2014that something about me possibly going back into the Army didn't set well with you. Am I wrong?\"\n\nKim took a small sip then, for the first time, said what was really on her mind without any interference from Persons 1 or 2.\n\n\"I know this is going to sound...ridiculous...but after telling myself over and over there's no way I'd ever...date...a man your age, I think I was maybe a little disappointed to think you might leave Charlotte again.\"\n\nNormally, Kyle would have gotten flirty and said something like, \"Oh. So you DO like me, huh?\"\n\nBut as he watched Kim while she spoke, he could tell that she did. Or at least that she wanted to like him.\n\n\"You do know the military moves entire families when the service member moves, right?\" he said in a quiet tone of voice.\n\nKyle was right. She had been disappointed. She admitted that she did like him, but for some reason it didn't occur to her that she and her son could move with him. That didn't occur to her because she hadn't even thought about things going that far. But when he told her about returning to the Army, the first thing that came to mind was him leaving and her staying. With Shawn. Alone.\n\nBut when he told her that families moved together, she had another flutter as her heart beat faster again.\n\n\"So what are you saying, Kyle?\" she asked, too afraid to even look at him as she took a second small sip.\n\nHe reached over and ran his index finger down the length of her hair then said, \"I'm saying that you don't need to let that be something to be afraid of. Unless, of course, you already know you'd never leave Charlotte. For any reason.\"\n\nKyle smiled then said, \"Well. Pineville.\"\n\nKim finally smiled, too, and she even turned to look at him.\n\n\"I have been up and down and back and forth about this, about...us...for days.\"\n\nKyle didn't say anything knowing she wasn't finished.\n\n\"It wasn't until tonight that I realized that I...that I really do like you.\"\n\nShe looked away for a moment then turned back toward him.\n\n\"I have all these thoughts swirling around in my mind, you know? Like...how old you are.\"\n\nShe smiled again then said, \"Or...aren't.\"\n\nKyle smiled back then held out his hand hoping she might take it. Kim looked at it, then set the glass down and gave hers to him.\n\n\"Or how old I really am. And then there's Shawn. And my parents live here. And...\"\n\nKim looked down again briefly then looked at Kyle and said, \"And then there's me. And how much I want to fall in love again and be loved and for Shawn to have someone who loves him, too.\"\n\nKyle slowly slid closer and watched to see how Kim would react. She didn't move away or pull back, and she didn't let go of his hand.\n\n\"I'll love you like that, Kim,\" Kyle quietly told her after she turned to look at him.\n\nShe was staring at him now, and maybe even more than that as she looked into his eyes to see any sign of dishonesty or deceit. She knew she was gun shy, but she still believed in love, and if Kyle was lying, he was incredibly good at it.\n\n\"And I would love Shawn like my own.\"\n\nKim finally blinked then said, \"I...I believe you, but...you...you barely know me.\"\n\n\"True. But I...I have this feeling. I can't really explain it, but it keeps telling me...\"\n\nHe squeezed her hand, smiled a kind smile, then said, \"That you're the one.\"\n\nKim wanted him to kiss her so badly it hurt, but her rational mind was still in control, and while it was, it was going to speak for her.\n\n\"Kyle, I'm...I'm going to be...40 years old,\" she said as though she were apologizing.\n\n\"Did you not hear me say I dated someone 14 years older than me before?\"\n\nKim had heard him say that, but she'd forgotten about it because this was...her...and not some abstract other woman. \n\n\"I did,\" she told him quietly.\n\n\"So you have to know that doesn't matter to me.\"\n\nHe reached out and gently touched her face then said, \"You...matter to me. And Shawn matters to me. But your age doesn't.\"\n\nAgain, Kim heard every word, and in its last gasp to stay in control, her rational mind said, \"So you're...25?\"\n\n\"For a couple more months,\" Kyle told her as he tried not to smile.\n\nShe saw the corners of his mouth, and when she did, she smiled, too.\n\n\"Wow. I'm...I'm falling for a man who's...\"\n\n\"Crazy about you?\" Kyle said, finishing her sentence before moving closer and closer until his lips met hers.\n\nKim kissed him back, tentatively at first. One soft, gentle kiss. But when he kissed her a second time, her rational brain said, \"I give up,\" and when it did, Kim put her arms around him and she gave in.\n\n\"Please don't hurt me. Or my son,\" she told him during a brief moment between kisses.\n\n\"Never,\" Kyle replied, looking into her eyes until she was sure.\n\n\"Okay,\" Kim whispered before pulling him down on top of her as tongues swirled and flicked causing Kim to moan softy with desire.\n\nJust before she said, \"Shawn's still awake,\" Kyle said, \"I know Shawn's here, so please don't think I'm going to try and go too far, okay?\"\n\nKim looked at Kyle and wondered if he could somehow read her mind. Relieved, she smiled then said, \"Okay,\" again before taking his hand and putting it on her breast and saying, \"but we can go a little farther if you'd like.\"\n\nIt went no further than second base, but by the time Kyle left just before midnight, Kim found herself wondering how her life could have changed so dramatically in such a short period of time. Especially considering that the reason for the change was a 25-year old man she'd only recently met. \n\nAnd yet it had, and while she knew she could get hurt again, she realized she wanted this more than anything she'd ever wanted, and if she did end up getting hurt, then so be it. For now, the possibility of falling in love with someone like Kyle Roberts...no, with Kyle Roberts...was more important to her than protecting her feelings.\n\nThat night, for the first time in so long she couldn't remember, Kim's hands went somewhere they hadn't been in a very long time. And there was one little area in particular that was the focus of all her attention as she lay there alone dreaming about what might come next as her body shuddered so hard it scared her.\n\nLess than two minutes later, she was asleep so soundly she was still out when Shawn came in at 9am the next morning to make sure she was okay.\n\n\"I'm fine, honey,\" she told him with a sleepy little smile. \n\n\"Are you too big to lay down by me?\" she asked her son.\n\nHe gave her a look that told her he wasn't quite sure, but after a second or two he said, \"I guess not,\" then crawled over her and lay beside her on top of the sheets while she lay under them.\n\n\"Shawn?\"\n\n\"Uh-huh?\"\n\n\"Do you really like Kyle?\"\n\n\"Well, yeah. He's...awesome.\"\n\nHis mom turned his way then smiled as she kind of ran her fingers through her son's hair.\n\n\"How would you feel if...he and I...you know, if we were...dating?\"\n\nShawn sat up so fast it scared her, but when he kept going and did a happy dance on the bed, she knew everything was okay.\n\n\"So is that a 'yes'?\" she asked with a little laugh.\n\nJust like when he was small, Shawn went up, threw his legs out, and fell down on his bottom. But being 11, the bed bounced a whole lot more than it had the last time he'd done that several years before. The action caused an equal and opposite reaction in which Kim nearly rose off the mattress before laughing even harder. \n\nShawn laughed, too, then, without answering his mom's question, he put his arms around his mom and said, \"I love you, Mom.\"\n\nShe put a hand behind his head and held him close and told him she loved him, too, as she fought back tears borne of happiness. And as she held her son close she wondered if maybe, just maybe, she'd finally found true love. With someone so unlikely it scared her.\n\nWhatever small amount of fear Kim was feeling vanished as she and Kyle spent several hours together on Saturday and then again on Sunday. Part of that time was devoted to helping Shawn who was improving rapidly, and Kim found herself taking a greater interest in his music even though she knew it was largely due to who her son's teacher was than the music itself.\n\nAs she sat and watched her two guys interact it reminded her of how it felt to be in love. All that mattered was being near that special someone, not what he was doing. She smiled when she later realized she loved just watching Kyle study, something he did on both of those days for at least an hour or so. Even more pleasant was hearing him tell her how difficult it was to concentrate with her so near by.\n\nBut best of all was the time they had together once Shawn went to bed. It was the simple things like handholding or just laying her head on his shoulder as they watched a DVD together. Then again, the kissing was pretty amazing, and even though they still hadn't gone beyond second base, the anticipation and the tension building between them was delicious.\n\nAfter another week much like the one before it, Kim felt like she was continually drugged. It was such a pleasant high that she began wondering if her rational mind really was in control or if this was more having had some deep, emotional need being met after what felt like years of neglect.\n\nShe'd told her mother, who was also her closest friend, that she'd met someone, but she neglected mentioning this 'someone' was much younger than her. Her mom was thrilled to know her daughter was finally dating again, and she asked Kim to bring him to dinner one evening, but so far, at least, that hadn't happened.\n\nKim stared at her phone for quite some time trying to decide if she should call her mom or just work through these new feelings on her own. But if she really was 'drunk on love' Kim knew she wouldn't be capable of objectivity. But calling to talk about Kyle meant coming clean about who he was, and that only made dialing her number that much harder.\n\nBut her need for wise counsel from the person she trusted the most overrode her fears, and seconds later, her mother answered.\n\n\"Kimmy? Hi,\" her mother, Margie Peterson, said when she saw her daughter's name.\n\n\"Mom. Hey. Are you busy?\"\n\n\"No. Not busy at all. What's going on?\"\n\n\"I...I need some advice.\"\n\n\"Oh. About...a man maybe?\" her mother said, a hint of teasing in her voice.\n\n\"Well...yes.\"\n\n\"Okay. I'm listening.\"\n\nKim did her best to explain how things were going, how much Shawn looked up to this new man in her life, whose name was Kyle, and the way he made her feel.\n\n\"But?\" her mom asked after Kim set the stage.\n\n\"I guess I'm wondering if what I'm feeling is real or if I'm just...floating on a cloud.\"\n\nHer mom laughed politely then said, \"Honey. That's how love makes us feel. If you didn't feel that way I'd tell you to run like crazy.\"\n\nThere were a few seconds of silence before Kim said, \"What if he's...wrong for me?\"\n\n\"Wrong? Wrong how?\"\n\n\"You know. Wrong,\" Kim said as though that cleared things up.\n\n\"Kim? Are you seeing a married man?\"\n\nStunned, it took Kim a few more seconds to reply.\n\n\"Mom, how could you even ask me that after what Shawn's father did to me?\"\n\nKim could barely even say his name anymore, and her mom felt terrible for asking.\n\n\"I'm sorry, Kimmy. That wasn't fair. I just couldn't think of anything else that would be a huge concern. Unless he's...gay.\"\n\n\"What? Mom! No. He's definitely not gay!\"\n\n\"Is he...controlling? Or angry? Or...a Scientologist?\"\n\nKim laughed at the Scientology comment then said, \"No. He's kind and gentle and...sweet. And very smart. And an Army veteran.\"\n\nHer mom laughed then said, \"I believe you've mentioned 'handsome' a time or two already, honey. In fact, I believe you described this Kyle as 'drop dead gorgeous'.\"\n\n\"He is gorgeous. And maybe that worries me, too. I mean, any woman from 18 to...\"\n\nKim almost said '80' but nearly laughed when she did, used '58' as her upper limit as the women who would fall for him.\n\n\"Don't forget that you're a beautiful woman yourself, sweetheart.\"\n\nKim smiled then thanked her mom.\n\n\"It's true. So it makes sense you'd be dating men who are as attractive as you are.\"\n\nThere was another long pause before Margie said, \"It's something else, isn't it?\"\n\n\"Yes,\" Kim said very quietly.\n\n\"Is he...a bum? You know, the kind of man who hangs out at the beach making things out of driftwood while you work to support him?\"\n\nKim turned her head and moved the phone away in order to laugh without hurting her mother's feelings.\n\n\"Mom? We don't have a beach in Charlotte.\"\n\n\"Okay. But you know what I mean, Kim.\"\n\n\"No. He's not lazy. He's gone back to college to finish his degree.\"\n\n\"Oh. So...does he have children?\"\n\nKim started to answer when her mom said, \"Oh, my. Is he...older? Maybe...a lot older?\"\n\n\"No. He's definitely not older,\" Kim replied even more quietly.\n\n\"I give up, honey. Just say it, okay?\"\n\nKim bit her lower lip then took a deep breath and said, \"Just the opposite.\"\n\n\"Of?\" her mom asked.\n\n\"He's...younger than me, Mom. Quite a bit younger.\"\n\n\"Oh. OH!\" her mom replied. \"Um...how much...younger?\"\n\nKim bit her lip again then said what she'd avoided saying.\n\n\"Um...how about...14 years younger?\" Kim said, turning it into a question.\n\nNow the silence was on her mother's end.\n\n\"Oh, my. That's...a lot.\"\n\n\"I know! And yet I...I think I may be...falling in love with him.\"\n\n\"Didn't you meet him less than a month ago?\"\n\n\"About that,\" Kim said as though she were apologizing for something or trying to justify it.\n\n\"Well, with...your ex...you dated for two years then had a yearlong engagement. And...\"\n\n\"Yes. I was 26 which isn't...old...but it's not like I got married right out of high school.\"\n\n\"Don't feel bad, honey. I thought I knew him, too. I loved that boy like a son, and now all I want to do is wring his neck!\"\n\nKim finally laughed again then got serious.\n\n\"What do I do, Mom?\"\n\n\"Tell me something you don't like about him. About Kyle.\"\n\nKim thought for a few seconds then said, \"Nothing. I can't think of a single thing.\"\n\n\"Is he...employed? Can he support you and your son?\"\n\n\"He's in college. On the GI Bill. So no, he doesn't have a full-time job. But he seems to be leaning toward going back into the Army. As an officer.\"",
        "\"Well, that's certainly admirable. And from what I know, they make a reasonable amount of money. Enough to care for a family anyway.\"\n\nKim tried to explain the drug-like high Kyle induced every time she saw him, and this time her mom laughed.\n\n\"I know I'm your mother, honey, but I'm going to tell you something woman to woman, okay?\"\n\nKim didn't say anything. She did, however, hold her breath as she waited.\n\n\"If all you want to do is hop in the sack with him, it's infatuation. But if you can honestly picture him raising Shawn and providing for you, and if that's what makes you happy, then it may well be more than just a fantasy.\"\n\nKim exhaled then said, \"Woman to woman, there hasn't been any 'sack hopping'. Yet.\"\n\nHer mom laughed then said, \"Sex is a very important part of any marriage, Kimmy. Let me qualify that. When it's good, it's a very small part. But when it's bad, it becomes...huge. But assuming that part will at least be 'good', then what really matters are the other, more important things like honesty, commitment, a willingness to compromise and sacrifice, and maybe most importantly\u2014does he inspire you? Does he make you want to be a better person? You said Shawn adores him, so does Kyle feel the same about him? Those are the things that matter.\"\n\nA figurative dam burst, and just like that, Kim knew.\n\n\"He does, Mom. He does inspire me, and even though he's younger than me, I always feel like he's the smarter, older one as well as all those things you mentioned and more.\"\n\nShe heard her mother smiling as she asked, \"So when do we get to meet this amazing young man?\"\n\nAfter another week in which Kim was no longer quite so tired after work and during which she saw Kyle nearly every day, she mentioned her conversation with her mom.\n\n\"I'd to love to meet her. And your dad.\"\n\n\"Are you sure?\"\n\nKyle smiled at her then asked, \"Perhaps the better question is, are you sure?\"\n\nShe smiled back then kissed him before telling him she was very sure.\n\n\"Your dad isn't...hardcore...is he?\"\n\nKim thought about that word for a moment then laughed.\n\n\"No. My dad is...wonderful. He's the kindest man I know. And my mom is...\"\n\n\"Your best friend,\" Kyle said, proving he'd been listening when she told him that earlier.\n\n\"She really is.\"\n\n\"Then I'd love to meet them.\"\n\nKim was thrilled, but then she was suddenly sad.\n\n\"Would you mind telling about your parents?\" she asked very sweetly.\n\nKyle smiled then said, \"I'd love to tell you about them.\"\n\nKim teared up when Kyle told her how his father had passed away, but when he explained how his mother had also died, she couldn't keep herself from crying.\n\n\"That's just so...unfair,\" she told him as she put her arms around him.\n\n\"Life isn't always fair...honey,\" he quietly replied, using that endearment for the first time.\n\nShe thought about her former husband then said, \"You're right. Sometimes it isn't.\"\n\nShe squeezed him a little tighter then quietly asked, \"Would you call me that again, please?\"\n\nKnowing he could get away with it, Kyle said, \"Okay, That Again.\"\n\nKim pulled away and gave him a funny look.\n\n\"You asked me to call you 'that again', so I did.\"\n\nShe narrowed her eyes and tried to look mean, but she ended up laughing and put her arms back around him. And before she could stop herself, she said, \"I love you so much.\"\n\nKim quickly pulled back and looked at Kyle with shock and horror.\n\n\"What? You didn't mean it?\" he asked with a smile.\n\n\"No! Of course I meant it. I just didn't think it was...\"\n\n\"I love you, too. Honey,\" Kyle told her.\n\nAlready emotional, Kim felt the warm tears that ran down her cheeks as she again put her arms around the much-younger man she loved.\n\n\"I do love you, Kyle. It's crazy, but I do. Very much.\"\n\nThe following weekend, the anxiety Kim's parents had about this 'younger man' vanished after spending a little more than two hours with him. It was obvious he loved their daughter and their grandson, and while he was, for all intents and purposes, a broke college student, they could see that he had a vision for the future.\n\n\"Well, a career in the Army isn't a bad way to go,\" Kim's father, Andy Peterson, said at one point. \n\n\"You know, I really wanted to join the Marine Corps when I enlisted, but I had this idea of living out Full Metal Jacket for three months, so I enlisted in the Army.\"\n\nKim took notice and asked, \"Are you considering the Marine Corps?\"\n\n\"They have the coolest uniforms!\" Shawn said out of nowhere, his head buried in his iPad.\n\nKyle laughed then said, \"Not until I talk it over with someone who means everything to me.\"\n\nKim knew as little about the Marine Corps as she did the Army, but for that matter, she knew almost nothing about any branch beyond who had the really big ships, so she couldn't intelligently comment. What she could comment on, and what really mattered to her, was the way Kyle let her know how important she was to him.\n\nHer ex would have simply announced what he intended to do, and she would be expected to get onboard with it. Having someone who cared what she thought and how she felt only made her love him more.\n\n\"I'll support whatever decision you make,\" Kim told him as her parents watched and listened.\n\nWhen they got ready to leave, Andy asked Kyle if he could have a moment.\n\n\"Yes, sir. Of course.\"\n\nThey went to the den where Andy said, \"I was willing to give you a chance, but because you're so much younger than my daughter, I have to admit I couldn't imagine liking you much.\"\n\nKyle politely listened without interrupting, and Andy continued.\n\n\"I'm a pretty good judge of character, Kyle. So is Margie. And well, the truth is, we both like you. A lot. You are young, but you're not a kid. You've got a good head on your shoulders, and Kimmy's fallen hard for you, and that grandson of ours has a serious case of hero worship going on.\"\n\nKyle still didn't say anything knowing there was more to come.\n\n\"I watched my daughter go through hell when that SOB of a...husband...broke her heart.\"\n\n\"I promise you I will never hurt her. Or Shawn,\" Kyle told the older man, knowing what he wanted to hear.\n\nAndy stuck out his hand, shook Kyle's then said, \"I almost never give advice, but I'm gonna give some now.\"\n\nHe waited for a moment then said, \"I never served, so I don't know much about the difference between the Army and the Marines, but I do know a man's gotta follow his heart. So if you know what you want, and if Kim is okay with it, then do what you really want to do this time around, okay?\"\n\n\"I will, sir,\" Kyle promised before the older man gave him a kind of old-school 'bro hug' then told him it was a pleasure meeting him.\n\n\"You give me hope that the younger generation still gives a damn about this country of ours.\"\n\nKyle assured him that he did, and with that, he went to find the woman he loved and her son to take them home.\n\n\"So what did my father say?\" Kim asked on the drive back to her place.\n\n\"Just to follow my heart.\"\n\n\"That's it? That's all he said?\"\n\n\"Pretty much.\"\n\n\"Wow. I thought you were getting the third degree.\"\n\n\"Nope. Not at all.\"\n\n\"So...what's your heart telling you?\" Kim asked.\n\n\"That I want to spend the rest of my life with you.\"\n\nIt was dark, but Kyle saw the tears welling up in Kim's eyes. She managed not to cry and took his hand and squeezed it.\n\n\"That's interesting because that's what mine's telling me, too,\" she said as she stared at him wondering how she'd managed to find someone so perfect for her.\n\n\"Are you guys gonna get all mushy?\" Shawn said, again piping out of nowhere.\n\n\"No. We're not getting...mushy,\" his mom said as she smiled at the man she loved before leaning over and whispering, \"not until Shawn goes to bed anyway.\"\n\n\"I heard that!\" her son said, surprising her and causing her to recoil in fake horror.\n\n\"You are so busted, Mom!\" Kyle told her.\n\n\"Yeah, Mom. You're totally busted!\"\n\n\"Okay. As long as I'm busted with you two handsome guys, that's just fine with me.\"\n\nThat night, Kim not only wasn't tired, she took Kyle by the hand and told her it was time to get mushy.\n\n\"How mushy?\" he asked as she pulled him toward the bedroom.\n\n\"Very,\" was all she said before closing the bedroom door, locking, it, then pulling Kyle down on top of her on the queen-sized bed where they made love for the first time. And the second before Kyle left around 1am.\n\nKyle had never stopped running or taking good care of himself, but the following week, he began working his way up to running 10 miles while spending as much time as he could in the university gym while also making time to study and see Kim as often as possible.\n\nBetween her job and his brutal schedule, the time they had together was precious. Over the weeks and months that followed, they found a rhythm that worked for both of them, and the more they learned about one another the deeper their love became.\n\nShawn's saxophone skills grew rapidly, and after giving notice to his teacher, they let him go and Kyle picked up the slack. In his spare time, of course.\n\nFour months before graduation Kyle sought out the equivalent of a Marine recruiter, someone called an Officer Selection Officer or OSO, and began the process of getting ready to attend Marine Corps Officer Candidates School in Quantico, Virginia.\n\nOn the day that his approval came back, a day when he learned exactly when he would be reporting to OCS, Kyle took Kim and Shawn to dinner at the nicest restaurant they'd ever been to. It also happened to be Kim's 40th birthday, something he'd been planning for weeks.\n\n\"Honey, this place is crazy expensive,\" Kim said when he pulled into the parking lot.\n\n\"But this is the kind of place that makes a lasting impression,\" Kyle told her even though he knew money and things didn't impress her. \"On a special occasion.\"\n\nShe gave him a quizzical look but left it at that since it was her birthday as he came around and helped her get out before escorting her inside.\n\nShawn had recently turned twelve, so when he asked if he could go to the bathroom\u2014alone, his mother didn't think twice. But when he came back, she did a double take because all of the waitstaff as well as the managers were with him. And all of them were smiling.\n\n\"What's going on?\" Kim asked as she looked at Kyle who smiled then asked Shawn if he was ready.\n\nShawn had gone to the car to get Kyle's saxophone and handed it to him.\n\nHe stood up, apologized for interrupting everyone's dinner, then said, \"Tonight is my beautiful girlfriend's birthday, ladies and gentleman, so if you'll join me...\"\n\nHe stood on a chair then raised the sax to his lips and played 'happy birthday' for the woman he loved, and when he finished, the place went crazy. Many called out 'happy birthday' or 'best wishes', so Kim stood up briefly, kind of waved then called out, \"I call this handsome guy 'Jazz Man', and now you know why!\"\n\nThere was another round of applause when she sat back down, then Kyle said to everyone, \"If you'll bear with me for one more short moment...\"\n\nHe looked at Shawn then asked, \"You got it, buddy?\"\n\n\"Yep!\" the boy told him as he pulled out a small box and handed it to Kyle.\n\n\"Oh...my...\" Kim said as everyone else smiled and continued watching while Kyle got down on one knee.\n\n\"I could spend quite some time talking about how much I love you or how lucky and blessed I feel to have found you\u2014and Shawn\u2014but I think you already know that. And since everyone's staring and...hungry...\"\n\nHe opened the box and displayed a ring Kim was too excited about to think, \"That's way too expensive!\" as he asked her to marry him.\n\n\"Are you kidding?\" she said as she held out her hand and fought back tears. \"Of course I'll marry you!\"\n\nKim may not have cried, but the three women who were waiting tables were as were several other women who were watching. Even most of the men felt a little hitch in their giddy up when Kyle helped his new fianc\u00e9 stand up and kiss her in front of God and country. Or at least the restaurant which burst into applause one more time.\n\nAn older gentleman called the general manager over and asked him to put their dinner on his tab, then told everyone else the next drink was on him just as if they were in a bar somewhere.\n\n\"Free dinner, a private serenade, and a diamond ring. You really know how to impress a girl,\" Kim told her handsome fianc\u00e9.\n\n\"I just wanted to give you a night you'd never forget, honey,\" Kyle told her.\n\nShe finally teared up then told him it was the best night of her life.\n\nHe moved closer then whispered, \"It's gonna get even better when we get home.\"\n\n\"Promise?\"\n\n\"Uh-huh. I promise.\"\n\nThe best night of her life did get better, and when she woke up the next morning, Kyle was still there with her for the first time ever.\n\n\"Good morning,\" he told her once she woke up.\n\n\"Good morning,\" Kim said before kissing him then looking at her ring again. \"I can't imagine being happier than I am right now.\"\n\nShawn heard talking and came to the bedroom and knocked. \n\n\"Can I come in?\"\n\nKim looked at Kyle, and both of them laughed.\n\n\"Sure. Come on in!\" Kyle called out.\n\nIt was obvious that Shawn was as happy as they were, albeit for somewhat different reasons.\n\n\"You too old to get in bed with me?\" his mom asked again.\n\nThe 12-year old looked at Kyle who moved away from Kim, and once there was space, he jumped up and got in.\n\n\"You better not ever tell anyone, Mom,\" her son warned her as he lay between them.\n\n\"Me?\" his mother asked as though that was impossible.\n\n\"The real question is whether or not a 12-year old boy is too old to be tickled,\" Kyle said, drawing looks from both Shawn and his mother.\n\n\"Oh, no! No way!\" Shawn said, but before he could get away, Kyle grabbed him, and his mom got her fingers in his ribs. \n\nWhen he shrieked with laughter, he tried to cover his sides, so Kyle started tickling his knee, and Shawn nearly lost it.\n\nA minute or two later, the three of them had stopped laughing, and Shawn once again made his mom's day when he said, \"I love you, Mom.\"\n\n\"Ahh! I love you, too, honey!\"\n\nThen out of nowhere, he said, \"And I love you, too, Kyle.\"\n\n\"I love you, too, buddy. And I love your mom. Very much.\"\n\n\"Mom? Remember when I showed you the CD?\"\n\n\"I do,\" his mom said as she looked across her son to her fianc\u00e9. \"I had no idea one of the handsome soldiers on the cover would one day change my life.\"\n\n\"Wait. You thought those other guys were handsome?\" Kyle asked as though he was offended.\n\n\"Not as handsome as you,\" Kim said with a smile.\n\n\"Good answer,\" Kyle told her.\n\n\"You guys are gonna get mushy again, huh?\" Shawn said as he lay there between them.\n\n\"Uh-uh. We're just gonna enjoy our time together as a family,\" his mom replied.\n\n\"Okay. That's cool!\" Shawn said, drawing a laugh that made him laugh, too.\n\nThree days after graduation, and three days before reporting to OCS, Kyle and Kim got married at her mom and dad's house in a small ceremony. Shawn had no idea what a best man did, but he loved being one, and Kim was thrilled to ask her mom to be her Maid of Honor.\n\n*****\n\nFive months later. Quantico, Virginia.\n\n\"Ladies and gentlemen. Welcome to the graduation ceremony for Lima Company of Officer Candidates School. The members of Lima Company will be involved in a parade followed by each officer candidate taking the oath of office which will be administered by our guest of honor, Marine Lieutenant General, James...\"\n\nKim and Shawn sat in the bleachers as they strained to find Kyle among the see of desert camouflage uniforms forming into platoons in front of them. Shawn called out, \"There he is!\" at least a half dozen times before Kim spotted her Marine all tanned and even more fit as he and his platoon 'passed in review'.\n\nJust minutes after the parade ended, the oath of office was administered, and Kim checked her purse for the fifth time to make sure the gold bars were still there as she and her son walked onto the parade deck to pin them on Second Lieutenant Kyle Roberts, U.S. Marine Corps.\n\nShawn was now tall enough that Kyle didn't need to bend down when Shawn stuck one on Kyle's right side while his mother did the left. \n\n\"Can I kiss you?\" Kim asked, knowing that public displays of affection weren't allowed.\n\n\"You better,\" Kyle told her before pulling her close and kissing her.\n\nWhen they turned around, the Marine gunnery sergeant and the sergeant who'd trained Kyle for the last ten weeks were waiting, and both saluted the new lieutenant.\n\nKyle only had one silver dollar, and according to tradition, handed it to the gunny after thanking him for being such an outstanding role model and mentor.\n\n\"It was my honor, sir,\" the older man with 14 years in the Corps told the new officer he'd yelled at for the last ten weeks. \"I had my doubts about a Doggie making it through Marine OCS, but you killed it.\"\n\n\"I had a lot of help,\" Kyle modestly replied before introducing Kim and Shawn.\n\n\"Your wife's a beautiful woman, Lieutenant. You definitely married up,\" the gunny said respectfully but with a grin.\n\n\"No argument here, Gunny.\"\n\nKim kissed her husband one more time then laughed at what was said.\n\n\"Hey, hey, you two!\" the Marine gunny said with a smile, and if Kyle saw correctly, a little wink.\n\n\"Sorry, Gunny,\" Kyle told him.\n\n\"Sir, don't apologize. You're the lieutenant now.\"\n\n\"Oh, right. Yeah, that's gonna take some getting used to.\"\n\nThe gunny saluted again, wished them all the best of luck, then walked away.\n\n\"So. Are you ready to start the rest of our lives together, Mrs. Roberts?\" Kyle asked his beautiful wife.\n\n\"With the Jazz Man? I can't wait!\"\n\n\"Hey! That's...Lieutenant Jazz Man to you,\" Kyle said, trying to sound authoritative.\n\n\"Ha! I'm a general, Lieutenant!\" Kim told him as she pointed toward her car and said, \"Now...march!\"\n\nKyle came to attention and called out, \"Aye, aye, Ma'am!\" as he left the OCS parade deck for the last time, his beautiful wife on one arm and their son walking next to him, looking up at the man he loved and admired more than anyone else on earth."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "older woman",
        "younger man",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/jazz-man-1"
}