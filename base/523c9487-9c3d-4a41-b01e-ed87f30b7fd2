{
    "title": "Female Sexual Response: Subject 334",
    "pages": [
        "This is Part Two of this series. If you haven't already, please read Part One \"Female Sexual Response: Subject 326\" first. This is written from the perspective of another girl in the story, Subject 334.\n\n-------------------\n\nI was mad at my roommate Kinsey. But then I wasn't. I was so confused. I don't know how I let her talk me into doing this. She was the one who saw the notice first. She didn't want to do it by herself, she was too chicken. And I find it hard to believe that I agreed to do it for something as stupid as vacuuming. She said she would vacuum our dorm room for the entire month if I went with her. Vacuuming! How could I be so stupid?\n\nIt seemed like an easy $500, but nothing was worth that. The humiliation, the shame, the embarrassment, the pleasure. The intense, overwhelming pleasure. But for some reason, I didn't drop out of the study. For some unknown reason, I decided to wear the home monitoring device for the second week. I had been forced into having orgasm after orgasm in front of complete strangers, I had let a woman fondle and then suck my nipples, I had been teased and tormented until I cried, and yet I still continued the study. I had it figured out by now. As long as I only wore the device when I knew Kinsey was in class or at work, I could bear it. I could bear the frustration of not being allowed to orgasm because I knew at the end of the week, I would get to experience it again. They would hook me up to that thing and I would be experiencing nirvana in its purest form. I was good at blocking things out, and as I lay there, naked and exposed, I could block out the doctors and the nurses as they watched me orgasm again and again until I was begging for them to stop.\n\nBut I was still mad at Kinsey because she always wore her device when I was there. She forced me to listen to her while she moaned and cursed, instructing it where to lick and kiss and suck, as if it could hear her. I would always leave, sometimes for hours but when I came back, she would still be wearing it. By then she wouldn't even notice me in the room. I would put on my headphones and try to ignore her. But I couldn't ignore the smell. Her smell. She was a true exhibitionist, I found out. She was the only one who walked around the showers naked. She even brushed her teeth naked. We've had full political discussions while she was naked as I tried to keep my gaze above the neck. She was beautiful. If I had her body, I would flaunt it too. If she was taller, she easily could've been one of those Sports Illustrated swimsuit models, although her breasts were probably too large. But after this week, I didn't want to talk to her. Or look at her. At all.\n\nBut she always wanted to talk about it. When we came back from that first exam, I couldn't tell if she was more in love with Dr. Matthias, or the nurse who had fitted her device, or if she was actually in love with the machine. \"Wasn't that amazing?\" she gushed. \"That was sexiest experience of my life!\" But I didn't want to talk about it. \"Did the nurse use her mouth on you?\" I told her I didn't want to talk about it. \"Did you think you were going to die when you came in front of all the other girls in the waiting room?\" Silence. \"Could you hear me screaming down the hall? Because I could totally hear you.\" Mortification.\n\nWe were both freshman psychology majors. It was a requirement that all psych majors participate as a subject in a certain number of research studies to graduate. I knew I should have chosen one of the studies where you watch a short movie and then you have to list 50 round objects that you saw, or do some simple geometric puzzles while heavy metal music blared in the background. That would have been easy. But somehow I let her talk me into doing the Female Sexual Response study with her.\n\nAs I left the lab after the second appointment where I was forced to have 10 orgasms in front of about 20 doctors, I was handed a sheet with instructions for this next week but I just stuffed it into my backpack as I walked back to the dorm. It wasn't until later that night that I saw it and decided to read it. Immediately, my heart started racing.\n\nThis week, please wear your device in a public setting where there are other people within 20 feet. Your device will be able to pick up ambient heat that other people will emit. For example, you cannot be in your car sitting in traffic, or at a park where people are too far away. You can wear the device at your home as long as there is someone else there. You must wear your device for at least one hour at 3 of the following: restaurant or cafeteria, class, a store or work. Please log the location you have chosen for each day. As usual, wear your device for your next appointment and put it on 30 minutes before your scheduled time. Thank you again for your participation.\n\nOh, crap. If only I had a boyfriend. I could wear it in front of him and be done with it, but that was one of the qualifiers. You couldn't be in a relationship if you were going to participate in this study. \n\nThe next day I left early without the device and went to class. I was gone pretty much the whole day. When I got home, Kinsey was just taking her device off. I heard a pop as her nipples came loose from the suction cup inside the bra. \"Have you done it yet?\" she asked. Her body was covered in sweat. \n\n\"No,\" I answered. \n\n\"It's wild! It actually--\"\n\n\"I don't want to talk about it,\" I cut her off.\n\nShe just smiled. \"Where are you going to wear yours? Are you going to stay here?\" She seemed really excited about that.\n\n\"No, I'm going to the movies,\" I answered without looking at her. It seemed safe to wear it there. It would be dark, I could sit in the back row and not be noticed.\n\nShe laughed. \"Have fun! Make sure it's a loud one.\"\n\nI took the box and took it to the bathroom with me so she wouldn't see me put it on. I was very modest, although I've been told that I'm pretty and have a great body. I always thought I was pretty average-looking but Kinsey always commented on how great my hair was, or how pretty my eyes were. She even once told me how much she liked my breasts, especially how perky they were. At the time I just brushed it off, but after these past few weeks, I really think she had a thing for me, which made me very uncomfortable. I scoffed at her comment to me. Make sure it's a loud one. Ha! I was proud of my self control. At the weekly appointment when everyone was orgasming in the lobby, all the other girls were moaning, but I just sat there quietly. I was proud that I was able to climax without making a noise, although I couldn't keep quiet while I was in the exam room as Kinsey had joyfully pointed out to me. \n\nI put the device on in the bathroom stall, making sure my nipples were hard enough and that the phallus fit snugly in my pussy and the clitoral stimulator was in the right place. I was already wet, but I ignored it. I would do this, and I would not let it frustrate me like last week. This thing wasn't going to beat me. I wouldn't let it.\n\nAs I walked towards the movie theater, it turned on. Slowly at first. Walking was difficult but I managed as the phallus fucked me and the mechanical mouths were licking and sucking my nipples. The vibrations on my clit and my g-spot were slow and deep at this point, which were leading me where I didn't want to go, but I knew I didn't have a choice. I started conjugating French verbs in my head to keep my mind off the delightful ministrations that were happening under my clothes.\n\nThe sidewalk was crowded and I kept getting bumped by someone. Everytime someone bumped me, a jolt of electricity went through me, concentrating on my clitoris. Someone from my dorm stopped to talk for a little bit, but I have no idea what I said back. But he didn't look at me funny so I think I fooled him. By the time I arrived at the theater, I was at a high state of arousal. Probably an 8, but nowhere near an orgasm. I kept waiting for it to turn off, but it just kept going. It would slow down, always at a moment when I wanted more pressure, or faster fucking, or more vibration. Like it knew what my body wanted and it was going to deny me.\n\nI bought my ticket and entered the crowded theater. I was counting on an emptier theater, especially since it was in the middle of the afternoon, but almost every row was filled up. I took a seat on the right side in an aisle seat towards the back while I was being fucked and sucked and licked, almost to a point of no return. But I realized that everyone on the other side of the aisle could see me, so I moved over two seats, hoping to blend in to the dark velveteen seats. I knew I was breathing erratically and suddenly I felt like I was too hot, but I didn't want to take off my jacket. I sat still, trying not to move because any slight movement would bring a tongue or a finger closer to a pleasure point. It was quiet in the theater, and not as dark as I would have liked. People were whispering to each other, eating their popcorn and drinking their sodas while I sat there, tortured.\n\nThe lights dimmed and the previews started as I was taken closer and closer to the edge. I was breathing quickly now, taking short little gasps. I closed my eyes, concentrating on my breathing. When was it going to shut off? It would shut off soon, I knew it would. This was always the point when it shut off. Wait, it was taking me farther now. Even if it did stop, I wasn't sure I would. I started to panic. It felt so delicious. Oh, so delicious. And then everything stopped, just as the preview came to an end. It was quiet in the theater. Too quiet. I could only hear my heavy breathing. I was certain everyone could hear it. It took everything I had not to make a sound. I slowly eased my grip on the armrest as I felt my orgasm back off, relieved and yet tormented at the same time.\n\nSomeone sat down next to me and I looked to see if they were looking at me with a weird or concerned look, but he just smiled and sat down. Shit. I recognized him from my dorm, and he was really cute. I cringed. I'd seen him at a party a few weeks ago, instantly feeling attracted to him, but I was too shy to talk to him. And now he was sitting right next to me. I thought about getting up and leaving, but then it started again. Hard. I felt like I was being punished somehow. \"How dare you feel attracted to him?\" it seemed to be saying as it pounded into my wet pussy, over and over again. \"He can't fuck you as good as this.\" I slunk lower into my seat, hot and ashamed as it started biting my nipples and my clit as it tortured my g-spot. \"I'm sorry,\" I thought to myself. \"I'm sorry. I'm sorry.\" But it was still punishing me as it continued fucking me, relentlessly dragging me higher and higher. I closed my eyes as I felt the inevitable come closer. I could see the cliff rising above me, but I was no longer holding back now. I was running towards it. I wanted to fly off the edge and soar above myself. But just as I reached it, it held me back as I tried desperately to free myself and jump.\n\nNo! I was so close! Both times, it had taken me just a millimeter to the point of no return. It was testing me. Seeing how close I could get without release. The movie started with soft piano music playing. At least I thought it was piano music. Images flashed before me on the screen. Blues, and greens, and then yellows back to blues and grays. I couldn't make anything out. It was just an abstract movement to me as I just sat there and stared.\n\nThen it started again. It was softer this time, slower. Almost remorseful. It apologetically swirled magical tongues up and down my wet slit, circling my clitoris lovingly. Mouths sucked my nipples, softly. Tenderly. By the time the gentle fucking started, the images on the screen had started to take shape for me. There were trees, and sky. A little house by the water. Two people were sitting in a boat, talking, laughing, kissing. Then slowly, so slowly that I didn't realize it had started, it started rubbing my g-spot. I started to get confused about the characters in the movie, the images started to blur again, and then I realized that I was being led closer to the edge. This time it was enticing me to follow, and I did, willingly.\n\nI was no longer watching the movie now. I concentrated on the caresses on my nipples, my clitoris, my g-spot. I freely followed wherever it wanted me to go, letting it take control. I was climbing higher and higher, but so slowly, that I didn't even realize how far I'd gone until it was almost too late. I watched the colors on the screen go by, I listened to the sounds of voices, although I didn't understand what they were saying. All I could hear was it coaxing me higher, leading me farther, encouraging me to let go. But I couldn't. I couldn't let go. I couldn't moan or cry out or scream. I couldn't even move. I was a prisoner now. It had tricked me into presenting my wrists and then it had tied me up. I hadn't even struggled as it seduced me to lie on the bed. And now as it was torturing me, forcing me to reveal all my secrets, I wasn't sure I could hold out. I was taking short little gasps, concentrating on the feeling of my breath against my lips as I breathed in and out, trying to ignore the sweet torture. \n\nBut it was unyielding. It wouldn't stop. It knew me. It knew how long I could hold out. It knew how much I needed before I would surrender. The mouths were eagerly lapping up everything it could, my hard nipples, first the left and the right, then the left and right, faster and faster until it was licking both at the same time. The phallus was fucking me hard, knowing how fast and deep I liked it, needed it. Oh, how I needed it. The tongues were swirling on my clitoris, moving in expert circles around my secret pearl, coaxing it out to play. I didn't think I'd be able to hold out much longer before giving it what it asked of me. I didn't want to surrender. Not here, not like this, but I knew I was weak. And it knew I was weak. Finally, I gave up. I let it all go. My orgasm hit and I felt the ground shake. Over and over it rocked me, drowning me, but I didn't care. I had finally arrived, I had finished the race.\n\nBut there was more. It knew exactly what to do as it took me to a second peak, and a third, fourth, fifth, rising higher and higher with each one. As I slowly came down, I came to my senses. It was loud. There was an explosion on the screen, and sirens and people yelling and screaming. Running. Now I knew what Kinsey had been trying to tell me. I looked around and no one was looking at me, pointing, laughing. I glanced to my left and the cute guy was looking at me, concern on his face.\n\n\"Are you allright?\"\n\nI smiled, tentatively. \"I'm fine. I don't like movies like this,\" I whispered.\n\nHe looked away, satisfied with my answer.\n\nI wanted to get up and leave, but he was blocking my way to the aisle. And I was too sensitive to move, and I was scared it would turn back on right when I was in front of him. I no longer had any confidence in my self control. What if I sat in his lap, grinding myself to an orgasm right there? No, it would be better if I stayed in my seat. I glanced at my watch. Wow, almost two hours had gone by. The movie was almost over. And then it ended. By the time the credits rolled, my breathing had returned to normal, but I was covered in a slight sheen of sweat. The cute boy got up and walked out and I noticed he was by himself. As the lights came back on, I knew I had to finally leave. I hoped my legs would be able to support me as I walked back to my dorm.\n\nAt first I thought it was just a fluke. It would certainly recalibrate itself and not allow me to orgasm anymore. But everyday I wore the device, it was the same. It would tease me for awhile and then take me to places I didn't think existed in my small world. I wore it to the cafeteria, I wore it to class, I wore it to work. And each time, I was able to control myself more. I was proud of the fact that I could now climax without anyone seeming to take notice. \n\nKinsey had named hers Veronica. And she loved to wear it when I was in the room with her. The first time I saw her take it out of the box, it was late. I thought she had already worn hers that day, but I guess I was wrong. I got up to leave.\n\n\"No, please stay,\" she begged me.\n\n\"Why don't you take it to the lounge? Or the cafeteria - it's still open for another hour.\"\n\n\"No, please. This is the only time I have today. Please.\"\n\n\"Fine,\" I said and took out my headphones and a book. But I couldn't completely ignore her. She lay prone on her bed, her hips gyrating and grinding. I was ashamed of the wetness that seeped onto my panties as I watched her out of the corner of my eye. Pretty soon, I couldn't concentrate on my book anymore. Her face was so obvious, her hands were pressed down on her breasts, and I knew how that intensified the sucking on her nipples. Every orgasm rocked her hard and I envied her freedom, her lack of inhibitions. After the second orgasm, I could hear her screaming and cursing through my headphones and I cringed, knowing that everyone in the dorms could hear her too. I hoped no one knew I was in the room with her, otherwise they would be thinking we were doing things together.\n\nShe wore it three more times with me in the room that week. Each time, it didn't get easier for me. Each time, I wanted to bring it out and fly with her as we each climaxed side by side. But I couldn't. It was normal for me to come in front of strangers or acquaintances now, but I couldn't in front of Kinsey. That would leave me too exposed.\n\nDay 6 had been a busy day and I had left in the morning, not returning to my room until after 10:00 pm. I had to hurry and put on the device to log my one hour. I put on a loose t-shirt and baggy sweats over it. Just as Kinsey walked in, I said bye and left before she could ask any questions. I took a book with me and walked down to the lounge, but it was empty. As I turned to leave, I saw him. The cute boy from the movies was sitting in a chair in the corner near the fireplace. He looked up and smiled and waved me over. I had no choice but to walk up to him as the fucking started.\n\n\"So, you survived the movie, huh?\"\n\nI smiled as my nipples were being licked and sucked, expertly bringing me there. He introduced himself as I sat down in a chair next to him. His name was Logan and he was from Oregon. He was undeclared but thinking about biology or chemistry. And then I couldn't hear him anymore. I could only feel the hum on my clitoris as it got louder and louder as I was being fucked harder and harder, taking me to nirvana, and then pulling me back. Taking me closer and then pulling me back. I saw his lips move and smile that gorgeous smile. I think I nodded and spoke at the appropriate times. At least I think I did. He seemed happy with my answers. And then he closed his book and got up. I think he said he hoped to see me around. I smiled back. At least I think I smiled.\n\nI sat there, unable to move. Unable to think about anything except how much I loved being fucked by this thing. No one would be able to fuck me as hard or as good. Not even what's-his-name. What was his name again? Logan? Oh, yes. Logan. That feels so good. Yes, right there, Logan. Yes. Yes! YES!!! YYEEESSSSSSS!!!!!! As I came, all I could think about was Logan. Not the Logan I had just met, but the Logan that was fucking me just the way I liked it. Just the way I needed it. I was alone so I moved my hips back and forth in the chair, enjoying every last syrupy drop.\n\nCrap, I was alone. I needed to find someone within 20 feet. I couldn't walk around hoping to run into someone, following them until I climaxed. I had no choice but to go back to my room. I looked at my clock. I only had 30 minutes left. I could endure 30 minutes of utter humiliation. Maybe Kinsey wouldn't suspect anything. I could be quiet.",
        "I walked in the room to see Kinsey wearing Veronica and on all fours, humping the air as she arched her back, crying in ecstasy. At first, I panicked. Was someone here in the room? I looked around, but saw that she was alone. \n\nShe looked over and smiled at me. \"Hey,\" she said as if this was totally normal for her. And I hate to say it, but it was totally normal for her.\n\n\"You're supposed to wear it with someone in the room,\" I said, just as Logan started caressing my nipples with his tongue. Both tongues.\n\n\"I know,\" she said. \"I've already logged my one hour today.\"\n\n\"Oh,\" I said just as Logan started slowly fucking me. Slow and hard he thrust into me, almost making me lose my balance as I walked to my bed and lay down, propped up on my pillows.\n\nI watched as Veronica made Kinsey climax two more times while Logan was teasing me, taunting me. Just as I reached out to touch him, he would run away and hide. Laughing. Over and over again until I was frustrated, squirming on my bed and squeezing my legs together, hoping it would be enough to push me over. Kinsey took off her device and put on her bathrobe. She got her shower caddy and was about to leave. But she couldn't leave. She had to stay in the room with me!\n\n\"No!\" I cried.\n\nShe turned to look at me, puzzled. \"What?\"\n\n\"You can't leave,\" I panted. \n\nAnd then I saw her smile as she understood. \"You're wearing it aren't you?\" I nodded just as I came. I couldn't hold it in, I moaned as I involuntarily arched my back. My hips bucked in the air, trying to meet a phantom lover halfway. I cried out in humiliation and in pleasure. Oh, that sweet sweet pleasure.\n\nKinsey stood there, watching me. Her robe had fallen open and she was circling her nipple. \"That was so hot!\" she said. \"How much longer do you have to wear it?\"\n\nI gasped for air as I looked at the clock. \"Ten more minutes.\"\n\nShe seemed disappointed. \"Well, okay then,\" she set her caddy down and sat on her bed, cross-legged, watching me, her robe completely open. Not only was she fully exposed, her wet slit, her hardened red clitoris and the small patch of hair, but I could smell her. I could smell sex everywhere. \"Let's get the show started,\" she smiled.\n\nI turned my head away from her as Logan started fucking again. He was urgent, almost like he wanted to hurt me. But that's what I wanted. And he knew it.\n\n\"What is it doing?\" she asked.\n\nI ignored her as Logan started pinching and sucking my nipples. Alternating. Then simultaneously, he was sucking and licking my clitoris, softly humming and vibrating while stroking my g-spot. Over and over again, faster, harder. This was it, I would have to orgasm in front of Kinsey again as she watched, eagerly anticipating it. I reluctantly followed, higher and farther than I really wanted to go. And right before I broke through, he stopped. Leaving me gasping for air, panting and moaning loudly into my clenched fist. \"No!\" I heard myself scream.\n\nAnd then he started again, dragging me along with him. Right as I reached the top, he stopped again. I gasped for air as I screamed in frustration.\n\nHe took me a few steps closer before violently pulling me back. And then without warning, he pressed hard on my clitoris and pushed me over. I screamed out, not caring who could hear me. I rode it as far as Logan wanted to take me, I didn't care where he was going. As I rode the crest, I didn't think it would be possible for me to go any higher, but I did. With each orgasm, I could hear myself crying out, I could feel myself violently thrashing on my bed, possessed. Logan pushed me to new heights and then slowly, gently, he carried me back, lovingly showering me with kisses on my nipples and my wet slit, knowing to stay away from my sensitive clitoris. I started crying as I tried to catch my breath.\n\n\"Wow,\" I heard Kinsey whisper. I didn't bother answering her. I crawled under my blanket and took off the device under the covers. I rolled over and cried until I fell asleep. I hate him, I thought. But I knew that wasn't the truth. I loved him. And I hated myself for that.\n\nWeekly Exam: End of Week 2 I avoided Kinsey all the next day. But I knew I would probably see her at the weekly appointment at the lab. I brought Logan with me and put him on in a bathroom close to the lab and sat under a tree for 30 minutes as he teased me, licking and sucking and fucking me, bringing me close, but not close enough. When it was time, I gathered my stuff and slowly walked to the lab with dread. I didn't mind seeing the doctors or the nurses or the other girls. I just didn't want to see Kinsey.\n\nI walked into the waiting room and was handed a clipboard. I sat among the other girls and tried not to make eye contact as I answered the questions. There were about 20 of us sitting there, uncomfortably trying to make this all appear normal, as if we were at the dentist's office or something. Did you achieve orgasm everyday? Yes. On what day did you achieve the most powerful orgasm? I hesitated. I finally wrote Day 6. Did you know the person/people in the room? Yes. If yes, what is your relationship with them? Roommate. Did they know you had achieved an orgasm? Yes.\n\nI answered the other questions and realized it was really quiet in the room. No one was moaning or sighing in pleasure. In fact, Logan wasn't fucking me or licking me anymore. The girls who had finished their questionnaires were looking around and I know they were all thinking the same thing. A few minutes later, a door opened.\n\n\"If you can all follow me, please.\"\n\nWe all slowly got up. This was different. I was nervous. What was going on?\n\nWe were all led into a large room with chairs arranged in a circle. The same doctors and nurses were sitting down in chairs behind the circle. We were told to stand along the far wall and disrobe, except for the device.\n\n\"The nurses are going to go around to make sure that the device is fitting properly before we begin,\" Dr. Matthias announced.\n\nI watched one of the attractive nurses approach a girl standing next to me. She was blond with freckles. She seemed like the kind of girl who would have a nice smile, but she wasn't smiling. She looked like she would be the shy modest type, like me. She had a look of fear in her eyes. The nurse reached into her top and started caressing her nipples, much like the first day. Then she unclasped the bra in the front, and squirted some clear gel on her fingers before manipulating her nipples. \"Your nipples aren't fully erect,\" she explained. The girl was blushing deeply as the nurse pinched and rubbed her nipples. I heard a moan from my left and I saw that another nurse was using her mouth on another girl's nipples. I looked back and saw that the nurse on my right was clasping the blond girl's bra, satisfied with the hardness of her nipples. She slipped her hand inside the girls panties in the front. The girl gasped. \"You have sufficient lubrication, but the clitoral stimulator isn't fitting properly either. She moved her fingers around on the inside as the girl bit her lip, a small moan escaping. With a few more adjustments, the nurse seemed satisfied and turned her attentions to me.\n\nShe just immediately unclasped my bra and started rubbing and pinching my nipples. Please get hard, I begged them. Please, please please. I didn't want her to use her mouth. She lowered her hands to look at them. I could tell she wasn't happy with their slow response. She bent her head down and took my right nipple into her mouth. I cried out, in shock and pleasure. But she didn't even try the gel, I thought. I looked up, not wanting to watch her tongue circle my nipple while her hand pulled and pinched my other nipple. I saw Kinsey sitting in one of the chairs in the circle, watching me. I watched other girls sit down, their devices apparently properly adjusted. Soon, there were only a few of us left standing. She moved her mouth to my other nipple, biting and sucking it with her expert mouth. I just stood there, horrified that I was standing in front of not just the doctors, but all the other girls, my breasts completely exposed. Well, except the one that was in the nurse's mouth. Pretty soon, I was the only one left standing. I closed my eyes, trying to shut it all out, knowing they were all watching me, waiting for me to get ready.\n\nSoft moans escaped my lips and I hoped that the nurse was the only one who could hear them. Finally she stopped. She was satisfied and clasped my bra, fitting each of my wet nipples into the suction cups. As everyone watched, she reached her hand inside the front of my panties and she rubbed my clitoris with the tip of her finger. I bit my lip, just as the other girl had. Her finger slipped lower, gathering some of my fluid and rubbed it onto my clitoris a little bit more. Then she pressed the stimulator onto my clit and pushed it into place until I felt a pop as it slid into place. I slowly made my way to the circle and sat down in the only empty seat, next to Kinsey. She smiled at me as I sat down, but I refused to look at her.\n\n\"Ok, shall we begin?\" Dr. Matthias asked. Without waiting for us to answer, he just started right in. \"Each device is perfectly in tune to your rhythms now. It knows when orgasm is inevitable, and is programmed to stop just a millisecond before climax. It can also read when you want more pressure, or lighter pressure, or faster movements or slower movements.\"\n\nYes! I thought. Logan did know all that!\n\n\"It has been programmed to bring you all to an arousal level of an 8 today and hold you there. Some of your devices are turned off right now, others are still going because it can sense when you've slipped to a 7 or if it has moved you up to a 9.\"\n\nI looked around at the other girls and I could immediately tell whose devices were on, and whose weren't. I wondered if I was that obvious when Logan fucked me. \n\n\"This week, we wanted to test the theory of exhibitionism and voyeurism. Judging by some of your answers on your questionnaire, some of you enjoy it, others do not. It is all completely normal.\"\n\nLogan started lapping away at my pussy and kissing and licking both nipples. I must have slipped to a 7, I thought as I tried to keep a poker face.\n\n\"Right now, we are going to play some games to test your mental acuity while in a high state of arousal. We're going to go clockwise around the room and start with colors. Starting with you.\" He pointed to the blond girl who had been standing next to me, the one with the freckles.\n\n\"Um... pink?\" she said.\n\n\"Blue,\" said the next one. And on down the line. After colors, we moved to countries, musical instruments, food, animals.\n\nLogan continued fucking me deliciously, tenderly. It really didn't seem like I was at an 8 anymore. This was feeling dangerously close to a 9, a very high nine. It was close to my turn to say something, but I couldn't remember the category. None of it was making any sense. I tried to ignore what was happening to my body and concentrated on the words going around.\n\n\"Butter\"\n\n\"Table\"\n\n\"Lights\"\n\nI was so confused. And I was so close.\n\n\"Soap\"\n\nWhat was the category? I was gasping, willing myself not to moan. I felt Kinsey's naked leg rub against me and I pulled away, squeezing my legs together which only intensified the fucking and the rubbing and vibrating.\n\n\"334?\" All of their eyes were on me. It was my turn and I had no idea what I was supposed to say.\n\nI opened my mouth, but only a low moan came out.\n\nI was going to come. I knew it, I couldn't hold back any longer. They were all watching me. From across the room, I heard someone cry out, \"No!\" and their eyes turned to watch a girl throw her head back, panting and moaning as she climaxed. Then to my right, another girl climaxed, her moans sounding like a baby kitten mewing.\n\n\"334? It's your turn,\" Dr. Matthias prompted. Everyone turned back to look at me.\n\nI shook my head. Another moan escaped as I tried to ask what the category was. They were watching me and Logan was being cruel, oh so cruel. He was teasing me, slowing right before I peaked, then increasing with angry persistence, then slowing again as they all watched me. He was taking me higher than I thought possible. I was moaning loudly with each quick gasp of air, and I didn't care. He paused for a brief moment and I felt my clitoris quiver before he sent me crashing over the waves. I was tossed around, rolling around in complete bliss. I cried out with each spasm, thrusting my hips obscenely, but I didn't care. It felt so good. Too good.\n\nIt was quiet except for the sounds of some of the other girls as they came. To my left, Kinsey grabbed my leg and squeezed hard as her breath came out in a hiss. \"Yes, yes, yes, yes...\" she cried over and over again. I was embarrassed by her intimate touch.\n\nDr. Matthias ignored her orgasm as he looked directly into my eyes. \"When you're ready, name something you find in a kitchen.\"\n\nI knew the category, but I still couldn't think of anything to say. Kitchen. What do you find in a kitchen? Logan was making it hard for me to concentrate. I couldn't think. What was a kitchen? Kitchen. The word sounded foreign to me. I could only repeat the word in my head as Logan continued molesting me. It wasn't a gentle and slow fuck like the first one. This time it was urgent, fucking me hard, raking against my g-spot each time. My nipples were being pinched, and ow! he was actually biting them, then sucking them. Alternating between pleasure and pain. The vibrations started on my clitoris, fast. He wasn't easing into it this time. I cried out again as another wave hit me. As Logan continued attacking my clitoris and rubbing my g-spot while kissing and sucking my nipples, I heard Kinsey say, \"whisk\" and they moved on down the line as orgasm after orgasm hit me.\n\nI think I missed every category after that. Some of the other girls did too. We all sat in the circle, watching each other, listening to each other as we let our desires out in the open. \n\nFinally, Dr. Matthias said that they would be observing all of us for the final ten minutes. We could get up and walk around if we wanted, we didn't have to stay in our chairs. \"But after you achieve orgasm, please raise your hand in case we've missed the tally,\" he said. We all just sat there. I was pretty close to another one. It wouldn't be long. Kinsey got up and moved her chair closer to the center and straddled it, facing back towards me. She was watching me, her eyes intently trying to hold my gaze as her hips moved back and forth. She pressed her chest into the back of the chair and she cried out. I closed my eyes. I didn't want to see her. But I could still see her in my mind. I opened them again and she was still staring at me, her hips moving faster and faster. She finally let out a loud moan as her hips furiously humped her chair. I sat there helplessly as it built up inside me. The pressure was going to explode. I was going to explode. And then I did. Kinsey's eyes were still locked on mine and she raised her hand. She was smiling at me. I raised my hand as well but I looked away. \n\nAcross the room, I saw other girls straddling their chairs. Some were standing and walking around, stopping to have their orgasms, holding onto the wall or a chair for support as they humped the air, raising their hand afterwards. Logan fucked me harder, sending me over again. I raised my hand and noticed Kinsey's hand go up. She was still watching me, intently. The doctors and nurses were watching us, taking notes on their clipboards. The nurse who had sucked my nipples earlier caught my eye and she smiled at me, her own nipples standing erect under her shirt. And it still didn't stop. The next orgasm blended into the previous one, or maybe it was just a really long orgasm. Was it ever going to stop? It had to stop. I couldn't take it anymore. I closed my eyes as I came again, crying out loudly, my moans drowned out by the other girls who were all in various stages of arousal and orgasm and brief recovery before starting the cycle all over again. I raised my hand as tears flowed down my face. It was too much. I wanted to die. I put my head in my hands and wept as Logan softly caressed me. It's over, he seemed to be saying. It's all over. You're done. It's okay.\n\nKinsey told me other girls were crying too, so I shouldn't feel bad. I don't remember much about what happened afterwards. We were all taken one by one to another room where they took off our devices and plugged it into a computer to download the data. I left that day, never wanting to go back. But I knew I would. I knew if I didn't, I'd never get fucked by Logan again. And I needed him. I was addicted to him. And I knew that I wanted to experience it with Kinsey again, when we were alone with Logan and Veronica. "
    ],
    "authorname": "kianareeves",
    "tags": [
        "humiliation",
        "lesbian",
        "forced orgasm",
        "machine",
        "masturbation",
        "exhibitionism",
        "voyeurism",
        "public orgasm"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/female-sexual-response-subject-334"
}