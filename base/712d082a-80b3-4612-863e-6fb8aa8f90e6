{
    "title": "Twelve Gates Ch. 14 - Conclusion",
    "pages": [
        "Author's note: thank you for joining me on this journey. This was my first attempt at writing a real story, and I owe its completion to the kind words, constructive suggestions and unflagging support of the thousands of people who have taken the time to read, vote and comment (or maybe it was one really obsessed fan who read my story thousands of times. Either way...). I would also like to express my appreciation to the staff at Literotica who have done such a great job in providing a place for new writers to get their feet wet. This is the conclusion of the Twelve Gates saga. I will begin a new story soon. Again, I thank you all humbly and sincerely.\n\n*****\n\nNaked and blindfolded, her wrists bound together and lashed to the headboard of their bed, Grey waited. Her knees were slightly raised and spread wide, presenting her smooth sexy lewdly in the empty room. Robert had tied her, spread her open and then left the bedroom to wash the dishes, admonishing her to hold the position, leaving her wet and eager and wanting him. \n\nAnd waiting for the Twelfth Gate.\n\nHe'd promised to give her the Gate that evening at her insistence. After more than five months of anxiety and excitement, the wait was almost over. She wanted to pass the Gate to satisfy whatever need had compelled Robert to devise them. She was dying to learn his true motives, and it bothered her that she'd been forced to discover them in bits and pieces through the Gates. \n\nNo...not forced. She'd chosen to pass each one. And if she'd been bothered by the concept of the Gates, then part of that was her own fault for not communicating properly. Trina had made her see that, and Robert had driven the point home with a painful spanking just before dinner.\n\nAnd she couldn't deny that the Gates had transformed her in ways she still found difficult to comprehend. The lonely, timid, self-conscious office worker of six months ago had blossomed into a smiling, sexy, self-employed woman who wore flirty dresses with heels and sported nipple piercings and a cute tattoo. Had Robert wrought those changes in her? Or had he merely tapped into something that had been there all along? \n\nThe clattering of the dishes stopped and she knew Robert would be returning soon. She spread her knees a little wider, hoping to entice him into spending some quality time with her pussy. After seven days of neglect it was eager for the attention that only her Master could provide. \n\nShe heard him enter the room. Felt his presence. Whenever he was close to her, his proximity drew all of her attention. He filled her awareness. He was at the night table next to the bed, rooting around in the drawer where the condoms were kept. The thought caused a ripple of need to course through her. She longed for his cock...in her mouth or her ass. Or perhaps tonight she would feel him in her hungry pussy...\n\nShe felt the bed shift as he lay next to her on her right. Felt his cotton t-shirt against her ribcage, his track pants against her hip. Being naked while her Master was fully clothed had become commonplace in the apartment, and she'd grown to love it. Loved the hunger in his eyes when he looked at her, loved being open and available for any caress from his warm hands. Loved the feeling of being sexy and desired.\n\nSuddenly his mouth was on hers and she raised her head, eagerly seeking more contact. His tongue slid between her parted lips and touched hers, gently probing and teasing, never hurried. She yearned to wrap her arms around his neck and pull him closer but with her hands bound she could only lick and suck on the invading tongue. Too soon, he pulled back and left her panting and flushed with need.\n\nShe felt his hot hand on her belly, then he slowly slid it lower until it rested on her smooth mound. She'd shaved it meticulously that afternoon before picking him up at the airport; she wanted it silk-smooth for his pleasure and hers. The heat of his hand on her most sensitive skin caused her pussy to thicken and ache with need. She spread wider and lifted her hips slightly, hoping to encourage him to move just a little lower...\n\nHis warm hand was replaced by gently stroking fingernails. With agonizing slowness they trailed down her mound and lightly over her labia, not penetrating, just grazing the surface. Lower still to her perineum, then making a slow, feather-light return trip to the top of her mound.\n\n\"Oh Master...please...\" she moaned, loving the intimate touch but needing more contact, more pressure. Instead his fingers continued their leisurely tease.\n\n\"Feels good, kitten?\"\n\n\"So good. I missed you so much.\"\n\n\"Next time I want you to come along. My parents want to meet this amazing new woman in my life.\"\n\n\"I'd like that.\" she said, and it was true. Robert had met her family, it seemed only fitting that she would meet his as well. \n\nHis teasing caress continued in silence for several moments more. She felt her temperature rising as her body came alive under his fingers. She tugged gently at her bindings and found them secure. The enforced feeling of helplessness only added to her arousal. When had she become this way?\n\n\"Can I tell you a little story, kitten?\" he asked in a soft, low voice.\n\n\"Yes Master. I'm not going anywhere.\"\n\nHe chuckled, then was quiet for a few moments, as though composing his thoughts.\n\n\"Once upon a time, there was a boy who loved being in control,\" he said a storyteller voice, \"More than liked it - needed it. This boy dropped out of high school because he couldn't stand all the rules. He became an entrepreneur because he hated having a boss. He moved out of his parents' house when he was a teenager because he wanted to live on his own, by his own rules.\"\n\nGrey was awash in the twin sensations of his voice and his fingertips. Rather than competing for her attention, they mingled and augmented one another, wrapping her in a sexy and sensual mood. She was silent as she waited for him to continue.\n\n\"As a young man, he discovered that a need for control works well in the business world...a lot of the time, anyway. But when it comes to romance, not so much.\"\n\nOne finger parted her slippery folds and slid up to her clit, giving it a quick tickle. She gasped and her hips jumped off the mattress in search of stronger contact. The tormenting finger then slid lower to her rear hole. Then back up again, slowly swiping up and down between her sopping lips. She could feel the tightening inside her...the slow build towards an orgasm. She needed more. \n\n\"His love life was one train wreck after another. Things would always start well when he was on his best behaviour, but as he got more comfortable with a woman, his need for control would drive her crazy and she'd leave. The young man was over thirty before he had a relationship last longer than 6 months.\"\n\nShe felt two fingers slide through her slick cunt and lightly stroke up and down, one finger on either side of her swollen clit. Not touching it but coming desperately close. She felt the telltale trickle of her juices between her rear cheeks.\n\n\"Keep your hips still, kitten.\" he admonished gently, and she realized they had been lifting and twitching and rolling of their own accord, following his teasing fingers.\n\n\"Yes Master.\" she breathed, struggling to keep still amid the onslaught of wonderful sensations.\n\n\"Finally, by fighting every natural impulse he had, the young man was able to keep a relationship alive for eighteen months. He got engaged at thirty-five. But his fiancee left him two months before the wedding. Too controlling, she said. She was probably right.\" \n\nGrey could hear a faint trace of pain in the admission. Slowly the pieces were starting to fall into place.\n\n\"So he decided to change his approach. Instead of trying to change his nature, he set out to find a woman who loved his control. He didn't want someone who would tolerate it or endure it, or humour him. He wanted to find a woman who truly would love it. Crave it.\"\n\n\"Uh-huh.\" she breathed, partly to acknowledge his words and partly because his two fingers were now grazing either side of her engorged clitoris.\n\n\"But he was in his mid-thirties, and he wanted a family. He didn't have time for a series of lengthy get-to-know-you relationships. He needed a way to zero in on exactly the kind of woman he was looking for. A way to improve the odds.\"\n\n\"So you...he...posted the ad online.\" she said between hard breaths.\n\n\"Please don't interrupt, kitten.\" he scolded gently. His fingers left her slit and she felt them slide into her mouth, wet and fresh with her scent and taste. She closed her lips over them and sucked and tongued them, delighting in the lewd act; hoping he would return his attention to her needy clit.\n\n\"The ad got a ton of responses at first, most of them just looking for fun and some clearly looking for money. So he...I...had to find a means to quickly disqualify the women who weren't absolutely serious about a relationship with the real me. Thus, the Twelve Gates.\"\n\nHe removed his fingers from her mouth and continued his slow two-finger stroking of her clit. She bit her lip as the waves of pleasure washed through her core.\n\n\"I deliberately made the Gates unreasonable, as you discovered early on, kitten. Only two women passed the handcuffs and blindfold test at the Third Gate. And only one passed the Fourth. Just you, kitten.\"\n\n\"Not surprising.\" she said. Having her nipples pierced for the Fourth Gate had been scary and painful. No wonder the other woman balked! Grey still didn't fully understand what had compelled her to go through with the piercing. \n\n\"And you were everything I wanted...I could see that almost right off the bat. Shy and kind and loving and honest and trusting. A lovely young woman, inside and out. After Bill's photo shoot I knew you were the one I wanted so I figured I'd back off the Gates...give you the option to refuse them without penalty. But you kept asking for them...and passing them...so I figured I'd let it continue. What harm was there?\"\n\nShe felt two thick fingers slip between her labia and slowly push into her hot pussy. The change in sensation caused her to gasp as he stretched her and hit all the right spots inside her tight channel. He drew his fingers out and pushed back in - her sex made wet sucking sounds as his fingers entered and left. The obscene noise embarrassed her and spiked her arousal. Her scent was obvious in the still air of the room. Every stroke drew a quiet grunt as she started to fight against her urgent need to cum.\n\n\"But just when it was going so well...the unpleasantness of last week happened. I'd finally solved the 'too controlling' issue only to be torpedoed by poor communication. I couldn't believe it. All week I was upset...kicking myself for not having seen it.\"\n\n\"Sorry...Master...\" \n\n\"Me too. It was as much my fault as yours. You weren't talking, and I wasn't listening. Bad combination.\"\n\nShe felt her control beginning to slip as his fingers carried her to the very edge of orgasm. Just as she made up her mind to beg for it, he withdrew his fingers and again she welcomed them into her mouth. She knew he was intentionally prolonging her sweet torment, enjoying her need for him and his control over her body's most intimate functions. Bound and helpless, she could only accept whatever he decided for her. She sucked his fingers hungrily as her soaking slit throbbed and cried out for attention.\n\n\"Which brings us to the Twelfth Gate.\" he removed his fingers from her mouth and started stroking his nails lightly over her inner thighs and pussy lips.\n\n\"Please Master!\" she breathed, not knowing herself whether she was begging for the Gate or for sexual release. \n\n\"I'm hoping you'll agree to marry me, Grey. That's the Twelfth Gate.\"\n\nSudden emotions flooded her, so intense that they pushed aside even her desperate arousal. Shock, joy, confusion, love...and...a subtle feeling of resistance. From deep inside, an unexpected, unwelcome opposition to the idea. Something within her drew back from the notion of marrying him. \n\nShe realized she had to give an answer to such an important question but needed time to sort through her jumbled thoughts and feelings. She opted to stall.\n\n\"Hold on...THIS is how you decided to propose? With me naked and tied up and...messy...in bed?\" she aimed at a tone of mock outrage.\n\nHe laughed. \"No, I decided to propose over champagne and dinner in a restaurant with a lovely diamond ring and maybe a violin playing. But then a certain someone decided that everything had to happen TONIGHT and not in a few weeks like I had planned...so I had to improvise.\"\n\n\"Well, I had no idea that the Twelfth Gate would be so...\" she trailed off, having run out of words. She urgently took stock of her feelings, trying to pinpoint the source of her unease. She loved him. Trusted him. They shared a strong mutual attraction. He was gentle and warm and kind to her. He treated her with respect. Her family accepted him. So where was the problem?\n\nA few moments passed in silence. His fingertips hadn't ceased their sensual stroking of her lips and thighs, and with the initial shock of the Twelfth Gate over with, the sensations began to impose themselves on her body again.\n\n\"Kitten?\" \n\n\"Yes Master?\" she replied, still unsure of what to say or think or feel.\n\n\"I want to know what's inside you right now. The Complete Truth.\"\n\nShe took a deep breath and reached down deep inside herself. Somehow being blindfolded made it easier. She decided to start with the simple part first.\n\n\"I'm hot and dripping wet and eager for your fingers and your lips...and your cock. It's been so long and it's so hard to wait. I'm also...glad that you shared your reasons for the Gates. It answers a lot of the questions I had. And I'm relieved to finally have the Twelfth Gate revealed...\"\n\n\"I'm glad to have set your mind at ease,\" he said patiently, \"Now tell me the rest.\"\n\nShe paused, letting her thoughts take shape.\n\n\"I'm not sure exactly what 'the rest' is right now. I'm...happy? Honoured? Afraid? Overwhelmed? I feel pressured to give you an answer to your proposal but I honestly don't know what to say.\"\n\nThere was silence. His fingers continued their gentle caress. As the moments stretched on, she felt compelled to continue.\n\n\"I mean, I love you, Robert. I can't imagine my life without you in it. I love your control...the way I am around you...all the ways you've changed me. And there have been so many changes...\"\n\nAnd then it struck her - the reason for that deep-down resistance to his marriage proposal. She knew the Complete Truth at last. She forced it out, fearful of his reaction but determined to get it right. Aware that it could all end very badly.\n\n\"So many changes, Master. I quit my job, moved in with you. Started renovating the apartments. There were piercings and tattoos and collars and leashes. New ways of eating and dressing. Being bound...and...photographed. Being naked all the time and always wet and always wanting you. Every couple of weeks there was a new...and drastic...change in my life.\"\n\nThe words were coming easily now, rushing out of her unfiltered.\n\n\"After all these changes, I just want to stop for a while...to catch my breath. I want to stop the changes and just let things be the way they are right now. I'm sick and tired of change, to be honest.\"\n\nRobert stayed silent. His stroking fingertips had become a hot hand rubbing her belly in slow circles.\n\n\"If we get engaged then there's a wedding to plan and invitations and bridal showers and fittings and shopping and picking out china patterns and a million arrangements. And you want a family which means you're going to want...babies! I can't even imagine all the changes that babies bring...and...I haven't even decided if I WANT babies.\" \n\nShe felt herself becoming emotional, tears welling behind the blindfold. With her hands bound, she wouldn't even be able to wipe them away.\n\n\"So...I guess my answer is...I can't pass the Twelfth Gate, Master. Not tonight, and not soon. I'm so sorry to have let you down.\" \n\nThe rejection seemed to hang in the air after she'd spoken it. She felt desolate; after all the weeks and all the Gates, she'd failed to give the man she loved the one thing he truly wanted. On the brink of tears, she was helpless to do more than wait for his reaction. She'd told the Complete Truth at last, and she felt miserable.\n\nThe silence stretched over several minutes. His hand continued to stroke her belly and she felt grateful for the contact. He hadn't pulled back...at least not physically.\n\nAt last he released the buckles on her blindfold and gently removed it. She kept her eyes closed, not wanting to meet his gaze, afraid of what she'd see reflected there.\n\n\"You didn't say 'no'. I think you said 'not now'. Have I got that right, kitten?\" he asked in a gentle voice. \n\nShe didn't detect any bitterness or anger in his tone, so she risked opening her eyes. She saw in his soft brown eyes no trace of resentment at her rejection. A flood of relief washed over her.\n\n\"Not right now,\" she agreed, \"There's no rush, right? I mean, I'm not going anywhere...\"\n\n\"Me neither.\" he was quick to add.\n\n\"Then...how about we leave the Twelfth Gate open and waiting? When I'm ready, I'll tell you. Would you be okay with that?\"\n\nHe smiled, then kissed her again, a soft, slow, loving kiss. His fingers found their way between her legs and began to rekindle the fire inside her. She wanted to embrace him but her bindings again thwarted the desire. She was, as always, subject to his control.\n\n\"I'm okay with it. It will give us time to work on our communication, I guess.\" he said. She could see in his eyes that he meant it and wasn't just putting on a brave front for her. It wasn't what he had wanted...but it was enough for now.\n\nShe smiled up at him, a genuine smile of love and trust and relief. \n\n\"Thank you Master.\"\n\nHis fingers were skillful on her clitoris and within moments she was again fighting to keep her hips still and her orgasm at bay, taking deep breaths in an effort to maintain control.\n\n\"So...since we're not making wedding plans...yet...how shall we spend the time?\" he asked with a mischievous wink.\n\n\"Mmmm. I have an idea, Master.\"\n\n\"Oh?\"\n\n\"Well...there's another Gate that is open and waiting...\"\n\n\"Really?\"\n\n\"Move your fingers down an inch.\"\n\nHe did, sliding two digits into her wet, welcoming pussy.\n\n\"Oh, right there!\" she purred, \"It's been waiting for you for weeks...months. Why won't you enter?\" \n\nIt was a question that had tormented her since the Third Gate. He enjoyed having his cock in her hands and mouth and ass, but had never entered her pussy. \n\n\"Isn't it traditional to wait until marriage before having sex?\" he asked in his teasing voice.\n\n\"You don't strike me as a traditional kind of guy.\" she countered.\n\nHe chuckled, then leaned down for another kiss. His fingers worked in and out of her dripping sex, sending pulse after pulse of ecstasy through her core.\n\n\"Maybe I want to leave something to the imagination. Doesn't abstaining from vaginal sex make me seem deep and mysterious?\" he asked.\n\n\"Yes...the mystery was whether you were impotent or gay, Master.\" she shot back in a teasing voice of her own. \"Early on, I mean. I don't think that now.\"\n\n\"Impotent...or gay?\" he repeated, feigning indignation.\n\n\"Yes. Quite a mystery indeed. It did leave a lot to the imagination, exactly as you intended.\"\n\n\"I'm starting to think the Complete Truth is overrated.\" he said ruefully.\n\nShe laughed and gasped and moaned; joy and relief and desperate lust made an intoxicating cocktail. His fingers were relentless and the love and humour in his eyes bound her heart to him.\n\n\"Then why don't you...do it?\" she asked.\n\n\"It?\"\n\nShe locked her gaze on him. \"I want your hard cock deep in my pussy, Master. Please!\"",
        "\"Okay. Since you asked so nicely.\"\n\n\"That was it? I just needed to ask?\"\n\nHe laughed, then kissed her nose.\n\n\"The truth is, I knew you were inexperienced, kitten, so I wanted to expand your horizons a bit beyond straight sex. And I love your talented mouth and tight ass. And the knowledge that your poor pussy was wet and hungry and eager made me want to save it until last...something we could both look forward to. A milestone, kind of. So I figured it would be special to save it for the Twelfth Gate.\"\n\nShe took a moment to digest his explanation.\n\n\"THAT'S why you made me wait all this time?\" she didn't know whether to kiss him or try to bite him. \"That has to be the most...\" \n\nHer sentence was interrupted by his wet, pussy-favoured fingers sliding into her mouth again.\n\n\"...Romantic thing you've ever heard?\" he finished for her, \"Why thank you, kitten. I knew you'd...YEOW! NO BITING!\" he yanked his fingers from her suddenly dangerous mouth.\n\n\"Master,\" she growled, \"Fuck...my...pussy.\" \n\n\"Yes ma'am.\" he said with a wry smile, then rolled off the bed. He quickly shed his shirt and track pants. \n\nShe loved his body; a labourer's body - solid and powerful and toned. The sight of his half-erect cock triggered a powerful craving to have it inside her.\n\n\"Please...in my mouth first. Let me make it hard.\" she begged, her voice filled with genuine need.\n\nHe looked at her warily. \"No biting?\"\n\n\"I'd never harm that lovely cock,\" she promised, \"unless for some reason I was unhappy with you.\"\n\nHe laughed, then set about releasing her wrists from bondage; he was always careful about leaving the ropes on too long. When she was freed, he positioned himself on all fours above her, his knees on either side of her head, his face above her smooth slit. He slowly lowered his cock down to her waiting mouth.\n\n\"If you bite it off, it's going to take me a long time to grow another one.\" he warned, but she had already engulfed him, taking him deep in one stroke. When he was just half-hard she could take his full length and she eagerly did so, encouraged by the appreciative groan from deep in his chest.\n\nAfter a few skillful strokes his cock had grown to where she could no longer accommodate it all in her mouth so she used her tongue to press and stroke and rub the places that she knew from experience would drive him wild. He held his hips steady, allowing Grey to control the depth of his cock.\n\nThe first touch of his tongue to her over-stimulated clit almost set her off. She sealed her lips around his shaft and moaned loudly as she fought for control. He sensed how close she was and used his mouth sparingly, a quick touch to her clit followed by long, slow licks along her swollen, salty lips. After a minute or two even that threatened to push her over the edge; her control was taxed to the limit.\n\n\"Master...please...now.\" she gasped around his cock.\n\nHe quickly spun around so that his head was above hers, his hips between her widespread knees, his gaze holding her own.\n\n\"Don't look away. I want to see your eyes when I go in.\" he commanded. She could only nod, waiting...wanting.\n\nShe felt his cock against her wet lips. They parted to allow him access and she drew breath sharply as the head penetrated her. She reached up and held his face in her hands as he slowly pushed forward, filling and opening her. She fought the urge to close her eyes and lose herself in the sensations as the two of them were joined. At last he was in as deep as she could take him. Hot and thick and throbbing in her tight sheath. \n\n\"Thank you Master.\" she whispered, her gaze still locked on his.\n\n\"I love you, kitten.\" he replied.\n\nHe slowly withdrew, then pushed forward again with a little more force but still controlled, contained. He continued to stroke in and out gently...too gently.\n\n\"I'm not a virgin, Master. You can go...a little harder.\" she breathed, flashing him a shy smile. \n\nHe returned the smile and increased the pace and the strength of his thrusts. She could feel the friction of him against her clit and all through her depth...every nerve singing as he brought more of his strength to bear.\n\nShe could feel an orgasm brewing deep inside, building up for a whole different kind of release. Abruptly he stopped and rolled off the bed, snatching a condom from the night table. He opened the package and had it on in no time.\n\n\"I'm getting close\" he winked, then grabbed her ankles and dragged her so her hips rested on the edge of the mattress. She spread her legs and pulled them back, opening herself, exposing her dripping sex. \n\nHe wasted no time, impaling her in one rough stroke and fucking her with abandon. She lay on the mattress and looked up at him standing over her, his eyes on hers, the muscles in his arms and chest and abdomen flexing and straining with the vigorous ride he was giving her. Powerful and beautiful. \n\nShe reached the edge quickly and knew she couldn't hold it long; the speed and depth and angle of the penetration were hitting all her good spots. The pent-up lust and need of the past week reached a tipping point. Panting and gasping, she fought to hold on long enough to get the words out.\n\n\"I can't hold it...I need to cum so bad, Master...please?\"\n\n\"Cum, kitten.\" he grunted.\n\nHer climax hit her, forcing a loud moan from her. It was one of the best kind, starting deep inside her and spreading quickly through her core. She felt her pussy gripping him, spasming around his thickening cock as he thrust deeper, pounding her hard and almost painfully. \n\nHis eyes were closed now, his own release close. She loved to see him this way; out of control, yielding to the power of her sex and her body. Surrendering himself to her in a way that was raw and primal. He roared as his orgasm started, gripping her legs too hard and thrusting too roughly into her inviting sex. She barely noticed the discomfort, and wouldn't have wanted it otherwise in any case. This was Robert at his most elemental. Her lover...her Master. \n\n****\n\nLater, after the shower and gentle washing and stroking; after the whispering and nuzzling and cuddling in bed, they lay together in the darkened room. She was on her side and he was pressed against her from behind, one arm pulling her close to him as he drifted into sleep. She idly stroked his forearm, her mind at ease. The Gates were behind her at last and in the final analysis she had to concede she was better for the experience. Stronger. More confident and assertive. More certain than ever that Robert was exactly the man she'd hoped he would be, and that she could be the woman that he'd hoped to find. She looked ahead to the future with a confident optimism. \n\nGrey slept with a smile."
    ],
    "authorname": "North200",
    "tags": [
        "consensual",
        "dominant man",
        "submissive woman",
        "romance"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/twelve-gates-ch-14-conclusion"
}