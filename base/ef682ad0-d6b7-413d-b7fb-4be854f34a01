{
    "title": "Home for Horny Monsters Ch. 72",
    "pages": [
        "Hi all! Annabelle Hawthorne back at it again with a little story about a man and his monster girls.\n\nNew to the scene? This is an urban fantasy about a guy who inherits a house full of monster girls and then has sex with a bunch of them between life-threatening adventures. I also wrote a couple of side novels that tie into this book, so you may want to start at chapter one and play catch up. Don't worry, I'll wait.\n\nAs for my returning readers, welcome back! It feels like the year is passing me by, but I promise I am using as much free time as possible to bring you a story that I hope continues to inspire. I continue to enjoy your enthusiasm and support as this tale continues to grow.\n\nBefore we begin, I still get emails/comments/whatever asking about when the next chapter will come out. I put that stuff in my bio as soon as I know, so please look there. If there's an unforeseen delay, I update it as soon as possible so that you aren't left in the dark. You can also follow me to get notifications when stuff posts!\n\nOkay, enough of that red tape nonsense. It's time to cue the music and get involved in some\n\nRisky Business\n\nThe walk back to the cabin took less than an hour, and Mike let out a sigh of relief when he saw it in the distance. Bigfoot had them utilizing tree portals to shorten their journey, with the owl always hopping through at the last second. The ominous creatures of the woods had watched them when they left the cave, and many followed them toward their destination, but a few were left behind with each jump. He assumed it was part of the treaty they had established with the owl, who had acted as both an interpreter and mediator.\n\nIt was a fairly simple agreement. If the Nirumbi and the other creatures agreed to peace with the occupants of the cabin, as well as each other, then they could stay. The owl would act as their leader instead of the current Caretaker, whoever that may be.\n\nHowever, this agreement hinged largely on getting rid of Leeds. The owl had assured them that her magic was more than capable of trapping him, and that it would be a simple matter of pushing him past his own boundary. Mike doubted it would be that easy. If history was any indicator, he was in for a rough night.\n\nHe took the morning to sleep. Between sex with Dana and his near-death experience, he had been fairly energized all night. Upon seeing the cabin, his feet had started to drag through the snow and he stumbled. Quetzalli and Yuki had held his arms until they walked inside, and he had promptly gone to his room and fallen into a deep slumber.\n\nAt first, he dreamed in images. Instead of landing in the Dreamscape, he saw the events of the last few days as they flitted through his mind like photographs in a flipbook. Darkness came and then went, and when he finally awoke, he was alone.\n\nPuzzled by the silence, he moved to get out of bed and nearly fell when his foot caught on something heavy under the covers.\n\n\"Ow!\" The lump in his bed shifted and Kisa appeared, rubbing at her face. \"That really fucking hurt!\"\n\n\"What are you doing here?\" he asked, then looked around. He was still in the cabin. \"Is this a dream?\"\n\n\"Maybe.\" Kisa slapped her cheeks and winced. \"I must have fallen asleep in the sitting room. This feels pretty real, though. Hey, listen! You need to get home right away! The Three Horsemen of the Apocalypse trapped us in another dimension, and Beth is\u2014\"\n\n\"Wait, what? The Apocalypse?\"\n\nKisa scowled at him and grabbed his face with her hands. The pads on her fingertips were soft, but her grip was borderline menacing. \"Shut up for a second and just listen!\"\n\nShe explained it all. An angel had spirited them away and locked them up in a world made of mist. Apparently, Beth was acting as Death's lawyer, and now was playing board games in the front yard against War, Famine and Pestilence for the fate of all mankind.\n\nHe wasn't certain yet that this wasn't a dream.\n\n\"Oh, and something in the house has been attacking us,\" she finished. \"Knocking us out, one by one. Tink was put to sleep a couple days back, and she still hasn't woken up. Cecilia got knocked out, and so did one of the fairies. Oh, and Beth got cloned by primordial ooze, so now there's two of her, kind of. It's time you wrap up your vacation and come home!\"\n\nMike took a deep breath through his nose, doing his best to lower his blood pressure. If everything Kisa had said was true, they were all in danger and there was nothing he could do. He wasn't even sure what to do with the knowledge that there were now two of Beth.\n\n\"It's hardly been a vacation, here. C'mon.\" He slid out of bed and noticed that he was still fully dressed from last night. At least he wouldn't be walking through this dream in his underwear. Those were the worst! \"Let's try and figure out what our current situation is while I tell you what's going on in Oregon.\"\n\nHe explained the situation with Leeds as he put on his shoes, and then they walked into the main room of the cabin. He had just finished telling her about the new truce when he noticed that the building had changed.\n\nThe television and entertainment center was gone. Instead, a massive fireplace with a roaring fire greeted them, casting long shadows into the eaves of the cabin. When he looked in the kitchen, it was much bigger and had an assortment of drying meats hanging by the window.\n\nKisa whistled. \"This place is impressive.\"\n\nHe frowned, then looked upstairs. The shadows parted, revealing that the walls of the cabin were covered in various animal trophies.\n\n\"This isn't what it looks like in the real world,\" he told her. \"Stick close to me.\"\n\nShe pressed herself into him and sighed. \"Damn, you feel good,\" she muttered. \"Just having you close makes me feel better. And safe.\"\n\nHe put his arm around her and squeezed. His magic responded to her presence, filling him with warmth and calm.\n\nThere was a thump from upstairs. They looked at each other, and then Mike looked at the front door.\n\n\"Don't suppose it would make sense for us to run, do you?\" he asked.\n\nThe thump repeated itself. Mike pushed Kisa behind him and moved toward the stairs, his palms suddenly sweaty. Kisa shoved past him before they got to the top of the stairs, and he tried to grab her and pull her back, but he was too slow.\n\n\"What the hell?\" Kisa looked over her shoulder at him. \"I don't get it.\"\n\nHe climbed the last three stairs and saw what she was looking at. Instead of the upper floor, they now stood in a thicket of pines. Between a pair of gnarled trees, a massive stag stopped to regard them.\n\nKisa moved toward the nearest wall and ran her hands along it. \"It turns into this tree,\" she told him while peeking through its branches. \"It's almost like the cabin\u2014\"\n\n\"Is the forest,\" he finished, then knelt to touch the soil. When he buried his finger in it deep enough, he could just scratch the wooden floor beneath it. \"But that doesn't tell us where we are.\"\n\nThe trees around them rustled, but there was no wind. He tried to track the invisible breeze using his hands, then jumped when he watched a nearby tree pop out of existence, leaving behind a stump with a woman sitting on it.\n\n\"Greetings, Caretaker.\" She winked at him, a playful smile on her lips. Her dark hair was wavy and hung loosly around her ears in a bob cut. She wore a leather tunic with matching pants, and her boots looked to be made of deerskin. \"I see you brought your familiar with you. She's cute.\"\n\nMike tried hard to relax, but was worried. He was already up shit creek without a paddle, he didn't need any further complications. Kisa growled a warning from the back of her throat.\n\n\"You seem to know who I am, but I have no idea who you are,\" he told her.\n\nWhen she laughed, the sound triggered memories of a summer rain.\n\n\"That's intentional,\" she told him. \"In fact, when I summoned you here, I was very surprised I could take this form at all. It's been a very long time since I've spoken to a mortal, and when I do, it's usually as a disembodied voice. Having a body is something I haven't done in a few centuries.\"\n\n\"That still doesn't tell us who you are.\" Kisa moved in front of Mike protectively. \"So let's try again. Who the fuck are you?\"\n\nThe woman answered. The moment the words left her mouth, Mike felt like his soul temporarily left his body, and the forest shook. Kisa actually lost her balance and fell. When he knelt to help her up, he realized that he couldn't remember the woman's answer. His mind was full of static instead of sound, and even the movement of her lips had been blotted away like a stain on a rug.\n\n\"I imagine the experience was unpleasant, but I knew you wouldn't have believed me if I told you the truth. Suffice to say, sharing my name is against the rules.\" She stood and moved closer to them. \"I must say I'm surprised to see that our new champion is a man. That's quite out of character for my sister.\"\n\n\"Your sister?\" Mike helped Kisa up. \"Who is your sister?\"\n\nThe woman smirked. \"Not so much who anymore, but what. She's the house you live in.\"\n\n\"Which makes you the cabin, right?\" Kisa pawed at her ears. \"I feel fucking nauseous, what did you do to us?\"\n\n\"I did nothing. That would be magic that was created for the sole purpose of protecting the sanctity of the game. If I had told you anything more, your head may have exploded.\" She moved next to Kisa, the scent of pine needles and campfire surrounding her like a cloak. She lifted her hands and touched Kisa's temples with glowing fingertips. \"Better?\" she asked.\n\n\"Much. Thank you.\" Kisa rubbed her eyes. \"So where is this place?\"\n\n\"That's a good question. Some of us think it's inside the champion's head, while others think it's inside ours.\" She turned to walk away, then looked over her shoulder at them. \"You coming? Time is short.\"\n\nMike followed behind her. They walked into the forest, and it came alive with birdsong. The longer they were in the woods, the more surreal the environment became. It was as though they had stepped into a painting, and the colors were just a little too bright.\n\nThey came to a clearing with a table made of stone and two wooden chairs on one side woven from tree roots; he immediately recognized one of the gameboards and the pieces that had been set on it. However, now there were a couple of boards. One looked like his house while the other was clearly the cabin and surrounding forest. Mike and Kisa sat down.\n\n\"I assume you've seen this before,\" she said, then sat opposite of them. Roots sprang up from the ground and wove themselves into an intricately decorated seat that looked more throne than dinner party.\n\n\"I have,\" he admitted. \"But it's never been properly explained to me.\"\n\n\"Nor could it be. That's part of the challenge.\" She picked up a piece that had been on the table between the game boards and scrutinized it. It was a tiny version of Kisa, which she handed to the catgirl. \"The fact that you're here is very intriguing. Familiars are usually animals, or maybe a golem, but never an actual human.\"\n\nKisa's tail swished behind her. \"Lucky me,\" she muttered, then handed the piece back. \"Are those all of us?\"\n\nMike looked at the board and frowned. He saw Bigfoot and the others, all carved in meticulous detail, inside the cabin. \"I didn't think they were part of the geas,\" he said. \"They were outside it.\"\n\n\"Oh, honey, the great game isn't location-specific.\" She pushed the cabin board closer to him. \"These pieces were on my board. The geas is for my sister's board only. As for you, Caretaker, I wouldn't have even noticed your presence if not for that sudden burst of magic inside my walls. Woke me right out of my slumber.\"\n\nKisa snorted. \"Who did you fuck?\" she asked.\n\n\"It's more like who hasn't he fucked?\" The woman winked at him. \"The forest has told me stories.\"\n\n\"Is Bigfoot a good kisser?\" asked Kisa. \"Cause you know Beth is gonna ask.\"\n\nThough he hadn't kissed Bigfoot himself, he did have Emily's memories of the time she had had sex with him. \"I'm not the kind of guy to kiss and tell,\" he replied.\n\n\"Psshh. You never kiss and tell, but everyone in the house has seen your bare ass, usually plowing someone from behind.\" Kisa looked at the house's board. \"Why is this piece so fuzzy?\" she asked, pointing at one he didn't recognize. It was in the office.\n\n\"He can tell you.\" The woman moved next to Kisa and put an arm on the catgirl's shoulder. \"I like you. If you ever tire of him, you can always come live with me. You're fun.\"\n\n\"It means someone hasn't been discovered yet,\" he explained, then frowned. The piece, though blurred, was also blackened as if it had been burned. He tried to touch it, but it was so hot that he yanked his hand away. \"Why is this one so different?' he asked.\n\n\"Because it isn't your piece.\" The woman scowled as the piece shifted into the living room. \"And you are definitely not the one moving it.\"\n\nMike felt the world around him go still. Was it Amir? Or had the shadow returned? His list of enemies was frustratingly long.\n\n\"Speaking of, you have a similar issue here.\" She waved her hand and revealed that another gnarled piece sat on the table. He immediately recognized Leeds. \"This little shit stain wants to be king of the forest. Besides fucking up the flow of my woods, he is also the reason you cannot get home and fix your problem there. Even if he tries to bargain with you, you cannot let him have this place.\"\n\n\"Because he's an asshole?\"\n\nShe nodded. \"That, too. He thinks he can become a Caretaker, but it's not that simple. He wasn't chosen, and he isn't part of the game. All he can do is disrupt it. Putting him in charge would be like swallowing poison. If you can push him beyond my boundaries, I will see to it that he never crosses again. I've tasted the blood he has spilled already on my land, and I am not impressed.\"\n\n\"Who chooses who becomes part of the game?\" Mike felt his heart pounding in his chest. He had so many questions right now, and he didn't know which ones to ask. He also didn't want his head to explode.\n\n\"It's different for all of us. You see, I call you Caretaker because that is the role you have taken on. Others like me will call their champions something else, like Curator, Captain, and even Conqueror. Each of us, in the beginning, was bonded to an entity who helped us choose. In your case, it's a simple nymph. As the guardian of the home, she chooses.\"\n\n\"Who is your guardian?\"\n\nShe frowned. \"There used to be a dryad who lived by the cabin, but she was killed some time ago when the cabin was captured by a competitor. It was taken again by a former Caretaker from your home, which is also why my board is part of your game now. I can never again choose my own champion. It's a bit of a failsafe, it keeps people like me from backstabbing you.\"\n\n\"Why would you backstab me?\"\n\nShe grinned. \"All sorts of reasons. Maybe I don't like you. Or maybe I'm mad at my sister. However, my fate is now tied with hers, so if she dies, so do I. That reminds me.\" She held out her hand and leaves swirled around it, forming into a tiny replica of Mike. He was screaming in agony, an arrow stuck in his back. \"You almost died out there.\"\n\n\"I know,\" he said, suddenly solemn.\n\n\"No, I don't think you do. By all rights, you should have died. I actually felt you cross over hundreds of times during that night, like the ticking of a terrible metronome. But every time, you found your way back. It was almost like something kept you here.\"\n\nHe thought of the women of the Dreamscape, struggling to keep the island from being consumed. \"I have some ideas,\" he began.\n\n\"Don't share them.\" She held a finger to her lips. \"Even though this is a sacred place, we can never be sure that someone isn't listening in. It may even be someone sifting through your memories years from now, or your familiar's. You've found yourself on a dangerous path, Caretaker, and I suspect the others will take notice of you very soon, if they haven't already.\"\n\n\"The others?\" he asked, his voice cracking. He wasn't in the mood to fight with a Conqueror.\n\n\"The other champions. But none quite like you.\" He didn't see her move, yet she was suddenly in front of him. She brushed a lock of hair away from his eyes, then traced his cheekbones with a finger. \"My sister was never much of a fighter, and she doesn't attract them. I always thought a fighter would be best, but it turns out that succeeding at the hunt doesn't mean you can properly skin a deer.\"\n\n\"Uh...\" He looked at Kisa, who just shrugged. The metaphor eluded him.\n\n\"It's your heart. The thing that makes you a good Caretaker.\" She tapped on his chest. \"Your compassion and kindness have brought you some very powerful allies.\"\n\n\"And his dick.\" Kisa sniggered behind him.\n\n\"That, too.\" The woman smiled. \"I always thought a nymph was an odd choice for a guardian. My sister's methods are unique in that regard. The others choose their champions through trials of strength and wits. I, too, used to do the same, but no longer.\"\n\n\"So the others are fighters.\" He sighed. \"Okay. Having my ass kicked is nothing new.\"\n\n\"Your greatest strength is also your weakness. A heart that lends itself so easily to others is easily broken.\" She reached her hand up, and a nearby tree bowed down until its branches touched her hand. With a sharp yank, she snapped off a long branch about an inch across. She turned it over in her hand and pulled a field knife from a belt on her waist. \"Do you know how you make a spear, Caretaker? You first trim away the branches. Once they're all gone, you sharpen the tip. And sometimes, when the situation calls for it, you throw it and hope to hit what you're aiming for.\"\n\n\"I suspect this is a metaphor for something?\" He watched as her knife blurred over the branch, turning it into a wicked-looking spike.\n\nShe nodded. \"I speak of the previous Caretaker. She cut ties with everyone who ever loved her, sharpened her resolve, and then threw her life away, hoping it would stick. She was never meant to be a fighter, and the shade of a former champion caused her to throw her spear into the darkness and lose everything.\"\n\n\"Not bad for a metaphor,\" Kisa muttered. \"Sums up what I remember, anyway.\"\n\n\"There are those who would see you become a spear, Mike Radley.\" She turned the spear over in her hands, then handed it to him. The wood was oddly smooth in his hands, and felt heavier than steel. \"They will try to prune your branches, to sharpen you into a weapon. I wonder what will become of you then?\"\n\nHe didn't like the implication of what pruning branches meant. With a quick snap of his wrist, he pressed the butt of the spear into the ground and put his free hand on Kisa's shoulders.\n\n\"Think of it as a walking stick with attitude,\" he told her.\n\n\"If nothing else, you will be a fun one to watch.\" She was in his face again, her breath cool against his cheeks. \"I shall share one more thing with you this night. I am not just a structure in the forest. I am also the ground beneath your feet and the trees around you. Your true power isn't something that grows from within, it is also your connection with me and with others. Throw not spears in a dark wood, Mike Radley.\"\n\nShe surprised him with a kiss on the lips, and then gave him a hard shove backward. While falling, he grabbed onto Kisa, who let out a cry followed by a hiss. Instead of toppling onto the hard forest floor, he landed on something soft.\n\nOpening his eyes, he saw that Quetzalli was clutching his right arm and Yuki was asleep by his feet in fox form. Puzzled at the strange dream, he rubbed at his eyes and felt something tickle his face. In the dim light of dawn, he saw that his fingers were full of black cat hair.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nThere was a loud chime, followed by a pop. Beth opened her eyes and saw that she was looking at the Earth as it spun in space. Other than the moon and the sun, there were no other objects to be seen in the infinite void. Twinkling lights appeared on the planet as it rotated from day to night, and she watched in awe as mankind did its best to chase away the darkness.",
        "Tears formed in her eyes. At this moment, she was finally able to grasp what so many astronauts had tried to convey. From this high up, all of mankind was condensed onto a single rock, tiny and insignificant compared to the vastness of the universe. The human race had accomplished great things, and could do even more if they could just learn to see beyond themselves, to look at the greater good. This planet wasn't just her home. It was a monument to life, a cradle of\u2014\n\n\"I cannot wait to blow this fucker up!\" War appeared next to her, astride his massive horse. Flames jetted from the horse's nostrils. \"Just look at all that simmering hate! Can you feel it?\"\n\n\"N...no.\"\n\n\"Oh, it's there. You just have to know where to look.\" He pointed at the Earth with his sword. \"Man-made borders, dark zones to prevent spying. Way too many coffee shops. This planet is just a bundle of rage waiting to be let loose.\"\n\nBeth looked away from War, only to find herself looking at Famine on his horse.\n\n\"He isn't wrong,\" Famine informed her. \"You see, those in power will spend vast amounts of money to not only hold onto their wealth, but to convince you that the other peasants are the ones to blame for your lot in life. Despite all you have in common, they will whip you into a frenzy over your differences in the hopes that you take it out on each other instead of them.\"\n\nShe looked away from Famine, but now stared at Pestilence, also on a horse. Pestilence buzzed dramatically at her for almost a minute, but she didn't understand any of it. It was clear that the last horseman was getting heated, because condensation was forming on the inside of the hazmat suit's visor.\n\n\"Holy shit,\" muttered War once Pestilence was done. \"You really laid into her.\"\n\nPestilence nodded, then gave Beth a rude gesture.\n\n\"Mankind is about to see its end.\" Famine slapped his hands together greedily. \"And once we've simulated it here, you will see it again on your Earth!\"\n\n\"That is where you are wrong.\" Reggie emerged from the darkness, a glittering crown of gold atop his head. Beth's jaw dropped when she saw that he was piloting a mech suit that was nearly seven feet tall.\n\n\"Where the hell did you get that?\" she asked.\n\n\"It is but a thought away, Lady Beth.\" He nodded encouragingly. \"Almost like magic.\"\n\nShe looked down at herself and willed herself into a flowing silver gown, adorned with armor. A staff made of ivory appeared in her hands, and a cloud formed beneath her feet. Energy swirled around her and crackled between the fingers of her outstretched hand. She looked over at the horsemen, wondering if she could summon a fireball and torch them into dust.\n\n\"It's all cosmetic,\" Famine explained. \"So don't think you're gonna pull a fast one on us.\"\n\nThe void filled with the sound of creaking wood. They all turned to see a small figure emerge from the darkness, astride a rocking horse. It was Jenny, and her horse had a smile painted onto its features much like clown makeup. The paint wasn't dry, causing the red around its mouth to dribble down like drops of blood.\n\nJenny giggled, but said nothing as she held onto the handlebars of her horse and rocked in place. Somehow, despite the fact that they were hovering in space, the horse continued to creak as if it was rocking on squeaky boards.\n\n\"Oh, this is going to be too fun,\" War declared, then poked at Jenny with the tip of his sword.\n\nOuch! That hurts my feelings! Jenny sounded very much like an upset four-year-old.\n\n\"I'm going to hurt a lot more than your feelings,\" War growled. \"When this is all done, I'm going to rip the stuffing out of you and use you as a fuck toy.\"\n\nBeth covered her mouth in horror, half expecting Jenny to fly into a blind rage. Instead, the rocking horse retreated to a safe distance from the others.\n\nStay away from me, mister. Jenny's voice was barely audible. Or I'll tell a grown-up.\n\nWar and Famine both chuckled at the doll. Pestilence may have done the same, as the buzzing sounds coming from them sounded slightly higher in pitch. They were underestimating Jenny, which was perhaps the dumbest thing they could do.\n\nIn a flash of light, Murray now stood before them.\n\n\"This is a game of strategy,\" he declared. \"The rules of the game are still the same, and your corporeal forms are still sitting around the table. In here, I have created a simulacrum of the planet and everyone living on it. They are non-combatants, and will provide no in-game benefit.\"\n\n\"Then why are they here at all?\" Beth asked.\n\n\"You offered a game of conquest.\" Murray gestured at the Earth. Golden lines made of light cut across its land, separating the planet into territories. \"When you choose your territory, you may dispose of its occupants however you like. They are here purely for flavor and can provide no benefit.\"\n\n\"That's barbaric! Why can't we just have armies or whatever?\" Beth hadn't expected Murray to replicate Earth's population.\n\n\"That's how conquest works, sweetheart.\" War let out a loud whoop. \"You see, it isn't just about how we fight each other. It's also about collateral damage. When we fight, you'll get to watch people die. Even the act of occupying unclaimed territory lets us get our rocks off!\"\n\n\"It is what you promised,\" Famine added. \"The game inside here would present itself as we see fit. And it's what we want to see.\"\n\nAppalled, Beth looked away from them toward Reggie.\n\n\"You must harden your heart, Lady Beth.\" His mech put a fist to its chest in a salute. \"After all, it is family game night. And we take no prisoners.\"\n\nTensing her jaw, she turned back to Murray. \"So how does this work, exactly?\"\n\n\"In the real world, you are all rolling to see who gets to go first.\" Murray waved his hand and the space in front of him filled with light as it became a portal to the real world. Through it, Beth saw that she and the others were sitting at the table, their eyes glassy as they took turns rolling a single six-sided die. There must have been a tie for first, because Reggie and Famine both rolled again once everyone had a turn.\n\n\"Oh, shit,\" she muttered when a golden light appeared over Famine's head. If she remembered right, play would proceed to the left, which meant War and Pestilence would get a turn before Jenny did. If the three of them were coordinating at all, it would give them an opening advantage.\n\n\"Ah, let's see!\" Famine slapped his hands together and looked at the Earth. It rotated once every few seconds, allowing them to see every available territory. The world stopped moving and they descended almost instantly to hover over South America.\n\nOf course. Australia and South America only had four territories apiece, making them the easiest to conquer. Owning a continent gave a player extra troops at the start of their turn. The word Peru appeared in golden letters across the western side of the continent.\n\n\"It's go time!\" Famine declared, and they were now on the ground. Beth looked around, curious about their destination. They were in a large city, teeming with people.\n\n\"Lima,\" War informed her. People were milling about a city filled with both old and modern structures, some taking in the distant mountain views while others went about their day with nary a care.\n\nDark shadows swirled along the ground before bursting forth from the soil beneath. Horrific beings made of teeth and claws tore into the local populace, spraying the streets with blood.\n\n\"What the hell are those things?\" Beth recoiled as one came near her.\n\n\"The Hunger.\" Famine grinned. \"Made them myself.\"\n\nAghast, Beth watched as Famine's shadow troops formed after devouring the people of Lima. As their screams quieted, the group shifted back into space so suddenly that Beth felt her head spin.\n\n\"My turn!\" War cackled and pointed his sword at the Earth. Their viewpoint shifted slightly, and the words Central America appeared across Mexico. When they zoomed in, they were standing on the beaches of Cozumel.\n\nTourists on the beach began screaming when men emerged from the sea wearing high-tech ballistic gear and firing guns. War's soldiers could easily be men from any continent, and their liberal use of bullets and explosives turned the beach into a bloody mess. War himself joined in, cleaving people in half as he ran them down.\n\nBeth turned away and held her ears, doing her best to fight back tears. In her head, she knew none of this was real, but she could easily distinguish the anguished cries of men, women, and children as their beach vacation was turned into a blood bath. War's turn seemed extraordinarily long, and by the time it was over, she found that her ears were ringing from the sounds of violence.\n\nBack above the planet, she watched Pestilence pick North Africa. Down on the surface, Pestilence unzipped their hazmat suit, releasing ominous yellow pollen. People dusted with it grabbed at their heads in agony until large fungal colonies burst from their eyes. Instead of wiping out the locals, Pestilence made them into an army of zombies that groaned in agony as they were controlled by their new hosts.\n\nIt was Reggie's turn next. He looked over at her, his whiskers twitching in anticipation.\n\n\"Where should I pick?\" he asked.\n\nShe didn't know, and wasn't sure she could even formulate an answer. The number of atrocities she had seen in the last few hours was more than any human could endure, and she now saw the trap the horsemen had laid out for her. How could she distance herself from the macabre scene below?\n\n\"Lady Beth?\" Reggie moved close and made his mech kneel so that he could reach out and touch her face. \"These horrid visions will be the truth of tomorrow if we do not act today.\"\n\nShivering, she looked at the map again. The horsemen had deliberately picked countries that would block them from taking South America. If Reggie chose Brazil or Venezuela, he would be vulnerable on two fronts. It was clear that the horsemen wanted Famine to take South America and gain a troop advantage.\n\nCould they do something similar with Australia? She looked at the map and frowned. Or was that what the horsemen wanted of her? The troop advantage would help, but it would put her in a bad spot.\n\n\"The clock is ticking!\" Famine shouted. \"I want my turn!\"\n\n\"There is no time limit during this period,\" Murray explained. \"This is, after all, a game of strategy.\"\n\nBeth looked at Reggie, then back at the board. When she looked at Jenny, she saw that the doll was still on her horse, but now she was floating upside down and staring at the moon.\n\n\"There also isn't a rule about sportsmanship!\" War moved close to Beth and got in her face. \"C'mon, you stupid cunt! Tell your pet what he's doing so we can get around to killing you!\"\n\nThe world closed in on her until all she could see was War's smug face. Heat filled her cheeks as she gritted her teeth and pressed her forehead against War's.\n\n\"Reggie. Southeast Asia. We're taking Australia.\" She sneered at War, then pushed him away with her staff.\n\n\"As you wish.\" They teleported to the ground in time to watch as bright lights appeared in the sky. Rats wearing mech assault suits jumped out of transport ships and crashed to the ground. Though they didn't attack anyone, the local population panicked and ran for cover.\n\n\"Boring,\" War muttered to himself. He yawned dramatically as they moved back into outer space.\n\n\"Eastern Australia,\" Beth said. When they landed, she thought long and hard about what her troops should look like. The others had been ready right away, but it wasn't something she had thought very long about.\n\nTurning around, she studied the Sydney Opera house. It was somewhere she had always wanted to go in person. The native Australians paid no mind to her or the other players as they moved around them.\n\nPestilence buzzed impatiently behind her. She bit her lip and closed her eyes.\n\nWhat would her army be? It came to her so suddenly that she couldn't help but grin.\n\nThe people closest to her transformed. There was no pain or fear, just sparkling light and smiles. When the transformation was done, she found herself standing among a small army reminiscent of modern fantasy literature. Dwarves, elves, and humans were all equipped in medieval armor and weaponry.\n\nA big grin broke across her face as the army turned to face her and saluted.\n\n\"This is so boring!\" War rolled his eyes so hard he almost fell off his horse. \"Men with swords? Really?\"\n\n\"And women.\" Beth gestured to an elven maiden nearby. \"The fights are determined by rolling the dice. Which means I'll get to watch them destroy your soldiers without firing a single bullet.\"\n\n\"Blah blah blah.\" War shook his head as the world receded away, and they were in orbit again. The group turned their attention to Jenny, who was surrounded by golden light. She was still busy staring at the moon.\n\n\"It's the toy's turn.\" Famine leaned forward on his stallion. \"What sort of asinine shit will we get from her?\"\n\nJenny didn't respond. Instead, they were all yanked straight down to Japan.\n\n\"Jenny!\" Beth looked around. She recognized the Tokyo Tower, which was very similar to the Eiffel Tower. \"Why did you bring us here?\"\n\nToys! Jenny waved her hand and a nearby building exploded with gift boxes. Little parachutes deployed, and the Japanese people watched in wonderment as the presents drifted down into their hands. Nearby, a little boy snatched a gift out of the air and opened it. Inside was a stuffed kitty that looked very similar to Kisa.\n\nThe boy hugged it. People who collected gifts smiled, and laughed in delight. Those who didn't simply vanished. Instead of an army, Jenny was surrounded by people holding toys.\n\n\"Jenny.\" Beth's voice was quiet. \"You were supposed to help us capture Australia.\"\n\nI wanted to go to Japan. Jenny watched a young girl stroke the silken hair of a doll in a kimono that looked very much like Ratu. You never take me anywhere.\n\n\"Jenny, please!\" The world was ripped away, and they were in space once more.\n\n\"Looks like your toy needs new batteries. And a brain.\" Famine grinned. \"Looks like I'm up.\"\n\nThe process felt like it took days, but it was probably only minutes. The territories were brutally conquered by the horsemen, and Beth ended up closing her eyes for most of the process. The screams still made it through her hands, slashing against her psyche like a flail made of barbed wire.\n\nReggie took Argentina to prevent Famine from getting his continent bonus on the first turn. Famine took Indonesia in retaliation. When all was said and done, Reggie and Beth managed to keep anyone from getting a continent bonus, but it also meant their defenses weren't great.\n\nJenny put zero effort into any sort of strategy. Instead, she whimsically picked places based on who she thought wanted to play toys with her. Beth assumed that the people who took her toys would be her army, but it was impossible to tell what the doll was thinking. Was Jenny still able to move in and out of the game?\n\nIf not, they were royally fucked. Despite having never played, the horsemen had a definable strategy. She assumed it was because they were physical manifestations of concepts that transcended understanding, but also worried that maybe they had some tricks up their sleeve as well.\n\nThe Earth spun lazily beneath them as a tone sounded, signalling that all territories were occupied. The zones glowed different colors based on who owned them. War's zones were red. Famine had black. Pestilence's were green. Reggie's were blue. Beth's glowed yellow, while Jenny's were all the bright pink of a highlighter.\n\nFamine cackled in delight as he was assigned troops at the beginning of his turn for the number of territories he had. He distributed a few to Peru, then turned to Reggie.\n\n\"It's time to catch some mice.\" They were pulled down to Argentina, where Reggie's rat troops stood anxiously around a set of enormous waterfalls. The mist from the falls blew upward, casting rainbows into the sky.\n\nReggie cast a dirty look in Famine's direction, then looked over at Beth. \"The numbers are not in my favor,\" he informed her.\n\n\"No, they are not.\" Famine laughed and disappeared. He reappeared upstream of the falls just as an enormous horde of his Hunger appeared. \"Slay them!\" he cried, his voice rending the sky like thunder.\n\nReggie's troops opened fire with blaster rifles that ionized the air around them. When the Hunger came, it tore through the ranks of the rats, ripping them out of their suits and casting the mechs aside to get caught up in the flow of the falls.\n\nFamine howled in delight as the Hunger made quick work of the rats. Reggie narrowed his eyes at the horsemen, but was caught off guard when the Hunger suddenly descended on him as well.\n\n\"Reggie!\" Beth tried to reach his side, but it was as if she was a ghost. Unable to touch Reggie or the Hunger, she watched helplessly as he fired his weapons and was toppled over. The Hunger pulled him free of his mech and ripped him apart.\n\nBeth screamed, her own ears ringing as the Hunger swirled around her. When they ascended into the sky, Argentina was now black with Famine's troops.\n\n\"This doesn't make any sense!\" She turned to Murray. \"How is this a game if we can be killed in it?\"\n\n\"There is no true death here,\" Murray explained as golden light swirled around the space next to him. When it was gone, Reggie reappeared, visibly shaken inside his suit. \"On your turn, you are part of the battle. It was what you agreed on.\"\n\nWar laughed heartily and slapped Beth on the back hard enough that she winced.\n\n\"Now you see!\" he declared. \"You offered us everything we could have ever wanted, and we took it!\"\n\n\"But...that means...\" she turned on him, her voice filled with venom. \"It means that you will be killed, too!\"\n\n\"Meh.\" War shrugged, then shifted his sword. \"Wouldn't be the first time, won't be the last. I'm War, darling. Wherever people fight, I'm there. It's not about who wins or loses, it's about chaos, blood, and righteous fury! When a man dies in battle, I ride that last bit of light in his eyes into the dark, then watch as my brother claims him. I don't favor victor or loser, for I experience the fight from both sides. It's the fight itself that thrills me.\"\n\n\"You're a psychopath,\" she replied.\n\n\"If this is too hard for you, you can quit.\" He sneered, revealing crimson gums. \"What was all that talk about backing a human into a corner if you're gonna be a huge pussy about it?\"\n\nBeth growled. \"I'll have you know that a pussy is built to take a beating. Not that you'd know anything about that. I assume the sword is compensating for something, and you're definitely not used to swinging it more than once, if you know what I mean.\"\n\nWar laughed for a few seconds, then went completely still.\n\n\"I can't wait until it's my turn,\" he told her through gritted teeth.\n\n\"But it's still my turn,\" Famine said. \"I'm attacking Japan.\"\n\nNo! Jenny's cry echoed around them as they were taken down to Japan. She had failed to put more than one troop in Japan, and paid the price as the Hunger devoured screaming grown-ups and children who clung to their toys. My friends!\n\nBeth stared in horror as Famine commanded the Hunger to capture the doll and rip her apart. Jenny was yanked free of her rocking horse, the Hunger yanking at her limbs until they ripped and she was dragged away by the shadowy horde.\n\nOnce they were back in space, Jenny reappeared. She had a teardrop drawn on her cheek, and she cowered beneath Famine's withering stare.\n\nYou're mean, the doll declared, then turned her back on the group.\n\n\"Ooh, ooh, me next!\" War was practically hopping up and down on his horse's back.\n\n\"Fine.\" Famine waved a hand dismissively.\n\n\"This bitch is mine.\" He leveled his sword at Beth, then pointed it at the Earth. \"Congo, now!\"",
        "Beth frowned as she was pulled to her defensive position in the Congo. She could see the other players, but War was missing. Standing around her were three infantry worth of soldiers who eyed the surrounding forests in trepidation. Bird calls echoed across the hills as the minutes passed.\n\nHe's toying with me. She looked into the woods and raised her staff. Golden light formed a tight beam that incinerated the nearby woods, casting smoke into the sky. She clutched the staff tightly, focusing her wrath into a tight beam of energy that sliced cleanly through wood and caused it to ignite.\n\nThe beam also carved its way through War's first battalion. The men screamed in agony as they went up in flames, and cavalry made of men and elves charged forward on their horses. Gunfire mowed them down, but not before they closed the gap and tore into War's forces.\n\nBack and forth the battle surged, Beth's nerves fraying at the edges. Her battle was far longer than the others had been, and it was hard to tell who had the advantage until almost an hour later when War stumbled out of the woods, his body pincushioned with dozens of arrows.\n\n\"Fuckin' bitch,\" he muttered as a dwarf buried her axe into War's skull.\n\nBeth let out the breath she had been holding as she was pulled into the sky once more. She caught a brief glimpse of the board and saw that she and War had both lost forces, but she had come out ahead in the fight. It was still hard to think that this was a physical manifestation of a dice roll.\n\nOn each turn, the attacker could commit their forces to an assault, but had to leave one unit behind in their territory. Both the attacker and defender rolled, with the higher value winning. This meant that both sides could lose forces, and ties would always go to the defender. Luck was a fickle mistress, so it turned into a numbers game. With enough troops, an attacker could overwhelm even the toughest defense eventually. But should they overextend themselves, then their own forces became vulnerable.\n\nWar had attacked from South Africa, and Reggie currently held Madagascar. It was likely that the Rat King would come down on War's lone infantry and destroy them. This brought a grin to her face that was quickly wiped away when War pointed at her.\n\n\"Again!\" He shouted, and then attacked another one of her territories.\n\nThis time she wasn't so lucky. She was in Egypt, and spent almost two hours trying to hide among the pyramids before War found her. The massive horseman cackled in delight as he brought his sword down on her head and ended their battle with blinding pain followed by darkness.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nThe cabin was quiet. After waking up from his dream, Mike had somehow been able to fall asleep for a few more hours. After a dreamless sleep, he woke to discover that he was alone in his room, which was a bit of a surprise. However, he welcomed the moment of solitude as he tried to gather his thoughts.\n\nEmery had greeted him the moment Mike left his room, the imp wringing his hands in anticipation. He had prepared Mike a massive breakfast burrito smothered in green chile sauce along with a cup of coffee. Although puzzled by the absence of the others, he spent the next fifteen minutes greedily devouring the chorizo-laden meal in silence.\n\nAs he approached the end of his meal, Emery gave him a rundown of where everyone had gone. Yuki and Quetzalli were having a meeting with the owl out in the woods. It bothered him that he didn't know her name, but it brought to mind the idea that names were powerful tools for magic users.\n\nVelvet was out getting food. With their temporary truce in effect, the Nirumbi had divulged where they had driven the prey animals to, and she was famished. Bigfoot had gone with her, which made him feel marginally better.\n\nDana was out in the barn. Emery had no idea what she was doing out there. On the roof, Abella stood with her wings opened wide, as if defiant in the face of the sun.\n\nGlad that he hadn't been totally abandoned, he had Emery start him a new pot of coffee and then wandered upstairs while the imp stayed behind to clean. Despite the events of the last couple of days, Emery hummed a delightful melody as he cleaned the kitchen.\n\nAt the top of the stairs, Mike tapped the wood with his shoes. It didn't look anything like it had in his dream, and he stopped just short of going into Velvet's room. The door was closed, so he turned and walked down the hall to the other door. The letter E had been carved into the wood, so he left that one alone, too.\n\nThere was a small room at the end of the hall that overlooked the first floor. A few bookshelves were set up, populated mostly with books for running Dungeons and Dragons' campaigns. Curious, he looked through a couple of them, thinking back to the few times he had dabbled in role-playing games in college.\n\nIn the process of putting away a book, he caught a flash of color out of the corner of his eye. Walking over toward the railing, he saw that someone had drawn a picture in crayon on the wall just behind one of the supports. Using a nearby chair as a footstool, he stepped up onto the balcony, which let him reach the beam and pull himself up.\n\nHe was more than a little surprised at how easy it was to climb up into the rafters. Usually, such a maneuver would take a bit of huffing and puffing, but he slid into the space effortlessly. He was greeted by dozens of drawings done in crayon, tucked away from watchful eyes below.\n\nThey were mostly stick figures. He recognized Eulalie and Velvet right away, as well as Bigfoot. There was a man who must have been Darren, and then there was their mother, Ana. She was often drawn with an apron around her waist.\n\nHad Velvet done these? Or had it been Eulalie? Looking around, he saw that the pictures were squirreled away in a few other locations, but these would be harder to get to. Climbing through the rafters of the house sounded like a dumb way to get injured, so he stayed where he was and just looked around.\n\nWhat had living here for an entire lifetime been like? He wondered if Velvet and Eulalie had played tag up here, or maybe even an epic game of hide-and-seek with their father. As he listened to Emery humming, he didn't doubt that this was a place that had once been filled with love and laughter. It had seen so much violence in the last few days, it must have been jarring.\n\nDown below, he saw Emery sneak a peek over his shoulder, then pull a silver coin out of a hiding spot and start polishing it.\n\nThe cabin was alive, just like the house. What kind of people had lived in these walls? What sort of deeds had the cabin witnessed over the years? Mike slid off the beam and casually hopped down from the railing to the floor. When he was halfway down the stairs, he saw the coin in Emery's hand disappear as if by magic.\n\n\"You don't have to hide your treasure,\" he told the imp. \"I'm not going to take it.\"\n\nEmery bit his lip in frustration and then looked down at his feet, his wings drooping. \"It's my job to take care of this place,\" he explained, \"not polish my collection.\"\n\n\"Does polishing your collection make you happy?\" Mike asked.\n\nThe imp nodded tentatively.\n\n\"Do you do a better job when you're happy?\" Mike asked.\n\nEmery scrunched up his face, as if afraid to answer. When he spoke, his voice was a hopeful squeak. \"I think so.\"\n\n\"From now on, I want you to take some time for yourself. Every single day.\" Mike pulled the now full carafe of coffee off the counter. \"Polish your collection. Go for a walk, er, fly. Whatever. Consider it an order if that's what it takes.\"\n\nA look of sheer joy bloomed across the imp's face, and the coin reappeared in his hands.\n\n\"This one is a silver dollar from 1901,\" Emery declared, then set it on the table between them. Mike noticed that the coin looked clean as if it had recently come from the mint. \"The woman on it is very pretty.\"\n\n\"She is.\"\n\n\"I like the ones with faces on them the best. During the lonely times, it felt like they were my friends.\" Emery picked up the coin and smiled at it as a mother would to a child.\n\n\"Speaking of being lonely, do you ever feel...\" Mike looked around conspiratorially and lowered his voice. \"Do you ever feel like this place is alive?\"\n\nEmery's eyes widened even further, and then he nodded.\n\n\"Every home is alive in its own way, Caretaker. If you stand in the door, you can feel it breathing around you. Stand on its floors, and you can feel its heartbeat.\" The imp grabbed Mike's finger in his tiny hands. \"When you fill a good house with love, it loves you back. It will shelter you in a storm, and warm you when you are cold. I think you know by now that this place is very special.\"\n\nThe conversation was taking an unexpected turn.\n\n\"Special, how, Emery?\"\n\nThe imp grinned, and then his eyes flicked to the woman on the coin. \"Special in ways I can't say. In the same ways that the trees speak to Master Foot, this place can speak through you.\"\n\n\"You mean to me?\"\n\nEmery smiled, his brow furrowing up and making him look like an old man.\n\n\"I said what I said.\" He let go of Mike's hand and picked up the coin. \"My magic helps me keep the coins clean. I'm an earth elemental. Anything that comes out of the ground, I can manipulate, even restore it to its previous luster. I suspect you have a similar ability when it comes to Velvet. I haven't seen her this happy in months. When you take her from this place, I ask that you take very good care of her.\"\n\nMike laughed, then held out a finger for the imp to shake. \"You've got yourself a deal,\" he said.\n\nThey sat and chatted until the coffee was gone. Emery told stories about the girls growing up, and how much he enjoyed playing with them as children. Once his mug was empty, Mike excused himself and went outside for some fresh air.\n\nIt was warmer today than it had been all week. The snow was like slush near the grove of trees that had burned down the other night. What few trees still stood were ashen specters with skeletal limbs that reached for the sky. Mike wondered how long it would take for them to grow back.\n\nHe found Dana out in the barn with the hood of the jeep up. She had found an old radio and was blasting some hits from the '80's while giving the car a tune-up (at least, that was his assumption). Wearing a white tank top that barely covered her midriff, it rode up and revealed the tattoo of gears at the base of her spine every time she leaned into the car.\n\n\"What's going on?\" he asked.\n\nDana backed out of the car and regarded him with red-tinged eyes. He couldn't help but notice that her biceps looked more defined than before.\n\n\"Needed something to do.\" She set a ratchet on the edge of the car, then used a rag to wipe some grease off her fingers. \"Wondered if this thing still ran. Might need it for tonight.\"\n\nMike nodded. He sincerely doubted that the jeep would be of any use in capturing the Jersey Devil, but he wasn't about to argue with her.\n\n\"Everything okay? Your eyes don't look so great.\"\n\nDana smirked, then leaned against the jeep with her arms crossed. \"Funny that you ask. I'm okay, I think. Ever since the other day, I've felt more energized than I usually do. Like I've downed a bunch of caffeine or something. Senses are heightened even more than usual. I feel kind of like I do right after feedings, only it isn't fading like it usually does.\"\n\nUh oh. He thought about the weird electrical storm he had summoned, and then subsequently poured into Dana. Had he changed her? He could only hope it was for the better.\n\nHe offered his help, but she declined. They both knew there was little he could do to contribute, but he wanted to be polite.\n\nOutside the barn, he found some good handholds and climbed up to the roof, where Abella waited.\n\nHer eyes were closed, a thin smile on her lips as she soaked up the sunlight.\n\n\"What brings you to my neck of the woods?\" She grinned at her own joke.\n\n\"I came to check on you, actually.\" He walked across the roof, wondering how it was even strong enough to hold her. Looking down, he noticed that she had left several gouges in the roof with her talons, most likely from walking across it.\n\nShe opened her eyes and looked at her wing with a frown.\n\n\"I'm fine,\" she said, but he just shook his head.\n\n\"You aren't.\" He stopped in front of her and ran his hands along her cracked wing. The dark lines were flecked with stone that glistened in the light.\n\n\"It doesn't hurt,\" she reassured him. \"It will heal. Eventually.\"\n\nHe frowned. \"Even your body can only take so much punishment,\" he said.\n\n\"And since it is my body, it is my choice.\" She folded her wings around her. \"I do not wish to talk about it. One of my greatest fears is to lose the sky.\"\n\n\"Then let's do everything in our power to avoid that.\" He examined her face, then brushed a lock of hair away from her brow. \"So you can breathe fire...\"\n\nShe shrugged. \"Not that it's a big deal, but yes. It is called heartfire. By my former clan, anyway. I'm not very good at it and lost control.\"\n\n\"Is that why you've never used it before?\" He had seen her in more than a couple of fights where it would have come in handy.\n\n\"Heartfire is different for every one of my kind. I have a powerful flame, but a tiny body, so it's difficult to control.\" She put her hands on her hips. \"It also uses a tremendous amount of energy. If used too much, I can fall into hibernation until the sun's light awakens me once again.\"\n\n\"Like when we first met?\" She had been tucked in a shadowed alcove and covered with Mandragora vines, the plant siphoning away her energy. \"You were asleep.\"\n\n\"My people get our energy from many places.\" Her dark eyes sparkled, and she glanced down at his crotch. \"But you know this already.\"\n\nHe laughed, then looked out into the forest. It felt as though he was being watched, but in a non-threatening way. Was it the trees?\n\n\"I was thinking about taking a walk. Would you like to come with me?\"\n\nShe nodded. \"I will follow you from above.\"\n\n\"Nah, not like that. Come see the forest with me.\"\n\nHer cheeks darkened, and she licked her lips. \"I would like this.\"\n\n\"C'mon, let's go.\" He walked to the edge of the barn and was grabbed from behind. The roof disappeared from beneath his feet as Abella glided through the air and then landed roughly near the tree line. He stumbled a few feet before regaining his balance.\n\n\"That hurt more than I thought it would,\" she explained, rubbing at her wing joint. \"Sorry, I thought I could carry you.\"\n\n\"As long as you're okay.\" He held out a hand, and she took it with a smile.\n\nThe trails around the cabin were covered in thin snow that did little to slow Mike down. Every step Abella took made a crunching sound, her toes spreading apart to leave wide tracks. Her tail swished in a serpentine pattern, which left a smooth furrow behind them. If they somehow got lost, someone would easily be able to find them.\n\nHe didn't worry about losing his way. Even with the cabin still close by, he could feel it. His magic shifted inside him, like a magical compass that always pointed the direction home.\n\nAbella told him stories from centuries past, and he shared a few tales from when he was younger, mostly camping while in the Boy Scouts and college. She hung on every word, and he noticed that her wings would make a rippling noise when she laughed, like a tarp in the wind.\n\nThey skirted the area of the forest that had burned. He couldn't help but notice that the subconscious hum that hovered around him all the time dimmed when they passed through the scorched areas. It was as if he had been disconnected from the woods, a sensation that left him feeling hollow inside.\n\nAbella noticed this, her eyes dropping to the ground.\n\n\"I couldn't control myself,\" she explained, but he stopped her by putting his arm around her shoulders.\n\n\"I always knew you were hot,\" he joked. \"Guess we now have proof, eh?\"\n\nShe elbowed him in jest, a casual act on her part that knocked the wind from his lungs. He coughed and took a moment to compose himself.\n\n\"It's just that I had no idea you could breathe fire,\" he told her with a wheeze. \"Is it difficult?\"\n\n\"It depends. Some of my kind couldn't even light a candle, but their strengths lay elsewhere. I could boil away a small pond if I could control it.\"\n\n\"Why not practice, then?\" He put his hand on hers and squeezed to reassure her that he was just curious.\n\n\"Heartfire doesn't just burn things. It also changes you.\" She explored her forehead with her free hand, then let out a sigh. \"If I were to practice, my outer appearance would eventually change. Perhaps I would grow horns, or my face would deform. I like my body the way it is, much more human than monster.\"\n\n\"Is that why your kind can look so different from one other? Do you all look the same when you're born, and then change, or...?\"\n\nShe chuckled. \"When we hatch, we vary wildly in appearance. However, the use of heartfire always results in a more fearsome visage. My flames are so strong that I fear what I could become.\"\n\n\"I see. Fire breath that could change the appearance of the user. Interesting.\" Mike stroked his chin thoughtfully.\n\nThey moved away from the scorched clearing and toward one of the nearby hills. Eventually, they found themselves in the rocks that surrounded the hot springs. All around him, he could hear the mutterings of the forest, with the occasional chatter of the spiders.\n\n\"Something on your mind?\" Abella asked. \"You're distracted.\"\n\nHe didn't even know where to begin. Sensing the forest was likely related to his interlude with Amymone before coming here, and he definitely didn't want to bring up the spiders. Struggling to come up with an answer for her, he thought about his discussion with Emery.\n\n\"You've been at the house a long time. Did you ever sense that it was alive?\" he asked.\n\n\"Hmm. Interesting question.\" She paused, her tail crunching against some rocks through the thin layer of snow. \"I guess it depends on what you mean. Ever since you came, I would argue that it feels more alive than ever.\"\n\n\"I don't mean in a metaphorical sense. I mean that it's sentient.\" He explained how he sometimes spoke with the house while wearing its body, and then went ahead and told her about the dream from the previous night. When he finished, Abella regarded him with glittering eyes.\n\n\"You know, my kind used to talk about the Earth Mother,\" she said. \"This planet is a giant rock that hurtles through space with a molten core. In this way, she is not so different from our kind. I wouldn't say we were a religious people, but my mother was fond of saying 'if the Earth Mother wills it' when making important decisions.\"\n\n\"Do you think the planet is alive?\" Suddenly curious, he found a nearby rock and sat down.\n\n\"Life isn't something we can so casually define,\" she answered. \"I would argue that she lives, in her own way. But could you talk to her? Perhaps not.\"\n\n\"The forest is alive. I can hear it, right on the edge of my thoughts.\" Even now, it was like voices being carried across the wind.\n\n\"Is it the noise that bothers you?\" Abella laughed. \"I hear everything. It can be very obnoxious.\"\n\nMike nodded. \"It's like hearing pieces of a conversation. I want to know more, but the words just aren't there. And I don't like the idea that the cabin and the house are alive, but won't just talk to me like this. It's always on their terms, and often in riddles.\"\n\n\"Maybe it's no different than listening to the forest. Maybe when you speak, they don't always hear you.\" She looked around at the trees. \"I bet you can't understand the woods because they aren't fully awake yet.\"\n\nRealization blossomed through him. Was that the key to finding out more about the house and the great game? As the house expanded, so had his interactions with it. Did he need to do more for the house to notice him?",
        "Then again, that was the same line of thinking that had led Emily astray. Her need to fill the home with cryptids had segued into protecting its occupants at all costs. Led astray by the shadow, her desire for power had ultimately led to her tragic demise.\n\n\"Damn,\" he muttered in frustration. The last thing he wanted was to see his own desire to understand the Great Game be twisted into a journey toward madness.\n\n\"Come.\" Abella took him by the hand. \"Let's see if we can find someplace where the woods have woken up already. Maybe then, you can put your mind to rest.\"\n\nShe had misunderstood him, but he didn't feel the need to correct her. Abella led him through the forest, taking him through heavy brush where no trails existed. She would often turn around and walk backward, her wings unfolding just enough to push aside the foliage and allow them to pass unhindered.\n\n\"I saw this spot the other day,\" she explained as she guided him. \"It's not too far from the hot springs, and it gets plenty of sunlight.\"\n\n\"What do you mean?\" he asked, but she only grinned in response.\n\nThe hum inside his head grew louder, and they moved into a clearing with a river running through it. Steam hovered above the water in places, fed by small bubbling pools on the shore. The snow here was melted along the banks of the stream, and the nearby trees rustled in the wind.\n\nThe humming had been replaced by the sound of music. Ethereal in nature, he couldn't identify a single instrument being played. It was hundreds of voices all at once, singing a song of waking.\n\n\"Well?\" Abella asked. \"Is it different here?\"\n\nHe nodded, then wiped a tear from his eye. It was a song of hope, one that immediately reminded him of Amymone. Amongst the trees, he could hear the steady chittering of the spiders as well, raising their voices to join in the harmony. While the woods sang of waking and sunlight, the spiders sung of the hunt to come. They were hungry, yet hopeful.\n\n\"There's so much to hear,\" he told her. \"It's actually quite pleasant. This spot is beautiful, thank you for bringing me here.\"\n\nShe nodded in approval, then knelt down by the stream. \"I don't hear what you do, but it's the same. The rustling of the leaves. The sound of snow dripping, animals scurrying everywhere. But in a way, we are both hearing the heartbeat of the earth mother. At least, that is what my mother would say.\"\n\nContent to listen for a while, he closed his eyes and let the music flow through him. The tune had been nonsensical at first, but now he could pick out some of its nuances. The trees whispered to one another in singsong voices, and the clusters of grass that had pushed through the snow made a sound like tinkling bells.\n\nBehind the music, he picked up on a background melody consisting of deep bass tones. Doing his best to tune out the others, he focused on those deep beats, and was surprised when his magic responded. It spiraled around inside of him, unwinding in slow motion.\n\nIn the darkness of his own mind, he suddenly saw the clearing around him in intricate detail. Every blade of grass, rock, and tree was there for his perusal. Waves of light pulsed through them from below the ground, diffracting and changing colors as it passed through the foliage. The grass glowed a cheerful blue, while the trees were yellow and green. The rocks soaked up the noise, appearing black to his mind's eye.\n\nHe was humming now. It was like being a child again and trying to hum along with the vacuum cleaner. The vibrations filled his body and resonated outward, causing the colors around him to shift and glow even brighter. By altering the pitch of his voice, he could cause different elements of the clearing to ignite like tiny stars.\n\n\"Are you doing this?\" Abella's awe-filled voice sounded far away.\n\nHe opened his eyes to see that the clearing was no longer bound in snow. The grass and bushes had shoved their way free of winter's icy embrace, and the trees rustled as if caught in a heavy wind. All around them, flowers were blooming and turning to face the sun.\n\nIt wasn't just the flora that was reacting either. Woodland creatures were appearing along the edge of the clearing. Squirrels and raccoons sat in trees, and a pair of bucks circled the outside. Mice sat on their haunches by the river's edge, their eyes shining with curiosity.\n\nThe river sparkled in the sun's light as bubbles broke free of its surface and floated in the air, bouncing around like tiny beach balls. The air shimmered with motes of light that swirled around him like fireflies, his magic manifesting in a new way altogether.\n\nThis was like Naia's magic, he thought. How many times had he seen her entrance the small creatures of the neighborhood with her songs? Stunned by this development, he turned to face Abella. The gargoyle's eyes were bright with wonder as she held up a hand and a finch landed on it and sang to her.\n\n\"It's almost like a fairy tale,\" she whispered.\n\nAfraid he would break the spell, he said nothing. Animals approached them both, bowed as if paying their respects, then disappeared into the woods. Mike picked some golden flowers that sprouted by his feet and walked toward Abella.\n\n\"These are for you,\" he told her, but was surprised to see that the flowers had woven themselves into a crown. There was no beginning or end, it was almost like the stalks had melted into each other.\n\nSmiling, Abella took the crown from him and placed it on her head.\n\n\"Thank you.\" She placed her hands against his chest, then slid them down his sides and around his waist. \"I didn't know a walk with you could be so exciting.\"\n\n\"Abella, I...\" He was cut off when she pressed her firm lips against his. Her hands slid up to his shoulders, but then down to his butt. She squeezed him, then pulled him against her.\n\nThe music around them intensified, but Abella showed no reaction to it. Assuming only he could hear it, he was suddenly distracted by the feeling of Abella's flat stomach rubbing against his groin.\n\nHe moved his hands up her back until he found her wing joints. She moaned into his mouth as he rubbed them, then moved a hand down to the base of her tail. She crouched down and pulled him with her until she was on her back. The thick reeds of grass leaned away from them, silhouetting Abella's body on the ground.\n\nMike broke the kiss and straddled her, his fingers moving along her chest. She pressed her breasts together and grinned.\n\n\"I saw something in one of my shows that I kind of want to try with you,\" she said with a blush. \"It's called a boob fuck.\"\n\nHe didn't have the heart to correct her online terminology, so he pulled off his pants to oblige.\n\nThough the air was cold, he barely felt it. Abella's body was radiating heat that he now had a better understanding of, and he shifted his hips forward until his pelvis was just below her breasts.\n\n\"Like this?\" he asked, then pressed his cock between her breasts.\n\n\"Almost.\" She leaned forward enough to lick his cock and then smear her spit along the length of his shaft. \"That should work.\"\n\nWhen she laid back down, he pushed forward. As firm as they were, they didn't yield at all. The sensation was nice, and she stuck out her tongue to tease the head of his cock whenever it poked above her breasts.\n\n\"This feels good, but what do you get out of it?\" he asked.\n\n\"Are you kidding? I can feel how warm and soft it is. Well, relatively speaking.\" She squeezed her breasts together, which increased the pressure on his shaft. \"And I'll admit that I love how fragile you feel.\"\n\n\"Fragile?\"\n\nShe smirked. \"I can easily crush a rock between my breasts. It's...one of those weird things you do a few times for fun when you're young and tired of looking at birds on the cathedral roof.\"\n\nIt was an oddly specific statement, but Mike let it go. He could see Abella's cheeks darkening in passion as he fucked her breasts, and knew that she was getting far more out of it than he was. He didn't mind. After all, sex wasn't about keeping score, and if this was something that excited her, he was happy to oblige.\n\nShe grunted, and her hips lifted off the ground. When he looked back, he saw that she was teasing her pussy with the pliable tip of her tail. It was a bit difficult, but he was able to reach back to help penetrate her with her own tail.\n\nAbella licked her lips, and then licked the head of his cock. Precum created a sticky strand that temporarily connected them until she broke it with her finger and then shoved it in her mouth.\n\n\"Yummy,\" she commented, then gasped. Her eyes flashed with an inner light and a breeze blew through the clearing, ruffling his hair.\n\n\"Everything okay?\" he asked.\n\n\"Yeah, it's fine.\" She grabbed the shaft of his cock and gave him a couple of tight strokes. He groaned as she managed to extract some more cum, and then ate it. The same phenomenon manifested, and she closed her eyes and groaned.\n\n\"What's happening?\" he asked.\n\n\"You've changed,\" she told him. \"Since the last time we did this, anyway. Your essence, it has become far more...potent.\" She arched an eyebrow at him.\n\nHe didn't bother trying to come up with an explanation. Ever since his threesome with Dana and Quetzalli, and the previous night's dream, he had felt different. His magic was no longer confined to crawling sparks, or sex lightning as he called it. Something bigger was happening to him, and he was really only along for the ride.\n\nHe moved down her body, and she groaned in disappointment when his cock was no longer between her breasts. Her legs moved apart, and he maneuvered himself between them to get a clear view of her tail. He took it from her hands and spent a few minutes fucking her with it. The stone of her tail was even smoother than her breasts, as if it had been polished.\n\n\"You have something I want far more than my tail,\" she finally muttered.\n\nHe was about to pull her tail out but paused. After watching all three of her labia expand and contract to accommodate the girth of her tail, it occurred to him that she could probably be stretched even further.\n\nHe lowered his bare ass onto her tail, using it to support his weight. Once his cock was just outside her pussy, he pulled her tail out until it tapered to a blunt point. Satisfied that what was about to happen was possible, he rubbed his cock along her tail and then held them together before pushing them back against her labia.\n\n\"Why not both?\" he asked, and then pushed his way forward.\n\nAbella gasped and slammed her hands into the ground hard enough to tear gouges in the turf. Mike groaned with effort as he attempted to handle his own cock and her tail, eventually stretching out her lips. Double penetrating her vaginally was difficult due to her stony exterior, but her interior was hot and inviting. Her tail looked smooth from a distance, but actually had ridges that rubbed against the bottom of his shaft as he pressed into her.\n\nThe gargoyle had slipped into French, her eyes closed as she released a monologue of words \"Oh mon Dieu, Merde! Putain oui!\"\n\nAround them, the clearing blazed with color as the stream erupted. Bubbles circled them, each one looking like a tiny plasma ball as the sparks that formed along his body jumped into them. He watched in astonishment as his magic spread out and dominated the clearing.\n\nFlowers bloomed in fast forward until they exploded, and the trees shook so hard that he thought a storm was blowing in. All the while, Abella cried out as her hands and feet tore grooves in the dirt and stone beneath them.\n\nHe was shaking now, unable to control his muscles as his magic raced free. One moment, it felt like electricity. The next, it became music. It was wild and uncontrollable, and he had no idea how to make it stop or otherwise control it.\n\nAbella grabbed him by the thighs, her fingers pressing into his flesh hard enough that he gritted his teeth in pain. Letting go of her tail, he pumped himself into her tight, pulsing sex as tiny spurts of cum leave his body. The water was circling them now, hissing with magic.\n\nAbella's wings unfurled, crushing the nearby flowers as she let out a cry. Mike leaned forward to kiss her breasts, but she put up a hand and held him back. Steam rose from her sternum as bubbles popped against her skin, and when she came, a tiny burst of heartfire shot into the sky from her mouth and vanished in the breeze.\n\n\"Don't...not inside...\" she managed to gasp out between balls of fire.\n\n\"Holy shit!\" It occurred to him now that whatever was happening to him was now being directly channeled into her body as fuel. He moved his hips until his cock popped free, causing her tail to unfold beneath him with a thud.\n\nThe cold air on his cock sent chills up his spine and he let out a grunt and grabbed the base of his shaft. Uncertain where to spill his seed, he let out a groan and blasted thick ropes of cum all across Abella's stomach and torso.\n\nThere was a thunderclap overhead as the clearing came to a standstill. Bubbles turned into mist that fell from the sky like a light rain, and he fell forward onto Abella, fully aware that he was also lying in his own bodily fluids.\n\nThe gargoyle sighed and played with his hair.\n\n\"Are you okay?\" he asked.\n\nShe nodded. \"I will be,\" she said. \"I could feel your magic deep inside, traveling through my body. When it reached my heart, I...couldn't hold it in any longer. I was afraid if you came inside of me, I might explode.\"\n\n\"That's...not a thing, is it?\"\n\nShe laughed. \"No, not literally. I eat energy, and I haven't felt so full in a long time.\" She patted her belly for emphasis.\n\nHe looked up at her, rolling his head along her breast so that he could see her better. \"It didn't happen to heal your wing did it?\"\n\n\"Hmm?\" She flexed her wing and he saw the cracks were still there. \"Should it have?\"\n\n\"I suppose not.\" It would have been damn convenient though.\n\n\"Mike?\" Abella moved her hand into his hair and held him close. \"Are you glad I came?\"\n\nHe ran his hand along her belly, then squeezed her hip. \"Of course, I am.\"\n\n\"Am I...are we enough for you? Me and the others?\"\n\nHe could feel the insecurity in her voice, the sudden shift in her tone. Where was this coming from? He had a pretty good idea, but didn't want to discuss his relationship with Velvet. Even he didn't entirely know what was going on there.\n\n\"Each one of you is more than I can handle,\" he told her. \"But I manage, somehow. I spend every day hoping that I'm still enough. I'll admit that there are times I worry that I'm neglecting one of you, or that I haven't given you enough attention. I promise it's purely a numbers game, there's only one of me after all.\"\n\n\"I see.\"\n\n\"I'm sorry if I've ever made you feel forgotten.\" He gave her another squeeze. \"But I promise, I'm trying my best.\"\n\nShe squeezed him tight, which made his back pop.\n\nThey laid there for quite some time. When he decided to help her up, he discovered that the crown of flowers on her head had rooted itself into the ground. All around them, the clearing was now filled with wildflowers growing several feet high, many having burst through the snow. Abella marveled at the sudden change in scenery, but Mike was filled with an uneasy chill.\n\nWhat was happening to him?\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nWill Beth get Jenny to quit screwing around and help her take down the horsemen? Will Mike figure out what's going on with his magic before it rages out of control?\n\nAnswers in the chapters ahead. Until I see you next time, stay happy and healthy!\n\n~Annabelle Hawthorne"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "monstergirls",
        "harem story",
        "todays flavor is gargoyle",
        "mike likes it hot",
        "double vaginal penetration with a tail",
        "a proper nature walk",
        "meeting strange women in the woods",
        "a simple game of risk",
        "board game showdown",
        "crushing rocks with cleavage"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-72"
}