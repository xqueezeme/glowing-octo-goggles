{
    "title": "Bedroom Conversations Ch. 02",
    "pages": [
        "My name is Tom Rogers and I am 46 years old. My wife Peggy and I have been married since my third year of medical school. I am presently a practicing gynecologist at the Collins Clinic in Springfield Missouri. My marriage to Peggy is a good one. She is a wonderful wife, with only one fault \u2013 an obsessive desire to gossip with several other wives about the personal lives of the members of the club.\n\nEach evening in bed she regales me with stories from her luncheon group, her bridge group and the gals she sits around the pool with. All they talk about is sex. I suppose I should thank my lucky stars that she's just talking about it \u2013 not doing it!\n\nPeggy has a good life, but she earned it by working as a nurse to get me through medical school and residency, while raising two great kids at the same time. She worked her ass off! Now that the kids are in college, she's entitled to a little relaxation.\n\nEven so, she engages in a lot of ugly gossip. The ringleader, if there is one, is Lois, who is married to the head of pharmacy at the Clinic. She has somehow figured out a way to find out every medicine everyone is taking \u2013 from daughters on birth control pills to husbands on erectile dysfunction tablets.\n\nMONDAY NIGHT IN BED\n\nWe lay there quietly. Both of us had had a hard day. The bedroom was pitch dark as usual and I was ready for sleep, but I knew we would have our usual talk first.\n\n\"Any news?\" Peggy asked.\n\n\"I got a call from Rich Ames today. He wanted to thank me for the letter of recommendation I sent to his new clinic director. He's applying for academic privileges at the school. I think he'll do well in Kirksville. His divorce will be final in a few days.\"\n\n\"At least he dumped that slut wife,\" Peggy said.\n\nRich had divorced Carolyn for having sex parties with graduate students ten years younger than she was and Peggy hated her guts.\n\nI didn't want to tell her but I knew she'd find out sooner or later. \"Carolyn got a job.\"\n\n\"Who the hell would hire the bitch? The only skill she has is fucking!\"\n\nPeggy was angry. She got angry every time she thought about Carolyn Ames and the way she had cheated on her husband Rich.\n\n\"Well, the clinic hired her as a receptionist in the main lobby,\" I said and waited for the explosion.\n\nPeggy sat up in bed and shouted. \"The Collins Clinic hired that whore? I do not believe this! Who made that decision?\"\n\nThe room was pitch-dark but I knew exactly what Peggy's face looked like \u2013 red with rage.\n\n\"Larry Morris hired her,\" I said and awaited another explosion.\n\n\"Larry Morris is not even a doctor!\" Peggy shouted.\n\n\"That's true, but he's the head of clinic administration and that's who all the non-medical people work for and he's the one that does the hiring.\"\n\nPeggy laid her head back on the pillow and sighed, \"Does he know she's a whore?\"\n\n\"He knows Rich divorced her for adultery.\"\n\n\"There's only one reason he would hire her,\" Peggy said with determination. \"He wants to fuck her! And Larry Morris is married and he belongs to the club and his wife, Marie, plays bridge in my group and Larry is almost sixty and Marie is fifty-five and Larry wants to fuck a thirty-five year old slut.\"\n\n\"Honey, please,\" I said softly, \"you're jumping to conclusions. Maybe he ...\"\n\n\"Wait till I tell my luncheon group about this tomorrow,\" Peggy said menacingly.\n\nLike alerting the Gestapo I thought. Poor Larry and Carolyn are gonna be watched by a bunch of sharp eyed hussies \u2013 like field mice are watched by hawks.\n\n\"Good night Dear.\"\n\n\"Good night Dear.\"\n\nTUESDAY NIGHT IN BED\n\nPeggy had a determined look on her face when I turned out the light on the bedside table.\n\n\"I knew it,\" Peggy said.\n\n\"Knew what?\" I asked.\n\n\"The gals in my luncheon group all agree that Larry Morris wants to fuck Carolyn Ames,\" she said with determination.\n\n\"That makes it true?\" I asked.\n\n\"I might make a mistake, but all six of us cannot be wrong! He wants to fuck the bitch.\"\n\nI almost said something about the girls, but I bit my tongue.\n\n\"We've got to figure out what to do about Marie,\" Peggy continued. \"She's gonna find out about this sooner or later.\"\n\n\"Let me get this straight. Six old broads ... \"\n\n\"We are NOT old broads!\" Peggy interrupted.\n\n\"Excuse me. Six nice ladies sat around a luncheon table and talked about what to do about a woman who is married to a guy you THINK wants to screw the clinic receptionist?\"\n\n\"That's exactly what we talked about, and we don't THINK, we KNOW. We decided to do two things. First we are gonna work with Larry's secretary to keep an eye on Larry \u2013 Margie knows Donna real well. And second we are gonna alert Marie that there may be a problem down the road.\"\n\n\"At least it will give the 'girls' something to do,\" I said with a sigh. \"You girls sure enjoy that kind of work.\"\n\n\"It's necessary work,\" Peggy said. \"Someone has to do it. Good night Dear.\"\n\n\"Good night Dear.\"\n\nWEDNESDAY NIGHT IN BED A WEEK LATER\n\nPeggy and I lay quietly in the darkness. Finally she spoke.\n\n\"We were wrong!\" She said. \"He's not fucking her. She's sucking him off.\"\n\n\"Can you break that down for me,\" I asked in a pleading voice.\n\n\"Carolyn Ames is sucking off Larry Morris several times a week in his office. We got his secretary to keep watch. Donna pretended to go to lunch as usual but hid in an adjoining room. Carolyn Ames showed up and spent a half hour in Larry's office.\"\n\n\"Donna cracked the door just a tad and she saw Larry sitting in that big leather chair, leaning back with his eyes closed, and his pants at half-mast. Carolyn Ames was on her knees sucking his dick. And she was doing him deep throat!\"\n\n\"I'll be damned,\" I said. \"It's a quid pro quo.\"\n\n\"Yeah,\" said Peggy. \"The quid is a NEW job and the quo is a BLOW job.\"\n\n\"So now what?\" I asked.\n\n\"The bridge table is joining the luncheon group tomorrow and we're gonna discuss it with Marie and find out what she wants to do.\"\n\n\"Let me see if I understand this,\" I said. \"A dozen women are gonna sit around a table over lunch and discuss what to do about one of the wives whose husband is getting blowjobs from the clinic receptionist. And this is gonna stay reasonably private?\"\n\n\"No! You always exaggerate!\" Peggy said angrily. \"Not a dozen. There'll only be nine of us. And it will stay private ... well ... probably ... mostly private.\"\n\n\"I can't wait to hear what happens,\" I said.\n\n\"Good night Dear.\"\n\n\"Good night Dear.\"\n\nTHURSDAY NIGHT IN BED A WEEK LATER\n\nI had waited over a week with some enthusiasm to hear what \"the girls\" had decided to do about Larry Morris getting regular blowjobs from Carolyn Ames. Peggy didn't disappoint me, even though I had to wait a while to find out.\n\n\"We're not gonna do anything,\" Peggy said. \"Just let Larry keep getting sucked off.\"\n\n\"And why did you decide on that?\" I asked.\n\n\"Marie says it has greatly improved his attitude. He's not moody. He's more cheerful. And he still fucks Marie every Saturday night and he's more enthusiastic about that. Blowjobs seem to be doing him good and Marie hates to give blowjobs.\"\n\n\"Why am I having trouble understanding this?\" I asked.\n\n\"Because you don't understand women,\" Peggy said.\n\n\"Darling I have been told by dozens of women that my understanding of women is exceptional,\" I said.\n\n\"Okay, then, you don't understand SOME women,\" Peggy said. \"Look at it from Marie's point of view. Hubby is in a much better mood. He is a much better fuck. She doesn't have to suck him off \u2013 a slutty bitch is doing that for her \u2013 doing him deep throat which Marie can't do. And she can end it any time she wants by just walking in on him with his pants at half-mast and his dick in another woman's mouth.\"\n\nI thought about it. Well it did make some sense I suppose. Then I said the wrong thing. I thought I was joking but Peggy took it seriously.\n\n\"It improved his attitude? Darling, do you think my attitude might improve if ...\"\n\nI got no further with that thought!\n\n\"Don't even think about going there you horny bastard! I had enough of that with that Detweiler bitch!\"\n\nAt least she had the decency to laugh and start tickling my balls. Maybe she got my message. When I felt her lips on my cock I realized that she had gotten the message.\n\nMONDAY NIGHT IN BED A WEEK LATER\n\nFinally I had some good news for Peggy.\n\n\"Rich's replacement was interviewed today. His name's Rusty Embly. I'm on the committee and so is Pamela Grassley.\"\n\n\"I know \u2013 I had lunch with Pam and I'm already getting phone calls\"\n\n\"Phone calls?\"\n\n\"Yeah. Gail says the unmarried nurses are all on red alert \u2013 he's single and he's a doll!\"\n\n\"I didn't notice that.\" I said.\n\n\"I'm glad you didn't,\" Peggy said sarcastically. \"I don't want that kind of male flesh to attract your attention.\"\n\n\"Pam was on the committee that interviewed him. She didn't seem too impressed with him,\" I said.\n\n\"Good!\" Peggy said firmly.\n\n\"Good? Not impressed? Why is that good?\" I asked, puzzled that Pam was not impressed.\n\n\"It's good because Pam told me today at lunch that just looking at him made her pants get wet and she was trying to look kinda neutral so she wouldn't get that star-struck twinkle in her eye that tells a guy a girl wants to fuck.\"\n\n\"She likes him?\" I asked.\n\n\"She wants to fuck him. But more than that she wants to catch him. He's the first potential husband she's seen since she came to Springfield,\" Peggy said. \"She wants to tie him up and check him out to see if he is for real.\"\n\n\"Tie him up? Check him out. Let me get this straight. You and Pam talked about ways to entrap Rusty Embly?\"\n\nI was shocked. Well maybe not shocked but at least surprised.\n\n\"Not exactly entrap, but ... well ... you're getting the general idea.\"\n\n\"Good night Dear.\"\n\n\"Good night Dear.\"\n\nTHURSDAY NIGHT IN BED\n\nI turned out the light and we lay in the darkness for only a moment before Peggy spoke.\n\n\"We have a problem,\" said Peggy.\n\n\"A problem? What problem?\" I said.\n\n\"He's fucking that bitch!\"\n\n\"Who's fucking which bitch?\" I said.\n\n\"Rusty Embly is fucking Carolyn Ames,\" Peggy said with certainty. \"I knew the bitch would try to get him in the sack but I didn't expect it this soon. She drove him around Springfield on Monday and Tuesday and then she fucked him Tuesday night at his hotel and Wednesday night at her apartment.\"\n\n\"How the hell do you know that? What the hell do you girls do, hire private detectives?\"\n\n\"Her car was not at her apartment parking lot Tuesday night and his rental car was in her parking lot Wednesday night. She's a whore so there's only one conclusion.\"\n\n\"How the hell can you know about everybody's automobiles?\" I asked in amazement.\n\n\"There's six or eight of us. We just drive around and check things out and make a few phone calls and take a few notes and then meet at the club and exchange information.\"\n\nThe Springfield SS \u2013 the Gestapo! I thought.\n\n\"So now what?\" I asked.\n\n\"Pam and I had a long talk.\"\n\n\"Is she giving up on Rusty?\" I asked.\n\n\"Giving up?\" Peggy responded. \"Of course not. No more than I gave up on you when you started fucking Gladys Detweiler and the bitch was sucking your cock. Guys fuck sluts \u2013 gals have to learn to deal with that. In fact I told Pam all about Gladys Detweiler.\"\n\n\"You what?\" I shouted.\n\n\"I told her about that Detweiler bitch. I wanted her to understand that even the nicest guy will fuck a whore if that whore is good at something special \u2013 like the Detweiler bitch was good at sucking cock. So Pam and I had a long talk about cock sucking.\" \n\n\"I'm having trouble believing this,\" I said. \"You had a long talk about cock sucking while you had lunch in the dining room?\"\n\n\"We did. Do you remember when we were dating and I started sucking your cock?\" Peggy said.\n\n\"Yes I remember that.\"\n\n\"Do you remember that you didn't ask me to suck you off? It was my idea?\"\n\n\"Ah ... not exactly,\" I said trying to remember our experiences together twenty-four years ago.\n\n\"Well I started after my room mate Sally told me about her brother's experience fucking Gladys Detweiler. I had never sucked a cock before and Sally had to explain some things to me. It wasn't easy and it wasn't fun, but it was necessary. If that Detweiler bitch was blowing you I had to do it too.\"\n\n\"Well, I ... \" \n\nI did not know quite what to say.\n\n\"Fortunately,\" Peggy continued, \"Pam has experience sucking cocks. She doesn't particularly like to suck cocks, but she says she's pretty good at it if they're not the big ones \u2013 monster cocks she calls the big ones. The problem is we don't know how big Rusty Embly's cock is.\"\n\n\"Well,\" I said in a serious tone of voice, \"I don't think that was listed on his Curriculum Vitae.\"\n\n\"Don't be sarcastic,\" Peggy said. \"This is important. But Pam is still better off than I was because I never had the opportunity to suck any cocks before I met you.\"\n\n\"The opportunity?\" I asked.\n\n\"You know what I mean!\" Peggy said. \"Anyway we're getting ahead of ourselves. We have to set up a date between Pam and Rusty. The best way to do that is for us to have a party at the club for the two new members of the clinic, Rusty and Pam, and invite a few clinic members and their wives. We'll seat everybody as couples so Rusty and Pam will sit together quite naturally and they'll talk and maybe set up a date.\"\n\n\"Good night Dear.\"\n\n\"Good night Dear.\"\n\nFRIDAY NIGHT IN BED TWO WEEKS LATER\n\nPeggy's voice was harsh and critical in the pitch-dark bedroom.\n\n\"It's settled down to a routine now. Three times a week,\" Peggy said.\n\n\"Three time a week?\" I asked.\n\n\"The bitch is sucking off Larry three times a week during her lunch hour. She's on a liquid diet for lunch \u2013 a thick, white, creamy, liquid diet,\" Peggy said.\n\n\"Look, Peggy, I don't care what Carolyn or Larry are doing. That's their business. You said that Marie doesn't care. Why should WE?\"\n\n\"Because Carolyn's a whore and she's probably gonna start fucking Rusty again when he starts work at the clinic. When is that anyway?\" Peggy asked.\n\n\"Almost two weeks from now. Have you set up the dinner party for Rusty and Pam?\"\n\n\"I'll do that next week,\" Peggy said. \"Look Tom, I really want to get Rusty and Pam together. She's a nice girl. She needs a nice guy.\"\n\n\"You're having lunch with her a lot,\" I said.\n\n\"Yeah,\" said Peggy. \"Her practice is growing well. She thinks you are a very wonderful man \u2013 she keeps telling me how lucky I am. She still can't figure how I got you when all the other gals were after you and that Detweiler bitch was giving you all the pussy you needed.\"\n\nI laughed. \"How DID you get me \u2013 I forget.\"\n\n\"At the time I thought it was because I started sucking your cock and pumping my ass real good. But as I got older I figured out the real reason.\"\n\n\"Oh?\" I said. \"And what was that?\"\n\n\"Because you're a really nice man,\" she said sweetly. \"Not the kind of man to marry a whore. And you saw me as a really nice girl \u2013 the kind you wanted to marry.\"\n\n\"Does that mean you don't have to suck me off any more?\" I asked laughing.\n\n\"You bastard! I sucked you off just last week!\" Peggy said angrily.\n\n\"That was THREE weeks ago,\" I reminded her.\n\n\"Okay, three weeks ago, but at least I still pump my ass for you,\" Peggy said, laughing.\n\n\"Actually, Dear, I think you are doing that mainly for yourself!\" I said.\n\n\"Maybe. Good night Dear.\"\n\n\"Good night Dear.\"\n\nSATURDAY NIGHT IN BED TWO WEEKS LATER\n\nI turned out the lights and crawled in bed, wondering what Peggy was going to say about our dinner party. We had just returned from the club where we entertained several couples from the clinic plus Rusty Embly, who had started work earlier this week, and Pam Grassley, who had joined the clinic three months ago. Peggy had carefully arranged the seating so that Pam was seated next to Rusty.\n\n\"What did you think?\" Peggy asked me.\n\n\"I thought the party went well,\" I said. \"Both Pam and Rusty seemed to get along well with the senior clinic doctors we invited.\"\n\n\"I mean what did you think about Pam and Rusty?\"\n\n\"They seemed to get along well together,\" I said. \n\n\"You heard me invite them to the club tomorrow afternoon, didn't you?\" Peggy asked.\n\n\"I heard you. Why did you do that?\"\n\n\"You've seen her tits! In fact you spent most of an afternoon playing with them a couple of months ago,\" Peggy said with a laugh. \"I wanted Rusty to see those tits in a bikini.\"\n\n\"I wasn't playing with her tits,\" I said, defensively. \"We've been all through this whole thing and ...\"\n\nPeggy started laughing. \"I know baby I know. I'm just kidding. Pam talked about you being the most professional of professionals when you examined her. She keeps telling me how lucky I am to have you. She's hoping Rusty will be like you.\"\n\n\"Anyway,\" Peggy continued, \"I want Rusty to ask Pam out to dinner and maybe develop an interest in her. \n\n\"Well, good luck on that,\" I said. \"Good night Dear.\"\n\n\"Good night Dear.\"\n\nMONDAY NIGHT IN BED ONE MONTH LATER\n\n\"I had lunch with Pam today.\"\n\n\"How is your campaign to entrap Rusty Embly proceeding?\" I said with a chuckle.\n\n\"We are not trying to entrap him! Rusty has taken Pam out to dinner several times, always to nice places and the third date he kissed her goodnight,\" Peggy said.\n\n\"That sounds like progress.\"\n\n\"Yeah but it's not easy. Pam is horny as hell. She hasn't been fucked in three months. Taking her time is difficult. And we still don't know how big his dick is.\"\n\n\"His dick?\" I asked.\n\n\"You don't remember a thing I tell you!\" Peggy said angrily. \"That Ames bitch is deep throating Larry Morris three times a week. Rusty is going over to her place twice a week to fuck her and that's bad news.\"\n\n\"She's a busy girl.\"\n\n\"SHES A WHORE!\" Peggy shouted.\n\n\"Are you girls following everybody around?\" I asked.\n\n\"Don't be ridiculous. We just check out apartment parking lots and Donna keeps watch on Larry.\"\n\n\"Jesus!\" I said.\n\n\"But there is some good news,\" Peggy said.\n\n\"What's the good news?\" I asked.\n\n\"First, Rusty never takes Carolyn any place where he might be seen \u2013 always to a restaurant outside of town. That means he's only dating her for easy pussy. Second we know how much deep throat the bitch can do.\"\n\n\"I'm afraid to ask how you girls found that out,\" I said acting shocked.\n\n\"Larry has a six inch cock. That's not small, but it's not a monster either,\" said Peggy.\n\n\"Who measured it?\" I said laughing.\n\n\"Very funny! Ha-ha,\" said Peggy. \"We asked his wife Marie, of course.\"\n\n\"Pam said she can handle six inches, but not much more than that,\" Peggy said. \"But we still don't know what Rusty is carrying between his legs. So now we're trying to decide when she should fuck him.\"\n\n\"Let me get this straight. Your luncheon group is sitting around a table at the club trying to decide when Dr. Pamela Grassley should fuck Dr. Rusty Embly?\"\n\n\"My luncheon group, and of course my bridge group,\" Peggy said. \"Yes we are talking about when would be best. This is important so don't get sarcastic.\"\n\n\"And Pam is listening to your opinions?\"\n\n\"She is. This is a small town. Rusty grew up in a small town. Pam doesn't want to come across as ... well, as too easy ... you know. On the other hand she doesn't want him to think she doesn't like him. It's a difficult decision.\"\n\n\"Pam's upset,\" Peggy continued, \"because she can't just screw him casually, like she would at the university. I told her she needs to act like a lady \u2013 one he might want to marry.\"\n\n\"What did Pam say to that?\" I asked.\n\n\"She practically screamed at me. 'How the hell do you get a man interested in you if you act like a lady all the time? How do I get his attention?'\"\n\n\"Then she asked me how I got your attention.\"\n\n\"What did you tell her?\" I asked.\n\n\"The truth.\"\n\n\"The truth? What truth?\" I asked.\n\n\"I said I got your attention by stripping down and fucking you in the back seat of a beat up old Plymouth and learning to suck cock.\"",
        "\"My God! You didn't tell her that!\" I said, shocked.\n\n\"I did.\" Peggy said. \"That's the way girls talk about serious stuff \u2013 like catching a man. But then Pam said 'He's got first date pussy standing in line!' And I've talked to Gail and she's right.\"\n\n\"What does that mean exactly?\" I asked.\n\n\"It means,\" Peggy said patiently, \"that Gail knows at least three nurses who can't wait for Rusty to ask them out on a date. Gail thinks they will fuck him the first chance they get.\"\n\n\"This thing is like a soap opera,\" I said. \"Good night Dear.\"\n\n\"But it's real! Good night Dear.\"\n\nMONDAY NIGHT IN BED ONE MONTH LATER\n\nI lay in the darkness thinking about my wife and her friends collecting information on the clinic's new invasive cardiologist, Rusty Embly, and our new surgeon, Pamela Grassley. Peggy kept me informed about what \"the girls\" had learned. This was becoming the center of gossip for her luncheon group. It was like I was watching a daytime soap opera.\n\n\"What happened at lunch today?\" I asked.\n\n\"Bad news and even more bad news,\" said Peggy.\n\n\"Give me the first bad news first,\" I said.\n\n\"Rusty and Carolyn took a weekend trip together. We don't know where.\"\n\n\"How do you know they left town?\" I asked, knowing that \"the girls\" were watching both Rusty and Pam like hawks.\n\n\"Pam's car was in her lot and she was not at home and Rusty's car was gone all weekend. They must have taken a trip.\"\n\nDamn I thought. This is what a small town full of nosey wives is like! Pam was not gonna like this. Rusty knew Carolyn was a whore so he never took her any place where he would be seen \u2013 he probably thought no one knew he was fuckin her. Of course every lady at the club knew, including the young surgeon he was starting to get serious about.\n\nThis is a crazy situation I thought. I remembered Peggy reminding me of Gladys Detweiler, a sorority sister of hers who I had fucked twenty-four years ago. I had no idea that Peggy knew about her until she surprised me with that information twenty-four years later. Maybe if Pam and Rusty get married the same thing might happen to him. I chuckled.\n\n\"What's so funny?\" Peggy asked.\n\n\"The way you girls keep track of everything,\" I said, not wanting to raise the subject of Gladys Detweiler.\n\n\"What's the more bad news?\"\n\n\"The more bad news is that Rusty still has at least three horny nurses flirting and trying to get his attention. Gail's told me all about them. They think he's a doll.\"\n\n\"What's wrong with that?\" I asked.\n\n\"They're NOT whores is what's wrong with that,\" Peggy said. \"They are probably nice girls interested in marrying a good-looking doctor. They are a much bigger problem than that Ames bitch \u2013 he'll never get serious about her. He'll just fuck her!\"\n\nI chuckled. \"Whores are a problem and nice girls are an even bigger problem. Are Rusty and Pam dating regularly?\"\n\n\"Yeah,\" said Peggy, \"and she invites him in for a drink and a little ... well ... romance. He likes her boobs. But she hasn't fucked him yet.\"\n\n\"I can't wait to hear the end of this story. Good night Dear,\" I said.\n\n\"Good night Dear.\"\n\nTUESDAY NIGHT IN BED\n\nPeggy broke the silence in the darkness.\n\n\"I had lunch with Gail today,\" she said.\n\nI knew exactly what was coming next. I had seen Carolyn Ames this morning for a bout of cystitis, probably related to an unusually large amount of sexual activity over the weekend. \"The girls\" had been right about Carolyn and Roger taking a weekend trip together.\n\n\"Oh? And what did you two talk about?\" I asked innocently.\n\n\"You know damn well what we talked about. That whore came to see you for cystitis this morning. Too much fucking over the weekend! The bitch!\"\n\n\"Well,\" I said, \"you know I don't like to talk about my patients, but, yes, she had cystitis. Bride's cystitis, as some people call it.\"\n\nPeggy shouted in the darkness. \"Bride's cystitis hell! Whore's cystitis is what it was.\"\n\n\"But that's not all,\" Peggy said. \"What Carolyn told Gail after you left the room was what worries me. There's good news and bad news.\"\n\n\"Oh? And what is the bad news?\" I asked.\n\n\"She told Gail that her boyfriend was unusually large. Shit! If that's what Pam calls a monster cock it'll be too big for her to deep throat. But I'll bet that whore sucks it.\"\n\n\"What is the good news?\" I asked.\n\n\"The bitch told Pam that Rusty made her shave her beaver,\" Peggy said. \"He likes bare pussy. And you examined her! Why didn't you tell me she had shaved her beaver?\"\n\n\"You know I don't like to talk about my patients,\" I said.\n\n\"You bastard! I'll bet you were disappointed when the bitch spread those long lovely legs and showed you a naked snatch.\"\n\nI chuckled. \"I guess that means you regain your crown of having the hairiest pussy in Greene County.\"\n\n\"You know I never worry about you, but I'm happy to regain my title. I had coffee with Pam this afternoon and told her the good and bad news. Pam's happy about Rusty's preference for shaved pussy because she shaves her own pussy. But she's upset about the dick. What did you do for the bitch?\"\n\n\"An oral broad spectrum and no sex for ten days,\" I said.\n\n\"She can still suck off Larry,\" Peggy said, with a chuckle. \"But Rusty will go without for over a week. Maybe now's the time for Pam to fuck him. I'll ask the girls at lunch tomorrow what they think.\"\n\n\"I don't believe this is real. Too bad you didn't have a luncheon group to give you advice when we were dating,\" I said.\n\n\"Advice wouldn't have done me any good. Once those soft hands of yours started creeping up my thighs I didn't have a chance. All I could do was giggle and spread my legs. You had me! I was in love with you, you bastard! You were gonna get all the pussy you wanted because I was afraid you'd dump me like you did so many other gals you dated.\"\n\n\"Darling, I was in love with you too.\"\n\n\"Yeah? Well not enough to keep you from fuckin that Detweiler bitch!\" Peggy said harshly.\n\n\"I DID quit fucking her!\" I reminded Peggy.\n\n\"Not until I promised to marry you and agreed to work nights as a nurse to pay for your medical books,\" Peggy said.\n\nArguing with a woman was frustrating. Nothing they said was true or made any sense.\n\n\"It wasn't that way at all! It was over a year till you graduated and started working as a nurse. We never talked about it when I proposed,\" I said, in helpless frustration.\n\n\"You got me PREGNANT and made me work nights,\" Peggy almost shouted.\n\n\"We wanted to have a baby. We were trying to have a baby. You wanted to keep working. I told you that you could quit any time.\"\n\nNothing I said seemed to have any effect. Peggy stayed mad.\n\n\"You even fucked her \u2013 with me watching from my window \u2013 the very night before you proposed to me,\" Peggy shouted. \"And you had my ring in your pocket.\"\n\n\"I didn't KNOW you were watching. It was only ... well, sorta ... well, sorta a good-bye fuck. And I was ...\"\n\n\"A GOOD-BYE FUCK? WHAT THE HELL IS A GOOD-BYE FUCK?\" Peggy was screaming now.\n\nI gave up. Nothing I could say would fix this.\n\n\"It was twenty-four years ago,\" I said helplessly. \"Good night Dear.\"\n\nA long pause and then, \"Good night Dear.\n\nWEDNESDAY NIGHT IN BED\n\nToday had been a hard day in the office. I lay in the darkness hoping to get a restful sleep. Peggy's voice was soft and she sounded nervous.\n\n\"I hope we did the right thing.\"\n\n\"The right thing?\" I asked.\n\n\"We talked it over today at lunch \u2013 all six of us. Then I had coffee with Pam this afternoon. We think she should fuck him this weekend. Rusty might be in the mood and they've been dating long enough and that bitch will still be getting treated for cystitis and Pam is so horny she can't wait any longer and ... well ... I just hope it's the right thing to do.\"\n\nPeggy was really worried about this. I was more amused than worried. Of course I hoped that both Rusty and Pam would have happy lives but it was not the central focus of my attention, as it was for Peggy and \"the girls\" at the club.\n\n\"Well,\" I said, \"all you can do is wish her luck.\"\n\n\"They go out every Saturday night,\" Peggy said and then she laughed. \"Just like WE did twenty-four years ago.\"\n\n\"Did 'the girls' have any suggestions about the position they should use to fuck?\" I said.\n\nPeggy's laugh vanished.\n\n\"You're being sarcastic again. Dammit!\" Peggy said. \"This is serious. I think Pam is falling in love with him. She keeps talking about how nice he is and how considerate. Just like you. And they make a perfect pair \u2013 both are doctors so they understand the problems that doctors have.\"\n\n\"But we still have a problem,\" Peggy continued.\n\n\"What's that,\" I asked.\n\n\"We don't know how big he is and whether Pam can do him deep throat. We don't even know if he likes it that way. But we DO know that the bitch he is fucking now is doing Larry Morris deep throat and Larry's got six inches.\"\n\n\"Well dear,\" I said, \"Pam will just have to work that out for herself.\"\n\n\"Pam said she's gonna spray her throat just in case,\" Peggy said.\n\n\"Spray her throat?\" What was that all about I wondered?\n\n\"Yeah,\" Peggy said. \"Local anesthetic \u2013 you know \u2013 so she won't gag if ... well if he's real big.\"\n\n\"You girls think of everything,\" I said laughing.\n\n\"That was Pam's idea,\" Peggy said. \"Good night Dear.\"\n\n\"Good night Dear.\"\n\nMONDAY NIGHT IN BED\n\nNo sooner had I turned out the light than Peggy started talking and almost crying.\n\n\"It was a disaster. An unmitigated disaster! I still can't believe it. And YOU, you bastard! You're going to laugh about it.\"\n\n\"What exactly am I going to laugh at?\" I asked genuinely puzzled. \"What is this all about?\"\n\n\"It's about the date that Pam had with Rusty Saturday night,\" Peggy said. \"She told me about it today and we both almost cried, sitting there in the coffee shop.\"\n\nThis sounded serious. \"Okay, I promise I won't laugh,\" I said.\n\n\"That's a promise you won't be able to keep,\" Peggy said. \"You won't keep the promise because you're a man and all men are bastards. Still, I gotta tell you.\"\n\n\"Everything went perfectly Saturday night at dinner,\" Peggy said, \"After Rusty took Pam back to her place, they sat on the couch, as usual, having a cordial, and kissing and, well you know \u2013 just like always.\"\n\n\"Then Pam took Rusty by the hand and led him into her bedroom and they kissed some more and got undressed and into bed. She spread her legs and she was so wet he just slipped into her easily.\"\n\n\"And then ... and then ... Oh shit! It hurts to think about it.\"\n\n\"What hurts to think about?\" I asked.\n\n\"And then the phone rang! It was the ER. Pam was on surgical call this weekend!\"\n\nI broke my promise. I laughed. In my head I saw Rusty Embly with a big hard on, lying on his belly between Pam's legs supporting himself on his arms. And Pam, her long, lovely legs up in the air straddling him, while she talked on the phone to the ER physician about a patient. I couldn't stop laughing as I tried to picture them in bed together. Did he stay in the saddle? Did he lose his erection? Did he roll off of her?\n\n\"You bastard! I KNEW you'd laugh! It's not funny. Damn you!\" Peggy had been about to cry and now she was furious. Furious at me!\n\n\"What was the call about?\" I asked, gaining a little control of myself.\n\n\"An appendix \u2013 but not just an appendix,\" Peggy said. \"It was retrocecal and complicated and she couldn't get to it with a scope so she had to do it open. And by the time she'd finished and got the patient to post-op, it was three AM!\"\n\n\"So that's what he was talking about today in the hall,\" I said.\n\n\"What who was talking about?\" Peggy asked.\n\n\"The chief of surgery,\" I answered. \"He stopped me in the hall today and told me my committee had done a great job in selecting the latest addition to our surgical staff. He said Pam was a very talented young surgeon. He must have been talking about that retrocecal she did over the weekend.\"\n\nThen I chuckled. \"And he'd be even more impressed if he knew the conditions under which she was performing that operation.\"\n\n\"It's not funny!\" Peggy insisted.\n\n\"Well that's what happens when you're married to a surgeon. It's happened to us a lot of times and ...\"\n\n\"But not when we're fucking! And most assuredly not when we were fucking for the first time!\"\n\n\"It was a good thing I didn't have a phone in that old Plymouth,\" I said. \"Well what finally happened.\"\n\n\"When Pam got back it was after three AM and Rusty had gone home. She went to sleep crying and slept five hours. Then she made rounds and called Rusty and he invited himself over. Pam was exhausted and she couldn't drink because she was still on call, but she gave him a blowjob on the couch and then they went into the bedroom and fucked.\"\n\n\"How did all of that go?\" I asked.\n\n\"She said he had a big cock and pushed her head down to make her take it deep throat. She was barely able to do it \u2013 but she did it. She said it was the biggest cock she ever took deep throat.\"\n\n\"That's sounds encouraging,\" I said. \"Then what?\"\n\n\"He took her in the bedroom and as Pam said, 'He fucked my brains out!'\"\n\nI laughed. \"And Pam's got a lot of brains.\"\n\n\"Don't laugh,\" Peggy said. \"She's sore as hell and he's coming back tonight for more. I think not having that Ames bitch available built up his libido.\"\n\n\"Well,\" I said, laughing, \"that Ames bitch will be available next weekend.\"\n\n\"That's not funny,\" Peggy said.\n\n\"It will keep her ass in gear,\" I said laughing. \"Like Gladys Detweiler kept your ass in gear.\"\n\nI was trying to be funny but the subject of Gladys Detweiler was not one that Peggy liked even after twenty-four years.\n\n\"You bastard! All men are bastards,\" Peggy said. \"Pam is serious about this guy.\"\n\n\"Do you think he will get serious about her?\" I asked.\n\n\"Maybe,\" said Peggy. \"I think she's got him hooked \u2013 but to reel him in is gonna take a hell of a lot of woman's work. She's got that Ames whore to worry about and at least three young, horny nurses. She's got woman's work to do to keep him satisfied if she's gonna reel him in.\"\n\n\"Well I hope she keeps him satisfied.\"\n\nPam was very impressed about the last thing he said to her just before he left,\" Peggy said.\n\n\"What was that?\" I asked.\n\n\"He said, 'Years from now we're gonna laugh about this weekend.' Then she said it a second time very softly and then she asked me if I thought 'years from now' meant he thinks they'll still be together years from now? I think she's in love.\"\n\n\"Maybe that's what he meant,\" I said. \"I hope so. They'll make a nice couple.\"\n\nWe lay in silence for a minute until Peggy spoke softly.\n\n\"He's over there right now and she's sore but she needs to keep him satisfied so he won't go back to that Ames whore. That's woman's work.\"\n\n\"Well you sure kept your ass in gear twenty-four years ago and you reeled me in.\"\n\nI realized she was thinking about us back then and what that young stud was doing to her friend at this very moment. I heard her breathing grow heavy and years of sleeping with this wonderful woman told me she was turning on. I waited till she spoke again.\n\n\"Darling, my ass is still in gear.\"\n\nA nice invitation, I thought. I climbed into the saddle \u2013 she was wet. Let me see now, how do I want these long, lovely legs? Why not spread wide and high in the air? I like the way her feet bounce up and down when she pumps her ass.\n\nIf Rusty is doing his job properly, there's another pair of long, lovely legs high in the air on the other side of town and another ass pumping. And I'll bet those feet are bouncing like hell!"
    ],
    "authorname": "LynnGKS",
    "tags": [
        "boss",
        "blow job",
        "employee"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/bedroom-conversations-ch-02"
}