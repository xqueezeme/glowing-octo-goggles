{
    "title": "Bedroom Conversations",
    "pages": [
        "On of my devoted readers, John, does not like the really dirty stuff that so many of you like to read (dripping cum and humiliated husbands and all that) and he wants me to write some nice porn with a little humor. So here is a nice, but not too dirty story, dedicated to John. There will be more really dirty stuff for you guys with filthy minds later. \n\n***\n\nMy name is Tom Rogers and I am 46 years old. My wife Peggy and I have been married since my third year of medical school. I am presently a practicing gynecologist at the Collins Clinic in Springfield Missouri. Our two kids, a son and a daughter, are both in college at MU and both are going to become doctors, following in the footsteps of their grandfather and me. We have had a fortunate life and we are very thankful for it.\n\nMy marriage to Peggy is a good one. She is a wonderful wife, with only one fault -- an obsessive desire to gossip with several other wives about the personal lives of the members of the club. When I tell her she is overdoing it she says that everybody does it and there's no harm in it.\n\nEach evening in bed she regales me with stories from her luncheon group (6 gals twice a week), her bridge group (four gals once a week) and the gals she sits around the pool with. All they talk about is sex. I suppose I should thank my lucky stars that she's just talking about it -- not doing it!\n\nPeggy has a good life, but she earned it by working as a nurse to get me through medical school and residency, while raising two great kids at the same time. She worked her ass off! Now that the kids are in college, she's entitled to a little relaxation.\n\nEven so, she engages in a lot of ugly gossip. The ringleader, if there is one, is Lois, who is married to the head of pharmacy at the Clinic. She has somehow figured out a way to find out every medicine everyone is taking -- from daughters on birth control pills to husbands on erectile dysfunction tablets. I think she \"helps out\" her husband in the pharmacy from time to time.\n\nHusbands who need Cialis regularly or just an occasional purple pill are discussed around the luncheon table at the club. Another one of the wives is Trish, whose husband practices Urology at the Clinic, and any guy with erectile dysfunction quickly becomes a topic of regular conversation. \n\nOf course, if that guy's wife is sitting at the table the conversation is very general until the poor gal figures out that if she knows about everybody else's husband, they will find out about hers eventually and then she shares stories about her hubby's pathetic bedroom performance with the other ladies of the club. I can't count the times my wife has chuckled as she tells me about wilting penises magically restored to erect function by the miracles of modern pharmacy.\n\nFor the life of me I cannot understand why a professional pharmacist or a practicing urologist would share confidential patient information with his wife. I always try to keep my patients' secrets confidential, but sometimes that's impossible because Peggy is so damn persistent and she already knows half the truth anyway. I guess all the wives extract information from their husbands like dentists extract molars. It happened to me again just last night.\n\nWEDNESDAY NIGHT IN BED\n\nI lay quietly trying to go to sleep until my thoughts were interrupted by a voice in the darkness.\n\n\"You're not gonna believe what Trish told me today.\"\n\n\"I'm gonna hear it whether I believe it or not. What did Trish tell you today?\"\n\n\"You know Don Knox. You've played golf with him at the club.\"\n\n\"The high school football coach?\"\n\n\"Yeah, that's him. Well Trish says he can't get it up. Imagine a big guy like that! Broad shoulders and strong! Drives the golf ball 250 yards. And he's got a pecker like a strand of spaghetti!\"\n\n\"And just how did Trish find this out?\"\n\n\"Her husband told her.\"\n\n\"Her husband told her? No way! Art would never do that! He's a professional urologist who keeps his patients' problems confidential!\"\n\n\"Well, he didn't actually tell her straight out. Lois found out that Art had prescribed Cialis for Don from the pharmacy records. And Lois told Trish and then Trish asked Art if he had prescribed it for Don and then Art got all flustered and didn't want to talk about it, so it had to be true.\"\n\nI could only shake my head in awe. Lois again! These damn women! Like a Chicago Cubs double play - Tinker to Evers to Chance -- Lois to Trish to Art and the whole world knows about Don Knox's floppy pecker.\n\n\"Sandy Knox is a patient of yours isn't she?\"\n\n\"Yes she is.\"\n\n\"Did you know that Don couldn't get it up?\"\n\n\"Well ... I ... well ... Ahhh ... I ...\"\n\n\"You did! Of course you did! Now I get it! You are always so very sensitive to your patients' problems -- that's why women want you as their gynecologist -- that ... and, of course, your wonderfully soft hands. You were probably doing her annual pelvic and you asked if she had any problems and Sandy must have told you that Don couldn't get it up. And you told her to have him see Art. Is that right?\"\n\nShit! What the hell do you say? This network of gossiping broads had figured out the whole damn thing.\n\n\"I ... well ... Ahhh ... well ...\" I mumbled.\n\n\"So you've known about this for over two months?\"\n\n\"Well ... Ahhh ... I ... I ... \"\n\n\"Tom, why didn't you tell me about it?\" Peggy said harshly.\n\n\"Because it was none of your damn business and because telling you is like publishing it in the Springfield News Leader!\"\n\n\"Has Sandy talked to you since Don started taking Cialis?\"\n\nI didn't answer.\n\n\"She has hasn't she? Is the Cialis working? Is Don fucking her again?\"\n\nIt was no use! These damn gossips! Peggy would just tell them at lunch tomorrow what I had said or what I had refused to say or ... shit! If Sandy were there she'd probably confirm it.\n\nI nodded my head weakly, frustrated. Even in the dark Peggy could feel my head move.\n\n\"There! You see? It's a story with a happy ending. We've asked Margie not to miss lunch tomorrow because her husband Jim takes Cialis just like Don and he fucks like a stud. The gals want to know how good the drug is in case their husbands get pecker drop.\"\n\n\"Pecker drop?\"\n\n\"Yeah, pecker drop - that's what the gals call it. Sounds a lot better than erectile dysfunction, don't you think? Good night dear.\"\n\n\"Good night dear.\"\n\nFRIDAY NIGHT IN BED\n\nI lay in the darkness resting, about to go to sleep.\n\n\"We had lunch with Sandy today. Don is fucking her more than ever before and his dick's like a steel rod. She's so grateful to you for telling her to have Don consult Art.\"\n\n\"Well ... I ... guess that's a happy ending ... but ... but ... \"\n\n\"But what?\"\n\n\"But don't you think Don might be sensitive about all the ladies at the club talking about his ... his ...?\"\n\n\"His pecker? No! Because Don won't know we're talking about his pecker! He doesn't need to know.\"\n\n\"But the ladies at the club DO need to know about his pecker! Right?\"\n\n\"Right! It doesn't hurt anybody. Besides I haven't told you the latest about Sharon. She's started having pain when her hubby fucks her deep.\"\n\n\"Pain? Where?\"\n\n\"Left lower quadrant.\"\n\n\"Dyspareunia.\"\n\n\"Yeah. Remember what the med students always said? Dyspareunia is better than no pareunia at all. I told her to get an appointment to see you.\"\n\nI thought about next week's schedule. Sharon's name would be at the top of the list for Monday. Well, here was another secret I was gonna have to try to keep from my loving wife.\n\n\"Good-night dear.\"\n\n\"Good-night dear.\"\n\nMONDAY NIGHT IN BED\n\nI was almost asleep.\n\n\"You saw Sharon this morning?\"\n\n\"Darling, you know I don't like to talk about my patients.\"\n\n\"Sharon said she saw you. She was poolside this afternoon at the club.\"\n\n\"Okay, I saw her.\"\n\n\"What did you find?\"\n\n\"I don't want to talk about it.\"\n\n\"She said you did a pelvic.\"\n\n\"Well, what did you expect me to do -- look in her ears? I'm a gynecologist and she has dyspareunia.\"\n\n\"Was she tender when you examined her?\"\n\n\"Peggy for God's sake will you shut up and go to sleep?\"\n\n\"I don't know why you talk to me that way. I'm your wife. I love you.\" \n\nNow she was sulking. But not for long.\n\n\"Was she tender down there.\"\n\nJesus! 'Down there' she said. And Peggy was an experienced nurse. That's the way the girls at the club talk I guess. Down there! Down where? I almost said. Argentina? I took a private vow of silence.\n\n\"She was, wasn't she?\"\n\nI said nothing.\n\n\"On the left -- the left lower quadrant? Where she hurt when her hubby fucked her deep.\"\n\nI said nothing.\n\n\"Was the smear positive for GC?\"\n\nI exploded! \"Damn it Peggy you know that Sharon hasn't been playing around. How could you suggest such a thing?\"\n\n\"You did a smear and culture, though. You're always very thorough. That's another reason the girls trust you. And if the smear had been positive you wouldn't have exploded like you just did. If it were positive, you'd have been very quiet because you would have been worrying about the results of that culture. So the smear was negative like you expected.\"\n\nHow does she do this? I could hear the laughter at lunch the tomorrow. \"And girls,\" Peggy would say, \"the GC smear was negative, so we know Sharon hasn't been playing around.\"\n\nShit! They all do it. The other guys are not telling their wives any more than I'm telling Peggy and yet somehow the girls always seem to find out everything.\n\nI didn't say anything.\n\n\"It wasn't cancer was it?\"\n\n\"For God's sake Peggy. Sharon doesn't have cancer. She just has ... just has ... \"\n\nIt was a trap. Peggy had led me into a trap. She knew there was no chance of cancer and now I had told her that I had made the diagnosis by pelvic examination and the smear was negative and it was \"just\" something.\n\nWith her experience she could put the puzzle together now. Fast diagnosis by pelvic exam of \"just\" something causing dyspareunia meant Sharon had easy to treat uterine fibroids. The thought was still in my head when Peggy said it.\n\n\"Uterine fibroids! Of course!\" Peggy almost shouted, triumphantly. \"I thought so. That's what I told the girls it would likely be. Tomorrow at lunch I'll confirm the diagnosis. You're probably gonna resect her by laparoscopic surgery? Right? Most cases can be done that way. That's the simplest way -- just a little tube. That's what I told the girls. Sharon is gonna be so relieved that she doesn't need big surgery.\" \n\nWhat the hell do you say? When all the professional husbands hear this story from their wives, every one of them will think I just went home and told my wife the whole damn thing. I was innocent! But what the hell good does it do to say so. I immediately decided not to blame any of the other guys for the stories that they \"told\" their wives. Truth extracted like impacted molars! Sharon would know everything before her follow-up visit!\n\n\"Good-night dear.\"\n\n\"Good-night dear.\"\n\nTHURSDAY NIGHT IN BED\n\nIt was pitch black. I was almost asleep. Then Peggy jolted me awake.\n\n\"Grace called me today and we had a long talk.\"\n\nJesus! What was this? Grace was our daughter, who was in her third year of pre-med at MU.\n\n\"Is there any problem?\" I asked, suddenly wide-awake and frightened.\n\n\"Yes. She has an important decision to make. We discussed it.\"\n\nA decision? An important decision? Oh shit! What the hell could this be? A failed course? Low grades? Or, heaven forbid, a missed period? My God! An important decision! What the hell was it?\n\n\"What kind of decision?\" I asked, cautiously. I was scared!\n\n\"She's trying to decide if she should shave her pubic hair.\"\n\n\"Shave her ... Jesus Peggy! What the hell is that all about?\" I was wide-awake now and it was hard not to shout.\n\n\"Some of the gals in Sigma Kappa are shaving their pubic hair.\"\n\n\"What the hell for?\" I asked, afraid of what the answer was gonna be.\n\n\"Because a lot of guys like them shaved.\"\n\n\"Jesus Peggy! You gotta talk to that girl. She's just a Junior for God's sake!\"\n\n\"I was a Junior the first time you pulled my pants down - in the parking lot of the Sigma Kappa house. Remember?\"\n\n\"That was different! I was in Medical School then.\"\n\n\"And just how does your being in medical school make it different?\"\n\nI was losing my temper. \"It was obviously different. You had more common sense than our daughter has and better judgment too. \"\n\nPeggy laughed out loud at that. \"If I had had any common sense at all, I'd a never let you get into my pants. You were so gentle and so loving that a year later I was married and pregnant and working as a nurse at night -- at night dammit - to buy your damn medical books. That's how much common sense and judgment I had. I ended up working my ass off!\"\n\nThis talk about medical students was scaring me. \"Grace is not dating a medical student is she? I don't want her to even go near a medical student.\"\n\n\"What's wrong with medical students? YOU were a medical student.\"\n\n\"Yeah and I got in your pants and I don't want some medical student getting into Grace's pants -- shaved pussy or no shaved pussy!\"\n\n\"You don't have to talk dirty!\"\n\n\"I'm not talking dirty! You need to have a talk with that girl!\"\n\n\"We talk all the time.\"\n\n\"Well not enough, obviously. What else did she want to know?\"\n\n\"She wanted to know how you felt about shaved pussies.\"\n\n\"Me? How I felt? Why me for God's sake?\"\n\n\"I told her how you feel.\"\n\n\"You told her how I feel? How the hell do you know how I feel? We've never talked about shaved pussies - ever!\" I was shouting now.\n\n\"Yeah, but I know how you feel. I'm your wife, dear. I understand you. I know how you think. I know how you feel about a lot of things that we've never talked about.\"\n\nThis was ridiculous! Absolutely ridiculous! And ... and a little bit scary! She can't know what I'm thinking! Can she? No way!\n\nI got aggressive. \"All right Miss Know-it-all! How do I feel about shaved pussies?\"\n\n\"Shaved pussies turn you off -- big time.\"\n\nShit! I thought. She's right! Just thinking about a shaved pussy is a turn-off. How the hell does she know that? This is scary! I better calm down and find out how Peggy knows that. She's getting inside my head! What the hell else does she know about me?  \n\nI spoke softly, \"You're right dear. But tell me, please. How the hell did you know that?\"\n\n\"Because I understand how your mind works. You're my husband. It's my job to know how you think.\"\n\n\"You know how I think?\"\n\n\"Of course! I know how you think.\"\n\n\"You see a shaved pussy every Tuesday and Thursday morning -- your OR days. It's the first thing you see when you walk into the OR at seven AM with your freshly scrubbed and dripping hands up in the air waiting for the circulating nurse to hand you a towel and help you put on a gown. Your mind is fully occupied with the surgical procedure that you are getting ready to perform on the gal who is asleep and being draped on the operating table. And she's got her pussy shaved as part of her pre-op prep.\" \n\n\"It's simple, dear,\" Peggy concluded. \"A shaved pussy reminds you of business -- not pleasure.\"\n\nJesus! She's right! That's exactly what a shaved pussy reminds me of -- walking into the operating room! Jesus! What else does this woman know about my mind? This is scary!\n\n\"Anyway,\" Peggy continued, \"I told Grace that shaved pussies turned you off and I explained why.\"\n\n\"What did Grace say then?\"\n\n\"She asked me if I thought a medical student would react the same way. And I said I thought ... \"\n\n\"A medical student? A medical student! Oh my God! Peggy! She's not dating a medical student! Is she? Tell me she's not dating a medical student!\"\n\n\"Darling, calm down. Don't shout. Just calm down! I don't think you need to worry about who Grace is dating.\"\n\n\"I don't want her dating any medical students!\"\n\n\"Her brother is a freshman medical student!\"\n\n\"I don't want her dating medical students!\" I repeated.\n\n\"She's gonna apply to med school next year, darling - she'll be surrounded by medical students. Anyway you'll be happy to know that she's not gonna shave her pussy. She's gonna keep it nice and hairy -- just like mine.\"\n\nI lay there quietly for a while, thinking. This conversation had got me wondering and I reached over to see if Peggy's pussy was as hairy as I remembered it. That was the end of the conversation for the night.\n\nFRIDAY NIGHT IN BED\n\nFridays are always hard days. There is always at least one telephone call at five o'clock - today there had been two. I was exhausted. I dropped off to sleep almost at once and then I heard a voice in the darkness.\n\n\"I woke up this morning remembering our conversation last night about Grace and I've been thinking all day about when we were dating.\"\n\n\"Yeah,\" I said, awake now. \"I remember that. I remember it all like it was yesterday.\"\n\n\"You don't remember it as much as I do. And you don't remember the things I remember.\"\n\nThat was puzzling. \"Such as?\" I said.\n\n\"Such as Friday nights,\" Peggy said sharply.\n\n\"Oh no, you're wrong, dear. Our big date was always on Saturday night,\" I reminded her.\n\n\"Uh-huh. And what were you doing on Friday nights?\" Peggy's tone was sharp, like she was upset about something.\n\nWhat the hell was this all about? I wondered. \"Well, sometimes I'd study and sometimes I'd go out, and sometimes ...\"\n\n\"You'd get laid!\" Peggy said sharply.\n\nThen I remembered! Gladys! Gladys what's-her-name. She was a Sigma Kappa just like Peggy and I had dated her for a couple of months, usually on Friday night. And ... Oh shit! And I had fucked her - at the same time I was dating Peggy. Is Peggy thinking about that? No way! She couldn't know about Gladys What's-her-name.\n\nPeggy spoke softly, her voice sugar sweet. \"Do you remember where we always parked in the Sigma Kappa lot -- in the dark spot under that big oak tree? That's where you first pulled my pants down. And you were so nice and gentle and sweet.\"\n\n\"Ahh ... yeah ... Ahh ... yeah I remember.\"\n\n\"I could see that spot from the window of my room on the third floor of the Sigma Kappa house.\"\n\nI couldn't figure where my loving wife was going with this conversation but she seemed angry and I couldn't remember what I had done to make her mad. I just lay there in the dark wondering and waiting.\n\n\"That's the same spot where you always parked on Friday nights when you fucked Gladys Detweiler!\" Peggy said. She was angry now!\n\nDetweiler, yeah Detweiler. That was her last name. Yeah, I always parked in that spot because it was nice and dark.\n\n\"Every Friday night I looked out of my window and saw your old Plymouth bouncing up and down when you fucked that bitch in OUR parking spot.\"\n\nBouncing up and down -- my Plymouth never did that. She just imagined it! \n\nWhat did she mean by \"OUR\" parking spot? I hadn't dated Gladys that long. She never meant anything to me except blowjobs and good pussy. Why was Peggy remembering all this now?\n\n\"Well, darling, I only fucked her for a couple of months and ... and I quit fuckin her when we got engaged.\"\n\n\"You quit fuckin her when we got engaged!\" Peggy was shouting. \"WOW! How loving and considerate you were! You bastard!\"\n\nPeggy was pissed. What the hell had I done? I'd fucked Gladys Detweiler for two months twenty-four years ago, that's what I'd done.\n\n\"I proposed to you under that tree,\" I said. \"It was on a Saturday night and I gave you the engagement ring you're wearing at this very moment.\"\n\nThat was better. She was calming down now. Peggy reached over and took my hand in hers and gently placed my fingers on the ring.\n\n\"It's a little diamond,\" she said, \"but I've never wanted to get a bigger one -- this meant too much to me to change it. I remember you telling me how expensive it was and how you kept it in your pocket because you were afraid to leave it in your room.\"\n\nI smiled in the darkness. \"Yeah, I remember.\" ",
        "That was a tender thought. She was having tender thoughts now. She wasn't mad any more.\n\n\"Do you ever think about where that ring was the night before you proposed to me?\"\n\nThat's a dumb question. I had bought the ring the week before and it had been in my pocket all week long.\n\n\"I ... I'm not sure what you mean,\" I said, genuinely puzzled. Where was she going with this?\n\n\"The FRIDAY night before you proposed to me!\" Peggy was talking louder. Her voice seemed to echo in the dark bedroom.\n\nI shook my head. What the hell was she talking about?\n\nPeggy paused a moment, then as though reading a script, she said, \"The Friday night before you proposed to me you parked in OUR SPOT, with that bitch, and you fucked her, with me looking out of my third floor window at your Plymouth, bouncing up and down.\"\n\n\"You were between her legs and your pants were down around your knees and MY ENGAGEMENT RING was in your pocket! Rubbing her thigh! And you were fucking that bitch!\"\n\nPeggy was right. It was the last time I had fucked Gladys. It was sort of a sentimental, good-bye fuck, but probably I'd better not mention that now. I don't think Peggy would appreciate it quite the way I did.\n\n\"That was twenty-four years ago,\" was all I could think to say.\n\n\"Yeah,\" said Peggy, \"and I remember it like it was yesterday, you bastard.\"\n\nI rolled over and embraced her. She was sulking. This was gonna take a lot of soft talk and caressing. It would, of course, be worth it. \n\nSATURDAY NIGHT IN BED\n\nI lay quietly in bed in the pitch-black bedroom hoping Peggy had forgotten about Gladys Detweiler. Last night had been hell! No such luck.\n\nShe spoke softly. \"I thought about that bitch all afternoon.\"\n\nWell, there it is. Might as well answer her. \n\n\"What made you think about her,\" I asked innocently.\n\n\"I was shopping at the market and saw a special on Guernsey milk -- it's supposed to be rich in beta carotene.\"\n\n\"Yeah, that's what they say, but why ... \"\n\n\"There was a picture of Guernsey milk cows with those big udders hanging down.\"\n\nUh oh, I thought. She's gonna talk about Gladys Detweiler's tits. Gladys had big tits all right. She always wore tight sweaters to show them off.\n\nThere were some stairs in front of the Union Building on campus and Gladys liked to wait near the top and then bounce down those stairs smiling and waving at me as her big boobs jiggled energetically. It was a sight to see.\n\nA sight for me to see, that is, not for Peggy. One day Peggy and I were walking to the Union and Gladys pulled that stunt. Peggy never forgot that.\n\nI decided to say nothing. Maybe this conversation wouldn't go any further. Fat chance!\n\n\"The bitch looked like a milk cow! Guys were standing in line to play with those udders,\" Peggy said.\n\nBest to say nothing, I thought. Peggy was right, though, those tits were fun to play with. Especially when Gladys sucked your dick -- she sucked cock like a gourmet!\n\n\"That bitch gave Bob a blowjob.\"\n\n\"Bob? Who's Bob?\" I asked.\n\n\"My room mate's brother. Bob told Sally all about her technique.\"\n\nUh oh, I thought. I don't like the direction this conversation is going.\n\n\"She'd get those big udders out for Bob to play with and then she went to work on his balls. She did you the same way. Right?\"\n\n\"Well ... I ... I ... I'm not sure I remember exactly.\"\n\n\"Yeah! You expect me to believe that 'Don't remember' shit? You remember! That's why you're starting to breathe heavy.\"\n\nI've got to learn to control my breathing. Maybe if I stay quiet she'll change the subject.\n\n\"Bob said she'd play with his balls with both hands -- a thumb and forefinger on each testicle -- and her little pinky fingers would work their way up, tickling his scrotum all the way back to where the sun don't shine. By the time she started sucking his dick he's be so far gone that it was only moments before he went off like a damn Roman candle.\"\n\nI remembered that technique. It really felt good!\n\n\"You're remembering that now aren't you? You bastard! I can tell by the way you're breathing.\"\n\nShit! I gotta control my breathing. She's inside my head again! What the hell can I say?\n\n\"That was twenty-four years ago,\" I said weakly.\n\n\"Bob said she always sucked him off first to slow him down so she could enjoy a long, leisurely fuck. She did you the same way! Didn't she?\"\n\n\"Well ... I ... I'm not sure I remember exactly.\"\n\n\"Oh you remember all right, you bastard! She did it in the back seat of that beat up old Plymouth to slow you down so you'd fuck her longer -- with me and my room mate watching from our room on the third floor.\"\n\nHer roommate! My God! I'd had an audience!\n\n\"Sally and I saw that Plymouth start to bounce up and down and we knew your blowjob was over and you had started to fuck that cow.\"\n\n\"That bitch sucked off half the guys on campus. She specialized in your frat brothers in Phi Chi.\"\n\nI shook my head no in the dark. \"I don't remember her doing that.\"\n\n\"She sucked off your room mate, didn't she?\"\n\n\"Well, yeah, I ... I guess she did,\" I said lamely.\n\n\"She sucked off all three of your lab partners from gross anatomy?\"\n\n\"Well, yeah, I ... I think she did them too. But ... but not all at the same time.\"\n\n\"And God knows how many other guys in Phi Chi!\"\n\n\"Shit Tom! Did you ever stop to think that every time you kissed that bitch you were kissing lips that had sucked the dicks of half the guys in med school?\"\n\nWhat could I say?\n\n\"I only fucked her for two months,\" I said.\n\n\"It was a long two months,\" Peggy said. \"And every Saturday night I'd get naked for you in the back seat of that beat up old Plymouth, jealous as hell of that big-breasted bitch that you had fucked the night before. And I was so crazy in love with you and so afraid of losing you, that the only thing I could figure to do was pump my ass to please you as much as that slut had.\"\n\n\"I loved you too darling,\" I said.\n\n\"My room-mate, Sally, said you had me exactly where you wanted me -- pumping my ass to keep you happy and giving you all the user-friendly pussy you could handle.\"\n\n\"Darling, I didn't have you where I wanted you until I got a ring on your finger,\" I said.\n\n\"You picked a lot of cherries those years on campus before you got mine. All the girls talked about it -- you were the big stud on campus. Gals bragged about being in the back seat of that damn Plymouth. I was so afraid of losing you I couldn't stand it.\"\n\n\"I may have picked some cherries before I got yours Peggy,\" I said, \"but yours was the last one I picked. Gladys Detweiler couldn't remember losing hers.\"\n\n\"Yeah, but you fucked her every Friday night for two months! With me watching from my bedroom window with my room mate Sally. And after you dumped the bitch she figured out a way to latch on to Sally's boy friend and she started fuckin him.\"\n\n\"She fucked him in the parking lot - under that same damn tree -- with me and Sally watching. The only difference was that he had a ten-year-old Ford. But it bounced up and down almost as much as your little Plymouth.\"\n\nI just laid there trying to think of something to say. There didn't seem to be anything that would calm her down. So I reached over and started to stroke her knee gently.\n\n\"Bastard,\" she said. But she didn't move away.\n\nI slowly moved my hand up her inner thigh. Her breathing became a little heavier. I rolled over on my side and cuddled up to her, my other hand on her breast. She spread her legs a little.\n\n\"I'm still mad,\" she said, but she was breathing harder.\n\n\"I know,\" I said and leaned over and kissed her neck and tickled her with my tongue moving it up toward her ear.\n\n\"You're still a bastard,\" she said.\n\n\"For twenty-four years?\" I whispered.\n\n\"Well you WERE a bastard,\" she said.\n\n\"Shit! Those damn hands!\" Peggy said. \"I'm getting wet and user-friendly. You don't deserve it.\"\n\n\"No I don't baby. But YOU deserve it, don't you think?\"\n\n\"Yeah, I guess I do. But promise me you won't think about those big udders while you're having your fun with me.\"\n\nMy hand was now in that curly haired beaver and there was no way I was going to think about anything except that hairy beaver.\n\nMONDAY NIGHT IN BED\n\nI was awake in the pitch-black bedroom when the night's gossip began.\n\n\"My luncheon group talked about you today.\"\n\n\"Oh? And what did they say about me?\"\n\n\"They talked about how gentle your hands were when you examined them.\"\n\n\"Women! Jesus! I can't believe that six grown women sat around a table at lunch and talked about me doing pelvic examinations.\"\n\n\"They wanted to know if your hands were that gentle with me in bed and I told them how you took charge of me last Saturday night when I was pissed about Gladys Detweiler.\"\n\n\"I told them that you moved one hand up my thigh and the other on my breasts and I got dripping wet and user-friendly in a couple of minutes. I forgot all about that Detweiler bitch and you just crawled into the saddle and had your fun with me.\"\n\n\"Jesus! I don't believe this! Women don't talk about sex with their husbands around the luncheon table! I can't believe you all do that.\"\n\n\"Of course we do. We do it all the time. That's how we find out about pecker drop and dyspareunia. Trish talked about how rough Art was when he played with her pussy. I told her to get used to it, there was no reason to worry about that.\"\n\nWell THAT got my curiosity up. \"And just why shouldn't she worry about that?\"\n\n\"Because Art's a urologist.\"\n\n\"He is, but ... I ... ahh ... I guess you lost me somehow.\"\n\n\"Art deals with guys all day long and doesn't do many pelvic exams on women -- he does rectal exams on guys all the time. Shoves that long finger right up a guy's ass and checks out his prostate - one guy after another, all day long. He's just naturally rough. Probably treats pussies the same way.\"\n\n\"Oh,\" was all I could say. She was right though. Art did my rectal exam last month and he's got a strong finger. I went up on my toes! It's like lifting weights I guess -- you get stronger each time.\n\n\"Anyway, each gal talked about how soft and gentle your hands were when you checked out her pelvis. Pat even said it turned her on when you examined her.\"\n\nThat triggered a memory. Last month when I did Pat's annual physical, my nurse, Gail, had set her up for a pelvic to start with and when I finished the pelvic Gail left the room with her Pap test. \n\nPat then asked me if she could get up and I had said yes. So she just whipped off the sheets and pushed them aside, dropped her gown off her shoulders, and she was buck-naked. Then she got up and bundled the sheets and laid her gown on the table, and stood by the examination table a moment. Finally, taking her time she sat on the table and smiled at me -- all of this time, showing me her body, naked and unconcerned.\n\n\"She said she was turned on?\" I mumbled, remembering her behavior.\n\nI could picture her in my mind, sitting there buck naked, and saying, \"Are you gonna examine my breasts next?\"\n\nWith that, she had put her hands behind her head and pushed her elbows back causing her breasts to stand out in a sexy manner with her big nipples rock hard. Of course she knew that this was a standard position for inspection of female breasts during breast examination, but the way she did it she was showing off her breasts for me to look at.\n\nPat had just sat there, buck naked, showing off her tits and beaver and smiling at me. Jesus! Was the bitch turned on? Now that I remember it I think maybe she was! And she began moving around a lot on the table showing me her Playboy class naked body. I had quickly grabbed the examining gown she'd removed and put it back on her again -- I was afraid Gail might come back in and see her improperly draped.\n\nAs I was remembering all this Peggy suddenly asked, \"What are you thinking about so seriously?\"\n\nI told her the story in detail and Peggy started to laugh. \"She was trying to turn you on and not having much luck.\"\n\n\"Oh? And how do you know she wasn't having any luck?\" I asked. Shit! Was Peggy inside my head again?\n\n\"I know how your mind works, darling. You were standing there looking at that naked bitch cavorting around on your examination table flashing her tits and ass and you were worrying that Gail was going to come back into the room any minute and see her naked without a gown or drapes.\"\n\nShit! She did it again! That's exactly what I was thinking! How the hell does she do that?\n\n\"Some women expose themselves to their doctors when they get a chance,\" Peggy said. \"Being naked in front of a man turns them on, but I didn't think Pat would do that to you. I can't believe that any bitch would think she could interest you just by being naked. Hell! You see naked women all day long -- most of them on their backs with their legs spread wide!\"\n\n\"Well from time to time I do see a gal who flirts when she's naked but Pat is a friend of yours. It surprised me.\"\n\n\"On the other hand,\" Peggy said \"do you remember Pat in that skimpy bikini at the club pool? She likes to show off her body. The guys at the club all like to look at her. Sometimes I feel sorry for Joe. Some girls have a touch of exhibitionism and I think Pat is like that.\"\n\nPeggy rolled over on her side and threw one leg over my body. \"It's a damn good thing I trust you, baby. Can I interest you in using those soft hands all the gals talk about? I've been thinking about going to bed with you ever since the girls at lunch told me how soft you hands were when you examined their bodies. Why don't you start with my breasts?\"\n\n\"Horny bitch! I was hoping to get some sleep.\"\n\n\"Sure you were! I can feel how sleepy you are! It's pressing against my leg.\"\n\nWEDNESDAY NIGHT IN BED\n\nPeggy had been chuckling to herself all evening and I knew she had something funny to tell me after we went to bed. She did! Moments after the lights went out she started.\n\n\"I had lunch at the club today with the girls.\"\n\n\"And what did you talk about?\"\n\n\"You'll never guess!\"\n\n\"Well, that's for certain.\"\n\n\"Today the club had its weekly dessert special. It was cherry pie and Pat suggested we should talk about ... \"\n\nI interrupted her. \"Don't say it! I'm not gonna believe this!\"\n\nPeggy laughed. \"Well we did! We talked about how each of us lost our cherry.\"\n\n\"I can't picture a luncheon table with six menopausal old broads sitting there ... \"\n\n\"I beg your pardon! We are NOT menopausal and we are CERTAINLY NOT old broads!\"\n\nI chuckled.\n\n\"You'd damn well better laugh! Menopausal old broads! I can't believe you'd call us that!\"\n\n\"But seriously Peggy. Did you really talk about what you gals did when you were teenagers in the back seats of old cars?\"\n\n\"We did and some of the stories were pretty funny. Pat was a riot talking about Joe. Everyone in the dining room kept looking at us when we laughed.\"\n\n\"Pat lost her cherry to her future husband?\" I asked.\n\n\"Yeah, me and Pat both. Two out of six ain't bad!\"\n\n\"You're gonna tell me these stories aren't you?\"\n\n\"Don't you wish! NO! I'm NOT gonna tell you who your lady friends at the club were banging when they were teenagers! But some of the stories are so good that I have to tell you.\"\n\n\"Okay what did Pat say that was so funny?\"\n\n\"Well, Joe used to ... you know ... use his tongue ... \"\n\n\"If you're gonna talk dirty Peggy, do it right. Joe used to eat pussy!\"\n\nPeggy laughed. \"Yeah, that's what Pat said and anyway, he did that on every date and one night was especially nice and there was a moon and she'd had a lot to drink and Joe gave her very special pleasure with his tongue and the next thing she knew her cherry was ancient history.\"\n\n\"Anyway, that night when he kissed her good-night at her sorority house, she looked up into his face and said ...\" - Peggy started to laugh - \"she said to him ...\" more laughter.\n\n\"Come on Peggy get yourself under control!\" I said.\n\n\"She said to him,\" Peggy said, choking back her laughter, \"Pat said to him 'Okay Joe. Tonight you ate your last piece of cherry pie.' And when she said that the whole table burst out in hysterical laughter. Everybody in the dining room looked at us and knew we were telling dirty jokes or something.\"\n\n\"And then -- get this - the waiter comes over to the table and tells us that there's more cherry pie in the kitchen if we want some -- I think he misunderstood what Pat said about the last piece of cherry pie. And then everybody breaks out laughing all over again.\"\n\n\"And then Lois whispers, 'Too bad there's only one piece of cherry pie in each kitchen -- I could have used an extra piece for Bob' and everybody starts to laugh again.\" \n\n\"Jesus! Women! You didn't tell them about us did you?\"\n\n\"You mean about that big oak tree in the Sigma Kappa parking lot and that beat up old blue Plymouth you used to drive?\"\n\n\"Well yeah, you didn't ...\"\n\n\"I certainly did. Margie started talking about your soft hands and how gentle your voice was when you did a pelvic and she asked me if your hands were that way when you were in medical school and I said you hadn't changed a bit.\"\n\n\"Jesus, you didn't.\"\n\n\"I did. And then Margie said 'With that gentle voice in your ear and one of those soft hands creeping up your thigh you didn't have a chance -- not a chance! All you could do was spread your legs and giggle.' And I said that was exactly what happened. I just spread my legs and giggled. And it was still happening!\"\n\n\"I don't believe this. You told those women about us?\"\n\n\"Yeah and I told them about Gladys Detweiler too and they said I was right to get mad at you about her. They thought it was terrible for you to fuck her in OUR SPOT with me watching.\"\n\n\"I didn't know anything about OUR SPOT and I didn't know you were watching. I never thought of you as a God damned peeping Tom.\"\n\nThat did it! I should never have called her a peeping Tom. She started out again about Gladys Detweiler and that Plymouth bouncing up and down in OUR SPOT and I kept telling her it all happened twenty-four years ago but that didn't seem to matter. It took me half an hour to get her calmed down.\n\nTHURSDAY NIGHT IN BED\n\nPeggy chuckled in the darkness before she spoke.\n\n\"Margie talked about your soft hands again today. You did her annual exam yesterday and your hands turned her on big time.\"\n\n\"Did Margie say that?\"\n\n\"Not exactly, she just talked about how soft your hands were. But I had coffee with Gail today and she told me about Margie's exam. Now I know why Margie always talks about your soft hands.\"\n\nGail, my office nurse, was a classmate of Peggy's in nursing school and they were close friends and often had lunch or coffee together. I had been in the OR most of the day today.\n\n\"What exactly did Gail say?\"\n\n\"She said Margie got a hard on.\"\n\n\"Well,\" I said slowly, \"her clitoris may have gotten a little bit erect ... but ...\"\n\n\"A little bit?\" Peggy laughed. \"Gail said it was as hard as a rock and standing out like a big lead pencil!\"\n\n\"What else did my loyal nurse tell you?\" I was a bit irritated that Gail had shared with Peggy what she saw, but she was a great nurse and I guess girls will be girls.\n\n\"She said Margie has a big loose pussy.\" Peggy laughed. \"A four finger pussy and your hand just slipped in real easy almost up to your wrist.\"\n\n\"Margie's fifty years old. She's had three kids and I think Bill has been using her hard for the better part of thirty years. She's stretched out a bit.\"\n\n\"Doesn't she do her Kegels?\"\n\n\"I've explained those exercises to her but I don't think she does them regularly.\"\n\n\"If a gal wants a tight pussy she's gotta exercise those muscles every day. Without good pelvic muscles when she gets older she's gonna start to drip urine every time she coughs. Didn't you explain that to her?\"\n\n\"Darling I always try to do my job!\" I said, a bit frustrated.\n\n\"Well baby I do my Kegels every day,\" said Peggy. \"I'm not gonna have MY hubby check out pussy all day long -- some of it prime young stuff -- and then come home to a big loose one. I'm as tight as I was that first time you pulled my pants down in that beat up old Plymouth!\"",
        "\"You are that honey, you are exactly that!\" I said. And it was true! Peggy's orgasms grabbed my dick like a tight fist.\n\n\"Gail said Margie pumped her ass when you examined her.\"\n\n\"Margie did not pump her ass!\" I couldn't believe Gail told her that.\n\n\"Gail said she did!\"\n\n\"Well ... when I reached up deep to feel her ovaries she lifted her hips up to give me better access so I could get my fingers deeper. Maybe that's what Gail saw.\"\n\n\"So she DID pump her ass! Gail said she was breathing hard like she was about to cum.\"\n\n\"Most women breathe hard during a pelvic examination.\"\n\n\"Yeah, they do! Especially when YOU do the pelvic with those soft hands of yours.\" \n\nPeggy was chuckling now. She thought it was funny that Margie got sexually aroused during her pelvic examination.\n\n\"Gail said Margie was about to cum. She said that you put your thumb on that hard clit when you went deep and Margie was pumping her ass, rubbing her clit on your thumb, and she would had popped one off if you hadn't moved your hand.\"\n\n\"Oh I don't think she was that aroused.\"\n\n\"That's not what Gail told me,\" Peggy said laughing.\n\n\"Well ... okay, she was aroused. Margie gets that way every time I examine her.\" \n\nI remembered the times I had examined Margie in the past -- she always turned on. There was no question she would have had an orgasm if I had left my thumb on her clit a little longer.\n\n\"God that's funny!\" Peggy laughed. \"She's always so damn dignified at the club. It's fun to imagine her turning into a horny bitch, laying there with her big thighs spread, pumping her ass, and humping your thumb, with Gail standing right there watching that big loose pussy get juicy and start to drip. She must have been really hot to have done that!\"\n\n\"Yeah, she was hot. She always gets hot when I examine her, even with Gail standing there. She can't help it. But baby, don't you dare say anything to her about it. It's too personal and she has no idea you know about it. Okay, Gail told you the truth. Margie was pumping her ass, that big clit was as hard as a rock, and she WAS about to cum.\"\n\n\"Does she always do that?\" Peggy asked, fascinated by Margie's reaction.\n\n\"Always,\" I said. I wish Gail had not told her, but now that she knows I might as well tell her the whole story.\n\n\"Has she ever cum?\" Peggy asked with a chuckle.\n\n\"No,\" I said. \"Close sometimes and a couple of contractions now and then but never a full orgasm. But she'd cum every time if I left my fingers in her long enough.\"\n\n\"How often do women turn on like that when you examine them?\"\n\n\"Not very often - but every now and then a gal does that. That's why I always have Gail standing by the examination table. To be sure it doesn't get out of hand.\"\n\n\"Just don't let Margie spread those fat thighs without Gail standing by,\" Peggy said, laughing. \"According to Gail, Margie's hot for your bod. Good night dear.\"\n\n\"Not for my bod honey, for my hand! Good night dear.\"\n\nFRIDAY NIGHT IN BED\n\n\"I had coffee with Gail again today,\" Peggy said.\n\n\"Oh shit! More sex talk! That's all you gals talk about,\" I said.\n\n\"We talked about Pat flashing her tits and prancing around naked for you. Gail was well aware of Pat's exhibitionism -- she's seen it before with other doctors. That's why she left the room for so long. She wanted to give you time to enjoy the view.\"\n\n\"I didn't enjoy the view.\"\n\n\"I told her that and she thought it was funny. She said I was to tell you to enjoy looking next time. Besides, she said you should remember that Pat enjoys having a man look at her body in a bikini at the pool and having a guy looking at her buck-naked is even better.\"\n\n\"Some women are like that,\" I said.\n\n\"Gail says you're doing her a favor to look. Beside darling, I don't care. I trust you. Just go ahead and enjoy the view. You're always looking at her in that bikini by the pool.\"\n\n\"You're right! She looks great in that bikini! The way she walks around and poses. Her long legs ... and the way those long legs just ... well you know what I mean ... she just looks sexy.\"\n\n\"You crazy bastard! Naked on her back in your office with her legs spread and your fingers in her pussy she's all business! Prancing around the pool in a tiny bikini she turns you on! Jesus! When a gal's married to a gynee-doc, how the hell does she explain crazy things like that to other women?\" \n\n\"Yeah, I do like to watch her in a bikini, but somehow ... it's hard to explain ... it's not the same in the office. It's just, well, you know, it's different.\"\n\nPeggy laughed. \"God it's fun being inside your head! Yeah baby, I know it's different. That's why I trust you so much.\" \n\n\"You have lunch with some very interesting women,\" I said.\n\nPeggy chuckled. \"Yeah. One likes my husband to play with her pussy, another likes to strip down and jiggle her tits at him, and God knows about the other three. What do they like?\"\n\n\"You know I don't like to talk about my patients.\"\n\n\"I'll just ask Gail. She'll tell me.\" \n\n\"Well, Sharon and Trish are nothing special, they just spread their legs and lay there quietly. But Lois can be interesting sometimes.\"\n\nPeggy giggled again. \"Lois? Oh my God! Lois! Tell me! Tell me!\"\n\n\"Not tonight dear. You just look at her across the luncheon table and try to imagine what she does.\" \n\n\"Give me a clue at least,\" Peggy begged. \"I'm gonna ask Gail.\n\n\"Okay, I'll give you a clue: Gail can't see her do it, but Lois is a very horny woman when her legs are spread and my fingers are inside her. If you're good to me I might tell you about it another time.\"\n\n\"Shit! And I know what you mean by 'good to you,' you horny bastard! But I'll do it if you tell me about Lois.\"\n\n\"And you always do it so well. Good night dear.\"\n\n\"Good night.\"\n\nMONDAY NIGHT IN BED\n\nI was almost asleep in the dark bedroom when Peggy spoke.\n\n\"I had coffee with Gail after she got off work today. She told me about your new patient.\"\n\n\"My new patient?\"\n\n\"Yeah. Dr. Grassley, Dr. Pamela Grassley,\" Peggy said in that super-sweet voice that told me there was a problem brewing.\n\n\"Oh, you mean Pam?\" I said.\n\n\"So you're on a first name basis already,\" Peggy said in an irritated voice.\n\n\"Darling, all the clinic doctors are on a first name basis. Dr. Grassley is a new member of the clinic staff. She just completed her Chief Residency in general surgery at MU. She was at the top of her class and she's an outstanding young surgeon. The clinic is lucky to get her.\"\n\n\"And she's got big tits!\" Peggy said in a loud voice.\n\n\"Well, I don't know what you expect me to say about that,\" I said defensively. This conversation was going in the wrong direction. Downhill!\n\n\"And she's got long shapely legs and she wears short skirts and high heels -- not low heeled shoes like the other female doctors wear.\"\n\nPeggy was mad and I did not know why.\n\n\"Well I don't know why she wears high heels,\" I said. \"But ...\"\n\n\"She wears high heels to show off her long, lovely legs!\" Peggy said. \"That's why I wore heels like that when I was twenty-eight!\"\n\nThe room was pitch dark but I knew exactly what Peggy's face looked like. I had seen that expression before when she was pissed. But why the hell was she pissed?\n\n\"Darling,\" I said softly, \"you seem upset. Why are you ...\"\n\n\"Upset? Upset? Why would I be upset?\" Peggy was really angry now. \"Why the hell should I be upset? You played with her tits and her pussy all afternoon. Why the hell should THAT upset me?\"\n\nThis was ridiculous! Pam had asked me to do a pelvic exam and a breast exam. She had selected me as her gynecologist, just as she had selected Dr. Adams as her general internist. All the docs in the clinic had selected other docs to provide care. They say that a lawyer who defends himself has a fool for a client -- the same goes for doctors. I was just doing my job. Why was Peggy so upset? What the hell had Gail told her?\n\n\"Darling,\" I said softly, \"did Gail say something that upset you?\"\n\n\"Gail said a lot of things that upset me!\"\n\n\"What in the world did Gail say?\"\n\n\"She said that Pam has really big, firm breasts with large nipples that got hard as rocks when you examined them.\"\n\n\"Women's nipples often get erect when they are examined. I don't see why ...\"\n\n\"Gail said you took your time examining her breasts!\"\n\n\"Well of course I took my time. I wanted to be thorough and not miss anything. Not on another doctor -- especially a surgeon!\"\n\n\"According to Gail you didn't miss a thing! Gail said that was one of the longest, most detailed breast exams she had ever seen you do.\"\n\n\"That's an exaggeration!\" I said defensively, although as I thought about it I had spent more time than usual.\n\n\"And Gail said that the pelvic exam you did was something to behold -- those were her exact words -- something to behold.\"\n\nPeggy was wound up and really angry now. Was she jealous? How could she be?\n\n\"Gail said Pam asked you if she was doing her Kegels properly and you just stood there with your fingers in her pussy while she went through her routine.\"\n\nI remembered how tight that young vagina was and how firm her Kegel contractions had been.\n\n\"Gail said you took a long time -- a very long time -- before you told her she was doing her Kegels properly.\"\n\n\"Well ... I ... I wanted to be sure.\"\n\n\"Of course you wanted to be sure! You bastard! That young pussy was tight squeezing your fingers wasn't it?\"\n\n\"Well ...\"\n\n\"Answer me you bastard. It was tight wasn't it?\"\n\n\"Yeah it was tight. What's wrong with you Peggy? You can't be jealous! You've never acted this way about a patient before.\"\n\n\"Jealous?\" Peggy was almost shouting now. \"Jealous of a sexy twenty eight year old bitch with long legs and big firm tits and a tight pussy who wants you to check out her equipment and feel her Kegels. And after you've finished playing with the bitch she tells Gail that you have the most wonderful soft hands she's ever felt? How the hell could THAT make me jealous?\"\n\n\"Darling get serious! She's twenty years younger than I am.\"\n\n\"Twenty years younger! And THAT'S supposed to make me feel better? Right? You bastard! She's looking for a husband -- that's what she's doing and she's showing you what she's got to offer - showing you the merchandise.\"\n\n\"Why in the world would you say that?\"\n\n\"Gail said she wasn't married. Springfield is a small town -- damn few eligible bachelors live here! She makes twice the money most men her age make and no guy wants his wife to make more than he does. She's twenty-eight and her biological clock is ticking. And she is one good-looking bitch! She'd like nothing better than to walk off with a wonderful guy with soft hands. And Jesus, baby, you're really a handsome guy and I'm just ... I'm just ...\"\n\n\"You're just the most beautiful woman I know and sexy and fun and you've got a great body that I love to play with. No one in the world could ever take your place, and darling you know you can trust me!\"\n\n\"Yeah I know that. But it still pisses me off when you have so much fun all afternoon with a beautiful, smart, sexy woman twenty years younger than me -- with big firm tits and a tight pussy. I don't want to get fucked with you thinking about that sexy young bitch!\"\n\nWhich was another way of saying that I was not gonna get laid tonight! Then, suddenly, I remembered something very important.\n\n\"Darling, I'm not thinking about her. There's something Gail didn't tell you.\"\n\n\"What didn't Gail tell me?\"\n\n\"Like a lot of young gals these days, she shaves her beaver.\"\n\n\"Oh my God!\" Peggy gasped. \"She showed you a naked snatch?\"\n\nI chuckled. \"Naked as a jay-bird! Shaved clean!\"\n\n\"And you turned off like you just walked into the operating room.\"\n\n\"I turned off.\"\n\nPeggy started to laugh.\n\n\"Jesus! I would like to have seen that! The bitch spreads those lovely legs and shows you her special jewel all shaved naked for your pleasure and you turn off big time!\"\n\n\"That's what happened.\"\n\nPeggy chuckled and then said softly, \"Honey, reach over here and tickle this hairy thing. With your soft hands it's gonna get user friendly in a couple of minutes.\"\n\nI could feel her move in the darkness to spread her legs. I remembered how sexy she looked walking around the bedroom naked in spikes that set off her lovely legs. She did that a lot because she knew it turned me on.\n\nTUESDAY NIGHT IN BED\n\nIt had been an exhausting day -- five cases and over eight hours in the operating room. I closed my eyes and drifted off in the darkness, glad that Peggy had forgotten about Dr. Pamela Grassley.\n\n\"Honey, what is ceftriaxone?\"\n\nThat woke me up! Her question hit me out of the blue. What the hell was Peggy asking this for? She could easily look it up.\n\n\"It's an antibiotic, honey. Didn't you look it up in the PDR?\"\n\n\"What's it used for?\" Peggy asked, ignoring my question about the PDR.\n\n\"In older adults, mostly for hospital acquired pneumonia and the pediatric guys use it too -- for meningitis I think,\" I answered.\n\n\"So you don't use it?\" Peggy asked.\n\nWhat the hell was this all about? She was running me in circles.\n\n\"I rarely have occasion to use it except ... except ... \"\n\n\"Except when?\" Peggy asked firmly.\n\nThen it hit me.\n\n\"Why do you want to know the answer to that question?\" I asked. Something was obviously going on here.\n\nPeggy lay silent for a moment before she spoke.\n\n\"Lois told me that Carolyn Ames picked up a prescription for a big dose of ceftriaxone from our pharmacy,\" Peggy said.\n\nLois again. It always starts with Lois. She knew every drug every member of the club was taking. What the hell was this all about?\n\n\"Who wrote it?\" I asked.\n\n\"A guy named Morgan from Joplin.\"\n\n\"I know him. Dr. Morgan does GYN - solo practice in Joplin.\"\n\n\"So?\"\n\nPeggy was waiting for my answer. She must have already looked this up but she wanted me to confirm what she had discovered so she could be sure.\n\n\"I think you already know the answers to your questions, dear. Am I right?\"\n\nI could feel Peggy nod her head yes as she lay quietly next to me in the pitch-dark bedroom.\n\n\"I just want to be sure,\" she said softly.\n\n\"Okay,\" I said with a big sigh. \"Ceftriaxone is a third generation agent that gynecologists use to treat drug resistant gonorrhea. Most guys use it up front now, because the disease is very often drug resistant to start with. I don't see much clap in my practice.\"\n\n\"That's what I thought,\" Peggy said. \"Where the hell did Carolyn get the clap?\"\n\n\"There's a more important question than that,\" I said.\n\n\"What's more important than ... Oh shit! You mean has she given it to Rich?\"\n\n\"Yeah,\" I said. \"Or did he give it to her. Who's been playing around?\"\n\n\"Well none of us has any idea,\" Peggy said.\n\n\"What the hell does 'us' mean?\" I asked. \n\nThen my mind flashed to that damn luncheon group. They sometimes had lunch on Tuesday. This meant that six nosey, gossipy broads were in on this secret which meant that it was hardly a secret any more.\n\nPeggy continued, \"I checked the PDR on line from the club and told the gals at lunch what I thought. Not one of us knew about anybody Carolyn had been seeing -- of course she would have been very careful. And, I mean, Rich is a very loving husband -- I mean, we always thought he was.\"\n\n\"Yeah,\" I said.\n\n\"Anyway, the girls are gonna ask around.\"\n\n\"Jesus!\"\n\nThat was all I could say. There were going to be a lot of ladies at the club who would hear about this and all of them were gonna be \"asking around.\" I began to think about poor Rich Ames. Rich was an invasive cardiologist at the clinic - and a good one. I had met him many times and served on committees with him but I did not know him all that well. \n\nPeggy and I did not socialize with them. He did not impress me as the kind of guy who would cheat on his wife. Carolyn, on the other hand, struck me as the type. She was always a bit overdressed -- flashy -- and wore a little more perfume than I liked. She usually wore a tiny bikini around the pool that showed off a fabulous figure.\n\n\"Well, there's nothing more we can do tonight. Good night, dear.\"\n\n\"Good night, dear.\"\n\nWEDNESDAY NIGHT IN BED\n\nIn the darkness I told her what she was waiting to hear.\n\n\"I checked with Art today,\" I said, \"and Rich Ames came to see him yesterday with urethritis. A smear showed the little red bugs. Culture's not back yet, but Art started treatment. If Rich suspected he got infected from some broad he would never have gone to Art or anyone else in the clinic. He probably assumed he had non-specific urethritis, not GC. Art told him he couldn't be sure till the culture came back.\"\n\n\"If Carolyn went to a doc in another town, that makes it look like she's the one playing around,\" Peggy said.\n\n\"I agree,\" I said.\n\n\"The ladies of the club are all on red alert, putting together everything they all know about Carolyn Ames.\"\n\nJesus! I thought. If the Spanish Inquisition had a team of investigators like this, just imagine how many Spaniards would have gone to prison!\n\nFRIDAY NIGHT IN BED\n\nI was wide-awake. No way was I gonna sleep. I had to know. All through dinner I had wanted to ask her, but I had waited.\n\n\"The girls have come up with nothing. Zilch! Nobody has any clue that Carolyn is playing around,\" Peggy said. \"Have you talked to Art again?\"\n\n\"Yeah, it's GC all right. Art told Rich yesterday afternoon and Rich is pissed. Art and Rich had a long talk. It seems that Rich had not been performing his husbandly chores as often as Carolyn thought necessary and they had a big fight last spring. Art thinks Rich was so busy learning several new invasive techniques that he neglected his duties at home. Anyway, it was a bad fight.\"\n\n\"The girls picked up on that. That was a couple of months ago. That's when Carolyn got that white bikini -- and don't tell me you didn't notice that!\"\n\nI remembered that white bikini. So thin that when it got wet you could see her nipples and her beaver! She only wore it once and then somebody must have said something to her. Peggy was pissed that I was at the pool that afternoon. Why the hell she got mad at me I'll never know.\n\n\"I'm not sure I remember,\" I said acting puzzled.\n\n\"Don't try that on me you bastard! You notice every good figure at that pool!\"\n\nI laughed. \"Well, it was about that time that Art says their trouble started. Anyway, Rich called Jim Williams and retained him for whatever the hell this thing is gonna turn out to be.\"\n\n\"Jim Williams? Shit! Margie didn't mention that at lunch today.\"\n\n\"Well of course she didn't. Jim's a very professional attorney. It's none of Margie's damn business.\"\n\n\"None of her business? Margie's his wife and Carolyn is her friend. Of course it's Margie's business. I'd expect you to tell me if you got involved in this thing. You would wouldn't you?\"\n\nI didn't answer.\n\n\"Wouldn't you?\"\n\n\"I guess,\" I mumbled. \"Good night dear.\"\n\n\"Good night.\"\n\nWEDNESDAY NIGHT IN BED TWO WEEKS LATER\n\nI was nowhere near sleep. I was eager to hear what my loving wife knew. The luncheon group had met today.\n\n\"I had lunch with Margie today,\" Peggy said.\n\n\"The usual luncheon group?\"\n\n\"Yeah, and there's some news,\" Peggy said.\n\n\"There's always news when you gals get together. Gossip - gossip - gossip!\"\n\n\"It's not gossip! We exchange information,\" Peggy said firmly. \"Anyway, Jim's had a detective agency working on this thing and they've got motel records and checks and all sorts of stuff. Carolyn was really dumb!\"\n\n\"How the hell does Margie know that? Jim would never share confidential stuff with Margie!\"\n\n\"He didn't. The detective agency sent a file to Jim at home. It was marked 'CONFIDENTIAL' so Margie figured it was important and opened it.\"\n\n\"Jesus!\"\n\n\"Anyway, Margie says Carolyn's fuckin a bunch of kids -- graduate students from the university extension program. She met them taking some kind of class and then she took them to motels as singles and doubles and -- get this! -- triples. She was fuckin three guys in one afternoon! Guys fifteen years younger than she was!\"",
        "I lay there in the darkness stunned! What would cause a thirty five year old woman to behave that way? It must have been drugs or grass or maybe she was more pissed at Rich than we thought. Whatever it was, she just lost control and was fuckin like a mink.\n\n\"This is all documented with witnesses and everything?\"\n\n\"The detectives have all the proof they need. Jim was really pissed at Margie for opening that confidential package. He made her promise not to tell anyone.\"\n\nI sighed. \"And so she told all the ladies in the club?\"\n\n\"Of course not dear! She'd NEVER do that! She just told our luncheon group. That's all!\"\n\n\"Yeah, that's all! Good night dear.\"\n\n\"Good night dear.\"\n\nTHURSDAY NIGHT IN BED A WEEK LATER\n\nWe lay quietly in the dark for several minutes before she spoke.\n\n\"Anything new about Carolyn, dear?\" Peggy asked in that super sweet voice I had learned to pay attention to because it meant she knew something I didn't.\n\nOh shit! Does she know? No way. She couldn't know.\n\n\"Nothing special, dear,\" I said.\n\n\"Then what the hell is this business about Carolyn's follow-up examination being negative? You haven't examined her -- I checked your schedule.\"\n\n\"You checked my schedule?\"\n\n\"Of course I checked your schedule. I'm your wife! I always check your schedule. I just call Gail or go by your office and look at your computer.\"\n\nNo privacy! No privacy at all. She's gonna find out about last Saturday - one way or another. I better tell her before she finds out.\n\n\"Well, actually, I did examine Carolyn.\"\n\n\"When,\" Peggy demanded. \"She wasn't on your schedule.\"\n\n\"Saturday morning.\"\n\n\"Saturday morning? You don't even have a nurse available on Saturday except in the ER. Where did you examine her?\"\n\n\"In my office. Rich brought her in. He's humiliating her. He's treating her like a whore.\"\n\n\"SHE IS A WHORE,\" said Peggy, almost shouting.\n\n\"Carolyn talked to a lawyer and found out that there was no way she could walk out of this marriage with a dime. Rich can kick her to the curb anytime he wants to. She needs to stay married. She's got no choice -- she's not trained in any profession. She'd end up as a waitress or something.\" \n\n\"The bitch doesn't deserve to stay married,\" Peggy said.\n\n\"Well he brought her in to my office Saturday morning. He didn't even look at her. He just said 'Get naked bitch!' and she started to undress. Rich filled me in on what she had been doing. It was just like Margie told you. Rich talked about her fucking those kids while she stripped and then she stood there, naked, hanging her head down, humiliated, and saying nothing.\"\n\n\"He said he's already looking for another position. Obviously he can't stay in Springfield. There may be an opening in Kirksville. He's trying to decide whether to take her with him or dump her. I mean, he just said all that in front of her! She's desperate. So she's just following his orders now. Anything he tells her to do she does. She's scared to death he'll dump her.\"\n\n\"The slut ought to be scared! I hope he does dump her. She'll end up as the town whore - just public pussy! Hell! She's almost public pussy now!\"\n\n\"Where's that forgiving heart of yours?\" I asked, half joking.\n\n\"Look Tom,\" Peggy said very seriously. \"How many husbands in the club are gonna hear about this and wonder what their own wives do in the afternoon? How many marriages are gonna be needlessly threatened because one wife in our club turns into a whore? How many happy marriages are gonna have old wounds re-opened? She hurts every wife we know. Shit! I wouldn't be surprised if even YOU had been wondering about me.\"\n\n\"Peggy, I never ... \"\n\n\"I'm sorry! You haven't! Of course I know you haven't. But you're special -- not every husband is like you. That's just ONE of the reasons I love you so much.\"\n\n\"Don't get so damn serious.\"\n\n\"Okay, so you examined her in your office. No nurse or anything? Who draped her for the exam?\" Peggy asked.\n\n\"She wasn't draped,\" I said. \"She was naked.\"\n\n\"She just stripped down in your office?\"\n\n\"She stripped down buck-naked. Except for her shoes. Rich made her wear spikes. He said it made her look more like a whore.\"\n\n\"Rich is right about that -- she is a whore. But, let me get this straight. The bitch was buck-naked walking around in spike heels with you and Rich just standing there looking at her and talking about her fucking those kids, two or three at a time?\"\n\nPeggy sat up and leaned on her elbow. I couldn't see her in the darkness but I felt her hot breath on my face.\n\n\"Yeah.\"\n\n\"So what happened?\"\n\n\"I set up the table and got her into stirrups for the exam.\"\n\n\"Into stirrups? Her feet up in the air and her knees spread out wide? Buck-naked? No drapes?\"\n\n\"Yeah.\"\n\n\"Jesus! Then you did a pelvic?\"\n\n\"Yeah.\"\n\n\"You wore a glove I hope. I wouldn't want you to touch that filthy pussy with your bare hands.\n\n\"I wore a glove.\"\n\n\"You got a smear and culture for GC?\"\n\n\"Yeah.\"\n\n\"And Rich was just standing there watching?\"\n\n\"Yeah. I'd never done a pelvic on a naked lady in stirrups before and ... \"\n\nPeggy interrupted. \"She's not a lady! She's a whore! She fucks guys three at a time!\" \n\n\"Anyway, I finished the pelvic and she got up off the table. I was filling out the lab slips and she was just standing there naked -- afraid to get dressed till Rich told her to.\"\n\nPeggy was silent for a moment and then said, \"I've got a picture of that in my head.\" \n\nThen after a long pause she chuckled and said, \"And darling, what were you thinking?\"\n\nPeggy was in my head again.\n\n\"Well, it was just like she was in that damn white bikini at the pool, long legs and ... I mean really long legs and ... except ... except, there was no bikini.\"\n\nPeggy started to laugh. \"The bitch turned you on, didn't she? You finally got turned on in your office. That's a first!\"\n\nShit! Peggy can read my mind. I had taken my time on the paper work and looked at Carolyn several times and yeah, she had turned me on. Damn she had a great body! She was thirty-five and still had it. Those big tits hanging there -- just a slight mid-thirties sag -- with big hard nipples sticking out.\n\nLaying here in the darkness, I remembered those tits jiggling as she walked, and that hairy bush -- maybe the hairiest bush I had ever seen -- and I'd seen a hell of a lot of beavers over the years. As I put my fingers in her I thought about three young studs taking turns using this hairy thing.\n\nI remembered her bush showing through that wet, white bikini that day at the pool. She had showed that bush to half the guys in the country club that afternoon two months ago, when she was pissed at Rich. I think that's when she started looking for some guy to fuck.\n\nI'd done lots of pelvic exams. But naked! That was something else again. It was not something I had ever even thought about doing.\n\nRich was trying to humiliate her and he was doing a damn good job. I had the feeling that he enjoyed treating her this way. Maybe he'd keep her around for a while and have some fun with her and that thought turned me on -- thinking about what he might make her do.\n\nMy loving wife couldn't see my face in the dark -- but she didn't need to.\n\n\"Yeah! I can tell from the way you're breathing that she turned you on. You look at pussies every day draped in sheets. But not a single one of those pussies is ever attached to a bitch that's just stripped down for you and is walking around naked in spike heels doing everything she's told to do. And a bitch you know has been fuckin guys three at a time.\"\n\nShe was in my head again -- Peggy knew everything I thought about. It's a damn good thing she loves me the way she does.\n\nPeggy chuckled. \"I remember that day at the pool. Not a single guy at the club could resist that bikini! I remember the way they looked at her! And the way YOU looked at her! You horny bastard! You could see her beaver through that white bikini and her nipples too -- nipples the size of silver dollars.\" \n\n\"And if those guys couldn't resist her in that bikini,\" she continued, \"there's not a man alive who wouldn't turn on watching that slutty bitch walk around naked!\"\n\n\"Well, baby,\" I said. \"I guess, maybe, she did turn me on. That doesn't happen very often,\" I admitted.\n\n\"It doesn't happen EVER in your office! I know what's in you head and I know it doesn't. That's why I trust you to shove your fingers into every pussy in Greene County and never stray off the porch.\"\n\n\"And I know what turned you on!\" Peggy chuckled. \"It was those spike heels holding up those long legs and that big curly haired beaver wasn't it? I saw it through her bikini that day at the pool and I just knew right away that it was turning you on. That's why I got so pissed -- I want MY beaver to turn you on that way not one belonging to some other bitch. I can't even begin to imagine you watching her walk around your office buck-naked! It was that thick bush wasn't it?\"\n\n\"Well ... Yeah, baby, it was the bush. That's the hairiest bush in Greene County!\"\n\n\"Hairier than mine?\"\n\n\"Yeah, honey -- but only a tad hairier!\"\n\n\"It's funny you being turned on in your office. But you'd never fuck her - I'm in your head, remember? She turned you on big time but you wouldn't fuck that public pussy even with some other guy's dick.\"\n\nPeggy was right. I was turned on but I'd never fuck her.\n\n\"She's a bitch!\" Peggy chuckled. \"But, I can't wait to tell the girls at lunch. I want to tell them this story real slow. I know exactly what every gal at the table will be thinking when I tell it. They may not say it but they'll all think it.\"\n\n\"Every gal will think to herself, 'I'm glad that Rich didn't make that slut strip down naked and parade around in front of MY husband.' They'll all think that! And then they'll all tell me how lucky I am to have a husband who looks at pussy all day long and never, ever checks any of it out after work.\" \n\n\"Oh? And how do you know I haven't checked any of it out after work?\"\n\n\"Because I know what's in your head, darling. I know how you think and what you think. That's why I love you. Have I told you lately how much I love you?\"\n\nPeggy reached over and rubbed her hand down my stomach. Then she giggled when she felt my hard cock. She stroked it gently.\n\n\"Damn this thing feels good,\" she said. \"And it's all mine. You know baby, it ain't who lights the fire -- it's who gets to enjoy the heat.\"\n\n\"So darling, I'm gonna climb on this thing now and have myself some fun - even when I know you're thinking about another pussy. And you have my permission to think about the hairiest bush in Greene County, while I'm enjoying the heat it turned on. I know how to treat my husband to keep him. You're a keeper! And I'm planning on keeping you!\""
    ],
    "authorname": "LynnGKS",
    "tags": [],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/bedroom-conversations"
}