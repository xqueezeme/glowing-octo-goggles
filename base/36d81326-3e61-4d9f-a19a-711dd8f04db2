{
    "title": "Axiom Ch. 07",
    "pages": [
        "Rebirth. So oft talked about, celebrated in movies and literature. To be pushed again through that amnion and expectorated into life, refreshed and renewed. Was that what he was hoping for? That fateful night where seconds ticked by in acrid droplets that burned through the membranes of his memory. The one where his persona - that richly cerebral being, all logic and computations and calculations, cracked open like a chrysalis that ached to metamorphose. \n\nRebirth. Was this rebirth, then? Was this some fucking rejuvenation? The reset he needed so goddamn badly in his life, or was it nothing more than some giddy illusion of renewal that happened in the final moment before death? Whatever it was, he couldn't give a fuck anymore. This moment was a new nadir, a new depth he'd never sunk to before, and he'd be damned if life could get any lower than this right now. The only thing he knew for sure was that he would greet Death that night. \n\n-----------------------------\n\n\"She's gone into V-fib!\"\n\n\"Charging...ready. Clear!\" Shock.\n\n\"V-fib, no pulse!\"\n\n\"Charging...ready. Clear!\" Another shock.\n\nAidan watched in silent horror as they tried to restore the normal sinus rhythm of her heartbeat. Thankfully her heart had gone into fibrillations - it wasn't pumping per se, merely twitching out of synchrony. The defibrillator would restart the heart's natural rhythm, converting the chaotic spasm of the cardiac muscles into a proper functional beat. Aidan's own heart had almost ceased beating, drowning in a deluge of emotions that he wasn't ready to handle. \n\n\"V-fib, still no pulse!\"\n\n\"Charging...ready. Clear!\" Strike three.\n\nFinally, her heart kicked back into action and started beating on its own accord. The alarms quieted down and the doctors were visibly relieved. She still wasn't out of the danger zone, but she was alive. They just stood in their places around her, still watching for any signs of cardiac instability. The machines continued to beep in contentment, reporting normal values for all her vitals. Good heart rate, respiration normal.\n\nHe was still numb with shock when one of the doctors came out and started talking to him. Aidan just nodded blankly at the doctor's words. He could only catch bits and pieces of the conversation, having been a little lightheaded throughout the whole ordeal. From the snatches he had gathered, it sounded like she was going to be okay.\n\n\"...stabilized, in good condition...\"\n\n\"...under strict monitoring...watch for any developments...\"\n\n\"...was a rare complication, shouldn't be a recurring problem...\"\n\nEven so, he couldn't quite process it. Feeling a little overwhelmed, he just excused himself and started walking towards the mens washroom. The insides of his mouth felt like sandpaper and his skin had gone cold and clammy. He turned on a tap and started to splash water all over his face hoping that it would help him to sober up. \n\nLooking up, he saw his reflection in the mirror and couldn't recognize the man that was staring back at him. The man in the mirror had the look of a hunted animal. Shaken, he tried to regain his composure and continued to wash his face. Only then did he realize that his hands were trembling violently.\n\nFor the first time in many years, Aidan cried. It started as a hollow sob, a listless gasp that turned into a choked cry of anguish. After all that had happened tonight, his sanity was hanging by a thread. The same could be said for her life. \n\nHow was it that yesterday night they were discussing office gossip over mouthfuls of seafood and sangria and today her heart stopped beating for eight minutes? She was quite literally dead in both the medical and legal sense for eight minutes. Gwyneth went over to the afterlife and came back. The grief came down in torrents, destroying whatever was left of his already brittle psyche.\n\nFear. \n\nFear. The fear of losing her was such a visceral reaction, he actually felt like retching. The nausea hit him hard, inciting a gurgle of dry heaves. He felt sick to the marrow. Then there was the guilt of knowing that this was all his fault. \n\nIf only he had been more vigilant. If only he had possessed the foresight to anticipate this. If only they were prepared. If only he was less arrogant. If only she was protected. Safety deigned a price far beyond any fortune could have afforded, and he knew it. His only option now was to hope that his mistake wasn't a fatal one.\n\nThe teardrops mingled with the water on his face. There was no point in holding back now. Fear. Love. Grief. Guilt. All these years, he had thought that he was immune to this kind of crap. He'd prided himself on being the master of his feelings, displaying excellent control in every aspect. It had been so easy to laugh off the woes of those gripped by emotions - he'd made good on every opportunity to mock these poor people.\n\nOther than anger, which was his default setting anyway - he only felt whatever he chose to feel. Not anymore. Now he was totally spent, having been burned to the core. If getting to him had been their plan then well, mission fucking accomplished. They'd chosen the perfect spot and struck him precisely at his Achilles' heel. \n\nThe tears didn't last long but they made a significant enough impact. Feeling quite depleted he cleaned himself up and made himself presentable before shuffling back out in a daze. Michael offered to let him go in to see Gwyeth, saying that she was in a stable condition and that it wouldn't hurt for him to just go in and talk to her. Aidan hesitated, being worried for her well-being but upon Michael's insistence that it was totally safe, he was more than happy to take up the offer.\n\nMichael pushed open the glass sliding doors of her room and stepped aside to let Aidan through. \n\n\"Wait,\" Aidan remembered at the last minute. \"Can I borrow your stethoscope?\"\n\nMichael looked a little baffled but dipped his hands into the pocket of his labcoat and fished out the instrument without asking any questions. He would be observing them from outside anyway. Aidan closed the door behind him and moved towards the bed, his heart thumping painfully in his chest.\n\nWhen he got a good look at her his heart gave a little lurch. Looking at her, you wouldn't think that she had just narrowly escaped with her life. There was nothing to indicate what had happened other than a small wound on her left cheek which was already beginning to swell, partially hidden by the oxygen mask on her face. \n\nThe room was silent apart from the constant beep of the monitors. He settled into a chair beside her bed and leaned forward to be closer to her. Not even the injuries could mar the alluring features of her face. She didn't look like she was in pain, she just looked like she was sleeping. Serene, happy and comfortable like she was in his bed. \n\nHe wondered if she was dreaming. If she was, was she currently having nightmares about the incident? Did her mind just totally black out as a protective mechanism to survive the trauma? Could her subconscious hear him right now? He didn't know but the one thing he knew for sure was that she would be fighting. Aidan reached for her hand and gingerly took it in his as if she were made of porcelain.\n\n\"Hey, it's me.\" His voice resonated against the gaping silence of the room. \"I don't know if you can hear me, but I'm just going to try anyway.\" \n\n\"You...\" he broke off, hanging his head low, suddenly at a loss for what to say. \"Gwyneth, you simply are the most incredible person I've ever met. Words can't even begin to describe how proud I am of you right now. How I feel about you.\" He brushed a tendril of hair off her face with a gentle sweep of his fingers.\n\n\"God, you're so beautiful, you know? Everything about you endears me to you. Everything Gwyneth, every little detail.\" He looked at her bruised face and his heart felt like it was in his throat. \n\n\"Did you know that every time you're hungry, you start biting your lower lip? And I can tell when you really like something.\" He gave a shaky laugh, his nerves unsteady. \"Your eyebrow starts twitching and you fold your arms to feign nonchalance but there's that twinkle and that twitch and it gives you away.\"\n\nHe stopped for a while, temporarily crippled by the wave of affection the words drew out. \"And...and you're a bag girl. You're such a bag girl. When we're walking past women you never check out their shoes. Your eyes go straight for the bags.\"\n\nThe bittersweet memories came rushing back, all the little fragments of her that he held so dear bursting forth like flower buds in bloom. \"When you're angry and you're trying to rein it in, your eyes widen and you don't say a word. Every time you're upset, every time someone makes a mistake you just bite your tongue and graciously ignore the gaffe. You could always fire back, take up the anger and retaliate but you never do. Because that's what true strength is. Because you, Gwyneth, you embody the very meaning of courage.\"\n\n\"You're such a rarity, a gem. I wish that I could just tell you how much I love you. How you make me smile without even trying. There are so many things I wish I could tell you, but...but everything I want to say seems so inadequate. \n\n\"Right now, Gwyneth words are futile. I should have told you earlier. Should have said it to you that night - I don't know why I held back, but...Jesus, Gwyneth, please, just come back to me. Please, please promise me you'll be okay. If you can hear me, if you're there, please, just - please. Please.\"\n\nHe closed his eyes and rubbed his face, struggling to pull himself together. She still looked at peace, a proverbial sleeping beauty awaiting the fateful kiss to bring her back to life. Aidan couldn't excavate any deeper inside himself, couldn't find anything else to say. Remembering the stethoscope, he fished it out and plugged the earpieces in. His hands skated gently over her ribcage, careful not to disturb any of the electrodes that were taped to the skin of her chest. \n\nHe found a good spot and there it was again, that heartbeat. A little faint, but to his ears it was incredibly loud and extremely close. It was the only sound he wanted to hear. That was his prayer, his hymn, a sacred invocation. The anthem to his being. He just sat there, holding the stethoscope to her chest, forgetting time as it slipped past the two of them. Locked away in another universe, the world around them forgotten.\n\n---------------------------------\n\nHer family arrived not long after. He was waiting outside her room, settled into one of the chairs when the entire posse bustled in with Dylan amongst them, anxious to see her. Gwyneth's mother rushed into the room with her sons and Dylan close behind, barely registering Aidan's existence. \n\nAidan watched as the family circled his unconscious lover. As soon as she neared the bed and got a good look at her daughter, she started to blink back the tears, clapping her hands over her mouth. Gwyneth's three younger brothers milled around the bed awkwardly, wearing stoic expressions, but he could see the grief hidden in plain sight on their faces. \n\nGwyneth's mother reached out, took her daughter's hand and kissed it. A small sob escaped from her as she tenderly stroked her daughter's hair. Dylan put a supporting arm around her, rubbing his hand up and down her shoulders in an attempt to console her. \n\nSeeing the frank affection in the room did nothing to assuage his guilt. It only made it worse. Still he couldn't tear his eyes away from the family in front of him. It affected him deeply, to see the love of a close-knit family - Gwyneth's support team. They were here now, they were going to be there for her, just as they always have been. \n\nDylan glanced at him and caught his gaze briefly, but his eyes flicked back to Gwyneth, as if he couldn't even bring himself to look at Aidan. It was a small, quick gesture but Aidan could feel the hostility in it. He felt like an outsider, an interloper that was encroaching on personal family territory.\n\nJulian, who was sitting in the chair beside him, noticed his discomfort.\n\n\"Perhaps we should leave,\" he advised Aidan. \"Allow them to have some time to themselves. They should have all the space they need.\"\n\nAidan didn't want to go but he knew that his presence couldn't be what the family desired. He wanted to stay and maybe help out somehow - leaving right now felt so rude, but Julian had a point. This was a family crisis and family was everyone in the room. Not him. He didn't belong here. He nodded back at Julian and the two men got up, ready to make themselves scarce. They hadn't taken more than a few steps when Gwyneth's mother walked out of the room and caught up with them.\n\n\"Excuse me, are you Gwyneth's colleagues?\" \n\nAidan turned around to face her. She was either nervous or cold, judging by the way she crossed her arms in front of her chest. Her wide, almond-shaped eyes were searching the two mens faces for answers. It was evident that she'd been crying throughout the night - her nose was all red and puffy and her eyes looked pretty bloodshot.\n\n\"Hi, I'm Aidan Scodelario.\" He extended his hand meekly. \"We spoke over the phone?\"\n\nHer eyes shone in understanding and she took his hand, giving it a halfhearted shake. \"Ah, I remember. Have you had a chance to see her yet?\"\n\n\"Yes, yes I have. The doctors said that she's in a stable condition. All we can do now is wait for her to wake up.\" He couldn't tell if she knew about the cardiac arrest. If she didn't, should he tell her? He darted a look at Julian, who must have read his mind because he shook his head slightly. \n\nAidan hesitated for a moment, but all he had to do was take one look at Gwyneth's mother and he knew. What kind of a manipulative asshole would withhold information like this from a distraught mother? True, it couldn't be what she needed to hear right now, but better for her to find out now than later.\n\n\"Mrs. Kenner, Gwyneth went into cardiac arrest an hour ago.\" As soon as the words left his mouth he saw the shock ripple through her face. \"The doctors managed to revive her, and she's safe now. They've assured us that there's absolutely nothing to worry about - it was an extremely rare complication and her vitals look very good.\"\n\nHe wasn't sure that she heard anything other than the words 'cardiac arrest'. A frown creased Julian's brow, showing that he disapproved of Aidan's decision. The pain was so evident on her face that Aidan briefly regretted telling her. It was hard enough to know that her daughter suffered from life-threatening injuries without having to hear about the complications. \n\n\"What happened?\" Her voice came out as a hoarse whisper. \"Who did this to her? Why would anyone do this?\"\n\nJulian's head snapped up at that question and his eyes flashed a warning at Aidan. He obviously didn't see a need for an outsider to know the finer details of the Ceres coup. The arrest was talk of the town right now and the last thing Julian wanted was for people to know about their involvement in the case. \n\nAidan caught his friend's nonverbal signal, feeling more irritated than ever. What a coward, he thought. Julian was all grand plans and big money but ultimately he had no qualms about running to Aidan for help. He was thoroughly fed up with his friend's attitude by now.\n\n\"We believe that she was attacked because of her involvement in the Ceres lawsuit. Has she mentioned-\"\n\n\"That's enough,\" Julian cut him off in a stern voice. \"Mrs. Kenner,\" Julian put on a polite, almost patronizing smile. \"We hope you understand that this involves some sensitive matters-\"\n\n\"Lynch, stay out of this.\" Aidan's eyes were burning with anger. \"I make the decisions here, not you - and I think that she has every right to know.\" His tone was scathing. \"In fact, I think that maybe it's time you left. Don't worry, I have everything covered over here. I'll keep you posted.\"\n\nJulian lifted his chin in defiance but he knew that the fight was lost. Tonight he'd seen a whole new side of Aidan he'd never seen before and if anyone was going to try to anger this man, it sure as hell wasn't going to be him. Aidan was strung so tightly, it looked like he could snap at any moment. If anything, Aidan was right - Julian wasn't much of a man of courage. He just glowered at Aidan before turning sharply on his heel to leave. Aidan watched him disappear, his fists clenched into tight balls.\n\nWhen Aidan turned back to face Gwyneth's mother he noted the confusion on her face. This wasn't the first impression he was hoping to make, but circumstances left him with little choice. He took a deep breath and gestured towards the chairs. \"Mrs. Kenner,\" he said gently, \"I promise to tell you everything about the case and how Gwyneth was involved. Have a seat - would you like some coffee?\"\n\nAnd tell her he did. From the facts of the Ceres case to the grisly chase scene at the dockyard - he spilled it all except for one: he omitted the details of their budding romance. Somehow he felt that this wasn't the way he wanted her to find out about their relationship. \n\nShe didn't say anything much, mostly she just nodded and answered with the sporadic 'yeah' and 'I see'. In fact, the more he told her, the more calm she seemed to get. At some points in the conversation her sons wandered over but she held up her hand and gestured for them to leave them alone. Finally he finished the story and they both sat there in silence. He watched her as she stared at her paper coffee cup, unable to predict how she was going to react.\n\n\"So...\" Mrs. Kenner lifted her face to look him in the eye. \"You took her off the case?\"\n\n\"I did. She wasn't too happy about it, but she knows why I did it.\"\n\nUncertainty clouded her eyes. \"But if you already took her off the case, why did this happen? She had nothing to do with Ceres. She's not a threat.\"\n\nAidan winced at the question. As much as he didn't want to tell her the truth just quite yet, he couldn't leave her in the dark. She was sharp - she had sussed on pretty quickly and definitely wanted an explanation.\n\n\"I believe...\" he laced his fingers together and stared at them. \"I believe that they went for her because we were romantically involved. We've been going out for a few weeks now.\"\n\nA pregnant pause hung in the air. When he looked up to meet her eye, he could tell that she was feeling quite conflicted. As much as she didn't want to blame Aidan, she was still a grieving, hurting mother. It was hard for her to ignore the fact that her daughter had almost died for one sole reason - because she had dated this man. Logic would dictate that technically, it wasn't his direct fault but the both of them knew better. Aidan himself carried the guilt and Mrs. Kenner didn't know whether or not to be angry at him.\n\n\"I'm so sorry,\" Aidan said quietly. \"I'm so very sorry about everything. I never meant to cause her harm, never meant to put her in any danger. There really is no point in me going on and on about how I didn't mean for anything to happen - the fact is, it did happen and it's all my fault. I should be the one lying there, not her. I'm the reason she's in there right now.\" \n\nHis jaw hardened and he shook his head. \"If you want me to stay away, I will. I've caused enough hurt, the last thing I want, is to hurt her any more.\"\n\nA dart of pain stabbed through his heart. He loved her - he really did, with everything he had. But after tonight, it would seem that he was all kinds of bad for her. She was so beautiful - outgoing, patient, kind. Big-hearted and generous, so full of love. And him? An arrogant workaholic loner with anger issues, amongst many others. \n\nShe deserved so much better and he didn't feel like he could be the man to make her happy. Heck, he couldn't even protect her. The guilt continued to gnaw at him as he thought of how he'd failed to do something as basic as keep her safe. Mrs. Kenner turned away from him, staring blankly at her daughter's sleeping frame. She didn't say a word.",
        "\"I'll leave,\" he offered, getting up from his seat. \"Again, I'm so sorry for everything, Mrs. Kenner. I hope that she'll get well soon.\"\n\nBefore he could walk away, she spoke up without turning to face him.\n\n\"Do you love her?\"\n\nHe froze, a little taken aback by the question. She slowly turned to face him, pinioning him with a serious gaze as her eyes met his. \"Do you love her?\" She asked again.\n\n\"More than anyone in the world could possibly imagine.\" His face was blank but she could see the sadness in his eyes. \"Your daughter is the most incredible woman I've ever met, Mrs. Kenner. I've never known anyone so strong, so resilient, and I-\" He halted. \n\nThe passion was creeping back into his voice but he kept it in check reminding himself that this wasn't about trying to win her over. \"I'm so sorry, I'll leave you be.\" Swallowing hard he turned to walk away, feeling the dread throb in his chest.\n\n\"If you really love her - if she means that much to you, you should be here for her. Stand by her side through all of this. If what you said is right - if she really is in there because of you - then you owe it to her to see this through. The least you could do is to take care of her. Be her rock.\"\n\nHe was utterly floored. When he looked at her face he could've sworn that it was Gwyneth's - he saw the soft, warm eyes of Sayuri Kenner and understood where Gwyneth got her forgiving nature. Of course she had her doubts, he wouldn't be surprised if she blamed him. It made it all the more remarkable that she was doing this - choosing to set aside any grudges, wiping the slate clean, giving him a chance to prove himself.\n\n\"It would be unfair for me to fault you for loving her. As much as I want to hold you accountable I think we both know that it's going to lead us nowhere. If she got into this because she was with you, it would be senseless to ask you to leave. Just promise me you'll take good care of her, Aidan. This is my daughter we're talking about.\"\n\nHope blossomed anew within him, fresh determination surging forth in a cleansing wave. \"I would be more than honored to, Mrs. Kenner.\" His eyes were serious. \"Thank you so much for letting me be here. I swear, I will care for her and cherish her with everything I have.\" He sounded almost fierce with intent.\n\n\"Good.\" She nodded briefly but there was a small smile on her lips and her eyes were friendly. \"Now, there's no need to be so formal. Call me Sayuri.\"\n\n-----------------------------------\n\nOver the next few hours, Aidan and Sayuri gradually warmed to each other. They just went on talking in one of those conversations that didn't seem to ever end. Initially they discussed the more trivial matters such as working life at the law firm and the Ceres scandal. Somehow the conversation shifted to personal experiences, where Sayuri regaled stories from Gwyneth's childhood days and Aidan talked about how he came to meet Gwyneth. \n\nAidan admired Sayuri right from the start. She was a soft-spoken Asian woman, gentle by nature but obviously not one to suffer fools gladly. It was easy to see where Gwyneth got her natural good mood from - her mother had the same pleasant temperament, the same calming aura that made people feel relaxed and welcomed. Even in times of crisis Sayuri held herself well, exuding grace in every respect. \n\nOne of the doctors came over and told them that Gwyneth's condition was stable for now and her vitals showed no signs of permanent damage. They would be allowed to see her once she woke up but until then there was nothing much for anyone to do. Upon hearing that, Sayuri decided that it was best for the boys to be sent back to the hotel to get some rest.\n\nShe was a motherly character - an Asian mother, in essence. Underneath the layers of tender love and caresses lay the firm skeleton of a strict disciplinarian. Aidan quickly realized that when he saw Sayuri manage her sons - all three complied with her instructions without so much as a peep. Left alone, the both of them talked and talked and talked finding solace in each other's company, bound together in mutual grief and worry.\n\nThere was a small frisson of excited activity when Gwyneth woke up. From a distance, Aidan noticed her head moving on the pillow and alerted a nurse who confirmed that she was indeed conscious. The anesthesia and sedatives from her surgery must have worn off. As much as he wanted to see her, he encouraged Sayuri to go in and see her daughter first. The least he could do was afford them some privacy and bonding time after all the trauma of the night.\n\nObserving them from outside was like watching a silent movie. Sayuri's face crumpled and tears streaked down her face as she picked up her daughter's hand and kissed it. And then she was nodding and talking, the other hand gently stroking Gwyneth's hair. The weight on his shoulders felt a little lighter but the guilt still felt as black as tar in his chest. The only reprieve was that she was safe for the time being.\n\nAfter a while Sayuri slipped out of the room, her face shining. She gave Aidan a brief squeeze on the arm and wiped away a final tear with her cardigan sleeve. \n\n\"She's asking to see you. Go ahead, go in.\"\n\nThe sliding doors made a hissing sound as he closed it behind him. There she was, lying on the bed with a lazy smile on her face. He settled into the chair beside her and took her hand. Gwyneth was a little groggy but undeniably lucid. Seeing her awake and conscious flooded him with relief. Tears sprung to his eyes but he forced them back not wanting to show her how torn up he was inside.\n\n\"Hey,\" his voice was gentle and loving. \"How are you feeling?\"\n\n\"Pretty badass,\" she drawled, a small smile on her lips. She meant it as a joke but he flinched at her words. \"I'm fine, don't you worry. Sorry for the scare back there.\"\n\n\"Sorry? You're sorry? Jesus, if anyone should be apologizing, it's me. Gwyneth, it's all my fault that this happened. I should have seen this coming, should've upped security detail-\"\n\n\"Don't -\" her voice surged with aggression, startling him. She was still weak, but there was no mistaking the anger in her tone. \"Don't you dare. No, not now - it's not fair. I don't have it in me to argue with you right now, so shush.\"\n\nStill he refused to let it go. \"No, Gwyneth,\" he persisted, sounding determined \"I am to blame here, and you can't deny it-\"\n\n\"Aidan, please?\" She sighed. \"Not here, not now. Please.\" She closed her eyes, sounding so tired and exasperated that he decided to back down. \n\n\"I'm sorry, I'll stop for now.\" He pressed her palm to his lips. \"God, I've been worried sick. When I saw you with the two men...\" he drew in a ragged breath. \"If only we were a little faster, if only we had arrived there a little earlier...\"\n\n\"Aidan, what did I just tell you? No, okay? No.\" Despite the obvious fatigue he could still hear the edge in her voice. \"I'm alive, I'm safe, and that's all that matters. Don't dwell on it - it's over now, alright? It's over now. It's over now.\" Her head sagged back into the pillow as she repeated it, as if to convince herself. \"It's over now.\" She exhaled deeply, obviously a little more than exhausted. \n\n\"You should get some rest, love.\"\n\nHer eyes flashed open in an instant. \"No please,\" she suddenly looked so fragile, her voice sounded so small. \"Please don't go yet. I don't want you to leave.\"\n\n\"I'm not going anywhere, baby,\" he comforted in a deep voice. \"I'll be here, I promise. Now go to sleep, you need your rest.\" He kissed her on her forehead and continued to hold her hand while sitting next to her bed.\n\nMollified, she smiled up at him. She really was feeling quite tired. Gwyneth was about to turn away and close her eyes when he called her name.\n\n\"Gwyneth?\"\n\n\"Mmm?\"\n\n\"I love you.\"\n\nShe was momentarily silenced, stunned by the three words she hadn't expected to hear from him. Her eyes met his and they looked at each other for a while, not saying anything. Truth is she loved that he said it but she couldn't help but wonder if that was just a knee-jerk reaction to the events of the night. Maybe this was just an impetuous declaration of love, precipitated by fear instead of true affection. Maybe -\n\n\"I know what you're thinking, and no, it's not like that.\" His eyes were serious but warm. \"I've felt this way for a while now and I should've told you. Should have said it out loud that night, but I didn't, and that was my mistake.\" His fingers clasped firmly over hers.\n\n\"When I saw you lying there, the thought that I could have lost you without ever telling you...\" he shook his head. \"...it made me realize that I never want to live another day without saying out loud just how I feel about you.\"\n\nThere was a lump in her throat and at that moment, she felt like she was going to cry.\n\n\"I love you, Gwyneth.\" The look in his eyes was as tender as she'd ever seen them. \"You never fail to amaze me and I'm so glad to have you in my life.\"\n\nShe smiled a little and closed her eyes to try and stop the tears but a few drops managed to leak out anyway, rolling down her cheek. Catharsis. It had been one hell of a night and the last thing she should be feeling was joy but nothing could rob her of the happiness in her heart now. She felt his thumbs carefully brushing away the tears on her bruised cheek and then the rustle of his lips on her forehead. She could feel his breath on her skin, warm and familiar.\n\n\"Get some rest, my love. You're safe now. I'm here and I'm never going to leave.\"\n\n-------------------------------\n\nThe next few days passed by in a semi-blur. Gwyneth spent most of her time sleeping. Her abdomen was swollen and bruised as a result of the injuries she'd sustained as well as the surgery. This caused plenty of discomfort so she was put on a low-dose of morphine, which made her mind all addled and hazy. She could vaguely remember snippets of moments with everyone: her three brothers, Dylan, her mother and Aidan - but the chats were usually brief and generic. How are you feeling? Get well soon. Take care. It was like being moderately drunk, where she semi-remembered what she was doing but for the most part she was running on autopilot. \n\nSoon the swelling reduced and so did the pain. She was weaned off the morphine and her condition improved greatly which meant that she was transferred out of the ICU into a private room. Without the miasma of drugs clouding her mind, she felt much better and a lot more alert. The first thing she noticed was how her mom and Aidan were so easy with each other. She was talking to her mom in the room when there was a soft knock on the door. In bustled Aidan, who was manhandling several Dean and DeLuca bags. Sayuri welcomed him with a broad grin.\n\n\"Hi,\" he greeted them with a friendly smile and turned to address Sayuri. \"I didn't know what you'd need, so I just bought some food that I thought might be convenient. The usual hospital fare isn't exactly what you'd want to eat.\"\n\n\"Aw, you shouldn't have, Aidan.\" She took the bags from him and touched his arm. \"Thank you so much, sweetheart.\"\n\nGwyneth was a little surprised but she felt a glow of pride for him. He really could be so sweet sometimes. As her mom rummaged through the paper bags he came over to kiss her, looking all clean and handsome like he always did.\n\n\"You look a lot better today,\" he commented. She smiled up at him and nodded. \"Are you feeling well? Does this hurt?\" He gingerly touched her cheek, just below the swelling.\n\n\"It doesn't really hurt. I feel a whole lot better, honest. Does this mean I'll be discharged soon?\"\n\n\"Let's not rush things now,\" he cautioned. \"Take all the time you need to recover. It's best that you not stress yourself out - after all, you're still a little frail.\"\n\nIt was true - there was no disputing her physical condition. \n\n\"But I've been bedridden for almost a week now,\" she complained, sounding more whiny than she'd intended to. \"I'm tired of being here, Aidan. I just want to go home. That's where I can really recuperate and normalize again, not here in this...\" she waved at the space around her. \"...sterile little box.\"\n\nHis face twisted briefly. \"Gwyneth, I understand that you want to go home but I'm a little worried about you going back to your place -\"\n\n\"I'll be fine!\" she interjected passionately.\n\nHe was adamant. \"You'll need security detail, at least for the time being. I'm not quite ready to say that you're in the clear just yet.\"\n\n\"I'm in a hospital now,\" she threw up her hands in exasperation. \"What difference does it make? I'm pretty sure a locked apartment is just as -\"\n\nHe cut her off smoothly. \"There are currently three ex-SAS operatives stationed around you, all of whom are disguised as medical personnel in this hospital.\" He pointed at her wrist. \"That bracelet has a built-in GPS that can pinpoint your location accurate to the meter.\" The look on his face was stern. \"Trust me, there's a lot more you don't want to know about, so yes, I'd say that it makes a huge difference.\"\n\nShe just stared at him, struggling to process the information let alone think of a comeback. Her mom chimed in unhelpfully. \"Darling, he does have a point.\"\n\nGwyneth rolled her eyes, trying to cool down her rising temper. She could feel her mood steadily slipping south. \"Oh come on, not you too. I'll be fine, I know I will. You know what - if you're really going to insist on this, you can have half the CIA camp right outside my front door for all I care but I'd really like to go home. It's been a rough few days, okay? I'm tired of being here.\"\n\nHer words hung in the air, bouncing between the three people in the room. She wasn't sure if she quite liked the look of silent communication between Aidan and her mom. Since when did they get so chummy, anyway? They'd only just met and now they were making decisions together already?\n\nThe sound of knocking broke the silence. The door edged open and Dylan's head poked through.\n\n\"Hi, is she awake?\"\n\n\"Oh, she's up alright. Come on in, dear.\" Sayuri gestured for him to come closer. Dylan shuffled awkwardly towards the bed with a bunch of sunflowers in his hand. As if the atmosphere in the room wasn't stilted enough as it is Dylan's presence just added to the weird tension that loomed about.\n\n\"Aidan, I think we need to talk about where Gwyneth's going to stay when she leaves this place.\" Sayuri gave him a meaningful look and subtly nudged her head at Dylan's direction. \"Shall we take this outside?\"\n\nHe got the message. \"That sounds good. I do have a few ideas...\"\n\nThe both of them walked out of the room leaving Gwyneth alone with Dylan. He tried on a smile but she didn't smile back - she wasn't feeling particularly cheery right now. Neither party said a word for a few painfully awkward moments. She looked down at her blanket and pretended to be engrossed by the pattern of the fabric. How did things get so strained between them? He had been her best friend for so many years and yet now they were acting like strangers.\n\n\"I'm sorry.\" \n\nHer head jerked up at the sound of those words. \"I'm so fucking sorry, Gwyneth.\"\n\nShe could see the remorse on his face and his broad shoulders were hunched over. Suddenly, he didn't look so tall anymore. His usually jovial smile was replaced by a solemn, tight-lipped expression. \"I'm so sorry I behaved like that. I know I was being a juvenile dickhead the other day.\"\n\n\"Yeah you were. Seriously, that was totally uncalled for.\"\n\n\"I know, I know. And then I left you at work without giving you a ride back...\" He heaved a sigh and perched himself at the edge of her bed. \"If I had stuck around to at least send you home...\"\n\n\"Don't even go there.\" Her voice flashed with anger. \"I'm not entertaining this from Aidan and I sure as hell am not going to take it from you either. Enough with the speculating, enough with the hypotheses. It happened, I survived, end of story. I don't want to talk about it and honestly, I just wish that everyone would leave it. Can you?\"\n\nShe could tell that he was shocked by her response. He hadn't expected her to react this way, so Dylan just nodded his head obediently. Gwyneth sighed and shifted around on the pillows.\n\n\"I just don't get it. Why all of a sudden?\" she asked. \"What the hell was up with you that day? Don't tell me that it was nothing - I'm in a really bad mood right now, I'm running low on patience and I'm about this close from shouting at someone.\" She held up her thumb and forefinger to demonstrate.\n\nHe knew her well enough to understand that he was skating on thin ice now. Like her mother, she usually kept her cool but when she exploded, not all the king's horses and all the king's men could put everything right again.\n\n\"I was jealous,\" he admitted, shoving his hands into his pockets.\n\nHearing him say that rang alarm bells in her head. Did he say that he was jealous? She stared at him, a little slackjawed. What if...what if this meant that he had feelings for her? Dylan saw the look on her face and quickly realized what she was thinking.\n\n\"No, no, no...\" he backtracked hastily. \"Okay, bad choice of words. I wasn't really jealous, more of...envious. That's it, envious. I don't have any feelings - I mean, um, I-\" He clamped his mouth shut, looking like he was figuring out what to say. \"Look,\" he said. \"I think we've made it pretty clear that we're just friends, right?\"\n\nShe eased back in relief and nodded. \"Yeah, yeah we have.\" She frowned in confusion. \"But...why envious?\"\n\nDylan looked genuinely caught out. \"I don't know...\" he started, sounding contrite. \"Life has really been working out for you lately. Your job was going great, you were so in love, you looked so happy...\" He broke off and shook his head with a pained look on his face. \"I know, I know - what kind of friend does that make me, huh? Not that I wasn't happy for you - I really was, G. I still am. It's just that we started hanging out less and you were so wrapped up with your new guy, you were busy with work...I guess I just felt a little left out. I mean, when was the last time we hung out, just the both of us?\"\n\nShe felt a twinge of guilt and all traces of anger dissipated from her mind. He did have a point - ever since she'd started going out with Aidan, she hadn't really had the time to be friends with Dylan. She realized that she no longer knew the little details of his life - who was he interested in? Had he been dating anyone recently? How was he feeling lately? To add insult to the injury, she had deliberately left him out of the loop. He must have felt so alien, felt like he wasn't to be trusted. She reached out for his hand and squeezed it.\n\n\"Look,\" she said in a soft voice, \"maybe the fight was partially my fault too. I know we haven't really been spending much time lately because of me. And maybe I should have told you who I was dating. We're friends - we're best friends. If you're not the one I'm going to tell, then who?\" \n\nHe half-smiled at her in return. There was a moment of silence as she contemplated whether or not Dylan had already figured out that she was dating Aidan. It definitely would've raised his eyebrows to see the berg being so involved in Gwyneth's life, especially in the past few days. Dylan wasn't stupid. He was the King of Gossip for a reason.\n\n\"So...\" his tone was lighthearted. \"Aidan Scodelario, huh? Can't blame me for not guessing that one.\" He tried to joke.\n\nShe flashed a halfhearted smile back at him, feeling a little awkward. Heart-to-heart conversations were never her forte. She thought about what he had said at the diner and realized that he was right. She hadn't told him about her fling with Aidan precisely because she knew that he would disapprove. \n\nAnyone in their right mind would because at the end of the day Aidan was still her boss. The question is, what would Dylan say now? Also, what did it mean to her whether or not her best friend approved? A million questions began to pop up in her head.",
        "\"He really cares for you,\" Dylan said quietly. \"You should have seen him, G. I mean, I don't know him very well, but I've never seen a man in such a state before. Especially not someone as controlled and collected as the Berg.\"\n\nListening to him say that made it hard for her to breathe. Her throat constricted and tears were springing to her eyes. She just looked down at the blanket and toyed at it with her fingers, acutely aware of her heart throbbing in her chest.\n\n\"Are you guys together?\" he asked cautiously.\n\nShe bit her lower lip. \"It's complicated,\" she confessed after a pause.\n\n\"Right.\" He nodded briefly, his expression blank. \"Just...one more question and I'll leave it, I promise. I won't ask you anything else.\" She gave him her ok.\n\n\"I know you've thought this through, and I trust you,\" his voice was wary, as if he was afraid of angering her. \"Gwyneth, does he make you happy? Does he truly make you happy?\"\n\nShe looked into Dylan's eyes and saw the concern in his gaze. It was a difficult question, one she hadn't really thought about - but now she realized why she had put off talking about this to him for so long. As long as she kept it from him, everything was secret - so secret, it almost felt surreal, like a dream. If things hadn't worked out between Aidan and her, she could just pretend that nothing ever happened. As long as it was a secret, it didn't really exist. Not properly, anyway.\n\nBut telling Dylan would make it real. Letting her best friend know about the relationship would have carried it from the realm of secrets to the crassness of reality - plucked it from a hazy fantasy of hidden flirting and kisses and dropped it into a world governed by logic and real rules. She was disappointed with herself for being so oblivious all this time, for ignoring the obvious and letting it fester until it smacked her in the face.\n\nDylan's honest question left her feeling shamefaced. His care and concern for her was genuine, fortified through the many years of friendship and trust. Maybe he did behave like an asshole back at the diner, but only because she wronged him first. She had lied to him and deliberately misled him when all he'd tried to do was be a friend.\n\n\"It's okay, you don't have to answer if you don't want to.\"\n\n\"No, no, it's fine.\" She shook her head free of the jumble of thoughts and plastered on a half-smile. \"Yes, he makes me happy. He really does, Dee.\" She covered his hand with hers. \"Thanks for asking.\"\n\n\"That's all I need to hear.\" The easy smile on his face was back and she could feel the warmth returning to the room, the tension evaporating into thin air. \"For what it's worth, I think that he's a good guy. Not that you need my permission or approval...\" he hastily added.\n\nShe gave a sound that sounded like half-sob, half-snort. \"Thanks. Okay, maybe it's not exactly your permission I need but you're my best friend. Of course you'll have to approve of whoever I'm going out with.\"\n\n\"Well I'm glad you're with him,\" he tried to sound cheerful. \"Although I can't seem to understand what you see in the man. He's not even good-looking,\" he teased.\n\n\"Yes he is,\" she huffed, pretending to feel insulted.\n\n\"No he isn't. He looks like alien, what with the long face and all. And the cheekbones. He totally looks like some extraterrestial.\"\n\n\"Shut up-\"\n\n\"Oh, he definitely looks like an alien. Not just an alien, a scary alien. A scary British alien. Tayke me t'your leedah,\" he mimicked in a robotic voice, making fun of Aidan's British accent. \"And bring me a cup of tea while you're at it.\"\n\n\"Shut up!\" She was giggling now.\n\n\"I don't care what you think, I'm just going to put it out there and say that I'm better looking than he is.\"\n\n\"Oh, please,\" she said sarcastically. \"You're just jealous. I distinctly remember you comparing him to Batman.\"\n\n\"Say all you want, baby girl but you know I'm prettier.\" He batted his eyelashes at her and tossed his curly hair back. \"Maybe I'm born with it, maybe it's Maybelline.\"\n\nShe burst into peals of laughter. Things between them were going back to normal and it felt good. They continued clowning around for a while more, exhuming all the old inside jokes and had a good laugh about it all. Eventually the chuckling winded down and they settled into a comfortable silence.\n\n\"So,\" she asked breezily, \"who were on the list of Mystery Man suspects?\"\n\nDylan threw his head back in an agonized laugh. \"Oh God, you're probably going to kill me but oh what the hell, why not. Let's see, there was Eric Branstead, Jamie Gassels, Kelvin Pryor...\" A look of growing horror spread across her face as he counted off his fingers one by one.\n\n\"What. The. Fuck?\" She gawped at him. \"A whole city full of men I could have hooked up with and you really thought that I was with those jackasses?\"\n\n\"Hey!\" He held up his hands defensively. \"I figured it was someone you were ashamed of which meant that either he was hideous, had a small dong or was a blithering idiot. Everyone on the list was all three.\"\n\nShe rolled her eyes. \"Well I suppose that does make sense.\"\n\n\"Besides, you do know that these morons fancy you, right? Not just them, actually - just about all of the men in our department are in love with you.\"\n\n\"Oh shut up,\" she snapped, feeling a little embarrassed. \"You're making that up.\"\n\n\"It's true and you know it.\" He leaned back with a satisfied smile, basking in his victory. She slumped back into her pillow, a little winded from all the talking and joking. Suddenly a thought occurred to her and she sat upright.\n\n\"Wait, Dylan - our department.\" A bolt of alarm shot through her. \"Have the rest heard about what happened?\"\n\nHe winced at her question but admitted that news had already broken out despite Aidan's attempts to corral it in. The Ceres arrest was the hot topic of the moment, a scandal of gargantuan proportions - news of Marty's death was already splashed across newspapers and websites worldwide. The good news was that although the press knew about an LSA employee being assaulted, they hadn't been able to ascertain her identity. Not that people working in the firm didn't know - news traveled fast and she was quite sure that everyone was whispering her name now. \n\nDylan explained that no one from the firm even so much as dared speak to the media. Aidan had made it pretty clear that any employee caught mentioning Gwyneth to the press would pay for their grievances at great cost. \"And I quote this verbatim,\" Dylan fished his phone out of his pocket and read the email aloud. \"Anyone seen discussing Ms. Kenner in public, whether in regards to her hair color or about her involvement with the case should consider themselves fortunate to be cleaning loos at Chipotle.\" He snickered at the end of the sentence.\n\nShe couldn't help but snuffle with laughter. \"Yeah, that sounds like him,\" she said dryly, trying to hide the glow of pleasure that was radiating inside her. This was her man looking out for her, pulling rank and terrorizing people into silence. Dating the Berg definitely came with its perks. \n\nThe happy glow quickly faded as she realized the other implications of this case. People were going to talk. As of now, she was an office celebrity for all the wrong reasons. First the assault, then Aidan's reaction. Rumors about her sleeping with Aidan were probably already spread far and wide.\n\nDylan saw the expression on her face and immediately understood what she was thinking about. He squeezed her hand in reassurance and tried a comforting smile. \"Don't think about it just yet. The situation right now is very volatile but the talk will die down. By the time you get back, I'm sure things will be a lot better.\" She smiled back weakly at him and tried to shake off all negative thoughts.\n\n\"I'm really sorry, but I have to go now. I'll be back soon, okay? Take care and get well soon, girl. I'm so sorry we fought.\"\n\n\"It's nothing. Pigs will fly before you stop acting like a child. I'll see you when I see you.\"\n\nHe gave a little laugh, ruffled her hair and left. In his absence the silence of the room gaped widely. Gwyneth just sat in the quiet, thinking about everything that had happened in the past few days. It felt like everything began that night at her place when she was cooking with Aidan. That was the peak of the rollercoaster ride before everything rushed down in a mad frenzy. Right now she understood how Alice must have felt while tumbling through that rabbit hole.\n\nAll semblance of normality was gone. In a few days, everything had changed. Marty was dead. Her mentor, the man who had taught her so much about being a lawyer was now gone. Her job had swerved sharply off course and gone into a trajectory she never envisioned. She'd just survived an assault where she was stabbed. Aidan and her openly admitted to each other about being in love. Well, almost openly. She realized that this meant that life would never be the same again - today was going to be the beginning of a whole new chapter, whether or not she was ready for it.\n\nThe time alone gave her the time to digest the events that had transpired. Given that she'd been surrounded by people 24/7 over the past few days, she hadn't really had the time to lean back and just think about things properly. So far, no one had really tried to probe her about the ordeal. They understood that the trauma was still fresh and didn't want to stress her any more. Her refusal to talk worked well for the time being, but how long could she keep at it?\n\nShe sighed and rubbed her temples with one hand. Her own words echoed in her mind - I don't want to talk about it. Leave it. That was her method of handling things, wasn't it? That was always what she did - avoid. Refuse to discuss matters and pretend that everything was alright. She'd done that with Aidan and now with the assault. \n\nIt was the same thing over and over again. The same defense mechanism she had since she was young - if anything really mattered, if it really hit close to home, she would put her shields up and refuse to talk about it. Either that, or she would try to diminish the magnitude of her problems and act like she wasn't really affected by it. Only if and when someone brought it up and placed it right under her nose would she actually sit down and confront it. \n\nShe heard the doorknob creak open and Aidan walked into the room. He settled down beside her and took her hand, rubbing circles on her skin with his thumb. Looking at him tugged at her heartstrings. She felt so confused, so...shaken up by everything. A part of her wanted to insist on resolving the issues between them once and for all. \n\nAnother part just wanted to let things take its natural course and see how things played out. She could see the undisguised affection on his face, that special cryptic smile that he reserved for her and only her and it sent a warmth diffusing through her body. Even if they lacked a definition, she knew without a doubt that he loved her.\n\n\"How are you and Dylan? Everything alright?\" Her mom must have told him about the fight.\n\n\"We patched things up.\" She linked her fingers with his and stared at their intertwined hands. \"Also...I told him about us.\" Her face flushed pink. \"I don't know if you mind and I'm sorry if it bothers you but I promise you that he'll keep mum. I only wanted him to know because he's my best friend...\" she could hear herself rambling as she tried to explain.\n\nHe cut her off by stroking her cheek. \"It's okay, I don't mind it one bit.\" he murmured. \"So what did you tell him we were? Friends with benefits?\" His eyes creased into a teasing smile.\n\nHer cheeks flamed beetroot red. \"I just told him that it's complicated, that's all. To be honest...\" she flicked her eyes away from him, \"...I don't really know what we are.\"\n\nShe looked back up at him hesitantly, feeling the mix of fear and trepidation. Time to break the habit, she thought. No more fake smiles, no more avoiding. She really needed to know. Her eyes met his, searching his blue irises for the answer. His expression was so gentle and loving that it made her want to smile. She thought about how he had looked at her when they first met - that irritated anger, the stone cold expression, the hard jawline. They'd come so far since that fateful meeting.\n\nWithout saying a word he cupped her face and covered her mouth with his, drawing her into a deep kiss that took her breath away. His lips were firm and sweet, gently parting hers so that she could taste him on her tongue. She could feel his warm hands on her chin, holding her to him like he never wanted to let her go.\n\nWhen they broke apart he continued to cradle her face in his fingers. \"I want to be with you,\" he said with an air of finality. \"I want you, I want to be with you,\" he pressed a small kiss on her forehead, \"and I really hope that you want to be with me too.\"\n\nA rush of emotions cascaded through her at the sound of his words. She could feel her chin trembling and she was blinking fast, trying to quash the tears before they even began. She just nodded up at him with a wobbly smile and circled her fingers around his wrists. The plan to stop the waterworks wasn't really working - she could feel a stray tear beginning to coalesce, a wet sheen beginning to glaze on her eyes.\n\nHe knew that she wouldn't want him to see her crying. \"So...\" he pulled a mock serious expression. \"Be my date to the prom?\"\n\nShe gave a shaky giggle and sniffed back a tear. \"I'd love to, but I'll have to get out of this place first.\" She held up the hand where the drip needle went in. \"This isn't really the fashion statement of the year and while two's company, three's a crowd.\" She pointed at the pole that held the i.v. bag. \"Good luck trying to dance with the both of us.\"\n\nHe laughed and released her chin to take her hands. \"Well, have I got good news for you. Your mother and I have talked to the doctors and you've been given the green light to be discharged.\" She grinned like a maniac. \"But...\" he cautioned, raising his eyebrows. \"You'll still be getting home calls and you'll need a caregiver in the interim.\"\n\nHe hesitated for a second. \"With your needs in mind, your mother and I are of the opinion that it might be better if you stayed at my place for a while. Just until you're healthy enough. Security won't be an issue, Alfred will be there to help out, there's plenty of room for your mom to stay...\" She could've sworn she saw something shift in his eyes. \"...and after you're all better, we'll see how things work out.\"\n\nShe bit her lip to keep from smiling. The urge to be cheeky was too strong to resist. \"Asking me to move in with you, huh? Well that's pretty soon.\"\n\nAidan paled a little. \"No, that's not it,\" he reacted immediately. \"Gwen, it's only for the time being. The last thing I want is to pressure you into doing something you don't want to. It's not technically moving in together but if you're uncomfortable with the idea, you don't have to-\"\n\nIt was so funny to see him so rattled. She'd never seen him so jumpy before and by george, it was hilarious. \"Relax,\" she soothed. \"It was a joke. I'm just kidding around, that's all.\" Still he looked unconvinced. She felt a little sorry now - after all they had been through in the past few days, she was pretty sure she'd just hit a sore spot. Damn comic timing, she thought. Always with the inappropriate jokes.\n\nHer face softened and she patted at the spot on the bed right beside her. \"C'mere,\" she beckoned at him to come closer and he did. With him only inches away she could smell his aftershave, so close that she could almost see every fleck of those incredible irises. She slipped her arms around his waist and pulled him close, pressing her nose into his shirt. \"Sorry for the bad joke. Not one of my better ones, I'll have to admit.\"\n\nHe didn't say a word, so she dug her chin into his chest and looked up at him. \"All humor aside, I think that's a pretty good idea. I do like the thought of having you around for the next week or so. With everything that's happened, all I really want to do is just be in your arms.\" she nuzzled his neck and felt his arms tighten around her. They just sat there in the comfortable silence for a few moments, enjoying the peace of their solitude.\n\n\"I see you and my mom have become new BFFs.\" \n\nAidan gave a low, rumbling laugh. \"Jealous?\"\n\n\"Insanely,\" she grumbled. \"A few days with her and she's already taking your side during arguments. Hmph.\"\n\n\"If you want to win an argument, then start putting forth points that actually make sense.\"\n\n\"You did not just diss my skills of rhetoric. Oooh, you'll pay.\"\n\n\"Bring it. I don't know if you've heard,\" he leaned in and added in a conspiratorial whisper, \"but I'm a pretty decent lawyer.\"\n\n\"You're a terrible comedian, you know that?\"\n\n\"Right back at you.\"\n\nShe laughed and pulled his head down for a kiss, only to be interrupted by the buzzing from his pocket.\n\n\"I'm so sorry,\" he grimaced, pulling the phone out of his pocket and taking a good look at it. \"I have to take this.\"\n\nShe just nodded at him and watched as he took a few steps away from her, talking into the phone in a low voice. He must have been so busy these few days. Yet he always found the time to come and visit her, no matter how brief. She really appreciated that - a man of his work calibre couldn't really afford time to faff around with his personal life but he was going out of this way to do so. His eyes would flick over hers and catch her gaze every now and then. Whenever he did that she could see the faint shadows underneath his eyes.\n\nHe looked physically tired and she wondered if he was driving himself a little too hard. She felt a pang of tenderness at the thought of it - she knew that he must have been stalking about, making sure that everything about her was hushed up. And he was obviously taking such good care of her family. She wasn't going to admit it but she loved how her mom had warmed up to Aidan. It didn't take a genius to figure out that he was stretching himself thin trying to manage everything at once.\n\nStress was one thing but she knew that this was another. As hard as the past few days were on her, she was sure that it was hard on him, too. The big difference was that everyone fawned over her and showered her with sympathy, whereas he received no such warmth. To everyone he was still the Berg - they forgot that he, too, had feelings. That he felt the pain in secret.\n\n\"Hey,\" he strode back towards her, looking guilty. \"I'm so sorry, but I've been called back for an emergency. As soon as it is cleared up, I'll be back, I promise.\"\n\n\"Don't worry about rushing back,\" she looked up in his eyes and even if he looked tired, she could see the spark in his eyes. \"Thanks for dropping by. I know things must be crazy right now. \" She pulled him in for a kiss and when they broke apart she gave him a meaningful look. \"I love you.\"\n\nHis lips twitched into a half-smile and she could see the joy spread across his face. \"I love you too. See you later, love.\" \n\nShe could have sworn that as he walked out of that door, his steps were lighter and his head was held a little higher.\n\n--------------------------------------------\n\nHe found her lying on the sofa with her eyes closed, her arms neatly folded across her chest clasping her iPod to her heart. Strains of music leaked out from the oversized headphones she was wearing. Judging by the faint notes of the sonorous bass and the treble echo of strings, he guessed that she was listening to classical music. He leaned over her, wondering if she was napping or just immersing herself in the melody.\n\nHis face hovered inches away from hers, so close that if she was awake she could definitely feel the warmth of his skin. She didn't stir, which meant that she was asleep. He smiled to himself and studied her face, admiring how beautiful she looked in the dim light. The perfect nose, porcelain skin, immaculately groomed eyebrows. He could remember how he had checked her out that day at Costa's, when her pretty face was smiling at a total stranger - a different smile from the one she shared with him. A different smile from the one she wore in her sleep. Gently, he fluttered his lips over hers, brushing against them first to feel their softness - once, twice - before he captured her in a firm, unrelenting kiss that lured her out of her sleep.",
        "She took in a deep breath as she awoke, her eyes flickering wide open. Recognition flashed in her eyes and she closed them again, enrapt by his kiss. Her hands were moving all over his body, longing to feel the skin underneath his expensive clothes.\n\n\"Did you just get back?\" she murmured up at him when they finally broke apart.\n\n\"Yeah. What are you doing out here? Shouldn't you be in bed?\"\n\n\"Just listening to some music. If I sleep any more, I'm going to wake up as a koala.\"\n\n\"So what was that you were just doing?\" (I don't understand this sentence.)\n\nShe ignored his question and hauled herself into a sitting position. \"What time is it?\"\n\n\"Just gone midnight.\" He slipped an arm around her shoulders as they snuggled up beside each other. \"Is your mom awake as well?\"\n\n\"She's asleep. Been a tiring few days for her, taking care of me and all. I know it's been hard on you too.\" She looked up at him and traced a line on his face. \"Aidan, you look drop-dead exhausted.\"\n\n\"I'm perfectly fine,\" he said easily but she could see the tension in his shoulders. He was immaculately dressed as always but it couldn't detract from his haggard appearance. He flashed a smooth smile at her but she saw right through it and at that moment she wished that he wouldn't behave like that. She understood that he was trying to shield her from the multitude of problems that must have been swarming their way, yet it didn't feel quite right. There was just something about the cool, controlled mask of his that unsettled her.\n\n\"How was your day? You look well.\" He stroked her hair and tried to change the topic.\n\n\"It was fine, I guess. Moving around is a lot easier now.\" She shrugged in disinterest. \"How are things at LSA? I'm dying to talk about work. As ludicrous as this sounds, I actually miss the office.\"\n\n\"There's been a slight unrest - understandable, given the circumstances but it's all under control. Don't worry, it's not something you'd want to trouble yourself with.\" he said smoothly. Disappointment swelled inside her, poking underneath her skin in uncomfortable lumps. The conversation felt farcical - she felt like she was a client of his who was being handled by his smooth talk. \n\n\"Let's not do this,\" she said, sounding defeated. \n\nAidan just gave her a quizzical stare. \n\n\"Let's not look each other in the face and pretend that everything's okay when it obviously isn't. We've come this far already and I'd like to think that we've made progress. I don't want to take two steps forward and three steps back. If we can't talk to each other honestly...\" she sighed and shook her head. \"I don't know what else we can do anymore.\"\n\nHe looked stunned, but only fleetingly. There was nothing to dispute - he knew that she was right. She could see the guilt on his face, the apology written all over his face even before his lips said it. He laced his fingers in hers and touched his forehead to her temple. \"I'm sorry,\" he admitted. \"I just didn't want you to worry.\"\n\n\"I know,\" she said softly. \"Ironically, you not telling me anything is exactly what makes me worry.\"\n\nHe let out a small, bitter laugh. \"You overthink things sometimes. Been reading the news lately?\" He jerked his chin at a copy of the day's New York Times lying on the coffee table.\n\n\"I have. I don't know how you managed to throw a cloak over the incident but you certainly did. It's a wonder my picture isn't splashed across the centerfold spread of some tabloid.\"\n\n\"No easy feat, I'll admit. Every fucking newspaper is lapping this up like a pack of rabid animals. These people will stop at nothing for a good scoop or two.\" He looked so angry that Gwyneth reached out to pat soothing circles on his back.\n\n\"Thanks for doing this for me. I'm so sorry I put you through this.\"\n\n\"Jesus, please don't say things like that. There's nothing humanly possible that I could do to make up for what I've put you through.\"\n\nShe placed a hand on his knee and shook her head slightly. \"No, it's you who shouldn't say things like that. You're taking such good care of me and I'm really lucky to have you.\" \n\nHe wanted to say something in return but she stopped him by pouting and giving him a pointed look before he could utter a word. Gwyneth pressed a kiss onto his stubbly jaw and hugged him tight.\n\n\"Is that what you've been worried about, then?\" she asked.\n\nShe could see the hesitation flicker in his eyes and his face just closed up like a shutter. Whatever it was, it clearly meant a lot to him. She was secretly thankful that they were sitting side by side - a face-to-face conversation would have felt a little too confrontational. He just stared at the coffee table in front of them as he marshaled his thoughts. She let him take all the time he needed.\n\n\"My father knows about us,\" he said quietly and looked up to face her. \"He knows that I'm seeing you. As a matter of fact, as soon as he heard about Marty he must have known that you were in danger. That's why he came to talk to me.\"\n\nShe pondered his statement for a few moments. \"Is that a good thing or a bad thing?\"\n\n\"It's not bad, it's not good...it's more of a lacuna.\" \n\nThe latin word for loophole. \n\n\"If he wants to manipulate me in the future, this will be his point of entry. That's how he'll get to me - by getting to you first.\"\n\nHe took her hands in his. \"Don't take this the wrong way, Gwyneth but you're my weakness.\" The usual confidence in his voice was faltering. She could feel the walls inside him breaking down, having been chipped away brick by brick over the past few weeks. \"I don't care if he tries to fuck with me but if he wants to hurt you...\" he trailed off and tightened his grip on her fingers.\n\nHer heart sank. His words were bittersweet. To love her was to be happy, to be complete. But to love her was also to be weak, to be foolish, to expose his Achilles' heel. There was no right or wrong, they were just caught between a rock and a hard place. She swallowed back the lump in her throat as she saw him facing the coffee table with a blank stare. \"Would...would he really? Would he do something like that?\" she asked nervously.\n\nAidan's jaw hardened and his pupils constricted into tiny pinpricks of fury. \"You don't know what kind of a man he is, Gwyneth.\" \n\nShe could hear the anger returning to his voice. What was Nicholas Scodelario really like? Was he really so abominable that his own son couldn't trust him with a personal relationship? What could he have done to earn this kind of hate? She had so many questions but the rigid mask of long-buried anger on Aidan's face scared her. She didn't dare ask. Aidan exhaled sharply and she could see the muscles of his jaw working.\n\n\"I've never talked to you about my mother, have I?\"\n\nShe shook her head no. In terms of his private life, she knew close to nothing - other than excerpts of his childhood here and there, she didn't know much about his personal history. They never discussed it. Aidan had been really reserved about it, even as they got to know each other better.\n\nHe didn't take his eyes off the table in front of him. \"I was six when they were divorced. Way too young to really understand what was going on.\"\n\nA flash of pain crossed his face but it quickly disappeared. \"To be honest I don't really remember much about her, only bits and pieces here and there. Playing with her, being read bedtime stories...that's about it. But even then, I've always remembered her as being wonderful. Loving, always giving hugs and kisses...in my memories, at least.\"\n\n\"She wasn't a blue blood - she was a country girl who moved to the city and ultimately met my father. Fell in love, got married, fell out of love. Legal papers claimed her infidelity as grounds for divorce. I don't know how true that is and I probably never will.\" He sounded so matter-of-fact, like he was reciting details of a court case from a textbook.\n\n\"He made damn sure that she lost everything. Imagine this - my father, with all his money and his contacts and his legal prowess and my mother, a paralegal from Blackburn - the divorce was open shut. Bear in mind this was the early 80's - the law was very different back then. She ended up with no alimony, no job, no custody of her children, no visitation rights - absolutely nothing at all.\"\n\n\"I don't even remember saying goodbye to her. She was there one day and the next, she was gone. Growing up, I struggled to understand. When I was old enough, I got curious. I started to look for her when I was sixteen.\"\n\nHe turned to face her, making sure that she was looking into his eyes. He wanted her to understand everything that he went through. \"She was dead. She'd been dead nine years by the time I found out. Hung herself three months after the divorce. You can only imagine how desperate she was, Gwyneth. How dire everything must have been to have driven her to do such a thing.\" He said it bluntly, his expression blank and cold.\n\nGwyneth felt so horrified she could barely breathe. Was there ever an appropriate response to hearing something like that? And then there was the way he'd said it. So stoic and devoid of any emotion, like spitting out cold hard facts. He'd been hardened over the years - this awful part of his past had rotted and petrified into stone - to the point where he couldn't feel any more. She looked into his eyes and she understood. He'd gone through all the phases - hurt, anger, rage, loneliness, betrayal - and finally, indifference. Aidan continued to hold her gaze, sturdy as ever. \n\n\"That's the kind of man he is, Gwyneth. It's a bit of a stretch to call him evil - no, he's not particularly villainous. But he is cruel, and he's heartless. He's Nicholas Scodelario for a reason - he's not going to care who he hurts as long as he achieves what he wants.\"\n\nHe leaned back into the sofa, sighed, and ran his fingers through his hair. \"I know that I'm just being paranoid because it's very unlikely that he'll have a reason to hurt you. As far fetched as it is, the fact is that he can if he wants to. There is always a possibility, always a chance, and that's enough to keep me worried.\"\n\nHe left it at that. She didn't say anything in response simply because she didn't know what to tell him. They just looked at each other in silence as Gwyneth tried to digest everything that he just told her. She didn't even know where to start. Hearing his story made her want to comfort him and sympathize but she knew that they were beyond that now. He wasn't talking about this because he wanted to weep about his lost childhood. He brought this up because he was concerned about the future. The future that looked to be in a very precarious position right now. Was that what he was trying to tell her?\n\n\"Does this mean...do you think that we shouldn't be with each other?\" she asked in a timid voice. \n\n\"Not at all.\" He seized her hands and pulled her close. \"Make no mistake, I want to be with you. When I told you that I am never going to leave you, I meant it. I promised that I would take good care of you and that's precisely what I'm going to do.\" He gently stroked her uninjured cheek, the look in his eyes soft. \"I just have to make sure that he'll never be able to touch you and figure out a bastion of defense against any possible chances. I'll find the answer soon, don't worry. That's all.\" \n\nHe leaned back into his seat and she could hear the confidence returning to his voice. He sounded like his sophisticated, assured self again, ready and confident to take on the world. \"Sorry about the lengthy rant back there, I suppose I digressed quite a bit. You're not feeling well and here I am, unloading all of this on you. I'm so sorry, Gwyneth.\" He brought her hands to his lips and kissed her fingers. \"But I promise, there's nothing for you to fear. Trust me, everything is under control. Have a little faith in your friendly neighborhood Berg.\"\n\n\"Oh, god.\" She let out a shaky laugh, feeling a little overwhelmed by everything they'd just talked about. \"You have no idea how glad I am that you're telling me all this.\" She held his face in her hands and looked him in the eyes. \"I can't believe you kept this from me, Aidan. Jesus, no wonder you look so strung out.\"\n\n\"I'm so sorry. I didn't mean to upset you. And I definitely do not look strung out - you're just coddling me.\"\n\n\"Yeah? You look like a beat-up raccoon,\" she mumbled, rolling her eyes and sighing. \"You really think we'll be fine?\"\n\n\"We'll be absolutely fine,\" he affirmed. \"Now you should be concentrating on getting well. How are the wounds healing?\"\n\n\"They're healing up very nicely.\" She pulled up a little bit of her t-shirt to show him her abdomen. The stab wounds themselves were healing fast and had scabbed over by now but the wound that made the biggest impact was the one for her laparotomy. To fix her up they had to open her up first, leaving a long midline scar tracing vertically over her belly with the stitches still in place. Aidan visibly winced at the sight of the wound and he reached out, just barely skimming his fingers over the injuries with the lightest touch. She knew that he was afraid of hurting her.\n\n\"Stitches are coming out this weekend,\" she explained as she saw one of his fingers dance over the black thread. \"Told you I'll be fine,\" she tried to reassure him.\n\nHe looked up at her with a strange, unreadable expression on his face. \"You're holding up so well, Gwyneth and I think it's incredible. Are you sure you're alright? Do you want to...talk about that night?\"\n\n\"I'd rather not talk about it, if it's okay with you.\" She could see the doubt on his face. \"I know you're worried, hell, everyone is. And I appreciate it, really but to tell you the truth I feel perfectly fine. I'm not scared or traumatized or anything. It happened and I'm glad I came out of it alive. That's all it is to me.\"\n\n\"Are you absolutely certain?\"\n\nShe sighed in mild exasperation but turned it into a small smile. \"I'm positive. Just because I don't go around putting on airs, doesn't mean I'm all soft on the inside. I'm tougher than I look, you know. When I say I'm okay, it really does mean that I'm okay. If I ever feel like something's wrong,\" she pressed her nose into his shoulder, \"I'll come to you, I promise.\"\n\n\"Please do. Anything wrong, just tell me, alright? Talk to me.\" \n\n\"Yes, boss.\" She gave him a mock salute.\n\nHe pulled her close for a deep kiss, running his fingers through her hair as he tasted the soft sweetness of her lips. \"We should get you back to bed,\" he murmured into her cheek.\n\n\"I don't want to sleep anymore, I'm not tired!\" She knew that she sounded like a petulant child.\n\nHe gave her the come-on-now look and she sighed in return. Arguing with him was the last thing she wanted to do right now. He helped her up, supporting her with one arm as they hobbled over to the bedroom that had been prepared just for her - Aidan had insisted on it because he didn't want his daily schedule to interfere with her rest. She loved how he tucked her into bed, pulling up the duvet and smoothing it over her chest as she snuggled in the covers. In the dim light his cheekbones looked more pronounced and she realized what Dylan meant when he said that he was better looking than Aidan.\n\nMaybe he had a point - Aidan definitely wasn't conventionally good-looking, but in her eyes he was as handsome as anyone could be. And when he had on that one special smile, the one she knew was for her and only her, it was more than enough to fill her heart with enough affection to make it burst. He leaned over to kiss her forehead and a wave of girly pleasure washed over her.\n\n\"Goodnight, darling. Sleep well, I love you.\" he whispered. She could hear him switch off the bedside light with a click, along with the rustle of his clothing as he moved away and the quiet sound of the door closing.\n\nExcept that she didn't. For the next few hours she tossed and turned, fidgeting restlessly in bed as her brain refused to hibernate. Thoughts of the conversation she had with Aidan swirled in her mind and she couldn't help but try to analyze every aspect of the scenario. Over the past few days she'd seen a whole new side of him she never thought existed - of course he could be easy and charming and there was that bitter, slightly introverted facet to him - but this kind of vulnerability was new.\n\nShe never thought that Aidan Scodelario would actually be worried, especially considering that his Type A personality usually was more angry than it was fearful. \n\nAnd there was that story about his mother and the childhood that never was, his parent-less upbringing that left him with no one other than a brother to cling on to and grow up with. Could that be the reason he got along so well with her own mother, then? Maternal intuition was a force more often right than wrong, she thought and perhaps that was it.\n\nSighing, she threw off the duvet and clambered out of bed gingerly. She padded over to his bedroom and quietly edged the door open, poking her head through to check if he was asleep. His room was empty, the air vacant and still. Frowning, she closed the door and shuffled over to the next possible place he could be at - the study. As she neared the study she noticed that the door was ajar, leaking light and noise from the narrow gap. With great care she sneaked up and peered through the thin gap, hoping that she could observe him while being unnoticed.\n\nHe had already showered and changed, and was dressed in a simple black t-shirt and boxers. The eyeglasses were back, reflecting the ghostly light of the laptop he was currently staring at. Apart from a small study lamp and the brightness of the computer screen, the room was completely dark. \n\nHe was obviously reading through something, one hand working the scroll button of the mouse while the other covered his mouth in a pensive manner. She glanced at the clock on the wall nearby - 2.21 a.m. \n\nHis phone rang shrilly, breaking the silence. Without taking his eyes off the computer, he scooped up the phone and pressed it to his ear.\n\n\"Hello? Right.\" She watched as he listened intently to the person on the other line. Whoever was on the other line must have said something wrong because suddenly his face darkened with anger and his brow creased in annoyance. \"For fuck's sake,\" the sharpness of his tone startled her, \"how did this happen? Who the fuck was in charge of this?\" The call had all of his attention now, the laptop forgotten. \"Let me speak to him,\" he demanded.\n\nWell, maybe he wasn't that different. She watched him hiss into the phone, practically combusting with anger and she realized that he was still the man she once feared. It wasn't going to change just because she knew a different side of him now. \"...an unregistered debenture is a liability beyond words, do you hear me? Hand me back to Jeremiah.\" Pause. \"Sam, have him clear his desk. Terminate effective immediately.\"\n\nJesus - did he just fire someone over the phone? She pursed her lips and widened her eyes, deciding that maybe it was better if she went back to her room for now. Making sure to be absolutely quiet, she backed away from the door and turned to walk back to her room. She had a suspicion that the currently fuming Aidan wouldn't want to find her out of bed. If he did...yikes. He'd probably -\n\n\"What are you doing up?\"\n\nShe would've jumped out of her skin if she could, but she just spun around to see him staring at her with warm, serious eyes. At least he didn't look to be very pissed off with her.\n\n\"I could ask you the same thing,\" she hazarded. \"It's two in the morning!\"\n\n\"Not in Singapore.\"\n\n\"Oh.\" A little embarrassed, she looked down at her feet. Well that explained how he was dealing with an active office at this hour.\n\nHe walked over to her and wrapped her in his arms. \"Go back to bed,\" he chided gently. \"Or do you need a lullaby to send you off?\"",
        "\"Well maybe if you danced for me, I'll be able to sleep. I've heard that watching ballet is very relaxing.\"\n\n\"Not a chance.\"\n\nShe pouted. \"Come to bed with me? I'm sure that's just what I need to send me off for the night,\" she pleaded.\n\nHe threw a brief look over his shoulder back at his office. \"Give me half an hour,\" he relented and she felt a gust of triumph. \"C'mon, let's tuck you in.\" He looped an arm around her waist and steered her towards his room. \"Can't believe I'm putting my grown-up girlfriend to bed like some errant, bedtime-rebelling kid.\"\n\n\"Say what you want, I know you're enjoying this.\" He just rolled his eyes with a small smile on his lips. Halfway through the night she awoke briefly to find herself safely ensconced in his arms. Sleepy but satisfied, she slipped back into slumber a happy woman. Everything felt like it was in its right place. Everything felt settled.\n\n-----------------------------------\n\nOr maybe it wasn't so settled. Over the next few months they tumbled through the motions of moving on. Some nights she couldn't sleep no matter how tired she was, for some inexplicable reason. On those nights he would stay up with her and they'd just talk. It didn't matter what about, they could talk about anything at all - whether it was about the incident itself, or about the Dow Jones Index, or whether or not Matt Smith was as good a Doctor as David Tennant - they would just talk to each other until Gwyneth found her peace again and drifted off to sleep in his arms.\n\nShe had her own demons to exorcise. True to her stubborn self, it was months before she finally admitted to having some sort of stress reaction towards the incident. After all that time spent claiming that she was okay the effects eventually rose to the surface and became visible to those who knew her well. \n\nFirst came the episodes of her sitting all alone and staring into space, jolting with a start when she was discovered. She also gradually realized that she'd stopped cooking, in most likelihood an unconscious attempt to avoid being near knives. She discussed it with Aidan, which helped a great deal but sometime later on she talked it over with a clinical psychologist in an attempt to free herself once and for all.\n\nSlowly but surely they helped each other pull through the ordeal. The scars on her belly healed way before the emotional ones did. She remembered with explicit clarity the time they'd gone back to Port Elizabeth as a means of obtaining closure. It was late at night and he'd brought along some security escort - more as an emblem of reassurance than an actual safety measure itself. He walked beside her as she explored the area, taking tentative steps with her arms folded against the cold. He could see her eyes roving around the place as if she was trying to make sense of something.\n\nHe would have offered to take her hand but she kept her arms folded, claiming that the air was too nippy. With her scarf looped in a thick knot around her neck and the knitted beanie on her head, her bulky clothes almost seemed to swallow her whole. She just continued to survey her surroundings without saying a word. At this hour, the dockyard was practically deserted and the sound of their footsteps resonated off the corrugated metal of the cargo boxes.\n\n\"I want to run,\" she suddenly announced, unwinding the scarf around her neck.\n\n\"What?\"\n\n\"I want to run,\" she repeated firmly. \"You can tell them to leave, I'll be fine.\" She indicated at the muscular men that were milling around them. \"I just want to run, that's all.\"\n\nAidan regarded her curiously for a moment. He dismissed the men with a wave of his hand and turned back to face Gwyneth, who was wriggling out of her thick coat and dropping it to the ground.\n\n\"What are you doing?\" he rushed towards her, alarmed. \"You'll catch a cold-\"\n\n\"Run with me,\" she interrupted him before he could finish. \"Don't ask me why I'm doing this. I don't really have an answer for that. Run with me?\" she asked again. She raised her eyebrows at him and started to walk backwards, keeping her eyes fixed on him.\n\nWhen she saw his small answering smile she returned it with one of her own, turned around and broke into a full sprint. He followed right after, easily catching up with her in a few long-legged strides. She glanced at him as they ran side by side, tearing through the empty space in an imaginary race. She could hear the pattering of their feet on the gravel, the wind whooshing in her ears as she ran with all her might. She ran like she did that night, uninhibited and furious, sending shockwaves rippling through her body each time her feet came into contact with the ground.\n\nThe cold air bit at their exposed skin and Gwyneth was half certain she would have frozen to death but the heat from the exertion warmed her from inside. They just continued running until the frigid air got a little too much for Gwyneth and pricked like a thousand icy needles inside her lungs. She slowed down and petered out to a stop, her face slightly flushed and she was panting. She just stood there with her hands on her hips, slightly hunched over as she tried to catch her breath.\n\n\"You alright?\" he asked beside her, a twinge of concern in his voice.\n\n\"I'm fine,\" she nodded back at him, sucking in a breath and rubbing her arms as the adrenaline-fueled heat ebbed away and the cold started to crust on her skin.\n\n\"Here,\" he took off his trench coat and draped it over her, making sure she was nicely bundled up in it. She wanted to protest - even with his suit jacket on, without the coat he'd freeze - but he stopped her before she could get a word in edgewise.\n\n\"No,\" he warned, sounding totally unamused. \"Keep it on.\"\n\n\"Thanks,\" she said sheepishly. \"Shouldn't have tossed the coat just now. That was stupid.\"\n\nHe just raised his eyebrows and gave her one of those you-bet-it-was looks, slipped an arm around her waist and held her close in an attempt to keep her warm. \"You alright?\"\n\n\"Yeah,\" she breathed, a little winded. Gwyneth looked up at him to catch his scrutinizing gaze. \"Yeah, I'm good. You, on the other hand, must be freezing. You should have your coat back-\"\n\n\"I'm perfectly fine, thank you. Let's go pick up the one you discarded in glee and hopefully you'll think twice before doing a public striptease at this time of the year,\" he said dryly.\n\nShe bit back an embarrassed smile. They walked together in silence with her arm looped through his, relishing the shared tranquility between them. Neither of them had to talk about the running to know what it meant or to know how it made them feel. Because this time round, there was no one to chase after them, no harm snapping at their heels. Because this time round she didn't run from, she was running to.\n\nWhen they arrived home, they took their time undressing each other, mapping out each others bodies with their lips. The topography of each others bodies were so familiar now - every hair, every wrinkle, every freckle - he particularly loved the small mole at the side of her hip, while she cherished the faint wrinkle just near his left temple. In the shower their hands roamed all over, not so much for lathering soap as it was for pleasure. She cried out when he pushed into her, his hands holding her hips to support her weight as her legs curled around him. He kept the strokes maddeningly slow, wanting her to feel every bit of every inch of his hardness. Warm water cascaded over their joined bodies as she whined his name over and over again, her whole vocabulary reduced to just one word. With every leisurely thrust she begged and cried out in ecstasy and expressed her love - all with different variations of his name. Aidan, ay-den, Ayd'n, Hay-dn. \n\nIn bed, he arched over her lying body - one of her favorite positions, no matter how uninspired it may be - because this was what lovemaking was supposed to be like. To have a man's body looming protectively over her, possessing and pleasuring her while she looked up at him and let him see all the wonderful sensations he was making her feel. She cried when she came, from love? Happiness? Freedom? Maybe all three. They fell asleep in a tangle of limbs with Aidan still buried inside her and she thought - yes, yes, definitely all three.\n\n------------------------\n\nTWO YEARS LATER\n\n\"And this was at a souk in Marrakech, not far from the Palais de la Menara...\" she explained, her fingers pecking at the laptop that was connected to the massive TV screen.\n\nThey were in the Kenner family home over in Chicago for one of the annual family gatherings and were taking the opportunity to share stories and photos of their recent travels. The two-month holiday saw them hopping all over the world, pinpointing the places Gwyneth longed to visit the most, starting with Malaysia and ending at France. The idea was first conceived on a Saturday evening when Aidan came home to find Gwyneth watching Anthony Bourdain on the TLC channel with a wistful expression on her face.\n\nHe'd suggested that they took some time off for a trip but she thought he was joking when he talked about a 2-month break and subsequently believed that everything he said after that was a good ol' castle in the sky. She played along, throwing in all the whimsical ideas her mind could think of until he sat her down and asked her, very seriously, whether she could really afford to take two months of leave with her new job as legal counsel at JP Morgan Chase.\n\nShe stared at him dumbly when the question popped out of his mouth. The thought of someone like him taking two months off work to travel with her was nothing short of absurd. They'd been through crazy things alright but this ranked pretty high up the list. Stupefied, she stammered out a vague answer about seeing what she could do. \n\nNot long after the attack, she had decided to leave LSA because she could only have a long-term relationship with one or the other - Aidan or the firm - never both. His offer to help her job-hunt was met with a staunch rejection. There was no way she was going to let anyone edge in on her path, and he knew it. \n\nOf course, he was a little surprised at her decision to hop over into investment banking. That was until he heard her chatting away with the COO of the Bank of Japan, her melodious voice lilting and dancing, utterly feminine and beguiling...yeah, investment banking looked to be a pretty good match.\n\nThe holiday was probably one of the best decisions they'd ever made together, a step forward that helped mature the relationship by leaps and bounds. Nothing could reveal a couple's dynamics quite so well as the process of traveling together. They'd returned with suitcases full of souvenirs for the family and several memory cards full of photos to match.\n\nOne of her cousins' young children streaked through the living room, shrieking in delight as she tried to evade the sibling that was giving chase. \"No running downstairs!\" someone shouted above the din of excited youngsters. The whole house was bustling with activity, packed to bursting with the entirety of the Kenner extended family. The adults had congregated in the living room, eager to hear stories about Morocco while the adolescents sequestered themselves into a locked room upstairs. The younger ones were having a jolly romp with one another, indulging in the rare chance they got to see their cousins.\n\n\"No, David, no!\" One of Gwyneth's cousins scolded her son, who was reaching for the folded sari that Gwyneth had brought from India. All around the room, almost every family member had a small pile of gifts sitting in front of them, courtesy of the traveling couple.\n\n\"Here, David, I have something for you,\" Aidan enticed, digging a hand into his leather satchel. The young boy bounded over to him with hungry eyes, anticipating a goodie or two. Aidan pulled out an Iban hand-carved flute and handed it to the kid. \"Sorry,\" Aidan shot an apologetic look at the boy's mother, \"but this is probably going to drive you insane for a week.\" It worked as a temporary distraction, little David tottered away to show off his new toy to his playmates.\n\n\"Back to Marrakech!\" another cousin interjected impatiently. \"Oh my God, the place looks amazing...look at those carpets!\"\n\nThe photos flicked by and Gwyneth gave a running commentary about each picture with Aidan supplementing any missing details. After Morocco, they moved on to Istanbul. Thanks to the vintage Leica that Aidan had bought her as a gift - the same camera her father had used - each shot came out vivid and brilliant. She paused the slideshow to fish out a handful of blue amulets, each with an eye painted on it and offered it to her cousins who received it with enthusiastic hands. \"This is a nazar,\" she explained, \"it's supposed to protect you from the evil eye.\" She smiled as she saw them ooh and ahh over it, slipping it over their necks and checking out how it looked on them. It was for this reason that she bothered with souvenirs in the first place.\n\nEveryone laughed at a photo of Gwyneth posing with a red Jeep, wearing aviators with a cheeky grin on her face. \"This is us in Cappadocia, on the way to Goreme...\" she narrated, blushing a little. She pressed a button and the next picture popped up, prompting a collective gasp around the room. A vibrant, multicolored hot air balloon was anchored to the ground, already fully inflated and contrasting beautifully against the cerulean blue of the dusky Turkish sky. Even if they were adults, everyone was acting like a child again, wide-eyed and thrilled by the playfulness of the idea.\n\n\"You guys rode in a hot air balloon? Oh my freaking God!\"\n\n\"I can't believe it! What was it like? Tell! Tell!\"\n\nAidan beamed encouragingly at Gwyneth. She flicked through the next few photos - self taken shots of the couple in the airborne balloon with the camera held out at arm's length - to the chorus of envious sighs from everyone. They almost died when they saw the panoramic shots Gwyneth took from her vantage point above, displaying the majestic rock formations that rose like taupe daggers from the ground. Across the rolling badlands stood tall spires of volcanic rock, proud and tall in their natural beauty.\n\nThe next photograph was obviously taken with a long-lens by someone else riding in a different balloon. It showed Aidan pointing out the photographer's existence to Gwyneth, who was squinting towards the camera with her hand held over her eyes like a visor. This was follow by a couple of shots with the happy couple smiling and embracing each other...then a few where the two were obviously deep in conversation, talking about something serious.\n\nGwyneth glanced over at her mother and noted that she had pricked up in suspicion. Sayuri Kenner sat up straight, leaning forward with keen interest. Something about the photo gave them away and the excited chatter was fading, the air in the room gradually becoming thick with anticipation. The photographer's balloon rose slightly higher than the couple's, allowing him to capture properly what was going on in the basket. \n\nThis was the moment everyone had been waiting for - the money shot. A photo of Aidan in the basket on one bended knee, holding out what must have been a ring in front of a surprised Gwyneth, who had a hand clapped over her mouth.\n\nMayhem. The whole room broke out in a complete pandemonium, mostly composing of feminine shrieks and squeals that could have rendered anyone deaf. The noise was so loud that even the teenagers came out of their room to investigate.\n\n\"But you're not wearing a ring!\" David's mother cried out passionately and the room fell into awkward silence as everyone turned to stare. \"What?\" she shrugged, only a tiny bit embarrassed, \"don't tell me I was the only one who checked out her hand as soon as she walked in.\" \n\nHer other female cousins nodded in avid agreement. \"Where's the ring?\" they demanded in unison. The greedy look in their eyes made Gwyneth wonder if her family consisted of lunatics.\n\nRight on cue, Aidan got up from his seat and pulled out a ring from his jeans pocket. Pin-drop silence ensued. As he got down on his knee, Gwyneth could see the wall of women whipping out their iPhones and training it on them. She really was feeling quite self-conscious, her pulse rate quickening as her face began to color a bright pink.\n\n\"May I?\" Aidan's voice was deep and husky, his expression gentle.\n\nCameras flashed around them as she nodded at him and he slipped the diamond solitaire onto her fourth finger. Even if this wasn't the real proposal, her heart was still hammering wildly in her chest and she felt almost giddy with happiness. It felt like it was only yesterday that he had asked her to marry him, the Turkish breeze teasing his hair and the dusky sun glinting in his irises. He stood up and leaned in for a kiss, curling an arm around her slender waist to hold her close while the sounds of cheering engulfed them. When they pulled away she could see the happiness in his eyes, and she knew that this was it. This was their fairytale ending. This was their moment.\n\n-----------------------------------\n\nGwyneth sighed in weary exhaustion as she sank into the chair beside Aidan's. They were on the porch, out to catch some time alone away from the crowd inside. After the little show they had put on, she'd been cornered by her cousins and forced to retell every excruciating detail about the actual proposal itself. It took some time before she could extricate herself from the pack of psyched-up females and she wasn't sure she was ready to rejoin the merry members just quite yet.\n\n\"How was it?\" Aidan asked, rubbing comforting circles on her hand. \"I hope they didn't give you too hard a time.\"\n\n\"They only mean well, I suppose. Can't deny them the pleasure of such frivolities, can I?\"\n\nHe gave her a peck on the cheek and pushed over a mug of mint tea. \"Here, have some. It'll make you feel better.\"\n\n\"Thanks.\" Her eyes fell on the table between them. \"Oh, look - Scrabble! Fancy a game?\"\n\nAidan tried to keep his face deadpan but she could see the gleam in his eye. \"Sure, why not?\"\n\nAs she unpacked the board game from the box she couldn't resist gearing up her competitive side. \"Loser gets to discuss ideas for wedding venues with the rest of them.\"\n\n\"You're going to be so sorry you ever said that,\" he shot back with a grin.\n\n\"So he can talk the talk! But can he walk the walk?\"\n\n\"If you think that I'm going to go easy on you just because we're engaged, you're terribly mistaken. I hope you're hungry, because you're in for a huge serving of defeat.\"\n\nShe shuffled the tiles on the little rack with her chin held high. \"Ooh, trash talk. Watch me shake with fear.\" She started with DRAFTY for 14 points.\n\n\"Fourteen points? Abysmal. Who's walking the walk now?\" He scoffed and played CHANCERY using her Y. Double word, all tiles used. 88 points.\n\nHer face fell immediately as she looked up at his smug face and she gaped in mild horror. He looked back at her with an irritatingly cool air, oozing confidence and arrogance. It looked like he really meant it when he said that he wasn't going to let her win. Well, she wasn't going to give up just yet. She rooted around in the bag and fished out more tiles.\n\n\"We'll see, Scodelario. We'll see.\" She beamed in satisfaction at her play. WAHINE, 40 points. It wasn't much, but it was a start.\n\nAidan raised his eyebrows at her with a small smile on his face. \"You're going to be one soon, you know.\" His voice softened.\n\n\"Be what?\"\n\n\"A Scodelario.\"\n\n\"Oh.\" A blush of pleasure diffused inside her and she smiled to herself as she played her next move. Technically, they'd been engaged for almost a month now but sometimes she still found it so hard to believe. If anyone had told her two years ago that she'd be marrying Aidan Scodelario, she would have had them locked up in the loony bin. Yet here they were, playing Scrabble with the family close by, a solid rock decorating her left hand. \"Can you believe it's been two years?\"",
        "He played his turn. \"Honestly, it feels like we've known each other for so much longer.\"\n\n\"It does, doesn't it?\" She bit her lip and looked up at him. \"Who would've thought? One plagiarized document...\" she shook her head in wonder as she played her tiles. \"I guess we owe Gavin an invitation.\"\n\nHe kept silent for a few moments, staring at the board as he meticulously arranged his tiles on it. \"This is a little late, but better late than never, I suppose.\" He knew that she'd told everyone about how they met - she still thought that the encounter in his office was the first of their meetings. \"That thing about the Heyland file...that wasn't really the first time I noticed you.\"\n\nGwyneth's hand froze in mid-air over the board as she stared at him in confusion, trying to understand how he was rewriting such a crucial part of their history. \n\n\"I saw you at Costa's,\" his eyes met hers, the usually pale blue irises almost dark with intent. \"You helped pay for someone who didn't have small change. I was behind you in line and I thought you were pretty. Really liked your smile. God, I'll never forget that smile.\"\n\nThe surprise was evident on her face. She blew out a breath and played her turn, unable to stop the bemused smile from licking across her lips. \"Why didn't you just tell me? I can't believe you let me believe a fake story for two years. Two whole years!\"\n\n\"I'm so sorry,\" he sounded genuinely apologetic, \"I don't know why I did that in the first place. I've always wanted to tell you, but never really found the right time to. Not an excuse, I know. I'm sorry, I hope I haven't disappointed you.\"\n\n\"Relax, I'm not mad.\" She sniffed a small laugh and reached out to take his hand. \"Two years,\" she emphasized playfully. \"Two years!\" He looked so guilt stricken and she could see him leaning forward, wanting to make amends -\n\n\"Ah-ah-ah - shh. I was just teasing, don't worry about it. I mean it when I say I'm not mad. Oh, silly - you have no idea just how much I love you.\"\n\nHe clapped a hand over hers, his face suddenly turning serious. \"I do, Gwyneth, I do. And I know that I'm the luckiest man alive to have you by my side. Thank you,\" he reached up to gently stroke her cheek, \"thank you for loving me.\"\n\nShe blinked up at him, utterly humbled by his devotion to her. \"Thanks for loving me too,\" she mumbled back, her eyes shining. She straightened up and cleared her throat in a businesslike manner, ready to slip back into the competition. \n\n\"Alright, big boy. Your move.\"\n\nAidan was no dimwit when it came to Scrabble - he knew how to strategically play his tiles, cramping up the spaces so that Gwyneth had difficulties building words. She was practically fuming when he played QUAGGA for 63 points, cashing in on the triple word and double letter bonuses. Later on, he almost choked on his tea when she added the S to the same word for STYPTIC - earning her 22 for QUAGGAS, 21 for STYPTIC and 50 bonus for using all tiles.\n\n\"That's...93 points,\" he sputtered. Now she was left with a twenty point lead, and a cursory glance at Aidan's rack showed that he didn't have many tiles left. His own method of tightly-packed playing may have just backfired - now he had very little space to place out his words.\n\n\"Mmhmm,\" she smirked in satisfaction. \"And the best part is that the X hasn't come out in play, which means that you have it on your rack right now.\" She scanned the board for any possible playing options. \"Yeah, I honestly doubt you'll be able to play an X-word, so...\" She leaned back and chuckled, confident about her imminent victory.\n\nAidan stared long and hard at the board, flicking his eyes over the tiles in his rack as he tried to compute every possible move. She was right - he only had four tiles left and the X was a big headache...but then it clicked. She saw the answer dawn upon him and he gave one of his deep, growly laughs that she found so irresistibly sexy. The hairs on the back of her neck stood on end - she knew that he was up to something.\n\nThe triple letter score tile above her STYPTIC's 'I' was her undoing. With a gleam in his eye, Aidan played AXIOM for 30 points. The X alone gave the word 24 points - and with that, he secured a narrow but clear 10 point win. The smile on her face was wiped off completely.\n\n\"No way,\" she was almost mute with disbelief. \"That was blind luck!\"\n\n\"That was talent in its purest form, my darling.\"\n\nShe slumped back in her chair and continued to stare at the sucker punch that dealt her defeat, unable to stop feeling dissatisfied. Of all the luck...that dirty little bugger. She knew that he was looking at her and was determined to avoid his gaze, almost certain that he'd be smirking at her in triumph. As much as she loved him, she was competitive by nature and she knew that he was, too. It was only when she felt his fingers brushing against her temples to tuck her hair behind her ear that she looked up at him.\n\nHe wasn't wearing his usual smug expression, in fact there was something about the way he looked at her that made her melt on the inside. Whenever he looked at her like that she felt like she was the only person who existed in this world, like his whole existence relied on her happiness, like she meant more to him than anything in the world possibly could. He placed a hand behind her neck and reeled her in for a slow, breath-stealing kiss, draining all the adrenaline out of her body. The exhilaration from the game was fading away, replaced by the hazy bliss from his caresses. She could do this forever - just be lulled into oblivion by his affections, lose track of time and space in his presence.\n\n\"I love you,\" he murmured into the skin below her ear.\n\n\"I love you too,\" she curled a lock of his hair around her finger.\n\n\"Should I have let you win?\"\n\nShe smiled and mouthed back a 'no', shaking her head. Gwyneth was about to resume the exploration of his lips when the front door burst open with a loud crash, and the scruffy head of her youngest brother poked out like a submarine periscope. \"Hey, they're about to serve dinner soon, you guys coming in?\"\n\n\"Yup.\" Aidan gave her a quick kiss and stood up, offering her his hand. She darted a last look at the finished Scrabble game on the table as she curled her fingers around his and he pulled her to her feet. They shuffled back into the house together, embracing the blast of noise and warmth that was buzzing about.\n\n30 points.\n\nFucking axiom.\n\n----------------------------------------------\n\nbutterfly #1: I think about you every night so I can keep you alive, even if it's only in my memories.\n\nbutterfly #2: It's been 5 years since you left us, but I still can't bear to be in a hospital."
    ],
    "authorname": "drunkenphilosophy",
    "tags": [
        "romance novella",
        "drama"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/axiom-ch-07"
}