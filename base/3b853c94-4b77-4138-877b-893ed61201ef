{
    "title": "Writer's Fantasy Ch. 04",
    "pages": [
        "<center>\n\nby M . J. Roberts \n\nWRITER'S FANTASY\n\n# 4\n\n</center> \n\n\n\nIt was Monday again. Very quickly this had become a driving force in my life. Where I lived for Monday and Thursday.\n\nIt was still early morning but I couldn't wait for the afternoon. For our \"session\". With David. And Marissa. Oh my God, Marissa.\n\nAs if her ears were burning and saying 'Speak of the devil', she called.\n\nI picked up my cell phone.\n\n\"Hey, I want to go shopping, let's go shopping today,\" Marissa said. No hi, no hello, no how are you. Right into conversation. It had always been that way with us.\n\nI was completely silent. She wanted to go shopping? After what happened between us last Thursday, and Monday, and the Thursday before that? Was she nuts?\n\n\"Come on, I have some things to buy and I want your opinion,\" she said. Totally regular voice, just like normal. Just like I hadn't spent the last week and a half with my mind blown, which was all her fault. Just like getting fucked by a woman for the first time, who just happens to be your best friend doesn't change things.\n\n\"Ahhhh...\" I said.\n\n\"Come on,\" she said. \"As soon as the mall opens. Let's go.\"\n\n\"Marissa I have to work today,\" I said. \"Not to mention I can't go shopping with you. Not after I've seen you naked.\" Read: gotten my brains fucked out.\n\n\"Sure you can. Nothing's changed like that. We're still best friends. And I need your opinion on some things. Call in sick. Take the day off.\"\n\n\"Naw, Marissa I can't...\"\n\nHard voice now. Dominating. Raspy. \"Come. To. Me. Take no prisoners and I give the orders. \"Right fucking now.\"\n\n\"Ah...ah...ah.\" Fuck she's so hot.\n\n\"I mean now.\"\n\n\"Okay, right,\" I said. \"I'm on my way.\"\n\nI broke speed limits on the way to her house. I panicked a little walking up front steps. I mean the last three times I was here I was shocked into new levels of sluthood. Hard to believe we'd now be normal happy campers gallivanting around the mall.\n\nShe opened the door right away, like she'd been standing behind it.\n\n\"Hi!\" She said, in a friendly and normal voice and hugged me. The exact way she always had for the last ten years. Up until two weeks ago.\n\n\"Ah...hey,\" I said. She was wearing a nice peach sweater which set off her strawberry blonde hair and pretty blue eyes, and hugged her great perfect curves, but not in an obscene way. And good fitting jeans. Totally normal. Just another girl going to the mall.\n\n\"Hey,\" I said again stepping into her house.\n\n\"Just let me grab my purse and we're off,\" she said.\n\nWe got to the mall, parked, and walked inside. With Marissa acting like the Marissa I'd known for the past decade, you know, a totally regular normal person the whole time.\n\nOnly it turns out she didn't want to buy anything for herself. She wanted to buy stuff for me.\n\n\"We have to get you out of those prim fucking sundresses and cotton underwear and fucking flat sandals for God's sake,\" she said after we walked into the mall.\n\n\"What, they're comfortable,\" I said.\n\n\"Yeah, but they don't scream fuck me,\" Marissa said.\n\n\"Yeah, well I'm not a 'scream fuck me' kind of girl,\" I said.\n\nShe grabbed my elbow and pulled me close to her. She spoke into my ear. \"Yeah but you're going to be for me.\"\n\nHoly fuck.\n\nFive shopping bags and almost $2,000 worth of merchandise later we were leaving the mall with a huge variety of sexy stuff in my size all of which I was sure I would never wear. Whatever, it was her money.\n\nShe bussed me with a kiss on the cheek when were back in her driveway after helping me put all the stuff in my car. \"Okay, bye,\" she said. Carefree. \"See you at 5:30.\"\n\nOh, God.\n\nMarissa called me at 4:45. \"Bring that black PVC mini-dress, and the five inch black high heels with the straps around the ankles, and that bright blue bra and panty set.\"\n\n\"Marissa, I'm never gonna wear that stuff,\" I said.\n\n\"I know, just bring it.\"\n\n\"Ummm...\"\n\n\"Bring. It.\" Command voice again.\n\n\"Okay,\" I said.\n\nBack to her normal cheerful tones. \"Okay! Bye!\"\n\nFuck.\n\nWhen I arrived at 5:30 David was already there. Looking a little sheepish for being early. But anticipatory. Ready. Predatory. Loving. Hot.\n\nI was wearing a navy sundress and my sandals. David was wearing a black button down shirt and tan dress slacks. He had dressed up. Sweet.\n\nMarissa was wearing the same white button down Men's shirt she had been wearing last time, but this time it was buttoned all the way up and she was wearing it with jeans. Toooottttallly different.\n\nAs soon as I was all the way through the door David yanked me to him and gave me a hello kiss. Then deepened it, already showing me how much he wanted me.\n\nShe tapped me on the shoulder. I broke off the kiss.\n\n\"Excuse us David,\" Marissa said. \"We have to go upstairs and change,\" she said.\n\n\"Okay,\" he said.\n\n\"She has to change,\" I corrected.\n\nWe went upstairs to her bedroom, which is larger than my whole apartment.\n\nWith her back to me she immediately undressed, revealing all that creamy perfect skin on her back, arching when she unsnapped her bra and wiggled out of it. She put the Men's shirt back on, leaving it open. Then she bent all the way forward when she took off her jeans and underwear, exposing that perfect ass, right at me, totally exposed and just freaking, so there, it was like it was staring at me with the tails of the shirt teasing the top.\n\nHer movements all casual. Like she was totally oblivious. \n\nBut I doubted it.\n\nAnd me, standing there like some dumb high school boy with my mouth hanging open and my body already beginning to respond.\n\nThen she was struggling into candy-apple red bright thigh high boots. Exact duplicates of those sinful black boots with the high, high, heel and those complicated fuck me laces.\n\nMy mouth went dry and my tongue glued to the top of my mouth.\n\nThen she turned around. Totally different person. Aggressive body language. Hard dominatrix 'don't fuck with me' expression.\n\n\"Hey, Jennnnny,\" she purred.\n\nOh fuck.\n\n\"Let me see what you brought me in that bag.\"\n\nThe shopping bag. I forgot I was holding it.\n\n\"Aah...gah,\" I said.\n\nI walked over to the bed and took out the PVC dress. God that was really short. It had multiple cut outs on each side. I took out the bra and the panties. They were even prettier when I looked at them laid out on the bed. Semi see-through with lots of dark blue and gold stitching on them.\n\nAnd then the shoes. Wow. Those were freaking nice shoes.\n\n\"Well that's it,\" I said.\n\n\"Good,\" she said. \"Strip down and put the lingerie on,\" she said.\n\n\"Marissa I'm not wearing that stuff,\" I said.\n\nVoom. Faster than light she was by my side. \"Put the fucking bra and panties on.\"\n\nWhatever. She bought it for me and they were freaking expensive and they were beautiful. And the bra made my triple Ds stand up really high, which was rare, and look nice, which I had to admit I appreciated.\n\n\"Okay,\" I said. I took my sundress off. I put on the bra and panties.\n\n\"Let me look at you,\" she said. She ran her hands lightly over the cups of the bra and the front of the panties from hip to hip. She stepped back and examined me.\n\n\"They look really nice,\" she said, stepping back. \"You can put your sundress back on.\"\n\n\"Thank God,\" I said.\n\nI was pulling my sundress over my head when she lifted one of my feet up and then the other. I got my sundress out of the way enough to look down. She was muscling the PVC dress up onto me.\n\n\"Jeez Marissa what are you doing? I'm not going to wear that.\"\n\nBang. Fast as lightning. Hand fisted in my hair. Hair pull. Her cheek against my cheek. \"I bought you this dress and you're going to fucking wear it. Don't make me ask you again. You fight me on this, you protest just one more time and I'm going to discipline you. And not with pleasure this time. With pain. And you're not going to like it. Don't make me discipline you Baby Bitch; I don't have the time.\"\n\nI stood there, shocked. I'd soaked through the underwear already and we hadn't even gone down to David yet.\n\nMarissa slid the dress up the rest of my body, under my sundress, where it was completely hidden. Hidden was good.\n\n\"Now the shoes. Sit on the bed.\"\n\nI sat.\n\nMarissa grabbed my ankle, roughly and jammed my foot into one shoe. She bent down in front of me to fasten the little buckle on the ankle strap. She kissed the inside of my ankle right above the strap. She kissed my leg a little higher. Pressed another kiss a little higher, on my calf.\n\n\"Perhaps I should kiss all the way up until I taste that glorious, delicious pussy of yours before we go down to David. What do you think?\"\n\n\"N....n...no,\" I said. \"No Mistress, please.\"\n\nShe laughed. A happy, pleasured easy laugh.\n\n\"I wasn't going to,\" she said. She stood up and picked up the other shoe. Then she surprised me by grabbing my hair. \"If I wanted to I would have been doing it. And I wouldn't have asked. Because I'm going to take what I want and dish out what I like. And you're going to take it, aren't you Baby Bitch?\"\n\nSoft, quick yank on my hair.\n\n\"Yes Mistress.\"\n\n\"That's a good girl.\" She put on my other shoe.\n\n\"Come on,\" she said. \"Let's go down and re-greet David.\"\n\nDavid was in the kitchen helping himself to a drink but he hustled around quickly when he heard us at the top of the stairs.\n\nHis expression went to instant lust when he saw Marissa sashaying down the stairs, shirt open, red boots laced up almost to her crotch, velvet crop in her hand beating a steady beat against her own thigh.\n\nBut his expression changed when he saw me and looked down at the shoes. Happy. Radiant. That amazing smile full of 'Fuck yeah'.\n\n\"Hey David,\" Marissa purred.\n\n\"Hello Ladies,\" David said. \"You both look great. Love the shoes Jenny.\"\n\n\"Jenny has a surprise for you,\" Marissa said.\n\n\"Whatever Jenny has I'll take,\" he said.\n\nAn even bigger wave of desire and want washed into me. More dripping juice leaked out.\n\nSoft growl from David. \"I'll start now please,\" he said. \"You can quote that in your story, Jenny. That I can't wait for you. That I hate waiting between sessions. That I'll start attacking you right now as soon as I have your permission.\"\n\nWhen we reached the bottom of the stairs David took two huge strides toward me. He was about to pull me up against him when Marissa put the crop up between us.\n\n\"Nooooo,\" Marissa said.\n\nFuck. I didn't know if I was beginning to love or to hate that word.\n\n\"Jenny has something to show you David. Go sit on the couch.\"\n\nRemembering the last display he got from that vantage point he was over and sitting on the couch in less than a second.\n\n\"Take off your sundress Jenny,\" Marissa said.\n\nI hesitated. \n\nFast Marissa had the back of my dress up giving me a sharp smack to the ass with her crop. I looked at her. She bunched the bottom of the side of the sundress in her fist. She put the... holy crap... she put the tip of the crop in her mouth and ran it quickly up my leg and pushed it into my cunt, shoving the crotch of my panties aside.\n\nGroan from David.\n\n\"Take. The sundress. Off.\"\n\nI lifted the bottom of the dress.\n\n\"And stick your tits out for David when you get the dress up and over them. Show him. Do it.\"\n\nI did what she said.\n\nSharp intake of breath from David when he caught site of me in tight the PVC sheath. \n\nThe idea that he was really turned on turned me on even more. Which caused even more nectar to drip out of me. Prepared for him. So, so ready.\n\nThe desire to run to him was almost overwhelming. He opened a few buttons on his shirt and stroked a big hand down those flat muscled planes of his chest.\n\n\"Good God Jenny, let me at you,\" David said.\n\n\"No,\" Marissa said. She grabbed my arms behind my back and secured my wrists with one hand. She started rubbing my nipple with the hand that still held the crop.\n\n\"We're going to pop your nipples out for David so he can see their gorgeous outline right through this dress and drool over you.\" My nipple had already perked up.\n\n\"You're going to get those nipples erect and popping out for us, aren't you?\"\n\n\"Yes Mistress,\" I said.\n\nLike I had any choice.\n\nIt only took seconds of hard pinching for my nipples to be straining against the fabric of the dress.\n\n\"Like what you see?\" Marissa asked David.\n\nHe looked me right in the eyes. Opened his pants. \"Yes. Love it.\"\n\n\"Would you like more David?\" Marissa asked.\n\n\"Fuck yeah,\" David said. \"Give me more. Send Jenny over here. Let me suck her through that dress. Fuck me, Marissa, let her go and send her over here.\"\n\nHe was apparently going commando because he had taken his dick out and was stroking it. I just stared at his beautiful cock. I didn't even pretend I was looking somewhere else.\n\n\"What should we do now Jenny?\" Marissa asked me.\n\n\"I don't know,\" I said.\n\nHard yank down on my wrists. \"You're the writer,\" she said. \"Use your imagination. You're the one who needs to learn. What do you want him to teach you how to do?\"\n\n\"Umnn...\" I said.\n\nWho could think with a gorgeous hunk stroking himself in front of you and a gorgeous girl tugging on your arms and the smell of my cunt juices wafting all around?\n\n\"Ah...ah...,\" I said. \"What was the question?\"\n\n\"What...\" yank... \"the fuck\"... yank \"Do you want the consultant to teach you?\"\n\n\"Ummmnn,\" I said. \"Actually I want you to teach me.\"\n\nInstant release of my arms.\n\n\"Really?\" Very interested voice. \"And what do you want me to teach you?\"\n\nHow to give a really good blow job. How to ride David so beautifully you look like artwork. How to finger you so you're the one begging for mercy.\n\n\"Everything,\" I said.\n\nShe laughed quietly.\n\nMarissa went to David and got up on the couch, slinging one knee between his open legs so she was half straddling him except she was poised above him so she wasn't touching him anywhere.\n\n\"So would you like to learn how to kiss?\" Marissa asked.\n\n\"Yes,\" I said. I moved a little to the side so the angle was better.\n\n\"You can start like this,\" Marissa said. David didn't move as she came in slow, licked David's bottom lip, retracted. She put one hand in the middle of his chest for balance. He unbuttoned his shirt completely so she could touch his bare skin.\n\n\"And this,\" she said and she nipped on corner of his mouth and then the other. \"And this,\" she said and she bit his lower lip and pulled it out far, holding it between her teeth so that I could see.\n\nDavid's vibe was a weird cross between restrained from a low level excitement and a calm detachment, like he was an object being used and he wasn't accustomed to it, but he certainly wasn't opposed either. It was like the calm of a dam that you knew held back millions of gallons of powerful rushing water but was quiet if you looked at it from only one view.\n\nMarissa let go of his bottom lip, it was already puffed up a bit, gently bruised and swollen. \"And then of course this,\" she said.\n\nAnd then she kissed him and as she deepened the kiss his passive, I'm just here for you to experiment on me and demonstrate on me, got shot to hell and he grabbed the back of her head and changed the angle and mashed his lips into hers.\n\nI was so turned on watching them, so fiery hot together. I had a brief sharp pang of longing, wishing so much it was me kissing David. I flooded with want. I felt like I wouldn't be able to withstand waiting for my turn. It was like I was a magnet and David was the other half and I was drawn to him with a magnetic force as strong and as powerful as gravity and I would be always drawn to him and this would never stop.\n\nAs if that force literally pulled me, I walked closer to them.\n\nMarissa had obviously made the kiss even hotter because David grabbed her and slammed her torso down onto his leg so her pussy was touching him and those sexy red boots were even more spread out. He had one big hand splayed across her lower back, pressing her hard into him and holding her in place.\n\nI want. Me, me, me, me, me.\n\nAnd then Marissa stopped and twisted around to look at me. \"Do you wanna try?\"\n\n\"Hell. Yeah.\" I said.\n\nThe both laughed.\n\n\"But wait! There's more!\" Marissa said in the tone of an infomercial.\n\nShe crawled off him and stood up.\n\n\"David, why don't you strip? I'm sure we'd both like to see you take your clothes off.\"\n\nHe had his clothes off in an instant. No show from David. He was ready and he wasn't dawdling.\n\nThen he was naked in all his glory and I did a quick swipe of my mouth with the back of my hand checking for drool.\n\nNope. All good there. It was just my mind that was drooling.\n\n\"Assume the position,\" Marissa said to David while pointing to the floor in front of the couch.\n\nHe went to lie down on the floor, face up. While he was moving he said, \"A guy could get used to this.\" \n\nWhen he was on the floor we both stood over him and stared. Handsome face staring up at us, waiting. Long brown hair fanned around him. His big, firm, thigh muscles taught. That erection already long and, hard; it was thick and engorged, lying smack flat against his belly. The tip of the head by the belly button.\n\n\"Pretty, isn't he?\" Marissa asked.\n\n\"Talk about an understatement,\" I said. \"Extraordinarily handsome and resplendent in his prowess would be more accurate.\"\n\nMarissa chuckled. \"That's why she's the writer,\" Marissa said.\n\nDavid looked into my eyes and put and a hand on his cock. Stroked softly. Subtly licked his lips like he was totally parched and I was the only water around. \n\nWhich is totally fucking hot.\n\n\"Now, where were we?\" Marissa said.\n\nFuck if I know, I'm entranced out watching David's hand make those slow up and down movements.\n\n\"Oh yes,\" Marissa said. \"Kissing.\"\n\nShe bent down between the couch and David, sitting on her haunches and she snuggled up her knees to David's hip.\n\n\"Kissing,\" she said. \"Which leads to blowing.\"\n\nDear God.\n\nShe kissed the bottom of his pectoral muscle and slowly kissed her way down the side of his torso. Tendrils of her hair dragged over David's cock as she kissed his hip. I watched those hairs tease him as they caressed over the head like a whisper. Or a scream.\n\n\"And then,\" Marissa said, and she removed his hand. \"And then this,\" she said and she blew a steady cool stream of air on the underside of his sex from base to tip.\n\nBoing. His penis stood straight up on its own, pointing toward the ceiling.\n\nInnnntresting.\n\nMarissa repeated the action, blowing again. His sex quivered.\n\nMarissa blew a little and stopped. \"Blow,\" she said blowing again for a second. \"Job.\"\n\nDamn, what a job that was.\n\nMe. Let me. Me me me me me.\n\n\"And then wrap your hand around the bottom of the shaft of his cock like this,\" Marissa said.\n\n\"Getting instructions from you shouldn't be this hot,\" I said.\n\n\"Shut up Jenny,\" she said in a voice that made me even hotter.\n\n\"You wrap his cock like this and then,\" and then she slid that beautiful mouth over his cock, right to where her hand was, and David moaned.\n\nShe came up very slowly, coming all the way off his with her mouth and then continued to move her hand up.\n\n\"You bring your hand all the way up and then over the top of the head, like this,\" she said. She was still fisting him but her palm went all the way over the top of his head in a smooth motion and then back and started the stroke down again.\n\n\"And then of course you follow that hand with your mouth,\" she said. Another groan from David as she smoothly, seamlessly took him in her mouth just as her hand cleared the head and her mouth and hand slid down, slicking down his sex in tandem.\n\nNow I groaned.\n\nShe came up, slowly, and when she ran her palm over the top of him she said, \"And repeat.\"\n\nI watched her.\n\n\"Then you can press your tongue to the bottom of his shaft like this,\" she said and went down on him some more.\n\nDavid thrashed. \"Holy shit,\" he said.",
        "\"And then stop for a second and do this,\" she said and she grabbed him with both hands and pulled, long and hard toward his chest, like she was wringing out something that was soaking wet.\n\n\"And then start again,\" she said. But she didn't for a second, she kept pulling on him while looking at me.\n\n\"You want to establish a good rhythm and keep it really steady, so it helps to think of a song with a good beat and fuck him with your mouth pulsing to that,\" she said.\n\nAnd she went down on him again.\n\nAnd I watched.\n\nHoly shit was right.\n\nMore of her hair was escaping the hair pins so when she went down on him all I saw was her strawberry blonde head, totally covering him.\n\n\"You're going to kill me,\" David said.\n\nShe stopped.\n\n\"And then you bite him,\" Marissa said.\n\nA 'holy shit, fuck,' from David that did not sound friendly.\n\nBut she didn't bite him; she went down on him and used her teeth, ever so lightly to drag a sensation up his shaft.\n\nA strangled sound from David.\n\nShe stopped.\n\nI waited.\n\n\"Do you want to try?\"\n\n\"Oh. Hell, yes. I do.\"\n\nShe leaned back a little and made a 'well, he's all yours' gesture with her hand.\n\nDavid's eyes snapped open. He looked at me.\n\nI just waited, staring at him. It was all just so good.\n\n\"Jenny,\" David said. \"Come on, please, don't make me wait. This whole thing is sweet torture enough and I want you so bad and ...\"\n\n\"David. Shut up,\" Marissa said.\n\n\"Jennny,\" Marissa said sweetly. \"Do you want a turn?\"\n\nShe didn't have to ask me again.\n\nI repeated everything the way she had instructed me, but it seemed to me from the noises David was making that to David it was a little different. But I could tell he loved it and I loved it so I just kept going, full-tilt, full of wonder and verve, taking, taking, taking. And giving. Sucking his cock in and loving it because it all was just, so, so, good.\n\n\"Stop Jenny,\" Marissa said.\n\nI stopped.\n\nAnd then she grabbed his cock, but just with two fingers pressed near the base on the front and her thumb firm on a vein on the underside.\n\nThen she started jerking him off, little short, sharp tugging motions, using just those three fingers.\n\nHhhhmmmn...\n\nI could tell she was about to ask David if he liked it but his back bowed off the ground and his hands curled, squeezing into deathly white clenched fists, and he ground his teeth together.\n\nMarissa laughed.\n\n\"I guess you like that, hmn? Do you like that David?\"\n\nHis eyes were closed and he didn't talk. Like he couldn't talk.\n\nMarissa stopped.\n\n\"Want to try that Baby Bitch?\"\n\nMy breath caught. The power she had.\n\n\"Yes,\" I said.\n\n\"Do it.\"\n\nI did and David said, \"Oh God, I'm coming, I'm going to come right now.\"\n\nMarissa said, \"NO.\" She knocked my hand out of the way and circled the base of David's cock with her thumb and forefinger, making a ring, and it looked like she squeezed good and hard. I thought I saw David's balls seize and tighten up.\n\n\"Not yet David,\" she whispered.\n\n\"That is, you do still want him to fuck you, don't you Jenny?\"\n\nMy head tilted back. All of a sudden my neck muscles were loose and couldn't support it. \"Oh God yes. Please, yes.\"\n\nMarissa laughed again. Who was this woman?\n\n\"Alright Miss Writer, continuing our lessons, let me tell you. There are six basic classes of sexual positions. The hundreds of Karma Sutra like contorting and glorious variations can all be broken down and placed in these six different categories: The six positions of fucking.\"\n\n\"Six?\"\n\n\"Six,\" she said firmly.\n\nI couldn't think.\n\nI heard David's labored breath. He was trying valiantly to calm down, struggling to practice deep breathing.\n\nMarissa let go of him and used her fingers to count.\n\n\"One, man on top, two, woman on top,\" she said.\n\nI paused. Picturing David on top of me, pummeling into me. Me riding him with my hands high and my elbows out.\n\n\"Okay, I understand that,\" I said.\n\n\"Three, from behind, four, someone's on their side, five, standing up, and six, sitting in an 'X'.\"\n\n\"Huh, what's that?\"\n\n\"Like David and I did on the couch,\" Marissa said.\n\nThe picture of them moving together when I thought it was so beautiful my eyes might burn out from the sight popped into my head.\n\n\"You know, with his knees and her knees, and she's kind of sitting on him, and everything crosses so it sort of looks like an 'X'.\"\n\n\"Okay,\" I said.\n\n\"And considering that Dave here is on the clock, I think we should make him do all six for you.\"\n\nChoking sound from me; concerned but 'oh, yes, yes' noise from David.\n\n\"Well, he's already on his back. It'd be a shame to make him get up when he's going to have to move so much in just a few minutes, so hop to it.\"\n\nI stared at her.\n\nShe grabbed my hair. \"Fuck him Jenny. You've kissed him, licked him, sucked him, now it's time for you to fuck him. Get on that beautiful animal and ride.\"\n\nMy eyes were flittering. She didn't let go of my hair.\n\n\"And I'm going to sit on his face while you do.\"\n\n\"Oh, God,\" I said.\n\nShe let go of my hair and I stood up quickly to pull of my underwear. I straddled him and quickly sunk down on him. He let out huge gust of air on one big breath, like being in me was such a blessed relief.\n\n\"Jenny Baby,\" he said.\n\nI placed my hands on his chest and slid up and down on him once. It felt so incredibly hot and passionate and sexy and raw, so miraculously familiar, like I had completely arrived home. It was returning to a home that was so totally mine, even though I had never been there. Like coming back to the only family you've ever known after a long, long journey away.\n\n\"Baby,\" he said again.\n\nI started moving up and down him in earnest now, wanting to bring him the same great pleasure he was bringing me.\n\nI forgot about Marissa for a second and then she was in front of him, straddling him, lowering herself onto his face.\n\n\"He's a freaking lucky duck,\" I said.\n\n\"Damn straight,\" she said. Then she leaned forward and kissed me.\n\nWe established a kind of dance, Marissa and I almost entwined, lifting up, slamming down and back, doing it again.\n\nIt lasted just a short, short, time, before Marissa said.\n\n\"Stop now.\"\n\nBriefly I had a flash thought of musical chairs, where the music stopped suddenly and everyone scrambled to find a good place.\n\n\"Up now,\" she said to me as she was getting up and off him.\n\nI got up, none too gracefully, and stretched up, hands reaching toward the ceiling before I realized that the dress was so short, and I wasn't wearing any underwear, that I was now flashing them.\n\nDavid smiled.\n\n\"We just did woman on top, I think you might remember man on top and the X from our previous sessions... you do remember our previous three sessions don't you Jenny?\"\n\nStrangled sound from me as every single thing from the first moment I saw David in the coffee shop, to me spilling my coffee, to seeing David's chest for the first time as he whipped off his shirt when Marissa directed him for the first time to lay on the floor in front of the couch, to all the decadent, wild, hotter-than-shit, oh my fucking God, new experiences of gluttony rushed through my memory like a Technicolor movie with roaring sound and oh God, smell. I was awash in sensations. I could feel my skin turn red up to my hair roots.\n\n\"Yeah....\" I dragged out. \"I remember.\"\n\n\"So that covers woman up, man up, X, and also from behind. When he fucked you with the harness. You remember the harness, don't you Jenny?\"\n\nStrangled groan sound from me and David.\n\n\"I remember,\" I whispered.\n\n\"I sure as fuck remember,\" David added.\n\n\"So that's four down, two to go. I think we'll leave standing up for another day, seeing as we've already been taxing his resources, sucking his ... energy, as it were, so that leaves...\" she stalled, looked up, and tapped her face with her finger, pretending as if she were trying to remember.\n\n\"That leaves what Jenny?\"\n\nI forced my mouth to work. \"Someone's on their side,\" I said.\n\n\"Right. Side by side. You ever been fucked while you were on your side, Jenny?\"\n\n\"No,\" I said.\n\n\"Of course not,\" Marissa said.\n\n\"And would you like that experience? With David? You know, just purely for research purposes? So you have something to write about?\"\n\nI looked at David and remembered he hadn't come yet. His penis was jutting out into thin air, just hanging there, practically freaking throbbing with 'come here Bitch and fuck me' written all over it.\n\n\"I want it,\" I said. \"I really, really...\"\n\n\"Jenny shut up,\" Marissa said. \n\n\"Oh, but wait I forgot something,\" Marissa said and then she said. \"But wait! There's more!\" In that game show voice again. \"I've never taught you how to sixty-nine,\" Marissa said. \"But surely you've sixty-nine-ed before haven't you Jenny?\"\n\n\"Ah...no,\" I said.\n\nThey both stared at me.\n\n\"But you know what it is,\" Marissa said to me in a voice you'd use with someone who was horribly abhorrent.\n\n\"Yes,\" I said. \"I know what it is.\"\n\n\"Well, we'll save that for another time too,\" I said. \n\nA soft moan from David, I couldn't tell if it was a good one or a bad one.\n\n\"So, where was I?\" Marissa said, with a look that said she knew exactly where she was. \"Where was I?\"\n\nShe looked at me. I stared back at her, dumb struck. Damn if I know. Lessons, sixty-nine, later, what? She was speaking English but my body was speaking cunt juice.\n\n\"Side on side,\" David said in a rasp. \"Jenny Babe, come here, please.\" The last word was strangled.\n\nI looked at Marissa for permission.\n\n\"Jenny, come here,\" David said.\n\nI walked to him and bent down in front of him. I started to lie down facing him but he grabbed my arms and turned me, manipulating me so I was lying down on my side with my back to him.\n\n\"Baby,\" he said passionately in my ear.\n\nHe angled the top half of my body away from him a little bit, grabbed my hips and yanked my ass toward him, fitting it snugly into his hips.\n\n\"You gonna be okay fucking from this angle?\" David asked. He pushed my tight dress up a little. I had forgotten I was still wearing it.\n\nI was silent. How the hell did I know?\n\nHe growled in my ear, \"Because I really, really want it.\" He kissed my ear.\n\n\"Whatever you want, I want,\" I said.\n\nThen I could feel the head of him slip inside me, so gentle, and then with a pumping push he was all the way in. He held still.\n\nI closed my eyes, feeling all the sensations. David was in deeper now than he'd ever been before, hitting different spots than I had ever felt.\n\nHe pulled out and plunged back in. Waited for any response from me. I was still trying to get a sense of the newness of it.\n\nSlow pull out. Fast plunge in.\n\n\"Jenny Babe. You okay?\"\n\n\"Um, yeah. It's just, so deep. And you're so big it's...filling me up everywhere. It's really different.\" I paused, clenched for a minute, sensing. \"But I'm okay. I ... I think I like it.\"\n\nDavid laughed. \"Well let's do it some more to make sure.\"\n\n\"Oh yes,\" I said.\n\nAnd that was it. David was pumping in and out. One hand firm around the back of my neck, one big hand squeezed tight over the span of the side of my hip and my ass, pinioning me in place. He increased his speed and intensity, getting so much harder and faster, and every time he was all the way in it bumped this weird high place, almost hurting but not quite.\n\nHe was making these glorious sounds, these super male, almost animalistic sounds, somewhere between a grunt and a moan. Not loudly, not softly, but oh so powerfully, a 'mmn, anh,' coming out with each thrust in. He let go of my neck and fisted my hair, pulled my neck back as far as it would go. He twisted around above me and kissed me, hard, and then I was kissing him back, pouring all I had into him as pounded into me. \n\nThen Marissa said, \"Jenny, put your leg like this.\" She came over and took my top leg and bent it even further and rotated it so my knee was facing the ceiling. She planted my foot firmly on the floor by David's thigh. With my high, high black heel with that tiny little ankle strap, it felt like something obscene. And it was. And I'm sure it looked obscene because Marissa was staring at me, right there, and David's sounds got louder.\n\n\"That's a good girl,\" Marissa said. \"Now play with yourself.\"\n\nWhat?\n\n\"That's the thing about this open position. It's totally open so it's a great position to play with yourself.\"\n\nTotally open was right. I could feel air on my upper vagina, and it was so exposed and so right out there that I felt totally vulnerable, exposed.\n\n\"Jennnnn...ny,\" Marissa said firmly.\n\nBut David slid that hand that was on top of my hip down the front of me, over my mons, and right into my folds. It took less than a second for him to zero in on my clit.\n\n\"Jenny you're so wet everywhere, thick and so...\"\n\nHe was quiet for a moment while he searched for a word. Like grabbing my hair and fucking my cunt hard, and rubbing my clit robbed his mind of being able to search for words, and he simply forgot how to say 'much' or 'a lot'.\n\n\"Abundant,\" I added and was rewarded with a particularly hard stroke.\n\n\"So thick and so abundant,\" he said in my ear, tons of that sweet, sweet, sticky nectar, dripping all the fuck over, a fucking huge deluge,\" he growled and his voice got low and raspy. \"Fucking slicking so thick and nice all over my cock, coating down my fingers, running all over you. I love the smell, I love the taste. I just can't,\" even harder and faster pounding here, even harder grip on my hair. \"I just can't believe how great this is; this river of greatness that fucking just starts from the very first second. I can't get over it. I'll never get over it.\"\n\nHe let go of my hair and slipped that hand under my ribs pushed and rubbed the side of my breast. \n\nMarissa came forward, my God she had been watching all of this, listening to all of this, my freaking God, smelling all of this. And that is just so, so wrong. Yet there was that part of me, that so wanted to be watched.\n\nMarissa came forward and ghosted a kiss across my lips, just the lightest of touches. Then another butterfly kiss on my collar bone. Then she was at my breast, nipping and sucking.\n\nI couldn't possibly get any wetter. I just couldn't, couldn't, couldn't, possibly get any wetter. \n\nCould I?\n\nI couldn't, I thought.\n\nWhoosh, flood. I was wrong.\n\nThen Marissa kissed down my stomach, oh God, what was she doing? Where's she going? What the hell is she doing? Oh no.\n\nThen she was at me, licking my clit, sucking me, flicking it with her tongue. She put both hands in me, opening me even wider as David continued to pump and rock in and out of me.\n\nMarissa licked me harder and faster.\n\nI started to scream.\n\nReally scream, in earnest. Full out, let go, must have been able to hear it on other contenants scream. I heard Marissa laugh into my pussy as I began to shake.\n\nOh God, I have to wait for her permission, Oh God, Oh God.\n\nThe shaking of that one leg got bigger and greater, trembling out of control. I couldn't hold it. All my muscles were tightening, straining, and it began to be a torture I couldn't take.\n\n\"That's a good girl,\" Marissa said.\n\n\"Please! Please Mari, please,\" I said.\n\nShe stopped licking me and with one hard, quick flick of her thumb she said, \"You can come now.\"\n\nWith a huge shout I came, racking spasms contracting my back up hard, pulling me away from David, and clenching of my insides holding him in. \n\nMy heart rate was through the roof, blood rushing into my head. Everything was happening at once, my cunt squeezing and pulsing hard on its own. My body was flushing, burning, the lightning electricity zipping fire so hot up my legs I'm surprised they didn't burst into flame.\n\nMarissa laughed out loud, a hearty, happy, throaty laugh.\n\n\"Now that's a good girl.\"\n\n\"No shit,\" David mumbled from behind me.\n\nI melted into the floor, spent from the heat and the seizures and the intensity. Everything was completely lax and loose, like I had no muscles at all, or they had liquefied themselves. The heat of their power had consumed me. I was spent from the vulnerability, from being so open, from the wanting and the getting.\n\n\"I can't believe that, I can't believe any of that.\"\n\nWarm, sweet chuckle in my ear from David.\n\n\"This isn't a writer's fantasy this is like a writer's...hallucination. Unimaginably mind-blowing dream. A writer's inferno. A writer's castle.\"\n\n\"A way with words,\" Marissa said.\n\n\"That's my girl,\" David said.\n\n\"Did you think that was hot?\" Marissa asked looking right at me.\n\nThat was rhetorical right? I mean that was so beyond obvious that didn't deserve an answer.\n\nBut she looked at me. \"Hot, right?\"\n\n\"Searing, singeing, mind burning, hell annihilating hot,\" I said.\n\n\"That's good,\" she said. \"Because next time will be hotter.\"\n\n\"I'm never going to survive all this.\" I groaned. \"I can't get up,\" I said.  \n\n\"My work here is done,\" David said.\n\n\"Ever,\" I said.\n\n<center> # # #</center>\n\n\n\nDear Reader,\n\nWriter's fantasy is a seven part series with each story getting more romantic, explicit, exploring, tense, and hotter.\n\nIf there were things about that you liked about this story please post a comment telling me what worked for you and why (PG comments only please.) I also welcome suggestions and corrections.\n\nI am and will continue to edit, tweak, and update my stories in effort to bring all of my stories as close to a five star reading experience for you as possible. If you haven't yet, please read my other stories. Keep checking for the updated versions and new stories.\n\nIf you enjoyed the story, please rate it highly!\n\nThanks so much. I look forward to hearing from you.\n\nSPREAD the buzz.\n\nEnjoy!\n\n-MJ\n\n"
    ],
    "authorname": "MJRoberts",
    "tags": [
        "threesome",
        "bdsm",
        "dominance",
        "two girls",
        "fun",
        "erotica"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/writers-fantasy-ch-04"
}