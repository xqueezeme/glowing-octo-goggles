{
    "title": "A Slave to the Servants Ch. 32",
    "pages": [
        "Welcome back, Lit!\n\nSorry about the confusion with Rue and Runen's families - the names are too similar. Rue and his Brothers were fake masters, kept our heroine in the wall, and wanted to know about Earth. Runen lived in the mountains with the women and tried to rape her to \"teach Damien to share\". Should have used more different names.\n\nSteve150177 felt it important to give the next bit of info: The last two chapters have covered events that happened in just over one day. This is such a critical period that it had to be covered in detail. This chapter starts where the last left off, dinner time the day after the rescue, but will cover 4 or 5 months.\n\nMy thanks again to Steve150177 for his tireless efforts to edit and get this to you quickly.\n\nDon't forget to comment and vote! Expect the next chapter May 2 or 3. Thank you!\n\nChapter 32\n\nDinner with Arik and his Brothers was strange. The men were farmers at heart. All they enjoyed talking about was plants, soil, and weather. It wasn't a wasted evening and they did educate Rose and me about what we were eating. It gave the men great pleasure to tell us about the different items we'd picked off the food tables.\n\nRose and I both made a real effort to behave the way everyone thought we should. We talked to the men and looked at them. Every time Rose looked down I'd pinch her thigh or arm to make her look up. For our first real try, I thought it went very well.\n\nAfter dinner they insisted we come see the Earth plant they were growing. The women had brought them cuttings and told them it was a plant that originated on Earth. It had been found near a naturally occurring portal before the women shut the thing down.\n\nRose and I followed the men out the dining hall and into the main thoroughfare. They walked briskly and we had to run to keep up. Finally, I said something.\n\n\"Arik, humans walk slower than this! Could you slow down, please?\"\n\nThe men found our pace slightly annoying, but they understood humans were different. They walked us out to the garage or transport storage space and climbed aboard one.\n\n\"I don't know if we're allowed,\" I said looking out at the dark night sky.\n\nArik laughed hard at that. The noise got the attention of the many other men out here, most appeared to be guards. Since this was their main entrance, that made sense.\n\n\"Allowed by who? There is no one to ask permission. You are free to come and go as you wish. Come with us, please. We want to know if it looks as it should. Hannah and Kennedy are too busy to go out and look with us.\"\n\nIt felt like getting into the back of a van with strangers offering you candy, but I climbed on. Rose followed, but the look she gave me was priceless.\n\n\"Use the stored solar energy and don't stay out too long,\" one of the guards called out in warning. \"Don't make us come out to find you. There is no field work that can't wait until the sun rises, Arik!\"\n\nBefore I could really feel good about this Arik's Brother raised the craft and we were outside. The men didn't turn on any lights and sped down the mountain slope. Luckily there seemed to be a path they were traveling, because otherwise it would have seemed like we were just wildly careening in the forest.\n\nThe moons spread some light and I was amazed at the scenery. Through the trees the mountains in the distance glittered in certain places. Closer to us I noted that several plants also reflected the light and some of the leaves almost glowed. This must have been what Hannah and Kennedy saw when they flew away from me. It was unbelievable.\n\nThe transport came to an abrupt stop and lowered to the ground. The men leapt off and moved into a patch of moonlight.\n\n\"What about creatures?\" I asked hesitantly. \"Are there racks or scars out there? We could not defend ourselves!\"\n\nArik snorted and motioned us out. \"The Administrators put up a shield several moons ago, men from this camp developed it. It keeps most things like that away from the entrance to our home. We have been much safer since then. There is nothing to be afraid of here. The boundary to the protection is farther down.\"\n\nRose and I followed as the men stood waiting for our reaction. The ground under our feet was quite damp as we moved through it. I touched the tight grouping of long, tall stalks in front of us and almost laughed.\n\n\"On Earth,\" I told the men, \"this is called bamboo. We did not eat it. It was used for building, instruments, and could be cut and tied together to make a barrier. Some types of it can grow very quickly.\"\n\nThe men were enamored and stepped closer to me. I backed up.\n\n\"You know plants,\" they said sounding excited.\n\nMy hands went up and I backed toward the transport. \"I know some things about plants. My female breeder tried to grow this as natural barrier between us and another human family. It didn't work and grew in a big clump.\"\n\nThe men were not deterred. \"The women here are not interested in plants. They do not eat them and do not use them to build with. Would you like to spend more time with us? We could mate for fun,\" Arik offered.\n\nI heard Rose's sharp intake of breath and I took one myself. My body shook with fear as the five of them eyed me lustily.\n\n\"I do not wish to mate,\" I said very quietly, but felt certain the men would take whatever they wanted. They could and I knew that.\n\n\"Will you please take us back?\" Rose begged quietly. \"Please, don't leave us out here. We will do whatever you want. Ciara, we cannot stay out here alone,\" she finished gripping my arm.\n\nThe men didn't seem to understand and motioned us back on the transport.\n\n\"Of course, we will take you back,\" Arik said, as his Brother started the transport. \"Why would we not take you back?\"\n\nThe looks of lust and want were gone and I felt very stupid. I tried to play down what we'd said, but Arik's family was persistent. Eventually, Rose was forced to explain how human men sometimes took a girl places only to demand sex as payment for a ride back.\n\nArik and his family were horrified. The very idea that Rose had thought them capable of that offended them greatly. When his Brother noted Rose must have been offering them sex as payment the men were almost speechless. They demanded to know why we thought they were like that. They wanted to know what they'd done to earn such a vile reputation.\n\n\"We didn't mean to offend,\" I pleaded as the transport lowered in the storage area. \"Things are different on Earth and they are different on the compounds. We have nothing to compare this place to.\"\n\nArik didn't really accept that, but he tried to understand. The men had been told that ex-slaves would be strange and easily confused. The Administrators had asked them to welcome us but be cautious around us. The warning made more sense to them now. Still, the men seemed happy to leave us and moved quickly back into the camp.\n\nRose and I let them rush ahead and walked slowly back toward our dwelling. We both had to use the facilities, so we found the lacquered pots on the second floor. The men using the room were heedless of our presence and one simply pointed out the private area set aside for us.\n\nBehind a drape were two pots separated by wood hanging from the ceiling. It was like our own private \"ladies room\". I was actually very glad for it.\n\nAs I washed my hands Rose laughed out loud. Whatever was funny amused her greatly and she couldn't stop giggling.\n\n\"What is so funny?\" I demanded as we skirted quickly past the men using their latrine.\n\n\"Can you imagine,\" she asked, \"what Gunth would have said last night if Basin was still putting the plug in my bottom? Can you imagine having to take it out in front of all those men last night? How strange would free men find something like that.\"\n\nShe was right and I had to laugh, too. It would have just solidified what the men already thought of slavers. They would have been totally offended.\n\n\"Thank God for small miracles,\" I said to her and we both laughed.\n\nRose and I determined quite quickly we could not sleep alone. After removing our ornamentation from our pockets and hiding it behind the bed, both of us folded our outfits and put them on the shelf under Jonathan's picture. We ended up huddled in my bed, together. The very idea of going into a room and sleeping alone made us both cringe.\n\nWe lay silently next to one another listening to the muted sounds in our little cave.\n\nI'd left the fire burning in the main room and the leather drape to my room was open. That allowed warmth and light to still move into our sleeping room. The dancing light coming through the opening flickered and made shapes on the wall. I watched the patterns and allowed them to calm me. How many times had I sat and stared at the fire with Damien and his Brothers?\n\nIt took a long time, but I finally drifted to sleep with Rose curled up beside me.\n\n\"Psst, Ciara,\" a familiar voice whispered in my ear, \"wake up.\"\n\nI was warm and comfortable, but that wasn't Evan's voice. My eyes shot open and I was staring at Tyle's young face. He was leaning over me and grinned broadly. Rose roused beside me and stiffened as she realized we weren't alone. The men didn't even notice our initial reaction and continued to smile at us.\n\n\"Hello,\" Aryn said jovially from behind his Brother, \"my male breeder, Bane, sent you a message.\"\n\nI sat up quickly and the blankets fell to my waist. The young men didn't even notice as they all crowded into our bedroom. After having been truly dressed the entire day prior, I felt my nudity and pulled the covers over my breasts.\n\nAryn knelt in front of me and I saw a large purple bruise on his chin. His brothers were all similarly marked with several bruises and small cuts. He looked so much like his father. I automatically reached out to touch his bruise and only remembered myself as my hand slid across his face.\n\nThe boys looked shocked, but they didn't move as I pulled my hand back.\n\n\"I'm sorry,\" I stammered, \"you look so much like your father, your male breeder. I just wondered how you got that mark on your face.\"\n\n\"We fought for him and his Brothers last night,\" Aryn said proudly. \"We chose family over the camp and stood watch for a time while they slept. Arnold's family also took a turn. The other men told us we were wrong. They want us to hate Damien and his Brothers. We disagreed with them.\"\n\n\"Fighting is wrong, violence is wrong,\" I said, jolted, remembering what Hassar and Reed had told Damien.\n\n\"The men that attacked us were sanctioned,\" Aryn said simply. \"We won't let them harm our family or friends, though.\"\n\nThe blanket and my nudity didn't matter anymore. I slipped off the bed onto my knees and hugged Aryn tightly.\n\n\"Thank you,\" I whispered kissing the rough stubble on his cheek.\n\nWhen I pulled away from him the look of shock on his face was indescribable. He pointed quietly to his Brother and I knew what they wanted.\n\nI thanked each boy the same way, with a hug and a kiss. They'd seen this affection at the cabin, but I was sure they thought they'd never experience it.\n\nThe young family found the activity novel. They were tentative in hugging me back at first, but by the fourth one they lay their hands firmly on my skin and squeezed. They murmured to me how they liked this type of thanks.\n\n\"They told us you are a Sister, not a slave,\" Aryn said seriously. \"Damien and his Brothers assured us they have no love for slavery and we believe them. In the compound, I know they trained you like one would a Brother.\"\n\n\"Yes,\" I said quietly as I pulled my outfit off the shelf and put it on. When I was no longer under the covers with Rose it was quite chilly in here. \"I wish I could talk to them.\"\n\n\"Basin and his Brothers,\" Rose cut in looking beseechingly at the young boys, \"who helps them? They have no friends here,\" she said looking ready to cry.\n\n\"We stand together,\" Tyle said proudly. \"Damien's family, Basin's family, Stayne's family, Arnold's family, and ours stand as friends. We protect one another and will not allow the others to be hurt. Poor choices were made, but those mistakes have been corrected.\"\n\nI remembered Arnold. The tough man and his family Damien and his Brothers had helped Hannah rescue from the compound. They must have ended up here.\n\nRose was such a graceful creature. She somehow managed to get out of bed and stay wrapped in a single bed sheet. Much like I had done she hugged and kissed each boy. Suddenly, she looked at me appearing terrified.\n\n\"Do you think I can touch them?\" she asked trembling. \"Will Basin be...?\"\n\nI shook my head and took her hand.\n\n\"You are free and not a slave,\" I stressed. \"You can touch anyone you want.\"\n\nThe boys seemed taken aback with Rose's concern and made sure they understand Basin's relationship to her.\n\n\"No, no,\" she said looking uncomfortable, \"I am not a slave, but it has been so long...I have not touched anyone except Basin and his family or Keepers they left me with. This is all so strange...\"\n\nThe young men watched Rose closely before seeming to accept her answer. It seemed to help that she cautiously had laid a hand on Tyle's arm as she spoke.\n\n\"We need to go,\" Tyle said and handed us each a small folded piece of paper. \"This is an old fashioned way to pass a message, but it will have to do. We will come again when we can.\"\n\nI rushed forward and put a tentative hand on his arm.\n\n\"Tell Damien and his Brothers I love them. Please tell them that I won't stop trying to be with them,\" I begged.\n\nTyle didn't seem to mind the strange job and accepted it without argument. Rose asked for the same thing and the boys agreed to take our messages to the men.\n\nThe boys took their leave as Rose and I sat on the bed next to one another.\n\nThe strange paper like substance opened to reveal a long hand written note. Rose and I each had one. It appeared the Brothers must have each taken a turn writing.\n\nThey loved me, the note said, and missed me terribly. Damien had talked to Hannah. He had told her she should have been honest. We would have still come, but we would have been prepared. My men knew I couldn't stay in the compound, the task Nu-reeh demanded was too much for all of us. He was sad we weren't together, but felt sure he could earn the right soon.\n\nEvan was incredibly depressed about his son. Nothing else that had been done or said compared to the pain of having to leave Jonathan where he was. Evan wanted me to know that he felt our boy still. Even as far away as we probably were, our family was still connected.\n\nBane's part of the note was cheery. He and Aryn were finally able to be together. He mourned with Evan, but tried to use his own son to alleviate the pain. So far the young family had been invaluable. When no one else would speak to my men, Aryn and his Brothers stepped forward and helped them. It had been a stroke of good luck that we had sent them ahead of us.\n\nKein missed me, but he was fascinated with this place. He had hidden his excitement when the other men told them not to come to the dining hall. If my family wanted to eat, they would have to catch it themselves. Going outside and tracking the animal they'd eaten last night had been wonderful. My men planned to spend as much time as they could exploring.\n\nChristof apologized to me again. He knew what they had done had hurt me. They had abused me even after they'd called me Sister. I'd forgiven them on many occasions, but it had not fully abated the guilt my best friend felt. Last night Kennedy had talked to them a long time. The men had all struggled with the things she had told them. Some of it had seemed too impossible, but they would continue to try.\n\nI sat for a long time staring at the paper. Rose was beside me doing the same thing.\n\n\"We should get ready,\" she finally said. \"The boys were up and dressed, we probably should be also.\"\n\nI stood and sniffed myself. Rose raised an eyebrow and nodded at me.\n\n\"We both need a bath, but I don't know how long it would take to fill that pot in our main room,\" she said pulling on her skirt.\n\nTaking a big breath, I made a decision.\n\n\"Let's try to find the bathing hall ourselves,\" I said firmly. \"They keep telling us not to act like slaves. The free men use the hall, we can, too. I say we walk around until we find it.\"\n\nRose and I each took our towel from inside our bedrooms. We peeked out the drape and saw the hall was deserted. Since we wanted to explore, that was probably a good thing.\n\nThe central fire pits were all burning very low and casting almost no warmth. I shivered in the cool air in the massive cave.\n\n\"We should have brought our coats,\" Rose whispered to me and I agreed.\n\nWe'd have to think about these things now. No one was going to dress us or make sure we were prepared. These really were our own bodies again.\n\nIt was so easy to miss, we almost did. Right in the middle of all the little different shops was a tunnel. I touched the wall and it was damp.\n\n\"This way,\" I grinned at Rose.\n\nThis had to be the correct direction, I kept thinking. The hall was wide and obviously well used. There were many torches lighting the way, but most of them were burned out at this time of day. The air itself was wet and muggy, definitely a good sign.\n\nThe hall ended and I was shocked. We were in an enormous cave. The ceiling was low, but the \"room\" went on forever it seemed. I couldn't see the other side, it was swallowed in darkness. Steps had been carved into the rock and went directly into the massive pool of steaming, swirling water. The large pool was mostly unlighted, but it was awe inspiring.\n\nRose walked to the right and I followed her. Men's shirts and pants were drying on a line. The wall behind them was billowing heat from a low fire. It appeared fans pushed the warmth over the clothing to dry them.\n\nPast that area was a stream running down into the main body of water. Neatly stacked to the side were what I would have called washboards in English. Rose remembered the Paterian word and we practiced it as we inspected them. There was a large tub of stuff that felt slick and little bars that smelled like soap.\n\nWell, we guessed we knew where we washed our clothing now.\n\nRose and I walked back to the main area and stripped. We found a bucket of more bars of soap and rags laid out neatly. We each took one of each and ventured into the water.\n\nThe steps were slimy, so we were careful, but once we were in the water it was heavenly.\n\n\"It's so warm!\" Rose said as she stood staring at me.\n\nIt moved against my legs and seemed to be traveling through this area. It was a natural widening of what must be a stream. I assumed the warmth was from the rocks underneath.\n\nI started to wash myself. Rose just stood in the waist deep water and stared at me.\n\n\"Well?\" I asked laughing at her. \"Do you want to wash or not?\"\n\nHer concerned look made me stop and I realized this was a serious step for her.\n\n\"I have not touched my own body since...\" she trailed off. \"Even after they freed me Basin and his Brothers always did it. It feels like I should not touch myself.\"\n\nThis must have been what they meant by retraining. I'd been a slave for only a short time and had already regained bits of my independence on my own. Rose and Fuji had never done the things I did. My friends still followed the old directives unfailingly.\n\n\"Perhaps,\" I said seriously, \"you start with your hands and arms.\"\n\nIt took a long time for Rose to wash herself. She cried when she had to wash between her legs. She had not touched herself there in a very long time. I suddenly realized she probably had not even wiped herself in the bathroom.\n\n\"We'll wash your underthings before we leave,\" I promised her once she was done.",
        "Washing clothes was something Rose had to teach me to do. I'd never used a washboard on Earth. Once in an antique store I'd seen one, but that didn't mean I knew what to do with it.\n\nBeing the one to give directions seemed to solidify Rose's determination. She'd used washboards with her grandmother. She took the lead and we washed our underthings together.\n\nThe dryers seemed powerful, so we just waited for them to dry the thin fabric of our underwear. We'd both put our skirts and shirts back on as we sat talking.\n\nSeeing men emerge from the water startled us both and we shrieked. It had seemed we were alone, but we had been watched this entire time.\n\n\"Relax, Sister,\" Kein said amicably, shaking off the water, \"we only need to get our clothing.\"\n\n\"You've been in the water the whole time?\" I asked as the rest of the family walked up the stone steps toward us, followed by Basin's and Stayne's families.\n\nRose ran to Basin and hugged him tight. I did the same thing and clung to my damp family one at a time as they dried themselves.\n\n\"Yes,\" Christof said pulling on his pants, \"I have been attempting to tell Basin and his Brothers that humans can clean themselves.\"\n\nI didn't have an answer to that and watched Basin check Rose over. Christof made him stop.\n\n\"She is free cousin,\" Christof said forcibly. \"Free creatures bathe themselves and take care of their own bodies. We have to understand this.\"\n\nBasin argued. Rose had cried the entire time. She didn't want to do it herself. My best friend needed her family. They should be caring for her physical self, she obviously couldn't do it.\n\n\"She needs you because you trained her that way,\" Christof said softly. \"Humans take care of their own needs on Earth, my offspring, Kennedy, has talked to us about this. The human women did not like it when we took this chore away from them. It caused them distress.\"\n\nBasin didn't like what Christof was saying. Rose was free, he argued, but she still needed them. I looked at Damien and knew instantly that he agreed with Basin. Christof obviously did not and I saw the pain it was causing my family. Rose and I being here was very upsetting.\n\n\"We have to go,\" I said abruptly, surprising everyone. \"If Rose and I are caught with you, you all will be sent back. We need to leave now and you should wait a moment before you walk out.\"\n\nBasin stared at me and I raised my chin to stare back at him. I felt like a quivering mass of jello on the inside, but I hoped it didn't show. This was not a time to show weakness.\n\nBasin spoke in a low tone and I knew I should drop my eyes, but I did not. \"You dare tell us where to go and what to do?\" he asked.\n\n\"It's for your own good,\" I answered reaching out for Rose's hand. \"If we stay with you here, we will be caught. Come on Rose, we absolutely must go.\"\n\nThe looks I was getting from the men were a mix of furious and amazed. Only in Christof's eyes did I see pride reflected. They had never seen me act this way.\n\n\"Go,\" Basin finally said pushing Rose away, \"go with your friend.\"\n\nOnce I had Rose I grabbed our underthings off the line and headed quickly for the exit. We each bundled our underwear into a ball and shoved them in our pockets. Just before we exited the damp cave we slowed our gait and walked slowly back toward our rooms.\n\nThe hallways were getting busier with men now. Several stopped to greet us and introduce themselves. One family was piling the fire pits with fuel and lighting the torches. Those men even stopped what they were doing to be friendly.\n\nI walked with Rose back to the second floor and our private lacquered pots.\n\n\"You have to wipe yourself when you are done using the lacquered pot,\" I whispered to her. \"It's not clean what you've been doing.\"\n\nRose nodded to me, but didn't speak before she turned into her stall. She still looked shocked. In truth, I still felt shocked. I couldn't believe I had stood up to a man on this world. It seemed impossible.\n\nAfter a quick stop in our room, we found the dining room again and walked in by ourselves. Arik and his Brothers were in front of us almost immediately.\n\n\"Good day, Ciara and Rose,\" Arik greeted us with a smile, \"we have decided to not be offended by your assumptions last night,\" he announced proudly.\n\n\"Thank you?\" Rose said looking at me with a definite question on the end.\n\n\"You know plants from Earth and we know plants from here,\" Arik said. \"We would like to trade with you. You tell us about Earth plants and we will tell you about Paterian plants. Some things may still exist in both places, we wish to know what they are.\"\n\nI had forgotten. Everything here was shared. I had thought Rose and I had little to offer. These men thought differently.\n\nWe went through the line for the morning meal and having Arik and his family with us was surprisingly helpful. Rose and I barely remembered what Hannah had told us, so we thought we'd have trouble. We asked Arik and his Brothers and they were a wealth of information.\n\nIt wasn't that Arik's family knew anything about humans, but they knew everything about plant life. If something was edible for us, they were aware. When it came to the meats, Arik introduced us to the men cooking, Abram's family, and they knew more about that. For the second time in two days we had a thorough lecture on food while we picked out our food.\n\nHannah had talked to Abram's family before we arrived. She'd made sure his family would put out something we could eat at every meal. The entire family was proud to point out the things they'd made special for us. We made a point to take some of each of those things. The men made sure we understood exactly what we would be eating as we picked it out.\n\n\"Come to the kitchens with us one day and we will teach you to prepare these things,\" Abram offered. \"We are used to teaching freed men how to cook and prepare a meal. It would be a pleasure to do the same for you both.\"\n\nI did my best to make eye contact with Abram as I thanked him. From what Hannah had said I absolutely had to learn this type of thing. This particular family didn't seem dangerous, so I'd feel safe learning with them.\n\nRose and I sat with Arik's family for the meal. The food this morning tasted slightly different from the night before. The spices were not too strong, but the flavors were invigorating. There was nothing bland, as far as, I could tell.\n\nI told Arik about cactus as payment for his help. He and his Brothers had never seen a plant with the spines I described. That surprised me. They had heard of plants that could store water, though.\n\nMuch like on Earth there was a plant in the desert the men broke open to drink from. It was how they got water in places with no fresh water above ground. Arik's Brothers described in detail what it looked like and how to open it to get the water out. Should I ever be in an arid area this information would be invaluable. It was how men in the compounds got water when they were on patrol.\n\nFuji arrived with her \"Mistress\" about halfway through our meal. Reed instructed Fuji to go select something she could eat from the trays.\n\n\"You may choose only from the brown bowls,\" Reed instructed.\n\n\"Yes, Mistress,\" Fuji said, happily walking off.\n\nI looked at Reed and then back at the table laden with food. Of the bowls up there, ninety percent of them were brown. Her directions made no sense to me. It was essentially a command to pick out whatever Fuji wanted.\n\nWhat was the point of giving Fuji such strange instructions?\n\nReed greeted us all as she pulled up a large stool to settle herself on.\n\n\"Eat,\" Reed said pleasantly, \"I have had my meal and do not wish to interrupt yours.\"\n\nReed watched Fuji and grinned broadly as her charge struck up a conversation with the cooks. Abram's family interacted easily with everyone and Fuji was no exception. The men talked to her as she picked out a meal for herself.\n\nGunth and his Brothers appeared beside Reed and their faces were all held in a scowl. All the men eating seemed to be surreptitiously watching their Administrators. I took my lead from Arik and kept eating, but paid attention.\n\n\"She is choosing her own food,\" Reed said happily, \"and she's talking to the cooks.\"\n\nGunth made an unhappy sound and crossed his arms. His Brothers all did the same thing with unnerving effect.\n\n\"You told her to do those things,\" he groused. \"She is not behaving like a free creature-\"\n\nHassar approached our table and interrupted Gunth mid-sentence.\n\n\"She will find she likes to make decisions eventually,\" she said pulling up a stool to sit beside her Sister. \"Creatures like that have never been told they could do what she is doing. We will allow her more and more choices until she realizes she is taking care of herself.\"\n\nGunth and his Brothers weren't convinced. This decision had not been made through the Administrators. Reed and Hassar had done it themselves without anyone's input. Gunth and his family were offended.\n\n\"We sincerely apologize,\" Hassar said laying her left arm across her chest and bowing her head to Gunth and his family. Reed was doing the same thing. \"We had only theorized between the two of us it would be an issue. Our thoughts and studies should have been shared with our friends and cousins. In no way do we intend to keep this creature a slave. She will learn freedom with us.\"\n\nI was openly staring at the interaction between the groups. We'd been told they worked together and respected one another, but I knew the importance of that simple gesture. In my mind a Paterian woman would never apologize to a man like that.\n\nThe apology seemed to soften Gunth and his Brothers.\n\n\"You are thinkers,\" Gunth's Brother said addressing the women and pulling a chair up so he sat next to me, his Brothers settled beside him. \"We should have asked your opinion on these matters. My Brother had thought you had more information than we did.\"\n\nThe morning meal was pleasant. Evidently it wasn't unusual for the Administrators to come down and sit with a family. This is how it was always done. They liked to make themselves very accessible.\n\nDuring the meal I watched Gunth move his leg several times. He would rub it every time he did that. I even noted his Brother rubbed his leg. If the pain bothered the family, it must be horrible. These men rarely noticed physical pain.\n\nThe talk at the table soon turned to Rose and me. Men retrained other men and taught them the world. Gunth and Hassar both trusted their camp to do the same for us. Men from the compounds were as uneducated as we were. Our lessons would be taught the same way.\n\nOur other issue was that as former slaves we had to learn to be more independent. Hannah had told them that was really what we needed. My friends and I had had our autonomy totally stripped. We had to relearn to take care of ourselves and trust in our ability to do it.\n\n\"Perhaps,\" I said quietly, \"we could start working as you discussed with us yesterday. We both enjoy being productive. We had small jobs at the compound and we enjoyed them...\"\n\nGunth and his Brothers liked that solution. Hard work that produced something for the camp would make us feel part of it. We could stitch cloths then switch jobs in the afternoon, so we could learn different things. They were all for it.\n\n\"They could do that in the morning,\" Arik said hopefully, \"and in the afternoon we take the women to the fields. They could help us tend the crops. It may help them understand the food better. We could teach them about the plants outside, as we do the men.\"\n\nReed and Hassar thought that was a brilliant plan. They had been offended that Rose and I weren't even taught what to eat by our past \"Masters\". One of the first steps to being more self sufficient would be to know about food. While we were out there the men could teach us other things as well.\n\nGunth and his Brothers delivered us to Armant and his family after the morning meal. The little clothing shop was already bustling as Rose and me were given a seat. Men were dropping off things for repair or picking up completed orders. Most were in a hurry, but they made a point to quickly introduce themselves before they left.\n\nI noted several families toted infants and small children with them. The men carried the little, furred girls and tiny boys the way I had carried mine. The young were bundled and wrapped before being strapped to the chest of one of the men in the family. I mourned that my own children had never known their male breeders this way.\n\nIt was especially striking with the girls. I saw the adoration in their eyes as they watched their male breeders go about their day. Females raised this way, surrounded by loving caring family, would never put men into the compounds. No wonder the resistance was growing.\n\n\"How do they feed the children?\" I asked out loud and unintentionally. I jumped when the men in the shop looked at me\n\nA man with a tiny girl smiled at me as he answered.\n\n\"Her female breeder comes to us at regular intervals,\" he said, stroking his small daughter's head. \"She knows when the young will need to feed. We take her with us outside and let her get stronger. This will be a powerful female one day soon.\"\n\nThe little girl on the man's chest just gazed around at him and his Brothers. I had no doubt he did not mind caring for her and she did not mind his attention. Her memories would be mainly those of her female breeder, but all her experience would be the love of her male breeder. I imagined it balanced the girls born here.\n\nMen cared for the children almost exclusively, I was told. Women were not good with children. After the birth men were the predominate parent in their child's life. Paterian women were a good food source, but past that took a limited role. The men laughed saying it was hard enough to get them to feed the young, much less anything else.\n\nI looked at Rose and she was as shocked as me. We would never have guessed that. Everything here was different from what we expected.\n\nThe men coming and going thinned out some and the shopkeepers settled down to work on the day's orders.\n\n\"Take a break when you need it,\" Armant's Brother, Reil, told us. \"Drink from the jug there when you wish. Don't let the task overwhelm you, it will still be there when you return.\"\n\n\"It always is,\" another Brother laughed.\n\nWe sewed in silence at first, but the men were very friendly. Armant and his Brothers liked to talk to pass the time. They were pleasantly surprised when I spoke to them freely. They'd seen slaves in their old compound, but never spoken to a human.\n\n\"It is wrong what those men do,\" Reil said, as he sat making a new shirt for a man. \"We were so uneducated then, but now we know. It offends us men like that are in our camp.\"\n\nI stopped his rant before he really got started.\n\n\"No one understands us,\" I said quickly. \"Rose and I do not hate the men who used to own us. We fell in love with them and they freed us. The way they are being treated isn't right!\"\n\nNo one stopped working, because there just wasn't time to, but the men were fascinated by the conversation. They believed we had been tricked and told us as much. The evil hold that the slavers had over us must be broken.\n\nThe rest of the morning was the same conversation. Armant and his Brothers hated slavery and could not understand our fascination with our families. Armant's family talked about the \"training\" our families had given us. It was designed to make us entirely dependent on our owners.\n\n\"Do you feel safe here?\" Armant asked, gesturing to the small, but well lit, cave we were in. \"Do you think we may harm you?\"\n\nI looked at Rose and she looked at me. We were both trying very hard to do what we had been told to do, but it was difficult. Rose was staring at the cloth in her hands and silent as a stone. I was literally forcing myself to interact.\n\nArmant was right. In the back of my mind I feared these men. I only felt safe with Damien and his Brothers.\n\nI tried to impart to Armant's family that our families had changed. Neither Basin nor Damien wanted to own a slave anymore. They wanted a Sister that loved them.\n\nArmant's family listened to my argument and seemed to relent slightly. It was good that Damien and Basin were acting better, but it didn't excuse past crimes. Armant and his Brothers certainly believed Rose and I needed to be away from the men who trained us.\n\nHannah and Ra arrived at the midday meal to say they and Kennedy had to go. Females were needed in a camp northwest of here that was suffering from racks. They wanted to be around for me, but this was just turning out to be a bad time. They were needed elsewhere and I would be quite safe here now.\n\nI worried about Nu-reeh catching my daughters. She had to know they were involved. It was clear to me she would not let them survive if she thought they were tied to the disappearing men.\n\n\"Since freeing you, Mama,\" Hannah told me, \"Kennedy and I are on the Most Wanted posters all over the planet. We're tied to the resistance now for good. Planning the escape of three families earned me my first beads. You don't have to worry when we go places, we only travel to other rebel camps.\"\n\nI saw several bright beads sparkle in her fur and smiled wanly. It didn't really make me feel better, but neither girl noticed as they kissed me goodbye before taking off.\n\nAfter lunch Rose and I went to the main transport storage area. Arik and his Brothers were waiting for us there. They took us outside in the daylight and it was as beautiful as it had been the day before.\n\nSun shone down on the forest and small animals skittered in the branches of the tall trees. Again that smell of jasmine was wafted on the breeze. I imagined that Damien and his Brothers had enjoyed coming out here and hunting. It was probably really fun and I wished I could have joined them.\n\nNot that they would have taken me, even if we were together, a tiny voice whispered in the back of my mind.\n\nDamien and his Brothers would never let me hunt with them here. There were too many unknowns and they thought I was too weak. I would be sequestered in their quarters, hidden away from danger.\n\nArik and his Brothers blithely pointed out trees and plants to us. Many things out here had a use: food, clothing, healing. If it could be harvested for something, the men did it.\n\nThe boundary of the defense system was pointed out by Arik's Brother Calen. He mentioned it right as we sailed past it.\n\n\"Racks are the biggest danger here,\" Calen said arming one of the transport's cannons and swinging it back and forth. \"They don't usually attack this close to the camp, because the women are always around.\"\n\nI didn't feel all that comforted surrounded by these five lanky guys. With Damien and his Brothers I would feel absolutely at ease. I felt like Damien and his Brothers could protect me from anything.\n\nI shook my head at my own logic. My men could easily protect me against threats they engineered themselves. When it came to real threats, they were no better than these guys, for all I knew.\n\nIt felt as though I suddenly had two warring parties in my head. For the first time ever, I doubted Damien and his Brothers. They were stronger than me, but they were as naive as I was in this new place. They wouldn't know the dangers or the defenses any better than me. Arik and his Brothers, for their seeming physical weakness, knew exactly how to protect themselves. Odds are, left out here alone, Arik's family would probably fare much better, as opposed to the men I trusted so wholeheartedly. It made me feel unnerved and insecure.\n\nThere was a huge pile of vines ahead of us and I yelped when the transport lowered through them. It was another illusion. Beneath the false visual floor was a massive field with many men already working. They talked to one another as they worked.  ",
        "Despite the chill in the air the afternoon work was hot and dirty, but enlightening. Rose and I were small and closer to the ground than the men. They thanked us heartily for helping them pull the unwanted weeds from around their plants.\n\nThe field we were in today was growing something that seemed familiar. It looked an awful like corn, but Arik called it spota. It was something Rose and I could eat. As we pulled weeds the men told us about where it grew wild and how to prepare it. It was a staple in this part of the world.\n\nThe men were friendly enough until they got on the topic of slavers. Men like that had no right in their camp. Even if they had been male breeders for Hannah and Kennedy, they still were horrible creatures. Slavers should be left at the compounds to rot was the general opinion.\n\nIt took courage, but I finally said something.\n\n\"That isn't fair,\" I said firmly to the man picking the sporta off the stalk next to me. \"Our families have changed. They know they made a mistake, now, you can't judge like that without giving them a chance.\"\n\n\"Slavers,\" the man said pulling off another mature piece of the plant, \"have an entirely different way of viewing the world. They do not know respect for other living creatures. We do not want them here.\"\n\nRose spoke in an almost begging tone while looking at the ground, \"Then you need to teach them,\" she said. \"If you don't like how they view the world, you must be patient and teach them.\"\n\nThe men grumbled and fussed. Slavers weren't worth teaching, they were poisonous and evil. Just look at how Rose was acting, slavers had made her that way. She was scared and shy, still staring at the ground. The free men around us did not understand why men on the compounds kept slaves or why we were defending them.\n\nBoth Rose and I worked hard to change our behavior as the afternoon went on. Continuing to act as we'd been trained to would only hurt our families. We had to start acting like free women again.\n\nAfter a day in the field Rose and I were both dirty and sweaty. The bathing pot in our rooms was small and we had really liked the warm bath that morning. Before the evening meal we went back to the bathing place and washed ourselves and our clothing.\n\nIt was a good thing I was accustomed to being naked. I had to strip off my outfit and wash it before getting into the water to bathe my body. It had been a long time since I felt self-conscious without clothing. After being dressed all day, I found my bare skin made me shy. Still, I was determined not to cower in our rooms with Rose.\n\nArik's family and Ratru's family ate with us again that night. Rose and I were getting used to the new families and even relaxed enough to laugh at their jokes. It wasn't the same closeness I was used to with Damien's family, but it was nice.\n\nOne of the families I rescued from the caves, the same one that brought Kennedy's pad to me, even showed up and sat at our table. We all squeezed together so they would fit. I got the feeling the men liked to be this close to one another. It was different from the almost isolation the families at the compound were used to.\n\nThe lead Brother's name in this family was Rayn. It was easy to recognize his family because of the one tall Brother. Rayn had pulled up chairs so his family could take a meal with all of us. He and his Brothers worked almost exclusively with rescues from the compounds or exploration of the surrounding area. They were rarely in the camp.\n\n\"We like to be outside,\" Rayn said between large bites. \"Some men like the safety of the camp, but we find it confining. My Brothers and I want to be out in the world.\"\n\nI smiled at him and nodded. He and his Brothers looked like the most rugged men I'd seen here. Listening to their stories it sounded like they had seen a great deal. Had we been on Earth, I imagined they would be explorers living on the edge of civilization.\n\nRayn's family had even brought back a bag of seeds for Arik and his Brothers. It was a fruit the men had difficulty cultivating here, but they all liked it. Rayn and his family were positive Arik's family could figure out how to grow it this time, though. Although Arik's family was obviously physically weaker than Rayn's they were well respected for what they did.\n\nI watched the men interact and noted that Hannah had been right. Free men believed strongly in equality. Rayn's family didn't shun Arik's because they were smaller. There were things Rayn just wasn't good at and he could acknowledge that.\n\nThinking back I realized the compound had been divided in a very physical sense. Shopkeepers behind one wall and Warriors behind another. Even the Administrators kept closely to themselves. None of the groups mingled the way I saw them purposefully doing here.\n\nOur meal finished and we were left to go back to our lodgings on our own. I walked with my friend through the camp and found myself wondering about Damien and his Brothers.\n\n\"You know,\" Rose said quietly as we walked, \"I bet if we get up early again, we would see our families in the morning.\"\n\nShe was right and it quickly became an addictive pattern. Rose and I met our families almost every morning in the bathing hall. It was deserted that time of day so no one noticed what we were doing.\n\nWe never had long with them and there was always the threat someone would come in. It was just a few stolen moments everyday to say I love you and check on each other. I wanted more, so much more, but it just was not possible for us to be together.\n\nOur men were fairly happy in the camp, but very isolated. They were not invited to dine with everyone and they were not included in group activities. If it hadn't been for Arnold's family and Tyle's family they would have been very lost.\n\nOur men were essentially left on their own. They had to catch and cook their own food. They had their jobs and they usually took them far from the camp. I know some part of them missed the camaraderie of the compound, but they made do. Instead of complaining they used the free time to explore and learn. Nobody limited them and they adored the freedom.\n\nOur men were usually given the worst jobs and the most dangerous. None of them ever complained about that either. Instead they were becoming the toughest men in the entire camp. Damien told us they saw things and places the other men rarely did, due to the danger. That was fine, because they had new experiences everyday.\n\nThe only thing they ever complained about, the only sadness that seemed to touch them, was the loss of Jonathan. Evan mourned for his lost child just as I did. He could sense the boy and knew he was alive. All our other information came from the black and white pictures we watched from time to time.\n\nJonathan was a fierce little boy and so was his family. They fought each other to get stronger and fought other little boys to prove dominance. Everything seemed to interest them.\n\nI noted that Jonathan's curiosity got him and his Brothers in loads of trouble. He wanted to know everything. I cried each time I went to watch the monitor. Tears poured for the little man I would not know any more than this. Evan told me he felt the same as I did when he watched our raucous child.\n\nOur men's opinions regarding Rose and me changed slowly. I knew that Hannah and Kennedy talked to them frequently when they were here. Gunth counseled them, also. My family made comments to me and I knew they were being educated. It was just a very slow process for them to change their thinking. They couldn't believe we didn't need their protection.\n\nThe main issue was that Rose and I associated with other men all day. Our families weren't sure they liked the way we lived our lives. We talked to them about the friendly men we talked to and worked with. Men in the camp taught us things and we told them about Earth culture or knitted them blankets. The continued little interactions concerned our men. One day they'd finally had enough of it.\n\n\"Hannah can bring food to your rooms,\" Damien said. He'd had a bad day prior and his irritation won out. \"You cannot move around these men as though there is no danger! It isn't safe.\"\n\n\"It is perfectly safe,\" I argued soaping my arm. \"No one here would touch us if we didn't want them to. They won't act like the men you are used to. These men respect our choices.\"\n\nBane cursed a foul stream and Basin seconded it. Rose and I were weak and defenseless. We'd be taken advantage of soon enough. We were just too stupid to see the signs. Without our families we were just a warm place to put a cock. The men couldn't believe it had not happened already.\n\nI liked Armant's family and Arik's family. Ratru's family was always eager to help us learn to use weapons. Rayn and his Brothers, when they were in camp, told us about the wild world outside. They'd been many places. For the first time in who knew how long I had friends I had chosen. Damien's attitude infuriated me.\n\n\"They have never taken my body after I said no,\" I said grabbing Rose and heading for the exit of the bath. \"They've never beaten me. I believe I have more to fear in here than I do out there!\" I finished gesturing to the cave entrance.\n\nDamien looked shocked.\n\n\"And you, Rose,\" Basin growled, \"you enjoy your time with these other men? Do they provide for you?\"\n\nRose stiffened her spine and was suddenly pulling me up the steps and out of the water.\n\n\"They have asked me for nothing,\" she said simply, \"in return for granting my total freedom. I provide clothing for them because I chose to and that simple price has afforded me the entirety of what you and your Brothers denied me. Yes, Basin, they provide for me.\"\n\nThe men were now all livid as we grabbed our clothes and ran for the entrance to the cave. I knew they could catch us in an instant. We could be beaten to death before we could raise a hand in self defense. Terror rose in my gut and it didn't relax until we were at the exit to the bathing cave.\n\nJust before exiting the darkened cave, Rose and I pulled our outfits over damp skin with shaking hands. The things we'd said had been true and brutal. I wondered if the men would forgive us. I wondered if they would try to punish us for saying those things.\n\nWe made our way slowly up to our rooms and sat in front of the fire as we shivered.\n\n\"I don't know what made me say that to them,\" Rose whispered suddenly. \"I don't understand how I feel. Basin and his Brothers have been my whole world for so long...\"\n\nI stared at the fire and thought about the way I'd felt in the cave. My heart had been pounding out of my chest and I had been shaking like a leaf. I'd been afraid, terrified of the pain they knew how to inflict.\n\n\"They beat me,\" I said slowly, \"when they found out I told you about Hannah...\"\n\nRose nodded and hugged herself.\n\n\"I thought they would have,\" she said quietly. \"The things the men from the red mountains taught them were evil.\"\n\n\"Just now,\" I said glancing at our covered door, \"I was fearful they would hurt me again, because they could.\"\n\nRose straightened in her chair and her mouth took on a firm line.\n\n\"They won't hurt us. They wouldn't dare, but we don't go back,\" she said stoically, \"until we don't fear them. They like seeing us and enjoy talking to us. Our presence in that bathing hall is a choice everyday. Let them see how they like it when we do what we want, without thinking about what they want.\"\n\nIt took three days for us to walk into the bathing hall in the morning. I spent all three days getting angrier and angrier at Damien and his Brothers. When Rose and I finally returned one morning the men were in the water bathing quietly. Rose and I stripped and stepped into the water and cleaned our own bodies carefully.\n\n\"Hannah and Kennedy talk to us,\" Damien said standing several paces away from me. \"They tell us that you have made friends and that the men respect you both.\"\n\n\"They do,\" I answered quietly as I rubbed the cloth over my own shoulders. \"The men here have never beaten me or raped me.\"\n\nThe men were silent and I heard Basin and Stayne's family moving away. Even Rose offered some privacy, by stepping away.\n\n\"We have apologized,\" Damien said softly, \"for our prior actions.\"\n\nFire boiled in my veins and I felt the anger I had long denied.\n\n\"You beat me between my legs,\" I told them in a low voice. \"You gave me such pain I had nightmares about it. I trusted you with everything and you treated me like that. I couldn't even be angry at you! Where would I have gone and what would I have done if you abandoned me?!\"\n\nMy voice was ringing in the cave now and I saw the shock on the faces of the men.\n\n\"After you did that horrible thing to me I had to smile and accept your cocks there as if nothing had happened! It was obvious I could not fight you and you made our relationship clear. I was never anything but a slave to you!\"\n\nThe room was still for a moment before Damien spoke, but I didn't wait. I stormed out of the water with Rose hot on my heels.\n\n\"We felt fear, Sister,\" Damien pleaded to my retreating back.. \"We acted out of terror that the women would take you. None of us wanted to do that, but we knew you had to learn.\"\n\n\"THEY DIDN'T EVEN NOTICE!\" I screamed at him standing on the steps and facing them. \"THEY NEVER SAID A WORD TO ANY OF US ABOUT IT! YOU BEAT ME BECAUSE YOU COULD!\"\n\nChristof spoke softly and quickly as I grabbed my clothes off the line. \"We did not know that would happen. We thought they would be angry. My Brothers and I were foolish and acted out of fear. Please forgive us, Sister.\"\n\n\"And then you BRED me like a dog,\" I seethed pulling my wet garments over my half cleaned body. \"You forced me to birth a son I will never know. Nu-reeh may not have even gotten another child from me before we left, but you all made it happen...\"\n\n\"It was a stupid mistake, Sister,\" Evan begged. \"We wanted to protect you-\"\n\nThe anger rose and I threw a bar of soap at him hitting his shoulder. \"YOU HAVE NEVER PROTECTED ME!\" I shouted with righteous fury. \"You men have beaten and controlled me from the first day you met me! I mean nothing to you! You do not understand family!\"\n\nI stormed out of the cave alone and went back to the small room I shared with my friend. I was so angry. My fists were bloody from hitting the wall when I finally stopped that. Instead I sat on the bed and looked at Jonathan's picture. For the first time in a very long time I allowed the anger and frustration out. Time had no meaning as I railed against the unfairness of it all.\n\nI was as good as dead to my Earth family and I'd never see them again. My daughters were grown and gone. I was unable to raise my precious boy. The men I thought I had loved, I'd been tricked into caring for. Nothing seemed real anymore. On this world and in this life I had absolutely nothing.\n\nIt became a cycle. I'd sob for a while watching Jonathan's picture and then scream into my pillow until I was hoarse. Rose appeared at some point, but I ignored her until she left. I just continued with my raving until I was too weak to do anything save stare at my young son's face.\n\n\"Mama,\" Kennedy said softly, \"come out and talk to us.\"\n\n\"No,\" I rasped not taking my eyes off Jonathan's image.\n\n\"It's time, Mama,\" Kennedy said softly. \"Come out and talk to us. You've held this in for too long.\"\n\nMuch against my wishes I dragged myself into the sitting area around the fire. Kennedy and her Sisters had arranged themselves and sat cross legged on the floor. They were there for the long haul, so to speak.\n\nKennedy and her Sisters were wise beyond their years. They said they'd been waiting, very patiently, for me to become angry. I had a right to be mad, they told me, Rose had the same right. We'd held our feelings inside and denied them long enough. The loving relationships we had with our families were based in a very dark place. We had to accept the whole truth and we'd never done that.\n\nI talked to the girls all day. Rose came back and after some prodding, she did the same things I'd done that morning. We both slowly came to terms with the way we felt and it made no sense.\n\nMy body felt horrible and raw. My mind was in turmoil and I wanted two very different things. I wanted Damien and his Brothers to comfort me. At the same time I wanted to hurt them as badly as I could. If I could have I would have beaten them all to a bloody pulp and felt vindicated doing it. It was very confusing.\n\nI did not like discussing this with Kennedy one bit, but she seemed not bothered by my ambivalence about her father. She knew me at my most intimate level and I suppose the questions had always been there. Evidently she'd come to terms with it long ago.\n\nThe next day I went to work with Armant and I helped in the fields, but I didn't meet Damien and his Brothers in the morning. For days I thought about how I felt and it never got any clearer. I had a choice now, I realized. Damien and his Brothers weren't the only men on this planet.\n\nI sought out men that looked attractive to me. At night I had dinner with different families and even flirted with some. We'd go back to their rooms and talk a little. I just couldn't find a connection with any of them. It just felt like friendship.\n\nThinking about my own sexual needs started to make me frustrated. I wanted relief, but I was having trouble finding men to provide it. In the middle of the night I'd find myself curled in a chair as Rose slept in the bed. It was hard to sleep when I was this horny.\n\nMy memories were filled with arousing images. As angry as I was at Damien and his Brothers, they were magnificent looking men. Inadvertently I began to remember times I'd seen them wet with sweat and seeking release between my thighs. I tried to imagine other men and always ended up focusing back on the bodies I knew so well.\n\nEvan's chest as it tapered down to his flat stomach and long, thick cock. Damien's powerful arms with his hands gliding possessively over my skin. Kein's mouth nearly making me orgasm as he nibbled at my sensitive nipples.\n\nAs I sat by the fire I felt Christof's long fingers gliding up my thighs. I recalled the first time he'd experimented with using his mouth on my center. The tentative strokes of his tongue had grown bolder as he'd seen my passion rise. He could own the wetness between my legs when he wanted to.\n\nLast but not least was Bane. He had an insatiable fascination with the tight puckered flesh of my ass. How many times had I looked back to see his massive form poised, ready to impale me? Big hands separating my flesh as his chest heaved with the effort of holding back. It always hurt a little when he started, but my resistance always faded as he slowly stretched me.\n\nThe sturdy linen dress I wore at night became too much on my sensitive skin. Glancing furtively back at Rose's form sleeping in our bed, I slipped the offending fabric off.\n\nThere were times I'd masturbated for Damien and his Brothers. It was not something I did because I wanted to. This had been like everything else sexual, their choice to see me do it. There was just me here right now, though.\n\nNow as I sat I stroked the round, fullness of my breasts. My nipples stiffened in the air and I pinched them hard. The slight pain felt good and I did it again. Biting back a moan, I remembered the lash Damien had wielded. I imagined the stinging little slaps warming the pendulous flesh. There was no fear of abuse anymore and I only recalled the pleasure.\n\nMy hands drifted lower and I spread my legs. The flesh of my stomach felt soft and feminine under my fingertips. I reached the tops of my thighs and slowly traced down to my knees. As I dragged my fingers back up goosebumps spread up my body.\n\nIt had been so long since I had done this. There was no one here except me and I was doing it for me. I wanted to orgasm, because it would feel good, not as a show for anyone else. My breath rushed out as my fingers slid over my plump lower lips.  ",
        "I leaned back and the soft seat I was in allowed me to recline almost entirely. One hand separated my soft vulva and fingers explored the wet area between. Two fingers explored the entrance to my vagina. I fucked myself slowly and then dragged the moisture over my distended clit.\n\nIt felt so good I couldn't help myself, a moan slipped out and I heard Rose shift on the bed. The lust cooled some and I waited for her to either awaken or fall back to sleep. Her breathing stayed slow and deep, so I continued to play.\n\nEver so slowly I rubbed my slick clit. The protruding nub got larger as I stroked it. Images filled my head, but they were no longer ones I'd seen. Now it was my imagination and my game as I played with myself.\n\nIn my mind, I stood over Damien with the lash in my hand. His cries of want and frustration were music to my ears. With each stroke of my fingers I brought the flogger down over him. I warmed his chest and upper thighs, but I came just as the strips of leather slapped his erect cock.\n\nThe power felt so good as I lay recovering on the soft chair. I'd forgotten how wonderful it felt to be in charge. It had been so long since I'd been in charge of anything. Now my body, my mind, my sexual needs, and all my other needs were mine to control. I decided to test out what I could do for myself.\n\nI tried again to find a family that I could have some fun with. For some reason, I didn't want to ask any of my friends. Ratru and his Brothers were cute, but asking them for sex felt wrong. Armant and his Brothers were too old and they were coworkers. Arik and his family didn't appeal to me \"that way\". Instead I introduced myself to other men, most just didn't understand what I wanted.\n\nOne family of men understood my overtures. They offered to mate with me for fun. I walked with them to their rooms before I decided against it. Feeling like a real human woman, I feigned a headache and left. The next day I heard they'd just found another willing partner.\n\nNo one in the camp begrudged me my choices. The men and women here just trusted that left on my own, I'd do what was best. It was my life and I was allowed to live it how I wanted.\n\nI needed time to think when I wasn't surrounded by my talkative campmates. That was hard to do in what was essentially a commune. I did find one place that I could work and think.\n\nThere were things the men grew that tended to do better wild. Arik and his Brothers had spread berry seeds in nooks and crannies all over the protected area in front of the camp. I wandered the mountainside in the afternoon plucking the wild berries inside the defensive barrier. It gave me a chance to think without interruption.\n\nI walked the sunny slope finding the elusive fruit and pondering my circumstance. This wasn't a job the other men in the camp liked, although they liked the berries. Everyone was perfectly happy to let me have my afternoons to myself if this was my preferred activity. It gave me time.\n\nThere were things I did like about Damien's family. When I met other men I always compared them to the men I knew best. Everyone always came up lacking. They didn't have Christof's gentleness, Kein's fierceness, or Evan's sense of humor. I appreciated Damien's forthright command and Bane's quiet strength. To me, Damien's family was the perfect blend.\n\nThere were other things, too, that I found I liked. Damien and his Brothers had tried to change when it became apparent they should. The novelty of the situation was just something they weren't prepared for. Even now they were struggling to let go of their old teaching. The beliefs they had were deeply ingrained.\n\nChange was difficult for everyone on Pateria. At least Damien and his Brothers had made an attempt. The men in the camp couldn't seem to let go of their old thinking about slavers. They didn't even give the new men a chance. Damien's ability to adapt was unique.\n\nIt struck me that my own actions may have made the situation worse. Damien and his Brothers had quickly trained me to do what they wanted and let them provide. Even after they had freed me I'd maintained that out of habit.\n\nWhen I thought back on it, I'd rarely been forceful in helping to lead the family. The times I was persistent, they took my feelings into account. Honestly, I was rarely forceful with them. More than once, I'd just blithely assumed they would care for me.\n\nIn truth, I'd known I was not taking any contraception when I'd become pregnant with Jonathan. Instead of demanding the men discuss it with me, I'd just let it continue. I'd allowed them to care for me entirely. I'd followed the slave training and not thought about the responsibilities of a free Sister.\n\nI sat with my basket of berries and looked up into the sunlight. In the distance I could hear men talking and laughing. Birds and other creatures called out into the bright afternoon. There was no gloom here, except in my thoughts.\n\nPerhaps I could have told them how much they hurt me when they punished me. The morning after I had expressed some of it, but I'd buried most of it. I'd kept the dreams a secret and not really helped them understand the psychological damage they had inflicted on our relationship.\n\nWhile I could not have stopped the corporal punishment, I could have helped them understand it was a mistake. If I'd really been honest about how scarring that experience was, they might have listened. Instead I had buried my feelings and let things go on. It was a slave's reaction to accept their will without question. I should not have done that.\n\nAt the end of the day, the issue was clear. I loved Damien and his Brothers, despite their past mistakes. They had forced me into performing sexually for them, but they'd never asked that I come to love them. In the beginning I don't think they'd even been aware I could feel this way about them. Now everything about this situation was my choice.\n\nThere were two options really. I could ignore the way I felt and let it fade into a memory. We would share offspring, but be no closer than a divorced couple in a similar circumstance. The second option to offer Damien and his Brothers real forgiveness and a chance to do right. If I really had it in me to pardon them for their past crimes and failures we could try again. Neither option was without flaws and I risked something either way.\n\nSeveral days later, I went to the giant bathing cave in the early morning and sat beside the dryer on a warm stone. Men's clothing was there, so I was sure Damien and his Brothers were in here somewhere.\n\nAfter many moments Damien and his Brothers moved into the light. They looked pained as they filed out of the water. I watched stoically as they dried themselves and sat in a semi-circle around me. We didn't speak and merely sat quietly with one another.\n\n\"You made mistakes,\" I told them after a while. \"I won't tolerate those mistakes again. No one is going to beat me or force me to do things. I won't be tricked or trained anymore. Our relationship must be as open as the one you share with each other.\"\n\n\"We talk to Kennedy and Hannah,\" Christof said softly. \"They help us understand things. My Brothers and I acted dishonorably many times. We know that things are different here from what we were taught. We are learning to think differently.\"\n\n\"Pain is not a tool we should use,\" Kein said bluntly. \"Bringing pain is a way to train someone. We are all intelligent. If we are taught we can learn to change without pain. My Brothers and I don't need pain, neither do you. What we did to you never should have been done, especially after we called you family.\"\n\n\"Thank you,\" I said accepting his understanding. \"I am not as physically strong as you, but that does not give you the right to dominate me. I demand your respect and consideration in all things.\"\n\n\"We believed you weak, Sister,\" Evan said solemnly. \"We thought we had to protect you, but the things we did were wrong. Even if it brought you pain, you deserved the truth as we knew it. My Brothers and I were so desperate to keep you, we pushed you away.\"\n\nI nodded and knew they were learning, finally.\n\n\"We apologize,\" Damien said, \"for our wrongdoing, all of it. We wish to change and learn the new ways. All of us want you in our life, we are lonely without you.\"\n\nHeads bowed with left arm crossing each chest the men waited for my decision.\n\nIt was a huge choice and turning point for me and I chose to stay. My men had made mistakes, loads of them, but they were willing to change. I wanted to be with them for that. Somehow I knew I would treasure this about them as time went on.\n\n\"Promise to respect me,\" I whispered getting down on my knees in front of Damien, \"and I will promise you the same.\"\n\nI didn't bathe with the men that morning. We hugged and kissed, promising to meet like this every day. We were family and family does not separate.\n\nOver the next moon, my men learned and the relationship changed, which was good, because all sorts of things were happening.\n\nRose and I both got callouses on our fingers from the hard work with Armant's family and the time we spent outside working. The rough patches on our hands were a point of concern at first. Our families realized the patches weren't hurting us and it was normal.\n\nAs time went on we got more callouses, so it was good the men understood. Hannah, when she was around, insisted we become proficient with weapons. Rose and I carried our swords and were taught to use them. Much like the rest of the camp, we would be responsible for ourselves in case of attack.\n\nRatru's family taught us to fight and to use the swords they had made for us. The men were surprised and impressed I already knew some of the drills and moves. That Damien's family had actually trained me seemed to startle them. It gave them a tad bit more respect for the men they still called \"slavers\".\n\nRue and his Brothers, much to their dismay, were instructed to teach Rose and me about the guns. Much like everyone else, Rose and I should be fully armed. No one was surprised by Rue's treatment of us. Apparently Rue treated everyone horrid, not just humans. They were good teachers though and I learned to use the weapons they'd made.\n\nAs time went on, I was getting braver and braver. While everyone else was indifferent to Rue's subtle underhanded remarks, they finally put me in a mood. Even in the middle of many families I felt my temper flare. We were standing in the \"training range\" where we learned to fire the weapons when I exploded.\n\nRue had explained in an exaggerated fashion how to aim the weapons, since I had missed, which was actually unusual for me. His Brothers laughed as he repeated his instructions. They commented about how slow and stupid I was. I heard the remarks and couldn't resist.\n\n\"So,\" I asked loudly, \"will you lock me in a box overnight for this? Perhaps there is another punishment you would like to inflict on me KEEPER?\"\n\nThe training ground was suddenly silent as the men around us registered the comment.\n\n\"Why do you call these men Keeper?\" a man asked from the side. He was a rescued man from the Barnas compound. That word had meaning to him.\n\nI crossed my arms and stared at Rue with open malevolence. \"Didn't you tell them how you used to keep slaves in exchange for stones? Aren't you proud of your role in supporting slavery in the compounds?\"\n\n\"For stones!\" Rue's Brother said loudly, \"We never used you for your purpose or showed any interest in you.\"\n\n\"Slavery is an abomination,\" a man said loudly to our left and I grinned.\n\n\"You participated,\" I said to Rue smugly. \"Really, what kind of men does that make you?\"\n\nI turned and stalked away, leaving Rue and his Brothers to deal with whatever mess I'd stirred up. Some part of me wanted to feel guilty, but I didn't. I deserved a little payback for all those nights locked in that little vault. Odds were the Administrators would sanction the other men, but in my opinion it was worth it.\n\nThe men weren't supposed to fight and usually they behaved. I heard the scuffle begin behind me and grinned knowing what it meant as I walked out. A little payback wasn't a terrible thing.\n\nI saw Fuji rarely in this new life, but when I did the differences were striking. The more freedom Reed and Hassar insisted she take, the better she looked. Her skin practically glowed and when her hair started to grow in, it looked like I'd never seen it before. It was an extraordinary difference.\n\nInstead of the thin mangy look her red hair had always had, it was now thick and lush on her head. A strip of it even ran down her back along her spine. She looked truly magnificent and wild.\n\nFuji's favorite activity was hunting and the women encouraged her to do that. She roamed the outside world and brought back meat for many of our meals. I'd see her sometimes on the mountainside beyond the protected perimeter. She was fast and they'd taught her how to fight. My friend had become a brutally efficient hunter. Everyone respected her skill at it.\n\nWe'd talk sometimes when she came back into camp. She was so entirely different than she had been prior. Gone was the demure girl who had no opinions of her own. Fuji used the resources available to her and became an individual in her own right. She had become proud, stubborn, and opinionated. It was a miraculous change.\n\nI saw her one day dragging the bloody carcass of a rack through a ground level entrance into the transport storage area. The men surrounded her as she entered and eyed her catch with appreciation. Every piece of a rack was valuable in the camp, none of it would be wasted, but catching and killing one was a feat. The men were honored when she gave her prize over and instructed them to make good use of it.\n\n\"How did you do that?\" I asked as the men carried the body away with hoots and calls, alerting everyone to the bounty.\n\n\"Racks aren't hard,\" Fuji informed me, shaking her hair out. \"I could catch more, but the Administrators only want me bringing the population down, not decimating it.\"\n\nUp close I could see several healed lines on her flesh. My friend had no use for clothing and continued refused all offers to furnish her some. Fuji had scars that crisscrossed her torso and arms. Knowing what it took to penetrate her skin, I imagined learning to kill a rack had not been an easy chore. She was too proud of her ability to be worried about that. Her worth was not based on her perfect physical self anymore.\n\n\"You've changed, my friend,\" I told her. \"I never thought you would be like this.\"\n\nFuji looked at me and then at the world outside the cave.\n\n\"My home planet was like this,\" she said. \"I was not able to explore it. Women on my planet are only valuable for sale. My male breeder secluded my sisters and me underground. We were trained to serve and then sold, so he could continue his habit...\"\n\nI felt foolish, but I didn't know much about Fuji's home world. I wasn't sure what habit she referred to. My confusion was evident.\n\n\"I've learned about my home planet, Batra,\" Fuji explained. \"The worms that are so nutritious for you are from there, but we hunted them to near extinction,once we discovered them. They are very difficult to afford, now. Before the worms, my people were proud fighters. We did not sell our children to be slaves on other worlds. The worms took away our sense.\"\n\nI nodded sympathetically, knowing that drugs had ruined many proud humans on Earth.\n\n\"The hold of those things can be hard to break,\" I said sadly.\n\n\"I have broken their hold over me,\" Fuji stated with obvious pride. \"I do not need the worms to feel good. Hassar has brought them here and I was able to sit and look at them. It made me feel strong to ask her to take them away from me.\"\n\nIn the distant past I'd seen Fuji react to the worms. If she no longer felt the pull for them, that was really saying something. It was a testament to her new strength she didn't need them to feel good.\n\nSeveral men approached and wanted Fuji to hunt for them. They wanted to work at a place they knew to be infested with racks. My friend could help them keep the creatures away and under control while they worked.\n\nWe bid each other goodbye as she walked casually off with the men. I watched her leave with some awe. She looked like a radiant goddess and carried herself the same way. Freedom had done amazing things for her.\n\nRose was changing, too. Once upon a time, she'd been a bright energetic girl with strong opinions and midwestern work ethic. Her husband had started to crush her spirit and then slavery had taken away what she had left. Free and encouraged, she found herself again.\n\nI watched with admiration as my friend took on the task of being a free woman. She was unstoppable when a job needed to be completed. When the men around us were tired and frustrated Rose became their cheerleader. Everyone appreciated having her around.\n\nTime came and went and I timed it by my menses. They seemed to follow the cycle of the main moon, which I found odd. It took three cycles before things started to change in the way the camp's men felt about the \"slavers\".\n\nDuring the day Rose and I talked nonstop to the men around us. We made every argument we could in favor of our families and it started to work. Actually the argument Rose chanced upon started to work. She had asked me innocently if all men on the planet were part of the Great Harmonious Spirit or just ones like the people in the camp.\n\nBy the time we tried it on our coworkers, Armant's family, we were sure it would be effective.\n\n\"Of course all men are part of The Great Harmonious Spirit,\" Armant answered her. \"They must only accept that part of themselves and bond with us. We are all part of The Great Spirit.\"\n\nRose laughed, a light sound that did not even hint at the power of what she was about to say.\n\n\"Basin's family and Damien's family are not part of your Spirit,\" she scoffed. \"They are outcasts and forbidden from blending into the camp. No, it seems to me you pick and choose those that are allowed to join your Spirit, everyone is not part of it.\n\nArmant's family was offended and bothered. I saw Rose's sly smile as I stitched diligently. I would never have thought to try that argument, but it seemed to be working.\n\nAs we walked to our afternoon chore, we were in the fields today, I told Rose what a good idea that had been.\n\n\"It seemed to me the only argument they might listen to,\" she said quietly gripping the hilt of her sword. \"Basin and his Brothers are learning and so is your family. They have been loyal to us, we must be loyal to them. We must fight for their rights.\"\n\nI agreed and gripped the handle of my own sword, she was right. Damien and his Brothers had been willing to fight for my rights, I owed them the same. Since we'd finally found an argument that worked, we would use it.\n\nRose and I went to the garage with the transports and caught a ride with a friendly family. We both knew how to drive the transports now, thanks to men generously teaching us, but we didn't like to go out alone. There was just two of us, which was not enough to man the transport's weaponry. We were safer going with a family.\n\nThe men we went with today were Abram's family. They all wore their hair in a long style, tied back. They were nice men and liked to tell jokes. They usually worked in the kitchens, but it was harvest time for many plants. They'd do whatever job the Administrators put them to, including field work.\n\nRose and I rode with them outside the protected area to a large field growing rupe. We could not eat it, as I already knew, but native Paterians digested it fine. It was harvested and put on the tables when it was in season. Rose and I knew what it looked like and avoided it, just like any man with human ancestry.",
        "We worked in the field pulling up the vines and the root, which was the edible part. We were most of the way through the field when a shout went up and the men around us all drew their weapons.\n\nRose and I drew our weapons too and looked where the men were. Scars were crawling en masse out of the forest toward an isolated group of men.\n\nAdrenaline shot through my system as I watched the drama unfold. I'd never seen scars behave like this, but the other men had. In this part of the world, the nasty creatures had the benefit of numbers.\n\nWhen a second set emerged to cut the men off from the rest of us, Rose and I screamed a warning, but it was too late. Three families were cut off from the rest of us and surrounded.\n\nThe war cry was loud and compelling. Those in our camp would not die without a fight. Rose and I threw ourselves into the fray, attacking the eyes of the disgusting creatures with everyone else. Transports overhead told me more men were arriving, but I didn't glance up to see.\n\nSomehow Rose and I were with the family that broke through the circle to get to the three trapped families. I lunged and jabbed like I had been taught, doing everything I could to help the effort.\n\nHannah landed heavily beside me and killed three of the creatures in quick succession. The scars scattered and ran at the sight of the woman.\n\n\"Get underground!\" she ordered. \"Slaving women have been sighted! Get on the transports and hide underground. They heard the commotion and are coming this way!\"\n\nI saw a man on the ground and rushed to him, he wasn't moving, but I knew him. It was Abram's brother, Ruse. He had a bloody bite on his lower leg. Abram lifted him and ran to a transport that had landed. I followed him and jumped on, not even noticing it was Damien's transport I'd boarded.\n\n\"Solar!\" Ra ordered as the transports lifted almost silently.\n\nWe rushed into the forest and suddenly dropped down through the floor. Transports followed us until fifteen transports were inside and then the 'ceiling' of our cave moved to conceal us beneath the stone.\n\nThe lights of the transports flickered on as they all settled to a stop on the floor. For a moment, no one moved.\n\n\"We are dying!\" I heard Abram gasp as he looked down at his Brother. \"He cannot breath! I cannot stand it!\"\n\nA scar's bite would paralyze so the creature could take its time dismantling the victim. The man's ability to breath would be forfeit to the toxin. Anyone bitten by a scar would suffocate as everything shut down.\n\n\"Help him then!\" I said fiercely stepping forward.\n\nThe wounded family took a defensive position around their Brother laying on the transport and their teeth dropped.\n\n\"He is wounded,\" Bane whispered in my ear pulling me back, \"they will attack any who come near him. Let the man and his family die in peace.\"\n\nEveryone around us seemed to have the same sentiment. Let them die in peace.\n\n\"NO!\" I shouted. \"You can breath for him! It can be done! I learned on Earth. This man doesn't have to die.\"\n\nIn health at my high school they had taught us CPR. I'd even taken the class the community college offered so I was certified to baby sit. Paterians were like humans, certainly it would work here also.\n\nI looked at Damien and pleaded with my eyes.\n\n\"Give me a chance to help him,\" I begged quietly. \"I know what to do! I just have to touch him.\"\n\nThere was an unspoken agreement that passed between Damien and Basin before they acted. I saw it and was shocked at what they did.\n\nDamien and his Brothers were fast. Faster than I remember them being, they had restrained Abram's family and pulled them away in a flash. Basin's family stood between my men and everyone else. The men from the camp roared in outrage. I knew I had to act quickly.\n\nI rushed to the fallen man and knelt at his head. My memories of CPR were distant, but I pulled them up. A hand on his still chest proved he had a heart beat. I tilted his chin to open his mouth and held his nose. I breathed a huge breath into his mouth and watched his chest barely move. I counted to five and did it again and then again.\n\nThe cave was silent watching me. The fallen man's Brothers were no longer struggling with my family and I looked to see if perhaps they were still dying, maybe this didn't work here.\n\nThey were staring at me, all of them. No one looked angry, just shocked. The men in the cave seemed to have paused, just before attacking Basin's family. Now they watched me looking utterly amazed.\n\n\"Teach us,\" Abram demanded hoarsely, \"show us what you are doing. We feel this is helping.\"\n\nDamien's family released them and they came to kneel beside their Brother.\n\nIn the silence of the cave I taught them the basics of 'rescue breathing'. Since they could feel their Brother's needs they could tell after a while he only needed one of their breaths at the count of seven, not five.\n\nI stood back and looked up into Damien's amazed face. He looked stunned as he held his hand out to me. I took it without thinking and continued to gaze up at him.\n\n\"You knew what to do,\" he said quietly. \"You knew how to save that man...\"\n\n\"Because Ciara can take care of herself,\" Christof finished in a near whisper. \"She is powerful in her own right.\"\n\n\"We are proud to call you Sister,\" Bane said leaning over to kiss my cheek.\n\nThe whole family followed him. The gentle brushes of lips to skin held so much love, so much respect, that I could feel it.\n\nWe stood in the dimly lit cave and I felt something like a breeze. It wasn't from outside, it was from inside. When I wanted to, I could reach into the undulating swell and feel what my family did.\n\nIf I wanted to be I could tap into my family and I looked at them amazed. It was a bond, I'd experienced this enough to tell that much, but it wasn't like before. This wasn't forced on me, it was something I wanted. This connection was gentle and subtle, not overbearing and controlling. It was a choice we had all made.\n\n\"It is a connection of equals,\" Christof murmured brushing a strand of hair off my face. \"Like we have always shared, Brothers.\"\n\nDipping into the feelings I knew what they knew. The other men, when they talked to them, had smugly bragged about the bonds they had with females. They were mate bonds, different from a bond with Brothers, but still powerful. There could be no fear and no disrespect in a mate bond. It had to be as pure as what a man shared with his family.\n\nDamien and his Brothers had not known the word 'mate' before they came here. It was a new phrase meaning connection to a female, but they never thought they would share such a sacred thing. No one knew a human could form this type of bond.\n\nYou could call out to your mates from long distances through the bond. Experiences could be shared, but things could also be kept private. This was different from anything we had experienced before.\n\n\"We are honored, Sister,\" Evan said quietly as I stared up at him. Through his mind I felt our son, the strong vibrant pulse bonding us as family.\n\nI smiled with a new found peace. We were finally and truly family."
    ],
    "authorname": "DoctorWolf",
    "tags": [
        "masturbation",
        "novella"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/a-slave-to-the-servants-ch-32"
}