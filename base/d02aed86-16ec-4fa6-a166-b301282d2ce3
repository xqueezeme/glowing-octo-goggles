{
    "title": "Louise Ch. 13",
    "pages": [
        "\"When are we going to tell them?\" Nathan asked.\n\n\"I'm going to tell Kevyn sometime after the wedding.\" Patrick replied. \"It's up to you when you decide to tell Louise.\n\n\"I think I'll wait until Jackson has all of the information gathered.\" Nathan replied. \"In fact, I think I'll ask him to put it into a book, and I'll give it to Louise for either her birthday or Christmas.\"\n\n\"You know, I like that idea.\" Patrick said. \"Would you mind if I did the same thing?\"\n\n\"Not at all, but then I would suggest that we give them the books at Christmas.\" Nathan replied.\n\n\"Agreed.\" Patrick replied. \"How often do you think this happens?\" Patrick asked.\n\n\"I would think rarely.\" Nathan replied, \"but do you understand the implications of this?\" he asked. \"It means that without trying, two powerful families have been paired together. I wonder what else Jackson will turn up\"\n\n\"I have no idea, but think about it,\" Patrick said. \"The families of both sides have been strengthened. Who knows what other gifts the Yancy's will bring, and what we will have to offer them. I know that this is a change of subject, but are you taking Louise somewhere after the reception?\"\n\n\"She wants to go back to the beach house for the day, and then I'm taking her to France to look at the cooking school. Why do you ask?\"\n\n\"Just curious, I'm taking Kevyn away as well, but I don't feel comfortable with leaving the rest of the family here to fend for themselves.\" Patrick said. \"I know that Hans and the others will take good care of them, but I think that Kevyn and Louise will worry about them.\"\n\nNathan hadn't thought about it, and admitted that Patrick was right.\n\n\"Then we'll leave after the family does.\" he said. \"What do you have in mind?\"\n\n\"I was thinking about a movie night or something at our house. It shouldn't be hard to keep everyone in one place. The basement has everything anyone could possibly need.\" Patrick replied.\n\n\"I still owe you, Victor and Leon dinner.\" Nathan said. \"When do you plan to talk to Gene?\"\n\n\"Sometime before he leaves.\" Patrick replied. \"You?\"\n\n\"I would say that we could do it together, but he's already scared of us.\" Nathan said. \"I'm actually considering not approaching him at all. If he wants my business badly enough, he has to approach me like a man.\"\n\n\"And if he does?\" Patrick asked.\n\n\"We'll see.\" Nathan said.\n\nPatrick left a few minutes later. Nathan knew that it was early but he wanted, and needed to hear Louise's voice. She answered on the first ring.\n\n\"Good morning.\" she said softly.\n\n\"Good morning, did you rest?\" He asked.\n\n\"About as well as you did.\" Louise replied.\n\n\"Is the bathroom free?\" Nathan asked. \"You need to feed.\"\n\n\"It is at the moment.\" she replied grateful that he had thought about the feeding because she hadn't.\n\nA few minutes later, she was in the bathroom. She drank both glasses of blood that Nathan bought with him, and was leaning into him with her arms around his waist.\n\n\"No pain or nausea?\" he asked.\n\n\"I'm fine and no fever either.\" Louise replied before he had a chance to ask.\n\n\"How did the rest of the night go?\" Nathan asked changing the subject.\n\n\"I'm glad for telepathy and telephones.\" Louise replied. \"Barb settled down and actually apologized.\"\n\n\"A sincere one?\" Nathan asked.\n\n\"Half-baked as my mom used to say... I wish that she and dad were here.\" Louise said.\n\n\"I know you do.\" Nathan said and kissed her head. \"So do I.\" he added meaning it. He would have loved to meet the people who gave birth to, and raised children who were so different from each other.\n\nThey stayed in the bathroom until they heard an impatient tap on the door.\n\n\"Hurry up!\" Barb called in.\n\n\"I'll see you at noon with your feeding.\" Nathan said as he kissed her. \"I love you.\" \n\nLouise opened the bathroom door to let Barb in and looked at her.\n\n\"You don't look too good, are you alright?\"\n\n\"I'm fine just let me pass.\" Barb snapped.\n\nBarb pushed past Louise and brushed against her arm. Louise felt a flash of knowledge that was gone before it took root. She then realized that she hadn't asked Nathan how the evening with her brothers went.\n\n\"I forgot to ask you when I talked to you how the evening with Leon and Gene went.\" she said when Nathan answered the phone.\n\n\"It was fine... Gene left after a couple of hours, and Leon fell asleep which was why I was able to come to you so easily.\" Nathan said. \"But while I have you on the phone, Patrick and I talked this morning. We thought that we could leave on our trips after your family left. What do you think?\" \n\n\"I kind of wondered about that.\" Louise said. \"I'm fine with waiting, and as you know we don't even have to go anywhere.\"\n\n\"I know, and we've discussed this.\" Nathan said firmly. \"We're going on a honeymoon. It's just postponed until after your family leaves.\"\n\nHe told her about the plans he and Patrick made and asked for her input.\n\n\"That sounds like fun.\" she agreed. \"The only thing that I would like to add is that I want the sisters to cook together.\"\n\n\"Hot wings?\" Nathan asked.\n\n\"If you want.\" Louise replied laughing.\n\n*******\n\nBarb listened to Lou talking to Nathan, and felt another surge of anger and jealousy. She wasn't sure of how she was going to make it through the day and evening without saying something smart assed. Then she decided that she wouldn't try to control herself. Whatever happened happened. She no longer cared. She pushed the memory of the relatively good time she had the night before away, and allowed her anger and jealousy to take over.\n\n*******\n\nLouise felt the change in Barb as soon as she came out of the bathroom. She lowered her shields, and quickly put them back up. She decided not to say anything. It wouldn't have done any good, and besides, Barb had been warned. \n\nShe looked around for Kevyn and saw her sitting out on the patio. She wanted to talk to her before Barb created a problem. She took a step toward the patio, and stopped realizing that she couldn't go outdoors.\n\n\"Damn!\" she muttered under her breath.\n\n\"Bad word.\" Celeste said from behind her.\n\nLouise jumped. She hadn't heard Celeste come into the room.\n\n\"I'm sorry baby.\" Louise said. \"You're right, but could you do something for me?\"\n\n\"You want me to go get Auntie Kev.\"\n\n\"H... how did you know that?\" Louise asked surprised.\n\n\"I don't know.\" Celeste replied and looked away.\n\n\"Celeste, look at me.\" Louise said as she knelt and took the girl's small face into her hands. \"I'm not mad.\" Louise assured her. \"I'm just surprised. I already know how special you are, and it's nothing to be ashamed or afraid of. But if you like, we can make this our secret.\"\n\n\"You won't tell?\" Celeste asked.\n\n\"Not unless you tell me it's ok or I have to.\" Louise replied, and then got an idea.\n\n\"Let's play a game. It's a new way to play hide and seek.\"\n\nCeleste cocked her head to the side as she always did when she was confused, or she had a question.\n\n\"We're going to play with our minds.\" Louise said as she took Celeste by the hand and led her to a corner. \"I bet it scares you when you feel what other people are feeling doesn't it?\" Louise asked.\n\n\"Yes.\" Celeste replied clearly relieved that someone understood.\n\n\"I'm going to teach you a trick that Uncle Nathan taught me.\" Louise said. \"When you don't want to know what people are feeling, you hide. Pretend that you have a sheet, and pull it over you. That way no one can get in. Try it.\"\n\nAfter several attempts, Celeste had the hang of it.\n\n\"Now, if you want to know what people are feeling, you can lift the sheet. If you only want to know a little, then lift the sheet just a little. You choose how much you want to hide and seek.\"\n\nThey practiced for a few more minutes. Louise could tell that Celeste was already feeling better by the shy smile that the girl gave her. \n\n\"Just remember what we practiced and you'll be fine.\" Louise assured her with a hug. \"Can you go get Aunt Kev for me?\"\n\nAs Celeste ran to the patio, Louise puzzled over the fact that Celeste knew that she needed to talk to Kevyn. A few minutes later, Kevyn was in the corner talking to Louise. The first thing Louise told Kevyn about was Celeste.\n\n\"She knew that I wanted her to go get you.\"\n\n\"Maybe it was a fluke.\" Kevyn said.\n\n\"I don't think so, but at any rate, I taught her how to shield.\"\n\n\"Alright, what else?\" Kevyn asked.\n\n\"Barb is going to cause trouble tonight.\" Louise said. \"I don't know what she's going to say or do, but I wanted to warn you ahead of time.\"\n\n\"I'll talk to her...\"\n\n\"It won't help, and could make it worse.\" Louise said interrupting her. \"We've said everything that needs to be said, and it's out of our hands. The only thing that we can do is not feed into it by letting her rile us.\"\n\n\"I still think that I should say something.\" Kevyn said.\n\n\"What would you say that hasn't already been said?\" Louise asked. \"She doesn't care; at least she thinks she doesn't. I think that we should warn Patrick and Nathan, and let the chips fall where they may.\"\n\nReluctantly, Kevyn agreed. They could hear Juliette talking to the kids, but Barb was nowhere to be found. They found out from Wanda that Barb had left without saying anything.\n\n\"I think she was mad about something.\" Wanda said.\n\nLouise and Kevyn looked at each other, sighed and smiled. It was going to be an interesting evening.\n\n\"How about going to the restaurant for breakfast?\" Kevyn asked pushing Barb out of her mind.\n\n\"I don't think so.\" Juliette said. \"We're not taking the chance that we'll run into the guys. We're ordering in.\"\n\nBoth Louise and Kevyn made a show of wanting to go to the restaurant, and then took turns in the shower.\n\n\"You go first.\" Louise told Kevyn.\n\n******\n\nAs soon as Kevyn was in the door, arms surrounded her.\n\n\"I've missed you.\" Patrick said as he stripped her and lifted her into the shower.\n\nHe turned on the radio by the shower, and then the shower before sliding into her without warning. Kevyn wrapped her arms around his neck and went along for the ride. When she felt her orgasm begin, she buried her face in his neck, and moaned as Patrick pounded into her only stopping when he was empty.\n\nAfterwards, he washed her hair and back as they talked.\n\n\"I hate to say it.\" Patrick said when she finished telling him about Barb. \"But Louise may be right. We could compel her, but that would only be a temporary fix.\"\n\n\"That is so tempting.\" Kevyn said. \"But no, let her hang herself. Once she sees that no one is paying attention to her, maybe she'll stop.\"\n\n\"I have to get going.\" Patrick said. \"Nathan is waiting to see Louise.\"\n\nAfter a quick kiss goodbye, Patrick was gone. Kevyn finished drying off, put her nightshirt back on and left the bathroom.\n\n\"Your turn.\" She said to Louise as she passed her on the way to Juliette's room.\n\nLouise hurried into the bathroom and straight into Nathan's arms. A few minutes later, they were in the shower with the music playing to cover the sounds of lovemaking. When they were through, Louise told him about Celeste and then Barb.\n\n\"You taught her how to shield?\" he asked his pride in her obvious\n\n\"I did, and she's a quick study.\" Louise replied. \"I think that she feels better already.\"\n\n\"I'm sure that she does.\" Nathan replied as he wondered where the Yancy children would fit into the Sinclaire/Yancy line.\n\nHowever, he disagreed with the approach to the issue of Barb.\n\n\"She's acting like a spoiled child, and I won't tolerate any more of her shit. This is our wedding, and if she can't behave then she needs to keep her ass away. In fact, I think I'll pay her a visit.\"\n\n\"Nathan...\"\n\n\"No, I've had it. Her nonsense ends now.\" Nathan said in a tone that Louise had never heard him use.\n\nHe kissed her goodbye, assured her that he wouldn't hurt Barb; and was gone.\n\n******\n\nBarb slammed the door of her suite closed not caring who heard her. \n\n\"I love you.\" she mimicked in an imitation of Louise and then Kevyn's voice as she threw her overnight bag across the room. She was still cursing and mimicking her sisters when she heard the demanding knock on the door. \n\n\"Go away!\" she yelled thinking that it was house keeping.\n\nWhen the knocking persisted, she stomped to the door, flung it open. She opened her mouth to berate whomever it as that wouldn't go away, and closed it when she saw that it was Nathan.\n\n\"I want to talk with you, and I don't care where so you can either let me in or I'll do it in the hallway.\" Nathan said staring down at her with icy blue eyes.\n\nBarb was tempted to tell him to go to hell, but thought better of it. Nathan scared her in a way that Patrick didn't.\n\n\"Say what you have to say and get out.\" Barb snapped as she stepped back to let him into the suite.\n\nNathan gave her a smile that was as cold as the look in his eyes.\n\n\"I don't know what you've got cooked up for tonight nor do I care.\" he said. \"What I do care about is how it will affect Louise and the wedding. So I'm here to give you fair warning, if you do or say anything to disrupt the ceremony or the reception, you will regret it.\"\n\n\"What are you going to do? Lock me away?\" Barb asked defiantly briefly forgetting her fear.\n\n\"You would be surprised at what I could do.\" Nathan said his eyes flashing.\n\nBarb gasped, and stepped back as she felt warm liquid run down her legs.\n\n\"I don't like you.\" he continued. \"I tolerate your presence only because you are Louise's sister. If I had my way, you wouldn't be attending the ceremony or the reception. Now, I want your word that you will be on your best behavior.\"\n\n\"You can't....\"\n\n\"Silence.\" Nathan said firmly. \"Look at me.\"\n\nWhen Barb was looking at him, he issued a command.\n\n\"Every time you even think of being disruptive by word or by deed, you will excuse yourself to the restroom where you will stay until you have regained control of yourself. If there is no restroom available, you will keep your mouth shut. Understood?\"\n\n\"I.... yes.\" Barb replied.\n\n\"Good, and if Louise asks if I came to see you, tell her the truth.\" \n\nNathan left a few seconds later answering his phone as he walked away.\n\n\"Hello sweetheart... she's fine... I promise, and she won't be a problem tonight...I'll see you at noon for your feeding. I love you too.\"\n\nBarb came out of her daze to find that she was wet, and that she was standing on a soaked carpet. It took her a moment to remember that Nathan had just paid her a visit, and warned her to behave.\n\n\"Screw you!\" she hissed as she went to the bathroom to shower. As she showered, she wondered why she had wet herself instead of going to the bathroom.\n\n*********\n\nGene was in a quandary. As of yet, neither of his future brother in laws had mentioned his proposals even when they had been together in Leon's suite. The fact that they hadn't mentioned it reinforced the growing realization that he had made a grave error in not approaching them directly.\n\nThe only thing that he was completely sure of was that he couldn't approach them today and possibly for the rest of his stay. If they chose to invest with him, it wouldn't be for anywhere near the amount in the proposals. There was a bright side he realized. Even if they invested a small portion of what he suggested, he would have the distinction of bringing the Sinclaire name to the firm. Add that to the fact that they were now related, if only by marriage.\n\nGene smiled to himself, as he looked at the clothes that he never could have afforded since Dana left him. He wasn't leaving California empty handed. If he had to, he would approach Kevyn and Louise, and have them talk to their husbands. His hope was that they would convince Nathan and Patrick to make major investments. If they did that, then he would be in good shape.\n\n********\n\nLeon was up early. He changed into his gym clothes and headed for the hotel gym. He hoped to run into Nadine again, and was disappointed when he didn't see her. On a whim, he stopped by the front desk to see if Hans was there.\n\n\"Good morning!\" Hans greeted when he saw Leon.\n\n\"Good morning.\" Leon replied.\n\n\"May I help you with something?\" Hans asked.\n\n\"Maybe.\" Leon replied. \"I was wondering about Nadine... is she seeing anyone?\"\n\nHans looked at Leon for several long seconds before answering. Nadine was like a daughter to him, and he was as protective of her as any father would be of his child.\n\n\"Why do you ask?\" Hans asked his tone cool and guarded.\n\nLeon was surprised at Hans' change in attitude.\n\n\"Whoa!\" Leon said holding his hands up in surrender. \"I didn't know that you and her... I thought you were into my sister.\"\n\n\"What?\" Hans asked, and then saw where the misunderstanding lie. \"No, you misunderstand. Nadine and I are not together. It's just that she is like a daughter to me, and I take her happiness very seriously. And yes I am into your sister as you put it.\"\n\nThe two men looked at each other and laughed.\n\n\"So is Nadine attached?\" Leon asked again.\n\n\"No.\" Hans replied. \"She isn't.\"\n\n\"Is she working tonight?\" Leon asked.\n\n\"No she isn't. \" Hans replied. \"She will be attending the reception this evening as will I.\"\n\n\"Great, then I'll see you there.\" Leon said as he walked away. He liked California better by the minute and was beginning to think about staying.\n\n*******\n\nHans watched Leon walk away, and was pleased. He knew something that Leon didn't, and wondered if Nadine knew. As he finished his shift, he thought about Nadine. He had found her hiding half-starved the century before wandering in the woods behind his home. It seemed so long ago, but it really wasn't. He had taken her in, taught her how to survive as a vampire, and came to love her as a daughter. \n\nIn all of that time, she never told him how she came to be in the woods, or anything about the vampires who had turned; and then left her for dead. And he hadn't asked. What he did know was that she had been mistreated. It had taken him weeks to make her understand that he wasn't going to hurt her. \n\nShe had come a long way since then. His family had accepted her as one of their own, and all of them participated in her care and education. Currently, she had three degrees, all PhDs in psychology, business and literature and was working on a fourth in international studies, and was thinking about a fifth.\n\nThe brilliance of her mind never ceased to amaze him, and he was happy to continue funding her education for as long as she wished to attend school. The walls of his living room at home and office were covered with the evidence of her accomplishments as well as pictures of them together at every graduation and celebration.\n\nHe smiled as he thought about the new pictures and certificates that he hoped soon would be joining those of Nadine's. Then he stopped. His home was fine for two or three people but not five or.... His smile widened at the prospect of having children with Juliette.\n\nIt was time to move.\n\n******\n\nJuliette kept looking at Celeste. There was something different about her. She seemed more at ease, happier. The change had started on the plane, and now it was obvious that her little girl was doing much better. \n\n\"Celeste, come here.\" Juliette called determined to see if she could find out what was happening. \"How are you doing?\" she asked when Celeste reached her.\n\n\"Fine.\" Celeste said quietly.\n\n\"You like it here don't you?\" Juliette asked.\n\n\"Yes.\"\n\n\"How come?\" Juliette asked as he pulled the little girl into her lap.\n\n\"Aunt Lou taught me how to play hide and seek.\" Celeste replied her voice soft but serious.\n\n\"She did?\" Juliette asked not understanding what a game had to do with Celeste's more relaxed demeanor.\n\n\"Yes.\"\n\n\"Can you teach me?\" \n\n\"It's a secret.\" Celeste whispered as she climbed out of Juliette's lap and walked away.\n\nJuliette stared after Celeste, and then went in search of Louise. She found Louise and Kevyn in the bedroom talking about whether to wear their hair up or down.",
        "\"My vote is down.\" she said from the doorway. \n\n\"Hah! Two to one!\" Kevyn exclaimed triumphantly.\n\n\"Ok fine!\" Louise grumbled.\n\nJuliette sat on the bed, hesitated, and then spoke to Louise.\n\n\"What did you tell Celeste not to tell me?\"\n\n\"Nothing why?\" Louise asked still debating over the hair issue.\n\n\"She told me that you taught her how to play hide and seek, but when I asked her to teach me; she said that it was a secret.\"\n\n\"All I did was teach her how to block out the emotions of those around her.\" Louise said. \"She's so sensitive that I thought that I could help.\"\n\n\"That was it?\" Juliette asked.\n\n\"That's it.\" Louise replied. \"I didn't tell her not to tell you, although I think I know why she said that. I wanted her to do something for me, and she knew what it was before I asked. It scared her so I told her that it was our secret unless she told me that it was alright to tell or that I had to tell you.\"\n\n\"I'm not mad, I was just curious.\" Juliette said. \"And whatever you did, it helped so thank you.\"\n\n\"You're welcome, are you sure about the hair thing?\" Louise asked changing the subject.\n\n********\n\nAt five pm sharp, Louise and Kevyn were in the hotel lobby. Louise had already donned the dark sunglasses and the lightweight jacket whose sleeves were long enough that she could put her hands inside. \n\n\"Ready?\" Kevyn asked.\n\n\"Ready.\" Louise confirmed.\n\n\"Nathan is in the car closest to the door.\" Kevyn said as they walked to the entrance. \"See you soon.\"\n\nAs soon as the door opened, Louise took off, and jumped into the back seat of the car whose door was already open. Nathan didn't give her a chance to sit on the seat before he had her in his lap.\n\n\"Noon seems like a lifetime ago.\" he said after he kissed her. \n\nHe eased her onto the seat next to him, opened the small fridge, and pulled out a large glass carafe filled with blood. \n\n\"It's going to be a long night so I want to be sure that you have enough although there will be blood available at the reception.\"\n\n\"What about you?\" Louise asked. \n\n\"I fed before we left.\" He assured her as he handed her a large glass filled with blood.\n\n\"I'm still full from lunch.\" Louise said as she accepted the glass. \"And I'm too nervous to even think about putting anything in my stomach\" she added.\n\n\"Alright, but promise that you'll say something as soon as you begin to feel uncomfortable.\" Nathan said as he took the glass from her and poured the contents back into the carafe.\n\n\"I promise.\" Louise said and laid her head on his shoulder.\n\n\"Sweetheart, are you alright?\" Nathan asked as he listened and felt for any signs of pregnancy.\n\n\"I'm fine.\" she assured him and closed her eyes.\n\n*******\n\nThe house was buzzing with activity. It was fully furnished, but not with the furniture that was on order. Nathan had hired an interior decorator to take care of furnishing the house for the wedding. He and Louise were both pleased with her work. The house staff was busy setting up the chairs on the beach, and making sure that refreshments were ready for those who would be arriving early. \n\nNathan gave Louise a kiss, and sent her to their room as soon as he heard the other cars approaching.\n\n\"I'll see you in a hour.\" he said kissing her again. \n\nKevyn joined her a few minutes later.\n\n\"This place is gorgeous! Do we have time for a quick tour?\"\n\n\"I think so, but why don't we wait for the others?\" Louise replied.\n\nThe rest of the group arrived a few minutes later. Louise gave a quick tour pointing out where the bathrooms were.\n\n\"There are snacks and things to drink in the refrigerator so help yourselves.\" Louise said. \"Barb and Juliette, you and the girls can either change in the room with us or use one of the spare bedrooms.\"\n\n\"We'll come with you.\" Juliette said as she looked around for Barb.\n\n\"She went to the bathroom.\" Wanda said.\n\n********\n\nAs soon as Barb saw the house, she started to make a disparaging remark. She was shocked when she couldn't speak. She tried several times to say something, but no sound came out, and no one seemed to notice. Once inside of the house, she tried to speak again, but had the inexplicable need to use the bathroom.\n\nShe looked at herself in the mirror and tried to figure out what was happening. \n\n\"Aunt Barb?\" Wanda called in. \"Mom says that we need to hurry up.\"\n\n\"I'm coming.\" Barb called back as she continued to look at her reflection in the mirror. Another pimple had appeared. A small one that she could conceal with make up.\n\n\"Pregnant.\" a soft voice whispered in the back of her mind.\n\n\"No.\" Barb murmured refusing to believe it.\n\nShe left the bathroom, and followed the sound of female voices. \n\n\"Where is she?\" Juliette asked as she helped Celeste with her dress that was the same shade of pink as her fingernails.\n\n\"I'm right here!\" Barb snapped. \"You would think that this was a royal coronation....\"\n\nShe didn't finish her sentence. She turned, looked for the bathroom, and went in once she found it.\n\nKevyn looked at Louise, who mouthed \"later.\"\n\nBarb came out of the bathroom, and changed clothes without speaking to anyone. The fact that both brides, her sister and nieces were dressed comfortably for a beach wedding, and not a black tie affair didn't faze her in the least. No one said anything until she put her shoes on.\n\n\"Ummm Barb, you might want to leave the shoes.\" Juliette said as she slipped on her flat-soled sandals.\n\nBarb started to lash out, but bit her tongue.\n\n\"She's right.\" Kevyn said, \"You're going to have a hard time walking in the sand in those heels.\"\n\n\"I'll be fine.\" she replied not looking at Kevyn.\n\n\"Ten minutes!\" Leon called into the room.\n\nJuliette and the girls hugged Louise and Kevyn before leaving the room. Barb only glared and followed them out.\n\n\"What's going on?\" Kevyn asked Louise when they were alone.\n\n\"Nathan compelled her to either go to the bathroom or to keep her mouth shut when she thought about doing or saying anything to ruin tonight.\" Louise replied. \n\nKevyn grinned. \"I really like the way that he thinks.\"\n\n\"Kev do I look alright?\" Louise asked her mind already on the ceremony.\n\n\"You look beautiful.\" Kevyn replied. \"Barb was right, peach is your color.\" \n\nLouise took a deep breath, and looked down at herself. The peasant style peach top and skirt did look nice against the brown of her skin. She looked at her reflection in the mirror and had to admit that Juliette was right about leaving her hair down. She looked at the sandals that were supposed to go with her dress, and decided not to wear them. Somehow, it didn't seem right. \n\nShe looked over at Kevyn whose outfit was the same as hers, but only a deeper shade of peach. Kevyn felt her watching and smiled.\n\n\"I agree about the sandals.\"\n\nLouise could only nod. Her stomach was roiling as it had in the first grade when she had to recite a poem in front of the class. Her gorge rose when she remembered that she threw up in front of the whole class when she finished reciting the poem.\n\n\"Kev...\" she started to say when she heard Nathan's voice in her head.\n\n\"I'm waiting for you.\" he said. \"Just focus on that and my voice and you'll be fine.\"\n\n\"I don't know if I can do this.\" she replied telepathically.\n\n\"When you walk out, just look at me and no one else. It's just a short walk.\" Nathan replied.\n\n\"I'll ... I'll be alright.\" Louise replied.\n\n\"I'm waiting.\" Nathan said and went silent.\n\nKevyn took Louise's cold hand in hers, walked to the bedroom door and opened it. The sound of the ocean filled the room calming Louise. She gave Kevyn's hand a squeeze signaling that she was ready. Louise picked up the bouquets of wild flowers that lay on the dresser by the door, and handed one to Kevyn. Together they walked to the door that would lead them to their mates. \n\nLeon met them at the door that led to the beach, positioned himself between them, and offered each of them an arm. He had talked to Gene about walking them down the aisle, but Gene had declined saying that he hadn't been asked.\n\n\"You're the oldest.\" Leon said. \"You're supposed to take dad's place.\"\n\nWhen Gene continued to refuse, Leon took the duty upon himself.\n\n\"You both look beautiful.\" he said, and then kissed each of his sisters' on the cheek.\n\nHe began to walk them to where Patrick and Nathan stood waiting with the minister, stopping when he reached them.\n\n\"Take good care of them.\" he admonished as he handed Kevyn over to Patrick, and Louise over to Nathan.\n\nHe stood until he had a response from each man.\n\n\"You have my word.\" Patrick and then Nathan said.\n\nSatisfied, he sat down next to Juliette, and took Celeste into his lap.\n\n*****\n\nBarb watched as Leon walked Kevyn and Louise to the front of the group. She noticed Patrick's mother and her husband sitting in the front and to the left of her, and Nathan's parents in the front and to the right of her. What shocked her was that Nathan's mother was pregnant. It didn't make sense. She was too old wasn't she?\n\nShe looked at Nathan who had to be in his late thirties at best, and then at his parents. Then, the thought was gone. An angry thought replaced that one. She was going to mutter it under her breath, but the words stuck in her throat. She shifted in her seat uncomfortable in her heels and the dress that she had chosen to wear. Even though there was a breeze, the air was still warm, and the material of the dress seemed to amplify the warmth.\n\nWhen everyone was preoccupied with the wedding, she kicked off her shoes, and then pretended to be paying attention. She was actually wishing that she was anywhere but where she was.\n\n*******\n\nNathan whispered a word of thanks to Leon for once again stepping into the role of eldest male. When he saw Louise, his breath caught. The peach colored outfit was a perfect complement to her skin. The way her hair blew in her face reminded him of the first time he had brought her to the beach. His hands itched to tuck it behind her ear as he did that night.\n\n\"You are so beautiful.\" he thought to her as she walked toward him holding onto her brother's arm. He had forgotten about Kevyn and Patrick until Leon spoke to them.\n\nHe took Louise's hands in his, and pulled her into his arms not caring whether it was a part of the ceremony or not. After holding her for a moment, he gently pushed her back, tucked her hair behind her ear; and kissed her.\n\n\"Are we ready?\" the minister asked.\n\n\"Ready.\" Nathan said after breaking the kiss.\n\nAs the minister read his prepared wedding vows, Nathan was saying his own to Louise telepathically.\n\n\"I Nathan Sinclaire take you Louise Yancy as my wife, my mate, my friend and lover for eternity. I promise to love and protect you and our children even if it should cost me my life. Your family is now my family, and they are under my protection from this moment forth.\"\n\nWhen the minister was finished speaking, Nathan removed the plain gold band that he was wearing on his pinky finger, and slipped it onto Louise's left hand, ring finger. When it was in place, he lifted her hand to his lips and kissed it.\n\nLouise's physical and telepathic voice was tight as she listened to Nathan's vows. She had so much that she wanted to say, but didn't know where to begin. The only thing that she could get out was a choked \"I love you.\" as she slipped the gold wedding band onto his left hand, ring finger.\n\nNathan didn't wait for the minister to finish with Patrick and Kevyn before he kissed Louise. He didn't release her from his arms until the minister finished with Kevyn and Patrick, and got ready to announce them husbands and wives.\n\n\"I am pleased to introduce to the world Mr. and Mrs. Patrick Sinclaire and Mr. and Mr. and Mrs. Nathan Sinclaire.\"\n\nEveryone with the exception of Gene and Barb clapped and shouted as the two couples made their way back to the house. Even Joseph, who had been so sullen at the twin's wedding clapped and whistled as they walked by hand in hand. \n\nGene's face remained impassive until they reached him; and then he forced a smile. Barb sat scowling, but unable to verbalize any of the thoughts that went through her mind. A wave of nausea hit her making her breath catch. She waited until the nausea passed, got unsteadily to her feet, and made her way back the car that would take them to the reception. She would have forgotten her shoes if Vincent hadn't noticed them beneath her chair.\n\nOnce in the car, she laid her head back, and waited for the others to get in. She closed her eyes when she heard Juliette get into the car with the kids followed by Leon and then Gene.\n\n\"Mom and dad would have been so proud!\" Juliette said as she strapped Celeste in. \"It was a beautiful wedding!\"\n\n\"It sure was.\" Leon agreed. \"Poor Lou though, I thought that she was going to toss her cookies.\"\n\n\"But she didn't.\" Juliette replied. \"I'm glad that you walked with them, I think that helped her.\"\n\n\"I wish that...\" Barb started to say but could get no further. It was beginning to dawn on her that whenever she thought bad thoughts, or was going to say something bad, she couldn't talk. To prove out her theory, she began to say something negative about Louise. Then she said something neutral.\n\n\"It was a nice night for a wedding.\" And she had no problem speaking.\n\n\"What in the hell is going on?\" she muttered.\n\n*******\n\nNathan took Louise to their bedroom, while Patrick took Kevyn to one of the spare rooms to spend a few minutes alone with her before going to the reception.\n\n\"You are a beautiful bride.\" Nathan told Louise when they were alone.\n\n\"I'm sorry that I couldn't say anything.\" Louise said. \"I knew what I wanted to say but ....\"\n\n\"No worries.\" Nathan assured her. \"You said the most important thing, and that's what matters.\"\n\nHe hugged her and kissed her head; and then frowned.\n\n\"Sweetheart, you're hot again.\" he commented.\n\n\"I am?\" Louise asked. \"I feel fine, but I am a little hungry.\"\n\nNathan was confused. The effects of the turning should have been over long before now, and Louise said that she felt fine. He made a mental note to call Gretchen Matthews to see if she could look at Louise. It was a meeting that was bound to happen any way, as she would be the one to deliver their babies.\n\n\"Alright then, let's get going.\" Nathan said. \"You can drink the blood that you didn't drink earlier.\"\n\nA few minutes later, they were on their way to the reception. Kevyn and Patrick sat in the seat across from them wishing that they hadn't decided to ride back in the same car. Louise blocked them out, and concentrated on not spilling blood on her outfit.\n\nBy the time they arrived at the reception, her temperature was gone, although she still maintained that she never felt sick. As soon as they were out of the car, they heard someone call out, \"They're here!\"\n\nThe music stopped as everyone waited for them to walk through the gate and into the yard. When the cheers died down, the music began again; and the party commenced. \n\nGene sat in a corner watching the party, and made a decision. He was going to approach the sister who was the most approachable- Louise but he had to wait.\n\n********\n\nHans was waiting by the front gate when the car containing Juliette and the children arrived. He rushed to the car, and opened the door before the driver was out of the car. He smiled, and then nodded at Leon, barely glanced at Gene, offered Barb his hand because it was the polite thing to do; and held out his arms for Celeste.\n\n\"She won't co....\"\n\nJuliette's mouth dropped open when Celeste reached for Hans and allowed him to hold her. Next, he held out a free hand to Wanda who giggled, and then to Juliette who blushed when she took his hand.\n\n\"I've reserved a table for nine in case others from your family decide to join us.\" Hans said still holding on to Juliette's hand. \"Are we ready?\" he asked.\n\nJuliette was tongue-tied. Her mouth wouldn't work no matter how hard she tried to form the word \"yes.\" so she nodded her head.\n\nHans led his family over to the table that he had reserved. Leon was already at the table talking to Nadine.\n\n\"I hope that you don't mind.\" Leon said. \"I saw Nadine sitting alone and decided to join her.\"\n\n\"I don't mind at all.\" Hans replied. \"I was hoping that you would join us.\"\n\nHe led Juliette to a chair, and sat between her and Nadine still holding Celeste in his arms. Victor held out the chair next to Juliette for Wanda, and imitated the slight bow he had seen Hans do several times. He beamed when Hans and Leon both smiled at him.\n\n\"Shall we go get refreshments for the ladies?\" Hans asked.\n\n\"They're here!\" Someone shouted before anyone could reply.\n\nHans stood up still holding Celeste, pulled out Juliette's chair, and offered her his free hand. When she took it, he felt a current pass between them that he was sure that she felt as well. His suspicions were confirmed when Juliette looked up at him and blushed.\n\n\"Come on!\" Wanda exclaimed. \"I want to see them come in!\"\n\nJuliette was going to pull her hand out of Hans' but he wouldn't let it go. Another current passed between them and Juliette's grip on Hans' hand tightened. \n\n\"Come on!\" Wanda said pulling on Juliette's free hand.\n\nThey made it to the gate just as Kevyn and Patrick were close to the gate followed by Louise and Nathan. No one noticed that Barb wasn't with them, but was sitting at a table glaring at them. Thoughts that she couldn't verbalize ran through her head as she watched the two couples pass by.\n\nThe nausea was back even worse than it had been before, but she was sure that she wasn't going to throw up. She dug through her purse for the package of mints that were more helpful for the nausea than the tums were, and chewed three of them. As juvenile as it was, she wished that she could throw up all over everything. \n\nThe thought barely had time to register before she was making a run for the nearest bathroom. She slammed the door closed, leaned against it, and waited for the nausea and dizziness to pass. Once it did, she went to the sink, wet a washcloth and was about to apply it to her neck when she stopped and stared at her reflection in the mirror.\n\nAnother pimple had appeared next to the previous one. She reached into her purse, took out the sample-sized container of concealer, and set about covering the pimple. Just as she finished, another wave of nausea hit her, and this time, she threw up.\n\n\"Oh my god.\" she murmured as she finally verbalized what she had been denying for days. \"I'm pregnant.\"\n\nSuddenly, her jealousy of Louise and Kevyn wasn't important. She stared into the mirror trying to come to grips with what she considered an unwelcome and disastrous situation. No man, rich or poor would look at her with a big belly; and then a newborn.\n\n\"Shit!\" she swore and then wondered how it happened. She was on birth control... Depo-Provera, so she shouldn't have gotten pregnant. She sat on the toilet seat, and tried to process how it could have happened. Children had never been a part of her life's plan. That fact was the main reason why her husband left her. She grimaced as she remembered some of the fights that they had had over the issue.\n\nShock slowly gave way to anger as she saw what she wanted in life go down the drain. The sound of approaching voices made her pull herself together. She only had to get through the rest of the visit with her family; and she could begin to plan.\n\nThe newlyweds were on the dance floor when Barb went back to the reception. She glanced at them, but didn't give them a second thought as she went back to her table where she would sit for the rest of the night.\n\n********\n\nGene saw Barb sitting alone and went to join her.\n\n\"Are you alright?\" he asked as he sat down.\n\n\"Never better!\" Barb snapped without looking at him.\n\n\"I know how you feel.\" Gene said overlooking Barb's tone. \"How did they do it?\" he asked as he looked around the grounds until his eyes landed on the house. \"Look at Leon.\" he mused. \"He's got his head so far up their asses...\"",
        "\"It's called socializing.\" Juliette said from behind them. \"You might try it; it's reported to be a lot of fun.\"\n\n\"Where's your date?\" Barb asked dryly.\n\n\"At the table which he reserved for all of us.\" Juliette replied. \"Why don't you sit with us?\"\n\n\"Sure, why not?\" Gene replied suddenly seeing Hans as another investor.\n\n\"I'll stay where I am.\" Barb replied as she shot Gene a withering look that he ignored.\n\nBarb looked over at the table where Hans was sitting with Leon who had his arm around...\n\n\"The housekeeper?\" Barb muttered. \"He couldn't do better than a hotel worker?\" She was more than ready to leave, but knew that if she did her phone would start ringing off the hook. \"Just a few more days.\" she whispered.\n\n******\n\nIt was an hour before Gene got his chance to dance with Kevyn, and then Louise.\n\n\"Nice wedding.\" he said as he and Louise danced. \"You and Kev did good... what's your secret?\"\n\nLouise tensed; but said nothing.\n\n\"I mean, you haven't been here that long, and you have a house on a private beach.\" Gene continued.\n\n\"What do you want from me Gene?\" Louise asked cutting to the chase.\n\n\"Nothing really... I was just wondering if you knew who Nathan invested with...\"\n\n\"I don't believe this.\" Louise said softly. \"I don't know why I'm surprised, but I am. Gene, this is me and Kevyn's wedding reception and not a time to drum up business.\"\n\n\"I was only...:\n\n\"I know exactly what you were doing, and I won't talk to Nathan for you.\" Louise said her tone cool.\n\n\"Why not?\" Gene asked.\n\n\"Because you haven't talked to him and you're using me.\" Louise replied. \"If you want to do business with Nathan, you talk to him about it. Thanks for the dance.\"\n\nShe left Gene standing in the middle of the dance floor wondering what had happened to his sweet, easily manipulated sister. What he didn't notice, was that Nathan was watching him with eyes filled with disgust and anger. \n\nNathan pushed the anger away when he saw Louise making her way toward him. He wasn't going to let anything ruin this night for her. When she reached him, he took her by the hand, and led her down a path that led to a small clearing.\n\n\"I just needed a few moments alone with you.\" He said as he sat on the ground and pulled her into his lap. \"How are you doing?' he asked after she was situated.\n\n\"I'm fine.\" she replied. \"You were right about Barb.\" \n\n\"You're welcome.\" Nathan replied touching her face.\n\n\"You're a little warm.\" he commented.\n\n\"But I feel fine so stop worrying about me.\" Louise replied, and kissed his cheek. \"We'd better get back before someone starts looking for us.\"\n\nNo one seemed to have missed them as no comments were made. Kevyn and Patrick were sitting at the table with Nathan's parents and grandparents. When Kevyn saw them, she smiled and patted the empty seat next to her.\n\n\"I was just telling Kevyn that both of you make such lovely brides.\" Maryanne said. \"This family is blessed to have been given both of you.\"\n\n\"Thank you.\" Louise replied. \"But I feel like I'm the lucky one. You've all been very kind to me, and I appreciate it.\"\n\n\"Patrick says that you hope to open your own restaurant someday.\" George, Maryanne's husband said.\n\n\"I would like to, but there's so much that I don't know.\" Louise replied relaxing a little at the change of subject.\n\n\"We know that you're a good cook.\" George said. \"Your bread is excellent, and from what I hear from Patrick, you know your way around a kitchen.\"\n\n\"We're planning to go to France next week.\" Nathan said. \"I signed us up at one of the cooking schools.\"\n\nAs Nathan was talking, Kevyn happened to look out to the dance floor. Her eyes widened, she kicked Louise's foot, and indicated that she should look toward the dance floor. It took Louise a few seconds to figure out what Kevyn wanted her to see. When she saw it, she smiled.\n\n*******\n\n\"Juliette,\" Hans said softly, \"may I please have this dance?\"\n\n\"Go on.\" Leon said. \"Me and Nadine will take care of baby girl.\"\n\nJuliette looked around for Victor and Wanda, and saw them at another table talking to Patrick's niece Victoria.\n\n\"We'll keep an eye on them too.\" Leon assured her.\n\nJuliette looked at Hans, wondered why she was hesitating and then realized that she was afraid. The longer the evening went, the more she liked Hans and the way he dealt with her children. She knew that she was falling for him when he explained his relationship to Nadine after she had called him papa.\n\n\"You did that for a girl that you didn't know?\" Juliette asked.\n\n\"I would have done that for anyone who appeared at my home the way that Nadine did.\" Hans replied. \"I believe that people are placed in our paths for a reason whether that reason is good or evil, and Nadine was for the good. She is brilliant. It has been a privilege to help her, and I am honored that she considers me her father.\" \n\n\"Juliette?\" Hans called softly. \"Please dance with me.\"\n\nStill she hesitated. Hans reminded her of Angel in so many ways, but he was different. She knew that if she danced with him, it would be over, she would fall the rest of the way in love with him. She wanted to say no just to protect her children from another hurt, but she couldn't resist.\n\nShe took his hand and allowed him to lead her to the dance floor. The moment Hans put his arms around her, she knew that he was the one man that she could compare to Angel, and that he wouldn't fall short. They danced in silence for the first song and through part of the second before Hans spoke.\n\n\"I don't want you and the children to leave.\" \n\n\"Hans...\"\n\n\"I know that this is sudden, but it really isn't.\" Hans said. \"Have dinner with me and allow me to explain.\"\n\n\"I can't just up and move to California!\" Juliette exclaimed. \"I don't have a job, my belongings are in Pennsylvania, and so is the kid's father.\"\n\n\"If you had a job, and a place to live would you think about it?\" Hans asked. \"I'm putting the cart before the horse, have dinner with me tomorrow night. Sasha will be more than happy to watch the children so that we can talk.\"\n\nJuliette thought about it for the length of the third song. \n\n\"Alright.\" she replied.\n\n\"Thank you Juliette.\" Hans said, and kissed her temple. Half the battle was over.\n\n********\n\nThe sight of Hans and Juliette began to push Barb to the breaking point. She couldn't explain why it angered her so much, but just when she thought that she couldn't take any more, she looked over, and saw Leon kiss Nadine on the temple. \n\nShe stood so quickly that the world spun. She had to wait until it stopped before she could move. She gathered her things, and practically ran to the gate where drivers were waiting to take guests home or wherever they wished to go. Barb gave her address and stared out of the window once she was in the car. When her phone rang, she ignored it. She wasn't going to talk to anyone until she had to which would be at the gathering at Kevyn and Patrick's on Monday evening. In the meantime, she planned to think about what to do about the unwanted child that she was carrying. \n\n*******\n\nLouise was the one who saw Barb hurry off, and wondered what had happened. She lowered her shields, and felt Barb's intense anger, but wasn't able to determine the cause until much later in the evening. She excused herself, went to a quiet corner, and called Barb's cell phone. She wasn't surprised when there wasn't an answer. \n\n\"What's the matter?\" Nathan asked from behind her.\n\n\"Barb left suddenly and I wanted to check up on her.\" Louise replied.\n\n\"Is she alright?\" Nathan asked more out of concern for Louise than Barb.\n\n\"I think so.\" Louise replied. \"Thank you for asking.\"\n\n\"I may not like her, but you're concerned about her which concerns me.\" Nathan replied. \"It looks as though you weren't the only one to come to California to be found by your mate.\" he commented.\n\n\"Hans and Juliette?\" Louise asked. \"He'll be good for her.\"\n\n\"Not just her.\" Nathan said. \"Look over in the far corner.\"\n\nLouise looked in the direction where Nathan indicated.\n\n\"Leon and Nadine?\" she asked surprised. \"That's great! But wait... how?\"\n\n\"I'll explain later.\" Nathan said. \"Let's enjoy the rest of the reception.\"\n\n******\n\nGene left shortly after Barb did. He too had seen and heard enough. He thought about going home early, and changed his mind. Who knew when he would get another opportunity like this? And for all he knew, Louise could change her mind about talking to Nathan.\n\nLike Barb, he left without saying anything. He didn't want to come up with a viable reason for his early departure. He walked up to the first driver he saw and gave the address of the hotel. It was a good time to get a good buzz going since no one would be there to check on him.\n\nWhen he arrived at the hotel, he thought about going to see Barb. In the end, he decided that he wasn't in the mood for her bitchiness. A cold can of beer sounded much better.\n\n********\n\nAt two am, Celeste was asleep in Hans' lap, Wanda was still talking to Victoria with whom she had become fast friends, and Victor was asleep with his head in Juliette's lap. Leon and Nadine were off in a corner quietly talking amongst themselves, and the newlyweds had already gone to their undisclosed locations. \n\nBefore they left, Kevyn and Louise spoke with the siblings who remained at the party.\n\n\"Monday evening.\" Kevyn said \"and feel free to bring dates.\" she added looking at Juliette and Leon. \"A car will be at the hotel to pick you up around four-thirty.\"\n\n\"You really don't have to stick around for us.\" Juliette said.\n\n\"We know, but we want to.\" Louise replied. \"You came all the way out here, and we wouldn't feel right about leaving you. Could you make sure to remind Gene and Barb?\"\n\nPatrick, Nathan and Hans stood back and waited for the discussion to be over.\n\n\"Congratulations.\" Patrick said slapping Hans on the back.\n\n\"That may be premature.\" Hans replied. \"She hasn't accepted me yet, and she leaves in four days. If that happens I will need some time off.\"\n\n\"She'll accept you.\" Nathan said. \n\n\"I agree.\" Patrick said. \"And if you need to go to Pittsburgh, then so be it. Take as much time as you need.\"\n\n\"Thank you... would it be wrong of me to say that I'm glad that it isn't the other one?\" Hans asked.\n\n\"Not at all.\" Nathan said. \"Both Patrick and I have said the same thing. What I'm curious about is why the fates changed their minds.\"\n\n\"I'm not so sure that they did.\" Hans replied. \"I think that it was her.\"\n\n\"Maybe it was a combination of the two.\" Patrick said. \"But whatever the reason, you dodged the bullet and got a much better mate out of it.\"\n\n\"This is true.\" Hans replied, and then hesitated. \"I know that in mating with Kevyn and Louise that you have extended your protection to their siblings. I would like to add my protection to yours, as you are now a part of my family. I may not be as powerful, or as wealthy as you are, but I am not without my resources. I would die to protect anyone in this family.\"\n\nPatrick held out a hand to Hans.\n\n\"Money or power has nothing to do with it. The willingness to do whatever needs to be done to protect your family does.\" He said. \"You are a good man, and I can see that you care for Juliette and her children. Welcome to our family.\" \n\nHans shook Patrick and then Nathan's hand. \n\n\"Thank you.\" Hans said. He went to Juliette, whispered something in her ear, and moved away with a smile on his face.\n\n\"And the family continues to grow.\" Nathan said quietly.\n\n********\n\nLouise was hot again, but denied feeling ill. Nathan made her feed again, and made a unilateral decision. She was going to see Gretchen before the gathering on Monday. He told Louise about the decision as he drove back to the beach house.\n\n\"I'm not sick.\" she insisted.\n\n\"Probably not, but you still shouldn't be having fevers.\" Nathan insisted. \"It's only a matter of time until you meet Gretchen anyway.\" he added.\n\n\"Who is she again?\" Louise asked.\n\n\"Do you think that I'm pregnant?\" Louise asked after Nathan told her who and what Gretchen was.\n\n\"I don't know.\" Nathan said. \"I've been listening for a heart beat and watching for other signs of pregnancy, but I've seen and heard nothing. I know that you think that I'm overreacting, but sweetheart something is going on with you, and I'd rather be safe than sorry.\"\n\n\"What if I am pregnant?\" Louise asked.\n\n\"I would be thrilled although I must admit, that I thought that I would have you to myself for a few centuries.\" Nathan replied. \"What about you? Would you be alright with being pregnant?\"\n\n\"I would have to be wouldn't I?\" Louise asked. \"It would take getting used to like everything else I've experienced in the past few weeks has, but I would adapt.\"\n\n\"We would adapt together.\" Nathan said taking her hand. \n\nThe conversation ended when the house came into view. The chairs from the wedding were gone. In their place was a blanket with a picnic basket sitting on it.\n\n\"We have two hours before we have to go in so I thought that we could spend them where it began.\" Nathan said taking her hand.\n\n\"I don't understand.\" Louise replied.\n\n\"I knew who you were as soon as I saw you.\" Nathan replied. \"But it was here on this spot that I fell in love with you. It was a night much like tonight. There was a breeze that blew your hair into your face... Remember?\" he asked. \"I reached down just like I did last night, and tucked your hair behind your ear.\"\n\n\"I remember.\" Louise said.\n\n\"It just seems fitting that we make love here.\"\n\n\"Are you sure that we're alone?\" Louise teased as she toyed with the buttons on his shirt before beginning to unbutton them.\n\n\"Completely.\" he assured her as he pulled her into him. \"You really are a beautiful bride. You are a beautiful mate, and you will be a beautiful mother.\"\n\nLouise stood on her tiptoes using Nathan's shirt as support, and pulled him down to her for a kiss. Tears were brimming in her eyes when they broke the kiss.\n\n\"You're crying.\" Nathan said concerned.\n\n\"I'm happy.\" Louise replied. \n\n\"That's what I like to hear.\" Nathan said as he wiped away a tear that had escaped. \"And happy is how I'm going to keep you.\"\n\nIn a blink of an eye, they were naked and lying on the blanket face to face to face. Nathan gently pushed Louise onto her back and stretched out on top of her, his hips between her thighs. Just as he was about to enter her, he changed his mind. He pulled back, sat on his haunches and held his hands out to her. When she took them, he pulled her up to him, lifted her; and eased her down onto his cock.\n\nWhen she was sitting in his lap, his cock fully imbedded in her, Nathan kissed her lips, and then her neck. He pressed his lips against the pounding pulse and stilled. Louise becoming impatient began to move in his lap prompting Nathan to hold her in place.\n\nHe held her in place for a full five minutes before releasing her, and biting into her neck.\n\n\"You are mine, and I am yours.\" he thought to her as he began to drink from her.\n\nAnother claiming wasn't necessary, but Nathan felt the need to do it anyway. It was as much for him as for her.\n\nLouise began to moan softly into Nathan's shoulder. The moans became louder and mixed with sobs as Nathan took her closer to orgasm.\n\n\"Wait for me.\" Nathan thought to her as he felt his orgasm begin to build.\n\nNathan closed his eyes, and allowed himself to feel what Louise was feeling. As soon as he felt her orgasm begin, he let his begin as well. The thought that their orgasms shouldn't be this intense flitted across his mind as his seed made its way into Louise's womb. The thought disappeared when Louise screamed her release into his neck.\n\nAfterwards, they stayed on the beach for as long as they could, the contents of the basket forgotten until they had to go inside.\n\n\"What's in there?\" Louise asked.\n\n\"A carafe of wine, cheese and some fruit.\" Nathan replied. \"But we'd better get inside. I can tolerate some sun, but you can't.\"\n\nNathan hurried her into the house, sat her in the kitchen and ran from room to room making sure that all of the shutters and drapes were closed. By the time he made it back to the kitchen, Louise had already started making a breakfast casserole.\n\n\"What are you doing?\" Nathan asked. \"This is supposed to be your wedding day.\"\n\n\"We have to eat don't we?\" Louise replied. \"And I don't think that what's in that basket is going to fill you up.\"\n\n\"Then you sit and let me do it.\" Nathan insisted as he took the whisk out of her hand.\n\n\"You whisk and I'll cut.\" Louise replied picking up a knife. \n\nNathan stopped arguing. For one, it was useless, and two, he liked cooking with her. While the casserole baked, Nathan made a call to Gretchen.\n\n\"Nathan!\" Gretchen exclaimed surprised to be hearing from him. \"Is everything alright?\"\n\n\"I think so.\" Nathan replied. \"Let me tell you what's been happening.\"\n\nGretchen listened without interruption, and then began asking questions beginning with the normal signs of pregnancy.\n\n\"No nausea and she doesn't complain of her breast being tender.\" Nathan replied. \"She sleeps well, and as much as one would expect one who has just been turned to sleep, but Gretchen; what concerns me are the fevers.\"\n\n\"What about pain?\" Gretchen asked.\n\n\"The only pain that she has is when she's missed a feeding.\" Nathan replied. \"When can you see her?\"\n\n\"Does she feel ill during the fevers?\" Gretchen asked.\n\n\"No, she doesn't but, I think that's what concerns me.\" Nathan replied. \"I've been listening for the heart beat of a child, but I don't hear anything.\"\n\n\"But that doesn't mean that she isn't pregnant.\" Gretchen replied. \"Katrina was pregnant with twins and I never heard the heart beat of the second baby. Unfortunately, we can't take into account her menstrual cycle....\"\n\n\"Why not?\" Nathan asked. \"I know that she hasn't bled since we've mated.\"\n\n\"That may be, but when was her last cycle before that? For all you know, it could have been just before you mated.\" Gretchen replied. \"Bring her by tomorrow night, or if you prefer; I can come to you tonight.\"\n\n\"How soon can you get here?\" Nathan asked.\n\n\"Don't you want to ask Louise?\" Gretchen asked. \"This is the day after your wedding.\"\n\n\"She is aware of my concerns, how soon can you get here?\" Nathan asked.\n\n\"Give me an hour.\" Gretchen replied and hung up.\n\nNathan turned to tell Louise that Gretchen was coming to see her, and froze. Louise was bent over the kitchen sink dry heaving. He ran over to her, picked her up, carried her to the closest bedroom, and laid her on the bed.\n\n\"I'm ok.\" she insisted as she tried to get up.\"\n\n\"Stay put.\" Nathan said firmly. \"Gretchen is on her way over. Are you having any pain?\" he asked as he sat on the edge of the bed and ran his hands over her body.\n\n\"No, and I was fine until I opened that package of sausage.\" Louise replied. \"The smell just made me sick to my stomach; but I'm fine now.\"\n\n\"Even so, stay put until Gretchen has seen you.\" Nathan said.\n\nHe was trying to be calm, but he was frightened. What if she was pregnant and she was losing the baby? What if the pregnancy was endangering her life? If there was a choice to be made, he already knew whom he would choose. Louise would always come first. They would work through the loss of the child together and go from there.\n\n\"Nathan, I'm fine.\" Louise said again as she felt his distress. \"Just get rid of the sausage.\"\n\nNathan looked at her, and then began to probe her.\n\n\"Stop that!\" Louise exclaimed.\n\n\"Shh!\" Nathan said as he concentrated on listening for anything abnormal, and the heartbeat of a baby.\n\n\"Nathan, I am fine!\" Louise exclaimed.\n\nNathan stopped probing and looked at her for a few seconds before speaking.\n\n\"When I mated with you, I promised to care for and protect you. I also promised that I wouldn't probe unless I had to, and in my mind, this is a have to. There's something going on that I don't understand, and I want to know what it is.\"",
        "\"Don't you think that I would know if I was pregnant?\" she asked. \"Nathan, I know that you're worried, but don't be. I'm fine, I promise.\"\n\nSlowly Nathan began to relax. What Louise said had merit, and she wasn't worried about it. Maybe the sausage made her sick. But what about the fevers?\n\n\"I'm sorry.\" he said stroking her face. \"You mean so much to me, and the thought that I could lose you...I guess a little of the obsessive side of me is showing.\" he added with a weak smile.\n\n\"I don't see it as being obsessive.\" Louise replied. \"I see it as being cared for and loved but, what are you going to be like when I do get pregnant?\" Louise teased. \"You'll have an ulcer before the baby even gets here.\"\n\nNathan laughed.\n\n\"You're probably right.\" He replied.\n\nSuddenly, he tensed.\n\n\"Someone's here. Stay put until I come for you.\" he said with a quick kiss.\n\nA few minutes later, he was back in the bedroom followed by a tall, thin, female vampire.\n\n\"Sweetheart, this is Gretchen Matthews. Her mate Eustace has been instrumental in helping our family deal with its past.\"\n\n\"Hi, I remember seeing you at the reception.\" Louise replied with a smile.\n\n\"Hello.\" Gretchen replied with a warm smile. \"I'm sure that Nathan told you how I know the family.\"\n\n\"He did. \"Thank you for coming.\" Louise replied. \"But as I told Nathan, I'm fine. It was the smell of the sausage that made me sick.\"\n\n\"I can buy that.\" Gretchen said as she sat on the side of the bed. \"But what about the fevers? The pain when you miss a feeding is understandable, but the fevers aren't. You're way past the point where you should be having them.\"\n\n\"But I feel fine even when I have them.\" Louise replied. \"I don't even know that I'm having a fever unless Nathan tells me. At first I knew, but lately I haven't been able to tell.\"\n\nGretchen thought for a moment.\n\n\"Louise, when was your last menstrual cycle?\"\n\n\"Two weeks before Nathan and I mated... why?\" \n\n\"Just asking, I want to be thorough.\" Gretchen replied. \"Is it alright if I examine you?\"\n\n\"Sure, but you won't find anything.\" Louise replied.\n\nAn hour later, the examination was complete.\n\n\"Well?\" Nathan asked impatiently. \"Is she alright?\"\n\n\"She's perfect.\" Gretchen said with a big smile. \"How do you feel about being parents?\"\n\nLouise and Nathan looked at each other speechless.\n\n\"But I didn't hear a heartbeat!\" Nathan said when he had gotten over his shock. \"How can that be?\"\n\n\"I don't know.\" Gretchen confessed. \"But Louise, you are pregnant. You just didn't present in the normal manner meaning the nausea, tender breasts and so on. It seems that your primary symptom is fever, and your olfactory sense is affected. Let me ask you this, after you turned, did the intensity of your lovemaking decrease?\"\n\n\"No.\" Nathan replied. \"That was why I thought about a pregnancy, but when I didn't hear a heartbeat and she didn't have any of the other symptoms, I became worried.\"\n\n\"Well, I assume congratulations are in order?\" Gretchen asked.\n\n\"Definitely!\" Nathan exclaimed, and then looked at Louise who had a shell-shocked look on her face. \"Sweetheart?\" he called.\n\n\"What? Are you sure that I'm alright?\" Louise asked now worried. \"If I didn't know that I was pregnant how do I know that the baby is alright?\"\n\n\"You knew.\" Gretchen replied. \"The fact that you always felt well was your indicator that all is well with the baby. If that changes, then you need to call me immediately. I'm going to leave with you what Katrina affectionately calls horse pills. They're prenatal vitamins that I want you to take with your meals. I also want you to start walking and make sure that you get plenty of rest. I'll be back in a couple of weeks to check on you, and please, call me with any concerns.\"\n\nNathan saw Gretchen out and returned to the bedroom. He sat on the bed next to Louise, and gently touched her stomach.\n\n\"I'm thrilled.\" he assured her.\n\n\"Me too.\" Louise whispered. \"Nathan, we're having a baby!\" she exclaimed as she sat up and threw her arms around his neck.\n\nThey spent the rest of the morning discussing when to tell everyone.\n\n\"We can tell your family at the gathering and go from there.\" Nathan said. \"Sweetheart, are you really alright with this? It happened much sooner than I thought it would.\"\n\n\"I have to admit that I'm still surprised.\" Louise said. \"But I'm happy and scared at the same time. I don't know anything about babies.\"\n\n\"Neither do I, but we'll learn together and I'm sure that we'll get plenty of advice.\" Nathan said. \"Stay put and rest, I'll check on the casserole.\"\n\n\"I'm not an invalid.\" Louise replied. \"Just get rid of the sausage and I'll be alright.\"\n\nNathan started to argue, but then decided that he wanted his pregnant bride where he could see and touch her. In the back of his mind, he reminded himself about the tendency to become obsessive. Now that Louise was pregnant, the desire to protect her, and now their child had grown.\n\n\"Alright,\" Nathan said, \"but you have to tell me if you don't feel well.\"\n\n\"Oh lord.\" Louise moaned, \"Between you and Kevyn I won't be able to take a breath in peace. I promise to tell you now can we go eat dinner?\"\n\n*******\n\nLeon tossed and turned in his bed. He couldn't get Nadine out of his mind. Not only was she beautiful, but she was a genius. He had never felt as drawn to a woman as he did her, and he didn't understand why. They had only spent an evening together, but he felt as if they knew and understood each other like people who had known each other for years.\n\nIn four more days, he would be going back to Pittsburgh although he really didn't want to. He was honest enough with himself to admit that Nadine was a large part of his not wanting to leave. He was tempted to throw caution to the wind, and stay in the hopes of finding a job and a reasonable place to live. But what about my things in Pennsylvania? He wondered.\n\n\"No problem.\" he muttered. \"Barry can pack it up for me and ship it.\"\n\nHe finally dozed off still undecided about what he was going to do.\n\n*********\n\nGene woke up with the hangover from hell. He stumbled to the shower, turned the cold water on full blast and got into the shower.\n\n\"Damn!\" he cursed as the cold spray hit him. \"Gene that was stupid.\" he said to himself. As the fog in his brain began to clear, he gradually adjusted the temperature of the water until it was comfortably warm. He made a promise to himself that he wouldn't take another drink for as long as he lived if the Sinclaires' would invest with him and the firm. The amount no longer mattered. The Sinclaire name on an account was all that he needed in order to save his job.\n\nHe wondered if Louise had said anything to Nathan, and hoped that she hadn't. It had been a mistake to approach her about talking to her husband.\n\n\"I looked weak.\" Gene muttered, and then realized that he had looked weak from the very first time he encountered the Sinclaires. \"Fuck!\" he exclaimed as the realization hit him. As far as he knew, he had one more chance to rectify the situation. He had to approach one or both of the Sinclaires' at the gathering. He began to practice in his mind what he would say to them, and hoped that it would be good enough.\n\n*******\n\nJuliette went through her outfits several times trying to decide which one to wear. Hans had assured her that whatever she wore would be fine since he was making dinner at his house.\n\n\"Make sure that you behave yourselves.\" she said for the tenth time.\n\n\"Mom relax!\" Wanda said. \"We'll behave.\"\n\n\"I know.\" Juliette replied. \"I'm sorry.\"\n\n\"Wear the gray slacks with the light blue top.\" Wanda suggested.\n\n\"Why that outfit?\" Juliette replied.\n\n\"I don't know.\" Wanda shrugged, \"It just looks nice.\"\n\nAfter changing her mind several times, Juliette decided on the outfit that Wanda suggested. Juliette's stomach did flip-flops whenever she thought about her dinner with Hans. She hadn't told him about the gathering at Kevyn and Patrick's. She wanted to see how the evening went before she invited him.\n\nHow the kids felt about him was obvious. They liked him, and he liked them. The big point in his favor was Celeste who was acting more like a normal five year old, and wasn't as withdrawn.\n\n\"Would you be alright with Miss. Sasha if I went to get my nails and hair done?\" Juliette asked Wanda.\n\n\"We'd be fine without her.\" Wanda replied.\n\n\"I know you would, but if she can't stay with you then I'm not going.\" Juliette replied.\n\nShe was proud of the fact that she never left her children alone no matter the reason. She had gotten into trouble on more than one occasion when Celeste's sitter cancelled at the last minute, and she had to take her to work with her.\n\n\"Would you prefer that I call in?\" she asked every time it happened. \"I would love a day of sitting around and watching movies with my baby.\" \n\nThat was all it took to shut the manager up. He knew that there was no way that he could do her job as well as his own. In addition, Juliette had a way with surly customers that no one else in the office had. Celeste had never been a problem during those times. She stayed in Juliette's office and colored or looked at books until lunch and then until it was time to leave.\n\n\"You know, on second thought, my nails look fine.\" Juliette said with a smile. \"Why don't we watch a movie or something?\" she asked.\n\n\"Can we go to the pool?\" Victor asked.\n\n\"Yay! The pool!\" Wanda chimed in.\n\n\"Then the pool it is.\" Juliette said. \"Go get ready, and Wannie, help Celeste.\"\n\n*********\n\nAs they finished dinner, Nathan decided to bring up Leon.\n\n\"He's a good man.\" \n\n\"Yes he is.\" Louise replied.\n\n\"He says that he's a night shift supervisor at the steel mill.\"\n\n\"Dad got him a job there before he died.\" Louise replied. \n\n\"Do you think that he would move to California?\" Nathan asked.\n\n\"I know that he likes it here, but what would he do?\" Louise asked. \n\n\"I have a couple of projects that need a man like him. Of course he'll be paid and receive full benefits.\" Nathan replied. \"I'm planning to talk to him about it at the gathering.\"\n\n\"Ok but I need to tell you something... Gene asked me to talk to you about investing with him.\"\n\n\"What did you tell him?\" Nathan asked.\n\n\"I told him no, and that he needed to talk to you.\" Louise replied.\n\n\"The other day while we were watching the game, Gene left a folder by the refreshments.\" Nathan said. \"That folder contained investment proposals which by the way were damned good.\"\n\n\"But he didn't approach you.\" Louise said understanding Nathan's point.\n\n\"No, and then he tries to go through you.\" Nathan replied. \"I have little respect for anyone, whether they are vampire, human or any other species who tries to go through the back door.\"\n\n\"How much is he asking you to invest?\" Louise asked.\n\n\"Twenty-million.\" Nathan replied. \n\n\"Are you serious?\" Louise asked. \"What are you going to do?\"\n\n\"I'm sure as hell not going to give him twenty-million dollars, and I don't care who he is.\" Nathan replied. \"I plan to pull him aside and talk to him. I may invest a small amount, and I'm only doing that because he is now family.\"\n\n\"And because of me.\" Louise murmured.\n\n\"Sweetheart, I would do the same for Barb even though I don't like her. Once we mated, your family became my family, and that means they will be protected and cared for as I promised.\"\n\n\"I really do think that I got the better end of this deal.\" Louise said. \"Thank you.\"\n\n\"You welcome, and I disagree. Thank you for the wonderful wedding gift.\" Nathan said as he leaned over and kissed her cheek. \"What would you like to do this evening?\"\n\n\"Make s'mores on the beach.\" Louise replied.\n\n\"Then that's what we'll do.\" Nathan replied. \"But you need to rest first.\"\n\nFor once Louise didn't argue. A nap sounded good.\n\n*******\n\nHans was at the hotel by six-thirty. He walked by the desk, nodded at the vampire staffing the desk for the evening, and made his way to the elevator. He got off on Juliette's floor and went to her suite. He took a deep breath, and tapped on the door. \n\nHe could hear the sounds of feet approaching the door and smiled. Wanda opened the door, and greeted him with a huge smile that warmed him. Victor was next in greeting him, and then finally Celeste who had her head cocked to the side.\n\n\"Yes Celeste?\" Hans asked gently. \"Do you want to ask me something?\"\n\nCeleste gasped. Hans was the first adult to understand what the tilt of the head meant. Instead of answering, she gave him a shy smile and ran off.\n\n\"Alright guys, remember to be good for Miss. Sasha, and call me if you need me.\"\n\n\"Mom...\" Wanda said rolling her eyes.\n\n\"We'll be fine.\" Sasha said from behind Hans. \"I've got tie-dye kits and the tee-shirts as well as some movies. So go have a good time.\"\n\n\"Thank you Sasha.\" Hans said. \"Victor, here is my private number if you would like to call to check on your mother. I am sure that you will help in the care of your sisters.\"\n\nHans handed the card to Victor and noticed how he stood straighter upon being given the responsibility of protector.\n\nAfter saying goodbye, Hans offered his arm to Juliette.\n\n\"That was a nice thing that you did for him.\" Juliette said as they walked down the hall.\n\n\"I did nothing that he wouldn't have ordinarily done. I just simply acknowledged it.\" Hans replied.\n\nHe nodded again at the vampire at the desk when they passed by, and led Juliette out to his car, a 2012 dark blue Altima. He opened the passenger door, kissed Juliette's temple; and then helped her in.\n\n\"What does the kiss on the temple mean?\" Juliette asked when he got into the car. I noticed all of the couples at the reception doing it.\"\n\nHans was stymied. He had wanted to get through dinner before they started talking about the mating issue. However, she had asked a direct question.\n\n\"It means that you are under that person's protection.\" Hans replied hoping that she would be satisfied with the answer.\n\n\"Protection?\" Juliette asked. \"Protection from what?\"\n\n\"Protection from those who would harm them, but it means more than that.\" Hans replied. \"If you will indulge me, I will explain everything when we get home.\"\n\nJuliette nodded and wondered what the big secret was. Thirty minutes later, they pulled into the driveway of a modest house that was impeccable in its upkeep. Hans opened the garage door, and pulled into a garage that was neater than many houses.\n\n\"Come in.\" Hans invited after helping her out of the car.\n\n\"What are you making?\" Juliette asked. \"It smells wonderful.\"\n\n\"Stuffed pork chops, scalloped potatoes and asparagus. For dessert I have cookies and cream ice cream.\" he replied.\n\n\"Who ratted on me?\" Juliette asked smiling.\n\n\"A little bird by the name of Celeste told me.\" Hans said with a smile. \"Please, make yourself at home. May I offer you a drink?\"\n\n\"Water is fine.\" Juliette replied as she looked around the kitchen. \"Do you live here alone?\"\n\n\"Nadine lived here until two years ago.\" Hans replied. \"She lives a few blocks west of here.\"\n\n\"Were you ever married?\" Juliette asked.\n\n\"No.\" Hans replied nervously. The conversation was moving along faster than he wanted it to. \"Please excuse me; I need to check on the meal. Feel free to make yourself at home in the living room.\"\n\nJuliette went into the living room and looked at all of the pictures of Hans with Nadine. That he loved, and was proud of her was obvious. She started at what she thought was the earliest photos and made her way to the most recent ones. Something about the pictures niggled at her so she started back at the beginning, and made her way back to the most recent ones. What....\n\n\"Dinner is served.\" Hans said from the doorway of the dining room.\n\n\"Oh, ok.\" Juliette said still looking at the pictures.\n\nDinner passed quietly with Juliette eating every bite, and then offering to help clean up not taking no for an answer.\n\n\"If you insist, but I wash and you dry.\" Hans said.\n\n\"You have a dishwasher.\" Juliette said, \"Why do you wash the dishes by hand?\"\n\n\"I like the old way of doing things.\" Hans replied. \"Everything has become so technical, and it feels good to do something in the old way.\"\n\n\"You don't like technology?\" Juliette asked.\n\n\"I do, but there are times when it becomes a hindrance.\" Hans replied. \"Take email for instance, no one writes letters or calls loved ones on the telephone. It has become impersonal.\"\n\n\"I see your point, but what about Skype? It allows friends and family to talk face to face across the world.\" Juliet said.\n\n\"True.\" Hans said. \"Juliette, during the drive here, you asked a question about the kiss on the temple. I also saw you looking at the pictures of Nadine and me. I would like to explain some things to you.\"\n\nJuliette hesitated, and then allowed Hans to lead her to the living room. Three hours later, she knew the whole story. Her first reaction was fear that she was with a crazy man, and then it was disbelief.\n\n\"A vampire?\" she asked several times. \"Nadine too?\"\n\nIt wasn't until Hans showed her photographs of him and Nadine that spanned a hundred years that she finally believed him.\n\n\"What do you want with me?\" she asked still not sure if she believed him.\n\n\"You are my mate.\" Hans said\n\n\"Mate?\" she asked. \"Wait... do the Sinclaires know what you are?\"\n\n\"They are aware.\" Hans replied not wanting to say too much.\n\n\"And they're ok with this? Did you do something to make my kids like you?\" Juliette asked.\n\n\"Yes the Sinclaires are fine with my being a vampire, and I did nothing to make your children like me.\" Hans replied. \"I love children, and they seem to like me, but Juliette, lets talk about your children. I am thinking of Celeste in particular. Has she been different since she's been here?\"\n\n\"Yes but...\"\n\n\"When did you first notice the change in her?\" Hans asked.\n\nJuliette thought a minute before answering.\n\n\"The flight here...What are you saying?\"\n\n\"Children are often very perceptive. They often see what adults do not. Celeste knows what I am, and so do the other two even if they aren't consciously aware of it. Now let's talk about you. You were attracted to me as much as I was attracted to you. Am I correct?\" Hans asked.\n\nWhen Juliette didn't answer, he continued.\n\n\"That is what we call the pull of mates. There was anothe chosen for me, but she wanted me no more than I wanted her. I begged and prayed for her to be taken from me even if it meant my spending eternity alone or probably dying.\"\n\n\"What happened to her? And why didn't she want you?\" Juliette asked.\n\n\"She is alive and well.\" Hans replied. \"We are not together because she broke our bond. I was to the point where I was going to accept her when she denied me not once, but several times. She didn't want me because I wasn't rich enough for her. She only saw that I was a manager of a hotel, and that placed me beneath her. I didn't want her because she was and is a taker who doesn't know how give or return love. She equates money and material possessions with love.\"\n\n\"She was stupid.\" Juliette murmured. \"How do you know that I'm your mate and what about the kids?\"\n\n\"I felt and feel for you what I should have felt for her. I want to protect you and the children. Juliette, I care for you and them. I don't want you to leave California. Will you at least think about what I've told you?\"\n\n\"Umm ok... I think that I need to go back now.\" Juliette replied.\n\nHans drove Juliette back to the hotel in silence. He didn't want to interrupt whatever thought processes she was going through. He wanted to touch her but refrained. When they got back to the hotel, he walked her back to her suite. \n\n\"Good night Hans.\" \n\n\"Good night Juliette. Thank you for having dinner with me.\" he replied and started to walk away. He turned back to see Juliette still standing by the slightly open door. He walked back, took her into his arms and kissed her. \"You belong to me.\" he thought at her not knowing if she could hear him or not.",
        "He broke the kiss, and released her.\n\n\"Sleep well.\" he murmured and then walked away.\n\nJuliette stood still for a few more seconds before going into the suite. She shook her head, and then went inside.\n\n*********\n\nKevyn had already started food preparations by the time Louise and Nathan got there.\n\n\"Patrick is in the movie room getting things set up.\" she said after greeting Louise, and then Nathan with a hug and a kiss on the cheek.\n\n\"I'll head down there.\" Nathan said. \"Do you need me to carry anything down?\"\n\n\"No thanks.\" Kevyn said. \"I'll send the guys down when they get here.\"\n\n\"So how are you?\" Kevyn asked Louise when they were alone.\n\n\"I'm good.\" Louise replied. \"I have something to tell you though.\"\n\nKevyn stopped what she was doing to give Louise her full attention.\n\n\"You know that I've been having fevers ever since I turned. Well, there's a good reason for it.\"\n\n\"Are you sick?\" Kevyn asked anxiously.\n\n\"No, far from it.\" Louise replied. \"I... I mean we're pregnant.\"\n\nIt took several seconds for the news to sink in. When it did, Kevyn screamed in excitement.\n\n\"A baby? Oh my god! Sit down...\"\n\n\"Kevyn, stop!\" Louise said laughing. \"I'm pregnant not sick.\"\n\n\"Right, you're perfectly... pregnant! Have you seen a doctor yet?\"\n\n\"Yes this morning.\" Louise replied. \"She's already started me on the prenatal vitamins.\"\n\n\"How does Nathan feel about it?\" Kevyn asked.\n\n\"He was surprised and thought that we'd have more time alone together, but he's thrilled.\" Louise said. \n\n\"And you're alright?\" Kevyn asked.\n\n\"I'm scared, happy and excited at the same time.\" Louise admitted. \"But happy and excited are tied for first place.\"\n\n\"I can't believe it.\" Kevyn said hugging Louise. \"A baby! Are you going to tell the others tonight?\" \n\n\"If that's alright with you...\"\n\n\"Of course it is! Have you told Nathan's parents yet?\" Kevyn asked.\n\n\"He called them this afternoon. I think his mom screamed louder than you did.\" Louise replied laughing.\n\n\"Then everyone knows.\" Kevyn commented.\n\n\"Hey! Where are you guys?\" Victoria called.\n\n\"In the kitchen!\" Kevyn called back. \"I invited Victoria since she and Wannie seemed to get along so well.\" Kevyn explained.\n\nVictoria greeted Kevyn and Louise with a kiss and a hug.\n\n\"Is it true?\" she asked rubbing Louise's stomach. \"Are you going to have a baby?\"\n\n\"It's true, but I haven't told my brothers and sisters yet so could you please not say anything?\" Louise asked.\n\n\"I won't and I hope that you have a boy.\" Victoria replied.\n\n\"Why is that?\" Louise asked.\n\n\"I don't know...\" Victoria replied. \"A boy would be nice. It would make Nathan happy.\"\n\n\"A healthy baby and mate is what would make me happy.\" Nathan said as he picked Victoria up and swung her around.\n\nHe sat her on her feet after kissing her on her cheek. \n\n\"I think that Patrick wants to see you.\" he said to her when she stopped giggling.\n\n\"Congratulations!\" Kevyn said hugging Nathan.\n\n\"Thanks... we're both surprised but excited.\" Nathan replied. \"I hear a car coming.\" Nathan added.\n\nA few minutes later, Juliette, the children along with Leon and Gene were in the kitchen.\n\n\"No date?\" Kevyn asked Leon.\n\n\"She'll be here in a while, she's coming with Hans.\" he replied. \"Has anyone heard from Barb?\"\n\n\"No, but she should be here.\" Kevyn replied. \"Nathan, do you mind taking Gene and Leon to the movie room? And Wannie, Victoria is downstairs waiting for you.\"\n\n\"Vickie is here?\" Wanda asked, and took off at a run not knowing where she was going.\n\n\"Hold up!\" Nathan called after her. \"I'll take you to her.\" he turned to Louise, touched her stomach, and then kissed her. \"See you soon.\"\n\nLeon picked Celeste up, spoke to Victor and followed Nathan out of the kitchen. Louise noticed that Juliette was quiet and asked her about it.\n\n\"What's up?\"\n\n\"Nothing.\" Juliette replied.\n\n\"I don't believe you.\" Louise said. \"You never could lie.\" she added.\n\nJuliette looked around to see if anyone other than them was in the kitchen.\n\n\"Never mind.\" Juliette said. \n\n\"Juliette, what happened?\" Kevyn asked.\n\n\"I had dinner with Hans last night.\" she said after a lengthy hesitation.\n\n\"That's great! Isn't it?\" Louise asked cautiously.\n\n\"It was, but then he told me some very strange things.... I believed him last night, but now I'm not sure.\" Juliette replied.\n\nKevyn and Louise looked at each other, and then back at Juliette.\n\n\"What kind of things?\" Louise asked.\n\n\"It's crazy, but he thinks that he's a vampire and he says that you all know about it.\" Juliette replied.\n\n\"What else did he tell you? Louise asked.\n\n\"That he didn't want me and the kids to leave because he cared for us, and that we were mates.\"\n\n\"But you believed him last night.\" Kevyn replied. \"What happened that you changed your mind?\"\n\n\"Last night... I don't know.\" Juliette admitted. \"Last night he showed me pictures of him and Nadine that looked old, but it could have been trick photography.\"\n\n\"But you know that it wasn't.\" Louise said quietly. \"You're scared because of how fast you became attached to him.\"\n\nJuliette stared at her.\n\n\"How do you... wait... are you telling me that there really are such things as vampires and that Hans is one?\"\n\n\"Juliette, Hans didn't lie to you.\" Kevyn said gently, and then stopped hoping that she hadn't crossed the line. She decided that she didn't because Juliette came to them. Hans had already talked with her, and probably expected her to talk them about him. \n\n\"You believe him?\" Juliette asked.\n\n\"We believe him because he's telling you the truth.\" Louise replied. \"But this isn't the time to talk. There are too many people here. Can you come for dinner tomorrow night?\"\n\n\"Yes... vampires?\" Juliette asked softly.\n\n\"Juliette, why did you invite Hans to come tonight?\" Kevyn asked.\n\n\"Because I like him, and the kids like him too.\" Juliette replied.\n\n\"They're both good reasons, but ask yourself this, what is your gut telling you? I understand what you're thinking and feeling, both Louise and I have been there...\"\n\n\"What? Patrick and Nathan too?\" Juliette interrupted.\n\nThe sound of Barb's voice halted the conversation.\n\n\"Dinner tomorrow night.\" Juliet whispered.\n\n*******\n\nThe sisters cooked in relative silence with Louise occasionally giving instructions on how she wanted something seasoned. She periodically looked over at Barb and frowned. She didn't ask what was wrong for fear of upsetting the peace.\n\nNathan came to the kitchen an hour later to check on the progress of the food, and to see how Louise was doing. Barb looked at him but didn't speak. Nathan barely gave her a glance as he made his way to Louise.\n\n\"How are you feeling?\" he whispered in her ear.\n\n\"I'm fine.\" she replied as Nathan touched her arm. \"And yes, I know that I have a fever.\" she added with a smile.\n\n\"I also came to see if you needed help with anything. Patrick has things set up. All we need are you ladies.\"\n\n\"Hans and Nadine aren't here yet.\" Juliette said.\n\n\"He called and said that they were running a little behind, and that we should start without them.\" Nathan said.\n\n\"But he is coming isn't he?\" Juliette asked anxiously.\n\nBarb rolled her eyes and continued with her task of making sandwiches.\n\n\"He's coming.\" Nathan assured her.\n\n\"The hot wings are ready to go, and the potato salad is in the fridge.\" Kevyn said. \"Barb, how are you doing with the sandwiches?\"\n\n\"They're done.\" she said quietly taking care not to look at Nathan.\n\n\"Good, I'll carry them down and send Leon and Gene up for the rest.\" Nathan said.\n\nAs he approached her, Barb stepped away from the sandwiches. If Nathan noticed, he gave no indication as he took the tray of sandwiches from the counter. Leon and Gene came up a few minutes later to get the rest of the food. \n\n\"Is this it?\" Leon asked.\n\n\"I think so.\" Kevyn replied as she headed toward the basement.\n\nJuliette hung back. \n\n\"I'll wait for Hans and Nadine of that's ok.\"\n\n\"Sure.\" Kevyn replied. \"You can go sit in the living room if you want... better yet, I'll wait with you.\"\n\n********\n\nKevyn waited until they were alone before she spoke.\n\n\"I know that this is hard, and that it sounds like something from a television show; but this is real. The only thing that I want to tell you is this, hear him out, and follow your gut and your heart. We're here if you need to talk or if you need anything.\"\n\n\"He said that there was someone else but that she didn't want him... do you know anything about that?\" Juliette asked.\n\n\"I do, but it isn't my place to tell you about it.\" Kevyn replied. \"That's something that you'll have to ask Hans about.\"\n\n\"What about Leon? Do you think that he knows about Nadine?\" \n\n\"I don't know, and it's something that I won't ask about unless he says something.\" Kevyn said. \"I found out very quickly that they do things differently in this world, and doing anything to interfere with the mating process is a big no-no.\"\n\n\"Kev... how... I don't understand.\" Juliette said.\n\n\"I didn't either.\" Kevyn replied. \"All I can say is talk to Hans and be honest about your fears and concerns.\"\n\nThe doorbell rang.\n\n\"I'll see you downstairs... just go through the kitchen and you'll see the door.\" Kevyn said.\n\n******\n\nJuliette wiped her sweaty palms on the legs of her jeans, went to the door and opened it. Hans' eyes widened and then glittered when he saw Juliette at the door.\n\n\"Juliette... Thank you for inviting me.\" Hans said fighting the urge to touch her.\n\n\"They're downstairs.\" Juliette said stepping back to let him and Nadine into the house.\n\n\"Go on Nadine, I'll be there shortly.\" Hans said.\n\n\"Are you alright?\" he asked as they followed Nadine who stopped at the kitchen, not sure of where to go.\n\n\"I'm fine but we need to talk.\" she replied.\n\n\"Agreed.\" Hans said just as they reached Nadine.\n\n*******\n\nNadine made a beeline for where Leon was sitting and Hans followed Juliette to the seats behind them.\n\n\"Welcome!\" Patrick said with a warm smile. \"We're glad that you could make it. As you can see, there's plenty of food and beverages. Because of the children, there won't be any alcoholic beverages served tonight. We have movies of every kind, but before we get started I'll show you where the bathrooms are, and if you need anything don't hesitate to ask.\"\n\n\"This is great!\" Victor said as he followed Patrick on the tour of the basement.\n\n\"There are beds in the room in the corner for the kids as well as furnished rooms down the hall for anyone who can't keep up.\" Patrick teased.\n\nNathan and Louise stayed behind and made sure that there were plenty of napkins and anything else they thought might be needed. Gene sat in a corner not caring to go on the tour. He was hoping to catch Nathan alone. When he saw that it wasn't going to happen unless he made a point of it, he walked over to them and spoke.\n\n\"Nathan, I was wondering if I could have a word with you.\"\n\n\"I'll be back.\" Louise said, \"I need to talk to Kevyn about something.\"\n\nNathan bent down, kissed her cheek, and waited until she was gone before turning his attention to Gene.\n\n\"Yes?\" he asked his tone cool.\n\nNow that Gene had Nathan's attention, he didn't know what to say so he started with an apology.\n\n\"I know that we started off on the wrong foot. I should have approached you with my proposals instead of leaving them where you or Patrick could find them.\"\n\nHe waited for Nathan to respond and continued when he didn't.\n\n\"I was also wrong to ask Louise to talk to you especially on your wedding day. I apologize for both of those things.\"\n\nNathan could hear the others coming back and decided that it was just as well that he didn't have a chance to respond. Gene needed to stew a bit longer, his apology while well said, wasn't sincere.\n\n\"Thank you for your apology, but I believe that you owe Louise one as well.\"\n\n\"I... sure.\" Gene agreed. \n\n******* \n\nSeveral minutes later, everyone was back, and filling their plates with food. Hans helped Juliette with the kids while Leon made Nadine sit while he fixed a plate for her, and then himself. Barb watched as Nathan and Patrick fixed plates of food for Kevyn and Louise and fumed. She wished that she had thought to find someone to bring even if it was Ollie.\n\nShe looked at Gene whose face was dark with anger, wondered who he was so angry with, and decided that it didn't matter. She had her own issues. She picked at her food. The sight of it made her nauseous reminding her of her condition.\n\n\"A few more days.\" she murmured. \"And they'll be gone. Kevyn and Louise can go screw themselves.\" she added. She jumped when she felt cold eyes on her. When she looked, it was Nathan. He wasn't trying to hide his intense dislike of her.\n\n\"Before we get started.\" Patrick said, \"Nathan and Lou have some news.\"\n\nNathan stood up, held out a hand to Louise, and pulled her to her feet. He put an arm around her, pulled her tight against his side, and grinned.\n\n\"We're having a baby!\" he exclaimed.\n\nThe room was silent for several seconds before excited chatter erupted. Barb was dumbfounded, and then furious. When she thought no one was looking, she slipped out of the basement and up the stairs. \n\nLouise turned around just as Barb slipped out of the room. She lowered her shields, and quickly brought them up when she felt the full force of Barb's anger toward all of them except for Gene. She thought to go after her, but decided not to. Whatever Barb's issues were, they were hers and hers alone. She had one last thought for Barb before she turned her attention back to the movie night that had become a celebration.\n\n\"Don't do anything stupid.\" Louise whispered."
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampire",
        "wedding",
        "supernatural"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/louise-ch-13"
}