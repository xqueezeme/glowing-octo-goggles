{
    "title": "Emelie's Quest for Futanari Cock",
    "pages": [
        "Authors note: A big thank you to Soli for helping with editing.\n\nFridays were always busy for her. Too many classes. Fridays should be the easiest ones to get a smooth start to the weekend, but it just turned out it was the most difficult one for her this year. Especially because of the last lecture.\n\nIf she was going to make it through, she needed a boost.\n\n\"You free?\" she texted.\n\nOther students were welling out of the room and she tried to join them while looking at her phone. The dots showed up, and she tried to hurry through in case it was good news.\n\n\"What's up?\" came back on her phone.\n\nIf she was free, she needed to make the most of the situation. She bounced between others as she called, and while it was ringing, she pushed through the crowd until she was out of the building.\n\n\"Hello, Em\" she heard Lindsey's voice through the phone.\n\n\"Hey, how about a blowjob?\" she asked.\n\nTwo full seconds of silence followed.\n\n\"Sorry, but I promised my date I would save up,\" Lindsey answered, her voice trailing off as she knew she was disappointing her friend.\n\n\"No, Lindsey. Please. Please, please, please. I need it,\" she pleaded.\n\n\"You got the WORST cum addiction,\" Lindsey teased.\n\n\"That's because it's so good,\" she answered.\n\n\"You probably have a few hundred horny College guys around you right now that would gladly make a donation,\" Lindsey said.\n\n\"Bleh,\" she quickly answered.\n\nLooking around, it did seem likely that at least some of them would love a blowjob. She could see most of the campus ground from here, and students were hanging out just about everywhere.\n\n\"Too small, and their cum is icky. No, what I need is a massive futanari cock, and the large bounty of delicious futanari cum. Please Lindsey, you know I need it before Professor Tannen's class!\" she wailed.\n\n\"Why don't you ask her?\" Lindsey suggested.\n\n\"Please. That's all I can think about during her lectures. If only I was so lucky,\" she bemoaned. \"Just let me have some of your cum and I won't have to think about swallowing hers.\"\n\nThe stories around campus said that Professor Tannen had a big cock too. She would do anything to have a chance to show her what she could do with it. She had given Lindsey and her old girlfriend so many blowjobs that she was now an expert at handling futanari cocks, but she was never brave enough to ask anyone else if she could blow them. What would she even say? Hi, my name is Emelie and I'm a massive cum slut.\n\n\"My date already called dibs on mine,\" Lindsey stated. \"Did I tell you that she invited me to a party?\"\n\n\"No,\" Emelie answered.\n\nShe needed cum, not to hear about how Lindsey was going to have a great time without her.\n\n\"What if I ask if you can come too? That would make up for it, right?\" Lindsey suggested.\n\nEmelie did like to party. She had spent most of the year trying to get drunk enough to have the courage to ask some of the other futanari women on campus if she could suck their cocks, but she always chickened out, and if Lindsey didn't get lucky either, she would usually get to suck her cock once or twice after the party.\n\n\"Can I suck your cock there?\" she asked.\n\n\"You really like sucking my dick, don't you?\" Lindsey asked.\n\n\"It's terrifyingly big, really tasty, and you have those oversized balls that always seem to be filled to the brim with cum. What girl wouldn't like sucking on it?\" Emelie said.\n\n\"You're weird. Well, my date seems to like it too. I guess my cock is pretty awesome. How about that party? You want to come?\" Lindsey said.\n\n\"Okay fine, I give up, no blowjob. Is it a stag party?\" Emelie asked.\n\n\"No, rather the opposite actually. It's a dress-up party. With older people\" Lindsey said.\n\n\"Boring. Are you dating an old person?\" Emelie asked.\n\n\"Yeah, and she is really awesome. I think you would like her too. Also, a dress-up party might sound boring, but I've been told there will be a lot of futanari women there,\" Lindsey said.\n\n\"Really? Single futanari women with cocks as big as yours?\" Emelie asked, licking her lips.\n\n\"Do you care if they are single?\" Lindsey asked.\n\n\"Not if they let me suck their cocks,\" she answered.\n\nDamn, that sounded like a great party. Very different from getting drunk around other students though. Would she make a fool out of herself in front of well-behaving adults? Still, just being around such people must be awesome. Sweet, mature, women, with massive cocks.\n\n\"See you after your date with Professor Tannen, so we can find something for you to wear?\" Lindsey asked.\n\n\"That's so mean! But yeah sure, I'll see you after,\" Emelie said.\n\nThe thing she wanted most in this world was to date someone like Professor Tannen. Lindsey was a good friend, with a great cock, but at the end of the day, they were just friends.\n\nShe knew she shouldn't use Lindsey as her personal sperm depositor, but she just couldn't help it. They were friends, and Lindsey was too kind to turn her down most of the time when she needed a big cock to suck on. Especially now when she was more serious about dating, she had to be careful so that it didn't ruin their friendship or any of Lindsey's relationships.\n\nWhy couldn't her old girlfriend be here? They had broken up when she graduated and moved back home. They weren't a great couple, but that was how her desire for tasty cum had been born.\n\nLindsey had been using a dating app to find dates, and maybe that's what she needed to do too. Massive cum slut needs big futanari cock to suck on. Lindsey said it would work, but it was one thing that her best friend knew about her addiction, and something completely different if she let the world learn about it.\n\n******************************************************\n\n\"Hey, Lindsey?\" Emelie called as she stepped into the dorm room.\n\n\"Oh, you're here already?\" Lindsey answered.\n\nThe lecture had been torture, and Emelie could only think about one cure. The fact that Lindsey was sitting in her underwear, with her big breasts barely contained, and the big obvious bulge down below didn't help.\n\n\"I need to suck your cock,\" Emelie said.\n\nShe tossed her bag away, not caring that it missed the chair she usually put it on, and almost knocked over the dresser.\n\n\"I told you I need to save my cum,\" Lindsey answered.\n\nShe tried to rush her down, but Lindsey jumped up on the sofa to avoid the first attack, and then easily bounced over its back so that they were standing on different sides of it.\n\n\"Please,\" Emelie pleaded.\n\nShe went down on her knees, holding her hands up to show her friend how much she needed to give her a blowjob. Her friend just shook her head, and Emelie collapsed face-first on the sofa instead.\n\n\"If you do that tonight, I bet you will have them form a line for your mouth,\" Lindsey said.\n\nIf only she could.\n\n\"Are they okay with me just showing up?\" she asked.\n\n\"Yes, my date took care of it. She knows the host,\" Lindsey explained.\n\nThat date probably knew all of the futanari there, which made it unfair that she had to be stealing her cock away. Some people had all the luck.\n\n\"She's doing you a favor, so it would be really unfair if I gave you all my cum that's meant for her,\" Lindsey explained.\n\nTrue. Still, she probably wouldn't notice if Lindsey came just once before the party. Those balls could make more than enough cum for tonight anyway.\n\n\"I guess I need to find something to wear,\" Emelie sighed.\n\n\"We don't have much time if you need to find someone you can borrow a dress from. I'll be wearing my red one, and you could try out the grey one if you'd like. You said you wanted to wear it sometime, remember?\" Lindsey said.\n\n\"I do, but I was thinking I should wear the one I wore to that punk party,\" Emelie said.\n\n\"The one with the broken stockings? Are you sure?\" Lindsey said, looking doubtful. \"I don't think that would fit the scene,\".\n\nShe was right, but she had been thinking about it in class. Between wondering if she should stay after class and ask Professor Tannen if she needed some special help, or if anyone would notice if she was to hide under the desk and blow her in front of the entire class.\n\nWhat she needed to do was dump the stockings, put on some heels instead of the big socks and boots, and of course go with some proper makeup instead of the goth variety.\n\n\"I can pull it off,\" Emelie said confidently.\n\n\"You looked like the girl from the Addams family,\" Lindsey said.\n\nShe did. The sexiest Wednesday ever, and she sucked Lindsey's cock several times that day as proof of it. Today she had to make it look more proper, but still sexy enough so that Lindsey would be the one begging her at the end of the night.\n\n\"I'll show you what I have planned,\" Emelie smirked.\n\nShe went into her room and dug into her clothes. It was a bit wrinkly, but a quick iron could fix that. At least it didn't smell weird.\n\nThe shoes were more difficult though. Her black pair hid most of the foot, but she wanted them to be open. The dress would cover a lot on top, and with her legs fully bare, it would look weird if her heels covered all of her feet. She desperately needed to get more shoes.\n\nShe took her clothes off and then donned the dress. It was very short. It had been fine with the stockings the last time she wore it, but now it was something to get used to. The top part covered up everything. A nice full black color, with long sleeves that ended with white cuffs, and of course the white collar that made everyone think about Wednesday Addams.\n\nShe put on the black heels even if she felt they were wrong, it didn't hurt to try them out. Looking in the mirror she smiled. It looked weird but good. The outfit was kind of all over the place. The black color made it look kind of professional, while the shortness of the dress made it look sexy. With heels that didn't cover as much of her feet, her legs would look even longer. The white collar and cuffs are what made it confusing. It added an innocent, youthful, look to it. Lindsey would need to be the deciding factor if the outfit was too befuddling.\n\n\"What do you think?\" Emelie asked, standing in front of Lindsey that was back in the couch.\n\n\"Eh,\" Lindsey answered.\n\nThat sounded bad, but when she looked at Lindsey, her friend had her sexy smile on. The way she smiled when she saw something she liked. Still, it made sense that her friend was a bit confused with the outfit too, but Emelie knew just how to convince her.\n\n\"It is sweet,\" she said, twirling her hair, hoping her friend saw how cute it was, \"Semiprofessional,\" she said, posing in a way where she hoped it showed how nice the cut of the dress was, \"While also really sexy,\" she added, this time turning around, bending forward to the point that her dress went high enough to show most of her ass.\n\n\"You need some other underwear,\" Lindsey commented.\n\n\"Of course. Does that mean you approve of the dress? I think I need some other shoes too,\" Emelie said, lifting her feet a bit to show that they didn't fit perfectly with the dress.\n\n\"You're lucky that you are so sexy. I didn't even notice the shoes,\" Lindsey said.\n\n\"Sexy enough that you'll let me suck your cock?\" Emelie asked.\n\nThe bulge had gotten bigger, and with Lindsey in just her underwear it was easy to tell that she had gotten excited.\n\n\"We need to start to get ready. My date will be here to pick us up soon,\" Lindsey said.\n\nHer friend flew off the sofa again, and seemed indecisive about which task she should tackle first, as she was walking on the spot and looking around her. Damn, Emelie thought. She was so close to getting her. If they had another half hour, she was sure she could have convinced Lindsey that she needed a preparation blowjob. Something that would help her remain calm until her date had the time to take care of her.\n\n\"When?\" Emelie asked, hoping her friend might be panicking over nothing.\n\n\"I'll shower first while you look for shoes. If I don't have any then you need to check in with Brit. Just hurry!\" Lindsey said, starting to strip as she ran for the shower.\n\n\"How much time do we have?\" Emelie tried again.\n\n\"Less than 30 minutes,\" Lindsey screamed from the bathroom.\n\nEmelie pulled off the dress as she needed to iron it out before she could wear it to the party. Lindsey had a lot of nice shoes, but the only pair that had the correct design were a red color, and that wouldn't fit with the dress. Instead, she darted out of the room, through the hallway, and to Brit's door.\n\nShe knocked but didn't wait for an answer before ripping up the door. Lucky enough Brit was sitting in the living room area.\n\n\"Come in, oh my god, Emelie, why are you naked?\" Brit screamed.\n\nShe looked down, seeing that she was in just her underwear, and her heels. Inappropriate, but at least she wasn't naked.\n\n\"I need shoes, quick,\" Emelie told her.\n\n\"You have shoes, you need clothes!\" Brit countered.\n\n\"No, for a party. I need better shoes, fast,\" Emelie explained.\n\nBrit pointed towards her room, and Emelie ran over there. She realized now that it would have been better if she had her dress on so she could make sure everything matched. She opened the wardrobe and found the shoe rack. Brit had a lot of shoes, even if most weren't heels. Brit was originally friends with Lindsey, and they had borrowed shoes from each other often, and since Emelie and Lindsey had the same size, it of course meant Emelie should be able to wear Brit's shoes too.\n\nShe found the perfect pair. A nice black color, a high heel, and a low-cut rim that showed a lot more of her feet than the pair she already had on.\n\n\"Thanks,\" Emelie said, running past Brit, showing her the shoes she wanted to borrow.\n\nTwirling out of the room so that she could close the door during the turn, she almost ran into a group of guys that seemed to only be there because they heard a half-naked woman was running around, she slipped past them and finally made it back to her room.\n\n\"You found some!\" Lindsey said, stepping out of the bathroom wrapped in towels.\n\n\"I think so, I haven't tried them on yet,\" Emelie said.\n\n\"No time. Get in the shower,\" Lindsey instructed.\n\nShe put the shoes down and tore her underwear off. This day wasn't going according to plan. Normally she should have swallowed a big load earlier, and then would work on getting a second one out of Lindsey. Instead, she was all horny from the lecture but had no time to take care of it, and hungry like a barren wolf. There had better be a big reward waiting at the end of it.\n\n***********************************************\n\n\"Lindsey, you're so hot,\" Emelie said. \"How about a last-minute blowjob?\"\n\n\"That is her car rolling in over there,\" Lindsey said, gesturing to the car.\n\n\"We can do it in the backseat,\" Emelie suggested.\n\n\"You are insatiable,\" Lindsey answered.\n\n\"Wouldn't insatiable refer to me already having got some?\" Emelie asked.\n\n\"You did yesterday. The day before that too. You probably sucked my cock ten times this week alone,\" Lindsey argued.\n\n\"Yeah, but not today,\" Emelie said.\n\n\"Please don't ask when we are with Heidi,\" Lindsey said.\n\nEmelie tried to not pout. Lindsey had been on several dates with her, but this would be the first time Emelie met her. She better be as awesome as Lindsey had been saying. Either way, it was kind of cool that Heidi was allowing her to join today. She had to try and not be in their way at the party, even if it meant she had to try and socialize with unknown old people.\n\n\"Hey. Wow, you two look great,\" Heidi said from her rolled down car window.\n\nEmelie nearly dropped her jaw as the older woman stepped out of her car. The wind catching her golden hair, making it look like she had just descended from the heavens. She was wearing the tightest, shiniest, black pants that Emelie had ever seen, looking like it was part of her skin, but the shine making every detail of her legs and hips stand out. Her white top was just a strip of fabric stretching over her chest. Her breasts weren't big, but with the abs on her stomach and her strong shoulders, they seemed to be the perfect size for her body. She had a black jacket on top of it, but it was designed to be very open as it just covered her sides and shoulders.\n\n\"What the hell,\" Emelie said to herself.\n\n\"Especially you, Babe,\" Heidi said, kissing Lindsey on the cheek.\n\nShe had an accent. A strong one. It made her voice sound like she was singing. How the hell did Lindsey get a date with someone like that? Sure, Lindsey was good looking too, but not like that.\n\n\"Hello, Emelie. It's nice to meet you,\" Heidi said.\n\n\"Nice to meet you too,\" Emelie answered.\n\n\"Get in. We don't want to be late,\" Heidi said.\n\nThey all got into the car, and Emelie was alone in the backseat. She figured Lindsey didn't want to sit with her in case she tried anything, but now when she knew that the date was an angel, she knew it was pointless. Lindsey would hold her cum to the end of time if it meant she could give it to Heidi.\n\n\"Who are you?\" Emelie asked as they rolled out of the parking lot.\n\n\"Lindsey hasn't told you anything? She told me a lot about you,\" Heidi said.\n\n\"I didn't tell her much, because I knew she would get like this,\" Lindsey excused herself.\n\n\"Who are you?\" Emelie asked again.\n\n\"I'm Ragnheidur Snorradottir, but everyone calls me Heidi,\" she said.\n\nThat didn't even sound like a real name.\n\n\"Where you from?\" Emelie asked.\n\n\"Iceland. Hafnarfjoerdur, close to Reykjavik,\" Heidi answered.\n\nShe had heard about Reykjavik. Everything else sounded made up. It would explain her weird accent and the names.\n\n\"What are you doing here?\" Emelie asked.\n\nEven if it was a believable cover story, it wasn't out of the question that she was an alien spy, here to do reconnaissance work before an invasion.\n\n\"Driving us to a party isn't a good enough answer, I presume,\" Heidi answered.\n\nIt was funny, but not the answer she needed.\n\n\"I run a model agency. That is actually how I met the host of the party we are going to. She was one of my first clients, even if she quickly moved on to bigger and better things. She is on TV now,\" Heidi said.\n\nThe only thing that didn't make any sense, is that she must be more beautiful than any of her models. Unless she used to be one, and now was managing them instead.\n\n\"You a model too?\" Emelie asked.\n\n\"Not so much anymore. I started when I was 17. Had to move to Sweden when I was 18 to get more opportunities. Soon I split my time in London, Paris, Milano, and eventually New York and Los Angeles,\" Heidi explained.\n\n\"You never told me that,\" Lindsey said. \"How did you transition to what you do now?\"\n\n\"Modeling is hard. I got sick. That happens to a lot of girls, but I was lucky that my agency wanted me to help them with bookings. I got to learn the other side of the business that way, and I wanted to make a difference by starting my own agency. Treat our models better so they don't end up like me,\" Heidi said, sounding like she was trying to not get emotional.\n\n\"How did you two meet?\" Emelie asked.\n\nLindsey had told her, but she wanted to make sure the stories added up.\n\n\"Dating app. Babe, did you tell her what I was actually doing?\" Heidi asked.\n\n\"No. You shouldn't tell her,\" Lindsey said.\n\n\"Can I trust you, Emelie?\" Heidi asked.\n\n\"Say no, Em,\" Lindsey said.\n\nOf course she could be trusted. She had never heard a secret that she couldn't keep. The important question was if she could trust her!\n\n\"What were you doing?\" Emelie asked.\n\n\"I was looking for models. I know that's bad. Preying on hopeful people and see if I can lure them into becoming a model,\" Heidi said.\n\n\"Isn't that what predators do?\" Emelie asked.\n\n\"Yeah. One of my girls had to cancel a shoot, and I was trying to find a replacement. I couldn't and we lost the contract, but I found Lindsey instead. Have you ever seen someone for the first time, and wanted to change everything about your life to make room for them?\" Heidi asked.",
        "Emelie understood. That is what a lot of people must feel like when they met Heidi. She must get a few proposals every day. Lindsey looked good too, but she wasn't that hot, was she?\n\n\"Not yet,\" Emelie said.\n\nShe hoped she would meet that person soon.\n\n\"How about you? Have you done any modeling, Emelie?\" Heidi asked.\n\n\"Em isn't the model type,\" Lindsey said.\n\nThat was true. She looked good, but not model kind of good.\n\n\"I could set something up if you want to try it out. You got a face that could sell just about anything, and your legs would be all the advertisers' dream. Of course, there is more to it than looking pretty, but you seem to have a strong personality and the right amount of spunk in you, you know?\" Heidi said.\n\n\"You mean a beetle?\" Emelie asked.\n\n\"You know about Pippi Longstocking?\" Heidi asked.\n\n\"Yeah,\" Emelie answered.\n\n\"I played her on stage for a whole summer when I was a kid. I loved looking for that spunk, even if my favorite part was watering the garden in the rain,\" Heidi said.\n\n\"That was always so strange, but if Pippi had made up her mind, there was no changing it,\" Emelie answered.\n\nThat was a fair argument for her not being an alien. She recognized true beauty and talent and knew about Pippi Longstocking.\n\n\"Have you ever seen the old movies?\" Heidi asked.\n\n\"I probably made my older siblings hate her because I always watched them. It was my dream to be her\" Emelie answered.\n\n\"I met her. The actress that played her in the movies that is. When I was in Sweden,\" Heidi bragged.\n\n\"No way. How was she?\" Emelie asked.\n\n\"Strong-minded. Very nice and supportive. An amazing person,\" Heidi said.\n\n\"You're so lucky,\" Emelie said.\n\nShe wondered what she was like. It took someone outstanding to play such a character, and no one else had done it better than her. At the same time, maybe it meant she had spent her life in its shadow. Always needing to live up to the potential of one of the most amazing characters ever created.\n\n\"Maybe we could make a test shoot? You can be Pippi Longstocking, and then if it goes well we can do other things?\" Heidi tried\n\n\"I'll think about it,\" Emelie said.\n\nIt might be fun. Even if she didn't want to be a model, just taking a few pictures might help boost her confidence. She would probably need a wig though. Just to make sure the hair matched. She probably wouldn't do it. Modeling was for people like Heidi.\n\n\"We just need to be careful about your addiction,\" Heidi said, giggling.\n\nWhat addiction? She didn't have one. Unless?\n\n\"You meant cum, didn't you? When you said spunk earlier, you meant cum, right?\" Emelie said.\n\n\"It works both ways, you know? You're strong minded, like the beetle, or Pippi, but it might be because you like that thing too,\" Heidi said.\n\n\"Lindsey, what did you do?\" Emelie whined.\n\nShe wasn't sure if she was mad or embarrassed. Her friend looked back from her seat. She could see she was concerned that she had overstepped her boundaries.\n\n\"Me and Heidi been getting more serious, and I had to tell her that I got a friends-with-benefits relationship with my best friend. It's okay. She doesn't mind. Actually, I've been asking her for permission every time you been, you know, for the last weeks,\" Lindsey said.\n\nEvery time? That meant that when she was begging Lindsey, she was in truth begging Heidi?\n\n\"Kill me now,\" Emelie said, wondering if she should just open the door and throw herself out.\n\n\"It's not that bad. Lindsey said it started with your ex? Now Lindsey is just filling in until you find someone else. I appreciate you making sure she is satisfied, but since I plan to keep her to myself in the future, I need to make sure you find someone that can help feed your addiction, you know?\" Heidi said.\n\nShe felt on the door. It was locked. One of those child-proof doors.\n\n\"I'm sorry, Em. At least now you know we haven't been doing anything bad. Heidi knew about everything,\" Lindsey said.\n\nIt was sweet of her to try and make her feel better, but it didn't help. She tried to look for something that might be able to smash the window but couldn't see anything.\n\n\"Would you mind if Lindsey moved back here with me for a minute so I could give her a blowjob?\" Emelie asked.\n\nA big, juicy, cock and a massive load of cum would help her forget her misfortune.\n\n\"Like Lindsey has been telling you, today, her cum is mine,\" Heidi proclaimed.\n\nJust when she had started to feel like Heidi was okay. How could she compete with a cum hungry monster when it looked like that?\n\n*************************************\n\nThe gate was open, and a long driveway led to the house. House wasn't the best word. It was a mansion. A showcase of the life of the rich and famous. Several cars were parked all over, and as Heidi rolled up a valet greeted them, taking the keys from Heidi as they all exited.\n\n\"What is this place?\" Emelie said.\n\n\"This is where you live if you make it big,\" Lindsey said, looking mesmerized.\n\n\"Are they famous?\" Emelie asked.\n\n\"They're just Anna to me,\" Heidi said.\n\nWhoever they were, they must be very successful. Lindsey was correct about that part. With Heidi looking like an angel, and Lindsey dressed up all pretty too, she started to feel underdressed. Maybe putting on this outfit had been a bad idea. This had turned into a great chance to meet successful and amazing people, and she had squandered it by being silly and stubborn. Why couldn't she just be normal?\n\nThe main hall was outstanding. A big room full of paintings and decorate pillars and ornaments. Things made to be expensive and look expensive. Just like the people. Small groups of pretty people in exquisite clothes. Emelie hadn't been sure if she wanted to drink, but seeing most of them holding glasses of bubbly, made her want some too. If she couldn't fit in, at least she could get drunk on something expensive.\n\nThey even had a person standing there serving welcome drinks. A table full of tall glasses, and a cute-looking woman holding a towel and a wine bottle as she was pouring glasses to two guests that must have arrived just ahead of them. Behind them, another woman with the same outfit as the server was battling with a towel, and it didn't click for her what she was doing until she heard the pop, and she put a freshly opened bottle down for the server to use.\n\nCould she ask for two glasses? Or maybe even three. No one else had more than one glass, but she was sure the server would understand her situation.\n\n\"Are you 21 too, Emelie?\" Heidi asked.\n\n\"No, I just turned 20. Actually, me and Lindsey have a birthday in the same week, and we had one of those parties where we put our age together, only no one thought it was funny that we had our 41-year-old party,\" Emelie said, giggling.\n\nThen it dawned on her. Heidi wasn't after a funny story.\n\n\"You're talking about the alcohol, aren't you?\" Emelie asked.\n\nFor the first time, Heidi's perfect posture seemed to fade as she looked uncomfortable.\n\n\"It's just, I told you I was moving around a lot for work when I was young, and the only constant was grownups pouring alcohol into us young women. They didn't care how old any of the girls were, and I try to at least make sure my clients don't do any underage drinking, and I couldn't in good conscience sponsor you doing it,\" Heidi said, her otherwise singing voice sounding like someone had chopped it up.\n\nThere was nothing worse when someone ruined the fun by making total sense. There were always stories about former models being addicted to drugs and alcohol. The people who made it out clean probably just got lucky.\n\n\"I know you probably drink all the time,\" Heidi said.\n\nShe understood that it didn't matter. The law was clear enough. You had to be 21, or in a private location in the presence of a parent, spouse, guardian, or responsible relative of legal age. No such person was here.\n\n\"Especially since I might not be around that much,\" Heidi said, leaning in closer to Emelie. \"You see,\" she continued, now whispering,\" It falls on me to make sure I get all that cum Lindsey been saving up out of her balls. It might take hours.\"\n\nAll that sweet, delicious, cum she had been hiding from her for the entire day.\n\n\"I promise not to drink anything if you let me sneak away with Lindsey now,\" Emelie counter offered.\n\n\"Nope,\" Heidi answered.\n\n\"I just need a few minutes with her,\" Emelie promised.\n\n\"Don't I get a say in this?\" Lindsey asked.\n\nNo, she didn't. This was between her and Heidi. Heidi had been cockblocking her all day, and she knew that from now on if she wanted to suck Lindsey's cock, she had to ask Heidi for it.\n\n\"If you find someone else that agrees to look after you tonight, I wouldn't mind that. I just don't want to leave you alone with all the free alcohol you can drink, and no one to make sure you are okay,\" Heidi explained.\n\nShe looked around but knew that Heidi's proposal wouldn't be possible. She didn't know anyone here. She was the young girl with the weird dress, and she doubted anyone would even look her way twice, they'd probably just sneer at her. Why couldn't she have just put on a normal black dress? She saw quite a few women wearing similar things to what she had in her closet. She just had to pick the worst time in the world to be unique.\n\n\"Fine,\" Emelie said.\n\nIt wasn't fine. This day was turning worse at every corner, and whenever it started to seem good again, four corners came at her at the same time making sure all good deeds were undone. No cock to suck, no cum to swallow, and no fucking alcohol to drink. On top of that, she was now learning she would spend most of the time here alone. What was the point of being in the most beautiful place, if you couldn't share it with someone?\n\n\"Just two please,\" Heidi told the server.\n\nShe could hear it bubble and fizzle as it got poured and handed to Heidi and Lindsey.\n\n\"Oh, it's good,\" Lindsey said after taking a sip. \"Would you like to taste it?\" she offered.\n\nShe didn't. What was the point in doing that? If it was great, that meant she had greatness within her reach but was deemed too young to have it. It was better to not try, and that way she could hold on to her hope that it was awful and that she wouldn't want to drink it even if it was free.\n\nHer belly rumbled. She had eaten two cups of microwaved quick noodles and three pop-tarts so that she had enough food in there to hold the liquor, and now when it was learning there wouldn't be any alcohol, it was protesting. It had been a quick decision, but now it felt like a dumb move too.\n\n\"Either of you hungry? I haven't had anything since lunch, and I'm starving,\" Heidi said.\n\nHeidi and Lindsey pushed forward into the house, and Emelie unwillingly followed them. She knew what would happen next. Luxury party at a luxury house, and as they exited the main hallway, they came into a big room that seemed to be an oversized dining room. Staff was moving in and out from what must be the kitchen, and there were several tables of what seemed to be the best kind of luxury food. The tables for eating weren't the best and the chairs looked basic, but Emelie assumed it was because this was put together to just hold enough people that wanted a proper place to eat.\n\nHeidi and Lindsey moved towards the food, and since she had no other place to go, she had to follow them. Hot food. Cold food. Deserts. It might be the best collection of food she had ever seen, and she was too full to want to eat any of it. They even had several different preparations of salmon. No, she would rather get sick than miss out on what seemed to be world-class salmon dishes.\n\nLindsey and Heidi had a nice plate each, but Emelie only brought back three small samples. Plus, they both had a nice glass of chilled wine, while she just settled for some water. She would rather have some beer. She had almost been spirited enough to ask Heidi if she could have just one beer. No one could ever get drunk on just one beer, so it should be okay, but she hadn't been brave enough to ask.\n\n\"Is that all you're going to eat? Didn't you see all the things they had?\" Lindsey asked.\n\nShe had been eating while her friend was getting dressed and talking to her date. She should have figured it was weird that Lindsey didn't eat anything. She probably knew about the buffet, meaning it was also her fault for not telling her that they had hired some world-renowned chef for the party. If she had just settled for one cup of noodles, she could be enjoying more salmon now.\n\nThe worst part was that even if it tasted amazing, just having one bite was enough for her to feel full enough that she didn't want to eat any more.\n\n\"Are you sure she will be okay if we leave her?\" Heidi whispered.\n\nIt made her feel even worse. Not even had she ruined her own evening, but now she might ruin theirs too.\n\n\"Do they have anywhere with music? If we find somewhere she can dance, then we can leave her for a few hours. I once saw her dance for eight hours straight, and we still had to drag her off the dancefloor because it was 5 am and everyone else had left,\" Lindsey said.\n\n\"It should be starting soon. She usually has a DJ in the garden,\" Heidi said.\n\nCould she even dance today? Yeah, she could always dance. Maybe some sad dancing at first, and then if things picked up, she could have more fun with it.\n\n\"Would you like to have a look at that, Em?\" Lindsey asked.\n\nLindsey was a year older, but right now it felt like more. Like the two grownups wanted to have fun, and they needed to dump the annoying College student somewhere where she would be safe and not get lost. It made some sense though. She was making a mess out of things today.\n\nThe garden might be fun though. They probably had a gardener that spent every day making sure it looked perfect. Maybe it even had some trees and bushes carved into fun shapes, or some rare flowers.\n\n\"What I want to do is,\" she looked around. There were at least twenty people within hearing distance, either eating or socializing, \"you know. But if you two will be doing that, I'll find something fun to do on my own.\"\n\nThere must be over a hundred people here. Maybe even double that. She had imagined it would be ten people when Lindsey first brought it up. At least not more than twenty. In a way that made it harder to contact people. With just a few people it would be easier to get conversations started. Now it felt like mostly everyone was already grouped up, and she was like Carrie, not quite able to fit in.\n\nIt was probably best that she didn't blow anyone right now anyway. The fullness in her stomach was kicking in. She doubted she would be able to swallow all of Lindsey's load right now, no matter how good it tasted.\n\n\"We could follow you outside first?\" Heidi offered.\n\nIt would be useful to have someone show her around. She imagined there must be a lot of rooms in a house like this.\n\n\"Where do I go to get to the outside?\" Emelie asked.\n\nOne side of the room had windows, but she couldn't see much out there because it was mostly green trees or bushes, giving a hint of where the garden must be. No doors were leading outdoors from this room, so they must be somewhere else.\n\n\"Just through those doors, and then you should be able to see the patio on the right,\" Lindsey said.\n\nEmelie looked over, seeing how people moved through a double door. She couldn't quite tell what was on the other side, other than that it was another room. It seemed to be where people wanted to go.\n\n\"We will go that way too, so we can show you,\" Lindsey said.\n\nWait a minute. Lindsey knew the layout of this place? She must have been here before. Without her. She only thought they had been on a handful of dates, but it started to dawn on her that they might know each other a lot better than she had thought. Could it be that every time that Lindsey wasn't around, she was with Heidi? Just how many times had she been at these kinds of parties?\n\n\"Are you not going to eat anymore?\" Heidi asked.\n\nShe had barely touched her salmon. Hopefully, the food would stay for a few hours so she could get some later.\n\n\"I'm done,\" Emelie said.\n\n\"You know, if you want to drink, you should eat more than that, or you will get sick,\" Heidi said, sounding concerned.\n\nShe knew she still had to find someone that could be her sponsor before she drank. That, or break her unspoken promise to Heidi.\n\n\"I ate before we left. I didn't know the food would be this amazing,\" Emelie said. \"I probably couldn't even eat a full load of cum right now, I'm so full.\"\n\n\"I could,\" Heidi countered.\n\n\"Well, we could share it,\" Emelie said.\n\n\"If Lindsey breaks me, I will let you have a piece,\" Heidi said, giggling.\n\nNo, this wouldn't do. She had been moping around for long enough. She needed to send Heidi and Lindsey away so they could do whatever incredibly hot things they wanted to do, and then she would conquer this party. Show everyone how to party, and get her just reward for making sure that everyone had a great time.\n\n\"Heidi. Before we got here Lindsey said there would be other big futanari cocks here. Is that true, or did she just say that to make me feel better?\" Emelie asked.\n\n\"Oh, there are plenty, Em,\" Lindsey affirmed.\n\n\"There are a lot. I could point out some of the single women for you,\" Heidi added.\n\nThat would make up for stealing her friend's cock and cum away.\n\n\"A kind gesture, but at some point, a woman needs to learn to stand on her own two feet,\" Emelie said, standing up from her chair. \"No safety harness. No backup. I will stride out there and find these majestic futanari cocks. Wrangle them into submission with my wit and sexy dance moves. If any woman needs to leave this house with an ounce of cum still in their balls, it will not be because I didn't try,\" Emelie promised.\n\nFor a moment she took pride in herself and almost felt like a superhero, vowing to end all crime in the city. In a sense she was. It was a crime whenever a big cocked futanari walked around with a load ready to be fired, but no one was there to swallow it.\n\nThen she remembered other people were there. Several people were looking at her. Staring even. She sat down, putting her face on the table, and tried to hide using her arms. Why did she keep on forgetting that other people could see and hear her?\n\n\"Are you okay?\" Lindsey asked.\n\nShe wasn't.\n\n\"You know, if you could get the same pizzazz with that pose during a photo shoot, you could make a ton of money,\" Heidi said, sounding impressed.\n\nShe tried to peek out from under her arms, and when she saw that the people that had been watching her were gone, she dared to sit properly again. That was the good part with there being so many people here. They couldn't bother with her for more than a few seconds.\n\n\"She is weird like that. She can put on the greatest performances, but when she learns someone saw her, she will run away, or just hide,\" Lindsey said.\n\n\"You should hold your ground,\" Heidi said. \"Lina Langsokkur, I mean Pippi Longstocking would never run away or get embarrassed for being herself or standing up for what she believes in.\"\n\nThat was true. She would stay true to herself no matter the cost.\n\n\"I'll try,\" Emelie promised.\n\n\"Are we ready to get this party started?\" Heidi asked.\n\nThey were. Emelie would turn this night around no matter the cost. How could it get any worse than it had already been? They put their plates and glasses away and then headed for the double doors.\n\nThe other room was outstanding. Big enough to fit a small house.\n\nSeveral sets of sofas, with at least two being in front of big-screen TVs. Tables with chairs. A stage-like area with a big piano. Rows of books. A set of stairs leading up to a balcony on the second floor, meaning the main area was two stories high, and then to finish it off most of the right and back walls were windowed from the floor and to about where the ceiling would normally be, making the room look even grander.",
        "\"Do you need any help before we head upstairs?\" Heidi asked.\n\nHeidi was standing behind Lindsey, hugging her. She fully knew the look on her face. The horny woman needing big cock, look. She should let them go, but she wanted to make a challenge first. Something that would help spur her night into becoming successful too.\n\nShe leaned in close, wanting to make sure no one could hear her this time.\n\n\"Want to make a bet?\" she asked Heidi.\n\n\"What kind of bet?\" Heidi answered.\n\n\"The person that swallows most big futanari loads of cum before the end of the night, wins,\" Emelie said, trying to sound confident.\n\n\"There is no way you will be able to win that,\" Lindsey said, looking back over her shoulder at Heidi as if she wondered if her date understood what she was promising her.\n\n\"I think I will,\" Emelie said, putting her hands on her sides.\n\n\"What are we betting?\" Heidi asked.\n\n\"If I lose, I'll never ask Lindsey if I can blow her again,\" Emelie said.\n\nWith stakes that high, she would need to win. Or else her life would be pure pain and misery from now on.\n\n\"But if I win, then you need to bring me to all the parties, and I can drink as much as I want,\" Emelie said.\n\nToday the world would learn that she was the best at making futanari women cum, and every time she came to a party like this, big-cocked women would be lining up for a chance to put their cocks in her mouth. Maybe even come with gifts to try and win her favor. Alcohol and shoes brought by the horniest futanari women, knowing that only she could still their thirst.\n\n\"Very tempting, but I think you know what I want my price to be,\" Heidi said.\n\n\"No,\" Emelie said, trying to figure it out.\n\n\"When I win, we will take a full day to get photos of you, in several different outfits, creating a portfolio for you as a model,\" Heidi said.\n\n\"You mean if you win?\" Emelie asked.\n\n\"There is no way we will lose,\" Heidi said, hugging Lindsey.\n\nIt felt like they were two against one, but that only made her want to defeat them even more. Especially with how confident Heidi seemed. With her looks, it made sense, but Emelie knew she had something even better. Technique to make any big cock cum within seconds, and the experience to have perfected her skills. She didn't want to be a model, but when it came to betting on herself, she was ready to go all in.\n\n\"I agree to your terms,\" Emelie said, offering a handshake.\n\nThey shook, and then Heidi dragged Lindsey away towards the stairs. They would get a head start, but Emelie knew she would make up for it fast once she found someone that needed her special help.\n\nShe followed them with her eyes up the stairs, disappearing behind the railing on the upper floor. She was alone now. Alone at a party with a few hundred people. Any one of them could be her savior tonight. Now it was up to her to make contact. Or at least dance so good that they all felt obligated to talk to her.\n\nThere was music playing, but it was faint. There to give some background noise but allow people to talk. Not like the parties she usually attended. The music at student parties was there to make sure people didn't need to talk. This was a room for gentle socializing. People were still drinking though. Wine, beers, drinks, or stronger spirits. Surely there must be a bar then too?\n\nIt was big. She wasn't sure how she had missed it. Mostly everyone in the room had something to drink and the bar seemed big enough to make sure they all would stay satisfied. She wanted something too, but Heidi's words echoed in her ears. She might as well check out the outside first. When she came back her friends would be getting busy, and they wouldn't mind if she tried out a beer.\n\nThere weren't a lot of people outside. Most were in a lounge area with comfy sofas and chairs. A few were hanging by a bar that seemed to be self-service. Her interest was more on what stood straight ahead. A lovely DJ booth. There was even a small temporary dance floor in front of it. It didn't matter though. People could probably dance anywhere out here. The only problem was that it was unmanned.\n\n\"Excuse me, do you know when the DJ will start playing?\" Emelie asked a person standing at the bar.\n\nThey looked at her, smiled, and chugged most of their beer.\n\n\"After the rain, probably,\" they said.\n\n\"What rain?\" Emelie asked.\n\nShe looked up at the sky. It had been mostly blue when they arrived, but now it was dark.\n\nThen the sky flashed. She hadn't been able to see the cause of it, but it was clear there had just been a big flash. She counted in her head, getting to eight before a loud rumble rolled over them.\n\n\"That rain,\" the person said. \"Would you like a beer while you wait? It will probably be a while.\"\n\nHell yeah, she wanted a beer. She only needed to explain her situation to them.\n\n\"I would love one, but I'm only 20. I promised my friends I would only drink if I had someone to look after me,\" Emelie explained.\n\n\"And where are they?\" the person asked.\n\nShe looked back at the house, being able to see part of the balcony through the big windows. They were somewhere up there, doing the kind of things people do on dates.\n\n\"They needed some time alone,\" Emelie said.\n\nShe felt a drop of rain hit her nose, and she again looked up at the sky to see if there was any more rain coming. Before she had the time to get a judgment on the rain, the person grabbed her arm, firmly pulling her towards the bar and under the roof that covered it.\n\n\"They left you?\" the person asked.\n\nShe wanted to ask them why they had pulled her like that, but then the sky came falling down. Massive drops violently hitting the roof above them, and it seemed to only take a few seconds before the pathway that had taken her from the house was a wet mess.\n\n\"Thank you,\" Emelie said. \"Who are you?\"\n\nThey seemed to have a sixth sense when it came to rain. Being able to predict rain and lightning before it happened.\n\n\"I'm the DJ,\" the person said. \"DJ Floor, but most people call me Flora.\"\n\n\"I'm Emelie,\" she answered.\n\nThey shook hands and then Flora downed the rest of her beer, turning to pour herself some more.\n\n\"Nice to meet you, Emelie. Now, would you have a beer with me?\" Flora asked.\n\n\"Yes, please,\" Emelie answered.\n\nHer luck was finally turning. Sure, the rain was a big miss, probably meaning she wouldn't be able to dance for some time, but on the other hand, she felt like it had forced her together with the coolest person at the party, and they had nothing else they could do but drink together as they waited for the rain to calm down.\n\n\"Well, it looks like this keg is empty,\" Flora said.\n\nFlora's glass was almost full, catching the last drops from the big keg.\n\n\"Is there any more?\" Emelie asked.\n\nShe had really wanted a beer, but she would drink anything right now. There was wine and all kinds of liquors there too. It's just that she had had her mind set on beer.\n\n\"Oh, don't worry. There are a few more kegs behind here,\" Flora said.\n\nThe DJ leaped over the bar, landing smoothly on the other side and picking up another keg from the floor, and putting it next to the empty one on the counter.\n\n\"How come you got invited to the party? You a model or something?\" Flora asked.\n\n\"No,\" Emelie said.\n\nFirst Heidi had been nagging her about it, and now Flora seemed to think so too.\n\n\"Well, I just promised someone a few minutes ago I might give it a try,\" she said, her voice sinking in defeat.\n\n\"Was it Heidi? She always trying to get pretty girls to model,\" Flora said.\n\n\"How did you know? My friend is dating her,\" Emelie said, hearing the solemn in her voice.\n\n\"Everyone knows Heidi. She's nice, and of course, being one of the hottest women in the world helps her a lot. Where are they now?\" Flora asked.\n\n\"They brought me here, told me I couldn't drink without a supervisor, and then they left me to fend for myself,\" she said, trying to not sound as disappointed with the day as she was. \"I think they are upstairs.\"\n\n\"That sounds unfair. Heidi is cool though. I'm sure she left you to be alone because she trusts you,\" Flora said.\n\nThat confirmed that they were talking about the same person. She wondered if Lindsey had gotten her naked yet? Her body was amazing with clothes on, but with how fit she looked, she imagined it would be even better when she was naked. Would it be weird if she went up to find them and asked if she could watch? Lindsey having sex with someone that beautiful must be an amazing sight.\n\n\"Do you know how this thing works?\" Flora asked.\n\nThe keg was upside down. A common mistake to make as the nozzle was aimed that way, even if it meant it was at the top, making it hard for the liquid to get out.\n\n\"We need to turn it around,\" Emelie said.\n\nShe tried to lift it, but it was really heavy. Flora helped her, easily flipping it around by tossing it a few times into the air and turning it a little every time. She was strong.\n\n\"Now we need to turn the nozzle around, and we should be good to go,\" Emelie instructed.\n\nThe tab was now on Flora's side of the counter, but as she seemed to be a little confused with how it should be done, she turned the keg around to offer Emelie to do it instead. She knew this was her time to shine, showing that all the student parties she had been to had given her some real-life skills.\n\nShe grabbed the nozzle, twisting it firmly so that it went from pointing upwards to pointing downwards, only to feel it come loose. A strong stream hit her hand, making her remove it, and then the beer instead hit her chest. Her dress getting completely soaked in beer. She tried to protect herself using both hands, but it only made the stream of beer hit her straight in the face instead. She tried to angle her face away, and again it only got worse as the beer shot right up her nose.\n\n\"Are you okay?\" Flora asked.\n\nShe wasn't. She started to cough, the fizzy drink making it hard for her to breathe. She felt like she would fall, but Flora was there to catch her. How could this keep on happening? Every time things would start to look good; the world came crashing down.\n\n\"Emelie?\" Flora asked.\n\nShe tried to answer, but it made her cough. She felt like she had beer everywhere. Her lungs, her eyes. How did it get into her eyes? It was hard to see.\n\n\"I'm fine,\" she said.\n\nFlora snorted, making it obvious that she didn't believe her. That was okay because she didn't believe herself either.\n\n\"We need to get you cleaned up,\" Flora said.\n\nShe got swooped up, and Flora carried her through the rain. She felt sorry that she had forced her new friend to get wet, but she knew there wouldn't be any idea to protest.\n\n\"Anna, where are you?\" Flora yelled.\n\nEveryone in the big room circled them. It was embarrassing, and she tried to cling on to Flora to hide, while also knowing that it made her position look even worse. She was glad Heidi and Lindsey didn't see her. The 20-year-old College student attending her first grown-up party and making a complete mess of herself. She guessed most of them assumed she had gotten too drunk to take care of herself. It was true that beer had caused this, but any drop she had drunk had been against her will, forced upon her by a faulty keg of beer.\n\n\"What happened? Do we need to call an ambulance?\" people asked\n\nFlora calmed everyone down as she walked to the stairs, bringing Emelie to the second floor. Emelie was too scared to look, but she could hear that most people were staying behind as Flora strode up the stairs.\n\n\"This way,\" a voice called.\n\nFlora followed it, and Emelie was brave enough to look again. Anna was there, holding a door to a bathroom open. Famous movie star. The host of the party. Now also a witness of her being carried because she had her ass kicked by a beer keg.\n\n\"What happened?\" Anna asked.\n\n\"A beer keg broke, and it sprayed all over her,\" Flora explained.\n\n\"Wow. I thought she smelled of beer, and I thought she was just very drunk,\" Anna said.\n\nUgh. That must be what they all thought.\n\n\"Heidi told her not to drink,\" Flora said.\n\n\"Oh, you a model?\" Anna asked.\n\n\"No,\" Emelie said.\n\n\"Could have fooled me,\" Anna answered. \"You should take a shower, and I will get your clothes cleaned up.\n\nShe thought about covering up, but then realized she didn't care about that anymore. At least not right now. Instead, she just ripped her dress off. It clung to her because of the beer, but it just made her pull harder until it peeled away from her skin and she could hand it to Anna. Her bra didn't seem too pleased about being removed either, but she got it off too, and then she noticed one of her shoes was missing. She had to try and get it back as it was borrowed, but she figured that would work itself out later.\n\n\"You could have done that behind the shower curtain,\" Anna said.\n\n\"I don't mind,\" Flora said, smiling wildly.\n\nAll she wanted to do was get the sticky clothes off, but she turned around to take off her last piece of underwear, leaving all the clothes in a pile on the floor before stepping into the shower, making sure to close the shower curtain before turning on the water.\n\n\"I'll have the clothes fixed as soon as possible,\" Anna said.\n\n\"Thank you,\" Emelie said.\n\nShe turned on the water, waiting for it to get warm before stepping into the stream. At least she didn't need to worry about the bet anymore. She wouldn't be welcome back here even if she won. Heidi had probably guzzled down a few loads by now anyway. The water was washing the beer away, but it couldn't clean up the shame she felt for what had just happened. The tab breaking might not have been her fault, but she had to live with the consequences of it.\n\n\"Your clothes are in the washer. I'll leave a fresh towel and a bathrobe for you, and then we can check if I have some clothes that will fit you while your clothes are getting cleaned. We aren't the same size, but surely we can find something that you can wear for an hour or two,\" Anna said.\n\n\"Thank you,\" Emelie said.\n\nFirst time meeting someone famous, and this happened. The only good thing about it would be that Heidi probably wouldn't want to bother with the model thing after this.\n\nShe wondered if she could just stand in the shower for the rest of the night. The warm water comforting her, but she knew that wouldn't be possible. It would be even worse if she got lectured for standing here forever. Probably Anna or Flora were starting to worry already and would soon come looking for her. She turned off the water, got out of the shower, and saw the things Anna had left on a small bench by the wall.\n\nThe towel was very big and of the highest quality. It made drying go smoothly, and it seemed to even get most of the moisture out of her hair. The bathrobe was cozy, and even if it felt a bit weird to go out to a party not wearing any underwear, she tried to take care of that by tying the belt extra tight, not wanting it to fall open when in front of people. Anna and Flora saw her naked, and she didn't mind it at the time, but she didn't want anyone else to see her naked tonight.\n\nComing out of the bathroom, she got surprised that no one was there. She had expected someone to wait for her. She knew she had taken a bit long, but still. She could hear music though. Not the kind of music a DJ would play, but a lot louder than the background music before, sounding like a big choir. She hurried up to the balcony rail and looked out over the party. It was full. A big room filled with people singing and drinking. There was even dancing, albeit it was more old-fashioned than what she was used to.\n\nUp on the stage, one person was playing on the piano, and another person was singing in a microphone, even if they were being outsung by the sing-along of everyone else. It wasn't what she had expected, but everyone seemed to have fun and enjoy themselves, and she was dying to be a part of it. She recognized the song too. Piano man. She couldn't remember who had made it, but it didn't matter. When the entire room joined in with the chorus, it filled her heart with that special kind of joy only music could give.\n\n\"La la-la di-di-da,\" she joined in with the rest of the party.\n\nThe song was about to end, and a new person stole the microphone. They looked sneakily at the audience and then walked over to the person at the piano, whispering to them, and then they both looked quite pleased.\n\n\"Don't do it,\" someone yelled from the audience, making everyone laugh.\n\nThe piano started to sound. She recognized it even if it didn't quite fit with just a piano. She tried to figure out what it was, but the mixed cheers and boos from the audience told her that almost everyone else knew.\n\n\"We're no strangers to love, you know the rules and so do I,\" everyone sang.\n\nShe still couldn't place it, but it didn't matter. She headed for the stairs, feeling how the robe flared around her legs. She feared it would trip her, but she was so entranced by the power of the sing-along that she just needed to be in the middle of it and feed on the energy of everyone's joint voices.\n\nShe danced down the stairs, feeling the hardwood floor against her bare feet as she got down to the main floor. A man raised a glass to acknowledge her arrival, and she nodded in response, wondering if they had thought she was someone else. Either way, she didn't know him and didn't care to get to know him.\n\n\"Never gonna give you up,\" the crowd sang, louder than ever before.\n\nIt was a meme, but maybe it meant something else to them. She couldn't believe so many people seemed to be excited to sing it. Still, she knew the chorus and didn't want to be worse, so she let her voice join theirs.\n\n\"Never gonna let you down,\" she sang, her voice carrying together with everyone else's.\n\nShe pushed her way through an outer ring, and inside of it, people were dancing. That is where the true center of the energy would be.\n\n\"Never gonna run around and desert you,\" everyone sang.\n\nA couple swooshed past her, and she stepped in after them. Another couple was about to hit her, and she jumped out of the way. She saw Flora was there. Dancing at the front, and she wanted to join her.\n\n\"Never gonna make you cry, never gonna say goodbye,\" the song went on, Emelie doing her best to sing too.\n\nPutting down her foot she found something wet. She tried to correct her weight, but her momentum already carried her forward. She knew someone must have spilled a drink, and as her foot slipped on it, she knew her fate was sealed. Her leg went up high, the rest of her body having no other choice but to follow. The hard-tied belt that had been resting on her hips, suddenly riding up her belly, and as she hit the floor with her shoulders, she already knew her lower body must be fully exposed as the flaps of the robe didn't have anything to keep them together.\n\n\"Never gonna tell a lie and,\" the song went on, before everyone suddenly stopped.\n\nShe knew it was because of her. Everyone had stopped singing because they were looking at the stupid 20-year-old girl that kept ruining things and now had involuntarily exposed herself to the complete list of party guests. Since Anna was a celebrity, there were probably a few more celebrities around too, or otherwise important people. If there was any doubt about her foolishness before, they must all be convinced of it now. Never mind that she must be head over heels drunk. Now she even had the stunt trick to prove it.\n\n\"Are you okay?\" Flora asked, standing above her.\n\n\"I'm okay,\" she tried.\n\nHer voice broke. The fall itself hadn't been that bad. Nothing hurt on her body, but her pride had taken life-threatening damage, and her self-worth felt like it might never recover.\n\n\"I think she just got the wind knocked out of her,\" a man said.\n\nShe felt someone put their arms under hers and start to pull her up. She had no choice but to allow it. Anything was better than lying on the floor, exposing herself to the world. As she got up, she corrected that quickly by pulling the robe tightly again, making sure it was proper.",
        "\"Thank you,\" she said.\n\nShe thought about looking the person in the eye to show it was sincere, but the shame was too grand. Instead, she started to walk, the crowd parting as she showed no hesitation that she needed to move past them. Tears formed in her eyes, and she wanted to wipe them away but feared it would confirm to everyone how shaken she was.\n\n\"Wait,\" Flora yelled.\n\nShe had decided that she needed to remove herself from the situation. Flora had been kind and helped her before, but this time no one could save her. She walked to the doors leading out to the patio, not caring that the rain was coming down like the world was about to end. Instead, she just stepped out, letting the wet darkness embrace her.\n\n\"Emelie,\" Flora called.\n\nShe looked behind her, seeing Flora thinking about going after her, but the rain made her hesitate. She had planned to maybe sit down in the bar, knowing it would be dry, but now when Flora was watching, and could join her easily if she stayed there, she instead grabbed a wine bottle from the counter, tried to sprint away only to trip on something on the ground.\n\n\"Wait Emelie, I'm coming,\" Flora said.\n\nThis time when she looked back, she saw the big windows being crowded with people. She had fallen again. It was the third strike to prove that she was just not suitable for this kind of party. Soon Heidi would return with Lindsey, and everyone would say that the person they had brought wasn't suited for this kind of affair. A child trying to pretend she was an adult, and failing terribly.\n\nTo make matters worse, it was her own shoe that had tripped her. Or rather one of the shoes she had borrowed from Brit. She must have dropped during the fight with the beer, or when Flora had lifted her. She grabbed it and then got up and started to run. Green grass against her bare feet as she aimed for what seemed to be a decorative set of hedges. She plunged down in the middle of them, resting her back against the one closest to the house, thinking it must be the best one to hide behind. She put the shoe in a pocket, and then looked at the wine bottle.\n\nIt was empty. Of course it was. She couldn't succeed with anything today. Not even grab a full bottle of alcohol. She tried to push herself into the hedge, but it was too dense to accept her. How could life be this miserable?\n\nThe water in the shower had been perfect, but the rain was anything but. It made her robe feel heavy, and the cold despair of the drops was burrowing in under her skin, trying to make its way into her bones. Still, it felt much safer to stay out here than to go inside.\n\n\"There you are,\" a voice called.\n\nThe rain got in her eyes as she looked up, but she could still tell that it was Flora.\n\n\"What are you doing out here?\" Emelie asked.\n\n\"Trying to not get drenched,\" Flora answered.\n\nShe felt a smile try to creep its way in, but she tried her best to hide it. She was out here being miserable, and that would be ruined if Flora saw her smiling.\n\n\"If you aren't prepared to get wet, you shouldn't go out in weather like this,\" Emelie said.\n\nFlora was hiding under an umbrella. Holding her hands as close to the top as possible, meaning the protective part was looking more like an oversized hat than an umbrella.\n\n\"Well, I had to find you,\" Flora said.\n\nThat made sense. Flora wouldn't be out here if it wasn't for her. It was always a problem when one person's need to ruin things for themselves, ended up ruining things for other people too.\n\n\"Sorry,\" Emelie said.\n\n\"You had me worried. All of us really,\" Flora said.\n\nIn her attempt to avoid making a bigger mess out of things, she had made a bigger mess out of things.\n\n\"Why don't we go inside again?\" Flora suggested.\n\nIt was a sensible suggestion. The problem was that out here in the rain, hiding behind a comfortable hedge, nothing bad could possibly happen.\n\n\"Have you ever had one of those days where things just seem to go wrong, no matter what you do?\" Emelie asked.\n\n\"More often than I would like. Actually, for me, they usually happen on Thursdays. Do you think it might be a curse?\" Flora asked.\n\nThursdays? It very well might be a curse.\n\n\"Lucky it isn't Thursday today, or we would both be miserable,\" Emelie said.\n\nThey both smiled before Emelie remembered she was trying to mope her troubles away.\n\n\"You should have seen me two weeks ago,\" Flora said.\n\n\"What happened?\" Emelie asked.\n\nFridays were usually quite good, and it would be horrible if she was cursed on Fridays from this moment on. She might not be able to attend a party ever again.\n\n\"First, I lost a big gig. I should be in Austin now, but the entire thing got shut down. Not Austin, but the event I was going to play at,\" Flora said.\n\nThat sounded quite bad. If she got paid for playing here, it was probably not nearly as much as the big gig would pay. She was happy Flora could be here though. This party would be even worse without her.\n\n\"Sorry about that,\" Emelie said.\n\nShe could feel the goosebumps on her skin from the cold, and how her body started to lightly shiver. Flora looked uncomfortable too, hiding under the umbrella as water poured over it.\n\n\"Then my parents' dog passed away. We had him for 17 years. My best friend for a few years before I moved out. He was amazing,\" Flora said.\n\n\"Sorry for your loss,\" Emelie said.\n\nFlora had tears in her eyes. Clearly, they were very close.\n\n\"What was his name?\" she asked.\n\n\"Guess,\" Flora answered.\n\nHow was she supposed to know that? Was it something related to her now?\n\n\"I don't know. DJ maybe?\" Emelie guessed.\n\n\"No, that was his name. Guess. My dad named him. He thought it was the funniest thing ever,\" Flora said.\n\n\"Oh, that is pretty clever,\" Emelie said.\n\nThey both smiled, and it made her feel a little warmer.\n\n\"That sounds like a really bad day too,\" Emelie said.\n\nAt least no one she cared for had died today. It showed things could always get worse, and maybe she shouldn't be pouting for some mild misfortune.\n\n\"That wasn't even everything,\" Flora said.\n\nThere were more?\n\n\"What else happened?\" Emelie asked.\n\n\"My girlfriend then kicked me out. Didn't even let me pack a bag,\" Flora said.\n\n\"After you had a day like that?\" Emelie asked.\n\n\"Yeah. I was trying to do some mixes to take my mind of Guess, and she demanded I go to the store and get her a soda because I had forgotten to buy it earlier that day, even if it wasn't on the shopping list. So, I went to get it and when I got back my mixing computer was out in the hallway, all beaten up,\" Flora explained.\n\n\"She broke it?\" Emelie asked.\n\n\"With a bat or something. Lucky enough the HDD was still working so nothing was lost. Honestly, before I could have that checked, I was more worried about the music than losing her. Things had been bad for a while,\" Flora said.\n\nStill, that was a horrible day. Her own bad day was nothing compared to that.\n\n\"Why did she do it like that? Breaking up is one thing, but ruining someone's livelihood is taking things too far,\" Emelie said.\n\n\"Yeah. We were too different. She said she was only with me for the sex, but that I loved the music more than her, which might be a fair point. I love doing music and put a lot of time into it. She didn't care about it at all, which should have been a red flag,\" Flora said.\n\n\"Breakups are always difficult, even if they are for the best for everyone,\" Emelie said.\n\n\"That is very true. You're quite wise,\" Flora said.\n\nShe honestly only had one difficult breakup, and she figured Flora had a few more. Still, that one hurt a ton, and she was struggling with it still.\n\n\"What do you even do when something like that happens? Where did you sleep? Did you get the rest of your stuff back?\" Emelie asked.\n\nWhen she got dumped, they both had lived in the dorms. Not together. Just dating. Sure, they had talked a bit about getting somewhere to live together, but that was something for when school was done, and clearly, her ex had been done with her when they no longer lived close enough for regular hookups.\n\n\"I called a friend and said I was having a Thursday. They understood. I had my clothes, my car, my phone and credit card, and of course the HDD. After a few days, my ex let me back into the apartment to get all of my things, and then a few days after that I moved into a new apartment,\" Flora said.\n\n\"Your day was a lot worse than mine,\" Emelie said.\n\n\"Well, that was one of my worst. Not all Thursdays are bad, but I hope I will never have a Thursday like that again. Curse or no curse,\" Flora said.\n\n\"I hope so too,\" Emelie said.\n\n\"Do you want to go inside now?\" Flora asked.\n\nShe didn't. Hearing Flora's story had given her some hope, but she still wasn't ready for that.\n\n\"Not yet,\" Emelie said.\n\n\"That's fine. Just not that much longer please,\" Flora said.\n\n\"You can go inside if you want,\" Emelie offered.\n\n\"Not without you. After all, it's my fault you're out here. It was my inability to handle kegs that caused it to spill all over you. Then I should have been there for you when you got done showering, and it might have been me that spilled on the floor in there too,\" Flora said, sounding guilty.\n\nHer day had been pretty bad before those things happened. Getting covered in beer, and exposing herself to everyone, was the two worst things, but it still wasn't Flora's fault. She had just been the tool some god of mischief had used.\n\n\"I see you at least managed to get something to drink. Is there anything left?\" Flora asked.\n\nNope. Nothing was left, just not by her effort.\n\n\"I picked up an empty bottle in the rush,\" Emelie said.\n\n\"Sounds true that it's a bad day for you,\" Flora said.\n\nIt was true. Nothing might be life-changing, but all the small things put together made for a day she had rather been without.\n\n\"Would it make you feel better to know that my Thursdays since then have been pretty good? Well, my ex did send me a message yesterday that my cock is too big and that I should have it reduced. That kind of hurt,\" Flora said.\n\nBig cock?\n\nShe shook her head, feeling how water flew from the hair, only to be replaced with even more water. She hadn't considered that Flora could be a futanari, but suddenly it all made sense. She was hot. She was nice. She was cool. Of course, she must have a huge dick.\n\n\"Is it too big?\" Emelie asked.\n\nShe bit her lip just after she had said it. It felt highly inappropriate to ask that. Her curiosity was just taking over, and she needed to know.\n\n\"She never complained when we were dating. Sure, she struggled at times, but that's normal. Do you think she was just trying to make me feel bad because she feels bad about what happened?\" Flora asked.\n\nThat made sense. Flora's ex should feel guilty, and some people used those feelings to make others feel bad too. She knew it was a bit like what she was doing now, making Flora miserable because she was having a bad day, but she felt Flora's ex had darker motives. They had tried to hurt Flora on purpose, while now, Flora was out here because of the goodness of her heart. She appreciated the sacrifice she was making and knew she owed her one for being so kind.\n\n\"Probably. It's a ludicrous statement. Cocks can't be too big,\" Emelie said.\n\nBig cocks were the best. At least when they were big futanari cocks.\n\n\"What if they can be?\" Flora asked.\n\n\"I can agree with your Thursdays being cursed. It sounded weird at first, but you presented good evidence and now I am ready to agree with you. You got a curse. Cocks being too big though? That is impossible,\" Emelie said.\n\n\"What if my cock is part of my Thursday curse somehow?\" Flora questioned.\n\nEmelie felt how her widest and creepiest smile spread over her lips.\n\n\"I need to see some evidence,\" Emelie said.\n\nAll she had wanted today was a big cock to suck on, and she felt how her luck was about to change. Misery upon misery had piled up, but it was all for this moment. Her great reward for making it through to the end.\n\n\"What evidence?\" Flora asked.\n\n\"How big your cock is,\" Emelie said. \"Just so I can tell if it's too big.\"\n\nShe got out of the hedge and onto her knees. The cold wet grass embracing them as she tried to deal with how heavy the robe had become from soaking up all the water the fluffy fabric could hold.\n\n\"You think I'm going to show you out here?\" Flora asked.\n\n\"Yes,\" Emelie answered.\n\nShe tried to look her cutest, batting her eyelashes as she looked up. She figured the rain probably made it impossible to look cute, and the creepy, cock hungry, smile she knew was plastered on her face couldn't help either.\n\n\"In the rain, in sight of everyone in the house?\" Flora added, sounding like Emelie had won the first argument and that she needed to provide further reasons why it would be a bad idea.\n\n\"Yes,\" Emelie answered.\n\nFlora still looked like she doubted her, but she saw the twitch in her pants. The marvelous sign that something splendid lay hidden, ready to rise.\n\n\"They can't see us from here. Well, they can see you, but only the top half, right? You didn't see me before you got past the shrubbery? And the umbrella keeps you safe from the rain. This is the perfect spot,\" Emelie argued.\n\n\"You're crazy,\" Flora said.\n\nShe saw the same kind of smile she imagined she had herself spread over Flora's lips. The kind of smile that told her that she thought she might be crazy, but that she liked it.\n\n\"Yes,\" Emelie said.\n\nFlora pulled the umbrella even closer. Looking like she was shrinking in the rain as she tried to hide away from the wet and cold, but Emelie could also tell that every inch her new friend lost in height, was instead gained by her bulge.\n\n\"Do you want to know how my bad day started?\" Emelie asked.\n\nFlora looked at her, then at the house, and then down at her again.\n\n\"Sure,\" Flora said. \"Can we talk about it inside?\"\n\nNo, they couldn't go inside. Not when things were getting exciting out here.\n\n\"I love sucking on big futanari cocks. Big, juicy, cocks that can give massive loads of warm cum. Some even say I am addicted to it. I might be. At least some days I just need it. That craving that starts deep in your soul and slowly consumes you until your mind is no longer functioning because you need it that bad,\" Emelie said.\n\nShe barely felt like herself. She needed that big cock, and any shyness or embarrassment didn't matter anymore. She was cock-hungry, and she could tell Flora was getting there too. Her cock was hard, and she was about to let it do the thinking for her.\n\n\"I had one of those days, but no matter what I did, I just couldn't get any futa cock to suck on. It was killing me, and I think I have made a lot of bad decisions today. All because I didn't get to suck on a majestic futanari cock,\" Emelie said.\n\n\"Fuck,\" Flora answered.\n\nShe could tell exactly what Flora meant. The DJ knew she shouldn't have her cock sucked on out in a garden with the rain coming down like a great ocean had formed in the sky and was now trying to migrate back down, but right now it was all she wanted. Her cock must be throbbing against the fabric of her pants, and each rhythmic flow of blood that went through it carried the message up to her brain that she needed it too.\n\n\"Now I'm thinking this might be what it has all been about. We met so that you could break my curse. You need to show me your cock. Let me suck on it. Give me all of your sweet cum so I can swallow it,\" Emelie prompted.\n\nFlora looked like she was battling a demon. A demon that got its strength from her sexual excitement, and she was way too horny to have a chance to defeat it.\n\n\"And you must do that out here in the cold rain?\" Flora asked.\n\n\"Yes! I have never sucked cock in the rain before, and if we don't break the curse before we go inside, something bad will happen again. Something that might ruin our chances of making this happen. If we leave this very spot, the world will find a way to ensure your cock will never find its way between my lips, and we wouldn't want that to happen, do we?\" Emelie said.\n\n\"No,\" Flora agreed, reluctantly..\n\n\"Then do you want to open up your pants for me, or do you want me to do it?\" Emelie asked.\n\n\"You do it. I'm not letting go of this umbrella,\" Flora said.\n\nShe could see how Flora moved her eyes between her and the house. She must be nervous someone else would join them out here, but who would be crazy enough to go out in weather like this? She undid the top button of the tight jeans, and then slowly pulled the rest of the buttons open. Pulling them down enough so that the hideous beast tented out the underwear instead. She tried to pull the pants down a little more, but they didn't want to cooperate, probably because of the abundant moisture in the air making them stick to Flora's legs.\n\nInstead, she turned to the underwear, trying to pull them down, but the hard cock made it too difficult to do, so instead, she reached into them.\n\n\"Damn, that's cold,\" Flora said.\n\n\"Sorry,\" Emelie answered.\n\nShe was very cold right now, and she imagined her fingers might be the coldest. She had spent forever out here already, and all body warmth must have moved to try and protect her vital parts. Flora just had to suck it up, and she had plans on how to warm the cock up soon.\n\nIt took a lot of work, but she managed to get it out of its constraints. A massive, beautiful, cock. The kind dreams were made of. She could hardly breathe as she was trying to take in its glory. It almost looked too big. At least for most women. Not for her though. For her it was perfect.\n\n\"It's amazing,\" Emelie said, her voice full of wonder.\n\n\"Not too big?\" Flora asked.\n\nEmelie shook her head. She tried to pull the pants down some more as the other hand went for the big nuts. They were held closely by the wrinkled-up clothes, but she managed to get them out too. A big bouncy cock with wonderful big balls. It pointed far enough out from Flora's body that rain splattered on the head and top parts of the shaft.\n\n\"I'll show you that I have the skill to handle it,\" Emelie promised with a determined grin.\n\nShe knew her hands were cold, but she had to wrap them around the hard shaft. She could feel it pulsate, bringing warmth to her hands. Bringing warmth to her soul. This was what life was all about. Making big fucking futanari cocks cum.\n\n\"Girls as pretty as you shouldn't be doing things like this,\" Flora said, emphasizing how much she liked it with a deep inhale.\n\n\"You think I'm pretty?\" Emelie asked.\n\nHer hands slowly stroked the shaft.\n\n\"Pretty isn't the best word. Hot. Sexy. And with that dress?\" Flora said.\n\n\"You only say that because I'm about to put your cock in my mouth,\" Emelie said.\n\nShe saw how Flora shivered, wondering for a moment if the cold rain had gotten to her, but when she saw a big glob of clear liquid pump out of the swollen cockhead, she knew it was out of excitement. It was the perfect evidence that she was thinking with her cock right now, and her cock wanted Emelie to live up to her promises.\n\nShe licked it up, felt it coat her tongue. Her instinct was to swallow it, but she forced herself to hold it in her mouth letting the lovely taste spread across her tongue. It was so good. Everything she had craved the entire day and so much more.\n\n\"I've been needing a good blowjob for months,\" Flora said, her voice trembling.\n\nEmelie smiled. The rain could certainly cause some trouble here, but she wasn't going to let that stop her. She was the best cocksucker in the world, and Flora's cum would be hers. If her old girlfriend hadn't been to handle it, she figured Flora's balls might be bursting from all the love juice they held.\n\n\"If you can last for five minutes, we can go inside,\" Emelie promised.\n\nThe grimace on Flora's face showed that the DJ didn't have much faith in herself. Emelie didn't give her much of a chance either. She was too far gone.",
        "She held the cock away from the rain, kissing some of the water away from the head. Another big glob of precum emerged and she caught it with her tongue. This time she held it on her tongue as she pressed the cockhead past her lips, and then started to spread the precum all over the head.\n\n\"Fucking hell,\" Flora cursed.\n\nAfter bathing it with her tongue she took it deeper. The massive head tickling the back of her throat, her lips moving further down the shaft. It was a bit awkward in the position she held the cock to make sure the worst of the rain didn't get on it and into her face, and a lot of water came rolling down from her head and hair to make it even harder to suck properly.\n\nDespite that she knew she did an amazing job, encouraged by how Flora moaned faster and faster, and how her big-cocked lover kept trying to shrink herself, be it so she could survive the rain under the umbrella, or because her hips had to push forward to seek further pleasure.\n\nThis would make Flora cum fast, but she wanted to make her cum as fast as possible. She could suck cock for hours, but this wasn't the time and place for that. Flora had to cum fast, and keeping this up she might be able to survive for the five minutes. Therefore, she had to make her next move, and she angled the cock straight out, not caring about the rain, as she pushed it as far back into her mouth as it would go, before opening up her throat like she had learned to do for big futanari cocks.\n\nThe massive head teased the opening of her throat and moved forward, her throat expanding as it claimed its prize. She felt her body shiver in excitement like it always seemed to do when she forced her body to do the impossible. It felt so snug as the cock battled with her throat, and yet she knew there was more to come.\n\n\"No way,\" Flora moaned.\n\nYes way. One hand had a firm grip on the still exposed shaft, and the other hand fumbled for the balls. Once she found them she fondled them, barely able to keep both in the palm of her hand as they were too big, and kept on trying to push each other out as they both craved her full attention for themselves.\n\nOnce she felt ready, she pushed her face forward, feeling her throat stretching as more of the cock sank down her throat.\n\n\"No fucking way,\" Flora moaned louder.\n\nShe bobbed back and forth. Streams of water ran down her face, some even getting into her mouth, but she wasn't in a position where she could swallow it now. Giving a blowjob in the rain had been a bad idea, yet she loved it. She bobbed her head until she felt the hand on Flora's balls against her chin. She didn't quite have all of it, but she needed air, and to get the water out of her mouth, and most of all she knew Flora had a few seconds left before she would cum.\n\nShe pulled back quickly. The water tried to go down her throat, making her lightly cough before she got it under control, but sucking on the cock like a lollipop helped her instincts of swallowing, naturally kick in.\n\n\"How can you be that fucking good,\" Flora said through gritted teeth.\n\nEmelie knew how. Because she loved it. She loved sucking on big futanari cocks.\n\nShe sucked it hard. One hand stroking the bubbling balls while the other moved quickly over the shaft. She felt how Flora found her head with one hand and as she looked up, she saw how she was fighting against agonizing bliss. She figured it had only been two or three minutes, and it was almost shockingly easy to pull Flora towards her orgasm as she was dancing on the edge from the start.\n\n\"Cum for me,\" Emelie beckoned with her eyes.\n\nFlora didn't see her, but she knew her cock felt her commands.\n\n\"Fucking hell,\" Flora yelled.\n\nThe first massive jet of thick, strong, cum flew out at the same time as Flora yelled. A second followed together with a loud grunt, and then a third and fourth. Her mouth was filling up, not with water this time, but the loveliest cum she had ever tasted. Warm and tasteful. Pungent enough to fill her heart with strength to beat faster. She swallowed, and more cum followed. Flora's hips pumping back and forth, and Emelie following her movements to be able to catch all the cum in her mouth.\n\nTime after time she swallowed, and flora kept giving her more cum. She started to struggle to keep up, and just when she was about to give up and let it just flow wherever it wanted, be it out of the edge of her mouth or through her nose, the sperm onslaught stopped. She regained control, being able to swallow again, and sucking every last drop out of the magnificent cock.\n\n\"Fuck, that was the best,\" Flora stammered.\n\nShe felt the hand on her head go limp, and then she saw that Flora was about to fall. She put up her hands against the DJ's stomach, and with their joined effort she managed to stay on her feet. Seconds later the limpness had spread to Flora's cock, and she let it slip from her mouth.\n\n\"I'm pretty good, right?\" Emelie bragged.\n\nIf there was something she was good at, it was this.\n\n\"Yeah. Damn. How the hell did you learn all that?\" Flora panted.\n\n\"When you love doing something, you get good at it,\" Emelie said, smiling, \"But it wasn't fair, because you seemed to really need the release,\" she added.\n\n\"You had me going from the shower. And then seeing you look up at me as the rain fell over your face, I didn't stand a chance. I guess that means we need to stay out here,\" Flora said, submitting to her fate.\n\nThat was the deal they had made. Five minutes or they had to stay out in the rain.\n\n\"Let's make one more deal. If you give me another big load, we can do that indoors,\" Emelie proposed.\n\n\"Finally,\" Flora said.\n\nEmelie got up and started to correct her bathrobe. It was so heavy and full of water that it wasn't possible to make it look good anymore, but at least she could make it cover all the vital parts. Flora was trying to get her clothes in order too, holding the umbrella between her neck and shoulder because she needed both hands to button up her pants. Emelie tried to help her, but that only seemed to make it more difficult for Flora and she almost slipped, and Emelie caught her umbrella, holding it for her until she was finished.\n\nThen she made sure the shoe was still in her pocket, picked up the empty wine bottle, and danced out into the rain. The grass was wet and slippery, but it didn't matter anymore. She was coming late into the game, and Heidi had probably emptied Lindsey several times by now, but she had one on the board, and more were to follow.\n\n\"Wait up,\" Flora said.\n\nShe looked back and the DJ was trying to move faster too, but she was burdened with not wanting to fall, and not wanting to get too wet. Things that Emelie just didn't care about anymore.\n\nShe put the bottle back at the bar and twirled her way to the house. As she entered, the music stopped, and everyone turned to look at her again, but she didn't mind. Her curse had been lifted, and now with her belly full of cum, it didn't matter if people thought she was drunk.\n\n\"It's raining a lot out there, so I would recommend all of you to stay in here and drink, dance, and have the best time of your life,\" Emelie told them.\n\nA few seconds of silence, then someone cheered, and everyone joined in. The music started again, and as people didn't seem to care about her anymore, she moved across the room to the stairs, leaving a wet trail behind her as she transcended.\n\n\"Emelie? What happened to you?\" A voice sang.\n\nShe turned and saw Heidi standing in a doorway. Lindsey was lying on her back with her arms flailed out on the bed.\n\n\"What's the count?\" Emelie asked back.\n\n\"What count? Did you fall in the pool? And why are you wearing a bathrobe?\" Heidi asked.\n\nThat was unfair because Heidi was wearing a robe too. Even if it looked more like a kimono and didn't have any fluff on it at all.\n\n\"I'm fine. Anna gave it to me because she wanted to clean my clothes. How many times did you make her cum?\" Emelie said.\n\n\"Six. Have you had any luck?\" Heidi asked.\n\nThat was bad. She already got six while she was stuck on one. She could probably get a few more out of Flora but she might need to give up on the bet with Heidi.\n\n\"We aren't leaving yet, right?\" Emelie asked.\n\n\"Not yet. I'm just getting some refreshments. I think Lindsey needs a few bottles of water, and I need some wine and whiskey,\" Heidi said.\n\nLindsey looked like she was ready to call it a night. She had managed to get six loads out of her a few times too, but that had taken a whole day. Heidi must be pretty good if she had just done it in a few hours.\n\n\"Good. I still got some time then,\" Emelie said.\n\nShe looked down the stairs but could see that Flora had been stopped to talk to some people. That gave her some time to freshen up. It was warmer in here, but the wet robe still made her feel frozen.\n\nThe bathroom was just as she had left it, and she pulled the bathrobe down so she could step out of it, knowing the knot was probably impossible to get up after all the time in the rain. She jumped into the shower, finding the previous setting way too warm, needing to turn it down a few notches as she felt every part of her body warm up.\n\n\"Emelie, you in here?\" Flora called.\n\n\"Yes, just trying to warm up a little,\" Emelie answered.\n\n\"What the hell happened out there?\" another woman said with a firm voice.\n\nShe couldn't place it, so she turned off the shower and pulled back the curtain.\n\n\"Oh, it's you, Anna. Sorry for all the trouble,\" Emelie said.\n\n\"I got your clothes, but again, what the hell happened out there? Did you give her drugs, Flora? You know I don't approve of drugs,\" Anna said.\n\n\"You know I don't do drugs either,\" Flora defended herself.\n\n\"She kind of did,\" Emelie said, stepping out of the shower and finding her towel from before.\n\n\"Please explain,\" Anna said, her voice getting firmer.\n\nEmelie finished her quick drying with the towel, putting it up into her hair.\n\n\"I-,\" Flora said, unable to get any more words out.\n\n\"I was having a really bad day, but all I needed was a big load of futanari cum, and Flora provided,\" Emelie explained.\n\n\"Out in the rain?\" Anna asked.\n\n\"She wouldn't come inside unless I let her do it,\" Flora tried to excuse herself.\n\n\"Oh, I totally understand that you couldn't say no. I mean, look at her. But it looks like enough rain to cause flooding,\" Anna said.\n\nEmelie realized she was naked, thought about covering herself up, but then decided to not bother. She had a mission, and she might as well be naked for it. After all, Anna had already seen her naked twice already, and it was only fair she showed some inappropriate body parts to Flora after she had shown her biggest one.\n\n\"Oh, it's horrible out there. That's why we came in here so that I can make Flora cum again,\" Emelie said.\n\n\"Again? Also, cum better not be code for some drug,\" Anna asked.\n\n\"Just some very addictive futanari cum,\" Emelie said.\n\n\"She wouldn't come inside if I didn't promise we could do it again. Besides, she's good at it. Like, really good,\" Flora said.\n\nThe rain had washed away some of the taste of Flora from her mouth, and she was desperate to get it back again. She kneeled on the bathroom rug, wanting to show she was ready.\n\n\"You think you two can do that in here?\" Anna questioned.\n\n\"Yes,\" Emelie answered. \"if you don't mind.\"\n\nWhy not? It was nice and clean. Heidi and Lindsey were using a bedroom and there might be more of them, but she didn't want to waste time running around and look for somewhere they could be. That probably meant she had to put clothes on too, just to take them off once they were ready to go again. Staying here made the most sense. At least to her.\n\n\"You could always stay here and make sure we don't do anything weird,\" Flora said.\n\nWas this Flora trying to make sure they could do it in here or was she trying to replace Anna with her? She was hot and famous, and they seemed to know each other, meaning Flora might have had a massive crush on her from before, but she couldn't let that happen. She needed that big cock, and she wasn't ready to share the cum with anyone. After all, she had a contest to win.\n\n\"Hey, Emelie. Anna has a big cock too,\" Flora said.\n\nFlora started to undress, but as much as she wanted to watch that, her eyes were glued on Anna. She was decently tall but otherwise looked petite. Where Flora revealed a strong, athletic, body, Anna still looked like the model archetype, emphasized by how Heidi had said that it was how her career got started. She was hot but didn't seem like the big cock women she was used to with Flora, Lindsey, or her ex from last year.\n\n\"Please show me,\" Emelie pleaded.\n\nShe tried to find Anna's eyes to appeal with her that way. Make her look into her soul so that she could see how much she needed her cock too. Tried to make her mouth look sad, but it was battling with that darn creepy, cock addicted, cum hungry, smile she always got when the possibility to suck big futanari cock appeared.\n\n\"Are you okay with that,\" Anna asked her.\n\nOh, she was. She wanted all the big cocks in the world.\n\n\"Yes. If you let me suck on it and let me drink your cum,\" Emelie said.\n\n\"Maybe you need to show her what you can do,\" Flora said.\n\nThe DJ was already naked, her cock standing out and slightly up. Emelie beckoned her to come closer, and Flora quickly closed the distance. Her cock was amazing. She knew that from before, but she could see it in proper light now, and it was perfect.\n\n\"Your cock might be too big after all,\" Emelie said.\n\n\"What do you mean?\" Flora asked, sounding nervous.\n\n\"Too big for me to not suck on it,\" Emelie said, smiling wickedly. \"What do you want me to do?\" Emelie asked, looking up at Flora.\n\n\"Everything,\" she answered. \"Just don't make me cum in less than five minutes again.\"\n\nShe grabbed Flora's cock firmly with two hands. She could feel the blood pulsating through it with every heartbeat. It was a bit sticky already, and she imagined how it had been leaking out precum ever since Flora had orgasmed out in the rain. It had been beautiful when the glob had appeared before, and she wanted to see if she can get it to do that again.\n\nShe leaned closer, holding the cock so that it pointed up, feeling how it hardened and how Flora readied herself, but when her lips were an inch away she stopped, and instead blew a gentle stream of air against the shaft, slowly moving upwards until she reached the head. Flora moaned, and just as she was about to reveal her joke about it being a blowjob, a large glob of the shining, clear, liquid appeared. It held like an oversized drop of water for a second until it grew too large and instead spread out all over the head.\n\nHer mind almost broke. She knew she had tried to make it happen, but watching it made her so excited and thirsty for it that she had a hard time holding back. She had a plan though and needed to follow through.\n\n\"Everything?\" Emelie asked. \"I could kiss it,\" she continued, giving the shaft a soft kiss.\n\n\"I could lick it,\" she added, putting her tongue between Flora's big, juicy, balls and then slowly dragging her tongue up until it touched the precum.\n\n\"Bath the head with my lips and tongue,\" she went on, sucking on her tongue as she spoke and desperately needing more of the lovely juice as her lips encircled the head and her tongue started to dance as she moved her mouth around.\n\n\"Oh, my fucking god,\" Flora said.\n\nShe had thought Flora would have more staying power this time, but one load had clearly not been enough to stave off her built-up sexual need, and Emelie knew it was in her power to decide if she would last past five minutes this time.\n\n\"Or I could eat your pussy,\" Emelie said.\n\nShe might not be as good at sucking on pussies as she was sucking cock, but she didn't want to neglect them. Her hands seemed to refuse to want to leave the strong shaft, so she had to get her head down, the heavy balls resting on her face as her tongue found Flora's wet pussy. Mixing the wonderful taste of precum and pussy juice.\n\n\"But what you want the most, is for me to deepthroat you, isn't it?\" Emelie said, licking her lips not allowing anything to go to waste.\n\n\"No way,\" Anna said.\n\n\"You don't think I can do it?\" Emelie asked.\n\nAnna looked doubtful but didn't say anything.\n\nEmelie took the cue, shuffling herself a few inches back on the rug, holding Flora's cock straight out. Looking at Anna, she let the big head stretch out her lips as she took all of it inside her mouth. She used her hands to help guide it to the correct spot at the back of her throat, and then pushed lightly against the head with her throat, feeling how it wasn't going down right and giving it a quick reset.\n\nOn the second try, it worked, and she felt her throat bulge as Flora sunk deeper. Anna had taken a step closer to be able to see better, and it was clear she was excited too as she blushed and seemed to struggle to keep control of her hands as they kept wandering to her crotch.\n\nFor the next part, she had to stop looking at Anna, as she started to bob her head, taking more cock with each movement forward. Her hands had to move away, and instead, she put them on Flora's ass, pushing her forward, and soon the wonderful futanari cock was fully embedded down her throat.\n\nShe circled one hand around Flora's leg and stroked her pussy, while the other one reached Flora's balls from the front. She felt Flora tense up, only allowing her a few more bobs with her head, simultaneously stroking balls and pussy, before she felt that Flora wouldn't be able to hold back.\n\nShe pulled back, needing to move her hands way to be able to get far away enough to catch her breath.\n\n\"Fucking hell,\" Flora said.\n\nShe expected her to cum, but either Flora had learned something, or she was better at holding back after coming once. She took her back in her mouth, but she could sense that Flora had regained enough composure to not start spewing sperm uncontrollably.\n\n\"Shit,\" Anna said.\n\nShe let Flora slide from her mouth as she wasn't going to be coming right now anyway and saw how Anna went for the door. She had put on her best performance, but now it seemed that hadn't been enough to sway their host. Her dream that she would be able to catch up to Lindsey and her date was lost. It was a major setback, but she still had one dream cock to take care of, and she wouldn't let losing one make her forget about the fun she could have with the one remaining.\n\nThe door clicked, and it wasn't until Anna had turned around and started to take her top off, that Emelie realized Anna had locked the door. Her top went flying and then she put a hand down on the floor, pulling her pants down to her knees as she did some kind of one-handed cartwheel, and then as she landed using the momentum to bounce into the air, removing the pants completely before landing.\n\n\"What the hell was that?\" Emelie asked.\n\n\"Capoeira, or rather, Flora had her fun and now it's my turn,\" Anna said.\n\nAnna threw her bra away, exposing small but perky breasts, and next went her cock-covering underwear, showing a magnificent futanari cock. It was at least as big as Flora's, but on Anna's skinnier frame it looked much bigger.\n\n\"This must be the best day of my life,\" Emelie said.\n\nShe held Flora with one hand, and as Anna stepped up, she grabbed her cock with the other.\n\nTwo wonderful cocks, and they were just for her.\n\n\"I thought you were having a bad day,\" Flora countered.\n\n\"Nothing a big futa cock couldn't fix,\" Emelie answered, \"but two of them? That is as good as it gets.\"\n\nShe stroked them slowly. Felt them pulsate. Felt how they wanted her.\n\n\"We can do whatever you want, as long as you cum in my mouth and let me swallow it,\" Emelie promised.\n\n\"Then I think we might be the ones having a good day,\" Anna said.\n\nShe took Anna's cock in her mouth. Swirled her tongue around it. She had never known that Anna was one of the chosen ones, but now she understood why she had become a star. Having a cock like this must give anyone that had it the power and confidence to accomplish anything.",
        "Not wanting Flora to feel like she had been forgotten, she moved her mouth to her. Giving her the same tongue treatment after closing her lips around the head. Reveling in her taste. Sucking hard as she swirled her tongue around the other woman's cock.\n\nAnna's cock twitched in her hand, and she saw that as a sign that she needed her now. Flora fell from her lips, and they quickly found Anna's fullness instead. This time she wanted to show Anna that what she couldn't believe was real, would now be real for her too. The head found the back of her throat, and on the first attempt, she swallowed it. She heard Anna moan, but she pushed her throat further. All the way, until her lips kissed the base.\n\nShe felt Anna's muscles tense, and this time she wouldn't let her prey escape. She bobbed her head, hearing herself make unnatural sounds as the oversized phallus went back and forth in her throat. Every bump bringing Anna one step closer to the inevitable.\n\nNot wanting to let go of Flora, Emelie only had one hand that she could use to help her that wasn't preoccupied with Anna. She let her free hand find Flora's pussy, rubbing it frantically as she bobbed. Her air was getting low, but she kept going for as long as she could, and as she pulled Anna out of her throat, pulling her out of her mouth to take a deep breath, cum started to cover her face.\n\n\"So fucking good,\" Anna moaned.\n\nThe surprise made her lose her focus and a second big load sprayed over her before she could get Anna back into her mouth. She caught the third rope on her tongue and then could control Anna perfectly as she kept pumping cum into her mouth as Emelie swallowed it greedily. This was the best. Getting covered in cum and then swallowing it.\n\n\"I don't think you made it five minutes either,\" Flora said.\n\n\"That means I just get to go again,\" Anna countered. \"If you're up for it, of course, Emelie.\"\n\nShe was. She would make them cum as many times as they could. She needed it if she would be able to match Heidi's six loads from Lindsey.\n\nAnna's cock was losing its hardness. Emelie tried to stroke it to see if she could get it back, but it felt like it wasn't ready yet. She didn't want to give up on it, but it was also Flora's turn for her special care.\n\n\"You said we could do whatever we wanted, right?\" Anna said.\n\n\"Yes,\" Emelie answered.\n\nShe took Flora in her mouth and started to circle her tongue as Anna stepped away, forcing her to let go of her cock.\n\n\"What are you going to do?\" Flora asked, struggling to speak clearly as moans seemed to want to come out instead of words.\n\n\"I'm going to show her that I'm as good at eating pussy as she is at sucking cock,\" Anna said confidently.\n\nAnna got behind her and helped her stand up and split her legs. Then Anna laid down, and Emelie sat down on her face. It sent electricity all through her body as she had been horny ever since she first heard about Flora having a cock. When she felt Anna's lips find her pussy she moaned onto the cock.\n\n\"So good,\" Anna complimented.\n\n\"Save some for me,\" Flora said.\n\nThere would be plenty to go around. Emelie could promise that. The bigger question was if she could make it past five minutes. Anna's tongue had the perfect mix of softness and roughness to it, and as it slid back and forth between her pussy lips it made her entire body shiver. She was good. Very good.\n\nShe tried to take her mind away from it. Let her body enjoy it while she focused on something else, and that something could only be Flora's big cock. She bathed it with her lips and tongue, letting saliva run down the shaft before she took it down her throat. The lubrication helped her take more of it deeper in one go, trying to spread more saliva down the shaft so that she could work on it properly.\n\nSuddenly it felt like a bolt of pleasure went through her body, quickly alerting her to what Anna was doing. As she was digging her face deep into her pussy, her nose had gotten to a perfect place to rub over her clit. Up, down, left, and right it went over her sensitive area as Anna moved her tongue and lips around and over her pussy. She was going to lose it, and she had to quickly get Flora out of her mouth so she could gasp for air, closing her thighs around Anna's head as she fought against the pending orgasm.\n\n\"Is she good?\" Flora asked.\n\nShe couldn't answer but just nodded her head. Really good. I need to cum right now kind of good, yet she managed to hold out. Regain control of her body and breathing, then she assaulted Flora's cock again. She didn't want to waste any time. She needed it deep down her throat, and she pushed hard until it lodged itself down there.\n\nFlora seemed to take the cue, moving her hands to her head, holding it as she started to move her hips. Now she could focus on using her mouth, tongue, and throat to make Flora feel good, while the perpetual motion was in Flora's hands.\n\nBut it alerted her to what Anna was doing again. Her tongue was like a miracle, able to do things to her pussy that she never had felt before. Getting cock-pounded in one end and tongue-tied in the other was too much. She tried to fight against it, but she knew that no matter how hard she tried it wouldn't last long. Instead, she tried to bring Flora with her. Trying to contract around her to give her as much pleasure as possible.\n\nThe momentum had undone the towel on her hair, and as it covered her eyes, somehow staying on her head as it flowed down her back, she felt Flora's grip tighten. She couldn't see, and she had been ready to surrender to Anna's tongue, but now she knew it was almost time for Flora, and she had to hold on for a little longer. Flora tried to slow, but Emelie pushed her head back and forth, not allowing it, feeling how Flora danced closer and closer to the edge until Flora pulled away. Emelie let go at the same time too, covering Anna's face, just as Flora pulled the towel away and started to coat her. She knew Anna had already planted two thick ropes on there, but Flora evened it out at ten ropes total before she stuck her cock into Emelie's open mouth to finish off.\n\n\"Fucking hell,\" Flora said.\n\n\"I'll be damned,\" Anna added, mostly muffled.\n\nEmelie was too busy to get the last drops out of Flora to speak, and then when nothing more wanted to come out, she instead started to shuffle cum from her face into her mouth. It was nice to have cum on her face, but it was just for safekeeping so she could swallow it.\n\n\"I knew I could make you cum,\" Anna bragged.\n\nShe hadn't even noticed that Anna had slid out from under her, and she now got her cock in her face, lacing it with cum, and feeding it to Emelie.\n\n\"Quite sure I lasted more than five minutes though,\" Emelie countered between sucking the cum on her face from Anna's cock.\n\nAnna was good, just not as good as her.\n\n\"We'll see about that,\" Anna said.\n\nIt was a strong promise, emphasized by Anna's hardening cock. When Anna was done wiping cum from her face, she grabbed Emelie's shoulders and using some martial arts move, Emelie felt her body first move to the right, then backward and her feet somehow slipped out from under her on their own as her back met the soft rug.\n\nShe half expected Anna to just take her, and she was ready for it, but instead, her breasts got attacked. One by a gentle hand, and the other by a greedy mouth. Her chest smothered and devoured by Anna's wild touch. It was too much. Overwhelming. Yet she craved it. Her sensitive body feeling like it would break from the burden of pleasure.\n\nWhen respite came, she managed to take a big breath of air as Anna shifted positions and her attack reversed. One hand rubbing her saliva-soaked breast while the other was pleasured by an exploring tongue. Then she felt Anna's hard cock push against her body, and Emelie couldn't stop her hips from gyrating against it. As much as she had been walking around for most of the day wanting to suck cock, her body now demanded to get fucked.\n\n\"Can you time us for five minutes?\" Anna asked Flora.\n\nThis was unfair. Anna had her worked up and starting the timer now must break all rules. She had spent a few minutes on her chest already, and they should count that too. Especially the humping and rubbing. She loved pushing herself against a big hard cock, and with the anticipation that it would soon be inside of her, it drove her body to the brink of sexual excitement.\n\n\"Starting timer,\" Flora said.\n\nAnna leaned in close, making Emelie anticipate a kiss. Yet, their lips didn't meet. She had never wanted to kiss anyone more as she felt Anna's breath against her lips and cheek. She tried to reach up, but Anna pulled away and then pushed her down again. Their lips were getting closer anew, but this time she also felt Anna push against her pussy. The hard head pushing her open and even with the enormous size, she felt like it easily entered her. Stretching her body as only a big futanari cock could.\n\n\"Oh my god,\" Emelie moaned.\n\n\"Yeah, you like that?\" Anna asked.\n\nShe couldn't answer. Her body was going into overdrive. Anna was going deeper, and every inch was making her want to cum. She tried to pull Anna closer so they could kiss and take her mind off of the pleasure, but of course, Anna pulled away again, arching her body which made her drive her cock deeper.\n\nThe only thing Emelie could do was accept her fate. She wrapped her legs around Anna, pulling her closer into her. Her body getting so filled up that she felt like Anna was even reaching into her soul. She tried to get Anna to kiss her, but again her attempts were thwarted.\n\n\"Cum, and we can kiss,\" Anna offered.\n\nHer head spun. She had wanted to kiss to take her mind away from needing to cum, but now when the opposite theory was presented, her hips started to move. She felt them chase after pleasure. A pleasure that would show Anna that she was both willing and able to cum for her, in pursuit of a taste of her wonderful lips. She tried to tell her hips that it was too soon, but they didn't listen. They belonged to Anna now.\n\n\"Cum for me,\" Anna whispered.\n\nAnd she did. Her body shuddered. Once, twice, and then it was lost in shuddering madness. Her muscles spasmed over Anna's cock as Anna's lips pressed against her own. She kissed her passionately as it felt like the world kept crashing around her, only to be brought back, and to crash again. It might be the greatest kiss she had ever had.\n\n\"Less than five minutes,\" Flora said.\n\nThe orgasm ended, and even if she had liked to keep the kiss going, she needed air.\n\n\"We know our stuff too,\" Anna said, grinning.\n\n\"I liked it, but with the foreplay, it was at least ten minutes,\" Emelie argued.\n\nNot that she minded. It was all great.\n\n\"That is a fair point,\" Flora agreed.\n\n\"Do you think you can do better?\" Anna asked.\n\n\"Not yet,\" Flora answered, swaying her cock to show that she hadn't recovered yet.\n\n\"Good, because I'm not ready to give up this pussy yet,\" Anna said.\n\nAnna restarted the kiss, moving Emelie's legs up as the still hard cock danced inside of her freshly squeezed pussy. Emelie tried to give herself to Anna's lips again, but instead, she found her world turn as Anna pulled her to the side, guided by kiss and cock, and then Anna was on her back and Emelie was sitting on top of her.\n\n\"How did you do that,\" Emelie asked.\n\n\"Capoeira stuff,\" Anna answered.\n\nIt was weird how someone that didn't look strong could manipulate her body so easily. It was exciting to not be able to resist when she wanted to move her body. The new excitement drove her to want to show Anna that she had other tricks up her sleeve aside from giving blowjobs.\n\nShe put her feet down, adjusting her body so that she could ride properly, and then started to move. Slowly letting the massive intruder move using the abundance of liquids her body had coated it with. It filled her so well. Just how a cock should.\n\n\"Remember that I need you to cum in my mouth. When the sexual prowess of my pussy becomes too much, you need to make sure I swallow it all,\" Emelie instructed.\n\n\"I will,\" Anna said.\n\nShe started to move faster. Moving higher up as she started to bounce on Anna. Her buttocks moving against Anna's thighs before the trajectory reversed and sent her up into the air again, only Anna's big, strong, cock making sure she stayed on course.\n\n\"Shit, that's good,\" Anna said.\n\nIt was getting to her head, and she had to stop her bounce for a minute to recover, pushing her pussy down and rubbing it in circles, only to realize it felt like it was stirring her insides and that only made things worse. Anna's cock was just too good, and she started to bounce again, slowly at first and then going faster. She was going to cum soon if she didn't find a distraction again.\n\n\"Flora, has anyone ever eaten your ass?\" Emelie asked.\n\n\"No way,\" Flora answered. \"You do that too?\"\n\n\"I would love to, if you want me to,\" Emelie offered.\n\nFlora flew off the bench, her cock rising as she took a stance over Anna, her ass in Emelie's face.\n\n\"You have a nice ass,\" Emelie said, spreading the DJ's buttocks, \"and an even nicer asshole.\"\n\nShe gave it a quick kiss, and she saw how Flora leaned forward, and how her cock grew. She took both hands and placed them on the shaft, the position forcing her face into Flora's ass to make sure she reached. It wasn't easy to bounce on Anna and hold Flora's cock while eating her ass, but she gave it her all.\n\nAnna met her bounces by thrusting her hips up, and Flora tried to match her movements. Emelie did her best to try and keep her lips locked against Flora's asshole. It took all her focus to keep the rhythm going, and she pushed her tongue out, hoping it would lock into place in Flora's ass and help her keep the position, but when Anna would make a powerful thrust her tongue didn't have enough strength and leverage. Not that it ever took long for her lips to find their target again.\n\nShe thought the distraction had worked, but when Anna found her breasts again, each hand teasing a nipple, she knew the gig was up. She tried to move her hands faster over Flora's firm phallus, and dig her face and tongue even deeper in, but it didn't help.\n\nShe sat down, hoping that stopping her movement would give her enough control to stay dancing on the line of orgasm, but again her hips couldn't stay still, and Anna continued to move too, meaning the big cock stirring around balls deep in her only heightened her feelings.\n\nShe shook. Shook again. Pulling herself away from Flora's ass as she craved oxygen, her lungs filling up with air, just as her body filled up with all the naturally created drugs the body used to make orgasms feel as good as they do.\n\n\"Fuck,\" Emelie screamed.\n\nHer hands had a solid hold of Flora's cock, but it was her pussy that showed its power by spasming and strangling Anna's member.\n\n\"Shit,\" Anna answered.\n\nShe felt how the actor tried to lift her off, her pussy cramping too tightly for Anna to be able to dislodge her at first, but as that wave subsided, Anna finally managed to slink out from under her. Flora pulled away too, able to find a moment between Emelie's blissful shakes.\n\nEmelie sat on the floor, trying to get a grasp of what was happening. She tried to put a hand down to her pussy to stop the worst of the orgasm, but she couldn't help herself from rubbing her own clit, and she just kept coming as the two big futanari cocks appeared in her face.\n\nEven as her mind couldn't quite comprehend, her body seemed to know as her mouth fell open, and she felt how a strong stream of liquid hit her tongue. She recognized the taste. It was cum. Warm, lovely, cum. More of it sprayed over her. Covering her eyes. Spraying into her nose. Flowing over her chest, but most of all it blew into her mouth. Two massive loads of thick, sweet, addictive futanari cum.\n\n\"You're amazing,\" Anna said.\n\n\"My balls hurt,\" Flora added. \"I think I've been coming too much.\"\n\nEmelie wanted to kiss Flora's balls and show them that she had appreciated their hard work, but cum was dripping from the cockheads, and her mouth gave each a quick, hard, suck to make sure they had both been emptied, and then some more sucking just in case.\n\n\"Quite sure I've never come this much in my life,\" Anna agreed. \"Now, who won that round?\"\n\n\"Me. I got two big cocks, and two big loads, so I absolutely won,\" Emelie said.\n\n\"Fair,\" Flora said.\n\n\"I can't believe how good that was,\" Anna said.\n\nEmelie felt a smile spread over her lips. She knew she was the best, but it still felt good to hear it. It took a lot of hard work, but the rewards were always worth it. She laid down, feeling how her cum covered body had done everything it could do to extract as much cum as her new friends could give, and yet it had not even brought her up to a tie with Lindsey and Heidi.\n\n\"I need a drink,\" Anna said.\n\n\"Me too. A nice cold beer,\" Flora said, trying to walk, but it looked like moving hurt her.\" Or two, because I might need one to cool down my balls too.\"\n\nEmelie wanted a beer too. She still hadn't been able to get anything alcoholic to drink tonight. Even if she preferred cum, beer was well needed now too.\n\n\"I'll get us some. Did you want something too, Emelie?\" Anna asked.\n\n\"Yes, please. Anything. A beer. Wine. More cum,\" Emelie answered.\n\n\"There is no more,\" Flora commented.\n\nThere needed to be more. She was full, but not as full as before, and no matter how full, there was always room for cum. Five loads had been received making her only one behind Heidi, and that was if she hadn't been able to force some more out of Lindsey. Her best friend had looked almost dead, but Who knew what magic powers Heidi might hold, she certainly looked enchanting enough.\n\n\"I'll be back in a second,\" Anna said, stepping out the door.\n\nNo, if she was going to have a chance to win, she needed to up her game. Lindsey might have been close to death after six, but she should be able to recover enough to give one more to Heidi before the night was over. Certainly, Heidi would understand from their last encounter that Emelie was hard at work now and that she needed to use her Icelandic prowess to lure Lindsey into producing more. Flora might be struggling, but if Lindsey could do more, then Flora could too. At least if she had proper motivation.\n\n\"It's a shame you don't have it in you to try my pussy out,\" Emelie said.\n\nShe was still spread out on the bathroom rug, looking up into the ceiling. She had to sit up to see Flora, and she didn't have the energy for that yet, but she could hear her move on the bench.\n\n\"I know I would have loved it, but I do understand that cocks have their limitations. No matter how big and strong they are, there is a point when they aren't up to the challenge anymore, you know?\" Emelie said.\n\nIt felt cheap. Challenging Flora by hinting she couldn't handle it.\n\n\"Ugh,\" Flora answered.\n\nIt was hard to know what she meant. Especially since she couldn't see her. At least she should have her attention now. While she thought about what to say, she started to guide the abundance of cum from her face into her mouth. Why was cum so good? The taste. The texture.\n\n\"Do your balls hurt?\" Emelie asked.\n\n\"More and more,\" Flora said. \"I think they are complaining as they start to realize they aren't done yet.\"\n\nNot done?\n\nShe sat up, looking at Flora on the bench. She looked like she was in pain. Her cock was vibrantly hard, sharing a reddish color with her balls. They were taking part under protest, but they were clearly showing that they were doing their job.\n\n\"Really?\" Emelie asked.\n\nFlora stood up, her cock taking a bow, jiggling a few times, before standing straight again. It was kind of cute. Flora didn't look like she could handle anymore, but the lure of Emelie's sweet pussy spurred her on to push herself. Forcing her to take the pain for a boost of pleasure.",
        "\"Do you want me to kiss it and make it better?\" Emelie asked, pouting her lips.\n\n\"Ugh, no. I can't handle your mouth anymore. I need you on all fours so that I can see if everything about you is just as sweet,\" Flora said, limping as she closed the distance.\n\nAs fast as she could she flipped, got her legs in under her, and her hands planted firmly on the soft rug. Cum dripped from her chest, and she hoped Anna didn't mind the bathroom rug getting messy, but it was too late to care about saving it anymore.\n\n\"Like this?\" Emelie said, looking over her shoulder.\n\nFlora didn't answer but instead just got her face in between her thighs, nuzzling her pussy. She had wanted to get stuffed and was a bit disappointed at first, but a good tongue was almost as good as a big cock, and Flora was one of the best. Her ex-girlfriend must have been crazy to leave her.\n\nIt didn't last long though as Flora moved her mouth up to her ass, returning the favor with some special butt kisses.\n\n\"You taste really good, but I need to fucking do this now, or I will die,\" Flora stated.\n\nFlora's mouth left her behind, and Emelie stuck her bum back to make sure Flora had full access. The warm, swollen, cockhead pressed against her pussy, pushing between her folds as it started to claim its place.\n\n\"Are you sure you can handle it?\" Emelie asked.\n\nFlora answered by grabbing her hips and forcing all of her cock in, balls deep. It filled her up perfectly. Like the big cock was made for her.\n\n\"I was going to say of course I can handle it, but I need to be honest. My cock is very sensitive right now, and your pussy is much better than I thought any pussy could be,\" Flora said, gritting her teeth.\n\nDamn right her pussy was good. Flora had stopped moving, clearly trying to make sure she had control of all her senses before continuing, but Emelie didn't have time to wait for that. She started to move slightly back and forth, gripping Flora tightly with her inner muscles.\n\n\"Remember that I need to swallow your cum, so no ejaculation inside of me,\" Emelie teased, knowing it might happen.\n\n\"Fuck,\" Flora answered.\n\nShe didn't want her to cum, but at the same time, if she did, that would prove that she was the best in the world in making futanari women cum.\n\n\"That big dick can't handle me?\" Emelie continued.\n\nIt made Flora tense up, and Emelie was sure she was going to cum. She readied herself to pull away and turn around, but instead, she felt Flora grip her harder, pulling her cock back, and then shoving it forward.\n\n\"I'll show you I can handle it,\" Flora said.\n\nFlora continued, moving her hips and putting more force behind each thrust.\n\n\"Oh, fuck that's good,\" Emelie moaned.\n\nFlora meant business. Emelie felt like this was the last the DJ had to give, but she was going down swinging.\n\n\"What the hell? I thought you were done,\" Anna called.\n\nEmelie looked behind her, seeing Anna entering with a towel wrapped around her, carrying a tray with beers and wine. She didn't seem happy, but as she put the tray down on the bench Flora had been sitting on, and let her towel fly, it was clear she was unhappy that she had been missing out.\n\n\"My turn to get my ass eaten,\" she said.\n\nAnna laid down, cock, balls, and pussy right in Emelie's face, and then she shifted her body so that her pretty ass rose from the rug, showing her exposed asshole. Emelie was barely hanging on from the rough pounding, but she wasn't going to let that get in the way of rimming Anna's beautiful butt.\n\n\"She said that I wouldn't be able to handle her pussy, so I had to show her,\" Flora said.\n\nThe hard thrusts from Flora pushed her further into Anna's ass. She had been wanting to kiss it, but now when she was being forced forward her tongue stuck out involuntarily, eagerly probing as deep as it could go. Eating ass was one of the nastiest things she knew how to do, and that made it so much better.\n\n\"Well, can you?\" Anna asked.\n\n\"Barely,\" Flora said, gritting her teeth again.\n\nEven if her pussy was too much for Flora, Flora was still going hard. Her pussy was getting worked, and it was everything she wanted it to be. It was again proof that this had gone from a bad day to the best day a girl could hope for.\n\n\"I think Flora got her cock stroked during the rimming,\" Anna said, making it sound like a demand.\n\nThat was true. She thought about using both hands, but in this position that wouldn't be possible. She needed one to make sure she could take the pounding and keep her face in position, but she let one of her hands find Anna's hard cock. She was going to make them both cum.\n\n\"Yeah, that's what I needed,\" Anna said.\n\nHer next move would seal the deal. With her hand on Anna's cock, and her mouth and tongue on her ass, it meant her nose was close to her pussy, and with a small shift that is where it ended up. Anna had joined them late, but the triple stimulation made sure that she was helpless in holding her pleasure back.\n\n\"Oh, you're good,\" Anna moaned. \"Shit, if you want to swallow it, you better be fast,\" she added.\n\nEmelie removed her tongue, lifting her head and pulling Anna's cock closer with her stroking hand. The first jet fired straight up into the air, looking like it had enough force behind it to reach the ceiling. She followed it with her eyes as it came a little short, then the cock violently vibrated again as the second fire went off, closely missing a collision with the first one that had started to fall.\n\nIt was spectacular. Like a show of fireworks, and she wanted to see more of it, but her mission for tonight had to come first. She got her mouth on the big head, catching the rest of the massive volleys and trying her best to swallow them. Her mouth overfilled, and she felt how some poured out of her mouth and down the thick shaft. She sucked all the cum out of Anna, and when the stream started to dry up, she took her deep down her throat in appreciation.\n\nWhen she pulled back, she saw another cock point in her face. She hadn't even noticed that Flora had stopped fucking her as she was busy swallowing cum. Flora didn't want to be ignored any longer, as she pulled her up from all fours to her knees, pushing her hard cock not only into her mouth but down her throat in one swift motion. Emelie could only accept her position, as cum started to erupt straight down her throat, filling her stomach with the seventh load of cum for the day. Flora was relentless as her sore balls seemed to work double duty, pumping barrage after barrage into Emelie. She struggled for air, and just as she started to feel that the world was fading, Flora was finally finished and pulled out.\n\nShe saw how Flora collapsed, taking a step away from Anna, then collapsing on her knees and slumping backward, and Emelie wasn't any better as she fell headfirst on Anna. Her face was greeted with something wet and sticky, and she assumed her cheek had found the cum that Anna had discharged into the air.\n\n\"I think I'm dead,\" Flora commented.\n\n\"This would be the way to go out,\" Anna added.\n\nEmelie smiled. Not only was it her best night ever, but she had made two new friends very happy too. There was also a chance that she had just sealed her victory too. She wanted to find Heidi so that she could ask, but she just needed to rest for a bit first. It had taken a lot of work, but she was immensely proud of her accomplishment, breaking her record for the number of loads swallowed in a day.\n\n\"What happened in here?\" A voice sang.\n\nIt was beautiful, and she knew it must be Heidi.\n\n\"By the way, I met Heidi and her date, and they are stopping by,\" Anna said.\n\nShe had wanted to stay like this forever. Just laying on Anna's body. It took all her strength to sit up and turn around.\n\n\"I won!\" she said, not able to contain her happiness. \"I told you I could do it.\"\n\nHeidi was as beautiful as ever, but Lindsey looked even worse than before. Like all life had been drained from her, her knees shaking as she leaned on Heidi to not fall over. It made her worry. Not for Lindsey's health, but how many more times Heidi had made her cum.\n\n\"I got three more than what I told you earlier,\" Heidi said, smiling.\n\nNo way. three more? That meant nine total. How was that even possible? What kind of monster would make someone cum nine times? Flora had not even done half of that, and she looked like she needed medical care.\n\n\"How?\" Emelie said.\n\n\"I couldn't let you win,\" Lindsey answered, her voice sounding like the whisper from a deathbed.\n\n\"How many did you get?\" Heidi asked.\n\n\"Seven. I thought that was enough,\" Emelie cried.\n\n\"And we got nine. Sorry, but that means I win, and you're going to be a model,\" Heidi said.\n\nNo! That wasn't fair. She had worked so hard, and her friend had risked her life to betray her. She had to do something.\n\n\"Anna, Flora, you need to help me,\" Emelie begged.\n\n\"I don't think I can handle anymore,\" Anna said.\n\n\"I will never cum again,\" Flora promised.\n\n\"Accept your defeat,\" Heidi gloated.\n\nThere was still time. She just needed to find another big cock. Someone that could cum quickly a few times. She jumped up on her feet, striding past Heidi and Lindsey and to the door.\n\n\"Wait, you need clothes,\" Heidi protested.\n\nThe time for clothes was over. She couldn't waste another second.\n\nThe party seemed to have quieted down, and even if there were still a lot of people, it wasn't as many as before. There were a group of three women and a man standing by the railing, and Emelie quickly stepped over to them.\n\n\"Do any of you women happen to have a big cock and would like a blowjob?\" she offered.\n\nThey all looked at her, not too happy about her being naked, and perhaps able to guess that the shine on her face and chest came from cum.\n\n\"I could help,\" the man offered.\n\nEveryone turned to him for a second, then decided to ignore him.\n\n\"I'm afraid we can't help you. Besides, shouldn't you be worrying about getting some clothes instead?\" one of the ladies said.\n\n\"No, I need cum, goddammit,\" Emelie answered.\n\nShe started to walk away, hearing how one of the ladies told the man his penis could never be considered big, but that she liked him anyway.\n\nShe headed for the stairs, seeing another woman stand there all on her own, leaning against the railing halfway down the stairs. She was older, as her hair had some grey in it, but that didn't matter right now. She only needed one thing.\n\n\"Please give me cock,\" she called when she reached her on the stairs.\n\n\"Excuse me?\" she answered, starting to turn around.\n\n\"I need c-,\" Emelie started.\n\nWhen the lady turned and Emelie saw who it was, she took a step back, tripped on a step, and awkwardly fell on her behind. The woman towered over her, just as she had imagined she would during all the times she had fantasized about her.\n\n\"Professor Tannen,\" she whispered.\n\n\"Yes. Emelie, isn't it?\" Professor Tannen answered.\n\nShe knew who she was. Normally that would be a good thing, not getting lost among the faces of everyone else she taught. Being naked and covered in cum, it might be a bit worse that her favorite professor knew exactly who she was.\n\nAt the same time, she had been dreaming of a chance to suck on her cock for almost two years, and this would likely be the only chance she had to accomplish it.\n\n\"Please let me suck your cock,\" She begged.\n\nHer professor didn't seem pleased with the suggestion, but Emelie tried her best to plead with her eyes, hoping that if she batted enough with her eyes, she could sway her heart.\n\n\"You know I can't do that,\" Professor Tannen answered.\n\n\"Please. I'm really good, I promise,\" Emelie pleaded.\n\n\"It's not about that. I would get fired if anyone found out I had spent time with a naked student,\" Professor Tannen said.\n\n\"That means you would let me do it if I wasn't your student?\" Emelie said.\n\nShe felt that smile coming back. The one she got when the possibility to suck big futanari cock was imminent.\n\n\"You are a bit young, but I know you are pretty bright from the work you have put in. Your enthusiasm is inspiring, I can tell you that. I haven't been able to decide if you being naked would make me keener, or if it should worry me that a pretty girl like you is running around naked late at night asking people at a party if you can, well, you know,\" Professor Tannen said, looking a bit embarrassed about the blowjob part.\n\nIt was clear she liked her. She was babbling nervously to try and cover for it. She just needed to trick her into a situation where her reasoning to not get her cocked sucked stopped being valid.\n\n\"That is very sweet of you, Professor Tannen, and it means I must apologize,\" Emelie said.\n\n\"What for?\" Professor Tannen asked.\n\n\"I'm your student, I'm naked, and I'm quite sure everyone down there has already noticed us two together,\" Emelie said.\n\nProfessor Tannen looked behind her, noting that some people looked away quickly so that she wouldn't see they had been staring.\n\n\"It looks like I've accidentally put you into a position where your job is at risk, and for that, I apologize. Now, my friends are up there, and I think we should join them so that we can clear up the situation,\" Emelie said.\n\nEmelie stood up and took a few steps up the stairs.\n\n\"I shouldn't,\" Professor Tannen said.\n\n\"I insist. You see, all the people down there can testify that you were with a naked student at this party, but I'm certain that if we go up there, we can talk to Anna, Flora and my other friends, making sure that they can prove your alibi, and if anyone down here was to tell on you, we create a scenario where we can prove that nothing happened,\" Emelie argued.\n\nShe could see the inner struggle in Professor Tannen as she tried to weigh two bad scenarios against each other.\n\n\"They are truly up there?\" she asked.\n\n\"Yes. I had an accident earlier. Well, a few. They helped me, and now they are both up there,\" Emelie said.\n\n\"You were the one out in the rain?\" Professor Tannen asked.\n\nEveryone probably knew about that. It didn't matter anymore. Her day had turned around since then, and she knew it would soon be even better.\n\n\"Yes. Anna had to wash my dress too, because Flora got beer all over it,\" Emelie said. \"Now, are you coming so we can clear this up? I really hope there isn't anyone connected to the university down there.\"\n\nShe saw how her professor resigned to her fate. Taking a deep sigh as if she knew this was a bad idea. It gave her the feeling that there might be some other professor, or maybe a member of the board attending the party. Either way, Professor Tannen started to climb the steps. Emelie ran ahead of her. She wondered if Miss Tannen already knew that she wouldn't leave this party with any cum left in her balls?\n\n\"I'm just coming with you so that I make sure you put some clothes on,\" Professor Tannen said loudly, clearly not wanting anyone to think there was anything shady going on.\n\n\"Of course,\" Emelie said, smiling her creepy smile again.\n\nCould she get three loads from her? Surely that wouldn't be easy for someone that old. Maybe she could force two from her and at least get a tie. It didn't matter that much. Sucking her professor's cock was the true victory. She would gladly pretend to be a model for a day for a chance at that, even if she preferred to get her cum and beat Heidi too.\n\n\"The bathroom?\" Professor Tannen questioned.\n\n\"I had to take a shower, and that's just where we ended up staying,\" Emelie said.\n\nIt was weird. Especially now when at least one bedroom was clear up here since Heidi and Lindsey had left it. Professor Tannen seemed to sense a trap.\n\n\"Just look inside and you'll see I'm telling the truth,\" Emelie said.\n\nShe did, and she saw that it was full of people. She stepped inside, and Emelie got in behind her, locking the door. They wouldn't want anyone to come in when she was sucking Professor Tannen's big, juicy, cock.\n\n\"What have you been doing in here?\" Professor Tannen asked.\n\nEveryone looked guilty. Flora had been able to get up from the floor but clearly wasn't in a good state of mind as she had slumped into the bathtub instead. Anna was still laying on the rug, half splattered, and half smeared with the cum on her chest and stomach. Heidi was sitting on the bench drinking a beer. Lindsey sat next to her, but with her head on the Icelandic woman's knee. She still looked like she was closer to an undead than a living human.\n\n\"Hey, Cecilia. She got you too?\" Anna said, peeking up from the floor.\n\n\"Who got me? What have you been doing in here? Heidi, please tell me that girl is not dead,\" Professor Tannen said.\n\n\"No. Okay, I know this looks bad. I was just telling Anna and Flora, but I guess I can tell you too. This is Lindsey. My girlfriend. Her best friend is Emelie, the girl who just brought you in here. This is all my fault, and I take full responsibility,\" Heidi said, stroking Lindsey's head.\n\n\"What happened?\" Professor Tannen demanded.\n\nEmelie stepped up.\n\n\"I got this, Heidi. You see, Lindsey is my best friend and she has a big cock, just like you, and today she wouldn't let me suck on it, because she wanted to save it all for Heidi. Heidi wanted to use me as a model for her agency, but I refused, but since she knew I am addicted to futanari cum, she made a bet with me that she could swallow more loads today. First, she told me she got six loads out of Lindsey and then I got seven loads from Anna and Flora. I thought I had won, but then Lindsey must have gotten scared I would win our bet so she came three more times. Clearly, that was a big mistake because look at Flora, and she only came four times,\" Emelie explained.\n\n\"Only four times? Do you know how crazy that is? And nine? I think she will need medical care,\" Professor Tannen said.\n\n\"I'm fine,\" Lindsey whispered.\n\n\"Why are you here, Cecilia?\" Heidi asked.\n\n\"She's here to give me all of her cum so that I win,\" Emelie explained.\n\nShe kneeled in front of her professor on the hard floor.\n\n\"I didn't agree to that,\" Professor Tannen said.\n\n\"You won't regret it,\" Anna said.\n\n\"Don't do it! She's too good and you will never stop coming,\" Flora countered, showing she was still awake.\n\n\"They are all your friends and will not tell anyone what we will do,\" Emelie said.\n\nProfessor Tannen looked up at the ceiling, showing that she was seriously considering it. Emelie felt her smile coming back. All she needed to do was one last push.\n\n\"You know that if you leave now you will think about this moment when you come home. Your cock will get hard and you will need to stroke it. Making yourself cum as you think about what I would have been able to do to your big cock if you had let me. So, I ask you, Professor. Wouldn't it be better if you let me do it for you? Let me stroke it, let me suck it, and let me swallow your tasty cum,\" Emelie argued.\n\nThe white slacks Professor Tannen was wearing were being pushed to their limit as her massive cock seemed to have determined what it wanted.\n\n\"This might be the stupidest thing I will ever do in my life,\" Professor Tannen said.\n\nProfessor Tannen opened her pants, and a second later Emelie had pulled them all the way down for her. She didn't wear any underwear, and her big, veiny, futanari cock sprung free, doing a powerful dance. Professor Tannen tried to step out of her pants, but Emelie didn't want to waste any time for that. She had won her prize, and now she was going to play with it.\n\n\"Can anyone time us? Professor, if I make you cum in under five minutes, you're going to fuck me afterward, just remember that my bet with Heidi was for swallowed loads, and you need to make sure all of your cum goes in my little mouth,\" Emelie instructed, pointing at her open mouth with a finger.\n\nWith that she let her mouth engulf the head, showing that her mouth wasn't little after all.\n\n\"I will last a lot longer than five minutes,\" Professor Tannen promised, \"and please call me Cecilia.\"",
        "\"No, you won't,\" Flora yelled from the bathtub.\n\nEmelie started to work with her tongue, letting her lips gyrate around the big head.\n\n\"Oh,\" Cecilia moaned. \"She's good, but I won't let a student embarrass me,\" she argued.\n\n\"I don't think you got much of a choice,\" Anna said, knowing how hard it was.\n\nEmelie felt Cecilia tremble, knowing she was almost there already. She moved one hand to her massive sack, fondling both balls, and let the other hand find her wet lips, letting a finger gently slide between them.\n\n\"Fucking hell,\" Cecilia said, trying to pull her cock back.\n\nEmelie couldn't let that happen. If she was trying to escape, she would go on the attack, taking her to a place she wouldn't be able to escape from.\n\nHer throat was prepared, having taken Anna and Flora already, and even if it was always tight to take a cock this size, it still sank down her throat easily. When the balls touched her chin, she pulled back slightly, then started to fuck Cecilia's cock with her face, making sure the balls would slap against her chin every time she pushed herself forward.\n\n\"How is this possible,\" Cecilia cried.\n\nShe felt her try and fight, tensing harder and harder each time her cock went as deep as it could reach and her mighty balls slapped against Emelie's chin. She started to go faster, not wanting her experienced lover to regain control, and then she felt how Cecilia's muscles surrendered. When she took all of her cock, they didn't tense up, and she quickly pulled her out of her throat, sucking hard as the head was the only part that remained in her mouth.\n\nThe next second Cecilia came. This time her body tensing in the way it can only do when a woman fires strong ropes out of her magnificent cock. The divine cum filling her mouth and she started to frantically guzzle it all down. She was the best cock sucker in the world, and again she proved it. If she wanted someone to cum, they would.\n\n\"Fucking hell, you're good,\" Cecilia groaned.\n\n\"Told you,\" Flora yelled.\n\nCum kept on filling her mouth, and she knew she wouldn't be able to keep up, so she pulled Cecilia's cock out, letting the last ropes cover her face as she gasped for air.\n\n\"I love your cum,\" Emelie said, still fighting to get her oxygen level back to normal.\n\n\"Did I make it past five minutes?\" Cecilia asked.\n\n\"Not even three,\" Heidi answered.\n\nEmelie took the cock back in her mouth, sucking all the leftover cum from it.\n\n\"Figured. Well, you have shown me that I still have something to learn, but now it's my turn to show you what I can teach you,\" Cecilia said, her voice sharpening up.\n\nCecilia finally could step out of her pants, ripping the rest of her clothes off. It was marvelous. Emelie had been dreaming about this woman for almost two years, and now when she saw her tower over her, naked except for the heels on her feet. It was imposing, and she felt her heart trying to beat its way out of her chest in excitement.\n\nBig, mature, breasts, strong shoulders, thighs that seemed built to do squats forever, and most importantly a massive cock that stood unmoved by the fact that it had just come, as if it knew it was there to do a job, and the job wasn't done yet.\n\n\"I thought you said you wouldn't do that to a student,\" Emelie teased.\n\n\"New policy. Sex with students is allowed, just not vaginal,\" Cecilia said.\n\n\"Then what do you do?\" Emelie asked.\n\nShe didn't get to finish before Cecilia picked her up, flipping her in the air, and taking a few steps forward to put her down on the rug next to Anna, just now with her back towards the professor.\n\n\"I fuck their asses. Deep and hard and fast until I break their minds. Show them that even if they might be young, and sexy, and good at sucking cock, their tight little asses are no match for me\" Cecilia revealed.\n\nCecilia pushed on Emelie's back so that she fell forward, naturally ending up on all fours. Getting fucked in the ass by big cocks was one of her favorite things, even if she hadn't done it in almost a year. She was nervous, but the nervousness only grew her excitement. Professor Tannen's words promised that this would be something extraordinary.\n\n\"Wait, she's actually your student?\" Anna asked, now laying on her side so that she could watch.\n\n\"She was there during my lecture earlier today,\" Cecilia said.\n\nThe tingle grew in her as she learned that Cecilia had noticed her. Maybe she had even thought about letting her suck her cock as often as Emelie had.\n\n\"Shit, that's hot. Risking your career for Emelie's ass,\" Anna said.\n\n\"It's a very nice ass,\" Cecilia answered.\n\nShe felt the heavy cock lay in her cleft. It felt so thick. Too thick for any normal person, but then she wasn't normal. She was made to take cocks just like Cecilia's.\n\n\"Please just fuck me,\" Emelie begged.\n\n\"We still might need a board member to approve this new anal policy,\" Anna teased.\n\n\"I approve it!\" Emelie countered. \"Just fuck my ass before I die from horniness.\"\n\n\"You asked for it,\" Cecilia said.\n\n\"Don't you need lube?\" Heidi asked.\n\nEmelie felt her cheeks being pulled apart, a warm liquid hitting her anus as she heard Cecilia spit, and then an out-of-this-world-sized cock push against it.\n\n\"Too late,\" Cecilia said.\n\nThe saliva spread as her asshole started to stretch. She tried to push back, opening her backside up to let her in, but the head seemed to be too large as she felt her precious star expand to a size that felt impossible.\n\nThen it happened. She was just about to tell Cecilia it wouldn't be possible without better lube, only for her ass to accept its fate. The head slid in, the overstretched hole trying to close, but finding that its ability to close was blocked by a massive object, and as it relaxed to try and find new strength to try again, Cecilia's cock seemed to take advantage by making its way further inside.\n\nIt felt unnatural. Wrong. Like her body was going to break. Like she would split in half. Setting her mind in a spin by how much she liked it. The muscles in her ass tried to fight against it, but something made her push her ass backward, taking more cock, and Cecilia seemed to see it too as she fed her cock forward.\n\nHer mind was fighting with itself, one part of her wishing the cock would soon bottom out, and the other craving more. Lucky enough what she wanted wasn't the deciding factor. She knew Professor Tannen would make her take all of it. When the prepotent pushing stopped, she thought it must finally be all of it, but it only meant her intruder was pulled back slightly, only to be pushed forward quickly. Back and forth, forcing more mature futanari cock into her young body.\n\nThe sensation of being filled to the limit of what her body was able to handle was almost enough to make her need to cum, forever pushed closer as inch after inch of Cecilia's cock migrated from the light to darkness. When she finally felt Cecilia's body against her butt, the sense of fulfillment of having taken all of that massive cock in her ass overwhelmed her. She felt tears form as her body was trying to tell her that this is where she needed to orgasm.\n\nYet she craved more. If it felt this good to just have it enter her, how amazing would it be as it fucked her? Or even more, the deep, hard, fast, fucking that Cecilia had promised her.\n\n\"You should put your head down on the mat,\" Cecilia suggested.\n\nBefore she could respond, Cecilia pulled back slightly, then pushed her cock forward with a hard thrust. It had a resonating force behind it. At first, she thought it was something she hadn't felt before. Then the shockwave came. Starting in her cheeks, making her midsection vibrate with the hard cock in the middle, making her breasts jiggle, her arms buckle, and then it entered her head, ending its path with something that felt like her mind exploding.\n\n\"What?\" Emelie said, deliriously.\n\nThen the second thrust came, even more powerful than the first. Her arms buckled again, this time forcing her down on the right elbow before her mind exploded again. She wanted to speak, but the third thrust came before that, making her insides dance around the miracle cock, her arms completely giving up as her head went down on the rug, her mind feeling like it was racing through the universe, leaving her behind.\n\nShe tried to take a deep breath, wanting to find some sort of control of herself, but before she was done, a fourth and fifth thrust had been done. Her mind was gone, replaced with only pleasure, and as the sixth thrust went through her body, she knew this was when she was going to cum. Her mouth falling open as her body started to shudder, her pussy squirting, and her ass muscles spasming around Cecilia. She tried to think, but her existence was only to orgasm.\n\nMore thrusts came, pushing her mind further away from her reach, making her body shudder stronger and stronger. Her ass clasping around Cecilia, but never long enough for Cecilia to not thrust again. Each thrust adding to the orgasm. Rising to heavenly heights.\n\nThoughts flew by, but she couldn't catch them. She felt Cecilia swell, wanting to protest, but her mouth wasn't for speaking, only moaning. The orgasm growing as warm cum flooded her most forbidden parts. Pumping strongly, filling her up with a never-before-experienced warmth. She forgot how to breathe. The shuddering reached its peak as she felt her lungs empty.\n\nThe thrusting had stopped, and the cum stopped pumping, and she felt her mind land. Become hers again. She gasped for air, almost ready to cum again as the oxygen filled her head with a different kind of euphoria.\n\n\"Wha-, What just,\" Emelie said, struggling to speak still. \"What just happened?\"\n\n\"I told you I could teach you something too,\" Cecilia said.\n\n\"You came,\" Emelie said, trying to wrap her head around if it had actually happened, or been part of some sort of hallucination.\n\n\"That one doesn't count!\" Heidi said.\n\n\"It couldn't be helped,\" Cecilia answered. \"Your ass is good, but I'll show you that my cock is better.\"\n\nShe felt how Cecilia grabbed the middle of her upper body, pushing their nether regions together as she stood. Her professor had just come twice, and her cock was still hard enough to support some of her weight as first her hands and knees left the rug, and then her dangling feet became airborne too. It wasn't clear if Cecilia's hands or cock did most of the work to keep her hanging, but it felt like an impressive show of strength either way.\n\n\"Anna, could you help me?\" Cecilia asked.\n\n\"What do you need?\" Anna offered back.\n\n\"Your dick in Emelie's mouth,\" Cecilia answered.\n\nAnna stood up, her hard cock right in Emelie's face. She looked surprised.\n\n\"Would you look at that? I didn't even notice I was hard again. Was too busy watching,\" Anna said.\n\nEmelie hadn't noticed it either, but now the mighty cock was calling her. She put her arms up against Anna's body, trying to hold onto it to alleviate the burden from Cecilia, while also making sure her head was at a good height for some prime fellatio. She was about to get two cocks inside of her body for the first time, and she was bursting with excitement.\n\n\"Anna will give you the load of cum that I lost,\" Cecilia explained.\n\nThat was true! One had been lost, but now Anna would provide it. She was at eight, and Heidi and Lindsey had nine, meaning she had the victory within her grasp. All she needed to do was make both Cecilia and Anna cum.\n\nAnna had her hands on her shoulders by her armpits, helping her find the correct position, and with a small step forward, Anna claimed her mouth again. It tasted sweet, carrying the aroma of their evening together. A wonderfully palatable piquancy of cock, cum, precum, with a hint of pussy.\n\nCecilia was mostly still, only flexing her cock to make sure it stayed potent, holding deep inside of Emelie as she let Emelie and Anna find their position. It felt weird being suspended in the air, but she wasn't going to complain. She still had to do her best to make them cum.\n\nHer hands fought to hold on to Anna as the bulbous head helped keep her from swaying much. Her tongue danced willingly around as she started to feel comfortable and safe with how they held her. Fully able to put her focus towards making Anna feel good and ready to finalize her part in the evening's events.\n\nCecilia started to move lightly. It wasn't the same as before. More a light stir deep inside. It felt good. Natural. Not like her entire world was ready to explode, but a nice and calm ass fucking that allowed her to focus on sucking Anna's cock.\n\n\"We can't let them win,\" Heidi whispered.\n\nIt was faint, but Emelie heard her. She tried to peek, but the position didn't allow it, and it made Anna shift her hands further down her armpits, finding a good grip to help hold her up, but it also meant she had to guide her cock deeper.\n\n\"I can't,\" Lindsey whined.\n\n\"Helviti,\" Heidi cursed. \"Then all we can do is watch.\"\n\nShe couldn't understand what Heidi said but it was obviously a curse. A beautiful one, at least coming from her. It was clear that she wanted to win too, but she thought she felt some excitement in her voice too. Watching the show they were putting on, which would now be like a victory dance for Emelie's triumph, must be extra frustrating when she had peaked too early in the night and now had emptied her resources completely. Or Lindsey's, more specifically.\n\nThe stronger grip from Anna meant that Cecilia could move one hand down to Emelie's hip, and put more strength into her hips. Cecilia's cock felt good to just have inside of her, lightly doing things to her ass, but Cecilia's true power was in how she used her hips. Making the cock slide back and forth, and the jolting experience of their bodies crashing together.\n\nEmelie knew that she could handle it this time. Cecilia had caught her off guard before, taking advantage of a weak moment, but now she could stay in control of her body. Keep all her senses and enjoy the rump hump with a clear mind. It showed that no matter how good Cecilia was, she was still better.\n\n\"What do you say we pick up the pace, Anna?\" Cecilia said.\n\n\"Oh, I think we must,\" Anna answered.\n\nCecilia started to move first. Faster and harder. Each of her thrusts getting more force behind it. She tried to hang on, but then she felt it. Somehow Cecilia managed to create enough distance between them so that she could smack right into her hanging body. The deep penetration sending rippling waves through her body, making her arms weaken for a split second, and ripping her mind open.\n\n\"Hold on,\" Emelie tried to say, but her mouth full of cock made her unable to offer anything but a mumble.\n\nMore poundings came from behind, each assault driving more of her thoughts away, replacing them with a plethora of pleasure. She feared falling, just as she hadn't been able to hold her upper body off the floor last time, she now knew the fall would be that much longer as her arms desperately tried to hold on to Anna.\n\nBe it that Anna was concerned too, or if she just wanted to do her part to screw her, she felt how her body couldn't do anything but permit Anna access to her throat as the actor started to move her hips too. Deep down her throat it went, granting her the first balls deep, double, penetration of her life. Her ass and throat being filled to their breaking point with mighty futanari cock. That knowledge alone would have set her over the edge but coupled with the intense pleasure that came with it, she never stood a chance.\n\nEverything became blurry as her mind erupted in a vivid blast. Her body shuddering. Shaking that lovely cock in her ass, and vibrating the cock lodged in her throat. She tried lifting her legs, working her tongue, but her body wasn't under her control anymore. It belonged to them.\n\nCecilia pounded into her. Showing her that it hadn't been a fluke. Cecilia was this good, and she could break her mind at any time, or at least any time her cock was in her ass. Just pounding her, turning mind and body to jelly.\n\n\"Oh, shit. Here it comes, Emelie. Number nine!\" Anna said.\n\nShe tried to look up, but she just felt her eyes roll. Anna was fucking her face. Letting her cock move freely in and out of her throat. It felt like she lived on cock. Knowing that she should want air when Anna gave her the opportunity for it, but instead wanting to inhale her wonderful cock. The only part of her body that seemed to work somewhat was the muscles used to make Cecilia and Anna feel good, but she had given up being able to control their contractions herself.\n\nShe tried to wake her mind up, but every time she had some brief clarity, Cecilia's cock turned her into mush again. Her body shaking blissfully as she kept on coming. This was one of the reasons she loved big futanari cock so much. They could take her to places that otherwise were out of reach. Make her do things that seemed impossible. Make her cum, and cum, and cum.\n\nShe felt as Anna started to ejaculate down her throat, then how she pulled back, starting to fill her mouth up. She tried to swallow but it overflowed. Spurting out of her nose and flooding out of the edges of her mouth, before Anna reclaimed her throat. She loved cum, but it was a relief it wasn't filling her mouth anymore as she couldn't properly swallow it the way that cum deserved to be swallowed.\n\n\"Best fucking party ever,\" Anna boasted.\n\nIt was. All because of her new friends. They had taken the worst day she had had in a long time and turned it into a magical adventure of cock and cum.\n\n\"My turn,\" Cecilia called.\n\nShe felt her feet touch the rug, unsure if they would be able to support her, but as Cecilia withdrew from her backside, she felt some of her senses coming back, and with the help of Anna and Cecilia she got down on her knees. The beautiful cock of her professor appeared, and she eagerly sucked on it, rubbing it against the back of her throat before it sank down, trying to suck all the tasty juices from it.\n\n\"I'm going to drown you,\" Cecilia promised.\n\nShe flexed her throat around it, then let it slide out and into her mouth, sucking on the head and letting both hands stroke the mighty shaft.\n\n\"Swallow my cum,\" Cecilia moaned.\n\nAnd she did. Her mouth filled up with a massive, thick, rope of cum, and she greedily swallowed, knowing there would soon be more. Over and over she swallowed, never able to empty her mouth, and feeling how it started to overflow again, just as it had with Anna, but Cecilia seemed to sense it too as she pulled her cock out, giving Emelie time to drink it all down as heavy ropes of cum splayed over her face, opening her mouth again as she was ready to swallow more cum, and getting the rest of the mighty load sprayed onto her tongue.\n\n\"Are you sure?\" Heidi asked.\n\n\"You must,\" Lindsey answered.\n\nEmelie closer her mouth around Cecilia's cockhead, sucking gently on it to coax every drop of cum out of her. Not only was it cum from the person she had wanted to give blowjobs to for so long, but it was also the tenth load of cum she had swallowed today, meaning it was her victory load. The one that had brought her a win over her best friend and her angelic Icelandic girlfriend.\n\nShe felt someone lift her bum, and she looked back, seeing it was Heidi, and gracefully she accepted her hands' instructions to lift her backside, getting rewarded by a sweet tongue diving deep into her ass. It was the perfect aftercare. Her ass had been used, and even if it had been pure bliss, Heidi was now licking any residue pain away.\n\n\"Is that your way to congratulate me for winning?\" Emelie asked.\n\n\"No, I'm making sure we both end on ten,\" Heidi explained, letting her tongue leave her insides for a moment, before her lips locked in, and her tongue went in search of futanari gold.\n\nNo way. She couldn't? She felt how Heidi sucked hard, and how the liquid Cecilia had left deep in her rectum was now slowly moving. Each strong suck bringing it closer to Heidi's waiting mouth, and when she felt the big load pool around her new nemesis tongue, and then with a loud sucking noise, Heidi lured it into her mouth. Heidi had sucked Cecilia's load out of her ass.",
        "\"It doesn't count,\" Emelie tried.\n\nShe had worked so hard. Managed to not only find one big futanari cock, but three, and still it wasn't enough to beat Heidi?\n\n\"I allow it,\" Lindsey said.\n\n\"What was the wording of the rules?\" Cecilia asked.\n\n\"The person that swallows the most loads, win,\" Heidi said.\n\n\"Then it counts,\" Cecilia said.\n\n\"It counts,\" Anna and Flora echoed.\n\nShe slumped down on the rug, rolling over on her back. She had done everything she could to win, but sometimes you just had to accept that it wasn't enough.\n\n\"We never said what would happen on a draw,\" Emelie said.\n\n\"All of us win. Me and Lindsey had a great time. Flora and Anna seem very happy, just like Cecilia. and it looks like you had a really good time too, so we all win,\" Heidi said.\n\nIt sounded a bit boring, but it was true. The true victory was having the best time of her life. Well, maybe the friends she had made along the way too.\n\n********************************\n\nEpilogue\n\n\"Can I have some water please,\" Emelie asked.\n\nShe had been thinking about saying something ever since they lifted. The original plan had been to wait until they were at the hotel, but after lift off something had been nagging inside of her that they might as well start now. Being in a plane, soaring high above the Atlantic, might be the perfect place for the next adventure to start, in more ways than one.\n\n\"That will be five dollars,\" the flight attendant said, showing a faint French accent.\n\nShe unbuckled her belt and turned around in her seat, sitting on her knees with her arms on the headrest.\n\n\"Who is paying?\" she asked.\n\nAll three of them looked at her.\n\n\"Pay,\" Cecilia said.\n\n\"For,\" Flora added.\n\n\"Yourself,\" Anna finished.\n\n\"Fine,\" Emelie said. \"Any of you want something too?\"\n\nShe could do that. When they had first started dating, they had all the money, but now she was doing alright too. She could pay, even if it was for overpriced water. They all gave their orders to the attendant, and Emelie's eyes drifted to Heidi and Lindsey, sitting by the window a few isles further back. That settled it. They had to start this right now.\n\n\"I thought of another competition,\" Emelie said, smiling at her three lovers.\n\n\"Not again,\" Cecilia said.\n\n\"You'll like it this time, I promise,\" Emelie said, grinning.\n\nThey would all be trying their best to ensure they won. Even if they usually were against her contests, they all worked hard to win, and this time the prize was something they all would fight tooth and nail for.\n\n\"What is it,\" Anna asked, sounding disinterested.\n\nShe felt her creepy smile spread across her lips. This time it wasn't for big futanari cock. Well, not only.\n\n\"We all been dating for more than a year now, on our way to Paris to spend an entire month there together. I've graduated, so I don't see what is stopping us from going for it,\" Emelie said.\n\n\"Stopping us from what?\" Anna asked.\n\nIt was Anna that got this trip started. She got offered the lead in a big movie, and now they all suddenly had a bunch of work lined up in France so they could be together. Flora would be playing music, Cecilia would do guest lectures, and Emelie had a bunch of model jobs lined up. Still, it was a whole month in what many called the most romantic city in the world, and what better place to be for what she had planned?\n\n\"I thought we could see who can get me pregnant,\" Emelie said.\n\nThey all looked at her like she was crazy.\n\n\"If you want to, of course,\" she added, not sure if they liked the idea.\n\n\"Like, right now?\" Flora asked.\n\n\"Sure,\" Emelie said.\n\n\"I'm first,\" Anna said, unbuckling her belt and standing up.\n\n\"No, I'm first,\" Flora said.\n\nFlora tried to get up too, but sitting in the middle made it difficult, so she tried to drag Anna down instead.\n\n\"I can go third,\" Cecilia said.\n\n\"Why?\" Anna asked, trying to push Flora away.\n\n\"I'll tell you if you agree I can be third,\" Cecilia said.\n\n\"Just tell us,\" Flora said.\n\n\"Knowing how reproduction works, as long as Emelie stays excited her uterus will stay as far away from our cum as it possibly can. With that, I'm thinking that the first person that cum will be the first to fill up the pool that the uterus will then lower itself into, but it will not get a chance to do that before the second person cum, washing most of the first person's cum away, and then I will be third, meaning that my big and strong load will easily remove any cum you have in there, and then my cum will be the only left in there with a proper chance to get Emelie pregnant,\" Cecilia argued.\n\n\"That means, being first gives the least chance to knock Em up?\" Anna asked.\n\n\"I'm second,\" Flora screamed.\n\n\"You really shouldn't be talking like that here,\" one of the men sitting next to Emelie said.\n\nThey all looked at him, seeing how he went from angry, to embarrassed, and then turning around with a bright red face and a look of shame.\n\n\"Fine, I'll go first. I've been practicing my martial arts a lot lately for the movie, and as I'll be kicking peoples' ass on set, my cum will be kicking the ass of your sperm,\" Anna said.\n\n\"I don't think that's how it works,\" Flora said.\n\nJust as planned, they were all fighting to win. A full month in France with the three people she loved the most in the world, fighting to fuck her and earn the right to impregnate her. It was going to be the best trip in the world.\n\nThe end\n\nAfterwords\n\nThank you for taking the time to read my story. Please let me know how you felt about it by voting, leaving a comment, or sending feedback. I appreciate you."
    ],
    "authorname": "Sonatatre",
    "tags": [
        "futa",
        "anal",
        "blowjob",
        "big cock",
        "model",
        "college",
        "professor",
        "mind break",
        "poly",
        "ass lick"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/emelies-quest-for-futanari-cock"
}