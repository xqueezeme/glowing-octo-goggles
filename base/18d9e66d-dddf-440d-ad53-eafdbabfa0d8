{
    "title": "Hostage of my Heart Ch. 04",
    "pages": [
        "Hostage of my Heart is a four-part series. While it's possible to read the sections out of order and not get [too] lost, there's an actual story to back up all the naughty bits, and it will be more fun if you start at the beginning! \n\nALSO- putting this chapter in Non-Con is a little bit of a stretch because it's more about the aftereffects, but I feel it belongs here. \n\nThank you guys so much for reading and commenting! \n\n-Stefanie \n\n---- o ---- \n\nThat SWAT team was really quiet, Opal mused, huddling under two heated blankets in a private room of the hospital's emergency wing. Not only hadn't they used sirens, they hadn't even used cars. \n\nSandir's experience as a messenger had given him a general idea which direction to go after he'd made it safely across the river, and he emerged from the woods less than a quarter-mile from a garage where he sometimes stopped for gas. It was a tiny family place, closed on weekends, but it had a phone. Sandir smashed a window and called 911. \n\nThe SWAT team rappelled into the woods half a mile from the industrial park-- on the right side of the river-- and snuck in wearing winter camo. They'd taken two of Sainte's men in the parking lot at about the same time another squad was relieving Opal of Sainte's H&amp;K. The whole thing impressed the hell out of Opal-- and also gave her something interesting to dwell on while she was being poked and prodded by an efficient, sensitivity-trained team of female medical personnel. \n\nAfter SWAT burst in and confiscated Sainte's weapon from her, everyone had been separated. They hadn't been allowed to speak to each other at all, which Opal supposed made sense, but she really, really wanted Rand to hold her hand. She'd asked the officers at the scene, the detectives, and various medical personnel, but everyone kept putting her off. Just wait until after... this test, that test, this exam, that interview, these results, then we'll see... \n\nAfter three hours of the same infuriating replies, Opal lost her patience. \"What do you mean, 'we'll see'? Are you arresting me? No? Then I can damn well speak to whoever I want.\" She folded her arms and refused to answer any more questions. \n\nThey fetched a female detective, a brown-skinned woman as wide as she was soothing. \"Miss Winslow, I understand you'd like to speak to Mr. Branch, and I assure you no one is trying to prevent that. Nor are you in custody. To get the bad guys, however, we have to follow the rules. There are strict procedures, and frankly, if I don't follow them, I'm out of a job. I have two teenage sons, Miss Winslow, who eat their weight in food every single day of the week. If I don't feed them regularly, I'm afraid they'll turn to cannibalism, and I have more meat on my bones than their father does.\" \n\nBy then \"Miss Winslow\" was smiling and unfolding her arms. The laughter drained away abruptly, though, and she looked down at the hands in her lap. \"It's just... just...\" Her lip quivered and she bit down, cursing her uncharacteristic weakness. \n\nDetective Leach patted her shoulder. \"I know.\" \n\nThe necessity of switching detectives wound up being a good thing, because Detective Leach was the first person who understood everything Opal said: they were going to find three or four different DNAs-- or however you said it-- in her rape kit, but not all of those were the result of rape. Leach consulted her pad. \"Okay, but all three encounters--\" \n\n\"Six,\" Opal corrected. \n\n\"-- all six encounters took place during the hostage situation and all were forced. Correct?\" \n\n\"Yes, all were during captivity and all were forced, except the first one, sort of. It was coerced. Sainte told Rand to... look, I'm not going to worry about 'polite' for a couple of minutes, okay? I'm pretty sure you've heard it all, anyway.\" \n\nDetective Leach laughed and waved her on. \n\nOpal explained. \"I knew Sainte was planning something sexual for me-- he's exactly the same as my step-father was-- so I basically manipulated him into choosing the 'right' man to have sex with me, one I was willing to have sex with. So when Sainte told Rand to fuck me, I was already committed. We were going to have to play along with whatever the asshole wanted in order to get out alive. \n\n\"No, I did not want to perform a sex show on the conference table at work. No, I didn't want to be forced to chose anyone. But Rand flat-out refused. I basically had to make him fuck me, so if one of us is going to be charged with sexual assault, it would have to be me.\" \n\nDetective Leach opened her mouth to ask another question, but Opal kept talking. \"Bob and Richard were different-- they volunteered. Sainte gave me to them because he'd been watching us and he knew those two would be the worst for me, emotionally.\" \n\nShe shook her head, looking down at her hands again. \"He's just like my father.\" \n\nShe used the present tense unconsciously, though she knew Sainte was dead. Even if the medical examiner hadn't confirmed it, she'd known as soon as she'd seen him beyond the handgun's front sight. The force of Rand's kick had knocked Sainte's head into the concrete block wall, and the window ledge had done the rest. \n\nEventually, all the tests and interviews were finished, and Detective Leach went away. The hospital told her Mr. Branch had already been released to go home. Opal wondered where that was, then wondered whether she'd ever know the answer. \n\nOpal's doctors wanted to keep her overnight for observation, but she signed herself out over their repeated objections, and a rape-crisis officer gave her a ride to her apartment. Her purse and her car were still at work, where they could stay forever, for all she cared. A neighbor let her into her place, staring curiously at her scrubs and bruises. \n\nOpal went straight to the shower, where she washed everything five times and cried until she thought she'd drown if she didn't pull herself together. \n\n---- o ---- \n\nAfter they were separated, Rand fought to see Opal, but experienced the same lack of cooperation she was getting-- with a twist. Rand admitted to having had forced intercourse with her during their detainment. When you tacked on the fact that he didn't know her last name, it sounded especially bad. Of course they wouldn't let him near her! \n\nHe doubted Opal would want to see him anyway: he was part of the worst thing that ever happened to her. At the very least, though, he needed to beg her forgiveness, and if she left the hospital, Rand was afraid he'd never see her again. \n\nIf he'd been thinking more clearly, Rand might simply have waited until they sent him home. One phone call to his lawyer could summon a team of private detectives who'd have her address in under an hour. But he wasn't thinking clearly. He'd been subjected to more than a day of unrelieved stress, worrying that Opal would be killed, and only seeing her would quiet his fears. Even if she crushed his hopes, which he was sure would happen, he needed to talk to her one more time. \n\nThe more frantic Rand became, the more determined his opposition was in blocking his attempts. \n\nFinally, a nurse told him to dial it back. \"Dude, if you don't pull it together, you're going to be sedated under a twenty-four hour hold, or the cops will lock you up. Calm the hell down.\" \n\nRand, who'd begun to stiffen at the taller man's approach, consciously unfisted his hands, rolled his head, and shook it out. He nodded at the nurse and did some deep breathing exercises while he sat trying to devise a better way to handle the mess he was in. \n\nThe detectives who'd interviewed him were pleased to find his attitude much improved when they returned. \n\n\"Listen, I have to apologize. This has been--\" Rand's face turned sour, \"-- a very bad couple of days. I understand why you won't let me see Opal.\" \n\nHesitating and injecting a plaintive note into his voice, he tried to appear as harmless as possible. \"Do you think if I wrote her a note, though, someone could give it to her? Open, I mean, so you'd see it wasn't a threat or anything like that?\" \n\nThe cops relaxed, and one of them handed over his ubiquitous cop-pocket-pad, opened to a fresh sheet of paper. \"Mr. Branch, I will personally deliver it to her.\" \n\nRand allowed himself an obvious sigh of relief. \"Thank you,\" he said fervently, before jotting down his name, cell number, and an innocuous note for Opal, which he hoped would be beside the point. \n\nAs soon as they departed, he asked for a private room from which to phone his family. Instead, he called a driver for the local company he'd contracted with before moving to the area. \n\n\"Dan.\" \n\n\"Mr. Branch! Are you--\" \n\n\"Listen, Dan, I need some help...\" \n\nForty minutes later, a Town Car collected him from the hospital's ER entrance. Rand shook the hand of the lieutenant overseeing the Sainte case and was ushered into the back seat. \n\nHalf an hour after that, he was back at the ER, but this time, no one knew he was there. Dan had dropped him off at the distant end of a staff parking lot with a borrowed cell phone in his pocket. From there, he'd crept through the trees until he came within sight of the ambulance bay, then waded through a hundred meters of slushy ditch, bent low to avoid detection. He hid behind a bunch of dumpsters and waited, hoping Opal wasn't so badly wounded that she'd been admitted and cursing the other hopes he couldn't help feeling. \n\nEven without the impenetrable barrier of the past two days between them, he was literally at least twice her age. Opal might respond physically to him, but their emotional connection was probably situational on her part. She'd simply needed support, and he'd been willing to provide it. Back in the real world, she'd want someone younger, someone eager to start a family with her, not a dedicated bachelor with intimacy issues and vasectomy scars. \n\nIn his stinky brick and metal hiding place, Rand shook his head at his own incongruous need. It was a little late in life for an epiphany of this sort, but Miss Opal Epiphany was a little late arriving in his life. In any event, he needed to apologize and offer whatever he could in the way of solace and emotional support. Rand wanted Opal to see herself the way he saw her-- as the bravest person he'd ever known and the most sensual, passionate lover. \n\nAn hour later, his stubborn refusal to relent was rewarded. In standard blue scrubs, with a cheap blanket clutched around her shoulders, Opal was escorted into the front seat of a cruiser. Rand called Dan and relayed a description of the vehicle and occupants, then settled down to wait some more. \n\n---- o ---- \n\nStanding outside Opal's neat brick apartment building an hour later, Rand was cursing himself again-- for impatience, insensitivity, and general stupidity. She'd been traumatized and wouldn't want anything more than the numbness of sleep. He shouldn't do this now; he knew it but couldn't stop himself. He'd even gone so far as to have Dan drop him off and leave for the night, a maneuver calculated to at least get him inside. So now he was stupid, insensitive, and stuck, since he'd also returned the borrowed cell phone, and his was God-knew-where. \n\nRand sighed and rang the bell next to \"Winslow, O.\" \n\n---- o ---- \n\nWhen she heard the buzzer, Opal jumped, then snorted in derision at her own fright. Great. PTSD. Again. That should be a wonderful addition to her life. \n\nAt the intercom she took a deep breath before pushing the button, trying to still the thudding of her panicked heart. \"Yes?\" \n\n\"Opal?\" \n\nOh, my god-- it couldn't be. She hesitated for an endless minute, unwilling to let herself hope. \n\n\"R-rand?\" She stuttered weakly. \n\nHer hesitation and the quavering note in her voice were a blow to Rand, though he thought he'd steeled himself for her rejection. \"Yes. May I please see you? Just for a minute?\" He couldn't choke back the longing in his own voice. \n\nAfter another unbearable delay, she buzzed him in. Faint with relief, he barely retained the presence of mind to open the door. Bracing himself not to overwhelm her, he didn't thunder up the two flights to her apartment; he climbed sedately, and still he was lost when she opened the door. \n\nShe was so beautiful. Her hair was wet and her eyes were swollen. Her arms were folded across her chest and her shoulders curled protectively inward, another blow to his heart. He wanted so much to take her in his arms, but he didn't dare reach out. He stuffed his hands in his pants pockets, preventing it. \n\nThey stared at each other. Eventually, Opal shook herself out of her stupor and stepped aside, beckoning him in. \n\nRand paused, astounded by the invitation. \n\nOnce inside, he let his gaze roam the confines of her living room, curious to see what she liked. \n\nShe liked old movies. \n\nThat was the first thing he noticed: framed posters of Gone with the Wind and Casablanca. They flanked another wall display-- sheet music and album covers this time-- above an old-fashioned, slant-top desk. Hands still firmly imprisoned in his pockets, Rand wandered closer to see what music she'd chosen to display. B.B.King, Robert Johnson, Eartha Kitt, Jelly Roll Morton. \n\nJelly Roll Morton? His father had listened to Jelly Roll Morton, but that was... ages and ages ago, Rand concluded, turning back to where Opal waited. \n\n\"Jelly Roll Morton?\" He asked, desperate for something to discuss that would be easier than what he'd come to say. \n\nShe smiled at the question and his heart melted. \n\n\"I play some keyboard.\" Opal answered. \n\nFor a second, she glanced around the room as though lost. \"Um, do you want...?\" \n\nRand jerked himself from the cowardly respite, losing a little of his resolve in the process. \n\n\"No, I don't--\" He went to her, his hands escaping. At the last minute he came to his senses and limited himself to resting his palms on her shoulders. At least she didn't back away, he thought. \n\n\"I know I shouldn't be here, Opal. You've been through enough, but I had to see you, to apologize. I know you don't want--\" \n\n\"Wait. Stop.\" She was shaking. \n\nHe cursed himself, but didn't drop his hands, proving again what a complete jerk he was. \n\nOpal saved him from further self-recriminations. \n\n\"No,\" she flatly rejected. \"You and Sandir were the only men in that building yesterday who don't owe me an apology today.\" \n\nNOW his hands fell. \"What?!?\" \n\nDizzy with relief, Rand finally gave in to what he'd been dreaming of doing for the past two days. He pulled her into his arms and held her, resting his nose and chin atop her head, breathing in her freshness as the weight of the world rolled off his shoulders. \n\nQuivering, Opal pressed her face against his chest and wrapped her arms around his waist, taking advantage of his comfort while she could. \n\nShe was under no illusions. Rand was a good man, eaten with guilt over what had passed between them. That didn't mean he wanted anything other than her forgiveness, which he hadn't needed to begin with. Even if he'd cared for her, it wouldn't have mattered. Her lips thinned as she choked back the tears in her heart, waiting for the inevitable moment he'd set her away from him. \n\nWhen Rand at last straightened from their embrace, though, all he did was lean back so he could see her eyes. \"Maybe I'm completely crazy, Opal, but is there any possibility at all of you... of us--\" \n\nHe paused to growl in exasperation at his own ineptitude, simplifying the question. \"Will you have dinner with me?\" \n\nAbruptly, she stepped away, displaying the same level of disbelief he'd felt a moment earlier. \n\nShit, he thought. He'd been right the first time. \n\nHis hands went back to his pockets, and he looked at the floor, waiting for the words that would complete this odious drama they'd been enacting. \n\n\"Rand, I-- I can't.\" \n\nHe nodded briefly and turned to leave. \"I understand.\" \n\nA small hand on his elbow stopped him. \"No, you don't. Let me--\" \n\nHe turned back. \n\nHer eyes were filled with tears, but Rand didn't reach out. Holding Opal didn't feel at all platonic, and he wasn't a saint; he didn't want to subject her to any more unwanted mauling from him or his rebellious penis, which responded to her proximity no matter what the circumstances. \n\nShe swallowed several times and at last met his eyes. \"You were very kind--\" \n\nGreat. The friend speech. \n\nOpal saw Rand's expression and extended her palm, warning him not to jump to conclusions. \"--but I'm not what you think I am, and it wouldn't be right for me to... to pretend I'd be good for you.\" \n\nHe scowled, losing patience with all the verbal tippy-toeing around they were doing. \"Opal, what the hell are you talking about? Just say it, okay? I'm not good at this stuff.\" \n\nShe took a deep breath. \"Look, everything that happened the past couple of days... I learned something about myself. I'm exactly what Sainte said I was. There's no way for you to be with me without seeing it. He was right. They raped me and I came. Richard-- a man I absolutely loathe-- Richard made me come. Sainte, he-- he-- was a truly vile human being, but he gave me one orgasm after another, all night long!\" Her voice was a woeful, thready cry by then. \"What kind of person comes when she's being raped? He was right; I'm--\" \n\nRand interrupted her rant, and the small shake he gave her was an indication of his restraint rather than his feelings. \n\nOpal's cheeks were red, her chest rising and falling rapidly with the heat of her exhortation, but when her eyes rose to Rand's, she found him just as furious. \n\n\"Don't say it!\" He shook her again and began lecturing her-- loudly. \"You're the bravest person I've ever met in my life! You made up your mind to survive and that's exactly what you did, dragging me right along with you when I probably would've gotten my ass shot off in the first ten minutes!\" \n\nHe gave her another shake. \"Don't you dare even think what you're thinking! You're a passionate, sensual woman who was trapped in impossible circumstances and forced to interact with despicable men. That's about them, not you! And I happen to like the fact that-- that---\" He stumbled, looking for a way to say what he meant without sounding like a pig. \"Ah, hell, I like that you're so goddamned responsive, physically. You're not just the bravest person I know, you're the sexiest damn woman I ever met!\" \n\nShe was doing okay until he said that. She pushed his hands away with a look of disbelief. \"Don't treat me like I'm stupid, Rand! Bravery, okay, I get that, but you can't listen to me say I had multiple orgasms with-- with him and still think I'm a-- a-- still think I'm date-able!\" \n\nSomething inside Rand gave way. This was the dumbest conversation he'd ever had. Taking half a step forward, he grabbed her hand and pressed it to his crotch. \"This is what I feel like every time I think about you coming. I want all your orgasms to be at my hands or yours from this moment forward, but any time you come is a turn-on to me.\" \n\nFor a moment Opal struggled to pull her hand away, until she realized what she was feeling: Rand had a monster erection. He was hard as a rock. \n\nHe hadn't been hard when he was holding her a minute ago-- she couldn't have missed that-- ergo he must have been turned on by something since then, and all that had happened since then was this conversation about her ability to achieve orgasms with hateful men. \n\nA slow kind of wonder appeared in her eyes. \"It's true?\" \n\nUnder his palm her fingers came alive, exploring the contours of the bulge beneath the gray gabardine. \"You don't think I'm... I'm disgusting?\" \n\nRand frowned again, despite the pleasure of her hand on his aching cock. He brushed the hair back from her face. \"I could never think that of you, Opal. You're amazing.\" ",
        "A glimmer of light appeared in her eyes as Opal began to believe. She leaned her face into the warmth of his palm as she ran her own along the hard ridge on the bottom of his penis. The friction of the fabric between them and the heat of her palm made him groan, and he surrendered to his urges, ignoring the host of tiny voices in his head telling him not to hurry her. He couldn't wait one more second. He pulled Opal into his embrace and claimed her mouth. \n\nOpal let herself lean into him, her arms encircling his waist as his hands caressed her spine. The kiss was hot, wet, and all-encompassing. For a few minutes, they existed in perfect, solitary peace. When Rand pulled his mouth away and tucked her head beneath his chin to hold her tightly, Opal closed her eyes and sighed in utter contentment. She'd never been happier than she was in that moment. \n\nSoon, though, she became aware that her feet were wet and his calves were cold against her. She pulled away from him, a frown wrinkling her forehead. A puddle had formed on the boards around their feet, and his gray pants were black from the knee down. She folded into a ball at his feet, her hands on the ice-cold fabric. \n\n\"What have you done, you idiot?\" Her voice was fierce. \n\nShe didn't even glance at his face as she grabbed his hand, pulling him along behind her as she strode quickly across the dining area and into the bathroom. \n\nRand grinned as she flipped the light-switch and pushed him down to sit on the toilet lid, then turned away to start the water running in her tub. \n\nShe fell to her knees and pulled his shoes off, tossing them back into the hallway as she muttered about the stupidity of men in general and Rand in particular. His socks became black spots by the vanity before she tugged him up to undo his buckle and fly. His trousers joined his socks and her hands went to his feet, which were white with cold. \n\n\"Oooo.\" She stood between his knees unbuttoning his shirt, her frown intact. \"I swear, Rand--\" \n\nRand put his arms around her hips and smiled up into her angry face, pulling her against him. He'd known her for barely two days, but couldn't imagine spending even one day without her in his life. \"I love you, Opal. Marry me.\" \n\nHer face softened momentarily, her eyes sparkling as she stroked the side of his battered, unshaven face. Then she pushed him away, feigning an angry look. \"Why in the world would I marry someone too dumb to avoid freezing his feet off?\" \n\nTaken aback for a second, Rand caught a glimpse of her cheeks rounding as she bent her head to his buttons again, and he laughed, joy blooming in his heart. \"Because you love me, too, minx.\" \n\nUnable to help herself, Opal lifted her eyes to smile at him. \"Minx?\" \n\nHe laughed. \"Yes. It's the first thing I thought when I saw you at the agency.\" He hugged her again. \"That sparkling smile and those Audrey Hepburn eyes, your perky little ass under those pinstriped pants. Minx.\" \n\nOpal laughed and tipped her head to kiss him. She wrestled out of his embrace before it got any hotter. She really was worried about his feet. \"Enough.\" She pushed his shirt off his shoulders. \"Up. You're getting in the shower before--\" \n\nWhen she slid his jockeys off his hips, his cock sprang free, and it was obviously not suffering from the cold. Opal's face reflected her feelings, an echo of the first time she'd seen him nude, and she angled a questioning look upward. \n\nRand laughed and finished removing the underwear himself, then reached for the zipper of her sweatshirt. \"I think I might have a hard-on for the rest of my life, as long as you're in the same room.\" \n\nHer hoodie fell open and his hands slid to her waist as her naked torso brushed against the organ in question. \n\n\"Mmm.\" She tipped her head back. \"I can live with that.\" \n\nRemembering the first time they were together, when he'd removed his shirt at the conference table, Opal stretched upward and let her tongue dart out to lick his nipple. Rand jumped. \n\nBefore she could torture him further, her clothing was in a heap on the floor next to his, and they were both in the shower. She pushed the door closed and shoved him under the water, glancing down to locate the switch for the plug, which she flipped with her toe so the warm water would rise around his ankles. That was all the time Rand gave her to think about his feet. \n\nThey kissed until she noticed him wincing from a cut inside his mouth, then argued about whether or not she was too sore to make love. Ten slippery minutes later, her back against the blue tile wall, Opal slid onto his erection, moaning and clutching at his shoulders. Rand gritted his teeth and held on through her first orgasm, but he joined her in her second, moaning a bass accompaniment to her alto song and collapsing with his face buried in her neck. \n\nWhen he recovered, he set her on her feet with a kiss and began to wash her all over again. \"I'm sorry, sweetheart, I couldn't wait. I'll be better next time.\" \n\nAs he soaped her swollen folds, Opal's eyes widened. Better than the two mind-annihilating orgasms he'd just given her? \n\n---- o ---- \n\nOver the next few months, Opal learned what Rand meant by that comment. He might be twice her age, but he could go for twice as long. The athleticism she'd seen in him before became even more pronounced at home, in the comfort of their own bedroom. \n\nMost of the time, their lovemaking ended with Opal begging for mercy, while Rand grinned and made her come again. Sometimes he let her peel her body away to take him in her mouth: he couldn't resist her mouth, no matter how badly he wanted to torture her some more. His cock was so thick that she couldn't take the whole thing, but it drove him crazy when she squeezed the base in her fisted hand or embraced his shaft between her lovely breasts and suckled the head as he came. \n\nThey couldn't get enough of each other sexually. It was as though every other partner up until that point had been just a hint of what was possible, a mundane appetizer for the incomparable entree ahead. \n\nFor the first year, both Rand and Opal had nightmares about the captivity in which their romance had begun, but almost all of their fears shared a common theme-- they couldn't get to one another. They made a pact to wake each other immediately for comfort. What kind of comfort was up to the nightmare-e. Sometimes they talked; sometimes they kissed and cuddled; more often they wound up in a sweaty, orgasmic heap of exhaustion and contentment. \n\nRand wasn't surprised by the absence of night-time consequences he experienced after killing Dominic Sainte. Sainte had hurt Opal; Rand was glad the man was dead and felt no guilt for killing him. \n\nOpal, though... Rand knew Opal had lingering feelings of guilt to accompany her fears, but she didn't want to talk about it. He made her. He wanted her to know, way deep down in her soul, that he wasn't turned off by her ability to respond to those men under those circumstances. \n\nOne at a time, he wheedled, begged, and stubbornly forced her into relating the story of every single orgasm she remembered having over the twenty hours of their captivity. When she finished, he'd re-enact them with her, doing whatever her rapist had done, minus the violence. \"Like this?\" he said, pushing her across his dining room table and watching her face as he forced her legs back toward her chest as Bob had done, his thumb on her clit. \n\n\"Harder,\" she'd answer, arching her back as he twisted her nipple, pretending to be Sainte. He called her honey or even slut, like Sainte had done, and made her repeat their names aloud. \"Tell me what he was doing,\" he'd order as he fucked her, still pretending to be Bob. \n\nShe'd gasp and lean her head back. \"He-- Sainte-- held my head and fucked my mouth.\" \n\n\"Deep?\" Rand asked, slamming into her. \n\nOpal grunted. \"Uh, uh, yes... deep.\" \n\nRand hit her cervix every time he plunged inside, making them both think of Sainte's cock bumping the back of her throat. \n\n\"Uh.. uh... yes... so deep!\" \n\n\"Did you swallow, honey?\" \n\n\"Uhhhh, uhhh--\" her moans were getting louder, more frenzied. \n\nRand lifted her hips, pulling her up until only the back of her head touched the table. \n\n\"Tell me, Opal!\" he commanded, fucking her furiously, battering her poor pussy with the force of his thrusts. \n\n\"Yes! Yes! Yes! He came in my mouth and I took it all!!\" The last word stretched into a scream and her cunt clamped down on Rand's thrusting cock. He thought he had another five or ten minutes left in him, but her explosion triggered his, and his roar of unplanned completion nearly drowned out her screams. \n\nHe collapsed across her, gasping for air until he had the breath to groan. \"Jesus, Opal, your pussy is going to kill me.\" \n\nShe laughed and kissed the top of his sweaty gray head. \n\n---- o ---- \n\nRand almost always talked to her while they played, and most of it wasn't meant to be therapeutic. \"They were all watching your pussy, Opal, wishing it was them. Even the girls wanted to touch you while I was fucking you that day.\" \n\nShe was lying on the coffee table in their new house. \n\n\"Can you feel their eyes on you?\" \n\nOpal pushed against his biceps, her upper body writhing as she tried to direct the swollen purplish crown brushing her entrance with no pressure at all behind it. He was driving her insane with his words and lack of movement. \n\nHolding her firmly in place, Rand flicked one berry-red nipple with the tip of his tongue, just enough for her to feel the wetness. \"Can you feel them looking at your tits as I fuck you, watching them bounce every time I slam my cock into your sweet, wet pussy?\" \n\nHe sucked her other nipple into his mouth as she moaned, using his lips to mimic a pinch. \"Imagine it, baby. Imagine those two pretty interns caressing your breasts, licking your nipples.\" He licked again, and she shuddered as Rand pushed inside her, still controlling the movements of her body. \n\nShe tried to draw him down with the legs locked around his waist, but failed to alter the outcome. \n\n\"Maybe one of them will touch you here.\" He worked his hand between their bodies and narrated what he was doing. \"She'll run her finger up the middle of your slit, just testing your response.\" \n\nOpal panted weakly, her head thrown back. \n\n\"Then she'd work you over-- all those soft little fingers pinching your tender clit, pulling, tweaking, rubbing your wet, wide open lips like this.\" He began to move his hips, fucking her slowly as he watched her face. \"The girls sucking and pinching your nipples-- do it, Opal--\" \n\nHelplessly, her hands rose to cup her breasts, her fingers following his commands. \n\n\"Mmm-- just like that, baby-- you'd like that, wouldn't you, those two young girls working you over while I fuck your hot, wet pussy.\" Rand's thrusts increased in speed and depth as he began to lose control. \"Sucking on your beautiful tits, flicking their fingers over your pretty pink clit faster and faster.\" \n\nOpal whimpered as his cock stroked her into witlessness and her pussy clutched at him. \n\n\"Sucking on her finger to get it wet so she can slid it into your tight little asshole,\" Rand went on, his voice deep and rough. \"Oh, yeah, I can feel her finger in your ass while I fuck you. You like that, baby? You like her fucking your ass with her slick little finger while you come? Sliding in and out of your ass?\" \n\nOpal came then, her legs gripping his waist as she lifted her hips, opening herself to his deepest thrusts, until Rand's liquid offering bathed her inner walls and they rolled exhausted onto the rug, holding each other as though their lives depended on the connection. \n\nRand spend a whole year working her up to the grand finale, a year in which he gradually introduced larger toys into Opal's nearly-virgin ass. \"Sainte was right, hmm?\" Rand asked, leaning to one side to watch her face as he slid his finger into her. \"No one ever fucked your ass?\" \n\nHer eyes closed and lips open in a blissful O of surprise, Opal shook her head and whispered her reply, \"No... no... that was... ooohhhhh...\" she moaned as he began to alternate slow strokes of his finger in her oily ass with slow strokes of his cock in her slick pussy. \"...the first time.\" \n\n\"What about this, baby?\" Rand rotated his finger. \"Anyone ever finger your luscious back door?\" \n\n\"Oh, god,\" she wailed. \"What are you doing to me, Rand?\" \n\nIt might not be her first experience with anal sex, but it was the first time anyone had done it right, playing with her until she eagerly anticipated every penetration. \n\nRand loved teasing her. \n\nFinally, after a year of fingers and dildos and a vibrating butt plug he made her wear in public while he retained custody of the remote control, Rand draped her over the big round bolster they kept at the head of their king-sized bed. This time he didn't pretend to be anyone else. When the head of his oiled-up cock slipped into her tiny pink pucker, he was just Rand. \n\nOpal moaned, and he grinned through a grimace as her ass squeezed his dick. Moaning was good. He'd expected a shriek, despite months of preparation, an hour of foreplay, and nearly two glasses of wine for his light-weight wife. Her hands clutched at the sheets, but her thighs stayed loose. \n\nHe held himself still, stroking from her waist to her knees as she adjusted to the bulk of his penis stretching the small, tight hole. Sooner than he'd expected, she shifted, her bottom moving from side-to-side as she moaned again. \"Okay?\" \n\n\"Mmmmm.\" Opal had no words. \n\nRand worked another inch inside her, then withdrew slightly. Again and again, while he stroked the skin around their joining and finally bent forward to reach between her legs. The effort reminded him of their first lovemaking, when he'd forced his cock inside her on the conference table, and they'd both tried to pretend they weren't enthralled with one another. Thrumming his fingers on the swollen shaft of Opal's clit, Rand wedged the last inch of himself into her ass and rested there, his cheek against her sweaty shoulder-blades and three fingers quiescent between her lips. \n\nShe broke in only minutes, arching and groaning. \"Rand, Rand.\" \n\nHe made her say it. \n\n\"Rand,\" she writhed helplessly around the invasion, needing a climax more than she needed her next breath. \"Rand, please.\" \n\nHe nuzzled the back of her neck, not moving. \"What do you want, sweetheart? Tell me.\" \n\nShe whimpered in frustration, speech evading her. \"Rand...\" \n\nFinally she found the words he wanted to hear. \"Fuck my ass, please!\" \n\nHe did. Slowly, expertly, agonizingly, he fucked her into an orgasm so intense she blacked out for a few seconds. He felt her collapse, but didn't have time to worry. \n\n\"Baby,\" he rocked his hips, his cock still hard inside her, \"are you okay?\" \n\nOpal smiled at the plea she knew he couldn't hear in his own voice. She turned her face to the mattress and pushed with her palms, arching her ass up to engulf as much of his cock as possible. \"Mmmm.\" She had no trouble finding words that time. \"Oh, god, yes, Rand... I want to feel you come in my ass. Please.\" \n\nHe groaned and did as she asked. He managed to pry his eyes open to watch his slick cock sawing in and out of her bottom, her ivory skin stretched taut around it, and was shocked that he, too, didn't pass out when he came. \n\nOpal wouldn't let him pull out after, though he knew she must be sore. He rolled with her still atop him and locked his arms together across her ribcage, thinking he'd shift her to the side and let his cock slide free when she was sleeping. \n\nHer hair spread over his throat as she reclined against him. Sometimes they fucked in the same position, and Opal always mentioned how vulnerable and out-of-control she felt with her legs splayed wide and her head leaning back like that. Rand wondered how much more acute that feeling must be with his cock buried in her ass instead of her pussy. Against his will he felt himself stirring. Spreading his palms over her stomach, Rand began to roll. \"Opal, honey--\" \n\nShe threw her hands out and braced her feet on the bed alongside his thighs, stopping him. Then she arched her back and tightened the muscles of her ass. \n\nRand groaned, his cock swelling and his hands going involuntarily to her breasts. \"No, baby, we can't.\" \n\nOpal's only response was another caress of her inner muscles. \n\nHis erection grew, filling her ass, and she trembled atop him. He tried again, his voice rough and pained. \"Opal, sweetie, we--\" \n\nHooking her toes beneath his knees for leverage, Opal sat up. She gasped as he penetrated more deeply than before, but took a deep breath and leaned forward. Bracing her hands on his thighs to lift her torso, she let a few inches slide out while she worked one foot at a time around until she was kneeling, facing away from him. Panting, she lowered herself slowly onto his cock again, until it was completely buried in her body. \n\nRand tugged a pillow into place, propping his head at an extreme angle. With his hands on her hips and her head thrown back, Opal's sweet ass sliding up and down on his cock was the most erotic thing he'd ever seen. \"Oh my god, Opal.\" \n\nEven through the din of her own overloaded senses, Opal heard the near-strangled urgency of her husband's tone. Turning her head slightly, she repeated the motion, lifting her body until only his head remained inside her, then sliding slowly back down and curling her hips forward until he was as deep as he could be. \n\nRand groaned, sounding as though he was choking. \n\nShe rocked her hips again, her head falling forward. Was he, though? Was he really as deep as he could be? She spread her knees experimentally, arching and curling her spine. What if... she opened her eyes, blinking stupidly. Where the hell was a rope when you needed one? \n\nShe glanced around. Lounge pants, Rand had been wearing... ahh... there they were. She leaned forward, her breasts brushing his knees, and Rand groaned again, pushing his hips toward the ceiling. \n\nAhhh... that too, Opal thought. She snagged the pants and straightened, turning her head to one side. \n\n\"Rand? Baby?\" \n\nHe groaned in reply, his eyes locked on the spot where their bodies joined. \n\n\"Rand, baby, can you sit up for a second? Still inside me?\" \n\nHe concentrated. \"Mmmm. Uh, yeah.\" Slowly, trying not to jar her, he lifted his upper body. \"There? Is that better, honey?\" He wasn't as deep now-- this was better for her first time on top. \n\nFrom the side he saw her cheek plump out. \"Yeah, sweetie, it's great, but can you do me a favor?\" \n\nHe waited, wondering what the imp was up to. \n\n\"Can you put a pillow under your ass?\" \n\nHe frowned. \"Opal--\" \n\nShe resisted the urge to laugh at his stern tone and infused her own with exasperation. \"Can you manage, Rand, or would you like me to help?\" \n\nThat did the job. He lifted them both with his heels and one hand on the mattress, sliding a pillow under his ass and settling gently down. \"Okay?\" \n\n\"Almost, lover. Point your toes at the ceiling.\" \n\nHis toes? What the hell was she up to? He pointed his toes at the ceiling and felt something soft settle around his arches. \n\n\"Okay, now can you lift me up just a little?\" \n\nHe did, and she moved her feet forward, until they were just in front of her hips, her own toes facing forward again. The soft strap around the arch of his feet tightened. \n\n\"Thanks, baby. Now lay back down.\" \n\n\"Opal, what--\" \n\n\"Rand,\" she snapped. \"Keep your damn toes pointed at the ceiling, lay down, and shut the hell up.\" \n\nHe rolled his eyes and slowly lowered his shoulders to the mattress. He considered telling her again that he'd liked her better when she was all guilty and apologetic, but he usually saved that line for times when she thought she was too busy to make love. He'd say it, she'd hit him, they'd end up wrestling, and-- Voila! ",
        "By the time his upper body touched the mattress, Rand was frowning again. With his ass propped on the pillow this way, he was going to be way too deep inside her. She wouldn't have the leverage to control his penetration, either; she-- \n\nOpal used her arms and his pants to lower herself onto him, and Rand lost his ability to think. \n\nSquatting, with her knees touching the front of her shoulders, it felt to Opal as though her husband's cock was in her throat. She threw her head back and moaned, long and low. \n\nWhen she stopped, she heard Rand groaning, an endless stream of strangled mutterings. \"Oh god, oh god, oh god, baby, you can't---\" \n\nTightening her biceps, she lifted herself almost off him, stayed there long enough to hear him choking, and lowered herself again. \n\n\"Oh god, Opal, oh my god, you... you...\" \n\nThis time, she squeezed him tightly with her inner muscles as she rose, drawing a long, raspy moan from his throat. \n\nHis cock was so deep in her ass she though she might die, but Opal wanted to see if she could kill him first. Halfway through, he lifted his hips, trying to take control, but she yelled at him to behave himself, and Rand settled back against the mattress, gripping fistfuls of the sheet and praying for mercy. \n\n\"Oh god, I can't take it, Opal, baby, you have to...\" \n\nIt seemed like she tortured him for hours, but it was probably only five or ten minutes before she relented, hooking her feet back to a kneeling position and dropping the pajama-pant reins to free her hands. Pinching her nipples and stroking her clit in a frenzy, she increased the pace until Rand broke, planting the soles of his feet on the bed and holding her hips as he arched his body a foot off the pillow, forcing his cock deeply into her ass as it swelled and exploded. Opal screamed as she came, folding inward, spasms ripping through her body, her ass clenching the huge invader as her pussy drenched his thighs. \n\nHer head was on his knees when Rand roused himself enough to sort their limbs out, lifting her foot gently and rolling to his side. Despite his loving care, she screamed softly as he pulled his cock from her sore rear passage, but she was twitching when he drew her back against him, and Rand realized she'd climaxed again. He didn't even have the strength to grin. \n\nHe kissed the back of her neck and mumbled a few words before passing out. \"Jesus Christ, Opal, you're tryina kill me.\" \n\nOpal fell asleep smiling. \n\n---- o ---- \n\nLeft jobless, Opal went back to playing keyboards for wedding bands and writing original music for royalty-free sites, a combination which paid better than advertising, though the hours were crap. \n\nRand encouraged her when she talked about designing album covers for self-published musicians, and supported her as the concept grew into a co-op website for independent artists' sales. She kidded him that his interest was self-serving, because he didn't like her working weekends. Rand smiled and didn't disagree. \n\nNeither of them had the time nor inclination to give their new home the care it deserved, so Rand hired Sandir as their estate manager. Sandir fetched Mrs. Sandir over from the D.R. to care for the house itself. Opal liked Camila as much as she respected Sandir, and all were satisfied with the resulting arrangement. \n\nOnly one thing marred the growing security of Rand and Opal's first year together: phone calls from the district attorney's office. In an effort to be sensitive to the needs of victims, the court system kept them apprised of what was going on with the case. In Rand's estimation, skipping half the updates would have solved three-quarters of the negative consequences he and Opal experienced. \n\nAll four of Sainte's men had been captured and were easily convicted on a variety of assault, kidnapping, and conspiracy charges, but Bob and Richard were a different story. At first, they were treated as victims, too, but Richard's freedom didn't last-- he was arrested soon after the two interns reported his willing participation in their assault. \n\nInitially, the district attorney warned that Bob might get away with his part in Opal's rape. Bob's assertion that he was a victim of coercion-- just like Rand-- was difficult to disprove, and his semen might not be enough to overcome his image as a faithful husband and father. Even the testimony of Sainte's men didn't inspire confidence: the DA offered Bob a plea agreement, and he took it, resulting in a five-year sentence with only two years of actual prison time to serve. If he was really good, in ten years Bob could even apply to have his record expunged. \n\nAt his sentencing, Bob smiled smugly at Opal while she clenched her teeth, and Rand held her in the seat with his arm around her shoulders. On her other side, Sandir stared coldly until Bob saw and looked away. \n\nOpal was infuriated by the perceived injustice, but Rand listened and held her and she made it through anger into reluctant acceptance. Halfway through his too-short sentence, Bob was killed in a minor prison uprising. A Dominican gang was suspected of committing the murder, but there were no willing witnesses, and no one was ever charged. His death helped complete their healing. \n\n---- o ---- \n\nRand had always been a very private person, even in childhood, but Opal wouldn't allow him to hide, and he no longer wanted to. If he kept parts of himself from her, how would she be as open as she needed to be to totally recover from what Sainte and her step-father had done? Open and honest was the way they'd begun, and it was the way they continued. \n\nRand told her about his life, his parents, his business. He put her name on all his holdings and accounts. In every way possible he opened himself to her. When he tried to give her his ATM code and a list of his internet passwords, Opal drew the line, laughing as she told him she wasn't holding his hand during prostate exams, either. Rand laughed and made love to her again. \n\nNothing was off limits between them. \n\nThe hardest thing for Opal to tell Rand was how conflicted she'd felt when Sainte kissed her and touched her softly, and how wonderful his fingers had felt in her cunt while Bob fucked her. \n\nRand didn't quite understand why that incident bothered her so much, but he didn't need to. They worked it out in their usual, creatively arousing way. He kissed her sweetly while he fingered her pussy and talked her through Bob's fucking. He talked about how he guessed she'd felt, enjoying Sainte's kisses, enjoying his touch. He licked her nipples and told her what a slut she was, coming again and again. The only thing he couldn't do was kneel over her and fuck her with his fingers in her cunt, too; not only didn't his hand bend that way, there was no way anything else would fit in her cunt while his cock was there. \n\nInstead, Rand invested in an expensive mechanical solution to their problem. Opal insisted she was over the phase, but Rand didn't care: he knew she'd liked it A LOT, so he'd try to duplicate that part of the experience for her. After all, even failing would be fun. \n\nHe worried about her reaction when the machine was delivered and gave her such a long, serious, apologetic preliminary speech, Opal thought he must have purchased a nuclear warhead or a black-market baby. When she saw what was waiting on the coffee table, she knew right away what he'd done. \n\nShe whirled and threw her arms around his neck, delighting him with her laughter and enthusiasm. While she didn't need to precisely duplicate every incident, she agreed with Rand's assessment: even failing would be fun. \n\nBouncing on the balls of her feet, she practically squealed. \"Ohmigod, that's awesome! What do we do? How does it work? Can we try it now?\" \n\nHe laughed into her sparkling eyes as he walked her across the room. \"I dunno, babe, maybe we should wait a while.\" \n\nShe had Rand's clothes off before he finished the sentence, and none of their experiments failed. She straddled the machine while he lowered her onto the mounted dildo with his fingers already embedded in her dripping pussy, then knelt on the floor behind her while she rode it. Once every couple of weeks or so they'd give it another go, and after each new series of crying, screaming, squirting orgasms, Opal said the same thing. \"Oh, well, it was okay, but maybe we should try again.\" \n\nAfter she became more accustomed to Rand's cock in her ass, he casually suggested they try double penetration with the machine, thinking she probably wouldn't be interested. \n\nOpal's eyes rounded into great big Os. \"Why didn't I think of that?\" She asked, completely serious. \n\nThey skipped supper. \n\nEventually, Rand's persistence paid off. During lovemaking one night, he urged Opal to tell him something else about her ordeal. She responded by rolling her eyes at him. \"Oh, God, do I have to?\" The utter boredom in her tone said more than words could convey: the event and its perpetrators no longer had any power over her. For today, at least, she was free. \n\nHis heart thundering with joy, Rand grinned. \"Not at all, baby. Matter of fact, you shouldn't talk with your mouth full, anyway.\" He guided her in the direction of his swollen cock. She went willingly, smiling in reply. \n\n---- o ---- \n\nOnly one thing remained, and Rand put it off until he was afraid if he waited any longer, he'd chicken out altogether. \n\nHe knew he was risking everything he'd built by making the offer, and he phrased it as carefully as anything he'd ever said, holding both her hands and gazing gravely into her beautiful brown eyes. \"Opal. You're mine. You're the only woman I want, for the rest of my life. Period. I'll never touch another woman, and I can't imagine you ever wanting to be with anyone but me. I trust you with my world, my life, my body, my heart-- anything I have. Also period. I am complete with exactly what we have now. \n\n\"That said... if you want, if you need the experience, for healing, for sexual fulfillment, for any reason-- if you want or need another man in our bedroom-- that would not in any way alter anything I feel for you-- not one iota.\"  \n\nFor a long minute Opal was silent and motionless, studying his face, and Rand was terribly scared she'd misinterpreted his motivation, that he'd ruined everything. His soul began to come apart, but Opal moved before it shattered, taking one step forward and placing her hands on his cheeks, standing on her toes to kiss him tenderly. \n\nShe opened her eyes and gave him the sweetest, most loving smile he'd ever seen on a human being. \"My heart, my soul, my husband, that is the most generous offer I can imagine, and if anything ever changes, I'm grateful to know that you are you. But you are the only man I want in my bed, in my heart, between my legs. You complete me in ways I couldn't have imagined before that day. \n\n\"Sainte-- my evil step-dad's perfect twin-- gave me to you, and you healed every wound I ever suffered at their hands. You are my life.\" By the time she finished, her fingertips were wet with his tears, and her own eyes were gleaming. \n\n---- o ---- \n\nThe End \n\n---- o ---- \n\nThanks for reading and commenting! \n\nPS- I've got a new story almost ready to go for next week, about a whole new kind of club... see you then!"
    ],
    "authorname": "SteffiOlsen",
    "tags": [
        "captive",
        "romance",
        "love story",
        "dual penetration",
        "fantasy role-play",
        "fucking machine",
        "first time anal",
        "huge cock",
        "graphic design",
        "final justice"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/hostage-of-my-heart-ch-04"
}