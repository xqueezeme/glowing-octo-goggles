{
    "title": "The Gift",
    "pages": [
        "Author Note: This was supposed to be a light hearted male fantasy. I am sorry how it turned out. I am sure there are errors, but I can't bear to read it again. \n\n*****\n\nAnother damn bus. How many buses can you look at in one day? I really hate coming to these expos. I never really liked talking with salespeople and transit salespeople were the worst. They know you have tax dollars to spend and they would love to help you spend them. I had a managing director to answer to, so I slogged through another bus listening to the moderately attractive sales lady describe their latest low floor model. \n\nI plopped down into one of the passenger seats while I listened to her drone on. The seat was fairly comfortable which surprised me. I looked closer at the one next to me and felt the cushion and soft fabric that cradled my butt so well. Inwardly I smiled, these wouldn't last a year in real use. Transit passengers drag all sorts of items across the seats even if you don't consider the intentional damage. The sales lady saw the concern in my eyes. \n\n\"We would never recommend these seats for production Mr. Prichard.\" She smiled which brightened up the bus a bit. \"We have a large assortment of more durable seats. We partner with Freedman and build to suit your needs.\" Of course they do. I was just wondering why they thought it a good idea to show what we would never buy. I nodded my head so that she knew she wouldn't have to continue down that line. Unfortunately, it gave her an opening to discuss all the other partners her company works with. She rattled off GPS enunciator and signage companies, automatic people counter systems, smart fare box builders and a diatribe of other big name transit companies. \n\nI tried not to yawn. Everyone on the bus already knew each and every company she mentioned. It's not like there is a big list of companies who build GPS enunciators for transit vehicles. We all politely let her drone on. I had been on my feet for the better part of four hours. It was starting to take its toll so I stayed in the seat and pretended I was interested by moving my eyes from feature to feature as the saleswoman pointed them out. My mind quickly wandered from the mundane sales pitch.\n\nHow did I ever end up spending twenty years in public bus company? I know I didn't grow up thinking; I want to work for a bus company. I just sort of evolved into the position and now I'm stuck. I know so much about public transportation that my work has become trivial. Problems that used to floor me now only produce a chuckle. I get paid too much to start over somewhere else and the retirement plan is pretty lucrative. It hasn't been a bad life. My wife, Mary, and I live in a nice house and never had to worry about a paycheck or me losing my job. My life just lacks that pizzazz I imagine other jobs must have. \n\nI was busy thinking of pulling out my phone to check what the market was doing when the entire interior of the bus changed. A woman in a flowing black dress entered the double side door of the vehicle. She had silky long black hair that dropped straight down her back just like my wife's. She was wearing a pair of moderate high heels with straps around her tanned ankles. The heels stretched her perfect calves before they disappeared behind the silky dress. The dress accented her curves from her slim waist up over her hidden breasts. Her collar was too high to allow for viewing of the wonderful cleavage I knew was there. She had wonderfully bright eyes and used some kind of lipstick that glossed her lips without being out right shiny. The woman reminded me of my wife only, a bit younger and a lot more voluptuous. I realized I was staring and quickly moved my eyes back to the fold away wheelchair positions the saleswoman was demonstrating. \n\nIt was very difficult using my peripheral vision to eye the beautiful woman as she came down the bus aisle. I am married and would never risk my marriage with an affair, but I was also a man. God, did I want to study this girl. The transit business has its share of pretty women, but this girl was a step above. She looked like she should be working at some Manhattan law firm or at least playing a lawyer on TV. I noticed that some of the other gentlemen on the bus were also no longer interested in the sales pitch. \n\nI had no idea why I became a bit nervous as she came toward me down the aisle. She reached my seat and suddenly spun around to sit in the seat directly across the aisle from me. Her dress lightly whipped across my arm as she spun and caused an involuntary shiver to run up my spine. I enjoyed the feeling and felt like an idiot for enjoying it. Even if I was in the market, this girl was way out of my league. \n\nI looked over, in reflex to her dress flourish, as she sat down. She gave me an easy smile and reached down to massage her lovely ankle. I gave her my best stupid moron smile. I never knew how to act in front of women who could make men drool. \n\n\"Picked the wrong shoes.\" She whispered. I looked at the seats behind us and found them empty. I couldn't believe she was addressing me. I kind of wished me wife was here so I would have a buffer. I didn't know what to say or if I should say anything at all. I only knew what my wife wanted to do after a day in heels. Using my toes, I pressed against the heels of my shoes and slipped them off. She saw me since she was concentrating on her own ankles and gave me a little chuckle and removed her heels. I smiled a little less moronically, happy I could help. It felt good letting the blood have more freedom in my feet anyway. Our eyes returned to the saleswomen demonstrating the wheelchair lift system.\n\nThe saleswoman grabbed the cabled lift control and pulled it outside of the vehicle to continue with the demonstration. Most of the people followed. I stayed and continued to flex my socks. My new barefoot friend stayed with me. I looked over and decided to start a conversation. Because we shared sore feet I wasn't as nervous.\n\n\"First Expo?\" I guessed that it was since she was the only woman not wearing something akin to tennis shoes. \n\n\"Yes\" She smiled at me which was prettier than I expected. \"I didn't think it was going to be a marathon.\" She held out her hand. \"I'm Cathy by the way.\" I took her hand but didn't really shake it. It was more of a firm caress. \n\n\"Doug Prichard.\" I responded. Her hand was as soft as it looked. My wife's hands were just as soft. I was getting kind of homesick. I realized I was still holding her and when she glanced down at my grip. I awkwardly returned it to my side. \n\n\"Are you in the market for buses?\" She was still smiling even though I practically ripped my hand away. \n\n\"No, our fleet still has seven years left.\" I continued unable to break my eyes from hers. \"Just trying to stay current.\" I returned her smile since hers wouldn't quit. \"Are you in the market?\"\n\n\"Heavens no! I'm new just trying to get the lay of the land.\" She started to put her heels back on which broke our eye contact. \"All of this is new to me. I never thought transit was so complex.\" I guess to the layman, public transit was a simple operation. It truth, it was horribly complex and the Feds keep making it more so.\n\n\"Well don't worry, it grows on you after a while.\" I wasn't sure if she intended to stay in the field. If she asked I would tell her to run away now and never look back. She a started on her second shoe.\n\n\"Doug, I am kind of on my own here. Would you mind joining me for lunch?\" She glanced up while strapping on her last heel. You have to understand that this was a really strange situation for me. Women that looked like Cathy were never interested in eating lunch with me even when I was at my peak. It was completely unexpected and I answered like an idiot. \n\n\"I'm married.\" I said before I realized it implied I thought she was interested in more than sandwich. She laughed. \n\n\"Happily I hope.\" Her smile was contagious. \"Your lucky to have someone here with you.\"\n\n\"Oh no, Mary didn't come this time.\" Now I felt a bit more ridicules. I couldn't quite look at Cathy's face. I was feeling too foolish. \n\n\"It's just a sandwich Doug. I hate sitting alone at places like this.\" She stood up expecting an answer.\n\n\"Of course, I'm sorry.\" I was fumbling. \"I didn't mean to imply anything.\" I quickly donned my shoes and followed her out of the bus ignoring the continuing wheelchair lift demo. \"There's a good deli on the corner that makes a turkey bacon melt that I never miss when I come here.\" I was pointing at the doors that seemed a mile away on the other side of the convention hall. \n\n\"So, are you here for all four days?\" She started the small talk as we headed for the deli. \n\n\"Yep, we will be flying out Sunday evening, You?\" Small talk sucks, but it was better than silence. \n\n\"Yes. I'm flying out Monday morning.\" Her step picked up. \"This is the first time someone paid me to travel. I'm trying to fit in a bit of sightseeing.\" She looked over to me. \"Do they let you do that?\" \n\n\"Sure, in fact if you feign a bit of interest at a booth, they will wine and dine you all over the city.\" I felt like a professor teaching a new student. \"The company that sells the bus we were just on has rented a riverboat for the evening. Free food and booze if you pretend to be interested.\" I enjoyed being the junket expert. I usually only took the freebies when my wife was along.\n\n\"You mean on the Mississippi?\" I guess I peaked her interest.\n\n\"Yep, with all the entertainment provided.\" I pointed around the corner as we exited the expo. I felt the hunger pains as we neared the deli. We waited patiently for the crossing light. \n\n\"How many times have you been here?\" More small talk, at least we weren't staring at the cars. \n\n\"Third time here.\" The light still hadn't changed. \"I usually attend every three years when they put on the big one.\" I looked over to her. \"I usually skip the smaller conventions.\" I acted like I had a choice when it was actually my boss who said when I could or couldn't go. \n\nThe light changed and we crossed over to the deli. I loved the way her dress flowed in the slight breeze caused by the buildings. I remembered when Mary used to wear summer dresses and the fabric would entice me like Cathy's was doing now. \n\nWhen we walked in a few heads turned. I knew they weren't looking at me. Cathy seemed to take it in stride and ignored them. I was beaming with pride. I knew they were trying to figure out my secret. Little did they know it was \"right bus, right time.\" \n\nI ordered my favorite bacon turkey melt and an ice tea. Cathy a half BTM with a side salad. We chose a table by the window so we could people watch. For a gorgeous woman, Cathy was fairly easy to talk with. We spent lunch talking about movies and TV shows. I tried to find out a bit about her, but she side stepped saying she didn't want to talk about business. I obliged and went back to our discussion of 'The Game of Thrones'. I had never considered women like her to be human. They always seemed untouchable in the past. Cathy was very touchable, although I would never consider it in the literal sense. I simply enjoyed lunch. I reminded myself to call my wife tonight. \n\nOn the way back to the expo, Cathy almost slipped on the curb and I grabbed her arm to make sure the fall wasn't complete. I was surprised at my quickness and the strong confidant support I was able to offer. I was never much for athletics and would usually end up fumbling such a move. I brought her fully upright and smiled. \"Got to take it easy on those ice teas.\" She giggled at my stupid joke. \n\n\"Good thing I had a knight at my side.\" Cathy did a quick check of her heels to make sure they were still functional. \"Got to remember to wear sneakers next time.\" I was still holding her arm even though she was quite steady at this point. Her skin was soft and was at a wonderful temperature. Despite the pleasantness of the sensation, I thought it best to separate. We continued on to the expo albeit a bit slower. \n\nWe entered the same large doors we exited at earlier. I was feeling a bit awkward not knowing how to separate and continue on for the afternoon. I was sure she had better things to do then follow me around for the rest of the day. \"I have to check out the fixed route software booths this afternoon.\" I did need to check them out. We were having export issues with our current software leading to a lot of wasted hours. \n\n\"Ah, okay, I 'm going to be looking at the rail cars.\" She looked a bit lost. The size of these expos were imposing. \"Thanks for lunch. It was nice.\" She smiled and I blushed. \n\n\"Of course, any time. I am sure we will run into each other again.\" I started backing away. Before I was married, I would have paid a fortune just to drool in her presence and here I was trying to come up with a reason to walk away. I turned a bit too quickly and started to head away. \n\n\"Doug.\" It sounded like an afterthought. I turned back with a questioning look. \"Do you think you could show me how to get on that riverboat?\" She had dipped her head a bit and was looking at me through the top of her eyes. A very adorable look for her. There was no way I wasn't going to help and I think she knew it. \n\n\"Of course Cathy, follow me.\" Again I felt like the expert teaching the student. I headed back to the bus I met her in. She smiled and walked right next to me. What seemed hard to a first timer couldn't be easier for a seasoned pro. Luckily, the same saleswoman was still on duty and the bus was currently empty. I looked at her name tag. \"Hi Debbie, we are considering a large service expansion. I was wondering if you can give me some contact information for your techs so we can develop some bid specs.\" It was like dangling worms in front of a hungry bass. \n\n\"I can do you one better Doug.\" she was busy reading my name tag. \"All of our techs and the owner himself will be available tonight. Would you two like to be our guest on a riverboat cruise tonight?\" She took the hook as expected.\n\n\"That would be fantastic Debbie.\" I smiled and I felt small hip bump from Cathy. It was like we had been friends forever. We followed Debbie to a small desk where she fished a couple of tickets out of drawer. \n\n\"Meet at pier 3 between 5:30 and 6:00\" Debbie was pointing to the instructions on the tickets themselves. \"Come hungry and thirsty.\" She was all smiles as she handed each of us a ticket. I thanked her and headed away from the booth with Cathy. \n\n\"That was easy.\" Cathy grabbed my arm for a brief moment. It was a friendly gesture thanking me for the ticket. \"Are you going tonight?\" I was kind of surprised she asked. \n\n\"I'm not sure. I usually only go to the freebies with my wife.\" I don't know why I felt it necessary to mention Mary again. I guess I was feeling guilty hanging out with such a good looking woman without Mary's knowledge. Maybe, I felt guiltier about the stupid fantasies running through my brain. Cathy chuckled at my hesitancy. \n\n\"Well, I'm going. I would love to see you there so I have someone to talk to.\" Cathy gave me a slightly sorrowful look to emphasize her loneliness. \n\n\"I'll think about it.\" I wasn't sure why she would want me along. It's not like we worked together. \n\n\"Tell you what. Call your wife and tell her you need to rescue a damsel in distress.\" She smiled at me again. \"If she doesn't have a problem, meet me there.\" Cathy said this as she drifted away from me. \"Thanks for lunch.\" She turned and disappeared down the aisles. \n\nI felt like an idiot. Cathy had correctly surmised that there was no way I was going river boating with her without talking with Mary. Cathy couldn't possibly be interested in me, but I made it seem like I thought she might be. I was shocked she just didn't say goodbye and head for the hills. As good looking as she was, I think she just wanted a friendly face at the party tonight. \n\nI finally made it back to the hotel at about four. My feet were a bit sore so I was bare foot praying that the carpeting had been cleaned sometime in the last century. I lay down on the bed and dialed up Mary. \"Hi Honey.\" My standard greeting for the last twenty five years.\n\n\"Hi baby. Having fun?\" She was honey and I was baby. You would figure that we would have dropped all of that a few years back, but it was kind of ingrained. \n\n\"Same stuff, new salesmen.\" She already knew that. She had been to a few herself. \"Wish you were here.\" \n\n\"Me too.\" I wasn't sure that was true, but I knew she missed me. \"What do you want to do for your birthday?\" I forgot that my birthday was next week. 42 snuck up on me pretty quickly. \n\n\"I don't know, maybe that seafood place we went to a few months ago?\" We usually just chose a place to eat. Neither of us were big on the party stuff. \"I really liked that stuffed flounder thing they have.\"\n\n\"The Gentle Wave? I'll book a reservation and we can change it if you want to go somewhere else.\" Mary liked having everything planned out. \"I already got you a gift you know.\" She tried to sound mysterious. I knew what I wanted, but I didn't think that was what she had in mind. \n\n\"Are you going to make me wait?\" I would let her play her game. She wanted to try and perk my curiosity. In truth, there was no item sold in stores that would excite me. Both of us had outgrown the desire for possessions. Comfort and transient joys, like stuffed flounder, held more value these days. \n\n\"Well, not till your birthday, but yes it is a secret for now.\" I could hear her smile. A nice cryptic answer to keep me thinking. I guess it already exists in the house and I would see it when I got home. I think she enjoyed teasing me. \"What are you doing for dinner tonight?\" Well two can play at the teasing game. \n\n\"Actually, a young lady has asked me to join her on a river boat cruise.\" I was smiling, but I tried to make it sound like an everyday experience. I heard a little giggle on the other side of the line.\n\n\"And is this young lady good looking?\" She knew me too well. There was no way I would ever cheat on her. \n\n\"Well in truth, she is a knockout.\" I have never gone beyond a white lie to my wife and I wasn't going to start now. \"We kind of bonded over sore feet and ended up at the deli together for lunch.\"\n\n\"So this would be your second date.\" She giggled again. \"Maybe I shouldn't let you go to expo anymore.\" \n\n\"I think I am a companion of convenience.\" I spilled the truth. \"She's new to expo and is stuck here alone. I didn't say I was going to go.\" I wanted to make sure she knew that she would always be my one and only. \n\n\"Doug, don't rot in the hotel room. Go help the poor girl before everyone gets liquored up.\" Yep, transit professionals on alcohol is not a pretty sight. I was glad Mary trusted me or at least trusted my inability to excite sexy young women. \n\n\"Ok, I'll go but don't blame me if I have to break her heart.\" There was more giggling on the other side of the line. Yep, she trusted my lack of studliness. After a short pause, \"you do know that I love you, right?\" I already knew the answer, I just had to repeat it every once in awhile. \n\n\"Yes and I love you more than you know.\" She sounded a bit more serious than normal. I don't know what it was about her tone, but it sounded more heartfelt than habitual. I liked the way she said it. We said our goodbyes and I told her I would call her tomorrow. \n\nThe way that Mary said that she loved me got me a bit excited. Maybe I would get what I really wanted for my birthday; Mary naked and entwined in my arms. We had drifted away from sex a few years ago. Mary really didn't have any interest anymore. I wasn't sure what switch got turned off, but I hadn't really been with her for two years. Prior to our slow down, we were as active as most couples and Mary seemed to enjoy sex. I have tried making some moves, but was always rebuffed in a sweet and tender way. I even went as far as talking directly about the issue and somehow the topic was always changed. I have begun to think that if I wanted relief, I would have to handle it myself for the rest of my life. ",
        "The lack of sex would never be the end of my marriage. I still have the memories of our earlier sexcapades so I never felt deprived. I just miss the closeness and Mary's touch. I could and will survive without the sex. I didn't want to push the issue with Mary anymore. I felt that further discussions would seem more like pressure and could only lead to bad feelings. I would just wait for her, and I would wait forever.\n\nI hopped in the shower to prepare for the boat. Six hours of expo kind of leaves your body in a funk that only warm water will wash off. I knew it wasn't a date, but I was kind of excited to think there was a pretty woman waiting for me tonight. I remembered dating Mary, before we were married, and the anticipation it generated. I wasn't sure about her feelings then so everything was a risk. Now we take each other's love for granted. There is a comfort in that, but I do miss the excitement. \n\nI toweled off and donned some jeans and a rust colored collared shirt. I pulled out my comfort shoes which were more like upgraded moccasins. I wasn't sure how they fit in the fashion world, but they sure made my feet happy. I was glad it was warm out so I could ignore hauling a jacket around. Free food, free drink and pretty girl at my side; that's how you make an old man happy. \n\nI arrived at the pier a little later than I expected. I initially went the wrong way and had to backtrack along the river. By the time I arrived, everyone was loading and I didn't see Cathy. I was a bit disappointed with myself for not meeting her on the dock. The boat wasn't that large. I could explore some and find her that way. \n\nI didn't even make it down the first gangway before I had a drink in my hand. A scotch and water was my poison of choice. I find I drink them a bit slower and am able to pace myself a bit better. There was a small table with a bartender every fifty feet or so. I laughed inwardly thinking about transit and booze mixing so well. Here's hoping the crew isn't touching the stuff. \n\nI followed the sound of a light jazz band to the interior of the vessel. It was pleasant music and fit the riverboat theme. Off to the side of the band was another small bar and that's where I spotted Cathy. She was wearing a very nice green skirt with an off white blouse. She had replaced her heels with some sort of deck shoes. Two younger men were chatting her up, and she seemed to be enjoying herself. I was a bit disappointed knowing I was no longer needed. Then I smiled thinking back to my dating days. I left her there and went up to the top deck to watch the shoreline go by. \n\nIt was a very nice night for river cruise. The lights of the city always seem more distant when you can't hear the sounds of the city. Even though there were a couple of hundred people aboard, I felt strangely alone with my thoughts as we headed up river. I leaned over railing content to watch the sun try to set over the water.\n\n\"I am so glad you came.\" Cathy snuck up behind me and joined me on the rail. \"It is such a beautiful night.\" She was nursing what looked like and iced tea. \n\n\"I saw you downstairs and you looked like you were having fun.\" I smiled at her and received one in return. \"Figured I would catch up with you a bit later.\" I was lying. I didn't want to be that annoying third wheel while she socialized with people more her age.\n\n\"Those two, Please Doug. They just wanted to talk about urea exhaust systems.\" She shrugged her shoulders. \"No offense, but everyone here is way too excited about transit stuff.\" I was a little surprised, she sounded more like an outsider than an actual transit employee. What would she expect coming here? I was about to ask her where she worked when it struck me that I didn't really care. She pretty much just told me she wasn't interested in talking about work right now.\n\n\"Well the drinks are free, the jazz is good and the company is fabulous.\" I held out my drink in the standard toast position. She laughed and clinked her class to mine and took a sip. I couldn't believe she would rather hang out with me than those two six footers downstairs. Maybe she just wanted to feel safe and comfortable tonight. That is something I could provide. \"Mary told me to protect you from all the liquored up leeches tonight.\" I felt better mentioning Mary again. I don't know why, but I needed Cathy to know that I loved my wife. \n\n\"Well I feel safer already.\" She smiled at me again and tucked her free arm through mine. \"Shall we get these drinks refreshed?\" Cathy wasn't really waiting for an answer as she escorted me to the nearest mini bar. She refreshed her long island iced tea, and I had the bartender add some more scotch since a lot of my ice was still there. \n\nArm in arm we toured the boat. I was getting my share of stares as people I knew from business saw me with this beautiful girl. I was enjoying the thought of the rumors that would follow. Most knew I was married. All knew I wasn't capable of endearing myself to such a lovely creature. I was going to leave it a mystery. It pleased me to have people think that I was more masculine than I let on. \n\nI felt a pull on my shoulder and turned to see my boss. \"Doug, glad to see your getting out.\" He had a really slanted grin on his face. Obviously, he got started drinking a bit earlier than the rest of the attendees. \n\n\"Cathy, this is my supervisor Frank.\" I was a bit embarrassed introducing Cathy to him. I had only seen Frank sloshed once before and it wasn't pretty. He has been in transit for almost forty years. I guess that takes a toll on a guy. \n\n\"Hello Frank.\" Cathy held out her hand and Frank shook it. \"So nice to meet you.\" Frank wasn't letting go.\n\n\"Cathy, I am so glad you got this old stick in the mud out of his hotel room.\" Frank was almost slurring his words. Luckily he was still standing tall. \"He usually just hides away during the night.\" Sometime friends aren't really friends. He was still holding onto Cathy' s hand. I was trying to figure out a good way to extradite ourselves from this situation without becoming a prick to my boss. \n\n\"Frank, Doug and I are heading to the buffet.\" Cathy wasn't yanking her hand back. She was looking directly into his eyes. \"Would you like to join us?\" \n\n\"Oh no, you two have fun.\" He finally let go of Cathy's hand and used his to shoo us along. \"I going to stay out here in the fresh air.\" He gave me a smile and a wink. I guess he thought it was some kind of male bonding thing. In his drunken state it came off a bit weak.\n\nCathy smiled and pulled me out of his conversation zone. \"He is going to need a designated walker if he doesn't slow down.\" She was giggling to me as she said it. Cathy was a pretty smart girl getting us out of there without causing a fuss. I was impressed.\n\n\"He's usually not like that.\" I found myself protecting my boss for some reason. \"I guess everyone lets loose once in awhile.\" After two scotches, I wasn't feeling any pain either. Maybe we should get something to eat to slow the pace. \"The buffet does sound like a good idea.\" We headed into the boat following the arrows on the buffet signs. \n\nAs expected, the buffet was wonderful. They had a little bit of everything so no one would leave hungry. Most of the food had Creole flare to its design which suited me just fine. I filled a plate with too much food and laughed when I saw Cathy had done the same. She wanted to eat on the top deck which was more than alright with me. I loved watching the shore as the boat inched its way along. I followed Cathy up the tiny stairwell and found myself staring at her butt swaying back and forth as she took the steps. It was really cute in that green skirt and I had had enough to drink to not feel guilty for looking. I was proud of myself for making it to the top without losing my plate or drink. \n\nCathy, somehow, found a secluded and empty spot on the corner of the deck. It had two patio chairs and a very small table for our food. This would be the exact spot Mary I would have chosen to enjoy each other's company. I was surprised that a girl like Cathy would want to hide away from the party, especially with an old fart like me. We ate together quietly, occasionally pointing out things on shore as the sun dropped to the horizon. It wasn't long before an attendant stopped by and asked if we wanted refills. Cathy answered in the affirmative before I had to chance to consider. The attendant went away with our plates and soon returned with fresh drinks. \n\nCathy raised her feet onto a cross beam on the railing and relaxed. Her skirt slide down her thigh just a bit and I enjoyed the view. Her legs were well toned. My mind wondered if they felt as smooth as they looked. Her arm reached over the small table between us and her hand landed softly on my arm. \"I'm glad you came with me Doug.\" She wasn't looking at me. It seemed innocent enough so I allowed it to stay. The booze was getting to me. \n\nWe sat there watching the sun disappear talking about nothing important. She liked some of the same TV shows I did. We had very little in common in politics so we stayed off the subject. It was just relaxing conversation with a few chuckles thrown in. We went through two more rounds of drinks. The last arrived before I even knew I ordered it. I was at my limit, but I kept sipping on the new one anyway. Life felt good and there was no real reason to change it up now. \n\nThe band moved away from easy listening jazz to a dance beat with jazz overtones. Cathy smiled and grabbed my hand. \"Come dance with me.\" She rose out of her chair not leaving me with time to respond. I rose with her, to buzzed to feel self conscious about my lack of dance skills. \n\n\"I kind of suck at dancing.\" I laughed as I followed her down the stairs. I was feeling no pain as we entered the band room. There were about a dozen other couples tripping the light fantastic. Cathy pulled me onto the floor and started moving her hips while holding on to my hands. She looked phenomenally sexy. I don't think I ever had a woman that close move her body like Cathy was doing. It was intoxicating watching the waves she put her body through. \n\nCathy laughed at my staring and lifted my chin up with her hand. Once I was looking at her face again, she dropped her hands to my hips and made me move with the music. She became incredibly happy when I began to move so I relaxed my muscles and let her hands move me with the beat. After a song, the booze took control and I let loose enough to allow her to let go, and become more flamboyant. Cathy was a treasure to watch. I was dancing with the best looking girl in the place, and I was having a ball doing it. Her fun became my fun as she used me rub against and bounce off of. \n\nI knew I was getting slightly aroused, but it was just dancing. I bet half the men in the room felt the same way watching this girl twirl and gyrate. There is something about a happy woman that turns on a man. When the woman looks like Cathy, it becomes very hard to control the physical manifestations of that attraction. We took a break after the next song for a glass of water. My guess was that Cathy went dancing a lot, and knew that the body needed more than booze to fuel it. The water picked me up, but didn't lesson the buzz.\n\nCathy had me be back out on the floor the very next song. God, she looked good. I noticed a few jealous stares among the men at the edge of the floor. 'Losers' was all my drunken brain could come up with to describe them. At least for tonight, I was a stud. I may not look like one but the proof was dancing with me. \n\nThe bands next song was a slow dance. I smiled at Cathy and started to lead her off the floor. She was having none of it. She wrapped her hands around my neck and pulled me close. She caught me by surprise and I had no idea where to put my hands. In my drunken state, every part of her body was an erogenous zone. She pulled me closer. Her head was on my shoulder, she pressed her chest into mine, and began to slowly rock her hips. It had been almost thirty years since a woman besides my wife had held me like this. I circled her waist with my arms and tried not to get a hard-on. \n\nHer breasts felt wonderful smashed into my chest. I felt every movement of her hips radiate up my arms and back down my spine. Her hands were softly caressing the back of my neck. I couldn't tell if was intentional and unintentional. It was only the booze I told myself. We're just a bit drunk and it's only a dance. The feeling was incredible, and since I was drunk, I just went with it.\n\nWhen the song ended she tilted her head and kissed my cheek lightly. \"Thanks Doug, that was nice.\" She separated from me with a small smile. I was sure I was five shades of red. The kiss was nicer than the dance. For some reason, I felt like I had just cheated on Mary. It was just one dance and an innocent kiss. I was feeling a guilty anyway. \n\n\"I have to sit down for a bit.\" I told Cathy. Old men could always rely on their lack of endurance as a good excuse. \n\n\"Why don't see if you can get our chairs upstairs back.\" Cathy caressed my arm. \"I need to stop in the little girl's room and I will catch up.\" She headed off to the restrooms. The term \"our chairs\" scared me a bit. I knew it was foolish to think she was sexually interested in me. The dance, the kiss and \"our chairs\" was just a bit much for my mind. \n\nWhen I got to the top deck, I chose some chairs closer to other people. It no longer felt prudent to be alone with Cathy. I was afraid I would misread the signs and embarrass myself and her. She was young, and the young are just more used to touching. It felt better to be in a more public area. \n\nI felt a strong hand on my shoulder. \"You know I will never tell Mary.\" It was Frank and he was three sheets to the wind. I chuckled.\n\n\"Mary is the one who told me to take Cathy out.\" I responded trying to be nonchalant. \"She's just a friend Frank.\"\n\n\"After that dance I just saw, you'll be lucky she isn't pregnant.\" He thought his joke was extra funny. I was concerned that someone else thought the dance was more than just a dance. \n\n\"That's just how kids dance these days, Frank.\" I was getting worried that my imagination was being sparked by a drunk. \"Nothing but a dance.\" I didn't sound as confident as I should have. \n\nFrank patted my shoulder. \"That ain't no kid, Doug.\" He sounded serious as he staggered off, probably seeking another drink. I was glad I found a more public set of chairs. I saw Cathy coming up the stairs with two drinks. It looked like the booze was catching up with her also. I rushed over to grab the drinks before she and they were all over the deck. \n\n\"They were closing the bars.\" She said as she followed me over to the new seats. \"Captain said we will be docking soon.\" She sat down and pulled one of the small tables between us. I set the drinks down and got in my chair. The table seemed like a nice barrier. Sort of line neither would cross enlarging my personal space. I knew I was imagining the affection. I felt much better and took a sip of my drink. The bartender forgot the ice. I was too buzzed to care. \n\nWe talked and laughed during the docking. I could tell that Cathy was a bit drunk. That was a good thing because it meant my brain was still functional even though I was bombed. The last drink put me way over my limit. I knew my morning was going to be hell so I decided to enjoy the night and ignore the impending doom. They announced the disembarking and we didn't move. We were having too much fun discussing 'Game of Thrones'. It wasn't until the threatening third call for disembarking did we move. A sober crew can be such party poopers. \n\nWe helped each other down the stairs and across the gangplank. I had a two block walk back to the hotel and was suddenly concerned about Cathy. There was no way I was going let her walk down the streets this late alone. \"Where are you staying.\" I think I may have slurred 'staying' into 'swaying'. She didn't seem to notice.\n\n\"The Biltmore.\" She started walking toward the hotel. \n\n\"Me too, I'm on the eighth floor.\" I guess it shouldn't have been surprised. It was the main expo hotel. \n\n\"I'm in 834.\" She said and grabbed my hand to steady her steps. Cathy was only about five doors down from my room. \n\n\"Well, then it will be easy to be a gentleman and see you safely to your door.\" I gave her half a bow to emphasis the formality. She laughed. We were bombed. It took us the better part of thirty minutes to make it to the eighth floor. We kept stopping to tell each other something we thought was important. Of course, it was trivial crap that only drunks would think important. All in all, it was a fun walk back.\n\nWe reached 834 and I waited to make sure she still had her key card. \"I had a really good time tonight, Cathy.\" I stammered as I started to say goodbye. She opened the door and turned to me. \n\n\"So did I, Doug.\" Her smile was deadly. She encircled my hand in hers. \"You are a really nice guy.\" She started moving forward and I thought she was trying to move in for a kiss. I stumbled back a step, but she held onto my hand. \n\n\"I've got to get some sleep.\" I looked back to the door of my room. I smiled when I looked back at her. \"It's going to be a tough morning.\" I figured a bit of levity would get me out this awkward situation. There was already too much kissing for one night. She pulled my hand up to her chest.\n\n\"Spend the night with me.\" Her eyes were locked on mine. The words didn't sound drunk, but I knew that they were. I wanted my hand back. but it was pressed between her breasts and it loved it there. My first instinct was to yell \"yes\". I let it pass with visions of Mary packing up and moving out of the house. I was too drunk to think straight. I didn't understand why a woman like her would even give me the time of day. What the hell had happened to fuck up the world so much? I knew I wasn't misinterpreting her now. I snapped my hand back and raised both my hands level with my shoulders, palms out in surrender.\n\n\"I could never do that Mary.\" I knew my eyes were watering as I turned and fled to my room. What the hell did I almost do? I inwardly vowed to never come to another expo without Mary.\n\n\"Shit!\" Cathy exclaimed. It didn't sound drunk, just pissed. My shoulder slammed into the door frame. I was pretty drunk and steering was an issue. I fumbled for my key card. \"Doug wait, there is something I need to tell you.\" I didn't really want to hear anything else. I got my card in the slot and it flashed green. I opened the door and shut it behind me quickly. I braced myself against the door for a few deep breaths. What the hell just happened? \n\nI went into the bathroom and splashed water on my face. When I looked in the mirror I was dumbfounded. I am, at best, an average looking guy. I'm not saying I couldn't grow on someone in time, but there was no reason why Cathy should have bonded with me in half a day. Something didn't smell right. I was too drunk to think straight. I needed to sleep it off and think about it in the morning. \n\nThere was a soft knock at the door. I knew who it was and I didn't want to answer. I was considering if an early flight home was it order. It could cost me a bit, but it would be worth it to not run into Cathy tomorrow. The knock was repeated just as soft as the first set. I called through the door. \"We're just too drunk Cathy. I shouldn't have let it get that far.\" I tried to sound reasonable and give her an out. \"We'll feel better in the morning.\" \n\n\"I only had one drink tonight Doug.\" She sounded sober. I watched her drink all those long island ice teas. I realized I only saw one made for her. \"We need to talk.\" Now I was really out on a limb. Insane crazy woman came to mind. Maybe a thief or a sick pervert. None of those scenarios leaned toward me opening the door. \n\n\"Not tonight Cathy.\" I was drunk but firm. I was definitely getting an early flight home. I could go straight to the airport and take the first available in the morning. ",
        "\"I'm slipping a card under the door.\" I saw an envelope begin to appear. \"It's from Mary.\" Ever have one of those moments where a chill rattles so hard through your body you feel a bit ill. This was one of those times. I looked down at the blue envelope and saw my name written in Mary's hand. I was afraid to pick it up. What kind of trick was this? \"I'm sorry Doug, it was a stupid bet.\" I could hear defeat in Cathy's voice. \"Just read the card so you don't call the police on me.\"\n\nI lifted the envelope and pulled out a birthday card. Inside the cover was a handwritten note.\n\nMy dearest Doug,\n\nYou are the best thing to ever happen to me. It hurts me deeply that my body has changed with age. I know you miss us in bed. I know I have avoided the issue and left you frustrated. It is not my love that changed, it is only my body that has betrayed us. The doctor has told me that my interest may return, but I have made you wait too long. \n\nAs strange as it seems, Cathy is my birthday present to you. I want you to enjoy being with her and bring your heart back to me. I just can't allow you to be without anymore. It hurts me too much. \n\nWith all my love, \n\nMary\n\nShocked, I opened the door and swerved back into the room knowing Cathy would follow. I plopped down on the bed with tears in my eyes. How did I let Mary think I was that desperate? Why did she think she had to do this for me? I would never leave her over sex. I heard the faucet go on in the bathroom and Cathy entered shortly with a glass of water which she handed to me.\n\n\"You better drink some water.\" She sounded like a different person. \"I'm sorry I got you plastered, but you weren't taking the bait.\" I was only half understanding what she was saying. My head was swimming as I drank some of the water, and spilled some on my leg. \n\n\"What's..what's going on.\" The room was spinning a bit. I wondered if my marriage was damaged. I wish Mary was here. \n\n\"Your wife hired me as a sort of surrogate.\" Cathy sat down next to me. \"She told me it would be difficult to get you to agree, but she was adamant that you needed this.\" She rubbed my back as a mother would a sick child. I took and spilled another sip of water. \"I got cocky and said I didn't need the card to get a man in bed. She said I would, and I bet double or nothing that I could.\" Her voice became more soothing. \"Until you, I've never had a problem getting a man naked. I really thought I had you during the dance.\" She was slowly shaking her head. \"I'm sorry for that last triple scotch. I was getting desperate when I saw you didn't go back to the private corner.\"\n\n\"I fucked everything up.\" I meant my marriage. I was worried that I had put too much pressure on Mary. \"I got to get home.\" I started to stand, but my legs weren't working right. The glass of water wasn't in my hand anymore and I didn't know where it went. I feel backward on the bed and knew I wasn't going anywhere now. My eyes closed and I didn't want to open them again. \n\n\"Shhh, you aren't going anywhere tonight.\" I felt myself being dragged more onto the bed. Cathy removed my shoes and put a pillow under my head. \n\n\"I .. calls Mary.\" I barely understood it myself. Something was not right and I needed to call her. To tell her it doesn't matter. I only need her. I didn't know where my phone was and the hotel phone was way over on the night stand. I was drifting out. \n\n\"Hi this is Cathy.\" Cathy was speaking to someone. I couldn't open my eyes to see. \"Ahh no, he is kind of passed out.\" There was a pause. \"I don't think this is working like you wanted it to. Granted it he is pretty drunk, but I think he's scared he is losing you.\" Another pause. \"No, I tried but he wasn't going to even after he saw the card. Look, I'm no expert, but I don't think this is good for him. He is a sweet guy and I don't feel very good about what I did tonight.\" \n\nI tried to open my eyes. She must be talking with Mary. Nothing was working right so I ended up drifting farther away. \"Are you sure?\" I missed part of the conversation. Cathy must be pacing around the room. Her voice was going in and out. \"Well okay, I'm not going to turn that much down.\" Everything went black. \n\nMy head hurt a bit as the light began to attack my eyes. I tried to roll away from the source, but something soft and heavy had my legs pinned. The light was too bright to open my eyes quickly so I brought a hand up to shield them. I felt a wonderful warm and wet sensation between my legs. I hadn't felt anything like it in years. I tried to lift up my head and the movement caused a sharp pain so I relaxed it again. I my cock was hard as rock and being pampered slowly by a wonderful silky tongue. I must be dreaming. \n\nI lifted my head more slowly and it hurt less. I opened my shielded eyes a bit and saw nothing but strong sunlight as my eyes began to adjust. The tongue moved slowly up the underside of my cock and then circled the crown. The heavenly feeling sent shivers through my legs. My vision began to return and I focused on the gorgeous woman between my legs. Scotch, Cathy the birthday card all came slamming back into my mind. \n\n\"Cathy No!\" I tried to pull away but she was laying across my legs. \n\n\"Good morning honey.\" It was Mary's voice but no Mary in the room. Cathy lifted her head and smiled pointing at the phone next to me. It was set to speaker. Cathy returned to my hard-on and sent more twinges up my spine. I was in a bit of shock and stopped trying to escape. \"Isn't Cathy beautiful?\" This was surreal. I had a royal hangover and my wife was asking me my opinion on the girl giving me a blowjob. \n\n\"Mary, we don't have to do this.\" I had no idea what this meant for our marriage. Cathy mouth dropped over my crown and halfway down the shaft. The feeling was incredible. \n\n\"It took me a long time to find the right girl.\" Mary was ignoring my opinion. \"I wasn't sure if I should get someone completely different or someone more like me.\" Cathy's mouth was moving purposely up and down my shaft. Every time she got to the top, her tongue would expertly massage the underside of my crown. I groaned trying hopelessly not to enjoy the sensation. \n\n\"I finally decided to get someone with my features only younger and prettier.\" Mary was speaking like she was picking out curtains. \n\n\"Oh god...\" I was losing the battle trying not to get excited. \"I don't need this Mary. You are the most beautiful woman I know.\" Why was my dick betraying me?\n\n\"Of course you think so, but you have to admit that my breasts have never been as large or perky as hers.\" Mary giggled. Cathy's mouth released my hard-on and her hand wrapped around my shaft. She rose up a bit and placed my cock between to perfect breasts. Her lovely brown eyes looked into mine as she smiled. It was extremely erotic as my wife continued. \"That little button nose is to die for. What I wouldn't give to have that cute little tight ass of hers.\" Cathy returned her mouth to my cock. I felt a strain in my hips and groin and knew I was about to cum with \"not my wife\".\n\n\"Mary... Mary, I can't do this.\" I felt guilty enjoying this so much. I knew my voice sounded strained, but there was nothing I could do about it. \n\n\"Cathy also has some talents that I don't posses.\" I heard a smile behind her voice. \"Something I know all men want, but few women can offer.\" Cathy's hand released my shaft. I looked down as my entire cock disappeared into her throat. I realized they must have scripted part of this. Cathy and Mary must have planned this out while I was sleeping.\n\n\"Mary, oh god, Mary. I love you.\" I couldn't stop my release. I had never had such a professional blowjob and watching my cock disappear sent me over the top. I exploded down Cathy's throat in a series of groans. Once, twice, three times I unloaded into her mouth and Cathy never stopped sucking. I felt her hand lovingly massage my balls as my climax began to wane. She kept sucking, only more tenderly. \n\n\"Now, doesn't your cock feel better?\" I had never heard Mary ever identify my male parts before. I certainly never heard her use the term cock. She even made it sound loving. \n\n\"Yes, it feels much better.\" I had to admit I was pretty backed up. Cathy released my cock and I noticed that was no cum anywhere. I couldn't believe she swallowed it. She just smiled and tenderly stroked by diminishing erection. \"Mary we could have talked about this. I don't need to have sex to love you.\" Clarity was coming back, and I just had sex with someone that wasn't my wife. I couldn't see how this would be good for our marriage. Cathy was just idly ignoring the conversation. \n\n\"I know sweetie. I've always known.\" Mary sounded so reassuring. \"It doesn't mean it has to be that way. Sex is just sex.\" She chuckled a bit. \"It sounds like Cathy is pretty good at it too.\" I can't believe that my wife just complimented the woman who just gave me the best blowjob of my life. \n\n\"You know how weird this is, right?\" I was still having trouble wrapping my head around the whole situation. \"How many marriages could survive with husband sleeping around?\"\n\n\"How many wives pick out the other women?\" Mary wasn't the least bit perturbed. \"Believe it or not, this is as much for me as it is for you. I spent four months finding Cathy. You have to admit, she's quite striking.\" Cathy smiled and stood up and struck a pose. Shit, she was even shaved. I have never touched a bare pussy in my life. I just realized I hadn't heard a word from Cathy since I woke up. \n\n\"Yes, she is stunning.\" I smiled back at Cathy who gave me a naked curtsy. \n\n\"Good. She is going to wash you up and you're going to take her to lunch.\" Now Mary was planning the day for us. Lunch, how late was it? I looked the clock and it was 11:30.\n\n\"Oh crap, I was supposed to meet Frank for a ten o'clock seminar.\" Like that mattered now. It was just my anal side waking up.\n\n\"Frank is giving you the day to recover.\" Mary snickered into the phone. \"I yelled at him for letting you get so drunk last night. I think he thinks he's covering for you.\" \n\n\"Honey, I do love you.\" I really didn't feel up to the expo today. I wondered how long Mary had been planning this. \n\n\"I love you too sweetie. Will talk a bit later today.\" I saw the line drop on the phone and I was once again alone with a young naked goddess.\n\n\"This is really weird, right?\" I looked at Cathy with a dumb expression.\n\n\"I've seen all kinds of weird Doug.\" She held out her hand to pull me up out of bed. \"This is a kind of sweet weird.\" I grabbed her hand and she hauled my naked body up. \"Your wife loves you so much she hired one of the best in the business for you.\" She smiled at her self compliment and led me to the bathroom. I guess I probably smelled and looked pretty bad after last night. I was surprised my head wasn't hurting. Blowjobs cure hangovers, who knew. \n\nThe water was deliciously warm. It was cascading over my chest as Cathy washed my hair from behind. It felt good to have her fingers massaging my scalp. Almost sensual, and very relaxing.\n\n\"So tell me about Mary.\" Cathy said it very conversationally. Almost like small talk. \n\n\"What do you want to know?\" I felt kind of awkward talking about Mary with another woman in the shower. \n\n\"Well, you two used to have a lot of sex didn't you?\" I guess sex was going to be the topic of the day. I was naked, Cathy was naked and Mary just got finished directing my blowjob. What the hell.\n\n\"When we first got married we had sex all the time.\" Cathy was rubbing behind my ears and the top of my neck. \"Everything was so new to us. We would run around the house naked just looking for another room to have sex in. God it was fun.\" I remembered those times fondly. Cathy pushed my head gently under the water to wash the shampoo out. \n\n\"So what got her going back then?\" I had to think about that one. \n\n\"At first, we just needed to be naked and we were both ready.\" I thought back to when I became a more caring lover. \"After a while, we needed a bit of foreplay.\" Cathy pulled my head out of the water and wiped flood from my eyes. \"The foreplay became the fun part.\" I felt some stirrings of arousal begin while I thought of my naked Mary laughing in my arms. \n\n\"How did you get Mary hot?\" Cathy's voice took on a softer tone. Her hands joined the waterfall caressing my chest. She pressed her breasts into my back. \n\n\"I remember the first time I was all revved up and Mary needed more time.\" Cathy's hands moved to my stomach. \"I kind of surprised her when I put her in a chair and removed her pants. She laughed when they got stuck and her ankles. She has always had a pretty laugh. I was so worked up I didn't even remove her panties.\" I was getting an erection remembering Mary so vibrant and beautiful. \n\n\"What happened next?\" Cathy whispered in my ear. I felt a wisp of tongue touch my lobe so very gently. I was starting to get very excited. \n\n\"I dropped to my knees between her legs.\" I chuckled. \"I remembered the apprehension in her eyes when I pulled her panties aside. I had never tried to gone down on her before because she was afraid I wouldn't like it.\" Cathy's hands move down to my erection and began caressing it. My hips were pushing back into her. \"I wasn't going to let her hold me back that day. I needed to taste her. When my tongue hit her pussy she tried to crawl up the back of the chair.\" Cathy started to really stroke my cock in the warm water. \n\n\"There's nothing like a man pleasing his woman.\" She whispered straight into my ear with desire in her tone. Her lips began to nibble on my ear and neck.\n\n\"I held her down in the chair. She tasted so sweet.\" I began to pant and Cathy matched my breathing. \"I became obsessed when I saw the smile on her face. I had to make her cum. I had never seen her look so happy.\" My hips moved in time with her hand. One of her hands dropped down and cradled my balls. \n\n\"She came for you. You made her cum with your tongue.\" Cathy was really pumping me when her sultry voice hit my ear again. I remembered Mary screaming in joy and her entire body went rigid. I remember watching her orgasm with utter fascination knowing I was the cause. My cock exploded in Cathy's hand. I couldn't believe how strong it was as shot after shot hit the wall of the shower. Cathy was moaning in my ear. \"Cum for Mary, Doug. Cum for her.\" My legs locked up as the last spasms echoed through my body. I began to relax as it ebbed, and I heard Cathy snickering in my ear. \n\n\"What's so funny?\" I was curious. I said it with a smile on my lips so it didn't sound like a mean question. Cathy turned me around and looked me in the eyes smiling. \n\n\"I get most guys hard by making them forget their wives.\" She stroked the side of my head. \"You, my dear, are only turned on by thinking of her.\" She grabbed a bar of soap. \"I guess I'm not used to guys who truly love their wives.\" She began washing my chest and arms. I watched her breasts swing back and forth as she scrubbed me down. She was a very beautiful woman. Mary had great taste. Cathy was so much more desirable because Mary chose her. This whole situation was weird, and I felt guilty getting comfortable with it.\n\nI took Cathy downtown for lunch. I really didn't want to run into anyone from work, especially Frank. We found a small Creole seafood place with cozy tables. We picked a table near the window so we could people watch. We had fun commenting on the diverse fashions that came parading by the window. Some of the people, like us, looked like they were just getting started for the day. \n\nCathy was a great communicator. She kept the conversation going without committing to any point of view. I was enjoying the interaction and I wondered if she was enjoying it also, or was this work for her. I wanted to know more about her, but I sensed she really didn't want to go in that direction. I followed her lead and kept to trivial generalities. I just let myself feel good about hanging out with such a beautiful woman. \n\n\"Mary told me you like the superhero movies.\" Cathy smiled at me and I knew more plans were afoot. \"The new Spiderman is showing four blocks from here. They have a matinee in about an hour.\" I laughed.\n\n\"Mary hates when I drag her to those movies.\" It was hard to stop the chuckling. \"I fear you are going to be stuck with a backlog of dreaded tasks.\" Mary was trying to kill two birds with one stone. \n\n\"I certainly won't dread it. I've been collecting comic books for years.\" Cathy looked a bit sheepish as she talked about her private life. \"I've spent way too much on the early issues of the Avengers.\" That was a surprise. I would have never figured her as a fan.\n\n\"No way! You're a collector.\" I was still trying to imagine her curled up in a chair with comic book. The image wouldn't form. \"I kept all of the ones I bought before I was married. I stopped buying them when Mary came along.\" It was pleasant thinking about the two boxes in my basement, each issue individually bagged. \"I have two full boxes at home. I think they hold a couple of hundred each.\" \n\n\"Really, what did you read?\" Cathy looked excited. Not her professional excited, but a personal expression of joy. \n\n\"I was really into X-Men, so I have a lot of those. I know I have a bunch of Spiderman when the secret wars were going on.\" I couldn't believe I was talking with Cathy about comic books. \"I think I even dabbled in the Avengers. Maybe I have a copy you need.\"\n\n\"I keep a list online.\" She pulled a pen out of her purse and scribble on a napkin. \"If you have any that I don't have. I would love to buy them from you.\" She handed me the napkin with a scribbled URL. Her face was all lit up. She was more than a collector. She was addicted.\n\n\"Cathy, if I have any you need, I'll just give them to you.\" I don't know what Mary is paying her, but the books would be my tip. I really loved that blowjob. \n\n\"I couldn't accept...\" She paused for a moment and kind of giggled. \"Yes, I could. I would love to have any you're willing to part with.\" Cathy smiled at me. \"Let's go see Spiderman!\" \n\nWe walked hand in hand to the theater. I felt like I was walking with my girlfriend. I guess she was for the day. Cathy was practically bouncing down the street. I couldn't believe the change in her after we talked about comic books. She looked the same, but her excitement lost some of the fakeness that I didn't realize was there before. We spent the four blocks discussing our favorite Marvel/DC movies and chastised the directors for taking liberties with the stories. I sensed a bond growing. We might actually end up as friends, which might screw up Mary's plans. I don't think Mary figured I would ever talk with Cathy after the expo. \n\nWe shared a box of popcorn and enjoyed the movie. I don't know what it is about hero movies, you know the ending before they start, but you still find yourself cheering for the masked avenger and hissing at the villains. It must be the happy ending that sucks me in. Knowing that everything is right with the world when projector finally stops has a strong appeal.\n\nCathy grabbed my hand when we left the theater. \"I want to show you my collection.\" She spun in front of me pulling me along. \"My apartment is a few blocks from here, just down that way.\" She was pointing down the road to the east. \n\n\"That would be cool!\" I was excited to know more about Cathy. I was surprised she would want to share her real self with me. I followed happily and she wrapped her other arm mine and leaned into me. It was more affectionate than I expected, but I let it slide and enjoyed her closeness. I did like the smell of hair. \n\nCathy had a small apartment on the third floor of a renovated stone building. It looked like it might have been a bank at one time, but it was hard to tell. Cathy opened the door to her apartment and I entered a different world. I would peg Cathy at or nearing thirty. Her apartment looked like a college dorm room. Instead of framed pictures, she had hung posters. The furniture was an eclectic mix of comfortable pieces. The carpeting was old, but covered with throw rugs giving it an Indian like flair. Strangely, I felt perfectly at home. ",
        "\"I don't usually have visitors.\" She said as she scooted ahead to move dirty dishes from the counter into the sink. I smiled at her.\n\n\"I like it.\" I nodded my head looking around. My eyes drifted to a set of bookcases. I couldn't believe what I was seeing. They were filled with board games and not the crappy ones found in most homes. It is rare to meet someone who shared my affinity for designer games. Mary will play a few of the lighter ones with me. I belonged to a group that plays once a month where I got to pull out the real meat and potato games. I sauntered over while Cathy was busy straightening up the open kitchen. \n\nAll the good standards where there; Puerto Rico, Stone age, Carcassonne, Settlers, and Caylus to name a few. There were even a few new titles that I haven't had a chance to play yet. Some were still in shrink wrap. One of the curses of being a board gamer is finding people willing to learn new games. I have many unplayed titles myself. My finger brushed along a few variations of Ticket to Ride and many boxes of Dominion. Cathy was a gamer. I wondered if Mary knew that about her. Maybe she thought a game with a sexy girl would be part of the present. Cathy moved next to me looking a bit embarrassed. \n\n\"That's my other collection. Kind of juvenile I know.\" She put her hand tenderly on top of one of the boxes. \"Most people don't understand that they are a so much better than Monopoly.\" \n\n\"How can you have Agricola shrink wrapped with an open Caverna right next to it?\" They were both by the same designer, but Agricola was much older. Her smile brightened the whole room. \n\n\"Free shipping.\" Cathy said as she softly punching me in the arm. \"Agricola put me over a hundred so it only cost me about ten bucks.\" She softly caressed where her faux punch hit. \"Doug, you're a gamer.\"\n\n\"Once a month, every month.\" I smiled back. \"I think you duplicate a large portion of my collection right here.\" \n\n\"Do you think Mary knew about this?\" Her face returned to a more serious look. \"This has got to be more than a coincidence.\" \n\n\"I was thinking the same thing.\" I looked at Cathy in a new light. If I wasn't so in love with Mary, Cathy would be my fantasy girl. She didn't look like nerd, but she walked like nerd. What was Mary thinking? \"I wouldn't mind a quick Nordic Countries, if you're game?\" She ripped the game off the shelf.\n\n\"I'll kick your ass.\" She was more than willing. She was ecstatic. I guess you can say she was getting paid to play a game. I would have quit my job a long time ago if there was any money in playing board games. \n\nWe had it set up with Cathy as purple and I was running black. We spent the next fifteen minutes warring over sections of railroad track. As the game wound down, I realized I was holding the necessary cards to finish my tickets and call end game. I knew Cathy needed more time. She had just drawn new tickets and her expression led me to believe they weren't easy ones. I decided to give her a few more turns. \n\nI played my red cards to take a neutral set of track. That left me no reds for the red section I needed. I spent seven turns trying to recollect the reds necessary to complete the last section. I didn't make it by the time Cathy forced end game. We turned our tickets and I lost big by missing that red route. Her smile was contagious. She didn't gloat while we cleaned up the pieces, which made my loss more pleasant. \n\nCathy put the box back on the shelf in its spot. She returned to me and held out her hand. I took it and rose out of my chair and she pulled me into the bedroom. I was expecting to see her comic book collection. She pulled me the end of her bed and pushed me down on it. With the smile still frozen on her face, she reached down, and pulled her shirt off over her head. \n\n\"I won so I get to fuck you now.\" She removed her bra and let her gorgeous breasts free. \n\n\"What if I had won?\" Cathy laughed. \n\n\"Same thing, I just wouldn't have enjoyed it as much.\" Cathy began undoing her pants. I kicked off my shoes and began unbuttoning my shirt. Good thing I let her win, I thought. She dropped her pants and panties in a flourish and stepped out of them. She was moving a bit quick, like she was anxious. I was only half hard by the time she was pulling my pants off my legs. My shorts followed as I removed my shirt.\n\nCathy dropped to her knees and immediately closed her mouth around my cock. She used her hands and lips to coax me to hardness. There was little sensuality to her technique, just raw sex. She popped her mouth off when she was satisfied and smiled as she climbed up onto the bed and over me. Cathy grabbed my shaft and positioned me at her shaved entrance. She dragged her pussy back and forth across my little head. She was soaking and I was lubricated quickly. I sensed her need and it enhanced my mine. \n\nCathy slowly sank down my shaft, carefully guiding it with her hand. She removed her hand as our groins met and she looked up at the ceiling. \"God, I wanted this.\" She moaned. Cathy was talking to herself. I have only seen need in one other woman in my life. It was incredible seeing it in Cathy. I felt twenty again as I reached up and tenderly groped her breasts. She looked so beautiful mounted on me like she was. Her hips began grinding back and forth into my pelvis. I felt my cock moving from the front to the back inside her warm pussy.\n\nCathy dropped forward and smashed her breasts into my chest. Her hips increased, now grinding her clit into my pelvis. It felt like my cock was going to be ripped off. I couldn't believe how excited she was. She was breathing heavy when her lips dropped to my ear.\n\n\"I saw what you did. You let me win.\" Cathy's hips were grinding harder and her legs were twitching out of rhythm. \"That's so fucking sexy.\" She switched to my other ear. \"Don't do it again.\" She licked my ear panting loudly and then moved to my mouth. Cathy's lips attacked mine. Her tongue flicked between my lips as I heard a groan begin in her gut. I was forcing my hips into Cathy's. Her impending orgasm was driving mine. Her kiss became more passionate. I wrapped my arms around her and pulled her close as her entire body began to tremble and she moaned deeply into my mouth. I was driving my hips upward as her pussy clamped down on my cock. I exploded into my trembling goddess which sent another wave through her body. \n\n\"God...Oh God!\" Her limbs were tightening and I felt her pelvis begin jerking as I spilled another load into her. I held her tight as her head dropped to my shoulder. We were both soaked in sweat and Cathy was still panting. I began caressing her back wondering where her desire came from. I couldn't believe how enjoyable it was. I could really fall for a girl like Cathy. \n\nThe thought hit me a bit hard. There was no Mary in that thought. What the hell was I doing? I rolled Cathy off me a little too quickly and sat up. \"I liked that too much.\" I told her while looking at the wall. I wasn't sure if I should leave. I wasn't sure of anything. I heard a small whimper and looked over at water eyes.\n\n\"I'm sorry,\" Cathy was trying not to cry, \"I didn't mean for that.\" I knew what she meant and realized she felt it too. What the hell was Mary thinking when she thought this up? I lay back down and pulled Cathy to my chest. I couldn't just leave after that. \n\n\"What the hell was Mary thinking?\" I said out loud. \n\n\"You need to call her, Doug.\" I felt her crying on my chest. \"You can't stay here. It will fuck everything up.\" I stroked her hair not wanting to break the embrace, but knowing I should. I sat up again bringing her with me. I wiped her tears away with my thumb and kissed her on the forehead. \n\n\"I'm sorry, I have to go.\" I stood up slowly and started dressing. Cathy didn't move from the bed and just stared at the floor. \"Are you going to be alright?\" I said it softly. She looked up at me.\n\n\"I'm just going to lay here and listen to some music.\" She sighed a bit. \"I'll be alright.\" I could tell that if I didn't leave, she wouldn't be alright. I finished dressing and headed to the door. \n\n\"Goodbye Cathy.\" I said it without looking back. There was no reply so I closed her bedroom door quietly and headed to the apartment door. Before I reached the handle I heard the unmistakable beginning of \"Sugar Magnolia\" wafting from behind the bedroom door. Something was really wrong. Things began to click in my brain and my eyes filled with water. I ran back to the bedroom and pushed open the door. \n\n\"Grateful Dead is your favorite group.\" Tears were pouring from my eyes. I already knew the answer because it was mine. Cathy was shocked that I was back and only nodded. I sat back down on the bed. \"Something is really wrong. Mary wants us together.\" I couldn't hold back the tears. There was only one reason she would do that. I didn't see the signs, and I should have. Cathy moved close and hugged me from behind. \n\n\"Why would she do that?\" Cathy was tearing up again. \"I know she loves you, and you love her.\" I started sobbing. I didn't want to say it out loud. \"Oh fuck. That can't be it, Doug.\" She guessed what I already knew. I forced myself to stop crying and Cathy wiped my tears away. \"You have to call her NOW!\" Cathy tried to get my phone out of my pocket. I reached in and pulled it out. She reached over and turned off the stereo, got up and left the room closing the door behind her. \n\n\"Hi Mary.\" I wasn't sure how to begin. \n\n\"Hi Doug. Did you and Cathy have fun today?\" She sounded upbeat. I shouldn't do this over the phone, but waiting would be worse. \n\n\"I know what you're doing Mary.\" There was long pause. I didn't want to follow up. I was afraid I would start crying. \n\n\"We aren't back to that again. It's just sex silly.\" Mary didn't sound as confident as this morning. \"Try and tell me you aren't enjoying her.\"\n\n\"When were you going to tell me?\" I didn't want to talk about Cathy anymore. I also didn't want to be mean. Mary had to know that I knew. I heard the crying start and my eyes filled again.\n\n\"After you fell in love with her. I couldn't bear knowing I would leave you alone.\" Mary was trying not to get choked up and failing miserably. I am sure she could hear my sobbing. \n\n\"I'm so sorry I didn't see it. There's got to be something we can do?\" I was crying again. I should be home with her. \n\n\"No. Just come home and bring Cathy with you.\" Mary could hardly get the sentence out. There was no way I was bringing Cathy home. \n\n\"I'm coming home alone. I love you and will always love you.\" I was more forceful. \"It will be you and me and no one else.\" I heard her crying again. \n\n\"Okay then let me talk to Cathy.\" I didn't want to let that happen so I paused trying to think up a reason why. \"I'll just call her anyway, Doug.\" Mary was persistent. I didn't like the idea of sharing this time with anyone else. I opened the bedroom door. Cathy was sitting on the couch in a robe. Her eyes were a sore red. \n\n\"She wants to talk to you.\" I held out the phone. I should have just hung up and went home. Cathy hesitantly grabbed the phone.\n\n\"Hello.\" Cathy's voice was weak. Her head was slumped while she stared at the floor. I knew she was in an impossible situation. She raised her teary eyes to me. \"Yes.\" There was another long pause and Cathy wiped her eyes. \"I promise.\" I wasn't sure what she was promising, and I didn't want to know. \"Okay.\" Cathy hung up the call and stood up to hand me the phone. As I took it she leaned in and kissed my cheek. \n\n\"You need to go home Doug.\" She led me to the door. I could see she was struggling with her thoughts. I didn't have time to help her. I needed to get home to Mary. I left never expecting to see her again. \n\n...\n\nNovember 12th was always a sad day. Mary died seven years ago this very day and my drive home from work was all the more tedious. I really wished I could wipe the date off the calendar. Everyone at work knew and left me alone which made the day even longer. When you lose someone as close as Mary, part of you dies with them. There is little you can do about it. You mourn and time begins to heal, but you will always feel that something is missing. I pulled into the driveway and waited for the garage door to finish its ascent. Our love was pure and uncluttered. Something like that couldn't be forgotten. I turned off the engine and headed for the kitchen door. I took a deep breath to clear my mind and opened the door. \n\n\"Daddy!\" the cutest raven haired five year old girl came running into my arms. It was hard to be sullen when you're greeted like that. It wouldn't have mattered what kind of day it was. \n\n\"How's my Mary doing?\" I said as I wrapped my arms around her and hoisted her to my hip. She felt so comfortable hanging there. I kissed her forehead and hugged her close. \n\n\"Mommy said we could play Candy Land when you got home.\" Mary was all smiles and I could tell she was super excited about the impending game. \"I got it all setup and I didn't need any help.\" She wiggled out of my arms and ran toward the dining room where I was sure the board was ready to go. \n\n\"Give daddy a chance to breathe honey.\" Cathy came out of the hallway smiling. She was as lovely as ever. Motherhood suited her and she wore it so well. \"Long day?\" She kissed me and tenderly stroked the side of my face. She knew what day it was. She had promised Mary that she would be there at the funeral. When Mary asked if she could love me, Cathy had answered \"yes\". Mary made sure I wasn't going to be alone. \n\n\"It was.\" I smiled. \"It's really good to be home.\"\n\n\"Mommy...daddy it's ready.\" Mary was still the center of my life."
    ],
    "authorname": "DreamCloud",
    "tags": [
        "wife",
        "cheating",
        "marriage"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-gift-131"
}