{
    "title": "Taking The Class Pt. 02",
    "pages": [
        "Chapter 1: Friday Morning, 8:54AM \u2013 Life's A Lot More Fun When You Aren't Responsible For Your Actions \n\n\"Oh, fuck!\" Will slid his arms up along the back of the girl's shirt as her torso bonelessly tipped away from him. Her legs were still locked around his hips, a sticky mess between them at the place where they were joined together. \n\n\"Not the most graceful finish, Prez,\" he said, holding her body in place so she didn't fall off. \"But definitely an A+ for the coursework.\" Fuck, if I didn't know better I'd think her Class was actually [Succubus]. \"Prez? Wakey, wakey, Prez, time to rise and shine.\" \n\nHe pressed a couple fingers to her neck. She's not dead, so that's a positive. Ugh, why did I even get involved in this? Because she's a crazy hot firecracker and she blew my fucking mind on Monday, obviously. He flexed his now-defeated dick inside her. How does she even do it? I've been with girls who do kegels before, but that was on another level. He flexed once more. Is it a Class thing? \n\n\"Prez,\" he repeated. \n\nHe looked down. Prez's dark eyes were rolled back into her head, and the whites of her eyes were on display. Her mouth was open, slack. He shifted his stance, leaning her more effectively against the railing of the stairwell to lessen his burden. Her head lolled to the side, reddish-brown hair covering her face. \n\n\"Prez, I think I hear Principal DaSilva calling you.\" He glanced at her face. \"It's no fun when you're out cold, Prez!\" He tapped her on the cheek a couple times. \n\nHaven't checked these out yet. May as well... He reached up with one hand and cupped it to her chest, squeezing lightly. Not bad, Prez. Maybe a B cup? Definitely suits you. \n\nAbruptly, Prez moved. She took a deep breath, then stiffened. \n\nOh, fuck. \n\nShe looked up at him with one eye from between the long locks that had shifted to cover most of her face. \n\n\"Um,\" she said. Her eye widened. She looked down. He squeezed reflexively. Really the perfect size for her. And the bra texture under her shirt... \n\nShe continued staring at his hand. He squeezed again, pressing his luck. The guys always tell me not to stick my dick in crazy, but crazy is the best. It just is. \n\n\"Prez! So glad you're awake, really, I am. I was about to start round two, and it would have been so boring if you missed\u2014you okay there, Prez? Um, you seem\u2014\" \n\n\"Put me down. {Stop fucking groping me.}\" \n\nHe grinned, but didn't move. She's so hot when she's mad; it's insane. How did I not realize this sooner? \"Oh, you wanna lay down this time? Cool wi\u2014\" \n\n\"Now. {Don't fuck with me.}\" \n\nI think she might actually try to kill me again if I keep winding her up. \"Whatever you say, Prez.\" He moved back from the railing and slowly squatted down with both legs, lowering her closer to the ground. \n\nShe unwrapped her legs, holding on around his neck\u2014and partly to his hair\u2014as she regained her footing. That's gotta be intentional. Then she pushed him back, but not before looking up at him, smirking, and giving him one last squeeze. \n\nMaybe I've conquered another fair maiden with this mighty sword of mine! Hah, that was corny. I should hit Don with that later. Also it's feeling more like I'm the one who just got conquered... \n\nHis conquered dick felt cold after being released from her warm embrace. \"So you're still normal now, Prez?\" He started pulling up and re-buckling his pants. \"I hate to dick and dash\u2014and believe me, for you I'd stick around a bit longer if you wanted\u2014but I should probably get back for this French test. Mrs. Schmidt is a real stickler\u2014well, I'm sure you know, and\u2014\" \n\n\"Feeling great,\" Prez said, interrupting him like usual. She leaned back and stretched her arms out over her head. After a cute-sounding grunt, she noticed Will eye-groping her still-bare crotch and pulled her skirt back down. She tossed her head, throwing her hair back and mostly over her shoulder. \"Thanks, Will.\" She smiled at him, an oddly happy smile considering who was on the receiving end. \n\n\"Uh,\" said Will. That doesn't sound or feel normal coming from her? \"You sure?\" \n\nShe knelt down and reached into her purse, rummaging around for a moment until her hand came out with her phone. \"Oh yes, I'm quite sure. {I think this might be the best I've felt all week.}\" She looked up at him, seeing him still making no motions to leave. \"Are you waiting for a goodbye kiss or something? {Get out of here, my legs are still wobbly and I don't want you to see.}\" She rolled her eyes. \"I said you had five minutes, but it seems like you needed a bit longer to satisfy me. {Fuck, that was better than I expected.}\" She held up her phone, displaying the time. \n\n\"Ah, shit.\" I guess that settles it. Father will be pissed that I'm not in the top ten anymore... \"Well then, I guess I should be heading out. You can owe me on that second round.\" He winked. \n\n\"In your dreams. {I'll think about it!}\" she giggled. \n\nHe gawped at her. Who is she? Then he shook his head and started down the stairs, taking them one at a time and speaking as he went. \"For sure, Prez. We'll talk more later, I was serious when I said I wanted to fix things between us. I feel like we got off to a bad start...\" \n\nHe pushed through the one-way fire exit door at the bottom. Once outside, he didn't pick up his pace, continuing at a slightly above-average walk. Well, ups and downs for the morning, I suppose. I think Prez actually fucked my brains out just now. What a mess that girl is, I should really steer clear. But that pussy... \n\nHe reached his vehicle\u2014a big, red fire truck his father had given him when he got his driving license\u2014and unlocked it with the fob in his pocket. And now I get to try and convince Mrs. Schmidt to give me a do-over on this exam somehow. Without my Skill. Between that and rescuing-then-nailing Prez this morning, I feel like today is the ultra-hard difficulty and Mrs. Schmidt is the final boss. He got into the truck, adjusting himself against the soft leather seats, and pressed the button next to the wheel to start the vehicle. \n\nAccording to what Ayanna said, Prez's Class makes her horny sometimes. He pulled out of the parking lot and began driving, maintaining a reasonable speed. Do girls have a different metric for horniness or something? That was wild. Like she was a different person entirely. \n\nHe flicked on his blinker in preparation. Damn, that tonguework was pretty amazing though. If she can suck like she can fuck... \n\nWill turned at the corner, banking the vehicle to the right. Nah, I can't. She's hot, she practically fucked me to death just now, but she's just too crazy. Even for me. I'll square things away so I don't have to keep looking over my shoulder and then we'll go back to how things were. She and her crazy Class can figure out whatever they need to do without me. \n\nHe drove for a few minutes while his mind drifted. That ass in those jeans on Monday, though... \n\nHe shook his head, trying to clear it. Ugh, that was dumb. I really didn't think the Skill would be so effective. And in a completely unintended way. Will recalled part of his earlier encounter with Prez's best friend. \n\n\"You got a lot of nerve asking about her after blackmailing her like that on Monday,\" Ayanna had said, her eyes fierce and voice cold. \n\n\"What? Nah, Ayanna, you know me better than that, don't you? It was just a kinky sex thing.\" \n\n\"A what?\" Ayanna's scowl became a confused scowl. \"She told me about it, how you said you were going to ruin her life if she said no. I thought I knew you, Will. I thought better of you, too.\" \n\n\"Hold on, hold on. I explicitly\u2014and I was very clear about this\u2014said that if she said no, I'd only do what she'd expect of me. Now Ayanna, if it's me we're talking about, what would you expect me to do in the case where she said no?\" \n\nThe tall, athletic girl blinked. \n\nHe'd wanted to check out her bust, the halter top taunting him, but this felt like a serious conversation so he'd maintained eye contact. \n\n\"Uh,\" she said, thinking. \"I guess it's you, so I'd expect that you'd do...um...nothing? Because you're Will?\" \n\n\"I planned to call her a cheater when we were alone, but yeah, why would I do anything? I don't particularly care if she cheats.\" \n\n\"Um.\" Ayanna had a completely baffled expression on her face. \n\nWill's eyes had widened. \"You mean she thought I was seriously going to do something? Rat her out? But...\" His brain had lost its train of thought mid-sentence. \"Anyone who knows me at all would know...\" \n\nAnd he'd groaned, realizing who they were talking about. \n\nHe stopped at yet another intersection. Of course I'd get all red lights when I'm in a rush. Eh, probably doesn't matter since the test started almost twenty minutes ago. \n\nHe sat back in his seat, motionless. I should turn on the radio. But I'm basically there, what's the point? \n\nWill continued his drive, daydreaming intermittently. I've been with dominant women before, but this wasn't quite the same. A flash of reddish-brown hair passed through his thoughts. It was like she was seeing how long I could withstand her. \n\nHe rested his left arm up against the window, propping his head up. Wild. She said I took longer than five minutes, but she seemed pretty happy. That's good. Right? I'm not even sure how I managed it, I thought I was going to lose it the second she started milking me. \n\nHe pulled into a parking spot in the school lot. One hand opened his door while the other reached over, unbuckling his seatbelt. He paused before stepping out. Wait a minute. He felt at the crotch of his pants, then hesitantly reached a hand inside the waist. I didn't think about it before, but I should need a shower right now. This should be practically a war zone. But it's not. He was completely dry, and he felt clean. Ah well, no time to worry about it now. \n\nHe stepped out and walked over to an entrance near the cafeteria. There's usually nobody here in the morning except for Nathan, and he's cool... \n\nWill opened the door and walked in. \n\nNathan turned his head, looking up from the book he'd been reading. His tiny desk\u2014repurposed from a classroom desk\u2014confined him in a way that was almost comical. His gut rested over it at the perfect height, creating the appearance that the desk was meant to support his bulk. \n\n\"Hey Will,\" he said. \n\n\"Hey Nathan, how's this one going? Was I right?\" \n\n\"Yeah, Will, you were so right. He's really gone back to his roots with this, great recommendation. Thanks again. Feels like the time is flying by. Much better than that one Sheila suggested.\" He leaned across the desk, beckoning the student forward. \n\nWill moved closer, entering the bigger man's confidence. \n\n\"I lied to her and said I finished it,\" Nathan said in a low voice, \"But between the two of us, I couldn't make heads or tails of it. The whole thing where the bad guy always got to have his perspective and he had all these problems? Totally unrealistic. And even if it were true, nobody wants to read about that. Just gimme some scumbag that I can really hate. You know,\" he pulled out his finger guns, \"someone who's just bad.\" He mimed firing his digital pistols. \n\n\"Hah, I know exactly what you mean,\" Will said. Mrs. Erikson has no sense of her audience. Nathan doesn't want to think while he works, he wants something mindless that he can put down at a moment's notice if he has to and pick up again just as quickly. \"I think you'll also like...\" \n\nIt had been a couple more minutes of in-depth genre discussion before Will had managed to extricate himself. \n\n\"Sorry for taking so much of your time, you probably gotta get to class, huh?\" Nathan looked embarrassed for getting so caught up. \n\n\"Don't worry about it, Nathan. I like our chats. You know, you're the only other person I know who likes to read thriller novels? If we didn't catch up every once in a while, who would I have to talk to about all these great books?\" \n\nNathan grinned and held his right fist up. \"I've said it before, I'll say it again.\" Will bumped the security guard's fist with his own right fist. \"You might be one of these suburban rich kids, but you're different. And I can appreciate it.\" \n\n\"You're a good guy, Nathan. You should sign up to visit the book club sometime. I'm sure they'd love to get a different perspective. Maybe they could give you some other recommendations, too. Help keep your mind off things. How's she doing, by the way?\" \n\nNathan's grin faded a little. \"Naw, I don't wanna bother them, I'm sure I'll see you around if I need something new. And she's doing really good lately, thanks for asking. The doctor's been saying everything looks great, and her appetite's even starting to come back.\" \n\n\"That's great, Nathan. Really. I'm so happy to hear she's doing better.\" Will felt his eyes misting over a bit, despite his best efforts. \"Any idea if she'll be able to go back to school for next year?\" \n\nNathan sighed and shook his head. \"Not yet. But M\u00e1rcia and I are keeping our fingers crossed and our prayers focused.\" \n\n\"I'll keep mine crossed, too,\" Will said, holding up a hand with his fingers crossed. \n\n\"Thanks, Will.\" Nathan nodded. \"You oughta get to class...\" \n\n* * * \n\n\"Madame Schmidt, please be a little more reasonable. I'm\u2014\" \n\n\"No, William White, I'm already being quite reasonable by letting you take this exam using the remaining time in the period, aren't I? {I'm such a great teacher.} You expect to show up thirty five minutes into the period, without a pass, and have no troubles? {Do you think you can flash those blue eyes at me and get what you want like you do with the female students?} I think not. {I am no pushover.} I've seen your kind before, William. {You remind me of a boy I dated when I was younger.} You lack discipline, focus. {He broke my heart and ran off.} Maybe this will help to instill some in you. {Someone needs to teach you to take things more seriously, and I will be the one to do it if nobody else does.}\" \n\n\"But\u2014\" \n\n\"No, and that's final. You have the rest of the period, but the more time you spend here arguing with me, the less time you'll have to work. {I should not be giving you this time at all after you show such disrespect for my class.} And this is a doozy of a test, I can assure you.\" \n\nWill sighed. \"Yes, Madame Schmidt. Thank you for your generosity.\" \n\nHer eyes narrowed, trying to determine if he was being sarcastic. After a moment, she harrumphed and opened the door, admitting him into the classroom. \n\nThe sound of pencils scratching stopped for a moment as everyone looked up. \n\n\"Bonjour,\" he said, ignoring his teacher's glare. Will smiled and waved. His classmates giggled, snickered, and tittered in response before resuming their work. \n\n\"Here.\" A paper was pressed to his chest. \"Take a seat. No talking, this is an exam. {I should not have given you this time at all.}\" \n\n\"Danke,\" he replied in her native language. \n\n\"Bitte,\" said Mrs. Schmidt. \n\nWill walked to the back of the room before taking his usual seat in the corner. He placed the test on his desk, then flipped it over right side up. He pulled a pencil from behind his ear and went to work. I should never have dropped Spanish. Ugh, what a pain. Is there even a point to this? I've only got like five minutes... \n\nA few minutes later, the door opened, and Prez poked her head in. Will's eyes nearly popped out of his head when he looked up. What. \n\nShe glanced at him, then beckoned politely for Mrs. Schmidt to join her in the hallway. \n\nThat's Prez. So fucking elegant. All the time. The contrast is mind-blowing. \n\nThe bell rang, and Mrs. Schmidt reappeared, alone. \n\nWill placed the pencil back behind his ear, then stood. I wonder what that was about. \n\nHe walked towards the front of the class. A few students were still trying to scribble down answers at the last second. He went to place his paper in the basket, but Mrs. Schmidt snatched it away. \n\n\"William, why didn't you tell me you were helping Alaina with last-minute planning for the sophomore class dance tonight? {I'm so embarrassed, I should not be letting other things affect my judgment of students like you.} She could have written you a pass.\" \n\nWhat. \"I didn't know she could write passes?\" Will struggled to find a reply. \n\nMrs. Schmidt gave him a blank look. \"William, this is Alaina Bishop we're talking about. Next time, skip your excuses and have her write you a pass. Come back after school, you can take the exam then. I trust you not to speak with your classmates about the test beforehand?\" She gave him a piercing stare. \n\n\"Madame Schmidt, you know I would never do such a thing. I'm on the student council, too, as you're aware.\" \n\nMrs. Schmidt paused and gave him the look. \n\n* * * \n\nThe rest of the day had passed sluggishly up until Chemistry. Then it slowed to an absolute crawl. \n\nPrez is super cute with glasses, but it's that sexy librarian kind of look where it's hot because it's almost forbidden to think that way about her. Prez without glasses... His mind drifted back. That was a totally different kind of hot. She should go without them sometimes, it's not like she even needs them. \n\nWill had moderated his daydreaming, but the best he'd been able to manage was to lock his vision onto the blackboard to avoid staring at her for the duration of the class. This is ridiculous. I'm done with her. I have to be, she's just too crazy. I can't keep screwing an [Onahole]. \n\n* * * \n\nHistory, his last period, was marginally better, if only because he wasn't stuck in the same room for two consecutive periods. With her. \n\nAt least it's Friday. I'll see the guys after this and get my head on straight. Where did Don say we were going tonight? Ah, shit, I think he wanted to hit up Sky again? That was almost a disaster last time we all went, but I guess the girls are hyper enough from the music and drugs. Should help clear my head, and Tiff will probably be there. We're supposed to hit the gym before that, though. Today is\u2014 \n\n\"Hey. {Pay attention to me.}\" \n\nHe started. Students were trickling out the door. He'd been resting his hand on his desk and gazing blankly at the blackboard. Wow, I was really out of it. I gotta get it together. \n\nLooking over, he saw that it was the source of his distraction coming to visit him. \"Hey there, Prez, thanks again for bailing me out with Mrs. Schmidt. To what do I owe this pleasure?\" \n\n\"I'd like your assistance finishing that item we discussed this morning. {We need to talk.} After your exam, of course.\" \n\nOh, she wants to have that talk. But we definitely can't talk about anything related to her Class at school. Or anywhere public. I'd better try to push this off... \"Prez, I'd love to, but\u2014\" \n\n\"Great. I'll see you at three in the SC office. {Don't you dare be late this time.}\" She turned and walked away, rejoining Ayanna and heading towards the exit. \n\nHoo boy. I'm gonna have to get her to see reason on this somehow. \n\nThe track star looked back at him over her shoulder, away from Prez, and gave him a wink and a thumbs up. \n\nThat was a quick turnaround from one of them, at least. And I even avoided using a Skill for it this morning. Good thing, too, I needed all three at the FCF when I was committing a felony. The guys are gonna be pissed tonight when I tell them I'm tapped out... ",
        "* * * \n\nWill trudged towards Prez's office, a grin on his face. French exam was about as expected. I even finished early and had that nice chat with those sophomore girls who were nervous about their dates tonight. Adorable. Troublesome, but adorable. And who's to say that it's not customary to give a blowjob as a thank-you after a dance if the girl has a good time? \n\nHe rounded the last corner, bringing the doorway into sight. He slowed his gait, checking the time on his phone. 2:55. Perfect, I'm early. Nothing to complain about this time! He stowed the phone in his pocket. This is going to go smoothly, I can feel it. \n\nHe opened the door and strolled in. \n\n\"Right on time. {Finally, you're here.}\" Prez commented, leaning against the front of her desk. She crossed her arms in front of her. \n\nI can't win. \n\n\"You know, Will,\" she continued, \"you should probably come to some of the actual meetings. {Why don't you ever show up to do your job?} If you're my vice president, it would be helpful to have you around to handle vice president duties when we need it. {How did you even get elected?}\" \n\n\"But if all of us are here at once, Prez, who will be out there listening to the will of the people, learning about their wants and needs?\" \n\n\"Will. {Ugh, are you fucking serious right now?} It's thirty minutes twice a week. {It's hardly any time at all.} Every week. {I make the time to be there, why can't you?} You show up, on average, once a month. {This is a generous estimate.} If that. {Very generous.}\" \n\n\"Hey, that's not totally accurate, is it? I was here for at least two meetings last month. There was that one where Theresa and Ron argued about how best to solicit ideas for Senior Day for long enough that I decided to catch up on my calculus homework. And then Theresa was going over some of the budget-y details for Macbeth\u2014you looked truly ravishing, by the way, your best performance yet, if I may be so bold\u2014and doing a line-by-line of your accounting\u2014\" \n\n\"Yeah, yeah, I know. {I do my best.}\" She sighed, looking down at her shoes. She kicked one of her feet lightly against the other. \"I just wish I didn't always have to deal with that all by myself. {It would be nice if you helped out a bit.} It's tiring, y'know? {I'm exhausted.}\" \n\nWill blinked. Is this...are we having a moment? Ah, shit, I'm gonna fuck this up for sure. \"You...want my help?\" he asked tentatively. \n\nShe shook her head, then uncrossed her arms and looked back up. \"No, I've got it. {Ugh, what am I thinking?}\" Her gaze turned predatory. \"Pull down the shade and lock the door. We have some squaring away to do, don't we? {I want to know everything.}\" \n\nHe held up his hands in front of him. \"Hold on, Prez. Like I said, we really can't talk about this at school.\" \n\nShe raised an eyebrow. \n\n\"I...\" He trailed off, running a hand through his hair. This is such a hassle to explain. \"How much do you really know about Classes, Prez? You've read about it, sure, and you've had a Skill used on you twice that I know of\u2014\" \n\nShe glared. \n\n\"\u2014And that definitely won't happen again, I'm sure, but my question still stands: What do you know?\" \n\nPrez maintained her glare while she thought. So cute! Fuck, snap out of it! \n\n\"Classes began appearing after the first world war. We get them when we turn eighteen, though nobody knows what causes it yet. Classes grant Skills, Traits, and Quirks,\" she grimaced at the last, \"which are used actively, passively, and counter-productively, respectively. Classes have ranks, called 'levels', which determine their relative power. Typically people gain a Skill or a Trait every fifth level, and starting around level fifty a Class has the potential to change into a different Class. {I really need mine to change.}\" She tapped a finger against the desk. \"I think that's it? {Did I miss anything?}\" \n\nWill nodded. How to phrase this so she doesn't go full Prez on me? \n\n\"Can I ask you a question about Classes? {I need to know something about my Class.}\" she asked. \n\n\"Is it about your Class?\" \n\n\"Yes?\" \n\n\"Then no, not right now,\" Will replied. \n\nPrez started tapping her finger harder. \n\nIt's like a time bomb ticking away... \"Prez, that's all true, but I wanted to find out what you know about types of Skills. For example, and I'm specifically not saying this is hypothetical, imagine there were a Class which was specialized in information gathering. Are you following?\" \n\nPrez nodded, continuing to tap her finger. \n\n\"And this Class: what kinds of Skills would you expect that it would have?\" \n\nPrez scrunched up her nose and stared off into the distance. \n\nIf she keeps making these faces I'm going to lose my mind. Ugh. Get your shit together. \n\n\"Maybe something like improved reading comprehension to read faster, or enhanced memory, so they'd remember everything they saw?\" she said after a moment. \n\n\"Those are good examples, sure. But suppose the information that they want to gather isn't visual. Suppose it's audio...\" \n\nPrez's face went paper-white. She looked at Will, eyes wild. \"Are you fucking serious? {Someone overheard me?}\" \n\nWill nodded. \n\n\"In our school?\" \n\nWill nodded again. \n\n\"And they know. {They know about my Class.} They overheard! {They know!} Ohhh fuck! {Fuck, I'm so fucked!} That's what you meant this morning when you said not to\u2014and just now\u2014\" \n\n\"Prez, calm down. Relax for a minute.\" \n\n\"Who? No, wait, you said I already had a close call with it this week.\" Her eyes widened. \"Greg?\" \n\nWill nodded. \"That's him, yeah But Prez\u2014\" \n\n\"I have to see him,\" she said, heading for the door, \"make sure he doesn't talk\u2014\" \n\nHe stepped in front of her, wrapping the anxious girl in his arms. She struggled, on the verge of going nuclear. \"Prez, relax. I took care of it already.\" \n\nShe stiffened. \"You\u2014What the fuck? {What could you do?}\" \n\n\"Yeah, yesterday,\" he said. Will talked in a soothing tone, holding her less tightly now that she seemed to have cooled off. \"That's how I found out about...things. But it's settled now. Um, he said he was sorry? But I talked him out of trying to apologize in person because I figured it would be safer this way. For him, I mean. I didn't get the full story about Wednesday but...I think probably I don't want to.\" \n\nShe stood there, her body completely rigid, for a few moments. Then she breathed. \n\nWill released her, stepping back slowly. No sudden movements... \n\n\"Thank you, Will,\" she said while looking up at him. Her dark, brown eyes peered into his, and her full lips looked almost irresistible. \"That's...surprisingly considerate of you.\" \n\n\"I'm here to help,\" he replied. \"So now you get why we probably don't want to have this talk at school, or anywhere we'd be likely to be overheard?\" \n\n\"I guess... {I can't believe I'm agreeing with you.}\" Prez allowed. \n\n\"In that case, since I've already got plans for the rest of the day which, regrettably, I can't bring you along for, how do you feel about a little date tomorrow instead? I'd prefer your place, but if you'd prefer a secluded drive\u2014perhaps to a quiet place with a scenic view\u2014\" \n\n\"Will,\" Prez cut in. \n\nAlright, that was probably too far. But it just feels so wrong to have her smiling at me like that... \n\n\"Allow me to clarify some things which you seem to be confused about. {Don't get ahead of yourself.}\" She stepped towards him, and he stepped back to compensate. She kept moving forward as she spoke. \"First, there will be no 'date'; today I gave you my heartfelt thanks for your help with my...situation. {We're not dating, we just had sex one time because I was horny.}\" His back hit the door. \"I am very, very grateful for this. {I'm very appreciative.}\" she said, running a finger down the center of his chest as she maintained eye contact. \n\nHe gulped. \n\n\"But that doesn't mean I've forgiven you. {I'll never forgive you completely.}\" she continued, pressing her finger deeply into his skin just below his navel. She stepped back and crossed her arms once again. \"Our need for meeting outside of school is strictly for the purpose of you giving me a reason not to make your life hell for the next year. If you have expectations beyond that, you will be sorely disappointed. {Don't think that I'm going to be a booty call or anything.} Do I make myself clear?\" \n\n\"Prez, if you were any more clear...\" he trailed off, seeing her gaze turn into the scowl that he felt more familiar with. \"Yeah, crystal,\" he said. \n\n\"Good,\" she purred. It was anything but seductive. \"Second, we're not going to meet at my house. You,\" she pointed at him, \"are never coming to my house. Ever. My house is reserved for family and friends, and you will never be either of those things. That's why tomorrow,\" she smirked, \"we'll be meeting at your house.\" \n\nChapter 2: Friday Evening, 5:16PM \u2013 Things Are Never Quite As Scary When You've Got A Best Friend \n\n\"Bruh.\" \n\n\"Duude, thank fucking god it's Friday! I'm so ready for tonight!\" \n\n\"Let's go, Will, we got a lot of sets to get through!\" \n\nWill racked the bar, sat up on the bench, then swung his feet off the side and stood up. \n\n\"Nice, let's get these wagon wheels going,\" Vinnie Smith said, grabbing a forty five pound plate off the weight tree and slotting it onto the barbell, replacing the twenty five pound weight that they'd been using for their warmup set. Daniel did the same on the other side, bringing the total poundage to 135. \n\n\"Lemme at it,\" said Don Macleod. \"Today's the day, boys, I can feel it.\" He laid down on the bench, positioning himself under the bar. Unracking it, the bar and weights began to rise and fall in a smooth motion. \n\n\"Will, bruh,\" said Daniel Campanelli, edging closer. He leaned in, his tank top adhering tightly to his chest, then half-whispered loudly enough for everyone nearby to hear him. \"I know I just asked you on Wednesday\u2014and you tootally came through for me, bruh\u2014but I've still got that yellow fever, y'na'mean? Can you do your thing and hook me up with another Asian hottie tonight?\" \n\nDon finished his set and switched with Vinnie, who made the heavier weight look exactly like the warm-up set. \n\n\"Yeah, about that,\" said Will. \"I had a thing at school today and had to use my Skill. I'm tapped out tonight, guys. Sorry.\" \n\nVinnie got up and stretched; he was quickly replaced by Daniel, who continued to talk as he executed his set. \n\n\"You kiddin' me?\" he said. \"What's...oof...goin' on with you this week, Will? You only came out on Wednesday and...oof...even then it was like you were on Mars or somethin'. Hey one-a you jokers put some donuts on this or...oof...something? Feels...oof...heavier than usual.\" He racked the bar, clanking it into place, and sat up. \"Your old man chew you out again or what?\" He looked at Will. \n\nVinnie slapped his slightly overweight friend. \"Hey, don't be a dick. You know Will doesn't like talking about his dad. And no, I didn't put any tens on it, you're just a fatass who skipped bench day too many times. You're up, Will.\" \n\n\"Fine, put me at the top-a the order for next set, I'm gonna prove this shit is rigged,\" said Daniel. \n\n\"It's cool, Vin, don't worry about it,\" said the vice president as he took over the bench. \n\n\"Boys, boys!\" Don broke in, looming over his exercising friend from behind the bar in the spotter's position. \"There's only one thing that explains this week. Will, you don't gotta say it. When was the last time we saw exactly this behavior?\" \n\n\"Oh, ho, ho!\" said Daniel, head following the bar as it pumped up and down. \"You mean\u2014\" \n\n\"Will got a girlfriend? Again?\" said Vinnie, hand cupped to his chin. \n\nThe bar wobbled dangerously on the left side. \n\n\"Whoa, dude,\" said Don, leaning in to stabilize. \n\n\"At least wait 'till I'm off the bench before you start formulating the next installment in The Legend of Will White,\" said Will as he held the bar above him. He resumed his reps, finishing off his set and then racking the bar. \n\n\"Wait, is it real? I can't tell from his reaction,\" said Vinnie with a snicker. \n\n\"Bruh, what the fuck? How you gonna get a girlfriend again and not bring her to get my blessing first?\" \n\n\"Shut the fuck up, Daniel, how you gonna use the same joke every time?\" \n\n\"C'mon Highlander, the classics\u2014\" \n\n\"Another recycled joke? Like I haven't been hearing that one for the past ten\u2014\" \n\n\"Guys!\" said Vinnie. He gestured at the weight tree on the opposite side of the bench from him. \"Don, put on a twenty five.\" The tallest boy of the group slapped the same sized plate that he'd requested onto his side before adding a clip to hold the plates together. \"And clip,\" he added as Don started away from the bar. \n\n\"Okay, Coach,\" said Don. \n\n\"It's not a girlfriend,\" said Will. \"I'm still single. Very single.\" \n\n\"Bruh, you almost capsized just now. I'm not sayin' you're lyin', but\u2014\" \n\n\"C'mon Will, who is it? Even you gotta admit you been weird as fuck this week. If it's not a girl, what else could it be?\" \n\n\"I don't wanna join these idiots, but they do have a point. Daniel, c'mon, man, we don't have all night. Will, you have anything you wanna tell us?\" \n\nWill sighed. I knew this was going to be a hassle. There's no way I can explain this, and I don't hate her so it's not like I'm going to throw her to the wolves. \n\n\"What the fuck,\" Daniel huffed from under the bar after completing his first rep. \"Did you put\u2014\" \n\n\"For fuck's sake, no, there's no donuts on the fucking bar!\" said Don. \"Quit being such a baby. Or do you just want actual donuts, you fucking fatass?\" \n\nWill, in the spotter pose, gradually increased the amount of force he was applying to the bar's upward motion until he was nearly lifting the entire thing by the end of his friend's set. \n\nDaniel clanked the bar into place and sat up, panting, then started stretching his arms back and forth. \n\n\"Nice set,\" said Will. \"All you, bud, I barely touched it.\" \n\n\"Yeah, I know it, bruh, that one felt even lighter than the last set. I don't even need a spot 'til we get a second set of real plates on here.\" \n\nVinnie rolled his eyes. \n\n\"Will, c'mon. You gotta give us something. I even had that great cover for your black eye that you managed to get without us.\" \n\nVinnie took his spot on the bench and quietly repped away, showing no discernible difference in exertion since the last set. \n\n\"Alright, alright, I'll agree that one got me pretty good. Almost snorted milk out my nose at lunch when I heard it the first time. Nice work,\" said Will. \n\n\"Yeah, you're lucky on that,\" said Vinnie, pausing midway through his set. \"I was down range and he would have blasted me good. Instead he just squirted it into his own eye. Almost my ass.\" He looked up at Will, rolled his eyes, and resumed his reps. \n\n\"Man, why couldn't you let me be cool just this once?\" Will ran a hand through his hair. \n\nVinnie racked the bar. \n\n\"Cuz you're a fuckin' nerd,\" said Daniel, looking theatrically confused. \n\nWill laughed. \n\n\"If we give you one, pretty soon you'll be strutting around thinking The Legend of Will White is entirely factual. But forget all that, Will,\" Don waggled his eyebrows. \"Who is she? Is she hot? Wait, don't tell me, did you and Laura get back together? Damn, she's hot as fuck.\" He sat on the bench. \"This is it boys, the prequel. Next set and it's happening.\" \n\nWill put a hand to his face. \"No, it's definitely not Laura.\" \n\n\"Dunno what she ever saw in you anyway, I'm the brains of this outfit,\" said Daniel. \n\nVinnie doubled over, coughing. \n\n\"You okay there, Vin?\" asked Will. \n\n\"Yeah, my bad, he just hit me with that and I inhaled some spit while trying to laugh.\" \n\nIt was Will's turn to double over, this time in laughter. \"Daniel,\" he said after he could breathe again, \"you don't even go to our school. How are you going to go out with one of the three hottest super-seniors from another school? It's not like you're going to meet her at a club with us.\" He gave Don a knowing look as the super-senior from his own school sat up from his set. \"And I don't think you're going to find her at any donut shops.\" \n\n\"Ohh, fucking roasted,\" said Don, offering up a fist for Will to bump. \n\n\"You guys are such assholes,\" said Daniel. He attempted to stifle a chuckle and failed. \n\nWill laid down on the bench. He took a couple deep breaths, then lifted the bar off and started pumping it up and down. \n\n\"So it's not Laura,\" said Vinnie. \"Probably for the best, I didn't like her.\" \n\n\"Same. Off the scale in both directions, but no idea what you saw in her. Other than those knockers, I mean,\" said Don. \n\n\"Yeah, she was a real whore. Like, actually a whore. If I find my boy's girl in a bathroom stall blowing another guy for drugs, I'm pullin' the plug even if she offers to titty fuck me next,\" he paused, looking each of them in the eye. \"And I didn't, obviously, 'cuz that would be unethical.\" \n\n\"Guys. Please.\" Will grunted between reps. \n\n\"One more, c'mon, you got it,\" said Don. \"Yeah!\" \n\n\"Good form, Will,\" said Vinnie in an approving tone. \n\n\"Thanks guys. And Daniel, I know you've got my back, but that was only a couple weeks ago. Give me at least a month before you start telling me those kinds of details, eh?\" \n\n\"Yeah, my b, my b. But bruh, if you're gonna go out with a girl we're vettin' her first. You always go for the crazy chicks, and it never works.\" \n\n\"You going up?\" \n\n\"Nah, bruh, I'm gonna stick with this.\" Daniel took a seat on the bench. \"Leave the risk-takin' for tonight!\" \n\n\"Again,\" said Vinnie from his position at the head of the bench, \"this complete and total idiot is not someone I want to agree with, but he's making a lot of sense today, Will.\" \n\nDaniel gave him the finger before lifting off for his set. \n\n\"Vin's right, dude,\" said Don, pointing to his red-faced, struggling friend on the bench with his thumb. \"This guy is as dumb as a fucking rock. I mean, he's really not smart at all! But when even he's saying it, you know you got a problem. You gotta stop scraping the bottom of the barrel for these bitches. Either give up and get a couple cool girls you can call when you wanna bone, or find someone more like...you. Somebody smart, who can go places.\" \n\n\"Yeah, what he said.\" Vinnie shrugged the barbell off his panting friend, then let it slowly drop back to rest on his chest. \"Pick somebody out of your brain trust classes, there's gotta be at least a couple cute girls there.\" He repeated the motion, but this time it didn't seem like the bar would move once it came to rest at the bottom once more. \"Right?\" He pulled the bar up and racked it. \n\nDaniel lay there, breathing heavily for a moment, before he sat up. \"Yeah, c'mon, bruh. You don't always gotta go out with girls who are just like\u2014\" \n\n\"Whoa!\" Don headed him off. \"Dude, not cool, don't\u2014\" \n\n\"It's okay,\" said Will, frowning. \"He's right, though I guess I never really thought about it before. I do tend to date girls who are a lot like my mom.\" \n\n\"Uhh,\" said Don. \n\n\"You sure you don't got one-a those Optimus complexes?\" asked Daniel. \n\nVinnie let out a deep sigh, leaning his elbow over the bar and then his head into his hand. \"It's Oedipus. An Oedipus complex.\" \n\n\"Yeah, that's what I just said,\" said Daniel as he got off the bench. \n\nDo I have an Oedipus complex? There's no way, is there? \n\n\"Well, let's look at the facts,\" said Don. \n\n\"He likes blondes,\" said Vinnie, removing a twenty five pound plate from his side. \"Will, gimme another wagon wheel over there.\" ",
        "\"He's definitely a tit guy,\" added Daniel. \"Gotta have that motorboat-ability.\" \n\n\"He likes them dumb,\" said Vinnie, sitting on the bench. \n\n\"But not as dumb as Daniel,\" clarified Will. \n\n\"Nobody's as dumb as\u2014hey wait a minute!\" said Daniel, a cartoonish look of dismay on his face. \n\n\"Long hair,\" said Vinnie, stifling a laugh as he prepared for his set. He lifted off, grunting slightly as he started his reps. \n\n\"Shorter than him,\" said Don. \n\n\"Nice smile,\" said Will. \n\n\"And crazier than a\u2014\" \n\n\"Hold up,\" said Don. \"Do they start out crazy, or do they get crazy after he hucks his wood into their hoohaw\u2014\" \n\nThe bar clanged back into place, and Vinnie lay on the bench laughing. \"Are you fucking kidding me with that? Don, you gotta wait till I'm off the bench before you\u2014wait, did you just use your fucking Skill for that?\" Vinnie started laughing even harder. \n\nDon nodded, a massive grin on his face as he leaned over the head of the bench. \n\n\"You son of a bitch,\" said Vinnie, wheezing. \"Gimme a minute, I'm gonna finish this. Holy shit, Don.\" \n\n\"So what we've got, Will,\" said Daniel, \"is an almost exact description of your mom.\" He paused, clamping a hand on his friend's shoulder and looking him dead in the eye. \"Bruh, do we need to be concerned?\" \n\n\"Hey, how is it my fault if all the hottest girls around happen to have a lot in common with my mom?\" Will said. \"Why can't any of them be redheads?\" he asked. \"Just as an example!\" he quickly added. \n\nVinnie lifted the bar off again, continuing his set. \n\n\"So you're saying you've moved on from blondes to reds?\" said Don. His eyes glimmered with an appraising light. \"My dude, congratulations, you're now a man of culture.\" \n\nVinnie racked the bar. \"You can't just like girls based on hair color,\" he said. \"That doesn't even make sense. Then again, I guess we did have to go through that phase where Daniel was trying to find girls with [Singer] Class to give him head.\" He stood up. \"You going for it?\" \n\n\"Fuck yeah, today's the day,\" said Don. He did a couple quick hops up and down, then approached the bench. \"Everybody shut up, I gotta focus.\" \n\n\"You got this,\" came a voice from the nearby incline bench. \n\n\"Thanks, Larry.\" said Don. He took a seat on the bench. \n\n\"Light weight,\" said Vinnie, who had moved to the head of the bench. \n\n\"Ain't nothin' but a peanut,\" said Daniel. \n\n\"Let's go, Don,\" said Will. \n\nDon laid down, then fixed himself under the bar and took a few deep breaths. \"On three,\" he said. \n\nVinnie nodded. \n\n\"One, two, three!\" said Don, pushing off at the same moment Vinnie pulled the bar off the rack. \n\nThe bar sank steadily towards his chest. \n\n\"C'mon, Don, third time's the charm!\" said Will. \n\n\"Push!\" said Vinnie. \n\n\"Everything's on me tonight if you hit this,\" said Daniel. \n\nDon gave a short yell, putting everything he had into making the bar move. And move it did. \n\n\"225!\" shouted Vinnie. \n\n\"Woo!\" yelled Daniel. \n\n\"Nice!\" said Will, clapping his longtime friend on the back when he sat up. \n\n\"Hold on, hold on, I can't see,\" said Don. \"I got it, right?\" \n\n\"Yeah, man, I didn't touch it,\" said Vinnie. \n\nDon stood up and pumped his fist. \"Fuck yeah!\" \n\n\"Grats, bruh,\" said Daniel, holding out his fist. \n\nFist bumps were exchanged all around. \n\n\"Damn, feels so good to finally hit it,\" Don panted. He looked up at Vinnie. \"I'm coming for you next.\" \n\n\"Bring it,\" said the football star. He turned to Will. \"You keeping this, or...?\" \n\n\"Nah,\" said Will, \"I'm gonna take it easy and hang out with Daniel at 185.\" \n\n\"I respect it,\" said Vinnie. \"Safety first.\" He started swapping out the larger outer plate for a smaller one. Daniel mimicked him on the opposite side. \n\n\"So getting back on topic,\" Don began, looking at Will. \"Now that we've finally got something in common, I feel like we can start having some real, meaningful conversations. You know there's an established hierarchy for redheads at school?\" \n\n\"Yeah, I remember you saying something about that,\" Will said. He sat on the bench. \"It was... Jennifer... Porter at the top?\" \n\n\"Wow,\" said Don. \"That's a great memory. I guess you gotta have that to be in those egghead classes. But that was last year, dude. Basically irrelevant. Plus she graduated.\" \n\n\"Oh,\" said Will. He lifted the bar off and began repping. \n\n\"I'm all about that Asian cravin' right now, but even I can admit she was hot as fuck.\" \n\n\"I remember she showed up on the first day of football practice last year towards the end,\" Vinnie said, eyes glazed over in nostalgia. \"We were all dog tired, and she said she'd go on a date with the first guy who could catch up to her on the track. It was all in good fun, but we were pushing and shoving each other pretty hard to get a shot at it. Girl had legs for days...\" \n\n\"Big loss for the school,\" commented Don, his voice solemn. \"But this year, and by that I mean this year, since I redid\u2014I mean, we redid the rankings after the holiday break, we've got a new list.\" \n\nWill racked the bar. I've got a bad feeling about this... \n\n\"Is it even a contest anymore?\" asked Vinnie. \"I mean, I'm not buying into the whole hair color thing, but if we're talking redheads\u2014\" \n\n\"There can be only one,\" intoned Daniel as he looked at Don. \n\nThe [Influencer] rolled his eyes at the reference to his last name. \"In this case it's appropriate, at least. And yeah, the decision was pretty much immediate. She's got the style, the looks, that sexy librarian vibe\u2014and that ass? Are you fucking kidding me? Basically the complete package. And Will, she should be a slam dunk for you since she's smart, too.\" \n\nNo. I can't get away from her! \n\n\"Well, she's the president for a reason, right?\" said Vinnie. \n\nWill stared at the ceiling. \n\n* * * \n\n\"Fuck, I shoulda gotten the king crab,\" Daniel said, steering the car towards the curb. \n\n\"Then stop ordering the fucking lobster every time and get the crab,\" said Don. \"Or man up and get a combo like Vin.\" He re-checked the state of his polo shirt's collar in the passenger's seat pull-down mirror, pushing his ponytail aside to check every side. \n\n\"I'm just trying to maximize my gains after that workout,\" said Vinnie. \n\n\"I was happy enough with my lobster mornay with linguini,\" said Will. So full... I can feel the food coma setting in already. \n\n\"You sure you're okay, dude? You get that every time, but usually you power through it after eating half the lobster rolls. Today you just kinda picked at it\u2014\" \n\n\"Yeah, what the fuck, bruh. You an eclectic or somethin' now?\" \n\n\"Anorexic,\" Vinnie contributed. \n\n\"Stop fuckin' repeatin' me, Vin!\" \n\nThe car came to a stop, and they began disembarking. An older man in a suit hailed Daniel. \n\n\"Thanks, Dom,\" said Daniel, slipping the valet a few extra bills along with his key fob. \n\n\"Daniel, my friend, it's always a joy to drive a car like yours\u2014even if only for a few minutes,\" said Dominic, a twinkle in his eye. \"Please enjoy your stay tonight, gentlemen.\" \n\n\"Oh, we will,\" said Don. \n\nVinnie stretched his left arm, then his right arm behind his head, his biceps bulging. \"Oh man, what a great pump.\" \n\n\"You should try 315 soon, bruh. You're basically there already.\" \n\n\"It happens when it happens.\" \n\nWill wasn't feeling so chipper. It's like my pelvis went through a fucking blender. Ugh, I don't know if I've ever been this tired before. What a ride, though. He placed his hands on his back, trying to stretch out his hips. \n\n\"Hold on, guys. I recognize that stretch,\" said Don. \n\nDaniel pulled open the door of the nondescript brick building, the sign above which read \"Superior Accounting\", and they filed in after him. \"What now?\" he called back over his shoulder. \n\n\"I don't remember coming in this way last time?\" commented Vinnie from the rear. \n\nWill looked around from his position just behind Daniel. As they continued towards a corner in the dimly lit hallway, a pair of men in dark suits blocked the way after the turn. Literally, they're physically blocking the hallway. That guy's arm is almost as big as Vin's torso. \n\n\"I forgot to mention,\" said Don in a low voice from just behind, \"We went out a couple nights without you\u2014well, me and The Godfather over here, Vin had early morning practice the next day or some kinda athletics shit\u2014and they recognized us. Well, they recognized our dads probably. We're on the VIP list now, and this is the VIP entrance. It's gonna be different this time.\" \n\nWouldn't take much to improve things over the last time we all came here. Almost had to put this place on the no-go list. But I don't think being on the VIP list has any relation to you... \n\n\"Mr. Campanelli, Mr. Macleod, Mr. White, welcome back,\" said the smaller man on the left. He stepped out of the narrower corridor, allowing them to pass. \n\nThe giant on the right nodded, but remained silent. He, too, stepped out of the hallway and partway around the corner, enabling passage through the hallway without first turning sideways. \n\n\"Glad to be back so soon,\" said Daniel as he walked past them. \"I'm bringin' the party tonight, boys!\" \n\n\"Ah, shit,\" said Don. \n\n\"What?\" Daniel's head whipped back, but he kept walking. They rounded another corner, the hallway sloping downwards. \n\n\"If you're the one bringing the party tonight, this place is gonna be boring as fuck, dude.\" \n\nWill heard snickering from behind him. He joined in. \n\n\"Yeah, yeah, real funny, fuckface. Just watch.\" \n\n\"I will,\" said Don. \"But Will, don't think I'm gonna let that slide. That's the same stretch you're always doing after you hook up with some ultra-crazy chick. Like, uhh...Oh, that Tiffany chick? You know, that midget with the tits almost as big as her head from last year? Daniel, you know the one I mean? You two are always hanging out\u2014\" \n\n\"Tiffany,\" he called back from the front, \"Stanton. And we don't fuckin' hang out, are you fuckin' serious right now? She's so fuckin' obnoxious, holy shit. Her dad's a big client of the firm is the only reason I know her. That and she happens to go to my school. Fuck, bruh, she's crazy fuckin' hot now\u2014I mean, those things are unreal\u2014but I wouldn't touch her with your dick. Ugh,\" he shuddered. \"Every time I see her she's always going on about some dumb shit. I've been tryin' for years to get outta seein' her whenever my dad and her dad meet up.\" \n\nThey turned another corner, and a moment passed in silence while Daniel's rant was being digested. \n\nShe's not that bad, she's just got a lot of energy. But Daniel's not the type to listen even if I tell him... \n\n\"Yeah, that one. Dude, how come you never thanked Will for taking one for the team that time?\" \n\n\"No doubt, that bitch is cray.\" \n\n\"Definitely Will's type, even if she did have black hair instead of blonde,\" Vinnie added. \n\n\"Anyway, anyway,\" said Don, \"the day after they hooked up I remember seeing Will doing that same stretch, and I asked him what the actual fuck that old man move was supposed to be\u2014\" \n\nI can't believe he remembered, that was so long ago... They rounded a final corner, coming into view of an elevator. \n\n\"And he starts telling me about this girl\u2014not in graphic detail or anything\u2014but what the shit? She's an actual fucking nympho! Will barely made it home alive by the sound of it. And then he's doing that old man move the next day because she rode him too hard and nearly snapped his cock off.\" \n\nI don't think that's exactly what I said... \n\nDaniel pushed the up arrow on the elevator, and Vinnie oohed dramatically. \n\n\"Which means,\" continued Detective Don, \"our guy here has been getting some, isn't that right?\" He eyed Will. \n\n\"You're sayin' my boy has been holdin' out?\" Daniel looked Will over. \n\n\"He did seem more tired at the gym, Will usually puts up 225 for at least a few reps, and then he barely ate at dinner...\" said Vinnie. \n\nThey all stared at him. \n\nThis has to be the slowest elevator... \"Alright, alright, yeah, but it was a one-time thing,\" For the second time... \"and it just sort of happened, okay? It's not a big deal.\" \n\n\"Whoa, bruh, who was it? You finally nail that Spanish teacher? I only seen those pics on the school site, but bruhh...\" \n\n\"It can't be Ms. Perez,\" argued Vinnie. \"She'd never do anything with a student. Plus she's getting married soon.\" \n\nThe elevator dinged, and they stepped inside. The thrum of a pounding bass rippled through the walls, giving them a preview. \n\n\"It's nobody you know,\" said Will, focusing on Daniel. The rest of you know her, though. Ugh this is going to be a disaster if they find out. I'm way too tired to deal with this tonight. He closed his eyes. \n\n\"I'm not buying it,\" Vinnie spoke up, contradicting his friend for the first time that day. \"We know everybody. You're hiding something.\" \n\nThe elevator dinged, and the doors opened. Another man in a dark suit greeted them and gestured to the right. They stepped out, pivoting to the right, and emerged from a dark alcove behind the bar. \n\n\"OHMYGOOOOOSH!\" came a loud squeal. \n\nThis is literally the worst possible timing. He stared up at the ceiling and waited. \n\nDaniel dodged out of the way just in time as a dark-haired girl crashed into Will and wrapped her short, pale limbs around him. \n\n\"ImissedyousomuchIcan'tbelieveyou'reherelastSaturdaywasthebestnightofmylifewhyhaven'tyoubeenreturningmymessagesthisweek?\" The girl paused, sucking in a huge breath against his chest and halting the screech of fast-paced dialogue. \n\n\"Um,\" said Will, unable to move his legs due to the pair of smaller legs that were now clasped around his. He looked at his friends, who were busy staring at the starfish-like growth he'd acquired. \n\nDon pressed a hand over his mouth, his cheeks puffing out and eyes crinkling as he held back a powerful laugh. \n\nThe nineteen year old girl stared up at him, her gray eyes glistening. Then she began to speak again. \"Reallythoughwhydidn'tyoucallmeorsomethingIwassoscaredandIthoughtyouhatedmeorsomethingbutnowyou'rehereandI'msosohappytoseeyou...\" \n\nWill stopped listening, unable to continue processing the stream of verbiage at the speed and pitch it was coming at him. He once again surveyed the group. \n\nDaniel was caught between laughing and being horrified, his mouth slowly moving through the words, \"Bruh, nooooo.\" \n\nDon was openly laughing and pointing at his now-claimed friend. \n\nVinnie stood there, his massive arms crossed, just shaking his head with his eyes closed. \n\nWhat do I even... He tried gently pressing against her shoulder, seeing if she would be moved, but she just clamped on tighter, mashing her prodigious bust against his stomach. It's still hard to believe they're real. He mind flashed back to a week earlier when, in another place, they'd been bared and wrapped around\u2014 \n\nHe shook his head. If I don't come up with something she's going to stay like this all night and ruin it for the guys. Can't use that Skill... Ah, I bet I can... \n\nHe made eye contact with each of his friends, mouthing the words, \"follow my lead.\" \n\nDaniel gave Will a look that said he had some serious explaining to do, bruh, but Don and Vinnie both nodded. \n\nWill reached down and grabbed under the small girl's butt with both hands, lifting her head to eye level. She instantly quieted, beginning to rub her cheek against his shoulder. \"Hey, Tiff,\" he said, craning his neck down slightly in order to talk into her ear, \"what a great surprise to see you here! I really enjoyed spending time with you last week\u2014\" \n\nShe squealed again, somehow managing to clamp herself around him even more tightly, and rubbed her entire body against him. \"I missed you so much, Will! I came here with Jillian and Becca and we were dancing for a little while, but all the guys kept trying to buy us drinks, and we're not even legal to drink yet, and none of these creeps were that cute or anything, and this one suuper tall ugly guy tried to grind his dick on my boobs so I was like\u2014\" \n\nI think she might even be able to out-talk me if I let her. Will cut the dark-haired bombshell off with a finger to her lips, and she looked up at him with questioning eyes. \"If you and your friends are bored, and it sounds like you are, how would you like to hang out with us tonight, Tiff? I certainly wasn't looking to spend time with any of the other, less beautiful, ladies here, and the guys could really use your...talents in matchmaking.\" \n\nShe scrutinized him, her pupils contracting as she sought out some unknown quantity in his eyes. \"You really mean it,\" she breathed after a moment. \"You really don't want to spend time with any other girl here. I thought you got tired of me.\" She let out a short shriek of happiness, gave him one last squeeze, then dropped her legs off his sides and released her arms. \n\nWill removed his hands from her nicely-rounded butt, after giving it a gentle squeeze, then helpfully pulled the skirt of her revealing black dress down to cover her minimalist, pink undergarments. \n\nShe gave him a doe-eyed look at his extremely considerate gesture. \n\nHe grinned back. She is crazy hot. It could be worse. \n\n\"Alright, I'll do it,\" she said, staring up at him with a manic smile. She poked him in the chest with a finger. \"We're on a date now, so no backing out! Jill and Becca can come play later, I want you to myself first!\" She turned to face the other three, placing her hands on her hips. \"And I guess I'll help you jerks find girls to hook up with, too. But only because it's Will asking.\" Tiffany shook a finger in their direction. \"But you have to promise not to tell anyone, okay? Daddy gets really mad when I use my Skill in public without permission.\" \n\nIt's just one night, I'll probably survive. \n\n\"Well guys?\" said Will when nobody responded. \"Don't keep the lady waiting.\" \n\n\"We promise,\" said Daniel. \"Nobody's gonna hear about it from us.\" \n\nThe other two nodded. \n\nTiffany stared at them for a moment, then nodded herself. She grabbed Will's right hand with her left and grinned up at him, bouncing up and down on her heel-clad feet. \"Okay, I'm all yours for the night then!\" She pulled herself against his arm and pressed his hand into the side of her breast. Her teeth bit down gently on the center of her lower lip. \n\nI understand what you're telling me, you can calm down a little... This is going to be a struggle. \"Alright, we staying on the floor? I guess we grab one of those couch alcoves like last time?\" \n\nDaniel gave him a look. \"Nah, bruh, we big time now. Stay here a sec. I gotta find one-a the managers to get a key for a private rooms upstairs.\" He started off towards a man talking into a walkie-talkie. \n\n\"Wait,\" Tiffany shouted after him. \n\nHe stopped, turning halfway back. \n\nShe pulled a keycard out of her cleavage. \"You mean one of these?\" \n\n* * * \n\nThe room, on the second level of the club, was populated by a couple stools, a short table, and a sleek navy blue sofa which faced a wall of glass overlooking the main floor. A DJ stood at the front up on a raised platform. With one hand to his headphone-clad head, he crossfaded and backtracked the pounding drum and bass rhythms for the enjoyment of the teeming mass of bouncing and gyrating people before him. \n\n\"Will, I still can't believe you guys are here, this is so great! Why didn't you tell me you were coming? You know this is, like, my home base. Oh, Will, Will! What do you think? I just got this sofa put in yesterday. Do you like it?\" \n\nWill leaned into the the backrest. What's the cover of this thing made out of, velvet? So soft. He closed his eyes. Maybe I can fall asleep and somehow not get woken up until we're leaving... ",
        "\"I think he likes it,\" said Don, who was also sinking comfortably into the couch, having just finished taking a selfie overlooking the club. \n\n\"Great choice, Tiff,\" said Will. \n\nShe beamed up at Will from her seat on the couch, continuing to hold his right hand inside her cleavage using both arms while she leaned against him. \n\n\"So uhh, you two...\" said Daniel, looking back and forth between the nesting place of Will's hand and his friend's face. \n\n\"You didn't tell them?\" asked Tiffany, seeing the evident confusion. \"But it's been such a long time, Will! Oh, that's so hot, keeping our relationship from your friends like that!\" She stroked the thumb of his captured hand. Her voice turned coquettish. \"And you even had me get Daddy to put them on the VIP list last month.\" \n\nDaniel goggled at her from his stool, completely speechless. \n\nDon looked at Will over the top of Tiffany's head, then made a cutting gesture across his throat. \n\nVinnie was looking down at the DJ and bobbing his head in time to the music as the bass pulsed. \n\nThis place is dead to us now, I think. He grudgingly opened his eyes to look at the older girl. \n\nA lascivious look passed over her face, and she ran her pink-painted nails over his crotch before starting to stroke him through his pants. \"I'm not sure they believe it, though,\" she said with a different kind of grin, letting his captive arm slip away. Tiffany looked up at him, her gray eyes dancing with excitement, and squashed her bosom between her arms. Her breasts bulged from the increased pressure, nearly popping out of her dress. \n\nWill maintained eye contact. Why is she so worked up tonight? Is she trying to show off because I didn't reply to her messages for a few days? \n\n\"Maybe we should show them how close we've gotten,\" she said, nodding her head up and down quickly. \"I could suck your cock if you want. They can watch.\" She brought her tongue out of her mouth briefly, moistening her lips as she looked down at the effect she was having on him. Then she reached for his zipper. \n\nDon choked on his soda. \n\nDaniel goggled harder. \n\nVinnie had torn his gaze away from the club's main attraction, his head rotating back to give Will a pitying look. \n\nThis was either a very bad idea, or a very good idea. But probably very bad considering how tired I am. Will took hold of the small hand that was now dragging the zipper of his khakis slowly downward. \"Not now, Tiff.\" \n\nShe frowned. \n\nHe kissed her hand. \"I don't want to show you off. You're not a toy,\" Will continued, stroking her jawline with his now only partially-captured hand. \n\nHer expression lit up once more, her eyes gleaming at him like she was star-struck, then she glared cutely at the other occupants of the room. \n\nI think that's the 'why are you still here, get the fuck out' look. I better give her a push... \"Tiff, if you help the guys out now then we can have some alone time, and\u2014\" \n\n\"So you mean, if I\u2014then... Okay! Danny, you first. Stand up and look out at the crowd.\" She got to her feet and raced over to the window. \"Hurry up! C'mon!\" \n\n\"It's Daniel,\" said a sullen Daniel as he turned to the window, standing next to the diminuative nineteen year-old. \"What am I doing now?\" \n\nTiffany stared out at the crowd, ignoring the question. She squinted. \"Okay, let's see... That girl over there at the bar,\" she pointed, and Daniel's eyes followed, \"the one in the red halter top.\" \n\n\"Okay, she's hot. What now?\" \n\n\"Go talk to her, she'll like you.\" \n\n\"She what? How\u2014Ow! What the fuck?\" \n\nTiffany moved her heel off his foot. \"Just do it! Go on, shoo! Go! Who's next? You, Donny.\" She beckoned him over, tapping her bare foot against the warm tile. \n\nDaniel gave his brainy friend a look that said, \"Bruh, what's the deal?\" \n\nWill gave him a nod. It'll be fine, just go with it. \n\nHe must have gotten his point across, because Daniel was out the door soon after. The moments that the door was open allowed the fullness of the club's atmosphere back into the room, and Will found himself start to bob his own head in time with the beats, continuing even after the room had been sealed up once more. \n\nVinnie noticed and gave him a grin. \n\nHe grinned back. This is starting to wake me up a little, but I'm still not sure if there will be anything left of me tomorrow. \n\n\"Who do you got for me?\" said Don. He'd risen to stand in the spot his friend had vacated. \n\n\"Um... Just her over there, the one in the tan skirt with the blue top\u2014\" \n\n\"The redhead? Niice,\" said Don. \n\nPrez? Will bolted to his feet, moving forward to get a better look. \n\n\"Whoa, dude,\" said Don, glancing over at him, \"I know you're joining the redhead revolution now, but this one's mine. Plus I think you're ticking your girlfriend off.\" \n\nWill opened his mouth to retort, but his friend was already out the door. He gave one last quick look out the window. Not her, that girl's way too tall and her hair is dyed. Ugh, Prez would never come here anyway. What am I thinking? He ran a hand through his hair. \n\nThen he looked over and down. Tiffany was staring up at him with big eyes. \n\n\"I'm just going to go out and have some fun. You were a good friend, Will, it's been an honor.\" \n\nThat's feeling a bit too realistic right now. \n\n\"So, you like redheads now?\" asked Tiffany as the door clicked shut. \n\nI can't tell if she's mad or if she's upset or what even is that expression? \n\n\"Well, no, it's not\u2014I mean...\" The short girl grabbed his left hand, pulling him back towards the couch with gentle tugs. He sat down again, looking out over the club briefly before his companion's presence demanded his attention. \n\nTiffany didn't hesitate, straddling his waist. Her dress was tight enough that it rode up, exposing the faint reflection of a pink g-string on the window. \"Because if you like redheads,\" she said, \"now that's totally cool!\" She pulled a few locks of straight, shoulder-length hair into her hand and started twining it around her fingers, holding it up to his face. \"I was just thinking about dyeing my hair this week, and if you like red then it works out perfectly! What kinda red? Like, suuper bright red or\u2014\" \n\nIs she serious? That's wild, but I don't know if I want to be responsible for her making more bad life choices... \n\n\"\u2014Or, like, orange-red, or\u2014\" \n\nWill raised his hands and gently placed them on her waist, feeling her smooth skin under the thin, black fabric. He stroked his thumbs back and forth. \n\nShe trailed off, distracted by the sensation, before beginning to slowly rock her hips in time with his thumbs. She dropped the hair, raising her hands to his shoulders. \n\n\"Tiff,\" Will said. \"You know how some nights I stop by and we just hang out? I was hoping tonight could be one of those nights. I'm exhausted.\" He tipped his head against the back of the couch, looking at her out of the bottom edges of his half-shut eyes. \n\n\"So...dark red?\" she grinned impishly at him. She stopped rocking. \n\nHer smile was infectious, and he grinned back despite himself. Darker red has kinda been my thing this week... \"Tiff, you know you don't have to dye your hair for me, right?\" \n\nShe blew a raspberry at him. \"I know that, dummy. This is to annoy Daddy. He's been a real jerk lately. He took away my car this week!\"\" \n\n\"Again?\" asked Will. \"What was it this time?\" Probably another speeding ticket. \n\n\"Weell,\" she stretched the word out and began drawing circles on his chest with a finger. \"I may have gotten another ticket. But it was wayy less this time, I was only fifteen over!\" \n\n\"That's still a lot, Tiff.\" He brought his head back upright, catching her doodling finger and kissing it. \"You should drive more safely.\" \n\nShe giggled. \"I know, I know, but I can't help it! I just get so excited sometimes!\" She bounced her butt on his thighs. \n\n\"I know you do,\" he said. He pressed his fingers into her wiggling backside, prompting more giggles. \"Promise me you'll try to drive safer, and I'll tell you what color I think your hair should be.\" \n\nShe pouted. \"Fiine, I promise. But only because it's you, Will.\" After the solemn moment was over, her exuberance returned. \"Now tell me! What color? Magenta?\" \n\nHe wrapped his arms around her and leaned in so he could speak right into her ear. \"I think your hair is cute the way it is.\" He stroked the back of her head. \n\n\"Stop,\" she slapped his chest, blushing lightly as she hid her face in his shoulder. \"You can't do that! You know how sensitive my ears are!\" \n\n\"I do,\" he said, just before he nipped at the top of her ear. \n\nShe groaned. \n\n\"No dye, okay?\" \n\n\"Okaay. You know, Will, for someone who said he doesn't want to fuck me silly tonight, you sure are making me kinda horny.\" \n\n\"Sorry, it's a bad habit. I can't help wanting to bully pretty girls a little bit.\" \n\nTiffany gave him a disapproving look. \"So I'm only pretty now? Maybe you have lost interest in me...\" She shifted in his arms, rising up on her knees. Then she pressed his face into her cleavage. \n\nI can't breathe, but this is pretty nice right now. \n\n\"Is this bringing back any memories? You spent a lot of time like this last weekend\u2014well, part of you did anyway.\" \n\nWill licked the exposed skin in front of his mouth before pressing her hips away from him. \n\nShe took the hint, backing up slightly and looking at him. She had a nervous grin twitching on her face. \n\nShe's a lot more scared than she lets on. She really thought I abandoned her. Damn, I got so wrapped up in this thing with Prez this week. I wonder how many other messages and calls I ignored? \n\n\"Tiffany,\" he said after a moment. He pulled her hips towards him and planted a soft kiss on her lips when she came close enough. \"I'm sorry, I really didn't mean to ignore you. I'm not tired of you. We're friends, right? Friends, and not a guy and his toy. You can even appraise me if you want, I'm serious.\" \n\nShe sighed, coming back down and leaning her head on his shoulder once again. She put her arms around his neck, resting against him. \"I know,\" she said in a small voice. \"I know, but you didn't reply for like, a whole week. And it's...with every other guy...after they\u2014\" \n\n\"Shh,\" he said, rubbing his fingers on her back in a slow circle. \"Let's not go there today. I've been a bad friend this week, but I'll make it right. I'm not tired of you, but I am really tired tonight. How about we talk for a while and you can catch me up on the latest Tiffany Stanton news and gossip, then we can call your friends up? I have an idea for a game that I think we can have some fun with.\" \n\nShe was silent for a moment, breathing against his neck. \"Can we cuddle while we talk?\" Tiffany asked. \"You're the only guy who cuddles me without groping my boobs every five seconds.\" \n\nWill maintained a neutral tone. \"...Can I grope them before we start cuddling?\" \n\nShe snickered, slapping his shoulder lightly after she pulled away from it, regaining some of her unstoppable energy. \"You can if you tell me who made you so tired. It must be a girl, right? Is she pretty? Does she have boobs like mine? Oh, does she go to your school? That's so unfair, I wish I went to your school so we could hang out every day.\" \n\nWill brought his hands up to her chest and began to softly knead the undersides of her breasts. \"Hm, I suppose I can tell you some of it. Do you remember Macbeth last week...\" \n\n* * * \n\n\"Are you fucking serious, dude?\" \n\n\"The Legend! It strikes again!\" \n\n\"Bruh.\" \n\nWill's friends had returned after a couple hours, pausing to talk outside before knocking on the opaque metal door since they had no keycard to open it. \n\nHe wasn't the one who had let them in, however. Instead, a leggy brunette, clad in a neon green thong with a matching bra over her her small breasts, had cracked the door just enough for them to squeeze through. \n\n\"Hold on, he's almost done. I think?\" said Tiffany, wearing only a tiny pink g-string and sitting on the sofa, facing away from them. \n\nMore stools had been added to the room since they'd left, and playing cards and chips were strewn about the table. Articles of clothing were similarly scattered around the room. Five girls, all naked save for the upper and lower halves of their underwear, sat in varying positions around the table, all looking on in awe. The new arrivals went almost entirely unnoticed. \n\n\"Oh, shit! Fuck, fuck, fuck!\" A black-haired beauty sat astride Will's face where he lay on the sofa. She shivered and trembled as he held her tightly by her hips, fingers visibly pressing into her flesh. \"Fuuuuuuuck!\" Suddenly she spasmed, setting her large, naked breasts jiggling. \n\nWill remained fully clothed, seeming very relaxed with the entire setup. \n\n\"I think that's one of the dancers from downstairs,\" commented Vinnie. \"She was off to the left of the stage...\" \n\n\"That's Carla,\" said Tiffany. \"We're playing clit poker and she just won. Again.\" \n\n\"How is he so good at this?\" asked another girl they didn't recognize. \"I didn't believe it when you told me. It's insane. Actually doesn't make sense.\" \n\n\"He's my friend, Jill,\" replied Tiffany with a bright, happy smile on her face. \"Of course he's the best.\" \n\n\"Bruh,\" said Daniel again. He blinked, then looked around for the hundredth time since entering the room. \n\n\"Will, dude, I think Daniel's brain broke. Not that it was working great before, but he's having a life-threatening bruh moment now,\" said Don. \"I thought we'd all had pretty solid nights, but this is on another level. Thanks, by the way, Tiffany, that girl was scorching hot.\" \n\n\"No problem,\" she replied distractedly. \n\n\"Daniel wanted to say thanks too, before he went full 'bruh'.\" \n\n\"Sure, sure,\" she replied, mesmerized by Will. \n\n\"It's so weird, watching it happen,\" another girl said. \"And I'm still tingling. Was I like\u2014\" \n\nShe cut off as Carla screamed, convulsed, and then sank back onto her haunches before she tipped bonelessly towards the table. \n\nBefore anyone else could react, Will's right hand shot out, catching her under the arm, and he sat up, clutching her to his chest. He ran a hand through the back of her long black hair, then caught sight of his friends. \n\n\"Oh, hey, guys. You have fun tonight?\" \n\n* * * \n\n\"Will, you're a fucking god, dude. I speak for all of us when I say that The Legend will never be questioned again.\" \n\n\"Your face looked like a fucking glazed donut, man.\" \n\n\"Hey, don't mention donuts or you'll make Daniel hungry again.\" \n\n\"Has he even talked since we left?\" asked Will, looking at their driver through the mirror. \n\nDaniel's eyes remained fixed on the road as he piloted his car back from the city. \n\n\"He'll come around,\" said Don, \"he's still trying to rationalize the distance between him and you. It's one thing when we go out and you snag a pair of cute twins or a pair of friends\u2014that's maybe down to luck. The time you went home with that girl and it turned out she was that new swimsuit magazine cover model, okay, that was cool. But this was... You had six fucking girls... What game were you even playing? And how...\" \n\nWill massaged his jaw briefly. \"Well, it started off something like this...\" \n\n* * * \n\n\"And then, once you've won enough times to get down to your underwear, if you win again then you get to have Will eat you out. What do you think?\" said Tiffany from her spot on the couch next to the recumbent Will\u2014who was the only male in the room. She looked around at the assembled group of girls. \"It sounds super fun, right?\" She bounced up and down. \n\n\"Tiff, this is what you dragged me up here for?\" asked Carla, a grimace of disgust on her face contrasting the temptation and sexiness she presented in her strappy, revealing black bra and matching miniskirt. \"If you wanted to get your boy-toy some action\u2014\" \n\n\"He's not my toy!\" said Tiffany, hands curling into fists at her side. \"He's my friend! And Will is the best. The best. I invited you up because I thought you'd have fun, but if you don't wanna play...\" she trailed off, her eyes narrowing. \n\n\"No, I understand what she's saying,\" said Will. He opened his eyes, then turned his head to face the others, giving them a smirk. Then he focused on the girl who'd last spoken. \"I don't blame you, Carla. You don't know me, none of you know me; all you have is Tiff's word that this will be fun. So I'll tell you what: out of the five of you, pick any one of you. Come over here, sit on the couch with me, and I'll give you one kiss. \n\nCarla's eyebrows indicated her skepticism. \n\n\"If, after that kiss, whoever it is doesn't manage to convince the rest of you to play within thirty seconds, I will go outside, naked, and dance up on stage with the DJ.\" \n\nEyes turned, looking out the window at the spot he'd gestured to. A couple of the girls\u2014a tall brunette and a shorter, plump-looking African American\u2014giggled. \n\nCarla's doubting expression intensified. \"You trying to impress me or something? {Great, another delusional guy.}\" \n\n\"Nah,\" said Will. \"If I wanted to do that, I'd say that I won't even move my back off this couch.\" He winked at her. \"And it'll be easy.\" \n\nThe dancer's face twisted into a feral smile. \"Easy, huh? Girls, do you mind if I show this boy how not-easy I am?\" She looked around. \n\nNobody objected. \n\nShe rose from her stool, approaching the couch. Her grin widened with each step. \"I'm going to rock your world, and then I'm going to enjoy watching you shake your little thing on stage.\" \n\nTiffany giggled. \n\nCarla sat gingerly on the edge of the couch, next to Will's waist. She gave a victorious look back at the rest of the girls, then brushed her hair over her ear to make sure it didn't block their view before leaning over him. \n\nWill remained still, watching her come closer but not changing his smirk. \n\nThen it happened. Her lips closed in, touching his, and, like a coiled snake, he struck. His hands encircled her, one going to the back of her head and the other staying on her side, blocking the details from the spectators. \n\nTiffany watched from next to Will's feet, chewing on her bottom lip. \n\nTime passed, but nobody looked away from the spectacle. \n\nAt last, Will removed his roaming hands from her body, bringing them back to rest at her sides and permitting Carla to break the embrace at her leisure. \n\nShe didn't. \n\nTheir lips remained locked to each other for a while longer, Will now passively receiving the aggression of the young woman who had maneuvered her body astride him. \n\nFinally, she moved her head back. She gasped, taking in big, heaving breaths, and rested her head on his chest. His hand came up and swept her hair away from her face. \n\n\"You're an incredible kisser, Carla,\" murmured Will. He rested his hand on her back. \n\nAfter more time passed, she finally regained her senses and slowly sat up, still straddling Will's waist. She was still panting lightly. \n\n\"Are. You. Fucking. Kidding. Me.\" she said, her head whipping around to look at Tiffany. \n\nThe smaller girl sat there, a silly grin covering her entire face. \"The best, right?\" was all she said in reply. \n\nCarla's gaze swiveled around to the four awestruck girls. The dark brown skin of her face was still flushed, and, in a decisive tone, she said, \"We're definitely playing.\" \n\n* * * \n\n\"And that's without your Skill? Unreal,\" said Don after Will had finished his story. \n\nThe car was silent for a while. Will closed his eyes. At least I got to chill out a bit. Those girls were cute as hell. ",
        "\"I met a girl and got her number,\" said Vinnie at length. \"Her name's Rita and she's a freshman at the city college here. She said she'd try to come to my game next week.\" \n\n\"Hey, that's great, Vin,\" said Will. \"I'm glad tonight worked out for you.\" \n\n\"She's already messaging me! Let's see...Great meeting you tonight, I miss you already.\" Vinnie paused, holding the phone to his chest. \"I think I'm in love.\" \n\nI should check my messages and make sure I didn't forget anyone like Tiff. That was a real dick move. \n\nHe felt at his neck. Still, she didn't have to give me a hickey as I was leaving. She said it was punishment for being 'mean', but having to see Prez tomorrow with this is a lot more cruel. \n\nWill wrestled his phone out of the pocket of his khakis and checked his messages. This is a lot of messages. He started reading, then stopped, putting the phone down. \n\n\"Huh,\" he said, blinking. \n\n\"What now?\" asked Don. \n\n\"Looks like all the girls from tonight put their numbers in my phone and started messaging me saying they want to play clit poker again sometime. And Carla replaced the A's in her name with hearts...\" \n\n\"Will, go fuck yourself.\" \n\nChapter 3: Saturday Morning, 10:50AM \u2013 Idiocy Is The Essence Of The Male Mind \n\nThis was a bad idea. I should have offered to meet her at the landfill or out in the woods or literally anywhere but here. Shit, if Father comes back... \n\nWill took a deep breath. He's out golfing with a 10:30 tee-off at a club an hour away. There's no way he'll come back to the house this early. Relax. He took another deep breath, forcing himself to release the death grip that his hands had taken on the chair's armrests. \n\n\"Hey Will, whatcha doing? Mom called and wanted to make sure you had a clean sports jacket.\" \n\nHe spun around in the chair. \"Hey yourself. I've got one, why? And I'm...waiting.\" \n\n\"Waiting for what?\" asked his sister from the doorway, wearing a perplexed expression. \"And why are you still home? I mean, it's not like I'm not happy to see you...\" \n\nWill ran a hand through his hair. Why indeed... \"Rissa...\" he trailed off. \"It's complicated.\" \n\nMarissa flounced into his room, then threw herself across the foot of the bed. \"Sounds like you wanna talk,\" she said. \"What's going on, Will? You know I'm a good listener.\" She started kicking her legs to and fro off the side of the bed. \n\nWill sighed. \"I don't even know where to start. I'm having someone over.\" He checked the large digital clock on the desk. \"Soon.\" \n\nThe younger girl jerked upright and stared at her brother. \"What?! Why!\" She got up and scurried over, pressing a hand to his forehead. \"Will, are you feeling okay?\" \n\n\"Marissa,\" he said. \"I'm fine. I just...didn't have a choice this time. It'll be okay, she'll be gone before he gets back.\" \n\nShe leaned back, gazing down at him. \"Who are you and where's my brother? Will would never invite someone to come here. Ever. And definitely not a girl.\" \n\nWill sighed again, clasping the bridge of his nose between his thumb and forefinger. \"I know, I know. I really didn't want to. You know how much I didn't want to. But I didn't have a choice. And I'll make sure she's gone long before either of them come back.\" \n\nThe doorbell rang. \n\nWill stood up. \"Can you...make yourself scarce for an hour or two? This might get messy and I don't want you to get dragged in. Please?\" \n\nShe looked at him. \"Alright, but you better fill me in after. This is weird Will.\" \n\n\"I will, don't worry.\" \n\nThe bell rang again, impatiently this time. \n\nWill started towards the door, but his sister threw her arms around him and squeezed. He looked down. \n\n\"You looked like you needed that,\" she chirped, then scampered out of the room. \n\nHe walked out of his room, down the hallway, and down a few steps of the staircase before she caught up, carrying a book. \n\n\"I'm gonna go read out on the patio. Come get me when it's safe, 'k?\" She continued on, making for the rear of the house. \n\n\"You're the best, Rissa!\" he called after her. \n\n\"I know!\" \n\nWill reached the front door just as the bell rang a third time. Then a fourth. He unlocked and opened the door. Prez stood out on the front step, watching the door open. The bell rang for a fifth time as she looked at him. \n\n\"Hi?\" asked Will. \n\nThis is a different look. Her hair, normally straight and either free-hanging or styled up onto her head, was a mass of curly ringlets crudely pulled into a ponytail with a black scrunchie. Her outfit, normally stylish and carefully coordinated, was a pair of sweatpants and a hoodie. Still with the glasses, though. \n\n\"Are you going to let me in? {Get out of my way.}\" she asked. \n\n\"Of course, Prez, of course!\" he said, quickly stepping out of the doorway. \n\nShe pushed past him, taking in her surroundings. \"It's a beautiful house. {Wow, this is fancy!}\" \n\nMore like a cage. \"Can I get you some water, or a snack, or\u2014\" \n\n\"I want to see your room. {I want to see where the Will White lives.} Where is it? {Show me.}\" \n\n\"Er, Prez, I thought maybe we'd go to the sitting room? The furniture is\u2014\" \n\n\"This way, I guess? {I'll find it myself.}\" she said, ignoring him and heading for the stairs. \n\n\"Um,\" he said. This is too disconcerting, having her here. He followed after her up the stairs. Damn, even in sweatpants her ass is\u2014 \n\nAbruptly she stopped, swiveling around to look at him. He halted, eyes racing up to meet hers just a fraction of a second too late. \n\nAh, shit. That's gonna set her off. \n\nInstead, she resumed her ascent. \"Left or right?\" she asked when she reached the summit. \n\n\"Left. Uh...it's the third door on the right.\" \n\nShe turned to the left, not responding to him. They reached the door he'd specified, and she stopped in the entrance, taking it in. \n\n\"It's...different than I expected.\" she commented. \n\nThe room was large, with enough room for a queen-sized bed to sit comfortably off to the side with space still remaining for a second one next to it. It was covered, wall to wall, in bookshelves. The only exceptions were the wall directly behind the bed, the double doors to a closet, and a section of wall which was occupied by a small, ornate wooden desk. At the base of the desk lay his backpack, with a utilitarian, antique-looking chair next to it, and his closed laptop rested on top in front of a digital clock. \n\nThere were no games, no toys, no clothes. There were no truckloads of condoms, no supermodels hiding under the bed, no posters of partially or fully naked women. He knew what she was expecting to see, and this was not it. \n\nThere was nothing superfluous. In this room he had exactly what he needed to survive all the time that he'd spent awake in here. \n\nHis books. \n\n\"Um,\" she said, looking around at the shelves. \n\nHe was proud of it, in a way. He'd categorized the shelves, splitting the room into fiction and nonfiction, then further segregating by genre and topic. Each area was properly alphabetized. No book was out of place or off the shelf, nor were there any books stacked horizontally across the tops of any shelves. \n\nEvery one of his books was where he could find it at a glance. \n\nPrez stepped inside, still scanning the shelves. \"Right,\" she said, blinking. She turned back to look at him, the expression on her face complicated. \n\nHe watched her with a neutral expression. Yes. This is the room you wanted to see. \n\nShe turned back towards the desk. After another moment of looking at all of his books, she walked over and sat in the chair at the desk. \"Alright,\" she said, again struggling with reality. She looked over at him. \"Why don't you sit on the bed, Will. {This is a bit creepy.}\" \n\nShe's a little freaked out. I don't blame her. \n\n\"This is really your room? {Are you trying to fuck with me?}\" she asked. \n\nHe walked in and stood at the center of the room. \"If this isn't it, I don't know where it would be,\" he said, staring into her dark brown eyes. \n\nShe looked around one more time, then closed her eyes and shook her head. \"Alright. Great.\" She turned the chair around and looked up at him. \"Here's how it's going to be,\" she pointed to the bed. \"You sit there. {Get on the bed.} You will not get off the bed, you will not tell me to do anything, and you will not try to touch me. {Don't do anything except answer my questions.} This is a trial, so you will tell the truth. {If I find out you're lying, I'll kill you.} You will explain why you thought it was okay to blackmail me, and then you will tell me how you found out about my Class. After that, I want to know what Skill you used on me. {Did you hypnotize me?} If I have further questions, you will answer them. {You're going to tell me everything.}\" She folded her right leg over her left and crossed her arms. \"Are we clear?\" \n\n\"Crystal,\" he said. He sat on the bed. \"Um, you mind if I lay down? I'm still pretty tired from yesterday.\" \n\n\"Oh? Had a big night yesterday, did you? {Out banging more sluts?}\" she asked with a scowl. \n\n\"Er, no, Prez.\" He looked at her cautiously. \"You really wore me out in the morning. I mean, I was pretty out of it the rest of the day.\" \n\nHer eyes narrowed. \"Enjoyed yourself that much, did you? {Are you fucking with me?}\" \n\nThis is a trick question. This is definitely a trick question. But what's the trick? \"Yes?\" he asked. \n\nPrez paused, thinking. \"Hmph,\" she said. \"Alright, I'll allow it. {It's to be expected after being with me.}\" \n\nDid...did she just smile a little? He looked closer before he tipped over backwards. No way, I must have imagined it. \n\n\"Thanks, Prez. Now then, where do you want me to start?\" He closed his eyes. \n\n\"Let's go back to the beginning. {Monday.} No, actually, before the beginning. And I want a real answer this time: why me? {Why did it have to be me?} I've heard the stories, I've seen the girls you've gone out with, I'm clearly not your 'type'. {I know you like big-boobed bimbos, not girls like me.} So why? {Was I special somehow?}\" \n\nWill chuckled. Fucking Don. I think this is the first time The Legend has really not been funny. \n\n\"What's so funny? {Are you fucking laughing at me?}\" \n\nUh oh, she seems angry. \"Ah, sorry, Prez. But you really shouldn't believe everything you hear, right?\" \n\n\"You're saying they're all lies, Will? {Do you think I'm an idiot?}\" \n\n\"Um,\" he paused. \"Some of them might be true?\" \n\n\"Then let's play true or false. {It'll be fun to hear it from you directly.} The time you hooked up with a swimsuit model? {She was blonde and had bigger boobs than me.}\" \n\n\"True.\" \n\n\"You and the double-D twins who didn't speak English? {Also blonde.}\" \n\n\"The spoke some English.\" \n\n\"You and the blonde bartender behind the bar?\" \n\n\"She wasn't a bartender, she was a hostess\u2014\" \n\n\"The actress from that soap opera?\" \n\n\"Aspiring actress. She had just auditioned for the part.\" \n\n\"But she did get the part?\" \n\n\"Well, yeah, but it's not like I knew that at\u2014\" \n\n\"You can see how I might be inclined to believe the things people say about you based on this small sample size? {So you're admitting I'm not even your type.}\" Her tone was frosty. \n\n\"I can see that perspective.\" \n\n\"Let's go back to the question. Given our brief chat, and what you've just admitted, why me? {If I'm not even your type, why did you have to do that to me?}\" \n\nShe's really hung up on this. What does she want out of this? Ah, well, she said she wanted to hear the truth. \n\n\"Prez,\" he said. \"Would you believe me if I said that I saw you in those jeans and thought you had one of the top three asses I've ever seen? Maybe number one, now that I think about it again. I didn't know how it would feel at the time\u2014\" \n\n\"Will. Focus. {Be serious.} You really expect me to believe that? {This isn't a good time for jokes.}\" \n\nShe sounds disappointed. \"I could use a Skill and you'd believe me, but\u2014\" \n\n\"No. {No, anything but that!} Don't you fucking dare. {No more Skills!}\" \n\n\"\u2014But I don't imagine you'd want me to do that right now. You said you wanted the truth, so I'm going to be completely honest here. It's up to you whether you choose to believe it.\" \n\n\"Wait a minute, hold on. {Are you fucking kidding me?} So you're saying you did it on a fucking whim?\" \n\n\"Yeah, I guess you could put it like that. I mean, I knew about the cheating for a while, but I\u2014\" \n\n\"You what? {@#$!} How the fuck\u2014if you knew for that long\u2014why\u2014what?! {#@*%&amp;!!}\" She started to hyperventilate. \n\n\"Breathe, Prez. Relax, it's only us here. We're just talking.\" \n\nHe heard her take a series of deep breaths and imagined her covering her face with one hand. Almost worth looking up for. She's so cute when she gets flustered. \n\n\"Alright. So...it was the jeans? {You didn't even do it because you like me, it was just because you thought my butt looked good in the new jeans I was wearing?!}\" \n\n\"No, Prez, you really have to work on your listening. It was you. The jeans just helped.\" \n\n\"I don't understand. {What?!}\" \n\nWill sighed. \"Prez, I never thought of you as a girl before Monday. I never thought of you as hot until then.\" \n\n\"Will,\" she said, her voice tight with anger, \"I want you to think very carefully before you reply to this. If you didn't think of me as a girl, what did you think of me as?\" \n\n\"Oh, that's easy. I thought of you as Prez, obviously. It's not like it's a job for you, is it? It's who you are.\" \n\nShe was silent for a while. \n\n\"I see,\" she said, her voice neutral. \"So after you saw me as a hot girl,\" she said sarcastically, \"you just decided to do it? {So you thought I was hot and that was that?}\" \n\n\"Well, no, I also knew that you'd be staying late in your office since it's Monday. So you were going to be there anyway, right? And then Greg was absent. That was a big factor.\" \n\n\"We'll get to him later. {I want to know all about that, but this is more important to me.} I guess that's all I'm going to get out of you on that topic, so let's move on to the important part. Why did you blackmail me? Was it the humiliation? You got off seeing your 'Prez' forced to debase herself for you? Or do you just have a thing for\u2014\" \n\n\"Prez, I have to cut in here before you say something you might regret later.\" \n\n\"And now you're cutting me off after you\u2014\" \n\nShe's getting pretty worked up. How do I defuse this? I can't use my Skill... \"Prez,\" he interrupted again, \"are you going to let me answer the question or are you just going to rant at me? If the ranting helps, I'm okay with helping the healing process like this but I don't think it's all that healthy.\" \n\nI can feel her seething over there. It's like the air in the room is actually getting hotter. \n\n\"Fine,\" she said through clenched teeth. \"Talk. {Talk fast.}\" \n\n\"Prez, think back with me if you can. \"After I said that I knew about your cheating\u2014the first time, before you believed me\u2014do you remember the first thing that I said?\" \n\n\"Um. {How am I supposed to remember something trivial like that?} Something about not knowing me very well?\" \n\nWill sighed. \"You really need to focus more when you talk to people.\" \n\n\"What does it matter? {This is irrelevant.} Who cares what you said. {I don't care.} Answer my question! {Get to the point.}\" \n\n\"It's important, Prez, because you're the only person at school who could have ended up in this situation. And it's because you don't listen.\" \n\n\"Wha\u2014\" \n\n\"The first thing I said, Prez, and I remember because I chose my words carefully, was: You're certainly a great actress, and it makes this all the better. I want you to keep that in mind, Prez. You'll just have to take my word that it's important.\" \n\n\"Okay...\" she said. \n\n\"And then, soon after, I said: I don't have a problem with you. That was meant to be taken literally, so keep that in mind as well.\" \n\n\"Uh huh...\" \n\n\"Now, let's move to where I 'blackmailed' you.\" He held up his hands to use air quotes so she could see. \"I used my Skill, but, if anything, that should have guaranteed that this went well for both of us. You're the only one who could have messed it up, and I didn't take that into account. So that's on me, and I'm sorry for that, Prez. Really, I am.\" \n\nHe took a breath. \"If you'll recall, what I said was: I will take the action expected of me as the student council vice president, and I won't go easy on you.\" \n\n\"Yeah! {That sounds familiar!} That's exactly what you said! So how is that not blackmail? {How can you try to weasel out of this?}\" she demanded. \n\n\"Prez, I want you to do a thought experiment with me.\" \n\n\"A what? {What the fuck?}\" \n\n\"A thought experiment. It's where you think through a given scenario as if it were real. A hypothetical.\" \n\n\"Oh. {Where did he learn about that?}\" \n\n\"Um, anyway, I want you to consider this. Imagine that the Skill I used when I said those words only works if I believe that what I'm saying is completely true. Are you with me so far?\" \n\n\"Um, sure? {Do you mean like some kind of truth hypnosis?} So...\" \n\n\"So at that moment, I believed that I would act according to what I said, yes?\" \n\n\"Alright...\" \n\n\"So then the action that you expected me to take as the student council vice president is what constitutes blackmail, correct?\" \n\n\"Yeah, you were going to ruin my life! {I can't fucking believe you blackmailed me!}\" \n\n\"Hold on, Prez, we're still in the thought experiment. So now that we're here, I want you to imagine that you're someone else. Someone who knows me better. And as that person, you know that I'm very, very lazy. I'm so lazy that not only do I not attend most of the student council meetings, I never even ran for my office to begin with. Are you imagining this?\" \n\n\"Wait, what\u2014\" \n\n\"So as this person who knows me better, well enough to know that I'm lazy, you naturally also know that I'm not going to do anything which will inconvenience me. Because then I would have to do stuff, but I'm lazy, so I don't want to do stuff, right?\" \n\n\"But\u2014\" \n\n\"And so in this scenario, Prez, if I 'ruined' your life, you would no longer be Prez, right? Which would mean someone else would have to be Prez. According to the bylaws, if the president is removed from office for any reason, the vice president is automatically confirmed as the next president. Surely you're aware of this?\" \n\n\"That does sound\u2014\" \n\n\"Which would mean that I am now the president, and I have to take on all the responsibilities that you have. Tell me, Prez, in what universe does that sound like something I would want to do?\" \n\nThe silence was deafening. \n\nI can actually hear her brain chugging along. I want to look. But I shouldn't, I'll let her think. Also this pillow is soo comfortable, it feels just like Tiff's boobs. No, focus! \n\nMinutes passed. Will considered speaking up but decided to rest his brain instead. \n\n\"How do you know what a thought experiment is?\" was the question she chose to break the silence with. \"That doesn't sound like anything from our classes...\" \n\n\"Prez, look around.\" \n\n\"You mean\u2014\" \n\n\"All of them.\" \n\n\"But...\" she trailed off. \"Will, there's hundreds of books here. {It's like a small library in here!}\" \n\n\"427.\" \n\n\"What?\" \n\n\"That's how many books I have.\" \n\n\"Um.\" \n\n\"It looks like there's more because there's so many of the big books.\" \n\n\"No, that's not\u2014How could you possibly have time to read this many books? {Even if you read every second of your free time it wouldn't be enough to read that many books.} How old are you? {Do you have some kind of anti-aging Trait?}\" ",
        "Will gave a single laugh. \"I'm eighteen, Prez, same as you. Since September.\" \n\n\"But how\u2014\" \n\n\"Prez,\" he said. \"Earlier today, you said we're not friends and we never would be. I'm not going to lie to you, but you're right that we aren't friends. And there's some things that I'd only talk about with friends. The books are one of them. All I'll say is this: do you remember me from freshman year?\" \n\n\"Freshman year? {That was so long ago.} Yeah, you\u2014\" \n\n\"See, Prez, this is what I mean. You don't listen. You don't pay attention to people.\" He sighed. \"But I'm not going to talk about that anymore and it's not relevant.\" \n\nHis mind flashed back. He was shorter, laying in bed. His wall only had a single, small bookshelf. He turned another page in his book, Adventures of Huckleberry Finn. He wished he was outside... \n\nHe opened his eyes. Haven't thought about that in a while. Let's not do it again. \n\n\"What's next?\" he asked. \n\n\"I'm thinking,\" she replied. \n\nMinutes passed again. \n\n\"So let me see if I've got this right. {This is a lot to take in.} According to you,\" she paused. \"the first thing you said was that you knew I was a good actress. Which was...\" she paused again. \"Setting the scene? {That's pretty subtle, I'd have to be really thinking about it to pick up on that.}\" \n\n\"Right.\" \n\n\"And then you said you didn't have a problem with me, which was supposed to...what, let me know that this wasn't some kind of vendetta? {I didn't notice that at all, I guess because I was too scared.}\" \n\n\"Something like that.\" \n\n\"And then you made a threat, which I was supposed to know was an empty one if I'd thought about it or knew you better. {Do I really not know you well enough?}\" \n\n\"Yeah, my Skill really fucked us there.\" \n\n\"We'll get to that. {Hold on.} So after that point, everything was supposed to be...\" she trailed off. \"Like a play? {This was supposed to be some kind of kinky role play?}\" \n\n\"With me as the villain and you as the stunningly beautiful leading lady, Prez. I thought your acting was incredible at the time, by the way.\" \n\nShe sighed. \"Will. {This is giving me a headache.} I think it's time you explained how that Skill works. {How could any Skill work like that?}\" \n\nChapter 4: Saturday Morning, 11:47AM \u2013 I'm Leaking Brain Lubricant \n\n\"Alright, I'll give it my best shot just for you, Prez.\" \n\nShe sighed again, this time in clear exasperation. \n\n\"I think first it might be helpful to understand my Class a bit. You know my Class is [Conversationalist], yes?\" \n\n\"So I've heard. {What an apt Class.}\" \n\n\"It's a great Class, the one I dreamed of having for a long time. The way that it works is simple: I rank up based on the satisfaction of people I converse with.\" \n\n\"You...talk your way into leveling up?\" \n\n\"Hah, good one, Prez. That's basically true. Whenever I talk to someone and have a conversation that helps them out, it helps me out. For example, I had an important chat with a friend of mine last night who was hurting, and I managed to clear up her worries\u2014or so I thought. I wasn't sure how successful I'd been, but I ranked up, so I assume it helped.\" \n\n\"Alright, I guess that makes sense for the Class. {This seems like a total joke compared to my Class.}\" \n\n\"And this Skill\u2014the one I used on you Monday\u2014it's helpful for having deep conversations. What's the worst thing that happens when you're talking to someone, Prez?\" \n\n\"Um...they get upset?\" she said. \n\n\"And why would they get upset?\" \n\n\"Because I say something they don't want to hear? {Because I don't always sugar-coat things?}\" \n\n\"Hm. Maybe it's different for you. I find that the reason people get upset in a conversation is when a misunderstanding occurs. You could see how a misunderstanding might be upsetting, right Prez?\" \n\n\"Will...\" her voice was dangerously low. \n\n\"This Skill is great for preventing misunderstandings. Because it makes it impossible to misunderstand me.\" \n\n\"How?\" \n\n\"I don't know how, it's a Class thing. If you want to talk about the specifics of that then we can, because I've read some books\u2014\" \n\n\"No, I meant how can it be impossible to misunderstand you? That...doesn't make sense.\" \n\n\"A misunderstanding is when someone interprets the intent of words as being different than the intent with which they were spoken. Does that sound right to you?\" \n\n\"I guess. {Ugh, you sound like Dr. Sutton.}\" \n\n\"My Skill makes it so that if I say something that I believe to be true, the other person will know that I believe it to be true.\" \n\n\"Err...what?\" \n\n\"I'm really enjoying this conversation. And I think your voice is sexy.\" \n\n\"What. {What the fuck?}\" \n\n\"Did you believe me?\" \n\n\"What. {What the fuck?}\" \n\n\"I thought it would be easier to understand with a demonstration, so I picked two simple statements, one of which I thought you wouldn't believe. So, do you believe me? Honestly, now.\" \n\n\"No, why would you enjoy being interrogated like this? {Who would enjoy this?} And this voice isn't sexy, it's just my normal voice.\" \n\nWill pushed at his words. \"I'm really enjoying this conversation. And I think your voice is sexy.\" \n\n\"Whoa, what the fuck! I said not to use your fucking Skill! {Oh fuck, what did you do to me?!}\" \n\n\"Sorry, Prez, but I figured it was faster this way.\" \n\n\"Ergh. What kind of pervert are you that you're enjoying this?\" \n\n\"Enjoying what? Talking to a pretty girl who has a sexy voice while laying on a bed?\" \n\n\"Oh. {I guess that makes sense.} Wait, the second time you used it on me...\" she started, then stopped. \n\n\"Yes?\" \n\n\"You said you wanted me. {You really wanted me?}\" she said in a small voice. \n\n\"I did.\" \n\n\"And it made me...\" she trailed off again. \n\n\"Funny how being unsure of the other person's interest can get in the way of arousal, isn't it, Prez?\" \n\nShe grumbled. \"So that's why you had me say that weird line yesterday at the FCF, too. {And why you fucking punched me.} You used your Skill on the examiner. {You had to actually see it.}\" \n\n\"Yeah, more or less, though I'm still a little mad I couldn't think of a better plan. I had to use it on the receptionist to get into the building by saying that we were in a relationship and that you were in trouble. Then I described what you did, and the state you were in, and how you named me as your proxy to the examiner. Had to use it twice on him to get it to stick, but he put it into the system and registered it.\" \n\n\"That's...an incredibly powerful Skill. {I've never heard of a Skill like that!} What the fuck, Will? Why do you have something like that while I'm stuck with...this. {That's so unfair!}\" \n\nI forgot that her Class was [Onahole] for a while there. That...does seem pretty rough even without knowing the details. And I don't really want to be responsible for whatever she's dealing with, even if I do feel bad about this week... \n\n\"Life's not fair sometimes, Prez. But if it makes you feel any better, I've wished for my Class with every fiber of my being since I was about fifteen. I didn't know if a Class like this existed, but I wanted it more than anything in the world.\" \n\nShe went silent again, and it lasted longer than any of the previous times. At one point he thought he heard sniffling. \n\nAh, shit. I should get up and give her a hug or something, but then she'd get more upset because I saw her. May as well keep laying here... \n\n\"Thanks again for yesterday, Will.\" she said at last, her voice quiet. \"I really don't know what I would have done if you didn't show up. I think...I think my life would've been over. Ay spent a lot of time convincing me that I could make it work, but looking back, I just can't...\" She sniffled. \n\n\"Happy to help, Prez,\" Will replied earnestly. \"Especially considering the thanks you gave me.\" \n\n\"You really seemed to enjoy that, huh?\" she said, a tremor entering her voice. \"So now I'm another notch on your bedpost, I guess? {Could you maybe not tell everyone?} How long until the whole school is talking about it? {I don't want the whole school talking about it.}\" \n\n\"Ah, Prez, don't be like that. I'm not going to make it a thing, I promise. Just think of all your fans who would camp out here with their pitchforks and torches.\" \n\nShe snorted. \"Did you...use your Skill when you said that?\" \n\n\"No, why?\" \n\n\"Oh. Just wondering. {Because I believed you.}\" \n\n\"Okay.\" \n\n\"Hey, Will?\" \n\n\"Yeah, Prez?\" \n\n\"Can I, um, I feel like laying on the bed. {I want to be closer to you.} So move over. {Make some space for me.} And no touching! {No touching yet!}\" \n\nI feel like this is starting to get weird. \"Er, sure thing, Prez.\" Will said, scooting over towards the side of the bed, but still laying on his back. He felt an impact on the bed near his left foot, and it moved closer to the pillows. He saw her coming out of the corner of his eye before he closed them, knee walking her way up the mattress. \n\nShe settled her head on the pillow that he wasn't using, facing away from him. \n\nWhat the...why am I getting hard from this? You okay down there, buddy? Ah, shit, I think she traumatized me yesterday. \n\n\"Will,\" she said after a few minutes, her voice faint. \"on\u2014on the Will White scale, how was it? {Was it good?}\" \n\n\"Uh...how was what, Prez\" \n\n\"Y'know. How... How was I? {Did you really like having sex with me?} When we...\" \n\nOh. Ohhhh. \"Prez, you get full marks. Top of the class. Literally.\" \n\n\"Really?\" she asked. \n\n\"You've ruined me for other women, Prez,\" he joked. \n\n\"No, I'm serious. {Don't tease me!} Use your Skill, I need to know. {I need to be absolutely sure.} This is important, Will. {It's for my Class.}\" \n\nThis is going to be two down, only one left... \"Alright, relax. Ready?\" \n\n\"Mmhmm\" \n\nHe pushed. \"Prez, sex with you was the best I've ever had. It was the best on Monday, and then it was the best again on Friday.\" \n\nShe let out a big sigh. \"So that's why...\" he thought he heard her say in a whisper. \n\n\"Thanks, Will.\" \n\n\"Ah, Prez, before I forget. Your registered Class, [Asclepeian]. Did you get the reference?\" \n\n\"Oh. {Good thing you reminded me.} No, I kept meaning to ask you. Is it from something?\" \n\n\"Sort of, though I'll admit I took some liberties with it. The root of the word is Greek, from Askl\u0113pi\u00f3s, the god of medicine, and I changed\u2014\" \n\n\"ARE YOU FUCKING SERIOUS?\" she shrieked. \n\nHis eyes flew open at her sudden change in attitude, and his head turned to look at her. \n\nShe'd also turned over, facing him, her eyes big and body quivering. \"Will,\" she said, her voice trembling. \"You gave me a Class named after a fucking god?\" \n\n\"Um...yes? I talked to Ayanna that morning, and she mentioned that you wanted to be a doctor of some kind, and I had to come up with something on the drive over\u2014which, like I said, is really not very long at all\u2014\" \n\nShe lunged across the bed, wriggling one arm under him and throwing the other around his chest in an attempt to squeeze him to death. Her head was pressed tightly against the outside of his shoulder. \n\n\"Um,\" said Will again. What is it about her that makes me unable to talk normally? \n\n\"That's so fucking cool!\" she half-whispered, her lips inches away from his ear. \n\nWill broke into a grin. \"It is pretty cool, isn't it?\" \n\nHe felt her nod against him. \"Thank you,\" she said in the same half-whisper voice. \n\nIt's lucky I wore jeans today, and that I'm dressing to the right, or this would probably go downhill fast. What the hell, she whispers in my ear a couple times and I'm more turned on than I was when I was on the verge of a six-girl orgy last night? \n\nShe shifted against him, and he was suddenly very aware of how her body was adhering to his side. The back of his hand was up against the crotch of her sweat pants, her chest pressing against his upper arm. \n\nIf this were any other girl, I could just relax and let her snuggle up like this. Tiff and I cuddled for like a half hour last night and I didn't even get a little bit hard. But now my heartbeat feels like I've been running a marathon... \n\n\"Did you...um...\" began Prez, \"Did you notice what I did for you yesterday after...\" \n\nWhat she did? After... \n\n\"Oh, you mean how I didn't have to run my dick through a power washer before I got back to school? Yeah, it was a lifesaver! I was meaning to ask you how you did that. Is it a Class Skill?\" \n\nHe could feel her blush as she buried her face in his shoulder. Angry Prez is hot, but Prez acting shy is so adorable it should be illegal. \n\n\"Yeah,\" she said, her voice muffled. \n\n\"I can't hear you, Prez,\" he said softly. I can't help it. She's too cute right now. \n\nOne eye peeked out over his shoulder, revealing a single limpid, brown eye. And part of a bright red cheek. \n\nOh wow. It's like weaponized cuteness! How can any one person be this cute? \n\n\"It's a new Skill,\" she mumbled, meeting his gaze briefly before her eye darted away. \n\n\"What does it do?\" he asked. My leg itches. I want to reach down, but it feels like she'll bolt if I move at all. This is such a nice change from her hating me. I should enjoy it while I can. \n\n\"Well...\" she said. She leaned in closer, as though afraid she might be overheard somehow. Her breath tickled his ear. \n\nI didn't think I could get harder than I was, but... \n\n\"I can use it to clean my body. Inside and outside. Since you were still...inside me and touching me when I used it, that part of you got cleaned, too.\" She retreated back to the safety of his shoulder, peeking out again with one eye. Her blush had receded partially, but not completely. \n\n\"That's...\" Will said. Then he thought about it. \"Oddly sensible?\" Then he thought about it more. \"Um, Prez, I don't want to be indelicate, but you know you've really got an...unusual...Class, and I have a lot of questions, but this one\u2014look I'm just going to come right out and ask: does that Skill mean you don't have to go to the toilet anymore?\" \n\nHer eye blinked. Then it blinked again. \"It...does?\" she said, seemingly unsure. \"I guess it does.\" \n\n\"Huh,\" said Will. \n\n\"Huh,\" Prez confirmed. \n\nA minute passed. \n\n\"My arm is falling asleep,\" whispered Prez, trying to free the arm that was trapped under his back. She twisted her body, coming to lay over his left side, her legs split by his thigh. He could feel heat against his leg where her pelvis was now pressed into him. She looked up at him, her chin resting on the back of her hand over his heart. \"That's better,\" she said, her face slightly pink. \n\nIs this... Am I being seduced? \n\n\"Oh, what's this?\" said Prez, reaching up with her right hand to touch a spot on his neck. \"Oh no!\" Her brow crinkled cutely in dismay, and her hand moved to cover her mouth. \"Will, did I do this? I'm so sorry, you were walking around all day\u2014\" \n\n\"No, no, don't worry, Prez, you weren't the one who did this,\" he said, feeling the need to placate her as quickly as possible. \n\n\"Oh, okay,\" she said, her face softening into a relieved smile. Then, after a moment, she stiffened. \"Will,\" she said in a completely neutral tone, the smile fading from her face. \"If I didn't give that hickey to you, who did?\" \n\nWhy do I feel like I just stepped on a landmine? \"Well, uh, the guys and I went out to a club last night...\" he said. \n\nShe pushed herself up onto her knees, and he trailed off, noting the proximity of her knee to his balls. \n\nPrez looked down at him for a moment with an expression that could have been disgust or disappointment on her face, before turning to scoot off the foot of the bed. \"Stupid...\" he thought he heard her mutter under her breath. \n\nWill sat up, detecting a change in the atmosphere. \"Um, Prez, it's not like\u2014\" \n\n\"Shut up, Will.\" she said, her voice flat, facing away from him. \"I got what I came here for. I'll accept that we had a...misunderstanding...earlier this week. But that doesn't mean I'll forgive you for how upset I was.\" \n\nThis is feeling familiar. I should try and head her off, this is going to be a real hassle on Monday otherwise. \"Prez, look, I'm really, really, sorry about that. I'll make it up to you. Just give me\u2014\" \n\nShe turned on him. Her arms were crossed over her chest, and she once again wore the cool mask of the Student Council President. \"Will, there's nothing you could say, nothing you could do to make it up to me. If I've learned anything today, it's that you don't take responsibility for your actions.\" \n\nHe opened his mouth to protest. \n\n\"You don't, not when it matters,\" she continued, steamrolling over his objections. \"You're impetuous and you go with the path of least resistance. Always.\" \n\n\"Prez\u2014\" \n\n\"I'm grateful for your help yesterday, but I think I've already expressed my gratitude more than sufficiently\u2014by your own admission\u2014wouldn't you say? But I know you only did that to assuage your own guilt, whatever may have caused it, and not for any other particular reason. \n\n\"As far as I'm concerned, matters are settled between us now. There's no need to exert yourself any further: you've already done far more than I expected of you\u2014which was never anything to begin with. \n\n\"We won't speak of any of this again. Once I leave, we'll go back to being Alaina and Will and that will be that. You can stay there, I know the way out.\" She turned to the door and left. Moments later he heard the front door slam shut, but he just sat there, staring at the empty doorway. \n\nChapter 5: Saturday Afternoon, 2:01PM \u2013 Reality Continues To Ruin My Life \n\n\"Hey, Will, how\u2014um...I take it things didn't go well?\" \n\nWill lay spread-eagle on the bed, staring at the ceiling, his eyes unblinking. \n\n\"Uhh...you didn't come get me after she left, so I figured I'd give you some time, and...\" \n\nWill didn't move. \n\n\"Will, you're scaring me. Is this like...that time? Will, please\u2014\" \n\nWill blinked, then looked over. He grinned sheepishly. \"Sorry, Rissa, I was a bit lost in my thoughts. I'm okay, you don't have to worry.\" He sat up, moving towards the edge of the bed. \n\nMarissa moved closer, eyeing him suspiciously. Then she reached out and gave him a tight hug. \n\nHe hugged back. \n\nThey parted, and she frowned at him. \"Don't do that again, Will. I couldn't...not again...\" she trailed off, looking down at the floor. \n\nWill stood up, this time being the one to initiate a hug. \"Hey, hey, I said not to worry. I'm fine, see? And I'm way tougher than before, something like this isn't going to get me down!\" But then why does it feel like I really fucked something up badly? \n\nShe shook free of the embrace, frowning at him. \n\nHe mussed her hair. \"Stop it, you're way too young to be worrying about an old man like me.\" he grinned more widely. \n\n\"You're only two years older!\" she said, stamping her foot. She stuck her tongue out at him. \"But since you are okay, I gotta ask...was that Alaina? Bishop? Because I ran over to look out the window after she left and it looked kinda like her, but her hair and her outfit were all different, and\u2014\" \n\n\"Yeah, it was her all right,\" said Will, sighing. \n\n\"Oh my god, that's so awesome!\" Marissa said, her voice laden with excitement. \"I mean, I knew you were in student council with her and all, but I know you never really wanted to do that and it's not like you really hang out or anything, but I'm such a big fan and I wish I had maybe half\u2014no, even a quarter!\u2014of her acting and singing ability, and oh man, when I tell my friends she was at my house, Will, this is like, the coolest thing that's ever happened to me!\" "
    ],
    "authorname": "ivan_ronical",
    "tags": [
        "blow job",
        "cum",
        "cunnilingus",
        "drama",
        "horror",
        "humor",
        "mind control",
        "oral",
        "student"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/taking-the-class-pt-02"
}