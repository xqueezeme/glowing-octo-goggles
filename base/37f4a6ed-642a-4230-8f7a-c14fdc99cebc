{
    "title": "Unexpected Anal Office Tryst",
    "pages": [
        "I've known Kathryn for a little more than eight years, since her first day working for the company back in 2012. I've loved Kathryn since the same day. Which is to say, platonically; as much as any married father of two could love a coworker who is engaged to another man without risking his job. \n\nKathryn is, in a word, adorable. She is petite, maybe 5'4\", with a girl-next-door appeal despite her age. Like myself, she is in her mid-thirties, but has flecks of grey dotting her otherwise brunette hair, nature's response to our stressful work environment. I'm sure the younger guys who work here fantasize about her, but the more mature men, mostly husbands, appreciate her for the harmless way she flirts. Every conversation with her feels natural, organic, as though you've known her forever and are completely comfortable around her. She's attractive enough that you enjoy making her laugh, but not so hot that you are intimidated by her. \n\nIn other words, she's just right, and seeing her is always a highlight of my day. And while I respect her tremendously for her intelligence, professionalism and sense of humor, I must admit that my favorite part about her is her cute butt. And \"butt\" is the right word. It's not an \"ass,\" hardened in the gym and flaunted through yoga pants. It is the cutest butt I've ever seen, always adorned perfectly in a smart pair of trousers, implying that she knows how good it looks, and doesn't need to emphasize it more than necessary.\n\nAll this is to explain why, when everyone else in the office takes off early on Fridays, I was willing to accept a meeting invite from her at 6pm. I texted my wife to let her know I would be a couple hours late, which was met with the expected mundane reply, \"Let me know when you're on your way.\" \n\nIt was not unusual, nor was it common, for me to have one-on-one meetings with Kathryn. We were in different departments, and typically when we were in meetings together, other members of our departments were also there. But around once a month, we had to meet alone for one reason or another. What was unusual, though, what that Kathryn would send a meeting invite without an agenda attached to it. She was always organized, in control and keeping everyone on schedule. Loose-format meetings were not her thing.\n\nShe came up to my floor right on time.\n\n\"Hey, Kathryn,\" I said as I turned the conference room light on. \"Come on in.\"\n\n\"I'll be right there,\" she said. \"Just going to grab some water from the cooler. Want one?\"\n\n\"Sure, thanks,\" I replied. I started to enter the conference room, but turned to watch her walk away. God, her butt was perfect. There was that barely-noticeable crease where the top of the leg arcs towards the bottom of the butt, disappearing and reappearing in a mesmerizing cycle as she took each step. It had enough of a bubble that you could imagine it fitting perfectly in your palm, should you ever be presented the opportunity. I regretted that I would never get the chance.\n\nI sat down in one of the swivel chairs and waited for her to return, which she did about half a minute later. I looked up to her as she stood near my chair, something clearly on her mind. In an instant, I got the impression that something serious was up, as though she needed to tell me something of grave importance. I turned my chair towards her and asked if she was alright.\n\nShe took a deep breath in through her nose, exhaling through her mouth like an Olympic diver steadying her nerves. I began running through all of the possible things she might have to say to me, then she did it again. \n\nIn through the nose, out through the mouth. But this time, as she exhaled, she said, \"OK.\"\n\nOK, indicating that she was ready to share. I waited for her to go on, but instead of speaking, she did something most unexpected. She grabbed the hem of her polo shirt and pulled it straight over her head. Dropping it to the floor behind her, she stepped forward and straddled my lap, so that her chest was against mine.\n\n\"Wh\u2014\" was all I was able to muster before her mouth hit mine. I wasn't even sure what I was trying to say. \"What's going on?\" \"What are you doing?\" \"Why?\" \"Wait?\" Kathryn had a flawless figure, and before marriage I would have killed to have this happen. I knew I should have stopped it right there, but there was an urgency in her kissing that suggested I might really hurt her if I forced her off me. When she came up for air, I would try to better gauge the situation.\n\nShe cupped my cheeks with both hands and held me steady and she continued to explore my mouth. Up until now, I had just been taking her tongue past my lips, but I quickly found myself kissing her back. Her breath was minty, her lips soft. It felt amazing, and though I knew it was completely wrong, I couldn't help but encourage her. \n\nAll this time, I was holding my hands up and out to the sides, as if to prove that I was not a willing participant in this. In my head, I envisioned my wife seeing a surveillance video of this, and my messed-up logic was that not holding onto Kathryn suggested that I was innocent.\n\nShe backed off for a minute and allowed me to get a word in.\n\n\"Kathryn, what's going on? I'm married. You're getting married next month!\"\n\nShe put a finger to my lips, silencing my rebuttal.\n\n\"Shhhh. Let me explain, and please don't interrupt. I need this, badly. I've been a good girl my entire life, and I get the impression you've always been a good man. Before I get married to Jeremy, I want to be bad. Just once. I want to allow myself a moment to feel incredibly naughty. I picked you because you're married. Because you won't talk. This is a one-time thing, our dirty little secret. After we leave this room, it will only exist in our memory.\"\n\nEven if she had allowed me to reply, I don't know what I would have said. First, I never would have expected Kathryn to behave or speak like this. And second, she was actually making some sense. If this happened, I would never say a thing for fear of destroying my marriage. And naturally Kathryn wouldn't say anything for the same reason. \n\nBut she didn't let me reply. Her lips closed on mine again and her hands started fumbling with my belt. \n\n\"Please,\" she whimpered. \"Please, let me have this moment. Please. Please. Please.\" Her tone diminished from a melodious mewing to a hushed whisper as she repeated the word. She unclasped my belt and was pulling down my zipper, her hands frantic as they dug for my throbbing cock. \n\nI caved.\n\nMy hands fell to her sides, feeling the warmth of her waist just above the hem of her pants. At that sign of compliance, her eagerness intensified. Her butt rose off my lap and her chest pressed hard into mine as she undid my zipper and kissed me hard. As she rocked forward, my hands slid down to cup the cheeks that I'd been admiring all these years. They did not let me down. Somehow both supple and firm, fitting perfectly between my thumb and forefinger. A quick squeeze and they bounced right back into place. \n\nKathryn giggled.\n\n\"I've wanted to do that since the day we met,\" I said. \n\n\"Really?\" she asked, innocently. \"Why? It's not that special.\"\n\n\"To me, it's the perfect butt. I'm surprised you haven't caught me staring. Not that I don't try to be discrete about it.\"\n\nShe smiled. \"Well, that actually works out well,\" she said as she dismounted and stepped back from me. For a moment, I thought I had somehow turned her off.\n\n\"What do you mean?\"\n\nShe bit a fingernail, belying her nerves as she stood in front of me in just her tight pants and bra. \n\n\"Well, actually, I was thinking that I don't want to share my pussy with anyone other than Jeremy. It wouldn't feel right, for some reason.\"\n\n\"Oh,\" I said, dejected. I felt my cock start to soften a bit. \"So what do you want to do? Just some oral play?\"\n\nKathryn sighed and raised her eyebrows. \"Please don't make me spell it out for you!\"\n\nIt suddenly hit me like a ton of bricks, and my cock sprung back into action.\n\n\"Oh!\" I said with a totally different timbre. \"Oh!\"\n\nKathryn turned away and undid the buckle on her pants. She then leaned forward as she slowly, torturously, peeled them down her legs. A slutty, sheer white thong emerged, steering my eyesight from her lower back to the treasures scarcely visible between her cheeks. I still couldn't believe this was the same, girl-next-door Kathryn I'd been working with for eight years. \n\nWhen she turned back around to face me, her face was beet red. I rolled my chair forward so that she was standing between my knees.\n\n\"I'm still not sure what I've done to deserve this, but thank you,\" I said. \"I swear whatever happens here stays here. Let your inhibitions go, and I'll try to do the same.\"\n\nAt that, I looped my fingers into the band of her thong and slowly pulled them towards the floor. \n\n\"Allow me,\" I said as the flimsy fabric snapped away from her obviously excited pussy.\n\nHer knees rubbed together as her thong fell to the floor. While she was clearly into it, she was also a bit jittery.\n\n\"I'm following your lead here, Kathryn. I'm nervous too, but I trust you. And I think we can trust each other.\"\n\nIt wasn't lost on me that Kathryn was now completely naked, save for her bra, while I was fully clothed, save for my raging hard-on protruding through my zipper. I was about to stand and start removing my own clothes, but Kathryn stopped me. With a hand on my shoulder, she lowered herself to her knees and grabbed my dick with her left hand.\n\n\"Thank you, Henry. I knew I could trust you to see this hidden side of me. I need this for myself, but I want you to have fun, too.\"\n\nAt that, she lowered her head to my lap and took my throbbing erection into her mouth. I sat back in the chair and let it happen, my eyes rolling to the back of my head. What tremendous luck!\n\nKathryn bobbed up and down for a few minutes. It was clear that she hadn't given much head in her life, but I appreciated the effort. Her tongue made subtle swirling motions on the underside of my cock. It was tantalizing, but definitely not enough to get me off. Given that we had just professed this being a safe place, I decided to see if I could push the envelope a little.\n\n\"Just how dirty do you want to be tonight, Kathryn? Can you take the entire thing in your mouth?\"\n\nShe let out a guttural moan, seeming to welcome the challenge. She adjusted herself for a better angle, and I slid forward to make things as easy as possible. She lowered her torso to make the tunnel from her mouth to the back of her throat as straight as possible. As she scooched forward, she managed to get all but about an inch of my cock past her lips. Her forearms rose and landed on my thighs, bracing herself as she worked towards the ultimate goal. I helped her by grabbing the ponytail and pulling her closer. \n\nHer jaw looked strained as it stretched to accommodate me. Her eyes clenched shut, I believe to focus her attention inward. A single year leaked down her cheek. \n\n\"Mmmphhh!\" she gargled as the last inch slid into her throat. Her fingers clenched my thighs in a death grip, but that couldn't deter me. What did deter me, though, was the fear of turning her off. Having completed her mission of deep throating me, I pulled her off.\n\nKathryn rocked back so that her but was resting on her heels. Her mouth hung open in astonishment, and a healthy wad of drool cascaded onto her chest. For a minute, I thought I had gone too far, but the corners of her mouth curled up into a smile. She seemed proud, more than anything.\n\n\"Thank you,\" she said, shocking me. \"I didn't think I'd be able to manage, but now I'll always be able to say that I did it. Even if I never actually say it, you know.\"\n\n\"You said you wanted to be dirty. I figured let's be dirty.\"\n\n\"You have no idea,\" she said. \"After everyone else left, I spent fifteen minutes in the ladies room giving myself an enema for what I hope happens next.\"\n\nJesus Christ, this woman was full of surprises! The thought of her on the bathroom floor, cleansing herself just to give me her ass had me harder than my wife had ever made me. \n\n\"Fuck, Kathryn. You might make me cum just by talking. We better get to it before I lose my chance.\" \n\nI helped her to her feet, then bent her over the conference table. \n\n\"You want to be a bad girl, Kathryn? Spread your ass for me. Let me see my target.\"\n\nKathryn had her head turned sideways, enabling me to see her reactions. She smiled again, then pulled her ass apart and swayed her hips seductively at me. \n\n\"Do it. Take it. It's yours now.\"\n\nI clenched my cock in my fist, with about four inches extending beyond. It felt wider than ever before, no doubt a response to this taboo situation. I laid my cock between her cheeks, marveling at the variance in size between it and the puckered hole below. It was at least five times larger, but I was going to make it fit. Couldn't pass up this opportunity.\n\nI rocked forward so that my thighs were resting against her ass and my erection lay on the small of her back. I wanted to see how deep I would be getting.\n\n\"You feel that? Are you ready for how deep you're going to take this cock? Are you sure you can take it??\n\n\"I'm going to take whatever you give to me. I'm ready. I want this.\"\n\nFuck. Where were the girls like this when I was single?\n\nI pulled back and aimed at her rosebud. Kathryn inched her fingers slightly closer to the hole, pulling it further open for me. My head pressed against it, and was met with shockingly little resistance. I guess that enema really helped.\n\nThe head popped in and Kathryn gasped. She immediately let go of her ass and brought her hands up near her head, bracing herself against the table. I pulled back out, thinking I'd hurt her.\n\n\"No!\" she exclaimed. \"Don't pull out! I read that the hardest part is entry. Once you get it in, I'll get used to it.\" \n\nIt was so like Kathryn to read about what to expect, and to have a plan. Somehow, that made it even sexier.\n\n\"Are you sure you don't want me to get a little lubricant on it before we continue?\" I asked. As a hint to what I meant, I lowered my aim and gently nuzzled my cock between the slick folds of her labia. \n\n\"No...that's just for...oh, God,\" she shuddered as I made contact with her clit. \n\n\"Who's it for?\" I asked. \n\n\"Fuck, it feels so good. You can stay there, but no insertion!\" she insisted. \n\nHappy to oblige, I slid the head of my cock over her clit several times. I felt it brush over every vein on the top of my dick, and I could see Kathryn's mouth morph into a sort of gape-smile hybrid. Her knees started to shake, then her legs clamped tight around my dick as she screeched her orgasm into the echoic conference room. \n\nHer arms were shaking as she brought her hands back to her ass. Peeling it apart, she again started giving direction.\n\n\"That was fun, but it's time for the main attraction,\" she said. \"Get to it before I have second thoughts. This is already by far the sluttiest I've ever felt.\"\n\nMy newly-lubricated cock felt more prepared this time. I again slid into Kathryn's ass, and this time she seemed to take it much better. I easily got the first three inches in before letting it rest a moment. Firmly inside of her, I moved her hands back towards her head, then grabbed her butt with my own. Fuck, it felt incredible.\n\nI moved my hands up to her waist, and started pulling her back as I rocked forward. \n\n\"Eeeee!!\" Kathryn emitted as two more inches disappeared inside of her. \n\n\"You OK?\" I asked.\n\n\"So far. I can take more, I think.\"\n\n\"Only a couple inches to go,\" I told her. \"I have to tell you how incredible you look like this. Lying naked on the conference table, your cheeks spread and ass impaled by my cock. Give me a few seconds so I can commit this view to my permanent memory.\"\n\nShe giggled. \"I'm glad you're having fun. My view is of the tabletop, so hurry up!\"\n\nShe managed to find ways to be adorable even with a cock in her ass. I gave her a courtesy spank before resuming my efforts. Needing more leverage, I moved my right hand up and grabbed her shoulder. With my left hand on her hip, I was able to bury the last of it inside her anal chute. \n\n\"Good girl,\" I said, straightening my back and patting her gently on her right butt cheek. \"How do you feel?\"\n\n\"How do I feel? Stuffed. Slutty. Incredibly naughty...exactly what I was hoping to feel. How different does it feel from a pussy?\"\n\n\"Honestly, not that different physically. But the taboo nature of it, combined with the taboo nature of each of us cheating, and being at work, has me harder than ever. Are you ready for me to start moving a bit?\"\n\n\"Go for it.\"\n\nI pulled back, leaving about half inside her, then pushed back in to the hilt. It went flawlessly.\n\n\"Yes,\" Kathryn whispered.\n\nI did it again, and again she mewed a positive reaction. Next time, I pulled out a bit further leaving just the head in. As I pushed forward, I felt a vacuum effect, sucking me deeper. I nearly lost my balance.\n\n\"Fuck, this is incredible,\" I panted, straining not to cum early. \n\n\"You can go faster. I can take it. I want it.\" \n\nEasier said than done. The tightness and suction made it a bit challenging to go too quickly. As I pulled out again, I watched as her sphincter clung tight to me, extending outward just a few millimeters. I shoved in harder, trying to loosen her up a bit. \n\n\"Yes, like that...harder...\" she expressed through shortened breath. \n\nI began working up a rhythm, rocking into her about once per second, reveling in the sensation of her pulsing anal passage clenching me tight. I put my right hand between her shoulder blades and pushed her flat against the table, giving me some additional support as I thrust harder and faster.\n\n\"Uhh...oooh...uh...yes...,\" she squeaked, her voice getting higher and higher. As she approached another orgasm. \"Fuck yes!\"\n\nI rotated my hips a bit with my next three thrusts, trying to reach depths and angles previously unexplored. That seemed to do the trick. Kathryn went up on her toes and let out a long, almost painfully loud \"aaaaahhhhh!\" Again, her knees shook as she climaxed on my cock, nearly jarring me loose. Her fists gripped the opposite ledge of the table strenuously. After a moment suspended above the table, she collapsed onto it once more.\n\n\"I guess I don't need to ask whether you're enjoying yourself,\" I said, still idly moving in and out of her quickly relaxing asshole. \n\n\"Oh my god. It's so good. How did you not cum?\"\n\n\"I'm close, though this reprieve is giving me a bit more stamina. Are you ready to keep going?\"\n\n\"I think I have at least one more cum in me,\" she said. \n\n\"Good. Let's shift positions a bit.\"\n\nI grabbed her shoulder and waist again, lifting her off the table and pulling her back against my chest. With her ass still wedged on my cock, I wrapped my arms around her, tenderly caressing her breasts over her bra. She turned her head to me, and we kissed aggressively, her tongue lapping at mine with urgency. I slowly thrust in and out as best I could in this position.\n\nThen, holding her tight to me, I sat back in the chair, pulling her into my lap. \n\n\"Spread your legs on either side of me, Kathryn. Hands on the armrests.\"\n\nKathryn complied immediately. God, I wish I were able to see her from the other side of the room. Her sopping wet cunt spread lewdly as she eased her asshole to the base of my cock. I again grasped for her breasts, finding her nipples through the thin lacy material.\n\n\"Bounce, dirty girl. Ride my cock like it's going to be the last time.\"\n\nKathryn was able to do this with relative ease. Her arms were certainly fit enough to lift her diminutive form up and down for a while. After about twenty reps, she seemed to grow fatigued, and instead held her arms straight and pumped her ass up and down. This motion, focused on just the head of my dick, seemed to stimulate me more effectively. That, and the mental image of her spread pussy reacting to this position.",
        "\"Almost there, dirty girl. Let's finish together. I want you to touch yourself for me.\"\n\nAt that, I moved my hands from her breasts, placing one on her mid-back and the other on her waist. I was able to help move her up and down, freeing her left hand to finger herself. \n\n\"Oh my god. Oh my god!\" she shrieked. In that moment, she lost all control. Her orgasm seemed to impact her entire body. Trembles rose from her feet to her shoulders. She lost control of her arms, which caused her to sink all the way down on me one last time. I felt something wet cascading down my pants, and coupled with the sound of dripping water, I realized she must have squirted on the conference room floor.\n\nIt was more than I could handle. Her sphincter clamped down on my the base of my erection and sucked every ounce of cum from me. It was the hardest, most explosive cum I've ever had, and it felt like it went on forever. It pumped deep into Kathryn's body, to the point that I couldn't even feel it sloshing around my cock.\n\nKathryn collapsed back against me, her lithe, prone form giving in completely to the moment. I wrapped my arms snuggly around her midsection, trying to capture everything I could before the moment ended. Her tight body, her smooth, flawless skin, her pert b-cups, her cushy butt gyrating subtly on my lap. I never wanted this moment to end.\n\n\"Was that your first time squirting?\" I asked.\n\n\"Yes. First time even coming close, I think. It was incredible. Like pleasure wracked me so completely that I lost control of everything.\"\n\n\"I'm kind of hoping there's a permanent, barely-detectable stain on the carpet forever. Our dirty little secret.\" \n\nKathryn laughed, and continued to use me as a body pillow as she slowly stroked her clit. I don't know how long we remained like that, but Kathryn was the first to move. She placed her hand on mine and said, \"It's time to go.\"\n\nI let my arms fall to my sides, and she gingerly rose to her feet. My softening dick was still semi-erect as she dislodged, but we both knew I didn't have another cum in me tonight. I wasn't sure if I had the strength to stand.\n\n\"A deal's a deal, right? This doesn't leave the room?\" It was like she said it just to break the silence. We both trusted each other not to say anything. \n\n\"Of course. Thank you, Kathryn. Thank you for choosing me and trusting me.\"\n\nShe picked up her clothes and tossed them on the table, picking her polo shirt to reapply first. Even the sight of her dressing was incredibly erotic. Her thigh gap glistened. Her midsection had the contour that only comes with yoga. I wanted to run my fingernails over every inch of her. What could I do to keep the memory of this night from fading?\n\nI had a spontaneous idea. As she reached for her thong, I snatched it and put it in my pocket.\n\n\"What! No, I need those back!\" she giggled playfully but seriously.\n\n\"I don't think so. Collateral. Have to make sure you never talk about this.\"\n\n\"No, you know I'm not going to mention this to anyone. I have just as much to lose as you!\" She lunged for me, but I caught her wrists. We were both laughing, indicating that there were no hard feelings, but she was going hard for my pocket.\n\nSuddenly, she shot up and looked nervous.\n\n\"What happened?\" I asked.\n\n\"I seriously need those. I...my...\"\n\n\"What? What's going on?\"\n\n\"Your...your cum feels like it's about to leak out of my ass! I'm clenching tight but I'm not sure I can hold it.\"\n\n\"Well, you wouldn't want to stain your thong. I better hold onto it.\"\n\n\"No, I'm hoping the thong will help wedge everything in place.\"\n\n\"Haha, I don't think it works like that. Here, let me help you.\"\n\nI brought her pants to her feet and let her step into them one foot at a time. Once inside, I drew the waistline of her pants slowly upwards, making a show of inhaling deeply as my face passed her pussy.\n\n\"Oh my god,\" she blushed. \"Getting your money's worth before we leave this room and make like none of this ever happened?\"\n\n\"Can you blame me? I wouldn't mind being trapped in here with you forever.\"\n\n\"That's sweet,\" she said. \"Maybe in another life.\"\n\nShe slipped back into her shoes, I zipped up, and we left the conference room together. \n\nOn the elevator, there was an awkward silence. We were being lowered to the garage, and towards the first steps of living life as cheaters. Even if we were confident that our secret was safe, we couldn't lie to ourselves. In a moment of tenderness, I reached for her hand.\n\nAs if she was waiting for any sign at all, she immediately turned into me and we kissed passionately again. She cupped my face with both hands, holding me sweetly before her eyes popped open again.\n\n\"Fuck!\" she exclaimed. \"I forgot to keep clenching my ass.\"\n\nShe turned her butt towards me and looked over her shoulder at it. A small stain was visible. I started laughing.\n\n\"It's not funny! If I had my underwear it would have caught that.\"\n\n\"Well, you're resourceful. I'm sure you'll figure out a way to keep it hidden.\"\n\nWe both giggled again, a good sign that she did not resent anything that had happened.\n\n\"You know, Kathryn. I know we said this is a one-time thing, but I'm quite confident I could keep this to myself no matter how many times it happened.\"\n\nKathryn blushed and nodded. \"I'll keep that in mind,\" she said.\n\nWhen the elevator opened, she went left, and I went right. One last time, I turned to admire watching her leave, this time with a small cum stain serving as a bullseye on my target. Kathryn looked back and caught me staring.\n\n\"Go home!\" she teased. \"I'll see you Monday.\""
    ],
    "authorname": "abob1",
    "tags": [
        "affair",
        "anal",
        "blow job",
        "cheat",
        "cheating",
        "cmnf",
        "deep throat",
        "office",
        "tryst"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/unexpected-anal-office-tryst"
}