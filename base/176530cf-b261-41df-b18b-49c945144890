{
    "title": "The Pulse Pt. 07",
    "pages": [
        "Jennifer Sawyer was enjoying life.\n\nHarry Youle was irritating at times but he worshipped her. She only had to snap her fingers and she was getting gifts, anything that she wanted. His father had even found a work experience position for her. Everything felt back to normal after the weirdness with Jake. She was excited.\n\nShe had got a lot of attention from girl friends who heard the rumours about Jake. They all wanted to know how she'd got free of him, what she'd done, and some unsubtle questions about how far he'd forced her to go. She was evasive, playing up a slight loss of memory, presumably caused by the drugs. It allowed her friends to add their own spin to it which made the rumours that much more difficult to track and easier for her to deny if they ever came back to her.\n\nShe lapped up the attention.\n\nEven her mother had somehow heard the rumours and had asked her if they were true! How satisfying to see the plan to smear Jake working so thoroughly. Everyone remotely associated with him was reevaluating how they thought of Jake. It was delicious. Even if Harry kept trying to take credit for it. She even heard that Jake had lost his job. That'd teach the bastard for making her feel something for him.\n\nOccasionally, a very small part of her thought they'd gone a bit too far. That the rumours had got out of hand. That what she'd done was a massive overreaction. But then her spiteful anger rallied her and she reminded herself that anyone that could do that to her deserved everything that he got.\n\nShe went back to admiring her reflection and wondering what to ask Harry for next.\n\nHarry was also enjoying life.\n\nHe was almost fully recovered now. He'd got to third base with Jennifer and he was totally smitten with her. She was everything that he deserved - hot, intelligent, sexy. She'd give it up soon for some Youle loving and he couldn't wait. He had it all planned out. He'd get her drunk on champagne and then convince her to come up to his room where he'd decorate the place with a massive range of condoms for her to choose from. And then he'd fuck the shit out of the teasing minx.\n\nEvery time he thought about his plan he'd get rock hard and have to disappear to the bathroom and rub one out.\n\nThe only thing that bothered him were the nightmares. He still woke up every night in a sweaty funk of fear. He'd actually cried out one night and his mother had come through to check on him. He laughed it off as being a rugby related dream where he was being picked for England. He was pretty sure that he'd got away with it.\n\nHe lay back on his bed luxuriating in how the rumours had taken off.\n\nThey'd taken it slowly, asking people if they'd heard about the McConnell party. Dropping the hint that Jake had been bragging about his conquests there and that he'd drugged and raped six girls including Chrissie. He had enjoyed coming up with the rape scenarios. How the girls had been abused. He made a point of telling Jenny to make sure that the rumour was that Chrissie had been sodomised. Bitch.\n\nHe catalogued it all in an old exercise book, making sure which story had gone to which girl. In each one he'd then come up with more and more elaborate detail on what he'd do to each of those fine bitches if he had the chance.\n\nHe really wished that he had that date rape drug and not Jake. He started to stroke himself just thinking about it.\n\n=================\n\nWhen she heard the rumours, of course from Ami, Christine had been furious.\n\nShe'd been riding the high of rubbing Fiona's nose in her Jake fuck victory. But her little Jake fantasy with her friends had been a complete washout and she'd even woken up with her face in Ami's ugly little cunt. Eww.\n\nHow had that happened? She still couldn't understand it. She remembered going upstairs but she must have been drunker than she thought. And waking up...like that...had been gross. Seeing Ami's ugly, hopeful little face looking at her was horrific. Nearly as bad as the smell of stale alcohol and pussy.\n\nIt had taken full on bitch mode to get everyone to keep that to themselves.\n\nAnd then there were rumours of rape? And drugs? Her little scheme to rub Fiona Davis's bitch face in it had been fun at the time but being remotely associated with Jake now was toxic. She spent the whole week denying anything had happened and that it had been a mistake that Jake was even there.\n\nUsually she would have been crowing about stealing Jake from Fiona and then dumping him but this whole thing was out of control. It was getting to the point that her parents were asking questions because someone at the golf club had told her Dad that people had been date raped at the party.\n\nWhat the actual fuck?!\n\nShe was usually the one starting this stuff. Dealing with the fallout was work. She was usually the one setting the agenda and this was nothing but a pain in the arse. And not the sort that she dreamed about.\n\nShe stopped herself there.\n\nShe had planned to use Jake's body, ditch him and then use him to fuck over that bitch Fiona. Simple. But down by the boathouse he had taken her deeper into her own desires than she had ever thought that she wanted to go. It was like he'd looked into some of her deepest, darkest fantasies and taken her there.\n\nAnd how she'd loved it.\n\nJust thinking about him standing behind her with that wooden oar, his ripped body and hard cock at attention, in total control and about to fuck her...and her absolutely powerless to do anything about it.\n\nFuuuuuuucccckkkkkk!\n\nAll it took were a couple of fingers in the right place and she was gone. Christine couldn't believe that she was acting this way but there was no denying how hot it made her. She desperately wanted a repeat performance, maybe one that involved lube and her virgin arsehole. Just thinking about it sent shivers through her.\n\nBut of course Jake was toxic. With the current rumours flying round she couldn't very well call Jake. She huffed, unused to being told that she couldn't do anything. She looked across to her mobile phone, the latest Nokia 6310. She scrolled through fantasising about calling Jake.\n\nDammit she couldn't.\n\nBut Ami could.\n\nShe had given Ami her old brick of a phone, the flick out thing that they'd used on the Matrix. She picked up her phone and dialled. As ever Ami picked up on the second ring regardless of whether it was day or night. It was pathetic really.\n\n\"Ami sweetheart.\"\n\n\"Chrissie, great to hear from you.\"\n\nAmi's voice was faintly guarded. Chrissie never called her sweetheart unless she was after something.\n\n\"Darling, I need a small favour. You know those ghastly rumours about Jake at my party? Well it's left some unfinished business. I can't call him and confirm any rumours but maybe you could invite him over on Saturday? Nothing serious, just a chance to...spend some more time together.\"\n\n\"Of course I can, Chrissie. On Saturday? Doesn't he work on Saturdays?\"\n\n\"Ami! You were the one that told me he'd been fired. He'll be pleased to have something to do.\" Someone to do anyway.\n\n\"Oh, that's right. I'll call him in a bit and text you. Shall I come over too..?\"\n\nAmi felt so pathetic asking but she couldn't help herself.\n\n\"No, I don't think so. But could you organise some lunch? I'm sure that we'll work up an appetite.\"\n\nThere was a slight delay before Ami answered.\n\n\"OK, Chrissie.\"\n\n\"Thanks Ami, you're a love. Later.\"\n\nThe line went dead.\n\nAmi hated herself. She knew what Chrissie was. She knew what she was like. And she still couldn't help herself. Chrissie had protected her at school when she realised just how good she was at digging out gossip. She was connected through various study groups to a wide range of people. Chrissie's popularity and Ami's ability to ferret out gossip were a brilliant combination. And Ami discovered herself fantasising about sex with Chrissie. About her boyish chest and her shapely rear.\n\nWhen she woke up like that, her nose sniffing the nectar of Chrissie's pussy she thought her dream had come true. How incredibly degrading then to go from that high, from her dream, to seeing the revulsion on Chrissie's face as they both realised the situation. That had been a turning point for her as she realised that nothing would ever happen between them.\n\nShe'd heard about the Jake rumours early on and rapidly figured out the source. She was still trying to figure out why Jennifer and Harry would join forces like that. They were a bad match. He was an oik and she was a princess. She grudgingly admitted that they were at least socially compatible if nothing else. Though based on what Chrissie said he was as interested in boys as girls.\n\nIt was even more of a surprise when she heard rumours coming from other sources. Shocked mothers, enraged fathers. Those all seemed to go back to a meeting at an exclusive golf club but she'd been frustrated in finding out who was there.\n\nHer phone pinged with a text message.\n\n\"What did he say?\"\n\nShe sighed and went through her phone and found Jake's number.\n\n=================\n\nI walked out of the police station exhausted. I stopped at the bottom of the steps and took a deep breath.\n\nThe questioning had been relentless, picking away at my story, looking for any hole. It was nerve wracking but my desperation to not be discovered as different focused my mind and I maintained the story that I'd told Fiona and the family. I was simply the victim of slanderous accusations and there was no validity to any of it.\n\nIt seemed that they'd called on the various witnesses that I'd suggested and their testimony made all the difference. It appeared that Dr Maddren's assurance that I didn't have \"the talent, the intelligence or the interest\" to have created a new wonder drug went a long way to rebutting the rumours.\n\nBy the end of the interrogation the police were almost apologetic. They had to take rape allegations seriously they said, particularly if drugs were involved. Of course they believed me about Fiona not being abducted but had she been drugged? Did she know what she was doing? Her parents seemed to be very certain and there were other accusations of rape at a party. You do understand sir...\n\nAs the details that they had been told, and were relying on, were stripped away it became very obvious that no one had been raped, no one had been abducted and that I might actually have a case to prosecute myself if the source of these rumours could be found.\n\nI looked around the car park relishing being able to breathe in fresh air, and saw Dad's old Vauxhall pull up. Almost before it had stopped Fiona was out of the door and hurtling into my arms. She felt wonderful though she looked tired and stressed as I drank in the sight of her.\n\n\"They let me go hours ago. I've been so worried.\"\n\n\"I'm sorry that you had to go through that, Fiona but it's all done with now.\"\n\nShe hugged me again and then pulled me towards the waiting car.\n\n\"Come on we're getting a kebab on the way back.\"\n\n\"A kebab?\"\n\n\"Where else do you think is open at this time of night? And my favourite one is on the way.\"\n\n\"You have a favourite kebab place?\"\n\n\"You have a lot to learn about me Jake.\"\n\n\"I'm looking forward to finding out.\"\n\nWe drove back via the kebab van. There was a mountain of meat in a pita bread, coated in hot chili sauce and a mound of salad on top. It was utterly delicious. Even sober.\n\nMum welcomed us home and we all sat down with a glass of something to talk through what had happened while I was being questioned.\n\n\"So what happened after we left Dad?\"\n\nA broad smile spread across his face.\n\n\"You won't believe it!\"\n\n\"What?!\"\n\n\"As you were being driven away that...well, I know he's your father Fiona, but that bas...Mr Davis, was shouting some of the vilest filth you ever heard at your mother and me. I was going back in for my old cricket bat when out of his front door came Old Bill. He marched right up to that...to Mr Davis and told him that if he said another word out of line then he would use his pliers to pull off both of his testicles before feeding them to him through his soon to be broken jaw.\"\n\n\"Old Bill?!\"\n\n\"Yes! That bast...Mr Davis, sorry Fiona but you should have heard the things that he was saying... Mr Davis practically wet himself and ran off with Old Bill threatening to sue him for defamation of character.\"\n\n\"Oh my god, I'm so ashamed,\" Fiona looked dejected and distanced herself from us slightly.\n\nI got up and knelt between her legs, lifting her chin up to look me in the eye.\n\n\"You have nothing to be ashamed of. Your father is doing what any Dad would do - anything he possibly could to protect his daughter. He is acting on the wrong information and we know that but I cannot blame him for his actions.\"\n\nShe nodded and gave me a small kiss.\n\n\"I'm so sorry Mrs Conway.\"\n\n\"Stop it, Fiona. It's water under the bridge and he'll come round once everyone knows the truth.\"\n\nI sat next to Fiona and held her hand. She gave my hand a squeeze and we turned back to Dad expectantly.\n\n\"Anyway, it turns out that Old Bill hadn't heard the rumours. He was so pissed off that he looked like he wanted to go and use those pliers on someone for real. You know he was always a bit vague about what he used to do?\"\n\nI nodded. Bill had never got into any of that, instead quite happily diverting the conversation onto other subjects.\n\n\"Well he used to be a high court judge.\"\n\n\"What?\"\n\n\"Yup, the full wig and everything. And he's still connected to a bunch of people. He's been on the phone all night, Jake, pulling in favours to help find out who did this to you.\"\n\nI was speechless and really moved that people were stepping up for me.\n\n\"He told me to tell you not to worry and that he was on the case.\"\n\nI nodded and Fiona leaned into me, her small smile showing that she thought I deserved all the support that I was getting.\n\n\"We also heard back from Joe Lathan that he's traced one rumour back to a golf club. He's not a member there but he thinks it should narrow things down.\"\n\n\"That's great news. Did you tell..?\"\n\n\"...Bill? Yes. The other phone call, well calls, were a bit more unusual. They were from a girl called Ami, 'with an i' who wanted you to call her back on a mobile phone number whatever time you got back.\"\n\n\"Ami?\"\n\n\"With an i,\" grinned Dad. \"Three times.\"\n\n\"But she's Christine's best friend. Why would she be calling?\"\n\n\"You tell us,\" said Fiona.\n\n\"Well, it sounds important. I guess I should call.\"\n\nI found the number and dialled her, bringing the cordless phone back into the sitting room so that everyone could hear. The phone rang once before she picked up.\n\n\"Jake?\"\n\n\"Ami?\"\n\n\"You're back, that's great news. Is everything alright?\"\n\n\"About as much as it can be. Is everything alright with you? Why were you calling? It sounded urgent.\"\n\n\"Christine and I were worried that you left without saying goodbye. She wanted to see if you could come over tomorrow, just the two of you, and try and figure out what to do about these rumours that are flying around. We were both devastated when we heard them. She really wants to help.\"\n\n\"I'm not sure that I'll have the time tomorrow Ami...\"\n\n\"Oh please try. Christine's parents are giving her all sorts of grief about the rumours and she really wants to help find out who started this. She's so angry that people would do this to you. She'd be ever so grateful and she asked me to say that she'd bend over backwards to help things in any way she can.\"\n\n\"Ami, why are you calling me and not her?\"\n\n\"Oh, she's out tonight and didn't want to miss the opportunity to speak to you tonight. So how about it?\"\n\nI looked towards Fiona who looked fit to explode.\n\n\"Can I call you back in a couple of minutes?\"\n\n\"Of course, Jake.\"\n\nI hung up and looked back at the other three.\n\n\"What do you think?\"\n\n\"I think that bitch just wants to get her claws into you. 'Bend over backwards Jake'! I'll bet she will, the little fucking cow.\"\n\nShe looked at the shocked faces of my parents.\n\n\"I'm sorry but you don't know this evil bitch. She has slept with people just to break up another couple that might be more popular than her. You know she invited Jake to that party specifically to ruin our relationship because I was one of the few that stood up to her in the past. She uses her parent's money to pay for 'friends'. I doubt that she has a single redeeming feature. She is scum.\"\n\nWe were all quiet as we considered what she'd said.\n\n\"I want to go.\"\n\n\"You what?!?\" came the unanimous chorus.\n\n\"I want to go and put her in her place. Look what she tried to do to Fiona and me. Look how she's using people like Ami just to get her own way. I've got an idea that might get her off our backs but I'm going to need some help.\"\n\n\"This doesn't make sense Jake. We've already won this fight. We're together.\"\n\n\"We have. But what about others? And what about when she starts throwing her fathers business weight around at just the wrong time. No, I want an ace in the hole, and I know what will work.\"\n\n\"You're not going to tell us are you Jake?\" said Dad.\n\n\"No. It's not going to get back to us, you really don't have to worry. But I owe Christine for the way she manipulated me and for what she could have done to us if Fiona wasn't such an amazing person. It could have ruined our chance of happiness. And for no good reason other than because she could. Well enough of that shit.\"\n\nMy parents looked at each other and seemed unsure what to say. They'd never seen this side of me. Nor had I if I was being honest. My only thoughts were of Fiona and protecting her and I began to understand a little of what Mr Davis must have been feeling.\n\nI picked up the phone and called Ami.\n\n\"Hi Ami. Look, tell her I can make two o'clock. I've got other stuff going on the rest of the day though. Just the three of us, yeah? OK. See you tomorrow.\"\n\nMy parents looked at me uneasily.\n\n\"Mum, Dad, this isn't going to be a problem. I'll need Jamie's help too and Fiona will be there. I'm going to discuss the idea with Fiona, sleep on it and then make a final decision in the morning. I'm not going to put our futures at risk but I'm not leaving that female with any hold on us whatsoever. And if I can stop her from doing it to anyone else then even better.\"\n\nI turned back to Fiona whose eyes were shining with pride.\n\n\"Fiona, you still haven't told me what happened to you at the station.\"\n\nShe sighed, leaning into me for support.\n\n\"It was fairly straightforward. I reiterated what had happened. We went through it a few times and I confirmed that I wasn't under the influence of drugs, nor was I being forced to do anything against my will. They did ask about any potential rape and I just laughed at them. I did tell them what my parents had planned. I think they may have cautioned them. They even asked me if I wanted to press any charges. Of course I didn't and they understood why I couldn't live there for another second. I hope that if we can get to the bottom of these allegations then maybe I can start to talk to mum and dad again. I...I don't know what's going to happen from here.\"\n\n\"We'll all be here to help Fiona, you know that,\" I said.\n\n\"I know but...\"\n\nI squeezed her hand, knowing how difficult this must be for her. She was having to place an enormous amount of trust in me and my family and our relationship was still very new. It must be very tough.\n\n\"Anyway, what about you? How did it go?\"\n\nI talked then through the hours of questioning and my total satisfaction as the layers of lies were e posed for what they were. They all laughed at Dr Maddren's quote and shared in my happiness when they heard that any and all charges were being dropped.\n\n\"That's enough for one night. Everyone is going to bed,\" said Mum, \"to sleep!\" she said with a smile. \"We can all do with the rest and hopefully we can digest everything that's happened and talk some more in the morning.\"",
        "We went upstairs and I was surprised that my parents were OK with me sharing the bed with Fiona. I think they knew how fragile she was at the moment and I was pleased that they had grown to like her so quickly.\n\nWe started to get ready for bed. We both took turns in the bathroom and said goodnight to my parents. I looked across at her lovely figure as she pulled her jeans down, displaying her unbelievable arse. She looked at me as she was doing it and wiggled her peach shaped cheeks at me.\n\nI had started to pull on my pyjamas but most of my brain functions left me as I watched her slowly peel her t-shirt off. She turned around to face me. Her hands reached behind her to unclip her bra and as she freed her breasts the bra slowly slid off her shoulders leaving her standing there in a pair of lacy panties.\n\n\"You won't be needing pyjamas tonight,\" she said quietly.\n\n\"We can't Fiona, not with them right next door.\"\n\nShe crawled onto the bed, breasts swaying beneath her and lay on the bed. She beckoned me to her. I dropped my pyjamas and crawled into bed and lay beside her. She turned off the bedside light and we lay facing each other.\n\nShe started to kiss me, oh so lightly, up and down my body. I shivered at her touch and just enjoyed what she was doing to me. She reached for my cock and gently stroked it before rolling a condom down it's length. She then turned away from me, pushing her panty clad rear end up against me, grinding up and down against my cock.\n\nMy hands just couldn't resist her. They stroked up and down the contours of her body, the rolling hills and valleys that I loved to touch and stroke and taste. She in turn reached back behind her, pulled her panties to one side and guided my length into her wetness. Her silk sleeve slowly engulfed me, sending the most wonderful sensations through me as we spooned together.\n\n\"Do you think you can be quiet like this?\" she whimpered, sighing as I eased further into her.\n\n\"I think so. If we take it slow. How about you? Can you stay quiet when I'm doing this?\" and I eased out and back into her slowly, all the while cupping her breast and kissing her neck.\n\n\"I don't need to be quiet. I have a pillow.\"\n\nAnd she grabbed a pillow and buried her mouth into it as I slowly made love to this incredible woman. It was the most glorious torture as I tried to stop myself from slamming into her firm buttocks harder and harder. I'd never felt so close to anyone in my life. She hooked her feet around my calves and used them as levers to push back on my penis. She began speeding things up. Her little grunts sounding far too loud to me. The occasional slap as our bodies came together was quickly muted and I moved a hand between us to cushion the sound.\n\nEventually I couldn't take any more and I rolled her onto her belly. There was a muffled, surprised moan from her as this position plunged me further inside her. I felt a small shiver inside her warmth as she reacted to the deeper penetration. I grabbed my pyjama top and placed it between us, covering her arse to try and stop the sound of our bodies slapping together. I started to stroke in and out of her faster and faster. The only sounds were my heavy breathing and the sound of her juices as my cock found its target again and again. Her muffled moans and cries were almost totally silenced by the pillow but they drove me insane with lust.\n\nI moved into a kneeling position with my knees either side of her buttocks and really let loose. The bed frame was very solid but all this activity was causing it to rock and knock. I had to slow my pace just as I wanted to increase it. It was torture. It was wonderful. I started the long deep strokes that I knew she liked and her body started to shake and a muffled yell came from the pillow below.\n\nTwo more rapid strokes was all it took for the familiar and yet heightened sensations of orgasm to rip through me. I gasped my passion in an attempt to stay quiet. I stayed there, speared inside her as we both came down from our highs. I slowly eased myself out of her warmth and lay beside her. She spooned back into me stretching like a cat.\n\n\"Mmmmm.\"\n\nWe kissed and after quickly cleaning myself up we drifted off to sleep wrapped together.\n\n=================\n\nJamie put the phone down looking slightly stunned but with a big grin on his face.\n\n\"I need to head out Mum. I'll see you later.\"\n\n\"Where are you going? Not round to Jake's?\"\n\n\"No, you've made it very clear that I'm not to go round there.\"\n\n\"Alright then. Be back before 6pm.\"\n\n\"OK.\"\n\nJamie quietly sneaked into his Dad's study and grabbed the video camera. He took a new tape along with the small tripod and then purposely made a lot of noise going out of the door.\n\nHe quickly walked down the road as if he was heading for the bus stop and then turned down the alley between houses that brought him out near the One Stop convenience store. As promised Jake was there in the car park. To his surprise so was Fiona.\n\nShe got out and smiled at him.\n\n\"Hi Jamie.\"\n\n\"Hi Fiona, great to see you.\"\n\n\"Hop in,\" she said, pulling the front seat forward so that he could get in the back. Jamie clambered in and was relieved to see his friend grinning at him from the driver's seat.\n\nAs one, we said \"I've got a cunning plan\" and burst out laughing.\n\n=================\n\nAs we drove down the long drive I motioned for the other two to duck down out of the way and hide themselves. Rather than stopping at the front door I pulled in near the garage so that there was less chance that they'd be seen.\n\nI'd dressed carefully in tight shorts and an overly tight t-shirt that had Fiona running her fingers over my chest in the most delightful way when I was getting ready. I got out of the car and walked to the front door of the huge, ugly mansion displaying a level of confidence that I didn't really feel.\n\nI needn't have worried. The door opened and Christine ran out into my arms.\n\n\"Jake! Thank you for coming.\"\n\nShe stepped back and then very deliberately looked me up and down. \"You look delicious. Good enough to eat.\"\n\n\"Why thank you. You're not looking so bad yourself?\"\n\nShe twirled, her signature daisy dukes highlighting her best asset.\n\n\"You like?\" she asked coquettishly, then she laughed, \"I remember only too well how much you like.\"\n\n\"Christine, I'm here because you said that you wanted to help me. I thought that you wanted to talk about the rumours?\"\n\n\"Oh, that Ami. She does have a way of twisting what I said. Let's go inside and...talk.\"\n\nAnd she sashayed inside, walking through to the kitchen where a mini-buffet was waiting. I sat down at one of the stools around the island.\n\n\"Drink?\"\n\n\"Just some water, thanks.\"\n\n\"Oh come on. How about a beer?\"\n\n\"I'm driving, so no thanks.\"\n\nShe shrugged and got us both a glass of water. She brought it back to the island and then stood next to me with her hip leaning into me. My cock stirred even though I knew what a bitch this girl was. My shorts weren't hiding much and her nipples started to stand out as she saw the effect that she was having on me.\n\nShe sipped water from her glass, moistening her lips with her tongue as she looked at me.\n\n\"Why don't we go upstairs and find somewhere more comfortable to...talk?\"\n\nI tried not to let my revulsion show.\n\n\"OK Christine, but I really do want to try and figure out what we can do about this.\"\n\nShe looked down at my cock again.\n\n\"Oh so do I.\"\n\nShe took my hand and started to lead me towards the stairs. As we got nearer to the front door I took my hand out of hers. She looked slightly surprised.\n\n\"I think I'll get a better view from here don't you?\"\n\nA triumphant smile covered her face and she moved to the stairs and slowly started to walk up them, her arse cheeks moving hypnotically as she went.\n\nAs soon as her back was turned I put the front door on the latch and made sure that I was visible to Jamie and Fiona through the window at the bottom of the stairs before following Christine.\n\nWe entered an enormous bedroom with a four poster bed. She put her glass down and then swung herself around one of the posts back to face me.\n\n\"Will this be comfortable enough?\"\n\n\"I think so.\"\n\n\"But however will you get me to cooperate with you?\" She had a sly expression on her face as she walked around the bed, swinging her rear from side to side. She walked to a chest of drawers and bent down straight legged, her shorts exposing the underside of her arse cheeks, and pulled open the bottom drawer.\n\nShe reached into the drawer and pulled out some velcro cuffs and several lengths of thin rope.\n\n\"You wouldn't force me now would you Jake?\"\n\n\"That depends on how bad you've been Christine.\"\n\n\"Oh, I've been very, very bad, Jake.\"\n\nShe was looking so damn smug that she was getting her own way. I walked over to her. She dropped the restraints and I pulled her tight t-shirt up over her head, leaving her arms wrapped in the material, exposing her small breasts and excited nipples.\n\nShe gasped with desire.\n\n\"Just how bad are we talking Christine?\"\n\n\"You have no idea...\"\n\nI reached out and slapped her nipples. First one and then the other. The sound of the slaps rang out through the large room as did her surprised cry.\n\n\"How bad, Christine?\"\n\nI didn't give her a chance to answer and slapped her tits again. Her nipples were rock hard and she threw her head back, her cry one of need and desire.\n\n\"What have you been doing Christine?\" I asked as I walked around her, undoing her shorts and pulling them down to the floor. Her black thong was soaking as she stood there, arms above her head, panting with lust. Memories of me thrusting into her shapely rear surfaced and my cock got even harder as I toyed with her.\n\nI violently ripped her thong off and pushed her back onto the bed.\n\n\"Have you been starting rumours Christine? Is that why you've been bad? Telling people that I've been raping girls?\"\n\nShe looked up at me from the bed, her breath coming rapidly.\n\n\"No Jake. I wouldn't do that.\"\n\nI reached for the restraints and quickly tied them to the posts of the bed.\n\n\"How can I believe you when you say you've been so bad Christine?\"\n\nI grabbed one of her wrists and dragged her into the middle of the bed before looping the velcro around it.\n\n\"You can believe me Jake. I wouldn't hurt you.\"\n\nI attached the other wrist. She was facing down on the bed with her arse exposed. She looked over her shoulder filled with lust, the smell of her pussy redolent in the air.\n\n\"Is that so?\"\n\nAnd I clamped on the other two restraints to her ankles leaving her spread eagled on the bed.\n\nSlapSlapSlap\n\nHer arse cheeks had red imprints from my hand.\n\n\"Then why would you have sex with me just to get at Fiona?\" My tone of voice changed completely. No more flirting. Deadly serious.\n\nShe looked back uncertain at my change of tone.\n\nI walked over to the drawer to see what else was in there. A few things caught my eye but I pulled out a leather paddle. Hearing a noise behind me, I turned to welcome Jamie and Fiona as they came into the room carrying the video camera and tripod.\n\n\"What the fuck are you doing here? You bitch! Get out of my house, you and that loser fuck!\" shrieked Christine.\n\n\"I don't think you're in any position to be making demands, you evil slut.\"\n\nFiona walked right up to the bed until she was face to face with Christine.\n\n\"We're making sure that you never hurt anyone again you heartless bitch.\"\n\nChristine spat in her face. Fiona recoiled from her in disgust, wiping the saliva from her face. And then she started to laugh.\n\n\"If you ever needed any proof of what an evil bitch she is, this is it. She doesn't have a single redeeming quality.\"\n\nChristine erupted, thrashing against the restraints, screaming unintelligible demands and abuse. But the restraints were well tied. She exhausted herself railing against us all, threatening us with every possible vengeance she could think of.\n\nFiona handed me a balaclava and some black clothes. By the time I pulled them on Jamie had the video camera set up with the new tape in place. He gave me the thumbs up.\n\nI picked up the leather paddle and walked towards the bed making sure that Christine was in shot. On seeing the camera she sobbed and kept her face turned into the mattress. I grabbed her hair and pulled her head around so that it was obvious who she was.\n\nI then climbed onto the bed beside her and raised the paddle...and heard a gasp from behind me. Whirling round I moved to the only potential hiding place in the room, the floor to ceiling curtains, and pulled them back.\n\nAmi was standing there looking petrified.\n\n\"What the hell are you doing here?\" I asked.\n\n\"I'm sorry, I'm sorry...I had no idea.\"\n\nPulse. Blue power blossomed around her.\n\n\"What are you doing here Ami?\"\n\n\"I needed to know what was going on. I had to know what she was going to tell you. I had to know whether she was going to lie to you or whether she just wanted to fuck you. I had to know!\"\n\n\"Why Ami?\"\n\nShe shrugged helplessly.\n\n\"It's what I do. It's how I'm useful to people. I know everything. I know everyone. I'm just little Ami 'with an i' and everyone dismisses me. I might as well be invisible. And...and...you know the other why...\"\n\nShe looked embarrassed at the last. Her lust for Christine wasn't well known but it was on obvious display here as she was unable to take her eyes off Christine's nubile body.\n\nSeeing Ami there, Christine had one last hope and began pleading.\n\n\"Call the police Ami! Help me! I'll do anything, just help me. These people are going to kill me!\"\n\nI laughed at Christine's panic-stricken outburst.\n\nPulse.\n\n\"Shut up slut. We'll get to you.\"\n\nChristine's mouth clapped shut and she looked at us with a mixture of fear and desperation.\n\nI turned back to Ami.\n\n\"Ami? Will you help us?\" I asked mainly for everyone else's benefit. I knew that she had no real option.\n\nShe nodded, unable not to.\n\n\"What do you know about the rumours?\"\n\n\"Harry and Jennifer started them.\"\n\n\"I fucking knew it!\"\n\n\"I heard the rumours from three different people but it was all too transparent. They'd tried to spread the rumours using slightly different stories but none of it could have come from anyone at the party we had here. The people were wrong, the food was wrong and once you eliminate people that weren't invited and cross-referenced that with people that had a grudge against you it was pretty straightforward. I was surprised about Jennifer though. This isn't really her style.\"\n\nIt was like a massive knot had been loosened inside me. I finally had confirmation. I'd foolishly dismissed Youle. Add his cunning to Jennifer's natural intelligence and they could definitely have come up with this. And they both had the contacts to get the rumours out there too.\n\nI looked across to Jamie and Fiona. They were equally relieved.\n\n\"Do you want to stay Ami?\"\n\n\"You mean you're going to carry on with...whatever you were doing?\"\n\n\"Yes. We need this as leverage against her. She's destroyed people's chances of happiness and I want to make sure she never thinks that she can get away with it again.\"\n\nShe licked her lips, looking at Christine's pussy and arse and just nodded.\n\n\"Noooooooo! You can't. Help me Ami! Call the police.\"\n\nI whirled around.\n\n\"I said to be quiet, slut!\" and I brought the paddle down hard across her arse cheeks.\n\n\"Aaarrrgghhh!\"\n\nShe looked like a totally different woman from the flirty, confident girl that had welcomed me into her house. I nodded to Jamie and he started recording again.\n\nI moved forward and stroked the paddle over her raised arse. I started teasing up and down her body. Stroking it around her lower lips. Using light slaps on the inside of her thighs and then teasing around her arse again. After a few minutes of this Christine's hips were gyrating as she tried to get closer to the paddle. I continued to stroke it all over her arse. Despite the situation I could feel how much she wanted this.\n\nI withdrew from the view of the camera. Christine started making little mewling noises.\n\nI went back to the drawer and took out a heavy butt plug with an unusual pad at the base and some lube and moved back into view. Ami had unconsciously started to tease her nipples through her clothes.\n\nI poured the cold lube onto Christine's rosebud and she bucked. I coated the butt plug and then slowly forced it into her arsehole. Christine screamed at the pleasure/pain. It took a couple of minutes of back and forth before the butt plug was properly seated in her arse. The strange pad at the base stood just proud of her cheeks.\n\n\"Uuuunnngghhhhh.\"\n\nWith no more ceremony I slapped the leather paddle across her cheeks and across the back of the butt plug.\n\n\"Aaaaaaaaaarrrrrrrrrrggggggggggghhhhhhhhhhhhh!!!\"\n\nThe shock of the pain was compounded by the electric shock in her arse as the butt plug activated with a jolt when I made contact with the pad.\n\nSlapSlapSlap\n\n\"Ohmygodohmygodohmygod.\"\n\nSlapSlapSlap\n\n\"Nnnnnnggggggggghhhhh\"\n\nAmi and Fiona both watched transfixed as Christine writhed as waves of pleasure/pain swept over her. Her arse was red and the butt plug took her to new heights. She tried to force her mons into the mattress searching for any way to force her clit into the bed.\n\nI beckoned to Ami and handed her the paddle.\n\n\"What do you think she deserves?\"\n\nAn evil grin came over her face as she looked down at the helpless girl before her. Christine looked back in horror knowing that Ami was the one in charge.\n\n\"Noooo! You can't! After everything I've done for you. I don't want this!\"\n\nAmi's expression darkened. She was almost spitting with rage, she was so angry.\n\n\"After everything you've done? You deserve all this and more. You're a slut with no morals. You're the most selfish bitch I've ever met. You used me. You drugged Jake's drink. You stole your parents money to buy cocaine. You used the cocaine to drug people that you wanted to sleep with. You drugged couples you wanted to break up. You used me to help hide what you were doing. You knew what I wanted and you used me. You will never use me again!\"\n\nAs she said this she climbed on to the bed and started slapping Christine with the paddle, striking at her nipples, her feet and her cunt.\n\n\"I. Am. Not. Your. Pawn. You. Fil-Thy. Bitch!\"\n\nShe screamed the last out between the punishment that she was dishing out. Christine was a shaking, crying mess and at some point had wet herself, cowering away from the smaller girl.\n\nI stepped in and grabbed the paddle before Ami did any real damage. I hadn't realised the depth of her pain.\n\nAmi fought me for it briefly before releasing the paddle and running out of the room in tears.\n\nJamie looked at me and I nodded. He stopped the video. Fiona picked up the paddle and before I could stop her she used it fiercely across Christine's battered rear end.\n\nSlapSlapSlapSlapSlap\n\n\"Ami's confession and your slutty body are all on video now. If there is the slightest hint that you might hurt me or the people I love we will share it with the whole world. I will ruin you.\"\n\nShe looked like she was about to start using the paddle again but I grabbed her hand and held her against me. Fiona hugged me hard for a moment and then said,\n\n\"Let's get out of here.\"\n\n\"What about her?\" asked Jamie.\n\n\"What about her?\" said Fiona, her utter contempt for Christine dripping from every word.\n\n\"Jake, we can't...\"\n\n\"You're a nicer person than me Jamie. If you want to untie her then I won't stop you.\"\n\nHe moved forward and undid one of the wrist cuffs and then quickly moved away. Christine lay there exhausted and sobbing.\n\n\"Let's go.\"\n\nWe quickly left the house. Ami was outside waiting for us.\n\n\"I couldn't stay in there for another minute. I'm so sorry, I don't know what came over me. I...I...\"",
        "I took her shoulders in my hands and shook her very lightly.\n\n\"Ami. She's been mentally abusing you for I don't know how long. Don't blame yourself for what you did. She deserves all that and more if you ask me.\"\n\nHer head dropped slightly as she nodded.\n\n\"I did try to warn you about her.\"\n\n\"I know you did.\"\n\n\"What will you do about Jennifer and Harry?\"\n\n\"I don't know. I need to find some sort of irrefutable proof to clear my name. The police know that none of it is true but if I don't sort it out then I'll always be 'that rapist' to some people. I can't live like that.\"\n\n\"If I hear of anything then I'll let you know.\"\n\n\"Thank you Ami. You'll always have friends amongst us.\"\n\nShe looked slightly teary and unable to speak as she nodded her thanks. She walked over to the side of the house to retrieve her bicycle which I hadn't noticed when I arrived. I realised that I was still linked to the two girls and severed the blue threads.\n\nI walked back over to the car and looked at the time.\n\n\"Shit! I have to get home. I still have to take Tina to the concert.\"\n\n=================\n\nIt was only two hours later that I pulled onto the Lathan's drive.\n\nI'd managed to get thirty minutes sleep despite Fiona's best attempts and had also showered and shaved. I'd shovelled down some food and was feeling considerably improved as I got out of the car and made my way up to the front door of a large detached home in the nicer part of town.\n\nI rang the doorbell and heard heavy footsteps on the floor behind the door and then Mr Lathan was filling the doorway.\n\n\"Jake! Good to see you. Believe it or not Tina's been ready for about an hour. I never thought I'd see the day.\"\n\nHis huge bear paw of a hand engulfed mine in a firm grip.\n\n\"Daddy! Be nice.\"\n\nTina looked really good. Her long hair was loose and lightly curled. She was dressed in a black Muse t-shirt which she'd tied into a knot at her waist. Thankfully it wasn't too fitted to her large boobs but nothing short of a bedsheet was going to disguise how stacked she was. The t-shirt had been cut from the neck to show some cleavage and there was a glimpse of a black bra showing. She was wearing a pair of fitted jeans with some ankle boots completing the look.\n\n\"Hi Jake.\"\n\n\"Hi yourself. You look great Tina.\"\n\n\"Thank you.\"\n\nShe blushed prettily. She kissed her father goodbye promising to be home before midnight and then grabbed my arm almost skipping back to the car.\n\n\"Thank you so much for doing this.\"\n\n\"What? Taking my friend to see a band that I really like?\"\n\n\"You know what I mean. I really wanted to call to make sure that you're alright but Daddy told me about Fiona and I didn't want to...you know.\"\n\n\"We're friends Tina. It's always good to talk and I'm sure that Fiona would have been fine about it. You have met her haven't you?\"\n\n\"Not really. She wasn't in the same crowd as me being that bit older. I don't think that we've ever spoken.\"\n\n\"Well if there's time tonight when we get back then I'd love for you to meet her.\"\n\nI suddenly realised that she might not like me talking about my girlfriend and that maybe the last thing that she wanted to do was actually meet her.\n\n\"Err...that's if you want to...you know...\"\n\nI felt like such a klutz.\n\n\"It's fine Jake. It would be nice to meet her. She must be very special.\"\n\nShe did look a little sad as she said it and I was mentally kicking myself the rest of the journey. I managed to change the subject and we started to discuss what the playlist might be and which song they might open with and her excitement for the concert returned.\n\nWe pulled into Reading town centre and drove into the dour concrete car park. We were surrounded by other Muse fans and while there was the odd whistle at Tina it didn't feel threatening. I made sure that I was very obviously with her, either holding her hand or with an arm loosely around her shoulders.\n\nShe was really happy and we made our way to the entrance of the Hexagon. The building is a bit of a seventies monstrosity. All concrete and very little to recommend it. But you could squeeze over a thousand people into its six sided space and you felt really close to the band.\n\nInside there was the usual array of tour t-shirts and posters and I bought one as a souvenir. We grabbed a drink, \"my treat\" she insisted and worked our way into the arena just as the support band were finishing. We were in the standing section on the floor in front of the stage and as a steady flow of people headed for the bar and the toilets after the support act we found ourselves about four rows from the front, right in the middle.\n\n\"This is fantastic! I can't wait to see Matt close up.\"\n\n\"We're right in the middle here Tina. Are you sure you're going to be alright?\"\n\n\"Of course! You're here aren't you?\"\n\nShe smiled beautifically at me and I suddenly realised that this might be her first concert. I hadn't been to many but I didn't want to be in the middle of the mosh pit with her.\n\nI started to guide her off to one side but there were too many people crammed in and it was all I could do to keep Tina from being pushed around too much as people tried to get to the front.\n\nAs more people crowded around Tina started to get more attention.\n\n\"Look at the norks on that!\"\n\n\"Show us your tits love!\"\n\n\"Get 'em out for the lads!\"\n\nIt was mostly good humoured and I managed to quieten down most of them by scowling back but there were a few drunk guys off to one side that looked like trouble.\n\nJust then the lights went down, the crowd surged and the first bars of Muscle Museum started blasting out.\n\nCan you see that I am needing\n\nBegging for so much more\n\nThan you could ever give\n\nTina was singing away in raptures and I began to relax a bit. The crowd was eating out of the palm of their hands. Midway through the set Muse launched into 'Cave', the heavy riffs and driving beat getting everyone bouncing up and down.\n\nSuddenly Tina was screaming as she felt hands grabbing at her tits and arse. It was a maelstrom of people around us but it was all coming from the drunk lads that I'd spotted earlier. I lashed down at some of the hands pawing at her. I pulled her close to me using my arms to protect her when I got caught by a glancing blow to the back of my head. Their hands were all over her again, pulling at her t-shirt and bra.\n\nPULSEPULSEPULSE\n\nIn a massive burst of blue and red I drew on multiple threads of blue and red energy. I filled up with it, almost drunk on the power that it represented. Blue threads lashed out at the people surrounding us, a web of thirty or more threads forcing people to ignore us. A wall of red power surrounded us as I held the sobbing Tina close to me. I allowed the sway of the crowd to move us within that bubble but nothing could penetrate it.\n\n\"It's OK. I've got you. They can't get you now.\"\n\nShe had her arms wrapped around my neck as she sobbed into my shoulder, the concert forgotten.\n\n\"I'm cursed. I just want to go home,\" she shouted over the crescendo of the music.\n\n\"You're not cursed. We just should have found a different place to watch the gig from. Look, it's under control now, everyone's watching the show not you. Let's stay and enjoy the show.\"\n\nShe wiped her eyes and realising that what I was saying was true she started to enjoy it again, though a little less exuberantly than before.\n\nBy the end of the concert I was swaying with the effort of maintaining so many links. The drain on my energy was huge. It was massively more than anything that I had tried to do before and I was white as a sheet.\n\nAs the lights went up and the crowd calmed down I released the red wall and slowly severed the blue links from most of the people near us. I maintained the ones to the drunk guys until we were a decent distance away from them before severing the links.\n\nSo. Tired.\n\nTina was busy chatting away about the performance and the songs that they'd played when she realised that I was barely responding. As we were walking along I stumbled and dropped the t-shirt that I'd bought.\n\nTina looked at me a bit worried before picking it up.\n\n\"Jake? Are you OK? My god you've gone really pale.\"\n\n\"I'm not feeling so good.\"\n\n\"Do you want a drink? Some water?\"\n\n\"A coke or a lemonade maybe...\" I was beginning to slur.\n\nWonderful, cold, sugary liquid found its way between my lips and I recovered enough to get back to the car but I couldn't even summon the energy to get the key in the lock.\n\n\"Here let me.\"\n\nTina helped me into the passenger seat. I felt the seatbelt fasten around me and knew no more."
    ],
    "authorname": "golasgil",
    "tags": [
        "mf",
        "spanking",
        "light bdsm",
        "spooning",
        "bdsm"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-pulse-pt-07"
}