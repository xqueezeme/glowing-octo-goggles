{
    "title": "My Swede (Sweet) Giant Ch. 02",
    "pages": [
        "And it's here! Yes, I'm finally updating my highest rated story. Hope you guys like this chapter. Thank you for all the comments and feedback. Again, if this is the only story of mine that you read, I've been tired recently so I haven't been able to swamp with stories like I enjoy. Hopefully it won't happen again... but it will. Sorry. Enjoy.\n\n*****\n\nI finally made it down the stairs after a long nap and a quick shower. Sven was asleep on the living room floor with Morgan on his chest. Her cute little fist had some of the fabric of his undershirt clenched within it. I knew he likely hadn't eaten since he didn't cook breakfast or anything at all so I decided to go ahead and start cooking.\n\nHe'd made me so damn happy I wanted to pull out all the stops. I made buttery biscuits from scratch, bacon, eggs, and even cut up some apples to stew down on the stove. I was in full southern mode. I even made his coffee just like he liked it, black with lots of honey. \n\nSven sort of found his way into the kitchen. His hair was a mess and I couldn't help but smile. \"Good morning.\"\n\n\"This... this all looks so good. \" He rubbed his eyes but his rocking was careful not to wake Morgan.\n\n\"I thought it was finally time you had a good southern breakfast.\" I grinned as I handed over a big mug to him.\n\n\"I thought I had one this morning.\" He winked and grinned before sipping. \"Underbart.\"\n\n\"Oh ha ha.\" I swatted at him. \"Go put down Morgan so we don't wake her while we have breakfast.\"\n\nHe set down his cup before carrying her off as I made plates. I set them on the table then shuddered as I was cuddled into from behind. One of his hands wrapped around my waist and the other cupped my breast. \"How do you feel?\"\n\n\"Underbart.\" I mimicked him and he just laughed. \"Food's getting cold.\"\n\n\"We should eat then.\" \n\nI moaned as I felt nibbles along my neck. \"You mean food right.\"\n\n\"Sure... food...\" \n\n\"Sven if you don't sit down after I worked so hard...\"\n\nHe laughed harder and released me but my panties were already soaked under the giant pullover I'd borrowed from his closet. I sat across from him at the small table and watched him enjoy the plate as I ate. \n\n\"This is so amazing. Did it take you forever to make?\" He had a forkful of biscuit and apple poised for his mouth.\n\n\"Not really. I used to make this all the time with my Mom and Grandma.\" I sighed and looked down in my lap. \n\n\"What happened between you and your family? I do not want to make you sad but I want to know what is wrong.\" He reached a hand for mine and I laced my fingers with his.\n\n\"I left college to be with Morgan's... sperm donor.\" I rolled my eyes. \"I was going to be a doctor. My mom and dad are doctors, their parents were doctors and nurses. I guess it was just tough love but they said if I left with him, I'd be disowned. So... they disowned me.\"\n\n\"Well what about when they found out about Morgan?\" \n\nI gripped his hand tighter and sighed. \"They blocked my number, I think. I left messages for them to call me but they never did. I think they expected me to come back to their front door on my knees.\"\n\n\"So, it is a safe bet to say they likely not know that she exists?\"\n\nI furrowed my brows at his sentence structure before understanding and nodding. \n\n\"Then we take her to see them. We will go during winter break.\"\n\n\"What? Really? And you want to come?\"\n\n\"Cordelia...\" He stood and pulled me to him. I cuddled into him and my eyes closed as I melted into his chest, feeling his kisses fall on my forehead and over each lid and across my lips. \"I wouldn't start something with you if I didn't see myself with you to the end. I see Morgan as my daughter now as well. Does that bother you?\"\n\n\"No. Not at all.\" I brushed away an errant tear and pulled him down to kiss sweetly. \"I want that. The way you treat her... I love it.\"\n\nHe cupped my face and I looked into his gorgeous blue eyes. \"How far can I push my luck?\"\n\nI grinned at him. \"Go for broke.\"\n\n\"How traditional is your family?\"\n\n\"Extremely\" I put my fingers through his messy blonde stands, doing my best to fix them a little.\n\n\"Then wouldn't a husband who is a professor impress them more than a boyfriend who is?\"He watched me carefully and I just stared at him. \n\n\"Are you serious?\"\n\n\"Extremely. Too much too soon?\"\n\n\"Not if you mean it.\" The tears rolled down my cheeks.\n\nHe used both hands to wipe them away. \"I mean, we've been living like man and wife for nearly three months now. The only thing that has been missing was sex and after this morning... And what if something happens to me? I need to know that you two will be safe.\"\n\nI smiled and pulled him in for more kisses. \"Yes.\"\n\n\"Yes?\" He scooped me up and I squealed.\n\n\"Yes!\" I gasped and covered my mouth and listened but not cries came through the baby monitor.\n\n\"I think we're just fine down here.\" He spun around with me and I laughed and hugged his neck. \n\n\"Cordelia Aas... I like it.\" I snuggled my face into his neck and nibbled. \"Cordelia and Morgan Aas.\"\n\n\"Seems fated.\" He groaned from my work and I clung to him tighter. \n\n\"It is.\" I gripped his hair and began to suck his ear lobe. \n\n\"Are you sore?\" He gripped my rear and I groaned.\n\n\"No. Set me down.\" As soon as my feet touched the floor I pulled the sweater over my head. I turned away from him, facing the counter. I leaned across it as I slowly eased down my wet underwear.\n\n\"Cordelia...\" I heard him groan before I felt him kiss from my calf, up my thigh, over my buns, and down the other side.\n\nI shuddered and wiggled across the counter. \"Dear Lord...\"\n\nHis tongue began a slow lap from my clit up, spreading the lips with every pass. I writhed and looked back to see his blonde head rising and falling behind the horizon of my ass. He lifted my knee onto the counter and I let out a shuddering moan as he blew across my exposed center before sucking it.\n\nI cried out and reached a hand back to grip his hair, burying his face further within me. He must have liked it because he gripped my hips and began to nibble and work the flesh more. I whimpered his name, racing to my climax. He sucked harder, gripping my clit in his teeth and pulling back. I came hard, muffling a scream against the counter as my hips bucked.\n\nMy hand released his hair from its shaking grip. Sven kissed up my spine and I felt his weight against my back. I moaned as his hands gripped my hips.\n\n\"Are you sure we are not pushing it?\" He kissed across my shoulder.\n\nWith quivering legs and a sensitive throb between them, I had to admit he was right. \"Ok... maybe a little.\"\n\n\"I thought so.\" He scooped me up into his arms. \"You left milk on the counter.\"\n\nI looked back and the trails where my breasts had pressed into the ceramic. \"I'm sorry, I'll sanitize it all.\"\n\n\"Why would you apologize? This house is as much yours as mine. Besides, I think you made cute designs...\" I watched him swirl a finger around the small drops, connecting them. \n\nI laughed but began to shiver and pressed tighter to him. He slipped the sweater back over my head and sat back down behind his plate as he cuddled me in his lap. His dish was nearly empty but mine was still half full.\n\n\"I should have let you finish breakfast...\" He groaned into the sweater's shoulder and kissed my ear.\n\n\"It's ok. I fine with microwaving after that.\"\n\n\"No, no. I've got it.\" He stood before setting me back down in the seat. \"Just sit and rest.\"\n\nWe finished breakfast, hands never far from one another as we talked. The conversation wafted from playful banter to serious discussion. We only paused to clean the kitchen and check on Morgan before continuing on the sofa. \n\n\"I want to adopt her after we come back. Completely.\" He wrapped a throw from the back of the sofa around my legs that were in his lap.\n\n\"I don't think it'll be a problem... John signed papers and everything.\"\n\n\"Do you still have them?\"\n\n\"Yeah, they're upstairs. \" I flexed my feet before snuggling into him more. \"I'm sorry you have to meet my family under such crazy circumstances.\"\n\n\"I do not mind. I have you two in my life now.\" He tapped my nose and I laughed. \"We should get married on Monday. I am sorry that we could not have a big wedding.\"\n\n\"That's something I've never wanted. I've always wanted a small intimate wedding. Nothing more intimate than just the bride and groom.\" I held one of his hands in mine and pressed it against my cheek.\n\nHe groaned and smiled. \"Thank you.\"\n\n\"For what?\" I turned his hand so I that I could kiss the inside of his palm.\n\n\"For saying yes.\" He leaned over to kiss me and I wrapped my arms around his neck. \n\nA cry broke through the room, coming from the baby monitor. \"Morgan's up.\" \n\n\"I'll grab her.\"\n\nI waited until he returned and slipped off the sweater to feed her. \"I'm going to change after this. Maybe we can go out to the park?\"\n\n\"I'd love that.\" \n\nWhen Morgan was done, I slipped back on the sweater and carried her upstairs. \"Come on Thor, let's get dressed.\"\n\n\"Ha. That is quite funny.\" I squeaked when he pinched my butt and whacked backwards at him. I let him shower and dress first as I got Morgan ready and played with her. When he returned in jeans and a button down shirt, I couldn't help but steal a few kisses before heading to the shower.\n\nI returned in a mauve sweater dress and black tights. Morgan was gently tugging at the rope of Sven's French braid. He turned around and held her up to see me. \"Mommy is so pretty.\" She giggled and reached for me.\n\nLaughing, I scooped her up before settling in his lap. \"She looks like you, is that weird?\"\n\n\"Not weird... just fated.\" He pushed aside my braids to kiss my shoulder and his arms wrapped snuggly around my waist.\n\nI turned to peck his lips. \"The more you say that, the more I love it.\"\n\n\"Good.\" He deepened the kiss but broke it with a grunt. I laughed when I saw his braid back in Morgan's little fists.\n\n\"You shouldn't have given it to her as a toy anyway. Now you're going to have her yanking at it all the time.\" I eased it away and tickled her nose with the loose tip. \"Come on, I need to find her stroller.\"\n\n\"I... bought another one.\" He looked off. \"I know it was presump-\"\n\n\"It was presumptuous but now I want to see it.\" I stood and pulled at his waistband as he stood, smirking playfully at him. \"Lead the way.\"\n\nI followed his massiveness downstairs, occasionally making faces at Morgan along the way. Sven made his way into the garage and hidden behind Christmas ornaments and a bin that simply read 'Lawn Care' was a box for a stroller that was ridiculously much more expensive than the one I owned. I grabbed his shirt and pulled him into a slow deep kiss. \n\n\"I like it. You made a good choice.\"\n\nHe grinned in his happy goofy way and unboxed it while I settled a hat on Morgan's brushed down curls. I kissed her chubby cheeks and tapped her nose as she laughed and I heard Sven preparing the stroller. When I didn't hear any more noise, I turned around to see Sven putting it in the trunk of his SUV. \n\n\"We need to move over her car seat unless you bought another one.\" I laughed hard when his head dropped bashfully.\n\n\"It levels itself for highest safety...\"\n\n\"Install it, strap her in, and let's go. We'll get something to eat too.\" I chuckled as I watched him. The tech was surprisingly easy to install and I nodded in approval. \"Daddy chose well again, huh Morgan?\"\n\nThat just set him off. He was beaming like all of Sweden's sunshine radiated from him alone. I couldn't help but be drawn in. I pressed to him and kissed him slow and sweet, wrapping my arms around his waist. \n\n\"We'll never get to the park if you keep kissing me.\" He put his forehead to mine and I smiled.\n\n\"Quit doing things to get kissed. \" I pecked him one last time before walking to slip into the passenger seat. \n\nHe opened the garage and we headed for the park. The autumn leaves were falling in abundance in the neighborhood. A few months ago, I would have never believed that we would be here. I turned to look at Sven. He was a vision of happiness. It suited him.\n\n\"Cordelia?\"\n\n\"Hmm?\"\n\n\"I am a man that jumps six steps if he can take 5. I do not want to put you in positions that you do not like.\" He traced his fingers over the back of my hand and I smiled, gripping his hand.\n\n\"Sven... I need you to jump. As long as you're with me, I want the jump. As long as we're facing the right direction, I'll jump with you. Ok?\"\n\n\"Ok.\" He chuckled and I held his hand for the rest of the ride.\n\nThe park was busy as usual and walking around with Sven pushing the stroller and my arm locked with his was a treat in itself. I had to wonder when I gave up on having something like this. Why did it feel so wonderful as if I was sure it would never happen?\n\nI put my head on his shoulder as we continued traveling the paved paths through the gold and red tree lines. His cologne was intoxicating and I couldn't help burying my nose in his shoulder. I didn't have to look up to know that big goofy grin was plastered across his face. His joy was in every inch of him and it was as infectious as it always was. In a few days I would be this man's wife.\n\nMonday came faster than I'd expected. I sat in the courthouse in a short white dress and ankle boots. My dark red trench coat was draped over my knees and I honestly didn't feel like much of a bride. Morgan slept peacefully in her carrier sat on the chair beside me. In all my nervousness, she seemed at peace.\n\nSven hadn't made it yet. All in all, he was 10 minutes late. Usually, such a short time would be laughable. I'd never cared if someone was 10 minutes late for anything but today, it felt like a punch to the guy. My mind raced with conclusions. It was obvious that he wasn't going to come. He had to have finally realized how insane it was to take on a woman he'd only met two months ago and a child that wasn't his. He'd come to his senses.\n\nI fought back tears as I looked over at Morgan. Her long brown eyelashes settled beautifully against her tawny cheeks. Her hair was just beginning to turn into tighter curls like mine. In her perfect tranquility, she was my little bundle of hope.\n\nI jumped at the sudden sound of commotion to my far right. A man had been toppled, almost ran over by another. The other man helped him up and apologized profusely. His blonde hair was loose and covering half his face. My heart fluttered and I brushed away an errant tear as Sven said a final apology and came our way.\n\n\"I am so sorry. They said they would be finished.\" He was agitated, his accent even stronger. \n\n\"It's ok. You're here now.\" I stood then grunted softly as I was snatched into his hold. Curiosity got the better of me. \"Who would be finished?\"\n\nHe kept one arm tight around me and used the other to search his pockets. I could hear his heart fluttering against my cheek as he fished out a small black box and handed it to me. A flush ran over me and I opened it slowly. Inside were his band and mine, both gold. My band had diamonds wrapping around it and his had swirling lines.\n\n\"The engraving.\" He spoke quietly.\n\nI gingerly plucked the rings from the box and read the engravings inside. They both read 'Cordelia & Sven: \u00f6de'. I smiled and looked up at him. \"What does that word mean?\"\n\n\"It means fate or destiny.\" He watched my reaction carefully.\n\n\"They're perfect.\" I climbed him a little for a long solid kiss. \"Thank you.\"\n\n\"Anything. Anything for you, Cordelia, I will do.\" He held me tighter and looked into my eyes.\n\nI melted into the blue of his and began to cry. Once the tears started, they just couldn't stop. I just wanted to hold tight to him and never let him go. It was the realization that in such a short time I'd found someone I couldn't live without. I cried through the ceremony; I cried through the pictures; I cried the whole way home, which didn't help since I'd driven there. \n\nOnce we were both inside, I just came close to his giant frame and hugged tightly to him. I found it embarrassing but I just couldn't shut it off. He didn't complain one second. Somewhere along the tears, I cried to the point of exhaustion and knocked out against him.\n\nI woke up in my bed with one of his arms wrapped around me. Slowly, I turned to find him still awake, reading a book on his cell phone. His eyes looked to me and he smiled softly.\n\n\"Morgan?\" I asked as I looked up at him.\n\n\"Fed and asleep. How are you feeling?\"\n\n\"Like I ruined our wedding, I'm sorry.\" I buried my face against him shamefully.\n\nHe sat up and pulled me on top of him. \"You didn't ruin our wedding. I actually found it sweet. Did you know that you talk in your sleep?\"\n\nI felt myself relax but made a face at his last question. I'd never heard that. \"Do I?\"\n\n\"Today you did.\" He ran his hands up and down my arms and my body began to heat up.\n\n\"What did I say?\" I knew after all that crying I must have looked like a mess but the way he looked at me made me feel so beautiful.\n\n\"A lot of 'I love you's and a few 'thank you's. Stop thanking me, I'm the lucky one.\"\n\nI leaned in and gave him a slow sweet kiss. \"But I can still say 'I love you' as much as I want right, Professor Aas?\"\n\nHe groaned and his hands traced down my back. \"It is fine as long as I can say it back, Mrs. Aas.\"\n\nI smiled at my new name and kissed longer and deeper as I felt the zipper on my back slowly descend. His hands were so warm and I realized how much I wanted him. It was throbbing and bothersome like an old ache that I could finally ease.\n\nI pulled back from the kiss to pull off the white dress. Underneath I wore my favorite peach colored lace lingerie. His fingers hands ran over my skin before cupping my breasts.\n\nHis thumbs traced along the tops of the cups before slipping in and flipping the lace down to reveal my breasts. \"Vackra fru...\"\n\n\"What?\" I shuddered as he licked between them before nibbling the insides and underside of my breasts. \n\n\"Beautiful wife. You are my beautiful wife.\" He took a sensitive nipple into his mouth and took slow gentle sucks. A fine tremble began as I fed him my milk. My panties soaked. It was as if my whole body was poised for his enjoyment. \n\n\"Sven...\" I moaned out and played with his hair as his nose pressed against the flesh of my breast. \"Please let me ride you.\"\n\nHe looked up in dazed joy, my nipple still secure in his lips. It took a little maneuvering but soon I felt his thick wonderful cock out and against the back of my thigh. I reached down and shifted the lace crotch of my panties to the side. To remove them seemed like too much time wasted without him inside me. With our hands working together, we lined him up and I sank down onto him in a glorious squeeze of ecstasy. \n\n\"Hah... God yes.\" I moaned out as I took him in me as deep as I could manage. \n\nMy husband groaned against my skin, pulling off only to cup the back of my head for a deep kiss. I could taste my milk on his lips and like the bourbon, it tasted sweeter in his mouth. My bounces began slowly as our tongues danced.\n\nI whimpered as I worked my hips. \"I mean it.\" I whispered against his lips. \"I love you, I mean it.\"\n\n\"I- \" He mumbled off what sounded like swears as my walls suddenly fluttered along his length. His hands gripped my hips and he thrusts his up just right, releasing a cry from me. \"I mean it too. I love you so much.\"\n\nHe kissed down my neck and chest before taking the other breast into his mouth. It was a haphazard process, my bounces gave my breasts their own motion and without hands he had to catch my nipple with some skill. I let out a chuckle but it was quickly replaced but moaning and groaning as an orgasm wrestled me within its grasp.\n\nI wasn't prepared for how worked up I got just from being with him. John was my first but Sven was the only man who made me feel like this. Even before we made love, his grins alone could have me ready to break.",
        "As he suckled away, I hugged his neck. My hips pumped and bounced on his length as I rode him. I put one hand against the wall, body still weak from my last orgasm. His hands shifted from my hips to my ass. He gripped the flesh and really began to thrust up into me. I had to put both hands on the wall to keep from falling over as I cried out his name.\n\nIt all felt so good. I slapped my hand against the wall as another orgasm threatened to spill over. He released my breast and looked up at me within my bouncing cleavage. There was that grin, that joyous monstrosity. I came so hard, I blacked out.\n\nI woke up on his chest. He was fast asleep with his arms wrapped around me, his hair spread across the pillows and glowing in the moonlight. I smiled and tucked the covers around us more before drifting off myself."
    ],
    "authorname": "DarkBlush",
    "tags": [
        "black woman",
        "white man",
        "swedish man",
        "bwwm"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/my-swede-sweet-giant-ch-02"
}