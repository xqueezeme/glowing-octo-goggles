{
    "title": "The Accountant's Wife",
    "pages": [
        "Copyright Andyhm. 2017\n\nThe author asserts the moral right to be identified as the author of this work.\n\nThis is a work of fiction. The events described here are imaginary; the settings and characters are fictitious and are not intended to represent specific places or living persons. All characters engaging in sexual relationships or activities are 18 years old or older.\n\n<center>~~~~~~~~~~~~~~~~~~</center>\n\nTo my immense surprise, Blackrandl1958 invited me to join her second legends' day. A big shock to me as I've never considered that my writing was on a par with the heavyweights of this genre. I was originally going to split this into two parts as it's a long story in two halves of which only the second part can be considered to fulfil the LW brief. The invitation to submit a story as part of the 2nd legends day made me reconsider and combine the parts. It does make it a long offering, and in my considered opinion it needs the long build-up to develop the characters; consider yourself warned. Also, there's no BTB or cuckolding; it's not my style. \n\nOver the past year, I've had quite a few requests to write a follow-up to The Woodworker's Wife, one in which Marcus gets his comeuppance. I wasn't going to write one, in my mind he'd ridden off into obscurity, and I was happy to leave him there.\n\nI had a story bouncing around in my thoughts, part romance with hints of loving wives. The chance to including Marcus as the villain was the perfect addition. It's not another tale of Dave and Zoe (they only appear in a cameo role), nor is it a true sequel. But it does have Marcus as one of the villains. It is possible to read this as a standalone story, in fact, that's how I wrote it. Although it might make a bit more sense if you've read  The main part of the story is set a couple of years after the events in TWW. \n\n<center>~~~~~~~~~~~~~~~~~~~</center>\n\nThe Accountant's Wife\n\nIntroduction: Where I set the scene.\n\nI've read numerous tales on this and other erotic literature sites about wives falling for the insidious boss or coworker. Most of them seem, to begin with some version of the same statement; 'I was the last to know', 'there is an anonymous call', 'she stopped wanting sex' or the classic, 'we need to talk'. \n\nThen, there's my version, which had none of the above in it. I know I was aware of the possibility long before Rebecca accepted that it was happening. Rebecca is my wife of eight years; she's a lawyer and has been working as a partner in her family's firm at their London office. For the past half year, she's been lead counsel on a case. Her client is the relative of an old college friend of her father. \n\nShe's an attractive woman, at least I think so; she is two years younger than me at 32. She's only five-foot-four. I call her my little elven princess: short black hair and the deepest green eyes I've ever seen, small firm breasts that suit her figure. She wears glasses for reading when needed, and has the cutest little nose set above a smile. It's a smile I see even when I'm not with her. Oh, and she's American and speaks with the most wonderful Georgia peach accent. Well, that's the way she described it to me when we first met. \n\nI'm Michael James, or Mike, to my friends and I'm an accountant. Okay, I can almost hear the groans of boredom, but I'm not just any old accountant. I'm what's known as a forensic accountant. I'm one of the best in the world. I don't work for any old accountancy agency; I work for the best one in the world, my own. I'm the person the police call in to consult on the big financial crimes. Major international companies have me on speed dial. I've never needed to advertise. \n\nI'm not an imposing figure of a man. I'm thirty-four years old, but look younger, tall and wiry with a face you would forget the moment you look away. I like it that way; people underestimate me, and it makes it so much easier for me to work my magic on their records. Dressed, I'm your typical junior office worker but hidden under those grey suits are a fit and very healthy body. I'm an amateur road cyclist and love riding whenever I can; it keeps me very fit. \n\nI've found I can read people very well. Records, on their own, rarely tell the whole story, as I'd found numerous times. A person who is intelligent enough to steal money is more than capable of laying the blame on some poor patsy. \n\nMy favourite ploy is to... no, wait we need to get back to the issue at hand. My wife is being seduced, and she's completely unaware that it's happening. It sounds so cold when you say it like that, but that's what is happening. I've no intention of letting the bastard succeed, so back to my story.\n\n<center>~~~~~~~~~~~~~~~~</center>\n\nFirst act: Before. \n\nMathematics and science were my favorite academic subjects at school; I studied mathematics at university and fell in love with numbers. My tutors wanted me to take my place with them in the world of academia, but abstract numbers and calculations on their own didn't interest me. It was a chance encounter which pointed me down the path I followed. \n\nI met a woman in the lounge bar of an hotel. Sounds like the start of a bad joke or a sleazy short story, doesn't it!\n\nIf it was, then the joke was on me. She was sitting in the corner with another woman, a woman I knew very well; she was my aunt and the only reason I'd agreed to be there that evening. Karen was eight years younger than my mother, but she'd always been around when I was growing up. She'd never married, limiting herself to a series of lovers. I had always enjoyed her visits; her presence always lit up my parents' house. The woman with her, the one my aunt had insisted I meet, was about to change the direction of my life. \n\n<center>~~~~~~~~~~~~~~~~</center>\n\nI was an only child, living in a run-down country house in the depths of the Sussex countryside. My parents, Simon and Ann, were anthropologists, both professors at Sussex University. They were always travelling, or so it seemed to me. I knew that they loved me; it was just that their academic careers meant I had been left to fend for myself with a series of housekeepers and au pairs. That's where Aunt Karen had come to my rescue, swooping in and taking me under her wing. \n\nWhen I'd been almost seventeen, she had taken me with her on holiday. It was Easter, my parents were somewhere in Amazonia, and Karen took me to her lover's villa on the Italian Riviera. That was the year my true appreciation of the female body was formed. I know it's hard wired into all teenage boys, but that's just a mix of lust and hormones. \n\nMy aunt is bisexual; most of her lovers are women with the odd man thrown in for variety. Her lover was Francesca di Traglia, an Italian artist, and Francesca loved to paint women. She was an Italian beauty, slim, with long wavy black hair. At the time of our visit, she was two years younger than my aunt, 30 years old, but looked like she was in her mid-20s. \n\nKaren is an amazing woman, beautiful in an ethereal way. Over the years, she's had many female lovers, sometimes a couple concurrently, but only two of her lovers have stood the test of time. Francesca was one, and I would have to wait another four years to meet the second. \n\nI quickly got used to seeing semi-naked and, be still my beating heart, completely naked women around the villa. I think I fell in and out of love on an almost hourly basis that holiday. These idols of my heart were being posed by Francesca, or just lying around the pool. In addition to indulging my teenage hormones, Francesca opened my eyes to the beauty of symmetry within her paintings. There's an almost mathematical beauty to her paintings, and she was happy to let me watch her work. \n\nIt's also where I learned that less is more. Francesca discovered that I could draw, and she encouraged me to sketch the models staying at the villa. She studied my efforts; I would outline the scene in front of me in broad charcoal strokes, but when I tried to complete it, I'd lose the soul of the piece. I wanted accuracy; I wanted my paintings to reflect the structure, the symmetry of numbers. Francesca showed me I was wrong, that a few shaded lines on a sheet of paper could be, and were, so evocative of the sensual female form. \n\nShe once asked me to pose the model for her. I thought that I'd done a good job when I finally finished. I walked the last time around the pillow-strewn red chaise longue, and the young woman stretched across it looked perfect to my eyes. Karen and Francesca, arms around each other, watched me silently. I gestured in their direction and presented my masterpiece. \n\nGood effort, I was told, and then Francesca proceeded to give me a true master class in how to display the potential beauty within a woman's body. In ten minutes, the model and the pose were transformed, and I'd been given an insight into the hidden beauty of all women I have never forgotten. No part of the model was hidden from me as Francesca moved around touching, caressing and teasing the model until she looked like a woman whose lover had just left her sated on her bed. \n\nMy drawing of that model hangs in Francesca's bedroom. To this day, it's one of my best pieces. The lines of the various colored pastel chalks merge and shimmer into the whole vision: an innocence of beauty as seen by a boy yet to be corrupted by life. \n\nShe also infused into me a love of cycling. Francesca's passion was art, her relaxation was the wind in her hair as she hurtled along the dusty lanes on her racing bike. She lent me a bike, and we rode together most mornings. She bought me my first professional bike, and I rode that bike every day when I returned home. \n\nKaren and I returned to the villa in the autumn of the following year. I was eighteen, and it was just before I started university. Francesca's current lover and model was Prithi, a beautiful twenty-one-year-old bisexual Indian girl. I wasn't a virgin; a few fumbles after a party over the summer had taken care of that. \n\nPrithi took it upon herself to show me what a woman wants from her lover, lessons that lasted for weeks and are now eternally burnt into my psyche. I will ever be grateful to that lovely woman for the rest of my life. She taught me the one important rule: sex is a manifestation of desire, lust and love. Remove one of the three and the sex is still good but lacks the greatness it deserves. \n\nMy last evening at the villa was one I will never forget. It began with a meal for Francesca, Karen, Prithi and me on the terrace. It ended with Francesca taking me to bed. She was Italian, sensual and loved the act of love more than she loves life itself. \n\nI learned that she took very few men to her bed; I was only the fifth. I'd thought that she was a lesbian and my aunt's lover and she wasn't interested in the dark side of sex. That night I found out, to my intense satisfaction, I was wrong. Francesca took all that I'd learned from Prithi and then took me to a new level of sexual pleasure. \n\nWhen we parted, it was with the promise that we would meet again. We did, for just a handful of memorable nights, until I met the woman destined to become my wife. \n\n<center>~~~~~~~~~~~~~~~~</center>\n\n\"Ah, there you are, Michael,\" Karen said as she saw me approaching. She stood and gave me a long hug and then turned to the woman who'd been sitting beside her. \"Michael, I want you to meet Mary, she's one of my oldest and dearest friends.\"\n\nThe way she said it and the looks that they gave each other told me immediately that at some time they had been lovers. \n\nMary gave me a smile that melted my heart and told me to sit down beside her. Yes, she was beautiful, and no, I didn't have an affair with her. She was in her mid to late forties, an elegant, statuesque redhead who oozed charm. That was the first time I met the woman who was to become one of my best friends. It is a deep friendship that lasts to this day with her and her husband. It started with one of the most interesting and formative discussions of my life. \n\n\"You know my wicked aunt,\" I said as I settled down on the sofa beside her, then gave a little gasp as Karen and Mary simultaneously gave me a punch on my arms. \n\n\"Sorry, that should have been, 'so you know my gorgeous and brilliant aunt,\" I said, trying a second time. \n\n\"Much better,\" Karen cooed and gave me a kiss.\n\n\"I do,\" Mary said, \"We met at a university event ten years ago.\" The look she gave my aunt confirmed my earlier suspicion and also made me wonder if they were still lovers. \n\n\"I wanted you to meet Mary,\" my aunt said, \"I think you will be very interested in what she can offer you.\" \n\nShe ordered a round of drinks, and as we enjoyed them, she explained why I was there. \n\nMary, it turned out, was the wife of an American industrialist. He was currently a guest lecturer at my university, for the economics department. She was a financial VP at her husband David's group of companies. It was a family owned and run corporation. Their two children and the three children from David's elder brother's family were starting to take more responsibility for the running of the business, which had allowed David to accept the month long lectureship, and she had joined him.\n\n\"I know that he loves me,\" Mary said, \"but given the number of young beautiful girls here, I thought that it was prudent to keep an eye on him. Anyway, it gave me the opportunity to see Karen again.\" \n\nShe leant across, gave her a kiss and Karen responded in kind. For a few moments, they both completely forgot about me. Yes, they were most definitely still lovers. Somehow, I suspected that the opportunity to see Karen had been the prime reason for her to accompany her husband. With a start, they remembered that I was there and sat back in their seats.\n\nMary said, \"Karen has been telling me all about you, and your interest in maths and computers. She also said that you aren't interested in following an academic career.\" \n\nI nodded, \"I want to be able to use what I know practically. I've been taking a few computer science classes to understand the mechanics, but I've had one since I was 10.\" \n\n\"Why computers?\" Mary asked.\n\n\"Because they are only as good as the person who programs them. I love to try and understand what the goal was of the person who created the program.\" \n\nMary smiled at that and gave Karen a smile. \"I think you were right, love; he does interest me.\" \n\n\"Have you done any accounting in your courses?\" Mary asked me. \n\n\"Some theory on the mathematics of it,\" I replied. \n\nShe gave me a long piercing evaluation. \"Goooood,\" she drew out. \"I think you will be perfect.\" \n\nFor what, I wanted to know? \n\n\"Money is going missing from the corporation, and I don't know where from or who's responsible for the losses. The businesses are all profitable on their own but somewhere over ten million dollars a year is disappearing. It's a small drop compared to our overall profits, but I'm convinced one of the family has found a way to steal it in a way that's completely untraceable. If they get greedy, then they could use the same method to asset-strip the company.\" \n\n\"Nothing's untraceable,\" I said with the conviction of youth. \n\n\"That's what I thought, but I've got nowhere. I mentioned the problem to your aunt last night, and she suggested that we talk to you.\" \n\nAh, that explained why Karen called me this morning and insisted I meet her tonight. I wondered idly if that discussion had been a pre or post sex talk between the lovers. \n\n\"I honestly don't see what I can do to help,\" I said. \n\n\"I need someone that no one will suspect, a Trojan horse. Someone with the skills to follow the money and who can fly under the horizon. I think you would be perfect.\" \n\nKaren shushed away my concerns and said, \"You can work over the summer break in Mary's office, it's only a few weeks away. As far as anyone there will know, your summer internship will just be a favor for an old friend's favorite nephew. You'll get ten weeks in America as a bonus.\" \n\nIt was fairly obvious to me that I had about a snowball's chance in hell of being to be able to refuse the offer. Oh, joy of joys, I was going to get to spend my summer in an office. I had been planning a cycle tour around southern France and Italy. I had an invite from Francesca to stay with her for a few days, so I put up a bit more than a token resistance. \n\nMy aunt knows me only too well. \"Mary's agreed to pay for all of your flights, and you can go via Italy. You'll be able to spend a few days with Francesca before you fly to the States.\" \n\n\"How did you know...\" I trailed off. Of course, she would have known. \n\nI gave in gracefully.\n\nThree months later, I had achieved the impossible and found both the money and the culprits hidden behind layer after layer of shell corporations and financial institutions. I'd loved every second of the chase. \n\nI had sat in a little office, just down the corridor from Mary's, apparently there to be shown how just how a big corporation should function. I was an intern, the lowest of the low. I was only sitting where I was because my aunt was a close friend of the family. I stayed with them at their mansion and got a lift into the office each morning with Mary. No one, not even David, knew what I was doing with my administrator level computer access. \n\nI was the cute young British guy, the one all the executive secretaries wanted to hug and tell the office gossip to, and I played my cuteness for all it was worth. I followed the gossip, and after delving into the deep dark recesses of the corporation's computer records, slowly a pattern appeared. A pattern that finally led me to a series of accounts in Hong Kong that were fat with stolen money. \n\nThe accounts were in the name of several companies that I finally traced to one of David's family, a distant cousin who had been almost as good as me in disappearing into the crowd. There were over forty million dollars in the account; about eighty percent of what Mary had calculated was missing. \n\nThe culprit and the location of the missing money were revealed at a full board meeting in a manner that paid homage to the best of the classic detective novels. \n\nI sat at the back of the room, just an intern observing the experts. Mary, as agreed, didn't mention my part in the investigation as she took the lead. There was only a vague mention of any external assistance in the investigation. I did take note when she casually mentioned that the person who'd been responsible for tracing the missing funds would be getting five percent of the recovered money as a reward. She said that last part with a smile in my direction. \n\nThe reward totaled two and a half million after the last of the missing funds were recovered. It was the seed financing for my company. It hadn't taken me long to realize that those three months had been so satisfying that forensic accountancy was what I wanted to do with my life. There was one other reward I received; in many ways far more valuable to me, a lifelong friendship with both Mary and David. \n\nI used some of the reward money to buy a house in a village a few miles north of Brighton in the south of England. It came with a block of disused stables that I converted into an office space. I hired Lesley as my office manager; she lived in the village with her two teenage daughters. I opened the doors to customers a year after I left university. \n\nWith Mary and David networking for me, I was soon getting requests from other companies to solve their financial irregularities. My youth was always an initial stumbling block when I first met a new client, but it was my same lack of years that made people underestimate my capabilities. I was good, very good, at what I did. I knew I'd been accepted by the establishment when I was invited to Scotland Yard to consult on a case. I once described my job as 50% computer genius, 50% number cruncher and 50% detective. Yes, I know that the numbers don't add up but it sure as shit worked for me. ",
        "<center>~~~~~~~~~~~~~~~~~~</center>\n\nIn the late summer of 2008, I was contacted to investigate a multi-million-dollar fraud at a major American airline. I'd spent the first couple of weeks doing research from the comfort of my office. I'd called the company MJ Financial services, not the most original name, but it was mine. I now employed six staff members. Lesley, who was like a second mother to me, was still the office manager. She ran the place even more effectively than I did. In both roles, she kept me from making stupid mistakes. We had a secretary, one of her daughters, and four other investigators. \n\nThere's only so much that I could do in regard to the case from England, so I found myself Atlanta bound. It wasn't a difficult decision, as I'd also get the chance to see Mary and David since they lived nearby. I hadn't seen Mary in some time, and I missed my mentor. \n\nTo cut a long boring story short, I found the money and the three people responsible for its disappearance. What is important to my story is that it was a result of this trip that I met Rebecca for the first time. \n\nMy aunt always seemed to know what I was doing before I did; I suspect that Lesley sends her copies of all my emails. I haven't been able to prove it but I will one of these days. \n\nI thought that I would surprise Mary and David, no such luck. As I exited the customs hall at Atlanta Hartsfield airport, there was Mary, waiting for me. \n\nThe first thing she did was to give me a hug. The first thing she said was. \"Karen called to let us know you were coming to visit us. I've cancelled your hotel; you'll be staying with us.\" \n\nI tried to put up a token resistance, but I was steamrollered by the primal force of nature also known as my aunt's lover. I gave in gracefully, then gave her a kiss on the lips. \n\nI said after our lips parted, \"I was to tell you that's from her.\" Her smile lit up her face. \n\nI always wondered how much her husband knew about the relationship between my aunt and his wife. They met on a regular basis. Karen would stay with them whenever she was their side of the pond, and Mary visited Karen several times a year. How do I know this? Simple, my aunt lives less than a mile down the road from me, just the other side of the village. \n\nMary and David lived on an estate about 10 miles to the west of the city. We arrived in style, in the back of Mary's limousine. I'd tried futilely to get her to stop at the hire car lot so that I could pick up my rental. Atlanta is not a city I could rely on public transportation to get me places. Most American cities are the same; there are a few exceptions: New York and Washington come to mind. \n\nAs I tried to get the driver to pull into the Hertz lot, Mary told him to ignore me. \n\n\"David said I was to tell you that you can use any of his,\" she said. \n\nOkay, that was different, I'd seen his collection, hell, I'd drooled over it, and now David was saying I could pick any one to use. Oh, hell yes. I sank back in the soft seat and grinned at Mary. \n\n\"Any one?\" I asked carefully. \n\nShe gave me a look that was equal parts pleased and anxious. \"No, you wouldn't, not that one!\" \n\nThe grin on my face grew as I considered the prize of his collection. David had a long term love affair with classic British sports cars. Two years before, he'd spent an absolute fortune restoring a 3.5 litre SS Jaguar. Only 116 of them had ever been built; his was a beautiful British racing green version, and I'd lusted after it ever since he'd shown it to me. \n\n\"He did say, any one,\" I repeated. \n\n\"Christ, just be careful with it; I think he loves that damn car more than me.\"\n\nI agreed happily. We pulled through the gates as the red globe of the sun was dipping towards the horizon. Their house, although the term house didn't do it justice, was a 20-room mansion. I always marveled at it as I approached it along the drive that swept through immaculately kept lawns. David's family was old money; the house had been damaged during the civil war and rebuilt in its current style a few years later. \n\nThe only alterations since then had been a swimming pool, added in the Twenties, and David's conversion and extension of the old carriage house into a garage to hold his ever expanding collection of cars. \n\nSpeaking of the carriage house, it looked different from the last time I saw it, and I mentioned it to Mary. \n\nShe gave me a tight smile, \"He had it extended again. It was finished a few months ago; he's been adding a few more cars to the collection.\" \n\nDavid appeared in the doorway as we pulled up outside the entrance to the house. Our relationship was more of the kindly old uncle and shy nephew type than anything else. His children had to prove themselves in the family business. I'd earned it in one fell swoop when I'd unmasked the embezzler amongst his relatives. He greeted me warmly and then turned to his wife. \n\n\"So which one did he choose?\" he asked. \n\nMary held out a $10 bill and gave it to him. \"You were right; he picked it.\" \n\nDavid laughed, \"I told you he wouldn't be able to resist it. Did you tell him?\" \n\n\"No, I thought you should be the one.\" \n\nChrist, I had no idea what they were going on about.\n\nMary stood closer to David, and he held out his hand; a set of keys lay on his outstretched palm. \n\n\"It's yours,\" he said, and they both had broad grins plastered across their faces. \n\n\"Christ, David, I'll take good care of her. I promise I'll bring her back without a scratch.\"\n\n\"No, we mean the Jaguar is yours. I restored it for you; I was just waiting for the right time to give her to you. Karen told us it's your birthday in a few weeks, so she's your birthday present from both of us.\" \n\nI stood there with my mouth open.\n\nHe dropped the keys into my shaking hand. He nodded in the direction of the carriage house. I turned to look, and a set of doors were open, and a pair of men were pushing the SS Jag out onto the graveled forecourt. The racing green paint and the glistening chrome shone with a reddish hint in the last of the sunlight.\n\nDavid said, \"When I asked you a few years ago what your favorite British car of all time was, you pointed at the poster of the Jag on the wall of my study. That's when I knew I needed to find and restore one for you.\" \n\n\"But... but it's the prize of your collection,\" I stammered. \n\n\"She was, wasn't she. But I'll let you into a little secret; I've found another one, an immaculate 1937, 2.5 liter in silver that's completely original. It's being delivered next week.\" \n\nI laughed, \"So basically, I'm getting your hand-me-down!\" \n\n\"Well if you don't want it...\" David said with a smile. \n\nMy fingers tightened around the keys as I shook my head. \"Of course I want it.\" \n\nHe and I walked over to the car, and for a few minutes, I indulged my inner child; sitting on the leather seat, stroking the polished wooden steering wheel and admiring the instruments set into the burl walnut dashboard. Mary needed to call us indoors as though we were naughty children, playing in the garden. \n\nI stayed with them for the next six weeks: the four weeks it took me to solve the case, to trace the airline's missing money and identify the culprits, then another two weeks to document and satisfy the airline's legal team. Most of the money was going to be recovered, and my company's coffers were equally poised to swell healthily. \n\nEach morning I would be up at six, 30 laps of the pool followed by a 5K run. I had no bike with me, so I used the bicycle trainer in their home gym. At home, I would have gone out for a 50k bike ride every other day. Then, I would surrender to my inner child and drive the Jag to the airline's Atlanta headquarters. The first time I arrived, the security manager took one look at the car and promptly gave me a coveted slot in the executive parking garage. \n\nMy 27th birthday fell four weeks into my stay. Mary and David decided that they needed to throw me a birthday party to celebrate the passing of another year of my life. They held it on the fourth Saturday of my trip. I had little input other than to agree to be there, not that I was given any choice in the matter. My instructions were clear; turn up at a specific time and place. No more, no less. \n\nI obeyed. I'm so glad I obeyed. \n\nMary decided that the party was to be formal. All the men would be in tuxedos. Intuitively, I knew that this was really so the women could dress up in their fine formal gowns. Of course, she had confessed to me that she thought David had one of the cutest asses she'd ever seen in a tux. \n\nAt eight in the evening, I made my way downstairs to join Mary, David and the rest of the guests. Two faces stood out from the crowd. Standing together by the main entrance stood Karen and Francesca. They looked like they had only just arrived. I hurried over to greet them as they acquired the first drink from one of the waitresses. \n\n\"You're here,\" I said to Karen, stating the obvious, as I hugged her. \n\nShe gave me a pitying look, the sort only an aunt who loved her nephew could get away with. Then she said, \"See, Francesca, I told you he's gotten a bit brighter since you last saw him.\" \n\nFrancesca laughed and said in her sweet Italian-accented English that always managed to make my knees go weak. \"Hush, love, can't you see you're embarrassing the Bambino?\" \n\nThen she turned and hugged me. \"Michael, I wouldn't miss your birthday; how is my favorite English lover?\" \n\nI smiled back at the beautiful woman, \"I thought I was your only English lover!\" \n\n\"So, I was right then,\" she replied, then followed up her hug with a kiss that made my toes curl. \n\n\"Stop raping the poor birthday boy, Francesca.\" Mary's voice came. \"I want him on his best behavior tonight.\" \n\nFrancesca laughed and gave Mary a cute little pout. Then she gave me a second kiss that oozed promise, and let me go. She turned to Mary and gave her a similar kiss before retreating from her ire into the safety of my aunt's arms. \n\nI always enjoyed watching the interplay between the three influential women in my life. All three were the other's lover, all three had haunted my dreams, but only Francesca had ever made that dream a reality. \n\nI knew that Mary was the oldest of them. She was six years older than Karen, but you would never have guessed. Francesca was the baby of the three, two years younger than my aunt. They stood in a loose triangle, all three holding hands with the other two. \n\nDavid joined us and gave Karen a lover's kiss, which finally answered the question I'd had about his relationship with his wife's lover. Francesca gave him the traditional Italian two-cheek kiss that told me that they weren't lovers. \n\nIt may seem odd, but this was the first time I'd ever seen all four of them together. I knew that Karen had stayed with Mary and David on numerous occasions. That Mary had visited my aunt on a regular basis, and that Francesca had joined them whenever she could, or that they would visit her in Italy. \n\nThis, as I'd said, was the first time I'd ever seen all of them in the same place at the same time. David had his arm around his wife's waist. She, in turn, was holding Karen's hand. Francesca was mirroring David; she had her arm around Karen's waist, and they were for a brief moment, completely oblivious to all the rest of the guests. \n\nFortunately, when I had first approached my aunt, we had stepped back into a secluded corner of the room, so the sexually charged tableau wasn't in plain view. I coughed, they all started, and the moment was over. \n\nFrancesca wrapped her arm around my waist and briefly rested her head on my shoulder. She whispered, \"Buon compleanno, mio dolce amante,\" and stepped back to Karen's side. \n\nMary took my hand and drew me through the throng. From the look of it, she'd invited about 100 guests; most I didn't know. Of the people I did know, most were their relatives, and a few, I knew from my time working for David's company. \n\nMary seemed to have a goal in mind, as we wound through the guests, stopping here and there to say hello and so she could introduce me. She quartered the room like the best hunting dog. Finally, she spotted her quarry, a late arrival standing by David Jr. and Sarah, her eldest son and his wife. \n\nWe stepped close, the woman turned to face us, and I was lost in the most beautiful green eyes I'd ever seen. \n\n\"Michael... Michael,\" I surfaced to realize Mary was trying to get my attention. \n\n\"Sorry,\" I stammered, \"What were you saying?\" \n\nShe gave me an exasperated look. \"I was trying to introduce Rebecca to my handsome and intelligent godson, who's currently doing a wonderful impression of a British village idiot.\" \n\nAh yes, another thing about Mary, she recently decided that she's adopting me as her godson and that's how she's been introducing me all evening. I suppose it's a lot more diplomatic than introducing me, as her lesbian lover's British nephew. Christ, what a mouthful that would have been. \n\nMary sighed, \"As I was saying, Rebecca, this is Michael, and despite all the evidence to the contrary, he's very bright and one of the best in his field.\" \n\nMary turned to me, \"Michael, this is Rebecca. She's Sarah's sister; she's been back east at college, studying to become a lawyer. Now she's back in Atlanta and is working for her grandfather's firm.\" \n\nI stammered a hi, and Mary gave another sigh. She took her son and daughter-in-law by their arms and muttering that she needed them, pulled them away. \n\nRebecca gave me a long, intense look. \"So, you're the reason I was invited,\" she said in the most beautiful southern belle accent that just dripped Tara with every syllable. \n\nI reverted to the village idiot, a role I seemed eminently suitable for, as I studied her. Black hair pulled back from her oval face. Green eyes set either side of a cute little nose, a mouth that was currently twisted in a wry smile, as she watched me studying her. \n\nThe top of her head came up to the level of my eyes, a lie because she was wearing three-inch heels, making her taller than her five-foot-four. Her blue silk dress failed miserably to hide the outline of her slender, lithe body. \n\nI finally managed to get my wits together and speak coherently. \"Well, I suppose I'm the reason you were invited. The party is for my birthday.\" \n\n\"No, it was more than that. This past two weeks, all I've heard from my mother and my sister is that I've got to meet this nice English man staying at my brother-in-law's parents' house.\" \n\n\"And now that you've met the village idiot?\" \n\nShe threaded her arm through mine, \"He has potential, so he better tell me all about himself so that I can answer all my mother's questions later.\" \n\nWe filled a couple of plates from the buffet in the dining room and found a quiet corner to sit. \n\nBetween mouthfuls, I told her about myself, about growing up with two absentee academic parents, how Karen had come to my rescue. I carefully sidestepped the pitfall of Mary's real relationship with my aunt. I explained how I'd met Mary, and how she had pointed me down the path I had taken, what I did for the companies I worked for and why I was currently in Atlanta. \n\nRebecca interspersed my tale with her story. Her parents, like Mary and David, were doyens of the Atlanta Society. Her grandfather was the senior partner in one of the oldest law firms in Georgia. She had studied law and was soon going to take her board exams to practice law in Atlanta. She was 25, and an associate at her grandfather's firm. \n\nThat all sounds rather dry, but it wasn't. Both of us had little stories about growing up, and we slid then in amongst the facts. Several times we were interrupted her mother, my aunt, Sarah, Mary and once by Francesca. \n\nRebecca greeted Francesca with a degree of hero worship. I'd always known that my aunt's lover was a great artist; I just hadn't realized she was such a world renowned one who could demand ridiculous sums of money for one of her paintings. Good news for me, as I've got over half a dozen paintings of hers that she's given me over the years. \n\nFrancesca mentioned to Rebecca that I had been known to sketch and that she had one of my drawings hanging in her bedroom. Francesca smiled at the shock on Rebecca's face and offered to paint her sometime in the future. \n\n\"Maybe as a wedding present, I've always wanted to paint Michael with a woman,\" she said with a smile as she stood up and disappeared back into the groups of people. \n\nRebecca found it hard to believe that I knew Francesca di Traglia, even more than that she'd just spoken to her. \n\n\"How do you know her?\" was her first words to me after Francesca was out of earshot. \n\n\"I met her when I was 16; my aunt and I stayed with her for three weeks.\" \n\n\"Your aunt and her, are they...\"\n\n\"Lovers, yes. They've been lovers for as long as I can remember.\" \n\n\"She's beautiful, and she paints such wonderful paintings,\" Rebecca said wistfully. \n\n\"She is,\" I agreed, and something in my tone made her look at me. \n\n\"You're more than friends; she's your lover, too, isn't she?\" \n\nMy first instinct was to deny it, what occurred between Francesca and me was private. Then I decided I liked her and I wasn't going to damage the possibility of a relationship with a lie. \n\n\"It's personal, but the answer is both yes and no. Yes, in that she and I have shared a few magical nights together, and no we are not lovers in the classical sense of the word. She and my aunt are lovers; I just get to experience a bit of that love occasionally.\" \n\nShe thought about what I had said and seemed to understand. Next, she asked, \"So do you have a girlfriend?\" \n\n\"Not at the moment, why, are you interested in applying?\" \n\n\"I'll think about it,\" she replied. \"My last boyfriend was a bit of an ass, and I've been enjoying the single life.\" \n\n\"I can always get Francesca to ask you out,\" I suggested with a big smile. \n\n\"And the village idiot is back,\" she replied. Then she asked me, \"Do you paint, too?\"\n\n\"No.\"\n\n\"But she just said you do.\" \n\nI shook my head. \"I don't paint; I suck at painting, but I do sketch nudes in charcoal and pastels.\" \n\nShe gave me a considered look, \"That's just splitting hairs. Would you like to draw something for me?\"\n\nI coughed and gave her a startled look; I may have misunderstood her intention, but then again I hoped I hadn't. \"Err, I'm willing, but you do understand I can't draw clothes? I've only ever drawn nudes; it's the way Francesca taught me.\" \n\nRebecca blushed and then laughed. \"I wasn't asking you to draw me, just something for me, but...\" Then she mused, \"I suppose asking a girl if you can sketch her in the nude is a lot better than asking her if she'd like to come and see your etchings.\" \n\nBy now, my ears were crimson, and I was looking for a hole to hide in. Rebecca took pity on me and leaning close, she gave me a soft kiss on the lips. \n\n\"Your penance is to take me out to dinner tomorrow night,\" she told me as she stood up. I struggled to my feet beside her. \n\nAs I glanced around the room, I noticed that a fair part of the guests were taking their leave. It had gone midnight, and we had been talking for three hours. It wasn't how I'd expected to spend my birthday party, but it had been very pleasant. It was a lot better than pleasant; Rebecca was someone I wanted to see again. \n\nRebecca and her family left a little while later. She gave me a hug and a kiss, and I promised to pick her up at seven. I even remembered to ask what type of food she liked. Not that it helped, as her reply was, \"Surprise me.\"\n\nI sat down on a sofa in the library and nursed a beer I'd liberated from the kitchen. In the other rooms, the caterers were clearing up. I didn't get long to get my thoughts straight about the woman I'd just met. A beautiful woman eased herself onto my lap, and two others sat down either side of me. ",
        "Francesca wriggled in my lap finding a comfortable position, regardless of the effect her actions were having on a certain unruly part of my anatomy. I held her tight with a muttered, \"Stop that.\" \n\nShe gave a happy little laugh and whispered back, \"I'm glad to see you're still happy to see me,\" and kissed me. \n\n\"Leave the poor boy alone,\" Mary commanded. Then more softly, \"You can give him your birthday present later. But first, what did you think of her, Michael?\" \n\nFrancesca settled down, resting her head on my chest. I wrapped an arm around her, and she'd stuck her tongue out at Mary and then gave a contented sigh as I started to run my fingers through her long black hair. \n\n\"Well, do you like her?\" Aunt Karen asked. \n\n\"You know I've always liked her,\" I said, and gave the top of Francesca's head a kiss. I knew it wasn't Francesca she was asking me about, but I love to tease Karen. \n\n\"Idiot!\" She tapped my arm. \"I'm not talking about the trollop on your lap; I mean Rebecca.\" \n\nFrancesca turned her head and stuck her tongue out at Karen, and then tightened her grip on me. \"Huh, this trollop gets the boy tonight, he's mine, all mine.\" \n\nI grinned to myself at the prospect of the birthday present my Italian beauty was promising me. \n\nKaren sighed, \"Seriously, Michael, what did you think of her?\" \n\n\"What I think is that my aunt, my best friend and my lover are all conspiring to set me up with the girl.\" \n\nThe woman in my arms whispered, \"Guilty as charged,\" while the other two just looked embarrassed. \n\nI let them off the hook, \"She's nice; I'm taking her out to dinner tomorrow night.\" Then I said to Mary, \"Do you know anything about her last boyfriend? The breakup sounded like it was rough.\"\n\n\"Yes, it was quite a scandal. He was a married associate professor, and she had an affair with him. He said he was separated and was promising Rebecca that he was going to divorce his wife. It turned out he had no intention of doing it. It all blew up when the wife found out. Rebecca's family managed to hush up her part in it, and she came home.\" \n\n\"Oh.\" \n\n\"She's a nice girl, Michael, just a bit too trusting, and she fell for an unscrupulous asshole who sold her a bill of goods just to get her in his bed, and he wasn't the first. Her previous boyfriend, her high school boyfriend, laced her drink at a frat party and invited his friends to use her. Fortunately, a girlfriend discovered what was about to happen and got her out. They'd been together for three years.\" Mary was studying me as she spoke. \"She needs someone good in her life, and we all think that you could be that person. You haven't had a real girlfriend for a couple of years, not since... oh, what was her name?\" \n\n\"Alison,\" Karen supplied. \n\nI shut my eyes, Alison was a painful memory I didn't want to revisit. In the aftermath, I'd done a similar thing to Rebecca and sworn off any new relationships. I was also getting a bit irritated with their manipulation. Rebecca seemed a nice girl, and I was happy to see if anything evolved, but I wasn't going to be pushed.\n\n\"Enough,\" I said, \"Mary, can you do one thing for me? I need a reservation at a good restaurant for tonight at eight, can you do that?\" \n\nShe nodded. \n\n\"Then that's it. After that, none of you will do anything to help things along. I like the girl, and if it works out, great, if not, that's life. Now I believe I have a birthday present that needs unwrapping.\" I gave Francesca a kiss, and she laughed happily. \n\nFrancesca was 41, yet the body I unwrapped in the privacy of my bedroom was that of a woman my age. She stood, poised, her dress pooled at her feet, my own black-haired Venus de Milo. \n\nWe celebrated my birthday in the only way we could, with an outpouring of our physical love that left both emotionally spent and fast asleep, totally exhausted. \n\nMid-morning Mary and Karen braved the wreckage that had been my bed, to wake us with coffee and freshly baked pastries. I don't know how Francesca does it. I looked and felt like something the cat had dragged in. She, on the other hand, looked serene; she glowed with an inner brightness. Her long black hair splayed out on the pillow framing her smiling face. Her body stretched languidly over the covers.\n\nShe didn't wake up at the sound of the knock on the door. I staggered over and opened it to two smiling faces and the heavenly aroma of freshly brewed coffee. Looking back at the sleeping beauty lying on the bed covers inspired me. I asked Mary and Karen to keep quiet and sit down on the chairs by the dressing table. \n\nIn my bag was a sketchpad and charcoal. I sat cross-legged on the edge of the bed and swiftly drew my sleeping lover. Simple, bold lines that grew into the outline, shading gave her body depth. It took me less than five minutes to complete the drawing; any more and I knew I'd ruin it. \n\nIt wasn't until I stood up and Mary and Karen came over to see the drawing, that I recalled I was standing naked in front of my aunt and her lover. I sat down on the bed and pulled a corner of a sheet across my waist. \n\nTwo arms circled me, and a soft pair of breasts pressed into my back. Francesca peered over my shoulder and promptly started to sob. \n\n\"Mio bel ragazzo,\" she whispered, \"You make me look so beautiful. Can I keep it please, for my bedroom?\" \n\nI understood the importance of her words \"Of course,\" I said and turned so I could give her a kiss.\n\nFrancesca's villa is packed with artwork, but only four pieces hang in her bedroom. One is a life-size canvas of my aunt that Francesca painted ten years ago, the second is of Karen and Mary asleep in Francesca's bed. The third is the outline of a young man silhouetted against the window of her bedroom. The last was the only piece Francesca hadn't created; it was the small sketch of the model I drew on my first visit. \n\nShe kissed my neck and whispered, \"Thank you, my sweet love.\" \n\nI wrapped the sheet around myself and went to the bathroom, leaving the three lovers sitting on the bed hugging each other. \n\nThat evening, I drove the Jag to Rebecca's family home. Theirs was even larger and more imposing than the one I'd just left. For once in my life, I didn't feel out of place as I drove up their drive. In my mind the Jaguar I was driving far outshone bricks and mortar. \n\nEven it stood no chance against the beauty that waited for me at the top of the short flight of steps leading to the front door. Rebecca stood beside her parents, alerted, no doubt, by the security guard at the gate. \n\nRebecca looked radiant in a classic mid-thigh little black dress, a younger version of her mother, standing beside her. I was introduced to her father; we hadn't had a chance to talk the previous evening. His name was Conrad Winters, and her mother was Rachael. \n\nConrad was surprised to see me in the SS Jaguar. \"I didn't know David allowed anyone other than himself to drive one of his prize cars.\" \n\n\"He doesn't, usually. He gave me this one as a birthday present.\" \n\nHe whistled in surprise. \"So how do you know him? We didn't get much of a chance to talk last night. Someone seemed to take up most of your time.\" He gave his daughter a smile, and she blushed. \n\n\"My aunt's a very old friend of his wife, and she got me a summer internship with their company. I was lucky enough to be able to trace some embezzled funds for him.\" \n\n\"Michael James,\" he mused, and then a smile crossed his face as he worked out who I was. \"You're the accountant guy who tracks down stolen money for companies. Our firm has worked on some of those cases, Winter and Associates.\" \n\nI recognized the name and guessed it was the same family firm of lawyers where Rebecca was now employed. \n\nMary had used her influence to get me a reservation for eight o'clock at Bones, a steakhouse in Buckhead. We said our goodbyes and I held the car's passenger door open for Rebecca, which caused her to hesitate until I pointed out that the Jag was British and right-hand drive and I wasn't asking her to drive. \n\nThe evening was warm, and the wind flicked at her hair as we drove along. I'd offered her a jacket and a scarf before we'd started out. She'd taken the jacket but not the scarf. She had a child's smile plastered across her face, which grew even wider as the throaty roar of the exhaust bounced back from the buildings as we entered the streets of Buckhead. \n\nThe valet's eyes popped as I pulled up outside the restaurant. \"Never out of your sight,\" I made him promise. I backed my request with a $50 bill. \n\nThat evening moved our relationship to the next level. The meal was everything Mary had promised it would be. Rebecca and I got over the last lingering doubts about our manipulating friends and relatives. We soon realized that we liked each other for what we were, not for what we were told we were. \n\nThe drive back seemed to pass far too quickly. She grasped my arm and rested her head on my shoulder. I let the back of my hand caress her thigh, and she kissed the side of my face. I escorted her to the door, and she gave me a deep but chaste looking kiss. \"Too many eyes are watching us,\" she murmured and gave the security camera a little wave. The camera tilted in reply, to my amusement. \n\nWe managed to find the time in our busy schedules to date several times over the next two weeks. We'd both been burnt in our previous relationships, so we were cautious. There was none of this love at first sight that you read about in the romantic novels, but there was a growing sense that we were meant to be together.\n\nBoth of us were aware of the impending date of my flight home. I couldn't change it as there were several new cases waiting for my attention. The deadline made us more cautious about our possible future. Did we progress beyond a chaste kiss, of course we did, but not as far as I think we'd both have liked. The ever-present fact that I lived over 4000 miles away was a cloud that hung over both of us.\n\nI couldn't help it; I couldn't leave without getting some commitment from Rebecca. In the space of two weeks, she'd managed to embed herself under my skin. \n\nFor some reason, I'd never managed to visit New Orleans on any of my trips to the States, so this time, I'd been planning to spend a couple of days in the city before I set off home. I was nervous about asking her, and with a degree of trepidation, I invited Rebecca to join me in New Orleans on the last weekend of the trip. \n\nTo my joy, she jumped at the chance to come with me when I asked. Three days and two nights at a romantic hotel in the middle of the French quarter. Her only stipulation was that we should have separate rooms. \n\nThat weekend in the romantic jewel on the Mississippi was the turning point of our relationship. It started out slowly and with a problem. As she had suggested and not wishing to seem too presumptuous, I'd tried to book two rooms for us. Of course, I'd picked a weekend when the city was heaving with a major medical congress. I could find the odd room but never more than one per hotel.\n\nMary overheard me cursing and used her company's influence to find us suitable accommodation. \n\n\"I've found you two bedrooms,\" she told me with a smile a few hours later. \n\nI've known her long enough that I don't trust her when she smiles like that. \"Two rooms? I checked. \"I don't want Rebecca to think sex is the only thing I've got on my mind.\" \n\n\"Two bedrooms,\" she confirmed, \"at the Maison Dupuy hotel in the French quarter. Mind you, if Francesca's description of her night with you is only half true, then I don't think Rebecca would have anything to complain about if you two did enjoy yourselves.\"\n\nMy ears blushed bright red. Francesca and Karen had stayed another couple of days, and I'd slept on my own those evenings. \"Christ, Mary, does Francesca tell you two everything!\" \n\n\"Of course she does, we love living vicariously through her, and she loves you in her way. You know, you're the only man who she has shared her bed with these past few years.\" \n\nShe saw my surprise at that. I was aware that Francesca had always preferred female lovers, but knew, or thought I did, that she took the odd man to her bed as well. Mary took my hand and made me follow her to her private study; this was the first time I'd ever been invited through the door. \n\n\"She painted that from memory,\" she said as she pointed at a full-size canvas on the wall. It was flanked on one side by a painting of Karen in the bath and on the other by a self-portrait of Francesca in her bed. I'd seen versions of those at the villa before. I hadn't seen the one in the middle before, and if I thought my ears couldn't get any redder, I was sorely mistaken. \n\n\"Oh God, she didn't,\" I stammered. \n\nShe had; me in all my glory, lying on my back on her bed. It was obviously early morning, and I was just waking. The bed sheet was a tangled mess at my feet. All I can say is that Francesca's memory is very good, as my semi-turgid morning erection was perfect in every detail. \n\n\"Please tell me you don't let people see that,\" I said. \n\n\"You're only the second man who's ever been in here,\" she said and pointed at the wall behind me. When I took in the painting hanging there, I could see why.\n\nThere was a slightly less graphic version of this painting on the wall of Francesca's bedroom. I had a slightly more PG version at home. This one was the xxx version. Mary and Karen caught at the moment of a mutual orgasm, sprawled across Karen's bed. \n\n\"Oh,\" and I couldn't think of anything thing else to say. \n\n\"David has seen it,\" Mary said, \"and I know Francesca has something similar on her bedroom wall.\" I nodded. \n\n\"I was thinking of letting Rebecca see them; she was asking if I had any of Francesca's paintings.\" \n\n\"Christ, tell me you're not going to,\" I begged. \n\nMary laughed and gave me a hug. She whispered, \"I envy what you and Francesca have.\" \n\nRebecca and I flew to New Orleans on David's corporate jet, and he had laid on a limousine to take us to the hotel. Sure, Mary had booked two bedrooms, only they were in the same suite: The Carriage House, a two-bedroom cottage in the grounds of the hotel. We arrived on a Friday afternoon, and Rebecca initially viewed our accommodation with a degree of skepticism. \n\nHey, we are not talking about the quality; the Carriage House is a luxurious place, but as I suspected, given her track record of manipulating lovers, even a separate bedroom in the same suite was eyed suspiciously. She calmed down a bit after I got Mary to call her and confirm that I'd asked her to help me find two separate rooms, but this was the best she could do since nearly every other hotel was overbooked. \n\nHer bedroom had a lock, which she made sure I heard her use that evening after we got back to the suite. We had eaten at one of the quaint little outdoor courtyard restaurants and then enjoyed the music at a bar on Bourbon Street. It was late as we walked back to the hotel, our arms around each other and the French quarter working its magic on us. \n\nIn the main room of our suite, Rebecca turned to me. \"I've enjoyed tonight, and I think I've fallen for my village idiot.\" Then she kissed me. \n\n\"But,\" she said, and there's always a but, isn't there? \"I'm not sure if we can make it work at such a long distance. My career is here in America; yours is based in England. I've tried that once before, and it failed miserably.\"\n\nI tried to comfort her and tell her we'd work it out. She just got more upset. \n\n\"It's not fair; I love you,\" she sniveled and ran off to her bedroom, locking the door after her. \n\nThe problem was, I loved her, too. I poured myself a drink and sat in the lounge feeling sorry for myself. I'm not sure how much later it was, but I started back from my contemplation as I heard her voice. I hoped that she was calling me, but no it was obvious she was having a fairly heated conversation with someone on her phone. \n\nI took myself off to bed and called Karen; she and Francesca had decided to go to California for a vacation after my party. I'm not sure what I said, I know that at some point I was shouting and at another crying. \n\n\"Don't worry; we'll get it sorted,\" was her last words to me as she disconnected. I couldn't see how, and I spent a few sleepless hours trying to work out if I could move the company, lock, stock, and barrel to the States. It wasn't hard to work out that it wasn't viable; two-thirds of our business came from Europe. Half of my investigators had strong ties to the local area. The clinching argument was that Lesley wouldn't be willing to leave her daughters or the village, and she was the intricate heart of the business. \n\nThe next day, Rebecca seemed a little bit distant and cold to me. We did the touristy things, walked hand in hand along the levee and watched the watercraft sailing down the Mississippi River. We had lunch at the old Jax brewery building. In the afternoon, we took the trolley car out past the old mansions and to the zoo. In the evening, we sat on the wooden benches at the Preservation Hall to listen to jazz in its purest form. \n\nIt wasn't that late when we made our way back to the hotel. We walked arms around each other, in silence. I was lost in my thoughts; I was still hoping I could work out some way we could make our relationship work at a distance. From the little glances she was giving me, I'm sure that Rebecca was thinking hard as well. The problem was that I guess both of us were waiting for the other to make that first step. \n\nIn the suite, we stood facing each other, both of us waiting for the other to start. The silence grew on what was looking like it was to be our last evening together. \n\nI finally broke the void between us. \"Regardless of whatever happens,\" I said as I drew her into a hug. \"You need to know that I'm in love with you. If there were any way I could move the company over here, I would. I just can't, but I can feel the connection between us.\"\n\n\"I know,\" she said. \"I've spoken to your aunt, and she's explained it all to me.\" \n\nChrist, when had she spoken to Karen?\n\n\"We can try,\" I said, and I meant it \n\nShe kissed me, \"Let's forget the future. I want to live in the present. Will you make love to me tonight?\" \n\nI whispered, \"Yes.\" We kissed again; then she drew away. \n\n\"I'm going to take a shower,\" she said. \"I won't be long; I need to freshen up. You should have one, too.\" \n\n\"Together?\" I suggested hopefully.\n\nShe put her finger on my lips and then pointed me in the direction of my bedroom. \"That's not how I want you first to see me; give me some sense of mystery.\" \n\nI gave her a smile and a kiss then headed to my room. I had a quick shower and slipped on a pair of clean boxers. I sat down in the lounge. I could hear her shower running. The shower stopped, and in the silence, her phone could be heard ringing. \n\nThere was a long pause; then I heard her scream. I jumped up and started to go to her. She appeared in the doorway. Rebecca threw herself into my arms. \n\n\"I don't know how you did it,\" she laughed, \"but I'm going to England in a month. The firm wants to open an international law division, and I'm to work with a British law firm for a year to get the qualifications I'll need to run it.\" \n\nShe was consumed with a desperate desire. I wasn't fully prepared for her assault and staggered back a step or two. Rebecca was all over me. She took my face in her hands, and she kissed me hard, even as I wrapped my arms around her.\n\nI backpedaled into my room until the back of my legs bumped into the bed. Rebecca put her feet on the floor, and her hands tore at my boxers. With a quick shimmy, her robe dropped to the floor, leaving her naked body pressed up against me. She gave me a wicked grin, gave me a savage push, and I fell back on the bed. \n\nShe jumped on top of me, her naked body hot with desire. She latched into my neck like a starving female version of the Vampire Lestat. ",
        "My hands caressed her breasts. Her long nipples were hard against my palms. Our eyes locked together.\n\n\"I am sooooooooo going to fuck your brains out,\" Rebecca vowed.\n\nMy only response was a knowing smile. She leant down and kissed me, hard and passionately, then hungrily and lustily.\n\nAs my hands roamed her body, Rebecca let me up long enough so I could move to the center of the bed, then, she took my hands again and pinned them down. I put up a token struggle, but otherwise willingly met my fate.\n\nWe continued to kiss. Rebecca pressed her body against me. My cock was hard, brought to full attention by my lover's eagerness.\n\nRebecca started to grind her pussy against me and moaned in anticipation as she felt the head of my rampant beast against the entrance to her sex. She let out a long sigh as I entered her. She threw her head back, as with one thrust my full length penetrated her. We both gasped when I hit bottom.\n\nAny semblance of control she'd had was long gone. Lust consumed her, desire clouded her thoughts. Up and down she bounced. Her hips moved back and forth, her clit rubbed against the base of my cock as I filled her up.\n\nI tried to move my hands, but Rebecca still held me down. She was out of control. Our teeth knocked together with wet, slobbery kisses.\n\nUp and down she moved; the ride of her life. I didn't dare move as Rebecca rode me. My cock stood straight up as her pussy enveloped it. \n\nI couldn't speak because her tongue was in my mouth, dueling with mine.\n\nRebecca closed her eyes. Up and down she moved, faster, harder. She sat up, releasing my hands. I sought out her swaying tantalizing breasts, and I captured them, squeezed, pinching her nipples. Rebecca cried out in glorious anguish.\n\nHer hands closed over mine. She needed to steady herself.\n\nIt felt wonderful, the soft encompassing flesh of her slick passage the perfect glove for my eager body. Rebecca squeezed her eyes shut as the tears began to flow. Overcome with desire, she let out a gasp and brought herself down hard on me.\n\nShe felt my hips push upward. Her hands clasped me tighter. With one final cry, the room started to spin. The head of my cock was flaring inside her and then she seemed to explode as my cum spurted out to coat the walls of her willing receptacle.\n\nWaves of pleasure wracked Rebecca's body. She continued to grind her hips against me. I kept moving to match her and extend our mutual pleasure. \n\nThere were flashes in the corners of her eyes. Her hypersensitive nipples were pressed flat against my palms. Her pussy flooded with her sweet nectar, mixing with mine.\n\nI tried to steady her, but she collapsed anyway, falling on top of me, her thudding heart vibrating against my chest. \n\n<center>~~~~~~~~~~~~~~~~</center>\n\nIntermezzo: two years before the main event; when we first meet Marcus. \n\nRebecca and I were on holiday in the Aegean Sea with Jessica, our five-year-old daughter. \n\nShe had flown into the U.K. exactly one month after our first night together and had immediately moved in with me. She became a commuter, traveling back and forth to London every day on the train. We got engaged two months after that, while on a long weekend with Karen and Mary at Francesca's Villa. \n\nThe wedding was six months later. It was a full-blown Atlanta society wedding in the grounds of Rebecca's parents' mansion. We honeymooned at an island resort in the Maldives, and then we settled down to married life. Two years later Rebecca was pregnant, and we had a daughter. \n\nAfter Rebecca's first year in England, Winter and Associates opened the proposed international branch in London and Rebecca had been given a partnership. She was happy in her position, her marriage and we settled down to life in the Sussex countryside. \n\n<center>~~~~~~</center>\n\nWe had been invited to join Mary and David for a month cruising on a 50-meter yacht they'd chartered for the summer. We weren't their only guests; Rebecca's parents had flown over from the States. Karen and Francesca were due to arrive the week after Conrad and Rachael had left. \n\nOur relationship with Francesca was interesting; I had never slept with her since that evening of my birthday party, but I hadn't hidden my relationship with her from Rebecca. She knew I'd been involved with Francesca, but not the details. After our weekend in New Orleans, I told her everything. Rebecca had understood at my birthday party, that Francesca and I had been close. Mary had confirmed it when she'd shown her Francesca's paintings including the one of me. \n\n\"Only a lover could have painted you like that,\" she told me. \"Do you still love her?\" \n\n\"I'll always love her,\" I admitted. \"It'll be impossible not to, but she's no threat to you.\" \n\n\"I know that she came to see me,\" Rebecca acknowledged. \"She said that you were the only man she'd ever contemplated falling in love with. Karen and Mary were her true lovers, and I'd be foolish if I rejected you because of her.\" \n\nFor all that, Rebecca and Francesca have become close friends. Of the three other influential women in my life, it's Francesca she's the closest to. It's a tad odd listening to the pair of them describing me in intimate detail. We see Francesca several times a year, and she is one of our daughter's godmothers. She loves to paint us, and we are the proud owners of one of the best privately held collections of paintings by Francesca. Her Triptych of Rebecca, Rebecca pregnant and mother and baby, is world famous. It hangs on our lounge wall when it's not jetting all over, taking center stage at exhibitions of Francesca works. \n\nWe'd been on board for just over a week when the yacht headed for a harbor on one of the Greek islands. We were scheduled to pick up a couple of Conrad's friends, Roger and Pamela Donaldson. Roger was American and the owner of a group of companies, the Donaldson Corporation, mostly based in the USA with a smaller division in Europe. His wife, Pamela, was British. He, David and Conrad had been in the same fraternity at college and had kept in touch over the years. \n\nWhen the yacht moored mid-morning, there was a third person waiting with Roger and Pam on the harbor wall. He was just over six-foot-tall, a smart looking man wearing casual trousers and a linen jacket. His face was thin, with brown eyes and a sharp nose, and capped with styled light brown hair. An elegant, handsome man, who was I guessed in his mid-thirties, and who seemed to be in the midst of a deep discussion with Roger.\n\nPam walked up the gangway as soon as it was lowered. \"I apologize,\" she said to David and Conrad. \"This is our nephew, Marcus Forde.\" She pointed at him. \"He turned up today; he needed to speak to Roger urgently. There's some issue at the division where he works. He thought it would only take a couple of hours to sort out, but as you can see, they're not finished. I was hoping that your invitation would extend to him as well. It's should only be for a day or so. We can drop him off at our next port.\" \n\n\"Of course,\" David said, and that's how Marcus first came into our lives.\n\nHe and Roger boarded the yacht and quickly drew David into their discussion. They paused briefly to make their introductions. Apparently, Roger and Pam had been at our wedding, but for the life of me, I couldn't remember them. Marcus had that unique British public-school arrogance that immediately grated on me. All the ladies and Jessica thought he was charming.\n\nIn the end, Marcus only stayed one night on the yacht. After an early lunch, he and Roger retreated to one of the staterooms for most of the afternoon. Several times David and Conrad were asked to join them; at one point Conrad asked Rebecca to speak with them. \n\nShe came back to Jessica and me, shaking her head in annoyance.\n\n\"Dad's agreed to take on the company Marcus works for, as a client,\" she complained. \"He sees it as an in, to get the rest of Roger's business in the future. Christ, their finance and sales directors have been playing fast and loose with the local trade laws. They've managed to resolve the immediate issues, but I've got to meet with their legal team next month. Marcus was eager for me to fly back to the Britain with him to meet with them as soon as possible.\" \n\n\"I hope you said no.\" \n\n\"Of course I did, and Dad backed me. I called the office, and they'll send a team to sort it out. Marcus is flying back tomorrow, so there is a change of plan, and we're staying here for the night.\" \n\nI gave her a hug, and then we both returned to the important issue at hand: to entertain our daughter by the small swimming pool on the aft deck. Rebecca slipped off her sundress and glanced at me for my approval. I blew her a kiss; the blue Wicked Weasel did an admirable job of showing off her body while maintaining at least a passing nod to decency. Or it did so, until it got wet, becoming completely pointless, as the fabric turned translucent. \n\nHey, I enjoyed the show, and Jessica couldn't care less, she was having fun with her parents. Mary had foolishly bought her a super soaker and was now regretting it. The little terror kept sneaking up on Mary, Pam and her grandmother as they were sunbathing on loungers and splashing them.\n\nIt was later on that I got a weird, uncomfortable feeling. We were still at the pool and Jessica, fortunately, was starting to slow down. Mary and the others had gone in, a little earlier. Jessica had wanted a last swim and Rebecca had taken her into the pool. She'd only lasted a couple of minutes before she wanted out, and Rebecca had passed her up to me. I'd taken my daughter, wrapped a towel around her, and we both watched as Rebecca swam the last couple of laps. \n\nThat's when I got the prickly feeling between my shoulder blades. I looked around, and I finally spotted the source of my discomfort, Marcus' head was silhouetted against the sky above me. He was leaning over the rail of the deck that overlooked the pool area and was watching Rebecca intently as she got out of the pool. She looked like a goddess rising from the sea. Her bikini was nigh on invisible; her pussy and prominent nipples visible through the transparent fabric, and she was oblivious to his scrutiny. I stepped towards her holding out a towel, and when I glanced back in his direction, he'd gone. \n\nI thought about mentioning it to her, but for some reason, I didn't. In the end, it didn't seem all that important, and honestly, I think that any red-blooded man would have paused to watch her. \n\nThat evening, we all went out to a local family friendly seafront restaurant. Our daughter's doting grandparents had insisted she should come with us. The waiters pushed two tables together to seat all the ten of us. I do love how Mediterranean restaurants are so child-friendly, and this one was no exception. \n\nThe waiters fawned over Jessica, finding cushions to place on her chair and happy to let her put her hands in the big tank with the lobsters for sale in it. For some inexplicable reason, none of us could order lobster. Hell, could you if a cute little girl is peering into the tank and is naming every one of them. Marcus was the only one who put up a token attempt to order one of Jessica's new pets. He retreated at her withering glance. \n\nThe food was excellent, but it wasn't too long before Jessica's head was drooping and she was trying to stifle a yawn. I said I'd take her back to the yacht as Rebecca and her father seemed deep in discussion. Rebecca gave me a grateful smile, and I whispered that I'd be back as soon as I settled her down. We'd previously arranged for one of the female crew members to babysit if it was required. \n\nWith a sleepy Jessica in my arms, I walked the couple of hundred yards to the yacht. The on-duty crewman met me at the gangplank, and Mel, the babysitter, was waiting for us at our stateroom. It took me a while to get her settled down, two stories from her favorite book. \n\nIt was probably an hour before I left my sleeping daughter in the care of Mel, and I was able to return to the restaurant. There had been a subtle rearranging of the seating while I was away. Marcus had slipped into my empty seat and was talking to Rebecca. I gave him a pointed look as I moved to stand beside her. He started to ignore me, but then seemed to think better of it. He stood and pulled a chair over from an adjacent table and placed it behind her and sat down, gesturing to me to take my chair. \n\n\"I'm sorry if it appeared I'm monopolizing your wife,\" he said. \"I needed to discuss the situation and see if I couldn't try to convince her to fly back with me.\" \n\n\"Not going to happen,\" I responded. \"We've got nearly three weeks left, and there's no way I'm going to let her cut her vacation short.\" \n\nTo my surprise, she didn't immediately agree with me. \"Well, I was just wondering if I shouldn't go back for a couple of days,\" she said. \"Just to make sure the team gets set up properly?\" \n\nI shook my head, \"As I said, 'not happening'. We're on holiday with our daughter. If you need to talk to your office, then use the phone or your laptop. You're not going to spoil Jessica's holiday.\" \n\nShe gave me a slightly confused look, \"I... I, why didn't I think of that?\" She questioned herself. Then she said to Marcus, \"As I said this afternoon, I've got a great team in place, and they will be in contact with you as soon as you get back. They can check in with me if they have any questions.\" \n\nI thought I saw a flash of annoyance cross his face and then it settled back to his usual smiling mask, which he turned in my direction. \n\n\"Your charming wife is correct, and I shouldn't have pushed the issue.\" Then he gave me an appraising look. \"Conrad and Roger were a bit evasive earlier on, about what you do, Michael. Are you some type of super spy?\" \n\n\"Hardly, unless you've lost some money. I'm an accountant.\" \n\nRebecca laughed and blew me a kiss. She said, \"Yeah, he's The Accountant.\" \n\nThat was a family and friends in-joke. Working with a low profile was always easier for me. When I was asked, I would usually describe myself as just an accountant. In retaliation, the people who knew me started to call me \"The Accountant\" when they were talking about me and stressing the capital letters in their correspondence to me. \n\nI'd taken it with good grace, especially after Lesley had changed my title on my business cards and email signatures to \"The Accountant.\" Marcus never picked up on the way Rebecca stressed my title, nor did he notice the knowing smiles from Conrad and David. \n\n\"An accountant,\" Marcus said, dismissively, and smiled to himself before turning back to Rebecca and attempting to pick up his conversation with her. She ignored him, moved closer to me and asked how our daughter had settled down. \n\n\"It was a two-story night,\" I conceded. \"She's asleep now, and Mel's keeping an eye on her.\" \n\n\"So, we don't need to hurry back?\" she hinted. \n\n\"Nope, fancy a walk along the beach?\" I asked as I grinned suggestively. \n\nShe almost purred her agreement. \n\n\"I could do with walking some of this meal off, mind if I join you?\" Marcus asked. \n\nI gave him an annoyed look, and Rebecca shook her head. \n\n\"I'm afraid not,\" I said. I couldn't understand why he would suggest that. It was fairly obvious we'd wanted a bit of alone time. \n\nRebecca added, \"You know the saying, 'Two's company, three's a crowd'. As much as we love our daughter, we also value the odd moment we are alone. So, goodnight Mr. Forde,\" she added dismissively. His gaze hardened, but he said nothing. \n\nRebecca stood up and took my hand, then we headed out of the restaurant, stopping to say a brief word with her parents and Mary. \n\nWe walked along the coastal path; the only sounds the crunch of the gravel underfoot, the swish of the waves as they caressed the sand and the chirping of the cicadas in the bushes. \n\nWe'd walked about four hundred yards past the headland. We were starting down towards a remote beach lit only by the moonlight before my anger bubbled over and intruded into nature's opera with a question. \"Who does that arrogant son of a bitch think he is,\" I snapped. \"Why were you even thinking of going back with him?\"\n\nShe gave me a startled look, \"I don't know why I was even considering it, for just a moment it seemed the right thing to do. He's Roger's arrogant SOB of a nephew. Christ knows why he's here. Dad and I could have solved his problem with a simple phone call.\" \n\n\"Then what was it all about, other than trying to chat you up. You know he was spying on you this afternoon by the pool.\" \n\nShe stiffened, \"I thought I saw a glimpse of him, but I wasn't sure.\" \n\nShe paused to wrap her arms around me. \"What's that thing you say about people sometimes? Oh, yes, 'he's a bit of a git'. He seems to be doing a hatchet job on his boss. They've got a problem, and I think he's using the family connection to make sure Roger gets his side of the story first.\" \n\n\"So who caused the problem?\" \n\n\"From the sound of it, it's his fault, but Roger has a bit of a soft spot for him. His mother is Roger's older sister; she apparently brought Roger up after their parents died. She married a minor member of the British aristocracy and Pam complains that he'll do anything for her and that includes turning a blind eye to any and all of Marcus' faults.\" \n\n\"Christ, how do you know any of this?\" \n\nShe laughed, \"Mary warned me about him as soon as she spotted his interest. Apparently, he's gained a reputation as a woman chaser, and it seems he targets married women.\" \n\n\"Well, he better not have set his sights on you!\" \n\n\"Even if he has, I think the words, smarmy, creepy and asshole apply to him equally, so he's got no chance.\" She mused for a moment and then continued with a wry smile. \"I guess if you didn't know his reputation, he could come over as interesting and rather charming, I suppose that's why he's got the reputation he has.\" \n\n\"Well I don't see it, he just seems a dickhead to me.\" \n\nRebecca laughed, \"That's probably the best description. While you were putting Jess down, he was trying to get me to fly back with him and give the issue a 'Woman's Touch'. I believe Roger's given him the authority to take over the company and ease the current CEO into retirement.\" \n\n\"Poor bastard,\" I muttered, the CEO hadn't stood a chance once Marcus had bent Roger's' ear. \n\n\"I need to talk to Dad; he's got these big plans about working with Roger's firms, but that means I'll have to work with 'Dickhead'! I'm not at all up for that.\"\n\n\"We'll both talk to Conrad; you can blame me for being unreasonable as there is no way I want you to be working with him.\" \n\nShe laughed, \"My hero, I love you when you get so manly.\" \n\nI glanced around at the deserted beach, and then reached over and pulled the zip on the back of her dress all the way down. She gave a little shiver of anticipation as I eased the dress off her shoulders and let it fall forward and then down to pool at her feet. She stood in front of me, all five feet four of my elven princess, wearing only a skimpy thong. Her breasts showed no effects of breastfeeding Jess; she still didn't need to wear a bra\n\nArms stretched out, she slowly turned and walked into the water. She beckoned me to follow her, I stripped down, hesitating when I got to my boxers, but then took them off as well. I followed my siren into the water and her arms.\n\nThe water was chilly, and as I caressed her soft body, I felt the goosebumps forming. She shivered and pressed herself against me, attempting to steal some of my body heat. \n\n\"Christ, it's colder than I thought,\" she whimpered. \n\n\"Come here; I'll keep you warm.\" We moved further out from the shore until only I could stand. Rebecca had her arms and legs wrapped around me. Her pussy rubbed against my growing cock causing both of us to groan in anticipation. I reached down to cup her ass cheeks. Finding she was still wearing her thong, I hooked a finger under the waistline and pulled. It tore, and the thong came away in my hand. ",
        "\"I love you, Mrs James,\" I told her. \n\nHer lips latched onto mine and her pussy ground against my hard cock. \"Just fuck me, you beautiful man. I love you and that wonderful cock of yours.\" Her hand slid down between us to grasp that part of me. \n\nA few yards away a small boat bobbed in the swell. I drew her over to the boat and pushed Rebecca up and in. I followed her and found her lying on her back on an old sail. Her arms raised to pull me close, her legs wide to greet me. \n\nMy cock head pushed apart her pussy lips. She pulled me close with her legs, impaling herself on my shaft until I filled her. I groaned in pleasure as her soft passage gripped me, sending ripples along my cock. Her mouth opened and her eyes glinted with lust in the moonlight. \n\nWe let the swell of the waves set the rhythm of our lovemaking. This was love, not raw sex. We moved slowly, languidly, our body heat warming the air around us. Deep long thrusts into her core as she buried her face into my neck, nibbling my skin. \n\nIt seemed it was hours later that we both reached our mutual conclusion, Becca had been stifling her cries as little orgasms had been building up to the big one. I felt my balls tighten as I grew close to mine. She felt me throb and grow and surrendered to her body's need. She wailed as she came and felt my cum spurting into her core. She shuddered and shook in my arms. \n\nI rolled to the side, tipping the fragile craft, almost tipping the pair of us into the sea. Cold water splashing over the side, \"Christ how to spoil the moment,\" she snorted, then pulled me close to kiss me. \"I do love you.\" Then she stood and dived over the side and began swimming towards the beach. \n\nThe sand still retained some of the sun's heat, but we both shivered in the night air. I rubbed her down with my shirt before she slipped on her dress, the fabric clinging to her damp body. I pulled on my jeans, tossing my boxers into the sea to join her lost thong, then we headed back to the village and the yacht. I thought that for a brief moment I saw a shadow move in the distance, further up the path. \n\n<center>~~~~~~~~~~~~~~~~</center>\n\n The main act: in the present. \n\nThere had been a couple of major changes to our lives since that holiday. The first and most important was that our family had grown by one. We had created a merman as a result of our midnight swim. Nine months later we had a son who we named David Conrad James, but everyone called him Davy.\n\nThe other big change was the reappearance of my parents back into my life. Ever since my eleventh birthday and my first term at Kendrick Hall prep school, I'd only seen them a few times a year. Sounds odd, I know, but they were always travelling on Academic research trips. It wasn't that they didn't love me, I'd always known that they did, but they loved their shared passion for anthropology almost as much. \n\nMy father, Simon, suffered a minor heart attack. Usually, that wouldn't have been a big issue if he had received medical care at the time. Dad had his attack deep in the Amazon jungle. It took Mum four days to get him to civilization and proper medical care, and the resulting damage to his heart was more than it should have been. \n\nAs a result, my parents rethought their lives. Dad took an early retirement, due to his poor health. My mother went part time at the university and refused to travel. They put their large home up for sale and began looking for a smaller place closer to us. Most weekends they would stay with us as they looked at the local property. Jessica reveled in all the new attention she was getting, Davy was too young to appreciate it yet, but no doubt he would soon. \n\nMy business was going from strength to strength. The upside of which was I was able to employ a couple more forensic accountant investigators. A bonus for me was that I didn't need to travel as much and when I did they were usually short trips. If I were lucky, Rebecca would come with me, although recently she'd been too busy. \n\n<center>~~~~~~~~~~~~~~</center>\n\nIt had started five months earlier when Rebecca arrived home from work. Her face was drawn and pale; she looked uncomfortable. I got a token kiss; then she made a fuss over Jessica and Davy. I poured her a glass of wine, and she sipped from it absently as she got the daily update from Larissa, our au pair. \n\nThat evening after both children fell asleep and we were able to relax on the patio watching the summer sun dipped below the horizon. I asked her about her day\n\nThe first thing she said was, \"Guess who turned up at our office today?\" \n\n\"Do you want me to guess or are you going to tell me?\" \n\nShe smiled, but then she grew serious, \"Marcus Forde.\" \n\nI grew cold at hearing that name. For fun, I'd checked with Mary about our Mr. Forde after the holiday, and I discovered that his reputation as a woman chaser was justly deserved. One of the issues he'd been having when he'd joined us on the yacht had been that he'd seduced the wife of his boss, and he had a long history of chasing married women. \n\n\"Christ, the dickhead who turned up at the yacht. I thought he was long gone, whatever happened to him?\" \n\n\"My team had solved that issue before our holiday was over, so I never had any reason to see him again until this afternoon.\" \n\nI paused for a moment; I remembered the way he'd looked at Rebecca, and it had disturbed me. I'd been very relieved he'd not crossed our path again. \n\n\"Why did he come to see you,\" I asked. \n\nRebecca didn't answer me straight away. Instead, she played with her glass. \"Dad called me yesterday; Roger has a problem, a big one.\" \n\n\"Let me guess, Marcus has fucked up again.\" I tried not to smile.\n\nRebecca didn't smile, she just looked concerned which worried me. \"It seems like it; a couple of years ago Roger put Marcus in charge of a group of companies in Eastern Europe. The local authorities are investigating Marcus and the senior management for fraud and bribery of local officials. It's a serious crime in both Europe and Romania. The fines alone could be in the multi-million Euro range. Roger could even lose the companies.\" \n\nNow it was my turn not to smile. \"So Roger wants Conrad and Winter and Associates to defend him and his bloody nephew?\" \n\n\"In a way, the companies are part of a separate European division, she said, \"so, Roger is off the hook. As I'm based over here, Dad wants me to take the lead and defend Marcus and the rest of the senior managers.\" \n\n\"Oh, hell no,\" I said without thinking.\n\nRebecca gave me a surprised look. \"I don't get to choose my clients, Mike. I may be in charge over here but when Dad tells me to jump, the only answer I'm allowed to give is 'how high'.\" \n\n\"Becs, this has gone on too long. You don't need to work anymore; I earn far more than we can spend, just pack your job in.\" \n\nAs soon as I said it, I knew I'd gone too far. She stared at me; her lips were pale and tight. I didn't regret saying it; I just wished I'd approached the idea a bit more diplomatically, but it was something I'd been thinking about ever since Davy had been born. \n\n\"I'm not giving up my career,\" Rebecca snapped. \"I've spent too much time and effort to get where I am now.\" \n\n\"I'm not suggesting that you give up the law. I know how much you love that, but you don't need to work for your father, how about looking for a job locally? At least consider going part time and find someone else to handle this case.\" \n\nShe shook her head, and I knew that there was little chance I would be able to make her change her mind. I tried, though. \n\n\"We knew him for less than a day,\" I said, \"and as far as I could see he spent most of that time trying to seduce you. He's got a history of seducing married women. Now you'll need to spend months with him. Your team dealt with him last time, why can't they do it again?\" \n\n\"It's too big a case this time. You don't like him, do you?\" \n\n\"He gave me no reason to like him, did he?\" I gave her a questioning look. \"I guess that this is a big case for you, but I'm convinced that he'll use the situation to get close to you. Don't work on it on your own; get someone else to run the point for you.\" \n\nShe gave me an angry look in return. \"What hurts, is that you seem to think that I'll fall for his charming smile; don't you trust me?\" \n\nFuck, \"Of course I trust you; it's him I don't trust. Do you recall me telling you about Karen's friend Geraldine, the lawyer? She nodded, and I continued. \"When I mentioned Marcus, she thought his name sounded familiar and somehow linked to Geraldine. She asked her and Geraldine told her about a married local artist he tried to seduce.\" \n\n\"Mike, I'm not an impressionable schoolgirl, I can look after myself. I've got to take this case, Dad's insisting, but I promise I'll keep everything professional. Hell, he gives me the creeps, so you've got nothing to worry about.\" \n\nThere wasn't anything more to say about it, other than to retire to our bedroom and confirm how much we loved each other until we both fell into an exhausted sleep. \n\n<center>~~~~~~~~~~~~</center>\n\nThe next few months passed, seemingly without incident. Rebecca saw Marcus several times at her office in London, and she would come home vocal about her frustration with him. On four occasions, she and a couple of her associates flew to Romania to interview and take depositions from the senior managers who'd been arrested with Marcus. \n\nThe first time she'd flown to Romania, I'd asked her why she needed to travel if Marcus was in the U.K. \n\n\"The only reason Marcus was allowed to leave the country was that Roger posted a five-million-euro bond,\" she said. \"He won't do it for the others, so I need to go there to interview them.\" \n\nMid-November I got back from a two-week trip to Australia. A case I'd dealt with earlier in the year had gone to court, and I was a witness for the prosecution. I hadn't been keen on going, and I tried and failed to get Rebecca to come with me. \n\nRebecca was waiting for me as the taxi dropped me off at home. When I saw her, she looked drawn and nervous. Something had changed, and I instantly thought about Marcus. She hugged me and wouldn't let me go for what seemed ages. \n\n\"What's up?\" I asked. \n\n\"Just hold me,\" she said. \"I've just had a rough few days, and I'm so pissed off with Roger and Dad.\" \n\nI did as I was told, and after a few minutes l felt her begin to relax, and I was able to lead her into the kitchen and get her to sit down. \n\n\"Tea?\"\n\n\"Please.\"\n\nAs I prepared it for her, she gathered her thoughts. She never told me anything about her cases other than very general details. Today she broke her own rule which told me how upset she was. \n\n\"Roger has made a separate deal with the Romanian government behind my back. He's sold the companies involved to a group of Romanian businessmen and the government has dropped the charges against all the senior managers.\" \n\n\"So, Marcus gets off Scot free, the jammy bastard.\" \n\n\"Yes and no, the Romanian government have dropped their charges, but the European Commission has decided not to play ball and is going to carry on with their case against him. Roger's livid; he called Dad and told him that if Marcus doesn't get off, we won't get any more of their business.\" \n\n\"If it's so important to your father, why isn't he sending someone over to take the case?\" \n\n\"He can't; I am the firm's expert on European law, I'm also the only one who has the correct credentials for the European courts. Come on, you know it's why I work here.\" \n\nShit, I knew that I was just venting my anger on the wrong person. \"Is he guilty?\" \n\nShe gave me an exasperated look, \"Of course he is, but that's irrelevant as far as Roger is concerned. I've got my instructions. I have to get him off.\" Her expression changed to one that radiated a degree of nervousness that raised my sense of agitation. \n\n\"Why am I sensing that I need to be worried?\" I asked. \n\n\"You don't, only I'm going to need to spend a fair amount of time with Marcus, and I know you're not going to be happy about that.\" \n\n\"Too fucking right I'm not.\" \n\n\"Don't worry love; I'll keep it professional and all aboveboard.\" \n\n\"Hell it's not you I'm worried about, it's him!\" \n\n\"Mike, you've got nothing to worry about, I've seen him three times this week, and he's been the perfect gentleman each time.\" \n\nIt took me a while to take it all in, not helped as I was tired from the 24 hours of travel. \"Three times! \n\nRebecca gave me an entreating look. \"I love you and our children too much to let a silver-tongued asshole spoil our life.\" \n\nI drew her into a hug, \"I love you, too.\" \n\nThat's how we left it, both tiptoeing around our feelings for the next few days. I had no proof that Marcus considered Rebecca as anything more than his lawyer. I just had a gut feeling that given even the slimmest chance he would actively pursue her if he wasn't already. \n\n<center>~~~~~~~~~~~~</center>\n\nOver the next couple of weeks, I did the one thing I promised I would never do; I started a financial investigation into one of Rebecca's clients, our Mr. Forde. It's a lot harder when you're not given access to a company's records, but I have a pair of computer geniuses working for me who were more than happy to work on the dark side after I explained why. They warned me that their research was going to take a lot longer than usual. \n\nThey were still delving into Marcus a month later when the evening of Winter and Associates European branch annual Christmas party rolled around. This year, Conrad and a couple of the senior partners were flying over from America to attend. I suspected that Marcus's case had something to do with their decision to attend. All the staff and partners were invited. A couple of weeks before the party, the firm had decided to change the date to the second Friday in December. Something of a surprise as it had always been on the second Saturday in December. \n\nWhen Rebecca told me the change, I gave her a surprised look. \"I thought I told you I'm away the latter half of that week; I don't get back until Saturday.\" \n\n\"Christ, I thought that you were going to be back on Friday,\" she said. \"Is there any chance you can change the dates? I can't move the date of the party. Dad has insisted we hold it on Friday.\" \n\nI was sure I couldn't; there were personal reasons I needed to go, but I didn't want to tell her that. \"I'll see what my client says,\" I told her. \n\nI had no luck, so Wednesday afternoon I flew to Rome. The client was a small family run investment bank, and the owners were related to Francesca via her mother's side of the family. They handled a lot of Francesca's accounts, so I had a soft spot for them. I'd helped several of their clients out of tricky situations in the past at her request. This time they had the problem, they had discovered a large shortfall in their accounts and the brothers that owned the bank were refusing to contact the police. They'd been sitting on the discovery for some time waiting for me to try and find their missing funds. \n\n\"Signor James,\" the bank president said. \"We can't let anyone know; if they think their investments are not safe they withdraw their funds. It will ruin us.\" He looked nervous and admitted that several large transactions were coming up over the next few days and that they doubted they had the funds to cover them. As some of the missing funds belonged to Francesca, I was eager to solve the problem. \n\nBy Thursday evening I was sure no crime had been committed, their missing funds turned out to be an absolute cluster fuck of an accounting error. Over several months, funds had been transferred to a dormant account in error. It was as simple as a three being transposed to an eight in the account details. It took me most of Friday morning to prove it to the satisfaction of the bank's owners, and start the process of recovering the missing millions. \n\nI tried to call Rebecca and gave her the good news. Her assistant answered Rebecca's phone. \n\n\"Rebecca James phone, this is Marcia, can l take a message.\"\n\n\"Hi Marcia, it's Mike.\"\n\n\"Mike, I was sorry to hear you can't make it tonight. Did you want to talk to Rebecca? Only she's in a meeting about the Forde case, and I can't interrupt it.\" \n\nI sighed, shit that meant she was with Marcus. \"That's a pity, only I've got some good news. I've finished here early so it looks like I should get back in time to make the party.\" \n\n\"Oh that's nice, she'll be so happy you can make it. I'll let her know. So you will be here in time?\" She queried. \n\n\"I'm booked on a flight after lunch. I won't have time to go home to change, but I've got a decent suit with me. I'll come to the office; I should be there late afternoon.\" \n\n\"It's not at the office this year,\" Marcia said with a hint of surprise in her voice. \"Didn't your wife tell you?\" \n\nIt was the first I'd heard that it wasn't at their offices and I wondered what else I hadn't been told. I told Marcia I hadn't been aware and made a note of the new address. It seemed that it was going to be at a restaurant in Knightsbridge. \n\nOf course, the best-laid plans of mice and men: the flight home Friday afternoon was seriously delayed because of a French air traffic controller strike. \n\nAgain, I tried to call Rebecca from the departure lounge. This time it went straight to voicemail. \"Hey love, I'm sorry, it looks like my flight's been delayed. I'm flying into Gatwick; we are due to take off at six. It's a two and a half hour flight. I'll get the Gatwick Express into town and come straight to the party. I'll give you a call when I land.\" \n\nAs it was, the flight was delayed a further hour, and we landed at eight-thirty. I only had a carry-on bag, so I was through immigration and customs in less than half an hour. I paused for a moment to gather my wits. It was a lot later than I expected; should I just give up and head home? As I pondered, the address system announced the next departure of the Gatwick Express train service to London would depart in 10 minutes. I found myself hurrying across the airport building towards the station. The journey into London only took 30 minutes. A 20-minute taxi ride and I alighted at the entrance of the restaurant. \n\nI was surprised to see a sign on the door telling the world that the restaurant was closed for a private event. I'd eaten here before, and it was a bit large for the limited number that was usually at the Christmas party. I'd known that there were private dining rooms and I'd just assumed the party was in one of those. The rather large man, effectively blocking the doorway while eying me suspiciously was further evidence of the private nature of the event.\n\nHe said, \"Private party,\" as he held out his hand to stop me entering. \"I need to see an invite before I can let you in.\"\n\nWhat invite, I thought? Rebecca or Marcia hadn't mentioned anything about an invite. Then I remembered I'd told Marcia that I'd call Rebecca when I arrived. I fumbled for my phone and found I'd forgotten to switch it back from the flight mode. There were no missed calls or messages. I called her again; her phone only rang once before going straight to voice mail. Crap, I left her a brief message to say that I was here. \n\nI turned back to the man in the doorway. \"Look, I was supposed to come with my wife, Rebecca James,\" I explained. \"She's a senior partner of the firm that's holding this party. My flight was delayed, so I assume she's already here and has got my invite... or did she put my name on a list?\" I asked hopefully. \n\nHe shook his head, \"I don't have a list mate, as far as I understand it's invite only. I've got strict instructions, no invite, no entrance, I can't do anything.\" \n\n\"Can you just get a message through to her, or anyone from Winter's; they will vouch for me.\" \n\nHe hesitated and then spoke briefly into a microphone pinned to his lapel. He touched his ear as he listened to a response. His face resumed its blank expression, and he studiously ignored me. ",
        "It was a good couple of minutes later before the door cracked open. A woman I didn't know eased out of the opening and gave me a studied look. \n\n\"You say you're Rebecca's husband,\" she said as she looked at her iPad. \"Can you prove it?\" \n\nI gave her a surprised look, \"Of course I am, who the hell are you?\" I fumbled in my pocket and passed her my passport. \n\n\"Check the name and my emergency contact,\" I told her. \n\nShe did and compared my name against a list visible on the iPad. Then gave me a confused look. \"I'm Mia, the event planner,\" she said. \"I've been coordinating this party for your wife, only I was under the impression...\" her voice trailed off. \n\nShe gave me another look, \"I think I need to check this,\" she said. \n\nI was getting annoyed, I pointed at the iPad in her hand and snapped, \"Am I on that list?\" \n\n\"A Michael James is on it,\" she agreed. \n\nI pointed at the passport in her other hand. \"And am I Michael James?\"\n\nShe gave me my passport back and looked at me for a long moment. Then she said, \"It seems you are.\" She turned to the doorman, \"You can let him in Pete; he is who he says he is, and he's on the invite list.\" \n\nMia held the door open for me, and I entered the lobby, pulling my carry-on bag behind me. I heard her mutter to Pete, \"This could get interesting.\" I couldn't make out his reply. What was going on, why could it get interesting I wondered. \n\n\"Do you want to tell me what's going on,\" I asked. \"Why all the security for a little office Christmas party? There's never been any for any of the previous parties?\"\n\nShe laughed at me. \"Well, there's never been a guest list like this one before.\" \n\nWhat? Why? This is just supposed to be for the staff for Christ sake. Although it's the first time they've taken over a restaurant, I thought.\n\nMia took a second look at me, \"Are you sure you don't know what's going on? This party's not just for the staff. There's a lot of important clients here as well.\"\n\nNow it was my turn to look stunned, \"Clients!\" Then I took in the lobby, empty except for a second security guard and a woman sitting at a reception desk. The sound of music came from behind the closed double doors at the far side of the room. \n\n\"Yes, Rebecca, sorry Mrs. James, contacted us a couple of weeks ago to organize this after her father insisted she invite a select group of the firm's clients. My brother is one of the firm's associates, and he recommended my company to organize everything.\" \n\nRebecca sure as hell hadn't mentioned anything about adding clients to the guest list. In fact, she'd not mentioned anything. I had to wonder how long she'd known about the changes to the party and what else she hadn't told me. I shrugged off my coat, and Mia asked the woman at the desk to look after it and my bag. \n\n\"At least you're wearing a suit,\" she muttered. \n\nI gave her an irritated look, resisting the 'fuck you' that pressed at my lips. Did she think I was some country bumpkin? \n\nThe main room of the restaurant had been given the fantasy Christmas decoration, once over. A large Christmas tree dominated the room. A dozen or so large indoor palms had twinkling fairy lights wound around their trunks. The majority of the tables had been moved to one side of the room, leaving a space for the couples dancing in front of a low stage. There was a live group playing, that was the source of the music I'd been hearing. Obviously, the dinner was over as the tables held only the remnants of a meal. Empty dessert plates, coffee cups, bottles of wine and glasses were scattered about.\n\nAs I glanced around the room, I was able to recognize several of Rebecca's high profile clients from the newspapers. Rebecca was usually fairly reticent about naming the firm's clients, so I was quite surprised to see who some were. Then I spotted an unwelcome face, that of Roger Donaldson. With a sinking feeling, I thought that if he was here, then there was a good chance that Marcus was as well. Was that why Rebecca hadn't mentioned the additions to the guest list, she was here with him!\n\nMy eyes went on overtime as I scanned the dimly lit room. There was no sign of Marcus, but far more worryingly, nor could I see Rebecca. I spotted her father at a table and hurried over. \n\nHe gave me a shocked look when he saw me. \"What are you doing here? I thought you were in Rome, Michael!\" He didn't sound pleased to see me, and that irritated me.\n\n\"And it's nice to see you, too,\" I responded sarcastically. \n\nHe blinked at me, \"Rebecca was sure you wouldn't be here,\" he said in his defense. \n\n\"Well if you hadn't changed the date it wouldn't have been an issue,\" I replied. \"I didn't think I would be here, but I managed to finish my trip sooner than I'd thought. I got back a couple of hours ago. I left a message with Bec's assistant that I'd be here, didn't she let you know? I'd have been here a couple of hours ago if it hadn't been for the bloody French air traffic controllers.\" \n\nI looked around. \"Have you seen Rebecca; she's not answering her phone?\" \n\n\"She was around a few minute ago, she and Marcus were talking.\" \n\nCrap, the last thing I wanted to hear. I tried calling her phone, and again it went to voice mail.\n\n\"Don't worry, she's fine,\" Conrad said, but there was something about the way his eyes flicked around the room as he spoke that made me nervous. \"Sit down, Mike and have a drink. Have you eaten; I can see if they can rustle something up for you.\" He placed a hand on my arm and tried to pull me down to a seat beside him. \n\nThere was a lull in the music, and from the other side of Conrad, I heard Roger say to him. \"What the hell is he doing here, you said he wouldn't be here.\" \n\nConrad glanced at him and then said to me, \"Sit down for God's sake; she'll be somewhere close. If she hasn't turned up in a few minutes, I'll send one of the juniors to find her.\"\n\nHe gestured in Mia's direction, and she came over. \"Have you seen my daughter?\" he asked her \n\nShe shook her head, \"Sorry no, not recently; I know that she's around.\" she replied, but her eyes never left mine as she spoke. \n\nConrad said, \"Could you see if you can find her. Please let her know her husband is here.\" \n\nShe gave him a worried look and agreed.\n\nWhy was I getting the strong impression he didn't want me wandering around the room looking for her. Well fuck him I thought, and I turned back to my scrutiny of the large room. \n\nI saw Mia stop a waitress and speak to her. The girl hesitated and then gestured towards the far side of the room. Mia hurried across the room and disappearing behind a pair of large potted palms that I recalled shielded the entrance to one of the private dining rooms. I guessed she thought she knew where Rebecca was. I followed, but then I paused when I reached the plants. If she wasn't with Marcus and was in a legitimate conversation with another of the firm's clients and I went in heavy-handed, it would be embarrassing for both of us. I heard voices and listened. \n\nThe first was Mia, \"Rebecca, can I have a word with you in private.\" \n\n\"Can't you see I'm a bit busy, isn't it something you deal with it?\" Rebecca said. \n\n\"It's urgent; your father sent me to get you,\" Mia stressed. \n\nThe urgency in Mia's voice must have convinced her because she said. \"Marcus, can you be a darling and see if you can find me a drink? Tell you what see if you can find a bottle of champagne. I'm in the mood for some bubbles.\" I heard Marcus reply, but I couldn't make out all of his words. I did hear the last sentence as he left, and I felt my face redden in anger. \n\n\"Okay, but I want a kiss and another of those dances when I get back.\" There was a sound of a giggle, and I saw a figure exit the room. \n\n\"So, what's so urgent?\" Rebecca said a moment later. \n\n\"Rebecca, what's going on?\" Mia asked. \"I thought the guy you just sent away was your husband, at least he sure acts like he is, but he isn't is he?\" \n\n\"Not that it's any of your business, but no he's just a good friend. Why all the fuss, why is my father looking for me? He knows I'm with Marcus.\"\n\nHow long had he been a good friend of Rebecca's? The implication of that statement sent a cold shiver down my spine, and it sounded it was worse than that. I'd obviously gotten complacent these last couple of months.\n\n\"It's not my business,\" she agreed. \"Only he's not your husband is he? Your real husband is here. He's just arrived, and he's one very pissed off camper. You forgot to tell him he needed an invite. Security wouldn't let him in.\" \n\n\"Fuck, Mike can't be here, he's supposed to be in Rome. Is he still outside? \n\n\"No, his name is on the guest list, and he showed identification, so I had to let him in.\" \n\n\"He wouldn't have known he needed an invite. If he'd been here, he'd have arrived with me so he wouldn't have needed one. Are you sure it's him? Oh crap, Mike's going to be so pissed at me if he finds out Marcus is here; he can't stand him.\" \n\n\"It's him; Pete said he was trying to call you while he was waiting outside.\"\n\nI was frozen to the spot, I wanted to go and confront her, but I couldn't get my legs to cooperate. I also thought I'd get a better idea of how far their relationship had gone without the expected evasions I anticipated when I confronted them. There was a brief pause from their side of the plants; then I heard the snap of a bag opening. \n\nRebecca hissed, \"Oh crap, I left it on silent. There are several missed calls from him. Shit, shit, and I didn't read the message she left for me, he was on a flight this afternoon.\"\n\n\"Oh, well he's sure as hell surprised to find out that this isn't a cozy little office party, and your father has told him that you are with Marcus.\"\n\n\"Why would he do that? Shit, Mike was on a trip when Dad started inviting the clients,\" came Rebecca's anxious voice. \"With everything that's been going on, I forgot to tell him. Then there was no way I was going to tell him that Marcus was one of the guests after I found out he couldn't make it.\"\n\nMy anxiety increased at the next voice I heard. \n\n\"Darling, I managed to liberate a bottle,\" said Marcus. \" I only brought two glasses, let's find somewhere quiet to drink this excellent bottle. Then I want that kiss and dance you promised me.\" \n\nThat was it; I'd had enough of this bullshit. I moved around the plants and into the doorway so that they could see me. Marcus was in the process of sliding his arm around Rebecca's waist, and she was pushing it away. She blanched and gasped. A bit of an overreaction I thought, as she'd just been told I was here. \n\nShe was wearing a dress I'd never seen before, a dark blue knit, figure-hugging version of the classic little black dress. A shorter dress than she usually wore, with a plunging neckline, the hem not reaching mid-thigh. Her legs were clad in shimmery black tights or were they stockings, I couldn't tell. A sexy, sensual outfit, one she obviously wasn't wearing for my benefit. Marcus quickly stepped away from her, placing Mia between us. \n\n\"That's just fine,\" I said through gritted teeth. \"Bec's darling and I will only need the two glasses. It looks like we have a lot to talk about so now fuck off home, Marcus, and leave the bottle. I don't want to see you near my wife ever again. You are going to need to find someone else to keep you out of jail as she is off your case.\" \n\nI stepped towards him, and he flinched back. Marcus stepped back even further at the anger in my voice. Rebecca gave me a scared look. Mia touched a finger to her ear and said, \"Security I...\"\n\nI pulled Mia's hand down. \"That better be you calling security to kick this asshole out,\" I told her. \"Anything else and I'll make your life a misery.\" \n\nMarcus blustered and said, \"I'm an invited guest here, it's not my fault if your wife finds my company more interesting than yours.\" \n\n\"Fuck you,\" I spat, and caught his arm. \"I'll throw you out myself.\" \n\n\"No, you won't,\" came Conrad's voice from behind me. \"If anyone's leaving it'll be you. I'm the host, and I won't have you upsetting my guests.\" \n\nI spun around to face him. \"Guests are supposed to behave themselves. So are you condoning the fact that this asshole has apparently spent the entire evening trying and seemingly succeeding to seduce my wife, your daughter?\" \n\n\"Don't be daft, Marcus would never do that.\" \n\n\"Yah right,\" and I pointed at Mia, \"even she thought that asshole was your daughter's lover by the way he was acting around her.\" \n\n\"Nooo,\" Rebecca cried. \"He was just friendly; he's not my lover.\"\n\nConrad spoke at the same time, \"Nonsense, your heard my daughter. I'm sorry, Michael, but if you are going to make baseless accusations, you need leave and take some time to cool down. I won't have you making a scene. I've got too many important guests here.\" \n\nRebecca was shaking, and Mia was supporting her. To one side of them, Marcus stood smirking at me. That was like a red rag to a bull. I made a move in his direction, then thought better of it. I turned back to Conrad. \n\n\"Conrad,\" I said through gritted teeth. \"If you put your business and this asshole before my family and me then you are no longer welcome in my life.\"\n\nRebecca whimpered, and I said to her, \"I have no idea if this is some fucking game you and father are playing, but I won't be part of it. I warned you about this cunt and his womanizing, but it seems you know better than me and my friends.\" \n\nShe stepped towards me, and both Conrad and Marcus put out hands to stop her. I stepped forward and took hold of her arms to keep her at arm's length. I wanted to hug her but I couldn't. \n\nShe spoke softly but earnestly in my ear, \"Mike, I love you, nothing happened nor was it going to, it was just something I needed to do for the firm, but I can't just get up and leave right now; I'm the host.\" \n\n\"Don't compound your mistake,\" I snarled, \"you're not the host. You heard your father, he is! You have two choices, and only one of them is acceptable to me. Leave with me now, as apparently, I'm not welcome here. Or stay, and if you do, don't bother to come home!\" \n\nShe clutched at my arm to prevent me leaving. \"Mike, please, I need a while to sort this out, I beg you, don't make this any worse than it is.\" She fumbled in the clutch bag she held and handed me a room key. \"Look, there's a room booked at the Park Tower hotel in my name; it's just down the road. I need you to wait there for me there while I deal with this.\" \n\nThe implication she had a room nearby sent a chill through me. My voice was harsh with barely constrained rage. \"Why the fuck do you have a room for tonight? Was it for you and him?\" \n\n\"No, nothing like that, Dad booked it for me in case it got too late, and I didn't want to go home. We always book a few rooms as a precaution, Christ, Mike surely you remember we used one of them last year.\" \n\nI ignored her words and dropped the key card on the floor. \"I'm going home; there's no way I'm going to spend the night in a room intended for your lover. I'm getting a cab and going home. Then I'm going to take my children and go away for a few days and decide what I do next. It's your choice, come with me now or stay, if you're not outside in five minutes, I'll know exactly where I stand.\" \n\nShe moaned, \"No, please don't go.\" \n\n\"You've got as long as it takes me to get a cab,\" I told her. I stepped away from her clutching arms, straight into Conrad. \n\nHe pushed his finger into my chest as he snapped, \"Where the fuck do you get off, don't think you can threaten my family or me.\" \n\nWhat the hell was going on with him, I'd always thought that we'd had an okay Father in law, Son in law relationship. We'd never been best friends, but we had gotten on well enough. \n\n\"I don't make threats,\" I said. \"If you are willing to risk your daughter's marriage just so you can appease clients, you no longer have a place in my family. You and Pam are the only ones who are going to suffer as I'm damned if I'll let you see your grandchildren.\" \n\nConrad laughed, \"I'll see that you won't have a family, I'll get the courts to declare you an unfit parent and get my grandchildren taken away from you.\" \n\nMy stomach lurched and I looked at Rebecca whose face was white. Conrad glanced over to where Marcus was standing; I followed his gaze. Roger stood beside Marcus, and when he saw Conrad was looking at him, he gave a brief shake of his head. \n\nConrad's lips tightened, and I heard him tell Mia to get security. Then he said to Rebecca. \"Don't worry; I'll have someone at your home in the hour. He's not taking my grandchildren away from us.\" \n\nI stepped close and whispered to him, \"Remember what I do, it's even easier for me to destroy a company than it is to save it.\" \n\nHe gasped and for a moment looked scared. Then his eyes fixed on Roger, and he seemed to draw resolve from that look. \n\n\"I don't have a choice, it's either you or I, and my daughter knows her place.\" \n\n\"Fuck you!\" I left not looking behind me. If she wasn't following me out than I knew where I stood. The whole situation was bizarre and heading out of control.\n\n\"My bag and coat,\" I snapped at the woman at the reception desk. As I waited for her to retrieve them the door behind me opened. I turned hoping that it was Rebecca. No such luck, Marcus stood there with a broad grin plastered across his face. \n\n\"You need to accept you've lost this time, Mr. Accountant. She and her father know I'm a better choice for her.\" \n\nI snarled and stepped towards him, my fists clenched. I was brought up short by Pete's large hand on my shoulder.\" \n\n\"Sorry sir, I have my orders. I'm afraid you need to leave,\" he said. \"And you,\" he pointed at Marcus who'd stepped back and was standing in the open doorway. \"You need to get your ass back in the restaurant before I lose my temper. I don't like pieces of work like you.\" \n\nThe receptionist coughed to attract our attention and pointed at my bag and coat on the counter. Collecting them, I pushed my way through the doors and into the cold, dank chill of a December night. Pete watched me closely as I waved down a cab. I hoped that the door behind me would open and Rebecca would hurry out after me. \n\nA black cab pulled up at the curbside. Once seated comfortably in the back, I passed the driver a \u00a350 note. \"I need to go to the south coast mate,\" I said. \"It's a small village a few miles outside of Brighton. 'This is your tip; I just need you to wait five minutes before we leave.\" He grunted his agreement. \n\nPulling out my phone, I called Karen, praying that she was home and not travelling. My prayers were answered. \"I need you to do something for me,\" I told her, the urgency in my voice forestalling any complaints from her. \n\n\"I know it's late, but I need you to go to my place. Get the children, pack a bag each for them and take them back to your place. You need to do it now.\" I stressed.\n\n\"But...\" \n\n\"Karen, please just do it, I'll explain why when I see you. I'll try and call you later, and under no circumstances are you to speak to Conrad.\" Christ, I hope I wasn't over reacting. There had been something about Conrad's threat that rang true. I wasn't going to give up my children without a fight, even if it looked like Rebecca had given up on our marriage. \n\n\"Okay I'm going, but I want an explanation when I see you,\" she said and put her phone down. \n\nI sat in silence until the driver said, \"It's been more than five minutes mate, how much longer do you want me to wait?\" \n\nI looked at the closed door behind Peter's menacing shadow for a moment longer, willing it to open. I sighed and wiped away a tear that was beginning to blur my vision. \n\n\"Let's go; she's made her decision,\" I said sadly. \n\nHe grunted in return and pulled away from the kerb. I sank back into the seat and stared aimlessly out of the window at the dark shop fronts as they passed by. He slowed down as he approached a red light a little way up the street and glanced in his mirrors. He turned his head in my direction. "
    ],
    "authorname": "Andyhm",
    "tags": [
        "legends day story",
        "unfaithful wife",
        "loving husband",
        "marriage under attack",
        "predatory man",
        "attempted seduction",
        "boat sex",
        "naive wife",
        "marcus"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-accountants-wife"
}