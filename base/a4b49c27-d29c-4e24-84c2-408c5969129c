{
    "title": "The Runesmith Chronicles Ch. 24",
    "pages": [
        "Welcome back!\n\nThere's a place in this chapter that feels like there should have been a fist bump...\n\nFor those of you reading The Runesmith Chronicles for the first time I recommend going back and starting at Chapter One. Mostly so you have a better understanding of how things like the magic system works and what's going on as I often reference earlier chapters.\n\nI update my Bio with the latest Chapters and projects I'm working on each time I put up a new post.\n\nAs always votes and feedback are greatly appreciated!\n\nEnjoy!\n\nBlu\n\n------\n\nEdited by: Old Fart\n\n------\n\nThe boys made short work of constructing Merantha's pyre. They even went so far as to have the harpies go and search the forest for wood that was pleasant and aromatic when burned. Perra thought it was a wonderful gesture considering only one of them, Tain, had ever met Kal's mother. That had only been for a couple of minutes on one of the rare occasions Merantha had been out in the main room and he'd had to ask Kal a question.\n\nPerra had taken to calling them 'the boys' shortly after they came to work at the farm. The irony that she was actually the youngest of all of them was not lost on the hired hands or the harpies. Instead of being insulted, they wore the moniker proudly. Telling Kal at one point that there was a degree of status they'd never experienced before among the townsfolk for being one of Master Kal and Lady Perra's 'boys.'\n\nPerra and Ikuno watched from the steps of the porch as off in the distance one of the harpies landed next to a young man with an axe hung through a loop on his belt. Standing on one leg she handed him a twig, after a quick inspection and a sniff at the end where she had broken it off, he nodded. The young man turned his back to her and held his arms out. The harpy then carefully hopped onto his shoulders and a moment later they were climbing into the air heading back the way she had come from.\n\n\"They make a good team,\" said Ikuno, thankful for something to take her mind off recent events.\n\n\"Uh-huh,\" Perra replied absently as she leaned against one of the large poles holding up the roof of the porch.\n\n\"Are you going to be okay, Perra?\" Ikuno asked.\n\nPerra gave her a weak smile, \"I'll be fine. No offense intended towards Kal, but losing my own mother and father was much worse. It's strange how different it feels, when my mother and father died I was so hysterical that the apothecary had to give me something to calm me down. Now,\" Perra put a hand over her chest, \"it's more of a dull ache, knowing I'll never see her again.\"\n\n\"You and Kal were probably lucky that you knew this was coming for some time, it wasn't sudden like with your parents.\"\n\nPerra nodded, \"That's true. Still, I can't help being worried about Kal. He was too young to remember his father and grandparents dying. In a way, this is his first time dealing with this kind of loss.\"\n\n\"Kal is far more resilient than I think you give him credit for. There may be some rough spots in the near future but I'm certain he will be fine in the end.\"\n\n\"I don't doubt you, however, I do wish that Master Jurien hadn't been so insistent on taking care of the legal part of all of this right now. I can feel Kal's anger bubbling just below the surface.\"\n\nIkuno glanced at the door behind her with a frown before nodding in agreement.\n\n------\n\nKal was sitting in the main room thinking the exact same thing as Perra while Jurien explained what was going to happen next. \"The next time the council convenes you will be written in as the new owner of this property and a new writ of ownership will be drawn up to reflect your entire holdings. After that, it's just a matter of updating the maps. All that new paperwork will need your mark to make things official once it's been drafted.\n\n\"Though I hated to see Mera go, It was a good call to have me and Nina here. I know that there were a couple of your mother's suitors from years ago who had eyes on this property once they heard she fell ill. Now, if they raise a challenge to you taking possession it's not just your word against theirs but mine and Nina's as well.\"\n\n\"It was Perra's idea,\" Kal mumbled, staring down at his hands.\n\n\"You're a lucky one with that girl, she's got a good head on her shoul...\"\n\n\"You said, someone might challenge my claim to this property?\"\n\n\"Aye, not that they would have much to say with me and the wife being here to support you.\"\n\n\"I understand that part, but how could they expect to have any kind of claim?\"\n\nJurien sighed, \"I wish your mother had told you about this instead of leaving it up to me. Women aren't supposed to be landowners, Kal. When your mother sold her parents' farm she used most of that money to pay off some of the council members to have her installed officially as your steward. This allowed her to be a landowner until either she passed away or you asserted your claim to the land once you came of age. I'm surprised she never brought it up.\"\n\nKal's hands clenched, \"Oh, she did, many times in fact. I was just too stupid to understand what she was saying and hated the idea of the farm not being hers. As usual, I was being a child about things and not listening. After a while she stopped bugging me about it, that was shortly before she started getting sick.\"\n\nJurien looked at the boy with concern, Kal had yet to look up from his hands. Clearing his throat, he continued, \"The reason there might be challengers is that what she did wasn't exactly \"legal\" and a few people found out about it. Stewardship is supposed to be reserved for nobles and the such, not commoners like us. Also, stewards of male heirs are supposed to be men themselves. People could say that the property was never truly hers to pass on to you because she never should have been allowed to keep it without marrying again.\"\n\nKal watched as his knuckles turned white. \"Fine, let them come,\" he said through gritted teeth, \"if they want to dirty my mother's name after all she did for me then let anyone who challenges my right to this property know that, in turn, I challenge them to an old-fashioned duel.\" His voice dropped into a snarl, \"Just to keep things interesting I won't use any magic either. They can't claim my land if they're dead.\"\n\nJurien leaned forward and covered Kal's hands with his own, \"That's enough, Kal, you won't be killing anyone.\" It took everything in his power not to flinch away from the glowing blue eyes that looked up at him. The apothecary could see the anger in the boy's face and immediately regretted mentioning the possibility someone might try to interfere with his inheritance. The simple fact was that, regardless of his and Nina's word, the chances of someone speaking up against the young mage were slim to none. Even ignoring the excellent reputation Kal had built in town, most people were quite aware that pissing off a wizard was rarely conducive to a long and peaceful life.\n\n\"I know that look,\" said Jurien, \"I wore it when my own father passed away. Angry at the world and willing to punch your way through a tree if it got in your way.\"\n\nKal slowly nodded, that was a fairly accurate description of how he felt right now.\n\nJurien leaned back in his chair, \"Back then, I ran. Saddled up one of the horses and damn near rode it to death. Screamed my head off and bawled like a newborn babe till I couldn't scream or cry anymore.\"\n\nKal glared at him, \"Is that what you suggest I do? Run away?\"\n\n\"No,\" said the apothecary, shaking his head, \"You'll need to be back by sundown to say your final goodbyes. I am suggesting that you burn off some of that anger you're keeping bottled up before you hurt someone you care about more than you already have.\"\n\nKal's eyes narrowed, \"What do you mean I've been right here since mother passed.\"\n\n\"Think about your women. If what Lady Perra said is true about this 'bonding' thing, they can't be enjoying your mood.\" Master Jurien knew it was mildly unfair to use the women against the boy, however, from the look on Kal's face, it worked.\n\nKal closed his eyes for a moment, looking closely through the bond at each of the girls. They all told the same story, they wanted to console him and be supportive during this difficult time but kept quiet in fear of turning his anger towards them. Cursing himself for being blind to the feelings of the people he claimed to love he stood up and willed his cloak from the peg where it hung by the door to his hand.\n\nWithout even glancing back at Master Jurien he walked out the door, stopping next to Ikuno and Perra who were still sitting on the steps.\n\n\"Kal?\" Perra quietly asked when he didn't say anything for a minute.\n\nHearing her voice, he looked over at Perra, then Ikuno, then off toward the northeast, roughly in the direction of Aradelle, Bea, Gerda, and Bas. \"Forgive me, but I need to be alone. Truly alone. I'm sorry.\" Perra looked on with dismay as his thoughts faded from her mind. Ikuno, however, doubled over, a look of pain etched on her face.\n\n\"There I go again,\" said Kal bitterly, \"hurting the ones I love.\" He put two fingers under her chin lifted her head up till she was looking into his eyes.\n\n\"Please, don't,\" she whispered.\n\n\"It's only for a few hours. I need this Ikuno.\"\n\nThe oni took his hand in hers and pressed it against her cheek, then kissed his palm before letting go. \"Hurry back,\" she pleaded.\n\nKal nodded and stepped off the porch as his haste rune spun up. He looked north toward the trail he and Ikuno had taken along the base of the mountain ridge then south toward Telsin and the main roads extending out from the small hamlet. Deciding on north, Kal streaked off towards the forest edge. Perra and Ikuno watched as he launched himself high up into the air with a flash of red light from the strength rune, then used his cloak to pick a landing spot among the trees. He dropped below the canopy and a few moments later they saw him jump high above the treetops again a bit further on.\n\nOnce Kal was out of sight and she turned back toward the oni, \"Ikuno! Are you alright?\" asked Perra in a worried tone. The large blue woman looked like she was on the verge of tears.\n\n\"No, I'm not. None of us will be until he lets us back in. This is the first time since he claimed me that I haven't been able to feel him, it's like a part of me is missing.\"\n\nSeeing the pain in the oni's eyes Perra suddenly wondered if she really wanted to share a similar bond with her lover.\n\n------\n\nKal reached the base of the mountain range and looked to the east and west. West led to Felli's mountain cavern and east would take him to the fissure that led to Silma. Overall it didn't matter so Kal faced east and sped off along the game trail. Trees and shrubs whipped past him at breakneck speeds as the world became blurry. Taking Master Jurien's advice he felt the anger slowly drain out of him as his tears were stripped away by the wind. Remembering the second part of what the apothecary said, he took a deep breath...\n\n------\n\nThe sun was just disappearing beneath the treetops as Kal arrived back at the farm. Perra had been with Ikuno when he opened up the bond and told them he was on his way home, the shift in the oni's mood had been nothing short of stunning to the girl. She knew well enough that Ikuno loved Kal as much as she did but the look of pure joy on the oni's face when Kal started talking to them again showed Perra just how important he was to the large blue woman. As he crossed the fields, approaching where they were standing waiting for him, for just a moment Perra saw that same kind of happiness in his face when he looked at Ikuno. Her heart skipped a beat when she saw a similar expression as his gaze turned to her.\n\nThey built his mother's pyre right next to where his father's had been, on the southwestern edge of the fields. As Kal approached he noticed that there were a few more people there than anticipated. Perra, Ikuno, the boys along with the harpies, and Master Jurien with Lady Nina were all expected. However, Rone, Marda, and Felli were not.\n\nKal exchanged handshakes and thanks for being there with Rone and Marda, who now had a bit of a baby bump. Felli wrapped her wings around him in a tight hug, her eyes brimming with tears for the young mage's loss. After greeting Rone's family he went and stood between Ikuno and Perra. Jurien and Nina both said a few words about his mother then offered to let him speak. Kal shook his head, not trusting his voice. Jurien motioned to one of the boys, Corben, who then handed the apothecary something.\n\n\"Would you do the honors?\" Master Jurien asked, holding out the flint and steel.\n\nKal nodded but pushed the firestarter aside. Walking up to the pyre he saw that Lady Nina had done an excellent job, his mother looked wonderful. The apothecary's wife had put her into one of her favorite dresses with a crown of summer flowers that Perra had picked and woven together circling her head. There were more flowers scattered about her body as well as the platform where Ikuno had laid her. As a final show of respect, the oni had offered to be the one to move the body from the bed to here,\n\nHe reached up and placed his hand over his mother's, \"Say hello to father for me.\"\n\nStepping back, he summoned a ball of flame in each hand. Kal poured more power into the flames until they were columns that shot up over his head. Carefully turning his hands, he directed the jets of fire at the base of the funeral pyre and began walking around it, quickly igniting all of the tinder the boys had placed near the bottom. When he came back to where he started, the flames shooting from his hands sputtered and died as he ran out of magic, having burnt through most of it during his cathartic run earlier.\n\nPerra and Ikuno came up on either side of him, both putting a hand on his shoulder. \"The boys said they would keep an eye on things,\" said Perra, \"Let's go home.\"\n\nKal silently nodded as he allowed them to lead him away.\n\n------\n\nThe world felt gray the first week his mother was gone. Little things that he had never paid attention to were now stark reminders that she was no longer here. Her chair in the living room, pots and pans that Perra now used to make their meals, even crawling into bed at night knowing that this had been his mother's bed for years sent him sinking into depression.\n\nBy the second week, he began to pull out of his funk. The ache from her loss was still there and his old room was still off limits, but he began smiling more and even started being more affectionate towards Perra.\n\nTowards the end of that second week, he woke up to an empty bed and the smell of breakfast cooking. After finishing up his morning routine he discovered that food was not the first thing on his mind. Coming up behind Perra as she worked in the kitchen he slid his arms under hers and cupped her breasts through her dress as he began to kiss and nibble on her neck.\n\nThe young woman moaned at the sensation, \"Please tell me you aren't joking,\" she whispered.\n\nHe pressed up against her rear, \"I want you in bed, now.\"\n\nPerra looked around the kitchen at everything she had going on, \"Nope,\" she said, hiking up her dress and leaning over the dining table. \"You can take me to bed after breakfast. Right now, I need you inside me. I wasn't expecting anything this morning, so I might be a little dry.\"\n\nShe had anticipated that Kal would just start out slowly and squealed with surprise when he pulled her cheeks apart and took a couple of long licks from her clit all the way up to her rear entrance. Once he was sure she was ready he happily sunk his hard prick into her willing pussy. Since she was still in the middle of cooking he decided to make a game out of lasting until the food was done, this turned out more difficult than expected after going without for nearly two weeks. Perra made things easier by calling for him to stop every so often so she could stir a pot or check on something baking before bending back over the table and shaking her bottom at him in invitation. It wasn't until she told him breakfast was almost ready and he needed to finish up that he realized she was making quite a bit more than what the two of them could eat. Putting it out of his mind for the moment he slid into Perra's sex and grabbed her hips, slamming into her hard and fast. After nearly an hour of slow buildup, Kal came with a yell as he buried himself inside her pussy and did his best to fill her up for the first time in two weeks.\n\nPanting he leaned over and rested his hands on the table as Perra hummed contentedly while milking him with her sex. \"I think someone needed that as much as I did,\" she purred, resting her head on her arms and relaxing as Kal caught his breath.\n\n\"You didn't...\"\n\n\"No, I didn't,\" Perra lifted up and twisted partway around so she could look at him, \"and you shouldn't worry about it. I'm sure you will take care of that many times over today,\" she said smiling. \"As I said, I wasn't expecting you to be in this kind of mood, so I wasn't ready.\" She turned back around and stretched out like a cat on the tabletop, \"After two weeks, like hell I was going to let this chance get away.\"\n\n\"You make it sound like we won't be able to do this again.\"\n\n\"What time of the month is it, Kal?\"\n\n\"Aww dammit...\"\n\n\"Yup, that's why you are going to take me to bed and make love to me the rest of the day as soon as the girls have left.\"\n\n\"The girls?\"\n\n\"The harpies. Much as I want you to stay right where you are, they should be here soon, so we should at least be presentable.\"\n\nPerra tightened up as Kal slowly pulled back with a disappointed groan. Once he slipped free she spun around and went to her knees. After giving him a thorough inspection, she took his half-hard prick into her mouth and gently cleaned him with her tongue. When her tongue had been over every inch of him numerous times, and Kal felt he was about to start getting hard again, Perra tucked him back into his trousers and pulled them back into place.\n\nShe directed him to the chair at the head of the table as she went about making three lunches, each heavily loaded with meats and large enough for two people.\n\n\"What's all this for?\"\n\n\"Last week I made everyone lunches a couple of times as a way of saying thanks for their help. I decided to make it a once-a-week thing, just to show our appreciation for what they do.\"\n\n\"As much as the girls are helping out I'm starting to think that we should start paying them too.\"\n\n\"Don't you dare bring that up to them,\" Perra warned. \"When I mentioned it, I thought the biggest one, Ghoss, was going to rip my head off.\"\n\nKal's eyes widened, \"Why?\" he asked, looking concerned. Was Perra in danger from the harpies?\n\n\"Verbally, Kal, not actually rip my head off,\" she explained, guessing at the reason for the look on his face. \"The girls have mates who are not trying to run away and a sense of security they've never known before, plus I think one or two might have a chick on the way already. As Kuto put it, 'You've given us the world and now you want to pay us as if everything you've done already wasn't good enough.' That's why Ghoss got upset at the idea.\"\n\n\"Sounds like they are happy enough working for their boarding?\"\n\n\"Correct,\" said Perra as she finished assembling the last of the lunches. \"Homes, mates, chicks, a backup place to live if something goes wrong here. When you think about it, Kal, you've given them quite a bit already.\"\n\nKal nodded, he hadn't really thought about the harpies' situations in the way Perra described, but then he hadn't really talked with them much, preferring to talk with the men.\n\nAt the same time Perra finished loading up her and Kal's plates, there was a loud flapping of three sets of wings as the harpies landed in front of the farmhouse. A few seconds later one of the girls lightly tapped on the door.",
        "Perra flashed Kal a mischievous grin before yelling, \"Come in!\"\n\nThe three harpies entered and made their way towards the table where the lunches were wrapped up and waiting for them. They each bid Perra good morning and seemed especially pleased to see Kal up and about. Kal was mildly embarrassed to think that this was the earliest he had been out of bed since his mother passed. The couple engaged them in some light conversation, however, the longer they talked, the more distracted the harpies seemed to become. Finally, Ghoss excused herself and grabbed the linen-wrapped package meant for her and Tain. A few moments later Ruce and Kuto were right behind, making a hasty retreat to the door then getting airborne as soon as they cleared the porch.\n\nAs soon as Kuto was in the air, Perra began laughing so hard she was soon holding her stomach. Kal looked at the woman like she had gone insane, \"Care to tell me what's so humorous?\"\n\nPerra wiped tears from the corners of her eyes. \"After what you did to Gerda you can't see why this is so funny?\"\n\nKal groaned leaning back in his chair, \"Monster girls are sensitive to scents, and we did it right here on the table only a little while ago.\"\n\nPerra giggled, \"Don't expect any work to get done until this afternoon.\"\n\n\"It's a good thing they work fast. Did you plan this?\"\n\n\"No, but it was quite the turn-on watching all three of them getting worked up because of our activities earlier,\" she said while giving Kal a look of hunger that had nothing to do with food. \"Eat up, we have an appointment to keep in the bedroom.\"\n\n------\n\nThey got lucky and Perra didn't start until the next day. Other than the normal discomforts of this time of the month, she wasn't complaining. She had gotten her day with Kal and was now insistent that he go visit the other girls to spend some time with them as well.\n\nShouldering his pack, he was about to step out the door when he received a strong feeling of excitement from Bea. The image she sent to him was what looked like a large amber colored ball with ridges running down the sides. It wasn't until a moment later that he received a strong feeling of pride for her daughter that Kal realized that this was about the time she said she was going to lay her egg. Kal shook his head, first seeds, now eggs. He was becoming more thankful of Sandy and Bas, at least they had children in a more human fashion. Then again he might want to ask about that, it was entirely possible that they gave birth to a stone shelled egg or something.\n\nKal shifted his pack and reached for the door when Perra stopped him.\n\n\"Kal what are you doing?\"\n\nHe looked at her in confusion, he had been fairly certain he'd gone over his plans with her already. \"First, I'm heading to Ikuno's, then going to see Aradelle if I have time. Bea just told me that she laid her egg, so I will probably go visit her for a bit then spend some time with Gerda and Bas before she goes back to her home. Why?\"\n\n\"Not that,\" she said rolling her eyes, \"Why are you carrying your pack?\"\n\nKal stood there dumbfounded at his own foolishness. Looking down at the pouch tied to his belt he softly called out, \"Ria.\"\n\nWhen the ghostly sprite appeared next to the bag she quickly looked around. Not seeing Kal's mother the top and skirt she was wearing faded until she was nude again. The simple action made Perra and Kal both flinch, Kal's mother had been the only one to make a fuss about the avatar's nudity. The reminder hurt Kal, but it no longer felt like he was spiraling into sadness, as he had up until a few days ago.\n\n\"How can I help you Master Kal?\" asked the sprite as she flew up and sat on the strap of his pack where it rested on his shoulder.\n\nKal slid his pack off, dislodging the sprite, and held it up, \"First, would you store this and get my staff for me, please?\" he said, waving goodbye to Perra and walking out the front door. \"Second, some things have happened since I summoned you last.\"\n\n------\n\nEvery time she was about to leave Bas seemed to find some obscure reason to stay a bit longer. Kal could hardly complain, having the older golem around was doing wonders for Gerda. She showed the younger golem how to smooth out the rock portions of her body in a manner similar to hers as well as giving Gerda a needed talking too about eating too many gems and other 'sweet rocks.' By the end of her third week there, the first week since Kal shook off his depression, he could already see a small difference in Gerda's body.\n\nSurprisingly, he wasn't very fond of it. Despite having body parts made of rock, Gerda was always the 'soft' one. Ikuno was lean and muscular while all the rest, including Bas, were well toned, whether it was by choice as with Bas and 'Dell or by lifestyle as with Perra and Bea. Still, he was proud of her for making the effort, even if somewhere in the back of his mind he hoped she kept some of her curves.\n\nBas had also been a huge help to Kal with his geomancy. She had hundreds of years more experience than Gerda and showed it by being totally unimpressed with the young wizard's abilities, then demonstrating to everyone exactly why she was unimpressed.\n\nKal and Ikuno took Gerda and Bas up to their small pool with the intent of outlining what Ikuno wanted the shower and pool area to look like eventually. Kal had started on it with Gerda only offering direction for now, later on she would come behind him and do a lot of the finer finish work.\n\nBas looked at the partial dome structure he had built over the pool and laughed before asking Ikuno what it was they were trying to make. The oni explained in great detail what she was imagining as the basalt colored golem asked a variety of questions before finally nodding in understanding.\n\nTurning around to see what Kal had built she made a dismissive wave of her hand and the structure shattered and crumbled, the action was so quick the mage didn't even see how she had done it. Nor did he get a chance to be upset that his work had been reduced to gravel before Bas raised a hand and began walking forward, pulling a large upside-down half-circle of hand-thick stone out of the mountainside just above the waterfall. With what looked like no effort she covered the entire bathing area except the pool. When Ikuno mentioned that the shower area was now dark while glancing over at Kal, Bas just nodded before grabbing Gerda's hand and sinking into the ground.\n\nA little while later they both appeared carrying a number of very large crystals. Gerda quickly went about reducing them to powder as Bas started making large rectangular holes in the roof. Bas took the powder from the crystals and inspected it as she made it flow past her ruby eye, a stream of white particles flowing up into the holes she had just made while darker dust and sand was discarded. When the area was slightly overfilled she stopped the flow of powder.\n\nBy this time Kal's eyes were glowing and he was trying desperately to keep up with what the older golem was doing. He watched in fascination as the magic flowing from Bas formed a container that was holding the white crystal dust. With a motion of her hand, the container took on a fuzzy appearance and began to compact and compress its contents. His eyes widened with surprise as the powder started to glow faintly red. He was just starting to wonder what kind of magic crystals Bas had destroyed to form this white powder when he began to feel the warmth radiating from it and realized she was just heating it up. Kal received another surprise when after a few minutes of glowing red, the powder suddenly got even brighter, right before turning into a liquid. Bas adjusted the container then formed it into the rectangular hole she had made earlier. With that done all they could do was wait until the material cooled. Once it was cold enough to hold its shape Bas dispelled the container and moved on to the next hole.\n\nAs Gerda went to get more of the crystals to finish up the skylights, Bas explained to Kal that the crystals were quartz and that she was heating the powder by making the individual pieces vibrate against one another. She also explained that molten and solid rock was still made up of the same thing, therefore geomancy could be used on things like lava and her fused quartz windows. Kal spent the next few hours watching Bas work, trying to memorize and copy the way she used her magic so quickly and efficiently.\n\nIkuno was absolutely thrilled with the end result. Bas put up a half-dome that covered the pool area on the end of what she had made so far, then put large triangular windows that ran nearly to the apex of the dome around the outside. She also made a number of other modifications that gave Kal and Ikuno the impression that she had done something similar before, such as making a large plate with holes for the water to come through that they could easily fit four people under when taking showers together. By the time the sun was going down all that was left was for Kal to set up the runes for flow control and heat. Thankfully, Bas had shown him the most likely way the ancients had made the water heaters up in Felli's cave. Kal did take some pride in that what Bas showed him was nearly identical to how he had expected them to work.\n\n------\n\nKal now stood and waved as Bas and Gerda walked into the side of Ikuno's mountain, striking out on their journey back to Bas's home far to the east. The last week had felt hectic with all of the women demanding his attention. They weren't really being demanding but the desire to spend some time with him was strong enough for him to feel through their bonds. Since they had been so patient with him over the last few weeks, Kal felt it was only proper to put their wants at the top of his priorities. With visits made to Bea and Aradelle and the last few days spent with Ikuno, Gerda, and Bas, he was looking forward to a chance to unwind. His only real concern at that moment was whether he should head back to the farmhouse where Perra was waiting for him or stay here and spend some more time with Ikuno.\n\nHe had just come to the decision to spend today and tonight with Ikuno, largely because he was already there, when he got a strong impression from Perra. Kahrin was sitting on a horse in front of his house looking very sad. He cursed under his breath as he went to find Ikuno and let her know he was leaving.\n\n------\n\n\"Ellis doesn't believe he's got much time left and wants to get his affairs in order before he passes,\" explained Kahrin as they handed over Bonn and the barmaid's horse to the stableboy.\n\n\"I just went through all this with my mother not long ago,\" grumped Kal, \"I know I can't stop time, but I wish he'd been able to hold out a bit longer.\"\n\n\"I'm especially curious as to why he needed me here,\" said Perra.\n\n\"That wasn't Master Ellis,\" said Kahrin as she led Kal and Perra out of the stables and turned toward the inn. \"Master Jurien was the one insistin' ye come along too.\"\n\nThe couple followed the barmaid the rest of the way to the inn in confused silence.\n\nIt was still early in the day so Kal hadn't expected there to be too many patrons. However, walking into a completely empty dining area was a bit unexpected. Seeing his expression, Kahrin explained that Master Jurien and Master Tanner had run everyone off claiming council business. Across the room and just beyond the stairs to the second floor was Master Ellis's quarters with the door open wide.\n\nEllis's room was about twice the size of the rooms he rented out and quite a bit larger than Kahrin's, which was little more than a closet with a bed. Various decorative trinkets adorned the walls from his travels before he decided to settle down here in Telsin. Ellis was sitting up in his bed wearing a simple white housecoat while Ada sat on a stool next to the bed looking dejected. Master Jurien and a scowling Master Tanner had both gotten chairs from the dining room and were sitting along the wall not far from the foot of the bed, speaking with the innkeeper.\n\n\"Master Kal! Lady Perra! It's wonderful to see you!\" said Ellis as they walked in before sitting up a bit straighter in bed. Without a word, Kahrin nodded to each one of the council members before excusing herself and making her way back to the dining room.\n\n\"It's good to hear your voice again Master Ellis, I've honestly forgotten how long it's been since you and I last spoke,\" said Kal as he approached the bed. Taking Jurien and Master Tanner's lead, Perra quickly went back out to the dining area and grabbed a couple of chairs for them to sit on while Kal and Ellis talked. \"Jurien and I spoke a little while ago about you while I was out on some business, I'll admit I was hoping this call would come a long time from now.\"\n\nEllis chuckled, \"I won't be falling over dead in front of your face, I still have some time left.\" Kal, Perra, and Jurien all winced. \"Oh, Kal! I'm so sorry! That was an awful thing for me to say. Jurien was actually just telling us about the day your mother passed, I'd heard about it right after it happened but didn't know the details until now. In my head, I was wanting you not to worry but it came out in the worst possible way.\"\n\n\"It's okay Master Ellis, it caught me off guard is all. I know you wouldn't have done that on purpose. Speaking of purpose,\" Kal said sitting down near Ada in the chair Perra had provided for him, \"What exactly is your purpose for calling on me? I understand that you have been looked at by far better healers than myself.\"\n\nEllis sighed, \"Straight to business, is it? As you wish. I'm counting down weeks, perhaps even days,\" Ada choked back a sob, \"after some long discussions with some of the other council members I am asking you to take my place upon the town council.\" \n\nKal leaned back, even with Jurien's advance notice he found he still wasn't fully prepared for what Ellis was asking. Regardless, he didn't have a good enough reason to deny the dying man's request. Kal slowly nodded his head.\n\n\"Wonderful!\" Ellis looked over at Jurien and Master Tanner, \"I hereby relinquish my position on the town council and bequeath it to Master Kal the runesmith.\"\n\n\"Witnessed and recognized,\" said Master Jurien.\n\n\"Witnessed and recognized,\" said Master Tanner then turned to Kal, \"The council has already approved your appointment. Since this was proposed by Jurien, I'll let him fill you in on the details of council workings.\"\n\nJurien snorted, \"Give it a rest Tanner, you've not once ever taken a new member under your wing and shown him the ropes. Also, it was Ellis's idea, not mine. I just made the proposal since Ellis couldn't.\" He looked over at Kal, \"Would you care to choose your second now?\"\n\nJurien's insistence on having Perra there as well made sense now, \"I choose Perra to act as my second.\"\n\nPerra was staring at Ada wishing she could gather up the despondent girl in her arms and comfort her when she heard Kal say her name. Looking over at the men she saw that they were all staring at her. \"Wait, I'm what now?\"\n\nJurien held back a laugh at the girl's expense, \"He's naming you as his representative at council during times when he can't be there.\"\n\nMaster Tanner glared at Kal, \"Don't you know a man you could choose?\"\n\nKal returned the stare without backing down, \"No, I don't. I assure you that if you are wanting my opinion on something, few people in the world know me better than Perra.\"\n\n\"Really, Tanner, there are enough women serving as seconds for council members I'm amazed you would still be carrying on about such things,\" Ellis scoffed. \n\n\"They slow things down, saying a thousand words when ten will do.\"\n\n\"Pardon me for a moment,\" interrupted Kal, \"I apologize if this question seems odd. Is Tanner your name or your profession?\"\n\nMaster Tanner's scowl deepened, \"Both, Tanner is my surname and has been as long as my family has been working hides.\" He turned his scowl towards Ellis, \"Perhaps you made a poor decision for your replacement?\"\n\nEllis smiled, \"Not at all, I didn't figure it out until I had known you for some time either.\" Tanner's frown deepened at the innkeeper's admission. \"Since we are taking care of business, Lady Perra would you bring Kahrin here?\"\n\n\"Certainly!\" she said hopping up from the chair. Before she left she fixed Master Tanner with a fake smile and said through gritted teeth, \"By the way, Kal, I accept the position of being your second,\" then flounced out the door to go fetch Kahrin.\n\nTanner's face darkened further. Kal had a feeling that if he hadn't been sitting right here Perra would have gotten an earful from the man. Jurien was also observing the senior councilman's face, although he seemed to be deriving an inordinate amount of pleasure from the man's foul mood.\n\nMaster Jurien looked over at Kal, \"Quite the spirit that one has. Is she that feisty at home?\"\n\n\"Only when I've done something to piss her off.\"\n\n\"Sounds like you need to put that girl over your knee and teach her to respect her betters,\" said Tanner in little more than a growl.\n\nKal was starting to understand why Jurien was enjoying seeing the man pissed off, he was beginning to feel the same way. With a smirk, he shot a quick glance at the apothecary, \"I have, but I assure you that it had nothing to do with teaching her any respect. I'd ask you to be more cautious as to who you consider 'betters.' Perra's an exceptional woman and I'm proud to say she's mine.\"\n\nTanner's lip curled for a moment as an internal struggle waged in his mind between setting this pup straight and taking a chance on making an enemy of the young wizard. Self-preservation won out in the end and he sat back hard on the chair and crossed his arms, glaring at the mage. Seeing the man's tendons stick out on his neck from clenching his teeth, Kal now understood exactly why Jurien was so happy.\n\nEllis started with a low chuckle but quickly ramped up to belly-aching guffaws, by the look on his face, Master Jurien desperately wanted to join him. \"Kal, you are a blessing in this time I have left, never thought I'd see the day Tanner would be put squarely in his place,\" said the innkeeper as he wiped tears of laughter from his face. \"I suggest you leave Tanner, I'll be handing over the inn next and you won't want to be here for that.\"\n\nConfusion followed by understanding flashed across the man's face as he jumped up out of his seat. \"You can't do that!\" snarled Master Tanner. \"That... thing... cannot be seen as a property owner in this town! The council will never stand for it!\"\n\nEllis stared at Tanner, his eyes as cold and hard as his voice. \"You know as well as I do that our charter only forbids monster girls from holding positions of influence,\" he said. \"Last I checked Bren is very much a man, much to the enjoyment of my barmaids and even a few adventurous female travelers. Despite his ancestry, he's proven himself to be a good man. Your hang-ups about non-humans are the only thing preventing you from seeing him for who he is.\" He looked knowingly at Jurien and Kal before returning to Master Tanner, \"I have two recognized Masters of the town and both council members at that. Your presence is no longer wanted or needed. Leave.\"\n\nTanner's face was nearly purple with impotent rage. Ellis was frustratingly correct about the charter and the requirements for naming an heir. He opened his mouth to speak, his jaw snapping shut a moment later. What good would it do to threaten a man staring death in the face? Instead, he spun on his heel and stomped out of the room, forcing Perra to dance out of the way to keep from being run over as she came back with Kahrin and Bren in tow.\n\nThe room was deathly quiet until they heard the front door slam hard enough to rattle the windows. Jurien immediately began hooting with laughter immediately followed by Ellis and Kal.\n\n\"No,\" mumbled Ada holding her eyes tightly closed.",
        "Perra, Kahrin, and Bren entered the room and saw the three men laughing to the point Jurien had nearly fallen out of his chair.\n\n\"Stop it,\" whispered the blonde barmaid but no one heard.\n\n\"What the hell are ye all on about now?\" asked Kahrin \"I'm hopin' ye haven't pissed off Master Tanner so much he tries to make our lives difficult after ye've gone,\" she said giving the innkeeper a stern look.\n\n\"STOP IT!\" all noise ceased as Ada yelled while standing up from her stool. \"How the bloody 'ell can ya all sit around 'ere laughin'!\" she screamed at the three men. \"There's a man dyin' right in front of ya. How the fuck can ya be findin' things funny at a time like this!\" She rounded on Ellis, \"And you! Givin' up! I know ya said the healers can't 'elp ya but fer fuck's sake that doesn't mean ya need ta jus' curl up an' die!\"\n\nEllis looked up at the blonde barmaid with sadness even as she continued her tirade. He'd explained these things to her many times and knew that deep down she understood there really wasn't any help for him.\n\nAs Ada continued to rant she seemed to be getting close to hysteria. Kal looked down at the pouch hanging from his belt, \"Ria, I need one of those packets of dust.\" A speck of light floated out of the bag and landed in his upturned palm then turned into a tiny packet made of light cloth. Kal reached in and picked up a pinch of gray dust and flicked it in the girl's direction making sure at least a little bit landed on her head. Folding up the packet and putting it in his pocket he drew a rune in the air. Kal quickly moved behind Ada when the specks of dust began to glow, holding her up as her head drooped and she fell fast asleep.\n\nPicking the girl up Kal looked at Ellis, \"She should wake up somewhere she feels safe.\"\n\nDespite his travels, Ellis was consistently amazed when he saw magic done right in front of him. The innkeeper had to shake off his momentary astonishment before answering, \"Her room is right next to Kahrin's.\"\n\n\"Like fuckin' hell yer letting her wake up alone,\" said Kahrin as she walked over to the bed and threw back the covers. \"Move over,\" she told Ellis in a voice that left no room for argument. Ellis did as commanded and Kahrin directed Kal to lay the blonde barmaid down next to him. Even in her sleep, she curled protectively around the innkeeper. \"There's nay anywhere in the world the lass feels safer than right where she is,\" said Kahrin.\n\n\"Poor girl, I wish things were different,\" Ellis said as he ran his fingers through her hair earning a sleepy murmur of contentment from the barmaid. \"Even when I told her it was useless she's been so determined to give me an heir.\" He looked up at the other people in the room, \"We should get the rest of our business done while she's asleep. Jurien? What's next?\"\n\nThe apothecary made a dismissive gesture, \"Just say the words, Ellis. Tanner's not here so we can leave the formalities for the council meetings. As long as the paperwork is drawn up correctly it doesn't matter much.\"\n\nThe innkeeper nodded and beckoned Bren to stand next to Kahrin. \"From this day forth the inn belongs to you two as co-owners. You've done a wonderful job keeping up the place while I've been bedridden. It only feels fair to let you continue.\"\n\nKahrin shook her head her eyes misting over, \"I don't like this, yer too young, but I accept.\"\n\n\"As do I,\" said Bren solemnly.\n\nThere were a few moments of uncomfortable silence before Kal spoke up, \"Now that that's all taken care of. I've been thinking a lot about your situation since Jurien and I talked, and I would like to try something I've had running through my head.\"\n\nEllis sighed, \"If you're talking about something to help me last a bit longer, I'm sorry but I'm not interested. For too many years I've lived with pain from my sickness as a child. I've fought hard to be here this long, no one knows that better than Master Jurien over there. He nearly ended up owning this inn on a few occasions because the medicines he got for me were so expensive. I'm tired of fighting.\"\n\nKal shook his head, \"Unfortunately, I couldn't do that even if you wanted me to. However, I was thinking that I may be able to at least give Ada what she's been hoping for. The thing is, I'm going to need some help...\"\n\n------\n\nLulen stepped into Ellis's room behind the wizard's girl, scowling as her eyes took in the apothecary, the innkeeper with the young barmaid lying next to him in bed, and finally came to rest on the young mage.\n\n\"Your woman wouldn't tell me what you needed me for and the sleeping one certainly doesn't look like she needs a midwife,\" the old crone snapped.\n\nKal just smiled. \"I didn't bring you here for any of the women but for him,\" he said nodding towards Ellis.\n\n\"A man about to go to the great beyond hardly has need of a midwife either.\"\n\n\"Ada desperately wants to have his child before he passes, or at the very least have his child inside her. I think there might be a way to do it, but I need your help.\"\n\nLulen's eyes narrowed, \"I told ya before, boy, I ain't no witch.\"\n\n\"No, you aren't. I don't think I could even call you a magic-user. However, you have an ability that I don't. When you called on me to help Kahrin's sister you could see into her body with my help. I want to see if you can use some of my power to go a bit further and actually fix things instead of just viewing them.\"\n\nThe old woman stared at Kal for a long time before speaking. \"Do you know why I sent your woman and that worthless lout of a husband here to get food and new linens? Because when Master Ellis moved here and built this inn he told me that if I needed something for a birthing he would be happy to help, he'd just collect the cost from the new parents later. To my knowledge he's never called in those debts. Certainly, if someone offered to pay he'd take it, but never did he go looking for the money he lost.\"\n\nKal gave the innkeeper a questioning look.\n\nEllis just shrugged. \"I knew I would never be able to have kids of my own, it was my way of helping,\" he said.\n\n\"For all of his help over the years it's only fair I do this for him. If he doesn't mind an old hag such as myself seeing his cock and balls.\"\n\n\"Welp, that sounds like it's time for me to go have some ale,\" said Jurien, smiling as he stood up. \"Sorry, old friend, but there are parts of you that I've no interest in seeing.\"\n\n\"Some watered wine sounds good about now,\" Perra said, sneaking out the door in front of the apothecary. Kahrin and Bren had left earlier when Perra went to go get Lulen, leaving only the midwife, Kal, Ada, and Ellis in the room when Jurien closed the door behind him.\n\n\"What next Kal?\" asked the innkeeper.\n\nThe young wizard looked over at Ada then back to Ellis, \"I think it would be wise if you went to sleep as well, this is all an experiment and to be honest I don't know if it's going to hurt. My healing runes dull the pain as they work but we won't be using those.\"\n\nFor the first time, a look of apprehension crossed the innkeeper's face. Despite his nervousness, he nodded to Kal to proceed. Kal had him sit on the edge of the bed after carefully extricating himself from Ada's embrace. The young mage considered for a moment telling Ellis that until the sleeping enchantment was dispelled or expired a few hours from now there was no chance of waking the girl. The tenderness the innkeeper showed the blonde barmaid as he slid out of her grasp was too sweet to interrupt so Kal kept his mouth shut. Pulling the packet of dust from his pocket, Kal sprinkled some over the innkeeper and a moment later he was lightly snoring away.\n\nLulen wasted no time and flipped up the man's housecoat. \"Hm, not bad,\" she said lifting his prick up and laying it against the unconscious innkeeper's stomach then taking the sides of the housecoat and tucking it beneath him, effectively trapping his cock in that position. \"Okay wizard, what am I looking for?\"\n\n\"You know what you are seeing better than I do, look for things that 'feel' wrong. I've done some studying on this area of the body, between the two of us I think we should be able to figure out what's damaged and how to fix it.\"\n\n\"You expect me to work on 'feelings'?\" the old woman said, giving Kal an incredulous look.\n\nKal nodded, \"Some magics rely heavily on 'feelings' or 'intent,' I'm hoping that will be the case here. Try focusing on things that were damaged by his sickness and are not as they should be. From there, let the magic do the work for you. Also, it will help if I can touch your skin when I'm loaning you my power.\"\n\nLulen undid the top two buttons on her dress and pushed it off the shoulder nearest the wizard. When she felt Kal's hand, she put her own on Ellis's thigh and leaned forward to inspect the innkeeper. At first, nothing much happened but then she felt a slight tingle in her shoulder and slowly she was able to make out the inner structure of the man's genitals. After a few minutes, she sighed and leaned back, \"This isn't working. I can see but I don't know what I'm looking at, what it's supposed to look like, or even how it works.\" She looked up at him and for a moment Kal was worried she was going to ask him to drop his pants. \"I need to look at the big man.\" Suddenly that seemed far worse.\n\n------\n\nIn the room next to Ellis's, Kal could only give Bren a look filled with apologies for putting him through this. Lulen hadn't been happy with just inspecting the inn's strongman and had called Kahrin in so she could see everything 'in action.' Having to stand there and watch with his hand on the midwife's shoulder as Bren received a handjob from Kahrin had been extraordinarily uncomfortable. Having to move around at odd angles so he could keep contact with the old woman as she watched what was going on had just made things worse.\n\nUncharacteristically, the midwife had jumped up and nearly dragged Kal out of the room as Kahrin was starting to clean her hands and Bren with a towel.\n\n\"Well that was uncomfortable,\" rumbled the big man.\n\n\"All fer a good cause. M'sorry if it doesn't quite feel right cleanin' ye the normal way after that,\" said Kahrin. \"If'n it all works out I'll see if I can get ye a special treat later as thanks.\"\n\nBren smiled, \"Sounds good, as long as I don't have some old lady staring at my cock again, I'm up for just about anything.\"\n\n------\n\n\"Now I see,\" said Lulen, \"the tubes that run from each of the balls are shriveled and twisted, nothing can get through. What do we do next?\" Kal had the strange feeling this woman hadn't been this excited in years, and it had nothing to do with the show Bren had just put on for her.\n\n\"Try using the magic I'm giving you to surround the tubes and try to make them work again. Feel it flow from my hand through your arm and into Ellis, directing it where it needs to go.\"\n\nLulen nodded and turned back to the innkeeper. Doing as the mage suggested it again took a moment for her to feel the energy passing into and through her. However, the magic flowed not to where the tubes were, but to where they were supposed to be according to what she had just seen in the inn's strongman. As the ghostly image of the repaired tubes hovered over the damaged ones Lulen felt like something was missing, as though the boy's magic wasn't enough. Closing her eyes and reaching inside herself she found what felt like the missing part of the boy's spell. As she fed that into the young wizard's stream of borrowed magic she opened her eyes to see the tubes untwisting and growing healthier until they took the place of the ghostly images.\n\nGasping in surprise at what she had done, she sat back for just a moment.\n\n\"Lulen?\" Kal quietly called, trying to get the astonished woman's attention. \"Did you do it?\" Kal was more than a little confused. He had been able to see where she was directing his magic and watched as the two spots just beneath the skin of the man's scrotum had faded away but had felt only a tiny additional draw from the woman, far too little to make anything happen. Now she was sitting here looking like she had just accomplished something wonderful.\n\nAmazement was replaced with sudden determination on the old woman's face as she climbed up onto the bed and kneeled next to Ellis. \"I'm not done yet, boy,\" she said, tugging the innkeeper's housecoat up under his arms and putting a hand on his chest before reaching out for the wizard with the other.\n\nThe look on the midwife's face was almost fanatical as Kal hesitantly extended his hand. As he began pushing magic into her small concentrations of magic appeared all over inside his body. He felt a tiny increase in what she was drawing and the spots began disappearing.\n\n\"What are you doing?\" asked Kal, something didn't feel right.\n\n\"Hush, boy.\"\n\nKal filled his body with magical energy and looked down at Ellis's body with glowing blue eyes. As Lulen directed her attention toward a large spot on or near his heart he saw wisps of white mix with the faint green tendrils of magic coming from her hand on his chest. \"No... Stop woman! You can't do that!\" he said cutting the flow of magic and trying to pull away from her. She gripped his hand with far more strength than what Kal had imagined she was capable.\n\n\"Let me have this, boy!\" she snarled at him, \"My entire life I've sat and watched while the lives of mothers and babes have been decided by powers greater than me. Now, I have a chance to truly heal someone who I think deserves it, not just do my best and hope. I know what it's costing me and if my life is the price, then so be it. Jurien's daughter will be here to replace me next spring and the town has you and all of the women who I've helped before to make do until she gets here.\"\n\nKal's voice was little more than a growl, \"I just lost my mother from the consequences of what you are trying to do. Even if you don't pass until weeks or months from now, I'll still have your death on my head.\"\n\nLulen's face softened, \"I understand. I'm begging you, young wizard, let me do this.\"\n\nKal was caught off guard by the woman's complete change in demeanor, \"How could you understand?\"\n\n\"I've been alive a long time, child. I helped bring you into this world, even then I could tell that your mother wasn't... whole. I fully understand what I'm doing. Please, let me do this.\"\n\nKal took a deep breath, \"You were doing something by his heart, finish that up and we're done,\" he said with finality.\n\nThe midwife nodded and looked down at Ellis as Kal began pushing magic into her again.\n\n------\n\nKal opened the door to Ellis's room and called for Perra to open up the room next to them. A few seconds later he emerged carrying Lulen.\n\n\"Is she...?\" Perra began.\n\n\"Only sleeping. Whether or not she will be okay in the long run, that's hard to tell,\" he said laying the woman in the bed. They had barely gotten Ellis back in a presentable condition before the old midwife sat down in the chair Kal had been using earlier and promptly nodded off.\n\n\"We heard you arguing, is everything okay?\" Perra asked when they were in front of Ellis's room again.\n\nKal nodded, \"Go get Kahrin and Bren, please. Jurien as well if he's still here. I'd like to only explain all of this once.\"\n\nWhile Perra was gathering everyone Kal took a moment to put Ada and the innkeeper back in the position where he was sitting up with her arms around him. With everyone there, including Master Jurien, he took a seat next to the bed and snapped his fingers. Ellis and the blonde barmaid both started coming around, stretching and yawning as they rejoined the waking world.\n\nAda suddenly sat straight up as her last memory of yelling at Ellis came back to her. With her face turning bright red she threw off the bedcovers and tried to make an escape.\n\nTwo arms wrapped around her torso from behind and dragged her back into the bed, \"No you don't, you're staying right here,\" said Ellis, holding the girl tight. Once she stopped struggling and relaxed back into him the innkeeper looked over at Kal, \"So?\"\n\nKal chuckled nervously, unsure exactly how to explain what happened. \"Umm...\"\n\n\"Out with it, Kal. Was she able to fix me enough to have children?\" Ada's head whipped around as he spoke, hope clearly written on her face.\n\n\"According to the Lulen, yes. It should be possible.\"\n\n\"Wonderful news!\" he smiled down at Ada, \"With luck, you'll be carrying my son or daughter when I pass on. In response, the barmaid broke down into tears and threw her arms around the innkeeper.\n\nKal waited until the girl had calmed down a little before speaking again. \"I wouldn't start gathering wood for your funeral pyre just yet Master Ellis. That deal I made with you about not extending your life? Perhaps you should have made the same deal with Lulen.\"\n\nThe innkeeper groaned in disappointment, \"Which means what exactly? That I have a few extra days? Weeks? Years?\"\n\n\"Decades,\" said Kal with a flat voice.\n\n\"Deca... What?... WHAT!?\" yelled Ellis, nearly coming out of his bed.\n\nThe room was completely still for a few moments.\n\nJurien leaned back in his seat, his eyes narrowing, \"For a man such as yourself, pranks of this nature should be below you, Kal. Perhaps we made a mistake Ellis.\"\n\nKal rolled his eyes, \"I'm disappointed, Master Jurien. I thought you knew me well enough by now to know that I would never joke about something as serious as this. Lulen did, in fact, restore Master Ellis's ability to have children but then went on and started fixing other parts of his body. If I had not stopped her we would still be having a funeral, only it would be Lulen's, not Ellis's.\" The young wizard looked down, \"To be honest I don't know if I stopped her in time, she was repairing something around Ellis's heart when I realized what she was doing. I let her finish then called an end to it.\"\n\n\"My apologies Master Kal, forgive me. Your news simply seemed too good to be true perhaps you should explain more before I make an ass of myself again.\"\n\n\"She nearly died?\" asked Ellis, \"How?\"\n\nKal thought for a moment before saying, \"Let me demonstrate.\" He stood and handed his cloak to Perra then took off his shirt. Getting his belt knife, he made three long cuts in the fabric. \"Normal healing magic works much like the mending spell for my shirt,\" he pressed his fingers to the rune on the small leather tag and it began to glow. \"The magic uses the materials it has around it to repair the body,\" the other people in the room watched as threads wound themselves back together over the next few seconds until the shirt was whole once again. \"That's why if someone is injured I can heal the wound, but I cannot replace lost blood. Doing so would be like cutting a strip off my shirt and throwing it across the room.\n\n\"What the sickness did was something more like scorching or browning the shirt with an iron or over a flame, all of the pieces were still there they just didn't work right and were badly damaged in some way.\" Kal looked around and everyone seemed to be following along. \"In the case of the missing strip or the scorched shirt the area has to be replaced, it can't be repaired.\" Kal slipped his shirt back on and retrieved his cloak.\n\nEllis was looking uncomfortable, \"This doesn't mean I have parts of Lulen inside me, does it?\"\n\nKal chuckled, \"No, with magic you can use a person's life energy or lifeforce to act as the patch for the shirt or, in the case of what Lulen did, restore the browned section to what it was. However, you need to have so much to continue living, time will tell if our midwife used too much. Perhaps it's just me being hopeful, but I think the old woman will be okay.\n\n\"This also means that since you are no longer knocking on death's door I imagine that you are wanting your position on the council back.\"\n\nEllis looked down at Ada before smiling at Kal, \"No, I don't think I do, Kal, the position is yours. Same goes for you Kahrin, Bren,\" he said nodding to each in turn. \"I'll step back in eventually, but after having my impending death hanging over me for so long I want to just enjoy life for a bit now that it's been given back to me.\"",
        "Jurien slapped his hands down on his knees as he stood up, \"If I'm not mistaken that concludes our business for the day, and if I'm reading things right I'd say that Master Ellis and Ada would like some time alone. I'll go check on Lulen before heading back to the shop.\"\n\n\"Ya sure ye need to be leavin' so soon Master Jurien? With all the excitement I'm in a bit o' mood fer celebratin',\" said Kahrin stepping out the door and swinging her rear back and forth in front of the apothecary.\n\nJurien laughed, \"Begone harlot! As divine as that arse of yours is, Nina would string me up by my thumbs if I had your bottom and your face wasn't buried in her quim at the same time. You and Bren should be the ones celebrating,\" Jurien shot a knowing glance at Kal, \"I've a feeling Ellis may have another opportunity at being an innkeeper in a couple of years and this one will eventually be yours.\"\n\nKahrin and Bren both gave him confused looks but the apothecary just laughed and stepped into the room Lulen was sleeping in. Perra had a hurried whispering conversation with Kahrin before dragging Kal and Bren over to Bren's table.\n\nKahrin brought them both mugs of ale just as Jurien was on his way out, commenting with a nod towards Ellis's door that he needed to leave now or he might take Kahrin up on her offer. Nobody blamed him, Ada's moans seemed very loud in the empty dining room.\n\nOnce Jurien had left, Kahrin walked up behind Perra who was leaning over the bar. Whistling to get the men's attention, she sank down behind the younger girl until the counter hid her from view. Perra's gasps and heavy breathing left little to the imagination as to what was going on.\n\n\"Earlier was weird,\" said Bren without taking his eyes off what was happening over at the bar.\n\n\"Yup,\" said Kal, equally enthralled by Perra and Kahrin's show.\n\n\"Kahrin thinks we should double-team her to get rid of any awkwardness between us.\"\n\n\"Your woman is getting a mouthful of my woman's juices, so she can share it with you in a little while. I think we're beyond a little awkwardness. However, if the opportunity arises...\"\n\n\"Fair enough,\" replied the big man.\n\nThey watched for the next few minutes until Perra let out a long moan and tried to put gouges in the countertop with her fingernails. A second later Kahrin popped back up, looking suspiciously tight-lipped, and beckoned Bren into the back where their rooms were. Meanwhile, Perra called Kal over, slowly disappearing as she sank down behind the bar. As he walked around the counter the girl was on her knees waiting for him.\n\n\"You know, this is probably the only time we will ever get the chance to do this,\" she said as she reached up to undo his belt. Kal looked out at the empty dining area and agreed with her, however, once her warm mouth slipped over the head of his cock he wouldn't have cared if the place had been packed.\n\n------\n\nEllis couldn't remember the last time he felt like this. Looking back on the events of the day, he was slightly shocked with himself for not noticing immediately that the pain in his chest and stomach were gone when Kal woke him up. It had been such a constant part of his life the world seemed slightly off without it. Not that he was complaining, any more than he would complain about the beautiful young barmaid lying with her back to his chest.\n\nHe felt bad for giving Kahrin and Bren the inn only to take it right back, but then who could have guessed that Kal and the old midwife would manage to accomplish something that even the most talented healers in the land couldn't. Then again, with the price of fixing his body being possible death, if the healers had known about it he could hardly blame them for not mentioning it.\n\nEllis smiled, if what Jurien had told him about the young wizard's plans were true the inn would be Kahrin and Bren's anyway in a few years. Having traveled extensively when he was younger and lived in a couple of the larger cities, he had no real issues with monster girls and was intrigued if Kal's idea was plausible.\n\nThe thought of embarking on a new adventure in the near future with Ada and their son or daughter at his side brought a smile to the innkeeper's face as he laid his head down and pulled his young lover tighter against his chest. Ada mumbled happily in her sleep just as Ellis drifted off."
    ],
    "authorname": "BluDraygn",
    "tags": [
        "magic",
        "mf",
        "monster girl",
        "oral",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/the-runesmith-chronicles-ch-24"
}