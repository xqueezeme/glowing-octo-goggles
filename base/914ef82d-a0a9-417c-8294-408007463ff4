{
    "title": "Catering Girl Ch. 01",
    "pages": [
        "Thank you to my intrepid beta readers, NellyMcBoatFace and Bookwormmom who provided some critical suggestions and hopefully made this a smoother read.\n\nThis is a slow burn story and takes a while to build up. I'll understand if that is not your thing, and you move onto something else. There is an important character under the age of eighteen in this story. It is sort of hard to write a story about a young single mom and not have her munchkin in it. But don't worry, when we do get to the adult play time in later chapters, the little one will be safely tucked into her bed while the grownups play. These are responsible adults after all.\n\nThis story is dedicated to all the single mom's out there who struggle to take care of their babies. Please, if you know of one, give her a hug for me, will you? And if you can, help them take a step up?\n\nChapter One\n\nWhitney\n\nWhat was I doing here? Grabbing my glass of wine, I slunk into my chair. Like my thoughts, the last of the red liquid swirled around the glass. I looked around the museum. Many of my coworkers were gazing at the various airplanes and other aviation memorabilia. For them it was just another company holiday party, but this was to be my last with this accounting firm. I had enjoyed working with most of the people of the firm, and some were literally family. I had put my notice in a few weeks back, although it had not been unexpected. I had planned out my long-term career path long ago, and this was just a steppingstone to my eventual destination. That adventure would start with the new year.\n\n\"Come on Whit, let's get another drink and take a walk around.\" Molly, my best friend from work, ok, my best friend anywhere, was tugging at my sleeve.\n\n\"Alright, alright, I'm coming,\" I mumbled. I knew full well that if I didn't, she would keep nagging me until I did. As I stood, I tugged at my little black dress, pulling it down. It was riding up above mid-thigh. Why did I wear this? Ugh, so stupid. It just attracts the wrong attention. At least it's a long sleeve on a cold December's evening.\n\nApproaching the bar tender's cart, I found Molly was there already and handed me another glass of red wine. My short friend gave me a once over.\n\n\"It is so not fair Whit, I am so envious of you.\" Her hand was rubbing up and down my arm. I could feel her finger trace the floral lace pattern of the sleeve. \"You can wear just about anything and make it look stunning.\" Smirking, I nodded my head. Yeah, I knew that. I was blessed. My long legs, made even longer with my three-inch heels, were the best part in my book. Although I knew most guys noticed my chest first. Not that I wanted any attention from them. I've been fending them off since I was sixteen.\n\nMolly hooked her arm in mine and pulled me towards some display. Pretending to read something about how Boeing and United Airlines were part of the same company in the 1920s. I sipped my wine. Not bad for a corporate gig. I had been to many dinners, conferences, and receptions in my five years with Mitchell &amp;amp; Lombardi LLC, one of the premier local CPA firms here in Seattle. Most of the time the wine was some mass market stuff, but this was from a local boutique winery, who just so happened to be a new firm client.\n\nA small fist slugged me in the arm. \"You haven't heard a word I said, have you Whitney Mitchell?\"\n\n\"Huh? Uh sorry, Molly. What were you saying?\" I looked at her a bit sheepishly.\n\n\"I was saying you should consider broadening your horizons. When was the last time you got laid? Like a year ago? If you would just open up your field a bit, there are a bunch of guys out there who would love a chance at the managing partner's daughter.\"\n\n\"Come on Molly, how long have you known me? Freshman year of college? Penises just don't do it for me. Strictly girls here, and if only you opened your horizons up for once, I'd have you seeing stars, babe.\" We had been like this since they assigned us as roommates at the U. She was straight as a pin; I was anything but. How and why we gelled was beyond anyone's guess. But there was no tearing us apart. We had been there for each other, through thick and thin. Through the exciting times such as career milestones and finding a new love, or the horrible moments when life kicked one of us in the teeth. I had been there when Michael dumped her for some softball player, and she had picked up the pieces when my Heather had suddenly left.\n\n\"So, Dylan over there does nothing for you?\" She giggled as we watched one of guys from tax waving his arms around telling some story to his buddies. \"You know he has the hots for you.\"\n\n\"Nope, nothing.\" I shrugged. \"I can respect that he is attractive. I can see that. Fit, tall, well spoken, yadda, yadda, yadda. But yeah, nothing in my panties. You two would actually go well together.\"\n\n\"Um, maybe,\" Her facial expression and twirling of her hair belied her true opinion. \"So, what does it for you? See anything out there?\" We were standing on an upper concourse of the museum, looking down at where all the tables had been set up for dinner. A small string ensemble was playing in the corner, providing some holiday ambiance to the otherwise technology-oriented aviation museum. I scanned around the room. Knowing that none of my coworkers did a thing for me, I focused on the catering staff, one of whom had caught my eye earlier.\n\n\"There,\" spotting one of the catering staffers, a girl refilling waters at the table next to ours. \"Look at her. The dirty blonde with a tight butt. Now that, I could take home.\" A deft flick of her wrist tucked a wisp of her wavy blond locks behind her ear. Inside me, butterflies took flight.\n\n\"Really, Whit? You could do so much better than her. She's just a catering staffer. Come on, your dad owns the best CPA firm in the Puget Sound and your mom, well, if there wasn't a better power couple not in technology in this town, I don't know who is.\"\n\n\"Hey, you asked me what did it for me. As in physical. Yeah, she is the type. That little wave in the hair. Fuck, I'm getting turned on just thinking about her.\"\n\n\"I'll never understand you, Whit.\" She put her arm around me and gave me a hug. Ok, the Catering Girl was the second-best person in the room. I knew Molly and I could never be a thing, and I wouldn't push it. Her friendship meant too much to me. Physically, she wasn't what I normally went for. Short and I guess you would say pudgy. I once punched a guy in a bar who called her dumpy. He might have been right, but you don't say that about a lady. But she was my best friend, and I'll defend her until the end. I let out a long sigh and had another sip of wine.\n\n\"Come on Molls, let's head back to the table. I think it is about time for some food.\" Meandering our way back, I stopped at the bar cart and got another refill on wine. The food was excellent, as usual, like the wine, courtesy of another client. Nothing like having a local high-end restaurant conglomerate in the portfolio. We always ate well at office functions. This year, the salmon and roast beast were excellent.\n\nThe Catering Girl came and cleared my plate, and I looked around the room. Figuring I had at least ten minutes before dad launched into his usual Holiday party speech, I slipped out and found the washroom.\n\n*CRASH*\n\nAs I returned from the washroom, I watched as one of the partners from audit, totally engrossed on his phone, bumped into Catering Girl. Her tray of dirty plates went all over the place.\n\n\"Watch where you are going, will ya?\" The contempt in his voice lingered long after the smell of his bad cologne dissipated. I've always hated him, never knowing how or why he made partner. Catering Girl let out a big sigh as she attempted to dissipate her frustration at my soon to be former colleague and set her tray on the floor to pick up the pieces. I bent down and helped her collect the dishes back on her tray. It was uncomfortable in these heels, but the smile I got back when our eyes met, was reward enough.\n\n\"Thanks, you didn't have to help, but I appreciate it.\" Fuck, that smile made me all gooey inside. It's been a long time since another woman did that to me so fast.\n\n\"Well, we're not all assholes like him.\" I pointed with my thumb over my shoulder in his general direction. Her giggle in response was sweet. I watched her pick the tray and sling it on her shoulder.\n\n\"Thanks again.\" She headed off through a service hallway, back to where the catering crew was working. It was hard not to drool over her tight ass in those black jeans and black tee shirt. The only part of her outfit that was not all black was the white stripe on her Vans. Oh, how I would love to wrap my arms around that tonight and run my fingers through that blond shoulder length hair. But she appeared eager to get back to the kitchen, so I headed back to my chair.\n\nSomehow Dylan had taken a seat at our table and was telling another one of his stories. I must admit, he was an excellent storyteller. It was hard to maintain an air of non-interest around him. To do anything less was to encourage the inevitable. His story wound down and someone else picked up the conversation on the other side of him. Next thing I knew, his hand was on my arm, trying to get my attention.\n\n\"So, Whitney, your last day is next week?\"\n\n\"Yep, time for new opportunities. I'll miss this place, but I know I will not be far from it. At least as long as dad is still a partner.\"\n\n\"You know my offer still stands. Dinner with me anytime you want.\" His white teeth almost illuminated his olive brown skin.\n\n\"Thanks, but no thanks, Dylan. You know you're not my type, right?\"\n\n\"And you know you're my type, right?\"\n\n\"Dylan, any woman is your type.\"\n\n\"Guilty, but seriously Whitney, you're an interesting person. I know you're gay, but in case you ever change your mind or want to try the other side, I just want to be first in line. Hopefully, our paths will cross in the future. It's been fun working with you these last few years. You're a great person to work with.\"\n\n\"Thanks, Dylan. The feeling is mutual. On the fun to work with side, that is. And if you want a fun straight girl to ask out, Molly over there is dying to go out to dinner sometime. I know her better than anyone and the two of you would be a good fit.\" \n\n\"Really? I always thought she wasn't interested in me,\" he said. \n\n\"Have you ever asked her? I'll bet you be pleased by her response.\"<br>\n\nI could see he was pondering it, when we heard the PA system kick on and that static popping noise of a tech tapping the mic. It was time for Dad's annual speech and the \"surprise,\" of Christmas bonuses.\n\nI finished my wine and grabbed my water glass so I would have something to do while I feigned interest. I had heard these speeches for years. Not just as an employee, but as an intern, and earlier as the mail girl in high school. Other than baby-sitting gigs in high school, Mitchell &amp;amp; Lombardi is the only place I have worked in my adult life. Which is shocking in some ways once I get around to telling you what my mother does. But this stage in my life was drawing to a close. \n\nThe polite round of applause from around the room indicated Dad was done and we all could relax. They would fill the rest of the night with karaoke and dancing, staples of the Mitchell &amp;amp; Lombardi holiday parties. I made my way out a side door to a small patio to get some fresh air.\n\nI was leaning over a railing looking out on some old fighter jets on display when I heard a voice next to me.\n\n\"Getting away from the stuffy room, huh?\" I recognized that voice. I turned my head and there was Catering Girl. The ends of her ponytail were lightly fluttering in the breeze. I could feel my heart pounding just standing next to her.\n\n\"Yeah, needed to step out. Looks like you're doing the same. Break time?\"\n\n\"Yeah, have to check on my little girl. The reception in the back room is lousy.\" I looked her over. She couldn't be much out of college, and she has a little one already? Oh my. And that means something else, probably. Not into girls. Bummer.\n\n\"Little one?\"\n\n\"Yeah, a friend has her tonight. Otherwise, I couldn't pick up extra work like this. Hopefully, I won't need it much longer. I've accepted a new job as a receptionist to start next week. Better than slinging hash at the choke and puke. And better hours as well. I can stop trying to find after hours care for my little girl when I have an early or late shift.\"\n\n\"That's exciting for you and a massive help I'm sure. I know the feeling of leaving and starting a new gig. My last day with these guys is the end of next week. Then I'm also moving on, it's time for some new adventures.\"\n\n\"New adventures. I like the sound of that. It seems like my life is nothing but adventures these days.\" There was a sharp exhale from Catering Girl. She glanced back at her phone. \"Ugh, break time is up, back at it. Nice talking to you, good luck with your new job.\"\n\n\"You do the same.\" I watched those tight buns walk back into the main pavilion. As I watched them disappear on me, Molly came out to join me.\n\n\"Did you get her number?\" There was something bubbly about her, more than her normal self.\n\n\"No, I didn't think to ask.\" What an idiot I am. Navigate a complex tax return? No problem. Understand arcane accounting regulations? Got that covered. But remember to get a cute girl's number? Apparently not. I hung my head for a moment.\n\n\"Guess what?\" There was Miss bubbly again. Her eyes were beaming.\n\n\"Something happened, girl. Dish it.\"\n\n\"Guess who has a hot dinner date tomorrow night?\" Her hands were clasped behind her, and she was swaying side to side.\n\n\"Let me guess, Dylan?\" I smiled a knowing smile at her.\n\n\"Yes, wait, how did you know?\"\n\n\"Educated guess. That's awesome Molls. I think you two will get along well. Deep down he really is a nice guy and has a future ahead of him. I think if he sticks around, he is partner material someday. You two can have a race to see who makes partner first. Where are you going?\"\n\n\"Not sure, he just said he would pick me up at six-thirty and to wear something nice.\"\n\n\"He probably doesn't have a plan yet. Well, keep me posted.\" We headed back in and I watched Molly head back over to Dylan and the two hit the dance floor. I sat back at the table and watched the others on the dance floor. A few ignoramuses came over to ask me to dance, but I declined.\n\n\"Still turning down the boys, dear?\" I looked up.\n\n\"Yes, mother.\"\n\n\"No girls on the horizon either?\"\n\n\"You see me with anyone?\"\n\n\"Honey, I know Heather did a number on you, but you got to get back out there. You know your clock is ticking.\"\n\n\"MOM!\"\n\n\"I know, I know, but a mom can dream, can't she? I don't care so much about the wedding, but you need some babies.\"\n\n\"You don't care about me having babies; you just want grandchildren to spoil.\" She gave me a hug.\n\n\"Yup. I know, you got to find someone first.\"\n\nAt least she didn't hound me about my orientation. Mom and dad were a bit shocked when I announced that Rachael and I were going to prom together my senior year. For a while it was a \"phase\" to them. But when I brought home a few girls in college and then later Heather, they accepted who I was. I think it still pains them a bit, but mainly it's because of a strong desire for grandkids. Now instead of asking about boys, she just leaves various pamphlets for fertility clinics lying around when I come over. Nothing like a subtle hint.\n\n\"Can I have this dance, young lady?\" A pleasant baritone voice was standing behind me. I felt his hand take mine.\n\n\"Don't you think you should ask mom first?\"\n\n\"Maybe I already did. Can't I have a dance with my sweet pea?\"\n\n\"Why do I let you get away with calling me that?\"\n\n\"Cause you love it, and you know you will always be my sweet pea.\" I walked to the floor with my dad and had a dance with him. He is the only man I would ever consider dancing with. As we danced, I caught a glimpse of Catering Girl working to clear the carving station. She looked over at me and spun her head back to her work.\n\nAs the dance ended, I felt a tap on my shoulder.\n\n\"Mom's turn,\" I laughed as my dad dropped me like a hot potato and danced with his wife. They're still cute after thirty-five years together, they still love each other like newlyweds. Plus, I think they still fucked like newlyweds as well. Maybe someday I could find someone like that to live my life with. \n\nAs I cleared the dance floor, I looked around for Catering Girl. Maybe I could rectify my mistake and try to get her number. But she was nowhere to be seen.\n\nI hung around for a while, fended off a couple more of the young bucks, and had a couple of laughs with Molly and Dylan. Yeah, they were going to have a fun date tomorrow night. At one point Molly was looking away, and he mouthed \"Thank you\" to me. I gave him a thumbs up in reply. Eventually, I got bored and called an Uber to take me home.\n\nAs I walked in, Skipper, my tabby cat, was there to greet me. I picked her up after hanging up my coat and listened to my fur baby purr. More than once, she had listened to my sobs as I recovered from the Heather debacle.\n\nI slipped out of my heels and climbed the stairs of my townhome to the master bedroom. I had gotten this place hoping that Heather and I could have many years together here. But instead, it was a big, lonely place for a girl and her cat. I put my shoes away in their place. Yeah, stereotypical accountant here, OCD central when it came to organizing things.\n\nAfter taking care of the evening necessities, I slid my naked body under the sheets and tried to go to sleep. Skipper, for her part, was being as bossy and annoying as ever. I know what some of you are thinking, and yes, most tabbies are male, but a small percentage are female. Just like us lesbians being a small percentage of the population; sort of why I think I bonded with her. I fell in love with her at the shelter a few weeks after I couldn't take being all alone in the townhouse, despite the fact they named her for Barbie's sister.\n\nI tossed and turned as I tried to settle down and go to sleep. But an image kept invading my mind. Catering Girl. Her smile, those dimples. My heart was going pitter patter just thinking about her. I could smell my arousal, and soon my hand was between my legs. It didn't take long for my fingers to work their magic. Once again, I was happy to have a unit at the end of the row. And to have the master bedroom not share a wall with the neighbor's place. Let's just say quiet orgasms were not my thing. Satisfied, I drifted off to sleep.\n\nSaturday found me in my normal routine for the most part. A run through the park, laundry, cleaning the house. As I was clearing my lunch dishes, I got a buzz on my phone. A picture from my uncle popped up in the text message window of his eldest son Nathan, working at the Christmas tree lot for his scout troop.\n\nThe note with the picture said Nathan would be working at the lot until the evening. I had been thinking about getting a small tree this year so no better time than the present.\n\nRealizing that comfy yoga pants aren't the smartest thing to get a tree in, I changed into some jeans and an old hoodie. Fortunately, the tree lot was nearby, in the parking lot of a local supermarket. The market donated the space for the tree lot, and the local Boy Scout troop Nathan was a part of staffed it as a fundraiser with the local food bank. 90% of the proceeds went to the food bank, and the rest went to the troop so they could send some less well-off kids to summer camp.\n\n\"Hi Whitney, would you like to buy a tree and support the food bank?\" For a thirteen-year-old, he had the sales pitch down well. He proudly showed me around and help me settle on a five-foot Doug Fir and got it wrapped up and on the roof of my Jeep. I just hoped I could get it off on my own back at my place. I was talking with Nathan's dad for a few minutes when I heard voices on the other side of the fence from the lot.",
        "\"Mommy, can we get a tree this year?\" it was the squeaky voice of a small girl.\n\n\"Sorry, pumpkin, we just don't have the money. Maybe next year. Mommy starts her new job soon, so maybe we will have enough for a tree next year.\" My heart broke at the sound of Catering Girl's voice.\n\n\"Ok mommy.\" The glum voice of her daughter was accepting of the truth, but clearly saddened by it. I looked around for a break in the fence. Running past a couple of rows of cars, I reached the entrance and then ran back up the other side of the fence. But I was not fast enough to catch them. I saw them take a seat on a metro bus just before the door closed and it pulled away. I walked back to my Jeep and climbed in, dejected.\n\nI drove home in silence. The voice of the little girl pierced my heart. For someone so young to understand and accept the realities of a hard life hurt. I came from such privilege, I know, but that didn't mean I didn't care about others. One of those lessons well drilled into me by my family.\n\nSkipper watched me intently as I got out the tree stand and put the tree in it. Her eyes watched as I strung lights around it and then as each of the gold and red balls were hung. She walked over and sat in front of a gold ball, and I think she stared at her reflection for twenty minutes before she curled up in my lap.\n\n\"You like your tree, Skipper?\"\n\n\"Purr.\" I rubbed her belly.\n\n\"You are one lucky kitty. I hope you know that.\"\n\n\"Purr.\"\n\nI must have fallen asleep on the sofa; I woke up, and it was the middle of the night. Skipper was flopped on top of me, purring away. So much for her being a nocturnal hunting creature.\n\nI climbed into my bed this time and fell back asleep, vaguely recalling dreaming about Catering Girl again.\n\nSunday afternoon I was out for a run. Running is a great way to clear one's brain and process things. I followed the trail of the old interurban trolley, then as I rounded the corner to the park by my house. What I saw caused me to stop in my tracks. \n\nThere was Catering Girl, lifting her daughter off the swing and taking her hand. They had obviously spent some time in the park and now were heading home. I hung back and watched them. It was easy for me to walk about a block behind them. They made their way down a side street to an old, run-down apartment building. \n\nIt was a single story brick building with four cheap apartments in it. The grass looked like they had not taken care of it for a while before winter hit, as it was in poor shape like the rest of the place. But I did get a glimpse of which apartment they entered.\n\nI turned around and headed back home, sure that they had not seen me. 'Ok, so now you know where she lives, Whit, but what are you going to do with that info?' I thought to myself. I pondered that as I jogged back to my house. I found Skipper was sprawled out on the floor. Her head was an inch from a gold ball. I could have gotten the can opener out and even her favorite sound of food being opened wouldn't have gotten her to budge, I think.\n\nThen it dawned on me what I should do. A short while later, I was walking out of Target with two large shopping bags that found their way into the back of my Jeep. Minutes later, I was back at the tree lot. Nathan was surprised to see me again at the lot, but when I told him I was playing Secret Santa for a friend in need, he was excited to help. He told me I was doing \"my good deed\" for the day.\n\nMinutes later, I was taking the tree down off my roof. I had carefully snuck up and set the two bags in front of their door and was now carrying the tree to the door. The tree rested against the frame so it would still remain standing when the door opened. I knocked on the door and dashed away.\n\nClimbing into my Jeep, I heard a squeal of delight from a little voice. I drove off knowing they had found the tree and decorations and I had just made a little girls' Christmas.\n\n<center>_\\|/_</center>\n\nJennifer\n\n\"Who could be knocking on our door?\" I mumbled to Madison as I looked through the peephole. I didn't see anybody, but I could see something I couldn't identify just off to the side. Skeptical, and a little worried, I double checked that the safety chain was latched and cracked the door open a bit. This was an ok neighborhood, but our street was often less than ok. I didn't see anyone, but I could see a couple of bags in front of the door. \n\n\"What is it, Mommy?\" I undid the chain and reopened the door fully. \n\n\"Oh. My. Goodness.\"\n\n\"Is that a Christmas tree, Mommy? Is that for us?\" Madison was positively bouncing off the walls now. I have never seen her so excited. She helped me bring in the bags and then the tree. \"Look Mommy, a note.\"\n\n~~~~~\n\nDear Friend, \n\nIt was nice to talk to you the other night at the museum event on the patio. I was in the tree lot and overheard you on Saturday tell your daughter as you got onto the bus that you couldn't afford a tree. When I saw you in the park today, I followed you home and figured out your address. Forgive me please, I don't mean to stalk you, but I just wanted your little girl to have a tree for Christmas. I hope you both like it. There are a bunch of decorations in the bag as well. \n\nI hope you both have a Merry Christmas.\n\nWhitney\n\n~~~~~\n\n\"Oh, my Madison, looks like you are going to have a tree this year. Your first Christmas Tree.\" We worked together to clear a little corner of our living room and put up the tree. I stood there and hugged my precious. I so much wanted her to have a good life, but for the most part I had to be satisfied knowing she had a roof over her head, clean clothes and food on her plate. \n\nThat night after tucking Madison into bed, I sat back at the kitchen table looking at the note. I thought about the woman I had met while working. She seemed so successful. Nice dress, successful job. I did see her dancing with that older man. He looked like he was the head of that company. They looked similar, maybe she worked for her dad? But she had said she was taking a new job? \n\nOh girl, what does it matter? She probably just feels guilty for having so much. This is probably just in lieu of giving something to the food bank in her annual holiday giving. But she did leave her cell phone number so least I could do is send her a picture of the tree all nice. Moments later a text was on its way, saying thank you. \n\nA few minutes later when a text came back with a smiley face emoji. I'm not sure why, but I hovered my finger over the number and added Whitney to my contacts. I looked around our small apartment. It was rather spartan. A hand-me-down sofa, kitchen table and chairs were all the furniture we had, besides some boxes filled with a few toys. I read my library book for a bit and then went into our bedroom and crawled onto my mattress. \n\nMadison was softly snoring on hers. We had just the one bedroom and no bed frames, just our mattresses on the floor. But it beat being in the shelter. I plugged my phone in and was about to do a sudoku when I got another text.\n\nWhitney: Did she like the tree?\n\nMe: Yes, very much so.\n\nWhitney: Yea! \ud83d\ude0a\n\nMe: Thank you, that was totally unexpected and nice of you.\n\nWhitney: It was my pleasure. \n\nI lay in my bed, looking at the phone. How could I ever repay someone for generosity like this? I had taken gifts before. The ladies at the church had banded together to find me some furniture when they found out I was able to get an apartment and move us out of the shelter. But this was somehow different. I couldn't place it. I don't know what possessed me, but I found myself typing again.\n\nMe: Maybe I could take you out for a cup of coffee sometime to say thanks?\n\nWhitney: I'd like that. \n\nWe traded texts a bit more and figured out Wednesday evening would work at the small coffee shop next to the church when Madison had her Christmas play practice. \n\n<center>_\\|/_</center>\n\nEighteen dollars and seventy-seven cents. What a lousy day of tips. I sighed as I put them in my envelope marked tips and slid it back in my purse. Yeah, there would be some more from the credit cards, but cash tips were the best. I peeked at my watch. There was not much time to get to the church to pick up Madison from their daycare and then, hopefully, get into the food bank to get some groceries. \n\nI walked the six blocks to the Methodist church and found my precious doing a puzzle with her best friend, Dijon. The two were so cute together. I don't think either of them had a clue how lucky they were to be here at this preschool. Dijon's mother Chantal and I met in the shelter when I moved here, and the job I thought I was starting fell through. It was Chantal that plugged me into this church, and it was through Mrs. Eriksen who runs the preschool that I found my upcoming job at the tugboat company. Her husband is one of the tug captains. \n\n\"Would you like a lollypop?\" The kind helper at the food bank in the church basement was asking Madison. \n\n\"Can I Mommy? Please?\" Her little eyes were begging for the sweet. It was the same drill every week. \n\n\"Of course, pumpkin. But then you have to promise to eat your vegetable tonight, ok?\"\n\n\"Ok Mommy, but can we not have broccoli tonight?\"\n\n\"We'll see what we get tonight and what needs to be eaten first.\" It was always hit or miss on the healthy stuff. I did my best to feed her fruits and veggies, but prepackaged and simple carbs were always so available and stretched my limited food budget that I worried about her diet at times. But today was a good haul, a cabbage, some carrots, potatoes, peppers, tomatoes, an onion, and sorry girl, a head of broccoli. \n\nWe were soon getting off the bus and walking the block home from the bus stop with our grocery sacks full. I was soon chopping away and working on dinner for us while Madison was watching Elmo or something on my phone. We had no TV or internet at our place. \n\nI had an old Chromebook that I had used for my online school, but the only way I had internet on it was by going somewhere like the library where there was free internet. Madison had spent many an evening in the kids' section reading picture books while I finished my Associate's degree. It had taken me four years to get it, but that piece of paper was the second most important thing I had ever done. The first being the little girl who was currently glued to my phone. \n\nI was stirring a pot of noodles, waiting for the proverbial water to boil, when I realized my mind had wandered about and was thinking of Whitney. We had spoken for a grand total of what, ten minutes, maybe? And a few texts. Why was I even thinking about her? As the water boiled, I returned my focus to getting food on the table. Maybe I was just excited to have some proper adult conversation when we got together in a couple of days for coffee.\n\n<center>_\\|/_</center>\n\n\"Ok Madison, you be a good girl and listen to Mrs. Cartwright, ok? I'll come get you after practice. I'll just be next door at the coffee shop, ok?\"\n\n\"Ok Mommy, I love you.\" She gave me a hug and then turned and ran after the other girls at the church.\n\nI put the hood up on my sweatshirt over my black beanie, to keep the rain from going down my back as I left the church and walked next door. As I got close, I saw Whitney walking from the other direction. I waved and then held the door open for her. \n\n\"Blech!\" She said as she flipped the hood off her coat and freed her long, brown hair. \n\n\"Yeah, it's wet, but sure beats snow.\"\n\n\"So true.\" We walked up to the counter to place our orders. I looked at the board. Why is coffee in these places so darn much? Tea looked like a cheaper option.\n\n\"I'll have a large peppermint tea please.\" I looked over at Whitney and then down to my purse where I was pulling out a battered white envelope.\n\n\"Oh, that sounds good, make that two.\" The barista rang us up, and I carefully counted out my dollar bills and placed them on the counter. Whitney looked away as I put my envelope back in my small purse. But I think it was more to give me a moment of privacy. My cheeks reddened a bit as I got momentarily self-conscious about my spending habits. Soon our names were called. We grabbed our teas and found a small table in the corner. \n\n\"So, thank you again for the lovely tree. Madison just adores it. We made a chain of popcorn and put it on last night. She had so much fun pushing the needle and thread through the kernels. First thing she does each morning is to come out and turn the lights on it.\"\n\n\"Awe, that's so sweet. That makes me all warm and fuzzy inside.\" Whitney took a long sip of her tea. \"So, you start a new job next week? Tell me about it.\"\n\n\"Yeah, I'm rather excited about it. It is just a receptionist job, answering the phones, sorting the mail and the like. But everybody I talked to there seems really nice. One lady from the church told me about it. Her husband works there. They are supposed to be very family friendly. So hopefully it will go well. And the hours are stable with no late-night shifts like I have to deal with now. It's such a pain to find someone to look after Madison in the evening. \n\nI've traded with a few other moms from the preschool. But a lot of us are scratching and clawing just to survive.\" Shaking my head, the thoughts of the sacrifices made over the last four years flooded my brain. Realizing I was staring at my tea, I took a sip and looked back at Whitney. Her smile was pleasant and caring. I watched as she reached out and put her hand on mine.\n\n\"Sounds like you have been through a lot. I can't imagine what it must be like being a young single mom. I don't know how you do it, frankly.\"\n\n\"You do what you have to do sometimes. It is rather humbling; I have to admit. Honestly, I have swallowed so much pride over four years going in and asking for help from the state, from the church and other groups, I'm not sure how much more I have left to swallow. There have been more than a few nights where I was not sure how I was going to put food in front of Madison.\" \n\nMy lips quivered and I looked down. There was no way I could make eye contact right now with my new friend. The tears were flowing and I couldn't stop them. \"Some nights I could barely put a peanut butter sandwich in front of her, not even any jelly on it, and hoped she didn't hear my stomach as I had nothing. Sometimes there was just too much month left at the end of the money.\"\n\nI used the cuff of my sleeve to wipe my eyes. Why was I opening up to a stranger about my struggles? I mean, what did she care? I had never really spoken to anybody, not even to some of the ladies at the church about this. Although I am sure they wouldn't have been surprised. I looked up and saw her eyes welling up as well. The look on her face was tender. Not pity, but care, or maybe respect.\n\n\"Jennifer, you are the bravest woman I have ever met. Seriously, do you get any help from her father?\"\n\n\"Not much. He's in the Coast Guard and enlisted personnel don't make big bucks. He sends a birthday and Christmas card every year with a small gift. Every few weeks he calls or Skypes with her as well. It's difficult since our schedules don't match that well, but he tries to be a responsible long-distance father. But the amount of child support is small, just because he doesn't make much. It helps, don't get me wrong, but it doesn't go far.\" I took another sip of my tea. \n\n\"So, do you have any family around here?\"\n\n\"No, just the two of us. My mom is back in Idaho, in our small town. It was just her and me growing up. Madi and I lived with her for about a year, but I needed to move out. She had a hard time adapting to a new little one around. Dallas's parents offered to let us stay with them, but their cramped mobile home was no better than my mom's. About a year ago, a friend convinced me to move here, and there was supposedly a job waiting for me at a call center. But the day I showed up, the feds were all over the place. \n\nIt turned out they were running some scam and people were getting busted. I yelled and screamed at her for all the good that it did, but she was just as out of luck as I was. My money ran out fast, not that I had much to begin with, and I landed in a shelter for moms with small kids. I spent five months there until I got a semi-stable job as a waitress. \n\nOne of the volunteers at the shelter goes to the church next door, and she got me plugged in there. They helped me find my apartment and got me somewhat established. The church gave Madison a scholarship to their preschool, so that has been a huge blessing. She gets breakfast and lunch there each day, and they run a food bank as well.\"\n\n\"That sounds amazing. So much better than what I remember of church as a little girl. All I remember was making little crafts from popsicle sticks and then later hearing all the evils about having sex before marriage.\"\n\n\"Yeah, like that obviously works. I heard the same thing.\" We both snorted at that. \n\n\"So just the two of you. No boyfriend? Not trying to be nosy here, just curious.\" \n\nThere was that smile again on her face. Why did I feel so comfortable telling her stuff? I needed to ask her questions and getting her to open up as well. \"Nope, no boyfriend. Not had one since I got pregnant, and I had just started dating him at the time. I'd just turned eighteen right before Senior Prom. We had sex once, on prom night. Back seat of his dad's Chevy. How classic is that?\"\n\n\"Yeah, right?\"\n\n\"That's all it took, of course. Shortly after graduation, he left for boot camp. I didn't even know I was pregnant then. I told him when he came home on leave. Of course, he promised to help, but that has not been much. Since then, I've been working so hard or studying to get my degree that there has been no time for boys. Frankly, we're just fine without them.\" \n\nI noticed Whitney raised her eyebrow at this. \"Good for you for continuing your education. Did you finish?\"\n\n\"Yeah, took my last final a week ago. The last two years was done all online. But I did it. I now have my associates degree in business. I'm thinking of trying to get into the U next fall when Madison starts kindergarten. I know I have to continue my education. The only way I will ever be able to give my baby some sort of life. I don't want to spend my life like my mom. Running a bar ain't for me. No place to raise a kid. Trust me, I lived through that.\"\n\nWe both had a good laugh. \n\n\"So, Whitney, tell me a bit about you. Is there a Mr. Whitney?\"\n\n\"Nope, and there will never be one. I was sixteen when I had my last boyfriend.\" It took me a moment to process what her inference was. \n\n\"Oh, so um you...\"\n\n\"Yeah, let's just say I prefer the fairer sex. Sorry, does that freak you out?\"\n\n\"No, just not what I expected.\" Oh shit, is this a date? Is this her polite way of hitting on me? I've been so out of touch with things I didn't even think about that. Not that I would mind. I have often wondered what dating another woman would be like. I was pondering how to respond when my phone buzzed. It was next door, telling me the rehearsal was done. A moment later, a second message came from Mrs. Cartwright, saying she could bring Madison over in a few. \n\nWhitney and I talked for a bit more about the business program at the university where she had gone when Madison bounced into the coffee shop. She quickly jumped into my lap.\n\n\"Guess what Mommy, I am going to be an angel in the play. I get to have wings and everything.\" Whitney smiled at her.\n\n\"That's great, honey. Are you going to sing?\"\n\n\"Yep, I get to sing Gloria with the other Angels.\" She sang the classic hymn, but with her interpretation, \"Gloooooooooooooooria, in Chelsea's stable. Gloooooooooooooooria....\"\n\n\"I don't think it's 'in Chelsea's stable' but 'In Excelsis Deo' honey. It's ok though, everyone would like to hear you sing.\"",
        "\"But Chelsea is going to be the innkeeper, it's her stable that baby Jesus is born in.\"\n\nWhitney tried to suppress a giggle, but she couldn't hold it in. Madison looked over at her with a funny look on her face.\n\n\"Madison, this is my friend, Whitney. She is the one who gave us the Christmas Tree.\"\n\n\"Really?\" Madison jumped from my lap and ran around the table. She climbed into Whitney's lap and gave her a hug. \"Thank you. I love our tree. It feels like Christmas now.\"\n\n\"I'm glad you like it. Seeing you happy makes me happy.\"\n\n\"Well, pumpkin, I think we best get going. You need to get to bed soon.\"\n\n\"Aww mom, do I have to?\"\n\n\"Yeah, it is going to take a bit to walk home and then it will be bedtime, ok?\"\n\n\"Ok mommy.\" I had such a little trooper. I know most kids would have fought or fussed, but this one never did. Somehow she just always understood what needed to be done and did it.\n\n\"I can give you a ride home. You're just a couple blocks from my place. But I don't have a car seat. Is that going to be ok?\" Whitney suggested, looking hopeful and beaming at Madison.\n\nI looked out the window; it was really pouring rain now. The thought of walking home with a soon to be exhausted Madison was not appealing. \n\n\"Thanks, it's kind of yucky out there.\"\n\nWhitney drove us home, with Madison chatting excitedly about being an angel. Once at our door, I thanked Whitney for the ride home and we both dashed in to get out of the rain. I got Madison ready for bed. As she lay down and tried to go to sleep, I contemplated what had happened. I'd opened up to this woman like I had to no one else. For some reason, I was just putting it all out there. Why did I feel so comfortable around her? I replayed the evening over again in my brain. There was the reassuring touch, her smile, the look in her eyes. Everything said 'I care about you'. I don't think I ever had a feeling like that before. Not even from my mother. \n\nMy book was still open to the same page an hour later when my phone dinged.\n\nWhitney: Thanks for the tea tonight.\n\nMe: You're welcome. \n\nMe: It was nice to get together. I don't get out much.\n\nWhitney: I know the feeling. You're the first person I have hung out with in over a year that I don't work with or am related to. \n\nMe: Do it again? Soon?\n\nWhitney: Yes\n\nMy hands shook as I thought of what to say next.\n\nWhitney: I didn't scare you tonight, did I?\n\nMe: Scare me???? About?\n\nWhitney: that I like women?\n\nMe: There are much scarier things than that in the world.\n\nWhitney: Whew\n\nMe: What scares you?\n\nWhitney: Spiders and walking into a spider web\n\nMe: LOL\n\nMe: Rats\n\nWhitney: Ugh I hate rats\n\nMe: I know. I sometimes have to take the garbage out from the diner late at night. I'm always afraid of one running at me, crawling on me.\n\nWhitney: yuck\n\nMe: I know, and the rats back there are the size of aircraft carriers. \n\nWhitney: \ud83d\ude41\n\nWhitney: What else?\n\nMe: running out of money\n\nWhitney: yeah that can be scary\n\nMe: I do better now. I learned how to plan, spend and make it last, but it still scares me. \n\nWhitney: That's cool.\n\nI was about to type some more when the little bubbles came up, showing she was about to type something.\n\nWhitney: Rejection\n\nI paused when I saw this. She is afraid of rejection? Who would reject her? She has to be the most well-spoken, thoughtful, caring person I have met. She is pretty, no drop dead gorgeous, even in just the simple jeans and thick green sweater she had on tonight. \n\nMe: Really?\n\nWhitney: Really\n\nMe: Who would reject you?\n\nWhitney: U\n\nOk, enough texting. I hit the dial button. Some things are just better discussed verbally.\n\n\"Hi Jennifer\" There was sadness in her voice, something deep down was bothering her.\n\n\"I would never reject you.\" \n\n\"Even though I'm a l...\" I cut her off.\n\n\"What the hell does that matter, Whitney? You are a person with a future, you have a new job you are going to start, you're pretty, you have a good family. You're everything I wish I was.\" Oh shit, did I just say that? I didn't hear anything on the phone. \"You there, Whitney?\" I think I heard a couple muffled sniffles in the background.\n\n\"You really wish you were me?\" her voice was unsteady and meek.\n\n\"Whitney, do you know how many nights I cried myself to sleep in a strange shelter trying to protect my baby? Do you know, even now, how I wish I had a good job and didn't need help?\" there was another long pause.\n\n\"Jennifer?\"\n\n\"Yeah?\"\n\n\"I'm sorry. I guess my problems aren't so bad.\"\n\n\"I'm sorry I got on a soapbox.\" I replied. \n\n\"Can we still be friends?\"\n\n\"I would love to be your friend Whitney.\" \n\nWe hung up, and I crawled under my blankets and tried to go to sleep. I had to get us up for the morning shift at the diner. But I couldn't sleep. All I could see were images of Whitney in my mind. At first they were the confident Whitney I saw at her company party, but then I saw an image of what she must have been like on the other end of the phone tonight. All I wanted to do was reach out and give her a hug.\n\nWhitney\n\nThe smell of stale coffee filled the break room. I think by this point it was part of the paint. I dumped out my cold coffee and washed my mug and headed back to my desk. One more day to go. This gave me the holidays off, and then I would start my new gig in January. I must have been rather deep in thought as I walked back to my desk when I heard my favorite baritone voice.\n\n\"Is everything ok, sweet pea?\" That snapped me out of my thoughts. I can't remember the last time he called me that at work. We have both been careful to be professional in the office. I think the last time I called him dad or daddy in the office was when I was visiting as a teenager. \n\n\"Sorry Dad, just kinda deep in thought.\"\n\n\"It shows. I said 'hi' to you three times and nothing registered. I thought you were reverting to sullen teenage Whitney for a moment. Say, you got lunch plans? It's almost noon.\"\n\n\"Nothing special, I was probably just going to get a salad with Molly.\"\n\n\"How about your dad takes you out for lunch today? Not going to be able to do this anymore.\" He grinned at me and put his hand on my shoulder. I smiled and nodded my head. \"Great, meet me in my office in five minutes and we will head down.\"\n\nI headed back to my desk and set my cup down and grabbed my coat. \n\nMe: Can't do lunch today. The old man wants to take me instead.\n\nMolly: \ud83d\ude41\n\nMolly: I get it. But can we do lunch tomorrow, ok?\n\nMe: Absolutely\n\nMolly: \ud83d\ude0a\n\nI poked my head in his office. \"Ready?\" he was already putting his coat on. He stopped at his executive assistant's desk as we left.\n\n\"Marci, I am taking my favorite daughter out to lunch. I'll be back in an hour or so.\"\n\n\"Ok, just be back for your two pm call.\"\n\nThere was a small table against the wall we sat at with our lunch. The deli was one of his favorite places, as usual he got a Ruben. Good thing mom wasn't here, she'd have a conniption with all the fat and the salt content of his lunch; dad has been taking high blood pressure meds for years. I stuck with my chef salad with balsamic vinaigrette. \n\n\"So, what had my daughter so deep in thought that she ignores her dear old dad?\"\n\n\"Just something a friend said to me last night. Sort of been bugging me ever since. Do you think I had it too easy?\" I set my forkful of salad back into the paperboard container. My appetite had vanished. \n\n\"What do you mean?\"\n\n\"Well, we never really had to worry about anything. I mean nothing serious, right?\"\n\n\"Your mother and I worried a lot about you. How you would do in school, would you come home before curfew, who you chose to date.\"\n\n\"Dad, I mean we never worried about would we have enough to eat. Or could we pay the bills? Stuff normal people worry about.\"\n\n\"So, my little girl is getting perspective?\"\n\n\"I guess. I was all worried that she wouldn't like me because I like girls. But it was a total nothing to her. She is literally worried about having to move back into a shelter with her preschooler and being able to put food on the table. Sort of puts my problems into a new perspective.\" \n\n\"Sounds like a good friend. How did you meet her?\"\n\n\"At the company Christmas party.\"\n\n\"Really?\" I could see him think. \n\n\"Not someone who works for you.\"\n\n\"Oh?\"\n\n\"No, she was one of the caterers. But she starts a new job next week as a receptionist.\"\n\n\"And she is already getting into your mind?\" I could see excitement in his eyes behind his wire-rimmed glasses. I picked my fork back up and stabbed a stem of romaine, more to distract myself than anything.\n\n\"Yes,\" the crunch of my lettuce broke the silence and then my eyes went wide. \"Not like that, Daddy.\"\n\n\"You sure? You're rather red right now.\" My daddy could always tease me about such things. He was way more goofy than mom. She was the serious one.\n\n\"Ok, maybe a little,\" I said sheepishly. \"But don't tell mom yet. Yeesh, she would have me walking down the aisle tomorrow. It was one get together and not really a date.\"\n\n\"Ok Whitney, mum's the word. So, are you wrapping stuff up here? Only a day and a half to go.\"\n\nWe kept talking about work, and how things would be at my new job. And it is not like we are going to stop talking about work related stuff. I was heading to a most important client and would be their new controller. There already was an iron clad relationship between the client and the firm that was only going to get stronger with me there.\n\n<center>_\\|/_</center>\n\n\"Ok Whit, you've dodged me long enough. Spill the beans girl, how is Catering Girl?\" I was back at the deli for my last lunch there, Molly sat in the same seat dad did yesterday. This time there were two salads on the table. I had decided on the Taco salad today; I don't know what they put in their dressing for it, but crap, I was going to miss this.\n\n\"Well, we have been texting each night. I have never met someone so grounded. She is making me see the world in a whole new light.\"\n\n\"Sounds like you like her.\"\n\n\"Yeah.\"\n\n\"As in like like?\" I giggled at the reference to Garfunkel and Oates.\n\n\"Not sure about that. But she didn't go running for the hills when I came out to her.\"\n\n\"But you wouldn't stop it from happening if it did, right?\"\n\nI put on my best little innocent girl voice, the one I honed for years as a teen trying to get stuff out of my dad. \"Who, me?\" Molly almost choked on a piece of chicken.\n\n\"So, what's next with Catering Girl?\"\n\n\"Jennifer, she has a name. And her daughter is Madison, she's four.\"\n\n\"Again, my question, you ain't going to weasel out of it, Whit.\"\n\n\"I invited them last night for dinner on Saturday.\"\n\n\"Good idea.\"\n\nThe rest of the day drug on. I just wanted to get done and text Jennifer. There was a text waiting for me when I got home. It was a picture, done in exquisite crayon, of me and Jennifer sitting in the front seat of my Jeep with Madison in the back. In the background was a picture of her Christmas tree. \n\nMe: Love it! \ud83d\udc97\n\nJennifer: Just so you know, you're the topic of conversation around here, like all the time. \ud83d\ude0a\n\nMe: Uh oh \ud83d\ude09\n\nJennifer: It's all good. Madison is excited to come over for dinner tomorrow.\n\nMe: You know, you don't have to wait until dinnertime to come over. If you like, we can make some Christmas cookies or watch a movie. \n\nJennifer: I like the sounds of that. Maybe after lunch? We have to go to the grocery store and laundromat tomorrow morning. \n\nMe: sounds good. I have some errands to run as well in the morning. Did you want me to pick you up?\n\nJennifer: Nah, you only live a couple blocks from us. Easy walk. Can I bring anything?\n\nMe: Bring a Madison. I'm all out. \ud83d\ude0a\n\nWe spent the rest of the evening texting on and off. We had to take a break so Madison could watch some Elmo on Jennifer's phone. Some things are important, you know? I pulled out my Test Kitchen cookbook and got a batch of sugar cookie dough made and in the fridge for the next day. \n\nEventually, I found myself snuggled up in my chair with a glass of wine. I had turned off the lights, so the room was only lit by the lights on the tree and flicker of the gas fireplace. Skipper had asserted her right as queen of the house and planted herself in my lap. The sounds of gentle purring relaxed me. \n\nWhat a year it has been. This time last year, Heather was next to me and we were getting ready to visit her parents. If I had only known then that everything would have fallen apart just a few days later. I still don't know what happened in those conversations with her parents. I just know that shortly after we got back we had a big fight over essentially nothing, and when I came home from work two days later all her stuff was gone and her key was on the kitchen table. No note, no nothing. I tried calling, texting, and a day or so later, she blocked my number. \n\nKnocking on the door to her parents' house only got me a yelling at from her father, who barely stuck his head out the door and told me to go away and never talk to them again. I spent the next month a total wreck. Molly was a frequent visitor after that, and we indulged often in ice cream therapy. \n\nMom was also there for me. We rediscovered our mutual passion for shoe therapy together. On the bright side, at least with Heather gone, there was more space in my closet for them. \n\nAs I scratched Skippers ears, Jennifer popped back into my mind. Ok, she never completely left it. But I had to decide what I wanted here. For sure, there was a friendship forming between us. That much was clear. And it was mutual. She initiated the texts and chats as much as I did. \n\nReading her, and her intents, was something altogether different. Flirting with her appeared to be totally lost on her. I have said a few things I have felt have had a very explicit double entendre and they appear to have sailed completely over her head. And I just don't know what to make of it. \n\nI finished my wine and headed to bed. Tonight, though, I didn't even try to go to sleep right away. I reached into my nightstand and pulled my purple friend out. Slowly tweaking a nipple with my left hand, I thumbed her on. Her gentle vibrations did their best to satisfy me. \n\nDimples. That was all I could see in my mind's eye were Jennifer's dimples. Fuck me. I slid my purple friend down and rested her on my hood. Hitting the speed button, she began her oscillating pattern from low to high, and my butt muscles twitched. My hips reflexively thrusted back and forth, trying to eke out each bit of enjoyment. I let my thoughts and my vibrator have their way with me and finally found relief for the night. It was a temporary, but enjoyable, satiation. Blissful sleep soon took me.\n\n<center>_\\|/_</center>\n\n\"Ouch! Skipper!\" I swatted at the paw on my face. I tried to roll over and go back to sleep. \n\n\"Meow!\" the hot stinky breath of a needy cat inches from my face jolted me the rest of the way to the land of the awake.\n\n\"Fine, I'll feed you soon.\" Stumbling into the bathroom, I took care of my morning necessities. Yoga pants. It was a stretchy comfy fabric kind of morning. A cup of coffee from the Keurig gave me the final burst of energy I needed. Skipper was busy with her dish of tuna surprise as I looked around my kitchen. \n\nNever having made Christmas cookies at home, that was always at Mom's place, I put a shopping list together. \n\nCookie cutters, rolling pin, sprinkles, frosting. Hmm, what else did I need? I have a cookie sheet. Oh yeah, need some chicken nuggets and tater tots for Madison. Rummaging through the pantry and fridge caused few more items to be written down. I put on some sneakers and a hoodie and grabbed my purse and keys. Reviewing the list, I thought of one more important item. Hopefully, this one would see lots of use. \n\nBattling the crowds at Target this time of year stinks, but I could get all my shopping done at one spot, and there was a garage attached so no need to go outside. For those that don't know, you can describe December in Seattle with one word, wet. I pulled out my phone and texted Jennifer.\n\nMe: Heading home from the store. Where u at?\n\nJennifer: About done at the laundromat.\n\nMe: need a ride home? \n\nJennifer: Please, don't want to have to dry clothes twice.\n\nMe: send me the address and I'll be right there.\n\nThe address popped up quick and I realized she had to go ten blocks to get her laundry done. I shook my head in amazement at what she has to go through just to survive. Yet another example of life not being fair at times.\n\n\"Whitney!\" a pair of little arms wrapped around my leg as I entered the laundromat.\n\n\"Hiya, munchkin. Are you being a good helper?\" I bent down and gave her a hug.\n\n\"Yup, I folded the towels all by myself.\" I saw the pile of somewhat haphazardly folded towels on top of a laundry basket. \n\n\"And a very fine job you did\". I saw Jennifer pop up from behind a clothes dryer. \"Hi there.\"\n\n\"Hey, thanks for coming by. Just pulled the last load out.\"\n\n\"Great, I got a good spot out front. Madison, I have something just for you in the Jeep.\"\n\n\"Really?\"\n\n\"Yes, help me with a basket and you will see.\" The three of us headed out and a moment later, as Madison opened the back door, there was a squeal of delight.\n\n\"Mommy, mommy, look, a seat just for me. And it has Elsa on it.\"\n\n\"Whitney, you didn't need to do that.\" Jennifer whispered.\n\n\"What? If I am going to have my friend's daughter in my car, she needs to be safe, right?\"\n\n\"I suppose.\" She was rather quiet as she buckled Madison in. We listened to a four-year-old sing us songs from the popular movie all the way to their apartment. I had Jennifer stack a second basket in my arms so she could more freely open her door and let us in.\n\nI looked around their apartment while they put their stuff away. So small and spartan. But the tree made the place feel like a home. \n\n\"Jennifer, if you don't mind me asking, how do you get your stuff to and from the laundry normally?\"\n\n\"Ever wonder why there are always shopping carts in front of cheap apartments?\" It was the matter-of-fact nature of her response that made me realize how little I knew about how others live. Not counting the laundry room in my college dorm that was the first laundromat I had ever been in.\n\nAs Whit put the last of her laundry away, I felt a tug on my hand. \n\n\"Is it time to make cookies yet?\" Her little teeth shown through her anticipatory smile.\n\n\"Just about munchkin. As soon as your Mommy is ready.\" Moments later, when Jennifer put the last basket away, a small hand grabbed mine and pulled me towards the door.\n\nWe were again serenaded for the quick trip over to my place and pulled the Jeep into my garage. I could see that Jennifer was biting her lower lip as she looked around. \n\n\"Nice place, Whitney.\"\n\n\"Thanks, it's bigger than I need. My life's plans were a bit different when I bought it.\" I hadn't really talked about Heather with her. I figured it would come out sometime. \n\n\"You could raise a family in a place like this.\" We had climbed up to the second floor where the kitchen and great room were. Skipper was sprawled out on the floor again, fixated on what I now considered her gold ball hanging near the bottom.\n\nI wrinkled my mouth at the thought. \"Yeah, that was part of my plan when I got the place.\" I let out a long breath. Might as well get it out in the open. \"Heather and I had been together for five years. We met in college. I thought we were really good, you know? Well, I bought the place and was planning on proposing on New Year's Eve. Had the ring and everything. Not sure if she figured out what was coming, but right after Christmas last year we had a fight. Next thing I knew, she had grabbed the few things she had here and left. Never told me why. Wouldn't answer my calls. Just left like I never existed to her.\"",
        "\"Ouch.\" Jen said looking shocked. \n\nI shrugged my shoulders. What could I do? \"Enough about sad topics. Shall we make some cookies?\"\n\n\"Yeah, cookies!\" Maddison squealed. She pushed a chair from the kitchen table over to my island where we were setting up and grabbed a Santa shaped cutter. She was a big \"help\" sprinkling the flour around to get ready to roll out the dough. Jennifer showed her how to use a rolling pin and get the dough to the desired thickness. \n\nIt was cute to watch her carefully lay out the different shaped cutters. Her little tongue half stuck out of her mouth as she focused on how to get as many shapes as possible out of the dough. As the first batch baked, I looked around my kitchen. Flour was spilled everywhere, and Madison's nose had a big smudge on it.\n\n\"Shit, we made a mess, didn't we?\" The moment the first word left my mouth, I knew I was in trouble. Jennifer looked at me as my hand slapped my mouth. \n\n\"Mommy, Miss Whitney said a swear.\"\n\n\"Sorry Mommy!\" I said and wrinkled my face.\n\nThe shorter woman put her hand on my arm. \"It's ok Whitney, not like she hasn't heard it before. I just try to not make it a habit around her. But it slips out now and then.\"\n\n\"I'll try to keep it clean.\" I mumbled. Speaking more loudly, \"Who wants some lunch?\" I went to the fridge and pulled out some lunch meat, cheese and other sandwich fixings. I plopped a bag of mini carrots out on the counter as well. From the pantry, I pulled out my loaf of bread and a fresh bottle of ranch. \n\n\"Madi, you know what is fantastic with carrots? Ranch dressing.\"\n\n\"Really?\"\n\n\"Yeah.\" I poured some dressing in a small bowl and dipped a carrot in it. I held it out to her as I dipped a second one in. She took it and looked at it suspiciously. Seeing me pop mine in my mouth, she followed suit. \n\n\"Ohhh, mommy, you have to try this, it's good.\"\n\n\"Ranch dressing makes all veggies taste good. Even broccoli.\"\n\n\"Nuffin can make yucky nasty bwroccoli taste good, Miss Whitney.\" The pout on her little face was priceless. \n\n\"Try it sometime, munchkin, you'll see,\" I patted her head. We set our sandwiches down at the table. I was about to take my first bite when I saw Madison fold her hands together and bow her head.\n\n\"Dear God, thank you for the food, Amen.\" \n\n\"That's new,\" whispered Jennifer to me. \"Not something we do at home, but I know they do it before every meal at her preschool.\"\n\n\"Not a bad thing, I guess.\" I replied. When was the last time I prayed? Maybe before the CPA exam? I don't recall. We ate our lunch, pausing only to pull a round of cookies out of the oven and to put more in. We listen to Madi tell stories from preschool. All about her friend Dijon and how boys had cooties. \n\n\"Do you like boys, Miss Whitney?\"\n\n\"Um, they're ok. I work with many, but I agree with you, they have cooties.\" 'Were did that come from?' I asked Jennifer with an inquisitive look from my eyes. She kind of shrugged, so I moved on. We got the decorating stuff out and soon our cookie candy canes, stars, Christmas trees, and Santa's were getting covered with red and green frosting, and covered with sprinkles. \n\nWe finished our decorating and I could tell little miss munchkin was running out of steam. Jennifer pulled out her phone for her to play with, but I mentioned I had both Netflix and Disney+ on my TV. Jennifer found a kid cooking show, and soon Madison was engrossed with them making gourmet mac and cheese. \n\nThe two of us headed to the kitchen.\n\n\"Wine?\" It was my go-to drink to relax with.\n\n\"Um, sure, I guess.\" There she was, biting her lip again. What did I say this time?\n\n\"You don't have to have any. Do you not drink?\"\n\n\"Its fine, just the last time I had something, I, um, found myself in the back seat of a Chevy.\"\n\n\"Oh um, I'm not sure what to say to that.\" \n\n\"Yeah, I stole a bottle of tequila from my mom's tavern and, well, that was the first of many bad decisions that day. Not that I regret any of them. How can I regret her? But it was a less than stellar choice.\" \n\n\"So, you're off the wagon then?\"\n\n\"At first it was I didn't want to make poor choices anymore. I think it pissed off my mom. She felt like I was judging her and her choice of work. To some degree, it is what caused me to move out. Then it became a financial issue. There are better things I could spend my money on. But if you're offering, a glass would be nice.\"\n\nWe plopped down on the couch, each with a glass of my favorite Malbec. Skipper was still back in her spot, happy as a clam.\n\n\"Ready for your new gig?\"\n\n\"Yeah, really excited but somewhat nervous as well. You have been around offices your whole life. This is new to me.\" \n\n\"You'll be fine with your outgoing personality, they'll love you. You'll be a natural.\"\n\n\"I'm worried that I won't dress right. Most of my clothes are black jeans and tee shirt. Works great in a diner or catering. I have one skirt to get me to my first paycheck.\" I placed my hand on her thigh. \n\n\"Jennifer, Can I help you? Maybe we should go shopping tomorrow. It will be fun.\"\n\n\"Whitney! No! You... you've done enough for me already. I'll be fine.\"\n\n\"Jennifer, look, you need to understand me a bit here. Giving gifts is how I show I care about someone. Others give words of encouragement, acts of service, through reassuring touch, or spend quality time with someone. I expect nothing back. I need you to understand that.\"\n\n\"I just don't want your pity, ok?\" she mumbled.\n\n\"Pity, nope sister, you got me wrong. You amaze me. How you deal with the shit that life has dealt you. I don't think I could have done half as well as you. Pity never entered my mind. Helping you makes me feel like I am telling the shit of the world to go fuck off.\" \n\n\"Moooommy, Miss Whitney said swears again.\" Madi hollered from across the great room. I grimaced as her focus returned to the tv. I thought she was far enough away and absorbed in her program to notice.\n\n\"I'm sorry Madi, I'll try harder to be a good girl like you, sorry mommy.\" \n\n\"Ok, I guess it would be fun.\" A smirk crossed Jenn's face. I think she was warming up to the idea of a shopping outing.\n\n\"If you like, we can keep it simple, and just go nuts at the thrift store. My treat ok?\"\n\n\"Sure, after church tomorrow. Madi has her last rehearsal during kid's church time.\"\n\n\"Do you go to church regularly then?\"\n\n\"I take her, and then find a quiet spot to sit, out of the way. If I am not working, which I often have been, it is one of the few times of peace and quiet I can get.\" We sat for a couple moments and watched as Skipper curled up with Madi.\n\n\"Two peas in a pod?\" Jennifer commented. Madi was scratching behind Skipper's ears. \n\n\"I think she just made a friend for life. So about your new job, I don't think you told me where it is.\"\n\n\"With a small tugboat company here in town.\" My eye widened. \n\n\"Which one?\" I was now on the edge of my seat, knowing there were several that served the Ports of Seattle and Tacoma.\n\n\"Whitney Maritime.\" \n\nA big grin crossed my face. \"You are going to love it there. And they are going to love you. Trust me on this one, Jennifer.\"\n\n\"You know them? How?\" \n\nI thought a moment about how I should say this, or for that matter, how much I should say.\n\n\"Well, let's just say I've done their taxes for the last few years. They're one of my dad's most important clients.\"\n\n\"Oh, well then.\"\n\n\"Don't worry. Jeans are ok there. Think about it, who is coming and going? Do you think someone who works on a tug wears a suit and tie? The office people there don't either. Now maybe you don't want to wear a tee shirt. But nice jeans, yeah, you'll be fine. But I'm still taking you shopping tomorrow. You need some fun.\"\n\nWe went over to where Madi was and joined her with her cooking show. They were now making gourmet breakfast, and we all got engrossed in baked French toast. I think we got more absorbed in it than I thought we would. Next thing I knew it was dinnertime. \n\nMadi was a great help to get her chicken nuggets and tater tots onto a baking sheet and into the oven. It was cute watching Jennifer help her cut up a pepper to go into a curry I was making for us adults. As the rice finished and the curry was ready, we plated the now done nuggets and tots and moved to the table. I squirted a big dollop of ranch on her plate. Madi clapped her hands together in anticipation.\n\n\"You're corrupting my child Whit.\" \n\nOh, does she feel friendly enough to shorten my name? \n\n\"Ranch dressing is not a corruption; it is an enhancement. But if needed, you can invoke the 'what happens at Miss Whitney's stays at Miss Whitney's' rule.\" Next thing I knew, Jenn had stuck her tongue out at me.\n\n\"Madi, your mommy is getting sassy.\" Jenn rolled her eyes at me. \n\n\"Don't be sassy, Mommy.\" Madi punctuated her statement by dipping another carrot in the ranch and popping it in her mouth. The table erupted in a fit of laughter. We were turning into a bunch of silly girls, and I think we all loved it. \n\nAs the dishes were finally cleared, I didn't want the day to end. Time to pull out the secret weapon.\n\n\"Madi, you like Elsa, right?\"\n\n\"ELSA!\" \n\nJenn gave me the side eye mom look. \n\n\"I think we can watch it, if it is ok with your mommy.\"\n\n\"Yeah, we can watch Frozen.\"\n\n\"Can we have popcorn, Miss Whitney?\"\n\n\"Of course, munchkin. Let's get the movie ready and then we'll make some popcorn.\" For not having a tv at home, Madi figured out the remote lickety-split. Jenn manned the microwave while I went to the linen closet. Returning with a big, fluffy blanket, we joined Madi on the couch. I sat next to Jenn, with Madi on her other side, a perfect Jenn sandwich. \n\nSitting next to her, cuddled under the blanket, made my heart flip. I was mindlessly twirling my hair as I tried to figure out her scent. It was driving me nuts. Not vanilla or lavender. Nope. Cinnamon, no, not that either. Ugh. This was going to drive me crazy the whole time. \n\nI looked over and saw the cutest thing. Madi was curled up with her head on Jenn's lap. She was mouthing the lyrics to the songs and most of the story. I tapped Jenn on the shoulder and pointed to her.\n\n\"She watches it at least once a week at preschool. And sometimes when one of the older ladies at church watches her for me, she sees it there as well. She is a total Elsa nut.\" \n\nYeah! Score one for the Whitney. \n\nI was debating if the smell was some type of berry when I felt a jolt. I looked at Jenn as I realized her hand was on my knee. Now it was my turn to bite my lower lip as she smiled at me. Is this a two-way street here? Fuck, my heart started to race. \n\nWiping my hand on my leggings to wipe away the sudden clamminess, I set mine on top of hers and gave it a squeeze. I saw her smile again, and then she squeezed my knee. Wheeeeeeeee!\n\nWe spent the rest of the movie just like that. Hand in hand. I felt like a teen on her first date. I wanted to do more with her, but since we were not alone, I was a good girl. As the credits rolled, it dawned on me.\n\n\"Cucumber.\"\n\n\"What?\"\n\n\"You smell like cucumber. I have been trying to figure it out all night.\"\n\nJenn laughed and explained, \"There was a big bottle of cucumber and melon body wash at the food bank a few months back. I needed some, so I brought it home. I liked it, so when more showed up, I grabbed it. Then two weeks later that same brand had conditioner on sale at the store, so I got some more.\"\n\nI had a goofy smile on my face as I inhaled another whiff of her. \"It fits you well, Jenn, it was driving me nuts.\" There was another squeeze on my knee, and another jolt of tingles shot out. \n\n\"And lavender works well for you.\"\n\n\"Hehe,\" I giggled. \"One thing you'll learn about me. Anything purple goes, and never pink.\"\n\n\"Good to know, well I think I had better get Little Miss home and to bed.\"\n\n\"Understood. Let me get my purse and keys and I'll drive you home.\" Bummer, I wanted more, but can't be too greedy, now can I?\n\nI returned a few moments later, ready to head to the Jeep. Jenn was trying to get Madi's shoes on. I hadn't noticed before, but they were in matching black Vans. How cute. \n\n\"I see what you mean about purple.\" She was looking me up and down. I think a bit more hungerly than before. \n\n\"Some see me as a walking billboard for my alma mater. And I'm proud to be a Huskey. But really, I just like to rock the purple.\" \n\nJenn picked up Madi, and we headed downstairs to the garage. \n\nMinutes later, I was pulling us up in front of their place. I parked and looked back at Madi; she was sound asleep, head flopped against the window. A hand rested on my knee. \n\n\"Thanks for the wonderful time tonight. We both had fun. Can't wait to see you again tomorrow.\" \n\nI leaned forward, debating if I should give her a goodnight kiss, when she patted my leg and turned to unlock her door. I guess that will have to wait. \n\nInstead, I climbed out and came around to help get Madi out. Jenn had her scooped up in one hand and had her key in the other. I closed the door as I watched them head up the sidewalk to their door. After she unlocked her door, Jenn turned, waved, and went inside. \n\nI climbed back into my Jeep and drove away. I was all amped up. No way was I going to go to sleep for a while. I drove around, not quite ready to go home. I looked at my clock as I passed Target and realized I had a couple hours until they closed. \n\nI didn't have a plan; I was just wandering around looking when I passed the health and beauty section. \n\nWhat was the phrase that my nephew Nathan said he learned in Scouts? 'Be Prepared' I think it was. Well, not a bad idea. A small bottle of cucumber and melon shampoo, conditioner, and body wash were soon in my basket. I also grabbed a couple of toothbrushes, one of which just might have been in the shape of Elsa, and a small tube of kid toothpaste. Wandering around, I grabbed a few more items I thought might be needed, just in case I needed to play overnight hostess. Ok, not just in case, I hoped I got to play that someday.\n\nWhen I finally got home, I placed them in a small box and put it in the guest bathroom. Hopefully, someday there will be a time where they can spend the night. If that happens, no, when that happens, I'll be ready. Hope springs eternal.\n\nMaybe by having toiletries ready, I can help sway that decision for Jenn and hedge my bets.\n\nDing! I pulled out my phone.\n\nJenn: Thanks again for the wonderful evening.\n\nMe: Well, the company was outstanding\n\nJenn: Looking forward to tomorrow. \n\nMe: Same here. I have a couple of ideas for things to do. That is, if you are up for more than shopping?\n\nJenn: What did you have in mind?\n\nMe: Ever been ice skating?\n\nJenn: No, but I can try.\n\nMe: Cool, tell Madi she can be like Elsa.\n\nJenn: She'll love it.\n\nMe: What time should I pick you up?\n\nJenn: We should be done around ten-thirty. At the church?\n\nMe: Sounds good. \n\nJenn: Thanks again for tonight.\n\nI went to bed that night, a satisfied woman. And I know what some of you all are thinking. But you would be wrong. I was just satisfied knowing there might be a future with a certain cute blonde with a tight butt. \n\n<center>_\\|/_</center>\n\nThe next morning, I was waiting in the parking lot at the church when the two of them walked out. Madi was skipping around Jenn, all excited. \n\n\"Glooooooooria,\" sang Madi.\n\n\"So, I take it her rehearsal went well.\" My head bobbed to her singing. \n\n\"Yes, this one is so excited.\"\n\n\"Miss Whitney, would you like to come to my play?\"\n\n\"I would love to sweetie, when is it?\"\n\n\"They are going to be on for the Christmas Eve service. Is that ok? I thought about asking you but not sure if you have family plans.\"\n\n\"I think I can fit it in.\" This will be a fun conversation with my mother. 'Mom, change of plans. I won't be at Uncle Silas' with the family. I'll be in church chasing a skirt.' She'll probably pee her panties. She was none too happy when I quit going to church when I went to college. \n\nWe pulled out and drove the short distance to Value Village. I realized how much I was learning from Jenn. This was going to be my first time inside a thrift store. Normally I shopped at upscale stores. I was impressed with how clean and lit up the place was. My mental image was that of a dark old warehouse, with old dirty linoleum floors. The floor was linoleum, but clean and nice. We found the section that had Jenn's size, definitely smaller than mine. \n\nShe clearly knew what she wanted. No dresses. But she tried on a few skirts and several pairs of slacks. A few were placed to the side to go back, as they needed bigger hips than she had. We then found tops that would go with them. In the end, with some careful mixing and matching, Jennifer could make about three weeks of outfits. And since no trip is worthwhile without shoes, we picked out a couple that worked for her. Two pairs of flats, a pair of low chunk heel pumps and a really cute pair of gray suede ankle boots. I looked for a pair for me, but nothing in my size. \n\nI left the two of them briefly and wandered the through the girls' dresses. I spotted a navy-blue dress that was just right for Madi and slipped it into the cart as well. Jenn saw me slide it in and gave me a thumbs up. \n\n\"What are those?\" Jenn asked as I opened up the back of my Jeep to put away our bags after we finished our shopping. \n\n\"Just my old figure skates.\"\n\n\"Are you a ringer?\"\n\n\"My mom made me skate a bunch as a little girl. I quit in high school, but after college, Heather and I went a few times. I'm ok, just don't ask me to do a double axle or anything crazy.\"\n\n\"Well, I just hope to stay up for more than two seconds.\"\n\n\"I'll be right there for you and for Miss Madi as well. But first I think we need some lunch, Jenn, you good with burgers?\" \n\n\"You bet. Where to? We haven't eaten out in over a year since we moved here.\"\n\n\"Then we're going to a local institution.\" We pulled into the parking lot of a local chain of drive-in burgers. So much better than any of the national chains. Many of the local bigwigs and politicians have been spotted at its various outlets. \n\n\"Oh, I know this place,\" chimed in Jenn, watching other people collect their food. \"Madi, remember the cheeseburgers wrapped in a yellow paper at the shelter? They came from here.\"\n\n\"The owners are good people and help a lot of local homeless charities. I'm not surprised they donated food to the shelter. My favorite is the deluxe with a chocolate shake.\" It didn't take long, but we were back in the Jeep with three burgers, shakes, and fries. \n\n\"I got a strawberry shake Mommy, what did you get?\"\n\n\"Chocolate, just like Miss Whitney.\"\n\nOnce we finished, we headed north out of the city a bit to the local ice rink. After getting the two of them rental skates, we headed to the ice. The two of them couldn't have been more different on the ice. Madi's dad must have been Scandinavian or something, as we got her a training stand and she just took off and was going around fine after just a few minutes. Jenn, on the other hand, was a wall hugger. \n\n\"Come on, Mommy, just let go. It's easy.\"\n\n\"Here, take my hand.\" Holding it out, she latched on. \"I got you.\" We skated around slowly. I felt a tap on my other shoulder.\n\n\"Fancy meeting you here, Whit.\"\n\n\"Molly! What a surprise.\" A moment later, Dylan skated up with a perfect hockey stop. \n\n\"Let me guess, Jr. Hockey Dylan?\" \n\n\"Did the Kraken sweater give it away? Yeah, I did the junior hockey thing, but knew I wasn't good enough for the NHL so went into accounting instead.\"\n\n\"Molly, Dylan, this is my friend Jennifer. And over here is her daughter Madison.\" She was clutching to Mom at this point. \"Jenn, Molly is my best friend, and I used to work with both of them.\"",
        "\"Nice to meet you both.\"\n\n\"Nice to meet you as well, Jennifer. Whit here was talking about you nonstop at work.\" She winked at Jenn. \"Until she left me, that is.\" I loved her look of mock indignation. \n\n\"You're so cute when you're pouting, Molls. Dylan, you'd better take care of this one for me, will ya?\"\n\n\"Oh, he is taking care of me alright!\" laughed Molly as Dylan pulled on her arm.\n\n\"I think you better let Whitney be with her friend Molly,\" said Dylan. They waved as they skated away.\n\nI yelled back at them, \"Molly, details later or else!\" She just waved at me. \n\nJenn was giggling as we resumed trying to get her to skate. Slowly, we moved around the rink. I skated backwards, holding on to both her hands as her muscles learned their new skill. I kept glancing down at Madi, who had one hand on my leg and the other stuck straight out for balance. \n\n\"Look Mommy, I can do it.\" She let go and took off a bit. \"Come on Mommy, you can do it.\"\n\nJenn looked at me, and I nodded my head to give her encouragement. She let go of my hands and skated on her own. It was shaky at first, but she was moving under her own power. Deliberately, for sure, but she was skating, and not on her ankles. \n\nOthers were whizzing by, but we were off to the side and doing our best to stay out of the way. A moment later, Madi squealed. I think it was in glee, but it caused Jenn to look away for a moment. But that was all it took. \n\n\"Waaaa\" her arms flailed. I could see her going down, so I reached out and grabbed her. Grabbing her waist, I pulled her in close as she steadied herself. I noticed we were both nose to nose, looking into each other's eyes. One thing came to mind, it was so natural, and I did it. I kissed her.\n\n<center>_\\|/_</center>\n\nAuthor's note: Thank you for sticking around to the end of this chapter, I hope you enjoyed it. If so, please consider providing some feedback. Votes, comments, or PMs are all welcome. I do have more chapters of this story in the works, so follow me to be notified when the next part is published. If you noted a grammatical mistake, please let me know the specific details of the issue(s) in the comments or via PM. I'll endeavor to edit this as time permits. "
    ],
    "authorname": "GinnyPPC",
    "tags": [
        "drama",
        "lesbian romance",
        "slow burn",
        "lesbian drama",
        "love story",
        "romance",
        "romantic",
        "first time"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/catering-girl-ch-01"
}