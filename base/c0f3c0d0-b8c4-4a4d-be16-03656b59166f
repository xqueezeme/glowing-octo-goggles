{
    "title": "Adventures of Hollywood Jim Ch. 26",
    "pages": [
        "\"I'm back! UH! Back in the New York Groove! I'm back! UH! Back in the New York Groove!\"\n\nChris and I sang that song over and over (we only knew that much of it!) as our plane landed at Kennedy Airport with the rest of the tour staff.\n\nNew York City was now before us. Neither of us had been here before and it was like our Vegas trip all over again. Only this time, it would largely be for fun. The Triple Threat Tour was going well and the NYC shows would be one of the key events on the tour. And we also had some business of our own to take care of. A big PR firm was looking to expand its interests in Los Angeles and wanted to see us and our work firsthand. \n\nThough there was no snow on the ground, it was a brutally cold day when we arrived. The biting wind really reminded us of how we weren't in LA. \n\nWe had a limo for transport to the Plaza Hotel, and the accommodations were perfect, as expected.\n\nAnd there was an added perk of membership at an exclusive 24 hour health club called Empire Fitness. \n\nI was immediately interested in that. I had gotten into the fitness culture in California and really wanted to keep up my regimen wherever we went.\n\nOnce we checked in, I immediately headed over to Empire.\n\nThe club was a vast complex of regimens, equipment and facilities. \n\nMy workout always started with a treadmill run. I clicked on my IPod and I got into my running groove. One machine over from me was an athletic looking beauty wearing blue running shorts, a grey \"UCLA\" t-shirt, her light brown hair in a ponytail.\n\nWe both looked at one another and I suddenly realized who I was running with.\n\nJennifer Aniston.\n\nHoly shit! I thought. No matter how many starlets I'd seen (and seen in other ways) it was still the stargazer in me who came out when they saw someone famous. You wonder, 'how should I handle this? Do I talk to them? Not talk to them? What's the protocol?' Thank god, someone else made the first move;\n\n\"Is that one of those new IPods?\" I heard her ask.\n\n\"Huh? Oh, yes, yes it is. I really like-\" I said stopping my run. \n\nAnd forgetting the machine was still on and running. I was promptly thrown backwards off the machine and into a wall.\n\n\"Oh my god!\" Jennifer cried out. She immediately jumped off her machine and crouched down where I'd landed.\n\n\"Are you OK?\" she asked with concern.\n\n\"Oh yeah. Not the first time I've done that.\" I said rubbing the back of my head and chuckling. \"I keep forgetting to wear my helmet when I do that.\"\n\n\"I'm so sorry! You're lucky you didn't get killed the way you flew off.\" She said.\n\n\"Well, it's happened before.\" I replied. \"I'm Jim.\" I offered my hand.\n\n\"Jennifer. Great way to meet someone right?\"\n\n\"It certainly makes an impact.\" \n\nAnd we both laughed.\n\nShe helped me up and I resumed my workout, but this time walking.\n\n\"As I was saying, yes, this is a new IPod. And I really like it.\" I said to Jennifer\n\n\"I really should get a new one, I had a really great one but it self destructed.\" She said\n\n\"Self-destructed?\" I said, confused.\n\n\"Well, I got mad at someone and threw it at him.\" She said hesitatingly.\n\n\"Ah, I see now.\" I answered. \"A lethal weapon, eh?\"\n\nShe looked at me as if I'd said something very wrong.\n\n\"No, no just joking!\" I reassured her.\n\n\"Thanks, I never know who I'm talking to sometimes and what might happen if I do.\" She seemed reassured that she could trust me a little.\n\n\"Oh, don't worry about me.\" I said.\n\n\"Are you from here?\" she asked\n\n\"No, L.A. My friend and I are working on the Beyonce' tour, plus we're here for a meeting. He runs a photo company.\"\n\n\"Oh, really?\" Now she seemed suspicious about who I really was.\n\n\"Right, we do promo photos for movie companies, no paparazzi stuff.\" I explained. \"We're the tour photographers for Rhianna and Tigress.\"\n\n\"Oh, I get it.\" She said.\n\nShe finished up her treadmill workout.\n\n\"Is that show in town?\" She asked.\n\n\"Yeah...2 nights at the Garden...we just arrived this morning...wicked cold out there.\" I said while still running. \"I've been in LA too long.\"\n\n\"I was thinking of going to that, friend of mine was trying to get tickets.\" She said, leaning on the edge of her treadmill. \n\n\"I can get 'em for you.\" I slowed down to a walking pace.\n\n\"Really? Oh my god that would be great.\" She said smiling.\n\n\"Could we possibly add, uh, dinner to this package deal?\" I boldly added.\n\nShe looked at me and smiled a little more.\n\n\"I think we could.\" She replied.\n\nWe both smiled and continued our treadmill work.\n\nJennifer was really into her workouts, we did a good amount of weights, rode stationary bikes, even did a run around their top floor track. She kept up a steady conversation throughout. I don't know how many laps we did, but we were quickly worn out. \n\n\"I'm gonna hit the pool, how 'bout you?\" she asked.\n\n\"Uh, yeah. Why not?\" I replied.\n\n\"See you down there.\" She said and walked away, she had a great \"walking away\" ass.\n\nI found my way back to the locker room and changed into my swimsuit. When I got to the pool area, Jen was already swimming laps in the pool. She stopped when she recognized me. \n\n\"Hey! There you are! Come on in, hot shot!\" she called.\n\nI walked in and joined her in the middle.\n\n\"How many laps do you do?\" she asked.\n\n\"As many as I can.\" I said.\n\n\"OK, I'm gonna do 3 more.\"\n\n\"That sounds good to me.\" I said.\n\nI was soon swimming laps with Jennifer Aniston. She had on a blue one piece suit. She had such a great body, it was very toned. Her tits looked nice and her ass was nice too. Even with swimming goggles on. I did 3 more laps of the pool with her. It was tough not to watch her body slither through the pool like an Olympic champion, but somehow I did. After a few laps, it was Jen who stopped. She stood up in the pool.\n\n\"OK, I'm going in the steam room, how about you?\" she said.\n\n\"That's a good idea.\" I said.\n\nShe got out of the pool and headed for the steam room entrance. It was a large room with benches on escalating levels. There was a thick cloud of steam that enveloped us as we walked in.\n\n\"Oh! We're alone, good.\" She said\n\n'We're alone?' that sounds odd, I thought.\n\nJennifer went to one of the benches and stretched out. Her suit showed off her perfect curves. Her hair was matted down by the pool water, but still looked great. I found a seat a few feet away from her.\n\n\"Why are you over there? Sit over here, next to me.\" She directed me with a smile.\n\n\"Uh, okay.\" I said hesitantly. Like I said, situations like this I have no idea how to handle. She had propped herself up against the wall of the steam room, stretched her long legs out, and looked hot. \n\n\"So how long have you been doing photography?\" she asked.\n\n\"Oh, not too long. My friend has his business and I took him up on an offer to join him out there.\" I said.\n\n\"Out where?\"\n\n\"California, I moved there.\"\n\n\"Oh really? From where?\"\n\n\"Connecticut, we're both from there originally.\"\n\n\"Wow! I used to go up to Greenwich a lot when I went to school here.\" She said.\n\n\"Well, I lived a lot further away from Greenwich so I'm sorry we never got to meet.\" I then got the courage to be slightly flirtatious with her. \"Uh, No offense, but I think you must've been a lot of fun in school.\"\n\n\"Oh, I was something!\" She said with a laugh. \"I drove the teacher's nuts!\" she laughed. \"What about you?\"\n\n\"Me? Oh god, I was a wreck!\" I said with an embarrassed chuckle. \"I was the poster child for geek of the year.\"\n\nJennifer laughed heartily as I told her my high school tales of woe.\n\n\"Looks like you've recovered rather well in the years since.\" She said smiling.\n\n\"I suppose you could say that.\" I said, now getting my confidence back.\n\nWe were smiling at one another, she looked so pretty.\n\n\"So...how long will you be in town?\" she asked slowly.\n\n\"Uh, just for the shows at the Garden.\" I replied, I had a feeling something was up given the tone of her voice.\n\n\"Really...and you can get me tickets to the show right?\" she said, I could feel her toe slowly brushing against my leg.\n\n\"Yes, uh, absolutely...Jen, uh, Jennifer, uh...Ms. Aniston.\" I was stammering now.\n\nShe smiled more now.\n\n\"You can call me Jennifer, Jim.\" She said reassuringly.\n\nShe sat up and held my hand in hers.\n\n\"You're OK, kid.\" She said as she kissed me on the cheek.\n\n\"That's good to know.\" I said with relief.\n\n\"Somebody like you isn't always around, you know.\" She said with a sly look on her face.\n\n\"What do you mean?\" I was somewhat confused.\n\n\"Well, somebody who's not looking for something, or working an angle. You know what I mean.\" She continued.\n\n\"Oh, I, uh, see.\" I think I knew where she was going.\n\n\"And somebody who's...kinda cute. Like you.\" She said slowly as she got closer to me.\n\nI could see her beautiful eyes close up now. She got close to me and kissed me softly on the lips. I responded the same way. The steam in the room certainly complimented the steam we were generating. \n\nJennifer smiled and laughed slightly.\n\n\"That was nice.\" She said.\n\n\"Um, yes, yes it was.\" I said hesitatingly.\n\n\"I wonder if I can get away with this...\" she said.\n\n\"What? A kiss, I think so...\" I started to say just as Jennifer started to slide the top of her suit down revealing her very nice C-cup tits with tiny nipples. I was speechless at how bold she suddenly was.\n\n\"No I mean getting topless like this. I like being naked.\" She said.\n\n\"Oh! I, uh, see now.\" I said, trying not to be totally lecherous and stare at her.\n\n\"It's OK, you can look. They're nice aren't they?\" she said as she felt them.\n\n\"Uh, yes they are.\" I said slowly.\n\n\"And I can tell you like looking at them. You wanna touch them?\" she said.\n\n\"I-I-I'm not sure if I should.\" \n\n(Oh, what a dumb thing to say!)\n\nJennifer got closer to me and we kissed again.\n\n\"Come on, touch me Jim.\" She said softly.\n\nI reached out to her tits and slowly put my hand on one, the steam had made it slippery, and my dick suddenly responded as I slid my hand around it.\n\n\"That feels good.\" She said. \"Oh, that feels good.\"\n\nI continued to feel her tits and my fingers went around the nipple, I kissed her as I felt her and she responded with little breaths. I was doing the same thing.\n\n\"Babe, maybe we should go somewhere else?\" she whispered.\n\n\"Like, where?\" I said\n\n\"Meet me outside the club in a bit, we can go to my hotel.\" She said.\n\n\"Okay.\" I said.\n\nJennifer quickly pulled her top up just as someone else entered the room. We looked at one another and she left the room first, I followed a few seconds later. I went to the locker room and dressed quickly, then waited outside the club in the NYC chill. Jennifer appeared a few minutes later in a black down jacket and blue jeans. Her hair tucked inside a wool hat. \n\n\"Should I get a cab?\" I asked.\n\n\"Good idea.\" She said.\n\nMy cab hailing skills were better than I thought, we got one almost instantly. Jennifer directed the driver to her hotel using a lower tone voice than you usually heard from her, probably to mask any recognition of her. She looked at me with a sly smile as we pulled away from the club. She placed her hand on mine and we looked at each other, she had such a sweet look on her face, so I impulsively leaned over and kissed her. She responded the same way.\n\nBefore we knew it, we were at her hotel. It was a smaller, boutique-style place. We went in and up to her room. We were alone in the elevator and holding hands throughout. When we got off we slowly walked down the hallway to her room. Once we were inside things got interesting very fast.\n\nWe quickly took of our coats and Jennifer embraced me.\n\n\"Oh, take those clothes off baby, I want you sooo bad now!\" she said in that distinctive voice of hers.\n\nHer room was so much warmer than we'd left outside. I fumbled with my clothes as she quickly removed hers. I tried not to watch her as she disrobed. But her tits looked even better in the room's light and out of the corner of my eye I could see she had on black panties. \n\n\"How do I look?\" she asked.\n\nI stopped for a moment and saw that she was totally naked in front of me now. I was speechless. She had very nice, round tits with little nipples that were already pointing outwards. And her stomach was perfectly flat. Her pussy was shaved with a bit of dark hair around it. She took a smile vial of perfume and casually sprayed it on her neck and body\n\n\"Fabulous.\" I said slowly to this TV superstar.\n\nShe walked over to me and we embraced, my dick was already pointing at her love nest.\n\n\"You look good too.\" She said giving me the once over.\n\nShe guided me to the bed and I laid down, she spread my legs wide and began to feel my increasingly hard dick. She let it slide through her hands, her fingers felt like feathers as they caressed it. \n\n\"It's nice.\" She said with a smile.\n\nThen her lips began to kiss its length, her brown hair casually fell over my dick, making it even more sensitive to her touch. I knew she had it fully in her mouth now. I could feel her tongue too. She pushed her hair aside and looked at me.\n\nJennifer Aniston was giving me a blowjob. It was really her.\n\nShe smiled as she came off my dick and looked at me. \n\n\"Did that feel good?\" she asked with a giggly smile on her face. \n\n\"It felt incredible.\"\n\nShe caressed my dick softly and studied it.\n\n\"I like the head, it's very pretty.\" She said\n\n\"You're prettier.\" I said impulsively\n\n\"Aw, thank you baby.\" She said.\n\nJennifer moved up to my face and we kissed long and lovingly. Her beautiful eyes gazed into mine.\n\n\"You're so beautiful Jennifer.\" I said softly.\n\n\"Thank you, you're a sweet man.\" She responded with another kiss thrown in.\n\nMy dick was rubbing against her pussy the whole time we were close, but I wanted to feel this TV goddess some more. I moved down her front and tried to kiss those tits of hers. She turned over and lay flat on the bed, I began to kiss and suck her tits, she was moaning in response. My right hand was caressing one tit while I sucked the other.\n\n\"Oh yes...un-huh...mmmm, that's it baby...uh-huh...\" she moaned.\n\nShe ran her fingers through my hair as I sucked her, my right hand now went down to her pussy, it was already soaking wet. I knew she'd be ready anytime I was. I softly caressed her pussy, gradually easing a finger inside her. I could hear her breathe in suddenly as she felt my finger enter her.\n\n\"Oh! Oh yeah...oh god yes.\" She said. She was breathing very heavily the longer I did this. Between my tongue and lips on her tits, and a finger probing her pussy, she was one happy \"Friend\"!\n\nI now made the bold move of kissing down her belly. She knew what I was doing and I saw her hand move down there too and begin to rub her pussy, she wanted to keep the good feeling going. It was so hot watching her fingers slide down the front of her pussy. I wanted to join in with my tongue. I inadvertently kissed her finger as it moved around, and I tasted her juices, she was so sweet. Jennifer's hand disappeared and my tongue and lips replaced it. I dove right into her, using my tongue to swirl around the outside and then onto her pussy lips. They were swollen with lust and I could see inside her, my tongue went all the way in like a tiny cock would. Jennifer's body spasmed and she let out a long, slow moan.\n\n\"Ohhhhhhh......that's it! Oh my GOD THAT'S IT!!!\" she yelled out. \"OH YEAH! OH GOD I'M COMMMMMINNNGGGGG!!!!!\" she screamed and laughed.\n\nI looked up and she had propped herself up on her elbows and was smiling at me.\n\n\"Baby, you're an animal!\" she said with a big smile. \"I've never felt like that!\"\n\nI smiled back. I was without words at this moment. I was still trying to tell myself that the girl I'd just seen on TV the night before was in all her naked glory in front of me and telling me I was some kind of animal.\n\n\"I think you deserve something more.\" She said. Jennifer sat up on her knees, I did the same, and we kissed. She held my dick in her hands.\n\n\"Let's make love honey.\" She said softly, she was so sexy at times like this.\n\n\"Yes...should I get a...\" I started to say.\n\n\"Oh, don't worry baby, I'm on the pill. Let's just do it.\" She said softly.\n\nI sat up, balanced myself on my hands, and slowly put my dick into Jennifer's hot pussy. She closed her eyes slightly and smiled as I entered her.\n\nA soft moan came from her lips, then a look of love in her eyes.\n\n\"Oh baby...that feels so gooodddd.\" She said softly. \"Oh baby...do it.\"\n\nI began to slowly fuck her, her pussy felt so hot as it enveloped my dick. My body began to pick up the tempo as we matched one another's thrusts. I reached around and held her as I fucked her harder. I could feel her legs wrap themselves around me too. She was breathing heavily and I fucked her harder now.\n\n\"Oh god Jim! YES! Fuck me baby! FUCK ME!\" she yelled out.\n\nI was face to face with her and I could smell a sweet perfume on her neck. But her face had a look of wanton lust on it.\n\nShe leaned up and we kissed softly.\n\n\"You feel so good inside me...\" she whispered.\n\nI slowly turned onto my back and she was now on top of me. She gave me a big smile and began to rock herself back and forth on my dick. She was clearly enjoying this and could tell I loved seeing her like this, and she glammed it up for me by running her fingers through her hair and giving me looks of ecstasy. Then she held her tits and seductively licked her lips. Then giggled at me. I was smiling too. We both knew we were really into one another at this moment. \n\nShe slowly withdrew from me and turned over to show me her nice ass.\n\n\"Come on...do me this way...\" she said.\n\nI got up behind her and felt her super soft ass. I remembered her Rolling Stone cover from long ago when her ass could be seen just out of focus. That gave me many memorable dreams long ago, and now that same ass was here, waiting for me. This was no dream. \n\nI rubbed my dick on her pussy, it felt so wet and slippery that I slid in with no resistance. She let out a long slow sigh of pleasure. Then I held her hips and began to slowly pound that nice ass. \n\n\"Uh...uh...yeah babe! Fuck my ass! Huh-yeah!\" she said with gusto.\n\nI began to really pound her ass now. She was letting loose a series of passionate moans as her cute ass was fucked. I reached down and held her hair like a horse's bridle and she loved that. She sat up slightly, looked over her shoulder and we kissed. I withdrew from her and she got on her back again, I wanted to finish things looking at her. I fucked her hard this time, and I could feel my explosion coming.\n\n\"Jen...Jen...I'm gonna come...I'm gonna come...Oh god...I'm gonna...HUH!\"\n\n\"Oh god baby! Yes! I feel you...I feel you...I feel you...\" she said loudly, then softer as she felt my climax subside. I lay on top of her, our sweat had practically bonded us together. I rolled off and held her close.\n\nJennifer Aniston lay with me in the silent room as darkness quickly fell. The NYC traffic could still be heard outside. Her naked body still looked great as she sat up and touched my nose.\n\n\"Hey hot shot.\" She said with a smile. \"Think you can do an encore?\"\n\n\"Whoa...I sure want to.\" I said somewhat out of breath. \"Does this mean I have to get...get backstage passes too?\"\n\nJennifer laughed.\n\n\"Well, you just did the performance of a lifetime.\" She said softly.\n\nJennifer lay softly caressing my chest.\n\n\"Why don't we get cleaned up, we're both pretty sweaty here.\"\n\nJennifer got up and took my hand, leading me to the showers.\n\n\"Can I just look at you for a moment?\" I asked hesitantly.\n\n\"Only if I can look at you, Mr. Hot Shot.\" She said slyly.\n\nWe both stared at one another. She softly held my dick, which immediately responded to her touch by twitching, making her laugh.\n\n\"Oh my god, it's so beautiful.\" She said.\n\n\"So are you.\" I said lovingly.",
        "She placed her hand on her heart.\n\n\"Aw, you're such a sweetheart.\" She said as we kissed. \"Come on, we've got to get you cleaned up.\"\n\nJennifer started the shower and we stepped into the hot steam. Our hands were all over one another once again and my dick was like steel as her hands were on my body. She took the soap and began to lather her body, then mine. She was tenderly holding my dick all the while. I used the lather in my hands to slowly wash her tits. Then moved down to her pussy, alternately lathering and finger fucking her. I then got down on my knees and started to lick that gorgeous pussy. She was holding my head as I tongue-fucked her, and I could tell her knees were getting weak as she stood there.\n\n\"Oh god! Oh my fuckin' god!\" she cried. \"I'm gonna come! Oh yesssss....\" She cried out as she climaxed. She was wobbly and came down to the floor with me as we embraced and kissed. Now it was my turn. I stood and Jennifer was presented with my manhood inches away from her. She laughed at what was before her now.\n\n\"Oh my...look at you.\" She said with a laugh. \"Big dick, baby.\"\n\nShe began licking my dick again, tonguing my balls too.\n\nI could wait no more, I stood her up and turned her around and shoved my dick into her ass. She gasped at how fast I'd moved, and she loved it.\n\n\"Oh yeah, baby! Do it...do it!\" she said very sexily.\n\n\"I wanna come on your tits baby...\" I said.\n\n\"Oh yeah! Come on my boobs...come on my boobs.\" She said breathlessly\n\nI pulled out and she immediately laid down on the tub floor and began to rub her pussy. I stood over her, my dick in hand and we were jerking off together.\n\nHer head went back and she gritted her teeth as she rubbed herself.\n\n\"Come on baby...come on hot shot.\" She said with a sexy edge.\n\nOnce I saw her fingers enter her pussy, that did it.\n\nI exploded onto her wet soapy body.\n\n\"Oh, I love it!\" she laughed as my come drenched her.\n\nJennifer sat up and milked the last drops out of me, then took my dick into her mouth and sucked me further.\n\nShe stood up. \n\n\"That was so cool. Thank you!\" she said with a kiss.\n\nWe washed one another off and dried ourselves.\n\nJennifer Aniston was one friend I wish I had more of.\n\nShe had an early meeting so we had to part. I made a quick call to Chuck Tyler and had tickets waiting for tomorrow night's show.  \n\n\"OK, hot shot. We had some fun, we'll have to meet again in LA.\" She said with a hug and a slip of paper with her cell number on it.\n\n\"I'll be there. I owe you a dinner.\" I said.\n\n\"Bye, baby.\" She said.\n\nWe kissed one last time as I left her room and returned to the chilly NYC streets. "
    ],
    "authorname": "hollywoodjim",
    "tags": [
        "jennifer aniston",
        "concert tour",
        "new york city",
        "workout",
        "steam room",
        "cold day",
        "showering together",
        "totally shaved",
        "cute ass"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/adventures-of-hollywood-jim-ch-26"
}