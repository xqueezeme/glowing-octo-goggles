{
    "title": "Spellbound",
    "pages": [
        "Author's note; Welcome to my Halloween contest entry. Since I've been writing incest stories I've wanted to write a compelling taboo Halloween story that paid homage to some of the great elements that go into classic supernatural tales and movies, but at the same time have my own spin thrown in. I feel that the following story succeeded in doing that, and hope you'll agree. Enjoy \n\nPrologue\n\n1 year ago\n\nBen jerked his head from his pillow and looked around his dark bedroom. He'd sworn he'd heard a loud bang. He realized the reason he could hear anything is his I-pod had died, or else he'd still have music blaring in his ears.\n\nIt wasn't easy to fall asleep listening to heavy metal, but it was better than listening to his parents fight again. This time it was over dad ruining a special night they had planned. Ben had hoped it would go well. The last few months dad's drinking had gotten out of hand and he was becoming verbally abusive to mom, and to him. \n\nBen didn't worry about himself, he'd be going to Florida State in a couple months, but he worried about his mother. He suspected his father had hit her a couple times, but wasn't sure and it's not like mom would admit it. \n\nEven if he weren't touching her, he wasn't touching her in a good way either. A lot of their fights revolved around Dad not bothering with mom anymore in or out of bed. Not that he wanted to think about his parent's sex life, but they were only early forties and mom was an attractive woman. \n\nNot just attractive, but sweet and loving. A good woman as dad used to call her before he was let go from his long time law firm. Now he was with a small firm, working twice the hours for half the pay and drinking his frustration away.\n\nThe last argument had ended with mom saying she was through being ignored and mistreated and she wanted her old husband back. Dad had seemed to come around, tearfully admitting he'd been an asshole to her and apologizing to Ben as well.\n\nTonight was his idea. Their favorite restaurant, dancing, and they were going to spend the night at a hotel. Dad had winked at him when he said the hotel was where he was really going to make things up to mom.\n\nBen had wanted it to happen that way, but instead dad had staggered home three hours late from work, reeking of scotch and in a foul mood. They'd had three separate yelling matches. The last one, a couple hours ago had sent mom into their bedroom. Ben had heard the lock click after the door was slammed shut.\n\nHis father was downstairs banging around in his den, yelling even though he was alone. Ben decided to stay upstairs in his room, avoiding his father, and letting his mother have some time alone.\n\nMore alone time, was more accurate. Mom had been spending a lot of time holed up by herself lately. In a way he didn't mind because she'd been acting pretty damn strange. That strange behavior involved him and had him feeling uncomfortable. It seemed like every time Ben would turn around she was staring at him and it made him uneasy. \n\nShe'd recently walked in on him in his room several times. Each time she'd caught him in various stages of undress. Two nights ago he had just stepped out of the shower and she'd come in at that moment. \n\nHe was completely naked, and grabbed for a towel. In the brief seconds he'd been frozen by surprise at her entering, he'd sworn she was staring at his cock. That was crazy of course, but she'd remained in there, talking causally to him.\n\nHer eyes roamed across his chest and kept dipping down below his waist, even though by then he'd gotten a towel around himself. There was look in her eyes that reminded him of how his girlfriend Sheila would look at him. \n\nBen could have chalked that up to him just being flat out wrong, but the last couple of week's mom had been very...touchy. She'd always been reasonably affectionate with him; a motherly hug, a kiss on the cheek at night.\n\nRecently those kisses had lingered and twice she'd caught him briefly on the lips. When she hugged him, she held him close and didn't let go right away. The last two times, Ben had been painfully aware she wasn't wearing a bra.\n\nLast night when she'd hugged him she had planted a small kiss on his neck. Ben had pulled away from her, but as much because he didn't like his own reaction. The little kiss, in such a sensitive place, had sent a not unpleasant shiver through him. \n\nHe'd noticed her looking at him expectantly and when his eyes lowered, had seen her nipples were erect. She'd been wearing a flimsy white top and he could not just see they were hard, but the darker skin around them through the shirt.\n\nHe'd awkwardly said good night and got his ass upstairs. He's lay on his bed, full of self-loathing as he waited for his hard on to go away. That was his damn mother! Today he'd been embarrassed just to see her, and had tried to avoid her.\n\nTo his surprise, she'd brought it up. She looked nervous and seemed confused as she apologized for getting 'a little too close to him' and it wouldn't happen again. Mom confessed she was lonely and neglected and had sought a little more closeness from him. \n\nBen said to not worry about it, but found himself really hoping dad would get his shit together and make tonight a great one. Maybe it would snap him back into being his old self. Ben jumped at a soft knock.\n\nBefore he could respond, the door opened. In the dim glow of the small light plugged into the wall in the hallway, he saw his mother slip into his room. He heard her approaching the bed and caught a whiff of strawberry body spray.\n\nBen had always loved that smell, ever since he was a little kid. At one point when he was older mom had confessed she hated it. Only wore it once to try it out, but when her little boy said he liked it, she wore it for him. At this point she hadn't worn that scent in several years. \n\n\"You awake, baby?\" she asked. \n\nHe felt her weight settle onto the bed next to him, and thought 'baby?'\n\n\"Yeah, everything okay?\"\n\n\"No, not at all.\" \n\nConcerned, Ben sat up and leaned over, turning on the lamp on his night stand. \n\n\"What's wrong, mom? I....\" he stopped speaking when he saw her. \n\nMom's long black hair, which she usually wore in a clip or a pulled back, was not just down, but styled. She'd put curl into it, and several dark ringlets framed her face. She had makeup on. Pink blush on her cheeks and her lips painted a deep red. \n\nShe'd done her eyelashes in black mascara and she was sporting a blue eyeshadow that matched her...what the hell was she wearing? Mom had a blue nightie on that was pretty much lingerie. The dark blue silky piece featured thin black straps that left most of her shoulders bare, and was dangerously low-cut.\n\nBen could see not just the top, but the inner halves of her breasts. As she had been every day since she found it in the closer, mom wore the silver necklace with the weird purple stone in it. The stone seemed to be glowing as it reflected the light from the lamp.\n\nThe longer he stared at the stone the more he became aware of the scent of her body spray. It seemed stronger than before. Even though his eyes were on the stone, he found himself thinking of her breasts. Mom did have a nice set of tits for her age.\n\nHe blinked that thought away, what the hell was that? Nonetheless, his eyes dropped below the pendent. The nightgown was so low cut, if she leaned forward, he had no doubt he'd see her entire breast. It was tight enough to cling to her curves including hugging her breasts and showing off her hard nipples. \n\nLength wise it could not have gone much past her ass and with her sitting it had ridden up well past the midway point of her thigh. Mom wasn't chubby, but not slender either, and with her legs open, her fleshy inner thighs were exposed to him. \n\nHer feet were bare and he noticed both her toes and finger nails were the same blue as the nightgown. \n\n\"Like it?\" Mom ran her hand down over her breasts and stomach. \"I bought it to wear for your dad tonight\"\n\n\"Right, well, um...\" Ben pointed to the chair in the corner. \"I have a flannel shirt over there; you may want to put it on.\"\n\n\"Do I look bad?\" Mom frowned. \"Am I too old for this?\"\n\n\"No, but I'm your son and that's kind of, you know, revealing.\"\n\n\"It is isn't it?\" This time she ran both hands down over her breasts, and past the nighty, caressing her thighs. \"Simple, but sexy. I feel sexy tonight, baby.\"\n\n\"Why are you calling me that?\" Ben stared at her hands as they ran up and down her lush thighs, her blue nails a contrast to her fair skin. \n\n\"Because you're my baby. My baby boy.\" \n\nMom slid closer to him and put her hand on his arm, squeezing it.\n\n\"Hmm, but not so little anymore. You've turned into quite a sexy young man, haven't you?\"\n\n\"Mom, have you been drinking?\" Ben swallowed nervously when she trailed her hand down his arm and across his bare chest.\n\nIt was a warm night and he was naked beneath the sheet. He was also sweating, and not just from the heat. More concerning was the swelling beneath the sheet. Like when she'd kissed his neck, Ben was getting aroused. \n\n\"No, your father drinks enough for the two of us,\" she sighed. \"He really hurt me tonight. Told me he thinks I'm cheating on him.\"\n\n\"How could that be?\" Ben asked, happy to be on a topic that would get his focus off his mother's scantily clad body and odd behavior. \"You want more time with him. If you were cheating you wouldn't care he wasn't around.\"\n\n\"Try telling that to a drunk,\" Mom explained. \"Besides, he thinks that because I've been having dirty dreams and I guess I'm getting loud in them.\"\n\n\"Whoa, I don't need to know those things mom.\" Right back into the awkward zone.\n\nThings got more awkward when mom moved. One leg at a time, she drew her legs up onto the bed and was now kneeling next to him. As she'd drawn her right leg up, Ben was given a view up the short night gown and saw what no son should ever see. His mother wasn't wearing panties.\n\nThis time, however, his mind seemed in the right direction. He quickly looked away, and didn't linger on the vision or any reaction to it other than he needed to get her out of his room. This was fucked up.\n\n\"Can you blame a girl?\" Mom cupped her breasts through the blue material. \"I'm horny, baby! Your dad hasn't touched me in weeks and for months before that, hardly at all.\"\n\n\"Mom, you need to get off my....\"\n\n\"I do need to get off,\" Mom smiled, \"That's why I'm here.\"\n\n\"W...what?\" His eyes widened. \n\n\"I need it, Ben,\" Mom's voice lowered to a sultry whisper. \"Your mother's a woman. A sexy woman who has needs. I need to be fucked, baby boy.\"\n\n\"You're drunk or on something.\" Ben leaned away from the pillows, intent on getting off the bed. This was past crazy.\n\nMom shoved him back against onto the bed and swung her leg over his waist, straddling him. \n\n\"Mom, what hell are you...\" He was cut off when she put a finger to his lips.\n\n\"Baby, I'm so lonely and I'm so horny!\" She leaned so close, he could feel her breath on his face. \"Your mother needs to be touched.\" \n\nHer lips lightly brushed his. \"To be loved and appreciated.\" She slicked her lips, her pink tongue slowly sliding over the deep red lipstick. \"I need to get fucked.\"\n\n\"Mom, please...\"\n\n\"I've been having such nasty dreams,\" She had both her hands on his chest, trailing her nails up and down his skin. \"Dreaming of getting what I need. Dreaming of having a sexy young man in my bed.\"\n\n\"Young?\" Ben repeated, as she leaned into him. Her breasts were pressing into his chest, her nipples poking him through the nightgown.\n\nBut what he noticed more was the pendent being pushed into his chest. It was warm and seemed to be throbbing. Ben's heart raced and his breathing picked up. He felt flushed and his cock was now rock hard beneath the sheet. \n\nHard and throbbing. Throbbing to the rhythm of the pendent. \n\n\"Yes, young,\" Mom was now purring in his ear. \"Young and hard. Hard for me because he loves me and wants me so bad! He wants to treat me like a whore, but love me like his sweetheart.\"\n\nHer lips brushed his neck as they had last night and this time a soft moan escaped him. The smell of strawberries was in his nose, and her large firm breasts felt good against his chest. Her soft lips slid along his neck. \n\nAs if moving on their own, his arms slid around her waist.\n\n\"Hmm, that feels so good,\" Mom's hot breath in his ear caused his cock to twitch. \"Want to hear more about my dream?\"\n\n\"Yes,\" he moaned as she moved her hips, grinding on his trapped cock. Even through the sheet he could feel the heat between her thighs. \n\nNow the image he'd pushed away leapt into his mind. When she'd moved her leg he'd seen her pussy. Her pink lips and the dark patch of hair above it. That pink slit was what was rubbing his cock, and he found himself wishing the damn sheet wasn't there.\n\n\"I took all my frustration out on him. I sucked his hard young cock until he came in your naughty mother's mouth. Then he licked my pussy and made me cum!\"\n\nBen's hands were now moving up and down her back, sliding over the blue nightgown and her bare upper back and shoulders. Her skin was so warm, so soft. \n\n\"Then he fucked me! Oh, his young cock felt so good in my needy cunt.\" Mom moaned in ear. \"Took me in every position. Know what the best part was?\" \"It...gets better?\" His cock was so hard it hurt. He swore he'd never been this excited before. \n\nHe watched his hands as if they belonged to someone else as he eased the straps of her nightgown down her arms.\n\n\"It does, know who I was dreaming about?\"\n\n\"Tell me.\" He had the straps down to her elbows and mom pulled her arms back, slipping them from the straps. \n\nShe pushed the top down, allowing him to feel her now bare breasts against his chest, but didn't lean back so he could see them. It didn't matter, her hard nipples felt so fucking good, as did her firm warm tits squishing against his chest.\n\n\"It was you, baby.\" She flicked her tongue across his ear lobe. \"I've been dreaming of you fucking me every night for the last two weeks. I can't take it anymore. I need you baby!\"\n\nMom leaned back, but before he could look down to her breasts, she took his face in her hands and kept his eyes on hers. Mom's dark eyes seemed wider than usual and unnaturally bright. Ben frowned, what the hell was he doing? \n\nHis mother was on his lap talking dirty to him and grinding on his cock like a stripper giving a lap dance. And he was hard! This was mom, how could he...his eyes caught the pendent around her neck. It was glowing brightly\n\n\"Kiss me, Ben.\" Mom cocked her head and parted her full red lips. \"Give your mother a kiss.\"\n\nBen hesitated, he wasn't as excited as he had been before, but mom wasn't taking no for an answer. She kissed him, softly at first, her lips sliding across his. Ben kissed her back reflexively, but then when her lips lingered, tried to turn his head. \n\nMom held his face firmly in her hands and plunged her tongue into his mouth. Ben gasped, but not just from the presence of his mother's tongue in his mouth. A cool sensation flooded his mouth and something cold with the texture of melted ice cream flowed down his throat. \n\nWhatever it was had no taste, but he could feel the cold trail all the way down to his stomach. For a moment the cold sensation in his gut was painful. A moment later, the cold turned into a pleasant heat. \n\nThat heat seeped into his groin and he moaned when his cock, which had been softening with nervousness at his mother's advances, swelled to a full erection. The warm sensation was in his balls as well. Ben squirmed beneath his mother as she writhed on his lap, grinding into him.\n\nHe swore he was even harder than before and his cock felt ready to explode. Ben wondered why the hell he was resisting his mother's kiss, and not only returned it, but all but devoured her mouth.\n\nMom moaned into their taboo kiss when Ben's tongue darted across hers and invaded her mouth. Their lips pressed hard against each other, and Ben's hands slid down her back. He lifted the nightgown. and finding the bare cheeks of her ass, squeezed them hard. \n\nMom whimpered, and worked her hips harder into him. Ben was amazed at how firm her ass was, but was also being distracted by her soft tits pressing against him. God, he wanted to see them. \n\nAs if reading his mind, mom leaned away from him. She cupped her breasts, but this time her dark blue nails were on her bare flesh, teasing her rosy nipples.\n\n\"You like...oh!\"\n\nMom cried out when Ben lowered his head and sucked her right nipple into his mouth. He sucked and licked his mother's tit the way he had returned her kiss, lustfully. Mom moaned and shoved her breast deeper into his mouth. \n\nBen switched to her other nipple, while sliding his hands beneath hers and squeezing her breasts. They were soft, yet firm, and he was amazed at how heavy they were. \n\n\"Yes!\" Mom groaned, \"Suck that fucking tit!\"\n\nHer words sent a surge through his aching cock and he thrust his hips, pressing his trapped erection into her. \n\nMom swung herself off him, pulling her breast away. Ben leaned forward, intent on recapturing his mother's gorgeous tits. He stopped when mom whipped the sheet off of him, exposing his cock.\n\n\"Oh, look at how hard you are for your mother!\"\n\nBen moaned when she grabbed his cock and pumped him. He could feel himself throbbing in her hand and he swore his cock seemed bigger than usual. He gasped when she spit onto the tip of his cock and smeared it on his shaft.\n\n\"Oh, fuck,\" he sighed as his mother's hand glided along his now slick shaft. \n\n\"So big,\" Mom breathed, her tits heaving and her face flushed with excitement. \"So fucking hard.\"\n\nHer brown eyes were wide and burning with lust. Licking her lips, she whispered, \"I have to have it in my mouth.\"\n\nWith no hesitation, mom lowered her head and took him deep into her mouth. \n\n\"Oh, my God, Oh my God!\" Ben moaned as his mother bobbed her head in his lap.\n\nHer soft red coated lips slid along his shaft, and her wet tongue flicked around the purple head of his cock. When she reached the top. Mom moaned around him as if sucking him were the greatest thing she'd ever felt. \n\nHer dark hair had spilled across her face, and Ben gently pushed it to the side, and held it there. Mom's eyes were closed and there was a look of pure bliss on her face as she worked her son's cock in and out of her hot wet mouth. \n\nBen moaned at not just how good she felt, but the nasty loud wet gagging sounds she was now making. He leaned back against the pillows, moaning and staring in shock as his mother gobbled his cock like a damn porn star.\n\nShe was kneeling next to him, hunched over with her head in his lap with her night gown pushed down to her waist. Ben had never seen anything sexier and when she added her hands, cupping his balls while stroking him, his hips jerked. \n\nHis cock thrust hard into her mouth and mom once again groaned as if she were gaining sexual pleasure just from sucking him. Ben slid his hand through her hair and down her soft smooth back. \n\nHe grabbed the nightgown and pulled it over her hips. She was now completely naked other than the band of blue material around her waist and his eyes roamed lustfully over her body. He slipped his hand down past the nightgown and stroked her ass, cupping her cheek before dealing her a sharp little slap.\n\nShe purred around his cock, but continued sucking. Mom was gagging and drooling and he could feel her spit sliding down his shaft and dripping onto his balls. \n\nShe was bobbing her head violently, as if her lust had driven her to the point she was attacking it as much as sucking it. Her face was red and her eyes watering from pounding his cock down her throat. \n\nMom was sucking him to the point she seemed out of control and he loved it! Ben had never seen this level of lust or passion before, not even in the porn he watched. He worked his hand in between the cheeks of her ass and slid it through to her pussy.",
        "Holy shit, she was wet! His fingers glided through her soft moist lips and she cried out around him when he boldly plunged two fingers into her. Bold was the word. This was his mother!\n\n\"Put another one in,\" she gasped breathlessly around his cock, \"Get your mother's wet fucking cunt ready for her boy's big fucking dick!\"\n\nThe dirty talk sent another wave of lust through him and he drove a third finger into her, then placed his thumb on her clit.\n\nMom moaned and rocked back and forth, pushing his fingers deeper into her, then moving forward to take his cock down to his damn balls.\n\nBen felt so hard, so...big. His cock was so swollen in her mouth he thought he was going to explode and was amazed he hadn't come yet. Mom was back to her sloppy blowing and her pussy was contracting around his fingers.\n\nHer thighs were trembling, and she was whimpering around his throbbing dick. Leaning over her, Ben got his other hand between her cheeks and with no hesitation, drove a finger into his mother's asshole. \n\nMom squealed around him, and Ben groaned when both her holes tightened around his finger. Somewhere in his mind he wondered where this came from. A couple minutes ago he'd been rightfully trying to get her out of his bed.\n\nNow he was fingering her ass like she was some slut he'd picked up at a bar and she was pretty much acting like one. Again, moving as if he wasn't entirely in control of his own movements, he pushed second finger into her ass. \n\nMom screamed around his cock, and her hips bucked wildly into his hand. Her holes convulsed as she came with her son's fingers buried inside her. Somehow, even in the throes of orgasm, mom was managing to suck like a pro.\n\nLike him, his mother seemed far bolder and wilder than she had a right to be in this situation and proved it by shoving a finger unexpectedly into his ass, while taking him deep into her mouth. Ben cried out in surprise, then once more, but this time in ecstasy.\n\nHe'd never had, or wanted to have anything near his ass, but it felt so good, he immediately exploded into his mother's mouth. She was still yelping from her orgasm and it turned into a wet gurgling sound as her mouth filled with her son's cum.\n\nBen moaned loudly as his cock continued to erupt. He could feel the long spurts shooting into mom's mouth. Just as he'd never felt this hard, he was coming harder, and more than he ever had before.\n\nThere was cum oozing from both sides of mom's mouth, as she sucked him. She kept bobbing her head, slurping it back up, but more would come out. Mom released him from her mouth and jerked him off and even now cum was still bursting from his cock and into her face.\n\nMom moaned and moved her head back and forth, letting him spray her cheeks as well as catch more in her open mouth. His balls were tightening in her hand as they emptied the biggest load he'd ever seen into her face. \n\nWith a long shuddering whimper, Ben slumped back against the bed, gasping. Mom stared at him, her face dripping with cum. It was all over her hands and chest as well as his cock. She was breathing as hard as him and her pussy and ass were still quivering around his fingers.\n\nMom sat up and without bothering to wipe his cum from her face and tits, eased his fingers, from her holes, swung her leg over his hips and drove down onto his twitching cock. They both cried out as she bounced hard and fast on his hips, riding him like the out of control wild cat she'd been since they'd started.\n\n\"Fuck yeah!\" She yelled him his face, her eyes so wide they looked as if they were going to pop out of her head. \"I need this! Oh, fuck I need my baby's cock!\"\n\nBen wrapped his arms around her and eagerly sucked her left tit, not caring he was getting some of his own cum in his mouth.\n\n\"How's it feel to be inside your mother's hot fucking cunt?\"\n\n\"So fucking good,\" he spoke around her sticky nipple. \"Christ, you're so fucking hot, mom.\"\n\n\"Yeah, you think you're mom's hot? You like her being a fucking whore for you?\"\n\nShe drove down on him, then leaving him buried inside her, worked her hips on circles. Ben gasped as the head of his cock, still sensitive from coming, was worked around her hot tight pussy. He whimpered, but switched to sucking her other tit, while thinking that his cock had not softened at all, it was like he'd never come. \n\n\"Like mommy fucking you? Like how your cock feels inside my greedy little slit? Hope so, because I fucking love it!\"\n\nMom eased off his cock and all but threw herself onto her back between his legs. Spreading her legs, wide, she slid her hands between her thighs.\n\n\"Come suck it, \"she demanded, opening her pussy for him, and tapping her clit. \"Suck my cunt and make me cum again! God, I need to come again!\"\n\nBen leaned forward, getting his knees under him, and dove between her thighs like a starving dog would attack a bowl of food. Mom screamed his name as he plunged his tongue into her sloppy...cunt. That was such a dirty word, but mom kept saying it, and he loved hearing it. \n\nHe sucked hard, his mouth filling with her juices, and at this point some of his as well. Mom wrapped her legs around his head, and yelped when he slammed a finger into her ass while he worked his tongue up to her clit. \n\n\"Yes! Suck that clit, Ben! Show me what a good son you are!\"\n\nBen planned on doing just that. Not sure a good son would ram three fingers into his mother's pussy while another was in her ass, but she seemed to be loving it. He sucked her clit as violently as she'd worked his cock, his lips smacking and even nipping it with his teeth.\n\nMom was moaning his name repeatedly and it made his cock twitch every time she did. His eyes followed her sexy noises and he saw she was playing with her tits. Like everything else, she was not doing it gently. \n\nMom was tugging on her nipples, stretching them and twisting them. The pendent was right between them and it was glowing as it had before. Glowing and pulsing, but now there was red mixed with the purple. \n\n\"Just like that! Just like that!\" Mom urged, her legs tightening around his shoulders. \"Lick it! Lick that clit, make mommy come for....\"\n\nHer words turned into an animal like howl and Ben flinched as a spray of stocky fluid exploded from around his fingers and into his face. Mom's legs constricted around her head, and her ass and pussy squeezed his fingers in time with her pulsing orgasm. \n\nShe squealed over and over, and when her legs slid from his shoulders, she breathed. \"Get up here and...Oh, fuck!\"\n\nBen had already risen to his knees and plunged his cock inside her still convulsing pussy. Leaning over, he braced his hands next to her head, and hammered into her, his cock making squelching sounds as it pounded her dripping pussy. \n\n\"Take it!\" Mom cried out, her eyes staring into his. \"Take your mother, claim her, make her yours!\"\n\nMom put her hands over her head and crossed her wrists as if she were bound. \"Oh, look at my boy taking his mother! Making me your whore!\"\n\nBen slid his arms further up the bed and grabbed her hands so he was now pinning her to the bed. Mom's pussy tightened around his cock in response and she wrapped her legs around his waist, drawing him deeper inside her. \n\nLeaning down, he kissed her hard. Ben moaned when she nipped his lips with her teeth, then plunged her tongue into his mouth. He was fucking her so hard, the bed was rocking, the headboard slamming into the wall in time with his thrusting.\n\nHis balls were slapping her ass and she was yelping into their kiss each time he plunged into her. She turned her head, and begged, \"Harder! Faster! More, baby! Mommy wants more!\"\n\nBen kissed her neck, nuzzling his face into her hair as he strove to pump her even harder. His balls were tightening and she was working her hips into him. \n\n\"Oh, oh, fuck,\" he moaned in her ear as his body tensed.\n\n\"Give it to me!\" she cried, \"Come inside me! Let me feel it!\"\n\nBen gasped as his cock once again erupted, but this time filling his mother's pussy. Mom released a low sexy purr as her son's balls released another unnaturally large load. His cock convulsed within her, sending long spurts deep inside her clutching pussy.\n\n\"All of it!\" She commanded. \"Every drop, every fucking drop. Paint my pussy with that hot cum! Fill your mother's nasty cunt with that big fucking load.\"\n\nBen shuddered and let himself go limp as his mother's greedy pussy clenched, milking the last drops from his spent cock. He released her hands, and her arms went around him. She sighed in his ear, one hand running through his sweat dampened hair, the other trailing down his back, her nails tickling him, pleasantly.\n\n\"Damn,\" he breathed. \"That was...holy shit, mom.\"\n\n\"Wanted you so bad,\" she said softly. \"Love you so much, Ben, and now I'm loving you as a woman, not just a mom.\" \n\nShe kissed his cheek. \"Do you love me too?\"\n\n\"All my heart,\" he whispered, his throat suddenly tight with emotion. \"I love you in every way.\"\n\n\"I love you too, and I lust for you, Ben.\" She tightened her legs around him for emphasis. \"You're going to fuck me like a whore and love me like your best girl. You want that? I want that so bad.\"\n\nBen smiled at the words, 'best girl' that was sweet. Not that him lying in his mother's arms, his cock softening insider her now soupy pussy was sweet, but he felt a wave of love for her. That wave was as strong as his previous lust and there were now tears in his eyes as she held him. \n\nHe kissed her, this time sweetly, and she sighed contentedly into it. Ben was aware of another warm sensation, but this one physical as the pendent pulsed slowly against his chest.\n\nHe sat up, pushing his mother's legs gently from him so he could it. The stone was now a deep red. Blood red. It was pulsing slower than before, and on a whim, he put his hand over his mother's heart, and felt it beating in time to the stone. \n\nMom put her hand over his and smiled up at him. \"Love you, Ben.\"\n\nShe sat up s and kissed him again. Her hand dropped to his lap and stroked his semi hard cock. To his surprise, he immediately swelled in her hand, despite having cum twice in the last half hour.\n\n\"Honey, will you make love to me?\" She was looking up at him demurely from beneath her long lashes. God, she was beautiful! \"Please? Nice and easy this time?\"\n\n\"Anything you want, anytime you want.\"\n\nHe pushed her onto her back and this time entered her slowly and gently. Mom sighed and put her arms out to him. He sank into her loving embrace and moaned as much from her soft touch as from the soft, wet forbidden place between her thighs. \n\nHe moved slowly within her and she worked her hips in the same slow rhythm. \n\n\"Can't believe I can again,\" he admitted to her.\n\n\"You can because the love and lust between a boy and his mother is much stronger. A boy will never want another woman as much as his mother.\" \n\nShe spoke slowly, her head cocked, and her eyes distant as if listening to something. But then her smile returned and she parted her lips, \"Please kiss me, Ben. Love your mother the way you fucked her. With everything you have.\"\n\nBen leaned over, closing his eyes, his lips parted in anticipation of meeting hers. Mom's soft lips had just brushed his when his door flew open with a loud crash. \n\n\"What the fuck is this?\" Dad screamed as he strode into the room.\n\n\"Oh My God!\" Ben yelped, pushing himself away from his mother.\n\nHe tried to sit up, but his leg tangled with hers and he fell against the head board. \n\n\"Nathan!\" Mom exclaimed, sitting up and turning on the bed to face him. \n\n\"I knew it!\" Dad snarled coming into the dim light thrown by the lamp. \"I knew you were fucking another man, you fucking slut!\"\n\nHis face was red as a beet and his blue eyes bulging dangerously. He was still dressed from work, only his tie was missing. He was pointing at them with one hand, but the other was behind his back. \n\n\"Dad!\" Ben yelled. He had no idea what the hell he was going to say, but didn't like the way he was looking at mom.\n\n\"You sick fucking bitch!\" Dad shouted. \"You're fucking our son!\"\n\n\"That's right I am!\" Mom shocked Ben by shouting back at him. \"At least one man in this house can fuck me.\"\n\n\"You...\" Dad seemed as surprised as Ben at her words. \"What the fuck is wrong with you?\"\n\n\"What's wrong with me is I waited this long!\"\n\nMom sat up on her knees, making no effort to cover her body. Ben noted with dismay she still had cum on her from when she'd sucked him off.\n\n\"I wasted my time with you, you sorry excuse for a man! I should have done this sooner!\" She pointed to Ben behind her. \"My baby loves me more than you ever did and he's more of a man at nineteen than you've ever been!\"\n\n\"See this?\" She tapped her chest. \"This is a satisfied woman! You should take a picture, now get out!\n\n\"Out?\" Dad repeated, and Ben's stomach clutched when he saw the naked rage on his face.\n\n\"Yes, out! Get the fuck out! From now on it's me and Ben. We're going to be happy together forever! We...\"\n\n\"You'll be together forever, Mary.\" Dad's other arm came into view and Ben's eyes widened at the sight of the gun in his hand. \"In fucking hell, you disgusting fucking whore!\"\n\n\"Dad, no!\" Ben moved forward, but there was an ear splitting roar as the gun jumped in dad's hand.\n\nMom head snapped back and her already lifeless body was slammed back onto the bed. Ben screamed as he was struck by blood, and much worse. He stared down at the ruin of his mother's face and only dimly heard his father. \n\n\"You too, you sick motherfucker.\" There was a harsh laugh. \"Literally, a mother fucker.\"\n\nThere was another explosion and a searing pain erupted in Ben's chest. He hit the wall, then fell forward onto the bed. He lay there, his body oddly numb and his vision swimming. His head was next to mom's chest and the last thing he saw was the pendent had changed again.\n\nIt now resembled a clear diamond with an eye in the middle staring back at him. As Ben's eyes closed for the final time, a lone tear trickled from the glowing eye onto his mother's still chest. \n\nChapter One\n\n\"I'll be damned, the GPS actually works in the sticks.\" Emma laughed when the voice coming through her phone told her to take the right onto what looked like little more than a dirt path. \n\nShe glanced over to Eric, \"And you didn't think these roads even had names. I...\"\n\nEmma stopped, and rolled her eyes at her son. He'd slipped his ear buds back in and was staring at his phone. After getting annoyed with him after the first two hours of his ignoring her while playing with his phone, she'd told him he either talked to her or kept quiet, but no phone.\n\nAfter he'd put the phone down and crossed his arms and stared out the passenger window for the next hour, Emma had given up and gotten lost in her own thoughts. She'd been doing a lot of that lately. This move was a big deal for both of them, and hopefully a good thing.\n\nSeeing Eric gave her little to no input, she was hoping it would be for him too, but heaven forbid he say anything one way or another. Between wanting to talk to him, but not wanting to push, and dealing with her own misgivings about life it was easy for her to spend a lot of time in silent reflection. \n\nAs they'd driven for the majority of the last three days, Emma kept wondering if this really was the change they needed. She felt it was. All their issues seemed to stem from memories and pain. Hers a little older than his, but now both of them had serious reasons to no longer remain in the life they knew. \n\nIn fact, as bad as it made her feel, it was Eric's recent heartbreak that had caused her to finally make this decision. She knew she was using her son as an excuse to justify what she wanted, but he'd been more receptive to it when it involved his drama and not just hers. \n\nShe'd glanced back to the narrow road, but then quickly looked back at him. More accurately his phone. On the screen was a picture of Ashley. \n\n\"Oh, for Christ's sake.\" Emma snatched the phone from his hand and threw it in the back seat.\n\nThe buds popped from his ears and sailed back there with the phone.\n\n\"What the hell, mom?\" He demanded. \"That's wasn't cool.\"\n\n\"Neither is you ignoring me for the last few hours.\" Emma decided to not bring up the picture. \"I told you, you don't have to talk to me, but you don't get to use the phone.\"\n\n\"Forced conversation isn't cool either,\" he told her. \"I don't have anything to talk about.\"\n\n\"You don't have anything you want to talk about,\" she corrected him. \"Last year no one could get you to shut up.\" \n\n\"Lot's changed since last year,\" he said with no trace of his former attitude. \"And I remember when people used to say you smiled so much it aggravated them. They don't have that problem with you anymore.\"\n\n\"Ouch,\" she winced. \"You saying I'm a miserable bitch like your friends say about their moms?\"\n\n\"I'm saying you're not happy anymore.\" He shrugged. \"So don't act like it's just me. And I don't have any friends anymore.\"\n\nEmma avoided a hotbed topic and didn't tell him he sounded like a drama queen. To a degree he had a right to feel that way.\n\n\"Well here's to new friends, then.\" She picked up her coffee from the cup holders between them and tapped it to the one in his hand. \n\n\"Only if it's for you too.\"\n\n\"Fair enough. And maybe new special friends. Especially for you.\"\n\n\"Whatever,\" he rolled his eyes. \n\nEmma's reply was cut off by the GPS telling her to take the left that had appeared out of nowhere, sandwiched between two huge trees. She took the turn sharply, causing the Explorer's tires to chew into the dirt before the SUV surged forward. Her breath caught as she watched the small U-Haul trailer she was towing wobble dangerously before righting itself.\n\n\"There it is,\" she gestured. \"Our new home sweet home.\"\n\nEmma slowed as the road veered to the right and she stayed to the left and passed through the old white wooden picket fence on either side of the driveway. Emma whistled when they approached the huge eight room two story colonial. \n\nShe'd done three virtual tours of it, one with Eric who only grunted any time she pointed something out. The last one she had done while screen sharing with Robin, the owner of the house and their new next door neighbor.\n\nBut even though the tours showed the outside, she was amazed at how large the house was. \n\n\"I still can't believe we're getting this for fifteen hundred a month. Look at the size of it!\" She exclaimed. \n\n\"Oh, there's a reason it's cheap,\" he muttered. \n\nShe knew what he was referring to, it had crossed her mind several times as well, but she'd told herself not to be a fool and lose out because of it.\n\n\"That's weird, that house over there is identical.\" Eric pointed to the house less than fifty yards from their new abode. \"All this farmland out this way and those two houses are next to each other.\" \n\n\"Robin, the landlord lives here. She owns both houses. I think an ancestor built them for the family. We're supposed to meet her at our place for the keys, but we're a couple hours early. We'll probably have to go over there.\n\n\"Oh.\"\n\n\"I know I told you that, but you never listen to anything I say these days.\"\n\n\"What?\" Eric asked, then seeing her glare at him added, \"Kidding.\"\n\n\"Smart ass,\" but she laughed. \"Well maybe you'll start listening now seeing things are going to be different.\"\n\n\"Different doesn't mean better.\" The smile left his face to be replaced by the sullen look he'd had for the last three months. \"Just a different kind of suck.\"\n\n\"Okay.\" Emma, slammed the breaks, causing the explorer to fishtail in the dirt and the U-haul to wobble again. She threw the car into park, and removing her sunglasses, turned to face him. \n\n\"What are you doing?\"\n\n\"See that house?\" Emma pointed to it. \"Know what it is?\"\n\n\"A good deal according to you.\"",
        "\"No, Eric, it's a new start for both of us and because it is, you and I are not stepping foot into it until we talk.\"\n\n\"Here in the driveway?\"\n\n\"Yes.\" Emma took a deep breath. \"I've tried talking to you for months and you ignore me or act like such a jerk I give up talking to you.\"\n\n\"Sorry, mom. I just,\" he shrugged and slumped back into the seat. \"Didn't want to move. I feel like we're trying to forget about dad.\"\n\n\"I am.\" Emma put her hands up at the look on his face. \"Not literally, Eric. I'll never forget your father, but I need to not be reminded of him everywhere I look.\"\n\n\"We bought that house a year after we were married. I spent twenty two years in it. Every night of which we spent together in that bedroom. The house, the furniture, the neighborhood. All our friends, all the places we went.\" She paused to steady her voice. \"All I see is him and I can't move on with life like that. I just can't.\"\n\n\"But here?\" Eric spread his hands. \"Illinois? Hoffman Estates? Look at us; we're in the damn sticks.\"\n\n\"My family was from Chicago. I met your father when I went to school in Boston and stayed out there with him. As for the sticks? We're thirty minutes outside of Chicago. Hardly the boonies. Plenty of things to do, people to meet and some good schools.\" She added the last part hopefully.\n\n\"I'm sorry you're pissed I quit college.\"\n\n\"Your dad would be...\"\n\n\"Yeah, well dad's not here. He lost the right to be disappointed.\" Eric snapped. \"So okay, you moved here to get rid of ghosts of dad past. I get it.\" He grunted disgustedly. \"Didn't even take half our furniture.\"\n\n\"I couldn't stay in that bed anymore and this house comes furnished. All we needed was your bedroom set and a few other things. The movers will be here tomorrow and all our personal things are in the trailer and we'll have that emptied today. We're renting, Eric with a year lease. We don't like it, we move.\"\n\n\"Where next, Idaho?\"\n\n\"Knock it off,\" she was getting pissed off at him. \"Seeing your mister no friends with zero ambition why do you care?\"\n\n\"I care because this was about you, not me.\"\n\n\"Bullshit.\" She stared into his eyes. \n\nEric himself was why she would never forget Steven. He looked just like his father when she had met him twenty three years ago. The same dark hair, intense brown eyes and square jawed rugged features. \n\nThe resemblance went past looks. Eric had the same big easy smile, not that she'd seen it much lately, same mannerisms and facial expressions. He was even built like Steven, just under six feet, but with a rugged build both had gained from football and a love of the gym. \n\n\"This is for both of us,\" she continued. \"Eric, I know you hate talking about it, but what Ashley did ruined home for you too.\"\n\nEric looked away from her and she hesitated. Ashley and he had been together since seventh grade. What started as a cute little infatuation between two kids had blossomed into a seven year relationship that spanned high school and their first two years of college. \n\nIt had Eric investing in an engagement ring last year and even asking her father permission to ask her to marry him when they graduated before giving it to her. That old fashioned tradition had come from Steven who had done the same thing years ago before he proposed to her. \n\nThen Eric had gotten a call from a fellow student telling him to get down to the restaurant he waited tables at. Eric had gone down there to see Ashley with his best friend of ten years, Mark. \n\nAshley was supposed to be working and here she was with his best friend. Eric had managed not to confront them. Instead, he waited outside and followed them to the hotel Mark worked at. Mark would often take keys to unoccupied rooms from the front desk and use them to fool around with girls.\n\nEric followed them from a distance and watched them go into a room together. He then knocked on the door. When Mark answered, shirtless, with Ashley visible, on the bed behind him barely dressed, Eric had beaten the shit out of him and ended up getting arrested. \n\nEmma had bailed him out and later that night discovered from the mother of the student who had tipped Eric off that it had been going on for months. Her son hadn't wanted to get involved, but it bothered him to the point he had gone to her for advice and she'd told him Eric needed to know. \n\nEric was not only heartbroken, but betrayed by both the only girlfriend he'd ever had and his best friend. Things got even worse when once the secret was out he discovered many of his friends had known as well as some of Ashley's. \n\nEric was humiliated and upset to the point he quit school because he could no longer see her or his alleged friends anymore. Emma knew that wasn't the entire reason. Since Steven had passed, Eric's grades had been slipping and he'd mentioned leaving.\n\nEmma used his father's dream of him graduating college and becoming an architect like him to guilt him into staying. It was a terrible thing to do in a sense. But she wanted the best for him, and he had two years invested. The Ashley ordeal was the final straw.\n\nBut it wasn't just school. In the months since, Eric was a shut in. He had gone full time at the UPS store and when not working watched television or played video games. The only social life he had was when the two of them would go for dinner or have their Friday night movie tradition they'd had since he was a young boy. \n\nIn that instance, Emma herself was only slightly more social, occasionally going out with some friends. In the year since Steven's death she'd had two dates and both were horrible and because of her. She'd been nervous, awkward and in both cases had all but physically pushed them away when they asked for a second date. \n\nThe second man had unknowingly taken her to the place Steven had proposed to her. No, this was the right move. Maybe a bit extreme as far heading back to the Midwest from Boston, but it was the right choice. No memories here other than the pleasant ones of her childhood.\n\n\"Eric, look at me.\" \n\nWhen he shook his head, she put her hand on his shoulder. \"Look, if you don't want to talk, that's fine. But because you don't talk to me I made this decision on my own, so you can't be mad at me.\"\n\n\"I'm not mad at you,\" he whispered and she could hear he was choked up. \"I'm mad at life.\"\n\n\"Okay, that's fair. It's been kind of sucky for both of us. So when you don't like where you are in life, you change, right?\"\n\n\"I guess.\" \n\n\"This is big for me too, hon. I sold the house and there's no going back. But that gave us plenty of money to do this and my firm got me an interview out here,\" she laughed. \"Who would think anyone would need a lawyer in Chicago?\"\n\n\"I'm sure I can find some disappointing job here.\" Eric rolled his eyes. \"After I get a car.\"\n\n\"We'll find you one. I wasn't towing that crap box of yours here. Thing would have left a trail of pieces across the east coast.\"\n\nEric turned to her with a grin. \"Okay, I'm lousy at fixing cars. Can I really get one?\"\n\n\"We'll go into town in a couple days and find you something reasonable.\"\n\n\"Cool, thanks.\"\n\n\"See? Things are already getting better for you.\" Emma gestured at the house again. \"Let's start over. See that house, know what it is?\"\n\n\"Cursed!\" Eric replied with a smirk.\n\n\"Would you stop that? It's not cursed. Something bad just happened here once.\"\n\n\"Bad like death.\" Eric held up his hand in the shape of a gun. \"Guy lost his marbles and shot his wife.\" He bent his finger as if pulling a trigger. \"Then his son.\" He repeated the motion.\n\n\"I know.\"\n\n\"Then?\" Eric put his finger in his mouth. \"Blew his own damn brains out. Yup, that would be bad.\"\n\n\"So what? This isn't a damned movie where the house is haunted, Eric.\" She waved her hand at him. \"I bet if you look through the history of any old house, someone died or was killed.\"\n\n\"Yeah, but how many?\" Eric was now facing her and even though she didn't like the topic, at least he was speaking to her and seemed excited, albeit for a stupid reason. \n\n\"Three years before that guy went nuts a woman committed suicide. Hung herself in the attic while her husband was at work. They used to fight all the time and he was investigated because they thought he might have done it.\"\n\n\"Did he?\" Emma had heard about the murders, but not this.\n\nShe had put the car back in drive and was slowly cruising up the long driveway towards the house. \n\n\"No, they cleared him. Their son ended up in a mental ward for a while. Took her death really hard. He said it was his fault, but never said why.\"\n\n\"He lost his mother that would be enough to do that. Especially like that.\"\n\n\"I'm not in the loony bin.\" Eric pointed out.\n\n\"Your dad died of cancer and was sick for a long time. A lot different then something sudden and gruesome.\" Emma was now sorry she'd encouraged him. \n\n\"See, gruesome,\" he nodded. \"Moving into the gruesome house.\"\n\n\"Coincidence.\"\n\n\"Year before that, two people vanished. Mom and son. The father said he had no idea what happened.\"\n\n\"Are you making this up?\"\n\n\"No, mom,\" he sighed. \"I keep telling you, google is your friend. I found a bunch of stuff about this place.\"\n\n\"Wonderful, you pay no attention when I show you the tour, but you'll research murders.\"\n\n\"This was weird too because it was sort of the same. Guess they fought a lot. Cops came a couple times to break them up, so they thought he killed them. But he was cleared. The mom and son turned up in California a couple years later.\"\n\n\"Seems like the husbands in this place were all losers.\" Emma frowned. \n\n\"Well, we have nothing to worry about then,\" he laughed harshly. \"No husband or dad here. Maybe we'll be safe.\"\n\n\"Way to be positive.\" Emma pulled up in front of the house. \"Hey, the front door is open partway.\"\n\n\"It's inviting us in, Muahahaha!\" Eric burst into creepy laughter. \"Join us!\"\n\n\"Knock it off.\" She smacked him in the arm. \"Robin is probably inside doing some last minute cleaning.\"\n\n\"Hope they got a new bed for your room.\" Eric undid his seat belt and opened the door to exit the car. \"Else you'll be sleeping in the same bed that sick bastard did.\"\n\n\"Its new.\" Emma suppressed a smile. \"And I read the article it was your room they all died in.\" she winked at him. \"Sweet dreams tonight.\"\n\n\"You're funny.\" Eric grumbled while she got out of the car.\n\nEmma stretched her arms over her head, and moved side to side, cracking her back. Eric had driven most of yesterday, but she'd been behind the wheel the last seven hours. She reached back into the car to grab her purse and when she closed the door saw Eric already heading for the house.\n\n\"Hey, wait up!\"\n\nEric turned and shook his head.\n\n\"Let me go in first, the door being open bothers me.\"\n\n\"Seriously?\" She raised her eyebrows. \"Taking this cursed thing a little too far.\"\n\n\"No, mom. We're in the sticks and sick pricks can be anywhere. You don't know that woman's the one if the house. I'll go first.\"\n\nHe was completely serious and turned back to the house. He was several feet ahead of her and Emma ran to catch up with him, wincing as the flip flops she had driven in her ended up getting rocks in them. \n\nShe caught him at the top step of the porch. \n\n\"She's never seen you, let me go first or she'll think you're the creeper.\"\n\n\"No.\" He looked over his shoulder at her. \"Dad said look out for you and I take that seriously. Just give me a sec to walk in and see if anyone's here.\"\n\nEmma was touched and put her hand on his arm. \"You my man of the house?\"\n\n\"Have been since dad got sick,\" he told her. \"As much as your stubborn ass lets me anyway. And until you decide to find someone.\"\n\n\"Let's not discuss that again.\"\n\n\"I'm in no hurry for that,\" Eric shook his head. \"But someday you will and it's my job to make sure he's not a dick.\" He turned back to the house. \"Like the guys that lived here. Fucking weird, three assholes lived here the last few years.\"\n\n\"Watch your mouth.\"\n\n\"I'm twenty, not twelve.\"\n\n\"And I'll always be your mother. Watch your mouth.\"\n\n\"Yes, mom,\" he rolled his eyes, then approaching the door, pushed it open and leaned his head in.\n\n\"Hello?\" he called. \"Um, Robin? Its Emma and Eric, you in here?\"\n\nEmma didn't hear a response and Eric walked into the house. \n\n\"Holy shit!\" he exclaimed.\n\n\"What is it?\" Emma quickly followed him in.\n\n\"This place is huge.\" Eric continued into the center of the enormous living room. \"Hey look, a fireplace!\"\n\n\"I told you it had one,\" she grunted. \"You would have seen it online if you paid attention.\"\n\n\"I thought it was fake.\" Eric walked around the large black sectional couch and over the fireplace built into the far wall. \"This is real. Hey, I get to chop wood! I loved that when we'd go to that cabin in New Hampshire!\"\n\nEmma smiled. It was good to hear him excited. \"Better watch out, Eric. You didn't sound miserable just then.\"\n\nHe gave her a rueful grin. \"Yeah, I know, I've been kind of a dick lately.\"\n\n\"I won't correct your language on that one,\" she winked. \"And you're right, I haven't been myself for months either. Like I said, this is a new beginning, but where we'll find our old selves.\"\n\n\"Hmm, that's deep.\" Eric smirked. \"You sound like one of those family channel movies.\"\n\n\"Back to being a dick,\" she muttered.\n\n\"Next week as part of the clich\u00e9d heartwarming movie series,\" Eric spoke while he walked around the large room, touching the chairs and looking at the rustic paneling and shelving built into the walls.\n\n\"Emma and Eric, a heartbroken mother and son flee Boston to get away from their pain and come to shitsville where they discover a fireplace that will make everything better.\"\n\n\"Eric.\" Wow, he was in rare form.\n\n\"But that's not all! Soon the script will bring in love interests for both of them. Emma will forget the man who meant everything to her and Eric will meet some na\u00efve country girl who will fall for his city slicker charm and...\"\n\n\"Eric, shut up!\" She snapped, with more force than she intended on. \"I'm tired of your shit. You want to wallow in misery that's fine, but I did this so we won't have to. This isn't to forget about your father, but to move on and ease some of the pain.\"\n\n\"Right.\" He nodded. \"Sorry, but I did get dad's sarcastic sense of humor.\"\n\n\"The one trait I didn't like in him. Try to tone it down for a bit, okay?\"\n\n\"Okay,\" Eric said, but looked distracted as he stared around the room. \n\n\"What's the matter?\"\n\n\"We're in here yapping away and no one's come in here and I don't hear anything. Maybe they left the door open? I suppose not many people come up this way.\"\n\n\"Or they were here and went next door to get something.\"\n\n\"They?\"\n\n\"Robin's husband, I think his names Cliff. I never saw him on the skype chats.\"\n\n\"Uh-oh a husband. Hope their house doesn't have the effect on them this one does.\"\n\n\"Back to that? Know what?\" Emma waved at him. \"Stay with it. I'd rather hear your haunted house crap than your woe is me routine.\" \n\n\"Oh, ouch.\" Eric hooked his fingers into claw and raked the air with it \"Meow!\"\n\nEmma laughed at him and turned away, heading for the archway that led into the next room. It was closed off with wooden folding doors. Emma hadn't seen those since her grandparent's old house. \n\nDespite the laugh, Eric worried her. His moods were mercurial these days. Today was a perfect example. He'd gone from sulking to chatty to nasty and back again just in the time since they'd pulled up to the house.\n\nBut this was day one and the finality of the situation had hit him. Hopefully he would settle into this quickly. If not the next step would be counselling and that was a fight she didn't look forward to.\n\nShe unlatched the doors and pushed them to the right enough to enter the dining room. Emma whistled at the size of both the antique table chairs and enormous matching hutch. The furniture alone in this house was worth a fortune.\n\nSupposedly the last tenants, the victims of the double murder suicide had chosen to only use the dining room set. Robin had all the other furniture stored in the large barn behind her house, then moved it all back in once the former tenants things had been removed.\n\nShe hadn't wanted to admit it to Eric, but she had inquired about the bed in her room being brand new. She left hers behind to get rid of the memory of two decades of being with Steven. She had no desire to lay in someone else's memories, especially those of an unhappy couple. Seemed like that's all that had lived here for some reason. \n\nThere was a staircase that led to the second floor which contained three bedrooms and a master bath off what was going to be her bedroom that featured a large hot tub. Emma couldn't wait to take a nice long soak in that tub.\n\nShe thought about telling Eric she was heading upstairs, but then felt foolish. There was no one here and she refused to act spooked or worse, act like some hapless female. \n\nEmma walked up the stair case, her hand trailing along the ornate hand carved railing. There were slightly discolored squares on the dark paneling along the way where artwork had formerly hung. \n\nWhen she reached the landing, she stopped and cocked her head. She had sworn she'd heard something. Emma remained still and wanted to smack herself when she noticed her heart beating faster. Fucking Eric and his lame curse comments. \n\nEmma noticed the door down the far end of the hall which led to her bedroom was closed. There was a small door along the corridor wall which she knew was the second entrance to the master bath. She would have to remember to lock it if she wanted to soak. She didn't need Eric wandering in on her. \n\nThe door half way down on the right side would be Eric's room. The furniture wouldn't be coming until tomorrow so he would most likely sleep on the sectional downstairs tonight. The door closest to her was the smaller third bedroom where a guest could stay if they ever had one. \n\nThat door was partially open and as she slowly walked down towards her room, a sound reached her ears. She stopped in her tracks. That wasn't nerves; that had been real. A moment later she heard it again. It sounded like a low groan and was definitely female.\n\n\"Robin?\" She called softly from just outside the door. \n\nShe received no reply other than another moaning sound. Had she fallen and hurt herself?\n\nEmma eased the door open and her eyes widened. \n\nLying on the side of the small twin sized bed was Robin. Her red sundress pushed up over her hips and a man Emma assumed, or at least hoped, was Cliff, kneeling between her thighs. \n\nOne of his large hands had Robin's panties to the side and the other was between her thighs and moving back and forth as he fingered her. His face was buried between her legs, and Robin was staring up at the ceiling moaning. \n\nShe'd pushed her dress down and her breasts were exposed. They were large and milky white, and she was tugging on her pink nipples. Her legs lifted and she placed her feet on the man's shoulders. \n\nHe was completely dressed as was Robin technically, but her dress at this point was pretty much gathered around her waist to bare all. Emma swallowed hard and backed out of the room. More correctly, she told herself to back out, but remained standing there, watching.\n\nEmma hadn't had sex since a few months before Steven's death and her body had made her acutely aware of that. In addition to her two failed dates she'd tried a one night stand, and that had started well and ended horribly.\n\nThat led to her masturbating like a horny college coed, and watching porn far more than she'd care to admit to anyone. The scene before her was sexier than any porn she'd watched because it was real. Robin's long auburn hair was fanned out on the white sheet and her eyes were only partially open as were her lips as she moaned softly. \n\nThe look of pleasure on her face caused a warm sensation to stir between Emma's thighs and she was aware of her nipples stiffening. Her own lips parted as her breathing picked up in time with Robins now louder and more frequent moans.",
        "\"Right there, oh, right there. Oh, Cliff that feels so good.\" Robin released that last word in a sexy purr that made Emma recall her own sighs and moans when Steven would work his talented tongue between her thighs. \n\nEmma's eyes roamed up and down Robin's body thinking that for a woman in her fifties she looked damn good. Good enough to attract a much younger man because from what Emma could see of Cliff's face he had to be a good twenty years younger. \n\nRobin threw her head back and released a wail of pleasure that had Emma's heart racing and the heat between her legs was now accompanied by a wet sensation. With a start she realized her hand had slipped under her shirt and into her shorts.\n\nShe quickly removed it and clasped both her hands together as if afraid of they might stray again. Robin bucked her hips, urging Cliff to keep licking and pumping his fingers. Emma took a small step backwards, just enough to be concealed by the door, but still remaining in the room. \n\nRobin sighed, then sat up on the bed, \"Let me have it.\" She opened her mouth and waggled her tongue proactively. Cliff stood up and unsnapping his jeans went to reach into him. Robin's hands beat him to it and she plunged them into his pants with an enthusiasm Emma fondly remembered.\n\nThe long thick cock Robin removed and took in her mouth caused her mouth to water at the memory of what it felt like to have it full of hard flesh. Cliff moaned as Robin easily took his sizable cock to the base and shook her head back and forth, her blue eyes fixed on his. \n\nHis hands caught her breasts and fondled them as she bobbed her head, sucking him fast and hard. Emma was beginning to sweat and could feel herself flushing and not from embarrassment. Move, she tried telling herself again, but to no avail. \n\nShe watched Robin bob her head several more times before releasing Cliff's cock with a sloppy sucking sound and a spray of spit trailing from her lips. Robin leaned back on the bed, then rolled over so she was kneeling at the edge of the bed, her ass on the air. \n\nCliff gave her a playful spank that caused a tiny whimper to escape Emma. Staring at Robin's well rounded ass, she again noted, this woman was damn hot for her age. Not that Emma had any interest in women, but she appreciated the female form and what it took to keep it looking good. \n\nHer red haired pussy was peeking out at her, but that was quickly obscured by Cliff stepping forward and plunging into her. Robin cried out and Cliff grabbed the dress around her waist, using it as a handle as he pounded away on her.\n\n\"Fuck yeah,\" Robin moaned. \"Just like that, baby. Fuck me hard and come for me! They'll be here soon so just give it to me the way I need it!\"\n\nRobin obviously had no idea 'they' were already here and being nothing short of a pervert as she watched her new landlord getting fucked like...well like she wished she could get fucked. Cliff was well hung and although fully dressed his broad shoulders and powerful forearms and hands indicated the rest of him was pretty damned impressive.\n\nLucky bitch, she though while watching Cliff go to town on her like she might take it away from him. There was a mirror opposite the bed and Emma realized she could see Robin's face in it. Her eyes were wide and her mouth stretched into a silent 'O' as her much younger husband, fucked her. \n\nHe was using long hard strokes and Emma closed her legs together. She could feel how wet she was and her clit was now aching. Her thighs were trembling and her ass had tightened as if her body was putting itself in Robin's place, reacting to those nice hard pumps and being spread open by his invading flesh. \n\nRobin tossed her head, sending her long hair across her creamy back and that simple, but sexy move, caused another whimper to escape her. God, she was so fucking horny! It had been so long and this reminded her of all she'd been missing, but was afraid to go out and find. \n\nCliff was breathing like a bull and his thrusting had switched to short hard violent strokes. It hadn't been so long that Emma didn't know he was getting close and she found herself holding her breath in anticipation of his climax. \n\nHer knees felt weak and her body tense again, as if she were the one getting the delicious fucking taking place in front of her. Her mind raced as Cliff pounded towards the finish line. Would he explode inside her? Pull it out and spray it all over her ass? \n\nEmma had a vivid image of Steven fucking her doggy and her pulling away from him, turning around and letting him spray her tits. The hot sticky cum flowing down her heaving breasts and over her sensitive nipples. \n\n\"Oh, fuck mo...\"\n\n\"Give it to me!\" Robin shouted cutting him off. \n\nCliff emitted a low guttural moan that was so primal Emma shuddered and he buried himself inside Robin. He moaned and whimpered as he gave her short jerky thrusts and Robin slammed her ass back into him, groaning. \"All of it! Every bit of it, every...\"\n\n\"Goddamn.\" Eric whispered behind her. \n\n\"Jesus!\" Emma yelped in surprise at his speaking right over her shoulder. \n\nThat set off a chain reaction of shocked exclamations and reactions. Cliff rapidly withdrew from Robin and turned his back to the door. Emma could see him in the mirror and as embarrassed as she was, her eyes still fixed on his long glistening cock. \n\nJust before he tucked it into his pants she saw the thin trail of white fluid dangling from the tip and even with her son behind her, felt her pussy gush. \n\nRobin's reaction would have been hilarious if the situation weren't so embarrassing. With a startled cry, she rolled over on the bed, balanced briefly on the edge of it then tumbled head over heels off it, her feet pointing at the ceiling as she hit the floor with a loud thud. \n\nShe landed on the side of the bed not facing them and as Cliff stood there with his back to them, Robin slowly stood up, her dress pulled up over her breasts. Her face was now as red as that dress and breathing hard, she stared at Emma, her lips moving, but nothing coming out at first. \n\n\"I'm sorry!\" Emma broke the awkward silence. \"I yelled when I came in, but no one answered. I just walked into the room, and...I'm so sorry!\"\n\n\"I'm not.\" Eric whispered behind her. \"Wow.\"\n\nHe started to say something else, but it turned into a loud expulsion of breath when Emma drove her elbow into his stomach.\n\n\"No, don't be.\" Robin had regained her composure, but was still red faced. Emma wondered if it were from shame or she was still flushed from that fucking. \"I'm the one who should be sorry. This was very disrespectful. We were fixing the room up and um, well...\"\n\n\"You don't have to explain.\" Emma put her hands up and now that Cliff had turned around and she caught a good look at him, no explanation was necessary. Damn. \n\nCliff was a few years younger than Emma, meaning at least twenty years Robin's junior. He had big wide baby blue eyes and his features were delicate, with high cheek bones and soft jaw line. Despite the five o'clock shadow he was sporting, Cliff still had the appearance of a pretty boy type. \n\nBut his body was rugged enough to compensate. His t-shirt hugged a pair of impressive biceps and his chest as broad as his shoulders. Yet his waist was narrow, giving him the triangular build of a weight lifter. Emma's eyes darted down to the still large bulge between his legs and in an instant she knew she'd be masturbating tonight and to what.\n\n\"Really sorry, ma'am.\" His voice was as soft as his features and he bowed his head as he spoke. \"My fault. Robin was teasing a little and I...well...\"\n\n\"Less is more, Cliff,\" Robin scolded him. \"I'm sure Miss Daniels knows what happens between couples sometimes.\"\n\n\"You could tell me.\" Eric laughed and stepped back before Emma could land another elbow. \n\n\"Robin, this is my son, Eric. Don't mind him, he thinks he's funny because someone has to.\"\n\n\"Boys will be boys.\" Robin smiled at him. \"Nice to meet you Eric, but sorry about how.\"\n\n\"I'm not.\" Eric whistled. \"You're pretty hot.\"\n\n\"Eric!\" Emma turned on him. \"Go downstairs right now!\"\n\n\"Oh, come on, mom!\" He spread his arms out. \"Why do we have to be serious? This is kind of funny, no?\"\n\n\"You know, he's right,\" Cliff chuckled. \"Especially the way you fell off the bed.\" He indicated Robin.\n\n\"Funny faux paus not funny ha-ha I suppose.\" Robin grinned ruefully. \"Again, I'm sorry. Cliff here seems to still think we're newlyweds.\"\n\n\"Just me?\" He raised his eyebrows and the smile on his face was so genuine, Emma found herself smiling back at him. Sexy and on the sweet side. Robin was a lucky woman.\n\n\"Hey, I don't blame you.\" Eric chimed in. \"Cougar town for sure.\"\n\n\"Eric stop talking,\" Emma sighed, more embarrassed by him than actually being caught at this point. Thank god they didn't know how long she'd watched. \n\n\"Oh, no worries.\" Robin came around from the side of the bed. \"I'm flattered. Not every day a good looking young man pays me a compliment.\"\n\n\"Not since me anyway.\" Cliff winked.\n\n\"You're not that young anymore.\" Robin returned the wink, \"Just younger than me.\"\n\n\"Still kind of our fault. I'm early.\" Emma pointed out. \n\n\"No excuse, this is your house now and we were...very disrespectful.\" Robin came over and extended her hand to Emma, \"I'm very sorry. Miss Daniels.\"\n\n\"It's Emma, and its okay.\" She took her hand, trying not to envision it around Cliff's cock. \"I think Eric's right. Something like this we should all just laugh off.\"\n\n\"Holy crap, get a tape recorder. I'm right.\" Eric laughed, as he approached Cliff and put his hand out. \"Nice to meet you.\"\n\n\"Same here.\" Cliff shook Eric's hand then nodded approvingly. \"Strong grip there, kid. You keep yourself in shape.\"\n\n\"I try. Hey, is there an axe around? I want to chop some wood.\"\n\n\"In the shed.\" Cliff looked at him dubiously. \"You know how? You can really get hurt if you don't.\"\n\n\"My dad showed me how.\"\n\n\"Still, maybe tomorrow I'll come over show you again.\"\n\n\"Okay.\" Eric nodded, \"That's cool.\"\n\n\"So anyway, we'll,\" Robin looked down. \"Change these sheets like we intended to and be out of your hair. The keys are on the kitchen table.\"\n\n\"You folks need help with the stuff in your trailer?\" Cliff had gone over to the window that over looked the front of the house.\n\n\"That would be great if you don't mind.\" Emma gave him a grateful smile. \"It's been a long day.\"\n\n\"No problem. You have furniture coming?\"\n\n\"Some stuff tomorrow, but we have movers.\" Eric told him.\n\n\"Well let me know if you need another pair of hands.\" Cliff walked past him and tapped his arm. \"How about we go start unloading the trailer and let the ladies chat?\"\n\n\"Sure.\" Eric put his hand out to Robin. \"Really nice to meet you.\"\n\n\"We get you're happy to see her.\" Emma shot him a look.\n\nEric grinned at Robin and turned to leave. As he passed her, he leaned over and whispered in her ear. \"If you looked any happier when I came up here you would have needed a cigarette.\" \n\nHe winked as she blushed furiously, then laughed. \"No, I won't break anything this time, mom.\"\n\nAs he walked away, Emma didn't know what was worse. That he made that smart ass crack, or that he'd been right. \n\nChapter Two.\n\n\"I know you said, it was okay, but I have to say I'm sorry at least once more.\" Robin said from across the dining room table. \n\n\"And for the last time, it's okay.\" Emma told her, then paused to take a sip of wine. Robin had brought two bottles over as a housewarming gift, along with a lasagna she would just have to heat up later. \n\n\"Have to say,\" she smirked. \"Not to sound like my son, but um, good for you.\"\n\nRobin laughed. \"I get that a lot. Cliff's an attractive man, and yes, much younger than me. He's thirty eight.\"\n\n\"And I think you said on one of our calls you're fifty five?\" Emma pointed at her. \"You look amazing.\"\n\n\"I take that as a huge compliment seeing how much of me you saw.\" Robin lamented. \"So thank you. Cliff keeps me young. Have to keep up, you know.\"\n\n\"I wouldn't actually.\" Emma sighed. \"My husband was the only person I was with for the last twenty two years.\"\n\n\"I'm sorry to hear that.\" Robin briefly reached out and put her hand over hers. \"Cliff is my second husband. My first left about twenty years ago.\"\n\n\"Oh, I'm sorry. Well, his loss and seems like you made out pretty well.\"\n\n\"Had I spent the rest of my life alone, I'd have made out.\" Robin's lips twisted into a grimace. \"He was a real piece of work. Very cruel to me.\"\n\n\"I'm sorry. At least you moved on though. Lot of women stay. I used to take cases for victims of domestic abuse. There's a special place in hell for men like that.\" \n\n\"Amen sister.\" Robin held up her glass and clicked it against hers. \"I hope he's roasting there now. He was so bad, I moved out of this house and next door because of him.\"\n\n\"Wow, this wine is delicious.\" Emma declared, staring at the deep red fluid, \"Sweet and sort of...hey, wait.\" Emma gestured around her. \"You used to live here?\" \n\n\"Yes, I was born in this house. I stayed here after my parents died in the car accident and he moved in with me. I moved out after he left.\" \n\n\"I see.\" Emma said, but quietly as she thought about the stories Eric had told her.\n\n\"My great grandparents bought this land and had these two houses built on it. They've been in the family ever since. But my parents only had me, so both houses were left to me.\"\n\n\"I used to rent the one I'm living in now, but with everything that happened I asked the family that lived there if they'd swap with me and they were kind enough to do it.\"\n\n\"What happened to them?\"\n\n\"Happened?\" Robin looked puzzled. \"He was a mucky muck with some banking firm and they relocated. I think down to Florida.\"\n\n\"I see.\"\n\n\"You say that a lot. That an attorney thing?\" Robin chuckled. \"But I know what you meant. This house has had some bad luck. The people in it anyway.\"\n\n\"Seeing you said that.\" Emma paused, wondering if she wanted to continue this conversation.\n\nIn the momentary silence she heard thumping from upstairs. After they had brought everything in from the trailer, Eric had stayed upstairs, putting things away and putting together some of the racks she bought for the huge walk in closet. \n\n\"Seeing I said that, what?\"\n\n\"Sorry.\" Emma shook her head. \"Long couple of days. I was just thinking that all the issues in this house had a recurring theme. An abusive husband.\"\n\n\"Not really, my husband, of course Nathan, only two out of...\n\n\"Eric told me about the woman who hung herself and the husband was investigated because the police had been there before for domestic issues.\"\n\n\"Oh, Maria.\" Robin lowered her head. \"Such a sweet woman, life just became too much for her.\"\n\n\"And the mother and son who vanished and again the police thought it was the husband, but no proof.\"\n\n\"Kathy and Paul.\" Robin said evenly, but now looked annoyed. \"Been googling have we?\"\n\n\"Eric did, and he's been teasing me about the house being cursed.\"\n\n\"Did he read enough to find out Kathy and Paul turned up in California and were safe and sound? Kathy seemed very happy last I talked to her a couple months ago.\" When Emma raised her eyebrows she added, \"We keep in touch.\"\n\n\"But it's pretty obvious why a mother and son would up and run.\" Emma stated.\n\n\"Is it?\" Robin gave her a sly smile, as is she was acknowledging an inside joke. \n\n\"Again, the husband. So like I said, this house seems a magnet for assholes.\"\n\nRobin's brow furrowed in thought. \"I see what you're saying. Guess there's a lot of bad men out there.\"\n\n\"Seems they gravitate here.\"\n\n\"Not in your case.\"\n\n\"No, not at all.\" Emma stared down at her glass. \"Steven was a loving husband and a dedicated father. He was a good man.\"\n\n\"You know, Emma I wasn't going to rent this house again. Because of what happened last year and some of the previous occurrences. I don't need the money that bad. But Cliff had never pulled the ad down and you found it.\"\n\n\"I was going to tell you it was off the market, but we got to talking and your situation reminded me of mine. Wanting a new start from bad memories. Yours were different, and I only moved next door, but for me that was enough. So I decided to rent it to you,\" she laughed. \"I admit the fact there was no husband made it easy. I saw the pattern and...\"\n\n\"A minute ago you acted like you hadn't.\" \n\n\"Wow.\" Robin nodded. \"You got me. I had noticed it, but figured I'd kind of play dumb seeing it has no bearing on you. I figured if I was ever going to try it again, it would be just a mom and son.\"\n\n\"Why that specific?\" Emma wasn't sure why she was asking. Maybe it was the attorney in her, but something about the way Robin had said that had her instincts kicking in. Something was odd here. Maybe not exactly anything bad, but just off. \n\nRobin drained her glass of wine, and when she put it down, picked up the bottle and poured more into it. This was her third glass to Emma's one. The woman could drink!\n\n\"What do you mean specific?\"\n\n\"You said mom and son. I get not wanting a man after what happened to you and others, but it could be mom and daughters or a gay couple or a single person who wants a big house, some kids going to school in town.\"\n\nRobin took another sip of wine. A stalling tactic, if she'd ever seen one. Wow, she was in interrogation mode.\n\n\"You're very astute, Emma.\" Robin told her. \n\n\"Comes with the profession.\"\n\n\"Or just plain old women's intuition,\" she chuckled. \"But you're right. I was looking for a couple just like you and your son.\"\n\n\"We're not a couple.\"\n\n\"Now you're just picking at word choices.\" Robin rolled her blue eyes. \"Should I say pair? I decided because of past experiences here as well as my own terrible first marriage, I would only rent to a mother and son.\"\n\n\"That's your right. Just not sure why that,\" she paused and winked. \"Pairing\".\n\nRobin laughed and as Emma drained her own glass was already picking up the bottle so the second she lowered her glass she was refilling it.\n\n\"Mostly because of what I said. Reminds me of me. After that piece of shit left it was just me and my son and it was so peaceful.\"\n\n\"Oh, I didn't know you had a son. Is he local?\"\n\n\"Local,\" she repeated, then frowned. \"No, he moved away a few years back. But for several years it was just the two of us and it was so nice.\"\n\nEmma took several long swallows of the wine. She'd meant to sip it, but it was so damn good! It was sweet and a little on thicker side, reminded her in a way of apricot juice in its texture. When she put the glass down she noticed how warm she was feeling. \n\nWarm and very relaxed. The sensation was a welcome one after the stress of the last few months, but she needed to be careful. She wanted to a lot done before she went to bed tonight. Eric was working away upstairs and she didn't want to slack on her end. \n\n\"See, Emma. Moms and daughters? Yes, there's a great bond there, but also there's also teenage drama and conflict too. But a mom and her son? Especially when the father is out of the picture for whatever reason? There's no closer bond.\"\n\n\"Could have fooled me.\" Emma grunted. \"Kid barely talks to me sometimes.\"\n\n\"He lost his father and its partly his age. But trust me, Emma a boy in Eric's situation, if he's a good boy, knows his new place.\"\n\n\"Place?\"\n\n\"Yes, he's now not only your son, but the man of the house who needs to look after his mother. You were both heartbroken after your husband's death, I'm sure. But the aftermath is different for each of you.\"\n\n\"How so?\" Emma was asking out of genuine curiosity now. Robin's situation with her husband couldn't have been more different than hers, but life afterwards was something she had not only dealt with, but seeing she was remarried and happy, had done it the right way.\n\n\"You lost a life partner, a lover, a best friend, half your world. Eric lost his father and that is traumatic, but he still has his mother. You on the other hand, have nothing to replace your loss.\"",
        "\"I have Eric and he is part of Steven.\"\n\n\"That's good you see it that way.\" Robin nodded in approval. \"But friendship, companionship and of course a lover? Society says he could never fill those roles.\"\n\n\"Society says?\" More odd word choices. \"That makes it sound like stealing. Only reason some won't do it is they would go to jail.\"\n\n\"I just mean that we're all taught family being anything but family is wrong.\" \n\n\"Because it is.\" Emma pointed out. This was getting strange at this point. \n\n\"It is if someone is being abused or raped or molested. But over eighteen and consensual?\" Robin shrugged. \"You practice law, Emma, so you unquestioningly follow them. But when it comes to love there should be no laws or limits.\"\n\n\"You sound like, what was that old movie that was a big deal when I was a kid...\" Emma snapped her fingers \"Taboo! That movie got a lot of buzz.\"\n\n\"For good reason. Yes, it was called sick, and it was defended as fantasy, but it got people thinking.\" Robin smirked. \"Now? That material is all over porn sites and has a huge following.\"\n\n\"Take your word for that.\" Emma was lying. She'd been watching porn as a substitute for her sex life and had seen countless incest related clips. She always passed them by because it was sick, but there was obviously a market. She stopped and suppressed a shudder at an unwanted memory that some would say gave those fantasies credibility.\n\n\"Do take my word,\" she laughed. \"I'm a big fan of erotic movies. Cliff too. We watch, we do.\" \n\n\"TMI, like my son says.\" Emma forced a smile, but was replaying Robin and Cliff even as she did. If she had the real thing, she doubted porn would be needed. \n\n\"Sorry, but seeing you saw more of me than you'd ever want to I didn't see this as being any more embarrassing.\"\n\n\"I think we got off topic.\" Emma picked up her glass again. Even though she kept telling herself not to have anymore, she kept drinking, but forced herself to keep it to a reasonable swallow this time. \n\n\"Kind of. Where I was going is you lost more than your son. There's a bigger hole for you and a good boy will try to fill that hole.\" Emma started to speak, but she held up her hand. \"I'm referring to a man of the house roll. Helping you, being protective, trying to take care of you the way he saw his father do.\"\n\n\"We have been closer.\" Emma agreed. \"He's sulky, but he's always there when I need him.\"\n\n\"And he's a good looking boy. He should be with a cute girl or several, but he's not is he?\"\n\n\"No, but that's because his girlfriend since middle school shit on him.\" Emma informed her.\n\n\"Oh?\" For a moment there seemed to be a smile playing at her lips, but it never completely formed. \"That's too bad, may I ask what happened?\"\n\nEmma hesitated for a moment, then decided to give her a brief version of the story. Even as she spoke, she realized she was not normally one to volunteer much of her life to anyone, but Robin was new to her.\n\nShe had no attachment or history or preconceived notions about Emma or Eric and in that sense it was refreshing to talk to someone with an unbiased perspective. The wine most likely was helping as well, as her tongue felt as loose as her body at the moment.\n\n\"Damn, that's cold.\" Robin whistled. \"We're talking about asshole men, but girls can be an entirely different level of evil when they want to be.\"\n\n\"True, but better she get caught before he married her.\" Emma stopped in mid thought to drain her glass. \"And it got him to go along with our move because life was ruined for him there in his eyes so I'll take the good with the bad.\"\n\n\"And something tells me a lot more good will come with this new start of yours.\" Emma poured them both more wine. \"You'll find the two of you getting much closer and life becoming much better.\"\n\nShe raised her glass and Emma lifted hers and after they toasted, the both chugged half the contents of the large glass.\n\n\"Wow, this is good,\" she declared.\n\n\"It is.\" Robin demonstrated the point by chugging the rest of hers as effortlessly as if it were water. \"Cliff says the only thing that goes down easier than this wine is me.\"\n\nThey stared at each other and then both burst out laughing. \n\n\"When you find a good one, take care of him.\" Emma declared and surprised herself by also finishing off her glass. She blinked the room spun. \"Whoa. Haven't drank like this since college.\" She giggled. \"I went down pretty easy then too.\"\n\n\"TMO is it?\" \n\n\"TMI!\" They both laughed again and Emma louder than the joke warranted, but it felt good to laugh. She was already feeling as if this was the right decision. Just the idea of having someone she could talk and joke with that only knew her in the now and not the past was nice.\n\n\"Well, we seem to have digressed quite a bit.\" Robin wiped at her eyes, which were watering from her own laughter. Her face was now close to as red as her hair, but she still seemed fairly sober. \n\n\"We were talking about me trying again with this house because I did notice the penchant for things to not seem to go well when men were in the picture. It is strange and I suppose coincidence, but sometimes I wonder. But it's not worth discussing.\" \n\n\"I can imagine you wouldn't want to spook anyone. My son however, thought it was all worth bringing up.\"\n\n\"And I doubt he knows all of it. Somethings from years ago didn't make the precious internet.\" Robin said cryptically. \n\n\"That's comforting. Should I ask?\"\n\n\"No.\" Robin blinked her now glossy blue eyes. \"I mean not no like please don't ask, no as in just random things. Nothing scary, but once one bad thing happens, people start seeing things that aren't there and coincidence becomes urban legend.\"\n\n\"Oh, so is this the local haunted house then?\" Emma laughed. \"Eric was right, this has a little bit of Hollywood to it.\"\n\n\"Nothing that exciting.\" Robin turned serious for the first time. \"But last year was more than enough. That was horrific. We heard all three shots. Cliff ran over and broke the door down while I called the police. He found them all dead on the bed. Said half of Mary's face was gone.\"\n\n\"Oh, that's terrible.\" Emma whispered. \"I...I didn't even think about that. That you guys were neighbors.\"\n\n\"Ben was shot in the chest.\" Robin had a faraway look in her eyes as if she were seeing it all over again. \"Nathan must have put the gun in his mouth because the back of his head...\" she shuddered. \"Okay, sorry. I keep going you'll pack up and go.\"\n\nShe sighed, and leaning forward, folded her arms on the table.\n\nThe move pushed her ample breasts up in the dress and Emma, who was on the smaller side on top briefly envied the older woman's large bust. She thought of Cliff fondling her creamy breasts, sucking her pink nipples. Emma thought of him coming on them, that thick white fluid flowing over her nipples.\n\nEmma loved having her breasts 'painted' as they would say in porn. Warm sticky cum flowing over her sensitive nipples and her pussy still gaping from the cock that had been pounding it, leading up to that delicious explosion.\n\n\"Emma?\"\n\n\"Oh!\" She blinked. \"Wow, sorry, I just um, drifted for a minute.\"\n\n\"That wine is strong and you're tired,\" Robin noted. \"How about I come back tomorrow after the movers leave and help you and we can chat some more.\" She reached across the table and took her hand. \"Its so nice to have someone next door again. I hope we can be good friends.\"\n\n\"I'd like that too.\" \n\nEmma stared at Robin's hand which was as fair as the rest of her. It stood out against her own tanned skin and again her mind turned to sex. Robin's hand was soft and her slender fingers tipped in purple. She thought of that small hand around Cliff's thick cock.\n\nPumping it, stroking it as he sprayed his load on her tits. Again her mind went from Robin to her own fond memories of sex. The feeling of Steven's cock in her hand. The way it throbbed and the way she could feel his cum racing through it, then twitching when he exploded for her. \n\nEmma was getting warmer by the minute and to her chagrin she was getting wet. She shook her head and Robin gave her an odd look. \"Feeling it aren't you?\"\n\n\"The wine?\" \n\n\"What else would I be talking about?\" The question made sense, but she had the distinct feeling Robin was picking up on her arousal somehow. \n\n\"It's...got me feeling pretty loose.\" She laughed nervously.\n\n\"Its home made. My great grandfather owned a vineyard. Did quite well for himself. My father sold the business, but passed down the recipe. They water it down for mass consumption, but when Cliff and I make it, we keep the original recipe.\" She winked. \"Complete with secret ingredients.\"\n\nEmma caught herself getting ready to ask if one was an aphrodisiac because wow, was she....horny. There was no denying that sensation. She'd been thinking dirtier than usual lately, a product of no sex other than her toys and fingers, but tonight she was off the charts. Like she was back in college, drunk and looking to get laid.\n\n\"I'll bring you over a couple more bottles tomorrow, if you'd like. We have an entire rack of it in our cellar.\"\n\n\"Sure, if you don't mind. If nothing else I'll sleep pretty well.\" And go through more batteries than ever if this really was the wine influencing her raunchy turn of mind. \n\n\"Oh, it definitely helps out in bed.\" Robin spoke off handedly, but once more Emma had a hunch she knew the affect it was having on her.\n\n\"Hey, mom, check this out.\" \n\nBoth women looked up at Eric as he entered the kitchen.\n\n\"Oh, hi Robin, didn't know you were still here.\" Eric flashed her a huge smile.\n\n\"I was just getting ready to go. Your mom's had a long day.\" She stared at Eric, then followed his eyes down to where she still had her breasts propped up on the table.\n\nEmma felt a twinge of embarrassment when Robin quickly sat back in the chair.\n\n\"Well it's obvious what you were checking out, but what am I supposed to be looking at?\" she asked. \n\n\"Oh,\" Eric lowered his head. \"Sorry, Robin. That was rude.\"\n\n\"Nothing to be sorry about Eric, boys will be boys, and on that note I should be getting back to my boy.\"\n\n\"He's hardly a boy.\" Emma told her. \"Not much younger than me I would think.\"\n\n\"Just a phrase.\" Robin replied, pushing away from the table and standing. \"He's a boy to me in many ways.\" Her gaze shifted from Robin to Eric. \"What's in the box?\"\n\n\"What I wanted mom to check out.\"\n\nEric put a square flat white box on the table in front of her. \n\n\"I found this on the floor under your bed when I was putting the sheets on.\"\n\n\"You made my bed up for me?\" Emma grabbed his arm and tugged him down to her level to kiss him on the cheek. \"You can be so sweet!\"\n\n\"Right.\" Eric rolled his eyes. \"How much have you had to drink?\"\n\n\"What? I can't kiss my baby and tell him he's sweet?\" She heard her own words and conceded she'd probably had too much to drink.\n\n\"I haven't been your baby in years.\" He puffed himself up. \n\n\"A son is always their mother's baby. No matter how old,\" Robin said softly, then as she had a couple of times during the conversation looked as if she'd thought she'd said something she shouldn't and quickly pointed. \"What's in the box?\"\n\n\"Open it, I'm heading back upstairs to finish your,\" he gave her a wry smile, \"Third shoe rack.\"\n\n\"Thank you, honey!\" She didn't make him endure another kiss. \"I appreciate it.\"\n\n\"Hey, Eric, would you like to try some wine?\" Robin tapped the bottle.\n\n\"He's only 20.\" Emma spoke while staring at the box in front of her. She had no clue what was in it, but for some reason she felt a thrill of anticipation flowing through her. \n\n\"Oh, please, like he's never drank before.\" Robin laughed. \"And its only wine.\"\n\n\"I'll have some when I'm done.\" He touched Emma's flushed cheek. \"Mom seems to like it, that's for sure.\"\n\n\"Be nice, you.\" She looked up at him. \"Be good to your mother.\" She pushed her lips into a pout and looked up at him through her eyelashes.\n\n\"Wow, I've never seen that look before.\" Eric surprised her with a big smile. \"I like it, you look cute.\"\n\n\"Thank you!\" She beamed.\n\n\"Usually you have that lawyer look, you know, kind of bitchy.\"\n\n\"Ouch, Eric, you'll do better with the girls when you learn when to stop,\" Robin advised him.\n\n\"She's not a girl, she's my mom.\" Eric replied, then shrugged. \"I don't have a girlfriend anymore. Don't want one.\"\n\n\"You think you don't, but the right woman will come along, and very soon I'll bet.\" Robin smiled encouragingly. \"You're a good looking boy, and you can try to act otherwise, but you're very good to your mom. Women love a boy who's good to his mother. Tells them he'll be good to them.\"\n\n\"And there's a whole city full of nice girls twenty minutes down the road,\" Emma added. \"But, I disagree with Robin. Most women don't want a mama's boy.\"\n\n\"No, but they want a man of the house and Eric is proving he can be right now.\" Robin pressed. \"My son was for me as well and trust me he makes his wife very happy. He takes care of her in every way and he learned that from wanting to take care of me.\"\n\n\"Every way?\" Eric raised his eyebrows. \"That sounds a little creepy. Little to Kay Parker taboo for me.\" He laughed at the look on Emma's face. \"Come on, mom. That movies a classic even kids my age have...\" he caught himself, then winked. \"Heard of it.\"\n\n\"I have it on DVD.' Robin told him, then smiled when his eyes widened. \"Whole series actually.\"\n\n\"\"So, let's see what's in this box!\" Emma declared, and not just to get off the suddenly awkward conversation, but for whatever reason she was dying to see what was in there. \n\n\"I already saw it.\" Eric waved his hand. \"I'm heading back upstairs, good night Robin.\" He gave her a sly smile. \"Maybe someday I could go through your movie collection.\"\n\n\"Out!\" Emma snapped.\n\nWith a laugh, that told her she'd played right into him, Eric left the room. \n\n\"Sorry.\" Emma said while lifting the lid of the box. \"He's not really a jerk, he's busting me up more than you.\"\n\n\"I know, remember I raised a son. But he's right, that movie is famous and for good reason. It changed the way people saw things.\"\n\n\"Pervs anyway.\" \n\nEmma removed the lid and was confronted with an amethyst pendent attached to a silver chain. The pendent was in the shape of a teardrop and about an inch long. As Emma stared at it, the hairs on the back of her neck rose and she felt as if a current of electricity were running through her.\n\nShe gasped when the surface of the pendent seemed to shift and she was now staring at a small eye the color of the stone. \n\n\"Robin! Do you see...\"\n\nEmma blinked and shook her head. The eye was gone as was the weird feeling, but more importantly, the pendent was now an emerald green. The same green as the earrings she was wearing. Eric had bought them for her for mother's day last year because green was their shared favorite color and they matched the stones in her engagement ring. \n\n\"Did you see that?\" She forced the words out as the older woman came around to her side of the table.\n\n\"Yes, its beautiful.\"\n\n\"No, I mean what it did, it changed colors.\"\n\n\"Changed? Emma, you shouldn't have any more to drink.\" Robin reached down and slipped the pendent from the box. \"I was wondering where this had gone!\"\n\n\"You've seen this before?\" \n\n\"Yes, it belonged to my great grandmother. I had given it to Sherry, one of the previous tenants that I'd become close friends with. When she up and left, her husband said he could never find it.\"\n\n\"Up and left?\" Emma spoke softly and her voice sounded far away. \"You didn't mention Sherry before, this is another one?\"\n\nIn front of her Robin was holding the chain and the pendent was swinging back and forth. Her eyes were locked onto it, waiting to catch a glimpse of what she'd sworn had been an eye. And it had been an amethyst, hadn't it?\n\nRobin rolled her eyes, but it seemed at herself rather than Emma. \n\n\"Yes, I think I should stop drinking too, getting my tongue wagging for all the wrong reasons. Sherry was one of the sort of odd, but nothing really bad cases of things not working out here. But it was her, not this house in anyway.\"\n\n\"Why would I think it was the house? I told you I don't buy any of that.\"\n\n\"Sorry, I'm used to some of the old superstitious farts around here. They tell all kinds of weird stories.\" She put her hand over Emma's as she had before. \"Emma will you promise me something?\"\n\n\"Sure.\" She nodded absently while still staring at the pendent. She had to have been seeing things. Stress, alcohol and fatigue were getting to her. Nonetheless she had a strange compulsion to put it on.\n\n\"If you hear anything that seems out of place about me from anyone, please ask me about it and don't just believe them.\"\n\n\"What would they say? You seem so nice.\"\n\n\"My family has been around here a long time and there's some stories about my ancestors that may or may not have been true, but people associate it with me at times.\"\n\n\"I don't subscribe to gossip.\" She reached out and touched the amulet and was surprised to feel it was warm to the touch. Or maybe that was her own heat from the wine.\n\n\"Good. Like I said, I think we are going to become good friends with a lot in common. In fact, I'm so sure that I would like you to have this.\" She held the pendent out to her. \n\n\"No, I can't take this. It's an heirloom.\" Even as she protested, Emma wanted nothing more than to accept it.\n\n\"An heirloom I gave away and thought was lost the last few years. Besides, it would match those earrings and your eyes perfectly!\" She focused her glossy blue eyes on her. \"They are beautiful, like cat's eyes.\"\n\n\"I don't know, Robin, we just met and...\"\n\n\"And I already feel close to you.\" Robin walked around behind her. \"I think some people are meant to connect, Emma. We're sisters in spirit in many ways, so please take it. At least try it on.\"\n\nBefore she could put up another halfhearted protest, Robin moved her pony tail to the side and reaching over her head, slipped the pendent around her. Emma released a sharp breath as the second the pendent touched her upper chest, a warm tingling sensation flowed through her.\n\nThe feeling spread through her arms and legs, and into her stomach. It seeped down between her legs and her clit throbbed briefly as if she were in a high state of arousal. She was barely aware of Robin clasping the chain and leaning over her to grab her purse from the table.\n\nShe slid it over and removed a small compact. Emma felt her large breasts pressing into her back and could smell her perfume. Robin's red hair was on her arm and she had the insane desire for Robin to kiss her neck. \n\nShe leaned back, pushing harder against Robin's tits while picturing them from earlier today. Large, creamy, hard pink nipples that looked oh so suckable! \n\n\"What?\" she asked the question out loud. Never once in her life could she recall desiring a woman. What the fuck was in that wine? \n\nWhatever it was, she had to admit she was feeling pretty damn fine and wished she had someone she could share that feeling with. Eric was right, as part of the new beginning her pathetic ass needed to get some cock. In her mouth, in her pussy, hell, if he were good enough to her, in her ass. \n\n\"Emma?\" Robin cut through her most recent depraved thoughts. She was holding up the mirror, allowing Emma to see the pendent. \n\nThe chain was short, leaving the pedant in view over the neckline of her t-shirt. Her eyes dropped down to her own breasts. Emma was not big on top, but her breasts were nicely rounded, perky and firm, her nipples a red similar to the color of the wine. \n\nShe imagined pressing her smaller tits against Robin large breasts, their nipples rubbing together.\n\n\"What is in this?\" She tapped the bottle. \n\n\"Why do you ask? Is it hitting you hard?\"\n\n\"Its...having an effect.\" Emma said simply. \n\n\"Alcohol loosens inhibitions. Maybe you're feeling the way you want to feel. So, do you like it? It looks beautiful on you, no?\"",
        "\"It does.\" Emma knew she should give it back. She had no right wearing something special like this, but she really loved how it looked, and it seemed to feel right. \"You really don't mind?\"\n\n\"Not at all, looks great and I feel good giving it to someone who appreciates it.\"\n\n\"I do, thank you so much!\" Emma stood and gave Robin a huge hug, then kissed her cheek fondly.\n\nShe kissed her very close to the lips and found herself wondering how soft Robin's lips would be...both sets. One soft and sweet, the other set soft and...wet. \n\n\"You're welcome.\" Robin shocked her with a quick peck on the lips. Then gave her a rueful smile. \"Sorry, my family was very affectionate and we thought nothing of little quick kisses like that.\"\n\n\"Um, no problem.\" Well there was, and that it was quick and not lingering and tongue filled. \n\n\"I'm heading home, I'm sure Cliff is hungry and last time he tried cooking we ended up with the fire department here.\"\n\nShe grabbed her purse and with a wave over her shoulder, exited through the kitchen door that led out into the backyard. Emma watched her round ass sway pleasantly in her sun dress and took in the long well shaped backs of her legs.\n\nEmma walked over to the window, noticing she was listing to the right a bit, and watched Robin walk across the yard towards her house. Reaching over, she opened the fridge and grabbing a bottle of cold water, opened it and chugged half of it. \n\nShe continued to look out the window until Robin reached her house. Cliff came out on the porch to meet her and they shared a hug and a long kiss. This time she wasn't turned on, but sad. She remembered those greetings fondly and longed for someone to greet now. \n\nShe finished off the water, then turning on the faucet, splashed some water on her face. The water and the cold on her face helped clear some of the effects of the wine and turning around she leaned against the counter. \n\nEmma wanted nothing more than to go upstairs and christen that hot tub. A nice long soak, then a good night's sleep and be ready for a busy day tomorrow. Instead she let her gaze wander over the boxes stacked on the floor containing their dishes and pots and pans and all the small items she had on the counters at home. \n\nShe'd put some of it away before going upstairs. Eric was working hard on her stuff. It wouldn't be fair for her to slack. With a sigh she picked up the utility knife from the counter and cut open the nearest box.\n\nPulling out a tea cup enveloped in a small bubble wrap bag, Emma thought of Robin. At home with her much younger husband who was crazy over her. They were going to fuck again tonight, she knew it. \n\nRobin was a lucky woman, being adored and kept satisfied. All Emma had to look forward to was playing sticky finger in the hot tub. Putting the cup down and taking out another, Emma thought Eric wasn't the only one mad at life right now.\n\nChapter Three\n\n\"Ouch!\" Emma cried out when she straightened up to soon and caught the back of her head on the top of the cupboard.\n\nShe sat on the floor, running her hand over her head. That was the third time she'd done it while putting all the pans and cleaning supplies away in the lower cupboards. Fortunately that was the last of it. \n\nStanding, Emma stared at the four remaining boxes and shook her still aching head. \n\n\"Tomorrow is another day.\" She slumped into the kitchen chair and leaning back into it, closed her eyes.\n\n\"You tired mom?\"\n\nEmma opened her eyes and flinched at the sight of a woman with long black hair sitting across from her. Behind her was a tall young man with the same dark hair. \n\n\"Long day, Ben.\" The woman, rubbed at her shoulders. \"I'm sore.\"\n\n\"Here, let me do that.\" Ben's hands slipped beneath hers and kneaded her shoulders.\n\n\"Oh, honey, have I told you lately what a good son you are?\" Mary released a relaxed sigh slumping further down in the chair. Wait, how did Emma know the woman's name? \n\n\"Because it's your dream silly.\" A soft voice chided in her mind. \n\n\"A good son should take care of his mother, no?\"\n\n\"I'd like to think so.\" Mary laughed softly then purred contentedly as his large strong hands worked her shoulders. \"Hmm, honey, that feels fucking amazing.\"\n\nThose words, inappropriate as they were, had come out sounding even worse. Mary had breathed them in a husky voice more fitting being with a lover than her son.\n\nSomewhere in her mind Emma knew she was dreaming, but was unable to react to the scene in front of her. Did you usually know when you were dreaming in your dreams?\n\n\"Robin was saying that earlier.\" Ben-why did their names seem familiar?-spoke as his hands slid from her shoulders down to her upper arms. \"Man, Cliff was fucking her good.\"\n\n\"That he was,\" she whispered, \"God, he was fucking her so hard.\"\n\nWait, they had seen Cliff and Robin? No, this was a dream...\n\n\"And she looked so good, damn she was hot.\" Ben was no longer massaging, but caressing her arms, sending a shiver through her. \"The way her dress was bunched up and just on her knees taking it? I was so fucking hard.\"\n\n\"And your naughty mother was very wet,\" Mary sighed, \"In fact, I'm getting pretty wet right now.\" She put her hands on his forearms and squeezed them. \"Damn, you've got a hard body.\"\n\n\"Got a hard cock too, and not from thinking about Robin.\" Ben swept her hair to the side and kissed her neck. \"But from my hot as hell mother.\"\n\n\"Oh, that's nice.\" She reached back, putting her arm around his head as his soft lips slid along her neck.\n\nHis scruff scraped her cheek as he nuzzled her and she moaned at the slight discomfort. Emma was aware of her nipples hardening and she was squirming in the chair. Ben's hands moved down her arms and across her stomach. \n\nWhat the hell was this? That was his mother! \"You think your mommy's hot?\" She gasped when his hands worked their way they beneath her shirt. \n\n\"I think my mommy's the sexiest woman I've ever seen,\" he whispered in her ear. \"Remember all that milf porn you found on my lap top? I watch that because I think of my milf.\"\n\n\"I like that.\" she cooed as he fondled her soft stomach and worked their way up towards her aching breasts. \"You think about that? About your mother being your little porn star?\"\n\n\"I think about my mother being what I know she wants to be.\" His hands cupped her breasts through her bra. \"My dirty fucking whore.\"\n\nHe punctuated his words by yanking her shirt and bra up over her ample tits and Emma felt a wave of heat flow through her as it had when she'd been watching Robin and Cliff\n\n\"Oh, yes,\" Mary moaned when her son captured her swollen nipples in his strong fingers. \"I'll be your whore, baby. Your dirty girl, your slut. After all, shouldn't a mother take care of her son in every way?\"\n\n\"Then take care of me.\" His voice had an edge to it. \"Be a good mother and give your son what he wants.\"\n\n\"What do you want?\" she asked while putting her hands over his, pressing them harder to her tits. \"Tell me.\"\n\n\"I want my mother to suck my cock.\" He released her tits and she yelped in surprise when he grabbed the back of the chair and spun it to the side. \n\nBen unsnapped his pants and grabbing the back of her head with one hand, pulled his zipper down. Emma saw he wasn't wearing underwear and licked her lips at the same time Mary did as she reached in to pull out his cock. He paused, an evil smirk on his face. \n\n\"Tell me what you want, mom.\"\n\n\"I want to suck my son's big hard cock.\" \n\nOpening wide, she waggled her tongue at him, \"Give it to me, baby, feed your mother that big dick.\"\n\n\"Well, you always told me to never tell you no.\" Ben laughed, and with a flourish whipped his cock out and shoved her head towards it.\n\nThere was a green haze that obscured her vision and when it cleared Emma was staring at herself, sitting in the chair, her shirt up and her tits exposed. She was eagerly sucking Eric's cock! \n\n\"Oh, fuck mom,\" he moaned, \"That feels so...\"\n\nEmma's eyes flew open and jerked upright in the chair. \n\nShe sat there, her heart beating so hard she thought it was going to burst through her chest. \n\n\"What the hell was that?\" she whispered, rubbing at her temples. \n\nHer heart slowed, but her mind raced. Seriously, what the hell was that? The last few weeks she'd been having an increasing amount of wet dreams. It was obvious her body was telling her she needed to do more than go through batteries like they were going out of style. \n\nHer reaction to Robin and Cliff earlier was a sign of that. She still couldn't believe she'd not only stood there watching, but to have that reaction? She swore if Eric hadn't shown up she might have popped her cork just from observing them. She was definitely going into heat, the effect of the wine on her proved that. Robin was right, it did lower inhibitions.\n\nBut that dream? A dirty dream was one thing, but a mother with her son? Worse, seeing her and Eric in that position? Where the hell could that have possibly come from? Like pretty much every normal mother, she had never once had an obscene thought of her son.\n\nTo the contrary, on occasions where she'd noted her son was a good looking young man, she felt a little awkward. \n\n\"Its okay,\" she muttered softly. \"Too much to drink, new house, nerves.\" Her words sounded as lame as they were. There were just some things you never thought of no matter how tired or drunk you were.\n\nShe rose from the chair, wincing at how sore she was. Time for that soak and bed. Emma left the small light on over the counter in case Eric got thirsty in the middle of the night and left the kitchen.\n\nShe crossed the dark dining room, and turned on the small lamp in the corner to leave him a lighted path in the unfamiliar house. Emma entered the living room and saw Eric was asleep on the large sectional. \n\nHe had removed his shirt and was just wearing a pair of shorts and his I-pad was face down on his chest. She quietly padded over to him, and smiled. He'd been so moody lately, but when he was asleep he looked like the sweet boy her and Steven had raised.\n\nEric had worked his ass off, mounting the TV on the wall and setting up her computer and monitor so all he had to do when the movers came tomorrow is put it on her desk. The cable couldn't come until next week, but he'd linked his I-pad to the TV so they could watch Netflix or movies. \n\nHe'd also brought all her clothes up to her room and hung up her work clothes and more playful dresses that she never wore anymore in the huge walk in closet. \n\nEric had not only put together her shoe racks, but put all her shoes in them. Granted, her OCD would force her to arrange them, but it was the thought that counted. He'd even made her bed with the pillows and sheet set she'd brought in the trailer. \n\nThe movers were due at noon tomorrow with her desk and book cases and Eric's bedroom furniture, along with a few small pieces of furniture she'd decided to take with them. That and the boxes of personal belongings that hadn't fit in the trailer.\n\nTwenty plus years in that house and all they took fit into that trailer and a sixteen foot U-haul. She noticed Eric had unpacked the photos that she wouldn't trust with the movers and lined them up on the mantle and in the shadow box on the wall opposite the fire place. \n\nEmma purposely looked away from them. She didn't need to look at Steven right now and wonder what he thought of her leaving the home and life they'd built together.\n\nEric was breathing slow and heavily and she grunted at the half empty bottle of wine and the empty glass on the coffee table in front of him.\n\nShe'd told him he could have a glass, not two or three. But what the hell, he was twenty, a man now and he'd earned it. Leaning over him, Emma eased the I-pad from his chest in case he moved so it wouldn't fall on the floor. \n\nWhen she touched it, the screen came up and she stifled a gasp. The picture on the screen was one Eric had taken in a mirror and she was confronted with the sight of her son sitting on his bed with Ashley kneeling between his legs.\n\nShe was naked, but for a green thong, reinforcing it had always been his favorite color. It dawned on her that picture was taken the day she'd walked in on them fooling around. Eric hadn't locked his door and she didn't know Ashley had been over.\n\nEmma slid the picture over and the next one was more graphic. This one Eric had taken of Ashley blowing him, his cock was not visible as it was buried in her mouth, her lips at the base of his shaft. \n\nAshley's big brown eyes were staring up at him and Emma thought the little slut looked pretty good with something in her mouth. \n\nOn that note, she quickly, shut the I-pad off and wondered what was wrong with her? She should have done that the second she saw the first pic, not look for more. She was sure there were a whole series of them on there. \n\nShe leaned all the way over the couch and carefully placed the I-pad on the coffee table. Now that she'd gotten over her moment of parental indiscretion she felt a mixture of anger and sadness that he was looking at those pictures. He needed to get over the little bitch. \n\nHe'd meet someone here once he got a job and started spending time in the city. Eric was good would go back to his sweet happy go lucky persona once he found someone to make him happy. He'd filled out pretty nicely too, she noted as she straightened up and looked down at him.\n\nHis chest was broad and his stomach hard and flat. He had his arms up behind his head and even relaxed, his biceps were visible and impressive. Emma's eyes trailed from his peaceful face down his chest and his stomach, and froze when she noticed there was another large muscle showing itself in the form of an impressive bulge in his shorts.\n\nImpressive? She shook her head, but continued to stare. Beneath her, Eric moaned softly in his sleep and his hips moved. When she realized her son was obviously having a dirty dream, she...remained where she was and watched his hips rock. \n\nThe warm feeling was coming over her again, but this time centered in her chest. She swore the pendent was heating up. Emma put her hand over it. It was cool to the touch, but her body wasn't. She was heating up again in more ways than one. \n\nShe wondered if he were dreaming of Ashley. His sexy little girlfriend, sucking and fucking him and letting him take pictures. Emma snapped herself out of those thoughts by wondering if the little twat was letting Mark take pictures then too. \n\nEmma took one more look at Eric, that hard young body and right now hard where it counted. He was wasting himself not having fun. Then again so was she, because there was no reason she shouldn't be getting some hard young cock.\n\nWith that thought, she spun around on her heel so fast she almost lost her balance. Young? Emma had never thought about younger guys. She had no desire to play cougar to some kid Eric's age. Then again if they looked like Eric...\n\nShe strode across the room and walked up the stairs, trying to distance herself from her son whom she was just staring at in an unmotherly way. That brought back that screwed up dream of watching some son and his mother, then the brief flash of it being her and Eric. \n\nTaboo. The word sounded in her mind. Not just the act, the movie. Eric had mentioned it and Robin had been saying weird things about mom's and son's that sounded a little too close. That's where it had come from.\n\nNot that she still should have any type of dreams or thoughts involving Eric, but at least it gave her the feeling it had not come from nowhere. She hadn't caught a buzz in a long time nor had she been this tired. Tomorrow she'd be back to normal.\n\nEmma passed the room that would be Eric's noting that the small cot Robin and Cliff had been fucking on was folded up and shoved into the corner.\n\nCliff was supposed to take it out tomorrow. Good thing they'd folded it up, or Eric would have wanted to sleep on it and spend the night sniffing the sheets.\n\nEmma caught herself thinking about Robin's glorious red haired glistening pussy and how it had looked with that big cock pounding it. Her own pussy yearned for that, tonight more than ever it seemed. \n\nEmma went by the closed door that was going to be the guest room, not they'd ever have company, but she planned on eventually getting a bed for it, on the off chance they did. That room had been the master bedroom, but after what happened in it, Emma had opted for the smaller second bedroom to be hers.\n\nShe stopped in front of the door, her eyes wide as she heard Robin's voice in her head. \"Ben was shot in the chest.\" \n\nBen and Mary; the mother and son killed in the room she'd just passed. That's why the names in the dream sounded familiar.\n\nHer stomach tightened as another thought leapt into her mind. All three bodies had been found in the son's bedroom. Why had they been in the son's room after midnight? Emma recalled enough of her criminal investigation courses to know what a crime of passion murder scene would look like.\n\nHusband catches wife with a lover, kills the lover out of rage, the wife from rage and betrayal. Then they turn it on themselves for what they did or not wanting to face the consequences. \n\n\"Emma, what are you thinking?\" she asked aloud, to try to joke it off, but her gut, which she trusted unquestionably felt she was on to something. \n\nWas the mother and son having a twisted affair? But why would she dream of it? Now that she had it really fell into place. The article hadn't had a lot of detail as it was so cut and dried, but she wondered what the autopsy report had said.\n\nHad the mother showed signs of sexual activity before death? If so was it the son's DNA found within her? There had to be a report somewhere, unless they half assed it for being an obvious cause of death.\n\nWhy was she thinking about this?\n\nEmma forced herself to get out of investigator mode and chalk everything up to just an eventful day and her tired mind was spinning like a hamster in a wheel because it had nothing better to do.\n\nShe smiled at how neatly her bed was made up and walking over to the closet peeked inside and saw Eric had not only done her show racks, but put up her shelving and stacked some of her totes of winter clothes in the back for her. \n\nEmma noted the shoes were arranged as badly as she imagined, but it was the thought that counted. Eric might be a shit at times these days, but still a good kid and he did do what he could to take care of her. Just not in every way.\n\nWith an air of anticipation, she went over and opened the door to the master bath and smiled at the large hot tub. It was definitely big enough for two people to have some serious fun in. Emma lifted the lever to close the drain and turned on the water.\n\nOnce she got the temperature right, she went back into the bedroom while the tub filled. Emma walked towards her bed, and flinched when she saw movement out of the corner of her eye. She turned quickly then rolled her eyes when she saw it was only her reflection in the mirror over the bureau. \n\nShe stepped closer to the mirror and took in her appearance. Her green eyes seemed brighter than ever and more than a little glazed, telling her the wine was still flowing strong in her. Her normally fair complexion was rosy red and she wished she was flushed for a reason other than booze. \n\nEmma stared at the pendent resting just over the neckline of her shirt. She'd thought the stone had been a deeper green previously, now she swore it was the exact shade of her eyes. \n\nShe let her eyes trail down her body. Knowing it would be hot and she'd be driving, she'd worn a comfortable sleeveless t-shirt and her favorite pair of ratty cut off denim shorts. Her long sandy brown hair was pulled into a pony tail and as she usually did when not working, she'd foregone make up. \n\nAs an attorney, Emma always dressed the part during the week. Business suits, or modest skirts with long blouses and blazers. Her hair was always pinned up or pulled back, and her make up just the right mix of flattering, but not over the top. "
    ],
    "authorname": "lovecraft68",
    "tags": [
        "mother son incest",
        "milf",
        "mother son sex",
        "older woman",
        "halloween",
        "mother",
        "taboo sex",
        "mother son romance",
        "posession",
        "cursed object"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/spellbound-12"
}