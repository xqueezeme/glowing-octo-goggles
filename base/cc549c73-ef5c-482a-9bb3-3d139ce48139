{
    "title": "Rose Ch. 37-41",
    "pages": [
        "Rose's POV\n\nMy experience with Packs was limited to the fairly small Belden Pack, and my visits to the Gila Pack. Looking at the activity around the Johnson Pack House, I was taken aback at the sheer size and beauty of the house and the people.\n\nThe house itself was huge, a sprawling log mansion three stories tall with a big central areas and multiple wings. I kept sneaking glances at it as we ran down the hill, plus I had a bunch of curious wolves to deal with. A werepanther was not something they had seen based on their curiosity; since the Alpha was with me, I was immediately accepted. Wolves would approach, take a sniff or two as I ran with them, then back off so others could get in. When we finally got to the valley and broke into the open field, we were surrounded by excited Pack members.\n\nJosh and I followed Derek as he led the way to the house. At the top of the stairs, a beautiful brunette was standing next to Charlotte with one hand protectively over her rounded stomach. Derek shifted as he reached the top, taking her in his arms for a deep kiss. The Pack hooted and hollered at their Alphas before Derek broke away and put on the clothes she held in her other hand. Meanwhile, Charlotte handed clothes to Josh and I which we quickly pulled on. Derek turned to me as he kept his hand in her left hand. \"Rose Rodriguez, this is my mate Amanda. Amanda, this is Gunny's newly turned mate Rose.\"\n\n\"Pleased to meet you, Alpha, and congratulations,\" I said before she pulled me into a hug.\n\n\"I'm so glad to meet you, and your lovely daughter,\" she said. \"Charlotte told me a lot about you while we were waiting. I'm so happy for Gunny, and for Josh as well, finding his mate so early.\"\n\n\"I'm happy for her, I'm just a little freaked out that my daughter is growing up so fast! In less than a year she'll be turned and mated and talking about having children.\"\n\n\"We can be pregnancy buddies,\" Charlotte giggled as I glared at her.\n\n\"Come on inside, you must be hungry, and the kitchen staff planned for your arrival,\" she said as she turned to go inside. The staff had cleaned up from dinner, and most of the chairs were stacked on the table. There was a long table set up near the kitchen, and that is where we went. Derek and Amanda stood by chairs at the center, as their Pack leadership joined us. We were introduced to their head Beta, Will, and the other Betas who ran their Pack. We all waited for the Alphas to sit, then we were next as guests followed by their staff.\n\nWe were in the middle of an excellent meal of fresh-caught venison and steamed vegetables when I heard my phone beep. Charlotte gave it to me, and I smiled as I saw the message. \"The White House Counsel is bringing Charlie Watson, Assistant Attorney General, with her. They are taking off and will be here in three hours,\" I told them.\n\n\"Good, that gives you a little time to rest after dinner before we have to go back to the airport,\" Derek said. He looked at his men. \"Same plan, same people, but Josh and Charlotte stay here,\" he said.\n\nI texted Lisa Giovanni back, saying we would meet here. She thanked me and said the papers had been signed by the President and had been emailed to Alphas Robert and Renee.\n\nWe finished with some after-dinner drinks as Josh and Charlotte excused themselves to go join a crowd more \"their age.\" I snorted, I was by far the oldest at the table; Derek and Amanda were only a little older than Josh. \"Do you know if you're having a boy or a girl,\" I asked Amanda.\n\n\"We didn't want to know,\" she said. \"I'm happy either way. It's such a relief having the war over, our wolves are back to normal; when we are in danger, we don't fall pregnant. Now it's like a baby boom.\"\n\n\"Tell me about it,\" Doc said, \"Once these start dropping, I'm going to be swamped.\"\n\n\"I guess our Pack is a little unique, we have a lot of young children around, with the war orphans Ella picked up early on.\" I had listened in amazement when Ella had told the story of their run, and how the children came to be with them.\n\n\"And we are forever in her debt for what she did for us,\" Derek said. \"Don't tell her, but if our first is a girl we are naming her after Ella. She saved bloodlines, children, mates from certain death.\"\n\nI was very proud of my Alphas. \"She is a strong Alpha, and a better person,\" I said. \"I wondered what it would be like, having to submit to an Alpha pair so much younger than I am, but I'm not finding it an issue nor did Gunny. She's wise beyond her years.\"\n\n\"She has been through a lot, and never lost that goodness inside her. I have to ask, though- are you aware of the power your cat exudes?\"\n\n\"What do you mean?\"\n\n\"Your dominance level is very high, that is one reason why so many wolves wanted to come see and touch you,\" Derek said. \"Well, that and they hadn't seen a Werepanther before.\"\n\n\"You are easily Beta rank, possibly Alpha. I kind of expected you to have a strong animal since you are Gunny's mate and he is a high Beta, but it's more,\" Amanda said. \"You two could easily have your own Pack.\"\n\nMy jaw dropped a little at this. \"I'm still trying to figure out how to be a cat,\" I snorted. \"I'm not interested in being in charge.\" My cat just rolled her eyes at me.\n\n\"There's no use pushing it, what you are meant to be will come to pass,\" Amanda said. \"Now, tell me what Gunny is up to.\"\n\n\"He's working on setting a trap for Maitea, using himself as bait,\" I said. I quickly recapped what had happened in the investigation; discovering the identity of the shooter and her relationship to Agent Luis, the aborted break-in to his house, and our evasion of the arrest warrants. \"That's why I'm leaning on my relationship with the White House Counsel, I'm hoping we can once again bypass the bureaucracy and talk directly to the ones who can help us.\"\n\nDerek looked at the clock. \"And it's about time to go. Come on, I'll show you to your room and we can meet at the front door in twenty minutes after you've freshened up.\" He stood up along with his Betas, kissing Amanda who was staying behind with more pie. The room was in the Alpha wing, just down from theirs, and was lovely. I wished I had time and Gunny to fully enjoy it and the huge whirlpool tub. I had to remind myself I was a wanted fugitive.\n\nWe loaded back into the SUV's and drove back to the airport. The area was even more beautiful in the fading daylight, and I kept an eye on it as Derek and I talked about what would be happening. We were waiting by the runway when the charter plane arrived and taxied to the hangar. We stepped out, the Pack warriors moving around us, as the door opened to the plane. As soon as the pilot moved aside, Lisa Giovanni was coming down the stairs with a gentleman in an expensive suit behind her. \"Hello Rose,\" she said as she approached.\n\n\"Welcome to Montana,\" I said. \"Alpha Derek Johnson, this is White House Counsel Lisa Giovanni and Assistant Attorney General Charlie Watson. Charlie, I'm Rose Rodriguez, formerly Conspiell and FBI.\"\n\n\"I know who you are, Rose. I don't have time, let's move this along please.\"\n\nLisa looked back at the plane, a fuel truck was pulling up. \"Let's go back on board and discuss this.\" I looked at Derek, he nodded, and his men started moving to surround the plane. We went back up and sat in the plush chairs of the executive jet. \"I'm glad to see you up and about, Rose, I was worried about you after the explosion. I was shocked to see you were medically retired before you made the change, I knew it wouldn't be long anyway.\"\n\n\"Well, boss, that is part of the problem. We've set up this task force, one of the biggest in FBI history, but it is being systematically undermined from within. There are powerful people who do not want it, or me, to succeed.\"\n\n\"That's a frightening charge,\" Charlie said. \"I told Lisa that I would come and listen, but I also brought this.\" He pulled a sheaf of papers out of his briefcase. \"This is a warrant for your arrest on burglary and explosives charges under the Patriot Act. This one,\" he moved some aside, \"Is a warrant for Alpha Johnson for aiding and abetting a known fugitive. If you don't provide me with proof, the US Marshals are here and ready to take you into custody.\" I looked out the window of the jet, sure enough there were Sheriff's Department and other vehicles parked nearby. \"On the other hand, these papers are Presidential pardons, already signed and at my sole discretion as to which name or names get added.\"\n\n\"Not my first rodeo,\" I said. \"Let's get down to business.\" I pulled open my laptop and connected it to the TV on the wall so we all could see easily. \"Now, the Scrabble shooter team I put together focused in several areas. The shooter was well trained and left little to no usable evidence behind, so we focused on her skills and profile as well as the clues she was intentionally leaving. When Gunny was shot, Alpha Craig got a scent of a woman, of childbearing age. We used the tip line and multiple databases to come up with a suspect list who met the age, gender and skills criteria.\"\n\n\"That should have worked,\" Lisa said, \"so why didn't it?\"\n\n\"Because someone on the inside was erasing the data that would point to our shooter,\" I said. I pulled up the slide on Maitea Jenning's profile, showing how her background would have instantly pushed her to the top of the suspect list. Then I showed the screen shots Josh had gotten showing the changes to the database. \"The computer used belonged to the Agent in Charge.\"\n\n\"That doesn't prove Luis did it,\" Charlie said.\n\n\"Counsel, Luis Gonzales is the brother of the suspected shooter.\" I went to another slide. \"We discovered Luis had a burner phone he was using to communicate to her. Once we found the number, the history gave us these texts to another burner phone.\" I pointed out the communications around the time Gunny was shot. \"Luis gave her the target, me, and a route away from the site. The traffic cameras along this route were examined, but the person doing the screening didn't enter data for a critical ten- minute period. It was only when we had pack members independently view the video and compare it that we found the coverup.\"\n\n\"So you think it's more than just Luis,\" Lisa said.\n\n\"I'm sure of it, but we lost access to the team before we could identify the others he was working with. Then there was the package bomb at our house, the one that nearly killed me and my family. We were being pushed away from the team, with me gone and Craig busy with the Pack it gave Luis full control of the task force. When my change was over, we were getting nowhere, and she was bound to kill again. That's why we went to his house, to look for more evidence of his involvement.\"\n\n\"I saw that, the still photos are damning,\" Charlie said.\n\n\"You have the raw video and have compared time stamps for gaps, right?\"\n\n\"No, just stills he gave us.\"\n\n\"The system is motion-activated video,\" I said. \"In any case, you didn't see this.\" I pulled up the video I had taken in his home, pausing a few times to point out specific things in the safe. \"The C-4 bars he has here, we took the labels and sent them to a friend in BATF. He confirmed that the explosives are the same as those used in the package bomb at my house. The pistols are consistent with the murder weapon from the attack on the Gila pack that killed two people at close range. The certificates and trophies prove he is skilled enough to have killed both quickly, and as a FBI agent he would have been able to approach without suspicion.\"\n\n\"Not proof,\" Charlie said, \"but you're building a strong case.\"\n\n\"There's more,\" I said as I advanced the slide. \"Josh used cell tower records to track Luis' movements that day. His phone was off during the time of the shooting, but he made calls before and after, and those towers were on the way to and from the site.\" I finished up a few slides, then removed the memory stick and handed it to Charlie. \"This contains the electronic evidence and scans or videos of sworn testimony from myself, Gunny, Josh and others from the team.\"\n\nCharlie sat back, closing his eyes and pinching his nose. \"You people give me headaches,\" he said.\n\n\"Me too,\" Lisa told me. \"I'm convinced. Charlie, do you have enough to prosecute?\"\n\n\"Maybe. There are chain of custody issues, some of this was obtained illegally so we will have to do our own checks. Motive and opportunity are clearly there.\"\n\n\"Do you have enough to put our names on that pardon?\" I looked at them nervously, I wanted Charlotte and the Pack out of danger even if I took the fall.\n\n\"If we can prove that Maitea is the shooter and was being actively aided by Luis, then you have done us a great service. I would have no problem issuing the pardons then.\" He looked at Lisa. \"I will give Charlotte and Derek a pardon immediately, she was a minor player and is under eighteen, and Derek was aiding your investigation. It's also a show of good faith. Rose, I expect you to stay out of trouble and check in with Lisa daily. If you continue to cooperate, the charges will be reduced or pardoned. Where's Gunny?\"\n\n\"He's in the field,\" I said. \"We set a trap for them.\" I described how we had sent the fake text, and now Gunny and two other snipers were watching for her.\n\n\"Wait, so that's what you needed the designation for,\" Lisa said.\n\n\"Yep.\" I smiled as I sat back. \"The Gila Pack purchased that land because it was remote, and the trap wouldn't endanger humans. That designation of the property as Pack lands? That changes everything if we catch her.\"\n\nMy phone buzzed, I looked down and it was Alpha Robert Hastings. \"Alpha, I'm in a meeting with the White House Counsel and Assistant Attorney General along with Alpha Derek.\"\n\n\"Put me on speaker,\" he said. I did and set it on the phone. \"I'm on the way to the property now. Maitea Jennings showed up and was stopped as she headed to the house with intent to kill Gunny. An ambulance is on the way for her. Gunny is all right, but the whole thing went south, big time.\" There was a pause. \"There was a second shooter, a former Marine Sniper. He shot Lars, Gunny's old spotter. Gunny is turning him to save his life, but Clayton Matthews escaped. And worse, he was scratched.\"\n\n\"Oh shit,\" I said.\n\n\"We have a highly trained sniper who is now a feral panther. I'm bringing most of my warriors up there to track him down. The task force knows about Maitea, but I told them to stay away. Bringing down a cat, even a three-legged one, I don't want humans anywhere around for it. Gotta go.\"\n\nI reached down and ended the call, letting out a breath. \"Gunny's all right,\" I told myself.\n\n\"Do you have enough now,\" Derek asked Charlie.\n\n\"Yes.\" I handed him the list of people I wanted pardoned; it included my family, Pack members who helped and a few hackers Josh had used.\n\nHe looked at the list. \"Only the main players get blanket pardons, the rest will be for those acts specifically related to this investigation. Now if you'll excuse me, I need to get an arrest warrant drafted for Agent Luis Gonzalez and get Internal Affairs going on the investigation.\"\n\n\"Put out a warrant if you want, Matthew, but understand one thing,\" Derek said. \"This attack took place on Gila Pack lands. Under the treaty, justice is with the Packs, not you. And if Luis shows up on our land, his ass is ours as well.\"\n\nCh. 38\n\nGunny's POV\n\nI held the shirt to his open wound while watching him carefully for changes. His eyes closed, his breathing became more labored as the change started to move through him. His body was in crisis, so it was moving faster than a planned changed like Rose's was.\n\nI watched as his body temperature started to rise, his face becoming flushed. I saw the entry hole on his shoulder start to close up, the bleeding had stopped. I waited a minute then carefully lifted the shirt; the exit hole was larger, but it was healing over as well. Lars was starting to twitch uncontrollably as the change raced through his body, both healing and changing him at the same time.\n\nWhen the first bone snapped and reformed, it sounded like a rifle shot. Lars screamed, but the change could not be stopped. More bones changed, skin stretched and muscles moved under them. Fur started to poke through his skin. He lifted his head, screaming to the sky until it was cut off as his face and neck started to change into his cat form. It seemed like the change took a long time, but it was less than a minute before the large cat was panting on the rock before me.\n\nHe looked up at me, I could see the fear and panic in his eyes. He coiled his legs underneath, preparing to fight and escape. His eyes were completely cat, his human side pushed aside. I had seconds to save him before he would be lost to rage.\n\nI shifted and jumped on top of him, my jaw grabbing him at the top of his neck. He snarled and started to fight, but I was bigger and used to this form he was just figuring out. \"Submit, Lars. You are not in danger here, I'm with you. I'll always be with you, Marine.\" He kept struggling but I could feel him starting to relax. \"Talk to your human side. Gunny is your friend, you are safe. You are safe, Lars.\"\n\nHe stilled, and I let his neck go. He submitted to me, baring his neck as I looked into his eyes. I was happy, he had found balance and pulled himself back from the cliff that was going feral. \"How did you... what... you can talk to me in my head?\"\n\n\"Yes, we are Pack now, we can talk this way. Just by thinking of talking to each other.\"\n\n\"This is weird as hell, Gunny. Everything looks so different.\"  He took a deep sniff. \"I don't know where to start.\"\n\n\"Come on, let's go find Alex.\" I stood up on my four legs and stepped aside, giving him room to get to his feet. It took a few tries, he needed to let his cat do its thing, both sides had to learn to trust each other. When he finally stood, he roared his happiness and I joined him.\n\nLars was a good looking cat. Nearly as dark in coloration as I was, you could see the rosettes on his body but only when looking at the right angle. At a side angle, the black color was glossy and appeared solid. He was nearly as muscled as I was, and would be a strong warrior in this form as well. I rubbed my face against his shoulder, then licked the blood off his neck from where I had grabbed him. When I was done, I led him carefully down the slope to the level ground.\n\nWe trotted over to the house, where Alex was working on the woman. She was in a lot of pain, but we didn't miss the hatred in her eyes as she saw the pair of us approaching. Down a hand and a leg, there wasn't much she could do about it. I shifted, unconcerned with my naked state, while Lars just sat there and watched.\n\n\"She'll live,\" Alex said. \"Tourniquets are holding.\"\n\n\"Long enough,\" I said. I looked over to where a man was coming out of the house, holding towels and a roll of duct tape. He was wearing body armor, so he was our decoy.\n\n\"Here you go, Alex,\" the man said as he knelt down next to the woman.\n\n\"Thanks Michael,\" he said. He took the dish towel, folded it over and used it to cover the stump of her leg. He then used the duct tape to secure it in place, pulling it tight to keep pressure on the wound.\n\n\"Ambulance and law enforcement are on the way,\" Michael said. I noticed he was carrying a cell phone, and he was soon busy giving them a description of the victim and her injuries.\n\nAlex finished up and looked over at Lars. \"He looks good as a cat, is he all right?\"\n\nLars roared, and this caused the woman to shiver in fright. \"He seems fine, the wounds healed up before his shift.\"\n\n\"And the other shooter? Dead?\"\n\nAw, fuck. Lars and I both turned to the spot he had been hiding. \"Knocked out. I'll be back.\" I shifted and ran off towards the spot, I could hear Lars behind me trying to keep up. \"Just take your time and get used to your body, Lars.\"",
        "\"This sucks, I have to remember to pick my paws up.\"\n\n\"Quit thinking, let your cat go, he knows.\" We reached the base of the formation and I leaped from one rock to another until I was at the place I had left him. He wasn't here. \"Fuck! He's gone.\"\n\n\"Can you track him?\"\n\n\"Yes, he only has three legs, so he can't have gotten far. We have to tell the others.\"\n\n\"I'll go back, you go get this fucker. Just tell me how to change back.\"\n\n\"Imagine yourself in human form, feet on the ground, fingers, skin. Close your eyes and go into your mind so your human moves forward and the panther recedes.\"\n\n\"Got it. And Gunny... kill the fucker this time.\"\n\n\"Oo-rah.\" He ran back the way he came while I started to sniff. His cat had a sour, spoiled smell to it, the result of being feral. I sniffed around the ledge long enough to get it in my head, then followed it down to the ground. This wasn't going to be fun or safe, the terrain was broken by rock formations, perfect ambush sites for a cat. Eventually, he would turn and fight.\n\n\"Gunny, Alex has called his Alpha for help. They are bringing every warrior they can send from both packs to aide in the hunt. Robert is talking with law enforcement right now, asking them to set up checkpoints to keep humans out of the way.\"\n\n\"What about the Pack? Are my people being defended?\"\n\n\"He's sending them to the safe rooms to be protected by the remaining warriors, Gunny. He doesn't like sending that many people out either, but we have to protect the humans.\"\n\n\"Tell them to send groups to the perimeter and work in. He's moving northeast, so let's get guys on the other side in case I lose his trail.\"\n\n\"Got it. Sheriff and ambulance are here, gotta go.\" I picked up my pace, the trail was pretty easy to follow right now. Ferals were completely without conscious thought, they pushed their human side apart and became driven solely by fear and rage. They were dangerous to fight because they had no fear, no mercy, nothing held back. They would tear through anything in their way, and if humans were there they would kill or change them. This was what had kicked the war off in the first place, a feral werewolf going through a school causing an explosion of feral changes.\n\nI was so focused on following the scent trail as it started to wind around the rocks and brush that I wasn't paying enough attention. It was only when I was driven to the ground, my face scraping the rock, that I realized my error. Teeth tore into my neck, I roared in pain as I twisted to the right. I managed to throw him off, but felt the flesh tearing as I did so.\n\nI got to my feet, ignoring the pain from the bite and the scratches. \"Lars I'm hurt, he got the drop on me. HELP!\" I roared again, pulling myself up and making myself bigger. He roared back at me, his eyes red with rage. He leaped for my throat, but this time I was able to move out of the way. Pushing to my right, I rolled out of the way and struck out with my front claws, ripping shreds from his chest and stomach as he flew by. He shrieked in agony as I rolled back to my feet.\n\nI could see the blood spurting from my neck onto the ground, and that's when I knew just how bad this was. He'd caught an artery, and there wasn't much time before I bled out.\n\nI couldn't let him get away.\n\nHe licked his lips, clearly enjoying the taste of my blood on him. He charged again, this time I wasn't fast enough. He bit into my shoulder as I turned and ripped a chuck out of the back of his neck. I wrapped my front legs around him, pushing off hard with my rapidly diminishing strength. I got him on his back, only to have his back legs tear into my stomach. He used his one front leg to roll me off of him, and I landed heavily on my side.\n\nMy energy was nearly gone and I was feeling dizzy. I watched as he coiled to attack again, and I could barely roll myself onto my stomach to meet him. \"Tell Rose I love her,\" I sent to Lars as I fought to hold my head up. I roared one last time, defiant until the end. \"Semper fi.\" He charged again and I bit into his only front leg, holding on despite the fog, the pain of his bites, and the darkness that took me.\n\nCh. 39\n\nLars' POV\n\nWith the ambulances arriving, I really wasn't needed here. The cops and EMT's were nervous with a huge black panther sitting there watching them, so I moved away.\n\nI started running in the direction Gunny had went. My cat instinctively knew how to track, and his nose easily followed the trail the two big cats had left behind. I was becoming more comfortable with my new form by the minute, and soon I was moving quickly and quietly to catch up. My paws were large and soft, moving almost silently across the ground. We didn't bounce like the wolves when we ran, we glided.\n\nI had been moving for maybe ten minutes when I heard the roar, and I knew something was wrong. I started to sprint, hoping I wasn't too late. \"Lars I'm hurt, he got the drop on me. HELP!\" His scent was getting stronger, I was close. I kept up the sprint, weaving between the rocks. \"Tell Rose I love her,\" I heard, and it was weak. He roared again. \"Semper fi.\"\n\n\"You hold the fuck on, Gunny, I'm not explaining this to Rose,\" I sent back. Moments later I had them in sight. Gunny was holding on to Clayton's leg with a death grip, the rest of his body was limp. Clayton was tearing into his shoulders, right until I crashed into him.\n\nI hadn't slowed down and he didn't notice me, he was so focused on killing Gunny. My shoulder hit his just above his missing leg, and sent him flying ten feet away. I didn't stop, I leaped on him as he rolled and got his neck into my teeth. With a hard shake, I heard a loud crack and he went limp.\n\nI dropped him and shifted, moving back to Gunny. He was out of it, his eyes had rolled back in his head. I could see the blood coming from his shoulder; I stuck my fingers in, searching for the artery. I found where the blood was coming from, and pinched it with my fingers. \"HELP! HELP!\" I yelled then listened, there was no one. \"Can anyone hear me? Anyone?\"\n\n\"This is Alpha Craig Anderson, who is this?\"\n\n\"I'm Lars Thorssen, I'm with Gunny. He's badly hurt, about four miles northeast of the house. I'm holding an artery shut right now, I can't move him. He needs medevac right NOW.\"\n\n\"We're close, I'm on the medical helicopter with Doc Terry and Nurse Wendy from the Gila Pack.\"\n\n\"I can hear you now.\" I looked around and the helicopter flew over a few moments later as I waved frantically at it. It banked and looked for a landing place; there were too many rocks, so the pilot just hovered over a rock and Doc jumped out, landing nimbly with his medical pack.\n\nHe jumped down and ran over. \"Dammit Gunny, quit getting hurt,\" he said as he opened up his kit. \"You got your fingers on the artery?\"\n\n\"Yes, about four minutes now.\"\n\n\"Keep holding it, I have to get some fluids in him.\" He started a large-bore IV with whole blood, then another with fluids. As soon as it was done, he pulled out two clamps and moved on the other side of the wound from me. \"I'm going to work my way down your finger to the artery and clamp it,\" he said. I felt him move it down as he retracted the torn flesh so he could see. He closed the handle and grabbed the second. \"All right, when I count to three I want you to remove your hand. Three, two, one, now.\" I pulled my hand back, the artery seeped blood as it was clamped but it wasn't spraying like it was before. \"All right, I want you to gently squeeze the blood bag and force it in there.\"\n\nSo, I sat there on my knees, holding a blood bag up in one hand, the IV bag under it. He asked me to slide my legs under Gunny's back legs, elevating them to keep the blood in his head. I watched as he sutured the artery closed before removing the clamps, restoring the blood supply. By the time he was done, the blood bag was getting close to empty, so he took a moment to change it out. As soon as it was done, Wendy and Craig arrived with a stretcher. \"Bring that over here, we need to move him now,\" Doc said.\n\nThey set the stretcher down and the four of us shifted his heavy cat body over, keeping his injured neck and shoulder up. They quickly attached straps, then each of us took a corner and we lifted him up. We ran as fast as we could back to the waiting helicopter, where Doc and Wendy got in back with him. Craig closed the doors and banged on the window twice before he pulled me clear of the rotors. We turned away, covering our eyes, as the helicopter lifted off.\n\nWhen the rotor wash was gone, Craig turned to me. My cat could sense his power, it was like what Gunny had. \"You may as well change, I didn't bring clothes and this ground will suck on human feet,\" he said. I shifted into my cat. \"Wow, you're a big one. What's the story?\"\n\n\"I was Gunny's spotter in the Marines, he asked me to help him on this mission. We got the woman, Maitea, but there was another shooter.\" I walked over to the dead panther, pushing it with my nose and verifying he was really dead. \"Gunny Matthews was a sniper instructor during part of the time Rico was assigned to the training command, but he volunteered for duty in the Rockies during the Were War. He lost an arm and was medically retired. Anyway, he got the drop on me, when I shot Maitea, he found and shot me.\"\n\n\"Gunny changed you?\"\n\n\"He didn't have a choice, I would have died before help arrived.\" I looked up at him. \"I asked him to do it, Alpha.\"\n\nWe started walking back towards the house, Craig was silent, clearly linking others and thinking of things. \"It was a hell of a risk, without an Alpha here. How did he control your cat when it burst forth?\"\n\n\"He grabbed me by the neck, talked into my head until my cat submitted to him.\"\n\n\"He shouldn't be able to do that. He's a Beta.\"\n\n\"Whatever, he did it. Honestly, your power feels the same.\"\n\n\"Fuck this, I need to run.\" Craig stopped and removed his clothes, tying everything into his T-shirt before shifting into his wolf. He was huge, standing taller than me at the shoulder but not quite as long. He was strong but not as muscled as Gunny and I were. His fur was a glossy black, with a white stripe on his chest and a white tip to his tail. He shook out his fur and howled. \"Come on, let's run.\" He picked up his clothes by the knot and started to run back towards the house.\n\nHe was faster than me, I was tiring quickly while he didn't even look winded. I fell farther and farther behind as we went. Luckily, it wasn't that far a run. By the time I arrived at the house again, Craig had already shifted and dressed behind the garage. \"Mitch, get Lars some clothes, he's about your size,\" he said to the big Pack warrior standing by the SUV. He grabbed some from under the seat and brought them to me. I shifted and quickly dressed in the shorts, shirt and slip-on shoes.\n\n\"Thanks, Mitch.\" I looked him over, he was trying to figure out who I was. \"Lars Thorssen, I served with Gunny.\"\n\n\"He bit you?\"\n\n\"Yep. About thirty minutes ago.\" We went over to the house; there were Sheriff's Deputies all over the place, taking statements from Alex and taking pictures of everything. Maitea was long gone, only the bloodstains and chunks of her flesh remained next to the evidence numbers.\n\n\"Good news, Alpha,\" Alex said as he stood up. \"Doc says Gunny is going to recover. Lars, he said to tell you that your quick thinking saved his life.\"\n\n\"We're even then,\" I said.\n\n\"Well, the warriors have been turned around now that the threat is gone. Alpha Robert is still coming, he's about five minutes out.\"\n\n\"That's good,\" Craig said, \"Because things are going to get interesting here real fast.\" We looked where he was looking, a convoy of black SUV's was coming at high speed down the highway, hidden lights flashing.\n\n\"Fucking FBI,\" I said.\n\n\"Yep. I've got a surprise for them, though. Rose has been busy.\"\n\nThe FBI arrived in typical fashion, rolling in like they were kings of the mountain. Four vehicles stopped, and men in dark suits and sunglasses poured out. In front was a familiar face, Agent in Charge Luis Hernandez. \"THIS IS NOW AN FBI INVESTIGATION,\" he called out. \"Who's turning over to me?\"\n\nThe lead deputy stepped forward and started to brief him. \"Aren't you going to join them,\" I asked Craig.\n\n\"Nope. I'm waiting for the fireworks.\" He pointed to the road, where another Suburban was approaching at high speed. This one was white, not black. As it pulled in, I saw the logo of the US Marshals.\n\nThe new vehicle was ignored by the FBI, but the men who got out were intimidating. Dressed in khaki pants and polo shirts, their stars hanging from their belts, they stepped out and made a beeline to Luis. \"Agent Luis,\" asked the lead marshal.\n\n\"Agent in Charge Hernandez,\" he said with a sneer.\n\n\"Luis Hernandez, you are under arrest for murder, conspiracy to commit murder and attempted murder,\" he said as his men surrounded him, removing his firearm and cuffing his hands.\n\n\"What the fuck are you doing, Marshal?\"\n\n\"My job, Luis. What you should have been doing. Jones, read him his rights.\" Luis was red-faced and yelling at the Marshalls as one calmly read him his rights. One of the other FBI agents approached and asked to see the warrant; his mouth fell open as he read. He handed it back, then spit on the ground by Luis' shoes before walking away. \"Mr. Hernandez, do you understand these rights as have been read to you?\"\n\n\"Yes, you pigfucker.\"\n\n\"Get him out of my sight,\" the Marshal said. The men moved the rather uncooperative agent to their vehicle and stuffed him in the back seat.\n\n\"Come on,\" Craig said to me. We walked over to the vehicle as the lead Marshal continued to talk to the local law enforcement and FBI. \"We can't let him leave just yet.\"\n\n\"Why?\"\n\n\"Because the fun is only starting.\" We stood there watching as another vehicle turned into the drive, this place was becoming an SUV convention as the big Ford Expedition arrived. \"Alpha Robert Hastings is here now.\"\n\nHe exited from the back seat and came over, giving Craig a quick hug. \"Our man is here, right?\"\n\n\"Yep, in the back seat, cuffed and ready courtesy of the US Marshals.\"\n\n\"Good. Keep him here while I have some fun.\" He turned to a tall, well built black man who was carrying a thin briefcase. Together they walked to where the Sheriff, FBI and Marshals were all gathered. \"Gentlemen, I'm Alpha Robert Hastings of the Gila Pack. I have a warrant for the arrest of Luis Hernandez for murder of Pack members.\" He took the papers the black man offered and passed them to the Marshal.\n\n\"That's nice, Alpha, but we already arrested him. We're taking him to Albuquerque for processing.\"\n\nRobert just laughed. \"No, you're not. You don't have jurisdiction here, I do.\"\n\n\"You only have jurisdiction on Pack lands per the treaty,\" an FBI agent said.\n\n\"True. But, these are Pack lands.\" He was handed more papers, and showed them to the Marshal. \"These are land designations, signed by the President, making this property we own Pack lands under the law. He hurt Pack members and is on Pack lands, and I'm not turning him over.\"\n\nThe Marshal ran his fingers through his thinning hair. \"Fuck. I'm going to have to call this in and verify.\" Just then his phone rang. He answered, his face showed that he was losing his arrest and he wasn't happy. \"Yes sir, I understand.\" He ended the call and looked at his men by their vehicle. \"Transfer the prisoner to Alpha Robert's car,\" he told them.\n\n\"Thank you for your cooperation, Marshal. Here are your copies of the transfer order.\"\n\nI watched as they opened the back seat and pulled Luis out again. He was smirking. \"Finally came to your senses, huh?\"\n\nThe Marshal laughed. \"Oh yeah. Jail is too good for scum like you. I don't like werewolves that much, but I do admire their swift justice. I bet you're dead by the weekend.\" They started to move him over towards Robert's vehicle, and when he realized what was happening he started to struggle and scream about how they can't do that to him.\n\n\"Come on boys, let's go home,\" Robert said as he headed for his vehicle. He motioned for me to come over. \"I can smell your panther, but I don't know you.\"\n\n\"Lars Thorssen, I served with Gunny in the Marines.\"\n\nHe shook my hand as we walked. \"How long have you been a werepanther, Lars?\"\n\n\"I don't know, what time is it?\"\n\nCh. 40\n\n\"I think this concludes our business. I have meetings in the early morning, so I'm afraid we have to return home,\" Charlie Watson said.\n\n\"That's fine, we need to return to the Pack and monitor the situation,\" Derek responded. \"Mr. Attorney General, Counsel Giovanni, it was a pleasure to meet you and I'm glad we could work together on this.\"\n\nLisa smiled as she embraced me then shook Derek's hand. \"It's never boring with you, Rose, I'll give you that.\"\n\n\"Thank you, Lisa. And thank you, Charlie, for keeping an open mind on this.\"\n\n\"It isn't going to be fun, I'm going to spend half the flight on the phone doing damage control. A senior FBI agent conspiring with a serial killer, the press is going to be up my ass on this one.\" He turned and went to the cockpit, knocking on the door to let the pilots know they needed to leave as soon as possible. Lisa escorted us to the stairs, and just like that the meeting was over.\n\n\"Come on, let's get home,\" Derek said as his men surrounded us again. I walked behind him as we headed for his vehicle. One of his warriors opened the door for us and I climbed in before him, he sat behind the driver as a warrior took the other side. We hadn't even reached the gate of the airport before his phone was blowing up. He looked at the messages coming in, hiding it from me as his face fell.\n\n\"Turn around,\" he told the driver as he punched a contact on his phone. \"Davis, get the plane ready to go, we're leaving for Albuquerque as soon as it's ready.\"\n\n\"What's going on, Derek?\" My gut was dropping.\n\n\"Wait.\" He made another call, we were too far away from his Pack House to reach with mind link. \"Amanda, put Josh and Charlotte in a car RIGHT NOW and send them to the airport.\" He listed for a second. \"Two warrior escort, go right to the plane. They arrived two hours ago from North Dakota.\"\n\nAs soon as he hung up, I was on him like a duck on a june bug. \"Derek, WHAT IS GOING ON?\"\n\nHe took my hands and let out a breath. \"It's Gunny. He went after the feral cat and was attacked, he's in bad shape.\"\n\n\"How bad? Where is he? What's going on?\"\n\n\"I don't know yet, Rose, I don't know. We're sending you to him.\" I looked at him, I could tell it was serious and he wasn't letting on all he knew. I closed my eyes as the images started to flow, all the things that could be happening right now. Tears broke free, and I started sobbing into his shoulder as I tried to hold on.\n\nDerek pulled me close, holding me as I broke down. He let things go for a few minutes before he lifted my chin up so I was looking at him. \"There's no point in wondering, Rose. We need to get you home. I'm going to put you on the plane, and wait with you until it's time to go. I won't leave you alone.\"\n\n\"Thank you,\" I whispered into his shoulder. I jerked my head up when his phone dinged again with a message, a little pissed he was holding it so I couldn't see. \"Don't hold information from me, Alpha. I have to know.\"\n\n\"That's from Nurse Wendy, they just passed over him and are looking for a place to land. He's alive, she says, but has lost a lot of blood.\"\n\n\"You have her pass on a message from me,\" I said. \"Gunny doesn't have permission to die on me. If he goes to the gates of hell, I'll storm them and drag him back here.\"",
        "Derek laughed as he typed. \"Gunny doesn't give up, Rose. Death won't take Gunny because he's good for business.\"\n\n\"Damn right. He knows his place is here by my side.\" My hands were on my stomach, my cat was purring in the background. She wasn't worried like I was, she knew he was a strong male, no newly turned feral would beat him. I tried to reach out through the link, knowing it was futile at this distance.\n\nHe got another message, this time from Josh. \"Josh and Charlotte just left, she wants to talk to you.\"\n\n\"I can't, you need your phone for updates,\" I said. Derek clicked his fingers and the warrior riding shotgun passed his back, it was already opened. I quickly dialed the number and he answered almost immediately. \"Josh, it's Mom.\"\n\n\"Oh Goddess, Mom, is he all right?\" I could hear Charlotte talking in his ear, asking for updates.\n\n\"Put me on speaker, please.\" He did. \"Baby, he's hurt bad. We don't have much information yet, but Doc Terry is there with the Gila helicopter so he's in good hands, all right?\"\n\n\"What happened?\" She was crying, they had become close over the past few weeks.\n\n\"They got the Scrabble killer, they didn't know there was another sniper backing her up,\" Derek said. He had been getting a raft of text messages from the site. \"Gunny knocked the sniper out then went to save his buddy who had been shot. The sniper did a forced turn and took off, Gunny went after him.\"\n\n\"I'm going to smack the shit out of him for going off without backup,\" I fumed. \"What the hell did he think he was doing?\"\n\n\"You can berate him when he's better, Mom.\" There was a pause as they talked. \"We will be there in about twenty minutes, they say.\"\n\n\"OK, we're pulling up to the plane now. Be safe and I'll see you soon.\" I hung up the phone and handed it back. We had pulled into a different hanger, the executive jet that had been loaned to the FBI task force was now waiting for me. I didn't have anything other than my laptop to carry. Derek escorted me up the stairs as one warrior waited by the hangar door, while the other drove off. \"Where's he going?\"\n\n\"Food run. They should be able to make it back in time; one of the Pack members owns a restaurant near here, as soon as I knew we were coming this way I asked him to get some meals ready for you and the crew.\"\n\n\"Thank you.\" We collapsed into the chairs as the pilots continued their pre-flight checks. I looked over Derek's arm at the cellphone, which was getting near continuous updates on the situation. The Scrabble Killer was on her way to the human hospital by ambulance, missing a foot and a hand. \"Gunny went for limbs?\"\n\n\"No, Alex said Lars Thorssen took the shot.\"\n\n\"Lars? Who is he?\"\n\n\"He was Gunny's spotter in the Marines a while back, he volunteered to help him out on the ambush. Alex said he couldn't take the shot, his fifty cal would have destroyed her and they wanted her alive.\"\n\n\"I don't,\" I said.\n\n\"Well, the families of the victims want her that way. It's our way; the ones who lost their mates and children will be the ones to take their revenge if they choose. She was on Pack lands, she will face Pack justice.\"\n\n\"Good,\" Josh said. \"I know the Albertson's will want their turn on her.\" Charlotte looked at her funny. \"When something like this happens, the sentence in a Pack trial is usually death. The sentence is carried out by the families of those who the person hurt, so all of the victim's families would have the chance to be present and participate in her execution.\"\n\n\"But... that could be dozens of people!\"\n\n\"Yes,\" Derek said, \"But it can be done. When we captured a pilot who had bombed our Pack, he was sentenced to death and the whole Pack got a cut. Doc would heal him to ensure he wouldn't die too early, and as Alpha I was to get the final cut.\"\n\n\"That's medieval,\" Charlotte said. \"But I like it.\"\n\n\"You'll get your chance on Luis if we get him,\" I said. \"After all, he did try to kill you. The Nutcracker can take her revenge, just like everyone in the Pack House at the time will get a cut if they want.\" She snorted at her nickname, the video was still top three on Youtube.\n\nThe food was delivered just before the copilot came back to close up the door. We said our goodbyes and thanked Derek for everything. \"I love your house and land,\" I told him. \"I'd love to visit again if you'd have us.\"\n\n\"I'd like that,\" he said. \"Now take care of Gunny.\" He walked down the stairs, and everything was closed up. A few minutes later we were taxiing to the runway.\n\nJosh's phone started to ring. \"It's Robert,\" he said. He answered it, putting it on speaker and telling him he was with us in the plane.\n\n\"Guys, Gunny is going to be all right,\" Robert said. \"I've been linking with Doc, he said Lars did a great job of stopping the blood loss and the artery is repaired. They still need to stitch him up and replenish his blood supply, but he will recover fully.\"\n\nIt was like a flood of relief through the plane. \"Thank God,\" I said. \"Can I talk to him? Are they home yet?\"\n\n\"No, they are twenty minutes out. He's still unconscious, he was like that when they got there. She said his pulse is good and he is healing already. They are leaving mind link range, when they get close enough they will link Renee and she will pass the message along. Ella is waiting there for them, she will watch over him and help him heal until you get there.\"\n\n\"Thank you, Robert. You guys have done so much for us, I could never repay you.\"\n\nHe laughed a little. \"I could say the same thing about you and Gunny, Rose. You're family, and we'll do anything for family. I'm almost to the site, I have to go.\" He hung up just as we started our takeoff run.\n\nWe continued to get updates on Gunny as we flew, first from Alpha Renee and then from Ella as the helicopter arrived at the clinic. Gunny had been rushed into surgery, but it went well. He was sewn up and put into a hospital room an hour later. He was still in panther form, and Ella shifted into her panther and lay next to him to help him heal. Renee sent me a photo of the two of them, the big, muscled male with bandages on his neck and shoulder, and the sleek female alpha. I was much relieved, and was looking forward to taking her place. Charlotte was going to find a way to squeeze in there herself, or at least stay in the room.\n\nWe had also been updated on what was happening at the site, and Robert was kind enough to send me a photo of a handcuffed and VERY afraid Luis Hernandez in the back of his SUV, heading for the pack prison. He turned the phone over to Lars Thorssen, who quickly won me over with his loyalty to Gunny and his quick wit. He filled me in on all the events of the day.\n\nI was still going to thump Gunny for running off like an idiot. I did thank him for his quick action that saved Gunny's life, and promised to help him adjust to the panther life. \"We can be training buddies,\" I said with a laugh. We talked for almost an hour before I hung up.\n\n\"Five minutes to landing,\" the pilot announced as we descended towards the airport.\n\nJosh's phone rang, this time from an unknown number. He answered it, and I used my hearing to listen in. \"You found your shooter, and her trainer and protector. They are expendable, but others are not. Don't go kicking over rocks, you might not survive what is under them.\"\n\n\"What are you saying,\" Josh replied.\n\n\"This can all end now if you leave things alone. If you keep digging, you'll only dig your own graves. This is your only warning, Rose. You have no idea of the forces you will unleash if you keep the investigation going. Declare victory and go home while you still have one.\"\n\nClick.\n\nCh. 41\n\n\"Mom,\" Charlotte said with wide eyes, \"What was that about?\"\n\n\"Trouble. Josh, see if you can trace the call.\"\n\n\"I will, I doubt if it will work. They aren't that stupid,\" he said. \"As soon as we're in the car I'll start looking.\" Charlotte leaned into his side, she was afraid. He was her world now, she didn't reach for her Momma first anymore.\n\nI opened the Pack bond to the adults. \"Ella, Craig, we'll be on the ground in a couple minutes. We need to talk, our leadership and the Gila senior leadership.\"\n\n\"Surely it can wait until you've seen Gunny,\" Ella sent back. \"He should wake up in an hour or so.\"\n\n\"It can't wait, Alpha, and don't call me Shirley.\" I know, my sense of humor was warped. They didn't react, kids these days had no appreciation for classic cinema like Airplane. Of course, the fact that it came out almost twenty-five years before they were born might have something to do with it. \"I got a threatening phone call, the conspiracy is bigger than just Luis and Maitea and Clayton. They threatened me, they threatened all of us if we keep investigating this. I think it's the deep state, very powerful men who can back up their threats.\"\n\nThe link was silent for a few moments. \"We'll set up a meeting in the Alpha's conference room as soon as you are back, Rose,\" Craig said. \"Stay alert on the drive home, I'm sending more men to help escort you home.\"\n\n\"I'm not waiting for them, we're sitting ducks in the airport,\" I said. \"Who is meeting us?\"\n\n\"Jacob and Al. The car is armored, and they are armed, and there are more guns in the secret storage compartments. Guys, this is now a hot extract. Get them back and don't stop for anyone or anything,\" Craig directed.\n\n\"On it, Alphas. We won't let them be harmed.\" Al looked like a kindly grandpa, but he was a ruthless bastard when threatened. Just the stories of his time in the CIA, or his escape from the jungles of Mexico, had me looking at him differently. Jacob was young, but even more deadly. I was happy they were our welcoming committee.\n\n\"Landing now, we'll see you in a bit,\" I said. I watched the lights of the city as we touched down and we taxied to the hangar. As soon as the stairs were being lowered, a black SUV pulled next to the plane. Jacob jumped out, leaving the back door and passenger doors open, holding his assault rifle. He took up position at the bottom of the stairs. \"Clear.\"\n\n\"Coming now.\" I sent Josh down first, Charlotte right behind him and I went last. We crossed the open space so fast we almost dove into the SUV. Jacob jumped in to ride shotgun, his door not even closed before Al was moving us out of there.\n\n\"Welcome back, guys,\" Al said. \"Things are never quiet around you, are they?\"\n\nI snorted. \"Al, I was ON VACATION when all this started, pending my resignation from the FBI,\" I said defensively. \"I've been conscripted, blown up, changed, chased and made the Most Wanted list while trying to just be with my family.\"\n\n\"We had a word for people like you in the Company, we used to call you...\"\n\n\"DON'T you DARE call me a shit magnet, Al. I'll talk to Marge and you'll spend the next week sleeping in the single men's barracks.\"\n\nHe laughed. \"I don't have to call you anything, you already know.\" I rolled my eyes at him, the stupid smug Beta that he was. \"Our guest is settling in nicely in the prison,\" he said.\n\n\"Oh? How is he taking our little surprise about Pack lands?\"\n\n\"Poorly. He's screaming about Constitutional rights, about wanting a lawyer, bail, the unfairness of it all.\"\n\nJacob laughed a little. \"He's having a tough time resting, we have people howling outside the building, or walking through the prison in wolf form and growling. One guard just sits there and stares at him, growling the whole time. Oh, and we put up a betting board where you can put twenty bucks on how long until he dies in the circle, in thirty second increments.\"\n\n\"You guys are bad,\" I said.\n\n\"Psychological operations. We don't have much leverage over him; he's smart enough to know that he won't escape the death sentence no matter what he confesses to. The victim's families won't accept it, and our Alphas won't allow it. Same with his sister, she's going to die and painfully. There is nothing we can offer him except a quick, painless death.\" Al looked at some of the oncoming traffic, he was linking someone, so our escort must be getting close. \"The more we build up the horror of his execution, the better a chance to get him to talk.\"\n\n\"Mom, the cell call to us was bounced between four numbers so far, and I'm at an end. Like I said, they weren't that stupid.\" Josh looked up from his laptop, clearly frustrated. \"These people can't operate without a trace. I'll work out from Luis and see what I find.\"\n\n\"After the meeting, I want you to rest,\" I told him. \"You've been working yourself into a frazzle, Josh. We all appreciate what you are doing, but you need to take care of yourself too. Get some rest, maybe take Charlotte for a run when you wake up. Just stay away from the borders and bring an escort,\" I said.\n\n\"Or maybe we should hang out at the pool with our friends,\" Charlotte said. \"I have a new suit you haven't seen.\"\n\n\"Can't compare with no suit,\" he whispered as he stared down her body. It was loud enough for me and I smacked him across the chest. \"Mom!\"\n\n\"I'm right here, Josh, don't get aroused in front of me. She's still underage.\" I saw two vehicles pull a U-turn, one took a spot ahead of us while the other trailed behind. I looked over the seat, we were doing ninety-five on the back road towards the Pack lands on the straightaway. I looked over at Jacob. \"Friends?\"\n\n\"Gila Pack warriors, plus John Spencer.\" It didn't shock me that John came out to escort his son home. \"We haven't seen anything out of the normal yet, but we're not taking any chances.\"\n\nNothing happened, and we were inside Pack lands in ten minutes and outside the Pack Clinic in another fifteen. \"Go see him,\" Al said. \"We're still gathering people for the meeting, you have ten minutes.\" We poured out of the vehicle and ran into the now-familiar hospital corridors. Ella must have been linked we were coming, because she was dressed and sitting in the chair when we arrived.\n\nGunny was still out of it, his big panther taking up much of the bed. \"He's doing well,\" Doc Terry said. \"A day or two light duty until his body has replaced all the blood and his wounds knit together. I swear, this cat must be down to a half-dozen lives by now.\"\n\nI hugged Ella, thanking her for staying with him, then hugged Doc. \"Thank you for saving him, Doc. I couldn't live without him.\"\n\n\"My pleasure, Rose. Thank me by not coming back here unless it's a prenatal visit, all right? Just because you met your deductible doesn't mean you have to treat my hospital like a hotel.\" I laughed and buried my face in his chest. They left us alone in the room.\n\nCharlotte had already climbed onto the bed, her arms reaching around his chest below his bandages while she snuggled up to his warm back. Josh got some pillows, moving them so she would be comfortable. Charlotte was his daughter now that we had mated, and we would keep a family member with him until he was healed. His cat would be calmer and his healing faster that way.\n\nI leaned over and kissed his head, then ran my fingers along his head and ears. I whispered in his ear. \"I'll be back soon, love. You heal up, your children need you.\" I gave him one last hug. \"I'll be back in an hour or two,\" I told Charlotte. \"Get some sleep?\" She nodded and snuggled in more. \"Come on Josh, we have a meeting to attend.\"\n\nHe grabbed his laptop and we walked out of the clinic, across to the Pack House. The Alpha's offices were at the end of the corridor, the big conference room just before then across from the Beta offices. Josh sat at the computer table, hooking his laptop up to the big screen, while Ella patted the seat next to her. I got a few hugs then sat down, and immediately the door opened as Renee and Robert entered the room. Everyone except Craig and Ella stood, then we all sat after they did. \"Welcome back, Rose. We have a lot to talk about,\" Craig said.\n\n\"Thank you, Alphas. You have been been great friends to me and my family, as has your brother. It was wonderful seeing Derek and Amanda, I would like to visit again in better circumstances.\"\n\n\"My brother talked to me already, Rose, and we will make that happen.\" Renee had a hand protectively over her belly, smiling as one of the twins kicked at her hand. \"Why don't we start by getting everyone up to speed on where we are. First off, Agent Luis.\"\n\nBeta James sat forward. \"He's in the prison cell, and per instructions we are keeping him awake and afraid. No one will talk to him until you give permission, but I can smell his fear.\"\n\n\"Good,\" Robert said. \"We will let him have a sleepless night, then talk to him in the morning. Do we still have that video from when the Cartel guy came to get Maria?\" James nodded, the bastard thought he could just demand her back, not knowing she was mated to a member. The two had ripped him apart in front of the Pack in revenge for his rapes of her. \"Put the video on loop somewhere he can see it, and keep the volume up. We need him to be more afraid of how he dies than of dying. Now, I have been on the phone most of the evening to the affected Pack Alphas. They all know we have the shooter and her accomplice, and are making arrangements to travel here for the trials and executions.\"\n\n\"Do we know how many guests,\" one of the female Betas asked.\n\n\"Not yet, we should know tomorrow. Make sure all the guest rooms are readied, and make contingency plans to free up some of the bachelor quarters if needed.\" She nodded, already linking her staff. \"I will not deny anyone their chance to participate in the justice, they'll all get a chance to rip him apart,\" Robert vowed.\n\n\"No justice, no pieces,\" Craig said. \"Just in my Pack we have quite a line. We shall limit ourselves to Luis for the Pack House attack. Gunny and Rose will get their chance with the others at Maitea, though.\"\n\n\"We will update again tomorrow on preparations for the visitors and the trial,\" Renee said. She looked at Melody Post. \"Is William still up in Albuquerque?\"\n\n\"Yes, he's fighting with the FBI and Justice about Maitea's jurisdiction. They are being stubborn, wanting to hold her in Federal court. He thinks we'll have to go to a hearing tomorrow, we will likely have to file for extradition since she is in a human hospital.\"\n\nI felt my stomach fall. \"Will they?\"\n\n\"It might take time, but yes. The treaty is clear, she was captured on Pack lands. The Justice Department wants to prosecute her for your attempted assassination since that took place on Federal property.\"\n\n\"So do we have two trials if her extradition is delayed, or wait for her to do both,\" I asked.\n\n\"Two trials,\" Robert said. \"That man will not share the air I breathe any longer than absolutely necessary. Anything else?\" She shook her head no. \"All right, Rose, tell everyone about the call.\"\n\n\"I'll just play it,\" Josh said. \"I linked my phone to my laptop.\" He clicked his mouse and the speakers came to life with the call. I'd already heard it, so I focused on the reactions around the table. Most were furious, but Al was thoughtful. When it was over, Robert was pulling Renee close and Craig was livid. It took a minute for the emotions to settle out.\n\n\"Who are we dealing with here,\" Renee asked.\n\n\"Central Intelligence, Defense Intelligence, Homeland Security... take your pick,\" Al said. \"Most likely all of the above. It's the deep state- the ones in real power, not the political appointees that rotated out with the new President. They are invested in the war, in power, and the fact that their laws and their President want peace means little to them.\"\n\n\"Can they do what he was saying? Can they hurt us?\"\n\n\"Absolutely. They have resources, technology, and we're in the open now. I bet that's all Luis and Maitea were, plausible deniability. Groomed and recruited to go after us and stir up the pot.\"\n\nI looked at the four Alphas. \"Right now we have no idea of who they are, but we do need to be careful. Let them think we are heeding their warning, that we accept those two as the end. We don't, of course, but our investigation needs to go dark.\"",
        "\"We finish the trials, thank everyone for their help and call for reconciliation and moving past this,\" Ella picked up. \"And we get away from them.\"\n\n\"The cleanup of the chemical weapons on our island is nearly complete,\" Craig said. \"As soon as we can move back, I want the children there for safety.\"\n\n\"What about the investigation,\" I said.\n\nCraig looked at me and smiled. \"We've already talked about this with Robert and Renee,\" he said. \"We all want the Santa Fe area settled with a Pack that is a strong ally to Gila and El Paso. We want you to stay in the renovated pack house, and start your own Pack there.\"\n\n\"Our own? But I'm not an Alpha,\" I muttered. My cat smacked me mentally for that.\n\n\"Actually, we've all noticed you and Gunny have that potential, especially since your mating,\" Renee said with a smile. \"It's the perfect solution. You and Gunny keep an investigation going, we have strong friends in my old territory, and we split the Belden Pack in an orderly fashion.\"\n\nI thought about it for a moment before looking at Ella, tears in my eyes. \"But I'll miss you guys,\" I said.\n\n\"It's the best solution,\" she said. \"Pack members don't function well away from their Alpha long term, and having part of the Pack in Panama and part in Santa Fe won't work. You two will be great Alphas given the chance, Rose. I love you too much to keep you from your true potential.\" I turned and hugged her as Craig embraced both of us in his long arms.\n\nThere was a tone, and someone said \"Oh fuck.\" I looked up, Melody was staring at her phone. \"Uh... it's William. Maitea Jennings is dead. Someone got into her room and slit her throat.\" "
    ],
    "authorname": "partwolf",
    "tags": [
        "werewolf",
        "action",
        "mystery",
        "pack",
        "action adventure",
        "drama",
        "supernatural",
        "crime drama"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/rose-ch-37-41"
}