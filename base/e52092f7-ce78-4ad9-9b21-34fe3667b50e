{
    "title": "Siren Ch. 09",
    "pages": [
        "GUYS! Last chapter!! I'm so excited to get this to you now, so do enjoy and I'll be back at the end. \n\nAlso a continuity note: I recently rewrote a bit at the beginning of the story and in doing so, defined Jasper and Tim a bit more as characters and decided to switch their roles for this next scene. So just pretend it was Tim who threw Kenna off the ship at the end of the last chapter, okay? \n\n*** \n\nRoland ripped the sword from Dooley's body as the man crumpled to the deck. The fight around him, so chaotic when he was occupied with only the next strike or the next breath he'd take, ordered itself quickly into a clash all but finished. \n\nJasper was shouting from Osei's grip as he swore at Roland's back that the siren was real, that they were all doomed. Roland cursed at himself, remembering that moment he'd found the man pointing his finger at the buttoned-up widow. He should have known the man had gone fanatical at some point, unlike his other half Tim who had withdrawn from any discussion of the ship's siren. Munro held a badly-beaten Abbott at the end of his blade. The few men who had stood by him were dead or subdued. Three sailors took down the last man who slashed wildly at his former shipmates before his feet were swept from under him and one of his own knives entered his throat. The crew was anything but sentimental, making Kenna's success as surprising as it had been riveting. \n\nAt that thought Roland's eyes went up to the upper deck, seeking her red hair and finding none. Most of the men had left their posts above for the fight below, and the empty space he found there pitted his stomach. His head whipped around to the other railing. \"Mr. Barnes!\" he shouted. The navigator returned the call from under the gun deck, approaching with his own scraps evident from the fight. \n\n\"Well fought, Captain,\" the man grinned at him. \"Never thought I'd see the day when those troublemaking boors lost their wits enough to attack. Not that I'm complaining at a bit of sp-.\" \n\n\"Where is Mrs. Bell?\" Roland cut him off. The mood of the men was celebratory and he knew he would do well to encourage that sentiment, but this was more important. \n\nOsei let out a warning whoop behind him, and Roland turned as Jasper threw himself at his back, letting the man sail past him, his attack left sprawled on the deck with the rest of him. Osei and another man dropped knees onto Jasper's back as they wrestled him down again. \n\n\"Mr. Barnes?\" Roland said again, eyes fixed on the rapidly paling navigator. \n\n\"She left us to make her case, Captain. I thought it best to allow the lady to walk free and speak to the men as it were, allowing her space,\" he swallowed, \"I lost sight of her in the fight, Captain, one can only keep eyes on so many things at once.\" \n\nRoland turned and ran up the steps to the upper deck instead of acting on the desire to throttle his most important ally on the ship. There was no huddled form, hiding from the violence, no lone figure looking out to sea. He turned back around, trying to ignore the vice tightening in his chest. Beyond the main deck many of the crew still stood on the forecastle, jeering the few men held below, but no Kenna. \n\nPerhaps she made it through the ring of men below? He skipped all but one stair in his flight back to the main deck. \"Search below. Find Mrs. Bell.\" he snapped to Barnes who took two men with him and disappeared below deck. \"Mr. Munro, Mr. Hansen, see to accommodating these men.\" He took a roll of line from under a cannon and tossed it to the cook. \"The mizzen will do.\" \n\nThe crew cheered as the few mutineers left alive were marched to the upper deck and bound in place to the mizzen mast. Roland followed, waiting for Barnes to reappear with Kenna from below. He considered heading back to the cabin to check the crawl space she'd claimed as her own, but her safety rested on him finishing what she'd started. He had to maintain control of the crew so he stayed, watching Abbott's bloody face as the man was secured to his fellow conspirators. \n\nThe men quieted their shouts, and when he faced them he mirrored their expressions of triumph without feeling any of it in himself. His thoughts were running through the ship, thinking of every place she might be hiding, but he smiled to the men here, playing his part. He brought up his fist and they cheered. \"It's been a long way,\" he said when the quieted.,\"and it has not been easy.\" The men nodded in agreement. \"We have been taken down a path we never should have followed, led by Dougray's thirst for revenge and his ever-loyal Master Gunner.\" The men hissed and booed at Abbott. For his part, the man didn't even glance their way. Roland continued. \n\n\"Abbott was right about one thing.\" The men quieted in surprise. \"There was something rotten aboard this ship, poisoning our journey, driving wedges between the crew, stirring up trouble and shirking work to make the going worse.\" He paused as the men reacted against those men bound to the mast. \"And so our Jonah is discovered by his own plots and planning, and he will not keep us from our home.\" From the corner of his eye, Roland saw Barnes appear on deck, alone, the look of fear unmistakable. \n\nThe men cheered his words as he turned to Abbott, watching as the man's stained teeth came into view behind a vicious grin. He spat a wad of blood and saliva onto the wood at Roland's feet. \n\n\"Where is she?\" Roland approached the man, fists trembling with the need to meet flesh. \n\nAbbott laughed. \"A parting gift for my ship,\" he choked out through his bruised face. \"I've freed you from the siren's grip.\" \n\nRoland's eyes slid to Jasper, bound beside Abbott. The man was silent, in sharp contrast to his recent fanatical shouting. He followed the man's gaze across the pit of the main deck and over to the forecastle, where a lone man stood, eyes fixed on the sea. Two steps and he was up on the gunwale, looking over the blue expanse below. The vice tightened as he searched the empty sea. \n\n\"Captain!\" Barnes said, calling his attention down to where he stood at his feet. Other men had joined them, leaning over to search for the missing woman. The navigator's hand stretched out, pointing towards the shore. \n\nThere it was, the tiny shock of red hair, barely visible in the rising swells as she swam closer to the beach. \"Lower the skiff. Take Munro and fast,\" Roland said, jumping back onto the deck. He moved before any of the men could register his intent. \n\n\"Tim!\" Jasper screamed. But it was too late. Roland was on the forecastle. Tim turned, sword in hand, to face the fury Roland had been tamping down for too long. The sword fell to the deck, the hand grasping it as well. Tim's scream was echoed by Jasper as Roland grabbed the man by the neck, crushing his windpipe with his thumb and forcing him to his knees. Roland looked into his face, relished the terror and pain he found there, and brought the tip of his sword to the man's stomach. He loosened his grip on Tim's neck just enough that the man wouldn't pass out before he sank his blade, inch by agonizing inch, into his gut. \n\nThe scream did not make it past Roland's thumb. He felt every vibrating second of the man's pain, and it birthed a savage joy in his chest. Blood colored Tim's face red and then blue, vessels bursting in his eyes, and Roland watched him die beneath his hand. His held him close, so he might see every moment of the man's anguish, feel every weakening twitch as the blood raced from his wounds and onto the ship. \n\nHis eyes went dark, too soon by far. Roland lifted the corpse up by the same grip on his neck. Pulling the sword from the body, he tossed it into the sea. \n\nHe looked back at the men who stared in silence. \"Vote on the lives of the rest of them, but Abbott hangs.\" \n\nHe watched from his place on the forecastle as Munro and Barnes hit the water and began rowing at a pace that helped calm the urge he had to jump in and get her himself. The tiny point of red in the blue of the bay bobbed between the waves as they rose closer to shore and Roland lost sight of her for a long moment. Someone passed him a spyglass, and he kept vigil as the boat neared its target, barely pausing to watch as Abbott was pulled from the deck by his neck, his body jerking and writhing as he died slowly, shit and blood dripping from his corpse. \n\n* \n\nKenna's arms burned, her body floundered in the water. The beach that had seemed so close from her perch on the ship was lost in swells she'd failed to take into consideration when she'd struck out from the ship. Another surge came, and in its wake she felt the pull of the current underneath her, trying to suck her back towards the ship. \n\nShe kicked hard, managing to stay above the water and spare herself another mouthful of seawater, but she was tiring and the finality of that complication was a greater impediment than any wave could have been. She struggled to reach the top of the next wave, telling herself the burgeoning cramp in her side was nothing more than a passing ache. \n\nWhen Jasper had thrown her in her first instinct had been to call out, to find a way back to the safety of the ship or at least to hold on until someone came to find her. The clanging of metal rang out above her, and her recent brush with the tenuous nature of her status aboard brought her up short. Had she not been about to place herself in this position not long before? \n\nThere was no better opportunity she could hope for; Roland was distracted by the fight, and there'd been no call when she'd gone over. \n\nEver stubborn, despite the possible safety of the ship behind her, Kenna continued her weakening swim towards the sand. Another swell came unexpected and she was pushed under, the current beneath the waves sucking her downward. She kicked and clawed, unsure if she'd broken the grip of the undertow until her head broke the surface. She took in a deep gasp of air into burning lungs. \n\nAnother one came, lifting her with the tide as she struggled to stay aloft. She could see it there, as the surge peaked around her; the shore her eyes told her was so close and her body declared impossible to reach. Down she went with the next wave, her struggles the same but her mind slowing incrementally as her chest screamed for relief. \n\nThe promise of freedom, the dream of the new world her sister had written to her about, it waited for her on that shore. Would she give up now? She kicked again, a burst of movement to send her back to the light. The look on her husband's face as he'd succumbed appeared unwelcome in her mind as she brought her weary arms to battle the wake again. Vivid details came back, the way his skin had reddened, his eyes black as he stumbled and clutched his chest. She'd helped him to the ground then, watching as his body shook, his hands grasping at his heart as it killed him. \n\nThere was a moment there, right after his last breath left him, which had been pure, sweet relief. She was finally free from his hard hands, from the constant grating fear that had worn her down so. Before the fears of being found out came rushing in, the guilt at taking the life of another, or the true mourning she would do for her empty body, she held that perfect moment of reprieve to her bosom and delighted in her freedom. \n\nWater struck her face, her eyes stinging from the salt. She coughed wetly as it slid down her throat. Dougray had drowned. The gurgling sounds she would make would be lost under the waves but she had heard every one of his sputtering breaths. Perhaps this was justice, that thing she'd insisted must exist in this world. Perhaps this was the penalty for her crimes. Her body screamed as her top was pushed forward, her legs dragged back, pulling her head under once more. The tide continued its ceaseless ebb and flow, indifferent to its passenger. \n\nAgain, she told herself. This is not the end, not these lazy currents. She would not allow it. Her next breath, her next stroke, that was all that mattered. Each one led her closer, each one kept her alive. \n\nAlmost there, she repeated, believing her own lies. Even when the hands grabbed her and pulled her from the water, even as she felt the hard wood beneath her instead of the bottomless sea, she couldn't stop. Almost there, she said into the blackness. \n\n* \n\nThe creaking of the ship, the familiar smells of his cabin, the feeling of the berth beneath her, pieces assembling into a perfect painting of her failure. \n\nSlowly the rest of it filtered in behind her closed lids, the sensation of the long boat climbing the side of the galleon, vomiting on deck as sea water came through her mouth and nose, the smell of him mixed with the sharp metallic scent of blood. She had raged against him, or tried to, but the memories were too fractured to be sure. \n\nFootsteps finally convinced her that opening her eyes was worth the effort. Her vision couldn't focus, but there was little need. She knew who it was, and even in the heartbreak of her circumstances she felt better knowing he was there. She closed her eyes and tried to speak only to find him lifting her upright and pouring warm broth into her mouth. The motion felt familiar, as though he'd done this before. \n\nShe finished and leaned back into him feeling heavy and strangely removed. \n\n\"Wake up, Kenna.\" The order moving such a short distance from his pressed lips to her ear. Again, she pried her eyes open, but the light hurt and her head felt strange. Instead she turned so she might press her cheek against his chest, too weak to be frustrated by how calming it was to have him so near. With him there would be no pain, and there would be no sorrow if she could only give up that which she had never had. That moment of freedom seemed a distant concern and so she nestled closer as she fell back asleep. \n\nHer next awakening was not so peaceful. \n\nHer vision was clear; her head no longer punishing her stupidity with its throbbing censure. Sunlight kissed the cabin, falling across the sheet that covered her. It warmed her skin until the rock of the ship shifted the shadows. Kenna pushed herself to sitting, her eyes falling on the long table now cleared from the clutter it had accumulated during their weeks of travel. It felt strangely vacant, as if they'd left without her. \n\nThe room felt clean, almost unlived-in. Trucks were closed, everything locked up in its proper place, bucket tucked next to the bed. \n\nThe thought froze her as the ship eased back so that the sun found her again. The shackle on the bed did not glint, rusted as it was, but it menaced her all the same with its dull reflecting of the sun. The sheet was drawn back; her eyes followed each link of the chain, mounting disbelief with every confirmation until she saw the metal band around her ankle, leaden and cruel as its twin. \n\nThe first notion that it was some kind of mistake lasted a long while. Perhaps it served some other purpose, somehow here for her protection. But when her mind could not rationalize any call for the chain, she had to wonder if the tides had turned against Roland. What if another faction rose up in Abbott's wake? But Roland had been here, she remembered his touch, his smell. And would someone else lock her to the bed instead of in the brig? \n\nNo, realization burned her throat. The bandages wrapped around her ankle to protect her skin confirmed it. She was clothed only in the ripped shirt he'd first gifted her, the sailor's clothing she'd worn so she could leave the cabin tucked away. Some deep emotion, furious and consuming, rose up inside her. It sat painful and sharp in her chest, murderous and violent in the curl of her fingers. She shifted her leg and the clink of the chain sent crawling chills down her back. The last weeks vanished, and with them the slow seduction of this life as well. She was only his prisoner again; not an ally and not the woman who saved him from a vote all but lost. She was nothing. Again. \n\nShe did not lift her eyes when the door opened. Anger colored her vision, betrayal fisted her hands. The sound of a tray sliding against the grain of the table, followed by the thud of his belt and sword, would not sway her to look up to him. He would not want to speak first but she could not imagine giving him the satisfaction. \n\nAfter a long moment his boots approached the berth; the slosh of liquid in the offered cup so close to her though she did not reach for it. The cup hit the wood of the table with a thud. She did not flinch when his footstep came back to her, louder and more insistent than before. \n\n\"You ran from me.\" The condemnation in his voice inspired a shrieking incredulity inside her head as he declared his grievance with her, a woman chained to an impossible fate. \n\nFor a long moment the storm of hurt raged against his unrelenting claim on her. She could not take her eyes from her imprisoned limb, as though she might lose sight of his crime by meeting his eye. This would not be borne. \n\n\"I saved us,\" she whispered, her throat dry from sleep. She swallowed and continued. \"I helped you for weeks to keep the men on your side. I submitted to your passions, fulfilled every request.\" Her voice failed when it came time to admonish him for his crime. \n\nHe had no such qualms at rebuking her. \"And the first opportunity you had, you ran.\" \n\nFurious eyes met his steely amber glare. \n\n\"I was dumped over the side against my will. I ran from a ship ripping itself apart with violence, away from many men who would have me killed. Does that warrant a shackle?\" her voice climbed as she spoke. \n\nRoland's face betrayed nearly nothing. Even the tilt in the corner of his mouth felt fabricated, a distraction for her from his real meaning. \"I do not fault you the attempt, though I don't believe you ran from the fight. You fled from me, and that I cannot allow.\" His voice lowered, the hard tone of his anger apparent. \"My prerogative is to keep you. I'd prefer to do it without the chain, but you've proven it is necessary.\" \n\n\"Am I so little to you? Simply your possession? After all I have done?\" Why did those questions rip at her chest? Why, when he betrayed no softening to her, did it pain her more? He leaned against the support beam at the corner of the berth, ease insinuating itself on his form. \n\nRoland nodded once. \"You have been a most essential part to our mutual survival. The issue is more complex when our paths diverge. I will not simply let you go, this I've made increasingly evident over our time together.\" \n\n\"You can't do this.\" Her voice was a hiss of anger, her body burning with it. \"I do not belong to you.\" \n\nThe small smile on his lips was no more genuine this time. He was furious; she was sure of it. \"When have you ever not belonged to someone else? When you were unwed? Your father sold you off without another thought. Your husband owned you in a most terrible way. And when he died\u2014when you killed him\u2014did those scant weeks of freedom bring you peace before I claimed you?\" \n\nKenna closed her eyes, reaching back to that perfect moment, hunched over her husband's body in the street, rain trickling down her collar and onto her back. \"Yes,\" she whispered. \n\n\"You are a very fine liar, Kenna.\" Her eyes flew open. \"But you have yet to fool me. Do you know why that is?\" She did not. It was a source of endless frustration for her. \"Because I am the only one who looked closely enough to see it.\" His voice lost some of the feigned patience. \"I am the one who knows you, to the depths of your pain, your crimes, and all you are capable of. Do you think those moments of joy at his death would carry you to the New World where everything would be set right? Has the constant dread of being found out by proper folks as an accused witch and murderer not faded with your time here amongst those who don't fault you for it? Would your sister react as these men did to the maiming of your flesh, with acceptance instead of derision?\" ",
        "\"My sister loves me.\" She did not look at him. \n\n\"She doesn't know you. She cannot love you.\" \n\n\"And you do?\" She searched his face as it grew blank and cold when her words emerged not as a question, but an attack. \"You who would chain me, deny me the integrity of my body, the notion of choice and freedom? You who know me so well, tell me, do you think I will bend to you this way?\" Her words hung thick with disdain. \"Or will you simply keep me chained forever?\" They both knew that would be his only recourse. \n\n\"With time, Kenna, you will come to understand this is the only place for you.\" He edged towards her and she withdrew, the small sounds of the chain a mocking reminder of the motion's futility. He sat on the sheet, his presence more threatening as he entered her space than it had been towering over her. \"You cannot go back, your deeds and your scars have marked you. There will be no acceptance, no freedom waiting for you when you rejoin them.\" \n\n\"The possibility exists no matter how many times you claim it does not,\" she spat back at him. \"It is so convenient for you to claim me and tell me it is for my own good. Is that how you justify it? It rings as hollow as the rest of your nonsense.\" \n\nHis hand came up to her cheek, threatening to show her just how wrong she was. \"Kenna, I do not defend anything I do in your terms. You've spent too long searching for intangibles.\" He shifted closer, his anger obvious now that he was so close. But his fury took a different form than most men, and though she saw it approaching, she knew she could not stop it. \n\n\"Tell me, Kenna,\" he continued. \"What do you feel? You know you are under my power, that I own you at least in that capacity. But do you feel that...\" His hand trailed down her neck, pushing the fraying neck line off her shoulder. \"Do you feel how your body readies itself for release? How your mind calms when I'm near?\" It wasn't true. It could not be true. \"Can you convince yourself that those moments when you accepted my claim were not superior to your unsubstantiated hopes for the New World?\" \n\nHis amber eyes bore into her as his hand trailed the low hang of the shirt over her breasts. Her body sang its approval with a flush of arousal that would not be shaded by her distress. His look pulled at that piece of her that desperately wanted to fight to end. He saw her waver and moved closer. \n\n\"Do you feel me, Kenna?\" Yes. Everywhere. Somehow he was in the depths of her despair and the exhilaration at her core. He had taken her fear long ago and now he sought her anger, even as his own drove his demanding caresses. He did not bring his fists to bear with his rage; his was a smarter, more insidious display. He used it to fuel his claim, to bring her to heel with rapture instead of pain. \n\n\"You cannot own me with pleasure.\" She would not surrender her fury to him. \"You cannot beat me into submission by offering me some false, fleeting feeling of peace.\" She knocked his hand away from her chest. \"And I will never accept it, or you.\"  \n\nThe stillness that followed raked her back with creeping anticipation. Her heartbeat rang loudly in her ears as she looked into his face and saw in him all the savagery she knew he was capable of, unmasked and terrifying. \n\nHis grip on her unchained ankle pulled her flush against the berth, the weight of him followed as he shifted his fist to securing her wrists above her head with a crushing hold. She did not struggle as he insinuated himself between her legs, but fixed his glare with her own accusatory gaze. His touch was not gentle, and yet he still seemed to play her skin to full, agonizing glory with his roving hand. \n\nShe clenched her teeth, sealing her lips as his palm cupped her breast, his lips and teeth on her neck too hard and yet the press of his mouth stirred the dark passion uncurling in her belly. But this time would be like all the others, just another moment when he took what she would not willingly give, and it would go no further to proving him right. \n\nHe was wrong, she repeated to herself as her nipples hardened under his wandering tongue. This was no different than blows, even as her slit grew hot and wet under his touch. Pleasure was just pain in a different guise, and she would suffer it the same until she could escape it. \n\n\"You cannot bide your time with me, Kenna.\" He spoke with whispered kissed up her body until his face hovered above hers. She turned her head from him. He found the skin behind her ear with a kiss, the strained muscle below it with the nip of his teeth. \"I know what angers you more than the failure of your flight.\" Nonsense, there was nothing worse than that. \"It was the loss of all you'd built on this ship, the feeling that I'd betrayed all that had taken place between us.\" His hand came to cup the back of her neck, bringing her to face him with an insistent press against the angle of her jaw. His thumb caressed her cheek. \n\nShe shook her head. It wasn't true. \n\n\"Come now, Kenna,\" he said, the soft rumble of his tone seductive. \"You cannot hide from me.\" \n\n\"I hate you,\" she whispered back. He kissed her unresponsive mouth slowly, his lips firm and tempting against her own. \n\n\"Perhaps once.\" He placed another at the corner of her lips, the tip of his nose grazing over the skin of her cheek. \"I've seen it, felt it in your body, just as you have. You need only say it, Kenna, and we can be done with this never-ending battle.\" \n\nHis hard body pressed into hers, the ridge of his arousal firmly against her unprotected core. Instead of discomfort at his suffocating nearness, her body rejoiced, a flutter of expectation rising from where they would be joined. \n\nDesperation tainted her anger. \"How can you ask me that when you extend nothing in return but the promise of ownership?\" She tried to wrestle her wrists from his grip so she might push him off, despite knowing both motions would prove fruitless. \n\n\"Ownership is what I have to offer, and the promise of care with it. Is that so meager to you?\" He watched her, testing her resolve not to give in again after he'd torn down so much of her. \n\n\"So I can await the moment you tire of me and leave me behind like so many beloved trinkets before?\" Her eyes met his, daring him to disagree. \n\nHis expression softened, the edge coming off his anger. \"You are wiser than that, Kenna.\" He released her wrists, trailing his fingers down her outstretched arms when she didn't pull them from their position. \"I was a lad, pampered and spoiled by life as a lord's son. What would have been the worst part for a child who had never known the affections of his mother when that life was ripped away so precipitously?\" \n\nShe shook her head. She would not listen to this. She brought her hands between them, palms spread uselessly against his hard chest. He kissed her again, and again she held herself still despite every sensation clamoring inside her. He pushed his hips forward, meeting her sensitive flesh with an intoxicating grind of his cock. \n\n\"I lost everything that day, anything that had ever mattered to me.\" The slow push and pull of his body against hers ignited every piece of affection she'd tried to cover in her feelings of betrayal. \"And I have claimed nothing and no one since, until you.\" \n\nIt was not enough, it couldn't be. His confession only served to explain his behavior, not lessen its injustice. \"No matter how precious a possession may be, it is still less than human.\" She arched her back when he brought his hand between them to play with her pliant slit. He freed himself and all barriers were gone, but he did not enter her. \n\nHe fixed her eyes with his as her body hung tight on the precipice of the ruin he would bring her. \"The only way to allow you any more would be to let you choose.\" His face betrayed something she hadn't seen before. \"And I cannot do that.\" Hips plunged forward, her gasp swallowed by his demanding mouth. He ground against her with every entry, and drew out every kiss with increasing greediness as her body offered her up for him to devour. \n\nHer hips rose to meet his thrusts, the sharp brutality of their meeting flesh stirred her anger with her arousal until the two lost any distinction. The riot of emotions molded itself to his machinations, her body his ever willing subject. And still her mind scrambled to find some way out of the trap he'd set, desperately holding herself away from his declaration. And yet she brought her legs up to wrap around his surging body, the sound of the chain lost in the chorus of their coupling. Possession was the only word for it, the way he stolen her control and turned her own thoughts against her. \n\nHe released her mouth, rising up so she might feel the cage of his body above her as his force increased. His forearms were hard bands beneath her clutching hands. Her thighs split painfully by his body. \n\nShe met his eye and she saw it again, that unfamiliar emotion in the tightness of his mouth, the corners of his eyes. Fear. The building mutiny of sensations allowed her hands their impulsive travel to his face, their only goal to soothe his concerns. \n\nHe turned to place a kiss in the center of her palm. \"Do not run from me, Kenna.\" The edge of pleading in his words begged her to subvert her own desires, to give up her pursuits and fall back into his waiting hold. This final act, to betray herself to him, to trade pleasure for freedom, give up hope for affection, hung tempting within her reach. Yes, her body sang beneath him, bringing the fruit of her downfall closer with every surge of his body against hers. Climax waited on the other side of submission, as it always had, and the temptation whispered wickedly in her ear. \n\nHer hands at cheeks stopped their caress and held him still so she might study his face. His motions slowed in anticipation of her response. It was he was laid bare for her, his fear and need, so seductively close to what she actually needed, and yet not enough. It could not be enough. \"Roland,\" she said, voice heavy with the strain between them. The words tore at her even as she forced herself to say them. \"You have to let me go.\" \n\nHis face darkened instantly, the fear twisted to anger. \"Never.\" It was a dark promise, born from the depths of his rage to brand her hope with its finality. She cried out as he began his assault again, punishing her words. Her hands were in his fist, held away from her as he tore away the last vestige of her control. Her body tensed and then exploded around him, her ruin in the waves of climax as he shattered her again and again with every withdrawal and rejoining. \n\n\"You're mine,\" he snarled, teeth bare and threatening against her neck. He fucked her harder, determined to raze her completely. And he did, agony too close to rapture to allow her any reprieve. When his bite came, she spiraled again, release collapsing into anguish as he spent inside her. It was a fruitless claiming, the irrevocability of it wresting her control and her tears ran free. \n\nHe climbed off her and she curled into herself, her back to him. She hugged her head, arms soon slippery with her tears. She heard the rustle of fabric, the drag of his sword and clink of his belt as he prepared to leave. \n\n\"With time, Kenna.\" Even he could not lie to them both. She offered nothing back, for there was nothing she could say. His footfalls retreated; the door met its frame with an echoing thud, key scraping the lock despite her chain. \n\nAbsolute hopelessness, its dogged pursuit of her finally at a close, shut its grinning jaws around her, welcoming her into the abyss. \n\n* \n\nThe beat of his boots against the wood mocked every step he took away from her with the impossibility of turning back. Her muffled sobs were still in his ears; he could see the curl in her back as she turned from him, scars staring back at him through the rip in her shirt. His fingers twitched with want to could reach out and touch them. \n\nHe stopped short of the gun deck, the sounds of his crew filtering through the door. His fists pressed steadily into the wood until pain came lacing its way up his knuckles. He should not have lost his temper. His forehead joined his hands against the side of the ship. But this feeling too would fade, the knotting anger and edge of fear that had begun as he watched her disappear again and again beneath the waves. He had her again. It was a matter of time, there was no other option. \n\nHe drew a breath and emerged onto the gun deck and into the storm of sounds as the sailors repaired and sailed their ship. The others greeted him with hollers over the noise. His attempts to respond in kind were strained. Roland found Munro on the forecastle spyglass in hand. \n\n\"Barnes tells me that's southern Florida,\" Munro gestured to the sliver of land that appeared almost blue on the horizon. Roland took up the glass and looked for himself. \n\n\"Perhaps I underestimated the intelligence of departing before the ship was intact.\" Roland took in the glass in. The missing mast above him left the sun a direct path down on their heads, the heat of summer laughing at the winds' attempts at cooling them. \n\nMunro grunted non-committedly. \"Giving them the vote was wise.\" He left his own opinions at their hurried departure unsaid. \n\nRoland had agreed with Munro, who had quickly been chosen to step out of the kitchen as quartermaster to their dwindling crew. But the men were on edge, the taint of the entire affair with Dooley and Abbott had left even the most reasonable of them eager to see the journey at a close. Roland would not admit he allowed it to get away from the temptingly close beach, but the thought nagged at his prized rationality. \n\n\"I've looked at the books you kept when Dooley had his boots up,\" Munro said. \"We've lost some in the storm, and if we're looking to repair the mast and patch her up proper, most of the take from The Orion is not going to the men.\" \n\n\"We need enough to fill their cups for a few days before we get back to work. I'll find us an easy take for the next time out.\" Roland found the prospect an easier topic to settle his mind on. There may be need of an advance and he began considering those who might be interested in the endeavor. He did not allow himself to indulge in considering his coffers, safely buried inland, waiting for him. If he left off the repairs, took his share and abandoned the men, he might have enough to be done with this miserable lot forever. It was a fantasy he did his best to avoid given his present company. \n\nThe clap on his back surprised him but he managed not to lash out at Munro's smiling face. \"Barnes owes me some fine whiskey for that, Captain.\" \n\nRoland fought the urge to stiffen and loom over the man. \"Pray tell you are not still taking bets on this ship.\" He kept his tone light, the smile Kenna had seen through on his lips. \"Hasn't she seen enough gambling for one journey?\" \n\nMunro chuckled again. \"Barnes was just as sure that you'd be off with Mrs. Bell just as soon as we touched sand.\" \n\nIt was lucky he was already so far into the feigned good humor that he needed only divert the stab of panic into a hearty chuckle. \"Yes, domestic bliss simply a mountain of gold away.\" \n\nMunro laughed as well. \"Well the men won't mind her staying on once they've drunk enough to forget Abbott.\" The man's tone dropped a bit, as though attempting to avoid any unpleasantness. \"If she's no longer ailing you might have her up here. It might go some way towards keeping her on for the next take.\" \n\nRoland nodded as if considering the suggestion. \"Mrs. Bell is still unwell, though I take your point.\" Munro opened his mouth but Roland continued. \"She is improving, your help is no longer needed. But I dare say she won't be singing us into port.\" \n\n\"Sails at stern!\" a call came up. Roland and Munro whipped around, both men racing to the upper deck where the man on watch was still shouting the warning. Roland raised the spy glass as more of the crew abandoned their work to see for themselves. \n\nEvery single curse he'd ever heard rattled through his head as he saw the Man of War behind them. Their topsails were white and obvious over the horizon, the rest of the ship slowly coming into view. \n\nThere was no way to outrun them, not without a foremast. The long summer day meant there would be no waiting until night to slip away. Escape, surrender, both impossible. Roland turned, looking over the heads of the sailors as they craned to see the coming doom. \n\nThe Charon had set her last sail. \n\n* \n\nThe hours crept by her, the quiet in the cabin matched only by the heavy warmth in the air. It lay over her, thick and stifling as she sobbed in great lungfuls of it. She felt the sounds of her chain with every movement like blows to her chest; the throat tightened with every beastly memory of his touch. Every moment sank its claws beneath her skin and ripped her apart over and over again. \n\nShe prayed he'd return, if only to stop her endless spiral. But the thought of seeing him again set her further down. She could not endure this. \n\nEven in the heated cabin, she felt the chill in her bones where misery dug a deep encampment. All thoughts of biding time and escape disappeared in the deluge of her pain. This could not be her life. Her mother had whispered to them of the Laird's castle waiting for them to return, of endless rooms and bountiful lands, servants and subjects for them all. Her father had never spoken of them, but her mother showed her how he carried himself, how the angle of his neck betrayed the noble he'd left behind. She had promised her daughters a victorious return, singing them songs and weaving tales of their Highland birthright. \n\nThat hope had dimmed as years of marriage ground her down, her mother's cause slipping further away as the world trudged on and England's ever growing influence continued unabated. And what would her mother think of her now, chained and enslaved to an English pirate, a bastard of gypsies and the English nobility who had destroyed her people's home. What poor use of the gifts she'd given her daughter, entertaining criminals, manipulating the politics of pirates, all while scampering about a ship in sailor's clothing. \n\nThe ship groaned as it leaned to starboard, the sun's pooling light crawling across the cabin in hazy rays. Kenna turned on her back, her imprisoned ankle twisting against the metal. She found no gratitude in her heart for the bandage; there could be no softness towards him ever again. Eventually he would tire of her, and perhaps that would be her end. \n\nKenna pushed herself up, the mourning of her fate shoved viciously down. She would not end weeping in his bonds. Every port, every ship would be an opportunity. And some day she would be free of him as well as the aching void that appeared in her chest at the thought. \n\nHours passed and she shored up her defenses, eating the food he'd left within reach and wishing for her crawl space again. Her fingers ran over the ridges she'd made in the bed, every notch a day she'd spent acclimating, becoming more compliant and accommodating to her circumstances. Her fingernail rested in one of them, feeling the groove bite the skin under her nail. If she would just let go of it all, all of her mother's ideas, the promises for a better life, her own notions of herself, she might find some peace here. As a slave, an indefinite sentence to a life of- \n\nThe first cannon shot shoved her violently from her thoughts. Fear washed down her spine in a great wave. No impact, they were still far off. Would they raise the white flag? Of course not. They couldn't, no pirate would prefer the navy's justice to the sea's embrace. And she would follow them down. \n\nThe chain brought her up short when she tried for the windows. The porthole was also too far. She cursed again and again, wrapping her hands around the links and pulling as hard as she could. The metal answered with barely a scrape against the wooden frame. She screamed and pulled harder, another shot answering from the navy. She held her breath but no impact shook the ship. Perhaps they would prevail at out running them. ",
        "Despite her meager knowledge of sailing, that ignorant hope dissipated as soon as it appeared. The ship had been in bad shape before the storm, but now? It would barely have made it to port as it was. \n\nWhen she had heard of great sea battles, no one had ever mentioned the drag of time it took for ships to actually come into position to trade fire. It would make a terrible story to describe the crawl of minutes between every approaching cannon shot, the futility of any action as the wait clawed across the skin of those being pursued. What story teller could drag out the anticipation into cambering fear without sending their audience away before the glory of battle could shine in their minds? Men waiting to perish did not make good tales, only the dying were worth the breath the story would take. \n\nAnd then, finally, impact. Kenna threw herself on the floor of the cabin as the ship around her shook, the sounds of screams and exploding wood coming through the cabin walls. The room tilted as The Charon came around broadside to its pursuers. Kenna kept her arms locked over her head as the sound of cannon fire rang out, answering the hit. She huddled closer, trying to become as small as possible. \n\nHer ears rang as the ships continued their deadly volley. The ship shuddered, her sailors screaming as the cannons landed shot after shot on the pirate ship. Kenna squeezed her eyes shut, terror seizing hold as The Charon leaned over and rocked back without righting itself. They were taking on water. The last time, she'd been huddled in the captain's quarters she'd never truly faced the possibility that the attack could mean her death. Agnes had been a point of focus; the impossibility of a pirate attack on their unexceptional merchant ship another avenue for denial of the real dangers. \n\nThough when Roland had entered the room, his eyes falling on hers for the first time, she'd felt a pure fear that came when rejecting the truth could no longer withstand reality. Somehow in that moment, she knew her fate had been forever diverted from the path she'd taken under her own power, that all her planning and scheming to be free had only lead her to some other terrible fate. \n\nNow there was nothing to distract her, to help her with the overwhelming helplessness of huddling on the floor, pressing herself as close to the berth as possible, as though it might save her. The Charon tipped further towards the enemy, sea water rushing in to drag them down, her chain sealing her fate to the ship's. \n\nThe wall above the bed shattered, pieces of wood flying into the room with murderous speed. The cannon ball was gone through the far wall before they landed. Kenna, hunched on the floor, was shielded from the worst of it but she felt one tear at her shoulder, another landing a glancing blow along her side below her scars, something hit the back of her head. \n\nKenna screamed and pulled her body in tighter, her imprisoned limb pulling further from the post that housed its anchor. She sat up slowly, muscles tensed and ready to throw herself down. The starboard wall had lost a great deal of board, the empty sea interrupted only by the distant sliver of land far beyond her reach. The port wall was almost entirely gone from floor to ceiling, the walls of her crawl space nothing but the rush of sea air. Her eyes fell on the bed frame and the shackle still locked there. \n\nThe beam had suffered some damage; cracked but not broken. \n\nThis time when Kenna yanked on the chain the wood creaked and yielded. Another sharp tug brought the cracked portion into a shallow angle at its weakest part, the shackle settling in the indentation. The cannons boomed again but Kenna had seen the sliver of hope and she did not pause. The skin of her hands tore as she pulled on the chain, a fraction of a response from the beam. Again. Blood made the chain slippery. Kenna screamed in fury and launched herself at the wood. She kicked the break, her bare feet tough from weeks of walking barefoot. The beam broke, the shackle wedging itself into the splintered mess. \n\nShe got up again to pull one last time when the door of the cabin burst open. Roland appeared, a bleeding cut above one eye as he charged towards her. His massive hands wrapped around the beam and pulled until the two halves separated enough to let the cuff fall to the floor with a thud. \n\n\"Come, we are setting the ship to blow with the remaining powder before their next volley.\" He spoke quickly, craning to look out the ruined port wall as though checking as the navy repositioned themselves for the next attack. \"The smoke should cover the long boats as we make for shore.\" He made his way back up towards the door, climbing the incline born from their sinking ship. It wasn't until he reached the door that he turned back and found the space behind him empty. \n\nHis eyes shot up to where she stood, clutching the pale bedsheet in her hands. The clear sky behind the ruined wall left her form dark as though only a silhouette stared back at him. \n\nHe took a step forward and she took one away, so she was right on the edge where the floor ended and open air began. \"Don't,\" she said, somehow voicing every piece of fear and anger she'd felt in that single word. \n\n\"Kenna,\" Roland said, persuasion in his tone. False calm mocked his balled fists and the coil in his body as he readied himself to strike. But he was too far. They both knew it. \"Come with me.\" \n\nShe shook her head, unwilling to say it lest he hear the tears she kept at bay burning her voice. \n\n\"Kenna.\" This time it was a warning. \"You will not survive,\" he gestured at the metal weight on her leg. \"We are close enough to row, come with me.\" \n\n\"I can't.\" It was true. She wanted to run to him, launch herself into his arms and let him carry her off. But it would never change, and that she would truly not survive. \n\nShe turned sideways, considering the fall. He took another step and she unfurled the sheet she hoped would catch the attention of those aboard the navy ship. Roland took another step before she turned back, her heels hanging over the edge now. \n\n\"I will find you.\" A promise, one that froze her blood and quickened her pulse. \n\nThere was so much she could have said to him in that moment, moments from leaping to where he could not follow. But none of it came to mind. She looked back into his amber eyes, that temptation so much closer and safer than the reckless dive she would take. But as it had on shores of the Eastern Sea, the possibility on the other side of the water claimed her. \n\nThe cannons rang out again, shattering the stillness between them. \n\n\"I'm sorry.\" She was, sorry she could not find peace with him, sorry that he had chosen chains over choice, sorry that those perfect moments they'd shared could not be enough. \n\n\"Kenna!\" he called out, arm outstretched, face twisted in fear, her last sight of him as she threw herself into the churning waters below. \n\n*** \n\nSo thank you all so much for reading! This has been such a great journey to go on with you. I hope you all enjoyed Kenna and Roland's story. Let me know what you think. \n\n. \n\n. \n\n. \n\n. \n\n. \n\n. \n\nI'm totally kidding. The epilogue is also done and I'll post it later this week."
    ],
    "authorname": "AmoryParks",
    "tags": [
        "pirate",
        "historical",
        "ship",
        "captain",
        "pirate captain",
        "abduction",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/siren-ch-09"
}