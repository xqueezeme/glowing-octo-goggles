{
    "title": "Taken by the Viking Ch. 19",
    "pages": [
        "As usual, Jordan woke up before Trish. He stroked his hands down her body, almost unbelieving that she was still there. That he wasn't going to have to hunt her down and cart her back to him. She murmured in her sleep as he caressed her, her front pressing closing to him, arching against him, and his cock - already half hard - rose to its full length in response. \n\nUnfortunately, just as he was preparing to roll her onto her back and wake her up in the usual way, his com chimed with the special note that let him know the Wolf wanted his presence. \n\nGroaning, Jordan got up and went to the closet, pulling out a dress for Trish to wear. This one was the same blue as her eyes. When he turned around, she was already stirring, blinking in his direction. \n\n\"Time to get up and get dressed baby girl,\" he said, heading back towards the bed.\n\nTrish pouted. \"But...\" \n\nA blush spread across her cheeks as she pressed her legs together and Jordan grinned. She wanted her morning treat. \n\n\"Yes?\" he asked, coming to a stop at the bed, casually holding the dress at his side. \n\nThe pouting of her lower lip increased, as did the red across her cheeks. She curled in on herself, looping her cuffed wrists over her legs. A strange expression crossed her face as she glanced at her wrists, but it disappeared too quickly for him to attempt to interpret it. \n\nHer mouth opened and closed, but she apparently couldn't bring herself to ask for what she wanted.\n\nChuckling, Jordan tossed the dress onto the bed. \n\n\"The Wolf requires my presence, so I can't take my time the way that I'd like to,\" he said, grabbing her ankle and pulling her towards the edge of the bed. Trish let out a tiny shriek as color rose in her cheeks, her nipples hardening. \"Spread your legs, baby girl.\"\n\n******\n\nThe order sent a little shudder down Trish's spine. \n\nNot that she needed further arousal; she'd woken up wet and ready, her body primed for Jordan's usual morning activities. She was torn with relief that he hadn't made her ask for what she needed, and embarrassed that he'd immediately known and was obviously amused by it. Not that he wasn't turned on too; the bulge at the front of his pants made that clear.\n\nBut instead of undoing the front of his pants, he was lowering his mouth to her breasts, his fingers sliding through the already slippery folds of her pussy.\n\nWith the time he'd taken to learn her body, he knew exactly how and where to touch her to get her off fast and hard. Trish moaned as he bit down gently on her nipple, his fingers sliding inside her pussy and curving to stroke against her g-spot. She rested her bound hands on the back of his head, still slightly annoyed that he'd left the cuffs on her all night, and yet turned on by them as well. \n\nAt some point today, she was going to have to try to talk to him again, but right now all she wanted was her usual morning orgasm. After all, he'd been firm about things not changing.\n\nAs he sucked her nipples hard, alternating between the two of them, his fingers pumped inside of her plump pussy, the heel of his hand rubbing circles against her clit. Trish's legs kicked as her body arched, tightening and quivering around his fingers as she came.\n\nAfter that, she was rushed through dressing and having her hair brushed, which made her feel more than a little disgruntled. She'd liked their slower mornings, where Jordan took his time with dressing her and brushing her hair and washing her. Not that she'd realized quite how much she'd liked them until she suddenly wasn't getting it.\n\nAlthough, she stopped pouting by the third time Jordan gave her two crisp swats for the third time, admonishing her not to drag her feet. Mostly because it was humiliating to realize that she was acting like a pouty child because she wasn't getting enough attention from him... when a few weeks ago she would have preferred not to have his attention. \n\nIt was moments like this that made her wonder how messed up she really was.\n\nWhen they reached the Wolf's main room, the Wolf gave Jordan a dark look, but didn't say anything about his tardiness. His eyes lingered on Trish in a way that made her shrink back into Jordan. The next time Jordan said the Wolf required their presence, Trish wouldn't move slowly. She wasn't scared of Jordan anymore - not really, even if she didn't really like being spanked for punishment since it hurt, but she knew he wouldn't actually harm her. She couldn't say the same thing about the Wolf.  \n\nHe definitely still scared her. Especially when his piercing gaze studied her like that.\n\nHow far did Jordan's protection go?\n\nThen again, Jordan said he was 'retiring' soon. So maybe she wouldn't have to worry about it after all. \n\nJordan settled Trish onto his lap, his hand sliding up just underneath the hem of her skirt. She made a face, but after getting a Look from the Wolf already - not to mention Jordan's behavior last night - she didn't risk trying to push it away. It was what he normally did. That had just been one of the things Trish had hoped might change...\n\nThe doors at the far end of the hall opened, and Lisa and Ken stumbled in, accompanied by a large group of soldiers. They wore nothing but collars around their throats - Trish recognized the same kind of shock collar that Alex had ended up wearing. Since neither she nor Bella had ever earned one, she could only imagine what Lisa and Ken had done to get theirs. Alex had actually tried fighting back. She couldn't see either of the two pathetic figures in front of her attempting that.\n\nOr maybe they had and that's why they looked so pathetic?\n\nThey kept shooting fearful glances at their guards.\n\nThe oddest thing about them was that, although they had cheated on Bella and Alex with each other, they acted like less of a couple than Alex and Bella ever had. They were walking closer to the guards on either side of them than they were to each other. They weren't even looking at each other. \n\nAlthough, that last was a little more understandable, since they were looking all around the main room. Lisa's eyes moved to the dais first, passing quickly over Jordan and Trish to fall on the Wolf. Which was a relief for Trish.\n\nCompletely naked, walking gracefully through the room, Lisa was beautiful to look at. Like Bella, she had a much fuller figure than Trish, but she was even more well proportioned, with the kind of rounded bosom and ass, narrow waist, and lithe muscles the Moon favored. She pretty much epitomized everything the Moon found attractive. And yet... Jordan's hand remained stroked Trish's thigh.\n\nFor once, Trish didn't feel even the slightest bit embarrassed. In fact, some part of her wanted his hand to move higher. To make it clear who he wanted to touch, wanted to fuck, and that Lisa didn't have a chance. Was this how Jordan felt? Was that part of why he liked people to watch? So that he could show off who Trish belonged to?\n\nFlushing, she turned her head into his broad chest, a little shaken by her thoughts, especially because she knew - deep down - she didn't actually want to be exposed to the entire room. And definitely not Ken, who was now peeking at her and Jordan with an odd expression on his face. Like Lisa, he was extremely attractive by Moon standards, but Trish privately thought that Alex's more rugged good looks, bulkier build, and kind eyes were much more attractive. Bella had definitely traded up - although not by the Moon's values, since Ken was so well connected he was considered a much better match than Alex would have been. Ken didn't hold a candle to Jordan or the Wolf, though; both men's sheer magnetism and warrior's builds made him look like small and weak. \n\nOn the Moon, he could ruin a person with a single word. Here... he was going to be nothing but a playtoy for the Wolf. \n\nThere was something strangely satisfying about that. \n\nMore Earther sentiments leaking into her head... \n\nAs they approached the Wolf, Ken drew himself up. Trish had to say, for someone who was naked and powerless, he did show some kind of bravery in facing the Wolf head on. That or he was just really stupid.\n\n\"I demand to be released!\" Ken shouted, his deep voice full of bravado and misguided confidence. \"Do you have any idea who I am? If you release me now, I will protect you from my father. If not, you will feel our wrath!\"\n\nTrish almost expected him to shake his fist in the air, but he didn't. Beside him, Lisa was giving him a look of utter disgust, while the soldiers guarding the pair were either shaking their heads or shaking with laughter. She could feel the rumble in Jordan's chest that meant he was chuckling, amused in the way a large predator might be entertained by a prey's yapping threats. \n\nThe Wolf chuckled as well, standing up from his chair with a cruel smile curving his lips. The movement wasn't inherently threatening, but it felt like the entire room stilled, waiting to see what would come next. Ken's mouth closed with a click, although he tried to maintain the superior expression on his face, it was marred by his obvious fear, his hand jerking upwards as if to touch the collar around his throat. \n\nDespite herself, Trish was already feeling satisfaction at knowing Ken's massive ego was about to be knocked down a peg or two. \n\n\"Daddy knows exactly who has you,\" the Wolf said, his voice lower, softer, and yet far more threatening than Ken's posturing. \"I'm sure I'll be hearing from him sooner rather than later, but there's nothing he can do, if he even cares I've picked you up.\"\n\nThat would actually be quite a quandary for Ken Sr, Trish realized. Would he exert his power to free his son? Or would he trust in the Wolf's system to get his son back safe? If he tried to get Ken free, he'd need to bargain for Lisa as well, or else public opinion would certainly turn on him. And considering the Wolf seemed to have picked up Ken Jr for his own amusement, was there any leverage Senior had, anything he could give the Wolf that the Wolf would be willing to trade? \n\nIt might be easier to just leave his son where he was, knowing he'd eventually be returned relatively unharmed.\n\nShe almost felt sorry for Ken Jr. While there were plenty of parents on the Moon who were happy to sacrifice their children for their own personal gain, there were also plenty of parents who seemed to love their children. It might be his misfortune to have been born to the former.\n\nThe Wolf looked away from Ken, dismissing him as important without even taking the time to actually dismiss him, and his gaze landed on Lisa, sliding down her body and studying her. Lisa flushed, shifting like she wanted to cover herself, and then suddenly changing as she pulled her hands away from her privates, turning her body slightly as if to present herself, her back arching to showcase her breasts and ass. The expression on her face changed too, from being watchful and almost scared, to almost seductive - although still a little scared.\n\nTrish really didn't know what to think of Lisa. She was like a chameleon. When she'd first been taken, she'd been terrified when they were first taken until she'd tried to seduce Jordan, and then she'd become subdued when he wasn't interested... she'd seemed excited after she'd realized it was the Wolf who had kidnapped them and she'd seen Alex and Bella, and then subdued again when she realized the Wolf was keeping her and Ken. When she'd come in just now, she'd seemed subdued until the Wolf focused on her and now she was back to seductress. \n\n\"Slut, you have a choice,\" the Wolf said. Beside Lisa, Ken looked like he was trying to gather his courage to interrupt again. \"You can suck my cock, or you can suck Bitch's cock.\"\n\n\"Yours,\" Lisa said immediately, practically jumping forward to get away from Ken. The soldiers standing in front of her parted, one of them looking surprised, the other look smug. The noise of general conversation lifted for a few moments as the soldiers around the room settled bets. Trish realized this must be a choice the Wolf often put forward, apparently with varying results.\n\nShe wondered if any of the Wolf's other captives had ever had the same expression as Lisa though. She didn't look excited, but she didn't look reluctant either. Just... strangely determined. \n\nThe Wolf gestured at the soldiers still standing around Ken as the floor behind them began to move, the lower level lifting up the Wolf's playground to the center of the room. \"He's all yours.\"\n\n\"Wait! No! Fuck you!\" Ken started screaming, spinning around with his fists up, like he was going to try and take on all the soldiers. He swung, wildly, and the soldiers were laughing as he started screaming, his hand going to the collar on his neck as he began to shake, falling to the floor. His sobs were audible as he tried to kick out at them. \n\nTrish supposed some people might admire his delusions of fighting grandeur, since he was still trying even though his movements were weak and he was sobbing from the pain of the shock collar, but all she could think about was what an idiot he was for continuing to fight a battle he'd already lost. He should be conserving strength, at the very least. Because it was obvious he wasn't going to get much of a reprieve despite the fact that he was still shaking from the electric shocks administered through the collar. \n\n\"Idiot,\" Jordan murmured, his fingers swirling patterns on Trish's inner thigh, before she felt him turn his attention to where Lisa was kneeling before the Wolf, her hands undoing the front of his pants to release his cock. \n\nThe possessive jealousy that Trish thought she had overcome lit up inside her again, seeing Jordan's interest in the proceedings. \n\nHe liked public displays. He liked to watch - and also to be watched. \n\nUnlike Bella, Lisa was obviously comfortable with what was happening. She even appeared eager as she immediately took the Wolf's cock in her mouth, sliding her lips down the thick shaft and swallowing him whole. While Trish was starting to get the sense that Lisa was just willing to do whatever she had to in order to survive - or maybe just that she was drawn to whoever had the most power and would be the best protector - would the reasons behind the actions matter to Jordan? After all, Trish didn't do anything like that for him. In fact, she'd become so upset after the one time he'd had her on real public display that he'd promised never again. \n\nWas he watching Lisa suck the Wolf's cock willingly, if reluctantly, and regretting keeping Trish? Would he consider Lisa a trade up?\n\nFears collided in Trish's chest and she found herself snuggling in closer to him, rubbing her nose along his shoulder, towards his neck, as her hand slid down his chest. She squirmed on his lap, moving far enough away from his body that she could slide her hand between her hip and his stomach, her fingers seeking out the hard bulge of his cock. Jordan's arm behind her back opened slightly, making her fall back against it so that her head was no longer nestled in the crook between his neck and shoulder, and he could look at her.\n\nHis blue eyes were half-hooded as he studied her expression, and she felt a blush rising in her cheeks. \n\nThe sounds of Ken's screams and sobs were now muffled - she was sure by some kind of sex act - and Lisa's slurping noises as she worked over the Wolf's cock were almost loud in comparison.\n\nTrish's fingers stilled, still curved around Jordan's bulge, and she licked her lips nervously, making his gaze drop for just a moment before rising back up. He frowned.\n\nThen he reached down and removed her hand from his cock, before pulling her back in close to him, his hand sliding back up her skirt to its previous position, leaving her feeling completely conflicted. \n\nHe was now rubbing her hip with one hand in reassuring little circles even as he traced a more complicated pattern on her thigh with his other hand, which made her feel a little soothed and comforted. But... why had he removed her hand from his cock? \n\nAnd why was she getting so upset over this? Last night she'd been thinking she might have made a mistake in staying, because he hadn't let her do what she wanted, and here he was insisting that she do what she actually wanted deep down and she was getting upset again! Because... because she'd wanted to please him, to have his attention, more than she'd cared about what she wanted. \n\nWhich was kind of a horrifying realization to come to.\n\nDid she even know how far she would have been willing to go?\n\nThe sound of Lisa choking slightly on the Wolf's cock drew Trish's attention. The Wolf had his hands in her hair and was fucking her mouth, using her for his own pleasure while her cheeks turned pink as she struggled to breath. Would Trish have been willing to do that? Here in front of everyone? Most attention was on the Wolf or the soldiers taking turns with Ken - who was face down sobbing into Bria's pussy with his ass up in the air to take Vince's cock - but it wouldn't necessarily stay that way.\n\nShe didn't even know what her end game had been when she'd reached for Jordan's cock. She'd just known she wanted his attention on her and not Lisa.\n\nThe hand on her hip moved up higher to cup her breast and Trish stiffened. It seemed she'd gotten her wish. She felt his head move, lips pressing against the top of her head as he tipped her back, and she squeaked. Chuckling, Jordan kissed her as his hand slid further up her skirt, making her squirm and try to push her skirt back down.\n\nHe didn't stop her from keeping the tops of her legs covered with her skirt, the way he did when he wanted to show her off, but he didn't that stop his questing fingers either. Trish moaned into his mouth, half in shameful embarrassment, half in arousal as the tips of his fingers met her wet pussy. The loud noises of everyone around them made her hyperaware of their presence, no matter how she tried to ignore them.\n\nHaving such a large, potential audience made her heart pound in her chest, no matter how distracting Jordan's kiss was - and yet her pussy was still wet and throbbing, aching for him to slide his fingers inside of her, as he stroked the swollen lips. Sudden laughter made her stiffen again, but Jordan's fingers just kept stroking her pussy, \n\nShe wanted to try to squirm away, wanted to tell him to stop in front of the audience... but she'd been the one to start it. And she didn't want his attention to return to Lisa sucking the Wolf's cock. \n\nSuddenly, Jordan's fingers withdrew and they were up and moving. Trish clung to him, not looking up, panting with needy arousal and wanting to whimper at the sudden change - except that she was really hoping they were moving to somewhere more private.\n\nVery slightly more private - it turned out. \n\nAs soon as Jordan got her into the hallway, he flipped her around so that her legs were straddling his waist and he pressed her up against the wall, his mouth devouring hers. Trish couldn't help but glance up and down the hallway - which was currently empty. Almost everyone in the compound would be in the main room for the show. And with the show in full swing, it was unlikely anyone would be leaving the room. Unlikely anyone would see them.\n\nBut not totally improbable.\n\nThe thought of being caught made her shiver, sick excitement coiling through her. The same kind of excitement that fueled her when Marek and Laura were watching her and Jordan. She didn't actually want to be caught - didn't know how she would react if someone did come out of the door that was only a few feet away - but the thought that someone could... it just made her hotter and hornier even as she tried to push Jordan away, thinking she might be able to convince him to move to an empty room or something.\n\nIgnoring her hands pushing against his chest, Jordan used one hand to undo the front of his pants and free his cock, and then his hands were on her ass cheeks, holding her up as he thrust into her pussy, shoving her hips back against the wall. Trish moaned into his mouth as his thick shaft split her open; this position made him feel even bigger than usual and it felt so, so good to be stuffed full of him.",
        "A roar inside the main room made her quiver, as she was reminded of all the people on the other side of the wall, but it didn't matter anymore. \n\nHer skirt was up around her hips in front, falling to her sides, as Jordan started fucking her, rough and fast up against the wall. Playing with her in front of everyone seemed to have made him even hornier and more aggressive than usual - and Trish was just along for the ride. She squealed as moaned as he pounded her into the wall, only his hands supporting her ass keeping her lower back from being bruised as he ravaged her. Her breasts bounced, rubbing against his chest, as she almost wished they were bare so there would be skin to skin contact... but she couldn't bring herself to even try and pull her top down, not when he was fucking her, out here in the hallway, where anyone might come across them.\n\nInstead she just hung on for dear life, her pussy squeezing and shuddering around him, her orgasm growing with every thrust. She was doing her best to stifle her moans as cries of pleasure as her body wound tighter and tighter, afraid that any noise out here might attract attention from those inside the room. \n\nShe leaned forward and bit into Jordan's shoulder as she came, smothering her scream of ecstasy as her body pulsed around him. She felt him buckle a bit under her weight as his own orgasm hit him, and she clung to him as he throbbed inside of her. \n\nPanting, Jordan leaned against her, pressing her into the wall as they came down from the ecstatic highs of their climaxes. Trish breathed in his scent, basking in her post-orgasmic glow. She wasn't sure she would even care if someone DID come out of the door and see them. Even though Jordan's shrinking cock was still inside of her.\n\nAs she had the thought, Jordan pulled away, letting her slide down to stand on her own feet as he shoved his dick back into his pants. Her skirt settled back down, covering her pussy and thighs, as if nothing had just happened. \n\n\"Come on, baby girl,\" he said, taking her hand. Trish thought he was going to lead her back into the room, but instead he headed down the hall, towards their room.\n\n\"We're not going back in?\" she asked. She was torn. She didn't particularly want to watch what was happening to Lisa and Ken - and definitely didn't want to face the part of herself that actually kinda felt like they deserved what was happening to them - but she was surprised Jordan was ready to just leave the room. And maybe there was a tiny part of her that just wanted to know what was happening.\n\n\"No.\" Jordan glanced at her and his brow furrowed, like he was searching for extra words to give her. \"I'd rather just be with you.\"\n\nA warm glow filled Trish. Silly, but she couldn't help her reaction to his words, any more than she could help her body's reactions to his fondling and stroking even when they were on the dais in the main room. \n\nThe truth was, she'd rather just be with him too."
    ],
    "authorname": "Goldeniangel",
    "tags": [
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/taken-by-the-viking-ch-19"
}