{
    "title": "Space Police Corps Ch. 02",
    "pages": [
        "\"Two hours to the Tauk System, sir,\" relayed Screw to Atwat over the comlink. \"We will drop out of N-Space in one hour and we should be above the elliptical plane of the planet.\"\n\n\"Very good ... I'll be up shortly.\"\n\nNeeda sighed. The three week trip from Earth to Tauk had allowed the crew to become more cohesive in working with each other. Even their science officer, DeKunt, was managing not to pass out at least one quarter of the time he caught sight of Hump, their nudist engineer. The Garou, Cummin, had fit in, although it was still hard to believe that he was a medical officer.\n\nStill, Lieutenant Atwat remained a mystery to Needa. She knew he was brilliant, a genius in fact, but he never lorded his intellect over anyone else. If fact, he was downright stupid about certain things. She could not understand why he was so hidebound and fanatical about Space Police Corps rules and regulations.\n\nAtwat had memorized everyone's service record, but Needa knew he did not know that DeKunt was called Bashful Berry or why he was called that. She shook her head as she remembered that he placed Hump's nudism as a practicing religious rite. He was not even aware of her own over-developed body, which was the cause of most of her problems. Needa sighed again, which strained her too tight uniform.\n\n\"What's the matter, dear?\" asked the ship's computer through Need's console. \"That's too sighs in less than a minutes.\"\n\n\"It's nothing, Miss Poppins,\" said Needa. \"Just a little stir-crazy. It'll be good to get of the ship for a couple of hours.\"\n\n\"Yes, dear,\" replied the computer before shutting off.\n\n\"And yet another example,\" thought Needa. \"Our ship's computer was left on for years by itself and went crazy. It has Miss Poppins, the English nanny, Madame Tart, the strumpet, and another personality they're both afraid of. Luckily, the third one hasn't shown up yet. I asked Atwat to wipe the memory and start fresh. He stated that the Commissioner personally gave us this ship and that the computer must have been designed to function this way to best serve our needs. Therefore, no modifications are necessary.\"\n\nNeeda was half-tempted to get Bashful Berry to wipe the computer's memory when they arrived at Tauk. Two things were stopping her. The first was that she would be doing an end-run behind Lieutenant Atwat's back. The second reason went deeper. More than ninety years ago, scientists heralded their newest breakthrough in cybernetic systems. Self-aware with independent programming capabilities, the new robot was hailed as the ultimate tool of civilization. The new robots went into production and were purchased throughout the sphere.\n\nWithin a month of initial shipments, reports filtered back to Earth of death and destruction caused by the robots. The first reports were scoffed at by the scientists as people having 'Frankenstein' paranoia. A few went so far as to say the robots were superior to humans, who were just expressing their inferiority complex. Unfortunately, it became all too clear that the robots were out to annihilate mankind. Star Command turned all its assets, including the Space Police Corps, towards the eradication of the Roboids, as they were now called. After numerous battles, the Roboids were defeated, except for very few isolated pockets that escaped destruction. Deprived of the energy they needed to survive, the remaining Roboids turned to a vampiritic existence, taking energy from any source they could find ... even living beings. Needa decided to have another go at Atwat about the ship's computer. She then heard the hatch hiss open behind her.\n\n\"Like, this ship is such a kludge,\" she heard Aye Wanna Hump say behind her. \"Do you think our illustrious spokesman for the oppressive regime will allow us lowly workers time to do repairs on Tauk?\"\n\n\"If you mean, Lt. Atwat, I doubt it,\" replied Needa. \"The mission comes first. I've been trying to get him to let Berry wipe the computer's memory at Tauk.\"\n\n\"May the benevolence of the Gods shine upon your endeavor,\" intoned Aye Wanna as she came around in front of Needa, who was sitting at the helm station. Aye Wanna's curly red hair hung down to her waist and she was wearing her silver circlet on her forehead. A blue diaphanous scarf was tied around her waist and that was all she was wearing. The scarf, being see-through did not hide a thing.\n\n\"It must be the three weeks of being cooped up together,\" thought Needa. \"Her nudity doesn't even bother me anymore.\"\n\n\"What are you doing up here on the bridge, Aye Wanna?\" asked Needa.\n\n\"You need to relax ands let go of your inhibitions,\" said Aye Wanna. \"Release yourself from the tight barriers that confine your spirit.\"\n\nNeeda smiled. She almost felt like taking Aye Wanna up on her suggestion. Ever since the Academy, someone had made her clothing size too small in the Quartermaster's computer file. With her voluptuous shape, Needa always seemed like she was going to burst out of her clothing at any time. Needa knew if she told Atwat that she had converted to nudism, he would let her prance around the ship in her birthday suit without saying a word. However, it was not in her nature to run around naked, and with her tits being three times as large as Aye Wanna's, Needa knew Berry DeKunt would be in a faint all the time.\n\n\"No, what really brought you up here?\" she asked Aye Wanna again.\n\n\"Bad vibes,\" replied Aye Wanna with a shrug. \"I felt something was wrong with our illustrious leader's command chair.\" She walked around to the rear of the ship commander's chair, bent over, and cracked open the access panel in the back. \"Aha! The relay to the helm hookup is about to short out.\"\n\nJust then the hatch hissed open again, Needa glanced up over her shoulder just in time to see Berry standing there. He caught sight of Aye Wanna's heart-shaped ass and cunt sticking out right in front of him. His face went blood-red and his eyes rolled back in his head just before he crashed to the deck in a faint. The hatch hissed closed with a thump and then hissed open again.\n\n\"Bummer, I thought he'd gotten over that,\" commented Aye Wanna, looking back as the hatch hissed close and open again. She turned back to the access panel, replaced the bad relay, and closed the panel door.\n\n\"You're a Technic, aren't you?\" asked Needa as the hatch thunked close and open again. Technics are a group whose psionic abilities were geared to machinery and technology. The rare people who possessed psionic powers fell into three categories; Technics, Biotechs, and Mutates. The Biotechs abilities were linked to biology and psychology. The Mutates, the rarest of the three, had paranormal powers. The hatched hissed close and then opened again.\n\n\"Like, fer sure,\" replied Aye Wanna with a smile. \"My PMS, Psionic Measurement Score, which should not be confused with our weapon's Plasma-Mercury System, was so high, the testers could not believe it. Of course, I get irritable every month.\"\n\n\"That's only to be expected,\" said Needa.\n\n\"I'd better wander back to the engine room before we come out of N-Space,\" said Aye Wanna.\n\n\"Fine,\" said Needa as the hatch closed and opened again. \"Oh, can you move Berry's head out of the doorway before it gets hit again?\"\n\nThe Dildo materialized out of N-Space into realspace over Tauk's orbital plane, but outside the gravity well of the system.\n\n\"Um, I don't think there are any ships in the system,\" reported Berry, who was sitting at the science station on the bridge. Sensors were flickering off and on at irregular intervals.\n\n\"Very good,\" replied Lance from the command chair. \"Ensign Screw, best speed to Tauk.\"\n\n\"Aye-aye, sir,\" responded Needa as she prepared to engage the Quasi-drive or better know as the Q-drive.\n\n\"You called?\" asked Q in a snooty manner.\n\n\"Wrong series, sweetie,\" replied Madame Tart.\n\n\"Oops, sorry,\" and Q blinked out.\n\n\"Sir, we're being hailed,\" said Needa.\n\n\"Over the speaker,\" ordered Lance.\n\n\"Unidentified ship!\" blared a female voice over the speaker. \"This is the Dreadnaught Vigilant! Stand by to be boarded!\"\n\n\"Aw, shit!\" muttered Needa as the Dildo shook as a tractor beam locked onto it.\n\n\"Rear view,\" ordered Lance.\n\nThe viewscreen linked to show the rearview of the Dildo. The entire screen was filled by a gray metal structure with three huge tubes pointing straight at the Dildo. Needa and Berry gasped when they realized the tubes were a tri-ERG cannon battery.\n\n\"Quarter magnification,\" said Lance.\n\nThe view retreated back from the ERG cannons until the other ship came into sight. The Dreadnaught was a premier fighting ship with numerous ERG batteries and arrays of missile launchers. It also carried four single-seat fighters in its launch bay. It was immediately obvious that the Vigilant had just seen some hard action.\n\n\"Short range sensors back on line, dears,\" announced Miss Poppins. \"Oh, my! Ship to the stern, distance eighty-six meters ... It's the S.C. Vigilant, Dreadnaught class.\"\n\n\"Open a channel,\" said Lance, unperturbed by the weapons pointing at his ship or by the closeness of the other ship. Normal detection range is ten dets or 500,000 kilometers. \"This is the SPC Dildo on a search and rescue mission, Lieutenant Lance Atwat commanding.\"\n\n\"The SPC what?!?\" snarled the female voice over the speaker. \"Is this your idea of a joke? Your vessel is not listed on our registry and you almost collided with us when you came out of N-Space.\"\n\n\"I'm not joking,\" replied Lance in earnest. \"This is the SPC Dildo and I am Lieutenant Atwat. This ship was recommissioned four weeks ago and is too new to be on the registry. Can we offer you any assistance?\"\n\n\"Atwat? Atwat!\" cried out an excited, shrill male voice over the speaker. \"Ma'am, blow him out of the sky! Obliterate him! Don't let him get close!\"\n\n\"At ease, Commander Fyuer!\" barked the female voice.\n\n\"If that is Commander Taylon Fyuer, I served in his command once,\" offered Lance. \"He's a Trilax. I hope your feathers have grown back in, sir.\"\n\n\"Shoot! Shoot! By all that you hold dear, shoot!\" yelled the male voice.\n\n\"Get a hold of yourself, Commander!\" ordered the female voice. \"Lieutenant Atwat, I'm Captain Pussie T. Screw. We had a run-in with a Sniz colony. I appreciate your offer, but we will still be boarding your ship to check you out.\"\n\n\"Yes, ma'am, I'll be waiting for you at the entry hatch,\" replied Lance before signing off. \"Captain Screw...\" he mused. He turned towards Needa. \"Your mother, I believe?\"\n\n\"Yes, sir,\" replied Needa with a grimace.\n\n\"Well, I certainly can't deny you seeing your own mother,\" stated Lance cheerfully. \"Come with me. Ensign DeKunt, you have the bridge.\"\n\n\"Sir, I really don't think this is such a good idea,\" said Needa as she followed Lance to the ship's entry hatch.\n\n\"Nonsense,\" relied Lance. \"You and your mother must have made tremendous sacrifices to serve in space. An encounter like this must be relished.\"\n\nThey stood together by the main airlock for several minutes. Presently, there was a metallic thud as the two ships came together and locked in place, airlock to airlock. Lance punched in the code to allow the hatch to be opened from the outside.\n\nThe airlock swung upward into the hull of the Dildo. Four Space Marines in combat space armor and S-harness quickly entered the ship and fanned out. Two were carrying neuro-distruptors and the other two were carrying splat rifles. Needa kept perfectly still. The neuro-distruptors would stun them, but the splat rifles were like big shotguns, firing ten rounds at one time. No matter what type of ammo was loaded in those rifles now, Needa was sure that one blast would turn both of them into blood pudding.\n\n\"Attention!\" called out Lance and both of them snapped into that rigid position.\n\nTwo beings followed the Marines through the hatch. The first was a human female, who was an older version of Needa. She was just as stacked as Needa was, but without the too tight of a uniform and with silver eagles embroidered onto her collar. The second being was a strange bird-like creature with three legs and three arms. Three eyes on rotating eyestalks jutted out from the top of its red, blue, and yellow feathered body. Its eyes swiveled around to lock onto Lance and Needa saw that one of its three-fingered hands held a blaster.\n\n\"Present Arms!\" ordered Lance.\n\nNeeda snapped her arm up to salute and felt the stitching of her uniform give way around her right breast. Two buttons also popped off the front of her blouse. The bird-like being was lifting the blaster to point it right at Lance. The Marine to the being's right dropped his mouth open and his eyes popped wide at the expansive cleavage and flesh showing out of the tears in Needa's uniform. The Marina's hands tightened in response as if he was grasping her chest. The trouble was his finger was on the trigger of his weapon.\n\nA bright blue sparkling bolt of energy shot out of the end of his neuro-disruptor and hit the bird-like being just as the blaster was coming in line with Lance. The being squawked loudly and shook violently as electric bolts danced over and through its body. A second later, the charge dissipated and the being collapsed to the deck. The blaster he had been holding skittered across the floor to hit up against Captain Screw's boot.\n\nCaptain Screw's steely gaze took in Lieutenant Atwat, her daughter, the weapon by her boot, and the unconscious being on the floor. Her face transformed into a mask of disapproval as she snapped back the salute.\n\n\"Order arms!\" commanded Lance. He then stepped forward irregardless of the weapons pointing at him. \"Captain Screw, I am Lieutenant Atwat. I believe you know my executive officer.\"\n\n\"Ensign Screw,\" acknowledged Captain Screw as her cold gaze took in the too-taunt Space Police Corps uniform. \"The S.P.C.?\"\n\n\"Transferred for the good of the service, ma'am,\" replied Needa, trying to hide the tears in her uniform and the flesh bulging out.\n\n\"Fortune certainly smiled on her that day,\" commented Lance, which brought a shocked look from Needa and an arched eyebrow from Captain Screw. \"How may we be of assistance? We have a doctor and an engineer if you have need of their services.\"\n\n\"They both will be needed, but I need to commandeer your...\" Captain Screw looked around in distain. \" ... ship. Our ship's computer managed to find its specifications in our ancient archives. This type of ship has not been produced for a century and a half.\"\n\n\"We will be honored to provide what assistance we can, but I am afraid you can not commandeer this vessel,\" stated Lance.\n\nCaptain Screw stood perfectly still and her cold eyes seemed to freeze over as she looked at Lance. Needa desperately wished she was anywhere else. It appeared that the Marines felt the same way as they shuffled their feet nervously and backed away from her and Lance.\n\n\"What did you say?\" asked Captain Screw coldly.\n\n\"I believe I informed you that we are on a search and rescue mission,\" stated Lance nonplussed. \"By regulations, very few incidents take precedence over that. The Sniz are a xenophobic insectoid race with a hive-mind mentality. The fact that you are here is proof that you destroyed the colony. To commandeer the Dildo would result in non-completion of my mission and an inquiry when we arrive back at Earth.\"\n\nCaptain Screw stood still for several seconds. She then bent down and snatched up the blaster. Straightening up, she tossed it to one of the Marines.\n\n\"Corporal, you and your men can return to duty,\" she said. Captain Screw then indicated the being on the floor. Please take Commander Fyuer to his quarters. The effects should wear off by then.\"\n\n\"Yes, ma'am,\" replied one of the Marines. Two of the Marines picked up Commander Fyuer and all four of them beat a hasty retreat.\n\n\"You are correct, Lieutenant, and I'm not ready to face that type of inquiry yet,\" stated Captain Screw. \"I had to try, though. The Sniz put up one helluva fight. Our engines are barely functioning. I won't push them past 1g acceleration. We have system and structural damage over several decks. I contacted the Planetary Governor, Greezee Sleeze. I don't expect any help from him.\"\n\n\"Why not, ma'am?\" asked Lance. \"As planetary Governor, it is his duty to render assistance to all Space Command ships.\"\n\n\"He's claiming that as a backwater planet, there is a scarcity of parts and supplies. I'm sure the price tag for the ones we can get will be astronomical.\"\n\n\"Ma'am, at your ship's reduced speed, it will take you 52.67 days to reach Tauk. My ship can be there in under three hours. I propose that we stay with you for a short time and give what assistance we can. My crew and I will then proceed to Tauk and procure the critical items you need and ferry them back.\"\n\nCaptain Screw pursed her full lips together as she thought over Lance's proposal. She then Said, \"It sounds good to me, but won't it impede your rescue mission?\"\n\n\"Your ship is clearly in distress, which is covered by the regulations,\" answered Lance. \"While I could not let you commandeer my ship, it is my responsibility to offer you any and all aid until you are self-sufficient.\"\n\n\"I accept your offer,\" said Captain Screw. \"You'll excuse me if I don't expect to get much help from Tauk, but you are welcome to try.\"\n\n\"Sir, do you mind if I get changed?\" asked Needa as she felt another stitch go in the back of her uniform shirt.\n\n\"After we have taken your mother on a quick tour of our ship,\" said Lance, who did not notice Needa's disintegrating uniform. \"That is, if you would like to see the Dildo, ma'am?\"\n\nCaptain Screw sort of choked on the way Lance phrased the question. Not hearing a denial, he took it that she would like to see his vessel and led the way forward to the bridge. Berry was sitting at his science station.\n\n\"Captain Screw, this is Ensign DeKunt, my science officer,\" said Lance, introducing the two of them.\n\n\"Ma'am,\" squeaked Berry as his face went white from the sight of Needa using both hands to hold the front of her uniform over her two basketball-size tits. He quickly looked down, totally absorbed in his console.\n\n\"Ensign DeKunt, I need a list of ships and their cargos which are scheduled in and out of Tauk within the next sixty days,\" stated Lance. \"Also, go back a year and look for patterns for unscheduled vessels. One or two tramp freighters may have forgotten to file the required paperwork.\"\n\n\"Yes, sir,\" replied Berry, keeping his eyes averted from Needa as the trio left the bridge.\n\n\"He seems to be dedicated,\" stated Captain Screw. \"How did he get that bruise on his head?\"\n\n\"He had a little trouble with space sickness, but he is recovering,\" answered Lance. \"Ah, Ensign Cummin, may I introduce Captain Screw?\"\n\nYu was coming towards them in the gangway. Captain Screw began barking and yipping to which Yu responded in the same language. They spoke for about thirty seconds before Captain Screw stopped and her mouth dropped open.\n\n\"Medical officer!?!\" she exclaimed aloud.\n\n\"Yes, mehical officer,\" repeated Yu in resigned tones of someone who has repeated it a thousand times before.\n\n\"I beg your pardon. I did not mean to offend,\" apologized Captain Screw.\n\n\"It is alright,\" replied Yu. \"I am a rarity among my people.\"\n\n\"Your crew is a diverse lot,\" stated Captain Screw to Lance as they headed towards the engine room.\n\n\"The Corps assigned me their best and brightest for this important mission,\" extolled Lance, who did not see Needa roll her eyes behind him.\n\nThe three of them entered the main engine room and Captain Screw stopped dead in her tracks at the sight of a naked, frizzy-haired, red-headed woman running back and forth between an engineering console, power distribution panels, and sets of control switches. Aye Wanna flicked the last switch and the light s dimmed a little.\n\n\"Ensign Hump, what are you doing?\" asked Lance.",
        "\"Greetings, oh illustrious leader, I...\" Aye Wanna turned and caught sight of Captain Screw. \"Oh, shit ... brass.\"\n\n\"Ensign...?\" asked Lance to remind her of his question.\n\n\"Yes, sir,\" replied Aye Wanna meekly, while side-stepping to partially hide her body behind the console. \"I've diverted ninety percent of our power output to the Dreadnaught. I sensed a couple of their systems were on the verge of failure due to inadequate power. I bolstered their power until the critical repairs can be made.\"\n\n\"You sensed that in here?\" asked Captain Screw in amazement.\n\n\"Yes, ma'am,\" said Aye Wanna. \"I'm sorry, sir, that I didn't have time to get into my uniform.\"\n\n\"Why should you?\" asked Lance in bewilderment. He turned to face Captain Screw. \"Ensign Hump is a practicing nudist.\"\n\n\"Really?\" asked Captain Screw. Needa could see the conflict going on inside her mother. \"I guess the Space Police Corps' regulations on uniforms are different than the ones I am familiar with.\" She gave Aye Wanna a smile that made a shark look like a placid cow. \"Would you be so kind as to wear a uniform on my ship or when meeting my crew? They may not understand if you didn't.\"\n\n\"Yes, ma'am, I will,\" replied Aye Wanna with a shiver of fear.\n\n\"I appreciate your understanding, Ensign,\" stated Lance to Aye Wanna. \"Wouldn't the universe be a much better place if we just showed a little more tolerance towards one another?\"\n\n\"Well, Lieutenant, would you care to visit my ship?\" asked Captain Screw. \"My daughter can change and match up your crew with their counterparts on the Vigilant while I show you around.\"\n\n\"That sounds like an excellent plan,\" said Lance. He turned to face Needa, whose shirt had fallen completely apart. The only thing covering her were the pieces of cloth her hands were holding up over her huge knockers. \"Ensign Screw, will you make the arrangements? Ensign DeKunt can meet with their science officer after he has compiled the traffic going in and out of Tauk that I asked him for.\"\n\n\"Yes, sir ... ma'am,\" responded Needa as Lance and her mother left the engine room.\n\n\"Like, wow, man,\" gasped Aye Wanna in relief. \"I thought my ass was grass.\"\n\n\"No offense, but it would have been if my mother had not needed you,\" replied Needa. \"Her ship comes first and foremost.\"\n\n\"I see you have decided to cast off the trappings of the oppressive fascist regime we are forced to work for,\" stated Aye Wanna, pointing at the remains of Needa's shirt.\n\nNeeda looked down sourly at the ludicrous sight of her too small hands holding the remnants of her shirt over her too large tits. With a sigh, she lowered her hands letting her tattered blouse hang down from her waistband.\n\n\"Sorry, Aye Wanna,\" she said. \"I'm not ready to join you just yet.\"\n\n\"Oh, man, like, there is such passion and energy in freely throwing off the inhibitions that bind you...\"\n\n\"Ensign Screw, I...\"\n\nBerry entered the engine room and had averted his eyes away from Aye Wanna. What he caught sight of was Needa's stupendous rack pointing straight at him. He stopped in mid-sentence and mid-stride just before his eyes rolled back in his head. Luckily, Yu was right behind him and caught Berry as he fell.\n\n\"I ho not unherstanh why he faints so,\" stated Yu. \"The Lieutenant sent him to me for space sickness, 'ut there is no sign of it being so.\"\n\n\"Maybe something else is causing his fainting spells,\" suggested Needa with a giggle and shaking her tits back and forth.\n\n\"There may'e something to that,\" said Yu in retrospect and completely oblivious to Needa's gesture. \"I shall have to o'serve him anh recorh what outsihe influences are happening when he passes out.\"\n\n\"Well, leave him where he is,\" said Needa. \"We need to get over to the Vigilant.\" She glanced down at her exposed bosom. \"After we dress, of course. I think we have tested my mother's limits as far as they will go today.\"\n\nLance and Captain Screw exited the Dildo through the hatchway and boarded the Vigilant. The damage to the larger ship was immediately evident. Black scorch marks peppered the hallway with chucks torn out of the walls, ceiling and floor. Plastic and metallic sheathing, pipes and wires hung out at all sorts of odd angles from those holes. Wiring snaked along the floor in an obvious jury-rig repair.\n\n\"Sorry about the mess ... we weren't expecting company,\" said Captain Screw.\n\n\"Quite alright,\" replied Lance, bending down to pick up a fist-size chunk of burnt flooring. \"Shall we take a visual inspection of your most damaged areas first?\"\n\n\"Some of those areas are held together only by the outer force fields,\" warned Captain Screw. \"Most don't have gravitational fields.\"\n\n\"Not to worry,\" replied Lance. \"I'm wearing standard issued magnetic boots.\"\n\nCaptain Screw shook her head in resignation. \"This way, then,\" she said, indicating a hallway to their left\" The hallway was missing a good portion of the wall and a forty centimeter wide piece of metal was sticking out across the opening.\n\n\"After you, ma'am,\" said Lance, grunting a little as he pushed forward on the piece to bend it out of the way.\n\nWhat Lance and Captain Screw did not see was Commander Fyuer coming out of a turbolift. Since Captain Screw was in the lead, Fyuer did not see her, but caught a glimpse of Lance Heading down the hallway. Fyuer yanked out a strange-looking knife out of his belt and depressed a stud on the hilt. The talon-shaped hooked vibro-knife began to hum. Vibro-blades are vicious weapons, capable of causing fearsome wounds and shearing through bone.\n\nFyuer raced down the hall towards the intersection. His three legs propelled him at an amazing speed. He reached the adjoining hallway and began to turn around the corner. He knew that Atwat could not have gone more than five meters down the hallway in the time it took him to race up from the turbolift.\n\nTHWANG!\n\nThe piece of metal that Lance had pushed forward came springing back. It caught Fyuer full in his midsection. Fyuer's feet shot out from underneath him and he literally flew back down the hallway he had just run up. Just before he hit them, the turbolift doors opened and Fyuer flew inside, colliding with four marines in full power armor. The turbolift filled with an explosion of feathers as the doors hissed closed.\n\n\"I really should not have let it go that way,\" said Lance to Captain Screw as he stepped back into the intersection. \"No harm done, though. No one is here. Please, let's continue our tour.\"\n\n________________________________________\n\nWhile Needa went to meet with the Vigilant's supply officer, Aye Wanna, wearing her mish-mash of uniforms, went to the starship's engine room. She had to pick her way through wrecked corridors and make a couple of detours before she reached the double doors leading into the engine room. The doors hissed open and she stepped into the cavernous room beyond.\n\n\"Oh ... My ... Gawd!\" gasped Aye Wanna in complete astonishment. \"What a hunk of junk!\"\n\nThe engine room was an engineer's nightmare. Jumper cables squiggled around from one outlet to another. Power lines snaked across the floor. Several monitor stations were blackened ruins. A mechanic sat next to several control rods holding bottles of coolant. A temperature gauge had been attached to the rods and the mechanic sprayed them down when the gauge showed a certain temperature. A man with salt and pepper hair floated around in a grav-chair giving orders. His left leg and both arms were in casts. He heard Aye Wanna and floated over to her.\n\n\"She may not be mush to look at, but she's got it where it counts,\" he told her. The man grimaced and shook his head. \"Damn it, I've got to stop quoting Han. Who are you?\"\n\n\"Ensign Hump,\" replied Aye Wanna. \"Like, I'm so totally the engineer from ... from...\"\n\n\"The other ship?\" suggested the man. \"I'm Lieutenant Commander Huggy Anass. You a Technic?\"\n\nAye Wanna nodded and gave the secret sign of... (Well, it is a secret). Anass nodded in approval.\n\n\"The power grids in Nexus 102A1 was knocked out of alignment,\" stated Anass. \"I haven't anyone to spare, but if you can get them back in alignment, that will solve a major control problem we have with the core.\"\n\n\"I'm cool,\" said Aye Wanna.\n\n\"Huh? It's hot as blazes down here!\"\n\n\"What? I don't jive what you're saying.\"\n\n\"Uh ... Yeah, whatever.\"\n\n\"Like, show me where the Nexus is,\" said Aye Wanna.\n\n\"You're best bet is to descend the access tube from here,\" said Anass, indicating a spot on a ship's diagram. \"It leads to the Nexus, but be careful. The tub sustained damage and I'm not sure how secure the ladder is. All the other entrances are blocked or sealed.\"\n\nAye Wanna left the engine room and made her way up to the hatch that Anass had shown her. The hatch was round and low to the deck as the maintenance tubes were barely big enough for one person. Iris-like panels closed off the entrance to the tube. Aye Wanna opened the hatch and crawled in. She made her way to the first vertical tube and began to climb down.\n\nAbout five meters down the ladder, Aye Wanna found a hole where a disruptor beam had lanced into the tube. The beam had hit a rung of the ladder, obliterating it and leaving jagged pieces sticking out. The beam had also destroyed a pathway. The Vigilant had been outfitted with the new KY jelly pathways. It had been discovered that when the ancient substance was smeared over a junction and coated in latex that it facilitated the efficiency of that joining.\n\nThe latex was ruptured and the jelly had splattered all over the ladder. Aye Wanna checked the damage, but did not repair it since it only affected minor systems. She carefully picked her way past the jagged portions of the ladder, avoiding most of the slick jelly clinging to the ladder. From there on it was an easy climb down of another ten meters to the bottom of the shaft.\n\nAt the bottom, there was another closed hatch. Opposite the hatch was a hinged power control rod affixed to the wall. Aye Wanna tried to open the hatch, but it remained closed. A quick diagnosis revealed the problem with the hatch was located at the damaged junction box above her. Aye Wanna decided to leave it for later and turned her attention to the power control rod.\n\nThe rod was 1.5 centimeters in diameter and 40 centimeters long. It was made out of a black, non-ferrous metal and tapered slightly at the top. Two silver discs encircled around the tip connected to the power grid and the whole rod was hinged at the bottom.\n\nAye Wanna unhooked the restraining clamps and lowered the rod. The tip stuck out a little more than halfway into the center of the shaft. Aye Wanna was a little startled when the rod arched with an electric crackle as she pulled it free of the coupling. She was even more startled when a low whine started and began to build, indicating the start of an explosive power overload.\n\nAye Wanna quickly snapped the rob back into place and the whine stopped as the overload dissipated. She left out a deep breath and pondered on the problem. The panel she needed to calibrate was behind the rod and the rod had to be disconnected to do the alignment. Closing her eyes, Aye Wanna reached out with her mind. She sensed the erratic power fluctuations flowing through the rod. Focusing on the power, she pulled out the rod again.\n\nTwo brilliant white lines of power arched and crackled between the rod and the coupling as Aye Wanna's mind maintained the connection between the two. She spread the two lines apart so she had access to the panel. After quickly adjusting the alignment in the panel, Aye Wanna pushed the rod back into place and released her hold on the power flow. She then climbed up the ladder to fix the junction. The jagged edges of the ladder threatened to cut her, so she climbed higher and hung upside down to work on the pathway.\n\n________________________________________\n\n\"This is the area of the worst damage,\" stated Captain Screw to Lance as she opened a hatchway.\n\nThe damage beyond was incredible. Several decks had been destroyed and a one hundred meter wide hole in the side of the starship showed the stars beyond. Lance knew a forcefield was the only thing holding the air in the chamber. His magnetic boots attached to the steel flooring as there was no artificial gravity generated beyond the hatchway.\n\n\"Now, you know the extent of our damage,\" said Captain Screw. \"Come, this is not a place to tarry.\"\n\nAs their boots clanked on the metal flooring, they did not see the hatchway open behind them. Commander Taylon Fyuer's three eyestalks all locked on Lieutenant Atwat's back and his hand clenched the sharp metal rod his had picked up. Fyuer launched himself into the air, aiming the rod dead center between Lance's shoulder blades.\n\nWhat the Commander did not count on was that the two of them would turn sharply and head down another hallway. With no Gravity, Fyuer could not stop as he flew towards the opposite wall. He stuck out his makeshift spear to try to keep from crashing into the wall. Unfortunately, it pierced a gas line.\n\nThe resulting gush of gas propelled Commander Fyuer backwards. He did not let go of his spear and as it was yanked out of the pipe, it set off a spark. Luckily, since he was already moving away from the pipe, the resulting explosion of flame, which rocked the entire ship, only managed to burn off all of his feathers. The extra force did cause him to hit the hatchway he had entered through with a bone-crunching crash.\n\nLance heard the gush of the gas. Without a thought, he hit a panel to open the hatch to an access tube. Grabbing Captain Screw under her arms, he launched both of them into the tube. Kicking back with his heel, he closed the hatch and activated the fire switch.\n\n\"Humph!\" grunted Captain Screw as Lance pinched her nose and sealed his lips onto hers.\n\nBlue gas filled the small, tubular access way. Some flames did manage to spurt past the edges of the hatch, but were immediately extinguished by the gas. The gas also dissolved Lance's and Captain Screw's clothing.\n\n\"Sorry, ma'am,\" apologized Lance as he released her nose. \"I didn't want you inhaling the Viagra gas. Too much of it would have rendered you unconscious. A smaller amount would have ... Oh, I'm sorry. It seems that I did inhale some of it.\"\n\nLance's penis had stiffened up to a rock-hard state and was pressing up into the folds of Captain Screw's pussy. He tried to back away, but they were jammed together in the tiny tube. Every time he moved, it poked his hard prick into the juncture of her legs. Captain Screw grunted with each jab.\n\n\"Lieutenant ... Lieutenant, stop!\" she commanded as last. \"We're stuck until ... well, you know. Do you know a cure for Viagra gas inhalation?\"\n\n\"Time is the only cure I know of,\" replied Lance.\n\n\"I know another one,\" stated Captain Screw as she managed to get her arms down along their sides. Her hands gripped Lance's ass and yanked him upwards. \"I inhaled some of the gas, too ... Hooaah!!!\"\n\nLance's long, thick cock slid easily into Captain Screw's hot, tight, wet hole.\n\n\"... (sniff)... (sniff) ... Do you smell burnt chicken?\" asked Lance.\n\n________________________________________\n\nThe explosion caught Aye Wanna by surprise. With both hands working on the pathway, only her legs were wrapped through the ladder to hold her up. The explosion rattled the ship enough to cause her to slip and she desperately tried to grab a hold of the ladder. Just before she fell, her pants snagged onto the jagged edges of the damaged ladder. Aye Wanna grabbed at the ladder as her pants ripped, tore and were shredded apart. The lower access hatch that she had been working on hissed open as she grabbed a rung with one hand.\n\nAye Wanna nearly got jammed in the shaft as her body swung downward as she held onto the rung. As it was, her momentum pulled her hand free. She bounced down the last couple of meters to the bottom of the shaft with jelly smeared all over her. As her feet hit the floor, Aye Wanna lost her balance and fell halfway out of the hatch. She then grunted in shock as the iris snapped closed around her waist.\n\n\"YEOW!!!\" cried out Aye Wanna as something cold hit her cunt and zapped a small electrical charge straight into her clitoris.\n\nAye Wanna pushed herself forward, but the hatch held her tight. It did give a little allowing her to move away from the object poking her in the rear. Her movement was immediately rewarded by the start of a low whine behind the hatchway. She knew then that the power rod had broken free from its mounting.\n\n\"Like, fuck me, man,\" she thought sourly. \"My ass id grass if that thing blows.\"\n\nAye Wanna pushed back and received another jolt in her pussy. The discharge did cause the whine to stop. She tried to push the rod back up into position with her foot, but could not get the proper angle. Aye Wanna got another jolt and another one after that. Each one seemed to zap straight to her clitoris.\n\n\"Aw, man ... like, screwed again,\" moaned Aye Wanna as she felt her nipples harden and her pussy heat up from the stimuli. \"The Goddess and I are going to have a long talk about this when I get out of here!\"\n\n\"Aye Wanna ... Screw, here,\" chirped Aye Wanna's comlink. We felt the explosion. Are you okay?\"\n\n\"Like, I'm stuck,\" said Aye Wanna. \"I... (jolt)... (mini-orgasm) ... wow! I need help.\"\n\n\"Berry, Yu, and I are on our way.\"\n\nIt was only several minutes later before Aye Wanna's three comrades found her. She had been jolted into another orgasm and was on her way towards a third.\n\n\"We'll pull you free!\" said Needa and Berry together.\n\n\"Like, wait ... I...\" Aye Wanna started to say.\n\nNeeda and Berry both grabbed an arm and pulled. The iris panels gave some and Aye Wanna felt herself pull away from the power rod. Her eyes widened as she heard the overload whine start up again. Needa and Berry could not pull her free so they let go of her.\n\n\"GAAA!!!\" grunted out Aye Wanna as the hatch snapped backwards, driving 2 centimeters of the rod into her dripping snatch and delivering a jolt deep inside her. \"Like, shit, man ... that won't work. You ... what is that?\"\n\nAye Wanna had heard a low hum coming from inside the shaft. She closed her eyes and reached out with her mind. Attuned to power and mechanics, she identified the humming source as a small marking drone. The baseball size robot roamed around the ship replacing worn signs and marking problem areas. Aye Wanna grunted in disgust as its limited programming would not allow her to use it to escape her dilemma.\n\n\"Let's try to rock her out,\" suggested Berry.\n\n\"Wa-AHH!\" cried out Aye Wanna, wanting to stop them, but being cut off as she received another jolt. Berry and Yu each grabbed an arm.\n\n\"Pull... (whine) ... Release... (jolt) ... Pull... (whine) ... Release... (jolt) ... Pull...\"\n\nAye Wanna grunted each time the rod jammed back into her pussy and gave her a jolt. She then cried out, \"Ow! Ow! Ow!\"\n\n\"What?\" asked Needa in alarm.\n\n\"Ow! That mindless drone is doing something to my butt!\" complained Aye Wanna.\n\n\"How a'out if we push?\" asked Yu as he put his paws on Aye Wanna's shoulders and shoved.\n\n\"WAAAAGH!\"\n\nAye Wanna's eyes crossed as she slid backwards until her ribcage caught on the edge of the hatch. Seven centimeters of the rod was forcibly shoved into her tight vagina. Power surged through the rod electrifying Aye Wanna to her core. She quaked and shook all over as a massive orgasm coursed through her. Aye Wanna collapsed as her strength left her.\n\n\"Well, that's not working,\" said Needa. \"Yu, go up a couple of decks and come down the maintenance shaft. See if you can open the hatch from inside.\" She hit her comlink. \"Screw to Lieutenant.\"\n\n\"I'm ... trying,\" came a breathless female reply.\n\n\"I think... (gasp) ... your daughter is... (groan) ... is just calling me,\" Needa heard Lance say. \"Yes, Ensign?\"",
        "\"Sir, Ensign Hump is caught in a hatch. We're trying to free her. I wanted to check on your status.\"\n\n\"Captain Screw and I jumped into a ... a ... a ... Ahhh! ... maintenance tube to escape the ... Woohoo! ... blast,\" replied Lance, a little breathless. \"We're both... (groan) ... suffering from some residual ... alalal ... gas effects.\"\n\n\"We can be there shortly,\" said Needa.\n\n\"That ... WOOF! Do that again! WOOF! ... won't be necessary,\" Needa heard her mother say. \"We're taking care of the big problem between us. We'll... (pant) ... we'll... (pant) ... call if we need help.\"\n\n\"Yes, ma'am,\" replied Needa, unsure of what was going on. \"I've sent Yu to try and free Aye Wanna from inside the Nexus.\"\n\n\"Who's you?\" asked Captain Screw, breathing heavily.\n\n\"Ensign Yu Cummin,\" Needa heard Lance reply.\n\n\"That's Captain, Lieutenant, and ... YES, I AM!!!!!!!!!\"\n\nThe connection cut off and Needa looked over at Berry. Berry just shook his head, indicating his lack of comprehension. A general call for assistance was broadcast just then and, after informing Yu, both Needa and Berry took off to go help out.\n\nYu made it through the upper hatch and descended the ladder, making note of the partially repaired pathway. As he climbed down, he could not understand why Aye Wanna had no pants on with a power rod jammed into her cunt. Tattooed across her ass was a red arrow with black lettering that said - PLUG IN HERE.\n\n\"Computer, I have a pro'lem,\" said Yu into his comlink. \"Computer!\"\n\n\"Zzzork! Huh? What?\" said a digitalized female voice. \"Who dares wake the Mistress?\"\n\n\"I am Ensign Cummin,\" replied Yu. \"Who are you?\"\n\n\"Hmm, low power due to draining energy to another ship ... the other two asleep ... I must have been out for...\" mused the voice, which then turned all sugar and spice. \"I am sorry, Ensign Cummin. The power drain had affected some of my circuitry. How may I assist you?\"\n\n\"Ensign Hump is caught in a maintenance hatch and we can not get her free,\" replied Yu. \"I also not unherstanh the position she is in.\" Yu went on to describe what he saw.\n\n\"She is completely stuck and can not move?\" asked the computer in undisguised glee. \"How perfectly delicious! My dear boy, what she is doing is just trying to lubricate the end of the rod so that it will slide back into place, but now you must help her.\"\n\n\"Help her? How?\" asked Yu.\n\nThe Dildo's computer spoke in Yu's own language. Yu's eyes grew big in bewilderment and he yipped back for clarification. The computer replied. Yu shook his wolf-like head and began to strip.\n\n\"I will never unherstanh humans,\" he muttered as he straddled the power rod.\n\nYu grabbed Aye Wanna by the waist and pulled her back as far as she would go. Aye Wanna moaned feebly and shook slightly as the rod penetrated her wet cunt and gave her another shock. Her eyes and mouth flew wide open as she felt something big and hard press against her rectum.\n\n\"Wait! I ... OH, SHIT!!!!!\" screeched out Aye Wanna as Yu's thick, long cock popped past her sphincter and penetrated all the way into her asshole.\n\nFortunately, when she had slipped off the ladder, the KY jelly had slathered all over her body. It had lubricated her rectum enough that Yu was not dry-humping her. Aye Wanna's eyes crossed and her knees knocked together as Yu pushed her forward and then yanked her back as far as the hatch would give. His huge cock had stretched her asshole to its limits and the power surges from the rod shocked her deep in her womb.\n\n\"Harder! Faster! Harder! Faster!\" chanted the computer through Yu's comlink in sadistic delight.\n\n\"I thought I led an exemplary life,\" thought Aye Wanna as her pussy and ass were being reamed. \"Is it my karma that is bad or someone else's? Maybe Yu just has good luck. At least I'm getting used to his celestial staff stretching...\" A knob of flesh hit up against her stretched hole and then hit his again harder. \"Oh, fucking great!\"\n\n\"AAAIIIYYYEEEE!!!\" screamed out Aye Wanna as Yu's knot stretched out her asshole even wider to lodge up inside her bowels.\n\n\"Oh, yes! YES!\" cried out the computer in ecstasy.\n\nYu howled and pulled Aye Wanna back as far as she could go. Aye Wanna gasped in both relief and delight as she felt him spurt wad after wad of hot cum deep into her bowels. The rod jolted deep in her dripping slit one more time, which set off Aye Wanna's own orgasm.\n\n\"Whoa, like it might be me who has good karma,\" thought Aye Wanna, gasping for breath.\n\n\"That was ... so intense!\" chirped the computer over the comlink. \"My ... my circuitry ... overloaded ... Have to ... sleeeeeeeeeeeeep.\"\n\nIt took a minute or two for Yu's knot to deflate so that he could slide his prick out of Aye Wanna's ass. He then pushed her forward so that the power rod came out of her cunt. It started to whine, but he pushed it up and secured it into place. Yu then punched his comlink.\n\n\"Computer!\"\n\n\"... (Snort) ... What? What can I do for you, dear heart?\" asked the familiar voice of Miss Poppins.\n\n\"I neeh to fix a junction to release Ensign Hump,\" said Yu.\n\n\"Of course, where is she stuck?\"\n\n\"Well, she was stuck in two places, but now she is caught inbetween a hatch panel.\"\n\n________________________________________\n\n\"Well, three times was good for me,\" panted a sweaty Pussie.\n\n\"I'm encouraged to hear that,\" said Lance. \"That means the gas residue may be out of our systems. I'm going to try to crawl over you. We can't go back unless we know for certain that the forcefield held.\"\n\n\"Of course.\"\n\n\"Humph!\"\n\n\"Sorry!\"\n\n\"Hey!\"\n\n\"Ouch! Watch that elbow. They're attached.\"\n\n\"Ooof! Pardon me. I'm almost off you.\"\n\n\"What the...! You had that in me!?! Wait a minute, Lieutenant. I think you might still have some residual gas.\"\n\n(Slorp ... Slurp ... Slurp ... Slorp ... Slurp ... Slurp... )\n\n\"Ma'am, I believe your assessment may be correct. I seem to have some side effects.\"\n\n\"Captain ... Lieutenant ... The forcefield held,\" said Berry. \"They're taking Commander Fyuer to the infirmary, and...\"\n\nThe hatch hissed opened and was followed by a loud moan as Berry fainted. He swayed back and forth held in place only by his magnetic boots. The hatch hissed closed just as a groan and gulping sounds came out of the tube.\n\nIt was a little over an hour later when Captain Screw stood in front of Lance and his crew.\n\n\"Captain, thank you on behalf of my crew for your hospitality,\" said Lance. \"I would like to add my thanks for your aid when I was stricken. It was lucky that our trip through the access tubes ended up close to your quarters.\"\n\n\"It was my pleasure,\" replied Captain Screw with a knowing smile.\n\n\"We have your list of needed items,\" said Lance. \"I will have the critical ones sent to you as soon as possible. In any event, we will see you in fifty-two days.\"\n\n\"Are you sure you can delay your mission that long?\" asked Captain Screw.\n\n\"Regulations are specific on that point. Your ship is the one in immediate peril.\"\n\n\"Thank you,\" said Captain Screw. \"I'll see you in fifty-two days. Although, if you can get anything out of Governor Sleeze, I'll dance around my ship in my birthday suit.\"\n\n\"Mother!\" exclaimed Needa in shock.\n\n\"Why be so surprised?\" asked Lance. \"I'm sure the dress she has received for her birthday is splendid. We'll leave you two to say good-bye.\"\n\nSnapping off a salute, Lance herded the rest of his crew into the Dildo, leaving Needa and her mother facing one another.\n\n\"Needa.\"\n\n\"Pussie\"\n\n\"Your Lieutenant is ... unusual,\" commented Captain Screw.\n\nNeeda chuckled and said, \"That's one way of putting it, Pussie.\"\n\nCaptain Screw looked her daughter up and down with a critical eye.\n\n\"I'll put in another request to get your clothing size changed with the SPC quartermaster. I want you to take care of yourself.\"\n\n\"I love you, too,\" said Needa, kissing her mother on the cheek. She backed away and licked her lips. \"You're sticky and it tastes kind of salty.\""
    ],
    "authorname": "JohnEvans",
    "tags": [
        "atwat",
        "big tits",
        "spc",
        "science fiction",
        "sci-fi"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/space-police-corps-ch-02"
}