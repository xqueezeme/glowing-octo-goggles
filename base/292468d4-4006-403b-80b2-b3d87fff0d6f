{
    "title": "Surefoot 20: One Man's Eden...",
    "pages": [
        "\"Captain's Log, Stardate 47318.66, USS Surefoot-A, Captain Esek Hrelle, Commanding: following refitting of the patrol vessels on the Federation-Cardassian border, we are now proceeding to the Demilitarised Zone, a less-rigid boundary between our respective governments, where Federation and Cardassian colonies that refused to leave try to get along - with little success. \n\nSpecifically, we are here to provide an escort for a transport ship, the Valley Forge, which is currently evacuating a group of colonists as their planetoid has become unalterably polluted from weapons employed years before during the conflict, and they need to move to a new home. The orders received weren't... very specific, but reading between the lines, I can guess that the colonists weren't too keen to leave, or to have help from Starfleet.\" \n\n* \n\n\"Can you blame them?\" Kami asked, relishing the warmth from the contents of her cup as she held it at her fingertips, as well as the scent of the tea. \"From what I understand, Eden was one of the oldest colonies in this sector, almost a hundred years old in fact. They ventured out here decades before Starfleet even officially explored this part of the Quadrant. I'm sure they never expected to see us again. And then to be caught up in a war they wanted nothing to do with.\" \n\n\"They were short-sighted.\" Commander T'Varik allowed her own cup of Vulcan mint tea to sit before her, her mind calculating the optimum time when it was cool enough to comfortably drink. \"It was inevitable that there would be expansion by the Federation into this sector of space, and that they would encounter Starfleet-\" She stopped and glanced to her left. \"Please cease.\" \n\nBeside her, Chief of Security Lt C'Rash stopped sending her tail up to touch the Vulcan's thighs, a slight smirk on her black-furred Caitian face the only visible sign of her act of mischief. \"Well, they'll be happy for our presence on this trip; activity in the Zone, from both Maquis, Cardassians and non-aligned pirates has increased, and they'll want to hang onto what little they're taking with them to their new home.\" \n\n\"'Eden',\" Hrelle mouthed, not waiting for his extra-sweet cappuccino to cool before bringing it to his muzzle. He sipped and returned the cup to the table - oblivious to the dot of foam on the tip of his snout. \"They must be human. Humans love that myth. Living in a garden forever, eating rabbit food. Some Paradise.\" \n\n\"Based on the limited manifest provided, they are predominantly human,\" T'Varik clarified, frowning at her Caitian captain's nose. \"Sir, you have-\" \n\nBut Kami raised a furred hand to cut off the First Officer, leaning closer to her husband - and licking the tip of his nose, before settling down again. \n\n\"That is not very hygienic,\" T'Varik noted dryly. \n\n\"But it does look like fun,\" C'Rash flirted, looking to the Vulcan. \"Next time, you should get a cappuccino, too, so I can give you the same treatment.\" \n\nT'Varik lifted up her tea, not engaging in eye contact with her new friend and confidante. \"There is not enough time before our rendezvous with the Valley Forge to list all the reasons why that will not happen.\" \n\n\"Get a room, you two,\" Hrelle quipped, purring at Kami as he stared into her deep, wonderful eyes. He had Paradise right here. \n\n* \n\nCrew Mess Hall: \n\n\"You are... Dizzy?\" \n\nThe slim young woman with Asian features and ponytailed sable hair smiled. \"Izzy. Short for Isabelle.\" \n\nKitirik's wattles flushed blue beneath his narrow reptilian chin. \"Oh! Forgive me, please, Respected Squad Leader, I misheard.\" \n\nThe smile became a grin, as she reached across the table with her hand. \"That's okay, you can call me Dizzy. No one else, though.\" \n\nKit rose from his seat, accepting the hand. \"I would be honoured, Respected- I mean, Dizzy.\" \n\nAlpha Squad Leader Sasha Hrelle set her tray down and sat beside Delta Squad's latest leader, newly arrived after the long-overdue departure of her predecessor, Ledit. \"Kit, let go of her hand, Ensign Zhou doesn't have much time to eat - and neither do you.\" \n\n\"Yes! Yes, Good Friend Sasha.\" Kit sat down, returning to his plate of roasted giant moth. \n\nSasha smiled, both at Izzy's reaction to Kit's ebullience - and to the Qarari cadet's insectivorous diet. \"Tuck in, we still have to complete your flight and weapons certifications, put you through the standard medical check, introduce you to the Counselor, bore you with the safety briefings on transporter use, EVA, Jeffries Tube access, Evacuation Protocols-\" \n\n\"It's all go onboard with you here, isn't it?\" the girl asked, her Northern English accent strong, with just a hint of the sound of being overwhelmed. \n\n\"That's life in the Advanced Work Experience program,\" noted Giles Arrington, Beta Squad Leader and Sasha's boyfriend, as he sat beside her. \"Must have been a shock for you, accepting the appointment and having to race out here to the Cardassian border at a moment's notice.\" \n\n\"It was,\" she admitted, tucking into a sausage sandwich. \"More than it should have been.\" After a bite and a swallow, she continued, \"I grew up in space, both parents in Starfleet Tactical, never onboard any one ship for long before getting another assignment. The longest I've ever stayed in one place has been the last three years at the Academy on Earth. I think I lost my space legs.\" \n\nOn the other side of the table, the Bolian Neraxis Nemm looked up. \"Hey, Furball, that was your cue to make some remark about helping Ensign Zhou find them.\" \n\nMeow Rrori, the snow-furred Caitian Flight Specialist for Alpha Squad, just growled and stared blankly at his breakfast. \n\n\"What's wrong with him?\" Giles asked. \n\n\"He was up all night again,\" Sasha replied, smirking. \n\n\"Doing what, studying?\" Zhou enquired affably. \"Perhaps I can give you a hand?\" \n\nNeraxis chuckled, her bald blue head brightening. \"What he studies at night, he's been studying all his life. And one hand should be enough.\" \n\nZhou frowned. \"I don't get it.\" \n\nAt the far end of the table, Alpha Squad's Medic Eydiir Daughter-of-Kaas, a tall, dark-skinned Capellan, never looked up from her own meal as she explained in her typical glib manner, \"He self-pleasures.\" \n\n\"More than anyone else in the Quadrant,\" Sasha added, grinning. \n\nZhou's face flushed, as she stammered, \"Oh, uh, wow - I mean, uh-\" \n\nNow Rrori responded, looking to the new arrival and replying in a surly voice, \"These primates exaggerate, of course.\" \n\n\"We do not,\" Eydiir countered. \"Two to three times is statistically too much.\" \n\n\"I am in heat,\" he explained. \"Accentuated by the Counselor's pheromones during her pregnancy. \" \n\n\"Oh.\" Zhou seemed to want to make a show of being insouciant about the sex talk with crewmates she had only just met. \"Well, two or three times a week is a little-\" \n\n\"A night,\" Neraxis corrected. \n\n\"WHAT?\" Zhou gazed in astonishment at the Caitian male. \"How can you still walk?\" \n\nRrori ground his teeth at the laughter from the others, but recovered quickly, \"Superior Caitian stamina, I can assure you. And unlike the prurience you see with certain humanoid races, Caitians are quite open about the subject of self-gratification - especially when it is the only means of relief available, in the absence of willing partners.\" \n\n\"It is not the only means,\" Eydiir amended. \"I can provide you with hormonal suppressants.\" \n\n\"Or we can just get you spayed?\" Neraxis suggested. \n\n\"No willing partners?\" Zhou echoed, smiling. \"That seems difficult to believe, for someone with your looks.\" \n\n\"Yes!\" he agreed readily. \"I am quite disappointed at my low success rate since boarding the Surefoot. Although many have had the good taste to show interest, I have had relatively few conquests.\" \n\nZhou nodded at that, before suggesting, \"It might be a good start if you didn't refer to women as 'conquests'.\" \n\n\"I still think you should get spayed,\" Neraxis joked. \n\nRrori looked to her. \"You and Jonas are at it like Argelians these days.\" Then he focused on Sasha. \"Same with you and Giles.\" Finally he focused on Eydiir. \"And then there's you and Falok.\" \n\nZhou looked to Eydiir. \"You and Ensign Falok are dating?\" \n\nThe Capellan woman seemed reluctant to admit anything, but recognised a superior was technically asking her a question, and responded with, \"We are spending time together, on an exclusive basis. The level of our intimacy is our own business.\" \n\n\"Of course, of course.\" \n\n\"Nevertheless,\" Rrori continued, recapturing their attention once again, \"It is deplorable that every member of my squad is having sex but me! Simply unacceptable! I must seem inadequate to others, laughable-\" \n\n\"Rrori,\" Sasha cut in. \n\nBut he continued his rant. \"The butt of everyone's jokes, pathetic and unworthy-\" \n\n\"Rrori!\" Sasha snapped. \n\nHe looked to her - but she was looking at Kit, sitting beside him, who was now just staring at his plate. \n\nThen Rrori understood, and felt himself blush under his fur as he realised the extent of his faux pas. \"My friend, I did not mean to imply that you-\" \n\n\"Yes, Friend Rrori, you did,\" Kit cut in with uncharacteristic curtness, focusing instead on a bemused-looking Zhou, though it was obvious that he was speaking to everyone in earshot. \"My race does not engage in sexual activity for pleasure, only reproduction. Individuals of certain sexually-driven races often see this as something to be pitied. \n\nBut it shouldn't be. There is an ineffably great amount of time, thought, effort, art, anticipation, disappointment, pain, heartache and suffering given by other races to what amounts to only a few seconds of physical pleasure - something one can duplicate with a satisfying bowel movement.\" \n\n\"It's a lot more than that, Kit,\" Giles pointed out. \"It's also about intimacy, love-\" \n\n\"Not always, Good Friend Giles, though many races seem unable or unwilling to grasp the distinction. To their detriment.\" He rose to his feet. \"It was a pleasure to meet you, Friend Dizzy. Please excuse me. I wish to be somewhere else now.\" \n\nHe departed, leaving behind his half-finished breakfast. \n\n\"Wow,\" Neraxis breathed out. \"That was tense. I've never seen him so angry.\" \n\n\"That was angry?\" Zhou asked, looking to Sasha. \n\nThe other woman nodded. \"For Kit, yes.\" She rose up enough to reach across the table and smack Rrori loudly across the snout. \"Go, you stupid kussik! Do the right thing!\" \n\nThe Caitian male growled - but rose and followed Kit out the door. \n\n\"Did you just assault a fellow cadet?\" Zhou asked, thoroughly confused. \n\nSasha returned to her omelet. \"Hmm? Oh, that. The females of his clan gave me permission to keep him in line.\" She left it at that. \n\nZhou looked to the remainder of Alpha Squad, until Neraxis offered, \"We do things differently here than at the Academy.\" Then she eyed the abandoned trays. \"Anyone want to split a half-finished shuris meat pie and giant moth?\" \n\n* \n\nBridge: \n\nHrelle sat in his command chair and regarded the giant vessel on the main viewscreen. The Valley Forge was long, much longer than even the new Sovereign-class starships, with an old-fashioned framework like some cub's climbing tower in a playground, wrapped around a central rectangular hull. \n\nBut of particular interest was a set of eight giant geodesic green domes mounted around the aft section of the Valley Forge, just in front of the main drives. \"What are those? Fuel pods? Storage facilities?\" \n\n\"Biodomes, Captain,\" Second Officer Lt Neheru reported from the Ops Station behind Hrelle. The Kelpien's gaunt, apricot-coloured noseless face creased as he continued to peruse the readings from his station. \"When the pollution from the Cardassian weapons began irrevocably damaging Eden's biosphere and evacuation became inevitable, the Edenists were determined to save as many of the various environments as they could: forests, jungles, tundra and the like. \n\nWhen the time for evacuation came, the domes were lifted up by tractor beams to the Valley Forge, to ultimately be replanted at their new location. And...\" He paused to read some more. \"There appear to be small communities in most of them.\" \n\n\"The Edenists are living in them?\" \n\n\"The Edenist society is pastoral,\" T'Varik, standing beside Neheru, reminded him. \"Rejecting technology for a more primitive existence.\" \n\nHrelle smirked. \"Not all technology. Hail them.\" \n\n\"Sir, they're hailing us, on Audio.\" \n\n\"Let's hear it.\" \n\nHrelle settled back in his seat - then started at the loud chants that filled the Bridge. \"-Herbert it's No Go! Tell Herbert It's No Go! Tell Herbert It's No Go!\" \n\nHrelle turned in his chair and glanced up at an equally-bemused T'Varik, before finally speaking up. \"Excuse me? Valley Forge, this is Captain Hrelle of the Surefoot. We're-\" \n\n\"Tell Herbert It's No Go!\" \n\n\"We're here to escort you out of the DMZ,\" Hrelle continued, mentally counting the number of voices leading the chants: about twenty, young people mostly. \n\n\"Tell Herbert It's No Go!\" \n\nLouder now, Hrelle asked, \"Are there any grown-ups there I can talk to, please?\" \n\nThe chanting stopped. Seconds later, a gruff, older male's voice offered, \"Captain Hrelle, this is Captain Bakunin of the Valley Forge. I apologise for that; some of the Edenists heard that Starfleet would be assisting us, and they staged a sit-in on my Bridge.\" \n\nHrelle glanced up as Kami entered and stood by his side. \"A what?\" \n\nShe looked at him and mouthed: A protest. \n\nSuddenly, a younger female voice broke in. \"Tell Herbert It's No Go! We reject your militancy, your aggression! We will not break bread with baby killers!\" \n\nHrelle bristled, and his voice was taut as he responded, \"Young lady, I can assure you that I have never killed a baby, nor has anyone else onboard my ship. We are here only to provide you with protection-\" \n\n\"We don't need protection, Baby Killer! We are peaceful! When you are peaceful to the Universe, the Universe will be peaceful to you!\" \n\nHrelle rolled his eyes. \"I said I was not a baby killer, young lady. And we didn't come here to debate pacifist politics. Captain Bakunin, we'll run parallel with you along the pre-agreed route, matching your own Warp 4. We'll also need to run the usual security and medical checks of your crew and your... passengers.\" \n\n\"Of course, Captain-\" Bakunin started to reply. \n\nBut then the girl's voice returned. \"No Baby Killers polluting our space-\" \n\n\"I'M NOT A BABY KILLER!\" Hrelle snapped. \n\nHe stopped, aware of Kami and everyone else on the Bridge looking at him now, before continuing in a more-controlled voice again. \"Captain Bakunin, to continue with what I was saying... normally we would just scan your vessel and be done with it, but we're a training vessel with cadets, and given the time it'll take to lead you out out of the DMZ, I was hoping you'll allow us to send cadet teams over instead? I promise they'll not interfere with your normal operations.\" \n\n\"Of course, Captain,\" Bakunin replied, sounding both apologetic... and afraid of upsetting Hrelle. \"Whatever you want.\" \n\n\"My Chief of Security will be in touch with you shortly with the details. Surefoot out.\" He rose to his feet. \"You have the Bridge, T'Varik, I'll be in my Ready Room, working. I don't wish to be disturbed by anyone.\" He ignored his wife as he left. \n\nHe wasn't in the room a minute before Kami entered, waddling a little in her pregnant state. He was standing by his window, staring out at the Valley Forge, knowing who it was by scent without having to turn to face her. \"I thought I was pretty clear about not being disturbed.\" \n\n\"You were, and it's simply adorable that you think that's going to stop me after all this time.\" She walked to him, slipping an arm around his, and entwining their tails together. \"Calmed down some?\" \n\n\"I was always calm,\" he lied. \n\n\"Oh, of course. You're like a furry Buddha, a fat-tailed Surak.\" She sighed. \"You're tense. Everyone is, our workload has been considerable, with these new assignments and the cadets in their final Academy year; the stress levels are high.\" \n\nHis gaze focused on a collection of stars in the space about the other ship, imagined forming new constellations from them. \"Tell Herbert It's No Go. What's a Herbert, anyway?\" \n\n\"Old slang, from a hundred years ago when the Edenist Movement first rose. It refers to a minor bureaucrat notorious for his rigid patterns of thought.\" \n\nHrelle nodded at that. \"Well... I'd ask you to make sure I don't go rigid, but-\" \n\n\"I can guess the rest of that, thanks.\" \n\nHis expression sobered again. \"I'm not a baby killer.\" \n\n\"I know that, Esek. So does everyone else.\" \n\n\"Not everyone.\" \n\n\"A few misguided individuals, out of trillions in the Federation. The vast majority knows Starfleet is bound by principles of peace, using aggression only as a last resort; the organisation couldn't have survived in its current form for as long as it has, without that support. But there will always be people who only see our phasers and torpedoes and uniforms, and lump us under the same banner as the Romulans or the Breen.\" \n\nHe nodded. \"And we hardly encounter those people in our daily lives. We're always around other members of Starfleet, or their families or support systems. Who knows how many young people out there think the same thing as Little Miss Bigmouth?\" He leaned forward, tapping his forehead against the window. \"And would you blame them? I get labelled aggressive, and respond aggressively. Nice one. How pathetic is that?\" He was tensing again. \n\nKami responded by uncurling her arm from his, guiding his hand to her belly, and letting him unfold his furry fingers to gently clasp the bump, feeling their child react to the familiar touch. \n\nHrelle felt Misha's heartbeat, and felt himself calm down in response. \n\n\"Oh look,\" Kami noted softly. \"Here's one young person who doesn't think you're a baby killer.\" \n\nHe nodded gratefully - just as his combadge chirped. \"Captain, apologies, I acknowledge that you did not wish to be disturbed, but the Counselor advised us to ignore that.\" \n\nHe smirked. \"Of course she did. What is it?\" \n\n\"Security teams are being organised for beam-over to the Valley Forge. And the Edenist's representative, a Mr Freeman Lowell, has contacted us, inviting you to visit, and to give him the opportunity to thank you personally for our assistance.\" \n\n\"Thank you, T'Varik. Proceed with the inspections, and inform Mr Lowell I'll beam over shortly.\" Then he let his hand drifted around to Kami's rear, squeezing her right cheek through her uniform. At her look, he asked innocently, \"What?\" \n\nShe rolled her eyes. But let his hand stay where it was. \n\n* \n\nSS Valley Forge, Biodome 2: \n\nHrelle and Kami materialised onto a slope surrounded by a rich, verdant, vibrant forest, reminding Hrelle of the Pacific Northwest back on Earth, or the Shirekeen Provinces on Cait: tall, black trees rose up in tight, narrow clumps, sheltered around the roots by bushes, vines, moss, and tall, drooping flower stalks. The air was filled with the scents and sounds of life, and it was only when he looked straight up, to see the huge dome with lights mounted at connecting points on the lattice framework, that the illusion of being on an actual planet's surface was broken. \"Wow.\" \n\n\"Wow indeed,\" Kami agreed, taking his hand in hers as they descended the slope, her tail swishing happily against knee-high ferns, shaking free more scents. \"This puts our Arboretum on the ship to shame. Even the Holodeck programs aren't as good as the real thing.\" \n\nHe made a sound of agreement, drinking in all the sensory wash. They hadn't been on a planet's surface since their visit to Cait, many months ago. It instilled such an air of tranquillity in him, that it was almost shocking in itself. ",
        "\"Hello!\" \n\nThe Caitians descended the slope, letting their boots sink into the soft, moist earth beneath them as they entered a large clearing near a set of doors built into the side of the dome. There, a thin, elderly, pale-skinned human male with ash-grey hair and moustache and an oatmeal-coloured robe was kneeling, tending to a small tree, surrounded by two metre-high robot drones in primary colours with manipulator arms mounted on their fronts. \n\nNow he rose, wiped his hands on his robe and approached. \"Freeman Lowell. Welcome to Eden - or at least, what's left of it.\" \n\nHrelle accepted his hand. \"Captain Hrelle. And this is my wife and Counselor, Kami.\" \n\nLowell smiled back, grinning as he regarded Kami. \"You are... Radiant! Pure Nova! You are Life Itself!\" \n\nShe grinned back. \"Thanks - it makes the cramps and nocturia worthwhile to know I'm radiant.\" She glanced teasingly at her husband. \"You never say anything like that to me.\" \n\n\"I did the important part, getting you pregnant.\" He focused on the human. \"But it's nice to get a greeting that doesn't involve labelling me a Baby Killer.\" \n\nLowell nodded, looking subdued and regretful. \"Yeah, man, I heard about that. Sorry, my little girl Laura, like all of her generation, grew up on Eden knowing no other place except the stories told them by their grandparents. They're still bitter about having to leave for another home.\" \n\n\"Well, that's understandable, though we'd appreciate it if you could keep them under control.\" \n\nLowell smiled. \"No, man, it doesn't work like that with us. I'm not a leader, just a representative. We all make decisions together; that's how we get things done.\" \n\n\"Do you get anything done?\" \n\nLowell held out his arms. \"We managed to secure a few precious slivers of the ineffably beautiful life from our home, as well as transport to a new world, where they will thrive once again.\" He looked back at the drones. \"Huey! Dewey! Put those tools away, we're done for today.\" \n\nHrelle nodded. \"I heard that you Edenists reject all technology, Mr Lowell. And yet you're using a starship to find a new home, and use robots for manual work.\" \n\n\"We try to stay as technology-free as possible,\" Lowell clarified. \"But no, I'm not so blind as to not see the contradictions - nor am I so blind as to not see people who are here to help us, not hurt us. Captain, I'd like to invite you and your crew to visit us, our biodomes and our people. Take off your boots - or anything else, really - and relax, get to know us and our way of life. You could learn from us... and maybe we can learn from you?\" \n\n\"That's a splendid idea,\" Kami replied first, looking to Hrelle. \"The cadets and crew could use a break after the last few weeks, especially given what we will be expecting in the coming months.\" \n\nHrelle hesitated, and then asked himself why. Not finding any answers, he simply replied, \"Thank you, Mr Lowell.\" \n\nThen his hearing picked up the sounds of footfalls approaching, and looked to a nearby archway leading out of the biodome, as a group of young people of various races, but all wearing colourful, flowing clothes entered, led by a young human female with dirty-blonde hair and a scent similar to Lowell's. She glared at the visitors with undisguised disgust. \"I knew it! I knew they would invade us! They'll conscript us into their Death Armies!\" \n\nLowell looked to her wearily. \"Laura, they're not like that...\" \n\nShe ignored him, striding up to the Caitians, her face a fierce mask. \"Tell Herbert It's No Go! Tell Herbert It's No Go!\" \n\nHrelle instinctively drew Kami behind him for protection, his hackles rising. \"Listen, young lady-\" \n\nBut then Kami stepped around and pushed him behind her, stepping forward, holding up her hands and forming a circle with her slender, furred fingers, loudly declaring, \"One.\" \n\nThat visibly stunned the girl and her friends, Laura slowly, almost reluctantly returning the gesture, acting as if she was expecting it to be a trick of some sort. \"We are One.\" \n\n\"One is the Beginning.\" Kami lowered her hands. \n\n\"Herberts aren't One,\" a woman in the group said. \n\n\"I am not Herbert,\" Kami replied simply, setting her hands onto her belly. \"And neither is my mate. We are Givers of Life, as you can see, not Takers. And my baby does not need to feel your hostility, your negative waves. They are poison to us.\" \n\n\"She's right,\" Lowell agreed, drawing closer and glaring at his petulant daughter. \"They came in Peace, with no weapons on them. You and your friends are the ones who marched in here Banging The Drum. Rebalance.\" He looked to the rest. \"All of you. Your spirits are strong, and that is good, for we will need that strength when we reach New Eden. But it is not needed now, not with people who Reach.\" \n\nThat seemed to placate Laura and the rest, albeit grudgingly, prompting the young girl to add, \"We will not welcome Baby Killers.\" \n\nKami reached behind her, touching Hrelle's arm as he reacted to the insult, and countered with, \"Will you welcome Seekers of Wisdom and Enlightenment? Our people would benefit from a few hours among the Living Things, and among you, learning from you and your ways. Unless, of course, you would be Herberts and deny others that opportunity?\" \n\nLaura scowled. \"We are not Herberts! We Reach.\" \n\nLowell smiled at the apparent agreement, holding out his arms as if to encompass them all. \"Tell everyone we'll be having visitors.\" Then he glanced at Hrelle. \"They won't bring weapons, will they?\" \n\n\"What? No, no, of course not.\" \n\nLowell nodded, and began shooing the young people off, before returning to the Starfleet officers. \"I was about to have my midday meal. We produce a wide, diverse crop of fruits and vegetables, and are quite creative with our dressings. Would you honour me by joining me?\" \n\nInwardly, Hrelle baulked at the notion of a meal without meat, as healthy as it would obviously be for him, but he looked to his wife for guidance. She smiled and nodded. \"We'd love to.\" \n\n* \n\nSS Valley Forge, Biodome 4: \n\nRrori was still apologising to Kit in mid-transport, the young Caitian momentarily distracted by the scents and sounds around him as they materialised into a hot, dry, desert terrain of colourful rocks and even more colourful blooms, before he resumed. \"I am a miserable, unthinking, inconsiderate wretch-\" \n\nKit straightened the collar of his baggy blue Hawaiian shirt, resisting the urge to tuck it into his equally-baggy shorts as he finally replied, \"Good Friend Rrori, I come from an intensely protocol-driven race... but even I feel you are overdoing it. Your apology has been accepted.\" He looked around, pleased at everything. \"This is much like my homeworld.\" He stopped as his feet sank into the sand beneath them, and slipped out of his sandals to curl his clawed toes into it. \"This is wonderful! Even better than the holodeck recreations!\" \n\nRrori grunted; he wore a crimson tripartite Caitian kilt and a vest, but went barefoot, but his reaction to the sand between his toes was less enthusiastic. \"This is not so much fun when you have fur. Sand gets everywhere.\" \n\nKit bent down and studied a clump of striped blossoms, and the insects buzzing around them. \"A pity our squadmates were too engaged to accompany us. It is most invigorating.\" \n\n\"Yes,\" Rrori agreed distractedly, shaking his right foot - until he saw some scantily-clad young human women nearby, and his tail started wagging, more happily distracted in that direction. \n\nKit couldn't help but notice. \"Good Friend Rrori, your company is of course most appreciated, but in addition to taking time for relaxation, I will be conducting a scientific survey of the Edenist biodomes. If you wish to acquaint yourselves with the more coitable colonists, please feel free.\" \n\n\"What?\" The Caitian looked at him, though a portion of his attention remained with the smiling, inviting women. \"No! I promised Sasha that I would remain your companion for shore leave!\" \n\n\"For which I thank you, but I fear you might impede my progress. You would therefore be assisting me more with your absence.\" \n\n\"Oh. Well, if you're okay with that...\" Rrori didn't stick around to confirm that. \n\nFor which Kit was grateful, more than good manners would allow him to admit aloud. He moved around the terrain, watching tiny lizards scurry, rodents burrow, birds swooping overhead, before settling down against a low rock and watching the sand before him. It was shifting slightly, as if something was underneath, before he realised that it was the subtle vibration from the ship's engines. The patterns constantly changed. \n\nHe hated it. Not the sand, but the notion of change. Change was always essential, he accepted, even desirable, a mechanism employed on every level throughout the Omniverse. He thought of the change he made when he decided to leave his homeworld, to escape his repressive government and to change his gender from Warrior Male to Seeker Male, and finally to join Starfleet to become a Science Officer. It had been challenging, excruciating, exciting, and ultimately rewarding. \n\nNow... they were nearing the end of their final year, and from there he would continue onward, get a posting somewhere to complete his Science degree in whatever speciality he ultimately chose. And his friends? Jonas, Sasha, Neraxis, Eydiir, Rrori, Giles? They would go on with their own lives, their own directions. \n\nEven now, they were coupling, spending more time apart than together. \n\nKit knew it was essential, even desirable. \n\nHe still didn't like it. \n\n\"Hello.\" \n\nHe looked up to see a middle-aged human female with long black hair, olive skin and a blood-red robe. He rose and bowed, remembering the briefing the Most Respected Counselor gave those visiting the colonists. He formed his hands in the circle. \"One. My name is Kit. I come in peace. I bring no weapons or negative waves, and you do not need to fear me, though I might look differently to you.\" \n\n\"That's obvious,\" the woman replied, smiling. \"Are you Qarari?\" \n\nKit started at the question. \"You are familiar with my race?\" \n\n\"Yes. One of your people is with us onboard.\" \n\nKit blinked, the breath catching in his throat. \"Another Qarari? Where?\" \n\n* \n\nThe woman led him out of the biodome and into the Valley Forge, to a large room filled with tables littered with various relics and artefacts, some framed with scanning devices he recognised from his training in Science labs. \n\nBut his attention fixed on the figure in the centre of the room, clad in a beige jumpsuit and hunched over an ancient-looking device with more modern equipment. He took the moment to study from behind, instantly recognising the signs of a female of his people: the lemon-yellow pebbled leathery skin, the rising row of segmented fins along the top of the elongated skull... \n\nShe was Qarari. She was female! \n\nSuddenly feeling incredibly impolite, Kit made a sound. \"Excuse me?\" \n\nThe female straightened up and spun around, her emerald eyes saucering at his presence. \"Who- Who are you?\" \n\nHe straightened up as well, recalling the traditional Qarari greeting of bringing his hands together in a self-clasp. \"We Stand Together. I am Kitirik Abyss Zuinthinem Emijiz.\" He swallowed, his hearts racing even faster with anticipation. \"I am more informally referred to as Kitirik, or Kit.\" \n\nShe did not return the gesture, replying simply, \"I am Piri. Just Piri. I abandoned my full name and other such nonsense when I left our world. Where did you-\" She stopped herself. \"No, I heard that one of us had fled for Starfleet. Am I correct?\" \n\n\"Yes!\" He drew closer, unable to take his eyes off of her. \"I am currently based on the USS Surefoot, currently following alongside-\" \n\n\"That is obvious. How long do you intend to stay?\" \n\nHer abruptness startled him, but having lived among more... discourteous peoples since his self-exile, he recovered quickly. \"Only until this vessel leaves the Demilitarised Zone.\" He looked around. \"May I please ask what made you leave Qarar?\" \n\nPiri moved to a set of covers on an adjacent table, retrieving one and covering the relic she was studying. \"I suspect it is for similar reasons to you: to escape the restrictions of our world. Had I remained, I would have spent my life as a Breeder, negotiating for producing children for males. But I wanted more. I studied the sciences secretly, in particular archaeology; at first it was to see how our people had become so regimented, but then obtained books on the ancient histories of other worlds. Then, ten years ago, I fled with a Miradorn freighter.\" Her throat flushed deep red with happiness. \"And I have not looked back since.\" \n\n\"That sounds so much like my story,\" Kit declared, enthused. \"I was born a Warrior, but knew I should have been a Seeker, one who studied instead of fought.\" \n\nPiri seemed to look him over for the first time. \"You underwent genetic transgender surgery? Why? You could have retained your superior strength, your armoured plating, and still studied the sciences, and no one beyond our world would have known better.\" \n\n\"I would have known,\" he told her. \"I wanted my outside to reflect my inside.\" He moved to the table with the covers and began assisting her. \"Did you find these relics on the Edenists' former homeworld? Did you join them, or did they hire you to study these-\" \n\n\"You ask many questions,\" she noted, sounding amused. \n\n\"It is the beginning of wisdom.\" \n\nPiri made a sound. \"The Edenists care little but to lie around, bask, play music and games, make love, gather fruit and pretend that their lives do not depend on the ubiquitous machines that support them. I arrived on their world a year ago and found these. They didn't care about them, so they left me alone to retrieve them.\" \n\n\"Fascinating. Of course I have been studying all the sciences in my capacity as a Starfleet officer, but I must soon choose a speciality or two. I have thought of Xeno-Sociology, though archaeology has proven interesting, too.\" He peered at one relic before covering it. \"This appears Sandahran or even Kalandran in origin-\" \n\nShe approached, helping him with covering up the relic. \"Debrune, actually, under four thousand years of age. A freighter is scheduled to rendezvous with us tomorrow, where they will collect us and take us to Earth. These have helped me obtained a fellowship with the Mojave Institute of Xeno-Archaeology.\" \n\n\"Tomorrow? You will be gone tomorrow? That is such little time.\" \n\n\"But more time than you expected to need, Kit,\" she replied, her eyes smiling. \n\nCloser to him now, Kit studied the details on her face. He had no sexual desire, of course, and back home the genders never fraternised for long, but he appreciated her aesthetic qualities, as well as her intellect and her desire to go against their people's repressive ideals. \"Piri... would you care to share some bugs with me?\" \n\nHer fins swelled slightly. \"Each of the Edenist biodomes contain insects from many different sections of their former homeworld; I can escort you to some of my favourites.\" \n\nKit blinked; wondering if this was his first date. \n\nHe decided Yes. \"That sounds delightful!\" Then, he risked a joke. \"It will be great to have you there to pick out the best insects, so I won't have to settle for the lesser of two weevils.\" \n\nPiri paused halfway out the doorway, before staring hard at him. \n\nAnd wheezing with Qarari laughter. \n\n* \n\nUSS Surefoot, Bridge: \n\n\"Captain, we're detecting a vessel at the extreme edge of our sensor range.\" \n\nHrelle blinked, but otherwise didn't offer any other reaction as he continued to stare at the screen; the meal he had shared with Kami and Lowell was filling despite the lack of meat, but he was cooking up a massive, space-splitting belch, and really didn't want to let it loose on the Bridge and scare the younger crewmembers. \"Location?\" \n\nLt C'Rash glanced back at her station. \"387 Mark 14.\" \n\nHe nodded, expecting that answer. \"Cardassian space. Just inside their border?\" \n\n\"Yes, Sir. What should we do?\" \n\nHe winced; it was getting uncomfortable, and wasn't looking forward to what happens when the gas reaches the deep end of his digestive system. \"What can we do? They're staying on their side of the fence, and we're busy here.\" He called up a tactical display on the main viewscreen, studying it for a moment before asking, \"Is that a gravitational disk near the other vessel?\" \n\nC'Rash glanced over at the Science station, where the cadet manning it, a Suliban male named Zajan, answered nervously, \"Uh, yes, Captain, a Type-6 accretion with a parabolic subspace interstitial flaxor pattern of .54-\" \n\n\"You're hurting my head, Cadet,\" he quipped, looking back at his Chief of Security. \"Aim your sensors at the disk.\" \n\n\"The disk? What for? It's a pointless, idiotic move.\" \n\n\"Just do it. And any more attitude from you and you'll spend the rest of your shift on the Naughty Step.\" \n\nShe bristled, focusing on her station again as some of the cadets on duty made noises of amusement. \"Scanning the disk now, Captain, Sir, though with all due respect, Captain, Sir, I don't-\" She paused, leaning in, her tail twitching from the hole in the back of her chair, before she looked at him again. \"The sensor readings are reflecting off the disk... increasing its range!\" \n\n\"I know,\" he replied nonchalantly. \"It's a trick old cats like me pick up along the way. And what can you tell us about the other vessel now?\" \n\n\"It's a Galor-class warship. What are we gonna do about them?\" \n\nSuddenly Hrelle's chest ached in discomfort, and he finally let loose the belch, a long, rumbling eructation that drew the attention of everyone on the Bridge. Then he announced, \"We proceed on course. As long as they stay where they are, we're safe.\" \n\n\"Who's gonna be safe from your gas?\" C'Rash muttered. \n\nHrelle turned to her, pointing to the step down from her station to his chair. \"Naughty Step. Now.\" \n\n* \n\nSS Valley Forge, Biodome 6: \n\nRrori hated water. As a rule he preferred sonic showers to the water-based ones, and only swam when he needed to complete his qualifications during his Academy time. His fur was fine, finer than most other Caitians as befit one of his superior breeding, and as such it took longer for him to dry off than others. Water was there to drink, not to be drenched in. \n\nNow, however, he frolicked in the pool of water in one of the jungle biodomes as if born to it, laughing and splashing with the half-dozen naked Edenist women he had befriended, before they emerged onto the sandy bank, alongside all their clothes. He shook his head and limbs, ignoring the discomfort to focus on the women. Was he wrong, or were a few of them attracted to him? Their scents mingled, and coupling this with all the ambient odours of the transplanted jungle, made him wonder if he was misreading the scents - or their body language. \n\nThe thoughts of that fetching new Squad Leader returned to him. Perhaps he was taking the wrong course of action? Seeing women only as potential sexual partners? Perhaps he needed to treat them more respectfully? \n\nHe sat up on one elbow, regarding Aurora, a shapely red-haired beauty with strong cheekbones and an alluring smile. \"Tell me more about yourselves: your goals and aspirations, your views on galactic politics and philosophy and-\" \n\n\"Would you like to make love?\" she asked. \n\nRrori blinked. \"Yes. Shall we, um, go somewhere and-\" \n\nThen Rain drew up, smiling. \"And leave me behind?\" \n\n\"And me?\" her sister Snow added. \n\n\"What about me?\" Dusk pouted mischievously, leaning in. \n\n\"Don't you dare leave us out,\" the twins Summer and Autumn chimed as one. \n\nRrori glanced around, his excitement growing at the possibility. \"You mean you all want to- with me?\" ",
        "\"Of course,\" Aurora replied, stroking his chest fur, \"We are Free Spirits, at one with our drives and instincts.\" She glanced down. \"Just as you are, it seems.\" \n\n\"Unless he's not really interested in sex,\" Dusk suggested. \n\n\"Mother's Cubs...\" he breathed out, wondering where these women had been all his life. \n\n* \n\nSS Valley Forge, Bridge: \n\n\"Here,\" Captain Bakunin pointed to the star on the Bridge chart. \"This was Eden's system. And this,\" He moved his finger to another point. \"Is your new home, a moon circling Arcturus Prime.\" And now he indicated a blinking red light between the two. \"And this is us. We have not taken your people off course. We are not diverting you anywhere. Your people can come up here at any time and see for yourselves.\" \n\nLaura Lowell stood there, arms folded across her chest, looking dubious. \"This could be faked.\" \n\nNearby, Kami split her attention between studying the girl's suspicious nature for a way to help ease the tensions between the Edenist youths and everyone else, and studying Sasha, currently standing nearby pretending to be focused on the fuel readouts but really watching the exchange between the girl and the Captain. But she still managed to offer, \"I'm sure if you wanted to confirm the readings on the Surefoot-\" \n\n\"Those could just as easily be faked, too.\" \n\n\"Why would they do that?\" Sasha finally spoke up. \n\nLaura glanced over, as if noticing the other girl for the first time. \"It's part of the Starfleet Conspiracy! We're being taken to some camp in the middle of nowhere to be conscripted into your Death Armies!\" \n\n\"What?\" Sasha stepped forward, stopping only when Kami raised a blocking arm between them. \"You're talking crap!\" \n\n\"Really? Then why haven't we reached Arcturus Prime yet? We're travelling, like, a million miles a second!\" \n\n\"Warp Four, actually,\" Sasha corrected archly. \"About 19 million miles a second, which might seem a lot to someone not familiar with warp mechanics - or much of anything else. But the distance to Arcturus Prime is far, far greater, and the freighter can't go any faster, especially with the biodomes mounted, so it'll take you 115 days. There's no conspiracy going on.\" \n\nLaura sneered at her. \"You would say that! You're no better than that Baby Killer captain of yours.\" \n\nKami felt Sasha react, and immediately turned to face her, her gaze unignorable. \"The only acceptable response you can have to that is to walk away. Do it. NOW.\" More softly, she added, \"Please. I'll deal with this.\" \n\nSasha stared back, the conflict clear in her expression. Then, to her credit, she nodded stiffly and departed the Valley Forge's Bridge, not even looking in Laura's direction. \n\nKami then turned to the other girl, drawing closer, reaching out and taking her hand, measuring her voice and expression. \"Sweetheart, you have the wrong impression of Starfleet. We are not murderers, not warmongers.\" She led her aside, her voice dropping. \"Yes, we have weapons - but we also have rules, principles, guidelines that tell us to use those weapons only as a last resort. Starfleet Directive 001 says 'Members of Starfleet will take any and all reasonable measures to preserve life, in whatever form it might take'.\" She squeezed Laura's hand. \"All life is precious. You believe it. So do we.\" \n\nLaura grunted, sounding unconvinced. \n\nThen Kami drew even closer, squeezing tighter until the girl winced in pain, as the Caitian whispered, \"But if you call my husband a Baby Killer again, I'll forget those principles just long enough to make you profoundly regret opening your ignorant little mouth. Do you Reach?\" \n\nShe Reached. \n\n* \n\nSasha entered the jungle biodome, feeling the hot swaddling air hit her lungs as she used the meditative techniques Kami and T'Varik taught her to control her temper. The Counselor had been right; leaving that blinkered, opinionated Nature Child behind was the only acceptable response. \n\n\"You look like you could chew your way through the bulkhead.\" \n\nShe turned to see an older human male in a robe with some of the drones she'd seen waddling about the freighter. He was pruning sickly leaves from a thick bush of olive-green triangular leaves, but stopped and smiled at her. \"Howdy.\" \n\nShe recognised him as Mr Lowell, the closest thing these people had to a leader. \"Um, Howdy, Sir. I'm sorry, I didn't mean to disturb you.\" \n\n\"You're not. Young people are always welcome here to enjoy the beautiful greenery from our former world. I don't know how you people can restrict yourselves to the cold, sterile corridors of your starships, cutting yourselves off from Nature's Blessed Touch. I would die if I was forced to encase myself in hard metal, and wear those confining clothes.\" \n\n\"It's... not so bad, Sir. Starships are comfortable places - as are our uniforms - and we have Arboretums, and Holodecks-\" \n\nThe man smiled and shook his head. \"How can any of that possibly compare to what we have here?\" He drew closer, handing over the pruning shears to one of the drones as he did so. \"Our Eden was once covered in beauty like this. Then it was poisoned. Fatally.\" An ineffable sadness eclipsed his gaze. \"We struggled to try and stop the inevitable. And then, once the inevitable was accepted, we focused on saving what we could.\" \n\nShe nodded politely. \"How did you manage to arrange all this? The transport, the biodomes, settling on Arcturus Prime?\" \n\n\"The Bounty of Eden: we produced a high-yield grain on our former world called heptatriticale. The Valley Forge's hold is filled with barrels of it; it helped earn us a new homestead, and the means to take us there. Nature provides.\" \n\nThen her combadge chirped. \"Commander T'Varik to Ensign Hrelle: Alpha Squad members Rrori and Kitirik were due to end their shore leave on the Valley Forge 2.3 minutes ago, but they have not returned to the designated beam-back point. The sensors indicate they are both in the biodome you are currently occupying; please instruct them that I am prepared to transport them back and file charges of being Absent Without Leave, should they continue to fail to comply.\" \n\n\"Understood, Commander. Ensign Hrelle out.\" She looked around. \n\nLowell smiled, pointing in two different directions. \"Your furry friend is with some of the young women of our community-\" \n\n\"Well now, there's a surprise.\" \n\n\"And I believe the serpentine one is with his new girlfriend.\" \n\n\"Girlfriend?\" Sasha shook her head. \"Thank you, Sir. If you'll excuse me?\" \n\nShe found Rrori first, just as Lowell had described, amidst a group of naked women. Keeping themselves busy. Vigorously busy. Sasha almost turned around to go find Kit first, but steeled herself and called out, \"Meow! Put those women down and get dressed, it's time to go home! Now!\" \n\nThen she walked away, shaking her head in amazement at how flexible Caitians could get. \n\nShe found Kit by a hidden pool, fed with a gurgling waterfall, snatching insects from the air with his tongue - and in the company of a figure that looked remarkably like him, only with a different skin colour and texture. They were chatting away happily, Kit's displaying a level of delight Sasha had rarely seen in him, and it made her smile. \"Hello there.\" \n\nThe two figures stood up, Kit holding out his hands beckoningly. \"Respected Squad Leader! Come, come! I want you to meet Piri! She is from Qarar, too, she fled earlier than I did! Piri, this is my squad leader and good friend Sasha Hrelle!\" \n\nSasha smiled and nodded. \"Pleasure to meet you. I didn't know there were other off-world Qarari.\" \n\n\"Neither did I!\" Kit declared. \"She left to study archaeology! She's been with the Edenists and is going onto Earth and she likes Zeroball and Yarmok music and found some Debrune ruins on Eden and her favourite colour is chartreuse and-\" \n\n\"And you can tell me the rest on the way back to ship; your shore leave ended a couple of minutes ago, and T'Varik contacted me to get you.\" \n\nKit glanced down at the chronometer fastened to the inside collar of his shirt, his colours shifting to reflect his crestfallen mood. \"Respected Squad Leader, I've hardly been here, surely I can stay longer with Piri? It has been only a short time, and tomorrow she will be collected and gone. I will take on extra duty shifts on my return.\" \n\n\"Sorry, Kit, orders are orders.\" She reached up and patted him on the arm. \"Come on, it's no big deal.\" \n\nHe swatted her arm away, his colours flaring red with anger now. \"No. It is 'no big deal' for you. You humans are all over the Galaxy. We can't get away from you! You will never know what it means to be a minority of just a handful, to not see another of your race for years! And with things the way they are on our homeworld, I will probably spend the rest of my life in exile! Alone!\" \n\nTaken aback by the outburst, Sasha paled and swallowed before responding, \"Kit... you're not alone. You have us, your friends-\" \n\n\"My so-called 'friends' are too busy rutting each other like animals and preparing to graduate and move onto separate lives! They no longer have time for their funny little bug-eating asexual friend! You can go tell the Respected Commander T'Varik to go to Hell! And the rest of you can follow her!\" \n\nSasha stared at him, completely caught off-guard by his reaction, and not knowing what to say to him. Instead she stepped back, her eyes still on him as she touched her combadge. \"Hrelle to Surefoot: I've made contact with Mr Rrori, and he's on his way to the beam-back point, but I'm authorising additional shore leave for Mr Kitirik.\" \n\nT'Varik's voice filled the air, making Kit start, as if the Vulcan had appeared to scold him. \"And what is your reason for doing this, Ensign?\" \n\n\"I'll... explain on my return. Hrelle out.\" She looked down on her friend and squadmate, her face and voice taut. \"There. I expect you back on duty at the start of the next shift.\" \n\nKit's anger had ebbed, replaced with an obvious shock at the level of his own vitriol towards her. \"Good Friend Sasha, I-\" \n\n\"We'll talk about your attitude when you return.\" Sasha nodded curtly at Piri, turned and departed. \n\nShe made her way through the underbrush, emerging to find Rrori approaching, still dressing... and limping, his voice breathless. \"T-Thank you-\" \n\nShe frowned at him. \"You're thanking me? I thought you'd be pissed off at being interrupted-\" \n\nHe stopped, wincing in discomfort. \"I have- I have been with them for six hours. All of them. Multiple times. Every position imaginable... and a few I never thought were.\" \n\n\"Yeah, yeah, I get it.\" \n\n\"They- They wouldn't let me leave, not even rest. I am... I am so very, very spent-\" \n\nSasha rolled her eyes. \"Oy vey, you're like the kid who got stuck in the candy store overnight...\" \n\n* \n\nBack at the pool, Kit sat down again, staring at the gurgling water, stills stunned by his outburst. \"I- I was unforgivably rude to Good Friend Sasha.\" \n\n\"Yes,\" Piri agreed. \"It felt good, didn't it? It took me ages to break free of our people's strict protocols of good manners. I found it difficult to throw off our societal shackles at first - and my Miradorn associates took cruel advantage of that until I did.\" \n\nBut he remained inconsolable. \"I should return, and apologise-\" \n\nHe started to rise, but Piri took his hand and drew him back down again. \"Wait... are you sure that Starfleet is the right path you need to take? There is literally a whole Galaxy of opportunity awaiting you.\" \n\nHe looked to her, genuinely considering her words, and until recently never expecting to do so. It was true; Starfleet might have once seemed the only path for him, the only future, when he had escaped Qarar, had corrective surgery and entered Starfleet Academy - all with their assistance. But though he was grateful for their help, their education, he wasn't bound to them like some indentured servant. He had seen enough of the rest of the Galaxy to know what awaited him. \"You think... perhaps with you-\" \n\nShe let go of his hand, her expression changing. \"No, Kit. As much a pleasurable experience it has been to encounter another member of our race out here, especially one as intelligent and funny as you are, we should not try to forge a relationship.\" \n\n\"But- But we share a love of the sciences, and I have lived on Earth, and can instruct you-\" \n\nBut she brought a clawed finger to his lipless mouth, silencing him. \"No. It would not work between us. A shared heritage and love of sciences would not be enough, believe me.\" She dropped her hand, took his again. \"But there is something you can do for me...\" \n\nSS Valley Forge, Aft Assembly Area: \n\nEydiir pressed the hypospray against the Edenist's neck. \"There. As you will be in space for an extended period, this will assist you in acclimating and resisting the long-term effects of such travel.\" \n\nThe young man smiled. \"Thank you, sister. Are you One?\" \n\n\"If it will expedite your departure from my presence, then yes, I am.\" When he tried to hug her, she stepped back. \"Please embrace a tree or a woodland creature instead. Next.\" \n\nNearby, the other Medical cadets, also providing the Edenists with immunisation and resistance boosters, continued to take note of the Capellan woman's attitude, allowing Gamma Squad's Bill Beaudine to quip, \"I gotta admire your bedside manner, Eydiir.\" \n\n\"I am not at anyone's bedside,\" she pointed out dryly - though her manner softened a little when her next patient turned out to be a little girl. \"But I will provide the minimal medical care required by these profligates.\" \n\nBeta Squad's Bezra Pruhl knelt by a child of her own, the Trill running a tricorder around the boy. \"Aww, how can you be so mean? These people have found Paradise, they're at one, in harmony with Gentle Mother Nature.\" \n\n\"I have read of this Terran myth; the Garden of Eden was an allegory created to explain the seeming cruelty of life, and to blame the exile from this Paradise on a woman for eating a fruit. And Nature is not gentle and maternal and harmonious; it is chaotic and brutal. And these people are fools.\" She glared at her next patient, a beatific young woman who seemingly didn't hear Eydiir's continued rant. \n\nEpsilon Squad's Reyii Igavo was refilling her hypospray. \"We do not have such myths on Betazed, but the idea of a life without hardship or strife is appealing.\" \n\n\"It is an illusion. And these people are wasting their lives...\" She paused, noting the vacant, glassy look in the young woman's eyes. \"Are you coherent? At least, by your limited standards?\" \n\nThe girl smiled, reached up limply to touch Eydiir's cheek. \"Beauti- Beautiful...\" \n\nEydiir gently but firmly drew the hand away, prepared to dismiss it as yet another symptom of this stagnant society - but something made her retrieve her tricorder and scan the girl. \"Miss, I would like you to accompany me to my vessel.\" \n\nThe girl's eyes brightened a little. \"To make love?\" She drew in to kiss Eydiir. \n\nThe Capellan stopped her. \"Absolutely not.\" \n\n* \n\nUSS Surefoot, Captain's/Counselor's Quarters: \n\nKami was purring as Hrelle gently but firmly kneaded her shoulders; she was relaxing, but still feeling the need to grouse. \"That little wispy rainbow talks so much crap her ass must think it's out of a job.\" \n\n\"I know,\" he said distantly, enjoying his wife's scent, and the feel of her tail stroking his calf as his hands moved down the length of her spine, even as he noted the tension still in her muscles. \"And I'm glad that Sasha listened to you and walked away. And that you didn't react aggressively, either.\" \n\n\"Umm... yeah.\" \n\nHe leaned in suspiciously. \"Sugartail? You didn't do anything to her, did you?\" \n\nShe looked at him. \"In my defence, she really, really deserved it.\" Then the door chimed, and she rose quickly, grabbing her dressing gown as quickly as she did the distraction. \"Ooh, a visitor! Go answer it, Esek, quickly!\" \n\nHe grunted, slipping into his own as he drew up to the door, mentally guessing who it might be. And failing. \"Mr Kitirik?\" \n\nThe Qarari was still in his off-duty clothes, but looked downcast, distracted. \"Most Respected Captain, please forgive me for this unexpected intrusion into your private residence.\" \n\nKami approached the doorway as well, concern on her face. \"Kit? Is there something wrong?\" \n\nHe looked to each of them in turn. \"Apologies to you both again, but circumstances have arisen that force me to seek urgent wisdom that perhaps you two more than anyone else onboard can provide.\" \n\n\"Both of us?\" Hrelle looked to his wife as he stepped back. \"Well, I don't know what good I can do-\" \n\n\"I've been telling you that for years,\" Kami joked, guiding Kit to the couch. \"I heard that you met another member of your people over there. What's she like?\" \n\nHe nodded. \"Her name is Piri. She is an amateur archaeologist. She is travelling to Earth with some artefacts she discovered on Eden. And she wants me to inseminate her.\" \n\nHrelle was halfway to sitting down beside him, when he stopped and looked at Kami. \"Inseminate?\" \n\n\"Yes,\" she noted, more mockingly. \"Remember what happened between us about six months ago? Oh, and you might want to close your gown and tuck Little Esek away.\" She focused on Kit again. \"We don't know any more about your people's culture than what you've told us, but that seems rather... sudden.\" \n\n\"Piri never thought she would have the opportunity to have offspring until we met. Neither did I, for that matter. But she will be leaving the Valley Forge tomorrow; the window of opportunity to make any decision is small.\" \n\nHrelle rose again and moved to their private replicator, as Kami asked, \"Are you looking to have a career break? Commander T'Varik might be better equipped to expedite that-\" \n\n\"No thank you, Most Respected Counselor. Friend Piri does not require my companionship. Only my seminal contribution.\" \n\nHrelle returned with three teacups on a tray, setting them on the table, as Kami asked, \"And how does that make you feel?\" \n\nKit reached for a cup. \"I am... disappointed in her attitude. But I suspect she is still strongly influenced by our culture. Qarari males and females do not form mixed partnerships, beyond arrangements for reproduction, and the males and females take the offspring of their own gender to raise. She desires to form her own clutch.\" \n\nHrelle lifted his own cup. \"And what do you desire, Kit? Would you be satisfied with just being a sperm donor, and letting her go off to raise your children?\" \n\nThe cadet stared into the contents of his own cup. \"It would make sense for me to ensure the continuation of my genetic line, given the unlikelihood of my ever returning to my homeworld.\" He looked to them in turn. \"Children do not necessarily require both parents present to thrive.\" \n\n\"True,\" Hrelle conceded, sipping. \"Sasha had one parent for many years before I came into her life.\" \n\n\"And my firstborn Mirow after his father died,\" Kami added. \n\n\"And in fact, in some cases, the absence of a poor parent would be a benefit,\" Kit mused - though he sounded as if he was trying to convince himself of that. \n\n\"True, too.\" Hrelle looked to him. \"But what does that have to do with you? Do you think you'd be a bad parent, Kit?\" \n\n\"I...\" Kit delayed responding to drink. \"I have no experience-\" \n\nKami smiled. \"No one goes into parenthood with experience... except the influence we received from our own parents. Or those in our lives who acted as parents; Mirow wasn't just raised by me, but by my clan, and Sasha underwent something similar. And your clutch raised you, I understand.\" \n\n\"Yes.\" Kit looked up again at the couple. \"May I ask a personal question, please?\" \n\n\"Why are the Captain and I having a child?\" Kami prompted, still smiling as her hand rested on her belly. ",
        "\"Yes!\" He looked to Hrelle. \"Is it because Good Friend Sasha is not your biological child?\" \n\nHe smiled back. \"Not in the least. If I never had the immense good fortune I have now, I would still be satisfied with the time I've had with Sasha. She may not be my biological child, but that doesn't matter to me; I helped shape her regardless.\" \n\n\"Kit,\" Kami continued, moving her hand to the front of her belly. \"Misha here is a product of the love that Esek and I share, an expression. Great Mother Willing, we'll raise him together, teach him, guide him, and be there as he grows up to have the most wonderful life he can. \n\nAnd you're right; a child can grow up with one parent, or no parent at all, and still turn out marvellous. But I think that in your case, when you're ready... you will be a caring, considerate, wonderful parent.\" \n\nHe considered their words. \"This- This opportunity may pass, and another may never come again-\" \n\n\"Kit,\" Hrelle butted in gently. \"After my first wife died, I never dreamed in a million years that I would love anyone else again, let alone have a child of my own. Sometimes, The Universe Has Other Plans... but they're not always bad.\" \n\n\"And any child you raise won't care if they have your genes,\" Kami added, \"Or even if they're the same race as you. All they'll care about is the love and regard you give them. Not to mention all those hugs I know you have stored in you, too.\" \n\nKit nodded again, still holding his cup. \"What should I do?\" \n\nHrelle looked to Kami, who answered with, \"You've been in enough of my Counseling sessions to know that in the end, only you can answer that question.\" \n\n\"Yes,\" Kit agreed - sounding as if he'd prefer another answer. \n\n* \n\nOn the Bridge, T'Varik looked up as the cadet on Ops announced, \"Vessel approaching, Ma'am: Ju'Day-class freighter, coming in from heading 118 Mark 14, ETA 4.5 hours.\" \n\nShe nodded, mentally calculating its probable point of origin, somewhere in the Barradis Sector. \"Actual ETA is 4.43 hours, Cadet; maintain precision in future. And open Hailing Frequencies: Freighter, this is the USS Surefoot. Identify yourself and your purpose in this sector.\" \n\nSeconds later, a man's voice replied. \"Surefoot, this is the SS Arkwright. We are on a scheduled rendezvous with the Valley Forge, to deliver a set of maintenance drones and collect a civilian and her cargo.\" \n\n\"Acknowledged. Continue on your present course and speed, and coordinate with Valley Forge. Surefoot out.\" \n\n* \n\n\"Friend Piri.\" \n\nShe was kneeling in her lab, securing the seals on a long, low crate, before rising and approaching, her face bright. \"Kit! The freighter will be here soon to pick me up, and I was worried that you wouldn't come back! We must mate, now. Please undress.\" \n\nHe hated the expectant, excited look on her face - given what he had to say. \"Friend Piri, I... respectfully must decline your request. When I father a child or children, I want more. I want to be a presence, a part of their lives, always. As our own parents within our clutches did, and as my friends have-\" \n\nShe stepped back, turned and returned to her packing. \"I have work to do before the Arkwright arrives. Leave.\" \n\nHe swallowed; the Most Respected Counselor had warned him of this response. \"I hope you understand-\" \n\nShe kept her back to him. \"I do. You should go.\" \n\nHe drew up, stopping at a table where relics awaited packing. \"I can assist you, at least.\" He lifted up an ancient, long-deactivated mechanism that resembled a modern tricorder. \"You labelled these as Debrune in origin. I referenced them in our own database before I returned here. They are in fact Kalandan. The vertical sigils confirm this-\" \n\nShe raced up to him and snatched it out of his grasp. \"I know, I was mistaken. I believe I told you to leave.\" \n\nHe watched her. \"The Federation Archaeology Council has deemed all Kalandan artefacts be reported to them immediately, under the Pandora Protocols. Have you done so?\" \n\n\"Of course. Why have you not left now, as I have asked?\" \n\nHe stared at her. \"Friend Piri, I know how much you wanted offspring... so do I. I have seen how enriching and affirming being a parent can be.\" He drew up, making a decision. \"I can come with you, get a leave of absence from Starfleet. If I can be permitted to at least spend the first few years with our children-\" \n\nShe hissed, making him draw back as she spat, \"NO! I do not like you! I never did! You are an insipid, insufferable reminder of what I left behind! Little wonder your humanoid friends are ready to take their leave of your annoying presence! I only tolerated you because of the possibility of your inseminating me! Don't you understand that?\" \n\nHis mouth dropped open, and his throat flashed deep red. \"I... I do now. I apologise for vexing you so much with my existence. Farewell.\" \n\nHe turned and departed, his hearts racing. \n\n* \n\nUSS Surefoot, Sickbay: \n\nThe girl Eydiir had brought back to the ship lay on the biobed, dreamily listening to the soft, rhythmic sounds of the sensors reading her current state - oblivious to the stark, sober expressions on the surrounding Starfleet personnel. \n\nEydiir faced Dr Ling and T'Varik. \"It is confirmed; she is under the influence of the narcotic Vraxoin.\" \n\nLing nodded. \"Also known as Vrax, Bliss, XYP and other names. Fortunately this one seems to have taken only a mild dose; we can administer a detoxicant.\" \n\n\"The Edenists have been purported to be isolated,\" T'Varik noted. \"How would they obtain such a narcotic?\" \n\n\"It's an organic substance,\" Ling advised. \"It can appear naturally in some plants. No doubt they had something like that on Eden.\" \n\nThe Vulcan nodded. \"Treat her and return her to her people.\" \n\nEydiir frowned. \"We are not doing anything more?\" \n\n\"What would you have us do, Cadet?\" \n\n\"Vraxoin is a dangerous, addictive and illegal substance that has caused much suffering on many worlds! Its use and distribution is banned throughout the Federation!\" \n\nT'Varik straightened further. \"I am aware of its dangerous potential, and illegal status. But the Edenists are not Federation members, although this may change now that they are being resettled on a moon in Federation territory. That will be a matter for the local government of Arcturus Prime.\" \n\n\"But it is wrong!\" Eydiir declared fiercely. \"These people are already wasting their lives! To do so further with the aid of narcotics is-\" \n\n\"Is their business, Cadet.\" T'Varik concluded coolly. \"Your business is to provide treatment. Nothing more. Is that understood?\" \n\nSullenly, Eydiir replied, \"Yes, Ma'am.\" \n\nThe First Officer turned to leave, but paused to add, \"For what it is worth, Cadet, I understand your frustration. You have at least made us aware of the issue. Perhaps assistance and education about the dangers of such casual narcotics use may be offered to the Edenists once they are settled?\" \n\nThat put a crack in the Capellan girl's saturnine expression. \"Yes, Ma'am.\" \n\n* \n\nUSS Surefoot, Mess Hall: \n\nSasha entered for a coffee, despite her common sense telling her she would be better off putting aside her calculus studies and just going to bed, when she saw there was one other occupant. \"Kit?\" \n\nHe sat in the far corner, staring out at the Valley Forge, a glass of something purple in his clawed hands. He said nothing, never even responded to her presence until she drew up and stood beside him. Then he rose, swaying slightly and declaring, \"Respected Squad Leader. I have to apologise to you for my rudeness earlier-\" \n\n\"Never mind that. What's going on? I gave you extended leave to be with your friend. Why am I finding you back onboard, drinking? Alone?\" \n\nHis mottled skin's normal green hue was turning a more sickly yellow-white. \"Friend Piri... was not really my friend. She wanted my help in getting pregnant, nothing more.\" \n\n\"What? Are you serious?\" \n\nHe nodded, his head moving as if on a loose hinge. \"When I refused, she rejected me, insulted me. I wish- I wish I had never learned of her existence. To find one like her, only... only to be rejected... I do not like feeling this way...\" \n\nShe pulled him into her arms as he began making a pitiable sound, shuddering. \"It's okay, Kit. Everything's going to be okay...\" \n\nThen he threw up between them. \n\n* \n\n\"Commander, the Arkwright has completed receipt of their passenger and cargo, and delivery of the new drones, and is preparing to depart.\" \n\nT'Varik continued to focus the majority of her attention on the latest cadet academic scores, dissatisfied with the overall drop in quality, and considered the most efficacious responses, but still responded with, \"Acknowledged, Mr Naavos. Continue to-\" \n\n\"Commander!\" \n\nThe tone in the Bajoran's voice made her set aside her PADD and turn her chair to face the Ops station behind her. \"What is wrong?\" \n\nHe was frowning as he peered at his readings. \"Commander, the Arkwright is not heading in the expected direction, but has come hard about and is heading into the DMZ, towards Cardassian space at Warp 8! In fact, it's heading directly to that Galor-class warship reported earlier!\" \n\n\"Yellow Alert.\" She rose to her feet. \"Captain Hrelle: report to the Bridge. Mr Naavos, hail the Arkwright, as well as the Valley Forge. Helm, plot an intercept course for the Arkwright, and stand by to implement it.\" \n\nAfter a few seconds, Naavos reported, \"The Arkwright is not responding, but I have Captain Bakunin on the Valley Forge.\" \n\nHrelle entered, in uniform but without his boots. \"What's going on?\" \n\nT'Varik trusted he could discern the situation without his help, and stayed focused on the transmission. \"Valley Forge, do you know why the Arkwright is heading towards Cardassian space?\" \n\nBakunin's voice filled the air, as Hrelle moved to the Tactical station. \"Surefoot, I swear I have no idea! The exchange between us went without a hitch! We got our drones, they're scuttling about already, and the Qarari lady and her cargo got her lift.\" \n\n\"Nevertheless, Captain-\" \n\nHrelle cut through, bolting upright. \"Red Alert!\" As the klaxon wailed, he spoke over it. \"Helm, engage intercept course, Warp 9.5! Get Lt C'Rash up here now, if she isn't already on her way!\" \n\nThe bridge crew moved frantically, C'Rash entered and took her place, catching up with the events on her automatic logs, and the viewscreen filled with the dilated space of high warp. T'Varik approached him. \"What do you suspect, Sir? Abduction?\"  \n\n\"Maybe. Maybe a mutiny, a crewman or crewmen taking over. Whatever the reason, if they're heading towards the Cardassians, it can't be good. And we're gonna stop them-\" \n\n\"Captain!\" Naavos interrupted. \"We're getting a distress signal from the Valley Forge! There are multiple explosions reported throughout their ship! Hull breaches, injuries, possible casualties!\" \n\nHrelle didn't hesitate. \"Helm, hard about! Take us back to the Valley Forge! Ops, initiate Emergency Protocols! I want all Damage Control, Medical and Security teams on standby! Get Auxiliary Sickbay powered up, coordinate all personnel and cargo transporters, and be ready to convert the Shuttlebay into a triage unit if required!\" \n\n\"Captain,\" T'Varik started, as the crew around them snapped into action, her voice lowered so others would not hear her questioning their commanding officer's orders. \"Whatever the Arkwright is doing, if it requires this level of sabotage to effect their escape, then stopping them might be our priority-\" \n\nHe shook his head. \"Right now, they're an unknown.\" He nodded towards the viewscreen, where the Valley Forge quickly dominated the view, and the Tactical scans helpfully indicated areas of hull breaches and damage. \"What they need, isn't. You'll stay here and coordinate efforts, I'll command the Away teams over there.\" \n\n\"Captain, you are the more valued senior officer of the two of us, and should stay here and manage.\" \n\nHe frowned at the Ops station. \"No, all those buttons and lights and sounds are scary. Me = Big Dumb Cat. You = Smart Vulcan. You stay.\" \n\nShe raised an eyebrow. \"Then I will simply stress that you take care... and wish you good luck.\" \n\nHe smiled. \"A Vulcan wishing me luck? Thanks, but I'll be okay over there.\" \n\n\"I am referring to the luck you will require when your wife learns you are acting recklessly again.\" \n\nHis smile dropped. \n\n* \n\nSS Valley Forge, Starboard Access Level 4: \n\nThe transport ship's own Red Alert siren cut through Hrelle's head like a spear, and it was all he could do to not curse aloud as he materialised in the corridor along with the team being led by Jonas Ostrow, operating as a Strategic Engineering Officer once more. He pointed unnecessarily to several cracks in the outer bulkhead, where air was loudly escaping. \"Captain! Guforg! Get to work while I check the surrounding hull!\" \n\n\"Yes, Sir!\" Hrelle shouted over the noise, kneeling and opening the kit he was carrying, lifting up and securing the magnetic forcefield units on either side of the breach, activating them as he went along, while Guforg did the same with other, smaller breaches. Gradually, the hissing died down as less and less air escaped, and he shook his head to make his eardrums stop popping. Then he noticed how much of the surrounding floor and walls were blackened by some explosive device. \n\nNearby, Jonas was kneeling, examining some twisted, smouldering debris. \"Lieutenant Ostrow, there's a lot of work ahead of us, you can do that later-\" \n\nHe looked up from under his silver-white hair. \"Sir, I think the explosions came from those drones the Arkwright beamed over. If there's any still intact onboard-\" \n\nHrelle didn't let him finish, smacking his combadge. \"C'Rash! The new drones the Arkwright beamed over! They could be booby-trapped! Run a sweep, find and beam out any you find into space!\" \n\n\"Aye, Sir.\" \n\n\"HELP US!\" \n\nHis ears picked up the man's cry, from the aft section, and raced down the corridor - regretting his additional bulk for once. He found Freeman Lowell at the closed hatchway to one of the biodomes, banging uselessly on the door until he saw Hrelle rush up. His face was frantic. \"Help me! Laura- some of her friends- they're trapped in there-\" \n\nHrelle understood, reading the Hull Breach Alert; whoever was in there could be dead already. He said nothing however as he contacted his ship. \"T'Varik, what's the status of Biodome 2?\" \n\n\"We're reading numerous small hull breaches, with larger fractures in the main structure; total collapse is imminent.\" \n\n\"There's people trapped in there! Beam them out!\" \n\nAfter a pause, T'Varik reported, \"Unable to comply; there appears to be some sort of transporter inhibiting equipment nearby interfering-\" \n\n\"Okay, I'll see what I can do from this end! Get a Medical team here, we might need them! Hrelle out!\" He knelt and ripped open the panel beneath the controls, recalling his days as a prisoner, breaking into so-called secure areas. He looked up at Lowell. \"Keep your finger on that button there for as long as you can, but hold onto something secure; if the dome shatters completely after we open the door, the decompression will blow you out. Along with everything else behind you.\" He made the final reconnection, bracing himself too. \n\nThe huge door began sliding open, enough to let him slip through. Inside the entire forest was shaking as if in the grip of a violent storm, as several visible cracks in the surrounding dome, along with dirt, leaves, water vapour and anything else light enough. The air was getting painfully thin. \n\nHe saw Laura and a half-dozen young people near the top of a slope, clinging onto a huge tree or each other, their clothes and hair whipping in the frenzy of the decompression. He tried to catch their attention, his initial attempts at shouting failing. \n\nThen he raced further inside towards them. Mother's Cubs... \n\nLuckily they began meeting him halfway, and he wordlessly motioned them towards the partly-opened hatchway. Laura was the last - and as she saw him, her eyes rolled into the back of her head and she fainted. \n\nHrelle assumed it was from lack of oxygen rather than his good looks, and he lifted her up to carry her out. \n\nThey were back in the corridor just as the dome finally gave away, the pieces flying out into space, and taking most of the forest with it. The rushing air from within the main body of the Valley Forge became almost intolerable, and Hrelle had to pull Lowell away from the control to let the hatchway close again. \n\nThe collection of them lay sprawled on the floor, but Hrelle looked up to see a Medical team from the Surefoot beam in nearby. He sat up, waving to Dr Ling to see to the others, as he took notice of Lowell, staring at the hatchway, stunned. \"The forest... it was unique... the last of its kind... now it's gone...\" \n\nHrelle grunted, moistening his mouth and catching his breath. \"On... On the plus side... your daughter and... and her friends are alive... you... you asshole...\" \n\n* \n\n\"Captain's Log, Stardate 47327.01, USS Surefoot-A, Captain Esek Hrelle, Commanding: our rescue operations for the Valley Forge have been completed. There were fortunately no casualties, and the injuries have not been serious. A Security sweep has confirmed Lt Ostrow's suspicions, that the drones beamed over from the Arkwright contained explosives, designed to distract us while the Arkwright escaped into Cardassian space. A briefing from Cadet Kitirik, the only member of my crew to have seen the objects that were taken, has revealed some potentially disturbing implications...\" \n\n\"And you're certain they were Kalandan in origin?\" Hrelle asked. \n\nThe Qarari nodded. \"The Most Respected Commander T'Varik has verified the descriptions I have given.\" \n\nNext to her husband, Kami looked to the others in the Ready Room. \"I never heard of them.\" \n\nHrelle motioned to Kit, who took the cue. \"Most Respected Counselor, the Kalandans were an advanced spacefaring species of humanoids who dominated the Alpha Quadrant over thirty centuries ago, before their extinction from a genetically-engineered infection. At their height they possessed significantly advanced technology, such as artificial moons, isomorphic projections with telepathic capabilities, and spatial trajectors that could catapult vessels up to a thousand light years in distance.\" \n\n\"The extent of their technology was not known until Stardate 5690.14,\" T'Varik continued, \"When the Enterprise encountered an intact Kalandan outpost. Their presence triggered a self-destruct code that wiped the outpost's memory and rendered the technology indecipherable. But the accounts from Captain Kirk and his crew were enough to conclude that any and all Kalandan artefacts subsequently discovered be placed under the Pandora Protocols.\" \n\nKami stared at her, and then moved her hand over her head to confirm her ignorance of the subject. \n\nHrelle took the call. \"We like to think that Galactic History started with us. But there have been powers here centuries, millennia before the Federation, the Klingons and Romulans: the Kalandans, the Iconians, the Slaver Empire, the Tkon and others. Most of their technology is lost, but it's recognised that should any be discovered intact, it could tilt the balance of power in the Quadrant. So there's the Pandora Protocols.\" He nodded to Kit. \n\nThe cadet concluded for Hrelle. \"Named after the mythological Terran figure who opened a box and let loose a series of plagues and other calamities. Anyone who discovers such artefacts must report them immediately to Starfleet Command and the Federation Archaeological Council.\" ",
        "\"And so someone has arranged to abduct your friend and the Kalandan artefacts and deliver them to the Cardassians?\" \n\n\"No, Most Respected Counselor,\" Kit corrected. \"It was not an abduction. It was an arrangement, made with Piri's cooperation. She lied to me, first about the origin of the artefacts, and then about her meeting on Earth, and then about reporting the artefacts to the Council. I daresay there was hardly anything truthful she said to me.\" \n\nKami looked at him sympathetically. \"I'm sorry, Kit. We can talk about this later.\" \n\n\"Thank you, Most Respected Counselor, but I will not be here.\" Kit faced Hrelle, standing at attention. \"Most Respected Captain, I am formally tendering my resignation from Starfleet.\" \n\nHrelle frowned. \"Why?\" \n\n\"I have failed in my duty. Once I realised that the artefacts were Kalandan, I should have reported this immediately to my superiors. Instead, I chose to wallow in inebriation and self-pity. I do not deserve to remain here.\" \n\nHrelle leaned back in his chair, folding his hands onto his belly as he regarded the cadet, before finally replying, \"Resignation refused.\" \n\nKit blinked. \"Excuse me, Sir?\" \n\n\"I said it's refused. You don't just walk away because you made a mistake. You think you're the only one who's messed up? I have plenty of examples of that in my life, and I'm still here - though I'm sure there's a few in Starfleet who think I shouldn't be. And the same goes for the Counselor. And if Commander T'Varik ever made a mistake, I would expect her to follow our lead.\" \n\nThe Vulcan turned to Kit. \"The Captain's attempt at humour aside, no one is infallible, Cadet. It would not be logical to discard your considerable efforts to date towards becoming a Starfleet officer because of a relatively minor error on your part.\" \n\n\"Kit, you're young and lacking experience,\" Kami reminded him, smiling. \"You're supposed to be making mistakes, and we're supposed to be teaching you. We can't do that if you leave, can we?\" \n\nHe looked at each of them in turn, the emotion in his expression strong and mixed. \"Thank you. All of you.\" \n\nThey were interrupted by a call from the Bridge. \"Captain, we've received word from the Starsong; they have changed course and will rendezvous with us in 6.8 hours.\" \n\n\"Send my thanks to Captain Weynik, and promise him he won't be riding my tail this time. Hrelle out.\" He looked at T'Varik's expression. \"What?\" \n\nThe Vulcan almost gave in to her curiosity to enquire further, before changing her mind. \"Captain, you don't think that calling on the Starsong for assistance is premature, as we have not yet confirmed your suspicions?\" \n\n\"No.\" He began twiddling his thumbs. \"In fact, I expect to be called any time... now...\" \n\nA second later, C'Rash's voice filled the air. \"We think we've found it, Sir!\" \n\n\"Acknowledged, Lieutenant. Have Mr Lowell and the other principals summoned, and make sure to have multiple recordings on your Security tricorders for evidence. Hrelle out.\" He smiled at T'Varik. \"Told you.\" \n\nHis First Officer's brow furrowed. \"Captain... how did you contrive that?\" \n\nThe Captain grinned. \"I have excellent timing.\" \n\n\"He does,\" Kami confirmed, smirking. \n\n* \n\nSS Valley Forge, Aft Cargo Bay 8: \n\n\"Tell Herbert It's No Go! Tell Herbert It's No Go!\" \n\nHrelle and T'Varik drew up to the group sitting on the floor, led, of course, by Laura Lowell. \"Well, I'm glad to see you've recovered enough to once more be a pain in my toches.\" He glanced around at C'Rash, her Security team, Captain Bakunin - and Lowell, as requested. \"Not joining in with your daughter and her friends, Freeman?\" \n\nTheir representative had an expression of outrage - and anxiety, the latter of which he tried to hide. \"I have to agree with them for once, Captain. You can't disturb our shipments of heptatriticale! They're critical to confirm our resettlement on New Eden!\" \n\n\"And normally I wouldn't give two balls of roasted snow about grain, Mr Lowell. But we're not talking about grain, are we?\" He looked to Bakunin. \"Captain, please confirm for the record that Mr Lowell requested that the barrels in this Bay be security-deadlocked to his own biometric signature.\" \n\nThe bearded man, looking confused, nodded. \"Yes. But it's not uncommon for clients to want to have additional security, Captain-\" \n\n\"Did he ask for the same level of security on the other cargo bays with his people's grain?\" \n\n\"...No,\" Bakunin admitted, glancing at Lowell now. \n\nHrelle looked at Lowell now. \"This particular bay is adjacent to Biodome 2, the one where your daughter and her friends almost died. The Surefoot couldn't beam them to safety because of transporter inhibitor technology nearby.\" \n\n\"What?\" Bakunin exclaimed. \"We don't have anything like that onboard!\" \n\n\"It came with the barrels in Cargo Bay 8. Additional anti-theft security, as well as shielding from any scanning devices. Open the door.\" \n\n\"No!\" Lowell looked to Bakunin. \"If you do that, you'll be in breach of contract! We'll sue!\" \n\n\"Starfleet Security Regulation 14.1,\" T'Varik interrupted. \"Authorises a Starfleet vessel to search any civilian vessel when contraband is suspected to be concealed onboard. I believe Captain Bakunin will confirm this.\" \n\nHe did - by moving to the door and overriding Lowell's private seal. As the door opened, C'Rash signalled to her team to move inside, some of them shifting one of the black barrels out, while others remained inside, scanning with their tricorders. \"Looks like every one of them has an inhibitor, Lieutenant.\" \n\n\"Thank you, Mr Gorman.\" C'Rash began unlocking the lid of the barrel. When Lowell made a move towards her, she shot a warning finger at his face, without even looking up at him, before continuing. \n\nFinally she lifted up the lid and set it aside, revealing... auburn grain. \n\n\"You see?\" Lowell sneered. \"Now please, close the lid, it's moisture-sensitive-\" \n\nC'Rash dove her hand into the grain, fished around, and withdrew a foot-sized plastic package of a cobalt-blue powder. \n\nLaura and the other young people rose to their feet, their collective confusion expressed through Laura asking, \"What is that?\" \n\n\"Vraxoin,\" Hrelle replied darkly. \"An addictive organic narcotic sadly found on many worlds of late, and responsible for much death and suffering. Some of you young people on Eden take a milder version of it based on a local fungus, but what you see here is a more refined, concentrated version. Very valuable to certain organisations, who are willing to fund a colony resettlement if they can transport the drug for eventual distribution in a settled area like Arcturus Prime.\" \n\nAn astonished Laura looked to her father. \"Is this true?\" \n\nThe older man swallowed, feeling the eyes of everyone on him. \"You- You have to understand... I tried to use our heptatriticale to trade for passage for us, for the biodomes. But no one wanted it! Then the Bel-Zon contacted us-\" \n\n\"The Bel-Zon?\" Hrelle spat, his face taut. For some time, he had picked up clues that the criminal organisation, once considered defunct, was back in operation. \n\n\"Our world was dying! Polluted beyond hope because of Baby Killers like him!\" He stabbed a finger in Hrelle's direction. \"We had to preserve what natural beauty remained - and our own lives!\" \n\n\"Have you seen victims of Vraxoin addiction?\" C'Rash snarled, dropping the package onto the top of the barrel. \"Of overdoses? Their twisted bodies, the unendurable pain? The anguish of their loved ones? Is your precious nature worth all their pain?\" \n\n\"There's an old saying,\" Hrelle muttered. \"'One man's Eden is usually attained at the cost of another man's'.\" \n\n\"They choose to take the drug!\" Lowell snapped defiantly. \"No one forces them! I accept no responsibility for that!\" \n\n\"Captain Bakunin,\" Hrelle growled, not taking his eyes off of Lowell. \"The USS Starsong will be here in about six and a half hours. They will take Mr Lowell, his associates and the Vraxoin into custody. They will also require formal statements from yourselves and your crew. You will offer them your full cooperation, of course.\" \n\n\"Of course, Captain, but...\" Bakunin nodded to Laura and the other young people. \"What about them? What will become of them?\" \n\n\"Yes,\" Laura echoed, not able to take her eyes off of her father. \"What about us?\" \n\n\"She didn't know,\" Lowell offered faintly. \"None of them did. I wanted them to stay pure-\" \n\n\"How noble of you. Lieutenant, secure him somewhere.\" Hrelle watched C'Rash take Lowell by the arm and lead him away. Then he looked back at the colonists again, before returning to Bakunin. \"You were paid upfront, Captain. Once you're cleared to leave, I see no reason why you can't continue on your journey with them to Arcturus Prime.\" \n\nLaura blinked, not certain she was hearing correctly. \"You're... you're letting us go free?\" \n\n\"Of course. Unless you want to be conscripted into our Death Armies of Baby Killers?\" He drew closer. \"Your people are going to need a new leader, or representative, or whatever you want to call yourself; you seem loud and opinionated enough to fit the role.\" \n\n\"I- I-\" She paled, as the enormity of what he was suggesting sank into her. \"I don't know if I- I-\" \n\n\"If you can do it? That's good; you should always have some doubt in there somewhere. But you'll have a little under 115 days before you get to your new home to learn a few things.\" \n\nLaura's jaw dropped, and she looked at her friends again. \n\nHrelle smirked. \"Well, it shut you up, so it can't be all bad.\" \n\n* \n\nUSS Surefoot, Corridor 4: \n\nKit stopped outside his quarters, breathing sharply, trying to control his racing hearts. \n\n\"Why are you hesitating?\" \n\nHe looked back at the Counselor, who was leaning against a wall, arms folded across her chest, watching him. He swallowed. \"They will be unforgiving of my recent behaviour.\" \n\n\"I doubt that.\" \n\n\"I vomited onto Good Friend Sasha.\" \n\nKami smirked. \"Well, you can always offer to let her do the same to you someday.\" \n\nHe breathed out, staring at the floor. \"But what if-\" \n\n\"Kit, if I stand here any longer, I'll pee myself, and it'll be on your head. So to speak. Now get in there.\" \n\nHe nodded and stepped forward, expecting a sea of angry, accusing faces- \n\n-And instead seeing his friends lounging about, talking and laughing, drinks and snacks around them, all pointed towards the entertainment screen on the far wall. Sasha, reclining on the couch against Eydiir, smiled up at him. \"About time you got here! Another five minutes and we would have started without you!\" \n\n\"Started? I- I do not understand-\" \n\nSitting on the floor beside Neraxis, Jonas smiled. \"Movie Marathon! I've picked out some classic trash! We have spaceships, aliens, robots-\" \n\nEydiir nursed her beer. \"We have all these things already, in abundance.\" \n\n\"These are how Twentieth Century filmmakers saw such things! Invasion of the Saucer Men, Queen of Outer Space, Beginning of the End, Robot Monster-\" He nudged Neraxis. \"If you get scared, Ner-Ner, just hold onto me.\" \n\nThe Bolian belched loudly and grabbed a handful of extra spicy Crunchicles. \"Yeah, right, Scrappy.\" \n\nRrori sat in the single chair, cradling an icepack in his lap. \"I hope that there will be nothing too sexually explicit in these? There's been far too much of that lately for my liking.\" \n\nKit looked to each of them in turn, thoroughly confused, but decided to press on. \"Good Friends, I must-\" \n\n\"You must sit down,\" Sasha finished, pointing at the spot on Jonas' free side. \"We've got drinks and snacks already waiting, and the rest of the night to spend together. After all, who knows how many of these we'll have. Right?\" \n\nKit flushed red with pleasure, before nodding and taking the place on the carpet, lifting up the bowl he found and hissing with delight. \"Mixed Honey Roasted Insects! Thank you, my friends, this will be a treat!\" \n\n\"Yeah,\" Neraxis chuckled. \"Throw me over the ones you don't like.\" \n\nHe examined the assorted contents. \"I think the only ones I will not like are the bees.\" He wheezed, knowing what was to come. \"They... give me hives.\" \n\nThe others groaned. \n\nHe wheezed again, unrepentant. \n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE IN... SPACE ODDITY"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "fanfic",
        "starfleet",
        "federation",
        "alien",
        "caitian",
        "cardassian",
        "maquis"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-20-one-mans-eden"
}