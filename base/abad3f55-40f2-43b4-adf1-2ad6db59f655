{
    "title": "The Afflicted",
    "pages": [
        "Hello, and welcome to The Afflicted! This work was up on Literotica a few years ago and was fairly popular. Due to lots of requests, I am now re-posting the entire thing in one work. I hope you enjoy! Please vote and comment if you are so inclined, it is always appreciated. \n\n\n\nCHAPTER 1\n\n\n\nThe Year - 1869. \n\nThe steel flashed beneath the setting moon. The clash of the swords was the only noise on the deck of the ship other than the whisper of the wind through the sails.\n\nThe family had the ship to themselves every night from midnight until 5:00 am, barring bad weather. The only other persons allowed above were the captain, and his three most trusted mates, all of whom were long-time employees of the Council and were models of discretion. The rest of the crew was essentially locked below during the wee morning hours for the family's protection.\n\nClaude's father, Palo, insisted that the children continue their sword practice throughout the voyage.\n\nSpending the better part of each day locked in their double-sealed quarters below-decks made their time above a welcome relief, regardless of the activities.\n\n\"Sword arm higher, Aim\u00e9e\" said Palo in his cultivated English accent, tinged with the rich French tones he'd gained from his privileged Moroccan upbringing. \"That's it.\"\n\nClaude made a quick retreat as his sister came at him with an energetic attack. Their swords flashed in a nearly invisible web. Claude was nearly disarmed but managed to hold on to his weapon. Aim\u00e9e grew overconfident and Claude knocked her weapon aside. In the same motion, his sword slashed across her forearm, leaving a huge bleeding gash.\n\n\"Merde!\" shouted Aim\u00e9e, dropping her weapon.\n\n\"Aim\u00e9e, that was careless,\" said Palo. \"Further, I have told you, English only, in order to be ready for America.\"\n\n\"Well I am sorry, father,\" said Aim\u00e9e angrily. \"I wasn't exactly thinking of the correct language I should swear in.\"\n\n\"'Damn it', or 'fuck' would have worked,\" said their mother, Frederique, who was reading by lantern in a chair.\n\n\"I'll remember that,\" said Aim\u00e9e.\n\nFrederique placed her book down and stood. \"Well, I suppose it is my turn. What do you say Palo?\"\n\n\"Absolutely.\" said their father.\n\nFrederique stood. She was dressed very properly, which wouldn't do for swordplay. First, she removed her large skirt, and then began unlacing her top, revealing the creamy white skin below. At the same time, Palo removed his doublet, uncovering the well-muscled, chocolate-hued chest below. For Claude and Aim\u00e9e, their parents were simply their parents. However, even they were aware that there were few to compare with their parents in terms of physical beauty. The difference in the color of their skins seemed to heighten their attractiveness by contrast. Claude and Aim\u00e9e watched on as their parents prepared. Frederique now stood in petticoats and a corset, loosened for movement. Palo stood in breeches only.\n\n\"How is it healing,\" asked Claude of Aim\u00e9e as their parents prepared to fence.\n\n\"Good, it wasn't too deep.\"\n\nClaude glanced down at her arm, and the healing was progressing well. The blood had stopped and the wound was already scabbed over and mending.\n\nThe Affliction, as their condition was called, always helped things along miraculously. Though they could not live in the light of day, there were many positive trade-offs to make it worth their while. This rapid healing was one of the greatest benefits. In terms of the activity at hand, it made those of the Afflicted some of the most stunning swordsmen the world had ever seen. Not only did the Affliction enhance physical strength and reflexes, the healing it offered gave the Afflicted an unbelievable advantage. First, they could train in 'real' conditions. No wooden swords or blunt edges for them. An opponent in a real battle gave no quarter, so they offered themselves none when they trained. That, and not having to fear injury, made them ferocious opponents. Hunted as they were, 'vampires' (as the rest of the world called them), meant such skills were gravely needed from time to time. In sparring, mortals needed to wear protective clothing and use training blades. With the Afflicted, there was only one rule - avoid the heart or decapitation. Even severed limbs could be grafted back on and would heal in a day or so. Though the Affliction could heal almost anything, there wasn't much to do for any being with a ruptured heart or a severed head.\n\n\"Voler?\" asked Frederique.\n\n\"English, darling.\" admonished Palo.\n\n\"Very well then. Flying? Both of us?\"\n\n\"I think we should, it has been a while,\" said their father.\n\nClaude and Frederique shared an excited glance. Their parents sparring sessions usually involved at least one of them staying on the ground, so as to be prepared for mortal opponents. However, fights between the Afflicted were known to happen, so air-to-air flying was practiced as well.\n\nTheir father was widely acknowledged as one of the greatest swordsmen from the African continent. Even before their mother had taken him as a mate and blessed him with the Affliction his prowess had been legendary. Still, he was relatively young, being over five hundred years younger than Frederique. On the ground, her greatly superior experience made them fairly evenly matched on the ground, though if Palo was patient he could wear down their mother with his greater strength. The tipping point occurred when they took to the air. As great as their father's reputation was with the sword, all of their friends among the Afflicted spoke even more highly of their mother's flying skills. Her speed and ability, and the ease with which she flew were amazing to behold.\n\nBoth Claude and Aim\u00e9e had yet to 'awaken', as it was called when the Affliction came to full strength, so they had yet to fly (or whatever talents the Affliction might manifest in them). After all of their drubbings at their father's hand, they always looked forward to the observing flight sessions where they knew their mother would emerge victorious.\n\n\"Salute,\" said their father, holding his blade to his forehead.\n\n\"Salute,\" said Frederique, holding her longer blade upward, while readying her shorter sword in her left hand. Her preferred method was always two swords: a longer spadroon and a shorter double-edged sword for parrying. Their father had chosen his favorite this evening, an extra-long curved saif.\n\nOne of the most entertaining elements of flight duels was unpredictability. Some duels would start with one opponent rocketing into the skies, the other pursuing them.\n\nTonight started differently. Their parents stayed on the deck, circling each other cautiously, parrying briefly now and again as they looked for an opening.\n\nAt last it was Palo who grew impatient and engaged fully. As always, it was startling to see. To the non-Afflicted, no swords would have been visible in this exchange. Even to Claude and Aim\u00e9e, the blades were a blur from their speed. They watched in awe as each thrust and slash was met with a parry, as each feint was anticipated and countered. At last, Palo found an opening. Both Claude and Aim\u00e9e gasped as they saw their father's blade thrusting toward their mother's left breast. They needn't have feared, however, as Frederique sailed backward across the deck and then made for the skies, Palo directly on her heels.\n\n\"I wonder how long it will be before we can do that\" said Claude wistfully.\n\n\"I know,\" replied Aim\u00e9e. \"To leave the earth, to soar like that; how wonderful it will be.\"\n\nThey watched as well as they could as their parents played a fascinating game of cat and mouse among the rigging and sails of the ship. Here, Frederique would be behind a mast, there Palo would appear from behind a sail. At last, Palo caught her in the open and they soared upward once again.\n\n\"He's done for,\" said Aim\u00e9e. \"I'll give him thirty seconds.\"\n\n\"Agreed,\" said Claude, \"but I'll wager a minute.\"\n\n\"Very well, let's count.\"\n\nThe two of them began counting the seconds as the sound of the clashing swords grew further and further away.\n\n\"Thirty,\" said Claude. \"I win.\"\n\n\"It is a long way from a minute,\" smiled Aim\u00e9e.\n\nThey kept counting and squinting at the skies, not even able to make out their parents in the darkness.\n\n\"Fifty-five, fifty-six, fifty-seven...\"\n\n\"You win,\" said Aim\u00e9e.\n\n\"Let's see how he does though,\" said Claude. \"He's doing much better recently.\n\nThey reached nearly eighty when they heard their father's pained cry far above them.\n\n\"Very good,\" said Aim\u00e9e, \"a new record.\"\n\n\"Below!\" their mother shouted. The two of them ducked beneath the foredeck. Afflicted or not, it still wouldn't be fun to be pierced by a falling sword.\n\n\"There!\" shouted Aim\u00e9e, pointing at the glittering object, flashing thanks to the waxing moon. It was falling ahead of, and to the right of the ship, straight into the waves.\n\n\"Damn!\" said Claude, \"Father would hate to lose that sword. Send mother after me.\"\n\nWith that, Claude jumped to the railing and watched the falling object. Timing his dive, he leapt and landed in the water about ten feet from where the sword was due to hit. Plunging downward, he looked up and was grateful to see the telltale splash illuminated, and proudly swam up to catch the sword by the hilt. He burst to the surface, surprised at how rapidly the ship had diminished in the distance. Bobbing among the waves, he treaded water patiently waiting for his mother to rescue him.\n\nBack on the deck, Aim\u00e9e watched as her mother alighted gracefully, followed by her father who held his right shoulder painfully, blood still flowing liberally from a large gash.\n\nAim\u00e9e hastily grabbed a cloth and bucket, sponging off the wound and assisting her mother to place temporary bandages.\n\n\"I almost had her,\" said Palo.\n\n\"It's true, he did.\" said Frederique, \"and I'm not being generous, you are getting terribly good in the air, my love.\"\n\n\"Someday,\" said Palo. \"Someday I will best you, my beautiful, fierce creature.\"\n\n\"Aim\u00e9e, where is Claude?\" asked Frederique.\n\n\"Mon dieu!\" cursed Aim\u00e9e. \"He's in the water; he went after Father's sword.\"\n\n\"Oh dear,\" laughed Frederique. \"I'm glad you thought of it now, we could have lost him for good.\"\n\nShe levitated and started off the ship. \"Just follow the wake,\" said Palo.\n\n\"I know, dear.\"\n\nA few minutes later, Claude saw the silhouette against the stars and waived his father's sword in the air, hoping the blade would catch the light of the moon. It served his purpose, and he soon saw his mother swooping down, brushing her fingers along the water as she approached him.\n\n\"You know, we can always replace a sword,\" she admonished him.\n\n\"But I have you, Mother,\" he said, grinning, \"the greatest flier in the history of all the Afflicted. You know how much father loves this sword.\"\n\n\"True,\" said Frederique, \"and now you are found. How is the water, by the way?\"\n\n\"Surprisingly warm,\" said Claude.\n\n\"Good, I'll wash off some of this sweat.\"\n\nFrederique lowered herself gracefully into the water, letting a swell in the waves engulf her. Soon, she reappeared, water streaming from her hair. She swam about for a few minutes, laughing and chatting with Claude about the duel with his father, among other things.\n\n\"How beautiful the moon is this evening.\"\n\n\"Yes,\" said Frederique, \"And just two days until full.\"\n\nThere was more than a hint of worry in her voice, though Claude failed to detect it.\n\n\"Well then? Pret? Ready?\" she asked.\n\n\"Yes,\" said Claude.\n\nFrederique swam up beside him and pulled him to her, readying to lift from the water.\n\nClaude had swum with his mother countless times in the past. They'd had a pool below ground in their old house and it was a daily activity with all of them. They were also a very 'touchy' family, and had never shied away from physical contact, taking it almost for granted.\n\nGiven that, what happened next was a true shock to Claude's system.\n\nAs Frederique pulled him close and he could feel her body through her wet undergarments, a startling bolt of energy shot through his system. It was as though his skin was on fire, and down below, he felt himself hardening inexplicably.\n\nFrederique herself seemed to sense something and turned to Claude, her face a fraction of an inch from his. \"Claude, is everything all right?\"\n\n\"Oui mother,\" said Claude, looking away from her, embarrassed and overwhelmed by his body's reaction.\n\n\"Are you sure? If anything is amiss, you should tell me.\"\n\n\"I'm fine.\"\n\nFrederique pulled him closer as they lifted from the water. Again, his body cried out with strange, anxious longing. He shuddered as they lifted into the air.\n\n\"Claude, are you sure?\" said Frederique, gently.\n\n\"Yes, just the chill of the air, mother.\" he lied.\n\n\"I see,\" she said, her eyes squinting suspiciously. Yet, she said nothing else and pushed him away, holding only onto his hand in order to extend her sphere of flight around him. \"Off to the ship.\"\n\nClaude was both grateful and sad at their parting. Something inside of him screamed out upon their separation, though it did ease his longing. Still, the point where their hands touched felt electrified, and all his body wanted was to pull her close to him again.\n\nTheir flight back was quiet. In spite of what Claude had said, the air was actually warm. By the time they landed back on the deck of the ship, they were entirely dry from the warm breeze they'd flown through. Claude's heart skipped a beat as he looked at his mother, her hair radiant and full in the moonlight. With a last feeling of reluctance, he let loose of her hand.\n\n\"So? How are our wounded?\" asked Frederique.\n\n\"I was all better long ago,\" said Aim\u00e9e. \"Father is getting there. You dealt him quite a blow.\"\n\nPalo sat, still holding the bandage to his shoulder.\n\n\"It's that damn second sword,\" he said, half angrily. \"Not gentlemanly, I've always said.\"\n\n\"First, I'm not a gentleman,\" said Frederique. \"Second, that second sword has defeated more enemies than I can count.\"\n\n\"True, true. But I had you for a while there,\" insisted Palo.\n\n\"You did, mon cher. You did indeed,\" she said, snuggling under his strong arm. \"Soon, you will be the master of the skies as well.\"\n\n\"That will be quite a while, I fear.\"\n\nClaude went straight to the cleaning kit. Saltwater was beastly with blades, and he wanted to oil it thoroughly to prevent any damage that might have been done. He had another reason for crossing there, it allowed him to distract his mind from his mother and the feelings their touch had stirred.\n\nPalo stood and removed the staunch on his shoulder. The wound had shrunken to a small hole and would be gone within the hour.\n\n\"My thanks to you, son.\" said Palo. \"That one is a gem of a weapon.\"\n\n\"It was my pleasure, father.\" said Claude, not daring to meet his father's eyes from shame.\n\n\"Is everything well with you, Claude?\" asked his father, concerned.\n\n\"Yes. Yes. I just think that treading water all that time took a bit out of me. I just need some rest.\"\n\n\"The sun is coming soon enough. Take it easy up here while you can. Thanks, once again.\"\n\nClaude nodded quietly and walked to the end of the ship, leaning on the railing and looking out at stars dwindling into the approaching dawn. He contemplated the odd sensations within him, and then realized something which truly put him in bad spirits. They had to return to below-decks soon.\n\nWith her usual catlike silence, Aim\u00e9e appeared beside him and also peered out at the stars.\n\n\"Mother says you must come in,\"\n\n\"I know. I just want a few more minutes longer in the fresh air.\"\n\n\"I don't blame you,\" said Aim\u00e9e. \"Each day, it seems longer than the one before down in that horrible hold.\"\n\n\"It's not just being below,\" said Claude. \"Our cabins are like a palace compared to what the crew must live in. No, the problem is our parents. Listening to them all day long, it will drive me crazy. You'd think they could at least be a little quieter.\"\n\n\"They never have been,\" said Aim\u00e9e, shrugging. \"Why would they now?\"\n\n\"Because now, we are not in a thirty room mansion with them at the far end. Now, there are only two inches of wood between their cabin and mine. Doesn't it bother you?\"\n\n\"I have your cabin between mine and theirs so it isn't so loud. Now come down below.\"\n\nThey both walked to her cabin and flopped down upon her bed. Their legs ended up brushing together as they sat on opposite ends of the bed. Again, the familiarity was there, Claude and Aim\u00e9e had always had a great sense of comfort with each other.\n\n\"What do you think it is going to be like when we get there?\" asked Claude.\n\n\"I'm not certain, but I'm sure it will be wonderful,\" said Aim\u00e9e, smiling. \"The civil war is over -- there is now equality for all. Mother and father will have a place where they are truly accepted, no?\"\n\nClaude suppressed his first response, not wanting to hurt Aim\u00e9e's feelings. She had always been the eternal optimist in the family. Claude had asked many sources. He feared they were in for a rougher path than Aim\u00e9e suspected because of their skin color, but he tempered his words.\n\n\"What I think,\" he said, \"Is we may still meet many who don't approve of our father's dark skin... but since our dealings are only by night, father will be able to continue to grow our wealth with few people knowing his face. I think I will have a harder time of it, but you... with so much of mother's coloring... I think you can say you are Spanish or Greek maybe, and not worry about the black part of the equation.\"\n\n\"Greek? Why would I say such a thing?\"\n\n\"You'll see, Aim\u00e9e. You'll see.\"\n\nClaude scrutinized his sister. She had changed immensely in the past year. She had been a gangly tomboy not that long ago. It seemed her breasts had appeared overnight, and the curves in her hips had soon followed. He had teased her mercilessly about her newly acquired 'friends'. Sometimes he'd paid the price for his teasing. Her tomboy muscles hadn't disappeared, merely been covered up by more curvy flesh, and she'd come out the victor in several scraps. She wasn't as strong as him, but she was far swifter and used that to her advantage.\n\nWhen they had learned they were to be traveling to America, the teasing had stopped, though. Knowing they would only have each other as allies for some time had led to a shift in their relationship.\n\n\"What are you looking at?\" asked Aim\u00e9e, noticing Claude's gaze.\n\n\"Nothing. I'm just wondering how many of the Afflicted's hearts you're going to break before you choose your first mate.\n\nShe blushed.\n\n\"Claude, is that a compliment?\" she asked shyly.\n\n\"Perhaps, but don't expect such things very often.\"\n\n\"Oh, I won't. But thank you all the same.\"\n\nShe pushed down beside him, pushing into the crook of his arm and snuggling across him.\n\n\"So,\" said Claude, \"We start in New York, there to be auctioned off.\"\n\n\"Oh stop, silly.\"\n\n\"No, not auctioned,\" Claude continued, \"but that's where they will have gathered all of the other single Afflicted. It just feels so odd, being put out to stud, so to speak. It's like when father would breed horses. He would put the stallion in the pasture with the fillies and just see what happened.\"\n\n\"But the fillies will also have a choice here,\" said Aim\u00e9e, her eyes flaring.\n\n\"I wasn't saying they didn't. That was just the closest analogy I could find. What do you think they'll do? Strip us naked and throw us in an underground room with padded floor and pillows. Leave us there until we've paired up?\"\n\n\"You'd like that, but I suspect they'll be more subtle in their approach.\"\n\n\"I suppose you're right,\" said Claude, turning away from her so he was facing out. Aim\u00e9e hugged herself into his back.",
        "\"Where do you think we'll settle?\" asked Aim\u00e9e.\n\n\"Father says there are three choices. There is a large community in New Orleans, which mother would love because of all the French. New York is the best because of its size - so easy to blend in and stay unnoticed. Father is most in favor of Boston because of the long winters.\"\n\n\"What does he know?\" asked Aim\u00e9e. \"None of us except mother has ever seen snow.\"\n\n\"True, but it isn't the snow that he cares about. The further north, the longer the nights are in winter. You know how father hates it inside. Imagine, nearly fifteen hours outside on the shortest day in December!\"\n\n\"That would be something,\" said Aim\u00e9e.\n\n\"Allo? Allo?\" They heard their mother's voice echoing down the hallway.\n\n\"In here, Mama,\" said Aim\u00e9e.\n\nFrederique looked into their cabin; a curious spark crossed her face as she saw them together, but passed quickly. She carried a tray with four glasses full of red liquid. Two were smaller, but two were at least four times the usual size.\n\n\"Time for your medicine.\" she said, serving up the two larger ones to her two children who had sat up to greet her.\n\n\"Why so much, mother?\" asked Aim\u00e9e. \"Poor Veronica, she will waste away.\"\n\nVeronica was the blood nurse for this journey. Blood was one of the needs of the Affliction, but not to the extent of all of the stories about vampires. A small vial a day was enough to curb the bloodlust which came with their condition. Every family usually had a blood nurse on staff, or shared one between families. Blood nurses were paid very well for their blood... and for their silence. Veronica was an ample German woman of middle years who had signed on to the voyage in order to join her sister's family in America.\n\n\"I think Veronica has plenty to spare. She'll be fine. I just want to be extra careful. The moon is full three days from now.\"\n\n\"Oh Mother, you worry so much. I feel nothing,\" said Aim\u00e9e. \"Do you, Claude?\"\n\n\"No. Not at all.\"\n\n\"Better safe than sorry, darling,\" Frederique said, watching patiently as the two drank their helpings of blood.\n\n\"Good. Well, it is time for your parents to get some sleep.\"\n\n\"Good day, mother.\" said Aim\u00e9e.\n\n\"Good day, mother. Sleep well,\" echoed Claude.\n\nThat greeting was one of the curious phrases of the Afflicted. The meanings were reversed. \"Good Night,\" was something akin to \"farewell for now, whereas \"Good Day was often accompanied by \"Sweet Dreams\" or something of the sort, since The Afflicted slept while the sun was up.\n\nFrederique left and they watched in silence until hearing the door to her cabin click shut. Aim\u00e9e started snickering first, bringing Claude into laughter as well. He fell on his back, laughing, and Aim\u00e9e climbed astride him.\n\n\"Sleep,\" she whispered, chuckling. \"Is this how she sleeps?\"\n\nShe lifted her hands to her hair and rolled her head seductively. She closed her eyes, snoring but still gyrating her hips.\n\n\"Or does father sleep like this?\" Claude flipped her over and lay between her legs, moving back and forth comically.\n\nHe stopped moving, but lay on top of her, face cradled in his hands. \"But tell me sister, how do you know so much about our parents and their habits?\"\n\n\"I walked in on them once. I told you, didn't I?\"\n\n\"No!\"\n\n\"Yes, it was after a party. I didn't see that much, I ran away I was so shocked,\" said Aim\u00e9e, smiling.\n\nLying atop her, for the first time he noticed her breasts. Not with his eyes, but with his body, and they felt amazing against his chest. Claude tried to conceal his shock at the stirrings. With frustration, he sensed his member rising again. He quickly rolled off of her and lay on the outside of the bed, facing away from her, hoping she hadn't felt him springing to life at their contact.\n\n\"I have an idea, Claude,\" said Aim\u00e9e, wrapping around him from behind, making him once again aware of her breasts and supple body.\n\n\"Hmm?\"\n\n\"Sleep here tonight, with me,\" she said. \"Just like old times, no? Your cabin is the one next to theirs; in here they are much harder to hear.\"\n\nIt would be like old times. There had been countless nights they'd crawled into each other's beds as children, after a nightmare or merely for companionship. It would be just like old times, except for one thing; the very large and rigid thing between Claude's legs.\n\n\"Aim\u00e9e, that is a very nice offer, but I've been sleeping so lightly. I'll be better by myself.\n\nSaying that, Claude rose and walked to the door, keeping his back to her the entire time until he was able to slip around the edge of the door and peek back in with his erection concealed.\n\n\"Good day, Sister.\" he said.\n\n\"Good day, Brother. Sweet dreams.\"\n\nClaude returned to his cabin, stripping off his clothes which were the only thing that made sleep bearable in the heat of below. He was distressed by the emotions rolling through him. She was his sister, his twin sister. This was Aim\u00e9e, who had tortured him for years with her immature behavior and endless tantrums. This was Aim\u00e9e, who was currently driving him crazy for very different reasons.\n\nFirst his mother; and now his sister. What was wrong with him?! He stared at the ceiling of his cabin, trying to envision other girls he had obsessed about: Tatiana, the daughter of the French consul; Amadi, the maid with the huge breasts. Yes, that helped a little. Amadi and Tatiana together, this tack was working to distract him from thoughts of the women in the rooms next to his, but it was also only serving to make him more aroused.\n\nHe grabbed a book from his shelf. Plato's Middle Dialogues, perfect. He flipped through and started reading Menexenus. He could be a good student, but not when he was sleepy. This was just the thing for him. Blah blah, Pericles. Blah blah blah, Peloponnesian war... and before long he found his eyes growing heavy. He let the book fall onto his chest, turned the wick down on his lantern, and gratefully fell toward sleep -- praying he would sleep through whatever might happen and then...\n\n\"Oh Cheri!\" moaned his mother's voice through the wall. \"How much I've needed you. Come to me.\"\n\nThe moans began. His mother was not known for being quiet. His father was generally more reserved, at least until the end. His mother would always start with hushed tones, but as the passion overtook her she would grow increasingly louder. As well as their voices, there were their actions and tonight his parents didn't seem too interested in the bed. Soon after they started, they were right up against his wall somewhere, and somehow, someone's head was pounding against it.\n\nClaude turned his lantern back up and sat, helpless, as the enthusiastic pursuits continued. If it were night, he could go on deck but now they were stuck in just these three cabins. He seriously reconsidered his sister's offer, but he was rock hard and couldn't risk brushing up against her with the new surge of emotions he'd felt. There was something in his mother's voice that was almost like a siren call, he didn't know how anyone could listen to those low-pitched moans alternating with the higher register without getting aroused. No, he was stuck here.\n\nHe tried Plato again, no luck. He leafed through other books but couldn't read more than a sentence without losing his concentration. He decided to give his cabin a thorough examination. This was a Council ship, designed for the sole purpose of transporting the Afflicted around the world with its secure, dark cabins safe from the sun or inspection, once locked.\n\nHe looked about the cabin and wondered how many people had been transported here and to where they had gone. He knew of one for sure, someone named Ojos. Ojos Paredes. Whoever it was had carved their name into the ceiling. Claude's education so far had included the obvious Latin and Greek, as well as French, English, and Italian. He'd had a smattering of Swedish and Spanish. Drawing on his Spanish, he tried to figure out if this person's name had met anything. Ojos... Ojos... what did that mean? He tried to dig back to his tutoring sessions. Eyes. That was it, eyes. What a strange name. Why would someone name their child 'eyes'? Now paredes, that sounded familiar, but he couldn't remember anything directly. He searched through his mind for similar terms in other languages. Nothing in French... Italian, there was 'pareti', which meant walls.\n\nEyes. Walls.\n\nClaude jumped up, intrigued and gladdened to have something to distract him.\n\nEyes, walls. This must mean that there were eyes in the walls. So either someone might be watching him, or he could see out.\n\nHe began his search, feeling around the walls and the ceiling. He didn't have much luck at first, and then settled back to take a more analytical approach. On the forward wall, against his parents' cabin, was a painting of a sea captain on the deck of a ship, another ship in the background. On the other wall, the one against Aim\u00e9e's was smaller portrait of a woman in an opulent red dress with a jewel necklace.\n\nCould it be that simple, Claude wondered? Could it be that juvenile? He crossed to the painting of the captain and touched the eyes. Yes! There was a seam there, a rectangle around each eye that was barely visible. He pushed on that part of the painting gently, but nothing happened. Examining the rest of the painting closely, he ran his fingers over the surface. There were no more rectangles, but when he reached the portholes depicted on the ship in the distance, they had circles around them. Pushing on one, he almost shouted in triumphal surprise as the rectangle over the portrait-captain's eyes flipped open. He examined the opening and saw the painting was actually canvas affixed to wood. Putting his eye up to it, he jerked back in fear as he saw the scene of sailors working on deck. He was half-certain his eyes would be burned by the bright sunlight.\n\nYet, even though it was day, it seemed darker. He realized that the makers of this viewing system must have used smoked glass... so this was surely an invention of an Afflicted. He watched the sailors a little longer and then pushed the next porthole in line. The view switched and looked on the galley. It was an odd sensation to be looking at the daylight world. He watched in fascination as the cook and his assistant prepared breakfast. All of his life, his only view of the world had been in the evening. He had never seen regular workaday life. He watched, spellbound, trying to decipher the words they were saying to each other. The next button led to the crew quarters. Some of the men were still waking up.\n\n\"Good morning Pete,\" Claude said, entertaining himself by guessing the words the sailors might be saying.\n\n\"Good morning Jimmy. How did you sleep? -- Not so good, Joules was snoring again. -- Oh that's too bad.\"\n\nPalo's voice filtered through the wall and annoyed him somewhat, Palo was SO loud when he reached climax. His pleasured cries rose louder and louder, and as always tapered off very quickly into silence.\n\nClaude was immensely enjoying his new distraction... distraction being the key word. He switched to another port, grateful that his father had climaxed and he would be able to concentrate on his viewing.\n\nNext were the captain's quarters. The captain was poring over charts with his navigator, munching on a breakfast that had just arrived. Tiring of this, Claude found a view that he was sure would be one of his favorites. At first, it didn't seem like much. All he could see was the gray fabric of a sailor's shirt. Then the sailor moved out of the way and he realized this view was coming from the crow's nest. Somehow, the painting's brilliant designer had even found a way to run a line up through the main mast. Claude gasped at the beauty of the ocean when seen by day. Even though it was obscured by the smoked glass, it was still amazing in its detail. It was so unlike the views he'd seen, even on moonlit nights. He gazed here the longest of any so far, loving the infinite view of the waves.\n\nPulling himself away from the crow's nest view, he decided to get an accurate list of where each button led to. He tore out a piece of tracing paper from his notebook, and laid it over the top of the ship and roughly traced the outline of the ship and the portholes. Then he started quickly pushing them one-by-one, noting each.\n\n1 -- Main Deck. 2 -- Galley, 3 -- Sleeping quarters, 4 -- Crow's Nest, 5 -- Stern, 6 -- Mother naked, 7 -- Livestock, 8...\n\n6 -- Mother naked.\n\nHe went back to 6. He peered more closely at his parent's cabin which took some adjusting as it was more dimly lit with only lantern-light.\n\nThere was his mother, sitting on the edge of the larger bed in her cabin, naked, and brushing her hair. His father was in a post-sex coma, but not Frederique.\n\n\"Mon Dieu, she's beautiful,\" muttered Claude to himself. His mother was not modest and often walked around the house in her silks. Claude had even caught occasional glimpses of her dressing, but had either turned away or she had covered herself. He was riveted. Forget the jokes about older women and their sagging breasts, he knew his mother to be nearly six hundred years old. In all those years, two children and gravity had done nothing to affect the shape of the marvelous objects he was viewing surreptitiously. They were full, yes, and gravity played with them in wonderful ways as she moved, but they were no sagging dugs of an ancient crone. Claude had always thought Frederique was one of the most beautiful women in the world. But tonight, as with Aim\u00e9e, he found his mind and body responding differently. Never before had he felt an inkling of desire toward his mother, but now he felt an animal attraction toward her and watched her with a new found hunger.\n\nUnbidden, his hand found its way to his cock, which was ramrod stiff.\n\nForget she's your mother, he thought to himself. Think of her as a woman, a perfect woman, nothing more. \n\nHe tried his best to convince himself there was nothing different from this and times he had fantasized over the nude portraits in their house, or the occasions he had masturbated watching through the windows of the local whorehouse when he was in his early teens.\n\nThere were differences though. First, none of his other fantasy-subjects had looked anything like this. Second, this was his mother. Third, and worst of all was this destitute feeling in his soul which was calling...shouting for him to do something to fill it. Something sexual seemed what was most needed.\n\nHe pumped his cock harder and harder, watching his mother's amazing body through the viewer. If he hadn't known better, he would have thought she was putting on a show just for him. She stood and walked closer to where his viewer led to. He saw her peering right at him, and nearly panicked before he realized his view must come from behind the mirror in her room. She sat in front of the mirror and brushed her hair some more, this closer view was even more stimulating to Claude as he had an even better view of the details of her exquisite figure. The perfection went far beyond her breasts, which were faultless. It was everything. Her sultry green eyes and the way they glowed in her face. Her chin which led to her slender neck... Her skin was inevitably pale, given her lack of sunlight, but it was not stark white.\n\nHe watched her reach down and pick up a glass bottle full of pinkish fluid.\n\n\"Oh no mother,\" he muttered softly. \"Don't do this to me.\"\n\nFrederique loved her perfumes and she loved her oils. Their father often teased her about the expenses, and she teased back that he would give up buying her clothes before he would give up what she did to keep her skin soft for him.\n\nThat was just what she was doing now. Even though there was a wall between them, he could almost smell the aroma coming from the bottle when she opened it. It was her regular oil, a pure olive-oil base with a mixture of rose and orange essences mixed in.\n\nHe felt himself nearly erupt as she poured a dollop into her palm and spilled it down her neck. He slowed his stroking, wanting to extend this torturous pleasure as long as possible, feeding the needs of his body as well as he could.\n\nHe gasped as she began to rub the oil sensuously over her breasts and then spread it further, down her arms, on her neck, across her stomach. All of it was exciting him more and more.\n\nHer hands returned to her breasts, and she began to circle her nipples slowly.\n\nMy god, thought Claude. Could she be?\n\nShe was. He watched her eyes close with pleasure as she circled her nipples with her slick finger then pinch each one in turn. Truly aroused, she kept one hand on her breast, massaging it, and then rubbed her neck with the other, tipping her head back in joy. The opening of the oil bottle was large, and she dipped two fingers into it.\n\nOh please, say you will.\n\nShe did. Claude stroked his full length slowly... keeping himself just on the edge as he watched her drop her oily hand to below her waist. He only wished he could see there, but the view didn't extend that far down.\n\nStill, it was her face that was the most exciting thing to watch as she continued pleasuring herself. Claude nearly went again, but stopped, grasping the base of his shaft desperately. He was able to stop it, barely. A few drops of cum dripped out and dripped downward. He waited, hovering there on the edge as he watched Frederique's own passion increase. Once settled enough, he felt his shaft, grateful for the drops that had escaped... which he now used as lubricant. Frederique's joy was increasing, he watched her breathing quicken and her slow swaying increase in speed. He stroked faster but sadly noticed the cum-lotion dissipating, making him return to straight strokes. He knew he was approaching the point of no return and smiled as he saw his mother doing the same. Her body jerked with the first moment of climax, and he viewed that as his sign to release as well. The pleasure was immense as he and his mother (her unknowingly) came together. The first spray from his cock was immense. The next was almost as large and he sensed the hunger within him being fed. He kept stroking, and with each smaller spurt a disturbing malaise grew. He felt his body subside into a deep sadness. It was as though his body was angry at not having been satisfied in the appropriate way. Claude watched his mother's joy subside and envied her. The content grin on her face glowed as she breathed a happy sigh of conclusion. He pulled away from the view hole, cock in hand. Spent... but not satisfied.\n\n\"Shit!\" Claude whispered and looked down at the damage he had wrought. Cum was dripping down the wall, but even worse, he had drizzled his cum all over his diagram of the painting, ruining it.\n\nHe wadded it up angrily, tossing it into the corner and then grabbing a cloth to clean up the rest.\n\nThere was almost a sense of anger inside him. It was like his body was punishing him for not delivering what it needed.\n\nIt's not my fault, thought Claude, irrationally trying to communicate with his body. Be quiet, let me sleep.\n\nOf course it wouldn't. He tossed and turned for a while and then pulled out another sheet of paper and took more time, making an accurate diagram of the painting and discovering two more locations.\n\nHe went to bed and touched his cock... which was growing erect once more.\n\n\"What do you want?\" he whispered, staring down at the object in question. \"What more can I do?\"\n\nHe knew what he could do, and almost clinically he stroked himself once more. It was not all that pleasurable, thought it did feed a small part of his longing. His greatest hope was this orgasm might let him get to sleep in the aftermath. His masturbation this time was no pleasure endeavor, though he did get some joy from the images of Frederique's stunning body which fueled his one-minded stroking. Sooner than he thought, he felt the fluid stirring deep within him and gasped with the usual bittersweet joy as the white goo shot forth onto his stomach. He fell asleep like that, cum spilled across his stomach and pooled in his belly button, hand on his cock.",
        "Try though he might, his dreams were occupied by visions of his mother's curvaceous form... and of his sister's body pressed against his... and a bit more.\n\n<br >\n\n\n\nCHAPTER 2\n\n\n\nClaude awoke; disappointed to see it was only six hours later. They were near the equator, so that meant at least another seven hours before they could go above decks. He went to the basin and washed himself of the salty crust that had remained on his belly from his exhausted efforts to get himself to sleep.\n\nHe threw some short breeches which were all he could stand to wear in the oppressive heat of the enclosed cabin. He crossed to the painting which offered him views of almost every area of the ship and took a quick survey. He checked his parents' room last and was grateful to see that they were fully clothed. His mother was sewing and his father was reading but there was nothing sexual going on there to arouse things within him.\n\nHe picked up his volume of Plato and decided to study the passage from the night before in earnest. He took a few notes as he went, and was just about to move to the next section when someone knocked at his door.\n\n\"Entr\u00e9.\"\n\nAim\u00e9e opened the door and came in, carrying a small wooden box beneath her arm.\n\nShe was dressed in a simple cotton shift which she'd had worn most nights since she was maybe thirteen or fourteen. The problem was she had grown in every possible way in the several years since she had purchased it. The hem barely reached her thighs. The neck had once been laced, but the cord had been lost. The open neck was loose and generous; the time-thinned fabric allowed her nipples to show through when she turned in the light a certain way.\n\nShe sat down on his bed opening the box, which was her travel chess kit.\n\n\"Play with me, Claude. I am so bored.\"\n\n\"Is that all you have to wear?\" asked Claude.\n\n\"All that works for this heat,\" she said. \"Like you, no?\"\n\nClaude nodded, not having a way to argue around his objection to her garment.\n\n \"Mon dieu I'm going crazy in this ship,\" sighed Aim\u00e9e. \"Wherever we settle, if it's with Mama and Papa or with my mate, I'm going to insist on miles of rooms underground.\n\n\"Miles?\"\n\n\"Miles. I even want a tunnel, all the way around where we live so I can run, or bicycle or do anything I want.\"\n\n\"That could be expensive,\" reasoned Claude.\n\n\"I'll build it myself. I'll have time. Half of every day stuck inside. What would you do? For your house, what would you build into it?\"\n\nClaude glanced up at the painting, recalling the joy it had given him.\n\n\"I would build viewers,\" he said.\n\n\"Viewers?\"\n\n\"Oui. Periscopes, immense periscopes built into the walls of my house so I could watch the outside world.\"\n\n\"But the sun?\" said Aim\u00e9e, curiously.\n\n\"Smoked glass. Pass the light through the right sort, you could still see but you would run no risk.\"\n\n\"That's brilliant!\" said Aim\u00e9e. \"Where did you come up with such an idea?\"\n\n\"Oh, just musing.\"\n\n\"It's perfect. Claude, let's build a house together like the Lumiere's back home. When we find our mates we can build a huge place with our combined money. I get my tunnel, you get your periscopes. I would live in the west wing with my husband; you would live in the east with your wife.\"\n\n\"Perhaps,\" said Claude. \"Now tell me, how many moves do you think it will take for me to beat you today? Four? Five?\n\n\"I'm getting better. Today is my day. I can feel it.\"\n\nClaude had always been the superior chess player. It wasn't necessarily because of brains, but emotions. Aim\u00e9e played with her heart -- only seeing the chance to take a piece without considering the implications two or three moves later. If she could take a knight, it was far more exciting to notice she might be putting her Queen at risk.\n\nToday would be different, and it was her nightgown that was the culprit. The board set, Aim\u00e9e leaned over and grabbed a black and white pawn, shifting them behind her back and then holding out her hands.\n\n\"Choose,\" she said.\n\nClaude was still lingering on the seconds before, when her leaning had given him a full view of her amazing breasts, even a glimpse of her nipples. He found himself contemplating the vision from the night before. His mother had a woman's breasts; breasts which had nursed children and filled out with the years. Aim\u00e9e's were a girl's breasts - or perhaps better described as a young woman's. They were high, proud, pert and round. He found himself contemplating the differences when Aim\u00e9e's voice re-awoke him.\n\n\"Claude. Choose!\" she said. \"Which hand?\"\n\n\"Oh, sorry,\" said Claude and pointed to her left hand. He was already at a disadvantage, the pawn was black.\n\n'Shut up body, shut up!' Claude uttered in his mind.\n\nThe voice inside him did not listen. He found himself growing more and more distracted by her sitting across from him.\n\nWith mortal girls, there was so much about blood. When he was around them, especially if he had yet to have his daily dose, he was always keenly aware of the odor of their blood and of a dormant longing that wished for it.\n\nWith Aim\u00e9e, there was none of that. He could smell her... but it wasn't her blood his body was longing for... it was her.\n\n\"Why did you do that?\" asked Aim\u00e9e.\n\n\"Do what?\" asked Claude.\n\n\"Give me your Bishop? Why did you give it to me so easily? What are you planning Claude?\"\n\nHe was in fact, planning nothing. She studied the board for clues, while he studied her.\n\nThe game dragged on. Soon, Claude made another blunder and Aim\u00e9e looked down at the board in shock, moving her queen to the base row.\n\n\"Checkmate! I won!\" she said, exhilarated. \"I won! It has been years since I won. Oh my god, there is no stopping me now Claude. Let's play again!\"\n\nShe leaned over and kissed him on the cheek, again affording him a magnificent view.\n\nThe next game didn't go much better. Midway through, Aim\u00e9e asked him a question which threw his concentration off even more.\n\n\"Does it hurt?\" she asked.\n\n\"Does what hurt?\"\n\n\"Your erection. Does it hurt like that?\"\n\n\"Oh... I uh...\"\n\nClaude had been so entranced by her presence he had been entirely unaware of the happenings below. He quickly grabbed his pillow and covered it.\n\n\"Don't be embarrassed Claude. I am not an infant. Mother told me of such things. She said that young men, they cannot control this thing. It will get hard at any time it pleases, no?\"\n\n\"Yes, it can.\"\n\n\"And I know it isn't for me, my fr\u00e8re. Brother of mine.\" she said, punching his arm.\n\n\"No, of course not, you are my sister. I'll tell it to go down.\"\n\n\"But does it? Does it hurt?\"\n\n\"Uh, yes and no,\" said Claude, blushing furiously but trying to seem unaffected in his tone.\n\n\"What do you mean?\" asked Aim\u00e9e.\n\n\"Do you really want to know?\"\n\n\"Yes.\"\n\n\"Very well, if it has been a while, since...\"\n\n\"Relief?\" said Aim\u00e9e.\n\n\"Yes, since relief. If it has been a while since relief, it can be almost sore. In general though, it is just... embarrassing, but not unpleasant.\"\n\n\"I see,\" said Aim\u00e9e, shrugging her shoulders and focusing her attention back on the chess game.\n\nThe embarrassment actually helped to quell the lust that had been distracting him so. He was able to draw the second game out and eventually win.\n\n\"My first game must have been luck,\" said Aim\u00e9e, pouting.\n\n\"No. No, you're getting so much better,\" said Claude, touching her shoulder comfortingly.\n\nHe immediately regretted the touch. Everything which had subsided, the lust, the longing - it was reawakened with violent force. His nerves jangled at the touch, so much that he almost jerked back his hand as if she had been a hot stove. He stopped himself at the last moment, gently removing his hand, fighting every impulse within him that wanted to pull her into his arms.\n\n\"What time is it?\" she asked.\n\n\"Nearly five,\" he said, helping her put away the pieces. He relished and feared the occasional touch of their hands.\n\n\"An hour and a half and we can emerge. Fresh air. Do you know something else I'm going to do with our house?\"\n\n\"Oh, it's our house now?\"\n\n\"Yes, I've decided and you have no choice in the matter. Here's what I want. No matter where the basement, how large -- I want a way to get fresh air in at all times. In here, it is so stuffy. In our basement back home, it could be stifling. Fans, ducts, we must find a way to always have clean air.\"\n\nAs you wish, mon capitan,\" said Claude.\n\nShe placed the chess board on the bed, and then flopped over, putting her head in his lap on the pillow.\n\n\"How long?\" she asked. \"How much longer until we arrive?\"\n\n\"The same answer as yesterday, minus one. This is a fast ship. The captain has made this run more than once in thirty-five days. We've been over twenty so far. Twenty more days, give or take, if the winds hold.\"\n\n\"Too long. Are you sure it doesn't hurt?\"\n\n\"What?\"\n\n\"This thing I'm feeling through the pillow,\" she said, laughing.\n\n\"Go back to your room and leave me alone,\" he said.\n\n\"So grumpy. I suppose if I was swollen like that, I'd feel the same.\"\n\n\"Get out!\"\n\n\"Calm down, you great baby. You can tease me about my tits for a year. Tit for tat, Claude. So get some control of your tat.\"\n\nHe slammed the door behind her. He was thankful she'd left. Between his anger and the fact she was no longer present, the blur that had been affecting him lifted.\n\nHe lay and read a book for the next two hours. He suddenly noticed an odd feeling in his stomach. Something was wrong. He couldn't figure out what it was, but something was definitely awry. He went back to his painting and looked out at the main deck. Sailors were standing around on deck idly. He switched over to the crow's nest and looked out on the ocean to see the waves. That was it. That was the thing bothering him; there were no waves. They were entirely becalmed. The surface of the water was eerily glass-like; the clouds overhead were reflected in the water below.\n\nAim\u00e9e came bursting into his room, barely giving him time to flip the viewer shut.\n\n\"What's going on? Why are we stopped?\"\n\n\"I don't know. It seems there is no wind.\"\n\n\"No wind, but that would put us here longer.\"\n\n\"Yes. We'll have to wait and talk to the captain.\"\n\nThe next hour seemed endless with the quiet and stillness of the ship. Claude dealt with it by reading. Aim\u00e9e paced endlessly up and down the hall, entirely unnerved by the change and the possibility it would delay them too long at sea.\n\nAt last, the bosun's whistle blew and they heard the march of feet upon the deck and down the ladders below. This was a disciplined crew, and part of their terms of service meant that only the necessary men would stay above-deck during evening hours. When the only passengers were men, it wasn't an issue, but with two such attractive women aboard the captain had insisted on invoking that particular rule.\n\n\"I'm going up,\" said Aim\u00e9e, waiting at the door.\n\n\"Not yet, Aim\u00e9e,\" said their Father. \"Let Claude and I go first and assure the crew is below.\"\n\nClaude and his father passed through the first door, closing it behind them. Opening the second door brought the usual relief. Claude and his father smiled at each other at the fresh air wafting in. The captain met them at the top of the ladder.\n\n\"Well captain Hubert, what seems to be the problem.\"\n\nThe captain was British, but not the stuffy kind. He had worked his way up through the ranks and proven himself in battle. He was one of the best you could find, and enjoyed his employ by the Council.\n\n\"Just a touch of the doldrums, Mr. Dujobe,\" he said, smiling.\n\n\"A touch?\"\n\n\"I'm not too concerned. This isn't the time of year for it. My guess is we'll have our wind back by morning. But for now, we will not move.\"\n\n\"Ah well, at least we have fresh air,\" said Palo.\n\n\"Yes. Tell me Mr. Dujobe, does your family swim?\"\n\n\"Yes, all of us.\"\n\n\"Excellent. The sails are tied, the men are below... and there's not even any need for me to be here. I give you the ship. Should the wind pick up, I may ask you to return below deck so we can sail again, but for now... enjoy yourselves.\"\n\nAim\u00e9e and their mother had just appeared when Claude was already stripping down to just his short breeches.\n\n\"Swimming,\" said Claude, dashing for the head of the ship.\n\nSwimming twice in two days, such a welcome relief from the daily routine. He dove into the water in a graceful arc and Palo soon dove in beside him.\n\nThey splashed away, reveling in the exercise they'd been missing. Soon, Frederique and Aim\u00e9e appeared on the deck. Frederique wore a loose corset and bloomers, Aim\u00e9e wore a pair of short breeches and a shirt, tied in the middle.\n\n\"What are you wearing?\" asked Claude.\n\n\"What does it look like?\"\n\n\"Are those mine? I didn't say you could have my clothes.\"\n\n\"Did you expect me to swim in a dress? Father certainly wouldn't let me swim naked.\"\n\n\"This is true,\" said their father.\n\n\"Now get out of the way.\"\n\nAim\u00e9e dove in with a graceful dive, disappearing below the water and surfacing beside Claude a few seconds later.\n\nFrederique added her own touch of style. She levitated out directly from the ship for a few feet, and then she turned with a wink, shrugging, and released herself, falling whimsically into the water below.\n\n\"That's no fair,\" said Aim\u00e9e. \"I cannot wait until I awaken, then I will fly to the moon and beyond.\"\n\nThey swam together as a family for well over an hour. They had races, and played games of endurance, seeing who could stay below the water for the longest time. During a break, Aim\u00e9e looked up at the sky and sighed.\n\n\"So beautiful,\" she said. \"And the moon, it's so bright I can almost imagine it is the sun... or the closest I'll ever get to knowing it.\n\n\"Yes,\" said Frederique. \"It's almost full. The last time I saw a sea like this, it was the Mediterranean. Do you remember? In Tunisia, Palo?\"\n\n\"Of course I do,\" he agreed. \"It was our honeymoon.\"\n\n\"How did you get there?\" asked Aim\u00e9e.\n\n\"In a ship much like this one,\" said their mother.\n\n\"We sailed from Gibraltar and through the Mediterranean to Tunis,\" said Palo. \"There was a family there, a wonderful family. The Massris.\"\n\n\"There were so... hospitable,\" said Frederique with a gleam in her eye.\n\n\"Yes, yes indeed they were,\" said Palo, smiling. \"And their house was so amazing. They had discovered an ancient roman bath house, simply sealed up and forgotten. Like many baths, it was built below ground. They simply built their house above, renovated the baths, and that is where they spent their days.\"\n\n\"Both salt and fresh water, continued Frederique. \"They had a large pool of both types twenty-five yards apiece. Plus, hot pools and cold pools. Darling do you remember...\"\n\nShe nuzzled up against Palo, whispering in his ear.\n\n\"Oh yes,\" he said, \"How could I forget that?\"\n\n\"Children,\" she said, smiling. \"We're going to go for a swim on the other side of the ship. Why don't you stay here?\"\n\n\"For how long?\" asked Aim\u00e9e, slyly.\n\n\"For a while.\" she said. \"We'll let you know.\"\n\nThey rolled their eyes as their parents swam around the prow and out of site.\n\n\"Now we can really race,\" said Aim\u00e9e. No more of these short bursts.\n\n\"What will we race to?\" asked Claude. \"There is no goal; we can't race around the ship.\"\n\nAim\u00e9e considered this for a moment.\n\n\"Wait here,\" she said.\n\nShe swam casually, but efficiently about a quarter mile out from the ship. Claude couldn't make out what she was doing, but soon she was returning... and there was a white object floating back where she'd been. He watched her return, and realized she was no longer wearing the shirt. He could see her bare back as she stroked easily through the water.\n\n\"What did you do?\"\n\n\"I filled the sleeve with air and tied it. It will give us a goal and if you don't go, you'll never see your shirt again.\"\n\n\"What will father say?\" asked Claude. You know how he doesn't like you naked.\"\n\n\"You can't see anything. I'm under water.\"\n\nThat was mostly true, though her breasts bobbed deliciously just below the surface.\n\n\"And,\" she continued, \"I'm not wearing these either. They don't fit, and they slow me down.\"\n\nShe reached down the below the surface, treading water awkwardly and then pulling up her hand to reveal his breeches. She hung them on the lowest rung of the rope ladder.\n\n\"You can do the same,\" she said. \"It might be your only chance of beating me.\"\n\nShe was right. He was physically stronger, and often the faster runner but she was a natural fish and had always been the victor in the water. He considered his mental state, and decided it wasn't much of a risk. He'd had very few 'wrong' thoughts while in the water, and a race would certainly be distracting.\n\n\"All right sister,\" he said, removing his own pants. \"Is it a race there, or there and back?\"\n\n\"Just there, so we can retrieve your shirt.\"\n\n\"Good point,\" said. Claude. \"On your mark, get set... Hey!\"\n\nAim\u00e9e had already pushed off of the ship and was on her way.\n\nClaude forgot everything but the race, and as he did a curious thing happened. He was so intently focused on what he was doing that he found himself growing lighter. It was as if he was a piece of wood atop the water, he felt so light. For the first time in a long while, he was able to look back him and see Aim\u00e9e far behind him. He continued his feverish pace and finished a good seven lengths ahead of her. What's more, once he arrived, he was barely winded. He treaded water and waited for her to reach him.\n\n\"My god you were fast!\" said Aim\u00e9e, gasping for breath.\n\n\"I was...lucky. Besides, you had already swum out to deliver the shirt.\n\n\"No, I swam easily then. Besides, I cheated and pushed away early.\"\n\n\"Strange day,\" said Claude. \"First you beat me at chess, now I beat you at swimming.\n\nAim\u00e9e really had put everything into her effort. He recovered his breath first while she was still gasping in air in deep breaths.\n\n\"Are you rested?\" she asked.\n\n\"Yes, surprisingly.\"\n\n\"Good, then you can let me rest on you a little while.\"\n\nShe swam up to him and clasped herself to him. Resting her head against his neck, her body floated in against his side.\n\nThis time the shock of recognition was like a lightning bolt that went through his body. Every one of his senses cried out for her, ached for her. He did everything he could to suppress his desires, knowing how wrong this all was.\n\n\"Claude, is something wrong?\" asked Aim\u00e9e, whose breathing was recovering.\n\n\"No Aim\u00e9e, no.\"\n\n\"But you are shaking. Why? The water isn't cold.\"\n\n\"No, no it isn't cold.\"\n\nHe couldn't even look in her eyes. She kept her hold around his neck, but drifted around to directly face him.\n\n\"Claude, what is it?\"\n\n\"Nothing,\" he said.\n\n\"But it is something. What is wrong?\"\n\nHer body drifted into him again and her leg brushed against his cock... which did hurt, from longing.\"\n\n\"Oh my,\" she said.\n\n\"Oh my god, Aim\u00e9e,\" he groaned. He pulled her into him, every part of his body loving the feel of her flesh against his. Her breasts on his skin, her leg against his cock; every place where they touched seemed to drive his lust to an even higher level.\n\nHe lost his concentration, ceasing to tread water with his free hand. They went plunging into the water as he kissed her desperately below the surface. She struggled and pushed herself away from him. They both surfaced, sputtering.\n\n\"What are you doing!\" she screamed. She looked at him with a mixture of fear and disgust. Recognition was beginning to dawn on her features.\n\n\"Claude, today you were odd, and you were hard. Now, you do this! Claude, I'm your sister!\"\n\n\"Aim\u00e9e, I wish could explain,\" he stammered.\n\n\"Do you honestly want me like that? Your own relative?\"",
        "\"The answer is yes and no. I do not want you. Claude does not want Aim\u00e9e. But something within me does. Aim\u00e9e, I am so sorry.\"\n\n\"How could you?\" said Aim\u00e9e. \"Your own flesh and blood. What is wrong with you?\"\n\n\"I don't know. Just... just stay away from me for the rest of the voyage. When we get to America... well, we won't have a house together. We needn't even choose the same city.\"\n\nHe swam dejectedly back to the ship. He grabbed his breeches from the rope ladder, ascended, and walked sadly into his cabin where he lay on his bed impassively. Perhaps half an hour later he heard a knock on his door.\n\n\"Entr\u00e9'\" he said.\n\nIt was his father.\n\n\"What did you say to your sister?\" Palo asked.\n\n\"Nothing. Nothing, father.\"\n\n\"Nonsense, you said something.\"\n\n\"It's personal, between us,\" said Claude, not wanting to explain any more.\n\nHis father didn't pursue it any further, and left.\n\nSoon Claude heard the women return. It sounded as if Aim\u00e9e threw herself on her bed and he heard sobbing coming through her wall. Another knock on the door.\n\n\"Yes?\"\n\nHis mother came in, carrying a cup. He turned his head to the wall, not even wanting to look at her.\n\n\"Go away.\"\n\n\"If you wish, but first you must drink.\"\n\nHe reluctantly turned to her, sitting up to take the goblet she offered. This was a large serving of blood, mixed with wine this time.\n\n\"Would you like to talk?\"\n\n\"No mother, I would not like to talk. I am sick.\"\n\n\"I talked with Aim\u00e9e. It is true, you are sick.\"\n\n\"You think so, too?\" He turned to hers with tears spilling down his face.\n\n\"Yes cheri, you are sick. We all are. It is called the Affliction, as you know.\"\n\n\"That is no excuse. You should have seen the look on her face, mother. Aim\u00e9e, my sister, I can never repair that. She doesn't understand.\"\n\n\"No, not yet. But she will soon. Do not despair about Aim\u00e9e. Time heals many things; this will be one of them. \"\n\nShe reached up to smooth his hair.\n\n\"Don't touch me, Mother. Please.\"\n\n\"Very well,\" said Frederique, smiling sadly. \"Listen to me Claude. You are beginning to awaken.\"\n\n\"No.\"\n\n\"Yes. I thought I felt something yesterday. You should have told me.\"\n\n\"Mother, I couldn't.\"\n\n\"Claude. These things, these feelings, they are not wrong, they are inevitable.\"\n\n\"No, they're not.\"\n\n\"Yes, they are and we will talk more of this later. Try to rest.\"\n\nShe returned to her cabin.\n\nPerhaps an hour passed and the boat rocked curiously. Claude went to the painting and selected the crow's nest. The wind was whistling through the ropes. He saw the captain stand on deck and blow a whistle, and the sailors appeared shortly thereafter. It was a marvel to watch them at work, climbing the riggings, unfurling the sails. The reaction was almost instantaneous as the sails dropped down and the wind filled them... he felt a gentle lurch as they began their journey forward once again.\n\nHe longed to go into Aim\u00e9e's room and tell her of the happenings. Sadly, he knew he couldn't and he closed the viewer and sat back on his bed, full of melancholy.\n\nAs he sat there in self-imposed exile in the confines of his room, something occurred to him. Though the viewer in the painting led to many areas of the ship, it didn't show everywhere. It just seemed odd that someone would go to so much expense and trouble without accounting for every room in the ship. He turned curiously to the other painting, the portrait of the woman. Running his fingers over the surface, it all felt smooth... except another rectangle around the eyes. She was wearing a jewel necklace. Reaching down to the emerald in the center of the string, he pushed and smiled as her eyes flipped to reveal another rectangle. Looking in, he saw a wonderful view from the aft deck, looking back on the wake of the ship. Another showed the rear deck. Two of the views were equally wonderful; showing the port and starboard views. The next startled him... it was Aim\u00e9e's room. She was lying on the bed in her nightgown, weeping. He so wished to run to her, to comfort her... but it was too late for that, AND he couldn't trust himself once he was there. He wished he could at least hear her voice, to be that much closer to her. Putting his hand up to the painting as he peered closer into the viewer, he felt an odd ridge under his fingers. Pulling back, he discovered the pearl earring of the woman was also raised. Pushing it, he smiled to see her other ear flip open. Suddenly, the sniffling of his sister was clearly audible.\n\n\"Oh Claude,\" she whispered. \"Why?\"\n\nShe crossed toward him... again, the mirror, he suspected. She wiped her eyes and gazed at herself in the mirror.\n\n\"It's these,\" she said, angrily pushing on her breasts through her gown. \"If I didn't have these he would still be my brother and he would not want me.\"\n\nShe was clearly exhausted; her eyes had bags under them and were half-lidded.\n\n\"It will be better tomorrow,\" she said. \"Mama said sleep, wait. Things will look better. I don't know how, but I must.\"\n\nShe crossed to her bed and Claude unconsciously caressed the wall as he watched her fall asleep.\n\nSealing up the wall the painting, he crossed again to the ship painting. This one must also have a listening piece. Searching for clues, he considered the idea of sound. There in the foreground was a bugle, resting on a railing. He reached to feel it, and was surprised he had missed it before. The bell of the bugle was actually metal, not painted, and it was affixed to the painting. Digging his fingers under the surface, he found that it pulled away, and it was attached to a string... or more like a tube below. He looked at the device from every angle then followed his suspicion. Pressing the crow's nest button, he looked in the viewer and held the brass disk up to his ear. He heard wind, footsteps, and a tuneless humming coming from the sailor on watch.\n\nHe took a scan around the ship, listening and watching. He did not have the emotional energy to view his parents' room just now, and found he was weary like his sister from the day's exercise and emotional exertions. He lay down, nearly falling asleep... when his parents started up again.\n\nFor perhaps five minutes, he resisted. Then, he rationalized his actions, saying to himself: How much worse can I get. I have lusted after my mother, attacked my sister, I might as well watch my parents fucking.\n\nHis acerbic wish was certainly granted once he opened the viewer. Directly between the mirror and the bed, his mother was kneeling before his father and taking his cock into her mouth.\n\n\"Do you like that, Cheri?\" she said, gazing up at Palo.\n\n\"You know I do,\" he said, \"now do the thing I enjoy the most.\"\n\nShe licked the tip slowly, then flicked her tongue quicker and quicker. Palo groaned with pleasure as she tortured him that way for several minutes. Then she took him into her mouth. Claude watched with amazement as she slowly took his father's large cock in. First into her mouth, and then toward the back... and slowly, slowly down her throat. She had been kneeling, but as she took Palo further and further in, she leaned back, and sat on the floor. Palo towered above her and began to work himself slowly in and out of Frederique's throat. Claude had seen one or two girls in the brothel who could do this, but only for a few moments before needing to breathe. Frederique had no such need and held her breath for what seemed like a minute at a time.\n\nClaude watched in wonder as she even worked Palo's cock with her throat muscles, swallowing to grip her throat around him and bring him more pleasure. An odd metaphor came to mind for Claude. A few years before, a painter had appeared on their doorstep, offering to paint their portraits. He had allowed Claude and Aim\u00e9e to watch him paint... and it had been fascinating to see him work. Each stroke, each touch displayed the painter's mastery. Watching his mother, Claude had a similar feeling. She was a true artist in the arena of pleasure. He supposed having nearly six hundred years practice would help one hone their skills, and it was obvious she had been 'honing' studiously over the course of her in her long life.\n\nShe worked Palo faster and faster down her throat and his groans increased. Claude felt his own erection growing insistent, but turned away from the view hole to talk to directly to his pulsating member.\n\n\"Shut up,\" he whispered. \"I can't give you what you want... and you will only be unhappy with me afterward. I have nothing for you.\"\n\nHe grinned as it actually seemed his cock dwindled a bit on these words. It was probably caused by the pause in watching his parents, but he still was glad for the first chance to smile since the incident with Aim\u00e9e.\n\nStill with the stethoscope-type device to his ear, he heard his father's groans growing more urgent. He turned to the viewer and looked through to see his mother working his father's cock rapidly up and down her throat, until finally Palo's body tensed and he pulled out of her.\"\n\n\"Aahhh,\" screamed Palo, and a huge explosion of white burst out of his cock, splattering Frederique's face and down her gorgeous breasts.\n\n\"Yes, mon cher, yes.\" murmured Frederique as Palo spilled volumes of cum over her body. Smiling, she stood and then did a truly amazing thing. She looked down at her breasts, and held her hand in a scooping motion... with her levitating power she swooped the cum off of her body, and then off of her face, so a small shimmering globe of what was suspended in front of her. The volume had been large, and the globe was the size of a very large marble. Frederique pulled the globe toward her face, and opened her lips extra wide to allow it in. She closed her mouth, and then swallowed it all in one gulp.\n\n\"Mmm,\" she said, wiping her lips of the small amount that had dripped out. She whispered, \"Delicious. Un down, deux to go. Now Palo, we must be more quiet, it isn't fair to poor Claude.\"\n\n\"I'll try.\"\n\nPalo took Frederique into his arms, and they kissed passionately. Claude watched with admiration at their two bodies and how they matched together so well. His father was a large, powerful man with rich dark skin and a stunning natural physique that was enhanced even further by the strength given by the Affliction. Frederique possessed her own, feminine strength. Her full breasts and round hips were so perfect, so stunning that Claude felt the desire stir within him anew at her flawless body.\n\nReflecting on art, the two of them paired were ne plus ultra, Claude could not imagine a more beautiful sight.\n\nPalo reached down with his hand, grasping Frederique's pussy with a firm yet gentle passion to which she responded instantly. Gone was her vocal lovemaking of the night before, to be replaced by hesitant gasps. What she couldn't know was how much more her restraint excited Claude because he was watching and listening with growing excitement. Palo worked seemed to have acquired skills of his own in his shorter life, because his touch on her had her panting with joy. As she neared climax, Palo paused and knelt before her. With his tongue and his hands, he began bringing her to even greater heights. Claude became the student now, watching as his father worked his fingers into Frederique's pussy while licking her firmly. His free hand brushed upward to her breasts; sometimes massaging an amazing breast, sometimes pinching her nipple. Her knees started to buckle and she fell back onto the bed, her legs over the edge. Palo buried his head between her legs and began licking her in long strokes, Frederique gasping every time he reached the top and brushed her clit. He continued this motion without fail and her breaths grew shorter and louder each time, more voice and less breath entering each gasp. Making use of his hand once more, Palo pushed his fingers in and concentrated his tongue solely on her clit with his tongue.\n\nHer moan started low and quiet, but raised in volume as her body began to spasm uncontrollably. Palo stayed with her as long as he could, licking her into a further frenzy until she pushed him away and lay on her side, nearly screaming with joy.\n\n\"What happened to quiet?\" asked Palo, smiling.\n\n\"I know. I am so sorry. I pray he's asleep.\"\n\nNot likely, mother, thought Claude to himself. You would have wakened the dead with those cries.\n\nHer cries had the expected effect on him though. Unwittingly, he found his hand on his cock, stroking himself slowly. No, he thought, angrily. I don't need this madness, this frustration.\n\n\"Time for three,\" said Palo, smiling.\n\n\"Yes, mon cher. What do you think? Shall we fly tonight?\"\n\n\"I don't know, the swimming took away my energy,\" said Palo, half-reluctantly.\n\n\"For me?\" she half-pouted.\n\n\"For you, very well.\"\n\nWhat followed was something Claude had never imagined... and something he very much looked forward to trying if flight should be his gift.\n\nFrederique began. Effortlessly, she lifted off of the floor and suspended herself horizontally above the floor. Gliding down, using nothing but her mouth, she sucked hungrily on Palo's dark cock... bringing him to full hardness. Palo remained in her mouth, and lifted himself as well. As gracefully as mating eagles, he twisted around to lower his mouth down on her pussy. Uncaring of their place in the room, they glided gracefully around the cabin, sometimes bumping against a ceiling or wall to drift slowly in the opposite direction.\n\nHaving excited each other enough in this way, they separated and flew to a vertical position a few feet apart, facing each other.\n\nFrederique grinned and twisted to lie on her back in the air, gesturing with both hands to Palo to come to her. He remained vertical, and drifted toward her. Holding his cock in his hand and pointing it toward her, he entered her... she pushing toward him at the right moment. They began a rhythm there, pushing back and forth toward each other. There was no quickening, rather a slow deliberate motion they found that kept each of them near the precipice of orgasm. Palo soon shifted to match her horizontal state so it appeared as though they were resting on an invisible bed. Though their motions were easier, uninhibited by gravity or the friction of sheets.\n\nThe one thing not lacking was imagination. They drifted from horizontal to vertical, then twisted and were fucking inverted in the air. Claude smiled as his mother pulled her legs up to her chest (all the while keeping his father's cock within her) and then twisted around so he was behind her. Grabbing her hips he began pounding into her with a fierce intensity. After an exhausting sequence of these motions, they broke apart, panting for breath.\n\nFor the first time, he noticed a strain on his father's face. Frederique's effortless skill was clearly evident, here. Claude realized his parents had been airborne for at least twenty minutes. Twenty minutes was a considerable feat by itself. Add in coupling and Claude was very impressed.\n\nFrederique glided to her dresser before the mirror and scooped up a flask of orange-ish oil and returned to Palo.\n\n\"I need you in my ass,\" she whispered, insistently.\n\nPalo hovered to a horizontal position on his back and Frederique flew above him. She drizzled the oil down onto his cock and he massaged it over the length of his shaft. Claude had never felt any longing for men - but all the same he had to admire the physical beauty of his father's shaft, glistening and proud, black and tall as he held it ready for Frederique.\n\nShe took a handful of the oil and poured it into the air, where it stayed suspended. Directing it with her mind, it flew around to her back and landed at the top of the crack in her ass to drip slowly down to help in her readiness.\n\nPalo flew to suspend himself about two feet above the bed, and Frederique glided above him, facing Claude in the mirror.\n\n\"I am so ready for this,\" she whispered, and lowered herself down onto his waiting shaft.\n\nThere was no hesitation... no gradual push. Frederique simply pushed him into her ass and groaned at the impact as he split her fully open. Claude had a curious image of a puppet master above them as they worked back and forth in the air. Though he could no longer see his father's face, he could tell from Palo's strained groans that the effort was becoming more and more difficult. It seemed Frederique was only getting started, her face bore an enraptured expression and she pushed more of Palo's length into her with selfish abandon. Her moans changed to girl-like squeals as she pushed down upon him harder and harder.\n\n\"Fuck me,\" she squealed. \"Fuck my ass, Palo. I need this... please, please!\"\n\n\"I'm ready,\" grunted Palo.\n\n\"Oh good. Split me open, my love. You know how.\"\n\nPalo's groans grew louder.\n\n\"Yes,\" he moaned. \"Yes. Yes. Now!!!\"\n\nWith that, both Palo and Frederique released their flight and came plummeting onto the bed below. Palo screamed a guttural groan of pleasure, but Frederique's scream was one of pure, yet blissful anguish as Paulo's cock ripped into with the force of their falling gravity.\n\n\"Mon dieu!\" she screamed, \"Mon dieu, mon dieu, mon dieu.\"\n\nTears were dripping from her eyes from the agony. Had Frederique been mortal, Claude would have had grave concerns for her well-being. However, he had seen enough injuries among the Afflicted and knew what was coming next. He was fascinated by the creativity of this sexual coupling. His mother had intentionally taken the pain because she knew she could. This was such an inventive idea, to use the healing powers of the Affliction to heighten both pain and pleasure and also mix the two at the same time. With this final thrust, Palo's reserve evaporated and his face was a mask of orgasmic bliss as he pumped into his mate's plundered ass.\n\nFrederique pulled off of Palo, sobbing cries which were a mix of ecstasy and pain. Palo took her in his arms.\n\n\"Are you all right?\" he asked.\n\n\"Yes, just hold me, darling. I'll be ready soon.\"\n\nHe hushed into her hear, holding her as she rocked back and forth. Soon, as her body rapidly healed, only the pleasure remained and she smiled. Wiping away the tears from her face, she turned and kissed Palo gently.\n\n\"Oh my love, you fed my hungry friend well tonight. Very well. You get some sleep. I wore you out, no?\"\n\n\"Yes. How can you not be tired?\" asked Palo, his eyes already nearly shut.\n\n\"Practice, my love. Practice.\"\n\nPalo reclined back, his eyes already drooping from physical exhaustion and post-coital drowsiness.\n\n\"There you go, rest.\"\n\nFrederique reached to the cabinet at her bedside and picked up her hair brush. Claude realized the hair-brushing must be a post-sex ritual for her. Palo was nearly asleep and murmured, \"Good day, mon cher.\" as he drifted all the way gone.\n\nClaude watched his mother with the same fascination as he had the night before. Still, he was able to resist the longing within him and he refused to touch himself with any purpose. It wasn't easy, watching his mother brush her hair there in the nude, recalling the images of the amazing sexual gymnastics he had just witnessed. Perhaps due to the emotional ordeal he had been through, he somehow resisted the urge and simply watched this beautiful woman grooming her beautiful brown hair.\n\nChecking to see if Palo was asleep; Frederique rose and walked toward the mirror. Though Claude had shown great restraint, he closed the viewer when he saw her pick up the rose-infused oil. He knew he would not be able to resist touching himself any further if he watched her oil that magnificent body, just a few feet beyond him.\n\nClaude removed the light breeches he'd donned after swimming and lay down upon his mattress. His cock was still terribly rigid. Had Aim\u00e9e been there, he would have told her, 'yes, this hurts'.",
        "A great battle was raging inside of him. He was determined not to feed this unnatural hunger. He found his hand moving involuntarily toward his cock several times, but fought the impulse and stared at the ceiling. He looked at the wooden slats, trying to absorb his thoughts in finding patterns in the grain. It almost seemed to be working, when a light tap came at his door.\n\nCould it be Aim\u00e9e, wondered Claude. He couldn't imagine her being ready to be near him, no matter what his mother had said.\n\nHe scooped up the sheet and wrapped it around himself, crossing to the door.\n\n\"Hello?\" he whispered.\n\n\"Claude, it is mother. Let me in.\"\n\nHe opened the door and his mother entered. She was dressed in a silk robe which was tied very loosely and concealed very little of the treasures beneath. In her hand, she had the rose-infused oil and a small towel.\n\n\"We need to talk, Claude.\"\n\n\"Very well.\"\n\n\"You come and lay down. We have much to discuss.\"\n\n\"All right mother, I just need to put some...\"\n\n\"Don't worry about clothes,\" she said, \"the sheet will suffice.\"\n\nClaude's mother took the key by the door, and locked it.\n\nClaude lay down, curious at his mother's businesslike manner, and also embarrassed by the large erection he still suffered from - much of it due to her. He lay on his side, head propped in his hand, trying to shield his cock from pushing out against the sheet.\n\nShe sat beside him on the bed, adjusting her robe slightly, but not really closing it.\n\n\"Tonight, my son, I am the professor, and you are the pupil. The topic at hand is morality, specifically, as it pertains to the Afflicted.\"\n\nWith all of his angst, Claude somehow still found a sense of humor.\n\n\"Should I take notes, Professor?\" he asked.\n\n\"I don't think you'll need to. I doubt you'll forget anything I say this evening. I know we are supposed to use English, but would you mind if I switched to Francais, it is so much easier for me to make myself understood.\"\n\n\"Feel free.\"\n\nFrederique switched to her native language, and it made a difference both in her descriptiveness, and the tone of what was to follow.\n\n(Note; the tale will remain in English for the purpose of simplicity.)\n\n\"Claude... the first of the Afflicted appeared on an island in the Mediterranean nearly one-thousand eight-hundred years ago. There were many stops and starts, but by the time of the fall of Rome, the Council was formed and the lives and rules of the Afflicted were formalized. One of the greatest challenges facing the Afflicted was adjusting to a new morality.\n\nTo date, you have been raised mostly with your father's morals. You must understand something. Though your father is Afflicted, he is not Afflicted-born and he is young - barely 80 years old. He was raised in a Muslim household, and tutored by Christian scholars. He is still adjusting to the ways and morals of the Afflicted. Thus far, I have acceded to his wishes of raising you with his values because they were not necessarily harmful to you. But now, you are of age, and it is time you learn more. I would ask that you reveal nothing that passes between us in this room to your father.\"\n\n\"As you wish, Mother.\"\n\n\"Claude, mortals have many rules. Some of those rules make sense, and some are ridiculous. Yet, most of them are quite practical at their root. When it comes to morality, many of the rules mortals live by have great justification. Marriage, monogamy, coupling - those rules spring from lives that only last sixty, seventy years and are best served by the institution of marrying one partner who is of distant blood-relation.\n\nAs you know, we of the Afflicted live much longer. Many human rules do not apply well to us for that very reason. There is something else that comes into play. That factor is the Affliction itself. Here is where my true lecture begins. I would like to tell you what I learned from Galen.\"\n\n\"Galen? The Greek physician?\" inquired Claude.\n\n\"The same.\"\n\n\"Mother, I know you are old, but he lived in the time of the Romans and must have died then, too. Wait, do you mean that he was...\"\n\n\"Yes. He actually was called to assist the very first of the Afflicted. He was able to ascertain the nature of the condition and insisted that he be infected himself. He arranged to have it seem like he died, and continued to study medicine - especially the Affliction. He is still alive and is the greatest scientist in the world after over a millennia and a half to study and research. I've been lucky enough to hear him speak many times. While some us can fly, and some have other abilities given them by the Affliction, Galen's talent is the ability to see into the human body. All he needs to do is touch a patient, and he can tell them if it is their heart that failing, or an unknown tumor, or anything.\n\n\"He studied every aspect of the Affliction. He was the first to call it symbiotic. Our condition helps us, but it expects help in return. Now, for the great revelation that I wish to tell you. For so long, people attributed the Affliction to blood. They thought it lived in the blood and lived only for the blood of others.\n\n\"Doesn't it?\" asked Claude, confused.\n\n\"The blood is the means of transmission - but the true place where the Affliction lives is in the nerves of our bodies. It inhabits our very skin. Galen calls it our sensory system. The way he put it, the Affliction is a very simple-minded creature. It only sees things in black and white. Friend or enemy, good or bad, pain or pleasure; that is how it 'thinks'. One of the needs of the Affliction is to kill its enemies. That is why we thirst for blood, to slake the thirst of protection. Galen was the one who discovered it only took a few drops of blood to convince the Affliction it was being nourished. That's why we merely need a few ounces once a day to keep our blood hunger in check.\"\n\n\"He has also discovered that it is pleasure that truly feeds the Affliction. When Galen first looked into the nerves of a mortal, as opposed to the nerves of an Afflicted he was shocked at the difference. The Afflicted's nerves were entirely different; they were teeming with tiny pieces of the Affliction that seemed to be dancing around. Galen looked into the skin, and it was the same. Noticing the pleasure we felt when we touched others of the Afflicted - he theorized that it was a survival mechanism of the illness. If the Affliction can feel others of its kind, it is the most comforted.\n\n\"Galen performed countless experiments. Using the methods started by the Greeks, he separated out three groups for one week. The first group, he asked to lay with their chosen partners, those who had been joined in the blood ceremony. The second, he asked to only sleep with mortals - or to pleasure themselves, to masturbate. The third, he asked to entirely abstain. By the end of the week, the group that slept with their kind was full of a healthy Affliction. Looking into their bodies, Galen could see massive life coursing through their sensory systems - especially directly after sex. As for the group that was with mortals -- the healthy 'glow' was drastically less, and he described a red color in the Afflicted elements in their system. It was almost like the Affliction was angry at its hosts for not letting it be in communion with its own kind.\"\n\nClaude felt a strange recognition, understanding the condition Frederique was describing.\n\n\"Now, for the last group, the group that abstained, the nerves were shrunken, smaller than the nerves in a regular mortal. It was as though the Affliction had despaired from loneliness. You see, the Affliction must have that daily reassurance of intimacy with others who also carry it.\"\n\n\"There is one more part of the experiment I need to tell you. Galen ran another test. With this one, he set aside three more groups. The first, were legitimate blood partners - either Afflicted who had taken a mortal to mate by biting them, or Afflicted-born who had joined each other through the blood ceremony. The second group consisted of non-connected individuals; people from vastly different families or geographic locations. These two groups, he asked to have frequent sex, more even than usual. His findings; the first group, the mates; the amount of life in them was stunning and they were more healthy than any specimens he had ever seen. It was as though the Affliction was joyful at the companionship, at the affirmation that it was with its kind. The second group, those who slept with other Afflicted - in general they were fine. They were not necessarily bursting with life, but they certainly weren't suffering either.\n\n\"But you mentioned three groups,\" said Claude. \"What of the third?\"\n\n\"The third, yes that one is important. Claude, as I have told you, you are beginning to awaken. The Affliction has come to life within you. The moon is coming full, you are of age. These things you are feeling, and I know you are feeling them, they are the Affliction calling out for one of its kind.\"\n\n\"But there is nobody here.\"\n\n\"This is true, are there are no other Afflicted aboard -- any member of our kind could certainly keep you sated for the time-being. It is now we must speak of the third group in Galen's experiment.\"\n\nFrederique reached over and stroked his shoulder; touching him for the first time since she had entered the room. The effect was immediate. Claude's body cried out at her touch. Images of her naked and coupling sprang into his mind and fueled his longing. He shuddered, but tried not to show his reaction.\n\n\"Claude, dearest. The third group contained direct relatives. First cousins. Fathers and daughters. Brothers and sisters. Mothers and sons.\"\n\nWith that last she stroked his cheek tenderly.\n\n\"Sacre bleu! The monstrosity!\" cried out Claude.\n\nIn his shock, Claude barely noticed his mother's hand which was now stroking his chest - fueling his hunger even more.\n\n\"Call it what you will, but would you like to know the results of the experiment Galen performed among relatives?\"\n\n\"No.\"\n\n\"I will tell you, all the same. There was no difference in the results between the first and the third groups. The Affliction knew it was close to its own brethren, and it cared nothing for the customs of humanity. It knew what it wanted, and it took it. Whether bloodmates or family members, the Affliction only knew that it was happy and with 'friends'.\"\n\nClaude stood up, walking away from his mother - still not fully aware of her intentions - nor aware that he was now fully naked before her - a raging erection standing before him.\n\n\"But mother,\" he said, \"It is unnatural.\"\n\n\"Claude - we are unnatural. We are not human, not any more. We are different creatures, and different rules apply to us.\"\n\n\"What are you saying?\"\n\n\"I am saying, my son, that I have followed your father's wishes thus far, but I cannot see you suffer any longer.\"\n\nShe stood and approached him. He backed away from her and she followed, backing him into a corner.\n\n\"Mother, no.\"\n\n\"Claude, yes. I am here for you, darling. To ease your pain.\"\n\nHe was fully in the corner now, and she simply walked to him - confident, smiling and strong.\n\n\"Remember what I said, don't tell your father.\"\n\nShe reached out to him, and he flinched from her, but had nowhere to go. She pulled him strongly into an embrace, letting her robe fall open so their bodies could touch. His body sang out with joy at the contact - even while a diminishing part of his brain screamed in protest.\n\n\"NO!\" he muttered harshly. \"No!\" he said, flatly. \"Lo,\" he whispered, defeated. She took his face in her hands, and pulled him down to kiss her.\n\nHer lips were tender beyond belief. Her breasts against his chest were electric. Her legs touching his sang to every one of his senses. In that one kiss, he had more pleasure than he had ever known. She pulled back from the kiss, still cradling his face in her hands.\n\n\"Now Claude, can you truly tell me this is wrong?\"\n\n\"I don't know what to say, Mother.\" said Claude. \"I don't know what to feel. Oh my god.\"\n\nHe bent down and kissed her once again. His entire body ached for her, but he couldn't bring himself to initiate any other sort of contact.\n\n\"Oh my sweet boy,\" she said, taking his hand and placing it on her breast.\n\nIt was as though fire were shooting through his hand, not the kind the burned, the kind that soothed. He leaned in and kissed her once more. Dizziness overtook him and his knees buckled from the overwhelming sensations surging through his body and brain.\n\nFrederique laughed, catching him beneath the arms and hugging him to her.\n\n\"My poor boy, come over here and we will take care of you.\"\n\nShe led him to the bed, and had him lay down. She let her robe fall and retrieved the oil. Resting her right hand on his chest, she caressed his cheek with her left, smiling down at him.\n\n\"We should establish some rules,\" she said, calmly. \"My job here is to take care of you - that is all. You will not find yourself inside me this evening, or any time soon. Perhaps in fifty, a hundred years if we should meet at a party, who knows? For now, I am still your mother. I know that must sound odd for what we are doing - but I have reasons. Are you comfortable with that?\"\n\n\"Yes - I think, I don't know. I have no idea what I am comfortable with.\"\n\n\"There is so much, so much for you to take in, I know. Come; let us begin your treatment. Think of it as that. I am the nurse, you are the patient.\"\n\nHer hand slid down, and he gasped as she brushed it over his cock.\n\n\"Claude darling, I just want you to know that I know how you feel; the emptiness, the yearning. I was nineteen at the time of my awakening. My mother and I were travelling together and we were waylaid in the Pyrenees. We got stuck at an Inn because of avalanches along the road. I awoke and I was desperate. My mother caressed me and held me, but could do nothing else to soothe my need for an Afflicted male partner. I was so miserable and it took all of my mother's strength to keep me in our room and stop me from attacking every man in that small village. For two days, I grew more desperate and lonely. The lust was growing in me and I was quite near taking a mortal to mate just to fill my needs. Thank god the pass opened two days later. We made our way to my uncle's house and my cousin Jean was there. I think we made love for three solid days. Now then, fruit of my womb; let me have a look at the handiwork your father and I have created.\"\n\nShe scooted down a bit and took his cock in her hand, lifting it closer for examination.\n\nShe inspected his tool admiringly, chuckling a bit.\n\n\"What? Does it look funny to you?\" asked Claude.\n\n\"No dear, it is so beautiful,\" she said. \"The funny thing that occurred to me. Do you know how people see a child and say, 'He has your eyes; she has your mouth.'?\"\n\n\"Yes, but what does that mean, here?\"\n\n\"I look at this, and I see your cock is somehow a blend of your father's and your uncle's, my brother.\"\n\n\"Did you lay with your brother?\"\n\n\"Once. A hundred years ago. It was lovely. Again, I want to remind you of the odd idea of relations among the Afflicted. Henri was my brother, but over five hundred years had passed since the time we were children together. We had each gone through many human lifetimes by that point. But back to your wonderful instrument. It is such a nice size, large but not too gros. You are going to please so many women with this. Now, to business.\"\n\nShe took the oil and drizzled it artfully down the length of his shaft. With her hand she slowly coated his entire cock, not grasping it yet, just assuring there was no spot that wasn't shiny and fragrant. Once completed, she lay down next to him; sending thrills through his body as she wrapped herself around him, her breasts pushing firmly against his side.\n\n\"Now Claude,\" she whispered. \"I know what your life has been like, and I know the longing you must be feeling. Do not feel you must hold back this time, understand? It will not surprise me, or disappoint me should you erupt very soon.\"\n\nShe grasped his cock and began sliding her hand up and down his shaft. The artistry he had witnessed through the viewer was now being focused directly on him and he was instantly grateful. He didn't care if there was some scientific reason for the joy he was feeling. Fueled by the Affliction or not, he had never experienced such ecstasy. His body sang out to her, every inch of their flesh touching really did make him feel more alive, more vibrant. As for his cock, he was paralyzed from the rapturous sensations she was eliciting.\n\n\"You're doing very well, my beautiful boy,\" she whispered into his ear after a couple of minutes. \"You will indeed serve women well. I think it is time you spilled your cum, darling. Come now; show me that I please you.\"\n\nShe quickened her pace, focusing her hand now on the top of his cock, rotating her hand around his tip and sending him into what he would always think of as his first real orgasm.\n\n\"Oh mother, oh mother,\" he groaned and then gasped with clenched teeth.\n\nThe cum poured out of him, splashing its way across his belly and over her hand.\"\n\n\"Wonderful. Wonderful, my boy.\" she murmured, \"I am so happy I can do this for you.\"\n\nShe stayed there beside him, her hand on his cock for several moments before rising to retrieve the towel. She mopped him up tenderly, and then crawled past him and sat against the wall.\n\n\"Come here,\" she said, and pulled him to her, laying his head in her lap.\n\nShe ran her fingers through his hair and played with his budding chest hair lovingly.\n\n\"You need this too, you know.\" she said. \"The sex, of course, but just this, physical intimacy, it helps.\"\n\n\"So, father does not know?\"\n\n\"No, and he cannot,\" she said, firmly.\n\n\"Did you ask him?\"\n\n\"I could not,\" she said. \"Not after the Lehri family.\"\n\n\"The Lehris?\" said Claude, surprised. \"What did they do?\"\n\n\"You knew Muhammed?\" Frederique asked.\n\n\"Of course.\"\n\n\"He awakened early, at eighteen,\" chuckled Frederique. \"And they were visiting their distant holdings at the time and there was nobody else. Mrs. Lehri, Sofia, she took things into her own hands. Good for her, I say. When she told us that at a dinner, it took every ounce of self-restraint for your father to stay the rest of the meal. The entire flight back, he was cursing and yelling about abominations and sinners and God knows what else, poor man.\"\n\n\"Yet you say, this sort of thing happens often among the Afflicted?\" inquired Claude.\n\n\"Yes. It is the Affliction itself that necessitates the need.\" she said, matter-of-factly. \"As I say, your father is still young. I think America will be very good for him. There are many of us there now, and he won't be able to avoid seeing such things more and more often. He'll learn.\"\n\nClaude felt the desire growing in him once again. Looking up at her beautiful breasts, he couldn't resist and lifted his head to kiss and suck her right nipple.\n\n\"Ooh,\" she said, closing her eyes in pleasure. \"So nice, that feeling.\" Then she began to laugh gently.\n\n\"What?\" he asked. \"What's funny now?\"\n\n\"I was just thinking, the last time we were in that precise position was over nineteen years ago, and you were much, much smaller.\"\n\nHe laughed, too, but then kissed playfully at her breasts again.\n\n\"I think I've missed these,\" he said, grinning.\n\n\"It seems you have. We should be aware of the time. I doubt your father will be waking any time soon, but just to be safe we should finish things off. I have a treat for you.\"\n\nShe climbed off the bed and retrieved the silk belt from her robe.\n\n\"This one, it will take a while - you have no choice,\" she whispered, slyly. He was already erect, but she worked his cock quickly into full hardness. Then, she took the silk belt and tied it into an ornate knot with a loop in it.",
        "\"What's that for?\" asked Claude.\n\n\"Your treat.\"\n\nShe took the loop of the knot and slipped it down over his shaft. Then she slipped his balls through a loop as well and gently pulled on the knot. Claude gasped as it tightened around the base.\n\n\"Let me know if it hurts.\" she said in a low, sultry tone.\n\nTighter and tighter she drew it, until he started at the tension.\n\n\"Good?\" she inquired.\n\n\"Yes, very.\"\n\nSomething about the tightness of the knot allowed blood to push into his cock... but delayed the escape. He looked down at his rod, standing very tall from the way the knot was holding it. It moved slightly at each heartbeat.\n\n\"Prepare yourself for divine agony, my darling.\" she said.\n\nTaking the oil again, she lubricated her fingers and palms and began working his shaft with both hands. There was nothing leisurely about her pace. She seemed on a mission. Claude was sure he would cum soon, but the orgasm seemed to be lurking beneath the surface.\n\n\"The trick is in the pressure,\" she said, looking him in the eyes without stopping her rapid massage. \"It puts pressure below, blocking where your seed originates. If you ever have the chance, use this when you are fucking - it makes you last wonderfully, and keeps you harder than steel.\"\n\nFaster and faster she worked him, pausing only to put more oil on her hands. Claude actually felt his cock growing hot from the friction, but could have cared less because of the frightening pleasure she was giving him.\n\n\"Tell me when you are ready - you will cum first, and then I will release it.\"\n\nThe pressure built within him, and he felt the cum gather up, only to meet a barrier on its way.\n\n\"Now,\" he gasped.\n\nShe pulled the end of the knot and released the pressure. Set free, the cum shot skyward. Another, then another, then another explosion erupted. Claude had closed his eyes during his orgasm, but opened them in surprise after his last spurt. He hadn't felt any cum land.\n\nLooking up, he saw his jets of cum frozen in the air; his mother raised one eyebrow, a mischievous look on her face.\n\n\"I hadn't thought I would do this,\" she said, smiling. \"But I work up a hunger too, no?\"\n\nThe suspended jets began to coalesce into one column of cum, which flew directly over Frederique's head. She tipped her head directly back and then let it fall suddenly into her waiting mouth.\n\n\"Mmm,\" she said, grinning. \"A nice nightcap, I must say.\"\n\nClaude was still lying down on his back and she crawled on top of him, her breasts squeezed against his chest, her face inches from his.\n\n\"Now tell me, dear heart. How do you feel?\"\n\nAside from the stunning pleasure of her body against his, Claude realized he felt... content? For the first time since his awakening he felt truly and wholly satisfied.\n\n\"My god mother, I feel amazing,\" he said.\n\n\"Not empty anymore?\"\n\n\"No!\" he whispered loudly, \"I'm good. What's more, I'm normal. I was a shell, a wraith. Now I'm human again.\"<br >\"I'm so glad,\" she whispered, leaning down to kiss him once more.\n\nShe rolled off of him and stood. She put her gown back on and retrieved her oil.\n\n\"Now remember, Claude dear. None of what we talked about; none of what we did can go past this room. Agreed?\"\n\n\"Absolutely,\" said Claude. \"Who would I tell, anyway?\"\n\n\"No one, but keep it that way. Good night, dear.\n\n\"Good night, mother. And mother?\"\n\n\"Yes?\"\n\n\"Thank you,\" he said as she was closing the door.\n\n\"Je vous en prie,\" she whispered. \"It was my pleasure.\"\n\nShe closed the door and left Claude to contemplate what had just happened. Within moments he drifted off into his first true sleep in days.\n\n<br >\n\n\n\nCHAPTER 3\n\n\n\nClaude was sleeping, dreaming of a woman's lovely touch on his body. Through a haze, he could almost make out her face.\n\n\"Claude,\" she said. \"Wake up, Claude.\"\n\nIn his dream he pried his eyes open, to see her sitting beside him. Her touch on his shoulder felt so real, so alive he almost didn't want to wake up.\n\n\"Claude!\" she said, louder... shaking him.\n\nClaude woke up to see it really was his mother sitting on the edge of the bed.\n\n\"Good evening, sleepyhead.\" she said, smiling.\n\nClaude sat up, rubbing his eyes, then remembered.\n\n\"Oh my god, was last night... real?\"\n\n\"Oui. Very real. How do you feel?\"\n\nClaude took stock of himself. \"Amazing,\" he said. \"Mother, the satisfied feeling didn't go away. I still feel so alive at peace. And I slept! I could sleep another day, I think. How good this feels.\"\n\n\"I am most gratified. Come here.\"\n\nShe leaned over and kissed him gently. The kiss didn't enflame him so much as reassure the symbiote within him that it was still among friends and needn't fear.\n\n\"Last night should carry you through a few days,\" his mother said, gently. \"We will find a discreet time to revitalize you when the need arises. Now, get dressed and come outside. It is such a lovely night.\"\n\nShe left and Claude dressed quickly. Climbing out on deck, he was enchanted by the view. A fair breeze was blowing, pushing the ship along at a good clip. The moon was just beginning to peak its head over the horizon and its trail of light across the gentle waves and swells made the entire scene look almost like a painting. The usual small crew was up top, just a first mate at the wheel and the two other trusted officers. As long as the wind held steady and they could stay on course, the family was allowed up top since the minimal crew could run the ship.\n\n\"Good evening, Father,\" he said to Palo who was standing with his mother at the railing.\n\n\"Good evening, Son. Good sleep, eh?\"\n\n\"Unbelievable.\"\n\n\"That's good to hear,\" said Palo. \"I spoke with the captain, he said the currents have been with us and he believes we'll be to New York in less than two weeks.\n\n\"That's wonderful,\" said Claude.\n\nPalo and Frederique went for a stroll down toward the rear of the ship and Claude started for the front, wanting to take in more of the view.\n\nIf the evening was a painting, what he saw next transformed it from a journeyman's canvas to a masterpiece. Aim\u00e9e stood at the railing, looking out on the waves. The wind blew her black hair about her face. Begowned in an elegant dress, she was framed perfectly by the glimmering ocean and the rising moon.\n\nClaude must have watched her for at least five minutes before she became aware of his presence. She turned and saw him. The calm look on her face turned to one of loathing. She did not run from him, but approached him sternly.\n\n\"I spoke with mother,\" she said, \"I don't care what she says. You disgust me. I hate the very sight of you.\"\n\nHis reply surprised her. \"I understand,\" he said, \"and I don't blame you.\"\n\n\"What?\" she asked, stunned. \"You don't justify your actions?\"\n\n\"I cannot. But Aim\u00e9e, we must find a way to somehow exist on this damned boat for the next fortnight. There is nowhere else to go.\"\n\n\"How about opposite sides and ends of the boat?\" she said. \"If I am port, you are starboard. If I am fore, you are aft. I want to be as far away from you as possible.\"\n\n\"Fair enough,\" he said, and walked back toward the rear of the ship.\n\nThey began an awkward dance over the next few hours. Like magnets with opposite poles pointed at each other; when Aim\u00e9e would approach, Claude would move away from her. When Aim\u00e9e would sense him coming, she would drift elsewhere.\n\nAs dawn approached, Claude was mid-ship admiring the moon which was now full and high. He stood near the hatch leading down to the crew quarters. Leaning against the deck, he was surprised when Aim\u00e9e brushed right past him, going straight to the hatch.\n\n\"Too close, Sister. I was here first.\"\n\nShe ignored him, fumbling with the latch the crew hatch.\n\n\"How does this work?\" she muttered.\n\n\"It doesn't matter, you can't go down there. That's where the crew is.\"\n\n\"I know,\" she said, turning to him. There was a wild look in her eyes. \"They're in there. I can smell them. I'm going to take them all. One by one, I'm going to fuck them. If they don't please me, I'll rip out their throats. If they do please, me, I'll keep them around. That first mate, he shows promise, perhaps I'll bite him and infect him. He would make a good mate, no?\"\n\n\"Aim\u00e9e, stop kidding around,\" said Claude.\n\n\"This is no joke, Claude. I must have them. I will have them!\"\n\nShe redoubled her efforts on the latch, scratching at the wood, trying to pull it up.\n\n\"Mother!!! Father!!!\" shouted Claude, \"Come now! Come quick!\"\n\nHe grabbed her around the waist, pulling her toward the entrance to their quarters.\n\n\"No!\" she said \"I won't go, let me have them. I must have them!!!\"\n\nShe struggled with him, showing frightening strength. He pulled her around and clasped her to him, doing all he could to hold her at bay.\n\n\"No Aim\u00e9e, listen to me... it is the Affliction. It is telling you to do these things.\"\n\n\"Bullshit! This is me! I need this. Oh Claude, you feel so good. Touch me some more.\n\nShe clasped herself around him, burying her head in his neck. Frederique and Palo came dashing down the deck. Frederique seemed to take quicker stock of the situation. Palo was more confused.\n\nClaude shared a knowing glance with his mother, and then looked to the sky.\n\n\"The moon,\" he whispered.\n\n\"Merde!\" said Frederique, \"She is awake.\"\n\n\"Of course she is awake,\" said Palo. \"She is right here.\"\n\n\"No Palo, awake!\"\n\n\"Mon dieu!\" exclaimed Palo. \"Get her below.\"\n\n'\"No! I beg you,\" pleaded Aim\u00e9e, \"Don't put me down there again, it will kill me. I need more. I need the men. Please?!\"\n\n\"Come, my love,\" said Frederique. \"We will talk more when we get to your cabin.\"\n\nWith a parent on each arm, Aim\u00e9e couldn't have escaped if she wanted to, not against the combined strength of Palo and Frederique. Claude's heart went out to her, as she whimpered between them.\n\n\"No Mama, no Papa... I need things. I know it is wrong, but I must have them. I need men, Mama.\"\n\n\"I know, Cheri but do not despair, it isn't wrong.\"\n\n\"It's not?\" she asked.\n\n\"Of course not, but let's get you back to your cabin and sort this out.\"\n\nClaude followed them down, and watched sadly as they led her into her room and then stepped out to lock it.\n\n\"Just a few minutes,\" said Frederique reassuringly. \"We just need to talk some things over.\"\n\n\"Don't take long, mother,\" Aim\u00e9e pleaded.\n\n\"I won't, dear.\"\n\n\"What if she escapes?\" asked Claude as Palo locked the door.\n\n\"She won't,\" said Palo. \"These are council locks. Nothing gets in or out of them.\"\n\n\"What are we going to...\" started Claude.\n\n\"You are going to go to your cabin,\" said Frederique. \"We are going to have a discussion.\"\n\nClaude almost argued, but caught the look from his mother which told him she would broach no contradictions. He shrugged and went into his room. He locked his door and went directly to the painting to view and listen in on his parent's conversation.\n\nThe first few minutes weren't all that productive, as Frederique stormed about her cabin cursing in six or seven different languages.\n\n\"I told them!\" she screamed. \"I told the council that we must have deplaceurs to transport us across. I told them an ocean voyage was unacceptable at this time of their lives. But no, they could not free the resources. 'What if they awaken?' I asked. 'The odds are slim' they argued. 'They are both nineteen,' I said. 'No worries,' they replied. Arrogant bastards, now look where we are.\"\n\n\"It isn't that bad,\" said Palo.\n\n\"Not that bad!\" she screamed. \"This is terrible. Did you see how close she was to the crew? What would we have done then? Dead sailors - maybe the whole crew. How much worse could this be? She must have a man.\"\n\n\"Nonsense,\" said Palo. \"She can wait.\"\n\n\"Wait!?! She cannot wait!\" shrieked Frederique.\n\n\"Of course she can. She's a woman, it is easier. We lock the door until New York, and sort it out there.\"\n\n\"Wrong answer, Palo. She must have a man, an Afflicted man. The first days of awakening are critical.\"\n\n\"There are no men,\" said Palo, adamantly.\n\n\"Yes, there are.\" She eyed him intently, holding her hands on her hips and glaring at him.\n\n\"Oh no you don't, woman. I have warned you not to go there.\"\n\n\"I have to go there. Give her Claude. Claude needs it too, he is...he is on the verge as well. They will help each other.\"\n\n\"Blasphemy!\" he screamed.\n\n\"Blasphemy for what god? What god would create such a condition as this and deny the suffering relief?\"\n\n\"It is unnatural!\" Palo blustered.\n\nClaude smiled at his own words echoing from his father's mouth and listened as his mother repeated her own theories.\n\n\"No!\" shouted Palo.\n\n\"Very well,\" retorted Frederique. \"If not Claude, then you. You go and comfort your daughter in the way she needs.\"\n\n\"You are an abomination!\"\n\n\"Perhaps I am,\" said Frederique calmly, \"but at least I am an abomination who is capable of rational thought and understanding. You. You are an abomination enfant.\"\n\n\"Enfant!?\"\n\n\"Oui, a baby. Because only a baby would be so incapable of understanding...\"\n\nJust then, Frederique trailed off, an angry glimmer in her face.\n\n\"Yes,\" she muttered. \"That will convince you, I am sure.\"\n\n\"What? What are you thinking?\"\n\n\"You don't understand being denied these things. In the nearly fifty years we have been together, since even before our blood ceremony, I have never once denied you. Even when we've been apart, you have had partners.\"\n\n\"That is beside the point,\" said Palo, turning away from her.\n\n\"That is exactly the point,\" she said, grinning triumphantly. \"If you will deny her this. I will deny you the same. You will get to see how it feels.\"\n\n\"Like you could resist,\" he said, taunting her.\n\n\"Oh, try me, Palo. Just try. I know. I made the journey from Europe to Morocco in the dark. Two months in basements and caves. I couldn't even fly for fear of detection. Two months with no Afflicted contact. Two months of drinking animal blood and satisfying myself with mortal men just to get through. It almost killed me, but I learned to survive. You have no chance. Now get out of my room.\"\n\n\"Your room?\"\n\n\"Yes. My room. You will sleep in the storage room until you see some sense.\"\n\n\"No, I will stay here,\" he raged. \"You take the storage room.\"\n\n\"We can do this two ways, Palo,\" she said, in a tone that frightened Claude, even through the wall. \"You can go quietly, or I can force you.\"\n\n\"You could never force me,\" laughed Palo.\n\n\"Not physically, no. But do you really want to put yourself up against my powers? Are you so daft as to believe you would stand a chance?\"\n\nThey stared each other down, not blinking. It was Palo who relinquished first.\n\n\"Very well, Frederique. But I keep the key to Aim\u00e9e's room. I am the only one who is showing any restraint in this madness.\"\n\n\"If you say so, now get out.\"\n\nPalo grabbed a blanket and pillow, and stormed out of the room. Claude heard him thunder down the hallway and slam the door to the store room.\n\nPounding began in the room next to him.\n\n\"Who was that?!\" screamed Aim\u00e9e from her room. \"Where is everyone? Come and let me out!\"\n\nShe pounded on the door of room, louder and louder. Her screams rising to screeches. Claude sat on his bed, covering his ears. He heard more motions in his mother's room, then footsteps. He opened his door to see his mother walking down the hallway, a wooden box in her hand. He stayed, watching, as his mother walked to the store room and tapped sternly on the door. Palo emerged.\n\n\"Back so soon?\" he said, \"I knew you wouldn't last.\"\n\n\"Don't be ridiculous,\" said Frederique. \"I need to do something to help the poor girl. You need to let me in.\"\n\n\"Don't try anything funny,\" said Palo.\n\n\"You can keep the fucking key, Palo. Just let me in.\"\n\nHe did so, grumbling, and glared at Claude after he locked Frederique in as well.\n\n\"What are you looking at?\" he snapped.\n\n\"Nothing,\" said Claude.\n\nHe shut his door and dashed to the woman's painting, pushing the right buttons for Aim\u00e9e's room.\n\nHe listened intently, straining because his mother was whispering. The two sat beside each other on the bed.\n\n\"I am trying to get him to see reason, dearest. Once he does, you will suffer no more. First, let me try something.\"\n\nFrederique leaned in and kissed Aim\u00e9e tenderly on the lips. After a few seconds, Aim\u00e9e pulled away.\n\n\"Mother...why would you do this?\" Aim\u00e9e asked confusedly.\n\n\"No good reason. It is as I thought. You like boys. Not that there was much doubt, but I thought I would check.\"\n\n\"Check for what?\" asked Aim\u00e9e, confused.\n\n\"Aim\u00e9e, listen to me...\"\n\nFrederique proceeded to give much the same lecture as the night before. She told Aim\u00e9e of the Affliction and the needs it had. As her mother finished, the emotions playing across Aim\u00e9e's face were so similar to his own, Claude had to smile.\n\n\"So you see; we are in a very difficult situation. When you first awaken, your hunger is ravenous. You need to be with an Afflicted a partner who is Afflicted.\n\n\"Why not ordinary men? I could sleep with some sailors.\"\n\n\"It would only make it worse. The Affliction knows its own and would be very dissatisfied with mortals. You would have to bite them. In fact, you would have no choice.\"\n\n\"But mother... Claude?\"\n\n\"Or your father.\"\n\n\"Disgusting.\"\n\n\"Mon dieu, I grow tired of this conversation! We are not human, daughter. We do not live by their rules and we do what we must to survive. Leave your father out of this. Think of Claude. Do you find him unattractive?\"\n\n\"No, I suppose he is handsome enough.\"\n\n\"Don't suppose,\" said Frederique. \"Concentrate - think of him with only your base instincts. Get your mind and the conservative upbringing your father has given you out of the way.\"\n\nAim\u00e9e tried, closing her eyes. She soon smiled.\n\n\"Do you see?\" asked Frederique, \"He could soothe you, no?\"\n\n\"Oui. Let me go to him. Now.\"\n\nClaude felt his pulse rushing, his cock hardening at the prospect of holding Aim\u00e9e in his arms.\n\n\"We must wait. We will wear your father down,\" she said. \"For now, I have some things I hope might help. Tell me Aim\u00e9e, have you ever pleasured yourself?\n\n\"A few times,\" said Aim\u00e9e, blushing, \"though I've never felt the need that often.\"\n\n\"But you know how things work, yes?\"\n\n\"Of course, mother.\"\n\n\"Good girl. Look in here.\"\n\nFrederique opened the small wooden chest to reveal the contents therein. She pulled out two cloth bags, a larger one and one smaller one.\n\n\"This is very ancient.\" Frederique pulled a large wooden cylinder out of the first bag. \"This was once attached to a statue of Priapus in Crete. Countless women have pleasured themselves with this. It has served me well. Here is some oil to help with it.\" Removing the next one, she showed Aim\u00e9e a gorgeous glass dildo, which was amazingly lifelike.\n\n\"This was made by the finest glassmaker in London. It is modeled after - well, after a very wonderful man. Last, is this.\"\n\nShe pulled out a small silver disk, no bigger than a pocket watch. \"This is a recent invention, just wind it and put it...\"\n\nPalo pounded on the door, shouting. \"What's taking you so long in there, woman?\"\n\n\"I'm almost done, brut! What does it matter to you, anyway -- you won't be seeing me.\"\n\nShe continued. \"Anyway, wind this one... and touch the right place, you'll be very surprised.\"\n\nFrederique rose, hugging her daughter.\n\n\"Aim\u00e9e, I know exactly how you feel. I hope this helps, but I must warn you.\"\n\n\"Warn me of what?\"\n\n\"Warn you that this will feel wonderful but it might do more harm than good when it is done.\"\n\n\"I don't understand,\" said Aim\u00e9e."
    ],
    "authorname": "ShyChiWriter",
    "tags": [
        "vampire",
        "afflicted",
        "incest",
        "mother",
        "sister",
        "son",
        "fantasy"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/the-afflicted"
}