{
    "title": "Mine...Yours Pt. 14",
    "pages": [
        "Author's Note:\n\nI have received many emails on my Sabbatical from writing. Besides the ones telling me to hurry up and get back to writing. The second most common was a desire to see more of William and Nancy. I had planned on writing a quick one-shot short story for them, but quickly realized it was impossible to write a separate story. They were too involved in the main plot, so I devised to write a separate \"view\" of the tale with them being the main characters.\n\nThis part 14 is a different take on many of the things that have happened so far in the story. So there are spoilers, but it has its own chapters. There are spoilers in here, so please start at the beginning if you are just coming to this tale for the first time. Otherwise, a lot of this will make no sense to you.\n\nPlease leave me comments, because I very much enjoy them. Leave me emails as well if you are too shy to leave a comment. If you are anonymous, then please leave me some way to identify you so I can write back.\n\nSincerely,\n\nPayenbrant\n\n*****\n\nMine...Yours 14 (William's View)\n\nSo many people love vampire stories. I personally am sick of them! They are overdone, transparent, gaudy and terribly gauche! I personally see these shows on television with the tragic undead monstrosity that is so misunderstood and it makes me want to laugh! What is this fascination with something that...? I am getting ahead of myself...\n\nSalutations! I am currently William Henry Abernathy the Ninth! Not to be confused with William Henry Abernathy the Eighth, Seventh, Sixth or Fifth. You must already be familiar with my dear friend Gregory Brooks, as he has been writing out his own experiences in a journal format. I even think his roommate Lucretia is writing some of her own experiences in it as well. That should be interesting reading...speaking of...\n\n\"Nancy!\"\n\n\"Yes William?\"\n\n\"Be a dear and fetch me a cup of tea please, and make a note for me to speak with Lucretia again. I am getting nowhere on my investigation into the attack on the Gatewatch.\"\n\nNow, where was I? Oh yes! I was about to tell you I am a vampire. No I do not have skin the color of cream and long midnight black hair that I practice artfully tossing out of my face in front of a mirror to attract the attention of every female in the room. I do not walk with a leopard's grace or exhibit a fondness for skin-tight clothing. Nor do I frequent nightclubs perusing the sea of writhing humanity for a tasty snack to bring home and dine on. I do not brood in the dark either, well, that is not entirely true. Everyone broods from time to time...I just do it less than people think.\n\nIn truth I am not so different from you, I just have a more specialized diet. Like a vegan, or someone who cannot eat genetically modified foods. In the end when one really thinks about it and looks at all sides of who and what I am, I am really...\n\nNot so strange!\n\nChapter 1\n\nI noticed the mug of tea with a wedge of lemon on a saucer on top of my desk and feel little paws on my shin.\n\n\"Will there be anything else William?\" She asked.\n\n\"Only if you will finally tell me my dear, how in the world you can do this!\" I retorted. \"That mug is large enough for you to bathe in, and you cut a slice of lemon?\" \n\n\"A woman has to keep some secrets to herself William.\" She told me sweetly.\n\nI looked down at Nancy, my own roommate and who now fancies herself my personal assistant. She has charm, panache and a stern sweetness tempered by professional decorum. I find her to be invaluable.\n\nEven if she is a rat.\n\n\"It is not a secret, it is either a mechanical marvel or a form of magic that allows you to...\" I sighed and then chuckled.\n\n\"Never mind me Nancy...thank you for the tea.\" She gave a small squeak and then scampered out of the room as the phone rang. I heard her answer it, \"Mr. Abernathy's office! How can I help you today?\"\n\nI had installed a numeric pad and small keyboard for her to use and soon she took over the phone systems in my office and even the group secretary in our building for all of the businesses wanted to hire her away from me! I see them every now and then as I close up at night, and I wonder what they are thinking?\n\nThe eccentric investor with his pet rat on a pink leash perched on his shoulder, and no sign of the well-mannered woman who answers my phones and collates my books.\n\n\"She already left for the night...you must have just missed her.\" I tell them with a smile.\n\nTruly, living with a rat for a roommate is no worse and in many ways much better than having a human, or a werewolf as a roommate. Maybe a ghost would be a better only in the sense that they would take up less space than a rat, but I digress. The point is that I offered her my home to stay in on pure whimsy.\n\nYou see I have been around on this oval shaped planet long enough to have seen much and done nearly everything you can imagine. I have been to both the North and South Poles. I spent time in Russia during the Napoleonic invasion. I have been to the bottom of the Marianas Trench and have even traveled to two different dimensions containing a completely different version of my home. \n\nYet I have never had, until now, the chance to get into a heated debate about the merits of Big band music as compared to Classical with a knowledgeable rat!\n\nAs we come inside of my home I set Nancy on the ground and take off her harness. She prefers to remove it herself since she is nimble enough to do so, but I do it anyway since I view it as helping a woman to take off her coat. It is polite. Being polite is key to being good. Being good is essential to cover up what I truly am...\n\nWhat I am is evil.\n\nHard to tell but in the world I lived in, even a few hundred years ago, it was not uncommon to slaughter whole groups of people down to the women and children. For after all...in a time of war you must destroy everyone in a family or those little bastards will come after you for revenge in the future. Makes it kind of tedious to have to look over your shoulder so it is better to get them when they are young and helpless.\n\nDifferent times, different beliefs, and a different morality than this day and age we exist in. However it is one I still maintain. Does that make me evil? I am not sure. Nor do I particularly care. It is simply a facet of who I am, a ruthless and cunning individual. 700 years ago you would think me well adjusted, in the here and now I would be labeled a monster.\n\nI took off my suit jacket and loosened my shirt cuffs before walking up to my Cabinet. I opened the door and took down my wineglass. After the day I have had a splash of baboon with sea otter and good touch of pelican would be perfect! I heard the click of Nancy's paws as she skittered into the kitchen. I crept to the corner and quickly peered around the side to watch. She had gotten on top of the counters again! I had never set anything up for her to climb. To the best of my knowledge no rat could get from the floor to the countertops. Yet there she was moving about and peering up at the cupboards. She turned her head to look at the doorway and I pulled back in time, then chanced a look.\n\nThe cupboard was open and a large cereal bowl and a box of cereal were resting next to her! How does she do it?\n\n\"I was going to ask if you needed help Nancy but...\" my voice trailed off as she looked at me, her ears swiveling up. \n\n\"Oh! Thank you William but I have everything under control here. Just getting myself a snack.\" She said cheerily. \"Can I get you anything?\" She asked.\n\nI held up my wine glass that was still half full of the mixture of blood and took another sip. Amazing stuff this mixture! I could feel it moving throughout my body, both relaxing me and making me feel alert. One of the few mixtures I had found that was only a three-part mix instead of the traditional four elements.\n\n\"If you need me Nancy, I will be in my study.\" I said quietly. Then I walked through the living room and to the side door where I pulled off the working light switch and punched in my security code. The heavy door unlatched and I pushed it open and turned on the lights. I don't need light to see, of course, but it is a wonder to me! So many vampires look down on humans because of their short life spans and other things that we have so much of...\n\nBut they, humans, found a way to harness a little piece of the sun and put it in a piece of glass.\n\nI sat down at my desk amidst a pile of paperwork. Mostly it was stacks of handwritten notes, maps and star charts that had lines or words drawn in margins. Lumps of tape and photographs. Also hanging on walls or in jars were various trophies and bits of memorabilia I had collected in my life. A stuffed and mounted baby chupacabra. A display of bullets that had ended the lives of certain people, framed against the wall on black velvet. My two favorites are the killing bullet of Archduke Franz Ferdinand and the killing bullet of Mahatma Gandhi. Took a while to find that last one since three shots had been fired and the first had not killed him.\n\nI looked at my piles and wondered not for the first time if I should let Nancy in here to help me organize. She had done wonders for my office after all. Then, not for the first time I decided against it. I needed to have my own space that was just for me. I kept a clean house; I should have no trouble keeping a clean study. I eyed the stacks of notes and journals around me and grunted to myself. \n\nI had changed much from the young man who had dressed in furs and slogged through mud with a heavy stick in one hand. \n\nThough not as much as you might think. Life is full of struggles. Just last week I was at a meeting that was happy for me, and unhappy for another. The boardroom was stifling hot; if I had been human I would have been sweating. One attorney and two security personnel were holding the young man across from me back. I had been working on the accounts for a shipping company. The young man's father had built up the business even better than his own father had back in the early 1900's. This young cockerel in front of me, hardly out of his thirties had a good head on his shoulders but did not have a good enough mind for the finer points of running a successful company.\n\nSo, I bought it. I already had at least two buyers in mind where I could make an easy 25% profit on my investment. I was foolish in stating my intentions for the company, and this flea began making a lot of noise about his employees and jobs and so forth! \n\nHow noble of him...considering it was his lack of foresight that caused his company to be lost! Was he thinking of his people then? \n\nI calmly gathered my papers and watched out of the peripheral as the child struggled against the hands holding him. I could sense his heartbeat and feel the heat of him from where I stood. I could sense anger, frustration, loss and...regret? \n\nRegret...now that I can use!\n\nThere was a still fairly young vampire I had met by the name of Suzanne. Part of the Gatewatch eventually but at the time and at one point I had called her \"friend.\" However she had found me rather distasteful when she learned more of my proclivities in dealing with enemies. Or how I had received my nickname over the centuries of time. She had told me I deserved to be called \"William the Terrible.\"\n\nIt had taught me though to think more long term. I thought I had, but her disgust had taught me to alter my paradigms a great deal. I found it much more liberating to do what I was about to do now...\n\n\"Give us the room, gentlemen...\" I said quietly. The men looked at me in surprise but slowly let go of the boy. He yanked his arms from them and glowered at me in, I guess he thought, in an intimidating fashion. I clicked my brief case shut and then waited, staring down at the table.\n\n\"You are a monster!\" he shouted. I tried to remember his name, such an unimportant child I hadn't thought to remember it. \n\n\"Our family business...! To you it's just a pie to be cut up and sold off piece by piece! It's been in our name for over a century! We have history, prestige, reputation...!\"\n\n\"Debt...\" I said softly. My eyes at last flicking up to his, \"...don't forget a great deal of debt.\" I reminded him. He was silent, watching me. I tapped my fingernail on the handle of the briefcase then I walked over to him. I stopped about four feet away and casually put my hands in my pockets. \n\nOne of the best inventions, pockets that is, and so handily placed. Much better than the odd belt pouch though I still miss the capacity of those in comparison. I mimicked his pose a little to help him feel slightly more at ease, and remembered to modulate my voice so it was warm, but with a hint of reproach in it. Back when I was his age I would have killed him for talking to me in such a fashion, but...\n\n\"Your Father and Grandfather were great men of business...\" I should know, I had met them both at one time or another. \"You however are not...\" I could see him start to grit his teeth. Time to offer more of the carrot rather than the stick.\n\n\"That being said, you are more in touch with the employees of this establishment than they ever were. A detriment now since you inherited this company and cared more for your employees than for profits.\" I turned from him to walk back to fetch my briefcase. A good psychological tactic to give him a moment to digest what I had said, now before he speaks up...\n\n\"Your employees love you, and love this company. That is obvious, and I am not so blind as to miss the implications of what that means.\" I turned back and this time carried my briefcase with me. I can see a little bit of confusion in his eyes, and now adopted a fatherly tone. The regret I heard in his voice must mean he misses his father and is ashamed he is now losing his business that was entrusted to him.\n\nSadness, regret, confusion... Now I strike!\n\n\"I own this company now on paper, I could sell it if I so chose to do this... But I respected your father. I see a lot of him in you. I believe in time you could manage this place better than he could.\"\n\nI reopened my briefcase and pulled out a document I had been hiding under all of the other pages of ownership transference. A smoke screen if you will, to hide my real purpose.\n\n\"I want you to stay, I want your people to stay. I want you to become the man that you are to become. I want you to run this company, but have an advisor of my choosing to help you with making the difficult decisions that must be made...\"\n\nHis face showed shock and a wary sort of happiness, \"You...you're not taking my Dad's business?\" He asked disbelievingly. I smiled at him, and tried not to let my greed show.\n\n\"No, I am taking it. As I said it would be in name only. I would be paid a small percentage for paying your debts and supplying you with an advisor. After that it would be your company.\" \n\nI could see his hesitation, so pushed in a slightly different direction. \"I paid off the accounts. I would see it as a loan from the bank you are paying interest on, except I will help you with trained individuals who you can learn from to better yourself as well.\"\n\nI paused and decided to show a hint of vulnerability, works very well with humans. Gregory responded favorably when I had done it with him after all.\n\n\"I was told by someone once, to Become, Grow, Learn, and Surpass. I didn't understand it at the time, and we may talk more in the future on it if you have questions. For now though, speak with your attorneys on this proposal and we may move forward.\" I gently squeezed his shoulder, which to him must have seemed a strong grip because he almost winced. \n\n\"I...I...thank you Mr. Abernathy. I will look this over and get back to you tomorrow if I can.\" \n\nHe shook my hand and I could feel the truth of his words and held back a smile of triumph...\n\nWhy destroy your enemies when you can take control of them and have them thank you for doing it? It is such a sweeter tasting victory!\n\nI love my job!\n\nThat is just an example out of many of what I have done, and how I have changed as an individual over scores of decades. There was no need to destroy those who say they oppose me now. All I have to do is maneuver them into working for me. The results are the same usually, and I have a better profit margin.\n\nThen along came Gregory Bastion Brooks.\n\nWhat a novel individual he is. At first I thought him merely insane, most people scream or yell when they figure out what I am, he just saw it with a look! He saw it...then almost seemed to shrug his shoulders and just turned and walked away.\n\nHe aroused my curiosity, and having a long life does tend to get a little boring. So I decided to do something that I had never really tried before, based on my memories of the Vampyre I had consumed in my youth I decided to become friends with this individual.\n\nThe odd thing about it is that once I started it I really began to enjoy it. To meet someone, who to all appearances seems emotionally dead, made me feel so much more alive just being around him! A conundrum to be sure, but there it is all the same. I became friends with a human, and good friends at that.\n\nI kept expecting him to ask me for money, or for favors, or for the all consuming desire people seem to have concerning us vampires...\"Make me like you!\" Rubbish! Instead he was quiet, didn't say much and showed no fear of me in the slightest. He took everything I said at face value and even asked my advice on certain subjects. It was very...liberating. Yes, that is the right word. It was liberating for me to become vulnerable, ever so slightly, to this mortal. For that I owe him a great deal.\n\nTo find out he had powers of a sort, a mage even, was not too shocking to me. Then to find he had a succubus under his command? The daughter of one of the Planar Lords, and he was still alive? Honestly I was not too surprised he was still alive. That dear boy has a knack for finding trouble and somehow coming out of it in one piece. \n\nThe ticklish part for me was wondering who had summoned the succubus Lucretia. A riddle I am currently not solving by sitting here and brooding.\n\nSee? I do brood. Just generally not in the dark.\n\nI hear the front doorbell ring. I check the time; sun is still up, another hour and a half until sun down. I sigh at that. Nancy had been on me to actually answer the door for everyone from the Jehovah's Witness missionaries to the people who hand out flyers for my lawn care! I didn't want to be too long in the sun, but better safe than sorry. I picked up a vial of a mixture of sunfish, Komodo dragon, koala, and vulture blood. I drained it with a grimace, though it gave me strong and temporary resistance from sunlight it tasted like an ashtray!\n\nNow, to see who was knocking at my door...\n\nI stepped out of my study and locked it up behind me. Just being in there, surrounded by all the information I had amassed was enough for me to ponder the problem. I saw Nancy poke her head around the corner of the kitchen door.\n\n\"Sorry William, I wish I could answer the door for you. I just...\" her voice trailed off as I walked past her. \n\n\"Quite alright my dear. You more than make up for that small shortcoming in other areas.\" I assured her.\n\nI went to the door and smelled, no one? Hmmm... normally I can smell whoever is at my door. Usually I can differentiate between the young girls who sell cookies and those religious types with pamphlets that are supposed to save my soul from damnation...\n\n...I prefer the cookies! Especially those coconut ones in chocolate!\n\nI opened my door and smiled out at a young man who was also smiling at me. He was wearing a grass-stained shirt and had jeans with dirty knees. It was easy to identify him as a landscaper by the logo on his shirt. Strange though, I didn't smell grass or dirt about his person. He extended a business card to me, and as I reached out to take it from him his whole body flickered for a moment. Like when an insect flies in front of a movie projector. Which was all the warning I had before a piercing pain hit me between the eyes and I felt my blood leave me through a hole in the back of my head!",
        "I fell back in the doorway and heard a high-pitched chittering shriek from inside the house. The image of the landscaper in the door fell away and I saw 5 men in full combat gear come storming in through my entrance. Full-face helmets hid their identities but I could smell them even as I called to my blood. I heard a small electronic voice that I assume came from a headset inside of one of the helmets give directions.\n\n\"Find the rat, and burn the house. Quickly, before the vampire regenerates! I can only hold the glamour on the area for so long!\"\n\nAh...a wizard or a witch of some kind. Wonderful. Well, obviously they didn't know how quickly I can heal, or how angry I would be at this intrusion. So that must mean they do not know me much beyond the fact that I am a vampire... \n\nOtherwise they would have sent more men!\n\nMy blood quickly slithered through the carpet, some of it misting as a vapor through the air back to my wound. Within moments my eyes opened and I stood, slamming my door shut and locking it. I heard a shout and several commands given and the sound of weapons cocking. Very distinctive that sound. Reminded me of a time long past when one would hear a blade being drawn from it's sheathe or scabbard. That sound always did make my heart beat a little more quickly, even now.\n\nI was surprised they didn't even have someone guarding my corpse, or take the initiative of staking me through the heart or cutting off my head. Crude tactics, but very effective against the undead such as myself. I could hear them breathing a little harder inside the rooms, waiting for me to come closer. \n\n\"Greetings gentlemen! Welcome to my home!\" I called out in a loud voice. I began preparing myself for the upcoming conflict.\n\n\"I took the liberty of sealing the entrance, and wanted to take a moment to thank you all for coming to visit me. I haven't had this much fun since I had a succubus visit me two weeks prior! Now, if you want to save yourselves, put your weapons down and come out into my sitting room. I will fix you all up a nice cup of tea. We can talk about the Who, What, When, and Why you came here.\"\n\nI paused, and heard nervous shuffling down the hall, and some harsh breathing from the kitchen.\n\n\"Or we can go the other route to end this conflict. It will not be quick, nor will it be pleasant, for you all at least. So...answer now.\"\n\nI waited for a few beats of my heart and nodded. \"So be it...\" \n\nThen I felt a pressure against the back of my head, no...not a gun barrel. That would be so gauche! It was an atmospheric pressure. I turned to look at my door, and saw it warp in towards me, like it was taking a deep breath. I spun to the side in time to miss the shreds of wood and steel as my door exploded inward, filling my entryway with lethal shrapnel! \n\nI smelled the sent of magic as the blast came by and the acrid tinge of an electrical fire, black flames tinged some of the debris on the floor.\n\nI came around the corner, moving faster than thought and rushed the man coming in. Inside my head I was yelling at myself to stop, but it is hard to fight one's own instincts. I hit the man low in the stomach and felt no resistance. I at first thought I had struck him so hard that it was no surprise he had folded up like a playing card. Until I realized I was holding nothing.\n\nAnother glamour! He had played me! I was standing outside of my home and in my doorway stood a wide man with powerful shoulders, bald headed with a Cheshire cat smile. His suit was thankfully, not the typical villain black, but rather a warm dark brown three piece. He had a blue star sapphire in one ear lobe and a gold bracelet on his wrist. \n\nI got to my feet, evening sun blazing down on me and was very grateful I had swallowed that little concoction earlier. His smile faded as he saw me rise. Obviously he was expecting blisters, and smoke and screaming...typically what vampires do when exposed to the burning light of day. His eyes looked me up and down as I walked back towards him.\n\n\"Impressive William, it seems you have more secrets than we might have guessed. My name is...\"\n\n\"Inconsequential. Since I will shortly be lighting a funeral pyre for you and your men.\" I interrupted him. This time I had the scent of him! Sandalwood, lime and cedar are a very distinctive mix for cologne. Even if he escaped now I would track him for the remaining years of his life! I flicked my fingers at him, calling forth a few drops of my blood; they flew forward like bullets and struck a smoky screen that appeared in front of the man. I gritted my teeth and struck again, more droplets falling like rain and sent hurling from all sides at him, which he handily blocked with the damnable spell!\n\nNormally my manipulation of blood would penetrate most defenses, this was new to me entirely! Only Gregory could stop my attacks, and I had found that out on accident. Even when I had dealt with Mother this trick had worked on her, and she was a Planar Lady! That screen came down and black fire was sent blasting from the Man's hands at me, which I was able to stay out of the way of by increasing my speed. I zigzagged across my front walk getting closer to my target when the very ground beneath my feet erupted in those black flames!\n\nI screamed as my flesh turned to crisped ash where the fire touched it! Falling I rolled to the side out of the area of heat, my face felt like a charred ruin, one eye didn't seem to be working right as the other glared at the wizard. \n\nIn the past I did my beast to avoid wizards, not out of fear per se, but more out of a sense of self-preservation. There is a difference between the two, fear and self-preservation. Though a mouse would starve on the difference!\n\nHe began to walk over to me, and I called for my missing blood. It didn't come; it had been burned in the flames. Normal fire it takes time to burn blood, I should have gotten some to come back to me. I am guessing this black fire was hotter than that. He crouched down by my head, could see the men from earlier walking out of my ruined front door. One of them held a thick canvas sack with something squirming inside of it.\n\n\"We have the package sir!\" One of the men said. My attacker just nodded, his eyes never leaving my face. The men continued to a parked panel van, and drove off. Leaving me alone with the wizard.\n\n\"So, William?\" He asked, a smile tugging at the corner of his lips. I gurgled a reply. \"We have the rat, and now we want something else. Your grimoires, all of them!\" I made a questioning gurgle, and cursed those flames that burned me.\n\n\"Hard to speak when burned with inter-dimensional fire isn't it? Handy stuff for either opening or closing gates.\" His smile widened. \"I know you have been hoarding occult knowledge for centuries. Knowledge such as the true Abra-Melin Operation, also your first hand translation of the Book of the Dead. The autobiographies of Pontius Pilate and so forth...\"\n\nI groaned, shocked that he knew of this. I had been careful over the years and yet here was this stranger showing knowledge of my activities that no one else knew! Where had I slipped up? His hand came down on my neck, holding me still on the walkway.\n\n\"I could kill you right now Abernathy, right here in your own city, I could kill you for underestimating me!\" He growled down at me. \"I won't though, I want your texts. If you want your compendium familiar back...then you will deliver your grimoires!\" The Wizard stood then and I weakly reached a hand towards him. He stepped back, avoiding my charred fingers. \n\n\"Pull yourself together old boy!\" He chuckled. Then reached into an inner pocket in his coat. He withdrew a small cigar and lit it with a touch of black flame on his fingertip. He blew a puff of smoke in my direction and continued speaking.\n\n\"When you are ready to talk...my \"Inconsequential\" name is Matthew Woolrim. My information I had my boys leave by your phone. I was tempted to leave it burning in your flesh so that it would only go out until you had called me...but that would be a little over the top now wouldn't it?\" \n\nThen the bastard turned and walked away, waving at me over his shoulder! The setting sun shone brightly off of his bald head before he disappeared from view around the corner of my yard.\n\nChapter 2\n\nI crawled through my front door since I literally did not have any feet to stand on. My skin and bones flaking and breaking apart off like soot or charcoal! I could feel my teeth growing long behind my upper lips. I hadn't been damaged like this in ages, in such a state! The last time I could remember was when I was in combat with another...ah...but that is a story for another time. I wriggled like a worm over the floor to my Cabinet of blood and pulled open the panel at the bottom. I pulled the central feed tube loose and every single kind of blood I had set up separately at the nozzles began to drain simultaneously down into me! I don't do that often, but as needs must...\n\n...I needed!\n\nNow, one may think that human blood is the most delicious and nutritious for a leech such as myself. Ordinarily you would be right to assume so. However I am very picky with my flavors, and human just doesn't do it for me anymore. Yes there are different blood types and some are more rare than others, but until you have had a nice mix of bison, kestrel, Gila monster, and Doberman? Please reserve judgment on my culinary preferences!\n\nAt the moment I was currently draining of 44 different animal blood types and feeling it pass through me and fill me. \n\nGlorious! \n\nMy burns were healing very quickly, limbs regenerating and the other wonderful parts of me coming back to full \"life\" as one may call it. I gasped as I took the hose from my mouth, excess blood spilling over my face and hands as I reattached the hose. I stood, albeit a little shakily and looked down at my tattered clothing. I took them off and stood naked in a puddle of spilled blood. With a gesture it ran across the floor and began absorbing itself into the sides of my feet until there was no more mess for me to clean.\n\nOutwardly I looked remarkably calm, inside I was a writhing mass of clamor!\n\nI cursed myself for not taking the situation seriously! Though I had taken precautions against Outsiders I had done a remarkably piss poor job of making my home an inhospitable place for regular humans hadn't I? Not to mention a bloody wizard throwing around a form of sorcery I wasn't familiar with! That really irked me. I took it as a matter of professional pride that I was at least familiar with all forms of combat magic. \n\nFamiliar...that word. Ah...Compendium Familiar, Nancy! That was what they were talking about. They kidnapped, er...rat napped Nancy and that Matthew Woolrim had called her a compendium familiar? I had a theory about that, but first...a shower!\n\nI scrubbed myself clean under hot water, running water does not bother my kind, so a shower is not out of the question. That is...unless someone blessed my water heater turning it to holy water, which would be a nasty surprise now wouldn't it? I toweled off and then dressed after a quick dusting of Oil of Thelema, which has another name but the misuse of the mixture makes me not mention it here.\n\nI made a phone call then stepped into my study to go through some of my older Tomes.\n\n\"Compendium Familiar...Cockatrice...Companion...Compendia...yes!\" I murmured as I found what I was looking for. I set aside a stack of astrological charts and pushed my collection of hanging shrunken heads out of the way of my desk lamp so I could clearly see what was written.\n\n\"A familiar is non sentient entity that is an extension of a practitioner of magic, wonderful...knew that already.\" I grumbled to myself and scanned further along the page.\n\n\"Here it is...in some circumstance in the use of the darker arts one may use a sentient being as a familiar and through the use of black geometry turn said familiar into an archival resource of information useful to it's master. A living Compendium of Knowledge...\" I frowned for a moment.\n\nI had spoken to Nancy about her old master, Allan Wade Dickson. A petulant child in all regards! Casting aside a familiar in exchange for a more socially acceptable one. It didn't make sense at the time, well it did, but being bound to ones familiar and to dispose of it would feel something akin to cutting off your pinky and ring fingers. Painful and not very helpful at all! To do so simply for something more socially acceptable seemed very short sighted.\n\nThat being said, I wondered if maybe Nancy had been passed onto the young wizard, when I inquired about her life before her master I was just told she learned to speak by being exposed to the spells and ritual workings the wizard had done. She had never referred to her master by name. I wondered if maybe there was more she wasn't telling me, or even if she could tell me?\n\nMore questions than answers and I am still no closer to learning where this Woolrim may be! Or even if it's just Woolrim. He had said \"Us.\" to me earlier. He could have meant just the men he had as lackeys...or he could mean there were others of an arcane nature that were just as troublesome as him! Which most certainly set my teeth on edge...\n\nPortland is MY home! I tolerate the current Gatewatch living near the borders of my city because it suits me to do so. Also they offer no threat to my authority. To have random wizards entering my domain and causing mischief of a destructive nature...?\n\nI am MOST displeased! Well, I had something to counter that when the time came.\n\nI was loath to use it, but at the same time it was so beautifully deadly I itched to hold it again. I looked to where I stored that artifact I had made with my own hands, and as if it were a living thing that could feel when my eyes crossed it...I could feel it's silent call to me.\n\nI ignored it and waited for my visitor to arrive, busying myself by pulling out detailed maps of my city and the surrounding areas. I made another phone call while waiting for my visitor to arrive. Yes, the first phone call was for assistance. My second phone call was to my insurance man. He had sent over an adjustor not too long ago for the hole that Lucretia had put in my roof; wonder what story he would believe about my front door?\n\nPerhaps an exuberant St. Bernard wanting my pork roast I still had simmering for dinner? Oh! An irate husband whose wife I had been having an illicit affair with? That would surely make tongues wag as it made its way through the circles of business in my city...\n\nI played around with different scenarios while waiting for my help to arrive; after maybe 20 minutes had passed I heard a knock on the doorframe, which my front door used to occupy.\n\n\"Baphomet's branded butt cheek! What the hell happened to your door William?\" I heard a man say.\n\n\"I had three little pigs under the dressing table and a big bad wolf huffed and puffed and blew in my door!\" I called out. A few moments later I heard an old friend walk in. He was a little shorter than me with dark hair and creamy pale skin. His name was Trevor Malfour, and I had known him for over 50 years. He gave me a careful once over and smiled, holding out his hand to shake. I took it, and felt the tingle of his particular form of magic as it prickled over my fingers. \n\nTrevor is a warlock, at least as near as I can tell you might call them a male version of a witch. Much more multi-purpose than a mage, but less strength than a wizard they still can wield their power with a ferocity that can be astounding. Trevor had been a part of the Gatewatch when he was younger, both him and my one time pupil Suzanne had been partnered with an obnoxious were-wolf named Michael Roberts. They had performed their duties well, and passed on the mantle of responsibility to their heirs as is proper. I would still call on him from time to time as the need arose. \n\nSuch as now!\n\nTrevor held out a hand towards the remnants of door on my floor and muttered a few words in Sumerian before closing his fist and spitting sarcasm, \"Portal fire! Wonderful!\" He glanced back at me before picking up a piece of door and it crumbled in his hands like wet tissue paper.\n\n\"Wizard?\" he asked.\n\n\"Matthew Woolrim...yes, he claimed to be one.\" I told him. I straightened my maps out on the large coffee table as Trevor continued poking about.\n\n\"It's not illegal to use magic learned from the other side William...as long as it's not used to make Gates. Sure makes a hell of a nasty weapon doesn't it?\" Trevor sighed.\n\nI grunted non-comitally. Trevor finished looking at the detritus and walked back over to me. I saw him looking me over closely.\n\n\"That fire is used to separate realities. If you had been burned by it, you would have fallen to pieces and your psyche would be...\" I cut him off, not wanting to hear what he had to say. Some things are better left alone after all.\n\n\"Good thing he missed then isn't it.\" After filling in Trevor on what had happened he gawked at me a little.\n\n\"He stole your pet rat?\" He asked incredulously. I bristled. I had not told him that Nancy was a sentient rat, nor anything else about her. It was none of his business, and besides...I hoard information.\n\n\"Yes, he did, and is holding her for ransom. I wish to find where he is and get back what belongs to me. Can you help me?\" I asked.\n\nHe scratched the back of his head and glanced at my floor. \"The residue of magic he used should be easy enough to get you a rough location of where he is. You would only have tonight to find him, and if he has gone very far...\"\n\n\"All the more reason to do this quickly then isn't it? Shall the regular fee be sufficient?\" I asked, wanting to speed this along. He thought for a moment then nodded his head once. I stepped aside while he got prepared to cast his thaumaturgy and I readied a few flasks. With a quick jab of a needle I began filling two pint sized flasks with my own blood, taken from my forearm. Why you may ask?\n\nThis is the form of payment Trevor wished. He is over 70 years old, both he and his wife have been blessed with long lives. Though they both look to still be in their 30's. This is a thanks, in no small part, to me. They each imbibe of my blood after running it through a screen of herbs and heat and other things, it kills the vampiric portion of it, and leaves the gift of longevity. I have my own secret reasons for wishing to bestow this on them, but again...secret knowledge has power. I keep power close to my chest. \n\nTrevor held his hands out over the maps and began chanting. I didn't understand his words at all. He may have been intoning a recipe for sugar cookies! But as he chanted, he began to dribble the dust from my burned door down on the maps laid out. I could see the minute particles dangling in the air over the plastic laminated sheets of paper. Slowly the articles on the table began to shift, sliding over the tops of each other! They shifted from the back, all the corners laying out at different angles. Once stacked, the ash made a straight line down and then ignited!\n\nA line of fire with orange bright flame that turned white like a welder's torch then snuffed out!\n\nTrevor let out a sigh and moved his hand, now empty of ash. He leaned over and blew gently on the burn mark and wisps of smoke came up from the melted plastic. He slid the maps out from where they were stacked. A neat burn hole had pierced straight through a section on each of the maps. As I looked through them I saw they all pointed to the same destination. An area near Jantzen beach, a location near the Columbia River, just outside of the city of Portland proper.\n\n\"Well, there you have it William...\" Trevor said faintly. I handed him the two flasks, one for him and one for his wife. He accepted them with a smile and a nod of thanks. \"Do I want to know what you are going to do?\"",
        "\"My dear man, I am merely going to retrieve my stolen property!\" I told him with a smile. He just shook his head and patted the side of my shoulder.\n\n\"Be careful Will.\" He told me as he left. I watched him leave, carrying those flasks, and I wondered if he would ever guess my real purpose for giving him my blood. \n\nVampires are sterile, everyone knows that. Many consider humans they have turned as being of their blood and make them sons or daughters...at least in title. Some even go so far as to give them their names! I myself, as an alchemist, see this as sentimental folly. For I have found a way to gain myself a family by blood, passed down through right of birth. Both Trevor and his wife had been imbibing of my blood for several years before they had a child, I could feel it when she was born.\n\nGwendolyn Malfour is truly my granddaughter...by right of blood!\n\nThat is for another time though, now I had to prepare.\n\nI went back into my study and retrieved an item that was calling to me the moment I opened the door.\n\n\"Yes...yes...you are about to be used old friend!\" I muttered to it quietly as I pulled the oiled canvas from its cubbyhole. \n\nI reached in and pulled out a carefully crafted leather shoulder harness, more of a baldric really. I gently flexed the leather, always amazed at how supple it was. For 40 years I had not used it, and still it was as malleable as suede! I carefully put it on over my suit shirt and then drew the weapon that was still whispering to me.\n\nA simple flintlock pistol. \n\nThough to call it simple was a misnomer. I had made this weapon myself, following an archaic formulae meant for another sort of weapon, a sword. This I had done as an experiment...with surprisingly destructive results.\n\nI carefully checked out it's workings, though it had no need for me to do so. Handling it, I remembered what had gone into crafting it. I had harvested the wood for it's shape from an oak tree in Alabama used to hang runaway slaves. The barrel, firing assembly, and butt plate were derived from melted down Japanese officer's swords from World War 2. I pulled out the pouch of .50 cal bullets. They had been formed from rounds that had been used to execute prisoners of war by firing squad.\n\nI carefully began the loading of this weapon, this talisman of violence. Truly a talisman for one could feel the desire for retribution, and violence contained in it's shape! Which suited it well, for I called this weapon \"Talisman\" for what it represented. It would let nothing impede it from killing once the trigger had been pulled, the powder ignited and the bullet had left the barrel. Nothing could stop it.\n\n\"We will be seeing you soon Mathew Woolrim...\" I said softly. Talisman seemed to chuckle darkly in my thoughts as I put on my coat and walked out of my damaged front door.\n\nI passed the insurance adjustor who stepped out of my way, \"Mr. Abernathy? Your door?\"\n\nI paused to smile at him and said, \"A big bad wolf blew my door in, please fix it while I see to the creator of this problem.\"\n\nMy smile widened as I slid into the shadows of the street and quickly made my way towards the location of my target. \"Yes...I do have some wonderful plans for you Matthew Woolrim!\"\n\nChapter 3\n\nNighttime, in a city that never truly sleeps. The general populace does rest it's eyes, but more often than not most of the real work gets done at this time. I always liked to think of cities as large machines, and the people in it the gears and pulleys. During the day things are humming along smoothly as everything falls into place and everyone does the jobs they have designed themselves to do. At night while they slumber maintenance comes in, greases and oils and replaces parts that have been damaged or are worn out. When daybreak comes the great machine known as Portland whirrs back to life and everything is moving once more!\n\nSo here I move swiftly down these sidewalks and alleys, eschewing my vehicle for my own feet. I can move more swiftly like this, at least at night. Every now and again I will see some other denizen of the deep dark who quickly averts their eyes at my passage. They are here on my sufferance, and know that I am not to be crossed, especially once they see my expression!\n\nJantzen beach is well known for being the major intersection between the two states of Oregon and Washington. During the time before the legalization of marijuana in Oregon, the police patrolled this stretch of road frequently for those bringing it over from Washington. Most Washington citizens came into Portland and other cities here to buy supplies and goods that they didn't have to pay sales tax on. There are always checks and balances put into place in business and politics, and little niceties to be observed. For me, I may have to go outside of my territory to get this Woolrim. It would be in the territory of another, Suzanne. We always kept the peace of distance between us because of her distaste for me, and I respected her desire to be her own person. I did tend to think she wasn't very open minded, but that is for another time.\n\nAll this aside I am still presented with the problem of what to do if they have crossed the river into her territory!\n\nI came to the bridge that crossed the Columbia and pondered for a moment. Then pulled out my cell phone and rang her number. I figured the direct approach would be best.\n\n\"Hello...William. Haven't heard from you in a while. To what do I owe the pleasure?\" Suzanne's voice always reminded me of thick honey, fresh from the comb. I could almost see her using a hand to toss her heavy mane of red hair behind her as she spoke. Even thinking about it made my mouth run dry as I thought of her. I am over 400 years her senior and have had more experiences in my life times than she could fit in a dozen of hers! Yet she always made my knees go weak.\n\n\"Greetings Suzie!\" I returned brightly. I could almost hear her grit her fangs on the other end of the line. \"I may be having to enter your territory because some thieves stole something from me that I want back. Would it be alright with you?\"\n\nThere was silence on the other end, and I swear I could hear her smirk as she purred out, \"Someone was brave enough to steal from William the Terrible, aye? My, my! I may have to reward them if I find them first!\"\n\nI cursed in my mind! No need to let her know she was succeeding at upsetting me. \"I underestimated them obviously Dear One. Now...\"\n\nHer snarl cut me off, \"You don't get to call me that anymore you Deviant! The only reason I picked up when you called was because we are neighbors! Do not presume in anyway that we are still anything to each other! You disgust me...and now you are toying with that poor boy as well, Gregory! Does he even know what you have done and are still continuing to do?\"\n\nI worked my tongue between my lips that had suddenly gone dry. Yes, as a matter of fact Greg did know what I had done, and doesn't know that I still do it. What she is referring to is my method of consuming the essence of vampires. I had done it twice, once from a feral that was running loose. And another time from the bones of a long dead ancient vampire that was actually a Vampyre. One who had walked the earth and worked alongside of humans before the Great Cataclysm.\n\nGregory, that dear boy, had seen it as a way to recapture what had been lost! Where others had writings and scraps of parchment, I had actual memories of events. I had felt a tremendous amount of guilt in my younger years for doing this. I always felt that power was something you earned for yourself; Gregory had set me straight by looking at it from an entirely different viewpoint. He had relieved me of a burden I would not soon forget.\n\nSuzanne, and many others of my kind saw it as a form of cannibalism. Which I personally find to be very hypocritical! For were we not human at some time in our past? That is a discussion to be had at another time...if at all! \n\nEspecially with her.\n\n\"Our personal feelings aside Suzanne, do I have permission to enter your lands? Remember, I give you freedoms to come and go as you please through my city to not hinder you in your business.\" I hoped that would settle her. It is almost unheard of for another vampire to give another of our kind free reign, especially with hard feelings between them. That being said, she knows not to push me too far. I was given the moniker \"Terrible\" not solely for my perceived cannibalism. I would explain more, but I do not wish my readers to lose their appetites for a few days.\n\nAlmost a minute passed as she considered, \"Very well William. Your point is made, you have permission to enter on the condition that if you recover your property within my city limits then you split half of it's value with me.\"\n\nI blinked and held out my phone to stare at the screen. On the caller ID was a winsome picture of her smiling with a hint of fang, now my only memory of when we were friends. Maybe I should change my profile picture of her to something more fitting? A cobra? A corporate banker perhaps?\n\n\"Very well...\" I said grudgingly.\n\nI heard her chuckle. \"Good. Hope to hear from you soon. 12 hours enough time?\"\n\n\"More than enough. My thanks Suzanne.\" I said shortly, and hung up my phone.\n\nI hid in the shadows of the bridge, thinking. My quarry would not stay in my city for worry that I could track him. Yet he would want to meet me. I pulled out his information he had left by my phone. A simple business card with the name \"Matthew A. Woolrim\" emblazoned in silver, and a phone number under it.\n\nI dialed it while standing on the bridge over running water. It was answered on the fourth ring.\n\n\"So you did call? Do you have what I want?\" I heard his almost jovial tone. My fangs lengthened and I used my tongue to push them back into place, cutting my tongue a little in the process.\n\n\"Yes...\" I responded. My blood tasted akin to ashes in my own mouth at his smug tone of voice.\n\n\"Good, where shall we meet then?\" He asked again, like he didn't' have a care in the world.\n\n\"The bridge in Jantzen, underneath the overpass...do you know it?\" I supplied. He scoffed.\n\n\"Obviously I won't meet you there Abernathy, especially since that is what you picked. Lets meet at the park just west of the overpass. See you there in 15 minutes...\"\n\nHe sounded about to hang up so I snarled out, \"Proof of life you miserable wretch! Proof of life first!\"\n\nHe chuckled a little and said smoothly, \"Of course, of course! How rude of me.\" I heard some shuffling and a threatening voice say, \"Speak rat or I will cut off your tail and make you a hamster!\"\n\nThen I heard Nancy's voice, \"I am alive...and...TWO WIZARDS A DOZEN MEN AN...\" the voice was cut off and I heard furious squeaking and thudding noises. Then Woolrim's voice came back on. He sounded a little put out.\n\n\"Don't get any idea's Abernathy. Honestly, if I could handle you that easily with only five men and myself. Just think what could be done with more. We clear?\"\n\n\"Like crystal. I will be waiting.\" I said. Then hung up with a smile.\n\nMy secretary was going to get a raise, and entire wheel of good Dutch cheese! Wonderful creature that she is. Brave too. So, two wizards and a dozen men? Hmmm. I wonder how many are going to come to this little soiree? \n\nI waited at the park that Woolrim described, and watched carefully. Of course he would be able to glamour his approach...but he was only human. One cannot think of everything to cover. The sounds that should be blanketed in silence, the smells of exhaust, but since I knew better what to look and listen and even perhaps to feel for...? Yes. I saw the disruption of air at a distance. Like a heat haze that at night would have been invisible to most.\n\nTwo vehicles approached, and ten men got out. Nine of them moving to defensive positions with Woolrim in the center. I could see that jewel in his ear glinting in the light of the moon.\n\nI felt Talisman stirring in it's holster under my jacket and ran my hand over its length. \"Soon!\" I thought to my weapon, \"Very soon!\"\n\nI dropped from the top of a play structure and moved quickly and quietly to the center of the small wooded area. Once there I waited. Listening carefully I heard the sounds of breathing and shortly...that light hint of sandalwood, lime, and cedar filter through the dirt and leaves of the park. It was easy to tell that the kidnappers, I mean, ratnappers, had been expecting resistance. But I had a plan. You see I am not very good at many of the vampire specialties. I do not favor claws or other physical forms of violence. I usually prefer style, surprise or an overwhelming display of power.\n\nMy blood allows me to do things that most vampires only wish they could do. As I was about to personally show these people.\n\nI could see the men coming forward, Woolrim foremost, a smoky haze in front of him. That damnable shield I couldn't breach. He looked around.\n\n\"The Grimoires?\" he asked. I smiled. \n\n\"On their way from storage. Maybe a half hour away at most...\" I said softly. \"My rat?\"\n\nHe showed Nancy, still in her pink leash and harness inside of a clear plastic box. With no air holes! \n\n\"This is an electrocuting rat trap.\" Woolrim told me. \"Simple device. Clear plastic to see if you caught something or not. As you can see here, I have a piece of plastic tape on my finger. The end is between the battery connections. If I were to happen to move my finger...\"\n\nI raised a hand in a pleading gesture. \"You have made your point Wizard. You have me out matched. I...wait a minute...what is happening!? What are you doing to me?!\"\n\nI grabbed for my throat and made choking noises as blood began to seep from my pores and shortly covered my whole body. I made gasping gagging noises and dropped to my knees panting and writhing like I was choking!\n\n\"You said we were going to have an exchange!\" I rasped at him. \"I acted in...accord to your...gah! Your...ugh!\"\n\nHis men stepped closer, as did he. I smiled through my own blood though he couldn't see it.\n\n\"Abernathy! I am not doing this, what is...?\" His voice died as I suddenly stood and flicked my wrist. Droplets of blood sped fast as arrows out to strike the men around me and off in the trees. There were cries and yells of pain and surprise and screams of anguish as the bastards began tearing at the ground. Some of them had the presence of mind to shoot at me, but my own protective layer of blood caught the bullets before they touched my skin.\n\nWith a smooth motion I drew Talisman and used my thumb to pull back the flint striker, aiming it at Matthew Woolrim's stomach. He bared his teeth and with a gesture his smoke screen hardened. I knew what was coming next, the release!\n\nI squeezed the trigger and just before the flint struck the primer there was the sound as if a giant the size of a mountain took a deep indrawn breath. I saw Woolrim's face for a moment as his shield of smoke twisted a little and his eyes were wide and his face pale. I knew what he was seeing. \n\nA roiling black shadow of billowing oily clouds behind my shoulder, gripping my arm tightly in anticipation of it's flight! The hammer struck, igniting the powder and the mass slammed forward turning my Talisman black as tar. With a moaning roar of pent up rage, and a wail of desolation the bullet launched itself from the barrel of the gun as if the explosion were but an afterthought. Like a dark comet of wrath it sped across the distance between the wizard and I. For just a moment Talisman was connected to his victim, a black line of inky shadow between the gun barrel and it's target. I felt a pleased rumble come from my weapon and then the shield of smoke shattered!\n\nA moment of silence then the Wizard let out a loud cry of pain and fell, his hand clutching at the stump on his elbow where his arm used to be!\n\n\"Son of a bitch! I'll kill you! I'll kill you!\" He shouted in pain. I looked down at Talisman and felt a rumble of satisfaction from it. I reloaded the weapon as I walked over, and looked down at my enemy. \n\nI was surprised Matthew Woolrim was still alive to be honest. My wonderful weapon tended to kill what it shot. The blackened flesh that oozed no blood where the wizard's arm used to be was evidence of that. If the round had struck him in the belly I could have placed a flowerpot in the hole that would have remained. As if feeling my curiosity, I felt a whisper in my ear.\n\nINNOCENT...\n\nMy eyes fell to the arm that was lying next to Nancy's plastic cage where she was scrabbling around with muted squeaks. The hand had blacked and was falling apart like soot in rain, the flimsy piece of tape still in place protecting my secretary's life. I made a motion and my blood dripped on to the plastic and broke it apart. At the same time I spattered more of my blood onto Woolrim whose back arched in agony and then fell still, unconscious.\n\nThe moment Nancy was out of the cage she began running away, fleeing as fast as her legs could carry her!\n\n\"Nancy! Wait! Where are you going!?\" I called after her. She froze, looking back at me.\n\n\"Will...iam? Is...Is...that you under there?\" She squeaked. I couldn't tell from her voice if she was scared or not since she was always a little squeaky when she spoke. I sent my blood back in through my pores, so it was no longer covering me. Then I dropped down to one knee and held my hands out to her, low to the ground.\n\n\"Yes, it is me Nancy. I am here and you are safe now.\"\n\nShe took a hesitating step towards me, head up and I could see her nose sniffling and whisker's twitching for a moment, before she scurried even faster towards me than she had been running away. Which is when I found out something about Norway rats...\n\nThey can leap!\n\nWhich she did, right into my chest, her pink leash streaming behind like the tail on a kite! I chuckled and held her, stroking her soft brown fur.\n\n\"They hurt me! And asked me questions, ones I couldn't answer so they hurt me! Trying to make me talk!\" She gave little squeaky sobs.\n\n\"You were only gone at most for a few hours...what did they want to know?\" I asked. \n\nShe went rigid, and silent. \n\n\"Nancy...?\" \n\nHer little rat mouth opened, and I heard a slight raspy gagging noise before it shut tight. It closed so fast I thought she almost bit her tongue off!\n\n\"Its alight, shhhh! Just relax. No questions, okay?\" \n\nShe shuddered and rubbed her head and ears in the crook of my elbow. \"Thank you William. I would kiss you if I could, can we go home now?\"\n\nI chortled in my throat and on a pure happy whim, I picked up my little furry secretary and kissed her on her whiskered nose! Which made her chitter in surprise and blink at me rapidly. \"Don't tell anyone I did that! Sexual harassment in the workplace lawsuits and all that rot and nonsense! Would never do would it, to have a boss putting the moves on his employees would it?\"\n\nI stood and tucked her leash in my pocket, fastening it to my watch clasp for a pocket watch I never carried.\n\n\"We have a couple more loose ends to clear up before going home Nancy. Would a little more violence bother you at all?\"\n\nI heard her give a disgusted sound, \"I am a rat William! Of course not...\" I grinned and walked over to the first of the men, he looked to be the leader, he was still groaning and twitching on the ground.\n\n\"Hello there!\" I said brightly to him. \"It seems your previous employer has no further use for your services. I might have need of some personnel who are used to dealing with people and things outside of the mundane bounds of life. Are you interested?\"\n\nHe grunted and groaned while reaching for the clasp of his helmet, finally popping the clasp and pushing it off so I could see his face. A negro man was looking up at me with hard eyes. \n\nWait, we don't call them Negro anymore...African American? I think that is it. But what if he isn't from America? Or from Africa? Wouldn't that be rude? I guess I will just call him \"Black\" until I know his name. Makes no difference in the end I suppose. Either way...human's all taste the same to me.",
        "\"That...hnngh! Depends, on the benefits package sir!\" The black man said to me. Which made me laugh! Such temerity this human had. I made a motion and my blood stopped worming through him and he panted out a sigh of relief, almost sobbing.\n\n\"Full medical coverage while working for me. Which includes dental and vision. A small copay, but that is just to make things easier for my insurance company. Also I have a nice 401k program and I personally match 50%. Then again, that is only one paper. What is off paper is of tremendous value. Interested?\"\n\nHe gave his head a shake, but I guessed rightly it was only to clear his pain. His eyes looked up at me with cautious interest.\n\n\"Salary?\" he asked.\n\n\"What were you paid before?\" I returned. He told me. I tsked! Were all wizards so stingy? I doubled it, and we shook hands on it.\n\nNow, I have a new head of security Reginald Markus...who preferred to be called \"Reg.\" Reg went about speaking to the other men. Most joined me, I found out that their benefits package was just as abysmal as Reginald's! Of the nine men...three did not want to join me. I went ahead and called back my blood, taking all of the rest that was in their bodies as well. At least this way I didn't have to taste it! Seeing they're ex compatriots exsanguinated in this fashion put a touch more haste in their steps and a little more respect in their voices. On my orders they loaded up the vans to dispose of the bodies. Then I told them to not go back to their home base, and instead meet me at my home.\n\nOne may think me foolish to hire such mercenary folk, especially since they had been trying to kill me less than half an hour past. I prefer as I said to you all before, to have enemies work for me and thank me for the pleasure. Which Reg, and the rest of his men did. \n\nSuch a sweeter victory don't you think?\n\nI myself, sat down in the park and held Nancy curled up in my lap. I had a lot to think about where she was concerned. I absentmindedly called Suzanne and let her know I had retrieved my property and let her know that at least one wizard with three armed guards were in her city. I assume she hadn't given permission for them to be there since she hung up quickly.\n\nIt was at that point, with Nancy asleep in the crook of my elbow, I decided to go home.\n\nChapter 4\n\nThe walk home was uneventful, no one accosted a small man in a business suit holding a sleeping rat cradled in his arms. Though one patrol car slowed down and asked if I needed help. Police are so much nicer in this day and age than they were a hundred years ago!\n\nI came home to see that my new men had cleaned up the mess inside my house and as I had requested were all eating and drinking in the kitchen and dining room. Very politely too! Must have been raised with manners by their mothers...commendable. Hmmm...I wonder if they would mind being test eaters for new dishes I wanted to prepare?\n\nReg saluted as I came in, the rest stood and did the same. \n\n\"At ease...the wizard?\" I asked. \n\n\"We stripped him and placed him in the bathtub at your request sir.\" Reg said, and then reached into his pocket and placed the contents of Woolrim's pockets and his jewelry on the dining room table. I gently set Nancy down and opened up the wallet. Taking out the cash I handed it to Reg. \n\n\"Please go to the Embassy Suites hotel, I will call ahead and have rooms prepared. You are to use whatever facilities you wish. Rest and eat. I will be calling on you soon so we can work out the parameters of our agreement...is that clear?\"\n\nAll 6 men saluted and gathered their things before heading out the open front door.\n\nI carefully picked up Nancy and brought her into my bedroom and set her on the pillow next to mine, after taking off her leash and harness. Then I took off my jacket and rolled up my shirtsleeves for the next part would be a little messy. I opened a neatly concealed compartment beneath my bed and removed several clay vessels. I carefully checked the hieroglyphs and nodded that they were correct and walked into the bathroom where Matthew Woolrim lay unconscious in my bathtub. I set the clay jars on the counter and sat on the toilet lid and looked at the wizard.\n\nSo peaceful he seemed, my blood forcing him into slumber. Being wide, his shoulders nestled tightly in the porcelain walls of my tub. I sighed and then with a thought allowed him to awaken. He blinked and groaned, he tried to grip the side of the bathtub with his right arm and bumped his stump against the edge and howled before falling back in. He gripped the remains of his arm with his other hand, his eyes flying open and locking on my face.\n\n\"You bastard! I will kill you for this, we will kill you for this!\" He groaned out between moans. I nodded my head in understanding.\n\n\"Always the same isn't it Matthew...?\" I said quietly.\n\n\"You get put in a losing situation and then you turn to threatening me with some unseen enemies that will come and either save or avenge you. I have seen it all before. Next will come the bargaining...correct? You will say how you spared me when you had me at your mercy? That you never would have killed me but just wanted what information I have right?\"\n\nHe was still gasping slightly, but grit his teeth as he stared at me. I nodded. His silence was answer enough. \n\nI stood and stepped back to pick up one of the clay jars, considering it.\n\n\"You won't get any information out of me...Abernathy! You won't get shit!\" He growled out. I nodded my head again.\n\n\"I am aware that to become a wizard you can withstand great amounts of torment, both physical and psychological. Are you aware that as a vampire I could just drain your blood completely, and then I could sift through your thoughts and skills to pick what I want to know?\"\n\nI sat back down, holding the jar in my hand and continued in a mild lecturer's tone.\n\n\"My old Sire loved music, sadly he never could play very well. He would prey upon traveling gypsies or minstrels and drain them dry. For a few hours after he could play just as well as they could in life. But soon the skill would wane as the blood of his meal was used up.\" I shook my head a little sadly.\n\n\"What a waste, years of training for a human, snuffed out for a few hours of stolen ability? How selfish my people can be.\" I looked back at my victim.\n\n\"I sought a more permanent solution, and used it on those who were about to die. My first was a vampire that had gone rogue...such a classy term that...Rogue! Makes one think of Robin Hood or the Highwayman doesn't it? I used a particular process of oils and acids to melt them, then drain off the excess fluid leaving salt crystals behind. Strange now that I look back on it, the essence of what he was filled the palm of my hand with white powder. I took this and after mixing it with a proprietary blend of blood of my own devising...I imbibed it.\"\n\nI leaned forward, staring into the wizard's eyes, my tone was soft and dark...\"Do you know what happened, Matthew?\"\n\nHis own eyes were wide as he pushed himself back further in the bathtub. \"N...N...No!\"\n\nI smiled, \"I had all of his skills, I knew woodworking as he did from before he got turned. For example I made all of the cabinets in my kitchen. I knew everything he did! I had ALL of his memories, down to the first baby he snatched for their sweet blood, down to his last moments with me looking down at him the way I am looking down at you now.\"\n\nI paused, thoughtfully. \"I haven't seen myself like that in centuries. I wonder how I will look when I see myself through your eyes?\"\n\nI raised the first of the clay jars and poured it over the wizard and watched clinically as he began to thrash and scream.\n\n************************************\n\nI walked back to my study, got out my cleaning kit and carefully unloaded Talisman, before oiling him and putting him away. Once he was safe and secure behind several other small artifacts of power, I took the sapphire from my pocket, the one that had been in Woolrim's ear. It was a pretty bauble, and that faint dusting of magic it held from being exposed to the wizard made it a perfect gift to give Lucretia.\n\nFor Gregory, the gold chain bracelet might be a bit much...but after I imbibed the wizard, I would know better what it could do. I closed my study without adding too much to the clutter and walked back to the bathroom. Several minutes had passed, I had turned the ventilation fan on to suck the residue of the liquification process out. It always had an odd smell to it! Sure enough, the acid and oils had done their job and been absorbed by the body. A layer of dry crystals could be seen. Carefully I gathered every particle I could find, and scooped it all into a clear glass cup. I held it up to the light and marveled how the very essence of a body could be held in half of a cup of what looked like sugar!\n\nI took it with me to the kitchen and pulled down from the cupboards a mortar and pestle of dark smooth marble. I began to grind by hand the crystals into a fine white powder. Then I began mixing different type of blood together. Of what animal you need not know, and in what quantities is unimportant.\n\nWhat is important is that the powder flowed smoothly and mixed well. I braced myself, knowing what would come next.\n\nA young vampire could be driven insane by what I was about to do. I was about to fill myself with the thoughts, memories and feelings of another individual. I would know his most sacred and inner secrets as surely as I would my own. I have over 700 years of life experience that anchors me into what I know is me. When I was merely a fledgling still I took the memories of that feral vampire and nearly went insane. Then I foolishly took on the memories of a Vampyre!\n\nTo this day I still am not sure which is me and which is him, if I am truly myself or an amalgam of what is very old and what is new. Whatever I am, I am at least sure of it. Which is more than most can say about themselves!\n\nI tipped back the glass and swallowed gulp after thick gulp. It slithered down my throat and my mind started to pop and writhe inside of my skull! My heart beat faster and my skin tingled like hot then cold water was being sprayed over me in alternating patterns! Energy filled me first and I stood straight and tall!\n\nI chuckled and held my hand up in front of my face. A memory came to me of what I could do and I snapped my fingers once. A black flame, like a negative photo of a candle appeared over my fingertip and I smiled at it in enjoyment.\n\nWhat a wonder! I should have tried to do this before! I began to sift through memories that I knew were mine and which ones belonged to Woolrim. I saw his mother and father, their graves. A pet cat from when he was a child. His first kiss at 15 years of age and how her lips had tasted of chocolate covered cherries. I kept searching for more recent memories then came upon one that made me stop.\n\nI gasped, and held my head. No! How could I have missed this? It had been right in front of me, the entire time! I scanned forward and back through thoughts and memories not my own and felt a prickle of tears come to the corners of my eyes. I stumbled to the corner counter in the kitchen and blindly picked up a sharp paring knife. Then I headed towards my bedroom where Nancy lay sleeping.\n\nShe looked so peaceful there, laying on her side, the harness and leash coiled up on the nightstand next to my bed. I stepped in closer, my hand tightening on the paring knife as I sat down next to her. She stirred in her sleep as I starred off to the side at the wall. I was still processing all of the new thoughts. Ritual workings, and the sundering of magic circles of power. The sapphire had been a trophy, like a diploma from college or an instructor's belt in a martial art. Maybe I would keep it for a little while.\n\nThe gold chain had been a gift from a friend. No magical value to it, except a symbol of friendship with...with...who? I see a face but the name escapes me! It...\n\n\"William...?\" I feel her soft forepaws on my thigh and glance down at Nancy. She is looking up at me with an expression that I know from her months living with me that is of concern.\n\nI try to speak to allay her concerns when those other memories rush through me and I grip that paring knife a little harder in my fist. If what I see is true in these memories, and if I have interpreted them correctly...\n\nThis is going to hurt!\n\n\"Nancy...\" I say, trying to keep my voice calm. Though a hitch in it makes her ears swivel up and alert. I cough and try again.\n\n\"Nancy, I have some questions...\" She shakes her head at me, which makes me stop and reconsider my words.\n\n\"Nancy, I have some statements, and hypothetical questions. More like I need to think out loud, would you care to remain while I do so?\" I asked, looking down at her. My eyes were looking directly into hers as she stared up at me. I noticed her tail twitch at the intensity of my gaze. \n\n\"I want...to stay.\" She said meaningfully. \n\nI let out a breath that I didn't know I had been holding, then stood up, and began pacing. I was tapping the flat of the blade of the paring knife in my palm as I walked slowly around the room.\n\n\"A rat, a talking rat no less, that has a life span of well on to 37 years is considered by most to be out of the question...\" I glanced at her and saw her flinch, and carried on. \"...even with the use of black geometry or other forms of dark magic it is preposterous. Even partaking of vampiric blood is not enough to allow non-sentient creatures to live so long past their regular life span.\" \n\nI turned and pointed a finger at her.\n\n\"This leads me to conclude that you are either a shape shifter of some sort or are a being under some form of a curse...and not a rat at all!\" I declared.\n\nNancy began shifting and making those little grunts as if she was trying to speak. It sounded like it was hurting her! I raised a hand and gave her a hard look, which silenced her.\n\n\"I am not done yet. So, further proofs of this are the late wizard...one Matthew Woolrim. I overheard him declaring you a compendium familiar. Something that through research and his own memories is a role impossible for a creature without sentience to become. Also from his memories one of the fail safes to keep said knowledge secret from all but the familiar's master is to have a geas placed upon said individual that renders them unable from divulging that knowledge to any Tom, Dick, or Harry that they choose too.\"\n\nI glanced at Nancy again and she was frozen in place, except for her twitching nose and her eyes watching me as I paced.\n\nI stopped and stood in front of Nancy looking down at her.\n\n\"You tried...so many times to tell me didn't you? But the words were unable to come out?\" I heard a squeaky sob come from her.\n\n\"Saying to me, \"A woman has to have her secrets\" or constantly fetching me tea when it would be impossible for a rat to get to where you had gone to get those things for me? Let alone actually making a cup of tea. All clues to who, or should I say...what you were?\"\n\nAnother sob, and she was struggling to make noise, anything at all. I put a hand on her back and gently stroked her fur...soothing her as best as I could.\n\n\"A simple, elegant curse really. Around anyone but your master you stay in the form of a rat? When in sight of him you change back to your original form? Makes sense...but even after his death you would remain a rat forevermore to the end of your days. A safety would have to be in place wouldn't it?\" I said quietly. Nancy was still as stone. I could almost feel her hope welling up in her!\n\n\"It's how you could reach up into the cupboards and pull things around. When I couldn't see you, you would take your true form. But there had to be no chance at all I would be able to see you. Several times we would play games where I would blind fold my eyes and find where you were hiding, you were always a rat then...so there could be no chance of me seeing you at all...\"\n\nI raised the paring knife in my hand and Nancy saw it...\"No William! NO!\"\n\nI stabbed the blade into my right eye and screamed, then quickly yanked it out and slammed it into my left one before I could consider how much this would hurt. I grasped blindly at the bed and my hand touched a warm smooth thigh. Small hands gripped the sides of my head, my blood spilling over fingers as my head was tilted back and thick lips like plump berries touched mine!\n\nA ripping sensation, as if a sheet of cloth was torn in half. I didn't feel it or hear it, but I still know it had been done, the moment her lips touched mine. No, I didn't figure it was a kiss of True Love that broke the spell, but rather a Kiss of Acknowledgement. Most people would not kiss a rat. That is considered to be rather, well...disgusting!\n\nBut to kiss a person? Not hard to believe at all. As I rightly guessed from those memories, to know of the curse, and then to make it absolutely impossible to view with one's eyes the target, and then give the Kiss of Acknowledgment and believe that it was not a rat, but a person lips you would touch would break it. As I said before...simple, yet effective. \n\nA curvy body with wide hips held me tightly in her arms and I heard a crying voice loudly saying, \"Thank you! Thank you! Oh Thank You William!\"\n\nSlowly, over the course of a minute or two, my eyes healed from the damage done to them and I could now clearly see Nancy...who she really was, for the first time.\n\nSlightly curly light brown hair falling a few inches past her shoulders framing a heart shaped face with thick lips still with a touch of my blood still on them. She was kneeling on the end of the bed, so her head was taller than mine but if she were standing she would be my height. Pert cute breasts that sat comfortably on her chest, and full luscious hips perfect for dandling small children on is enough of an explanation of her looks. Anymore and I would need to draw you a picture. I am simply not skilled at art.\n\nNancy immediately noticed she was naked and covered herself with her arms and hands blushing a furious red. Then she shrugged and let her arms dangle and smiled at me.\n\n\"I must look a fright with blood on my face!\" I muttered, and called to it, pulling it back into my body, I saw some of it drift through the air from her to me as well. Which made me a little sad. I quite liked my blood on her skin. Made me feel possessive.\n\nShe was still staring and smiling, then began to tremble...her eyes welled with tears! I stepped forward and held my arms out to her and she fell into them.\n\n\"I can feel you William!\" She said as she roamed her hands over me. She was constantly touching me, and then she yanked my hands to her own body.\n\n\"Touch me! Please! I haven't been touched like this in so long!\" She demanded, pleading. I ran my hands over the outer and inner slopes of her breasts and something primal took over and I rolled her on to her back on my sheets. She cried out as I pulled my shirt off and she pressed herself against my chest. In short order I had my pants of and I was moving above her, kissing her and tasting her moans.\n\nI was giddy! My Nancy, my little rodent secretary was a woman! She had been cursed and I still had questions, but now...now I wanted her to enjoy herself. I wanted her to enjoy her freedoms. Not to mention, as her thick lips sucked on my tongue, I wanted to enjoy her as well!\n\nI am no sexual savant, or a re born Don Juan. I have, however, made certain conquests in my time. Among both the nobility and the gentry. My last conquest was more of a trade. Over three hundred years ago I summoned the Queen of all Succubae. There was a price to be had for her assistance, so I guess you might say I can count her as well among my amorous conquests. Truth be told in many ways it felt the other way around! It took a little over a month for me to fully recover from that ordeal. In many ways it was like being caught in a hurricane at sea with only a life vest to keep afloat!",
        "This though, feeling a woman under me again. Feeling her reveling in her release while I am inside of her. My sweet Nancy!\n\nMore than that is none of your business. I hope you will understand as I close the curtains of modesty on our time together.\n\nSome time later we had made it under the covers and I was holding her against me, her face in the crook of my neck as we lay together. She kept running her hand over my chest, and would occasionally grab my hand to stoke a part of herself that she felt had not been touched enough.\n\n\"It's so amazing William, how cold I can get without having fur! I never knew how comfortable that was.\" Nancy said.\n\n\"Looks like I will need to get you some new clothing.\" I offered. Then a thought struck me.\n\n\"Nancy? Do you have family? Do you want me to find them for you?\"\n\nShe chuckled and laid back on the bed and stretched.\n\n\"Doubtful you could and if you did I wouldn't want to find them!\" She stretched the other way and rolled onto her belly, cheek resting on her forearms as she looked at me.\n\n\"Why do you think I was chosen to be a walking, talking, breathing library of magical knowledge?\" she asked. \"I was selected from the foster system, since I wouldn't be missed. Sent to boarding schools in the UK and in Japan. Then educated at Harvard and Yale.\"\n\nShe held my hand and pulled it to her buttocks as she lay under the blankets and groaned as I rubbed her rump. \"Ohhhh! I missed being touched!\"\n\nI laughed as I reached to touch a place from behind that made her squeak and press against my palm.\n\n\"I have more questions...\" I said quietly as I took my hand away. She turned her head to look at me with eyes so dark of brown that they appeared black.\n\n\"I know, I will answer as best as I can. Or do you want me to just tell you what I remember?\" \n\nThought about it, then rolled onto my belly as well and rested my cheek as she was so we were facing each other. \"Go ahead...\"\n\nHer story was truly remarkable! As was she...she wasn't like a were wolf or a shapeshifter. She was human, but had one small magical ability. She could change into a rat! A \"One Trick Pony\" I think is the phrase people use to explain it. A handy skill too since as a child she could pass by unnoticed in rough situations. I could only imagine the mischief she got up to in her teens, which she seemed to delight in telling me.\n\nHer subsequent foster experience, coupled with running away and getting a new identity. Her coming into service with Mr. Leonard Dickson and then being sent away for the best education money could buy, and then him turning her into a living library, or archive of all of his...\n\n\"Wait one moment!\" I said, putting my hand on her arm. She stopped and waited. \"How much of his library do you have stored in your mind?\" \n\n\"1,287 volumes on magical theory with both practical and esoteric applications. 187 personal diaries of different historical figures, 301 study journals of different wizards.\" She frowned, thinking. \"I haven't had to access these in a while but I know...yes...there they are! 136 different reference books on flora and fauna of both this Plane and the other 8 that are currently known. Mostly they are theoretical, but I actually have found them to be surprisingly accurate.\"\n\nMy eyes must have been bulging! My own personal library was less than a tenth of what she had stored in her mind! It was worth it's weight in platinum and in gold! What she had...was, I don't...it...\n\n\"Part of the ritual used on me gave me an eidetic and photographic memory. The drawings I can replicate easily, and I can recall page number, chapter and verse.\" She said quietly. \"There are some terrible things in those books, and I had nightmares for a long, long time. It's all in there, in black and white and watercolor and woodprint.\" Her lower lip quivered, but she did not cry.\n\n\"I think that is why he had me go to all of those schools, to fill my mind with other knowledge so I wouldn't keep dwelling on it. Instead I could focus on the details of performing a Tea Ceremony, or on reciting the periodic table. I could lose myself in the quadratic equation and the words of spells or incantations would be stilled...\" She got quiet again.\n\nI coughed and shifted a little closer. \"So why didn't Allan Wade Dickson, I am assuming he was your master's son keep you?\" \n\nShe shrugged, \"You were right about the curse. A sneaky bit of magic added in at the end. I was trapped in my rat shape if anyone else saw me, only alone with my Master Dickson could I tell him anything of what was in my mind. The curse was so perfect that even though we were perfectly alone, the curse picked up when someone was scrying him so I would not change back into human. It also forbade me from speaking about the curse. Everyone just assumed I was a sweet lovable talking rat!\" \n\nShe smiled at me then and giggled, \"I am a sweet lovable talking rat too! Aren't I Mr. Abernathy?\"\n\nI nodded and grinned back at her, \"But of course, though I don't think I could have done to you earlier if you were just a rat.\"\n\nShe giggled and hid her face in her arms while making a choking sound! \"I would have been split open like a...blech!\" She started laughing, and rolled on her back with her hair partially covering her face. \n\n\"Allan didn't know about the curse. Or maybe he didn't care? Either way, I wasn't there when Leonard died, I only heard about it when Allan showed up at his father's study and told me. It was soon after that he got a cat, a tiger striped tabby cat as his own familiar. Normally familiars die when their wizards pass on, but I didn't. He didn't seem to have the heart to kill me so he let me go. Maybe I was a tie to his father? No...then he wouldn't have let me get away. So there I was, trapped as a rat and now with no home. Who could I talk to? Where could I go? How could I explain myself?\"\n\nHer voice was getting quieter, so I lay on my side and cuddled her against me.\n\n\"I found Greg after a couple of years, and then Lucretia caught me in his cupboards. I thought I could explain myself to her, but even then all that came out was words I didn't want to say, pleading for forgiveness and mercy. The curse was a strong one! I think that's the reason why Lucretia distrusted me so much...she could feel what I was saying was not meant, or wasn't all that I was meaning.\"\n\nThat raised my eyebrows! \"What do you mean?\"\n\n\"All of that, \"I just wanted to belong to someone again...\" and all of that? \"I just wanted a home, to feel needed?\" That was only half true.\" She rolled over so she was facing me and kissed me hard making my legs stiffen!\n\n\"I wanted to be a woman again! I wanted to be free!\" She said fiercely against my lips. She pulled back after another deep kiss, blushing fiercely. \"You must think I am some sort of hussy don't you?\" She said while covering her face with both of her hands. Which made me laugh long and hard! She glared at me which made me laugh even harder.\n\n\"William! Stop that laughing right now!\" The red on her face was creeping down her neck and past her collarbones! She hit me on one shoulder which made my laughter turn to giggles...giggles!? This woman was just outrageous! She climbed on top of me and pinned me down to the bed, scowling down at me, her nostrils flaring.\n\n\"Your...your...!\" I started laughing again between wheezing chuckles.\n\n\"William Abernathy! IF you say something about my weight I will...\" I stopped her by blurting out, \n\n\"Your nose still twitches like when you are a rat! Ahahah!\"\n\nHer mouth gaped open at me, her blush deepened and then she fell forward, laughing and then sniffing all along my jaw. My laughter tapered off as my arms went around her body, hers subsided to little giggles and pleased murmurs as I stroked the smooth skin of her back.\n\n\"William?\" Nancy asked after a few moments.\n\n\"Mhm?\" I murmured back. She shifted a little, which is a delicious feeling by the way, having a curvy naked woman on top of you. I recommend it for anyone!\n\n\"Would it be alright if I stay with you?\" She asked. I pushed my head back into the pillow so I could see her face and raised an eyebrow questioningly. It seemed a foregone conclusion that she could stay! Of course she was no longer a rat, but she was still who she was...my roommate and secretary! Though, being as educated as she was it seemed a tremendous waste for her skills to be answering phones and scheduling my appointments. Hmmm, wonder what she knew about stocks and commodities trading...\n\nShe seemed to take my look as meaning something else. \"It's not that I meant to pressure you! I mean, I didn't mean to just try to seduce you and THEN ask for you to let me stay! I am not that sort of woman to try to trap a man with my...oh...I can't say that either! I mean, I don't think you are the type of man who I could do that...no that's not what I meant!\" She groaned and dropped her forehead to my sternum!\n\n\"It was so much easier to talk with you when I was a rat!\" She said. So she changed, quickly and smoothly into the small brown form I had come to know so well. I picked her up in my hands and held her over my head.\n\n\"Now now!\" I scolded her with a grin. \"That's cheating, come back to me.\" She did change, blushing quite beautifully too! \n\nI stroked her cheek. \"I was just wondering why you had to ask? I am quite fond of you, rat or other wise. I do have to admit finding an entire magical library inside of you is extremely appealing, that is just a side of you that is...mmm...now known. It in no way detracts from you as a whole.\" I let my eyes slide over her form again.\n\n\"I wonder what other surprises are in store for me now that you look like this...?\" I mused. \"However, I assume you are hungry?\"\n\nMoment I said the words her stomach rumbled loudly! She started to blush then clambered off of my body and opened my closet. Turning back she asked, \"Might I have something to wear?\" I offered her one of my good Egyptian cotton business shirts. I always liked seeing women in business attire, it came to just barely cover her modesty and she smiled under my gaze. As I was getting dressed she turned her back to me, bent her knees and stuck her cute derriere out towards me. Then rhythmically began rolling it in my direction, the shirt coming up to expose her feminine delights! I must have made a sound because she stood back up and looked at me over her shoulder with a wink.\n\n\"In my teens I enjoyed dancing, though I think that move is called \"twerking\" now a days.\" Nancy told me as she took the offered sweat pants I used for lounging in.\n\nI just shook my head and said, \"Well, you could give a succubae a run for her money on being seductive!\" Which made me think of Gregory as I walked into the kitchen and began pulling down ingredients for making Nancy a sandwich.\n\n\"I wonder how much Lucretia is feeding on that dear boy?\" I mused aloud.\n\n\"\"What do you mean? Gregory? Lucretia isn't feeding on him!\" I heard Nancy say from by the sink as she starting filling up a teapot. \n\n\"She is a succubus, and he is her anchor on this plane, of course she is feeding on him, an occasional sip or ten won't hurt him very much, maybe make him a little weak some mornings, take a few years off of his life. At least it won't be the good ones, just those near the end and those are no fun anyway from what I have seen.\"\n\nNancy harrumphed at me, and brought herself upright to look down her nose at me a little bit. \"Of course she isn't feeding on him, she really and truly cares for him and would not dream of hurting him, except if they were training. I saw them in the car together when she started to lose control and drained him a little bit.\" She put the lid on the teapot along with a tea bag to steep and set it on the counter.\n\n\"She is not feeding...on him.\" Nancy said defiantly, her hands turned palm up and resting on her hips. \n\nHow adorable!\n\n\"Shall we make a wager then?\" I asked slyly. \n\nShe thought a moment, nodded. \"What do you propose?\"\n\nI leaned forward, my elbows on the center island in the kitchen. \"If you are wrong, you are going to...what did you call it? Twerk? Yes...you are going to give us a twerking demonstration in spandex!\"\n\n\"You are incorrigible Mr. Abernathy!\" Nancy said, waving her hands at her face but smiling all the same. She considered then said, \"I will accept, only if you lose...Remember that musical? Pirates of Penzance?\"\n\nI felt the blood drain from my face, but nodded. I think I knew where she was going with this!\n\nShe grinned wickedly, giggles starting to escape her lips. \"You need to sing the entire Modern Major General in front of Gregory and Lucretia! I have heard you sing it often enough in the shower, you need an audience!\"\n\nI gulped, \"I don't sing in front of others!\"\n\n\"You did in front of me?\"\n\n\"I thought you were only a rat at the time!\"\n\n\"Only a rat? Who answers your phones and speaks 4 different languages? Please!\"\n\n\"I thought you were just an enchanted magical creature!\"\n\n\"Psssh!\"\n\nWe stared at each other, me horrified...her grinning.\n\n\"I don't dance for just anyone William, so it will be as uncomfortable for me as it would be for you...\" She stuck out her hand. \"Do we have a deal?\"\n\nI looked at her fingers, let my smile come back to my lips and then clasped her hand in mine.\n\n\"Deal!\" \n\nChapter 5\n\nThings went back to normal for a while. My insurance covered my front door, Nancy made herself at home and used the guest room to hold her clothing and personal items. She generally slept in my room, with me when I chose to sleep, or without me when I had business to attend to.\n\nReginald Markus and his soldiers? Well, they were very surprised when after they passed my intelligence tests and physical fitness regime that I hired them on permanently. A few had families and some had wanted to start families. I quietly had their backgrounds looked at as well to verify their credentials. I would tell you what I found out, but that is their story to tell, not mine to share. Though I can say two of them were from the IRA, one from South Africa, and two were ex FFL...French Foreign Legion. In case you didn't know.\n\nAll six men were \"Clued in\" as it were to the supernatural realm and knew how to act accordingly. I found silver bullets in their weapons and personal tokens of protection against magic amidst their armor and gear. Quite well prepared for regular vampires...\n\n...just not me!\n\nI bought them each a house in a different part of the city and had them keep their ears to the ground in case anything was happening in my territory I should know about. Suzanne called me back and actually thanked me...I know, I was shocked as well! She thanked me for letting her know about the interlopers in her area. We parted on better terms than when I initially called and I had a small hope of possibly rekindling a good friendship with her again. In all likelihood that is merely a pipe dream, but it still is nice to think about isn't it.\n\nSuzanne made me aware that she had dispatched three more soldiers at where there base of operations had been located, but the wizard had gotten away. I had asked her for information about him...but all she could tell me was that he had appeared to be young, and a little familiar. She would be on watch for the future. I had questioned Nancy, but she had been no help since she had been in a sack the entire time. She had been brought out, but never seen the other wizards face, but...she had gone quiet, she felt like she should know who he was. It was all very frustrating!\n\nI felt like I was on the tip of discovering who had wanted to kill the Gatewatch but was still too far away to know! Which means my granddaughter was still in danger! \n\nNancy was still having to get used to being in her human form, as much as she enjoyed it, she had been a rat for so long it was more comfortable to her. I took her to see Greg and Lucretia to check on my friend and also to pick his succubae's brain a little. I had hoped being around them she might maybe come out and tell them who she was, show them who she was as well. No such luck.\n\nSpeaking of luck! I did lose the bet and had to embarrass myself and sing for them all!\n\nAfter we had gotten home, I spoke on a subject that I had avoided a little. The disposition of Matthew Woolrim's body. I let Nancy know what I had done, and showed her how I was now able to know and do everything that the wizard had been able to. She could see the discomfort I was feeling, so I felt compelled to tell her how others had reacted. She had merely laughed and then sat sideways in my lap! \n\nShe kissed me and said, \"William! Dear William! Why would I feel disgusted by that? Remember...I am a rat. We eat each other!\" Then she gave me another kiss and asked if I would like another cup of tea! \n\nWhen we go to the office now, sometimes I trade off taking her as a rat, and sometimes as a human. When I showed up with her for the first time the group secretary for all the businesses in the building just stared and asked where my rat was.\n\n\"She is sick, and at home. However, this is Nancy, my personal assistant. Now you two finally get a chance to meet.\"\n\nNow everyone has tried to see this elusive personal assistant of mine, and to finally meet her...? We were the talk of the complex for over a week. \n\nThat is not to say, it's been all fun and games. The phone call, were my heart stopped for two days was the worst I have had in a long time. \n\nI heard Nancy hang up the phone and she walked into my office after a quick knock.\n\n\"William...I think Gregory is in trouble!\" She told me. We were at home and Nancy had helped me to organize my study. Now it was actually an office that was usable for more than just a cluttered display of artifacts. She was wearing that blue star sapphire of Matthews as a pendant now, the gold chain I'd had melted down and reshaped into a nice serpentine necklace. I liked watching that gem bob in her cleavage! \n\n\"Gregory? What is going on?\" I asked.\n\n\"Well, he said that Michael Roberts...\" I interrupted her.\n\n\"Yes, I know him. Alpha werewolf, Hilda's father. Judge, and a nasty individual. Good hygiene, but bitter...and takes it out by being a massive prick. Very familiar.\"\n\nNancy paused, looking over her notes. \"He said that Judge Michael was the presiding judge over his case, and wanted to buy his home, and made threats since Greg didn't want to sell. What case is he talking about? Is Gregory in trouble? Why was he on trial? Or is he going to be on trial\"\n\nMy face must have changed expression. Her mouth came open as she stepped back. \"William? Don't look at me like that...you're scaring me!\" I turned my eyes from her and took a deep breath. I heard Talisman calling to me from where it was locked inside of a small safe I had mounted. I needed to get out of my study. Nancy watched me with concern as I walked out and opened my Cabinet for a nice glass of something refreshing. I chose raccoon, sea bass, cockatiel and antelope for this drink. I took a sip and let it soak in through my taste buds.\n\nNancy came over and watched me. \"William...?\"\n\nI wondered about what to tell her then decided to just lay it out for her. She was Gregory's friend as well. She should know. In all honesty he probably should have told her before this!\n\n\"Gregory is a Sexual Offender. He was found guilty in a court of law. That Judge was the one who presided over his three day trial.\"\n\nNancy pulled the notes to her chest, \"He is a pedophile...? A rapist!? I never would have guessed, he seemed so nice!\"\n\nI barely contained my snarl as I looked over at her, my eyes angry. \"Use your head woman!\" I shouted at her. Maybe I wasn't so calm as I thought. \n\n\"Just like every other human out there, the moment the courts make a decision it must be true right? Think on what you know of him, what does your gut tell you?\" I turned back to make another drink. This time adding walrus instead of sea bass.",
        "I heard her shuffling her feet. \"He is patient, but very standoffish. Kind of skittish too. But he doesn't seem too...I am not sure what to call it. What was his crime?\"\n\nI turned back and smirked. \"The title is Sexual Abuse in the second degree. Or is it third? I don't remember. The definition is: Sexual Coercion without the use of threat, force, violence, blackmail, or use of drugs or alcohol.\"\n\nNancy pondered this for a moment, \"So what does that leave?\" She spoke the definition out loud, thinking it over again. \"He talked her into it? I don't understand...\"\n\n\"She also was bipolar manic depressive, which was covered up in court. Gregory did wrong in dating her though without doing a background check first. In this day and age you don't take people at face value unless you have power enough to put them down if they turn on you.\" I sighed and finished my drink.\n\n\"The Honorable Judge Michael Roberts could probably smell that my dear boy was innocent, but it doesn't look good for a Judge to allow those accused men to walk away unmolested. So found him guilty. Lets see...yes...If I remember correctly that was an election year as well. So it stands to reason he would take that tactic.\"\n\nNancy was starting to breathe a little harder, I could tell she was going to cry soon. \"That explains...so much...I...that...ASSHOLE!\" \n\nI was expecting pity for Greg which I would have cut off quickly, this was unexpected! \"That woman...no! That GIRL that did this to him was no woman! Probably still wet behind her ears with her mother's milk still on her lips!\" Nancy continued, her fingers in fists, the notes she had taken crumpled between them.\n\n\"If I ever find that bitch I will strangle her with her mother's apron strings she is still tied too!\" Then she began to cry!\n\nI moved over and put an arm around her shoulder, kissed the top of her head. \"There...there now. Take a deep breath and relax. Don't cry right now. We got work to do. First off we need to stop this nonsense about Gregory being forced to sell his home. Then I am going to make some phone calls to Trevor and let him know he needs to take Michael in hand about this.\"\n\nNancy spoke up then with a shake of her head, \"Just because he is an Alpha wolf doesn't mean anything when dealing with Imminent Domain! Two million dollars as just compensation, a trifle when it is shown who is buying it and their reason's for doing so. I graduated from Harvard! I will show that jumped up sheepdog what's what!\"\n\nI smiled as Nancy got upset, she really is a wonder. We both got to work after that. It was early in the morning as I was putting together a full synopsis of where we could take a stand at, when I felt a stirring in my blood. I recognized it. Gwendolyn was anxious, and upset! I immediately shushed Nancy, making her blink at me in surprise. I dialed Gwendolyn's personal number. I heard it pick up.\n\n\"Gwendolyn!?\"\n\n\"I told you not to call me that Godpop!\" I heard my granddaughter say. She sounded a little out of breath and distracted. \"I am riding my bike right now, can't stop. Hospital, Greg's hurt. Gonna fix him. Bye!\"\n\nI closed my phone and saw Nancy giving me another curious look. \"Godpop?\" she questioned. I rolled my eyes. \n\n\"I am her Godfather! I don't see her very often since we are both busy, but both Trevor Malfour and his wife have made me her godparent. She doesn't really need it, it's more of a formality...but let's keep it between us for now...alright?\" \n\nI explained what had happened and then we both decided to go to the hospital. Not because I wanted to see Gregory, but if Gwendolyn did what she normally does, she would heal him up all the way to full health! Which in a hospital would draw unwanted attention. Money would change hands, reports were going to be changed.\n\nThe phrase, \"While our initial assessment was not as severe as we suspected and not being clear on all details of the cause of the trauma...we based our treatment on the information available...\" would be thrown around a lot. \n\nI made a phone call to Reg. He was still helping some of his men move in, and they were having a barbeque. In short order I had round the clock passive surveillance for Gregory, two man teams working in eight hour shifts. It was the best I could do without actually visiting. Which bothered Nancy!\n\n\"You say he is your friend, but you don't go to see him?\" She asked me incredulously.\n\n\"Of course not, his family is there, Lucretia will be there, Gwendolyn will have him patched up in no time at all. I am not needed. My main concern is who attacked him.\" I replied. Nancy posted her hands on her hips glared at me.\n\n\"I will give you three guesses, and the first two don't count! It's that Judge!\" She said hotly. My little rat is such a firebrand! \n\n\"Useless conjecture until we have more facts. I want to be certain before I move against an old member of the Gatewatch.\" I picked up my cell phone and called Trevor.\n\n\"Not a good time Will, waiting on Michael to give me a call.\" Trevor told me.\n\n\"Well isn't it fortunate, since Judge Michael is who I wish to talk to you about!\" I said with a cold smile. There was silence on the other end of the line. \"Gregory Brooks is in the hospital, did you know?\"\n\nTrevor was still silent. Which told me everything I needed to know. I leaned forward in my chair. \"Your daughter, my goddaughter is probably already there healing him.\"\n\nTrevor was silent, but I could hear his breath catch. \"She didn't tell you did she? Of course not! Wouldn't want to wake you up this early in the morning. Would you like me to tell you how badly he was injured?\"\n\nTrevor spoke then, \"He attacked and killed 9 of Michael's pack, between him and that succubus of his. Michael told me that we should be ready to move to bind and either send the outsider back home or destroy it. Suzanne and I are both ready and waiting for the call.\"\n\nHe took a deep breath and spoke before I could, \"You know the score Will! We can't let them just stay here as long as they want! Sure, he didn't technically break the rules. He didn't summon her, she came here and then he bound her...I get it. But this whole situation is getting out of hand! We don't want visitors coming to our plane all the time and just staying however long they want. It sets a bad precedent. If the current Gatewatch won't do their jobs, then we need to step in and do it.\"\n\n\"Are you finished...Trevor?\" I asked quietly. He must have missed my tone of voice because he continued speaking.\n\n\"No, I got another point to make Will. Being bound to Outsiders corrupts the anchor. From what I have been told, Greg is a criminal with a felony conviction. I just found out yesterday after I met him. I am surprised it took him this long to snap and start attacking us...\"\n\n\"SHUTTUP!\" I roared into the phone! \"You blind IDIOT! Say it again and I will personally melt you down into paste and feed you to your wife!\" I felt my teeth coming out as I spoke, I tried to avoid that since it made it difficult to speak.\n\n\"You have been LIED to! And if you act on this information and banish Lucretia from our Plane I will unmake you! You will stay HOME tonight! You will not answer Michael's call unless I SAY you can! I will personally look into this matter and you tell Suzanne the same thing! In the state I am in I would declare WAR on her if she gave me any attitude at all!\"\n\nNo sound from the other end of the line except for some ragged breathing. I took a moment to calm myself, then resumed speaking in a regular tone of voice.\n\n\"Now, Trevor. Please repeat back to me what I have asked you to do?\" I waited as he started to speak and faltered a moment.\n\n\"Will...I...\"\n\n\"SAY IT!!\" I roared.\n\nHe did repeat it back and I hung up without saying goodbye. Rude of me, trying to be polite and courteous was key to being good I had long ago surmised. Amazing how the stupidity of others was throwing that plan out the window!\n\nI heard Nancy behind me and turned to look at her, she was biting her lower lip, and sliding her hands over the outside of her thighs like she was straightening her skirt. \"How is it possible for you to be so scary and so incredibly sexy at the same time?\"\n\nI shrugged and stood up. \"Time for more research and...\"\n\nMy phone rang! Without even checking the screen I opened it and shouted, \"WHAT!?\"\n\nI heard Reg's voice crisply ignore my greeting and say, \"Sir, last report was that the Succubus left the building along with the witch. I just came on shift now and...sir...\" His voice trembled.\n\n\"Sorry Reginald, please...report.\" I said as I felt my legs weaken and I sat down, preparing myself for the worst. He coughed once and then resumed speaking.\n\n\"Sir, I am here to report that Gregory is alive and well...I think.\" I blinked and stared at my phone.\n\n\"Come now...what do you mean? Either he is or he isn't.\" I returned.\n\n\"I saw him floating in a bubble of blue light, and then umm...err...he appeared to be flying a few feet off of the ground while standing...and uh...never seen that before sir.\" His voice firmed up, but still sounded a little shaken. In truth I felt a little shaken as well!\n\n\"Wonderful news, thank you for reporting in. Please stay to the end of your shift and make note of anyone who comes to inquire about him. Then you may return home. My thanks for your work Reginald.\" I told him.\n\n\"Your welcome sir, last message I picked up on audio surveillance was that Gregory was going to help the succubus Lucretia. I will send all audio to you in the morning sir.\" Then he hung up.\n\nGoing to help Lucretia?\n\n\"Nancy? Warm up the van, we are going to Greg's house.\"\n\nChapter 7\n\n\"Whatever made that hole...I don't want to meet it!\" Nancy said as we looked at where the sliding glass doors of Lucretia's bedroom had been. The residue of magic as thick in the air, and I saw scorch marks on the deck and several in the grass.\n\n\"There appears to be a magical duel of some sort that happened here...\" I murmured. Talisman stirred in his holster and I stroked him through my coat. Nancy was moving around the hole and I saw her stiffen, and then bend down to sniff at the broken glass. \n\n\"What have you found?\" I asked her. She ignored me and turned into a rat again and sniffed more closely at the broken glass. I smelled it too as I got closer. It was blood, human blood!\n\n\"A wizard did this then?\" I asked Nancy, she turned back into a human again and straightened her clothes. One good thing about being a shape shifter over a Were? You don't need to get dressed and undressed every time you change shape!\n\nMy assistant looked over at me with a face paler than normal. \"This is my old master's son. Who had me for a little while...Allan Wade Dickson!\" I glanced back down at the blood and drew my finger through it before having a little taste. The scent and flavor stuck a nerve in me, and suddenly the memories of Matthew Woolrim clicked into place. The unseen second wizard, \"young\" Suzanne had told me. It began to come together, the pieces of the jigsaw puzzle of the mystery of who had been targeting the Gatewatch.\n\nAllan Wade Dickson fit the profile perfectly! I silently thanked the dead Matthew for being such an idiot and attacking me.\n\n\"It's him! It has to be! Dickson! Matthew was friends with his father Leonard! HE was the one who found out that you were a compendium familiar, and he told Dickson. Chastised him for letting you get away, hatched a plan to get you back and try to break the curse for the information in your mind...\" I began pacing as Nancy looked on in silence.\n\n\"I remember a Dickson, my own memories...very faint. With Matthew's memories and some sorting...ah...yes! I remember now. Suzanne had killed his father who was consulting Outsiders for knowledge. No one else on the West Coast was as skilled at summoning as he was. He wouldn't stop his summoning not with all the information and medical breakthroughs he was getting. Found a cure for six different forms of cancer and a way to stop birth defects in...\"\n\nThen I stopped as more thoughts came to me.\n\n\"This isn't a move of major significance...this is merely petty revenge by a wronged child! I was looking for a grand conspiracy! This isn't a Conan Doyle tale, this is a Franklin Dixon pulp story!\" I said angrily.\n\n\"What?\" Nancy said, I glanced at her.\n\n\"Frank Dixon? Author of the Hardy Boys.\" I told her.\n\n\"Oh, I preferred Nancy Drew by Carolyn Keene...though I think that is a pseudonym.\" She said while crossing her arms.\n\n\"But why go after the current Gatewatch when it was the previous members that wronged him?\" I said. \"It doesn't fit!\"\n\nI felt Nancy's hand take my elbow, stopping me as I paced on the deck.\n\n\"If someone wanted to hurt you Will, would they attack you directly?\" She said quietly. \"Or would they go through those you count as friends...family...the people you care about?\"\n\nOh...gods! Trevor's daughter, Suzanne's...Michael's...\n\n\"Damn it! Where would they have gone!\" \n\nNancy was looking up at the sky, clouds were gathering and rain was coming, but every now there were flashes of light. Small, but still noticeable.\n\n\"That's...lightning?\" she asked suddenly. \n\nI glanced up, and then again as I saw another small flash. \"Too small, maybe a low flying plane?\" I offered. Then saw it streak through the air, several in fact! \n\n\"Lucretia! She is under attack, right now! That's coming from the area where Gregory works, at the industrial complex.\"\n\nWe got back into the van, and I drove with the pedal to the floorboards, relying on quick reflexes to avoid collisions with the few other people on the roads this time of night. It was lucky we were not pulled over!\n\nAt the area of conflict we pulled over and ran to a small rise that overlooked the area of construction and I saw...well...you can read about that in the other chapters that Gregory has already put down to pen and paper.\n\nI will say this though, Lucretia is a force to behold! Her devious traps should have worked. Nancy saw her old master and wanted to go down right then to kill him! I was tempted to let her, but that large Outsider down there would probably have killed her before she got close.\n\n\"William, do something!\" She told me as the battle drew to a close. We saw what was about to happen, and for a moment I gripped Talisman's handgrip. I knew it could kill an Outsider, even one that large. What stopped me was the flash of blue that I saw coming fast across the parking lot. I gripped Nancy's hand a little tighter and pointed. \n\nWe got to see what happens when Gregory finally cut loose!\n\nI always knew what my friend was capable of to a certain extent, but to see him like this was...unnerving! I actually felt a shiver of fear run up my spine. No, fear is the wrong word. Awe. That feels more appropriate.\n\nWhen they both left after the fight was over, Nancy and I peered down at the decrepit looking young wizard, aged far beyond his time.\n\nI sat down to think, letting the rain wash over me and soak my clothing. Talisman was strangely still, as if this evening's entertainment was a lot for it to take in as well. Nancy sat next to me, but her eyes kept darting to the Wizard lying unconscious in the rain.\n\n\"Well?\" She asked suddenly.\n\n\"Well, what?\" I responded.\n\n\"Aren't we going to do something about Allan?\"\n\n\"I am thinking...give me a moment.\"\n\nShe settled back, still watching me, and glancing down at her old master.\n\nI didn't know how to explain to her what my thoughts were, or if she would understand their significance. But the length of time was stretching and I knew I had to say something...then again, she was an intelligent woman. Perhaps she had some insight?\n\n\"Nancy...?\" Her eyes snapped to mine. \"I am a very evil person.\"\n\nHer eyebrows drew together and she opened her mouth to give me what appeared to be an angry retort but I held up a finger to stop her.\n\n\"Hear me out first, let me explain what is going on in my mind...alright?\" She closed her mouth and waited.\n\n\"I grew up in a time of violence. Mercy in killing would have shown weakness to my enemies. As times have changed I have wanted to change with them. I want to be...good for lack of a better word though I know the concept is subjective...\" I drew a deep breath and sighed. I was getting to the heart of the matter now.\n\n\"I decided, in this day and age to be good. Through my actions, and being polite and having proper etiquette and manners...I thought that I would somehow get into the habit of being a good person. That maybe it would start to be natural for me to do what is right and not be a selfish power hungry monster.\"\n\nI felt her take my hand in his and gently took it back. She made a small dissatisfied noise but I shushed her. \"Wait for me to finish first, then you may run away or stay...decide then.\"\n\n\"Nancy, when I made friends with Gregory after learning of his past I saw I very good man, who had a great wrong done to him. He is damaged, but still good. If I had been in his position I would have adopted a scorched earth policy and deleted a few generational bloodlines and family names from the archive of the world if you follow my meaning. He didn't though. I was fascinated by this, and...after he told me what he did about my taking in the whole essence of others...\"\n\nI stopped and looked down, \"...I couldn't tell him that I had thought to do the same thing with him after he passed on to the next life. I wanted to have his character, his memories become a part of me! I want to be good, like he is. I know he is unpolished in many areas, and crass in others. But he has such a good heart, a bedrock of integrity that I want for myself.\"\n\nI felt my tears mixing in the rain, when was the last time I had cried...really cried! Was it sorrow for myself? Was it...I don't know. Probably something to brood about in my study later.\n\n\"I don't want him to die because I want to see what he does next. At the same time I want what he has. I don't want what he is to be forgotten. I have tried many times, run scenarios through my head of just asking that when he dies if I can handle his funeral arrangements so I can get the chance to have a little of what he has! I don't...I mean, what kind of friend thinks that way?\"\n\nNancy's hand found mine again and her fingers were warm as she held mine tight.\n\n\"William?\"\n\n\"...Yes?\"\n\n\"Look at me...\" I did.\n\n\"Why didn't you go down to help Gregory and Lucretia in their fight?\" She asked me seriously.\n\nI thought about it, examining the situation again. \"They didn't need me to, I was ready to kill that big horned Outsider...I think his name was Balmont? Yes, Lord of the 6th plane if I remember right? But then I saw Gregory coming...\"\n\n\"Why didn't you help them?\" Nancy asked again. I shrugged.\n\n\"They didn't need me, they had everything covered. Generally speaking I don't make friends with those who can't handle themselves.\" \n\nShe nodded, as if that confirmed something for her. \"So then...why are we here?\" I looked at her in surprise! She knew why we ere here.\n\n\"In case something else came up and they needed help! Obviously...your point?\" I said.\n\nShe laughed and leaned in and kissed me! \n\n\"Dear William, you are just as good as you should be, and just as bad as necessary! I hope that you never change!\"\n\nShe looked back down at Allan Wade Dickson, who appeared to be slowly waking up and moving in little twitches. \"But right now I need you to be bad for a little longer...\" She said with an angry heat to her voice.\n\nWe went down and I gently rolled the now fragile wizard over. He blinked up at us with milky eyes.\n\n\"Who...who are you?\" He asked in a quavering old voice. I grinned down at him. \n\n\"Someone who is very curious to see what I look like through your eyes!\"\n\nTo be continued..."
    ],
    "authorname": "payenbrant",
    "tags": [
        "wiiliam",
        "nancy",
        "warlock",
        "vampire",
        "rat",
        "succubus",
        "magic",
        "love",
        "adventure",
        "kissing"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/mine-yours-pt-14"
}