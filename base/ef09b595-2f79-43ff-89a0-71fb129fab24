{
    "title": "Finding the Perfect Fit Pt. 20",
    "pages": [
        "<center>March 4</center>\n\nTalked with Jamie after class today and he's still not feeling up for anything. I encouraged him to get some sleep and he agreed, tapping out for the night. I texted Min Seo, more out of boredom than anything and she responded nearly instantly. I greedily read that she was doing homework but might have time to hang out Saturday. That was more than I was hoping for and we hammered out a time and place to meet up.\n\nI still had questions about that kiss on the cheek she gave me and hopefully asking her in person would get results cause she flat out ignores any mention of it over text. So I have something to look forward to for the weekend! Man, not being sick is awesome, I can do stuff now!\n\n<center>March 7</center>\n\nI think I'm even more confused after hanging out with Min Seo again? Alright, from the top and hopefully typing this out with help me make sense of it.\n\nI worked my morning shift at the gas station and hurried home once done. Showered, dressed and was running late so I skipped make up and headed out. Once again I was headed to the mall but this time not for Jamie. Although, the garter belt had been a good gift, given how much he wore it. Being noon on a Saturday, the place was packed and I had to fight my way to the food court and then circle about for the pizza restaurant.\n\nMin Seo was standing back by an empty table, aloof of the chaos flowing all about her. The poofy coat and tight jeans were familiar, along with the faint red eye shadow. Her lipstick was a much deeper red, showing off paradoxically dainty yet full bodied lips. While Min Seo was far from the only Asian woman here, she was still getting looks from those passing by but Min Seo paid them no mind. I gave a wave while approaching and she noticed me, eyes not quite lighting up but I got a smile out of her.\n\n\"Hey.\" I said, the memory of that parting kiss more powerful now that I was back in her presence.\n\n\"Busy today.\" She commented in her quiet, clipped way of speaking.\n\n\"Yeah and these places are supposed to be dying.\" Min Seo simply nodded and I had to bite back a question bout what she meant with the kiss but right then wasn't the time. \"Ya hungry?\"\n\n\"Sure.\" Min Seo could have said anything and I would answered in the same way.\n\n\"Cool, I forgot breakfast so I'mma grab something and meet back here?\" Min Seo nodded and I instantly went for the pizza place, it only had one person in line and the greasy smell was going to drive me insane if I didn't get a piece. I ended up with a huge slice of melty cheese pizza that put the frozen kind to shame. That plus some caffeine and I beat Min Seo back to the table and dug in.\n\nShe joined me, having gotten some fried rice from the other side of the food court. Not much talking happened at first, I was too busy eating and failing to find way an elegant way to bring up the most pressing topic on my mind.\n\n\"Is there anything you want to get while we are here?\" Min Seo asked, eating with a pair of chopsticks, something far beyond my ability. How the fuck does a person eat rice with sticks?!\n\n\"Do ya need anything?\" I deflected, not having any concrete ideas right then.\n\n\"I...\" Once again, she drug out that one letter while finding what came next. \"...I want to get make up. For you.\" Her dark eyes darted away from me as the roar of hundreds over other conversations took over.\n\n\"Sure.\" Min Seo blinked, looking back at me with a guarded, hopeful expression. I'd seen similar from my Mom before when I told her I needed more clothes that weren't all grease stained and full of holes. She knew I wasn't going to be a girly girl but always sighed when I wore jeans with blown out knees and were more oil than denim. \"I'm basically out of everything and never got around to, ya know, getting more.\" Plus, there was always Jamie to think of. Restocking meant introducing him to more than the basics once he was well.\n\n\"I did not want to be rude-\" I cut her off with a wave of a hand, taking a drink of Dew before speaking.\n\n\"Ya fine! I was late today and didn't want to keep ya waiting just to get some eyeliner on.\" Min Seo's smile was knowing and given that she helped others with make up, probably understood running out of time more than I did. \"I'll be honest, I was thinkin' of asking ya anyway so this works!\" Roses bloomed in her cheeks, Min Seo brushing back a stray hair while inspecting her lunch.\n\n\"I enjoy making people look their best.\" She stated, giving a little nod as if confirming her stance on the world. \"And it has been a while since I have done that for someone else.\"\n\n\"Yeah, use it or loose it.\" It had been a while since I'd been under the hood of a car 'cause studying the Periodic table is so much more important and useful then knowing where the fuel filter is on a Ford Focus. \"I need to do something with my hair too.\" It needed the split ends chopped off at the very least.\n\n\"One thing at a time.\" Min Seo returned her focus back to me, this time with a more critical eye. It was weird cause I wasn't being checked out but rather evaluated. At least I trusted who was looking.\n\n\"Sure, on one condition,\" I said, snapping her back from examining me. \"Why did ya kiss me last time?\" There it was, out in the open and the sounds of the mall was my only answer while Min Seo turned red again.\n\n\"I consider you a friend.\" I nodded at her response and that was all she gave me.\n\n\"So do I but...\" I said as she struggled, looking anywhere but me as I found myself just as lost as she was.\n\n\"And I wanted to show you that.\" Min Seo said, taking another bite as it was my turn to frown down at what remained of my meal, a piece of tough crust not meant for human consumption.\n\n\"I mean, ya couldda just told me that. Or is that how ya do things where ya come from?\" I blurted out, only then realizing how ignorant I sounded when the words escaped. \"Oh fuck, I didn't mean it like that!\"\n\n\"I was born here in America to Korean parents.\" Her smile was honest and I sighed, having not offended a new friend who agreed to help me. \"I wanted to do it so I did.\" An errant thought fired off in my brain and I spoke without thought again.\n\n\"Is that whatcha did with ya friend before ya started dating?\" She gave me a confused look and I went digging for more information but the name escaped me. \"Uh, the hot guy ya showed me last time.\" Color flared in her cheeks and I bit back laughter, Min Seo being so easy to make blush. She had that in common with Jamie.\n\n\"Yes, Joo Won and I did that.\" The color burning in her face said they did way more than just that.\n\n\"Damn right ya did!\" Her shocked expression made me laugh that time, throwing my head back and adding my noise to the din. A group of what looked like middle school boys at a nearby table looked over at the loud mouth and quiet woman talking, picturing who knows what was happening between us.\n\n\"Okay, ya ready?\" I asked, wiping my mouth and finishing off the Mountain Dew, having nothing more to say.\n\n\"What is your boyfriend like?\" Min Seo asked, knocking me for a loop. I had been poking fun at her for hooking up with a hot guy so it was only fair she did the same to me.\n\n\"His name's Jamie and he's... very sweet. We just get along.\" Yeah, that's one way to put it but how could I tell her about all the little things that made me love him? His hilarious music snobbery? The earnest desire to discover how many feminine aspects he contained? And how his butt looks and feels in a tight pair of jeans? I mean, maybe Min Seo would get that last one but that's for later. I'm aware it's kind of a lame answer but without having met Jamie, how could I explain the allure? \"Ya should be able to meet him soon when he's finally over being sick.\"\n\nI left my hopes of her skills being applied to Jamie silent as that was the long con, the ultimate plan that would take some time to pull off. Min Seo simply nodded and stood, making it clear the time for action had arrived. I joined her in dumping our trash and she examined a nearby map that displayed all the vendors in the mall. She pointed at the absolutely huge J.C. Penny's, the biggest store by far.\n\n\"Sephora is where I shop in person. Online is better but I need you with me to match skin tones.\" That said, she started off and we had to weave about families, slow old people, kids and teenagers running rampant, and some guy on crutches with a foot locked in a cast. By the time we arrived at the storefront, I shucked off my coat as Min Seo panted.\n\n\"Malls are dying my ass!\" People were coming and going in the J.C. Penny's at a solid clip, meaning it wasn't going to be much better once inside. Min Seo slipped her outer layer off, showing a faded pink shirt with a low neck but it was her figure that drew my attention. Short and compact, her hips weren't exceptionally wide but flowed into those thick thighs damn well. That, along with the cool air about her, gave Min Seo a uniqueness that drew me in.\n\n\"Why is it so busy?\" I had no answer to that but it didn't phase her, heading inside the store and I followed. I recalled clothing stores like this boring me when I was younger, Mom bringing me here for school clothes and I wasn't interested at all. Eventually my priorities changed as my growing interest in girls meant I had to dress to impress and the habit almost stuck.\n\nWe walked down isles, past racks upon racks of clothing to find a counter in the middle of the store, well lit and staffed by two well dressed women. The glass cases were showing off all manner of beauty products, some of which were unfamiliar to me. Min Seo took me by the hand, sending a little shiver up my spine, and lead me to the counter. She struck up a conversation about foundation with one of the ladies and I quickly became lost.\n\n\"I am looking for something to match her skin tone.\" At that point, I fully spaced out. They talked on and on about colors as I was placed before a mirror and something was brushed on my face, prompting more words that washed over me. My reflection clearly showed boredom but I kept quiet. Min Seo was in her element and that was cool to see, taking charge and knowing exactly what she wanted.\n\nFoundation, lip stick, eye shadow and liner, mascara, all of that was rang up and Min Seo bought them before I could say anything. She took the bag and gestured for me to follow as she walked down one of the isles.\n\n\"Hey, I couldda paid for that.\" The withering glare she gave caught me by surprise but it quickly softened.\n\n\"Once I know what works then you can pay. Until then, I pay.\" Her voice was firm and it was clear I wasn't winning when it came to this matter. She stopped in the middle of the isle and I nearly ran into her, Min Seo's words now thoughtful. \"Where are we going now?\"\n\n\"Uh, we could go to...\" I saw hesitance sweep over her face and knew what the issue was. \"Donna doesn't know we're hanging out, does she?\"\n\n\"She stopped talking to me after that night you changed my tire.\" I nodded, not sure of what else to say.\n\n\"Your place?\" Min Seo answered by shaking her head, black hair flying about. \"Well shit.\" I thought about a private place we could go but came up blank. My parent's place wasn't going to work at all and Dick's was for late night make out sessions, not this.\n\n\"How's bout this: I'll head home and if Donna's there, we'll wait another day til she's gone. Deal?\" She considered this then nodded, checking around and finding nothing but clothing and ads for said clothing. \"Where the fuck didja park?\"\n\n\"I do not know,\" she said and I was in a similar situation, having lost all sense of direction this deep into the mall.\n\n\"Cool, me either.\" I took Min Seo's hand that wasn't holding the bag and pulled her along, walking fast towards what I hoped was an exit. Sure enough, eventually the press of clothes gave way to registers and doors showing the bright chill of outside that I wanted. Holding the doors open for Min Seo, I took a deep breath of exhaust tinged air once free.\n\nHaving escaped, I looked around and still had little idea where my car was. Min Seo gave my hand a little squeeze, getting my attention.\n\n\"I parked over there.\" She pointed into the mess of parked vehicles and I nodded, letting loose of her and pulling my coat back on. \n\n\"Ya know, Jamie and I are gonna get an apartment over the summer.\" I stepped away from the doors, Min Seo tagging along and meeting my gaze. \"So ya will be able to come by whenever ya want.\" Color crept into her face, maybe from the cold or the implications of what I was saying.\n\n\"I would like that.\" Rising on her toes, Min Seo's red lips pressed to my cheek and she lingered there a second too long before turning and walking away, leaving me there with some guy staring as if I had my tits out. I went the opposite direction, unsure if that's where I parked but needing space for my rampaging emotions.\n\nAfter enough walking hunched over in the cold, I figured out where I parked, wondering why I had basically invited her into Jamie and I's place so far in advance. I unlocked my car and got it started, finding something hard and heavy on the radio to distract me and got driving. Donna was camped out on the couch when I got home, earbuds in and eyes closed. I sent a text to Min Seo, saying that today wasn't going to work. All that done, I sat down and typed this, still not sure of much when it came to Min Seo. Well, at least I know that I need to talk to Jamie about this.\n\nWriting all of this down hasn't helped me at all. I'm not even turned on, just confused still! Why can't I figure Min Seo out? Or at least get my thoughts about her organized into something more than a shrug? Fuck it, I'm going to lay down and watch good Supernatural episodes.\n\n<center>March 10</center>\n\nFinally got a few things figured out today. I texted Jamie early in the day, asking if he would be able to talk later and he gave me a time. After class and working, I called him and got some shit figured out.\n\n\"Hey, what's up?\" Jamie sounded better, voice clearer but a cough reinforced he was still sick. \"Sorry, getting the last of the gunk out.\"\n\n\"Welll...\" I took a deep breath and dived right in. \"So I met with Min Seo the other day.\"\n\n\"Oh yeah? How'd that go?\" My sigh made him laugh. \"That good huh?\"\n\n\"I still don't know what she wants! She kissed me on the cheek and is going to come by and do my make up at some point and...\" I was pacing around my room, free hand waving as I ranted. \"I just don't know Jamie. Maybe she's just being friendly but the last time a girl kissed me, we were dating!\"\n\n\"Calm down.\" My hand clenched into a fist and I pulled in a deep breath, then let it out. \"Good. Now, what exactly is the issue?\"\n\n\"I don't want to fuck up what we have Jamie. We're still getting that place together, yeah?\" Jamie confirmed that was the case and I continued. \"Sure, I like hanging out with Min Seo but I don't want you to think I'm chasing after her or anything!\"\n\n\"Hey, hey, chill out.\" His voice was soothing, in control and what I wanted to hear. I was so out in the middle of nowhere on the topic of Min Seo and direction was desperately needed. \"Once I finally kick this shit once and for all, we're going to spend some quality time together, yeah?\" I laughed and heard the smile in Jamie's voice as he carried on. \"That's what I thought.\"\n\n\"However! After last time when you brought this up, I asked Tom what he thought about it.\" Jamie said, getting a frown out of me he couldn't see. \"So, do you remember saying you supported me trying the real deal?\" I paced more, racking my brain for what he was talking about and got some help. \"Dick. You were talking about dick.\" I giggled and heard his exasperated sigh, which only fueled more giggles.\n\n\"Were you serious about that?\" That stopped me cold, leaning against the wall as I failed to answer, mostly due to not being ready for this conversation yet. \"Well?\"\n\n\"Yeah.\" There was no other answer I could give. \"How the fuck do you remember that?\"\n\n\"When your girlfriend asks if you want to suck a dick, you don't forget that.\" I burst out laughing, coming to terms that this conversation was happening. That idle, after-sex thought coming back wasn't what I expected when making this call.\n\n\"Okay, if that is the case then I can't really be upset if you're kissing someone on the side,\" Jamie said and I stood there, baffled. \"But, some ground rules couldn't hurt.\" I sighed, slumping against the wall.\n\n\"Yeah, yeah, that's for the best.\" Now I had a shield for the next time Min Seo and I hung out. No matter what she did or said, I had Jamie to keep me in check. The relief was immense and I nearly missed when Jamie started talking again.\n\n\"First, I want a picture of this chick cause I want to know what she looks like.\" I snorted but agreed, thinking that if Jamie was in the same situation, I'd be dying to know who his mystery person was. \"Second, nothing more than kissing. No boobie touching, clothing stays on, you can touch her butt and vice versa but nothing beyond that. Third, you let me know when it happens.\"\n\n\"Is this fair to you though?\" I asked, not sure where I was going with this but pressing on. \"I'm getting action and ya aren't.\"\n\n\"Yet.\" My mouth opened but no sound came out. \"I'll leave it at that for now.\" He must have been blushing hard enough to glow in the dark.\n\n\"So... That's it?\" I asked, sitting on the floor at that point.\n\n\"Sure. I trust ya.\" Jamie said and I nearly told him about Min Seo's talents and if he was up for taking a turn in going to the store to get make up but stopped. That was the biggest hurdle, going to a very public place for the express purpose of getting very girly things. That and he still hadn't met Min Seo yet so I stayed quiet.\n\n\"Thanks. I didn't plan on this happening and kinda feel bad 'bout it.\" Running a hand through my hair, I looked at my dark closet and wished Jamie was feeling up for exploring its wonders right now.\n\n\"I'm sure my turn will come at some point. Besides, according to Tom watching your girlfriend make out with another chick means you win at life so I've got that to look forward to.\" My response was to laugh cause what else could I do? \"I've got some homework to wrap up then bed. Keep in touch and be ready cause once I'm healthy...\" I waited, wondering what he was going to say next and Jamie growled his next line, making me blush for once.\n\n\"I'm coming for that ass.\" And then he hung up! Holy shit, Jamie's on the attack! Now I really can't wait for the next time we hang out!\n\n<center>March 19</center>\n\nFor once, I sit and type after hanging out with Min Seo and there is no confusion. I'm horny and frustrated enough to spontaneously combust but I know what happened and why. Oh man, this has been quite a Thursday so lets get it out.\n\nGot a text from Min Seo while I was in class, asking if today would work for her to do my make up. I told her I wasn't sure, having to check what my lovely dorm mate was doing. Once class was over, I camped out until Donna arrived and asked for her plans. She responded, rather smugly, by saying she was seeing her new boyfriend before walking out, barely there hips swaying. Not caring at all about who she was seeing, I let Min Seo know and started cleaning my room, which without Jamie's constant visits had once more been reduced to wreckage.\n\nSometime around two Min Seo showed up, carrying the bag from the mall and looking around the living room, as if having never seen it's like before. Her make up was largely the same but the deep purple shirt was new, long enough it fell below her waist and could have been a dress in warmer weather. Maybe it was a dress and I was too out of touch to know that? A leather belt was about her waist and legging clad thighs showed from under the hem, making me feel under dressed for the occasion.\n\n\"Sorry, for some reason Donna camps out here on the couch.\" Min Seo shrugged and followed me to my room, freshly vacuumed and with a smell-good candle lit. \"And here's my mess of a room.\" I gestured to a space that really wasn't that big as Min took her coat off and looked for a place to put it. \"Here.\" I hung it from the corner of the open closet door before flopping down in my computer chair.",
        "\"Anything ya need, let me know.\" Min Seo walked over to my desk and put the bag down. Just looking at her made it clear she was all business right now.\n\n\"More light.\" I flipped on the lamp and then pointed at the candle, getting an even flatter expression from her.\n\n\"What? It's light!\" Digging out the familiar stuff from the mall and a few more things I was sure she didn't buy, Min Seo gave her head a little shake, black hair pulled back in a pony tail bobbing to and fro.\n\n\"We have this thing called electricity, you should look into it.\" I laughed as she handed me a hair tie, once more turning that critical eye on. Getting my hair out of the way, I sat with my back straight and eyes closed.\n\n\"Lay it on me. I can take it!\" Her hands on my face were smooth and warm, turning my head this way and that. \"So, whatcha think?\"\n\n\"I am going to clean up your eyebrows.\" That got my eyes to pop open, seeing Min Seo with a pair of tweezers. Opening my mouth to protest, I saw her own immaculate arches and sighed. This is what I had agreed to and settled for nodding, at least having her close as she got me into position. See, that sounds dirty but really, she had my head back so the lamp shined on it and began plucking away.\n\n\"Hold still.\" I wanted to protest that I was but the next pointy cold touch of her tweezers came in one of my nostrils and I yelped as a hair was pulled free. Covering my nose with a hand, I sat back and Min Seo held up the long, white hair she had removed, still clasped in the metal. \"It was bothering me.\"\n\n\"Ow!\" Clearly, my pain didn't mean much to her as she deposited the troublesome hair in the tiny trashcan I usually forgot was always beside my desk. \"Anything else ya wanna yank outta me?\" Laying a hand on the scarred desktop, Min Seo regarded me with a certain amount of amusement, catching me off guard.\n\n\"Have you never done that before?\" I shook my head, still shielding my nose from her in case she wanted to rip it off to finish the job. \"It does not hurt that bad.\" She said, as if talking to a child.\n\n\"Compared to what?\" I asked, still indignant even thought I would have dealt with that gross nose hair in the same manner. Her answer came in the form of taking my left hand and turning it so the back faced me. The faded scar from being too impatient while working on a car stood out, almost distracting me from feeling Min Seo's hands on mine. \"Yeah, well, I didn't mean to do that! It just happened!\" So had the swearing after, bent over with my injured hand held with the other, my Dad attempting to help and not laugh as I took halting steps and shouting my pain to the whole shop.\n\n\"You asked for my help.\" Her words weren't mocking, just the truth.\n\n\"I know! And thank you! I just wish it didn't sting so bad!\" Sitting back up again, I rolled my shoulders and took a deep breath. \"Okay, enough bitchin', lets get back to it.\" Closing my eyes again, I heard some container being unscrewed and I instantly thought of the cherry lube's distinctive sound upon being opened. Then, I thought of how we needed more, especially if Jamie was being serious about coming for my ass. By all accounts, he was and I fidgeted as foundation was brushed on my face, wishing Jamie was getting in on this attention as well.\n\nMin Seo worked quickly, brushing, turning my face and looking, utterly focused and not talking. Anytime she wasn't applying something, I cracked some stupid joke, feeling so much better with Jamie's guidelines bolstering my mood. Lipstick was put on and Min Seo stepped back, once more going over her work, hands on hips.\n\n\"Close your eyes.\" Figuring eye shadow was coming next, I did as she commanded and heard the slight sounds of movement before a warm breath caressed my forehead. Then lips pressed home, getting this party started earlier than I expected. Opening my eyes, I saw Min Seo lingering inches away from me and I said the first thing that came to mind.\n\n\"That wasn't fair.\" I wasn't outraged but taken aback, Min Seo having gotten the jump on me again. Darting forward, I retook some agency and landed a quick peck on her lips before falling back in the chair. \"See?\" Min Seo stood slowly, not looking away from me.\n\n\"... Are you still dating the hippy?\" I burst out laughing, having been hit by another thing I wasn't expecting.\n\n\"Yes I am but we talked. We can make out, long as he gets told.\" I pulled my phone out, Min Seo looking dazed as I waggled it before her. \"Also, Jamie wants a picture of ya so let's get that sorted before anything else, yeah?\"\n\n\"I was not expecting this.\" Min Seo said, getting a humorless bark of laughter from me.\n\n\"What were ya expecting then? To be friends? Cause I thought we were before ya kissed me. And did it again.\" I opened the camera app on my phone and changed it to the front facing lens cause I was curious. I saw me still in the process of being remade. \"Kay, change of plans: You finish putting my face on, then pictures and then fun. Kay?\" My candy red lips drew my attention as the color screamed 'fuck subtlety' and I loved it.\n\n\"Do you like it?\" I nodded, reducing my phone's screen to a dark mirror before tucking it away. \"I based this off of the Americana of the 1950's.\" Min Seo said that whole sentence slowly, getting each syllable right.\n\n\"How do ya know bout that?\" I knew exactly what she was going for: The old school cheesecake pin ups, the sorts that Dick had plastered over one of the shop walls that were cracked and faded with age but still capable of catching one's eye.\n\n\"Art History and internet. I have also seen cosplayers dress like this and with you being a mechanic, it made sense to me.\" Eye shadow was being applied, Min Seo moving quickly and talking in her slow manner. \"The night you changed my tire, I wanted to know more about you but Donna was not helpful. When we ate together, I was surprised that you liked Joo Won and yaoi. I have not met any...\" And with that, she fell silent.\n\n\"What? Come on, say it!\" I'd gotten Jamie out of his shell and Min Seo lacked the shyness he had but simply hid her emotions well.\n\n\"Most non-Asian girls do not share my tastes.\" Her halting words reduced me to giggles, Min Seo having to stop her work as I got my shit together.\n\n\"Yeah, ya mean white girls! And yeah, ya kinda right? I knew I liked girls but wasn't til I met Jamie that I learned I liked girly guys too.\" Finally having gotten all the giggles out, I resettled and she resumed her practiced motions.\n\n\"I did not want to offend-\" I cut her off with a wave of the hand, eyes still closed but severing that topic before it could play out.\n\n\"Please. I'm white as fuck, went to a white as fuck school and all the girls there talked about white as fuck guys, tittering over who had the best abs or hair.\" They probably would have been the sort to laugh at Jamie. Thinking back to those idiots always is a bad idea and leads to picturing my vandalized car, leading me to drop that line of thought. God, even now, sitting here typing this, it still pisses me off. \"Still, why not just say ya liked me? Why kiss and run?\" I kept my voice steady, not letting on how frustrated she had made me.\n\n\"I...\" The sound hung in the air, even her hands stopped applying make up as she went looking for what came next. \"...I wanted to show you but was not sure how you would react. I was scared and ran.\"\n\n\"Min Seo, ya don't gotta be scared of me.\" Her thumb ran over my eyelid, then the other as I waited for her reply.\n\n\"I know that now. Open.\" My mouth fell open, tongue flopping out as I gave a half hearted. zombie-like groan. My dumb joke was worth it from her sigh alone.\n\n\"Oh, ya meant open my eyes. Silly me!\" Blinking a few times until my room came back into focus, I saw Min Seo studying her work before preparing the eye liner pencil that always made Jamie uncomfortable. I bore it being used better than he did and she bid me to rise, face flushing as I stood.\n\nSlipping out my phone again, I fired up the camera and saw the face of a pin up girl looking back at me. The powdery surface of my face made it was obvious I was wearing make up but the results were good enough to look past that artificiality. I might have stepped out of some old men's magazine, with rosy cheeks and heavy eyelashes but my most urgent thought was I wanted to see Jamie done up like this. His rack along with the pose he held when putting on the push up bra for the first time, that could easily be something guys used to jerk off to seventy-some years ago.\n\n\"Wow.\" Min Seo had rendered me speechless, a rare feat. Part of it was picturing Jamie in one of the dresses, hair and make up done like he was going to a prom and that got my engine running again.\n\n\"Next time I will do your hair. If you want.\" Min Seo sat on my bed, fidgeting, as I finally stopped being a narcissist and joined her.\n\n\"Of course!\" I heard her take a deep breath and despite my motor now running, ready for action, I knew I had to play it slow. \"Are ya okay? We can do this some other time if ya want.\" Even before I finished talking, Min Seo was shaking her head.\n\n\"No, I want this.\" Her hand crept into my free one, looking for comfort and I was more than willing to provide. \"Just kissing today?\" Her accent was growing thicker, making it clear the prospect was getting to her.\n\n\"Yep. Now smile for the camera!\" I slung an arm over her shoulder and pulled Min Seo close, raising my phone and seeing her shock on the screen. She mustered a shy smile and I gave a big shit eating one, snapping the picture. Keeping the phone raised, I kissed her on the cheek and caught that image as well, Min Seo's shocked expression one for the ages.\n\n\"Isn't this what ya wanted?\" I murmured into her ear, echoing the words from the vivid dream and I shuddered, wondering what Min Seo's reaction would be if I had the real deal to whip out of my pants.\n\n\"Yes.\" Sighed, Min Seo turned to face me and became naught but a warm blur as her lips met mine. I tapped the button, getting proof for Jamie what we had gotten up to. It had been so long since I'd gotten to be this close, this intimate with someone and yet, my pleasure was tinged with guilt that it wasn't with my boyfriend.\n\nSlowly, I drew back from her timid touch and lowered my phone. In short order, all three pictures were sent to Jamie as I sat, aware I'd kissed another girl for the first time since high school. I wanted more, the heat that finally wasn't from a fever rising and still, my thoughts were dominated by fear I had fucked things up with Jamie. Thankfully I didn't have to wait long, Min Seo breathing hard as his reply rolled in.\n\n'Wow.' I nearly threw my phone but thankfully another message came in. 'You're looking good! And she's pretty! Have fun with her, my turn is coming soon.' I grinned at that, intending to hold him to that promise.\n\n\"Alright, we're good to keep going. If ya want.\" I tossed my phone to the side, the astonishingly powerful relief that Jamie was good with this not washing out how much I wanted Min Seo. \"Still alive over there?\"\n\n\"Yes.\" And with that, she let her hair down, black wings fluttering to rest on either side of her face. Scooting closer, her larger thigh touching mine, she reached up and pulled the tie holding my hair in place free, brushing it out with her hands. \"I have never met anyone like you Gen.\" Any reply I might have had was gone as she leaned in, her delicate rosebud of a mouth brushing mine as I put a hand on her thigh, feeling Min Seo jump at the simple action. Her hand covered mine, inviting me to get a better feel as our lips locked together.\n\nThe hunger that had been hibernating was fully awake, furious after laying dormant so long and making unreasonable demands of my new friend. I had to control myself but that was hard when Min Seo's tongue brushed up against mine. 'Cause I was making out with a girl again, feeling her thigh and how much give it had, the red of her eye shadow the same color of the inferno rising from within. I wanted to take hold of her ass, to have her do the same to me but instead settled for rubbing my hand towards the inside of her thigh, a pale mockery of my true desires. Her legs snapped together and I got the hint, keeping away from the goods as I'd promising Jamie I would.\n\nNeed pounded through my veins, burning away the last of the fog the sickness had me lost in. Now dawn had arrived but it was cruel, telling me to push Min Seo on her back and take charge. The deep kiss continued, growing my insistent from my side and I pulled her closer, her smaller bust not mashing to mine like Jamie's did but she was here and he wasn't.\n\nA unfamiliar chime stopped that line of thought, Min Seo pausing and slipping away from me. I inhaled, if only to regain some measure of control and saw she was on her phone, looking up from it to me with large, guilty eyes.\n\n\"I have to go.\" I gave a wheeze and fell back on the bed, the lumpy and discolored ceiling now matching my mood. \"Sorry.\" Min Seo sounded reluctant, selling the idea she was being pulled away by something that couldn't be ignored.\n\n\"I get it. It's all good.\" It really, really wasn't but what else could I say? She rose and used my mirror to straighten out any evidence of our little make out session. Meanwhile, I'd gotten a taste of passion and was suddenly denied, leaving me desperately horny. \"Hey, thanks for the make up and can we please do this again sometime?\"\n\n\"Of course.\" Walking over to the bed, Min Seo bent and gave one last gentle kiss on lips she had painted the color of a classic car. Grabbing her coat, she paused at my door. \"Next time, I hope to not be interrupted.\"\n\n\"Fuckin' same here!\" With a smile, Min Seo left and I laid there, not sure what to do until grabbing my computer and typing in a fit of rage. And only now do I think of texting Jamie on the off chance he isn't dying of plague and seeing what he's up to! Fuck me! No, seriously, someone just fuck me senseless!\n\nText sent. And now I wait.\n\nOkay, Jamie got back to me and is closing tonight but has tomorrow off. He asked me to pick him up at 8:30 and go to Dick's so I'm seriously hoping to get some dick. Or at least touch a boob or anything! I have to wait until tomorrow though! Jesus help me for I'm about to FUCKING LOSE IT!\n\n<center>March 20</center>\n\nThank you Jesus for keeping me sane. Granted, Jamie and I indulged in some premarital sex but that can be forgiven, right? Besides, you know how much we needed some time together. Before that happened though, I had to get through the day and that was... a thing? I don't remember much aside from it dragging on forever. Didn't pay attention in class but my grades are fine so I can afford to fuck off this once. Work was more of the same, sleep walking through stocking the cooler shelves, asking Jamie over text if he was still up for tonight and praying he said yes.\n\nThank God his response came quickly, confirming this was most definitely happening. I finished up my shift, growing more desperate to reach out and actually touch someone. Min Seo had been a tease, a salad before a meal that took hours to arrive. Not her fault but, going along with the whole food thing, she had reminded me I was starving.\n\nGot home from work, showered, shaved, got dressed. Then I started in on the make up, not nearly as good as Min Seo's efforts but more than what had become my usual: Foundation, a dab of blush and did my lips and eyes. All the while, the idea of putting the harness for the strap on under my jeans returned, the heat brewing in my guts already doing the thinking for me. The question, as always, was what Jamie was in the mood for but asking him would spoil the surprise.\n\nIn the end I dug the harness out from under the bed and pulled it on, ditching my panties in the process. Jeans went on over it and no one could tell I was ready to be packing some fake meat in an instant. The dildo, lube, and a condom were put in the plain brown bag and tucked in a coat pocket. The weather had slowly been warming but once the sun set, bitter cold reclaimed the land, winter not ready to give up yet.\n\nAll that done, it was close enough to 8:30 that I got my car warmed up, breath billowing out of my mouth in large white clouds as I paced around my car in the gloom of early night. Whatever Jamie and I agreed on was going to happen, simple as that so any further thought wasn't required. It was finally going to be our time and I got in and drove slowly, enjoying the torture of him being so close yet not here yet. It was the same as having him change in the same room as me but not peeking.\n\nI pulled up before his dorm and fired a text off that I was here, looking at the squat building with so many windows lit up, each one a life or two. I had no idea which one was Jamie and Tom's and never would, being the guy's dorm and all.\n\nThe front doors opened and a small shape came out, revealing itself to be Jamie once he got closer. Opening the door, he sat and took a deep breath before flicking the radio on. Journey sang to Don't Stop Believing and Jamie looked over at me, the bags under his eyes gone yet his pallor was distorted by the green lights of my digital dash.\n\n\"I've missed this.\" That was all he got before we drew into a kiss as the song played on. Jamie's need was evident, making demands with his lips that I matched. His tongue danced with mine before he fell back, panting. \"Oh, yeah, I've missed this.\"\n\nI had nothing to add to that and instead started driving to the place of Dicks. Jamie wormed out of his coat and him sitting back caught my eye. Instead of the loose shirts he usually wore, Jamie was now rocking a much snugger black shirt that didn't hide his boobs at all.\n\n\"Nice shirt.\" Jamie laughed, sounding far more giddy than the last time we were here.\n\n\"Tom gave it to me, insisting I wear it out with you, otherwise he would cut me.\" After the showing he gave at IHOP, I didn't doubt Tom said that. \"I've been wearing it around the dorm with a jacket nearby just in case. It's nice to have a place I don't have to hide.\" Any questions I might have had about someone discovering his boobage was quashed, Jamie's confidence having grown further since the last time we hung out.\n\n\"What is his deal?\" I asked, not being rude but wanting to know more bout his interests in Jamie.\n\n\"He's been trying to figure me out since the day we moved in together. Since he found out about my boobs, that made everything 'click', as he put it.\" And I had written Tom off as another sports scholarship. Sometimes it's nice to be wrong. \"So yeah, Tom's been telling me to at least look nice when hanging out with you.\"\n\n\"If only he knew.\" Jamie broke down into giggles at that, making me smile. I'd missed this, so much. Pulling in the back lot of Dick's, I parked and killed the engine, unbuckling my seat belt, ready to get this underway.\n\n\"Oh, by the way, I told him about us getting an apartment and he offered to give us a couch? I guess his parents have a spare so yeah, I said we'd take it.\" I blinked, only then realizing I had nothing but a bed and desk to offer for our new place.\n\n\"Hell yeah!\" I proclaimed as an annoying ad came on the radio, reminding me why I had mostly abandoned it until Jamie came into my life. Still, couches aside, we were here for one reason and that time was now. \"So... Whatcha feeling?\"\n\n\"I'm so fucking horny Gen.\" At that, I was reduced to manic laughter, mostly cause I perfectly understood.\n\n\"I ain't doing much better.\" Fighting out of my coat, I slipped into the backseat, getting my shoes off and dumping them into the floorboard.\n\n\"How did it go with that girl?\" Jamie asked, joining me in the back and kicking off his shoes. I also didn't miss that he unbuttoned his jeans.\n\n\"Min Seo? Ya basically saw it all. We kissed some, she got a text then left. I freakin' got blue balled!\" I raged, the bittersweet memory not nearly as bad now cause Jamie was within arm's reach. He nodded before pulling his shirt off, revealing the peach bra that too, was removed and discarded. I hadn't seen Jamie topless for too long and I was more than ready to rediscover his damn perky boobs.",
        "All conversation ended as I struggled out of my shirt and bra in a hurry, Jamie's eyes flickering to my bare chest and we admired each other, savoring the final seconds of sanity. I broke first, closing the space between us and his breasts against mine was a luxury. There was no grace, just two people desperate for each other.\n\nJust kissing him wasn't enough and I pushed Jamie back, taking his breasts in my hands. \"Yes...\" The word was hissed as Jamie closed his hands over mine, making sure I got two handfuls. Tweaking a nipple between two fingers, I marveled at the light, needy moan that got from him.\n\nSurging upright, Jamie pulled me to his chest and I gave him what he clearly wanted. Blindly, I found my way to the peak of his mountain and took it in my mouth. My tongue flicked his nipple up and down, each breath of Jamie's now exhaled in a moan, as if this was his first time again. Shoving his pants down, I found Jamie in panties, not surprising as I continued to make him gasp and moan. I slipped a hand in to feel his living heat uninterrupted, Jamie rock hard yet still cooped in flimsy cloth.\n\n\"Pleas-Please!\" I followed his request, dipping the waist of his panties low enough for him to escape, giving his length a few strokes and getting some sound of utter desperation out of him. Peeling off his boob, I fought to recapture my breath as Jamie did the same. Fire that had been building for days seized control, reducing my brain to just a piece of meat along for the ride. Clawing at my coat, I found the bag and dumped its contents on the backseat, taking up the condom and tearing it open. With a care I didn't think possible of me, I rolled it on Jamie as he picked up the dildo, looking up from it to me.\n\n\"What?\" His eyes were sly and knowing as he pointed with the purple phallus towards my crotch. \"I brought it just in case!\" Even protesting took effort as it wasn't jumping on his dick right then and there. Bringing the dildo up to his lips, he kissed the tip, tongue slipped out to circle the head a few times.\n\n\"Put it on.\" Handing it over, I shoved my pants down in a hurry and got it locked it place, now mirroring Jamie except for lacking unnecessary protection. \"Now come get some.\" Laying back, Jamie looked up through the darkness as me as I straddled him, my dick going unused but I was going to get what I wanted anyway. Fire burned in my veins, thudding behind my eyes as I lowered, losing patience and feeling him slip in easily before getting to the inner entrance and knocking my breath out. Still I needed more and threw my head back, crying out to the night as his hips met mine.\n\nI was full but not sated, not by a long shot. Jamie was moaning but I couldn't hear him over the roar of my passions. Taking hold of his boobs again, I gave them a squeeze while moving my hips, some noise I couldn't control coming out of my lips but that was of no concern. Jamie returned the favor, taking hold of my dick and giving it a few strokes, the sight of it igniting what rationality I had left.\n\n\"You're fault, showing me that yaoi.\" He gasped, back arching, pushing himself closer, deeper and I bared down on that. Words failed. I rose and retook him in one smooth motion, his shaved smooth pelvic region joining mine once more. Jamie's cry was all I needed to hear for the fire to consume all restraint.\n\nOur sounds mingled in the backseat of my car as I rode him hard, the dildo strapped to me flopping about uselessly but that didn't matter. Heat boiled over, fire became fury as I continued to fuck Jamie, to make good on all the promises made while we were both sick. My fever dream would have to wait as there was no stopping, no communication aside from our bodies impacting each other and the gasps, moans, and wavering cries that was language of passion.\n\nJamie's desperate, verging on painful expression told me he wasn't going to last much longer but the end was coming for me as well, living fire that was now me transmuting further, encouraged along by seeing Jamie's breasts jiggling, hearing the phantom whisper of 'Isn't this what you wanted?' as he rode my dick and that image, etched in a wall of living flame that was memory, pushed me into temporary madness.\n\nThrowing my head back, I screamed while legs that were losing control kept bouncing on Jamie until he gripped my hips and pulled me down for the final time, holding me there as he let loose. I felt the orgasm roll out from him into me, stopped by the condom but I was too wrapped up in my own end to think of that. Fire's thoughts are simple and full of urgency and by the time only embers remained, my vision was clear and I could almost think, aside from the exhaustion that had rolled in at some point.\n\n\"Oh God, I needed that.\" Jamie said, trying to sit up but I was still on him, his now soft dick still resting in me. Shifting my weight, I got numb legs to lift me off him one last time for the night and fall back in the corner, used up but satisfied beyond words.\n\n\"I still gotta drive us back home...\" I whined, wanting nothing more than to take Jamie in my arms and pass out. \"Fuck.\"\n\n\"Hey, you'll sleep great tonight.\" Jamie said, finger running circles about one of his nipples and he shivered.\n\n\"Get dressed then.\" Finding all my clothes and wrangling them on, I found that I was still sporting wood and went to fix that.\n\n\"Hey wait.\" Jamie said, grinning as I noticed how well the tighter shirt showing his rack. \"Don't get rid of that yet, I got an idea.\" That said, he climbed in the front seat, leaving me tired and confused. I followed him up, settling in the driver's seat with my jeans still unbuttoned and my dick standing out.\n\n\"Okay?\" I turned the engine over and Jamie turned the radio off, producing his phone and tapping away before music started to play. Distorted guitar and then after several seconds softer vocals I couldn't make out, the mood of the song dark but inviting.\n\n\"Start driving.\" Doing as Jamie asked, I paused mid-breath as he reached over and began slowly stroking what was sticking up from my crotch.\n\n\"...Jamie.\" Sighing that word, I kept driving, holding my breath as another car passed by, knowing they couldn't see what he was doing but the balls required for him to consider this was unreal.\n\n\"Hey, you're the one who introduced me to art of guys fuckin'. I've been wound up cause of that for days.\" His strokes continued as I heard his seat belt click. No questions were asked as I saw his head in my lap, taking my dick in his mouth. My hands clutched the steering wheel hard enough my knuckles were white as Jamie's head began to bob, his hair falling down in waves of darkness. Raising my hips as much as I dared, I groaned past gritted teeth as I heard him slurp, then withdraw in a hurry, wiping his mouth with the back of a hand.\n\n\"Still can't take it all.\" Jamie muttered as I took my foot off the gas, taking a deep breath as we coasted on a nearly empty road before I regained control of my limbs. \"You okay?\"\n\n\"Unnngh.\" The sound was all I could muster, now contending with that new image and idea bouncing around in my head. Embers that were all that remained of the blaze were trying to reignite, to raze my brain once more and command Jamie to do it again. But no, I had to get home and deal with work in the morning.\n\n\"I'm going to take that as a yes.\" Jamie settled back in his chair, shifting a bit more than necessary. \"Probably should have taken the condom off before getting dressed.\" I snorted, the humor pushing back my ever lurking lust. Finally I got back to the campus and parked in the same space by his dorm.\n\n\"Thank yo-\" I never got a chance to finish as he kissed me, lazily but I returned it with all the energy I had. By the time he drew back, I had forgotten anything but wanting to drive back to Dicks and go for another round.\n\n\"Let me know when ya got more time off, okay?\" His coat was pulled on, covering his bust but did nothing to take away the twinkle in his eyes. \"Love ya Gen.\"\n\n\"Love ya too Jamie.\" And with that, he was gone and I was left sitting in my car alone on a Friday night, tired but happy. So I drove home and slept, showered upon waking and went to work. Then I came home and typed this, texting Jamie all the while, hoping to see him soon. 'Cause good God could I go for another round of that."
    ],
    "authorname": "Joshana",
    "tags": [
        "college",
        "crossdressing",
        "romance",
        "romantic"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/finding-the-perfect-fit-pt-20"
}