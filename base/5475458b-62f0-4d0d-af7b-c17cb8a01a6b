{
    "title": "Family Issues Ch. 06",
    "pages": [
        "Again, I have to apologise for the time it takes to produce each chapter. It's a hobby and it takes time which I sometimes lack. Plus, for my editing, I rely on the goodwill and the free time of generous people like Madison (ThanatopicFolds). Sometimes it accumulates. \n\nAnyway, here we go. \n\nNote: All characters in this story are of legal age. All of the characters are well over eighteen years of age.\n\n$$$$$$$$$$$$\n\nMegan Frost had a sweet dream about a beautiful guy with purple eyes who was giving her head. His soft mouth was wrapped gently around her shaft, and his skillful tongue did magic tricks on her glans. She opened a single eye, opened its partner, yawned happily, lifted her blanket, and discovered that a beautiful guy with purple eyes had his lips around her cock. Kevin blinked like an owl when exposed to the light, then his big purple eyes smiled.\n\n\"Hmmm...good morning,\" Megan said.\n\nHe let go of her cock, but not before he gave it a loving kiss. \"It's almost noon.\"\n\nShe shrugged. \"It's Sunday. I have practice in an hour but fuck it. Don't let me disturb you, by the way.\"\n\n\"God forbid.\" He licked his lips, then grabbed her hard member and inserted it into his mouth. His tongue circled the glans, slowly. He then dipped his tongue into her cock slit and started fucking it with his tongue, using short strokes.\n\n\"Oh, fuck!\"\n\nOn the opposite bed, Ashley stirred. She stretched and yawned, then stretched some more, then kicked her blanket off. \"Oh, for fuck's sake,\" she groaned. Her nightdress looked like a teepee, the fabric stretched. \n\n\"Had some nice dreams, little sister?\" Megan said. \n\n\"The best,\" Ashley groaned. \"Fuck! I dreamed you had amazing sex with a super-hot guy. Must have been a dream, because ugly dogs like you don't get to party with guys like him.\" \n\n\"We're identical tweens.\" \n\n\"Speaking of which, where is Melvin?\" Ashley yawned.\n\n\"Who?\" \n\n\"The little cutie who was here last night.\" \n\n\"Kevin? He's goooonnnnnne!\" Megan shrieked because Kevin took a gently bite out of her erect cock.\n\n\"He's there under the blanket, isn't he?\" Ashley said. \n\n\"No.\" \n\n\"I can see his head bobbing.\"\n\n\"Oh, yeah...\" Megan folded her hands under her head, and her smile brightened the room. It could have brightened the entire northern hemisphere had anyone bothered to plug her into the electricity grid. \n\n\"I hate you,\" Ashley said. \n\n\"Ashley, there's sixty percent less blood in my brain right now, because it's all going elsewhere. So, I see your mouth moving, but all I hear is 'Blah, blah, blah, blah...'\" \n\n\"I fucking hate you.\" Ashley jumped out of bed. \"I'm going to take a shower and take care of this.\" She pointed at the tent in her nightdress. \"Alone! I hope you're happy.\" \n\n\"Blah, blah, blah, blah.\"\n\nAshley lifted the hem of her dress, farted loudly in her sister's direction, and ran outside the room. \n\n\"Oh, fuck you Ashley! Ugh!\" Megan opened the room's window and dived under the covers.\n\n\"What happened?\" Kevin said.\n\n\"My sister stopped her mental development when she was six is what happened. Don't go outside just yet if you don't want your nose to melt.\" \n\n\"Wasn't planning to.\" Kevin licked her shaft all the way to her balls. He kissed both orbs and then swallowed them.\n\n\"Oh!\" Megan grabbed the sheets and closed her eyes. \"I'm...be tender, lover boy.\"\n\nKevin started humming as he played with the fleshy orbs in his mouth. His vocal cords sent vibrations that tingled from her testicles, all the way to the tip of her cock. He used his tongue to massage her balls and to roll them gently in his mouth. In his right hand, he held the fleshy rod and played with the tip and the slit, dragging his thumb in circles around the saliva-lubed head. \n\nHe dug the fingers of his free hand in her muscled thigh, kneading, and trailed them along the crevice of her toned ass. He lightly touched her starfish, rubbing the elastic ring of her opening, and Megan jumped. \n\n\"Jesus, Kevin, you're...\"\n\n\"Whaa?\" He said with his mouth full. \n\n\"Fucking amazing!\"\n\nThe tip of his tongue stabbed her delicate flesh, and Megan gasped. \n\n\"I think the danger of getting gas poisoning is reduced.\" She pulled the covers and tasted the air. \"Yep.\" \n\nKevin swirled his tongue around her testicles, and she moaned. He let them plop out of his mouth, then pursed his lips and swallowed her cock. \n\nMegan lifted the covers, causing Kevin to blink again in the light. \n\n\"Hey, beautiful.\" \n\nKevin lips smiled around her cock. 'Eye contact' was Diana's number one rule. 'Always keep eye contact when you swallow my Big Bird. I want to see those purple eyes adoring me.' He stared at her intensely, and Megan smiled. \n\nShe had never seen anything so obscene, yet so lovely. Kevin's lips, darkened by saliva, stretched around her cock, and those mesmerizing purple orbs were looking at her lovingly. Kevin made her feel that she was doing him a favor, as if sucking on her cock was some pinnacle of his. He made her feel wanted and lusted for, whereas Megan Foster was used to guys treating her like a second choice, or a fifth. \n\n\"Hey.\" She caressed his cheek. \"You're amazing.\" \n\nKevin gave her a wink and took a deep dive. She was the same length as Diana, but slimmer in girth, so he had no problem taking her into his throat. \n\n\"Ohhhh.\"\n\nHe engulfed her cock in wet heat. His throat muscles contracted around her. Down he went, and still, his beautiful eyes kept hypnotizing her. \n\nShe blinked and bit her lips. \n\nKevin pulled all the way up, making an obscene slurping sound. Her cock left his lips, only for Kevin to immediately gobble it again. His lips scraped the tender skin, and the pressure sleeve of his throat sent her deep into the tunnel of joy. \n\nHe dove deeper this time. His upper lip brushed against Megan's blonde pubes, while his lower lip teased her balls. Every millimeter of her cock was snuggled lovingly into his throat. Still, it wasn't enough. Kevin kept going. Using his fingers, he gently pulled while his lips swallowed her ball sack. He looked like a pelican who consumed a fish two sizes too big.\n\n\"Oh, my, God.\" Megan began nudging him away. \n\nHe stared at her, questioning, his mouth still glued to her shaft. \n\n\"Take it out...I wanna...\" she huffed. \n\nReluctantly, he let her slide out of his mouth. \"Too much?\" \n\n\"I...I want...I just want to return the favor.\" She crawled under the covers and grabbed his naked cock. It was rock hard. Kevin was having the time of his life, giving her pleasure. She was taller, and needed to flex a little. Imitating him, she gave his cock a loving kiss, then licked the underside. \n\nShe'd never sucked a cock before. She'd never been face to face with another person's dick before. But Kevin's cock looked just as beautiful as the rest of him. She opened her mouth and stuck out her tongue, licking the tip. Kevin's body shuddered. \n\n\"It's salty,\" she said, and Kevin laughed. \n\nKevin pressed his lips against the tip before him, kissing it. Megan kissed his tip. Kevin licked a circle around her glans. Megan licked a ring around his. He kissed her cock like you might kiss a lover, lips pressed hard against the slit. Megan was fast to follow.\n\n\"Alright!\" \n\nHe kissed through the entire length from the tip to the balls. It became a competition of cock kissing, both trying to outdo each other until Kevin burst out laughing. \n\n\"I won,\" she said.\n\n\"You're very competitive.\" \n\n\"You think?\"\n\nMegan opened wider, and slid his cock into her waiting mouth. It was a powerful feeling, making another person shudder with lust. He was hot, and she could feel his pulse as his cock came to life in her mouth. She bathed Kevin's dick with her tongue. Kevin gobbled her cock, mewing his content. \n\nTheir heads started bobbing in synch. Megan's cock was sliding in and out of his mouth, and his cock was sliding in and out of hers. The room filled with the scent of their arousal and the sounds of slurping. The wave of ecstasy swelled to the tunes of a lust symphony. Beethoven couldn't have composed it better. \n\nKevin was the first to burst. His spurt landed on her tongue, surprising her. She pulled out, and allowed it to spill freely on the bed. She then shuddered, moaned, and came deep in his throat. Her body convulsed as she squirted time and time again deep inside him, moaning with lust. He kept her in his mouth long after she stopped pulsing inside him. He let the soft member plop out of his mouth, but even then, he kissed it fondly and licked it clean. Megan gave satisfied mewls, and shivered a little each time his tongue brushed her spent cock. When he was finally done, she pulled him over and hugged him tightly, kissing his forehead. \n\n\"You won that round,\" she said.\n\n\"Not everything is a competition.\" \n\n\"I've never given head before. You just surprised me when you started...you know. It's warm.\" \n\n\"Because you ejaculate Pepsi on ice?\" \n\nMegan laughed. \"You like futanari cock, don't you?\" \n\n\"I like the person attached to it.\" \n\n-\n\nMost memories are blurred. We forget names, faces, and most details of our childhood as we grow, and new events replace the old. It's a blessing of sorts to some people. However, some defining moments stay fresh even fifteen years later. \n\nHelen was thirteen.\n\nHer mother was out on a date. She believed the guy her mom was out with, a redheaded navy officer, was Diana's father, but she wasn't sure. Her mother never told her daughters who their real dads were, and never demanded any of the numerous lovers she took to her bed to take responsibility for the girls. \n\nHelen sat alone in the kitchen, partially watching TV, partially solving a math problem. Her teacher, Mrs. Rodriguez, promised she'd buy special chocolate for the student who could solve an intricate math riddle about kids and houses, and which kid lives in which house. Helen excelled in math and loved Mrs. Rodriguez. She could almost taste the rich chocolate on her taste buds, and her stomach made a funny sound. Her mom ordered a pizza before she left, but it came cold, and something red and sticky was spilled on it. Helen was too shy to say anything to the delivery guy, so eight slices lay orphaned on the kitchen table like shamed futanari kids that no one wants to play with. \n\nShe heard a sound from her mother's bedroom.\n\n\"Diana?\" \n\nNothing.\n\nMaybe a thief?\n\nHeart racing, Helen tiptoed to the bedroom, careful not to step on the lines between the tiles, because it was bad luck. \n\nThe room was dark. Helen turned around and then heard the sound again. Like a little kitten that was stuck in a deep hole, crying for its mom.\n\n\"Hey, why aren't you asleep, Didi?\" \n\nDiana's slim form was hunched to a tight ball under their mother's feather comforter. Her small palms covered her eyes, and she was sobbing.\n\n\"What happened, Didi?\" She sat down and hugged her sister from behind.\n\n\"Robert King.\" There was a heart-breaking sob, one that only a ten-year-old can make. \"Robert King punched me today.\" \n\n\"He's in middle school.\"\n\n\"He picks on his stupid brother every day, so they let him in. And he's always mean.\" Diana wiped her tears on Helen's sleeve. \"He always bullies me. He calls me a 'hand-me-downs' girl, and 'ugly', and 'futa-freak'. I don't know why. I don't know why. Why is he so mean to innocent kids? I never did anything to him.\" \n\n\"Some people are like that. Some people feel bad about themselves, so they pick on someone weaker.\" \n\n\"Why?\" \n\n\"It makes them feel good, I guess.\"\n\n\"Are we poor, Helen?\" \n\n\"Kind of.\"\n\n\"One day, I'm gonna be rich. Then I won't have to force my daughter to wear her older sister's clothes, and the other kids won't make fun of her.\" \n\n\"Don't you worry about Robert King, Didi, I'll go talk to him tomorrow.\" \n\nDiana turned and stared at her wide-eyed. \"He's a bully.\"\n\n\"I ain't afraid of him. If he tries anything funny...\" Helen winked and kissed Diana's nose. Her little sister gave her a look that was borderline worshiping. It was almost worth all the heartache that would follow. \n\nSome memories just latch. \n\nHelen stared into Diana's dark eyes, trying to find remnants of that stare from fifteen years ago, and shuddered. When did the chasm between them become so deep? \n\n\"You look like shit,\" Diana said.\n\n\"Thanks. I feel like shit. I have a fever, and my stomach is killing me.\" She tried to eat the omelette she just made, and bile came up. It tasted nothing like the Mushroom and Goat Cheese Omelettes Kevin used to make, and she wasn't hungry anyway. \"I think I might call in sick tomorrow.\" \n\n\"Cool.\" Diana picked the rest of the omelette from the pan and swallowed it in one go. She wore a blue strappy mini dress. It was the first time Helen saw her dress up since Kevin left almost two weeks ago.\n\n\"Going out?\" Helen said.\n\n\"Yup.\" \n\n\"Good.\"\n\n\"What's so good?\" Diana squinted her eyes.\n\n\"You've been depressed since he left. It's good to change the atmosphere.\" \n\n\"You didn't talk to him today.\" Diana didn't ask; she stated a fact.\n\n\"With Kevin? What do you mean?\"\n\n\"You talk with him every day. Today you didn't.\"\n\n\"How can you tell?\"\n\n\"Because you're transparent, Helen.\"\n\n\"What's that supposed to mean?\" \n\n\"It means that all you care about is your selfish self.\"\n\nMaybe she needs to see a doctor? The last time she was ill was four years ago. She didn't see a doctor then; she hated doctors. \"Did I do anything to you, Diana?\" \n\n\"He still owes you a shitload of money. You could have forced him to come back. Easily.\"\n\n\"By threatening him again? Diana, that thing I did that night, giving him an ultimatum so he would be with you until he caved because he didn't have another choice? That was the ugliest thing that I ever did in my life, and I've been to a nasty war. I'll never do anything like that to him or anyone else again; not even if you'll say I'm selfish.\" \n\nDiana shrugged. \"Doesn't matter. He's coming back.\" \n\n\"What?\"\n\n\"Can I borrow two hundred bucks?\" \n\n\"I have maybe fifty. Take my credit card. What do you mean coming back? Are you sure?\"\n\nDiana shrugged. \"He's my boyfriend, and he's coming back.\" She rummaged through Helen's purse, found the wallet and took out the credit card. \"Go see a doctor; you look like shit, Helen.\" She turned to leave. \n\n\"Wait, Diana, sit down.\"\n\n\"I'm already late.\"\n\n\"This will only take a minute.\"\n\n\"Another time.\"\n\n\"Sit down, Diana, now!\" Helen projected her voice like she learned in her officer training.\n\nDiana turned and stared at her. She wasn't used to being ordered around, especially by her bigger sister. \n\n\"Sit! There is something that needs to be said. We should have had this conversation a long time ago, but...sit down!\"\n\nDiana took a seat across the table from her. Her eyes were so cold that Helen wished she could just slap her out of her indifference. \n\nHelen closed her eye, fighting a tear that was coming up. \"I'm going to say something to you, and you need to take it seriously.\" \n\n\"What?\"\n\n\"I've seen you grow up, and I've seen you treat people like shit; me included. I don't know why you are like this but believe me when I say that I've never stopped loving you. You're my little sister, and the only person I've got in this world.\"\n\nDiana smirked. \n\n\"Maybe Kevin is coming back. I hope he does.\"\n\n\"He's coming back.\"\n\n\"If you ever raise your hand to him again-\"\n\n\"I didn't.\"\n\nHelen shook her head. \"Just this once, be a grownup and take responsibility for your actions. I beg you.\"\n\n\"I don't have to listen to this.\" Diana rose.\n\n\"Sit!\" Helen barked. \"I'm not done.\"\n\nDiana's face contorted into a snarl, but she sat down. \n\n\"If you ever raise your hand to him again, then you and I are through. There won't be any excuses. You won't be able to hide behind your drinking issues. The day you do that again, you'll pack your bags and move out of here. It breaks my heart to say this, don't think for a moment that it doesn't. It also breaks a promise that I gave mom when she was on the last stages of her disease, to always take care of you.\" Helen paused, and drank some water. \n\nDiana looked stunned. \n\n\"Do whatever it takes, Diana. Anger Management. Go to rehab again. Whatever it takes. I'll pay. But you'll never raise your hand to him in my house again.\" \n\n-\n\nFrom outside the window came sounds of laughter, some sorority girls playing soccer on the grass. Kevin wanted to go down and join the fun. He jerked his head, trying to extract water from his ear. Megan snuck him into the sorority house's bathroom earlier and was now taking a shower herself. On her bed, Ashley devoured his athletic body with her eyes, not even trying to be inconspicuous about it. \n\n\"What's long and thick, goes into your mouth and has cum in it?\" She suddenly said.\n\n\"A cucumber.\" Kevin rubbed his ass. \"Sometimes cock. By the way, some kids from the fifth grade called earlier; they want their jokes back.\" \n\n\"Yeah? Some people called from the stupid shop earlier, they want...they want...damn it!\" \n\n\"Bummers, you had a great punchline coming there before it died, I could feel it. We should bow our heads in respect for a minute.\" \n\n\"Don't be a jerk.\"\n\n\"You started it.\"\n\n\"I'm ending it.\" She sat down on the bed and stuck out her tongue at him, but then she frowned and started unpacking her bag aggressively. \n\n\"Hey, what's wrong?\" His voice lost its edge.\n\n\"What?\"\n\n\"What's eating you?\" \n\n\"Nothing.\"\n\n\"Yeah, right.\"\n\n\"It's just...\" she looked at the door.\n\n\"I won't tell Megan.\" \n\n\"It's just...never mind.\" \n\n\"I'm a good listener.\" \n\n\"Okay, let me tell you a story, and you'll make of it whatever you want.\"\n\nKevin nodded and sat down on the bed beside her. \n\nAshley stared at him, surprised for a moment. \"Um...\"\n\n\"A story?\"\n\n\"Yeah, yeah, you got me confused with too much purple. Well, once upon a time, there was this beautiful sweet girl named Ashlin.\" \n\n\"Ashlin?\"\n\n\"Don't interrupt! Ashlin,\" Ashley nodded. \"And the beautiful girl had an ugly identical twin sister named Segan.\" \n\n\"Ashlin and Segan. Sounds Danish. Interesting.\" \n\n\"And even though Segan was only ten minutes older, she was always the big sister, the adult sister, the responsible sister, the one who gets the highest marks at school, sister. Their dad would always say to Ashlin, why can't you be more like Megan?\" \n\n\"Segan?\"\n\n\"Yeah. And even though Ashlin was a successful basketball player, it was always, 'wow, look at all the gold medals Segan has.' And when one day, Segan brought to their room a guy that was way, way out of Segan's and Ashlin's league, little Ashlin was a little, well, a lot, jealous. So she acted like a jerk. But she'll get over it. And stop doing it. I hope.\" \n\n\"Nice story.\" He kissed her cheek. \"And Ashlin is not a jerk; you're sweet and funny when you drop the little girl act.\" \n\n\"She can't drop the little girl act.\" Megan entered the room, wrapped in a large blue towel. \"Because it's not an act.\" \n\n\"Hey, don't be mean,\" Kevin said.\n\nMegan jumped onto her bed, then reached across the room and pulled Kevin's towel with a sudden jerk. \n\nKevin shrieked, butt naked, and dived into Megan's bed, covering himself. Megan cuddled him in her arms.\n\n\"Oh, for fuck's sake,\" Ashley said. \"You're not starting again, are you?\"\n\n\"Why the hell not?\" Megan nibbled on Kevin's ear. \"And you can be a good sister for once and give us some privacy.\"\n\n\"You can be an even better sister for once, Segan, and not kick her out,\" Kevin said.\n\n\"Are you on her side now?\" Megan stopped kissing him.\n\n\"I'm hungry now.\" Kevin pulled his shorts up. \"How about instead of you two fighting like cats, even though it's super sexy, I make us all something to eat? There's a kitchen downstairs, and probably a lot of stuff that remained from the party.\" \n\n- \n\nThe young Asian man in the sexy French maid outfit wiped the dining table and jiggled his buns. He wore garters today, and when he leaned over the table, his mini-skirt rose, and his bubbly butt winked at Diana.",
        "\"Wanna take Li Jun for a whoopie?\" Nadine nodded towards him.\n\nThe young man heard his name, and turned to them with a smile. \n\n\"I think he's grown fond of you,\" Nadine lit a long cigarette. \"Can't imagine why.\" \n\n\"Fuck Li Jun!\" Diana snarled.\n\n\"He would like that.\" \n\n\"No! I mean...fuck that, you know what I mean!\" \n\nNadine blew a cloud of smoke in Diana's face. \n\n\"Stop that! I don't want your crappy Lace Boys. I want my boyfriend back. It's your fault that he ran away.\"\n\n\"Mine?\"\n\n\"You tricked me into doing it with Li Jun and Yu.\" \n\n\"It's everyone's fault. Well, except yours, obviously.\" Nadine blew another cloud of smoke in Diana's face. \n\nA rubber ball bounced off the table, and hit Diana's head. \n\n\"Sorry!\" In the corner of the room, one of Nadine's wrestlers was shooting hoops at a mini basketball station, with Nadine's little sister. The giant futanari, nicknamed Madame Hulk, picked up the ball. \"Sorry 'bout that.\" She didn't look particularly sorry. \"The girl is still learning.\" She aimed at the board and threw a perfect arc into the hoop. \"Three points.\" \n\nIman clapped happily. She picked up the ball, threw it, and almost shattered an expensive-looking vase. \n\n\"Very nice, sweetie,\" Nadine said. \n\n\"You said you'd help with Kevin,\" Diana snarled.\n\n\"Did you do what I told you to?\" \n\n\"Four days ago.\" \n\n\"He should call soon, then,\" Nadine said. \n\n\"Helen would kill me if she found out.\" \n\n\"Why would she even care?\" \n\n\"My sister didn't even want to use the debt he owes her to bring\n\nhim back home.\" \n\nNadine put out her cigarette. \"The more I hear about your sister, the more I want to meet her. She sounds strong.\" \n\n\"Helen wouldn't give someone like you the time of day. She thinks she's better than everyone else.\"\n\nNadine shrugged. \"Do you want Kevin back or not?\" \n\n\"More than anything.\"\n\n\"I'm not sure that you're mature enough to make that decision.\" Nadine lit another cigarette and offered one to Diana. \"I'll call you soon on that debt, asking for something in return.\" \n\n\"I know.\" \n\n\"You're like a little girl, Diana. I know you. You promise things that you never intend to keep. You probably think that you can walk out on your debt, or stab me in the back. Won't happen, darling. We were lovers once, but this is business.\" \n\nThe look Diana gave her was one of pure hate. \n\n\"You're too stressed. Take Li Jun for a ride, it'll make you feel better.\" \n\n\"Your Lace Boys don't come close to Kevin.\" \n\nNadine's smile had more than a pinch of cruelty. \"Don't I know?\" \n\n\"What?\" \n\n\"I forgot to mention it, senile old me, but that night you took Yu and Li Jun for a test run, I took Kevin for a long and sweaty one-on-one.\" \n\n\"Fuck off. You're just trying to get under my skin.\" \n\n\"He said I was the best sex he ever had.\" Nadine stretched her lips over her front teeth and blew smoke rings. \"Not that there was any real competition to begin with.\" \n\n\"You're lying.\"\n\n\"Am I? By the way, the feelings were mutual. He's the best sex I ever had.\" \n\nDiana tensed. For a second she wanted to explode. She'd go medieval on her ex's ass, and to hell with the consequences. Then she reconsidered. \n\nMadame Hulk's eyes were on her the entire time. Maybe basketball with Iman wasn't the only reason she was there? The giant futa watched her with an amused smile smeared all over her face. Jumping Nadine would lead to an obvious outcome. \n\nShe tried to relax, and imagined Kevin. Everything about him calmed her violent soul. She felt complete when he was in her arms. She didn't need drugs or clubbing, nor alcohol when they were together. Just his purple eyes and his warmth. Unfortunately, as soon as she formed his willowy body in her mind, she couldn't help but imagine Nadine with her giant dong, pounding him. Now even the thought of Kevin wasn't relaxing. \n\nAnother ball hit Diana's head, hard, and she saw stars. \n\n\"Can't you tell that retard to play outside?\" she snarled. \n\nNadine smiled. \"Follow me, darling; I want to show you something.\" \n\n\"Where to?\" \n\nThe smile was gone, and Nadine started walking. \"Iman, sweetie, you stay here and keep practicing. You're doing great.\" \n\n\"I know.\" Iman picked the basketball. This time she hit the vase. \n\nNadine sighed and walked out the door. \n\nMadam Hulk motioned Diana to follow, and Diana realized that following Nadine wasn't optional. The three girls crossed the hall into the main yard, and entered a big garage with several supercars. A raven-haired futanari with a broken nose wearing an oil-stained overall was working on a Pagani Zonda, polishing it. \n\n\"Diana, I want you to meet Veronica. Veronica used to be a freighter ship's captain, but now she's responsible for my cars. She makes sure they're always spotless.\" \n\nDiana stared at Nadine.\n\n\"You're asking yourself 'what's Nadine's point', right? The point is that you're stupid, Diana. It took Kevin two minutes to figure me out. You've known me for months, and you're still clueless. See, Veronica here didn't figure me out either. Her job was simple; smuggle Lace Boys from Ukraine and China in containers, and bring them here. It's a complex operation, smuggling sex-workers into this country. Her job, however, was simple. Keep the young men healthy and fed, that's all. But Veronica was greedy.\"  \n\nDiana looked at the girl polishing the car. She didn't lift her head once, even though Nadine was discussing her. \n\n\"See, every trip, Veronica would pick one sex-worker from the container. Force him to warm her bed through the entire trip. One time she picked the wrong guy. A virgin. I had to work with new recruiters that one time and they didn't fill their quota. So, they tricked a gullible young man, telling him that he was going to be an au pair for an elder woman in the new country. Of course, he didn't want to give his ass to Veronica. What do you think she did? Huh? What did you do, Veronica?\" \n\nVeronica kept her head down, but Diana noticed that her hand on the car was shaking.\n\n\"She raped the poor thing over and over again, twenty-two nights in a row. She got careless in the end, and he managed to escape, then he threw himself overboard in the middle of the Atlantic. Do you have any idea how much it cost me? So now Veronica owes a huge debt, which she will be paying for the rest of her life. Brigitte also made sure that she'd never rape anyone ever again. Veronica, please show Diana.\" \n\nThe dark-haired futa nodded fast, still not looking at them. Veronica pulled her overalls down to her knees, and then pulled down her boxers. Underneath, where there were supposed to be a pair of testicles, there was only a deep scar. Instead of a cock, Veronica had a short, ugly stump. \n\nDiana averted her eyes. \n\nNadine clicked her tongue. \"Nuh-uh! Cecilia?\" \n\nMadam Hulk clasped her massive paw around Diana's neck, made her bend, and forced her to look closely. \n\nNadine stooped until her lips almost touched Diana's ear. \"Have you figured me out yet, little girl? Call my sister 'retard' one more time. Just try to cross me once.\" \n\n-\n\n\"Wow, Melvin!\" Ashley had an annoying habit of stuffing her mouth with food before every sentence. \"That's officially my favorite pasta dish. What do you call it again?\"\n\n\"Pasta a la Kevin. 'Kevin', with a 'k'.\" \n\nThey were sitting around the small table in the girls' room, dining on the meal Kevin made with their help. As professional athletes, both girls were used to a strict diet, but after seeing the delicacies Kevin could conjure, Megan declared that a onetime slip is not such a big deal. He used everything in the kitchen and cooked for a battalion. Half the floor was enjoying the results. Some of the girls already suggested they'd adopt him. \n\nAshley flushed her mouth with a glass of wine. \"Sure thing, Melvin. Do you want more wine? It's Vin Jaune. Michelle's mother is the French ambassador. They have these posh parties at the Embassy all of the time, and she always pinches wine bottles and brings them here.\"\n\n\"I'm good.\"\n\n\"Sure? Your ears would fall off if I told you how much this bottle costs.\"\n\n\"I already got a buzz going, and I have a date tonight.\" \n\n\"I thought you didn't have a girlfriend,\" Megan said. \n\n\"Her name is Helen, and she's just a friend. It's a tradition. We catch a movie every Sunday night.\" \n\n\"Helen, who is just a friend, and you go on dates with? Hmmm...\" \n\n\"Yes, these things do exist, Megan.\" \n\n\"You sound defensive.\"\n\n\"Leave Melvin alone, he said she's just a friend, and I believe him.\" Ashley kissed Kevin's cheek and left a string of pasta on it.\n\n\"Jesus, you eat like a fucking pig,\" Megan snorted. Her face was red, and Kevin believed that she finished half the bottle on her own. \"Ashley, you're an embarrassment.\" \n\n\"Will you stop that already,\" Kevin said. \"You're on her ass all the time.\" \n\n\"Yeah.\" Ashley licked the pasta from his cheek and giggled. \n\n\"She's an embarrassment. She eats like a ten-year-old. She tells inappropriate jokes at the most inappropriate situations.\" \n\n\"Am not.\" \n\n\"During my aunt's funeral, she was Jewish by the way, Ashley decided to tell a joke about a rabbi, a priest, and a choir boy.\" \n\n\"Aunt Edna would have appreciated it; she always had a great sense of humor.\" \n\n\"Ashley farts, and then she pretends it's hilarious. She doesn't realize that she's just not pretty enough to be that stupid.\" \n\n\"My little brother, Ben, used to fart and joke about it,\" Kevin interjected.\n\n\"Then he's a moron too.\"\n\n\"It wasn't his fault; he was born with an extra chromosome. It's called Down Syndrome.\" \n\n\"Oh, crap. Sorry.\" Megan clenched her teeth.\n\n\"Yeah, got serious all of a sudden.\" Kevin smiled. \"Forget about it. He went to a special day-care but back home he didn't have any friends, so he used to hang around me a lot. We would fart, and then we would pretend it was some exquisite smell. 'Yo smell that, I just farted a cinnamon cake. Yo, I just farted a hippo with diarrhea.'\" \n\n\"Ew, Gross!\" Ashley pinched her nose. \"Boys.\"\n\n\"Totally. I would invent smells, and Ben would pee his pants laughing. Yeah,\" Kevin smiled, but his eyes became sad. There was not a single memory with Ben in it that wasn't laughter. Ben had never cared that the cards the universe had dealt him were less than kind. He was always smiles, and laughter, and hugs. \"What I'm trying to say, Megan, is that it doesn't matter. Family matters. The people who love you matter. So what if they're sometimes an embarrassment. Life is too fragile to waste on the expectations of people who don't count. Fuck it. I would give anything to play the fart game with Ben again.\"\n\n\"Tell him the next time you see him that you want a re-fart.\" Ashley giggled. \n\nKevin imagined himself going through the pearly gates. There would be a beautiful woman with purple eyes holding the hand of a little boy waiting for him. Ben wouldn't be able to contain his excitement and would start jumping up and down as he always did when Kevin returned home from school. He would be telling the angels to put on their gas masks because a farting party was about to commence. It made him smile. \"I will tell him exactly that.\" \n\n\"Hey, don't be sad, purple eyes.\" Ashley gave him a tender kiss on his mouth. Maybe it was the wine, but her lips lingered on his much longer than a heartbeat. Suddenly, her lips parted, and Kevin sent his tongue into her mouth, to tour its way around. The wet tip met her lovely tongue, and he dragged it gently, inviting her to the dance.\n\n\"Hey,\" Megan giggled from his other side. \"What about me?\" \n\nKevin turned around and kissed her deeply. Lips pressed against lips, tongues wrestling. Ashley kissed the back of his neck, then licked his ear. \n\n\"What about me?\" Ashley laughed. \n\nKevin turned and leaned in, keeping his eyes on hers, and Ashley gasped. As she lowered her face, her lips pursed. He wanted to feel their soft warmth. Ashley pulled her top off, and Kevin pulled his. She sat down and pulled him off his chair onto her muscled body. As his body leaned forward for a kiss, he felt her pointy nipples scraping his chest. She was a heatwave, and that heat radiated through his entire body. Eagerly, Ashley offered her tongue. He opened his mouth and welcomed her in. They melded together, for a long kiss. She wrapped her powerful arms around his neck and hungrily devoured him. \n\n\"Hey, what about me?\"\n\nKevin tried to pull back to give some attention to Megan, but Ashley locked him in a tight grip. She began to suck his tongue deep into her mouth. \n\nKevin felt Megan's long fingers on his thigh. Her other arm looped around his naked torso and pulled him backward. \n\nAshley growled, and Kevin felt the vibrations rock his face. Her muscles tensed around him. She wasn't giving him up without a fight. He moved his hands to her shoulders, to push her back. Then he felt fingers traveling up his thigh, unbuttoning his pants and pulling them down. He felt the air against his naked buns, and then a wet finger entered his anus from behind. Kevin whimpered into Ashley's mouth. \n\nHe knew resistance was useless as Megan began moving her finger in and out. His hole acted on its own will to try to trap her finger\u2014not wanting it to move away from him. \n\nAshley let go of his mouth but kept her arms around his neck, devouring him with her eyes. \n\n\"God, I want you.\" Her voice was hoarse with lust. \n\nMegan's finger went deep, and Kevin's body shivered, as his tunnel clasped around her finger. \n\n\"I want you,\" Megan whispered. He felt her body pressing against his back. She took off the dress she wore, and her nipples pricked his skin from behind. Her finger never stopped for a minute, to move inside his ass.\n\nKevin pulled on Ashley's nipple with his teeth. She cried out as he did, and he joined her as a second finger entered his most private spot. The small room echoed with squishy sounds as Megan set a steady rhythm. In and out, in and out. \n\nAshley pulled his head from one nipple and directed him into its twin. Kevin took the pointy nub and sucked hard. Ashley jolted every time his teeth pinched. \n\nMegan kept pumping with her fingers while she placed her free hand on Kevin's balls. Her index finger scraped his inner walls and rubbed his fun button. She removed her fingers, and a second later he felt her spit into his hole. The fingers entered his anus again, but this time there were three of them. \n\nHe felt Ashley moving frantically beneath him. She wiggled out of her pants and underwear. She sat up on the chair and pulled his naked body on top of hers. Her cock was pulsing and big between his legs, like a beast in heat. Each time it rose it patted the crack of his ass, and it made him ache for it to enter.\n\nMegan withdrew her fingers from his anus. He could feel the cold air rushing in on his wide-open ass. \n\n\"What a lovely sight,\" Megan said. \n\nAshley lifted him to a squatting position, his calves resting on her powerful thighs. Her cock pointed skyward, just inches from his closing opening. She pulled him to her and took his nipple into her mouth. Her tongue ran circles around the areola. She took a bite on the tip and Kevin almost ejaculated. \n\nShe pushed him, encircling his face with both palms, drawing his mouth to hers.\n\n\"I wanna be inside you.\"\n\nHe nodded, eyes half closed. \n\nHe felt Megan spreading his ass cheeks while Ashley pulled him lower. Her cock head touched the elastic ring of his rectum. Then with a wild thrust, she was inside him. Her cock conquered his tunnel with a single charge. It slithered up, like a mighty anaconda, scraping his tender walls and burying her to the hilt. Kevin ejaculated immediately, sending streams of cum on her toned stomach, his body shuddering powerfully. \n\n\"Oohhh, lovely mess you've made, Kevin.\" \n\n\"Su...su...suddenly you know my name?\" He ground himself on her cock, and Ashley moaned. \n\n\"Fuck! This is so sexy,\" Megan said. From behind him, he felt Megan's cock, brushing against his spine. The elder sister wanted to join the fun. He felt her moving and realized she was jerking off. \n\nAshley's hands looped under his legs, pulling them up, parting them. Staring into his eyes, she began to fuck him, her cock sliding in and out of his ass as she lifted him, then pushed up to meet his descent. \n\nShe settled into a rhythm, gliding her shaft in and out of the hole lubed by her sister's spit. Kevin clenched, maximizing the pleasure on her swollen tip, her cock vanishing inside of him. One of his hands moved to grip the chair's backseat. Ashley watched his expression, working his ass just as much as she was working herself. \n\nKevin felt Megan's release before he could hear her. A warm sticky fluid hit his back and started dribbling down. \n\nMegan moaned. \"Yes, yes, yes, oh fuuuck!\"\n\nA second squirt hit his ass, then flowed down the crevice between his buttocks, until it met Ashley's cock. The rod of flesh pumped it inside his ass, adding it to the fluid party inside his anal tunnel. \n\n\"Oh, fuck.\" Megan squirted, splashing ropes of cum that decorated his ass again and again. \n\n\"Yessss.\" Ashley hissed, closing her eyes and tilting her head back.\n\nThe chair creaked as she began to bounce him on her cock, their bodies becoming slick with sweat.\n\nKevin's cock was hard again, bouncing freely, slapping her muscular abs. \n\nAshley's voice became higher in pitch; each exhale accompanied by a slight gasp as her cock hammered him. Her pleasure reached a crescendo, and she continued to pummel his ass frantically. Her hot load hit deep in his bowels, conquering him. \n\n\"Yes! Ball don't lie; ball don't lie.\" She screamed. \"And Oneeee!\"\n\nShe experienced ecstasy as his squeezing, massaging ass milked and hugged her cock. She shot rope after rope into him, some shallow, some deep. She kept pumping all this time. Her cock steadily moved into the flesh tunnel that was convulsing around it happily. Kevin stared at the mask of ecstasy on her face, enjoying the powerful feeling of making another human burn up in lust. \n\nFinally, long after she had stopped cumming, her body, exhausted, collapsed into the chair. Both of them were breathing hard, enjoying the afterglow. They sat facing each other for a couple of minutes, Kevin feeling her cock softening deep inside him. Her hands roamed his body. Kevin buried his lips in her long neck and slowly kissed her.\n\n\"Oh, Melvin.\"\n\n\"Asshole,\" he gave her a love bite.\n\n\"I'll tell everyone that you're responsible for the hickey and I'll be the envy of Alpha Pi Alpha.\"\n\n\"Hey, what about me?\" Megan pulled him, and Kevin arched backward. She pulled his head back all the way for an upside-down kiss. \n\n\"What about me?\" Megan said when she was done tasting him.\n\n\"What about you?\"\n\n\"You only did her.\"\n\n\"Hmmm...\" Kevin tried to get off Ashley, but she grabbed his thighs.\n\n\"Where do you think you're going?\" \n\n\"You're a greedy pig, that's what you are, Ashley,\" Megan said.\n\nAshley kissed Kevin's chest and turned him around, so he was facing Megan but still sitting on her lap. \"There.\" \n\nKevin gently closed his hand around Megan's wet cock and started massaging it. His other hand went to her heavy balls and played with them. \n\nMegan closed her eyes. \"Harder,\" she whispered.\n\nKevin clamped down on her cock, and started pumping it. The glans appeared and disappeared into his palm. He leaned and gave the slit a lick, tasting her warm fluids. \n\n\"Harder on the family jewels.\" Megan clasped her palm around the hand massaging her balls, and squeezed. \"Oh yeah.\" She pulled her hand off.\n\n\"Hey, I know what I'm doing.\" Diana gave him a week-long full-time course on testicle pleasuring. He graduated with honors. Kevin placed his thumb on the side of her sack, and the pointer finger on the side facing her back. Very gently he held the skin between his fingers and slid them down the length of her sack. He let go and started over from the top, but not before he gave the seam a wet stroke with his velvety tongue.",
        "\"Oh, my God,\" Megan said.\n\n\"Oh, my,\" Ashley said. She was beginning to harden under him. \n\nKevin resumed licking Megan's testicles. He played around with them, keeping his tongue wide and flat, and painting a figure-eight motion around her sack. He traced his tongue from the back of her scrotum along the seam to the front.\n\nMegan's hard cock rose and heaved. The intensity of Kevin's talented tongue on her balls caused firecrackers to explode inside her head. Suddenly, she couldn't help it, and she peed. A yellow sprinkle arched from her cock. Some of it landed on Kevin's back, and some of it sprayed on Ashley's chest. \n\n\"Hey!\" Ashley roared. \n\n\"S...sorry. In...in...in your mouth.\" Megan huffed. \"Put me in your amazing mouth.\" \n\nKevin swallowed the shaft to the hilt; her cock went all the way down his throat. \n\n\"Oh, so good.\" Megan moaned. \n\nKevin did not back off; no matter that there was now an acrid taste of piss between Megan's legs. He continued to eat her, swallow her. His head bobbed, and he set a leisurely pace.\n\n\"I can't take any more,\" Megan moaned. \n\nKevin nibbled on her cock, making it jump in his mouth. He then sucked hard on her tip, slapping her pleasure points with his tongue. \n\nBeneath him, Ashley's cock was hard. It pointed up, lifting Kevin's less impressive cock like a crane. Ashley placed her hand on their poles and rubbed them together. \n\nKevin moaned as the first spurt from Megan's cock hit his palate. He closed his mouth and mewed happily at each new spurt of her steamy cum sprayed his mouth. \n\nMegan jerked and thrust hard, almost choking him. Her legs became weak, and she pulled out and sat on the bed, breathing hard. \n\nAshley growled. She tried to align her cock with Kevin's entrance. She hooked her arms under his armpits, turned him around to face her again, and then decided to stand up. Kevin gave a short scream of fright. He felt for a second that he was falling backward, but then a pair of strong arms stopped him.\n\n\"Hey, big sister, help me.\" \n\nMegan nodded, rose and hooked her arms under Kevin's armpits, freeing Ashley from balancing him. \n\nAshley aligned herself again and thrust powerfully. There was a momentary hesitation, followed by some pain, and then suddenly the tight starfish fluttered open, opening wide as his ass sucked in the broad head of her cock.\n\n\"Oof!\" Kevin cried. His head snapped backward, stopped by Megan's body, and his legs lifted higher. \n\nAshley held for a few seconds while Kevin tried to catch his breath. A pull, and she was almost out of him. Then a forceful shove, and she rammed all the way in, swaying her hips as she forcefully tore into the fiery cauldron of his inner sanctum. The brutality of it was also something new. He savored it, like a kid on his first visit to the candy store. He tasted his powerlessness and loved the flavor. \n\nAlmost like in a dream, Kevin felt the heat enter him, going deeper and higher until the cock sank in thoroughly, stretching him wide and filling his rectum. Slam! Ashley's pubes came to a grinding halt, squashed tight against his buttocks.\n\n\"Slam dunk,\" Ashley whispered. \"Don't close your eyes, look at me.\"\n\nAshley folded his legs backward and pulled them until they rested on her broad shoulders. What came next was a powerful, ruthless, mind-numbing mating. Ashley lunged with no remorse, holding nothing back. Muscles that could send a hundred-sixty pounds body for a slam dunk pushed her cock deep inside Kevin. Withdraw and thrust, withdraw and thrust, withdraw and thrust. Megan barely managed to hold on to Kevin's body, as she too was jerked back and forth. \n\nPound, pound, pound! pound, pound, pound!\n\nHis cock sent a spray of baby-making juice into the air, as Ashley's thick rod reached pleasure centers never activated before.\n\nPhut, phut, phut, phut, phut, phut, phut, phut. \n\nKevin's voice rose to a new crescendo.\n\n\"Ah, Ah, Ahh, Ahh, Ah, Ah, Ahh, Ahh, Ah, Ah, Ahh, Ahh!\"\n\nHe sang each time Ashley's cock was swallowed full and each time it withdrew.\n\nSlap, slap, slap, slap, slap, slap, slap.\n\nPlunging and plowing, Ashley fucked Kevin at a furious pace, stabbing into his clinging ass with a ferocity that made his walls vibrate. Her cock was devouring him, breaking him to pieces. He was giddy and faint, and his mind was in another place. \n\nAnother orgasmic fury hit him, and this time his cock wasn't even hard. His rectum walls started an uncontrolled spasm. They closed and opened, and sucked on Ashley's cock, tugging on it in a vice grip, pushing it out and then a heartbeat later sucking it back in, squeezing moan after moan from Kevin's lips.\n\nHe slumped backward into Megan, completely drained. His ravaged anal tissue merely rolled over the sliding cock, just content to engulf the big rod in a soothing embrace.\n\n\"Beautiful,\" Ashley mumbled, and maintained her relentless onslaught, plowing deep into the Kevin's burning anus. Ashley accelerated, as if it were a basketball game at the last minute, her team falling behind, everyone depending on her to tip the scale. Faster she went, like a machine. Her ass cheeks flexed again and again until she roared and slammed in, spraying Kevin's passage with burning sperm, filling him to the brim with her seed. \n\n-\n\nKevin ruffled his wet spikes and put on his shorts. \"Hey, Ashley, is my phone charged yet?\" \n\n\"Not so sure about that thing. Did you dig it up in a Mesa Verde excavation or something?\" Ashley activated Kevin's mobile. \"What is it, Samsung Zero?\" \n\nMegan dried herself on the bed after another shower. She didn't utter a word since their spontaneous menage a trois. \n\nKevin kissed her lips tenderly. \"Hey? What's going on?\" \n\n\"I...you know the feeling when you suddenly realize you just had a threesome?\" \n\n\"Yes. High five?\" Kevin said. \n\n\"That was your first threesome?\"\n\n\"Pffft, hell no. But this one was the best, because all the rest were imaginary.\"\n\n\"I bet your threesome fantasies never included your twin sister.\" \n\nKevin rubbed her hand. \"Do you regret what the three of us just did?\" \n\n\"You?\"\n\n\"Hell no! Twins? That's like the ultimate fantasy. Well, sort of.\"\n\n\"It was fun. But you're not allowed to tell anyone, Kevin. Ever!\"\n\n\"What do you take me for? A gentleman never kisses and tells. He shows a video.\"\n\nShe laughed \"You gotta promise, Kevin.\"\n\n\"What happens in Vegas. Look, Megan, we all drank a little too much from the Vin Jaune.\" \n\n\"Right. It was the wine.\" Megan pulled him in, and he felt her hardening. \n\nAshley finished drying herself and tossed the towel on the floor. \"I call dibs on the leftovers.\" She greedily dug into the plate, but then noticed Kevin looking at her. Suddenly, aware of her little tits standing to attention, and the rest of her display, she blushed and donned a robe, blowing Kevin an air kiss when she was decent.\n\nUnderneath the bravado, there was a sweet but vulnerable girl, insecure about her looks, just like her sister. Kevin always envied people who were at the top of the social and financial ladder. He always seemed to struggle for crumbs of recognition by his peers. \n\nBut it seemed that everyone was fighting a battle. Some were fighting a harder battle than most. Kevin thought of Helen. He suddenly realized that he missed her smiles, their banter, and the funny way she laughed at his jokes. He was going to see her in two hours, and the thought filled him with joy.\n\nHe pulled on his shirt. \"Life, it's not simple. Everyone is struggling.\" he said.\n\n\"What?\"\n\n\"Just something that occurred to me. Everyone is fighting inner demons, even Alpha Pi Alpha girls.\" \n\n\"Ooh, so deep.\" Megan pulled his shirt up and kissed his belly button.\n\n\"But true.\"\n\n\"That's life for you. What can you do?\"\n\n\"Be kinder to each other, I guess? Take on life with someone, so you don't have to face it alone? You never answered my question, Megan.\"\n\n\"Okay, I'll sit on your face if that'll make you happy.\"\n\n\"I never asked you that but hold on to that thought. I asked you about being my girlfriend.\"\n\nMegan sighed. \"I just finished my diploma, and I'm going back to Seattle in two weeks. So unless you're into long distance relationships...\"\n\n\"I'll be your girlfriend!\" Ashley jumped.\n\n\"No, you're not. Ashley is going back home too.\"\n\n\"I'll stay. I always wanted to major, in...what was what you said you're studying, Kevin?\"\n\n\"Computer Science.\"\n\n\"Yeah, that.\"\n\n\"Why are you so stressed about a girlfriend?\" Megan said. \"Ginger told me you just got out of a bad relationship.\"\n\n\"Because I'm twenty-one and I never had a real girlfriend.\" \n\n\"As opposed to a fake one?\"\n\n\"You know. Someone to walk hand-in-hand in the street with and dream together? I want...I need...someone.\"\n\nMegan gave him a hug that made his ribs protest. \"I wish I could take you to Seattle with me.\" \n\n\"I'll be your girlfriend.\" A tiny black dress stood in the doorway. Inside that dress was Sharon Richardson with her hands on her hips. Kevin thought that if there ever would be a Tinder commercial, that would be it.\n\n\"Sharon, meet door. Door, meet Sharon.\" Megan covered her nakedness with a blanket. \"Didn't your mom teach you to knock?\" \n\n\"I'm always welcome, so why bother?\" Sharon shrugged. \"I heard from the other girls that you're still here, Kevin. I came to apologize.\"\n\nKevin raised his eyebrows. The last thing he expected from this girl was regret.\n\n\"Sorry that I was an asshole yesterday. All I wanted was, well, you know what I wanted.\"\n\n\"Yeah, about that, you've got a minute to drink one glass of Vin Jaune, before the police storm this room and take you.\" \n\nShe sat down on the bed between him and Megan. \"You could have just said no, Kevin, you didn't have to run away.\"\n\n\"You're what, six feet tall, Sharon?\"\n\n\"Six-two.\"\n\n\"I'm five feet and... well, the number of extra inches depends on the bullshit mood I'm in. I never met a futa girl who couldn't KO my ass. It's stressful, in a rapey kind of stressful way.\"\n\n\"Sorry.\" Sharon kissed his cheek, then smelled his neck. \n\n\"I just showered. That's the second time you're doing this.\"\n\n\"There is something about your BO.\" \n\n\"Gross.\"\n\nSharon leaned over again and breathed deep. \"It's intoxicating.\" \n\n\"I know,\" Ashley said. \"Freakish, right?\" \n\n\"I shower regularly, and I always use deodorant. I don't smell.\" \n\nSharon shrugged. \"If you're looking for a girlfriend for all those things you said, then count me in. I'm not moving to Seattle.\"\n\n\"You wanna be my girlfriend?\"\n\n\"Don't feel intimidated because I'm out of your league. I'm out of everyone's league.\"\n\nMegan rolled her eyes.\n\nSharon's beauty was mesmerizing. Her lips sculpted, and her deep blue eyes painted by an artist. Kevin found it confusing. \"Didn't you use to date Justin Bieber, no, not him. What's his face? That Justin Bieber looks alike, the drummer from Arctic Banana. Robert?\"\n\n\"Rob Fulton. Only because my agent told me the tabloids would be all over it. He's a douchebag and the biggest phony. I want someone real, not made of plastic.\"\n\n\"Me?\"\n\n\"You're massive cute and super-hot. Half the girls in Alpha Pi Alpha are already in love with you. You said it. Spot on. Someone to walk hand in hand with and dream together. That was beautiful. My life kind of sucks ass right now and someone like you in it would be an immense improvement.\"\n\n\"Did you hear that, Ashley?\" Megan smirked. \"Sharon Richardson's life sucks. The poor thing.\"\n\n\"I'll call Ana to come over with her violin. Tell her to play something sad.\" \n\n\"Assholes,\" Sharon said.\n\n\"You're one of the top models in the Julian agency. Last week you went to a party with Snoop Dog and Eminem. Every time a movie needs a pretty face in the background they use you. Your life is a musical, with tons of sugar and cherries on top.\" \n\nSharon waved her hand in dismissal. \"I hate everyone at the agency. All the girls are snakes, and the photographers are dipshits. They call me Udders and Super-Cow behind my back.\" \n\nMegan laughed. \n\n\"Hey, be nice.\" Kevin kissed Sharon's cheek because apparently everyone was fighting a battle of sorts. Even supermodels. \"I'll think about your offer, Sharon. Right now, I need a huge favor from the three of you. Next Bid Day, please make sure that Ginger is selected.\"\n\n\"I thought she was an asshole,\" Megan said.\n\n\"It's critical to her. My mom always said that when people around you act small, you should be the bigger man. So please, do that for me, because I asked you to.\" \n\nAshley nodded. \"I'll make sure she's in. By the way, Kev, you've got a massive amount of unread messages on your phone.\"\n\n\"My ex has a hard time letting go.\" \n\n\"They're from 'Dad.'\"\n\n\"What?\" Kevin jumped out of bed and grabbed his phone. There were several messages from his father, both text messages, and WhatsApp. \n\nThe first one read. \"Call me, ASAP!\" \n\nThe next read. \"Kevin, the last check you sent me bounced. What happened?\" \n\nAnother read. \"Kevin, I need the money today. Please call me.\" \n\nHis father almost lost his failing business, and now he had to rely on his son's charity. He always told Kevin that if the monthly payments were too heavy of a burden, then Kevin should stop sending them. That was a pretence. A game people play, which made it possible for his father to keep a little dignity. Now the pretence was over.\n\nHis father's messages sounded desperate, and Kevin's heart squeezed. When he was young, he thought the only thing that could harm his dad was kryptonite.\n\n\"Kevin, what's wrong?\" Megan said. \n\nHe shook his head, too numb to speak. \n\nBut why the hell did the check bounce, when he had a sufficient amount in his account? It must be a mistake. Unless...\n\nKevin dialled, his fingers shaking on the numbers.\n\n\"Hey, Baby.\"\n\n\"Diana, what did you do?\"\n\n\"I called and called, and texted you, and...you didn't even bother to write me a single...\" She choked, and her voice broke. \"Something. You gave me the silent treatment.\"\n\n\"You deposited the safety check I gave Helen for the unpaid rent, didn't you? You stole the check and deposited it.\"\n\n\"Got your attention, didn't it?\" \n\n\"Diana, listen, and listen good.\" Kevin tried to control his voice. \"This is no game and no joke. My father is in deep trouble-\"\n\n\"Come home, Kevin.\" \n\n\"You selfish-\" He ground his teeth. Attacking Diana would be satisfying but counterproductive. Family before selfishness, his mother always said. \"I need that money ASAP. I'll tell Helen that you stole the check.\" \n\n\"That won't help you, baby. I just want to talk. Come home, and I promise everything is going to be alright. Come home, Kevin.\" Her voice broke, and she started sobbing. \"Please...please come home, Kevin. I just want to talk.\" \n\n-\n\nIt felt surreal, ascending to the top floor, up to the Brion penthouse. That place was like a sink hole. He could keep away but only so far. On the other hand, it felt like coming back home. A home that robs you of your dignity and rights, but home nonetheless. His life was a circle, and Diana reigned at its center. \n\nHe opened the door with his key, intending to go straight to Helen, but Diana waited in the hallway. Her red hair shone in the setting sun's light. A devil woman, painfully beautiful. Her eyes were puffy and red. When Kevin entered, the dam broke open again. She ran to him and gave him a crushing hug. Her slim form enveloped him and her smell, the familiar daffodil perfume she used, flooded his nostrils. That was Diana. Beauty and the beast sharing one body, abusive and loving at the same time. He melted into her like one puts on an old robe. \n\nShe kissed his eyes, his mouth, his neck, his ears, countless times. \"I'm so sorry, baby.\" She sobbed. \"I never meant to.\" \n\n\"Diana.\" He said tenderly. \"Please stop.\" \n\nShe hugged him tight, her head on his shoulder. \"I never meant to hurt you.\" \n\n\"Diana, my father needs the money you took.\" \n\n\"It's okay.\" \n\n\"No, it's not. My dad borrowed money from the O'Sullivan brothers. These guys don't play games. If he doesn't come up with the monthly payment they won't take him to court, they'll take his car, house, and business. Then they'll go medieval on his ass.\"\n\nShe pulled back. \"I know all about your dad, Kevin. He has nothing to fear anymore.\" She hugged him again. \"I can't believe that you're here.\" \n\n\"What do you mean he has nothing to fear?\"\n\n\"I bought your dad's promissory note from the O'Sullivan brothers. They'll never bother him again.\" \n\n\"What? How?\"\n\n\"I'll show you.\" She ran to her room, pulling him behind her.\n\n\"Diana, wait. What do you mean you bought it? Where the hell did you get a 125 K from?\" \n\n\"Doesn't matter. All that matters is that you're here.\" She half-dragged him into the familiar room. The floor was again covered by piles of laundry. Diana pulled a ring binder with several papers from her closet and opened it on Kevin's old desk. \"See? That's it.\"\n\nKevin checked it out. It was indeed the loan his father took against his electronics store. The terms of missing payments included selling the business.\n\n\"How?\"\n\n\"It's okay, baby. Your father is okay. I took care of everything. I just want things to go back to normal, just like they were two weeks ago.\" \n\nWhat they had two weeks ago was as normal as Nina in Black Swan. Kevin tried to wrap his head around the implications and went numb. \"You can't just pretend that nothing's happened.\" \n\n\"I hurt you; you hurt me. We hurt each other. Doesn't matter. We're bigger than that.\"\n\n\"I hurt you?\"\n\n\"You slept with Nadine.\" \n\nKevin nodded. \n\n\"You're not even trying to deny? I don't care, Kevin, I love you. I forgive you.\"\n\n\"You forgive me?\" He shook his head. \"Amazing. What if I say no, Diana?\"\n\n\"What?\"\n\n\"No to going back.\" \n\nHer eyes became round, he thought that she was about to cry again, but then they became hard. \"The promissory note gives me the right...\" She paused. \n\nThe right to sell his father's electronic shop for peanuts and still sue him for the rest of the debt. His father was not out of the woods yet; he just traded his creditor. With the O'Sullivan brothers, it was simple. They were all about sucking his dad dry of every cent they could put their greedy fat hands on. Diana wanted something else entirely. \n\n\"You borrowed money from Nadine, didn't you?\" \n\n\"You left me no choice, babe.\"\n\n\"One hundred and twenty-five grand? Jesus, you stupid- Do you have any idea what this woman does for a living? What did she ask for in return?\" \n\n\"You left me no choice, babe.\"\n\nKevin sat down on the bed, defeated, and buried his face in his hands. He was trapped. Forever. The deal Helen had offered, at least had a foreseen future where he would be out of jail. 'Be my little sister's boyfriend for a year.' Now Diana had his father by the balls. He was going to grow old side by side with this devil woman. \n\n\"Hey.\" She kissed his neck and pried his hands. \"Hey.\" \n\n\"I...\"\n\n\"Why is it so difficult to accept?\" She said. \"We'll just pretend that the last two weeks never happened. Nothing needs to change.\" \n\nHe nodded. \"You won, Diana.\"\n\n\"It's not a war.\"\n\n\"Check and mate. I'm all yours.\" \n\n\"Stop it, baby!\" He felt her hands on him, rubbing his back. She unbuttoned his shirt and nuzzled his neck. \"I love you so much. You know that I do.\" \n\nThat was Diana 101. Extortion and threats on the one hand, talk of love on the other. \n\n\"I've made a lot of decisions these last two weeks, Baby. I'll be different, you'll see. I'll be a kinder person, not just to you, to everyone. I'll never take you for granted again. I realized how important you are to me. I love you.\" \n\n\"You're not in love, you're obsessed. It's unhealthy.\"\n\nShe kissed the ridge of his nose, his lips, and ears. She pulled his shirt off, and kissed his chest, sucking his sensitive nipples. She then kissed his abs, planting her luscious lips on each one. ",
        "\"Oh god, your smell, baby, I missed it so much.\" She pushed him on his back, and frantically unbuttoned his jeans. \n\n\"Take your pants off,\" she huffed.\n\nKevin obeyed. It was painfully familiar. \n\nDiana was out of her top and shorts in a blink, standing before him, her majestic nakedness on display. He knew every nook and every inch of it by heart and could recognize her in the dark. The birthmark she had under her left tit. The little scar she had near her bellybutton from an old surgery. The curve of her waspy waist. The Big bird tattooed on her heaving cock. She was the first woman he ever saw naked. She was his girlfriend, his first and probably the last. \n\nHe knew the drill. Kevin sat up and took her cock in his hands, pursing his lips. \n\nDiana surprised him by pushing him on his back again. She got hold of his cock and shocked him again as she took it into her loving mouth. \n\nKevin bit his lip.\n\nHer fingers held around the shaft where she gripped it at its base. She sucked on the head, her tongue everywhere, and then she began to go down on it, not stopping until her nose was pressed against Kevin's stomach. She then started to slowly fuck her face on that cock, letting it all the way out, sucking on the head a bit, then taking it all the way into her mouth and throat.\n\nShe saw him staring at her, questioning, pulled out and winked. \"Eye contact, baby. When giving head, always keep eye contact.\"\n\n\"You meant, Baby Butt.\"\n\nShe shook her head. \"None of that anymore.\" \n\nHe stared at her as she continued to pleasure him. This was the first time she had taken care of him. \n\nShe wrapped her fist around the shaft of his cock. \"Having fun yet?\" She said, squeezing his cock and flicking her tongue through the pearl of pre-cum that formed at the slit. \"And you are so tasty,\" she added, driving her tongue into his slit, then fastening her lips on it and sucking audibly.\n\n\"Mmm...\" She said, licking her lips. She then extended her tongue and let it slide along the underside of Kevin's cock, until just the head was sitting inside her mouth, before closing her lips around it and sucking, her cheeks hollowing with the effort.\n\n\"Oh,\" Kevin moaned.\n\nDiana swallowed his cock so fast he forgot to breathe. Her mouth gripped him like a vise, kneading his shaft during her descent and withdrawal. She nibbled on it with her teeth, making him jump in her mouth. \n\n\"Gen...gently.\" \n\nHer black eyes were on him the entire time, reading his reactions. He hated the power that she had over him, but he had to admit his body had developed a Pavlovian response to her beauty. His balls were tight already. \n\nUp and down. \n\nShe raised her head and placed her index finger on his lips. \"Suck on\n\nit, baby.\" \n\nKevin opened his mouth and sucked on the finger like a desperate baby. \n\n\"Good b...\" She paused. Diana pulled her finger out of his mouth and stuck the wet appendage in his overused rectum. She played around until she found the prostate and Kevin tensed. Her lips went back to sucking his cock while she fingered him. \n\nThe combined bobbing and fingering was so stimulating, so intense, he never knew what hit him. His orgasm was so sudden it virtually caught him off guard. One second he was enjoying the intense sensations, and the next he was cumming forcefully into her mouth. \n\n\"Ah, ah, ah...\" His back arched. \n\nDiana rose and opened her mouth, showing a now-breathless Kevin the puddle of cum on her tongue. She spat it into her hand and proceeded to rub her cock. \n\nKevin knew what she wanted, so he slid closer to her and locked his legs around her waist. He lay back on the bed as she grabbed his hips and pulled him onto her cock. Then she reached forward and pulled him onto her lap. His legs snaked around her thin waist as he settled fully down onto her throbbing penis.\n\nOh, God, I missed that beautiful ass so much,\" she said. \"I can't believe that I almost lost you.\"\n\nHer arms slid around him, and her lips sought him for a deep kiss. Tongues were rubbing and wrestling in each other's mouth as her excitement built. Kevin could taste his own seed on her lips and tongue. Their hips were grinding as Diana was engulfed by Kevin's eager ass. \n\n\"Reverse cowboy, Baby.\" \n\nKevin swivelled dutifully. He was flexible enough and could do it without letting her cock out of him. He turned around until he sat with his back to her, her cock still etched deeply into his bowels. He knew what she wanted. \n\n\"Lean forward.\"\n\nKevin leaned forward, hands resting on her calves. \n\nShe grabbed his legs, folded them back and placed them on her stomach, massaging his toes. \"Ride me, baby, make me blow a fuse.\"\n\nKevin started pumping himself on her cock. His small ass went up and down on her slick shaft, filling the room with the wet noises of lovemaking. \n\nDiana moaned and placed both hands on his ass cheeks, rubbing them. \"God, this is good,\" she exclaimed, revelling in the ability to do whatever she wanted. \n\nShe possessively cupped the firm flesh while Kevin's ass moved up and down. Each time his bottom slapped her pelvis he ground his ass on her meat pole. \n\nDiana kept playing with the soles of his feet. \"I'm so close baby. I haven't bust a nut in two weeks.\"\n\nKevin increased the tempo, his ass slapping hard as he came down.\n\nDiana watched as her thick pole was swallowed by the tight ring of his rectum. It seemed to be stretched to the max when she was inside him, and it was the most beautiful sight in the world. Kevin twisted his ass with each stroke, getting lots of skin contact before flattening against her. Diana's cock pistoned smoothly in the hot, tight caress of his back tunnel.\n\nDiana's orgasm pooled in her balls, and the tension radiated out through her limbs. \n\n\"I'm...I'm cumming again!\" Kevin moaned, and then Diana felt the spasms rip through his ass. Shaking and grunting hoarsely through another orgasm, his climax launched her own, and Diana blew her load deep into his bowels. \n\nBoth grunted and went rigid. Their bodies were synched. \n\n\"I love you, Kevin Baby.\" Diana rubbed his ass. \"I missed you so much.\"\n\nKevin hung his head, panting. Then he pulled out. Her cum dripped from his ass down his leg. \"Yeah.\" \n\n- \n\n\"Is Helen working today?\" Kevin dried his hair. He just had his third post-sex shower since morning.\n\n\"Why?\" \n\n\"You always work Sunday night and me and Helen catch a movie every Sunday night. But she didn't call me today, and she didn't answer my messages.\"\n\nDiana's face twisted and Kevin realized his mistake. He shouldn't rub in the fact that he remained in contact with Helen. \n\n\"She didn't feel too well this morning. I think she's in her room, sleeping it off.\" \n\n\"What's wrong with her?\"\n\n\"Who gives a fuck?\" Diana decision to start on a new road of kindness lasted forty-five minutes. \n\nKevin pulled his clothes on and went to check out for himself. \n\n\"Helen?\" He knocked gently on her door. There was no answer. \n\n\"Leave her alone, Baby.\" Diana came behind him. \"Let's go to bed. I wanna spoil you some more.\" \n\nKevin knocked again. \n\n\"Maybe she's at work?\" Diana said. \"She must have gone out when I was away. If she wanted to go out to see a stupid movie she would have called you.\"\n\n\"She would have called me either way.\" \n\n\"She's not really your friend, Kevin.\"\n\n\"What?\" \n\n\"Don't feel bad about it, Baby. She's like that.\"\n\n\"Like what?\"\n\n\"Cold fish. She doesn't have feelings like regular people do.\"\n\n\"You think?\" Kevin pushed the door open and turned the dimmer halfway.\n\nHelen was curled on her bed under the blanket in a fetal position, her magnificent golden hair splayed across the mattress. She raised her head when he turned on the light and looked at him bleary-eyed. Her brow was red and her green eye bright with fever. \n\nShe blinked in the dim light but suddenly noticed it was Kevin and her beautiful face lit up with a smile. \"Hey.\" \n\n\"Hey yourself.\" Kevin felt a lump in his throat. At first, their dynamic was based on hate, then it turned into sympathy born of pity. It was something else entirely now. During the last few weeks she became important. Helen was someone he talked to every day and shared his small victories and big defeats with. Going back to the Brion penthouse had a huge silver lining, and that silver lining lay on the bed looking like she needed help. \"What's wrong?\"\n\n\"I'm a bit under the weather.\" Helen's teeth chattered and she shivered. \n\nKevin crossed the room to her bed and lay his palm over her forehead. \"Jesus, you're burning up.\" He ran to the bathroom and returned three seconds later with a thermometer. \"Open wide.\"\n\nHelen gave him her \"Oh, please\" look, but she opened her mouth and took the thermometer nonetheless. \n\n\"One hundred and five. My prognosis is that you're either an oven or that you're very ill.\" \n\n\"I took something to help bring it down.\"\n\n\"Are you serious?\" Kevin ran to the kitchen and returned a minute later with a towel wrapped around some ice cubes. \"Put that on your forehead. Diana, help her get dressed, she needs to see a doctor ASAP.\"\n\n\"She said she's okay.\" Diana twisted her mouth.\n\n\"I can fry an omelet on your sister's forehead.\"\n\n\"She probably just ate something. Let's go to bed, Baby.\" \n\n\"I'm trying to see things from your perspective, Diana,\" Kevin raised his voice. \"But I just can't stick my head so far up my ass.\"\n\n\"Hey, you're overreacting,\" Helen smiled weakly. \"I just need something for my stomach so I can sleep it off.\"\n\n\"Am I the only adult in this house? Doctor! Now!\" \n\n-\n\nThe tall, young doctor looked tired. He was obviously a resident; attending physicians almost never shared the nightshift load in the North Western Memorial Hospital. He ruffled through Helen's blood test results and CT scan, and looked troubled enough to cause worry. However, Kevin crossed his eyes behind the doctor's back, and Helen had to bite her lip to keep a straight face. She mimed choking herself, to make him stop. \n\nThe fact that Kevin was here with her was a massive boost to her morale. She looked at his smiling face and thanked the gods for sending him back. His two-week absence had been torture. Whichever way she looked at it, she had to admit she dearly needed him in her life.\n\n\"Sorry?\" The doctor said. \n\n\"I didn't say anything,\" Helen said.\n\n\"Is she going to die, Doctor?\" Kevin asked. \"Because I want your 75-inch T.V if you do, Helen. Can you put that in your will?\"\n\n\"Excuse me, who are you exactly?\" The doctor turned to Kevin.\n\n\"I'm Kevin.\" Kevin shook the doctor's hand warmly.\n\n\"No, I meant are you her family? Because only family members are allowed to escort the patients into the examination room.\" \n\n\"In that case, I'm her dad.\"\n\n\"You look a bit young.\" \n\n\"Then I'm her son. Pick the one you like best; I'm not choosy.\" \n\nThe doctor realized that Kevin wasn't going anywhere soon and turned back to Helen. \"Do you smoke, Mrs. Brion?\" He peered into her eye with a small flashlight.\n\n\"Define smoke?\" Kevin said. \"She smokes a lot of things. I saw her puff weed. In fact, those blood tests, she'd smoke them if you won't watch her carefully.\"\n\n\"I don't smoke,\" Helen said. \"Don't listen to him, he's delusional. He has this delusion that he's funny.\" \n\nThe doctor sighed. \"Do you drink?\"\n\n\"Only in the morning, with her breakfast,\" Kevin said. \"And lunch...dinner too. In fact, when she's asleep I drip vodka into her mouth with a nozzle. That's how she likes it.\" \n\n\"Do you exercise regularly?\" The doctor said.\n\n\"She masturbates a lot,\" Kevin said. \"Does it count?\" \n\nHelen started laughing, but it was too painful on her stomach. \"Kevin!\" \n\n\"Sorry, I missed that.\" He pointed at her and then at himself. \"There's no one else I know who is embarrassed so easily and so beautifully.\" \n\n\"Go stand in the corner!\" \n\n\"Okay. But if you decide to cut her open, Doc, and you find a hundred dollar bill inside, it's mine. She ate it. She does that too.\"\n\n\"Corner! Now! No one is cutting me open.\" \n\n\"Actually...\" The doctor said. \n\n\"What? What 'actually'? 'Actually' wasn't part of the plan.\"\n\n\"You've got appendicitis, Mrs. Brion.\" \n\n\"Can't I get a shot or something?\" \n\n\"It's a simple procedure, but it's very urgent. It's a good thing that you came tonight. Smart call.\" \n\nKevin pulled out his mobile and started recording. \"Can you repeat what you just said, doc? I wanna play it to her later. Repeatedly.\" \n\n-\n\nHearing came back first. A machine droning on and on a constant beep, beep, beep. Her sense of smell came back second. A draft of air hit her face, warm with a tincture of bleach. Sight came next. Above her, the ceiling was composed of polystyrene squares laid on a grid-like frame. Memory came last. She had surgery. Helen spent months in places like this after her injury, going through several surgeries and lengthy rehabilitation. She hated hospitals. \n\nThen she remembered that Kevin was back, and the rest didn't matter at all. \n\n\"Hey.\" She croaked. \n\nSomeone offered a glass of water to her lips, and she gulped greedily. Another one was provided immediately.\n\n\"Hey yourself.\" Kevin's worried face appeared from behind and touched her forehead. \"Your fever is down. Any pains? The nurse said to call her if you wake up and have pains.\" \n\n\"Nothing I can't handle. What time is it?\"\n\n\"Two AM.\" \n\n\"How did I do?\"\n\n\"Great. The doctors said you get top marks for lying prone during general anaesthesia.\" \n\nHelen laughed and then winced because it hurt. \"Idiot. Everything went okay? All is back to normal?\"\n\n\"Minus one appendix.\" He touched her forehead again and compared the temperature to his own. Helen liked his touch. \"Well, plus one octopus arm that I told them to install. They already punched a hole going in, so why waste such an opportunity?\"\n\n\"Why an octopus?\"\n\n\"Now you can lift the remote with those little suction cups while using your other hands to eat Jambalaya.\"\n\n\"Awesome.\" \n\n\"At least it can be a great conversation piece. Think about it. You're sitting with your friends. Awkward silence all around because all the topics had been chewed to death.\"\n\nHelen nodded. \"Then you go, 'have you heard about Helen, the girl with the octopus arm?'\"\n\n\"Boom.\" \n\n\"Yep, being more of a freak is what my life dearly needs right now.\" She grunted and tried to rise.\n\n\"Where do you think you're going?\" \n\n\"I don't need suction cups, I need to pee.\"\n\nKevin pushed her down. \"The doctor said no getting up until tomorrow.\"\n\n\"I need to pee.\"\n\n\"There you go.\" Beaming, he pulled a grey pot from under the patient bed.\n\n\"I'm not peeing in that.\"\n\n\"Want me to help?\"\n\n\"Turn around and cover your ears.\"\n\n\"Why?\"\n\n\"I'm serious, Kevin.\"\n\n\"Okay.\" He complied. \"Not sure what's the big fuss is about. You've got a new trick down there?\" \n\n\"Shutup.\" Relief hit her as she emptied her bladder into the pot. \"Call on a nurse to take it, please.\"\n\n\"Take it where? Do you think you'll need it later?\" \n\n\"Idiot.\"\n\n\"Why bother a nurse? I'll take it.\" \n\n\"I don't want you to look at it.\" \n\n\"And I'm the Idiot?\" He took the pot to the room's small bathroom. \"Oh my god, Helen, I accidentally looked down. It's...it's...so special.\" He shouted from the bathroom. \"That yellow liquid that came out of you. I bet only seven billion people and every creature on the planet does that.\" \n\n\"Stop making me laugh. My stitches hurt like a bitch when I do.\" \n\nHe came back, sat on the sofa near the bed and opened his ancient laptop.\n\n\"What do you think you're doing?\"\n\n\"Huffman lossless compression on an eight-bit image using C++. It's for my Computer Vision course.\"\n\n\"Huffman who?\"\n\n\"Total douchebag. He had no heart when it came to stupid Computer Science students.\"\n\n\"I meant you don't need to stay here. Take my car and go home.\"\n\n\"The doctor said that it's best if you have a family member around for the next 24 hours. They're understaffed anyway; some salary dispute between the nurses and the management.\" Kevin yawned into his palm. \"I mean, what if you need to pee again or god forbid, even poop?\"\n\n\"I can call Diana.\"\n\nKevin raised his eyebrow.\n\n\"Good point. But go home. Seriously. I'll be okay.\" \n\n\"What are you talking about? Got me my Huffman compressing right here. Got my best friend, Helen Brion, on my left. Where else do you think I'd rather be?\" \n\n\"You don't have too.\"\n\n\"Tuck your octopus limb and go to sleep you annoying woman.\" \n\nHelen relaxed and lay on her side, watching him as he clicked on the keyboard. From time to time he cursed softly. Helen decided that she'll have a word with that Huffman guy, whoever he was. \n\n\"You and Diana are back together?\" She said in a quiet voice.\n\nKevin nodded, but his face was unreadable. \n\n\"So it turned out for the best, right? I mean, at first you had to...but now you returned to Diana because you wanted to, not because you feel like you owe me money, right?\" Her voice trembled and she sounded hopeful. \"I know she can be terrible sometimes, but you didn't come back to her because you feel like you owe me money, right?\"\n\n\"I don't feel like I owe you money, I really owe you money.\"\n\n\"Please, stop.\"\n\nKevin nodded.\n\nShe didn't miss the fact that he dodged her question about Diana. However, she didn't want to deal with the reasons. Most of them meant that he would be gone from her life again, probably for good. She buried them under the lies people sometimes tell themselves when facing reality is too harsh.\n\n\"Kevin?\"\n\n\"They didn't really install an octopus arm. I wanted them too, but the doctors here have no vision.\"\n\n\"That first night that we met?\"\n\n\"What about it?\"\n\n\"I called you childish.\"\n\n\"I am childish.\"\n\n\"Not where it counts.\" \n\nKevin shrugged and kept typing. \"We said a lot of shitty things that night. Water under the bridge.\" \n\n\"I'm so sorry. What I forced you into, that's...it was so ugly. I'm so sorry.\" \n\n\"I'm not. It changed my life, on so many levels. I...\" He looked up. \"There are some things that I regret. Getting to know you is not one of them.\" \n\nShe wanted to tell him that he didn't just change her life, he flipped it upside-down, but she didn't. \n\n\"Kevin?\" \n\nHe stopped typing and turned to her, purple eyes questioning. \n\n\"I'm...\" \n\n\"What?\"\n\n\"I'm...\"\n\n\"Yeah, I know.\" He squeezed her hand lightly. \"Go to sleep, Helen.\"\n\nThe last thing she remembered before the sandman took her was Kevin punching on the keyboard with his right, while he kept holding her hand.\n\n-\n\nHelen woke up.\n\nShe wasn't in hell, and definitely not in heaven. She woke up in a world that was neither good nor bad, but a mix of both.\n\nHelen was hospitalized for six months after her injury, so waking up in a white bed to the buzz of fluorescent and the smell of bleach was nothing new. However, there was something this morning that was shockingly different. \n\nShe was calm. \n\nAfter her injury, she used to lie awake for hours. Grief, more than pain had a lot to do with it. She mourned her lost beauty, she mourned her fallen comrades but most of all she mourned the death of Andy whom she loved from afar. Since that fateful day in Iraq, she had countless nightmares every night. Dreams about going up in flames, of screams, and skin melting on bones. \n\nNot tonight. \n\nThe sunbeams sneaked through the high window and played on her white mattress like naughty children. She was a performer on a stage. The beam of light searched, until it found her and touched her face. Helen lay quiet, staring at the ugly ceiling, feeling refreshed, because for the first time in years her sleep had been serene. Not a single dream. No fire. No screams. Just blissful sleep.\n\nPerplexed, she decided that with her appendix some of the poison that she had in her also came out. Then she smiled at the stupidity of that thought. It must have been something else. ",
        "Growing up different, she had built high walls around her to shield herself from sorrow. From priests who called her an abomination, and from haters who called her worse. From people who were born 'normal'. People like Kevin. She could feel his warm hand still clasping her own, and she realised that inside the fist raised in hate there was a palm. You just had to look, because Kevin was right and kindness was everywhere. You just had to look. \n\nHelen turned her head. Kevin was snoring lightly on the couch. His left hand rested on her bed, still holding her hand. His head drooped to his chest sometimes during the night, and he was drooling slightly on his shirt. His laptop rested closed on his knees. She hoped he gave that Huffman dude a run for his money. \n\nWincing, she got up, careful not to wake him. She pulled the hospital gown around her, and placed an unsure leg on the cold tiles. Because of the fresh stitches, stretching hurt like a bitch, but Helen was the toughest girl in the northern hemisphere. She limped to the room's closet and found a hospital blanket in there. She then limped back to the couch and gently wrapped his slim body in it. \n\nKevin kept on snoring. \n\nHelen took a deep breath in the chill morning air and thought about everything for a very long time. \n\nHappiness is rare. It's a delicate golden string that shimmers at the corner of your eye. One wrong move, one wrong touch and it can slip through your fingers. Sometimes happiness is just a friend who has your back. Someone who cares enough to stay the night at the hospital with you, who makes you suddenly realize that you're not alone in this world. \n\nHelen knew how brittle happiness was, and she didn't want to jinx it. However, she wanted a small memory. Something she can keep, just for herself. She leaned over Kevin's sleeping form and gave him the tiniest kiss on his lips. Barely a brush of skin against skin. \n\nKevin sighed. His lips moved as if he was about to say something, but then he just changed position and a sudden smile brightened up his sleeping face. \n\nTo be continued...\n\n*****\n\nYet again we find ourselves at the end of another chapter. As I always do, I would like to ask you shamelessly (okay I'm blushing a bit) to punch the stars to show me you care, and maybe even leave me a note.\n\nSee you next chapter, hopefully soon."
    ],
    "authorname": "allthatisfuta",
    "tags": [
        "futa",
        "futa on male",
        "dickgirl",
        "dickgirl on male",
        "futanari",
        "futanari on male",
        "shemale",
        "shemale on male",
        "romance",
        "threesome"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/family-issues-ch-06"
}