{
    "title": "TT Spalding-The St. John Case",
    "pages": [
        "We are leading up to understanding all of the characters that fill TT Spalding's life but the path is sometimes winding and uncertain. This is a prelude to Maggie's story, which will follow shortly. For all you fans of TT, please enjoy and be patient. \n\nEdited by Angel Love as always. Several changes in this version are at her suggestion so if you see mistakes, they are mine.\n\nTT Spalding, PI &ndash; The St. John Affair.\n\nI know I promised Maggie I would work on the final report for a case we had just finished, but I didn't feel like working right now. I put down my copy of Mickey Spillane's novel, I, the Jury, his first Mike Hammer book and one of my favorites (well, hell, weren't they all?) and turned on the computer. When it finished booting up, I opened the My Document folder and clicked on the file labeled The Cobra. That was the temporary title of my novel: the one that was going to be published as a ghost written story. You know, under Mickey's name as 'Inspired by'. People did it all the time so why couldn't I?\n\nI scrolled down to Chapter 3 and began reading:\n\nI raised my head carefully, looking over the top of the bank where I lay concealed from view. There were three of them. I spotted the first two pretty easy. Very sloppy of them, but that was good for me. Then I saw the third when he struck a match, lighting up. Stupid, but also good for me. I slid back down the little rise and checked my gun. I was loaded, one in the chamber, and two extra clips. I was ready. I moved slowly around the rise and snuck a quick look before running, hunched over to minimize my outline, to the packing crate I noticed coming in. I was in position.\n\nI waited, looking for him to come into view. They had arrived a few minutes ago and were just now walking down the ramp to the dock. There he was! The Cobra! The man that controlled everything that went on around these docks. And he had her with him. His squeeze, his mistress and the subject of my dreams. I could just see her golden locks peeking out from under the scarf she wore. I could hear the tap of her spike heels against the concrete surface, matching his heavier sounds. They moved to the middle of a section illuminated by a single overhead light, she two steps behind him, and stopped.\n\nAfter a small delay, the first two I had spotted moved into the light carrying a suitcase. This must be the stuff. The newest drug on the market. The latest designer drug for the masses. The formula was included and the purchase price was a stiff 2 mil. I had heard on the grapevine that the payoff was tonight.\n\nI sat back with a satisfied grunt. Damn! This was good stuff. I had it going now. All I had to do was decide how to make it go down. Mike Hammer would take it slow and careful, like he did in My Gun is Quick so that's how it was going to be. Mike knew his stuff. All I had to do was have him follow the Cobra back to his car and . . . .\n\nMy office door opened. \"TT, are you working on that report for Mr. Chambers? You promised to give it to me by 3:00 and it's already 3:15. You're not working on that damned book again are you?\"\n\nThat was my Maggie. My rock, my love and my soul mate, but not my muse. Never my muse! She didn't understand the literary drive that was in me. I had to write this tome, my tribute to Mickey Spillane. It was a curse, but there it was. It had to be done. I promised Mickey's spirit the night he visited me. And yes, he visited me. And no, damn it, it was not just a bad case of gas like Maggie insisted! Mickey came to me! He said \"TT, you have to write this book for me. Make me proud!\" I kid you not!\n\nMaggie walked in and spun the monitor around so she could see it before I thought to blank the screen. Damn the woman was fast. Fast and sneaky. But God was she beautiful when she was angry! She looked at the screen, put her hands on her hips and glared at me. I smiled back while I raised my eyebrows in what I hoped was a sexy move.\n\n\"Damn you Theodore Terrell! How many times do I have to tell you. We don't have time for this. We need the money and that report to Mr. Chambers will bring in the rest of the $15,000 he owes us. We need it now, not in a few weeks or a few months. Now! So get cracking on it and don't you dare stop till it's finished. Do you hear me?\"\n\n\"I hear you babe. And you know how hot you are when you're mad at me? Why don't you come here and sit on my lap while I finish that report. I promise I'll work on it and not try to ravish you.\"\n\n\"Not a chance buster. I want that report and then we can talk about other things. If you get it done soon, I just might close the office a little early and then you and I can discuss our options. Maybe a visit to the stockroom to inventory the supplies?\"\n\nThe stockroom! I groaned under my breath. Oh God, that was not playing fair. Maggie had made the stockroom the scene of some of my best erotic dreams. She knew just what buttons to push, that's for sure. I tried to stop myself from drooling. \"I'm on it now babe. I'll get it done in no time. Just you get yourself ready for old TT.\"\n\nShe smiled at me, taking the sting out of her earlier words and walked toward the door, giving me a great view of her backside. She was doing her best to remind me of what was waiting for me. I knew. Oh yes, I knew! I saved and closed my latest work and opened the report to Ted Chambers. That case was closed and the bad guys were identified. Ted had cleaned house once he had the facts and he was very grateful to Bruno and I for finding the guys responsible for his losses. Bruno had taken just six days to nail them in the act. Bruno earned himself a nice bonus for that job. A cool grand!\n\nI was pounding the keys and making some final changes when Maggie stuck her head in the door again. I was about to tell her to back off and let me finish when she said very slowly, \"TT, you might want to let that go for awhile. There's someone here you'll want to talk to.\"\n\n\"But baby! It's getting late. What about the report and the stockroom. Come on Maggie. Not now! Not after you promised!\" I was panicked. No stockroom? No Maggie on my lap? No. . . . Crap!\n\nMaggie just chuckled, pulled back, said something to someone and opened my door. I don't know how to say this any different except that my heart stuttered in my chest and my eyes grew wider than I knew possible as this vision walked into my humble office. How do I describe that moment? Let me try for posterity. \n\nShe was tall, about 5'10\" tall. She was slim and at first glance appeared skinny but she wasn't. You could tell right away that under that simple snug white dress that covered her completely from neck to knee, she was amply endowed. Her legs were magnificent, even the little I could see between the bottom of that tight dress to the top of those high boots with the three inch hells. I noticed her chest of course. My weakness. She had to be a C cup at least and maybe more. Her waist was tiny and flared down to hips that were perfect. I couldn't see the backside but I knew it was also perfect. And the face! I had imagined angels when I was a small Catholic boy in the Bronx and this was what they looked like. Skin, pale and almost translucent, eyes of icy blue and slightly slanted, indicating some oriental blood. A mouth pouting, wanting to be kissed, lips slightly parted showing a hint of perfect white teeth. Her hair was platinum, perfectly straight, chin level and cropped close to her skull, combed over her right eye. \n\nI stared at her for what seemed like minutes but apparently lasted only seconds. She stood there, almost as if she was used to my kind of reaction and waited. Maggie stood in the open doorway, a slight frown on her face as she watched me. The frown was not terrible so I knew she also expected my reaction. I looked into her eyes and she smiled. Apparently I was forgiven. Maggie closed the door and walked over to her side.\n\n\"Mrs. St. John, this is TT Spalding, my husband. TT, this is Tiffany St. John. She has something she wants to show you. She would like our help with it. I'll join you if you don't mind. I've closed the office door so we won't be disturbed.\" \n\nI motioned our guest to the straight back chair in front of the desk. The one I kept for clients to make them not want to stay and chat. For the first time, I wished I had more comfortable chairs. Maggie took the only comfortable one, next to me. She leaned over to whisper, \"Be good now.\"\n\n\"How can I help you Mrs. St. John? What is it you want to show me?\" I tried to slip into my professional mode. It was difficult with her sitting across from me and my Maggie sitting next to me. All I could do was try to maintain my cool and not let my desires cause the tent in my slacks that Maggie could see all to easily get any bigger.\n\nShe handed Maggie a CD that she took from her purse. \"Please put this in if you would. And before it starts, please don't be embarrassed to comment. You have to see this before you understand why I need your help.\"\n\nMaggie slipped the CD into the player, turned on the TV and pushed play on the remote. We settled back to see what brought Mrs. St John into our office. I looked over at Maggie but she simply shrugged not knowing what was coming. So, we watched.  \n\nThe scene opened with a view of a large bed in a room in some motel that could have been anywhere. The camera was fixed and the view didn't change but as we watched, a naked man moved into the view followed by a woman dressed only in a thong. Her back was to the camera but there was little doubt that we were watching the beautiful ass of the woman sitting across from us. It was confirmed as she slid past the man and sat on the edge of the bed turning and facing the camera. She appeared to be giggling and saying something to the man. He then pushed forward, and the woman took him into her mouth. I reached for the remote to push stop, but Mrs. St. John spoke.\n\n\"No! Let it play! I know exactly what's on this so don't worry on my account. I can't afford to be shy. Just watch. Please!\"\n\nI sank back, embarrassed beyond belief but also mesmerized by the scene. It was like some of the worst porn movies I had seen. Grainy picture, no sound, two actors who didn't even seem to like each other but were doing a job. But in this case, I wasn't sure what to think. It went on for another ten minutes, skipping through more of the same and the two on screen did everything possible. I was amazed at his stamina and her willingness. But that was all it was. Just two people having hot sweaty sex. So what?\n\n\"I'm not sure what we're supposed to make of this other than you seem to have few reservations. Is that what you wanted us to see? You and your husband having sex? I'm sure that wasn't making love.\"\n\nMrs. St. John simply shook her head. \"No, that wasn't making love and that wasn't my husband. It is me, of course. And now you have to read this note. Put the two together and I think you'll see my problem. With that, she reached back in her purse and pulled out a folded piece of paper. She hesitated, then handed it to me. I opened it, looked at Maggie and read it aloud.\n\nMy dear Tiffany. \n\nI took this one afternoon when you were with me in our little love nest. As you can see, you were enjoying it as much as I did. I miss those times with you. I'm sorry you decided to end our little arrangement. I had to go away for awhile after that but now I'm back.\n\nI hope you understand that I will show this to your loving husband unless you can see your way clear to advance me a couple of thousand every week or so. Not too much, just enough to let me enjoy the finer things of life without you by my side. \n\nYou can call me at 555-5987 and tell me where to meet you with the money. I'll give you till Friday to call. If you don't, I'm sure your hubby will enjoy the movies.\n\nYours,\n\nPete\n\nI noticed the date on the note, folded it back up, handed it to her and then asked, \"When was this taken, if I may ask? He mentions being away for awhile. And your husband. Where was he while this was happening?\"\n\n\"It was two years ago. I had hoped that he was gone for good but he came back just a week ago. My husband was out of the country trying to acquire a special piece when this took place. While he was gone, I made some terrible mistakes, got hooked on crack and Pete took advantage of me. I was a willing participant at the time but after only two or three times like that, I knew I had to get my life back.\"\n\nShe was becoming emotional now. She had been so cool and calm up till now so I was surprised. Where before she was this smooth sophisticated trophy wife, now she was a kid in trouble. I big beautiful kid for sure, but still in trouble. I looked at Maggie and she took over.\n\n\"Tell us what happened. I assume your husband doesn't know anything about this? How could you have kept your addiction a secret?\"\n\n\"I wasn't actually addicted. At least I was able to stop cold turkey when I decided to. I just woke up one day and knew that it was over. I was in trouble and I saw my life going down the drain. You may not believe me but I really love my husband. I just forgot for awhile when he was gone so long. But Pete doesn't care. He taped those sessions and now he's blackmailing me. And I can't pay that kind of money with Jason finding out. He will.\"\n\nSo now we knew the story. She was married to Jason St. John, the owner of several of New York's finest art galleries. His collection of art was considered to be one of the finest anywhere and worth millions. He had money and status and a wife that matched. But his wife was something more. She actually loved him and wanted to stay married to him. Blackmail could end that forever. After a divorce, she would still walk away with millions in alimony but she didn't want that. She wanted us to stop her blackmailer and get back the videos of her indiscretions. She was for real. I could tell. \n\nWe settled on the details before she left and Maggie and I closed up the office. I took the case of course. Maggie wanted me to and I sort of felt bad for the little girl so we took it. I waited while she locked the office and came back inside. \n\n\"What do you think? We get Bruno on it? He seems the logical choice. Maybe he can take the disc and get something from it. I don't know.\"\n\nShe nodded, seeming distracted. She picked up the remote and turned the TV back on. She started it up from the beginning. While I liked it too, I wasn't sure what she was looking for until she moved over and sat down on my lap. She planted a big one on me, hard on the mouth and I suddenly understood. Maggie was turned on! And so was I. \n\nWell, we watched that CD from beginning to end, twice, with reruns of certain portions, and I enjoyed it thoroughly. Maggie was researching techniques, or so she said and I must tell you, her technique was flawless. We researched for an hour or so till we decided it was time to go home, where we practiced some more after dinner. Maggie was dedicated to perfection. And God, was she perfect! \n\nBruno came in the next day and I gave him the CD and the facts about our new client. Bruno watched part of the CD there in the office and I'll give him credit, when he stopped it, he had already seen something in the background that he said would tell him where the room was. Now come on! I watched that CD with Maggie and neither of us saw anything else but the sex! Bruno seemed to be immune to it when he was on the search. Man was a freak of nature if you ask me. Well, nobody did. Anyway, I'm just saying.\n\nBruno looked vague for a minute then said, \"I saw a neon sign outside that window and I think I can bring it out back in my lab. I think I know what it is already but just to be sure. So boss, how do you want me to play it? If I find the guy, do I go after the videos? Do I just follow him a while to see what he's up to or what? Your call. Your money.\"\n\n\"I'd say go for broke. If you can, take him down. You know the drill. Just keep me in the loop and I'll help anyway I can. It's good for a grand and a bonus if you get the videos.\"\n\n\"A grand? Must be some client. Maggie OK with that? You know I don't want to get on her bad side.\"\n\n\"She's cool and so is the client. We both want to do good by her. She's in deep and sinking fast. So do what you can.\"\n\nBruno nodded, pocketed the CD and his notebook and left. He talked with Maggie for quite a while but left right after. I wondered about Bruno. I had the strangest feeling he didn't really do this for the money. He even acted like he didn't need it. How could he not? The guy lived high most of the time. Like that monster car he drove. Paid more in gas than I did for my whole car! I knew he was good at what he did and I knew he had some income from a few little patents he owned but not big money like a grand for a simple job. Right? \n\nBusiness went on and I took on several smaller jobs. Two were right up Polly's alley so I gave her a call and she took them both on. Seems she was not doing many weddings lately or so she said. I think she was just bored. Maggie was pleased to see her since they were tight and knew each other from before. Before me anyway. They worked together in that little shop they owned. The one Maggie sold when she came to work for me. Got a nice piece of cash for it and it was our nest egg for the future. \n\nIt was just over two weeks when Bruno called to set up a meet. He wanted to show us what he had. When I asked him for advance info, he laughed and told me to get my checkbook out. That's all he would give me over the phone. I let Maggie know he was coming and we settled in to wait. Tiffany had called several times to ask how we were doing and Maggie told her that our best was on the case and no news was good news in his case. I hoped that was the case. \n\nWhen Bruno came in, he had a grin on his face like the famous Cheshire Cat from the fairy tale. Alice in Wonderland, I think it was. He sat down on the edge of Maggie's desk and whispered something in her ear. She laughed so hard I thought she was going to have to change her panties. Bruno grinned at her and looked at me with that smart ass look that told me he had it all. I knew Bruno from before too so his looks were all too familiar to me. But, in this case, I was pleased. Good news for Tiffany was what I was hoping for. \n\nI waved him in and he came, followed by Maggie. Bruno threw a packet on my desk with a flair and said, \"Your wish is my command O Great One. Where's my bonus?\" \n\n\"What bonus and what am I 'bonusing' you for?\" I slit open the packet and tilted it, dumping several video tapes onto my desk. There were also about fifteen CDs in there. I made a wild guess and said, \"You got them all? All of the tapes of Mrs. St. John?\"\n\n\"Her and two other ladies that you might recognize. I kept them and ran the rest through my degaussing unit. Then I burned them. They're gone forever. These tapes and one of the CDs are of Mrs. St. John. The rest are blanks now.\" He was grinning from ear to ear.\n\n\"Bruno, that is great work. My God man, how did you get these? Where were they? Give! Tell me!\"\n\n\"Not much to tell boss. I was right about the window so I found the motel pretty quick. Watched it for a day when I saw asshole Pete come in with the wife of another one of our city's leaders. I got the room number, got his name and the rest is history. I tracked him down and would you believe, he had the stuff stored in his house? Dumb shit! I waited for him, let him know I had his shit and that if he so much as tried to get back at any of his marks, I'd make sure one of my specially doctored tapes would get sent to some very nasty people. He understood. He asked around about me and got the word.\"\n\nMaggie was grinning and asked, \"What about the others? They wouldn't know you got the videos away from him.\" ",
        "\"Yeah, about that. Seems each of them got a note in the mail, along with a CD, telling them that their problem with Petey boy was over. Gave each a phone number to call if he ever tries to contact them again. Pete knows that number belongs to me.\"\n\nMaggie and I talked with Bruno a little more. He gave me all the details and I wrote it up simple and sweet. Final report for our Tiffany. I had Maggie write the check with a $500 bonus to give to him. Big money for two weeks work. Not bad. While she was doing that, I called Mrs. St. John and asked her to come in to see us. I told her the news was good. She said she'd be there within the hour. I smiled to myself, settled back with Mickey's 'I, the Jury' and lost myself in Mike Hammer's world. \n\nAs promised, less than an hour later Maggie showed Tiffany St. John into the office and shut the door. Tiffany was nervous and her cheeks were flushed. Overall, I thought it only made her more beautiful but that was me. I motioned her to sit while Maggie and I waited. She did so, fidgeting with her skirt, her hair, anything to try to relax. I decided to put her out of her misery.\n\n\"Mrs. St. John, we have good news for you. We have all of the videos that your blackmailer had in his possession. He also has been warned that any further contact with you or your husband would be to his detriment. He understands and has agreed. You will not hear from him again. If you do, I have a number you are to call which will correct that situation.\"\n\nShe was looking intently at me and at Maggie. Her eyes were wide and she had her hand to her lips, pressing against them. I saw a tear form and run down her beautiful cheek. It was particularly beautiful because it was a happy tear. I watched it in fascination, thinking to myself that these were the only tears a face like hers should ever feel. But, I digress!\n\nI handed her the file that I had completed and said with a flair, \"Our job is complete. Can we be of further service to you?\"\n\nThere was general pandemonium then while she hugged Maggie and I, then Maggie again and me again. I certainly enjoyed the hugging part and waited for another round, but I watched Maggie watch me so my enjoyment was controlled. I quickly sat down and let Maggie do the rest of the hugging. We spoke together for awhile, and offered to be of assistance if she needed us later. Maggie walked with her out to the outer office, their arms around each other, while I settled back. It was several minutes before Maggie came back in with a check for a nice fat amount. She was smiling. That was a good sign for me, so I took a chance and suggested that Maggie and I should take inventory. She agreed! Hot Damn! \n\nTwo weeks later I was sitting in my office working on a new Industrial embezzlement case when a box arrived addressed to me. I walked around it several times, wondering if it was a bomb before realizing no one I knew cared enough about me to waste a good box just to blow me to hell. At least not by a method this sophisticated. I called Maggie in and she gave me a good piece of advice: open it dummy! So, I did.\n\nInside was a set of every Mike Hammer novel written by Mickey Spillane. All thirteen, beginning with I, the Jury in '47 and ending with Black Alley in '96. Not only that, they were all hard cover, top grain leather bound with embossed gold lettering and they all matched! It was a hand tooled matching set! The card included said they were from Tiffany St. John.\n\nMr. Spalding. I asked Maggie what I could get you to thank you for the service you gave me. You believed me right from the start and that meant more to me than you can ever know. You and Maggie were wonderful to me and this is my way of saying Thank You!\n\nEnjoy and if you ever need my help in any way, please just ask.\n\nForever grateful\n\nTiffany.\n\nI was touched! Really touched. This was more than I could ever have believed. I touched the books reverently, awed by their content and the meaning behind the gifting of them to me. I was choked up and I had to wipe a tear from my eye. Maggie stood beside me, her hand on my shoulder while I wallowed in emotion. Maggie later showed me a beautiful necklace, antique she said, that came for her from Tiffany. She said it was priceless. I know it was certainly something since it caught every facet of light in the room. But, that may have been because it was Maggie that was wearing it. I think so, anyway.\n\nThat was the end of that case and life went back to normal for us. I was sitting in my office, Maggie off to do some shopping while I did absolutely as little as possible, when my office phone rang. That was not a usual occurrence since it was a private line and the number was know only to a very select few. Bruno was one of those select few and it was he who the caller ID indicated was calling. As was the case with that line, I let it go to answer. When the green light came on, indicating the message had been delivered, I picked up the phone and punched in the code. Bruno's message was short and to the point.\n\n\"Boss, just listen and don't bother calling back. He's back in town and he's asking questions about her. I put a tracker on him and on his car. Don't bother asking how I did it. I don't know what his game is but he's either stupid or desperate. I'll keep an eye on him and let you know if you need to do anything. Don't call me, I'll call you.\"\n\nThe phone went dead and I just stared at the receiver in my hand. My stomach rolled over and my heart began to pound. I thought it was over! I thought Maggie and I were safe from him. I had fooled myself into believing it was over, but it wasn't! It was starting again! No, not starting. This time, it would end! This time it would be over for good! I would see to that.\n\nTo be continued..."
    ],
    "authorname": "thecelt",
    "tags": [
        "detective",
        "satire",
        "private investigator",
        "private eye"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/tt-spalding-the-st-john-case"
}