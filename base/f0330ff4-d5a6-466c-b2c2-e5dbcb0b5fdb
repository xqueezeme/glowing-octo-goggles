{
    "title": "Just a Story Ch. 03",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas..\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 9 - How The Mighty Do Fall \n\nOn the morning of Wednesday, November 2d, I went into the locker room to get changed. There were a number of uniformed officers there, including Rudistan and Morton. Ranks notwithstanding, they gave me a good razzing.\n\n\"Have a good evening last night, Commander?\" Rudistan asked.\n\n\"I gave my wife a car for her birthday.\" I replied with a grin. \"What do you think?\"\n\n\"I think you better be having a good week for that, Commander.\" said Rudistan, to chuckles from the other officers. \"That was one hell of a ride you gave her... meaning the car, sir.\" I broke out laughing, as did the other officers.\n\n\"The car, and everything else, too.\" I said. \"Now I need to find a place where all you cockblockers aren't patrolling.\" More laughter.\n\n\"Sir,\" said Sr. Patrolman Johnson, \"why didn't you guys just go across the State Line and park in one of the farm fields? That's what the high school kids around here do.\"\n\n\"Yeah, I should've.\" I said. \"But with my luck last night, I would've been arrested for transporting a woman across State lines for illicit purposes.\"\n\n\"Is there really a law like that, sir?\" asked McGhillie.\n\n\"There used to be. Federal law.\" I said. \"As far as I know, it's still on the books. Anyway, and all kidding aside, I'm going to have you guys patrolling around Point Hollow more often. I could've sworn I saw a light on inside the house as we were pulling out, but then it was turned back off when I turned to look more closely.\"\n\n\"Think it's pranksters, or drug dealers, sir?\" asked Johnson.\n\n\"I dunno.\" I said. \"But we're going to run more checks up there, and see if anyone is messing around... and I don't mean in the backseats of their cars...\"\n\n* * * * * * * * * * * * * * * *\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" yelled the lovely redhead reporterette on Friday, November 4th at 7:00am, from in front of City Hall. \"Channel Two News has learned that there could be a tectonic shift in the local elections today! Sheila Sorrells, who is running third in the race for the open Council seat vacated by the death of Pastor Raymond Westboro, has called a press conference for ten o'clock this morning!\"\n\nBettina went on: \"Sources tell Channel Two News that Ms. Sorrells may endorse one of the two leading candidates in the race, either Loran T. Michaels or Scott Peterson. Experts say that her endorsement could be enough to put either candidate over the top without a runoff, saving the County millions in taxpayer dollars!\"\n\n\"And in the Governor's race,\" Bettina said, \"experts say that SBI Director Jack Lewis is well on his way to victory. He leads in all the major polls by an average of 49-45%. Early voting is expected to strongly favor the Democrats, so Governor Val Jared will need numbers in the final days that experts say he simply will be unable to get. It increasingly looks like Jack Lewis will be the next Governor of the State.\"\n\nI could see what Bettina and all the Media were doing. They'd been chanting that 'it looks like the winner will be Lewis' shit over and over and over, as if it were a fait accompli, and clearly the Media was trying to tell the Public how to vote. The Media would never admit it; they'd just say 'that is what the polls are telling us!', but they were making every effort to demoralize as well as demonize Jared supporters. I need not add that the name 'Dick Ferrell' had vanished from Media reports as thoroughly as the man himself had vanished from the public eye.\n\nBettina was still going: \"And let's go to Nick Eastwood for Sports. Nick!\"\n\n\"Thank you, Bettina!\" said handsome young Nick Eastwood, who was standing in front of the Bulldogs' Athletic Complex on Campus. \"The Bulldogs will try to get over their stinging loss to the Wildcats by visiting Protestant this weekend. The Wildcats will have a second straight road game as they visit the Tigers, their opponent in the Conference Championship game last year...\"\n\n\"GO TIGERS!\" yelled a voice. It belonged to a platinum blonde wielding a green crowbar. Cindy came in and poured herself coffee, as I made no effort to pour any for her.\n\n\"That empty Lieutenant's office needs filling.\" I said. \"I might just put a bad Captain in there.\" Joanne Warner and Theo Washington tried, and failed, to hide grins.\n\n\"Oh c'mon,\" Cindy said, \"we need you to lose twice to get to the Conference title game. So yeah, I'm a big-time Tigers fan this weekend.\"\n\nAs to the offices, Classroom 'F' had been transformed into cubicle offices for the Mouseketeers and Detective Krueger in a miraculous time of two days, and Teresa had already moved into the renovated office next to Cindy. I dreaded the day Tanya Perlman would find out about that...\n\n\"So, Captain,\" I said, \"my son, Ross, who coincidentally is your nephew, will be two years old tomorrow, and we'll have a party at The Cabin. You are coming, aren't you?\"\n\n\"Wouldn't miss it.\" Cindy said. \"And today is Todd's son Doug's birthday, so they and Teresa will be joining us.\"\n\n\"That's right, we will.\" said Captain Teresa Croyle, who had just come in wearing her uniform of light blue shirt with dark blue soft shoulderboards with silver Captain bars embroidered on them, and the silver-bordered white rectangle (Police Cross) and gold-bordered purple rectangle (multiple Purple Orders) over her right shirt pocket. She was also wearing dark blue pants with a thick light blue stripe on the sides. \n\nCindy was wearing the same uniform, except her rectangles were silver-bordered red (M.O.V.), silver-bordered blue (Distinguished Service Medal), and gold-bordered purple. My uniform was almost the same, except I was wearing soft shoulderboards with the embroidered silver Commander rank, and my red rectangle was gold-bordered (multiple M.O.V.s) while the new blue rectangle and old purple rectangle were silver bordered. I had two thin light blue 'piping' lines down the sides of my pants.\n\n\"Okay, ladies,\" I said, \"my office at 8:00am for the 'Angels' meeting.\" I was now only meeting with Cindy and Teresa, though sometimes Lt. Curly Goodwin of Internal Affairs would join the meeting, and sometimes I invited Della Harlow in, as well. Ergo, it had essentially become the 'Crowbar Angels' meeting again...\n\n* * * * * * * * * * * * * * * *\n\nAt 10:00am, everyone was crowded into MCD: Detectives, Uniformed Officers, Personnel & Records Officers, and their leadership, including the Chief, who was wearing a standard dark blue uniform with double thin line of light blue piping on the pants, and a thick strip on the long sleeves near the wrists, and silver metal eagles on the shoulder epaulets.\n\nOn a podium set up in Courthouse Square, Sheila Sorrells came up to the dias with Loran T. Michaels. \"Thank you for coming.\" Sorrells said into the microphone. \"Today I am announcing that I am suspending my campaign for the open Council seat, and I am endorsing Public Health Officer Loran Michaels for the post! Loran Michaels will do an excellent job on the Council, as he has done as Public Health Officer, and by electing him, we can save the County the trouble and expense of a runoff election...\"\n\n* * * * * * * * * * * * * * * *\n\nCindy and I went to the Cop Bar for lunch. We sat at the 'Command' table near the back room. As she ate her steak salad and I ate a double cheeseburger and fries (very delicious), she said \"Did you invite Melina and Daniel to the birthday party? Doug is her son, after all.\"\n\n\"Laura did invite them,\" I replied, \"but Melina is going to be out of Town.\"\n\n\"Yes, she is.\" said a voice. We looked up to see Sheriff Daniel Allgood coming up to us. \"Mind if I join you folks?\"\n\n\"Sure.\" I said, after Cindy and I had exchanged glances. Daniel took the chair to my left and Cindy's right. \n\n\"Well,\" Daniel said, \"Congratulations to all of you on your medals last Tuesday.\"\n\n\"We were wondering where you were.\" I said.\n\n\"The State Sheriff's Association held a meeting in Midtown on Tuesday.\" Daniel said. \"Well, that's the story for the Public. What really happened was that we were all asked to attend a meeting to discuss the upcoming elections. Especially security for them. With the SBI Director running against the incumbent Governor, some members of the Legislature have asked that the various county sheriffs be on particular lookout for fraud, hacking, and possible violent demonstrations. The FBI also briefed us, and you'll probably get that briefing, too.\"\n\n\"We did. Yesterday.\" I said. \"Was the SBI involved in the briefing to the Sheriffs?\"\n\n\"Yes, they were.\" said Daniel. \"And before you say it, the first thing that crossed my mind, also, was that the SBI will try to fuck with the results themselves then blame the Russians if they get caught, or something like that.\"\n\n\"Wouldn't shock me at all.\" I said. \"I also asked the FBI to watch out for extra votes being 'found' in the trunks of cars, then activist judges allowing them to count. The FBI put out a memo to everyone, including the Court system and the various Election Boards. I can just hear the shredders at work now.\"\n\nDaniel and Cindy both chuckled as Daniel's fish and chips basket arrived. We all finished eating, and then Daniel said \"Okay, Don... let's play the game.\"\n\n\"Let's play.\" I said, having fully expected this. Cindy looked a bit confused, but I knew she would soon catch up.\n\n\"I won't even bother asking to talk to you alone.\" said Daniel. \"Not even crowbars can separate the Crowbars.\"\n\n\"C'est vrai.\" I replied. Cindy was trying hard not to glare at Daniel, so I said \"Last Saturday was the exception, of course. Don't mention the name 'Washington' to her.\" Now Cindy was not trying to hide her glare, and it was directed at Your Iron Wildcat.\n\nDaniel looked a little queasy, as well. \"Yes, that hurt. Worse than the 70-0 loss last year.\" He then got down to business, leaning forward and talking more quietly. \"As you guys know, Sheila Sorrells endorsed Loran Michaels this morning. And I'm politician enough to know that that will pretty much kill Scott's campaign.\" Cindy and I both nodded, wondering where the Sheriff was leading us with this.\n\nAllgood said \"Scott's holding out hope for a runoff, but he's already talking to me about putting him in as Public Health Officer. Now Scott's my friend, but he's no real administrator. And he would technically outrank you, Don, and he would just love to lord it over you in that capacity.\"\n\n\"Harumph!\" said Cindy. \"Like the Iron Crowbar is going to let anyone lord over him...\" It was my turn to look queasy; the Sheriff could easily take that as a remark directed at himself.\n\n\"Yeah, I know, I know.\" said Daniel, letting it pass. \"Look, I can convince Scott to remain in the Sheriff's Department, but I want a couple of things from you.\"\n\n\"What's that?\" I asked.\n\n\"Leave Scott alone about Priya Ajmani.\" said the Sheriff. \"It's not like you and Bettina Wurtzburg haven't hooked up, and you and Priya, Captain. So can we just call a truce on all that, and let it flow by with the River's waters?\"\n\nCindy glared at the mention of her sexual liaisons with Priya, but I just shrugged my shoulders. \"Okay. What else?\" I asked.\n\n\"Don, can you find a way to call off your Chief, get him off my back?\" asked Daniel. \"It really is a bad situation, and word is getting out and people are talking. I can't let him continue to disrespect me, just as you didn't let Scott get away with disrespecting you. Of course...\"\n\n\"What?\" I asked, playing the Game but feeling bored.\n\n\"If you want to be Police Chief yourself, now's your chance.\" Daniel said. Cindy tried to hide her shock at what she was hearing, probably not trusting her ears.\n\n\"I don't want to be Police Chief.\" I said. \"Not now. I'm in exactly the right place now. I can still act to take down the criminals that dare to make mischief in my County, and I can lead others in the practice of busting those perps.\"\n\n\"So, what do you want to do?\" asked Daniel.\n\n\"Let me ask this... who do you want to put into the Public Health Officer position?\" I asked.\n\n\"I have no earthly idea.\" said Daniel. \"I won't be surprised if Michaels suggests Sheila Sorrells.\"\n\n\"I think he'll maneuver to get her on the Board of Commissioners.\" I said. The Board of Commissioners were one of the County's remaining bastions of corruption. There were six of them, three voted from what coincidentally were the three Police precincts, and three 'at large' positions, but vacancies were appointed by the Mayor and Council... and there always seemed to be vacancies.\n\nThe Mayor and Board of Commissioners sat for almost anything needing a board. We had no real Board of Education... the Board of Commissioners was that. We had no Board of Elections... the Board of Commissioners was that. And so on, and so forth.\n\n\"Or maybe she and Jenna Stiles will throw in together and do something.\" I said, getting Cindy's attention at the mention of her former fianc\u00e9e's name. \"I was wondering about administrators from other Departments... Fire Marshal Singer, Personnel & Records Captain Weston, even Deputy Chief Harlow, if she wanted to consider the PHO job.\"\n\n\"Yes, some of those names have come to mind.\" Daniel said. \"I can tell you that Zoe Singer has already shot me down when I brought it up. She is to the Fire Marshal job what you are to the Police Commander job, Don. Can't budge either of you.\"\n\n\"Smart Commanders, we are.\" I said.\n\nCindy could not help herself. \"I think Captain Weston would be a perfect choice.\" she said. \"She knows how to kiss ass politically in order to make political gains.\"\n\n\"Susan is a good administrator.\" I said. \"But Cindy, do you really want her outranking us both? As to Della... well, maybe this can solve all our problems...\"\n\n\"Say that again?\" asked Cindy, still stunned. \"What problems?\"\n\n\"Oh, the Sheriff here will have to talk to Della about her desires for the PHO job.\" I said. \"It might help things greatly if he does that by first asking the Chief if he can talk to Della. And he will respectfully say 'yes, you can talk to her'. And then y'all can start talking to each other...\"\n\n* * * * * * * * * * * * * * * *\n\nPlease to remember...\n\n\"Remember, remember the Fifth of November,\" I recited, wearing my 'Anonymous' mask, \"the Gunpowder Treason and Plot; I know of no reason why Gunpowder Treason should ever be forgot. \n\n\"Guy Fawkes, Guy Fawkes, t'was his intent, to blow up King and Parli'ment.\" I continued. \"Three-score barrels of powder below, to prove old England's overthrow. By God's providence he was catch'd, with a dark lantern and burning match. Holloa boys, holloa boys, let the bells ring. Holloa boys, holloa boys, God save the King!\" \n\nEveryone at the party at The Cabin applauded after I recited the poem, and Carole yelled out \"Yay, Daddy!\"... after I took off the 'Anonymous' mask. Then we had two cakes, one for little Doug Burke and one for Ross McAlister Troy. At the party were me, Laura, my mom Phyllis, Cindy, Teresa, Todd, Dr. P. Harvey Eckhart, Molly, and of course all the kids and their guardians, Buddy and Bowser. \n\nDr. Eckhart had delivered the upgraded Black Beauty to the Cabin by the expedient of driving it at an unreasonably high rate of speed. His daughter was in the car with him, which was the only thing that saved him from a traffic ticket when he was pulled over by Sergeant Rudistan and Sr. Patrolman Morton.\n\nThe University's Bulldogs had won the early game against Protestant, 38-6. The Wildcats game against the Tigers was the mid-afternoon game, and me, Todd, Dr. Eckhart, and Teresa settled down to watch it while Laura, Phyllis, Cindy and Molly talked and played with the kids. I need not say that Bowser was with Carole, while Buddy was in Teresa's lap or sitting beside her at all times...\n\n* * * * * * * * * * * * * * * *\n\nBy the end of the game, Cindy was watching as avidly as anyone. I was listening to Wildcat Radio as the announcer said \"... and the time is winding down. The Tigers have played a stellar game, and they're going to defeat the Wildcats today. It's 28-10, Tigers, and they kneel down, and that'll be it... the Tigers avenge their Conference Championship game loss, defeating a No. 1 team for the first time ever... and time expires, and the Wildcats have lost their first game in over two years. The once-beaten Tigers can expect to move into the Top 5 after this upset win...\"\n\nYour Iron Crowbar was most very unhappy.\n\nCindy came up from behind me and put her arms around me in a hug. \"Ohhhh, how the mighty have fallen!\" she whispered into my ear. I just shook my head sadly.\n\nThen Carole came up to me, Bowser right behind her. \"Daddy, why are you so sad?\" my astute daughter asked. I picked her up and she stood on my legs.\n\n\"Because the Wildcats lost, Sweetpea.\" I said.\n\nCarole gave me a hug and said \"I'm sorry, Daddy.\"\n\n\"Don't be, sweetie.\" I said, hugging her back. \"I'm happy when you hug me.\" Bowser barked at me, and I reached down to pet him, and said \"And I'm happy when Bowser is here with us, too.\"\n\n\"Bowser is a good dog.\" said Carole, in the form of a quotation. Bowser wagged his tail, pure love in his canine eyes.\n\nCindy said \"I needed a hug from Carole last week.\" Carole dutifully reached out for Cindy, who picked her up and got a hug as a reward.\n\n\"Y'all are still ahead in the Conference race.\" said Todd. \"I don't think anyone else is going to beat you.\"\n\n\"That's true.\" I said. \"But I think our national title hopes are gone. Too many undefeated teams ahead of us.\"\n\n\"Okay, everyone,\" announced my mother, \"dinner is ready. And a few extra drinks for you, Son...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Ah, young Donald.\" said Dr. P. Harvey Eckhart as he came up to me on the deck in the dark after dinner. \"Please don't tell me you are really that despondent over your team's loss.\"\n\n\"How was Cindy last week?\" I replied.\n\n\"Oh, she was despondent, too.\" said Eckhart with a small, sinister-sounding chuckle. \"May I join you for a moment?\"\n\n\"Certainly.\" I said. \"And I'm not feeling that bad. We played badly, had a hangover from last week. Life goes on. Perps to catch. Babies to raise.\"\n\n\"Ah, good.\" said Eckhart, sitting down in the metal mesh chair to the left of the metal loveseat I was sitting in. \"Ah, what a view! I just love this view from this height.\"\n\n\"Me, too.\" I said. \"And more than the view, I like looking at my Town.\"\n\n\"Yes, indeed... and a very interesting hamlet it is. So small, yet so full of... humanity.\" said Eckhart, somewhat cryptically. Then he said \"What I wanted to talk to you about, and preferably without my daughter hearing it, is that some strange things have been going on around 'The Vision' Headquarters.\"\n\n\"Oh, what's that?\" I asked.\n\n\"As you know, I keep very good security there.\" said Dr. Eckhart. \"We have observed people trying to watch the compound with field glasses from the outside. We called the Sheriff to ask those persons to move along, and they would always run as soon as they got wind of the Sheriff coming... well in advance.\"\n\n\"Then,\" continued Eckhart, \"we had some attempts to penetrate the outer fences, mostly from the other side of the River. Of course we sent immediate security patrols, and whoever was probing us quickly left.\"",
        "\"I would ask why you're not using drones to investigate,\" I said, \"but I think I'm about to hear about that.\"\n\n\"Very perceptive of you, young Donald.\" Eckhart said, his eyes glinting in the dim light. \"Yes, we captured three drones by knocking out their radio communications, then shooting them out of the sky with shotguns when they went into hover mode. The drones were pretty standard, but the cameras on them were of the highest quality.\"\n\n\"Hmmmm...\" I said, thinking about it. I felt Dr. Eckhart's eyes on me as I went into a small reverie. He seemed fascinated, and I could somehow feel his mental energy reaching into my head, either to probe or help.\n\n\"Uncle Harvey,\" I said, \"is 'The Vision' compound the place you consider yourself to be at your safest?\"\n\n\"Oh yes.\" said Eckhart. \"I do have a couple of hideaways in the Rocky Mountains, and one in the Appalachians which is even safer, but I have no desire to run scared and hide while my young acolytes at the Headquarters are in need of my teachings and my therapies.\"\n\n\"I hear you.\" I said. \"Do you have any seminar tours coming up?\"\n\n\"None for myself.\" said Eckhart. \"My excellent trainers are going to be doing those.\"\n\n\"Okay, good.\" I said. \"I'll discreetly check around and see if there is any scuttlebutt in the criminal world about someone going after you. I'm also going to make sure Cindy is never alone, at least to the extent I can. I'll tell her that there might be a threat to her as opposed to you.\"\n\n\"That would be splendid. Let me ask this, young Donald.\" said Eckhart. \"Do you think this is criminal activity... or the Government?\"\n\n\"Sometimes it's impossible to tell the difference.\" I said. Eckhart laughed heartily, though I had not meant it jokingly in any way. \"Seriously,\" I went on, \"the Government has satellites and tools available to them so that you wouldn't be seeing them. And I don't think they'd test your defenses if they wanted to come after you; they'd just barrel right on in. So I think maybe some perps are messing with you. Do you need any extra help down there?\"\n\n\"No, no thank you.\" said Eckhart. \"I and my people will be fine. Please do keep my daughter safe and out of trouble.\"\n\n\"Geez, Uncle Harvey,\" I said with a groan, \"you ask the impossible of me, especially the 'out of trouble' part...\"\n\nPart 10 - One Man, One Vote, One Time... \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" yelled the lovely redheaded reporterette from the Downtown Polling Station at the Veasley Community Center, at 7:00am, Tuesday, November 8th. \"Election Day is finally here! Voters are streaming into the election stations, and the election process is getting underway!\"\n\nBettina began her report: \"Our final polls yesterday showed SBI Director Jack Lewis with a 50-46% lead over incumbent Val Jared, and experts say that we will have a new occupant of the Governor's Mansion on January 2d. The local races are not as easy to predict. Incumbent District Attorney Gil Krasney appeared to be solidifying his lead over Jenna Stiles, but late polling in the minority communities suggested a potential source of votes for Ms. Stiles.\"\n\n\"And Sheila Sorrells's surprise endorsement of Loran T. Michaels for the open Council seat vacated by the death of Pastor Raymond Westboro is probably going to send Mr. Michaels over the top. Spot polling showed him at 52%, with 40% for Sheriff's Deputy Scott Peterson and Ms. Sorrells still taking some 5% of the remaining vote. Deputy Peterson has called for an SBI investigation of the circumstances surrounding Ms. Sorrells's endorsement of his opponent Michaels, and Deputy Peterson wants the SBI to investigate Commander Donald Troy's role in that endorsement, as well.\"\n\nJoanne Warner was mortally offended. \"What the hell does Commander Troy have to do with any of that? And he makes it sound like the Commander did something wrong!\"\n\n\"Welcome to politics, Detective Warner.\" I said as I came into the room and poured myself some coffee. \"He's just doing what Katherine Woodburn has been trying to do to me for years, and it's just the last gasp attack of a loser.\"\n\n\"I see why you endorsed Mr. Michaels.\" said Teddy Parker. \"I didn't understand that at first; Mr. Michaels is a pretty sleazy guy himself.\"\n\n\"Yes, yes he is.\" I said.\n\n\"I have a question, Commander.\" said Captain Teresa Croyle, who had just walked into the MCD room. \"If Loran Michaels wins, who is going to be Public Health Officer?\"\n\n\"You want the job?\" I asked teasingly. \"I'll put in a good word for you.\"\n\n\"You're making me re-think my no-crowbar policy... uh, sir.\" Teresa said. Everyone laughed.\n\n\"Well, in that case,\" I said, \"withhold my endorsement.\" More laughter.\n\n\"I'm just glad,\" said Cindy, coming in, \"that the Election is finally here and will soon be ovah!\" There was strong agreement with that sentiment.\n\n\"Okay, Commander.\" said Joanne Warner. \"Give us your official predictions!\"\n\n\"Yes, I want to hear them, as well.\" said Chief Moynahan, bringing in boxes of doughnuts. \"And you get first pick at the doughnuts if you tell us now.\"\n\n\"You have a deal, sir.\" I said. I procured the large eclair and a chocolate covered doughnut and consumed them as the rest of the doughnuts met their proper destiny at the hands of my Officers. Then I began:\n\n\"Krasney will win over Stiles, it won't be close.\" I said. \"Michaels will win, but may need a runoff yet. And in the Governor's race, if there is no fraud, Governor Jared will win. But I won't be surprised if there is rampant fraud, and so obvious that it might take weeks and the Courts to decide.\"\n\n\"You really think Jared has a shot?\" asked Theo Washington, sounding surprised.\n\n\"More than just a shot.\" I said. \"In the absence of obvious fraud, Jared will win, and by a larger-than-expected margin.\" Everyone was stunned at that prediction as I ate my doughnuts and watched the television screen...\n\n* * * * * * * * * * * * * * * *\n\n\"All right.\" I said at the morning 'Angels' meeting. \"What's going on today?\"\n\n\"I heard a rumor that there's an Election going on in this country.\" Cindy said. \"Seems to have not spared our County of its effects, either.\"\n\n\"Oh, those tricky Founding Fathers.\" I said with mock exasperation. \"Actually putting an election day in the Constitution, instead of the British way of just calling snap elections.\"\n\n\"God save the Queen.\" Cindy replied.\n\n\"Her Majesty notwithstanding, we have plenty of security in all voting precincts, sir.\" said Teresa, trying to get the meeting moving along. \"And I put all the SWAT Teams on standby or on call in case there's any trouble at all.\"\n\n\"I am hoping that most people voted early,\" I said, \"so that there won't be any problems, including things like long lines.\"\n\n\"Are you going to Midtown, sir?\" asked Cindy. \"Chief Griswold and his wife are already down there, to be with the Governor tonight when the returns come in.\"\n\n\"No, I swore off being at any parties.\" I said. \"But you guys can come to The Cabin and watch with us. Molly's coming with the boys.\"\n\n\"I'll have to check with Todd.\" Teresa said. \"He might be going to someone's party, just to play the political game. Probably Congressman Condor, seeing as Todd wants some national contracts.\"\n\nCindy's eyes gleamed as she said in a tattle-tell voice: \"But Teresa insists she and Todd are not a couple, sir.\"\n\nI was trying hard not to break down laughing as Teresa gave Cindy the look of fire that only 'Teresa Cunt' could give. \"You don't outrank me anymore, you know.\" Teresa growled.\n\n\"And she's reconsidering her crowbar policy.\" I helpfully added.\n\n\"She better be.\" Cindy said, not batting an eyelash. \"The Police Boxing Matches are no place to be for anyone without a crowbar, and they will be here before you know...\"\n\n\"And here I was, thinking these elections were getting intense.\" I said. \"Okay, Captain Croyle, put out the word that no one is to be on a double shift where they cannot vote. I am putting out a text to all Officers as well, saying that I want them to vote today, either before or after work.\"\n\nAs the Captains got up to go, I said \"Captain Ross, hold here for a moment.\" Teresa went on out and Cindy came back.\"\n\n\"Cindy, unless you have other plans, I'd like for you to bring the Chief to the Cabin tonight in your SUV.\" Cindy's SUV was bulletproof like mine, and had been mine before the TCPD gave me an upgrade. Teresa was going to get a similar 'weaponized' SUV, as well.\n\n\"Sure, sir.\" she said. \"Er, can I speak freely and ask a question?\"\n\n\"Sure.\" I said.\n\n\"Sir, I've noticed that since you talked with my father the other day, you've been making sure I travel in either your SUV or mine, you've not let me be alone while on duty, and I've noticed some patrol cars trying to be discreet but absolutely failing as they follow me around. Is there something I need to know?\"\n\n\"Have a seat.\" I said. Cindy sat down and I said \"Some concerns for your safety have reached my attention. Those Police cruisers are following you to make sure you get home safely, but they're also looking for anyone else that might be watching you. So far, no results, but I do want to err on the side of caution.\"\n\n\"So my father is worried about me, after seeing drones fly over his compound in Coltrane County.\" Cindy said.\n\n\"Not much gets by you, Captain.\" I said with a grin. \"But as the father of a couple of daughters myself, I understand Dr. Eckhart's worry about his daughter galavanting with rowdy Police Officers in her family, not to mention driving green O65 Imperial Crowns at ridiculous rates of speed through my County.\"\n\nCindy was laughing as I talked, then the humor left her suddenly. \"One more question: we're both Captains now, but structurally, who's ahead of who in the line, me or Teresa?\"\n\nOops. The one question I really didn't care to answer. I stated my prepared dodge: \"I'll just say this: if that issue comes up because the Chief, myself, and Commander Harlow come over all dead at the same instant, then I won't be worrying about it... because by default, I will be dead. Y'all can fight that out amongst yourselves.\"\n\n\"O-kay.\" Cindy said, knowing I wasn't going to give her an answer... and both of us knowing that the Operations Officer likely would be the one to take the lead in such a horrific eventuality.\n\nYes, I thought to myself, if push came to shove... just as I outranked Della by position, Teresa now outranked Cindy. And my cousin talks about male alpha-dogs?...\n\n* * * * * * * * * * * * * * * *\n\n\"Well, Mr. Crowbar,\" said Chief Moynahan as we watched the returns, \"it will be an interesting evening.\"\n\n\"Yes sir.\" I said. \"And I stocked up with booze, just in case.\" Indeed, I was drinking Scotch (neat) while the Chief drank rye and ginger. Cindy and Molly were both drinking Canadian whisky for some strange reason. Laura was having wine, while my mother was drinking cognac. \n\nThere was a TV mounted on the wall in the front room of The Cabin, on the wall whose other side was my office. I'd brought a second TV and placed it on a table, so we had both KXTC and KSTD bringing election returns, and could skip between Fox Cable and MSNBC for national results. But of course... the State is what had captured our interests.\n\nAt dinner, I told Chief Moynahan and Cindy that I appreciated how Chief Griswold had handled my Distinguished Service Medal presentation. \"I know upper brass gets those higher awards, but after getting my second M.O.V., I was worried about how the Uniformed Officers would take me getting another high one so soon. But the way Chief Griswold explained it could not have been better.\"\n\n\"Very true, Mr. Crowbar.\" said Chief Moynahan. \"But bee-lieeeeve me, the entire Force knows that was a well-deserved award, especially after you took Brownlee out.\"\n\n\"Don,\" Cindy said, \"this Police Force loves you and will follow you to the gates of Hell and back. They know what you've done, and Teresa was telling me she heard some of them get really pissed when that bastard John Hardwood asked you about helicopter rides. And they know you had their backs on all the structural changes and everything else. We have the fewest Union complaints of any Police Force in the nation, much less the State.\" That made me feel better.\n\nAfter dinner, we all settled down to watch. Todd and Teresa had indeed gone to the official party for Congressman Condor, who we knew would easily defeat his Republican opponent, at the Hyatt Hotel. Teresa had texted Cindy the word \"Borrrring!\" and Todd had texted me that the Katherine Woodburn had chosen to attend this party rather than the local one for Jack Lewis. Hmmm...\n\n\"And with the polls closing in five minutes,\" said Bettina Wurtzburg at the KXTC Decision Desk, with Dr. Romanov and Amber Harris as the guest panelists, \"we will have our first projections! So, Dr. Romanov, Amber, what do we expect tonight?\"\n\n\"It's going to big night for Jack Lewis, Bettina!\" Amber Harris said enthusiastically. \"And while we don't expect many changes in the State Legislature, Mr. Lewis's coattails might bring enough victories to give the State House back to the Democrats, and strengthen the Democrats' lead in the State Senate!\"\n\n\"Exit polling has shown us that Mr. Lewis is well ahead tonight.\" said Bettina. \"Dr. Romanov, how has Director Lewis accomplished this? Especially after his NTF Director Richard Ferrell threw a paraplegic woman out of her wheelchair, and after the deadly attack on a U.S. Marine and his family by SBI Agents?\"\n\n\"The voters care about important issues, Bettina,\" said Dr. Romanov, \"not the lies spread by Jared's despicable campaign team about those incidents.\"\n\n\"That's right, Bettina.\" said Amber Harris. \"The voters have cast aside the aspersions and gone for the issues, such as climate change!\"\n\nMeanwhile, Priya Ajmani and John Hardwood were at the KSTD Election Desk. Hardwood was saying \"It's going to be close and a long night, Priya. We might not know for sure until tomorrow morning, as the City, Southport, and Midtown have to get their vote counts in. And I'm sure the Republicans will cry fraud, like they always do when they're losing big.\"\n\n\"And there it is!\" said Bettina. \"The polls are closed, and KXTC Channel Two News, in conjunction with our State Fox team of analysts, can project that District Attorney Gil Krasney is the winner over Jenna Stiles in the D.A. race! Mr. Krasney is leading comfortably in every precinct of the County, including the Tenderloin District and Southwestern Districts, where Ms. Stiles hoped to get minority votes. But those have broken for Mr. Krasney...\"\n\nCindy looked sad. \"That's too bad for Jenna.\" she said. She sent Jenna a text, but no reply came.\n\n* * * * * * * * * * * * * * * *\n\nAt 10:00pm, I got a text from Todd. It read: \"people here starting to get quiet\". Another one followed about fifteen minutes later, saying \"getting tense; condor telling us that Lewis is losing!\".\n\n\"Oh my God.\" I said. \"Todd says Lewis may be losing.\" The TVs were not saying anything. I texted Chief Griswold, saying \"My sources say Jared is winning.\"\n\nThe reply made me laugh. Chief Griswold had texted \"Nothing ever gets by YOU, Crowbar. How did you know?\"\n\nI replied that I had a mole up here and the Chief sent back a smiley: \":-)\".\n\nWe turned to the TVs, where I noticed Amber Harris was not as enthusiastic as before. Bettina was reporting results: \"Democrat Congressman Gary A. Condor has already been declared the winner in the U.S. Congress 1st District race, and Republican U.S. Senator Samuel Russell has apparently won re-election, as well. In the Governor's race, the rural southeast areas are coming in well ahead for Governor Jared. Any comment on that, guys?\"\n\n\"Jared was expected to win the sparsely populated rural areas.\" said Dr. Romanov. \"But it's the cities that are all-important, that count the most. Southport and the City. Southport is full of hard working Union people that care about jobs and know that Lewis is their answer. And the City is a cosmopolitan complex of millennials, professionals, and minorities that traditionally favor Democrats and will vote for Director Lewis.\"\n\n\"That's not what I'm seeing.\" I said as I got on my laptop and checked 'Crystal Clear Vote Counts', a web site that averaged various polls and was now giving raw vote totals. \"Jared has the red counties locked up... and he's pulled even in Midtown, Jacksonville, Jamestown, Eastphalia, and winning in Westphalia and our Town here.\"\n\n* * * * * * * * * * * * * * * *\n\nAfter going to Tim Sioban in the City for a Statewide report, Bettina was back, with only Amber at the desk with her. Amber looked sick to her stomach, I observed. Bettina said \"Dr. Romanov is checking on the incoming numbers that our Decision Desk team have put together. Amber, it's shocking... Governor Jared has just pulled ahead of Director Lewis in Midtown!\"\n\nJust then, Todd texted me again. \"Very quiet here; some people crying. condor said jared is kicking @$$ in southport.\"\n\nI couldn't resist; I called Chief Griswold. \"Hi Crowbar!\" said the Chief happily, and perhaps not quite soberly. \"We're getting the information in now. Too early to call, but we're not getting slaughtered. We might have a chance, here.\"\n\n\"I think you do, Chief.\" I said. \"Any signs of fraud?\"\n\n\"Not really.\" said Griswold. \"The City and Southport seem to be clean. The Courts in the City refused to re-open the polling stations in the black districts, and the State Supreme Court shut down Judge Nance's attempt to re-open the Tenderloin District's voting precinct in our County.\"\n\nWe had a chance. I looked over at Cindy... and she nodded. She was feeling the vibe, as well.\n\n* * * * * * * * * * * * * * * *\n\n\"And this is just amazing... shocking...\" said Priya Ajmani. \"Governor Jared is leading in Southport. Let's go to John Hardwood in the war room. John!\"\n\nA very somber John Hardwood came on. \"It's stunning, Priya. These results are nowhere near the exit polling data that KSTD and other news outlets were giving throughout the day. Right now, the projections are that Governor Jared has about 52% of the vote so far, and only the City can rescue Jack Lewis from a stunning defeat.\"\n\nI was watching the computer again. \"Folks,\" I said, \"the Media people won't say it, but I think it's over, if these incoming numbers are to believed.\" I had two websites up: Crystal Clear Vote Counts, and the State Election Board's official site. Both aligned perfectly, and both had Jared leading Statewide, and tied in the City.\n\n* * * * * * * * * * * * * * * *\n\nWe got the news first. Todd texted me: \"condor says lewis has called to concede. people leaving now.\"\n\nI called Chief Griswold. \"Jared getting any phone calls, sir?\"\n\n\"Dammit, Crowbar, your mole is good!\" said the Chief. \"It's true. Jared is still on the phone now. I gotta go, they're about to announce something...\"\n\nAs I disconnected, I looked around the room. All eyes were on me as I said. \"Lewis conceded. Jared has won.\" We all cheered and more drinks were poured. \n\nAnd maybe it was the alcohol that made me do it: I texted Bettina with the words \"Jared has won. Lewis called to concede.\"\n\n* * * * * * * * * * * * * * * *\n\nThe News Media was totally stunned. Bettina was actually the announcer all over the State on the Fox channels, who patched her in as she said \"...and Channel Two News has confirmed that SBI Director Jack Lewis called Governor Val Jared and conceded the Governor's race to Jared!\"\n\nMoments later, Bettina brought in a stunned Dr. Romanov, a near-crying Amber Harris, and a feed of Tim Sioban from the City. \"Guys, we didn't have Southport called, we didn't have the City called... why is Director Lewis conceding?\"\n\nTim Sioban answered: \"Bettina, we're getting reports here in the City that Val Jared and Jack Lewis are split 50-50, and those numbers are expected to hold. And with Jared's lead throughout the rest of the State, Mr. Lewis realized he has no hope of victory; ergo, the concession call.\"",
        "Bettina said \"Dr. Romanov, these results are simply nothing like our exit polling data. What has happened here?\"\n\n\"This needs to be investigated, Bettina.\" said Romanov. \"There has to be fraud. There has to be hacking into the computers. The exit polling data has been consistent with our polling for weeks. We need to know why these numbers tonight are so different...\"\n\nMeanwhile, Diane Williams was talking to John Hardwood on a feed. \"John, this is so shocking... our exit polling data all day pointed to a huge Lewis victory. Yet he's already conceding.\"\n\n\"Diane,\" said John Hardwood, \"we really are going to have to question the veracity of the polling. Obviously people lied to the poll takers, both today and for the past several weeks.\"\n\n\"John,\" said Diane, \"what are some of the reasons for these dolts... I mean voters... voting for Mr. Jared over Mr. Lewis?\"\n\nHardwood replied \"We're not sure that we can trust what we were told, Diane. But many people cited SBI NTF Director Ferrell throwing a paraplegic woman out of her wheelchair and then throwing the wheelchair on her legs as a big reason. They also believe there was corruption in the handling of that case, and trying to hide Agent Ferrell's actions behind the smoke screen of a 'security review' and 'ongoing investigations'. The People of the State were just tired of the SBI corruption, Diane.\"\n\nMeanwhile, Bettina was talking to Tim Sioban, who said \"Yes, Bettina, the exit polls were wrong, but the data we did get suggests that SBI corruption was the problem for Director Lewis. An overwhelming number of Jared voters cite SBI corruption as their most important factor in choosing their next Governor. And that same overwhelming percentage say the SBI needs to be reformed or totally dissolved...\"\n\nPart 11 - Aftermath and Forewarning \n\nLike 'Reveille' following 'Taps' at Joe Smedley's funeral, one chapter closed as new ones opened...\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely MILF redhead from the front steps of City Hall at 7:00am, Thursday, November 10th. \"The courts have denied Scott Peterson's lawsuit in his attempt to force a recount in his election loss to Loran T. Michaels for the open Council seat. Michaels's 52-45% win was higher than the half-percent threshold needed for a run-off.\"\n\nBettina went on: \"However, there may be trouble brewing around that Council seat. Councilpersons Thomas P. Cook and Kelly Carnes are insisting that Michaels be sworn in immediately, while John Colby and Dagmar Schoen are stating that this election was for that seat in the coming years, not to replace Westboro now. They are saying that if Michaels is sworn in now, a separate election will be needed for the seat for next year.\"\n\n\"And in the aftermath of the Governor's race, the Democrats are calling for an investigation into the shocking win by Governor Val Jared over SBI Director Jack Lewis, citing the election results being so different from polling data, especially the exit polls. The Jared Campaign said that the the vote of the People is what counts, not the media-manipulated exit polls, and that the Democrats are trying to harm the credibility of the election process by saying the exit polls were correct when they obviously never were. For more on this, let's go to Amber Harris at the Decision Desk. Amber!\"\n\n\"Thank you Bettina!\" said Amber Harris, who definitely looked unhappy as she talked about Val Jared's win over the Democrat Lewis. \"I have with me Dr. Romanov of the University Center for Politics, and Karl Frazier of Public Policy Polling. Karl... what happened?\"\n\n\"Amber, we're just going to have to admit that the polling data was wrong.\" said Frazier. \"Obviously the Jared supporters did not answer our pollsters' questions, or else they flat out lied to our pollsters. I would also say that the pollsters sampled in accordance with the turnouts of the last election, and that differed from this year's turnout, which was much more favorable to Jared.\"\n\n\"Dr. Romanov,\" said Amber, \"there's absolutely no evidence of election fraud or tampering, so does this mean that the voters have rejected the Democrats' platform of climate change, more regulation of businesses, and higher taxes?\" Amber was obviously trying to add drama and angst with that question.\n\n\"Amber,\" said Dr. Romanov, \"obviously we are going to have to go back and look at what happened here. There needs to be the political equivalent of a forensic examination of these results and this election. It is obviously a stunning result. My own studies over the last couple of days suggest that this was in no way an endorsement or mandate for Val Jared and the Republicans, but a rejection of Director Lewis and the actions of SBI Agents under him that have stained him despite his personal innocence in those incidents.\"\n\n* * * * * * * * * * * * * * * *\n\nHe came to me.\n\nGovernor Val Jared came to my County, ostensibly to the University to address the professors of all the Schools in the State. I received a phone call, asking me to come to the University President's office. Considering it was my wife Laura that called, I couldn't say 'no'.\n\nI was wearing my semi-formal uniform: white shirt, black tie, dark blue pants with double-light-blue stripes down the side, and dark blue Police jacket with ribbons. Everything was shined up and looking sharp... after all, I would be in my wife's presence and I wanted to impress her.\n\nWhen I was ushered into the side room next to the President's office, three men rose to greet me: Governor Jared, University President Sidney P. Wellman, and Chief Griswold. After a moment of chit-chat and making sure we had adequate coffee or water, Dr. Wellman excused himself.\n\n\"First of all, Don,\" said the Governor, \"I want to thank you for your contributions to my campaign, particularly your very sound advice on how to run it. I am not sure those mealy-mouth political hacks could've won a race for dog-catcher.\"\n\n\"If it meant defeating Jack Lewis, sir,\" I said, \"then I am glad to have been helpful to you.\"\n\n\"So, I won't waste your time.\" said the Governor. \"The Directorship of the SBI is yours if you want it.\"\n\n\"What is going to happen to the current Director of the SBI?\" I asked. Chief Griswold's mustaches twitched just a bit in amusement. The Governor looked like he needed a 'Tums'.\n\n\"Yesterday,\" said the Governor, \"Jack Lewis came to my office. It was not a public meeting, it was not in front of the cameras nor known to the Media. During that meeting, Lewis offered to resign as head of the SBI and go away quietly, but in exchange he wants all investigations of him dropped, which he says can be announced 'in a spirit of reconciliation'. He also wants the investigations of the SBI and Dick Ferrell to more quietly go away.\"\n\n\"Is Ferrell leaving the SBI?\" I asked.\n\n\"That will be a condition of discontinuing the investigations of him.\" said the Governor. He immediately knew from my face that it had been the wrong thing to say.\n\n\"Governor,\" I said, \"Richard Ferrell physically harmed Tanya Perlman. I would suggest he was trying to kill her, and may have done so if others had not arrived in time. Richard Ferrell was absolutely part of Leonard Sharples's attempt to murder me. Richard Ferrell is the dirtiest person in the employment of this State, and that includes Jack Lewis on the list. I cannot believe you would even consider not bringing the hammer down on Richard Ferrell with as much political power as the SBI, the State Department of Justice, and the Courts have to bring to bear upon him.\"\n\n\"Don, we've got to move forward.\" said the Governor. \"The Democrats are threatening 'scorched earth', opposing and blocking anything and everything we want to do, and promising to waste untold amounts of money on specious but endless investigations into trumped-up allegations of anything they and their Media partners can gin up.\"\n\n\"So what?!\" I thundered back. I sucked in my breath, catching myself before I exploded on this spineless dishrag of a man (and we're not talking Chief Griswold, here).\n\n\"Governor...\" I said, \"you were not elected because you are a Republican. You were not elected just because the SBI is dirty and Jack Lewis is dirty. You were elected because you set yourself apart, as an 'outsider', as not being an 'Establishment' Republican Elitist.\"\n\nI continued: \"This happens every time: the Republicans win, then they fuck it up as quickly as possible. You were elected, sir, to oppose the Democrats, not appease them. You're sitting here complaining about the Democrats going 'scorched earth' on you and the Republicans? Why don't you and the Republicans go 'scorched earth' on them?\"\n\nThe Governor was not looking happy as I drove on: \"The Media and the Democrats say you have to work with them. Their idea of 'working with them' is to do what they order you to do. They say you have to 'compromise'. Their definition of compromise is for you to do exactly what they tell you to do, and maybe they'll give you the crumbs of... well, never mind.\" \n\nI was about to say \"giving you a reach-around\", but Chief Griswold would've ripped me a new one if I had said that.\n\n\"Governor,\" I said, \"you may have to drag those mealy-mouthed, spineless dishrags like Wilson Hammonds and Sean Stockton along with you, but you frickin' WON. Now assume the pedestal and LEAD, sir!\"\n\n\"All right, all right.\" said the Governor. \"I hear you. But politics is not like policework, Commander. I can't go in swinging a crowbar around.\"\n\n\"Sir,\" I said, \"first of all, swinging crowbars is not good police work, and I only use my crowbar when it's needed. Second, you actually CAN go in swinging a crowbar, politically speaking, much more readily and effectively than I can as a policeman. And the People want to see that, and they want to see the Republicans stand up to the Democrats... who seem to have NO problem standing up to the Republicans... and the People WILL support you if you do the right things.\"\n\nChief Griswold just looked at his longtime friend and said \"He's right, you know.\"\n\n\"So,\" said the Governor, \"can I start calling you 'SBI Director Troy' now?\"\n\n\"I have better ideas for you, if you want to hear them...\" I replied. This was the point where Chief Griswold began looking relieved...\n\n* * * * * * * * * * * * * * * *\n\n\"Thank you, Sheriff,\" said Commander Della Harlow, \"but I am very happy where I am now, and would like to remain as Deputy Police Chief.\"\n\n\"I don't blame you a bit.\" said Sheriff Daniel Allgood. They were in the Main Conference Room at Police Headquarters. Also there were Police Chief Moynahan, Fire Chief Quinlin, and me, Your Iron Crowbar.\n\n\"So,\" asked the Sheriff, \"any ideas from any of y'all about who I should put into the slot? It won't be Scott Peterson. Loran Michaels suggested his Assistant Public Health Officer, Beth Paige.\"\n\nDella said \"I'll suggest you consider Captain Susan Weston, Sheriff. She's a good administrator, ran the 3d Precinct very well, and is doing double-duty as Personnel & Records and Public Relations Officer right now.\"\n\n\"Chief, Commander,\" asked the Sheriff, \"anything on that?\" The Chief deferred to me.\n\nI said \"I concur with that, but will add the warning that Captain Weston can be prickly in her relations with others, And while she's okay at Public Relations, she doesn't like doing it. Give her paperwork and she's great; make her work with people, and 'little things' start popping up.\"\n\nFire Chief Quinlin said \"Sheriff, Beth Paige is a fighter, and won't let anyone run her over. Maybe her as PHO and Weston as Assistant PHO?\" We all murmured agreement with that idea.\n\n\"Okay, then.\" said the Sheriff. \"I'll let you Commanders get back to minding the store. If you Chiefs will come to the Cop Bar with me, I'll buy lunch.\" We all got up to go.\n\nDella and I got out of there first. I motioned for Della to come to my office. As we sat down, Della said \"Looks like the Chief and the Sheriff are working out their problems.\"\n\n\"They're trying to.\" I said. \"Which is all we can ask of them, I guess. So, who are you thinking about to replace Weston?\"\n\nDella said \"Janice Holloway will handle Personnel & Records. Brevetted Lieutenant doing a Captain's job. Almost shameful the way we put people in these jobs without paying them properly.\"\n\n\"True.\" I said. \"Cindy Ross was in that situation for a long time, too. What about Public Relations?\"\n\n\"That's the one that's becoming a problem.\" Della said. \"I thought about just handling it myself, but Chief Moynahan said he did not approve of that. He said that is a job to be delegated if ever there was one. By the way, I don't think he's really all that happy that you're not filling the MCD Lieutenant role, and letting Captain Ross be in direct control of that.\"\n\n\"Yes, I know.\" I said drily. \"As to Press Relations, I do have one suggestion, and it's just an idea and I'll understand if you don't like it: since we're killing off a Precinct, Captain Briscoe needs a place to be.\"\n\n\"Isn't he retiring soon?\" asked Della.\n\n\"If we make him a full Captain, he'll probably stay on one more year.\" I replied. \"He can handle the Press pretty well, and he's good with the Public and will be a good liaison with the Council on the Chief's behalf.\"\n\n\"It makes sense.\" said Della. \"I'll bring it up with the Chief, and ask Briscoe if he's interested.\n\nPart 12 - Epilogue \n\nThe man looked up from his desk as he heard the click of her high heels as she approached. She looked damn fine in that clingy gray dress, solid back stockings, and gray high heel pumps, he thought to himself.\n\n\"Yes, Agent Huntress, what can I do for you?\"\n\n\"I just have a question, Mr. C.\" she replied. \"Why hasn't my sister, Scorpion, been allowed to retire yet?\"\n\n\"We've approved her retirement papers,\" the man said, \"but we're asking her to do one more mission in the field first. She's been working out with the women in your former gym to prepare.\"\n\n\"Ah.\" said Melina Allgood, whose CIA codename was 'Huntress'. \"Thank you, sir. If I can help with her mission, I'd be glad to.\"\n\n\"If we find that need, you'll be the first I contact.\" he said. \"And speaking of missions, what is going on with Wallace Bedford and his group?\"\n\n\"They're laying the groundwork for their operations.\" said the Huntress. \"But there may be problems. Someone tried to recruit Michael Burke's wife into their fold, and she was a poor choice to make that attempt. I'm getting word she has spoken to others about it... and one of others is one of my ex-husband's police officers.\"\n\n\"Oh, that won't do.\" said Mr. C. \"Keep your eye on that, and inform me if any problems arise. If there's nothing else, have a good day.\"\n\n\"Have a good day, sir.\" she said. She turned and walked off, and he could not help but watch her magnificent ass in the tight dress as she departed.\n\nHe stood up. He was a tall man, and he always wore three-piece suits with a vest, and with a gold watch on a chain. He looked somewhat like the author and philosopher Napoleon Hill, whose teachings Dr. P. Harvey Eckhart and other self-help gurus had studied. Like the woman the Iron Crowbar had surmised was named 'Diana', this man's name was classified, and speaking it was a treasonable offense. Ergo, he was simply called 'Mr. C.'.\n\nAh, yes, the Iron Crowbar, he thought to himself. How that man had defeated 'Operation Apple Grove', he did not know. How that man had defeated Pastor Raymond Westboro, the most brilliant criminal mastermind of our age, he did not know. \n\nAnd how that man had survived the torture that Casey B. Walker had inflicted upon him... he did not know. He remembered looking down at Commander Troy, very nearly dead on the last day of his ordeal. Now, Troy was not only still alive, he was still a tremendous threat... as was his wife.\n\nThe Huntress was a loyal Agent, the man thought to himself. The Scorpion was no longer considered to be. And there was too much at stake to let loose ends unravel...\n\nFinis."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crima drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/just-a-story-ch-03"
}