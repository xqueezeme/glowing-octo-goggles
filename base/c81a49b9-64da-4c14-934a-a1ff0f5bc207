{
    "title": "The Doe-Eyed Waif",
    "pages": [
        "(This is an entry in the Christmas stories contest. If you enjoy the story, please vote and comment.)\n\n\n\nSanta must love me because I've never had such a young, nubile present in all my life.\n\nIt was the day before Christmas and the sky hung over my house as black as cast iron. A bitter mix of snow and sleet hissed through the leafless trees in my front yard. A foot and a half of snow covered the ground; not much for some parts of the country but here in Olympia, Washington it was quite a shock. Power was out in parts of town, though not at my house, and the schools and many businesses had been closed for several days. Temperatures dipped into the single digits at night. Just getting out of my car and crunching across the snow through the arctic air was enough for me.\n\nI've lived alone since my divorce a year ago. Now in my mid-forties, I found myself on this frozen night with only a crackling wood stove and a plate of plum-sauce chicken and fresh-baked garlic bread. I was just about to dish it up when I heard a tapping at the front door.\n\nWho could possibly be here in this god-awful weather?\n\nWalking to the door, I peered through the peephole and clicked on the porch light. The figure was so short I saw only the top of a camouflage hood.\n\nI cracked the door and looked out. \"Yes?\"\n\nA high, squeaky voice replied, \"I...I'm really sorry to bother you, mister....\"\n\nIn a camo jacket, baggy pants, and battered backpack, the kid looked like a street urchin from a Charles Dickens novel. Large eyes stared back at me, barely visible between a knit cap and threadbare scarf.\n\nI squinted back, trying to get a read. \"What do you want? You're letting all my warm air out.\"\n\n\"I know, it's just...well it's really cold out here....\"\n\n\"No kidding. Why aren't you at home?\"\n\nA gloved hand tugged the scarf down, revealing luminous hazel eyes, button nose, and cupid mouth. I suddenly realized this was a girl. Those eyes pleaded with me. Almost comically oversized, they seemed to reach out, begging for help yet somehow unwilling to compromise. Lashes from a mascara commercial guarded sparkling copper retinas that pulled me closer.\n\n\"I don't have a home,\" she said, voice shaking. \"I...I've got nowhere to go and it's f-f-freezing out here. Do you think I could...you know...sleep in your garage or something?\"\n\n\"The garage? Don't you have friends? Or a shelter?\" I asked. I felt bad for her but I wasn't thrilled by the idea of letting a total stranger into my house. Maybe she was a decoy and her buddies were going to come in the back any minute, or maybe she'd pull a gun. Couldn't be too careful these days.\n\n\"N-no, I've got nobody. My step-dad kicked me out last week. We're pretty new to town and the shelter's all full. I'm just....\" She didn't finish, just stood there shivering, her breath coming in sharp, icy puffs as she wobbled from side to side like a drunk.\n\nAw, crap, she's going to pass out on my front porch. I glanced at the snow-covered yard. The only tracks were mine coming from my car and her's from the street. The wind picked up and frosty air whistled past the door.\n\nAgainst my better judgment I said, \"Okay, come in.\" I gave her a squint. \"And don't try anything funny.\"\n\n\"T-thank you,\" she replied, stepping inside.\n\nAs I closed and locked the door, an unsettling idea hit me.\n\n\"How old are you, kid?\"\n\n\"Turned eighteen t-t-two months ago,\" she chattered.\n\n\"Don't bullshit me. You can't be more than thirteen or fourteen,\" I said, scanning her diminutive body. \"I don't want some minor in my house. Looks bad.\"\n\nIn response she dug into a pocket and pulled out a cheap nylon wallet. With a rip of Velcro she tugged out an ID and handed it to me. She pushed her hood back, unwrapped the scarf from around her neck, and tugged off the knit cap. She gazed up at me hopefully. Her pillowy lips seemed too small and her cheekbones too high to be real. Golden hair spilled over her shoulders, long and fine and shiny. Her skin was pale and I saw a faint dusting of freckles across her cheeks and upturned nose.\n\nI glanced at the license.\n\n\"Jessica, huh?\" I asked.\n\nShe nodded, waiting for my decision. Her hair and eye color matched the license. Height said five foot even. Weight 105 pounds. I think she was fudging a bit, but no doubt this was her. I did the math and sure enough, she was two months past eighteen.\n\n\"I-I've got nowhere to go,\" she said, still shivering. \"I really don't want to be a bother, but if I sleep in this again....\"\n\n\"You slept outside last night?\"\n\nJessica nodded.\n\n\"It was what? Eight degrees?\"\n\n\"The shelters are all f-full. Only room for families and single moms. I stayed there a few times but last night...no luck.\"\n\nI felt sorry for her. The weather was truly wretched. But the fact that she was a girl, and a very pretty one, tipped the scales. Maybe it was sexist but I didn't feel threatened, which was my top concern about having a stranger in my house. I had no delusions that we'd hook up though; I was twice her age, and it would be boorish to put the moves on this poor, stranded kid. I figured I'd do my good deed and that would be the end of it.\n\nI said, \"Look, you can stay here tonight. But tomorrow you need to go.\"\n\n\"I really appreciate it, mister,\" she replied. \"It's really awful out there.\"\n\n\"I'm David,\" I said, sticking out my hand. We shook. I gestured to the coat rack. \"You can hang your stuff up there.\"\n\nShe shucked her pack onto the floor and hung her camo jacket on a hook. Wet, snowy boots plopped beside the door and she wriggled out of her soggy pants. Now in a gray hoodie and jeans, she seemed even smaller than before. I looked at her more closely. If I hadn't seen her ID I would have sworn she was barely out of junior high. The oversize eyes, tiny mouth, and pointy chin reminded me of an anime chick come to life. My cock began to swell. \n\nI saw her glance around the room, pausing at the small potted pine hung with the few decorations left over from my divorce. A single string of lights draped it and a handful of presents from my family and friends huddled at its base. It seemed like a pathetic excuse for a Christmas tree, but compared to what I imagined her life to be like, it suddenly seemed like a royal spread. The scent of the fire, and the tree, and my plum-sauce chicken hit me all at once. I thought I heard her stomach rumbling. Poor kid must be starving.\n\n\"You hungry?\" I asked.\n\n\"I...I'm okay.\"\n\nYeah right, I thought. Aloud I said, \"Look, I've got some chicken. I probably won't be able to finish it all.\"\n\n\"It smells delicious.\"\n\nPointing to a giant fake bearskin rug in front of the roaring fire, I said, \"Sit down. Get warm.\"\n\n\"Thanks mister. I really appreciate it.\"\n\nI brought two plates and we ate together, basking in the heat of the wood stove. I glanced at her stunning profile and tried to ignore my swelling dick.\n\n\"My step-dad kicked me out,\" she explained between mouthfuls. \"I'm starting at the community college in two weeks. Got a full scholarship, dorm room, and everything.\"\n\n\"That's pretty impressive,\" I offered.\n\nWe chatted about her plans for a while, and I told of my life as a self-employed electrician. It seemed we were warmed as much by each other's company as by the stove.\n\n\"I haven't eaten in a day and a half,\" she said, devouring the last of the meal. \"I was just wandering around. No place to go with the library closed and the shelters all full.\"\n\nWind rattled the trees and sleet sandblasted the windows. The lights flickered.\n\n\"Might lose power,\" I said, getting up to add more wood to the fire. \"I've got candles in all the rooms in case it does.\"\n\n\"Don't use up your firewood on my account,\" she said.\n\n\"I've got plenty,\" I replied, sitting back down.\n\n\"Okay, but I'm plenty warm already.\"\n\n\"Make yourself comfortable,\" I replied, trying to sound disinterested.\n\nIn response she tugged off the hoodie and jeans and tossed them aside. She wiggled into a cross-legged position, our knees brushing. Tight, sky-blue long underwear hugged her curves like a second skin. The areola of her bra-less breasts made tantalizing mounds in the sheer fabric. The contours of her pussy were just as clearly outlined. I drank in every inch of her, not caring if she knew I was looking. She seemed quite relaxed around me, and certainly aware that I found her attractive. My cock throbbed and I felt a slick of pre-cum soaking my underwear. Still the age difference made me uncomfortable.\n\n\"You are really beautiful,\" I said sincerely.\n\n\"My boobies are too little,\" she replied, cupping her small breasts, \"The boys make fun of me.\"\n\n\"You look great, Jessica. Don't believe anyone who says different.\"\n\n\"You mean it?\" she asked.\n\n\"Mm hmm.\" I said. \"Absolutely.\"\n\nShe gazed at me like a child looking for guidance, but also as a young woman who knew what she wanted but didn't know how to get it. Firelight flickered on her sculpted cheekbones and gleamed from her plump, undersized lips. Her hazel eyes stirred like pools of molten bronze.\n\nWithout meaning to, I found my fingertips tracing her shoulder. Sliding my fingers through her golden hair and gently over the back of her neck, I pulled her to me. She fell toward me without resistance.\n\nWhat am I doing? She's half my age.\n\nA tingle coursed through me. I hadn't planned it, but her mouth hovered inches away from mine. Her doe eyes drooped nearly closed and her breasts heaved too fast for just sitting beside a fire. I felt her breath on my face.\n\nUnable to resist, I pressed my lips against hers.\n\nHer lips parted eagerly and her tongue snaked out, encircling mine, probing and testing. Pulling her closer I felt the soft warmth of her lips as her tongue explored my mouth. Her fingers stroked my thigh. My cock ached.\n\nAs I held her neck with one hand, keeping her lips against mine, my other hand mapped the contours of her petite breasts. Jessica made wonderful moaning sounds into my mouth. Her tits felt like small mounds tipped with oversized areola. Beneath my caresses her nipples swelled into firm gumdrops. I massaged one breast and then the other, reveling in the sensation of her ripe, young flesh.\n\n\"Oh David,\" she gasped, but said nothing more as I kissed her with renewed vigor.\n\nHer hand moved up to stroke my bulging crotch. It was my turn to groan.\n\n\"That's nice,\" I whispered.\n\nShe mumbled back, \"Mm hmm,\" as she rubbed my crotch, stroking my rock-hard shaft and cupping my balls.\n\nMy fingers drifted south, over her flat belly. down to her crotch. Between her wide-spread legs I felt the shape of her womanhood: the hard ledge of her pubic bone, the yielding mounds of her labia, and the space in the middle where her softness offered both mystery and promise.\n\nShe caressed me harder and I did the same for her.\n\nRubbing her crotch made her groan louder. Throwing caution to the wind, I slipped my hand beneath the waistband of her long underwear, under her panties, and over her sparse pubes. My finger caressed her moist slit and she moaned again. I pressed the tip gently into her. Suddenly she tensed up. I thought it might be the beginnings of an orgasm but she pushed me away. Her expression seemed more embarrassed than passionate. \n\n\"What's wrong?\" I asked, pulling my hand from her panties.\n\nJessica glanced away.\n\nI said, \"Look, you don't have to do anything you don't want to....\"\n\n\"It's not that.\"\n\n\"What then?\"\n\nStill not meeting my eyes, said, \"I'm kind of dirty. You know...down there.\"\n\n\"Ahhh,\" I said, understanding now. \"We need to get you cleaned up, then.\"\n\n\"Really?\"\n\n\"Oh yeah. I've got a rule in this house.\"\n\n\"What?\"\n\n\"No stinky girls.\"\n\nShe giggled, relaxing again. \"It's been four days since I had a shower. I spend most of my time hanging at the library. It's warm but you can't really wash off in the sink.\"\n\nI leaned toward her and wrinkled my nose. \"You are kind of ripe.\"\n\n\"You're mean,\" she said, slapping me on the shoulder.\n\n\"Shower's down there,\" I said, pointing to the hallway. \"You jump in, I'll bring new towels in a few minutes.\"\n\nShe scrambled to her feet and proceeded to strip. I couldn't help gawking as she peeled off the long underwear and tossed it with her other clothes. In only white cotton panties, she stood for a few moments, letting my eyes explore her exquisite body. Flawless pale skin, slender hips, tiny waist, and what couldn't be more than B-cup breasts. A stunning example of young womanhood.\n\n\"Get on in there,\" I said, cracking an imaginary whip.\n\nJessica squealed, rubbed her bottom, and trotted down the hall. Wanting to give her some time alone, I rinsed the dishes and put away the leftover food. The pre-cum felt slick against my aching shaft. I had certainly not anticipated my bland, snowbound evening taking a turn like this. Outside the wind picked up. I heard sleet attacking the metal gutters and bare tree branches clashing against each other. I couldn't be happier.\n\nAfter ten minutes I rapped at the bathroom door.\n\n\"Come iiiiiin,\" she said in a sing-song voice.\n\nI cracked the door and a wall of steam wafted out. Stepping inside, I shut the door behind me and set a few towels on the closed toilet seat. I could see her shadowy form moving behind the shower curtain, steam pouring over the top.\n\n\"Geez, hot enough for you?\" I asked.\n\n\"It feels so nice.\"\n\nI peeked around the shower curtain. She stood there in all her young, dripping glory. \n\nSmiling like she held a royal flush in a million-dollar poker hand, she said, \"You're kind of dirty yourself.\"\n\n\"Now that you mention it....\"\n\nI yanked the curtain closed again. Tying to appear calm, I stripped off my clothes. My bobbing erection was sure to give me away. Biting my lip and thinking of disgusting things, I managed to get my cock to wilt to about half size. I stepped into the steam-filled shower.\n\nShe moved close to me, her fingers stroking my hairy chest. Her hair lay dark and plastered down her back. Enormous eyes stared up at me with longing and trepidation. Her budding breasts jutted from her narrow ribcage like newly sprouted flowers. Proud, half-dome areolas tipped her up-thrust mounds. In the heat her nipples had retracted, leaving only creases on the puffy mounds.\n\nSteam swirled around us. My cock throbbed, fully erect again. I was past caring if she noticed.\n\nI crushed her against me. Since she was so much shorter than me I had to crouch so our lips could meet. I kissed her with a passion that made my head swim and my knees buckle. My hands cupped her firm buttocks. I moved my thigh between her legs. She rubbed her pussy against me as her kisses grew more passionate. Then I felt her hand grab my cock. Squeezing hard, her tiny hand was barely able to encircle my dick. She began to jack me. It felt so good I had to stop her.\n\n\"Am I doing it wrong?\" Jessica asked, gazing up at me with concern.\n\n\"You're doing great, honey,\" I said, stroking her wet hair. \"If you keep it up you're going to make me cum.\"\n\n\"Cum?\" she asked. \"Is that, like, ejaculate?\"\n\nJust hearing her say it almost made me do it.\n\n\"That's right, sweetheart. I just don't want to...ejaculate yet.\"\n\nShe stared up at me, a look of confusion on her innocent face.\n\n\"It's bad manners for me to cum before you do,\" I explained as I slipped my hand between her legs and gently probed her hole. \"Ladies first.\"\n\n\"You want me to climax?\"\n\nIs she really this innocent? \"Yes honey, that's what I want.\"\n\nI managed to get the first joint of my finger into her tight, moist hole. She moaned and spread her legs a little wider. When I got in to the second knuckle she started to tense up and rose onto her tip-toes as if trying to escape.\n\nI pulled back a little and asked \"What's wrong?\"\n\n\"It's just...I mean, I've never...\" she said, looking embarrassed. \"Just go slow and you'll see.\"\n\nEasing my finger back in, I soon encountered a taut membrane stretching across her warm tunnel. Holy shit, she's a virgin!\n\n\"See?\"\n\n\"It's okay,\" I said as I withdrew my finger. \"Like I said, we don't have to do anything you don't want to.\"\n\n\"It's not that I don't want to, it's just...well, I'm saving myself. You know...for the right guy?\"\n\n\"I understand, honey,\" I said, even though my cock was practically bursting at the thought of fucking her untouched pussy.\n\n\"You do? People make fun of me 'cause I won't do it.\"\n\n\"No, I think it's admirable. Your first time should be special.\"\n\n\"You're sweet,\" she said, then kissed me again. \"I'm glad you're not trying to force me.\"\n\n\"I've never done that before,\" I assured her, \"and I never will.\"\n\nShe paused, gave me a shy smile, and said, \"I don't know if you want to, but you can do me...you know...in the butt.\"\n\n\"You like it back there?\" I asked, unable to hide my astonishment. Convincing most chicks to try anal usually took a lot of work and large amounts of alcohol. \n\n\"I can...climax that way. I can't get pregnant and I keep my virginity too.\"\n\n\"I like the way you think,\" I said, already rubbing her ass in anticipation. \"I suppose we should get you all clean first.\"\n\n\"Okay,\" she replied, wiggling her butt in agreement.\n\nReaching up, I took the hand-held showerhead from the bracket and adjusted the water from a spray to a single pulsating stream. In a stern cop voice I told her, \"Up against the wall and spread 'em.\"\n\nGiggling, Jessica turned and clutched the sill of the small window just above her head. Steam filled the shower. She bent over at the waist and moved her feet so they were almost a yard apart. I ogled her magnificent ass. Her long hair clung to her back and she peered over a shoulder at me.\n\nI directed the stream down her lower back and then into the crack of her firm, young bottom. Soon it shot directly against her puckered butthole. I moved it closer. Water sprayed everywhere.\n\n\"Here we go,\" I warned her, then pressed the nozzle directly against her anus.\n\n\"Oooh!\" she exclaimed as the water disappeared inside her. \"Oh wow, I can feel it filling me up....\"\n\nI held the showerhead firmly against her and the pulsing stream of water filled her rectum. \"Tell me when.\"\n\n\"Oh...mmmmm...okay, that's enough.\"\n\nI removed the nozzle and her butthole clamped shut. \n\n\"Let it go now, honey,\" I told her.\n\n\"But what if it's...messy?\"\n\n\"We're in the shower. Don't worry about it.\"\n\n\"Wellllll, okay,\" she said, but nothing happened.\n\n\"Just push like you're pooping.\"\n\nShe grunted and I saw her anus flexing. Then water began trickling out. Suddenly, like a dam breaking, a torrent of water blasted out.\n\n\"Uh!\" she cried. \"Oooh, yeah....\"\n\nWater flooded out, splashing all over the bottom of the tub. Other than a few bits of dark material it was remarkably clear. Not surprising if she hadn't eaten in a day and a half. After a few seconds the flow stopped.\n\n\"Good girl,\" I said. \"Here we go again.\"\n\nI repeated the process a couple of times to make sure she was properly flushed, then set the showerhead back to spray and returned it to its holder. Hot water pelted Jessica from the knees down. Picking up a bottle of liquid body wash, I sat down cross-legged beneath her. I squirted a puddle at the top of her ass crack and then stroked it down between her cheeks with the middle finger of my left hand. Dripping with soap, my finger paused at her hole.\n\n\"Have to make sure you're nice and clean,\" I said as I slowly inserted my finger.\n\n\"Oooooh.\"\n\nAfter a minute or two of increasingly deep pushes I buried every inch in her rectum. Jessica groaned. In and out I thrust, feeling the hot, slippery inside of her ass.\n\n\"Ah, ah...\" she said. \"Oh yeah. Oh wow, that's good.\"\n\nHer anus began to clench and release, rhythmically squeezing my finger. Her small breasts rose and fell more rapidly. Can she really get off from butt play alone? I've heard about women who could but I've never met one. I decided I would give her a bit more help. Licking a huge streak of spit onto my right thumb, I began gently stroking her clit.",
        "\"Oh god, that feels soooo good...\"\n\nI kept at it for a couple of minutes, thrusting my finger into her ass and rubbing up and down on her clitoris. Her moans grew louder and her breathing got faster. Her butthole squeezed my finger with increasing speed. I thrust and rubbed faster still, matching her rhythm. I knew she was close and I was determined to bring this little vixen off.\n\n\"Ah, ah, ah,\" she yelled. \"Just like that.\"\n\nMy cock twitched in anticipation of her climax. Just having my hands on such a young, perfect body was almost enough to make me cum. I thumbed her clit and jackhammered her asshole.\n\n\"C'mon, baby,\" I urged. \"Come for me.\"\n\n\"Oh god!\"\n\n\"Just let it go.\"\n\n\"Ah, ah...AHHHHH!\"\n\nCrying out, every muscle in her tiny body went rigid. Her anus clamped down on my finger so I could only move it about an inch before the knuckle caught on her sphincter muscles, but I kept stabbing it into her hard and fast while my thumb flashed over her engorged clit.\n\nJessica clutched the window sill, her whole body spasming in pleasure. Shaking, she just held on and moaned. I thrust and rubbed, trying to draw out her climax for as long as possible.\n\n\"Oh god...oh shit...that's so good....\"\n\nIt felt like forever but it was probably less than a minute before her body began to relax. I slowed to keep pace with her. Hanging her head, she shuddered and her knees started to buckle. I stopped moving my left hand entirely, instead leaving my finger inside her and pushing upward to help her stay upright. My thumb barely brushed her throbbing clit. Then I stopped even that.\n\nWe stayed like that for a few long moments: she clutching the window sill as she caught her breath, me sitting beneath her, finger buried in her young ass, my cock pulsing almost painfully.\n\n\"Oh, wow...\" she said at last.\n\n\"That was great, baby,\" I offered.\n\n\"Mm hmm.\"\n\nSlowly easing my finger from her hot, soapy rectum, I said, \"Gotta rinse you out now.\"\n\nWithout a word she handed me the showerhead. I again put it on a solid stream and brought it to her ass. I pressed the nozzle to her hole and the water vanished up inside her. She gave a soft groan but didn't lift her head. After several seconds I took the showerhead away and the water, unrestrained this time, poured right back out of her gaping asshole. Foamy water splashed on my chest, running down my body and over my erect dick.\n\nI filled her a second time, giving her a much longer dose. When she moaned I backed off. Niagara Falls seemed to gush from her firm buttocks. Watching the cascading water was far more arousing than I expected. Crystal-clear liquid washed over my chest, belly, and crotch. The warm water from her teenage rear end, along with bringing her to such an intense orgasm, had me in a very high state of arousal myself. After a couple more flushes (purely in the interests of good hygiene, of course) I stood and hung up the showerhead again.\n\nFor a long moment she just clung to me.\n\n\"God, that was amazing,\" she said.\n\n\"Stop calling me God,\" I replied.\n\nShe poked me in the ribs, and said, \"No, I mean...no one's ever done that before.\"\n\nHer hand again went to my cock. If it was possible for my dick to be more than one hundred percent hard, it was. Blocking the hot water that sprayed over my legs, Jessica sat down in front of me, gazing up at me with those luminous eyes.\n\nThough she had offered her ass a few minutes earlier, it seemed she had something else in mind now. Maybe she sensed I would only last a few seconds once inside her and she wanted more than that, or maybe she relished sucking cock. Hell, maybe she just didn't like fucking while standing up. Wasn't my favorite position either.\n\nI gazed down at her as she inspected my cock.\n\nAt almost seven inches, I'm not the biggest guy in the world. But watching her assess me...I felt like a porn star. Her fingers could barely reach around the base of my shaft. Her other hand hefted my testicles. She stared at them as if they were alien lifeforms. Spilling over her narrow palm, my nuts looked like tennis balls.\n\nHer lips parted. How the hell was she going to fit my cock in that little mouth? Stroking the top of her head, I pulled her toward me. Her eyes looked into mine as my cock-head slid past her Cupid lips.\n\n\"Mmmm,\" she mumbled as she took the first two inches.\n\nI groaned. Steam engulfed me and I struggled to stay on my feet as her tongue snaked over the end of my cock. She pumped me a bit harder. Backing off, her tongue traced the underside of my shaft, then over my balls. Watching her face as she explored my undiscovered territory...I'd seen that fascinated, slightly scared expression when I was a young man. But in my mid-forties I never thought I'd see it again.\n\nShe took me into her mouth a second time, sucking more earnestly now. One hand gripped me and stroked back and forth while the other caressed my balls. I didn't know how many times she'd done this but she was a natural. Between her unsure expression, the oral sensations, and the soft mewing sounds she made, I knew I wouldn't last much longer.\n\n\"That's so good, baby,\" I said.\n\nShe mumbled her agreement and went faster. I felt the pressure building inside me. Her warm mouth slurped the first half of my cock and her hand worked the rest. The whole time she looked right at me. Her big, hazel eyes pleaded with me, her eyebrows raised as if asking \"Am I doing this right?\"\n\n\"That's perfect,\" I managed to croak.\n\nIn response she gripped my shaft even tighter, amping up her suction and moaning like she was the one close to orgasm. My balls stirred, now seconds away from erupting.\n\n\"That's sooo good,\" I gasped as I reached the point of no return. \"You're about to get a mouthful of semen, honey,\"\n\nHer eyebrows pinched in a look of concern but she didn't slow down.\n\n\"There's gonna be a lot....\"\n\nShe nodded and sucked harder.\n\n\"Just...ahh...gulp it all down....\"\n\nShe nodded again, still looking a bit scared. The intense pleasure of her insistent sucking and pumping took me right to the edge. I couldn't hold back any more.\n\n\"Oh god...here it comes!\"\n\nWith a groan I ejaculated into her mouth. At the first massive spurt, her eyes bugged out and she gagged on my thick liquid.\n\n\"Oh yeah,\" I shouted. \"Oh fuck!\"\n\nI gave her another spurt, and then a third. Her hand kept pumping and she made choking sounds as she struggled to gulp my load. Just as the fourth spurt raced through my cock, she pulled her mouth away. I sprayed my cum across her cheek and ear. Her tiny hand kept pumping. She must have realized I was still spewing because her gaze locked on my dick.\n\n\"Wow\u2014\" she started to say, but my next spurt took her right in the forehead, a huge starburst of creamy icing.\n\n\"I'm still cumming, honey,\" I said as I grabbed her head and crammed it back on my cock. \"Keep going, keep going!\"\n\nSucking with renewed vigor, she jacked me hard and slurped my erupting penis. I fired off again and again. Her cheeks started to bulge from the sheer volume of my load. Her eyes, already wide, went even wider.\n\n\"Swallow, baby, swallow,\" I urged her.\n\nShe must have started chugging because her cheeks deflated and she seemed to relax. With strong strokes and firm suction, she soldiered on, determined not to be defeated by my gigantic load. Semen dribbled from the corners of her mouth. Jaws distended like a snake eating a rabbit, she watched my expression as she milked my spurting dick. \n\nAt last my squirts began to weaken. In response she lightened the suction and her grip loosened. Head bobbing forward and back, she extracted a few final drops.\n\nI groaned.\n\nJessica swirled her tongue around the head of my cock as her hand gently stroked my shaft. Her doe eyes gazed up at me with an intoxicating mix of pride and disbelief. After another minute she released me and held up her hands. I helped her to her feet.\n\nAs before, she clung to me, but this time I was the one with the heaving chest.\n\n\"That was amazing,\" I offered.\n\n\"You really liked it?\"\n\nInstead of answering I said, \"You look hot with my cum on your face.\"\n\n\"You're a naughty talker,\" she replied with a grin as she pushed the semen from her cheek toward her lips. Her fingers disappeared into her mouth, then emerged clean. \"After the first couple of squirts I thought you were finished.\"\n\n\"I'm what you call a heavy cummer.\"\n\n\"No kidding,\" she replied, scraping the spooge from her forehead, down the side of her nose, and over her lips. She gave me a puppy dog look as she sucked her fingers clean. \"I've only seen two other guys squirt their stuff but they didn't have nearly this much.\"\n\nFor a sweet, innocent girl like her to chug the amount of semen I just gave her...she earned some kudos.\n\n\"You really did good. A lot of women can't deal with a load that big.\" I caressed her small breasts. \"Did you enjoy that?\"\n\n\"Mm hmm,\" she said with a sultry look that seemed somehow out of place on her youthful face. \"Right before you did it I was kind of nervous, but once you started squirting in my mouth I really liked it. It's like something came over me.\"\n\nI chuckled. \"Yeah, I came over you.\"\n\n\"Stop it,\" she said with a playful slap.\n\nI held her for a long moment, then backed away.\n\nStepping out of the shower, I asked, \"You want some hot chocolate?\"\n\n\"Yummy!\" she announced.\n\nI walked out and closed the door on the steam-filled room. After placing a bottle of lube near the fire in anticipation of what the evening might hold, I wandered into the kitchen. Ten minutes later I strolled back into the living room with two mugs of hot cocoa. Jessica lay on the rug, completely naked. I paused to soak in the sight. On her back, her dainty feet pointed one way while her hands reached the other, stretching like a cat. Conical breasts capped by those tantalizing puffy areola glowed round and flawless in the firelight. Faint, multi-colored lights dotted the room from the Christmas tree. The scent of the tree mingled with the smell of the fire, soap, and a hint of steam wafting in from the hallway.\n\n\"What?\" she asked as I gazed at her.\n\nI tried not to spill the cocoa. \"You're not cold?\"\n\n\"All my clothes are dirty.\"\n\n\"Too bad,\" I offered, kneeling and handing her a cup.\n\nWe sat cross-legged together, sipping hot chocolate and basking in the fire's warmth. Outside, ice pummeled the house. I heard trees creaking in the wind. Sleet scratched at the windows incessantly.\n\n\"So you really slept outside last night?\" I asked.\n\n\"Mm hmm.\"\n\nI watched the subtle movements of her face. Cheekbones glistened in the amber glow, highlights reflecting from her plump lips. She seemed at once both worldly and vulnerable. How does she feel, forced into a random home to escape frozen death? Am I wrong for wanting her so badly? \n\nAfter a couple of minutes slurping hot chocolate I said, \"They kicked you out, eh?\"\n\n\"Yes,\" she replied, glancing away from me.\n\n\"You seem like a good person,\" I offered. \"Smart, articulate. Why would your folks toss you out?\"\n\n\"Not my folks, just my mom and her jerk boyfriend. My dad left a few years ago. Now mom just sits around with Kenny drinking beer. She doesn't want me around at all.\"\n\n\"I'm sure she loves you,\" I said, but the words didn't ring true.\n\n\"I don't want to talk about it.\"\n\nI nodded. Something awful happened, or almost did, I guessed.\n\n\"I'd rather be alone in the snow than stay at home one more day. I've got twelve days 'til I start college. Then I'll have a dorm room. If I have to sleep at a bus stop until then I will.\"\n\nI nodded again. She's walked a tough road but plowed on with a determination that would shame most women twice her age. We sat there for a few minutes in companionable silence. Then I had an idea. I got to my feet and walked in the kitchen. A moment later I returned with a can of whipped cream. She glanced from my face to the can and back again. I squirted foamy cream into our half-full mugs, the hiss of its release loud in the quiet living room.\n\nShe lapped the cream but said nothing. My almost-hard cock surely tipped her off that I had something more devious in mind. I felt a delirious tension, the subtle tug of things unsaid. We were both thinking the same thing. I knew she knew it and she knew I knew it. After a few more minutes she set the mug aside and lay on her back again, stretching her arms over her head.\n\nHer breasts pointed skyward, crowned by the soft mounds of areola. In the warmth her nipples had retracted again. Giving the red-and-white can several shakes, I brought the white plastic tip to the nearest tit. I grinned at her and pushed the nozzle. White foam hissed out.\n\n\"Ooh, that's cold,\" she said.\n\nSetting the can aside, I leaned over and began tracing the curve of her breast with my tongue. I drew some of the sweet foam into my mouth. As the cream disappeared, my tongue spent longer and longer exploring the contours of her bulging areola. Her nipple, once hiding discreetly, now thrust up like a warm, firm thimble. I nibbled it gently.\n\n\"Ohhhh,\" she whispered.\n\nAfter another minute of worshiping her exquisite breast I sat back. Though the fire had died down I felt hotter than before. Orange light defined the peaks and valleys of her hips, abdominal muscles, and collar bones. She wasn't quite skinny but she didn't have much padding either. If she was taller she could easily be a lingerie model.\n\n\"They don't match now,\" Jessica said.\n\n\"What?\"\n\n\"My nippies,\" she replied, brushing her index fingers over both nipples. \"One's all pointy but the other isn't.\"\n\nI looked for myself. The nipple I'd been working stuck up like a tiny volcano while the other was more like half a ping-pong ball. \"Guess I'll have to fix that.\"\n\nShe giggled as I sprayed more whipped cream on the other breast. Her laughs quickly turned to moans. After a minute both nipples looked the same.\n\n\"Happy now?\" I asked.\n\n\"Maybe.\"\n\n\"What do you mean, maybe?\"\n\nShe said nothing but wiggled her hips. She wants the whipped cream treatment on her pussy, I realized.\n\n\"I don't know,\" I said, trying not to appear as excited as I was, \"there's not much left.\"\n\n\"Give me that,\" she demanded, holding out her hand. I gave her the can. She hefted it, squinted suspiciously, and gave it back. \"It's almost full.\"\n\n\"Really?\"\n\nShe nodded. \"Maybe you should see for yourself.\"\n\nIn response I knelt on the rug in front of her, my knees spread wide and cock bobbing in the air. Rock hard and throbbing, clear pre-cum trickled from the tip and ran down my shaft in a rivulet that gleamed in the firelight. Jessica rolled onto her tummy, supporting herself on both elbows. She gave the can a few shakes. Smiling, she sprayed a line of whipped cream from my pubes to my cock-head, then set the can aside.\n\nShe brought her face close. Her mouth opened and her tongue snaked out, just barely brushing the cream on the end of my dick. She slowly circled the tip with her tongue, licking off dabs of cream while grazing random spots on my penis.\n\n\"Yummy,\" she offered.\n\nShe worked me with only her mouth, though one hand hefted my dangling balls. First she engulfed my shaft as far as she could, slurping and licking whipped cream. Since she could only engulf about half my length she had to back off to lick the the top of my shaft. As before, her tongue and lips felt exquisite. I held her head and gently thrust into her willing mouth.\n\nAfter a couple of minutes I pulled out and said, \"That's enough for now. I've got something else in mind.\"\n\n\"Ooh, really?\" she asked, wiggling her bottom.\n\n\"On your back, sweetie,\" I said.\n\nShe rolled ass-down again, stretching and writhing. I don't think she was trying to be provocative. It felt more like she was...exploring. Looking for her limits. I was quite happy to help her find them. I moved down, knelt between her legs, and gazed at her stunning young body. \n\nI almost shook my head, unable to believe this little angel had fallen into my life. Her body was firm and slender without the slightest blemish. Golden hair lay spread across the rug as if it were light created by her sheer beauty. Her puffy areola and erect nipples pointed casually toward the ceiling. And her pussy...oh lord.\n\nSmooth and rose colored, a single drop of clear liquid trickled out, snaking downward like translucent lava flow. Sheer lips nestled between her almost-hairless labia. Sparse, sandy colored hair formed a triangular patch on her pubic bone. Her clitoris, dark pink and protruding from the mounds on either side, thrust out as evidence of her arousal. The earthy scent of her pussy dominated that of soap and shampoo.\n\nSupporting my upper body on my elbows, I gave the can a few shakes. I brought the nozzle to her vagina and asked, \"Ready?\"\n\n\"Uh huh,\" she said, sounding a little nervous.\n\nI squirted some foam on her crotch. She squirmed but didn't try to pull away. Leaning forward, I slid my tongue between her clit and her almost-hairless mounds. I lapped at her labia, stroking one soft curve, then the other. Jessica moaned a little and wiggled her hips. Then slowly, lightly, I licked her clitoris.\n\n\"Oh!\" she exclaimed, jerking like I'd given her an electric shock.\n\nWas it possible she'd never been eaten out before? Seemed hard to believe, but her reaction seemed as much surprise as pleasure. I'd start gentle but I was determined to coax another orgasm from her. My tongue caressed her engorged clit, circling it first one way and then the other. I lapped her from just below her opening, the full length to her most sensitive spot, ending in her pubic hair. She tasted like whipped cream and girl juice.\n\n\"Oh god, that's so good....\"\n\nHer fingers tangled in my hair and she started grinding her crotch against my face. I licked faster. She moaned louder. I slipped a finger into her sopping vagina, being careful to only push in to the second knuckle. I wanted her to relax, not feel like I was going to de-flower her manually. \n\n\"Oh wow,\" she groaned.\n\nI felt her vaginal muscles squeezing my finger. Her hip-thrusts grew more vigorous. Time to ramp it up, I thought. I clamped my mouth over her clit and labia, made sure I had a good seal, and sucked.\n\n\"Oh shit! What are you doing?\"\n\nI kept up a moderate suction and lashed her clit with my tongue.\n\n\"Oh yes....\"\n\nShe grabbed my hair with both hands, fucking my face with her pussy and making little gasping sounds. I knew she was getting close. I thought about backing off to let her come down a bit, prolong the ecstasy for a while, but I thought she might not understand or would even get upset, so I went for my final technique. Still being careful not to push in too far, I turned my hand palm-up and stroked the front of her vaginal wall, the so-called G-spot. This had no affect on some women but others went wild. Jessica was in the second group.\n\nThrashing and bucking, she mashed her pussy into my face with so much force it almost hurt. I sucked harder, focusing my licks on the dense cluster of nerves under her clitoral hood.\n\n\"Oh god, that's perfect,\" she cried. \"Right there, right there....\"\n\nShe howled and pulled my face in tighter. Going full-bore now, I sucked and licked as vigorously as I could, caressing her slippery wall with firm up-and-down strokes.\n\n\"Ahh! Ahh! I'm....\"\n\nPulling my mouth against her, she face-fucked me like I'd done to her in the shower. I kept up the pressure.\n\n\"I'm gonna....\"\n\nHer pelvis trembled against my face. \"Oh...oh...oh god....\"\n\nI sucked for all I was worth, punishing her clit with my tongue and working her G-spot. \n\nJessica screamed, \"AHHHHH!\"\n\nHer ass lifted up off the rug. Trembling thighs clamped my head as warm liquid trickled into my mouth. She moaned incoherently, head tossing from side to side, one fist tangled in my hair, the other clutching the rug.\n\n\"Ah! Ah!\" she exclaimed, as a rivulet of slippery fluid dribbled over my tongue.",
        "The sweet scent of her orgasm reached me, even as her legs held my head immobile. A primal, earthy smell, like rain forest after a storm, communicating her satisfaction in a way that words never could. My throbbing cock rubbed against the rug, spreading pre-cum all over it and myself.\n\nJessica moaned and writhed. I held on, letting her use me as she wished. Humping and bucking, she rubbed her crotch into my face, her vaginal muscles squeezing and releasing my finger.\n\n\"Oh...my...\" she shuddered again, \"...god....\"\n\nI waited. Her scent strong in my nostrils, I gleefully slurped her delicious girl parts.\n\n\"Ooooh....\"\n\nI relaxed my suction and lightened the licks, still working her G-spot with my finger. She kept moaning, making hip-circles against my face. I felt her thighs relax and her legs start to spread. Her ass settled back to the rug. Gently, I withdrew my finger and licked even more lightly. After another minute I stopped completely.\n\nWith a long, languorous sigh, she said, \"Oh wow....\"\n\n\"Mm hmmm,\" I offered, propping myself on my elbows. \"That was great.\"\n\n\"You...you really liked doing that?\"\n\n\"Of course. Why wouldn't I?\"\n\n\"It's just that some guys...well, they don't....\"\n\n\"Giving you pleasure makes me happy,\" I said, sitting back on my heels and wiping at the fluid that covered my mouth and chin. \"Didn't you like getting me off in the shower?\"\n\n\"Well, yes,\" she admitted.\n\n\"Same thing.\"\n\n\"Really?\"\n\n\"Mm hmm,\" I assured her.\n\n\"You want to do again?\" she asked with a shy smile. \"You know...in my bottom?\"\n\nI grinned back. \"Turn over, honey.\"\n\nShe rolled onto her tummy and I again admired the firm curves of her young backside. Grasping her slender ankles, I gently spread them apart.\n\nOne foot.\n\nThen two.\n\nThree.\n\nI opened her up, ogling her most intimate parts. Rose-colored lips appeared inside the glistening mounds of her labia, nestled between the perfect half-spheres of her glorious ass. And her anus, a tiny pink asterisk, taunted me, almost daring me to plunder it. I released her. She was nearly doing the splits.\n\nTrying not to sound as intoxicated with lust as I was, I said, \"You really have a beautiful body.\"\n\nTossing her golden hair, she looked over her shoulder at me. \"Are you sure?\"\n\n\"Mm hmmm.\"\n\nI glanced from her innocent face to the glorious femininity spread before me. Her anus pulsed in a slow rhythm, first retracting and then pushing out, tiny muscles begging for attention. I scooted forward, still sitting on my heels, and stroked her diminutive feet. She cooed. My hands moved upward, caressing her calves, the backs of her knees, then her slender thighs. Each time I stroked down, I went back up just a little bit higher. My cock bobbed in the air, dripping pre-cum, ready for another release.\n\nNow face-down in the rug, she moaned softly, seemingly content to let me do whatever I wanted. My face drew toward her like iron to a magnet. Leaning forward, I kissed the back of one creamy leg, then the other. Up and up I kissed until my lips reached her ass. I took my time, savoring every inch of her.\n\nMy tongue snaked between her buttocks, licking that sweet spot between her vagina and anus. She groaned louder and began to wiggle. I inhaled the earthy scent of her untouched pussy. \n\nAfter getting some saliva on my pinky, I gently pressed it into her butthole. I wanted to loosen her up, get her ready for what would come next. She moaned as I rotated my finger. I pushed my pinky in and out, moving it in expanding circles in an effort to coax her to relax. Jessica moaned and thrust back against me. I caressed her rectum, teasing her, establishing my dominance. When I withdrew my finger she stayed open. In the shadows cast by the flickering fire, I could barely see her small hole.\n\nI gave the whipped cream can a few quick shakes and inserted the nozzle into her anus, being careful not to scratch her tender tissue with the hard plastic tip. Pushing the nozzle sideways, I spewed whipped cream inside her.\n\n\"Oh wow, I can feel it,\" Jessica said, clenching down on the tip and wiggling her bottom.\n\nAfter a few more seconds I pulled the can out and set it aside. White foam bubbled out of her ass, expanding like shaving cream. Trying to catch it before it all escaped, I quickly stuck my face between her cheeks. Sweet cream spurted into my mouth.\n\n\"Oh wooooow,\" she said. \n\n\"Mm hmm,\" I agreed, lapping at her tight opening.\n\nI ate the delicious cream from her even-more-delicious ass, as aroused by her moans as she was by my attention. Spreading her teenage buttocks with my hands, I probed her opening with my tongue and slurped away. All too soon the foam was gone.\n\nI can fix that, I thought.\n\nSlipping the nozzle into her anus a second time, I injected her again.\n\n\"Oh yes....\"\n\nI kept it going, filling her with a massive stream of whipped cream.\n\n\"That's...uhhh...ooh...enough.\"\n\nGiving her another couple of seconds, I finally withdrew the can and set it aside. I used my other hand to clamp her buttocks closed as I changed position. Settling onto my belly, I propped myself up on my elbows. This brought my face within inches of her crotch. I licked her sopping pussy, extracting more moans as her excitement built. \n\nMoving from her vagina, I slurped the sweet foam slithering from her ass. Jessica's moans increased in volume. Thrusting my tongue into her anus, I plunged in and out, fucking her with my mouth.\n\n\"Oh yes....\"\n\nI licked her more vigorously, stabbing my tongue into her tender backside as hard and fast as I could. She reached back and grabbed a fistful of my hair, pulling my face into her ass as she pushed back against me.\n\n\"Oh god,\" she moaned. \"You're gonna make me do it again....\"\n\nI managed to pull away enough to say, \"Go for it, baby.\"\n\n\"Are...are you sure it's okay?\"\n\n\"Mm hmmm,\" I mumbled into her ass, licking her hard and gulping the whipped cream that continued to bubble out.\n\nThrough my face I felt her begin to tremble. Her gasps grew louder again and she wrenched my hair, pulling my mouth into the cleft of her ass. Her legs started to spasm.\n\n\"Ah...ah....\"\n\nShe paused, froze for a moment, and then:\n\n\"AHHHH!\"\n\nHer climax came suddenly, like it surprised her as much as it did me. Her fist in my hair wrenched my head, pulling me into her. She writhed beneath me, impaling her asshole on my tongue.\n\n\"Oh shiiiiit,\" she groaned.\n\nI gripped her upper thighs, pushed my head forward, giving her everything she needed.\n\n\"Oh...my....\"\n\nJessica twitched and trembled, yanking my hair.\n\n\"...god....\"\n\nShe convulsed a few times, then whimpered. Her fingers relaxed their death-grip on my hair and I felt the tension in her legs dissipate. With one last groan she lay still.\n\nAfter another minute of gentle licks, I sat back on my heels and admired her again. Her juice felt warm and slick on my face and my cock twitched in time with my pulse. Still doing the splits, Jessica sprawled on the rug before me. I couldn't help but look at the moist, shining place between her legs. Red, green, and yellow pinpricks of light from the Christmas tree shone on the taut muscles of her young body. Outside, the storm raged on.\n\nWith a sharp crack, the lights winked out. I looked around and saw the digital clock and cell phone charger were dark too.\n\n\"Power's out,\" I offered.\n\n\"We don't need it,\" Jessica mumbled, as if she were just waking from a deep sleep. \"Do we?\"\n\nI grinned. \"No we don't.\"\n\nTwisting at the waist, Jessica turned to look over her shoulder at me. Her silky hair cascaded over her shoulders and spilled to the floor. Gazing at me with those big, doe eyes, she asked, \"Are you going to...you know...do me now? In the bottom?\"\n\nI thought about quibbling over the expression \"do me\" but I thought better of it. Instead I just said, \"You better believe it, honey.\"\n\n\"What do you want me to do?\"\n\n\"Just get comfortable. Are you okay on your tummy?\"\n\nShe nodded, then turned and dropped her face back to the rug. \n\nOh hell yes, I thought. The moment I've been waiting for.\n\nI grasped her ankles and pulled her legs closed, then moved up to straddle her slender thighs. Reaching for the bottle of lube, I flicked open the top and coated my cock, then squirted a stream of lubricant into the crack of her ass. The slick fluid gleamed in the firelight. I tossed the bottle aside. Leaning forward, I supported myself with one hand while the other reached down to position the head of my dick at her slippery opening.\n\n\"You ready, baby?\" I asked.\n\n\"Oh yes,\" she whispered, face down on the rug. \"You can put it in me.\"\n\nMy cock was so hard it almost hurt. I pushed but met with some resistance. She was so beautiful but so young. I still felt a bit guilty.\n\n\"Please put it in my bottom,\" she whispered, not able to meet my gaze.\n\nI pushed harder, the tip of my dick pressing against her anus. Through my cock-head I felt her opening, a firm ring of muscle both fighting to keep me out and trying to let me in. I pushed harder. Jessica gasped.\n\n\"You okay?\" I asked, concerned that I might be hurting her. \n\nHer fists clutching the rug, she groaned and pushed back against me. The head of my cock popped through her opening.\n\n\"Ah!\" she exclaimed.\n\nI froze. As in the shower, her diminutive size made me look enormous by comparison. I can't say that it bothered me. I hadn't felt this powerful and virile in years. With just the tip of my dick in her ass, it looked like I was trying to cram my forearm into her. I was splitting her tiny buttocks with my meat and it felt amazing. Can she really take the whole thing? \n\n\"You sure you're okay?\" I asked again.\n\n\"Will you please just...\" she gasped, \"just put it in?'\n\nI did as she asked, sinking into her impossible warmth an inch at a time. I felt the contours of her slick rectum, and the muscles of her anus squeezing me.\n\n\"Oh yeah,\" Jessica said. \"Oh wow....\"\n\nI kept pushing until I was buried in her up to my pubes. I stayed there, motionless, letting her get used to me. And letting me get used to her. I didn't want to shoot too soon so it was important that I relax as well. Then, slowly, I began to withdraw. I pulled back until only the head of my cock remained inside. Her sphincter muscles gripped me tightly.\n\nJessica glanced over her shoulder at me, waiting. I pushed back into her, a little faster, not stopping until she had every inch.\n\n\"Oh yeah....\" she said.\n\nI let out a breath, withdrew, and pushed in again. Her sphincter muscles squeezed so tightly it bordered on unpleasant. Probably why I didn't cum instantly.\n\n\"Yes...\" she whispered.\n\nI picked up the pace, still fucking her carefully but with a bit more force. Straddling her ass, I dropped to my elbows. Jessica's wonderful golden hair filled my vision. I breathed in the scent of her as I rammed her ass faster and faster.\n\nShe grunted something that sounded like \"Gruuuuuh.\"\n\nI took that as encouragement and gave her my shaft more forcefully.\n\n\"Oh, yeah,\" she said. \"Uhhhhhh....\"\n\nI thought about asking again if I was hurting her but she'd seemed almost offended by the question earlier. Maybe she thought it was some rite of passage to take my cock up her ass? Maybe she liked it but felt guilty? I didn't know. In any case I kept straddling her ass, my knees spread wide, ramming my dick into her slick, willing rectum. She lay below me, straight as a board. Her hands reached one way and her feet, ankles pressed together, reached the other. I fucked her harder.\n\n\"That's so....\" she groaned.\n\nDropping my face into her silky tresses, I rammed her ass faster.\n\nShe said, \"Oh yeah, you feel so big.\"\n\nWhat man doesn't want to hear that? I stepped it up, giving her my dick with increasing power. I felt her anus clutched my shaft with increasing vigor. Jessica shuddered. Her supple body began to undulate beneath me.\n\n\"I'm...\" she gasped, \"...gonna....\"\n\nI whispered in her ear, \"Yes.\"\n\nShe grunted, twitched, and shook even harder. I reached back with one hand to hold her ass in place as I continued to slam her tight hole. She cried out and held onto the rug with both fists.\n\n\"Huh,\" she groaned. \"Huh! I'm....\"\n\nI rammed her with all my strength.\n\n\"Ahhh!\" she shouted.\n\nAfter that I couldn't tell what she was saying. Throwing away all concern for the sanctity of her ass, I slammed into her as hard and fast as I could. Her anus spasmed around my shaft. I couldn't take much more of this.\n\n\"Oh yeah,\" she groaned, trembling beneath my thrusts.\n\nThen, with a series powerful convulsions, she shook one last time and went limp. Her hands released the rug and her anus relaxed its grip on my cock. I reduced my speed, going slower and slower. She groaned.\n\nAfter slowly pushing my dick fully inside her, I stopped moving entirely. I lay atop her, breathing heavy and feeling her panting beneath me. The scent of her juices drifted to me, detectible even over the smell of the fire and her flowery shampoo.\n\nWe lay like that for a few minutes, basking in the warmth of the fire and each other. My rock-hard dick twitched in her ass.\n\nTwisting around so she could see me, she tossed her blond air aside and asked, \"Will you...ejaculate for me now?\"\n\nI wanted to savor her a bit longer but I was concerned that if I didn't come she might think she was doing something wrong. I sensed her insecurity and wanted to be sure she knew how sexy and wonderful she was. I said, \"You better believe it, honey.\"\n\nIn response she wiggled her bottom, encouraging me to start thrusting again.\n\n\"Get onto your hands and knees,\" I said, tugging at her narrow waist.\n\nShe obeyed, and I soon found myself behind her, gripping her hips, fucking her tight ass doggy style.\n\n\"Oh, that's great,\" she offered. \"It feels...ah...different....\"\n\n\"You feel so good, Jessica,\" I said, thrusting into her with increasing speed.\n\n\"Yeah...oh yeah....\"\n\nAfter a couple of minutes I wanted to try a different position. Reaching down, I grabbed a handful of her hair. I tugged very gently and said, \"Sit up, baby.\"\n\nAs she did, I fell back on my heels. Now she sat in my lap, fully impaled on my shaft. Her long, silky hair slithered between her back and my chest. I pulled her slender body close. I bounced her for a while, extracting an ever-louder series of moans from both of us.\n\nShe said \"Oh, yeah,\" and then trembled some more.\n\nI reached down between her legs and stroked her sopping pussy. It felt like my cock had disappeared into another dimension, the pleasure of her tight rectum was just so intense. She rode me all on her own now. Up and down she bounced, taking me fully inside. She gave a delightful whimper each time she sank onto my meat. Her pace picked up and her moans grew louder still.\n\n\"Oh god,\" she groaned. \"Not again....\"\n\n\"Go for it, honey,\" I encouraged her.\n\n\"You're gonna...make me...do it again....\"\n\n\"I want you to.\"\n\n\"But I...I feel so....\"\n\n\"What?\" I asked her, breathing hard, fighting off my own orgasm so she could have another turn. I knew I'd spew soon, but I really wanted to experience her a bit longer.\n\n\"I...I feel so naughty.\"\n\n\"It's okay, you're just enjoying yourself,\" I assured her as I rammed her ass. \"It's perfectly natural.\"\n\nEven in the heights of passion I understood her concern. She'd been conditioned to put a man's needs above her own. I basked in the sensation of her supple body, the smell of her hair, the demanding clutch of her anus squeezing my dick. I was determined to get her off again, to show her that her needs were just as valid as my own.\n\n\"Are you...sure?\" she asked, bouncing even more vigorously.\n\n\"Yes baby, you're fine. Go ahead and let it out.\"\n\n\"O-okay....\"\n\nI brought my lips to her ear and whispered, \"Come for me, honey.\"\n\nShe gasped and trembled harder.\n\n\"Do it,\" I urged, tracing the contour of her ear with my tongue. \"Have the biggest orgasm of your life, right now.\"\n\n\"N-now?\" she asked, shuddering.\n\n\"Right this instant,\" I demanded.\n\n\"Oh...I,\" she gasped, barely able to form words. \"I....\"\n\nI leaned back, supporting myself with one arm as my free hand kept stroking her crotch. She rode me like a bucking bronco. I thrust up into her as hard as I could, no longer worried about whether I was hurting her. Clearly I wasn't.\n\n\"Ah! Ah!\"\n\nShe bounced in my lap as I fingered her crotch. I stroked the hot, swollen mounds of her labia. My fingertips barely brushing the edges of her clitoris, I rubbed that wonderful space between her legs. I felt her juice trickling over my balls.\n\n\"Oh god...I'm gonna....\"\n\n\"Do it. Do it,\" I demanded.\n\n\"I'm....\"\n\n\"Come on, baby,\" I insisted.\n\nHer entire body shook like she'd been electrocuted. She clamped down on my shaft, so hard it almost hurt.\n\n\"Ah! Ah!\"\n\n\"Yes!\"\n\n\"AHHHHH!\" she screamed, and then went into something that resembled cardiac arrest.\n\nSpasming and thrashing, Jessica writhed in my lap. Her fingernails gouged into my thighs.\n\n\"Oh god,\" she moaned.\n\nI gripped her hips with both hands and slammed her up and down on my dick.\n\n\"Ahhhhhh!\" she screamed. \"Oh fuck!\"\n\nStill I held her in place. She trembled like a dog shaking off water. Her ass squeezed my shaft, as strong as a handjob, pulsing and insistent. I thought I might spew at any moment.\"AHHHHHHH!\" she bellowed again, convulsing and clutching my legs.\n\nI held on as she exploded. Her ass gripped me and I felt more warm liquid trickle over my balls.\n\n\"Oh...\" she groaned. \"Fuuuuuuuck....\"\n\nOther than my thighs, she failed to find anything to hold on to. The pain of her nails helped distract me and delay my own inevitable release.\n\n\"Oh...my....\"\n\nShe groaned and trembled.\n\n\"...god....\"\n\nHer powerful anus squeezed my shaft. I thought she might pinch it off entirely, based on the strength of her contractions.\n\n\"That's great, baby,\" I managed to gasp.\n\n\"Oh yeah,\" she replied, slamming herself onto my meat, grinding and wiggling and gasping.\n\nI brought my lips to her ears again. \"That's so good,\" I whispered.\n\nShe shuddered, then went limp in my arms.\n\n\"...yes....\" she said.\n\nI traced the ridges of her ear with my tongue again. \"That was soooo good,\" I repeated.\n\nShe mumbled something.\n\n\"Yes,\" I agreed, though I had no idea what she'd said.\n\nI held her against me as her tremors subsided. Somehow I'd managed to not come yet, but I knew that wouldn't last much longer. I flexed my cock, feeling her ass gripping me.\n\nAs if reading my mind, Jessica twisted around to look over her shoulder at me again. Her golden hair cascaded down her back, and the fire brought out the elegant curves of her face. I felt her ribcage expanding and contracting. Her metallic eyes were so large and luminous they seemed almost fake. But the muscles of her anus, milking my shaft, assured me she was very real indeed. \n\nGazing at me with those impossible eyes, she asked, \"Now,\" she gasped, \"now will you ejaculate for me?\"\n\n\"Yes,\" I said, then paused. \"No.\"\n\n\"W-what?\" she asked, still shivering from the after-tremors of her orgasm.\n\n\"You have to make me.\"\n\nJessica torqued her body around, trying to look at me more directly. Her eyebrows pinched and her pillowy lips pursed as she considered my response.\n\n\"Make you?\" she asked.\n\n\"Mm hmmm.\"\n\n\"Okay,\" she began, then paused. \"But, um...how?\"\n\n\"Turn around,\" I told her.\n\nI expected more questions but instead she just turned, swung one leg over, and spun around in my lap. One second her back was towards me, the next we were face to face.\n\n\"You're pretty limber,\" I said.\n\n\"I do gymnastics,\" she said, then hesitated. \"So, ummm....\"\n\nMy cock remained buried in her ass. Those radioactive eyes bored into me. My hands slid down the firm muscles of her back, over her hips, to caress the wonderful mounds of her sweet, young ass. With a few awkward wiggles I managed to get my feet out from under my butt. I laid flat on my back on the fake bearskin rug, my nubile princess still astride me.",
        "\"Go for it, honey,\" I encouraged her.\n\n\"You mean I should...\" she said, beginning to ride me tentatively.\n\n\"Oh yeah,\" I groaned. \"That's perfect.\"\n\nShe straddled me, her feet and knees on the rug on either side of my hips. Bouncing up and down, she took my dick into her ass deeper and deeper. I could tell she was unsure of herself\u2012she still looked like a kid caught with her hand in the cookie jar.\n\n\"That's so good,\" I said.\n\nIt didn't take long for Jessica to catch on. Within a minute or so she was humping me like a lunatic, impaling herself on my steel-hard shaft. Her cries degenerated into incomprehensible groans. Her rectum squeezed me, hot and writhing and insistent.\n\n\"I'm getting close,\" I gasped.\n\n\"Do it,\" she insisted.\n\n\"Tell me,\" I said.\n\n\"What?\"\n\n\"Take charge, baby,\" I told her. \"Tell me to come in your ass.\"\n\n\"You're so...ahh...naughty,\" she panted, her chest heaving as fast as my own.\n\nI felt my orgasm building in my balls. \"You feel so good...I gonna....\"\n\nShe clutched my head, brought her lips to my ear, and said, \"Do it for me.\"\n\n\"I'm so close....\"\n\nShe rose up, balancing on the balls of her feet, taking every millimeter of my throbbing shaft into her tight, slippery butt. Her anus clutched me, milked me, demanding my semen. It felt incredible. My pubic hair was wet with the juice trickling from her sodden pussy.\n\n\"Come in my ass,\" she whispered. \"Please.\"\n\nI couldn't believe her transformation. In a matter of minutes she'd gone from the demure girl who'd knocked at my door begging to come in from the cold, to a self-assured young woman riding me as if she'd been doing it for years. Her words pushed me over the edge.\n\n\"Oh god, baby,\" I gasped. \"Here it comes....\"\n\n\"Yes! Yes! Do it!\"\n\n\"Oh fuck,\" I groaned, and began ejaculating into her tight, young ass.\n\nI fired a huge spurt of semen deep inside her, then another, and another, in what felt like an unending stream. The pleasure was so intense I felt dizzy. I gripped her waist and held her down as my cock bucked and spewed inside her.\n\nJessica writhed above me, her tiny tits jiggling as she spasmed. Her anus clenched me and released, over and over. Her entire body trembled.\n\n\"I feel it,\" she said. \"I feel your juice all up...ahh...inside me.\"\n\nShe collapsed on top of me, her silky hair spilling over my face. I held her down hard as I emptied my balls deep in her bowels. Jessica shuddered.\n\n\"You feel so good, baby,\" I said, holding her tight and spewing the last of my load inside her.\n\nShe whimpered and clung to me ferociously. The trembling in her petite frame began to lessen. I squirted out the last few drops.\n\n\"Oh...god...\" she mumbled. \n\nAt last the shaking subsided.Both of us breathing hard, I held her and stroked her tresses. Her breath puffed into my chest. I felt the warmth of the fire on one side and chill from the windows on the other. The only light was the flickering orange glow of the wood stove, now dwindled to coals. Much like myself.\n\nWe held each other as we returned to earth. My cock softened but she still held me inside her. Her skin felt soft and warm, and the scent of our fucking overpowered all other smells.\n\nAfter a few comfortable minutes, Jessica asked, \"Now what?\"\n\n\"What do you mean?\"\n\n\"When I get up it's going to be all...messy.\"\n\n\"It's fine,\" I assured her. \"Just stand up, keep your bottom squeezed tight, and get in the shower.\"\n\n\"But what if some of it dribbles out?\"\n\n\"Don't worry about it, honey. That's what towels are for.\"\n\nI felt her anus squeezing my half-hard shaft as she rose off me. Watching my spent cock withdraw from her was quite arousing. Her inner thighs and the pink, swollen mounds of her pussy glistened with her juice. I felt a bit of pride, having introduced this beautiful girl to new carnal pleasures and satisfying both her and myself so thoroughly. Standing, Jessica scampered to the bathroom. I stood and followed.\n\nI flicked the light switch but nothing happened.\n\n\"Power's out, silly,\" she reminded me.\n\n\"D'oh!\" I said in my best Homer Simpson voice. She giggled.\n\nI lit a couple of candles, placing one on the window ledge in the shower and another on the edge of the tub. I wanted to watch my little waif empty herself. She stood at one end of the tub, feet spread. I sat cross-legged at the other end.\n\n\"Go for it, honey,\" I said.\n\n\"Are you sure?\" she asked, looking concerned. \"It could, you know, get on you.\"\n\n\"It'll rinse off just fine. Don't worry about it.\"\n\nJessica put both hands flat on the wall, on either side of the loop of hose connecting the showerhead. Candlelight danced on the curves of her back, thighs, and ass. My eyes devoured her lush body. The candle on the tub's edge lit the crack between her buttocks perfectly. Her anus pulsed as she tried to release the liquid trapped in her bowels.\n\nThinking she was a little self conscious, I said, \"That's perfect, honey. Just let it all go.\"\n\nJessica gasped as her floodgates opened. Creamy fluid spewed out, running down her pale thighs. I leaned forward to watch the spectacle. A river of semen and liquified whipped cream traced the contours of her slender legs. Viscous, ivory fluid swirled in a river of thinner, more watery liquid. In the candlelight the shimmering stream seemed to almost have a life of its own. \n\n\"Oh yeah,\" she moaned, bringing one hand between her legs to work her clit. Her arm started pumping as she worked herself. \"Oh yes...oh yes....\"\n\nUnable to resist, I reached up and pushed a finger into her dripping ass. She groaned again, louder. Her hand went faster. I began thrusting my finger full-length into her sopping rectum, fucking her with it, picking up speed to match her increasing rhythm.\n\n\"Oh...oh,\" she mumbled. \"Oh I'm gonna....\"\n\nSuddenly her body went rigid and her anus clamped on my finger. Gasping and writhing, she pushed against my invading finger as her climax swept over her. A low groan escaped her lips. For a long minute she just stood there trembling, one hand on the wall, the other caressing her clitoris as she descended from yet another orgasm.\n\nWith a long, \"Oooooooh...\" she relaxed and I withdrew my finger.\n\n\"That was awesome, baby,\" I offered.\n\n\"I've never done that...I mean, so many times in a row.\"\n\n\"It's great. You're sexy as hell.\"\n\nShe gave me a proud smile.\n\nI watched as she pushed the last of the translucent fluid from her ass, then cleaned herself. My cock bobbed in the air, three-quarters hard again with a fresh drop of pre-cum glistening at the tip. I had lots of ideas about how to enjoy sweet Jessica, but for tonight I wanted to let her (and myself) recover. She'd been through a lot. I thought a good night's rest was what we both needed, and soon we were curled up in front of the fire, sleeping in each other's arms.\n\n. . . \n\nJessica stayed with me for twelve amazing days before she could finally move into her dorm. In that time I taught her everything I knew about making love. For such a young and innocent girl, she seemed to have no inhibitions whatsoever. With the age difference, we both knew our relationship couldn't last but we enjoyed every minute we had together.\n\nShe has a boyfriend now. I suspect he's the happiest guy in the country. Jessica emails me from time to time, flirtatious hints sprinkled throughout her innocuous messages. I only want her to be happy, and it sounds like she is, but if she should ever find herself alone I hope she'll call me. That sweet, wonderful Christmas is stored away in my memory now. I never expected nor deserved such a passionate holiday, and most likely I will never have another one like it again. But I will never forget my doe-eyed waif.\n\nOn the fifth day of her time in my home she offered me her virgin pussy. I made a halfhearted attempt to turn her away but she would have none of it. I think she recognized a connection between us, however fleeting, and gave me the most precious gift she could. I made sure it was a night she would never forget. But that's another story....\n\n\n\n(Author's note: Thanks for reading! If you enjoyed this story feel free to vote and comment. I enjoy hearing from readers. Copyright 2014 by David Dustarr)"
    ],
    "authorname": "RegularGuyinOly",
    "tags": [
        "anal",
        "older man, younger woman",
        "blow job",
        "cum swallowing",
        "18 year old",
        "daughter",
        "female submissive",
        "virgin",
        "creampie",
        "cunnilingus"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-doe-eyed-waif"
}