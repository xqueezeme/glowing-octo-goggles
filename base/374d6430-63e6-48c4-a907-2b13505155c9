{
    "title": "Jill's World Ch. 03",
    "pages": [
        "That night, I had trouble sleeping. I was tossing and turning and unable to get the image out of my head that was burned in there by Courtney. Me, laying naked on a desk while Courtney fed me. Perhaps the 'while Courtney fed me' part was my own manipulation of the image she had given me today at school. Still, the image was crisp and clear in my imagination and I could feel my pussy squelching at the thoughts.\n\nI tried to change the image over and over. I even took out my text book and started reading, trying to bore myself to sleep. Finally, wet with a lot of terrible thoughts, I dozed off.\n\nThe next morning, I was quite tired. Between the physical and emotional wear at Jill's house and the lack of sleep, I was rather exhausted. But, it was a school day, so I jumped into a nice hot shower and shook away the weariness. It was nice to dress decently again.\n\nNice is a bit understated for the elation I felt as I donned a pair of blue boy-short panties and a black racy bra beneath a pair of jeans that fit nice and tight and a loose T shirt that did not advertise my breast size to the world. Breakfast was pleasant with Kelly. I was eating healthy despite no longer being on the cheerleading squad and dealing with the body shaming of Rebecca.\n\nAfter a peck on the cheek, I left Kelly and headed to school. I texted Julie before driving to ask if she wanted a ride. She said yes, and I smiled. As wrong as it was for me to feel competitive with her boyfriend, I did.\n\nI saw messages on my phone. Several from Farin, I didn't even open them. A follow up from Karen to 'make sure she had the right number'. I was absolutely not going to date Karen. I'd have to talk to her today.\n\nTo make a long drive short, I honked the horn at Julie's house and she came bouncing outside.\n\n\"So, I guess you aren't all that submissive after all.\" Julie laughed as she climbed in and buckled up.\n\nI gave her a puzzled look. I had no idea what she was talking about.\n\n\"The picture?\" Julie asked. \"You were supposed to send me a photo last night slutball.\"\n\nI looked really puzzled then. \"I sent it.\" I insisted.\n\nJulie looked puzzled now. \"It must not have gone through.\"\n\nI stopped the car, and checked my phone, knowing I sent the picture and my mouth dropped open. \"Oh, fuck me!\" I exclaimed. Granted, I was tired. It was late. I was straight up exhausted beyond intelligible thought last night, but here it was, the worst news ever. In my rush to get into bed, I had just pulled up a reply on my phone to send the picture. And the last message I had pulled up was, if you haven't guessed by now, Farin.\n\n\"Oh, Christ you have to be kidding me!\" I screamed.\n\nJulie was not up to speed yet. She looked at me questioningly.\n\n\"I sent it to Farin by mistake!\" I yelled. \"Oh fuck, she is going to think... I have no idea what she is going to think.\"\n\nJulie gasped, and I checked Farin's messages to see what she thought.\n\nFARIN: I KNEW IT! WHAT IS THAT BITCH JILL DOING TO YOU BABY?\n\nFARIN: I'M NOT GOING TO LET THIS GO ON CARRIE I WILL FIND A WAY TO STOP THIS I SWEAR\n\nFARIN: I LOVE YOU COME SEE ME BEFORE SCHOOL STARTS IN OUR BATHROOM\n\nFARIN: OKAY?\n\nFARIN: CARRIE, ANSWER ME\n\nFARIN: WHY WON'T YOU TALK TO ME?\n\nFARIN: CARRIE I SWEAR IF YOU DON'T MEET ME TOMORROW I AM GOING TO THE SCHOOL COUNSELOR WITH THIS PIC AND LET THEM DO WHAT NEEDS TO BE DONE I KNOW YOU DON'T WANT ME TO DO THAT, BUT I WON'T STAND BY AND WATCH YOU TORTURED ANYMORE THIS HAS GONE ON LONG ENOUGH I WANT YOU OUT I WILL TALK TO JILL AND TAKE YOUR PLACE YOU HAVE BEEN THROUGH ENOUGH\n\nFARIN: I HATE BEING IGNORED\n\nFARIN: DAMN YOU CARRIE FITCH ANSWER ME\n\nFARIN: FINE, YOU BETTER BE THERE IN THE MORNING OR I WILL DO WHAT I SAID, I DON'T CARE WHAT JILL DOES TO ME. WITHOUT YOU I AM DEAD ANYWAY\n\nI showed it to Julie. She hugged me. \n\n\"Do you feel that way Carrie? Like you are being tortured?\" She asked through teared eyes. \n\nI hugged her hard. \"I think maybe Jill means well. But look at my ass Julie. That's not ... it's not a pleasant thing.\"\n\n\"I'm so sorry. No, I can't imagine it would be. It's just... I mean Carrie, you were so ... I'm sorry.\" Julie stammered and cried as she hugged me. \"God, I'm a monster! I really thought you were into it all.\"\n\n\"Oh god Julie, please don't blame yourself for this mess. Look, I do, in spite of myself, enjoy some of it. Not the beating. I hate that. It's ... some of it isn't bad, but there were some moments, like the cane that were simply horrible.\"\n\n\"I beat you too. Oh God Carrie, I can't believe I did that!\" Julie wailed.\n\n\"Shh.\" I hushed as I held her. \"The floggers really aren't bad. Honestly Jules, you didn't hurt me.\"\n\nShe pushed back to look into my eyes. Hers were wet with tears. It made me quite sad. \"Swear?\"\n\n\"Julie, I swear to you, you did not hurt me. Look, I get the excitement of it all. I don't understand why, but I do understand it is exciting. And I really am glad you are there. It's embarrassing, but I'm so happy to have someone I can truly trust there with me.\"\n\n\"Oh, Care Bear. I am so relieved to hear you say that. I'm going to talk to Jill about it this afternoon. She needs to know that some of it is really horrible if she doesn't know.\" She stated. \"And you need to see Farin this morning. If you want me to come with you I will.\"\n\n\"It might be better...\" I let the thought hang. What might be better? To have Julie who Farin considered a rival for my affections show up or to have her not show up and face Farin alone? She got in a fight over me. I could only imagine it was with Darla. It couldn't have been Jill because of the timing. \"I should probably see her alone. She might be intimidated if both of us show up.\"\n\n\"At least I can wait outside?\" Julie offered.\n\nI laughed. \"You think she will fight me or kiss me?\" I started the car heading to school again.\n\nJulie shrugged. \"If you scream either way I can be there in a second.\"\n\n\"I'll be fine Jules. I can deal with Farin. We clearly still have to get closure.\" I dismissed the thought of needing help. \"I kind of need it too.\"\n\n\"Oh.\" Julie acknowledged and looked maybe... hurt?\n\nI laughed again. \"Really?\"\n\n\"What?\" Julie asked, clearly not happy at me laughing.\n\nI don't do great impersonations, but I did try must best to sound like Julie. \"We are not dating. You do not get to act like we are.\" \n\nShe glared at me, then turned her head to hide a laugh. \"Fuck you.\" She got out with a giggle.\n\n\"Julie, there is really nothing to worry about. Farin and I are not getting back together. I do care about her, but not enough to go through her emotional roller coaster again.\"\n\nJulie just smiled as if she won something. I don't know why. Every time I mentioned something about the two of us, she distanced herself from the possibility. I suppose she had no option but to look at me in sexual light now. Not sexual desire. But having seen me do the things I did and knowing many other things I did, there was no way she could doubt that I was sexually awakened now. \n\nWe got out of the car and walked into the school, still best of friends, with an ever-changed perspective of our friendship.\n\nI squeezed her hand as I broke directions towards the dreaded girls room, and we smiled at each other, both assuring the other that everything was going to be alright.\n\nShe was there. She looked a whole lot better than the video last night and had sunglasses to hide her eye. She was still beautiful as she smiled with her bruised lip and leaned away from the wall towards me, moving her hands as if to hug me.\n\nI held my hand up towards her in a motion to stop and she frowned and did so. \"Listen Farin, this is hard on me too. That picture I sent was an accident. I didn't mean to send it to you. And I would be deeply appreciative if you would delete it.\" I said with a soft, pleading voice.\n\nFarin frowned again. \"Who did you mean to send it to? Jill?\"\n\nI frowned back. I didn't want to lie to her, but I didn't want to tell her it was for Julie either. I'm not sure why I didn't want her to know that, but I didn't. \"It just wasn't meant for you Farin. Isn't that enough? I'm not going to use our previous relationship as leverage, you mean much more to me than to do that. But, you know how much damage those pictures can cause, so would you please delete it for me?\"\n\nHer frown matched my own. My hope here was that she would show what a great person she is and delete the picture without any further discussion on that matter. And, as she pulled out her phone, I thought it would work and I dared to breathe a sigh of relief. \"I will Carrie.\" Farin said flatly. \"Look, it's clear you don't want to get back together now, I can see that, but I want to talk anyway, to be your friend. And maybe later, there will be a good chance for you and me without Jill or Darla or any of their group interfering. It could be so good Carrie, it really could. You have to sense that we had a very strong connection in spite of everything else.\"\n\nI exhaled disappointed. I hope she caught it. \"So, blackmail again. From you. Because this is how a good friendship or relationship is built?\"\n\nI lashed out perhaps a bit more harshly than I had intended, but she was soon backed up on her heels. And I think, deservedly so.\n\n\"You're right Carrie.\" Farin showed me her phone and deleted the pic. \"Done. I really care about you. I hope you know that. Love isn't a daily occurrence. This, what we had, is real baby. It is real, and it is strong. Can I just have a hug?\"\n\nHow could I say no? Yes, I hugged her, and we held each other and fought back tears and both lost. \"Please don't fight over me anymore Farin.\" I pleaded. \"I hate seeing you miserable.\"\n\n\"Well, I am miserable Carrie. I will try not to let you see it as much.\" Farin sobbed. \n\nAnd finally, the bell rang. And we were still hugging. And then the late bell rang. And we stopped and walked to class together, wiping our tears on our arms and forcing smiles to each other. We didn't hold hands, though I think we both wanted to. And at the classroom door, we parted ways and sat in our normal seats.\n\nMiss Galler looked up at us as we walked in and I saw her fight the urge to say 'tardy', her mouth literally opened with a 't' shape before closing again after noticing it was her disruptive couple from yesterday. \"Take your seats ladies, quickly.\" She said instead.\n\nJulie looked at my face and I'm sure could tell I had been crying. She reached over and squeezed my hand and that was really all I wanted her to do. Somehow, she knew it and didn't say a word to me all first period. And, to her credit, I didn't hear Farin say a peep during first period. Though, I swore I heard Rebecca once or twice, uttering my name.\n\nWhen first period ended, she said, \"See you in third\" With a smile and another hand squeeze and we parted ways. She for smart class, me for... well I guess the school would call it normal grade level. Mr. Thatch, oh how he bored us. Courtney sat next to me with a huge smile and Farin, surprisingly, did not try to sit next to me. \n\nCourtney pulled her chair right up next to mine and whispered. \"So, did you think of me last night?\" And she looked in my eyes and her smile went wider as I knew I couldn't deny it with words when my face had just given the truth away.\n\n\"Oh, that is so wonderful Carrie, I knew you would!\" She said a little too loud. \"So, you want to start playing now or wait for lunch time?\" She giggled.\n\n\"No Courtney, neither.\" I stammered, defiantly.\n\n\"Oh, come on now Carrie. Why deny yourself? I will take very good care of you and all your horny little needs. Here, just put your little fingers where you know you want to and I will make you so happy.\" She pressed.\n\nI edged my chair away and turned a little away from her.\n\nCourtney giggled and grabbed my chair and with a loud scraping sound yanked it right next to hers.\n\nMr. Thatch looked at us with a scowl. \"Is there a problem again today Miss Fitch? Miss Covington?\"\n\n\"No Mr. Thatch.\" We both said in unplanned unison, so the timing was slightly off.\n\nCourtney did her little thing where she slid her legs sideways towards me, but she didn't make another move. She just sat there with her legs spread invitingly. \"Do you have any idea how many people would love this opportunity every day Carrie? I should charge you for the privilege. I'm sure some people would pay to touch my sweet little honey pot. Don't you agree?\"\n\nI hated her chirping voice. \"I don't even want to Courtney, I'm sure as hell not paying you for the privilege.\" I pronounced the word privilege with as much sarcasm as I could muster.\n\nShe just giggled. \"Whatever you say slutball.\" She whispered. And then she ignored me. She fucking turned to the class and other than bouncing her heel a little bit as if signaling me to get on with it, she said nothing more.\n\nWell, this was no problem. I chuckled to myself. She thinks I can't resist fingering her in class? She'll learn. And I paid attention to Mr. Thatch and ignored her. And Courtney ignored me. And nearly an hour later, class was over, and we were packing our bags, both smiling.\n\n\"See you at lunch Carrie.\" She chirped.\n\n\"Is that a requirement?\" I asked.\n\n\"No, it's an offer.\" Courtney giggled. And she was off, strutting her cute little cheerleader ass out the door and towards her third period.\n\nAnd Farin didn't approach me at all, just smiled when I looked her way.\n\nThis day was all kinds of weird.\n\nI saw Julie and couldn't wait to tell her nothing. I mean, literally, nothing. I couldn't remember the last time I had nothing to tell her. It was so relaxing. We learned stuff I suppose you could say. At least Miss Simms talked, and we listened. And wouldn't you know it, I made it through fourth period as well, without a single thing to take note of.\n\nFor lunch, I went to sit with Gina, Cat, Jen and Sarah. Julie came over for a while, but then said she needed to go over to the cheerleader table because Rebecca was furious that she would sit with us. I shrugged at her, \"I'm nobody to judge.\" And I gave her a smile, which she returned before heading over to the Queen Bitch's table.\n\nWell, there must be a saying somewhere about getting comfortable and bit in the ass as soon as you relax too much. Here came Courtney Covington, who never sat with this group, or even on this side of the lunch room. \"Hey Carrie!\" She chirped. \"Mind if I sit next to you?\" She didn't actually wait for, or expect an answer. She just plopped her little butt down right next to me. \n\n\"Umm sure Courtney. You know Gina, Cat, Jen, Sarah...\" I pointed towards them each in case Courtney couldn't recall their names.\n\n\"Of course, I do!\" Courtney answered. \"You girls are the ones who messed up our bus last year.\"\n\nI blushed. I think we all did. Nobody knew about that except us. Sure, there were guesses, but nobody caught us at it. And it wasn't bad vandalism. Nothing that couldn't be cleaned up I mean. \n\n\"That wasn't us.\" Gina claimed weakly.\n\n\"Well, I just came by to see how things are with Carrie back amongst you. Actually, you all want to get out of here and go eat in one of the classrooms? It's vacant during our lunch and a lot more peaceful than the shouting matches that go on in here. Come on, we can discuss ... I don't know... punishments for vandalism of school property.\" She looked particularly at me with a mischievous smile on her face as she said that last bit.\n\nI frowned at her. I mean I scowled. If my eyes had some supernatural power, Courtney Covington would be reduced to ash or something like that right now. \"I'll go.\" I offered.\n\nBut my friends stood up and said they would go with us. I interjected, \"Really, Courtney, can you and I handle this former cheerleader to cheerleader?\"\n\n\"Oh no you don't Carrie.\" Sarah said. \"I will go with her. I can handle the likes of Courtney Covington.\" She gave Courtney a slightly ferocious looking face. I mean Sarah is adorably cute, but I'd take her at my back any day of the week with the face she gave Courtney.\n\nCourtney smiled. \"You can all come. I'm not a physical person, am I Carrie? You know me pretty well by now.\"\n\nBlackmail again? What the fuck was it with girls trying to blackmail me all the time now? \n\n\"Bring your lunch with you, trust me, we won't get in trouble.\" Courtney smiled.\n\nAnd we all got up and followed Courtney into the classroom. The same one she had taunted me in at lunch yesterday. The same one with the desk, I couldn't get out of my mind last night. And I trembled as I walked inside.\n\nShe walked up to the desk and instead of sitting behind it, she sat on it and patted the spot next to her. \"Sit up here with me Carrie.\" She smiled.\n\nI did. It felt weird, but I was fully clothed and no way she would do anything with my friends here. Especially since Sarah made her anger at being threatened quite clear.\n\nSarah sat on the other side of me on the teacher's desk and Cat, Gina and Jen sat in student desks facing us. \"So, what do you want Courtney?\" I asked bitterly.\n\n\"What makes you think I want anything?\" Courtney smiled. \"Besides, wouldn't you like to know how I know first?\"\n\nI was falling for whatever trap she was laying. \"Sure Courtney, how do you know about it?\"\n\n\"mmm direct, I like that Fitch.\" She smiled and leaned back to look at the ceiling. \"Lean back and I will tell you a story.\"\n\nI grumbled and leaned back, and Sarah did too. And here I was, clothed, but eating lunch laying on the desk. And the image of being naked was vividly restored to my mind. I looked over at Courtney and she winked at me. \"I'm so glad you made the squad Carrie. I really wish you were still with us. We had so much fun together, didn't we?\" It was rhetorical, she did not wait for an answer.\"\n\n\"Did you tell all your friends about the great times we had? I bet they would love to play some of the fun games we played too. I mean, you could play with them now that you aren't a cheerleader anymore.\" Her eyes were dangerous. Her words were terrifying. I was unable to speak.\n\n\"No?\" Courtney asked disappointed. \"Well, I suppose it was a little too crazy for this group. No matter. Okay, about the bus!\"\n\nAnd Courtney went on to tell an elaborate tale that could have ended in thirty seconds with \"Farin saw you doing it.\" But, no, Courtney wanted a long drawn out story about how she had forgotten her lucky socks in the bus and Farin had left her favorite anklet and so Farin went back to get them when the game was slow. \n\nShe didn't seem to be lying. Clearly, we had egged, and toilet papered and scattered the contents of their bags throughout the inside of the bus and wrote some unpleasant words on the outside of the bus. It wasn't terribly inspired work, but Rebecca had tripped me in school the day before in front of a lot of people and a teacher was there before I could damage her face. So, I admittedly, acted childishly.\n\n\"Who else knows?\" I asked with a huff.\n\n\"Everyone knows Carrie. That is why I'm telling you. They have been holding off revenge for a long time. And now, with you not being on the team and the way Rebecca despises you, well, I would just watch my back ladies. Believe, I am not a tattle tale. Although I suppose this meeting was. Hmm. Well, you got me, I guess I do share secrets.\"\n\n\"So, just as a friend, watch out for each other. I doubt they will include Julie. If they do, she won't know it's you or she will feel very pressured, you know that of course Fitch. But if you see them coming together in groups of three or more and you are alone? I would turn and duck them if you can.\"\n\n\"Thanks, I guess.\" I tried to sound pleased that she told us.\n\n\"Well, maybe you could talk it over with Rebecca and she will let bygones go, but I'd do something soon before it is too late. It will be terribly humiliating for you all. Anyway, you know I like you Carrie, I'll help where I can.\" And she mouthed the words 'if you eat naked tomorrow' and smiled her most devilish smile.",
        "Well, back to blackmail I guess. Friends or me? Fuck, if my friends knew some of the things I did for them... But, it wasn't meant to be. I'd talk to Courtney tonight and see if there were more details or alternative favors I could do at Jill's house.\n\nAnd Courtney looked at me and smiled and patted my thigh as if I was an owned pet and it made me shudder. I clinched my eyes shut at the feeling. It simultaneously repulsed and excited me. Then, Courtney hopped off the desk and left us alone to perseverate over the indications of her story.\n\n\"Well, what can they do?\" Gina asked. \"It's not like they would do something in the middle of school to risk expulsion.\"\n\n\"Yeah,\" Cat added, \"I mean come on Carrie, you are not going back to dealing with Rebecca. We all did it together. We will all take the payback. Let's just end it here. Take it and be done.\"\n\nSarah looked over at me with a look that implied she was very deep in thought. \"Well, I don't see why we should make it easy for them. I mean, Carrie is back with us now. And with Julie, our friend, on their side, and maybe Courtney too... I mean, what do you think Carrie?\"\n\nI looked puzzled. \"About what Sarah?\"\n\nJen, the quiet one, spoke up. \"About getting them again before they get us. Not Julie of course, but now, if they know or even if they don't know that we are expecting an attack from them, we can take the initiative and catch them entirely off guard.\"\n\nI laughed. \"You act like we are at war. Come on, I'll go let Rebecca do something stupid to me and it will be over. I'm not afraid of her. And I am pretty sure she IS afraid of me. Whether she admits it or not.\"\n\n\"No.\" Sarah said with absolute defiance in her voice. \"Carrie, I don't know what all went on while you were pretending to be a cheerleader, but we could tell you hated it and, yet you stayed. We are not going to let them have the best of us. We are seniors for the sake of the Pete!\"\n\nI laughed, so did Gina. \"The what?\" I asked.\n\n\"The sake of the Pete. I don't know something my grandmother says. That's hardly the point. Carrie, come up with a plan because you always come up with the best ideas. Let us know what to do and we will all do our part.\" Sarah answered.\n\n\"Wow.\" I had to admit, Rebecca had it coming. The rest of the squad though, I was pretty fond of, at least I didn't hate them. \"Listen, a month ago, I'd be right there with you Sarah, I swear I would. But, getting to know them all, they really aren't a bad group of girls. I mean, Rebecca sure, but we haven't seen eye to eye for a long time. For obvious reasons.\"\n\n\"So, steal Brad from her again.\" Sarah laughed.\n\n\"Oh, that would be perfect!\" Gina exclaimed.\n\n\"I still like the idea of an epic war.\" Jen smiled mischievously.\n\n\"Wait... do you want him Carrie? If not, that would be well... pretty crappy.\" Gina calmed them down.\n\n\"You all are too much. But Gina is right. I like Brad as a friend and can't do that, use him to get to her. Let me think about it and we will be at least ready for them if they do anything. I'll see what I can get out of Julie if she knows anything and Courtney if she will betray the squad even more.\" I answered.\n\n\"So, what we really need now is a road trip in your car.\" Gina laughed.\n\n\"Sounds like a plan.\" I answered, not sure when I could make that plan a reality.\n\nAnd lunch was over, and I felt like I had never left my closest friends. I headed to Spanish, they headed off to their classes and I met Julie in the hall and hip bumped her.\n\n\"Hey!\" I laughed when she was knocked to the side, not seeing me coming.\n\nShe lunged at me and hip bumped me back, but I was ready, and the result was the loud smack of hip against hip and a mutual complaint of pain. We found our seats quickly enough and sat down. \n\n\"How was the Queen?\" I asked nudging her.\n\n\"Same old bitch as ever.\" Julie laughed. \"You don't think I'm choosing her over you, do you?\" She asked, suddenly serious. \"And the other girls? Gina, Cat, Jen and Sarah, they don't think I dislike them, do they?\"\n\n\"No Jules, of course not. I know what it was like when I was on the stup... the squad, so you don't have to tell me. I'll make sure the other girls know. We had a nice lunch today. Courtney dropped by.\" I answered.\n\n\"Oh, yeah I saw that. I was wondering if that was why Rebecca practically yelled across the cafeteria for me to join her at her table. So, what did Courtney have to say?\" She asked.\n\nI leaned in and whispered. \"She knows about the bus. They all know.\"\n\nJulie's mouth dropped open. \"Oh damn!\" She said too loud.\n\nI whispered. \"Exactly, so apparently Rebecca is planning something for us, I don't think for you, at least Courtney doesn't think they are going to do anything to you. But apparently, they are plotting some sort of revenge.\"\n\nJulie frowned. \"I will talk to Rebecca. I will choose you over them if it comes down to it. You know that, right?\"\n\nI smiled at her. \"Of course I do!\" She was still frowning. I did an eyeroll. \"This isn't my first fight with Rebecca Julie. Do you ever remember her getting the best of me? Before Darla got her involved I mean? She's ahead for the first time ever and if she comes at me again, well, I get to end up ahead forever... or until the next time, whichever comes first.\" I laughed.\n\nIt was true. Sure, Rebecca had gotten her digs in over the years. She had tripped me in the halls, cologned my locker, stolen my shoes, ripped my panties, a lot of juvenile stuff over the past couple of years, since I had borrowed Brad. But I always got my revenge. It was always better. I had changed the lock on her locker. I had taken the screws out of her chair and sent her falling to the floor. I had written on her car. I had poured paint on her head. \n\nAnd yet, she would keep coming back at me. She would keep losing each little battle. She would get the entire cheerleading squad after me and my friends and we would beat them every single time. Because, I just didn't care. I wasn't a prim and proper girl with a precious reputation in the school. I was Carrie. Just Carrie. And yet, here she was, coming at me again. She had the last laugh. I could not retaliate for anything she had done over the past few weeks because of Jill and Darla and their lot. And still, she just couldn't leave it alone.\n\nShe had Brad. So, it clearly wasn't about that. That was very old news. Maybe she knew he and I bonded a little over her using him in her revenge, I guess that stung. But Brad wasn't a bad guy. He just dated a bitch. I laughed at that thought. Yeah, I could totes steal Brad back if I wanted to. But that wasn't me. And he was a human being, not a pawn.\n\nJulie laughed, I imagine reflecting on all the same things that I had done to come out on top over the last two years. \"Yeah, I know you will be fine. But, I am definitely on your side if it comes to it. I'm going to talk to her today at practice. Maybe the three of us can discuss it like civilized human beings.\"\n\nI laughed loud enough to get a scowl from our Spanish teacher, Miss Capano. \n\n\"Lo siento Senora Capano.\" I said.\n\nShe looked at me sternly. \"No mas senorita Fitch\". \"Et tu senorita Petrili\".\n\nWe both smiled at her in our sweetest smiles.\n\n\"By the way.\", Julie whispered. \"Karen asked about you.\" And she laughed softly when I rolled my eyes.\n\nWe headed out of the classroom and wouldn't you know it, saw Karen in the hall. \"I guess I should talk to her?\" I asked Julie.\n\nJulie laughed. \"She's hot, you should date her, at least until I break up with Chad.\"\n\n\"You are breaking up with Chad?\" I whispered. \n\n\"Maybe eventually.\" Julie laughed louder.\n\n\"Tease.\" I laughed back. And then she was there... right in front of me smiling.\n\n\"Hey Julie. Hi Carrie.\" Karen greeted as she stepped in front of us. \"Can I talk to you for a minute Carrie?\" \n\nI smiled at Julie, who hid her giggle behind her hand. \"I'll see you in gym Care Bear.\"\n\nAnd she left me. \"I know, I'm sorry I didn't respond to your text Karen. It's just, I've been really busy, and I already have plans Friday night. And really, I'm not over Farin yet, not sure I am ready to date again so soon.\" I said in like one breath.\n\nKaren giggled. \"It's just a movie Carrie.\" She shrugged. \"I'm not asking you to hold my hand in the hallway. Saturday then, 9:00\" \n\n\"I know. I just don't think I'm ready...\", but I didn't finish my sentence because she grabbed my shoulders and pulled me over by the lockers, out of the way of the din of kids going to class.\n\n\"Carrie,\" Karen smiled, \"I am not taking no for an answer. We are going to the movies Saturday night. Don't make a big deal about it.\"\n\n\"Karen, really, I'm not sure I can.\" \n\nShe shoved my back against the locker, not hard, but forceful. \"I am sure your dad will let you go with a friend to the movies. Nine o'clock Saturday. You have the address.\"\n\n\"Karen... I will let you know.\" I told her and tried not to look as pissed as I felt at her abrasiveness. \n\nGym class brought volleyball. Volleyball brought an embarrassing lesson in my lack of coordination. I told Julie about the 'date' and she laughed. An hour later, gym was soon over, and I was looking forward to my last class of the day.\n\nMiss King assigned a project to make an advertisement board for a local restaurant franchise. She explained that sometimes art had financial benefits and she knew the owner and he was willing to pay a $1,000 college scholarship to the winner. That sounded good to me. Sure, my dad seemed to be rolling in money, but if my art could help offset some of the bill, I was all for it and listened carefully to the parameters before setting my easel and making the first strokes of the charcoal.\n\nI never really looked at the other kids in class, what they were doing. This project was the same as any other. Not to be boastful, but I didn't rely on the inspiration of others. Today was no different. The first two strokes of the charcoal outline were crumpled on the floor and I sat, looking at the blank page before me, trying to think what would make me want to go to a particular restaurant to eat. The food? Sure, that was important. But, what is it that really brings someone to eat out as opposed to cook their own food?\n\nUnanswered questions. She had told us a little about the franchise. The food, the locations. I decided that some research was necessary and pulled out my pen instead and made a list of questions that would frame the best way to present the restaurant. Miss King did her normal walk through the throngs of artists, complimenting or asking pointed questions on their work progress. \n\nWhen she got to me and saw my list of questions, she smiled at me. \"Good work Miss Fitch. You have one week like everyone else.\"\n\nI tore the sheet down at the end of class and folded it up and put it in my bag. I trudged down to see Mrs. Lane. She was really irritating me. But, I guess it was her job. As I entered her office, I slumped down into the chair and she smiled at me. I wanted to slap her face.\n\n\"So, are we going to talk about why I don't like being the center of attention?\" I asked with a venomous voice.\n\nShe just smiled. \"I think that would be a good start. You seem to have put some thought to the question.\"\n\n\"Not really. There isn't a great deal of thought to go into it. I just don't. I don't like being the subject of whispers in the hall. And that really hasn't changed much. Now the whispers are about how I broke up with Farin. How the hot couple of last week's whispers is no longer a couple.\"\n\n\"Carrie. If the whispers bother you so much, why do you pay enough attention to them to hear that they are about you?\" Mrs. Lane asked.\n\nI stared at her a minute until I felt my fierce exterior face break and I felt confused. \"I don't know. I just hate hearing my name when they whisper. It's humiliating, not knowing what they are saying, being pointed at and ridiculed. They don't know what I've been through and they make their silly judgments and I hate it.\"\n\n\"That's fair enough.\" Mrs. Lane said in answer. \"Have you considered confronting them, when they whisper your name I mean? How do you know they aren't complimenting you? Why do you believe it is always negative?\"\n\nPsychobabble. I groaned. \"If it was complimentary, why wouldn't they just say it to my face?\"\n\n\"Carrie, you are a beautiful and intelligent girl. You have a lot going for you and your teachers all think a great deal of you. I have talked to them all. The majority of them noticed the changes in you these past weeks and several had come to me to voice concerns. Even Miss King, I believe she is your favorite teacher? She was the one who brought you to me in the first place wasn't she? Are you angry with her for doing that? Or are you, as I believe you should be, flattered that she cares that much about you?\"\n\nI hadn't really thought about that. There was a time I despised Mrs. Lane for threatening my art class because it was my favorite class. And I hadn't really thought about it lately, how I had told Miss King that I hated her when she took that awful drawing that I tried to dispose of. \"I guess I am flattered.\" I mumbled. I really did like Miss King. She was by far my favorite teacher.\n\n\"So, give yourself a break Carrie. You are being far too hard on yourself. It takes two people to make a relationship work and just as many to make it end. Farin had to have some culpability in your break up. The whispers will stop as soon as the next power couple comes into the lime light. You know this. You are a smart kid. You seem to know the social workings of the school system better than most adults who have been through it.\"\n\nI snorted a laugh. It was a nice thing to say. I wasn't sure how true it was. \"Yeah, I'm deeply insightful.\"\n\nMrs. Lane laughed softly. \"There you go! Even if you don't believe it when you say it, it's true. Speak up for yourself if things bother you Carrie. You know deep down that people will back down when confronted face to face. Unless they have a real problem. But I don't really sense that anyone at the school has a real problem with you. The one I know of that might have is still very much in love with you if I'm not mistaken.\"\n\nI exhaled loudly. \"Yeah, it doesn't make it any easier. I think I'd prefer she despised me.\"\n\n\"Would you really?\" Mrs. Lane asked, not being directional in her question, but a completely honest question to make me think.\n\n\"No, I wouldn't.\" I smiled at her. I looked at the clock. I smiled again. Mrs. Lane looked at her watch. \n\n\"Okay, go. Good discussion Carrie. I'll see you tomorrow.\" Mrs. Lane said with a smile.\n\nI got up and barely paused at the door. \"I would... I think like to go to one of the lesbian group sessions, if I can just see one without committing to going to any more. Would that be okay?\"\n\nMrs. Lane smiled at me. \"Yes Carrie, that would be okay. There is one Thursday evenings at 6:00 if that works for you.\"\n\n\"I have to clear it with my Dad, but that should be good. Where is it?\" I asked.\n\nShe gave me a card with the address. \"I could accompany you to the first one if you like.\"\n\nI pondered her watching me. \"I think I'd just like to see for myself. See you tomorrow Mrs. Lane.\"\n\nI quick walked to my car. It was not that far to Jill's and I could easily make the given time, but what if I hit traffic? Would she be forgiving? Probably not. On my way across the parking lot, I noticed the cheerleading team working through their routines. Julie was there. I couldn't make her out, but surely, she would know it was me walking to my car. I waved down at them. And a couple of hands waved back at me.\n\nThe drive was uneventful. What I had failed to consider when I dressed this morning was the logistics of taking my panties off in my car when wearing a pair of jeans. I ended up with a shoe off and the pants completely off one foot to pull my panties through the other pants leg and over my remaining shoe before hanging the blue boy panties over the mirror. I pulled my pants back on and my shoe, before exiting the car to button them up.\n\nThere was no point zipping them as they would be off at the door. I rang the doorbell and Sue answered it. She smiled at me warmly. \"Hey slutball, how was school?\"\n\nI smiled at her. I liked Sue. \"Not bad. Rebecca seems to have suddenly remembered the vandalization of their bus and is plotting revenge against me and my posse. But other than that, it was actually a good day. I even had a little closure with Farin this morning.\"\n\nShe frowned. \"I heard.\" She shook her head. \"You should have told Jill about it.\"\n\nMy mouth dropped. \"Sue! She was threatening to expose the whole thing! I had to do something!\"\n\nShe rolled her eyes at me. \"Teenagers, so melodramatic. Carrie, you are eighteen. Nothing that happened was illegal. Don't let these bone-headed teenagers convince you that it was. What would anyone get in trouble for? You aren't a minor. You are a consenting adult. Well, maybe you didn't consent, but nobody held a gun to your head.\"\n\nI stared at her. I raised my eyebrow. \"Really? So, I can leave right now, and nothing would happen to me?\"\n\nShe laughed. \"I am not going to stop you. I don't think you should. But, in case you haven't figured it out yet, my Mistress likes you. She isn't going to hunt you down and kill you.\"\n\nI had my shirt already folded on the couch as this conversation went on. I stopped undressing. \n\nSue looked at me, rolling her eyes again. \"Do yourself a favor Carrie, go downstairs. You are here already. If you decide not to come back, decide tomorrow. Of course, I'll say the same thing tomorrow.\" She giggled.\n\nI looked at her a little irritated and finished undressing. She just giggled.\n\nWhen I was naked, she led the way to the basement and I followed. Jill would be down there, waiting to beat me again. I shivered. \n\nTo my surprise, Jill was not downstairs. The television was. It had a film of yesterday's beating on it from what I could tell of the frozen screen. \"Presentation Position Two Slutball.\" Sue instructed. \"Face the television.\"\n\nI knelt as close as I could remember to the position I had just learned yesterday. My knees were wide, my hands behind my neck, my right ankle over left. Sue hit play and I watched as my ass was hit by the cane and I screamed running to Sue. I watched and remembered, and my ass felt hot all over again as I saw the rod strike my ass a second time. I flinched.\n\n\"You remember the cane.\" Sue said not unkindly. \"It truly is a remarkable thing that something so thin and light could cause so much damage. I'm not a fan of it. Only a true pain slut would be.\" Then she knelt in front of me and put her hand on my pussy, smiling at me as she did.\n\n\"I'm going to put a finger inside you Carrie.\" Sue pressed her middle finger to my virgin vagina. \"It might be a little uncomfortable, but I promise I am not going to break your hymen. Okay?\"\n\nI must have gone white with fear. \"Why?\" I asked trembling.\n\nShe smiled widely. \"It's okay Carrie. Please trust me for a minute.\" Sue asked almost pleading as she slid her finger down my slit and found my tight little hole. She gasped. \"Oh, you are a tight little thing.\" She pressed, and it hurt a little. \"Sorry kitten.\" Her eyes were loyal to her apology.\n\nThen I saw Jill for the first time. She walked in carrying the cane and I whimpered. \"Oh, please no!\" I pleaded as my body stiffened. I wanted to run so bad. I started crying, tears actually fell down my cheeks, but I stayed still as she walked behind me, not saying a word.\n\n\"You were told to not talk to Farin weren't you Carrie?\" Jill asked when I couldn't see her any longer. \n\nI broke down and sobbed. \"I'm sorry Mistress. I ... she was going to tell... I only did what I thought was the right thing to do.\"\n\n\"You think a lot for a mindless submissive.\" Jill said, her tone was not pleasant. \"Then you met her today, also against my instructions.\"",
        "\"Please Mistress!\" I begged. \"Please don't do this. I swear I will never talk to Farin again. Please forgive me!\" The tears were splashing on my breasts, but I didn't flee. I stayed put and bawled like a baby. \n\n\"Anything?\" Jill asked then, her voice not nearly as harsh as it had been a moment ago.\n\n\"Nothing, not a drop.\" Sue smiled at me and withdrew her finger from my body. She held it up for Jill to see. I had no idea what she was talking about, but continued to shake.\n\n\"Carrie, you aren't a pain slut.\" Jill said kindly. \n\nI looked back at her confused to see Jill smiling. \n\nShe walked up to my side and sat the cane on the floor. She reached down and brushed away my tears. \"I'm sorry to put you through all that Carrie.\" She knelt next to me and kissed my forehead. \"You may not fully understand it, or why I did it. But, it's done. And I'm very pleased with you taking it upon yourself to smooth things over with Farin. You did exceptionally well, though I do wish you had told me about it. I'm going to overlook your transgressions this time. I owe you that much.\"\n\nI stopped crying and looked puzzled, at least I imagine that my face betrayed my confusion.\n\nJill smiled at me sadly. \"I know yesterday was horrible for you. I just really needed to know. I think you needed to know in the long run. If you got off on pain, you would have wet Sue's finger. You didn't. The orgasms you had last weekend were from the humiliation of being defeated, not from the pain. It's a very good thing. I don't care much for pain sluts.\" She laughed softly. \n\n\"Come on. No more punishments today. We need to talk.\" Jill said, and she and Sue helped me to my feet and guided me upstairs to her bedroom. We didn't stop there, she led me into her bathroom and into her amazingly large tub. She and Sue undressed and guided my shivering body into the hot water that was waiting for us. \n\nSue climbed in first and held me between her spread legs as I sat down. Jill sat across from us and smiled at me. I realized, I was seeing Jill naked. My eyes strained to take it all in. Her well pedicured toes were painted without a single chip in the deep red paint. Her feet looked so pampered and smooth as the stepped into the tub. Her calves and thighs were defined like a dancer's. \n\nI didn't really get a look at her ass, but from the side as she moved into the tub, it looked round and firm. Her belly was not just flat, but cut with muscle. Her arms were also well muscled, and her biceps were a bit larger than I would have thought from our previous encounters. Jill's breasts were large, with just a little sag to them, but they looked mouthwatering, their prominent nipples sticking out stiff into the air as she lowered herself into the water.\n\nWhen my eyes moved up to her face, I saw her smiling, looking at my eyes. \"It's okay Carrie, you can look, I'm proud of my body.\" Jill laughed sweetly. \"It takes a lot of work to keep it this way, so having a young girl like yourself admire it is quite the payback for all the effort.\"\n\nI was blushing heavily, my face felt so hot. I groaned, embarrassed at being caught staring. This just elicited a giggle from Jill.\n\n\"It's decision time for you Carrie.\" Jill said to me, breaking my silent humiliation. \"After today, you are making the choice to come here. If you decide to come back tomorrow, it is a commitment. But it's your commitment. The bet is paid in full after today. There is just one more thing that you must do for me and I consider all the accumulated punishments gone. We start tomorrow with a clean slate.\"\n\nI took in her words, but I was staring at her body, then I dared to look up into her eyes again and I felt the heat of embarrassment of being caught looking again. \"Wh-what is the one more thing Mistress?\"\n\nJill smiled and laughed softly. \"Yesterday was very painful. Actually, the entire weekend was very rough on you and I have to say, I'm quite proud of how you handled it all. Today is about pleasure. I'm going to make you cum Carrie. I'm going to make you cum a lot.\"\n\nIf my face felt hot before, my entire body was scalding with heat now. I felt my breath coming in fast, hard bursts. My heart was pounding, and she was only looking at me. I felt Sue's hands on my breasts then and she was cupping them, giving them a gentle squeeze. I moaned, and the sound seemed so loud I bit my lip to stop it.\n\n\"After I wear you out, you will go home and sleep on your decision. You are free to dress as you like tomorrow. You have no further commitments to me whatsoever. If you show up at 4:05 tomorrow, I will teach you. I will teach you about my lifestyle. I will teach you to shape your body. I will teach you some marketable skills and you will work for me. You will report as you have done at 4:05 every afternoon and we will spend an hour here doing exercises and training in the life style. Then we will go to my warehouse where I will teach you to work with wood, metal, clay, cloth and other raw materials that you will learn to shape into artistic pieces.\"\n\n\"I am not a philanthropist, at least not much of one. I consider you an investment that will make me money. At the beginning, you will cost me money because you don't yet know how to use your natural abilities. In the end, you will pay me back tenfold for my investment of time because you are an artist Carrie. And with the right clientele, a clientele that I have access to, you will make me a great deal of money with your natural talent.\"\n\n\"Today is 'some day'. You once asked me who painted the wall in the bedroom where Sue helped to heal your wounds. The artist is playing with your breasts right now. I have no artistic abilities Carrie, but I appreciate them. When I met Sue, she had no idea how talented she was. And she still amazes me after all these years.\"\n\n\"Everyone has a natural ability. Some people never find it. Some deny it because it doesn't lead to the job that they want or more often the job that their parents make them think they want. You are an artist Carrie. A very talented one. I doubt your parents will indulge that. It doesn't typically pay the bills. I have sold some of Sue's pieces for over half a million dollars.\"\n\n\"This doesn't replace college. College is very important. A well-rounded education will help you greatly in life. What I offer is an opportunity. It is up to you to take it or leave it. We can discuss that in greater detail later. For now, I am not your Mistress, I am just Jill.\"\n\nSue moaned behind me and Jill giggled. \"Sue has been waiting for this for a long time Carrie, you will have to excuse her excitement.\"\n\nI looked down and noted my nipples being pulled away from me so far that it stretched my breasts. I hadn't even noticed. I suddenly felt the slight pain of it and winced, but the only sound that came from my throat was pure pleasure.\n\n\"You see, this is a very unique position Carrie. I was your Mistress when you arrived, and I hope to be your Mistress tomorrow afternoon. But today, just for the next couple of hours, I am not your Mistress. If you choose to submit to me for a time, this will not happen again, not in this fashion. When you go away to college, you will be released to enjoy those years without constraint. Perhaps you will come back to me then, most likely not.\"\n\n\"My point being, I am going to go down on you Carrie. I am going to eat your sweet little virgin pussy and make you cum until you cannot manage to orgasm again. Between Sue and I, we are going to show you the most amazing pleasure you have ever felt in your life. I suppose it is unfair of me to stack the deck in my favor, leaving you to decide on a sexual release unlike you have ever experienced before. But, I don't particularly care to be fair about it. I have three days of unpleasantness to make up for in a couple of hours. And, if you are unsure at this point, let me be specific. I want you Carrie, as my student, as my submissive, as my employee and tonight, as my lover.\"\n\nI thought my chest would explode when she got on her knees and took my head lovingly in her right hand. She leaned forward, and her eyes never left mine, nor mine hers. Her mouth was so close that I could feel the heat and humidity of her breath on my lips. Then, I was moaning as her lips closed the slight gap and I was kissing Jill.\n\nIt wasn't like the last time. The first time I met her. On my bed, masturbating. The kiss I defined as the perfect kiss. This time, there was more passion. It wasn't any less sexy, it was just more raw, more lascivious. My lower lip was between hers and she was sucking it, pulling it with her lips until it popped free and I moaned.\n\nThen her tongue. Her tongue that had admonished me so much in the last few days was now darting into my mouth and exploring it. Her tongue was against mine and my eyes closed, and I opened my mouth kissing her, trying not to be sloppy. I was way overthinking this kiss. Trying to be a sexy adult. And then, the thinking was over. I was lost in a sea of sexual desire.\n\nSue continued her manipulation of my breasts. I could feel her breasts rubbing against my back due to her closeness. She was gently squeezing and tugging my nipples and it sent bolts of electrical impulses into my groin every time she pulled. But, this was nothing compared to the kiss that Jill was landing on my lips. \n\nThere are levels of orgasm. Some are much stronger than others. Some, maybe are just orgasms in my mind, a feeling of pleasure so intense that it feels orgasmic. My pussy was throbbing though nobody had touched it since Sue checked me downstairs. And to my mind at the least, a tiny orgasm rocked through my body, just from the kissing and the breast play and I'm not at all certain the breast play had anything to do with it.\n\n\"Did you just cum Carrie?\" Sue asked in a whisper in my ear. \n\nIt didn't quite break the mood, but almost. I managed a tiny nod, never ceasing the kiss. We weren't making out like teenagers. Our mouths were having sex. Like adults. My arms, which had laid lifeless at my sides all this time, moved up Jill's back and held on as she took my mouth with her own.\n\nTime meant nothing. Had it been minutes or tens of minutes, I was quite unsure. But the kiss only grew in passion. Her lips felt so magical against mine. The softness and fullness of them was like sucking into a soft fruit. The taste of her mouth was amazing, like cinnamon. A scent was sexually assaulting my nose, a mixture of her conditioner, her perfume and our arousal wafted up through my nostrils and scent me into another place. It was as if I had left this world and body behind and was transported into another place, another time, another reality of existence.\n\nI could hear my own hungry moans. I had longed for this so many times since meeting Jill and now it was actually happening. I hadn't expected it, not today, not really ever, if I was being honest. It was like that fantasy person that you desire so deeply, in some imaginary perfect setting that will never happen. But it was happening.\n\nMy body was head to toe a sexual organ. As we kissed, my legs were lifted up, over Sue's, spreading my legs, but the kiss never hesitated. As we kissed, my breasts were squeezed, my nipples tugged, but the kiss never paused. As we kissed her hand touched my pussy and I erupted in another mini-climax instantly, but the kiss never wavered.\n\nHer fingers seemed to know my body like they had trained for it all their life. Her movements were smooth, the caresses of her fingertips on my labia as she rubbed them up and down almost feeling like a heart shape where my clit was the point in the upper side of the heart. Tiny climaxes erupted again and again as she ... didn't so much explore as play my body like a concert violinist pulling notes from her instrument. Except the notes were my voice and my voice was ecstasy. \n\nAnd still the kiss went on. My clitoris throbbed even when her fingers weren't circling it or rubbing it or giving it delicate pinches and tugs. My lips parted as her fingers slipped between them, not fumbling or searching, but knowing. And my cuntal hole felt like it had expanded somehow, though she never inserted more than a single finger inside me.\n\nAnd the kiss continued. And Sue was finding new ways to pleasure my breasts, squeezing the soft cups, circling the nipples with the pads of her fingertips, flicking them delicately, pinching and pulling on them so softly. Nothing was abrupt, nothing was ever out of place. It was as if the two of them had practiced together for hours of weeks and weeks of years and years of a lifetime to perfect their orchestra on my body.\n\nAnd the kiss went on. And Jill's expert fingers found my butt hole and ran circles around it and teased it and it added to the ever-heightening sexual tension of my body. And her finger eased inside, and it caused not an inkling of pain, only pleasure. And her finger was deep and twisting inside and the mini-orgasms continued to rock through my body and each one a little stronger than the one just before it. And still I moaned into her mouth and held on as if holding her would keep this feeling from ever ending. \n\nAnd the kiss went on. And Sue had fingers separating my upper lips and a finger on my clit and Jill had fingers in my ass and my cunt and all around my labia. And Sue was moving from breast to breast and the orgasms ceased a moment. And they built up that excitement, that pleasure and my body was singing, the pitch higher with every moment of enduring joy. \n\nAnd I truly came. And the kiss went on. Through the orgasm. Through the screaming into Jill's mouth. My body shook and convulsed as a powerful explosion of heat and thrill ripped through me like a thousand fists of pleasure pounding into my body at once. And the scream was shrill and high pitched and burned my throat. My breath leaving my lungs and entering Jill's and she sucked at my tongue as my body hit a new height and I felt my entire body tense up and explode before it relaxed, and I collapsed against Sue.\n\nThey slowly withdrew their fingers from my body and helped me to my feet. I was woozy, light headed and unsure on my feet, but they seemed to expect it as they lifted me, and I barely needed to put an effort into standing. I thought they would dry me off, but they just carried my naked and dripping wet body onto their bed and laid me gently down over the bed covers.\n\nMy eyes fluttered open as I fell into the soft mattress's embrace. The first thing I saw was Jill, leaning over me and when her eyes, her dark sexy eyes peered into mine, I could see my own lust filled face in the reflection of her pupils and it made me shiver.\n\nFrom the corner of my eye, I saw Sue, she was lifting my leg and taking my foot into her mouth and she began sucking my toes. The sensation was unusual. It was not sending jolts to my sex in any case, but it was still very sexual, and I moaned softly as I felt her tongue between my toes and her lips around them.\n\n\"Are you ready to fly Carrie?\" Jill asked as she leaned closer and kissed my lips softly, sucking on my lower lip like she had begun the last time.\n\nI could only whimper in response and return her kiss. A few minutes of kissing passed with her hands on my breasts and Sue's mouth on my toes. Then she left and softly kissed my chin. Her lips opened and closed as she left soft, wet kissed down my chin and then to my throat. Jill's hands slid up to my head, her thumbs under my jaw, pushing my head back as she continued to leave a trail of tender moist kisses down my throat.\n\nShe opened her mouth wide and sucked softly on my throat, not hard enough to leave a mark, but threatening it and another moan of sexual heat escaped my lips. She continued, down over my clavicle, sucking softly on each side before continuing down my chest. At my breasts, she took her time, leaving each breast glistening with saliva as the wet open mouth kisses circled my breasts, moving in a continuously smaller figure eight until she was sucking on my nipples.\n\nMy nipples felt painful from the amount of pleasure they were receiving. It was the most amazing and poignant enjoyment I had ever received. They felt like they were over-inflated, like two tiny balloons about to pop at any moment, but she continued to suck and tease them with her tongue and teeth until I was squealing in agonizing desire.\n\nThen she surprised me. Or I surprised myself perhaps. She bit into my right nipple and my pussy convulsed and I came. Not a tiny orgasm. Not a large one like in the tub. But a blissful and powerful climax unlike the others I had felt in my short sexual history. I screamed out as I came, and Jill giggled as she suckled and nipped at my tender nipples to prolong the spasming of my body until she softly disengaged and began working back down my body. \n\nI was panting so hard, my breath sounded like it echoed through the room. Sue's mouth left my foot and then re-engaged upon my other foot. Jill's lips were kissing down my belly and I was a quivering mass of muscles and flesh beneath their skillful mouths. When she reached the top of my mound and kissed just less than an inch from the parting of my lips, they paused and pushed my knees up and wide apart, nearly touching the bed. \n\nThen she began kissing down the side of my pussy, her open lips ever so softly sucking at the tender skin on the side of my labia and her tongue darting out on occasion as if to taste my flesh. Sue had ceased sucking my feet as they were on the bed in my new position. I saw her lighting candles on the head board and the aroma of vanilla soon filled the air. When she was finished, Jill was working her way down the opposite side of my leaking pussy with her teasing kisses and I was a gasping mass of excited nerve endings.\n\nAnd then everything stopped. Jill held her head between my legs and looked up my body at me. \"I lied to you again Carrie. But, I promise it is the last lie I will ever tell you. If I go down on you, I will never be your Mistress again. You will have the most pleasure of your life. You will go home and possibly never again experience the orgasms that I will provide. But it will be the last time. I have Sue. You are too young for me to date. I could never control you if you had the image of me licking your pussy in your memory.\"\n\n\"Believe me, I want to lick you right now. I want to give you the best orgasms, perhaps ones that you will reflect upon fondly for the rest of your life. My mouth is salivating at the thought of diving down onto your sweet little cunt and eating you into a state of mindless bliss. But, I also want to be your Mistress tomorrow. It is a conundrum really.\"\n\n\"So, here we are. If you want me to be your Mistress tomorrow, Sue and I will still give you a few more great orgasms, but I won't touch my mouth to your sweet little honey pot. If you want something that Sue will never have, it's right here in front of you. I will be happy with your choice either way. You have thirty seconds to decide.\"\n\nI groaned. \"That is so unfair Jill.\" I whimpered.\n\n\"I know it is. That's life, get used to it and five seconds have passed.\" Jill smiled, licking her lips, her mouth just millimeters from my pussy.\n\n\"I'll never have this opportunity again will I?\" I asked, trying to wave the lust from my brain.\n\n\"Unlikely.\" Jill smiled and extended her tongue so close to my pussy, I could feel the heat from it.\n\n\"Damn you.\" I sighed in frustration and pounded the bed with my fists. I looked to Sue.\n\nSue giggled. \"Don't ask me, I will never have this opportunity, she's my Mistress for life. I wouldn't have it any other way Slutball.\"\n\n\"Can we stop now, and I will give you an answer tomorrow?\" I asked, hoping to clear my mind. This was all so sudden. I wiggled a little as Jill's tongue made a lapping motion.\n\n\"Hmmm. I do love a negotiator. How about Sue and I bring you to an edge ten times, without letting you cum again tonight? Then we get to watch you go down on Julie. Then you can go home and decide tomorrow?\" Jill giggled. Jill giggling seemed so out of place, but she adulted the giggle very well.",
        "\"No. I can't do that to Julie, I want that to be special.\" I sighed. \"Counter offer?\"\n\nJill laughed. \"Go ahead.\"\n\n\"Courtney?\" I offered.\n\n\"Seen that already. Try again.\" Jill smiled.\n\n\"You?\" I asked.\n\nShe grinned. \"Okay, it's a deal, but you will eat me out the whole time. No fingers, just your tongue inside me until we edge you out ten times. You slap the bed when you can't take anymore and if you cum we will flip a coin since you can't decide.\"\n\n\"Okay, but you have to stop when I slap my hand down?\" I asked to clarify.\n\n\"As long as you are honest about it. No early slaps. Only when you are truly out of control and ready to cum. And of course, you cannot have one after you leave until you bring me your answer tomorrow.\" Jill clarified, adding another stipulation though I had already figured as much.\n\n\"Okay. Deal.\" I answered.\n\nSue laughed. \"We could just do this every day until she decides Mistress.\" She climbed between legs and pulled my thighs up over her shoulders as Jill moved aside and climbed up over my face.\n\n\"I wouldn't object to that, but let's see if she is as good as Farin says.\" Jill laughed as she settled her knees on either side of my chest, taking my wrists in her hands and pulling my arms between her calves and thighs. She then eased her ass back towards my face and I was engulfed in her body.\n\nI smelled her pussy before I tasted it. My eyes watched as the thick lips lowered down towards me and brushed against my nose, then she wiggled her ass, so my nose went between her lips. She was wet and had a thick, musky smell. She was excited. I could tell that easily enough. \n\nI watched her thick lips rubbing up and down against my nose. She was already moaning, and I was in anticipation of tasting not only Jill's pussy for the first time, but her cum. Her inner lips separated around my nose and I could feel the heat and wetness coating my nose as the smell flowed into my nostrils. \n\n\"Tongue out Carrie.\" Jill said, and she released my hands and grasped my breasts. She was a bit rougher than Sue. She was in fact, quite a bit rougher than Sue and it hurt the way she grabbed them. I immediately shot my tongue out and it touched her somewhere, I'm guessing near her clit because she didn't slide forward onto it, just settled her pussy down around my nose and my tongue slipped into her slit. Then I could feel the little nodule of her clit with the tip of my tongue and I knew I would have to breathe through my mouth. \n\nMy vision was completely shut off by her beautiful ass which pressed against my forehead and eye sockets. I just kept my tongue out and started flicking it on her clit as she basically rode my nose. I focused on this, uncomfortable as it was, until a spasm of pleasure jolted through my body like a knife piercing my skin. Sue's mouth was on my pussy.\n\nI moaned deeply, and it vibrated my tongue according to Jill. \"Oh yes Carrie, that feels so nice. Keep that going Sue.\"\n\nAnd she did. She was sucking my lips, she wasn't entering me or even playing on my clit, though I could feel her exhaling through her nose just above it. She just sucked and licked on one labia and then the other, back and forth. She was slow, thorough and perfectly symmetrical in the application of her mouth to my lips.\n\nJill was now fucking my nose with her pussy, so the tip went inside her wet hole when she settled her ass cheeks harder against my face. But she kept my clit where my tongue could stay in contact. I started to circle her clit with the tip of my tongue and Jill seemed to really like that. \"Oh, Sue did you teach her this? She's circling my clit, look at her.\"\n\nSue stopped sucking for long enough to giggle. \"Not me. Farin or instinct, I'm guessing instinct.\" And she went right back down to ignoring the parts of my pussy that I went to for an orgasm, but bringing my sexual heat up to a boiling point nonetheless.\n\nI pushed my thighs down on Sue's shoulders and wiggled my hips, trying to get contact with my slit, to get her tongue to go inside somewhere. Sue was too fast though and always pulled away or shifted and slapped my ass for my efforts. \"Stop that slutball. I am doing this the way I want to do it, not the way you want it.\"\n\nI sighed and focused on Jill's clit. The succulent little pearl was too far away for me to take into my lips, but my tongue was dancing all around it and Jill seemed quite appreciative. I didn't really enjoy her fucking herself on my nose and as her excitement grew and her juices flowed, I had to be conscious not to breathe them in. \n\nShe was a woman, not a teenager like I usually entertained. Her flowing juices were thicker it seemed, more... adult? The scent was stronger, not unpleasant, just much stronger. The taste was tangier. \n\nI tried very hard to ignore it, but Sue was driving me crazy with her sucking on my lips and never delving between them. It felt really good, but I didn't think I could ever cum from this. And yet, she just kept her rhythmic sucking and licking, not speeding or hardening her mouth's attack on my soft labia. I finally begged her.\n\n\"Sue please!\" And I wiggled my hips side to side to try to force her tongue to touch me between my lips. \n\nShe just laughed and slapped my thighs hard. \"I told you I will do it my way Slutball. I know what you want, and you will get it in good time. You need to learn to give up control, even when your little honey pot is ruling your life like it is now.\"\n\nI groaned and went back to trying to focus on Jill. Jill was laughing, not unkindly, but certainly in response to my outburst. \"That's it Carrie, just focus on your task and relax. Sue knows what she is doing, trust that and give yourself over to the feeling of her tease. If you focus on my clit and her mouth, you will cum. Well, you will come close anyway, you better not cum.\"\n\n\"Yes Mistress.\" I answered from beneath her.\n\nIt took a very long time. At least it seemed like a very long time. But, finally, Sue's sucking on only my labia paid off and the pressure was starting to bring me towards a climax. My arm was kind of stuck between Jill's thigh and calf, but I managed to swing down somehow and slap the bed.\n\n\"So soon?\" Jill laughed softly as she rode my face and moaned. \"Five more minutes Carrie, don't try to bullshit me, you are close, but not quite that close.\"\n\nSue just continued as she had been, sucking my labia, avoiding the inner lips altogether, only her breath caressed my hardened clit. I whimpered as the sucks and kisses continued and she slid over and sucked hard on that place... she clamped down on that space between my right thigh and my right outer lip. That bare, oh so sensitive, spot and she sucked... and she sucked hard... And I screamed and slapped the fuck out of the mattress because, I was going to cum.\n\n\"Holy Fuck!\" Sue laughed and backed away, watching my pussy leaking.\n\n\"Well, that's new.\" Jill joined her laughter. \"Who said you could stop licking slut?\" Jill asked rhetorically as she tugged my nipples until my tongue worked her wet cunt again.\n\n\"I wonder how long you can fight it.\" Sue mused as she licked the spot she had just sucked and watched my hips jolt slightly. \"Can't play that game today though.\" She decided and went back to sucking the labia, albeit quite gently.\n\nJill began rocking on my face, a bit faster and more violently. She grabbed my nipples so hard, it brought tears to my eyes and I just knew she was about to have an orgasm. An orgasm from my mouth. And I kind of felt proud of that despite the pain in my nipples as she rode my nose and tongue.\n\nI was right. She came. She came hard. I moaned into her oozing puss as it leaked its thick ooze all over my nose and into my open mouth. I made a slight sucking sound, but I don't think Jill heard a word. \"Oh yes you sweet little fucking slut.\" Jill said in a sultry voice. \"Eat that cunt, know your purpose, just a slutty little... cunt licking... \"\n\nAnd I never knew what the noun was because the moan of the pinnacle of her orgasm prevented it from leaving her lips.\n\nAnd then, Sue's mouth was sucking the opposite side, outside my lip... inside my thigh... that oh so delicate place... that ... and I was screaming and slapping the mattress again and she sucked hard and pulled away, giggling.\n\n\"Oh, that is so hot Carrie.\" Sue laughed. \"I don't think I will need to touch your pussy at all.\" \n\n\"That's two Carrie.\" Jill said through heavy breath. \"And a very nice orgasm for me. Oh, baby I hope you decide to be my toy for a while. So, much natural talent to discover! Let's switch up a bit.\"\n\nAnd that said, Jill got up and turned around. Her calves rested on my upper arms and my elbows were bent so my hands rested against the bed and I could slap it easily. I was looking up at her from between her thighs now. I could feel my face coated in her juices and it made me smile.\n\nJill looked down into my eyes and laughed kindly. \"You are proud of yourself aren't you slut?\"\n\nI nodded my head, grinning.\n\nShe laughed again sweetly. \"Enjoy it as much as you like. I will let you explore this time, only with your tongue, but go ahead and figure my pussy out. If you decide to stay with us, you will need to know it intimately.\"\n\nThen Sue lifted my right leg and handed it to Jill. Jill hooked my knee under her armpit and my ass was up in the air. She duplicated the other leg and my calves were flapping in the air, my ass up straight and Sue was pressing her naked body against my back.\n\nIt was difficult to breathe, very uncomfortable a position, but I wasn't suffocating, just had to work harder to breathe. Blood rushed to my head and I felt a bit woozy, but I kept moving my tongue around Jill's lips, darting and licking and lapping. I did as she invited me to do and explored each crevice of her sex.\n\nSue, meanwhile, began sucking that little piece of ass flesh at the inner bottom of my ... well... bottom. Very sensitive, but not going to ever bring me to orgasm. Still she continued right for a bit, then left. I was enjoying it very much, but not enough to cum. Then she put her thumbs on those wet spots and pushed them open and began... devouring my asshole.\n\nI groaned loudly in surprise. It felt absolutely amazing. She didn't just dart in and out like a tongue fuck, but she would dive in her tongue and swirl around inside and then suck at my little hole. It was driving me insane and I guess my tongue duplicated my pleasure by thrusting madly into Jill's wet hole.\n\n\"Oh, she likes that.\" Jill giggled and wiggled a bit to give me easier access inside her. \"Some girls can cum from analingus.\" Jill whispered, looking into my sex drunk eyes. \"I wonder if you are one of those.\"\n\nI wasn't sure I would cum, but oh damn did it feel amazing. When her finger slipped inside and began fucking my ass while her tongue played all around my anus, I started breathing faster. I pushed my tongue hard like I wanted hers. I didn't think it would push me to orgasm, but it was certainly feeling close to one. \n\nThen Sue withdrew her finger and tickled my pussy hole while she clamped her mouth down on my anus and sucked while swirling her tongue and I shoved my hips up and yes... I could cum from this. I pushed and pushed and tried to find that precipice just short of orgasm and it came suddenly and I slapped the mattress with both hands. I had let it go too far. I was gone... I was going to cum. \n\nBut Sue was away in a fraction of a second and I was humping air. She giggled. \"Dangerous game slutball. I wouldn't do that again if I were you.\"\n\n\"What?\" Jill asked Sue through a moan.\n\n\"She pushed to the edge of the cliff before slapping out.\" Sue giggled. \"You were half a second away weren't you slutball?\"\n\n\"Yes.\" I gasped. \"Sorry, I just wasn't sure. I hadn't ... I mean from my butt...\" I apologized.\n\n\"Yeah, it's different.\" Sue agreed. \"As Mistress said, you aren't alone.\"\n\nThey let my legs down and we all repositioned again. This time Mistress... erm... Jill laid down and I knelt between her legs. I was allowed to put my hands on her upper thighs, but not to touch her pussy yet with anything but my mouth. This put my ass way up in the air and Sue started working my asshole again. A few minutes later, Jill came again... soon after, I was tapping out once more. Then... a knock at the door.\n\n\"That must be Julie.\" Sue giggled. \"Don't go anywhere.\" She slapped my ass a little hard, but it was louder than it stung.\n\n\"Keep licking.\" Jill instructed. \"Julie will be okay. I know she's developing a crush on you and you clearly have one on her, trust me, waiting will make it better, not worse. Show her. Let her see what she wants you to do to her. I promise you, I will allow it when the time is right.\"\n\nI looked up at her. She understood me so well. Because right now, I wanted to get up and hug Julie and not let her see me ... going down on Jill. Jill smiled, knowingly. A tear left my eye and she wiped it with her fingertip and licked it. \n\n\"Salty.\" She smiled. \"Trust me Carrie. You and Julie will have your opportunity. It's way too soon after your last relationship and she is still in one with a boy. You want more than an experimental fling. Timing is important.\" And she patted my head lovingly. \"For now, focus on my pussy slutball, it's important to focus on your current task always.\"\n\nI slid my tongue back in and started eating Jill voraciously as I heard the bedroom door open and a gasp... and a very Courtney giggle.\n\n\"I brought the girls up to speed Mistress, as much as I thought you would want them to know.\" Sue said as she climbed on the bed and attacked my asshole with her tongue again.\n\n\"Well, your dream come true at last Fitch.\" Courtney giggled.\n\n\"Can't leave her alone for a minute.\" Julie laughed. But ... I heard it. I doubt that Sue or Courtney picked up on it. I didn't think Jill had heard it either. Imagination on my part? I didn't think so. Bitterness. Jealousy? Definitely not the appreciation that Jill thought it would be.\n\nJill looked down at me and smiled at the look on my face. 'Trust me', she mouthed and let out a soft moan.\n\n\"Seven to go slutball.\" Sue said as she extracted her mouth from my asshole.\n\n\"Six!\" I replied as I pulled my lips momentarily from Jill's delicious pink folds.\n\n\"Damn, she's so good at math Mistress.\" Sue giggled and went back to tongue fucking/sucking my ass.\n\n\"Mind if we...?\" Courtney asked, never finishing the question.\n\n\"Never.\" Jill moaned. She grabbed my hair and shoved my face into her pussy and came hard. I couldn't breathe as she rubbed her creamy sex juice all over my face. I must have started turning blue from lack of oxygen when she finally released me and stopped shuddering. \n\n\"Sorry Slutball, it just hit me all of a sudden.\" She smiled at me and patted my head.\n\n\"I ... need to use the bathroom.\" I heard Julie say and she didn't use the one in the bedroom. No, she left to use the one down the hall. \n\nI lifted my head... or tried to, but Jill seemed to know what I was going to do before I did all the time. She held my head tight and shook her head 'no' as she looked into my eyes with a smile. \"Trust me\" She whispered.\n\n\"Well, so you are an anal slut huh Carrie?\" Courtney laughed. She sat on the bed next to where my face was between Jill's thighs. I looked sideways. She was naked.\n\n\"I guess you can't see me very well around that thigh. Let's try this.\" And Courtney climbed over Jill, her feet on the bed, legs around Jill, and sat on the headboard, so if I looked up past Jill's head, there was Courtney. Naked. Spread. Playing with her pussy and watching me eating Jill.\n\n\"When Julie comes back, do you mind if I go down on her for a bit? I mean, after she gets me off a few times, of course. She's not a subbie slut like you, so I have to reciprocate when we play.\" Courtney looked at me with that Covington smile. I glared at her and she saw it. She laughed.\n\n\"I knew it. Slutball in love. So soon after Farin.\" Courtney giggled. \"I'll tell you what Carrie...\" She leaned in and whispered. \"If you eat lunch with me tomorrow... you know where and how... I won't let her eat my pussy. She hasn't yet. You can still be her first pussy to eat. So? What do you say?\"\n\nI looked to Jill for help. She shrugged. \"My only sub in this room is Sue.\"\n\n\"It's true though Slutball.\" Sue added. \"Yes, we made her cum, but she is saving oral for you so far.\"\n\n\"I know she is.\" I separated my mouth from Jill's pussy to address the smirking Courtney. \"She told me she would try her hardest, so really Courtney, no bargaining chip there, you aren't as persuasive as you think.\" \n\nCourtney, Sue and Jill all laughed as I sank back to focus on Jill's cunt. The laugh was not mocking or unpleasant to hear. And I laughed into Jill's pussy and she moaned. \n\n\"That wasn't bad.\" Jill grinned at Sue over my head. \"Mental note.\" \n\nSue laughed. I didn't get it. I drank more pussy juice.\n\nJulie came back in. She had a chair from the dining room and sat it by the bed. I paused eating Jill to look up at her. She smiled at me. \"So predictable Fitch.\" She giggled and wiped a tear from my cheek.\n\nJill slapped my cheek gently. \"Back to work slutball.\"\n\nJulie laughed softly and pulled off her shirt. I watched with my peripheral vision as she slowly undressed, watching me watch her and grinning every moment. She was smirking. She deserved it.\n\nI had seen Julie naked many times. But, lately... I couldn't help myself. I moaned as she opened her pants and she giggled and started making a bigger show of removing her clothes. \n\nSue saw what was going on. So did Jill. So did Courtney.\n\n\"Oh Julie, you little tease.\" Courtney giggled. \"Use her slutty little hand.\" \n\nJulie, who had been looking into my one eye and smiling as she teased me with her stripping, looked up at Courtney and frowned for a split second, the moment, the connection between us being broken.\n\nSue stopped eating my ass and slapped my sore cheeks with both hands, loud but not hard. \"I'm tired.\" Sue whined. \"You want a turn Julie?\" She was rubbing my anus with her finger while she said it and started thrusting in and out just to her second knuckle, while tickling my lips with her other hand. \n\n\"I bet the slut would love to feel your lips on her juicy little cum box. Wouldn't you Slutball?\" She scratched my clit with her fingernail and I slammed the mattress hard. Sue laughed. \"I wish I hadn't touched your clit. I think the thought would have done it alone.\" She moved away from me though. She got off the bed and stood next to Julie and whispered in her ear. Julie smiled at me and giggled a lot as Sue continued to whisper.\n\n\"Stop eavesdropping slut\" Jill squeezed my head between her thighs and I couldn't even hear the psst psst of the whispered voices anymore and refocused on the ... well, I had to be honest with myself. I had wanted to taste Jill for a long time and she was quite yummy.\n\nJill started laughing, I could tell because she was shaking and looking at me and she was really the only one I could see. She then released my head. \"Don't stop licking me slut.\" Jill smiled at me. \"Julie is going to use her fingers on you. You have five minutes to not cum. If you cum, we are done. I'll flip you over and eat your yummy little puss until you pass out. If you make it to five minutes, hmmm... I don't really have to give you anything, but I'll tell you what. If you make it to five minutes, we will have a group date, me, Sue, you and Julie with separate bedrooms in a nice hotel. How does that sound? I can't give you a time yet, but before the school year is over of course.\"\n\nI looked at her and stopped long enough to say. \"Do I really have a choice?\"\n\nJill laughed. \"You always have a choice slut. There are consequences to every decision, but you always have a choice.\"\n\n\"I'd prefer not to play this game.\" I said and licked her anus to see if she like it. She grinned.",
        "\"Okay, then I guess you and Courtney can 69 next to us Julie.\" Jill smiled at me.\n\nI glared at her hard. They all laughed at me. I felt fingers touching my asshole, just a single fingertip circling it. I went to look back and Jill grabbed my head. \"Lick, that's your job, lick and don't cum. The only two things you need to worry your slutty little head about right now.\"\n\nI moaned and licked her hard. The fingertip worked into my little asshole and plunged deep. Then I felt a second hand on my pussy and I lost it. I slapped the mattress hard. But the fingers continued. \"Don't cum slut. You can control it if you want to. Put your little sex addled brain to work elsewhere. Think about it... something that will keep you from cumming.\" Jill whispered as I shuddered and moaned into her pussy.\n\nI whined and ate her hard. I was going to cum. There was no way I could survive this. And it wasn't her technique or anything special about the way I was being touched. It was ... \n\nIt was...\n\nI looked up into Jill's eyes. She was smiling at me as if waiting for me to realize what I just realized. It was completely mental. It was because it was Julie. It was because I was so turned on by her touching me. This was not a physical need to climax. This was a mental desire to climax. I could beat this.\n\nWell... in theory... right now my body was writhing. \n\n\"Fight it slut. You can beat this.\" Jill smiled at me. \"Don't stop licking me though. I am about ready for another orgasm. Lick me through it.\"\n\nI shoved my tongue deep inside her pussy hole and sucked at her clit with my upper lip stretched above her slit. Jill moaned and came. \n\n\"Your clit is so fucking big Carrie.\" I heard Julie behind me. I whimpered.\n\n\"Seriously Care... It's like, I could tug it with my fingertips.\" She giggled and the finger in my ass plunged faster as the finger tips kept tickling my outer labia and teasing a circle near my clit.\n\nI was slurping Jill noisily. \n\n\"Damn, that's so hot.\" Courtney chimed in. \"The way her ass grips that finger, it's like the way her ass gripped that first big black cock in the bathroom.\"\n\nI started slamming the mattress. It wasn't as much the need to cum as it was she was divulging things that were not supposed to be divulged. \n\n\"Ohh...\" Courtney giggled. \"Please don't tell me you have a BBC fetish now too! Good lord Carrie, you can't get off on everything!\"\n\n\"But she can.\" Julie giggled. \"She's like the ultimate slut. It's so... irresistible.\"\n\nI leapt away from them and rolled off the bed. I was a millisecond from an orgasm.\n\n\"Seven and a half\" Sue laughed.\n\n\"It was Courtney, by the way. Funny how your brain works Care Bear.\" Julie laughed softly.\n\nI scowled at her, but I wasn't really mad. She smiled sweetly. \"I want to see your face when it's me.\" She winked, and I smiled.\n\n\"Okay, enough you two. Four to go Carrie. Give me one more orgasm, you can use your hands. Sue, I think every three minutes will do. That gives you twelve minutes to give me the best orgasm you can Slutball. How do you want me?\" Jill broke in.\n\nI was confused, but figured the best way would be on her knees with her head to the mattress, back arched so I could get at her pussy and ass. She got in position as I asked, and Sue moved me to the edge of the bed, standing but bent over to address Jill's pussy. And then the first three minutes started, and I was eating Jill at a nice steady pace, fingers pulling her lips open to give me more access when Sue started in.\n\nShe went for all the sweet spots at once. Inner thighs, outer lips, inner lips, clit and asshole, one to the other to the other in rapid secession. I was tapping out and gasping for air and fingering Jill while I ate her clit. \n\n\"Keep going slut. Three to go.\" Sue giggled and just squeezed my ass for a while as I ate Jill out good.\n\nJill moved my head a little. \"That's one of my favorite spots\", she tapped her finger on her perineum. \"My clit will finish me well, but don't finish me until the last tap out.\" \n\nThen the electricity jolted through me again as Sue devoured my ass. She broke off and licked the two sides of my pussy in my tender spots where thigh and lip almost touched. \"She loves it here.\" Sue giggled as she was... instructing Julie! \n\nI devoured Jill madly in response and Jill loved it. She moaned. \"Oh yes slutball, you are so responsive.\"\n\nAs if to reiterate, Sue lifted my ass cheeks apart and sucked hard on the left then right then left until I tapped out again. I gasped for air as I sucked and slurped and whined into Jill's cunt.\n\n\"You are doing great Carrie, just two more and you can finish me off.\" Jill moaned at me.\n\nA half minute later, Sue was sucking my pussy so hard I thought I would go over the top in a second. I responded by shoving my face into Jill's lips so hard I could feel her wetness all over my face. I moaned and thrashed and wiggled my ass as my cunt spasmed and juiced and dripped in need and thrust my hips forward away from her and slapped the mattress hard.\n\nI was a mess. I licked Jill, but I was crying now in need. God help me I needed to cum so bad it was hurting. My legs were shaking so hard I thought they would give out.\n\nSue giggled. \"That was close huh? One more slutball. On your clit... hold out as long as you can.\" She waited and just caressed me for a while. I was licking Jill noisily and then... it happened.\n\nSue latched onto my clit and sucked hard and my eyes flew open. I grabbed Jill's thighs and screamed into her cunt as I opened my mouth wide and tried to get her entire pussy inside my mouth. I was mindless. I was sex. I was eating Jill to try and fight the orgasm... it was there ... there was no stopping it. My clit was inside Sue's mouth and my body was shaking wildly and I tapped, and she didn't stop, and I lunged forward, and she followed, and I wiggled to the side and she let go and I latched onto Jill's clit and Jill came hard. She squirted into my face as she grabbed my head and rode my face through a long... hard... violent orgasm.\n\nWhen she let me go... I collapsed onto the floor and cried. My pussy was so wet. I was shaking with need. I needed to cum so bad. \n\nThey looked at me. I was holding my arms to resist finishing myself off. Jill was all over my face... her fluids... I could taste them, smell them. \n\n\"Easy Carrie.\" Sue smiled and laid down next to me and hugged me. \"Easy baby.\" She held me and kissed my cheek softly. \n\nI was shaking uncontrollably. My body spasmed from head to toe over and over again. I was so close. So close. I started crying. \"Oh please. No more.\" I begged.\n\n\"No, no more. You did great honey.\" Sue smiled and held me tight.\n\nJill was breathing heavily on the bed. \"That was incredible Carrie. Want me to finish you?\" She smiled at me, laying on her belly over the edge of the bed. She was looking at me with a beautiful smile. \n\nI wanted it. I wanted it so bad. I looked up at her through tear filled eyes. \"You know I do.\" I gasped for breath. \"But no.\"\n\nJill smiled at me. \"Good girl. Pull yourself together and take a quick shower. Make us some dinner and think about your options. We will talk after dinner.\"\n\nSue helped me to my feet and led me to the shower. I took a warm one. A hot one would have just made me want to masturbate too badly and I wasn't sure I could resist the urge right now. A few minutes later, Julie walked in. She smiled at me and sat on the toilet and watched me under the shower.\n\n\"That was really hot.\" She giggled.\n\nI looked at her and smiled. \"I need to cum so bad Jules.\"\n\n\"I know.\" Julie laughed. \"I love seeing you so desperate for an orgasm. It's really a turn on.\"\n\n\"Et tu Brutus?\" I mumbled and turned the water a bit colder. \n\n\"I get to choose.\" I told her as I turned the water off.\n\n\"I know.\" Julie smiled at me. \"Tough decision? You've wanted this exit so badly for so long. Why didn't you just end it? You'd have your orgasm and be done right now. We could be making love somewhere... right now.\" She was teasing me. The bitch.\n\nI frowned at her. \"I don't know Jules. What's wrong with me? Why am I even entertaining this?\"\n\nJulie exhaled loudly. \"You know why.\"\n\nI looked at her piteously. She just smiled. \"Don't ask me to decide for you. You might not like the answer.\"\n\nI raised an eyebrow and shot her a confused look, intentionally.\n\n\"Oh, please. Don't play stupid with me Carrie Fitch. I'm your best friend. You love it, well, parts of it. And Jill will play the parts you love the best. The beating is over. You will have to earn punishments, so don't earn them. It's pretty simple really.\"\n\n\"It's not simple Julie.\" I answered as I dried off and pouted at her.\n\n\"Yes, it actually is. You are a big girl Carrie. I'm not going to tell you what to do. I know your decision. Make it and own it. Jill and Sue are amazing. YOU are amazing. Make your decision and don't look back.\" And she stood up, still naked and turned away. \n\n\"By the way.\" She stopped at the door and turned to look at me. Her ass is so incredible, she caught me staring. \"Up here.\" She laughed, and I met her eyes with my own. \"Dinner last night was delicious. You will make someone a great wife some day.\" She laughed and left me there with a towel and my thoughts.\n\nI exited the bathroom to see Courtney going down on Julie and I was instantly jealous in spite of the hypocrisy of it. She smiled at me as she moaned softly. \"You're better.\" She giggled at me and Courtney softly bit her clit. \"Ouch!\" She slapped Courtney on the head. \"You said the same thing bitch.\" And Courtney and she shared a laugh and I felt a little better as I left to prepare dinner.\n\nTonight, was shrimp limon... a very French sounding name for shrimp in a lemon sauce over angel hair pasta. I followed the instructions and dinner was ready in forty-five minutes, plates set, well... four plates set. I figured I was eating on the floor again.\n\nAs the last plate was set, Jill, Sue, Courtney and Julie emerged from the bedroom, each wearing a thin robe. Jill looked at the table and grinned. \"You want to eat on the floor again huh?\"\n\nCourtney, Sue and Julie all giggled. I blushed. \"I... can I eat at the table?\" I asked.\n\nJill laughed. \"No, you could have, but given the lack of a fifth setting... I think you are leaning a certain way with your big decision.\"\n\nThey sat down and started eating as I stood naked in the kitchen watching. I suddenly felt very hungry. I whimpered as I retrieved my bowl and went to the table to get some of the dinner. They all looked at me and laughed. I turned away and sat the bowl on the floor. \n\n\"Don't forget the second bowl.\" Sue giggled and they all laughed as I took a small bowl and put it between my knees, sobbing softly as I leaned down to take my first bite of food from the bowl.\n\n\"Honestly, I never thought this would turn me on. I mean... when you think about people eating like dogs, it's so degrading. But Carrie can make anything look sexy.\" Courtney stated.\n\n\"Yes, she can.\" Julie agreed. Her voice... I whimpered and cringed as the goo dripped from my snatch with a plop in the bowl.\n\n\"I'm truly going to miss her if she decides to be done.\" Sue said softly.\n\n\"We can still be friends pet.\" Jill answered. \"I'm sure Carrie will stay in touch for a while.\"\n\n\"She isn't going anywhere.\" Courtney laughed. \"She loves this too much to give it up.\"\n\n\"Though I'll be happy to take over if you like Carrie.\" Courtney directed to me.\n\n\"Oh!\" Julie exclaimed as if remembering something suddenly. \"Courtney, what's the deal on Rebecca? I tried to talk to her and she refused...\"\n\nThe table got quiet suddenly. \"What deal on Rebecca?\" Jill asked, her voice suddenly very steady, not playful at all.\n\nSilence for a little while. \"She is plotting revenge against Carrie and her crew for some vandalism they did last year.\" Courtney finally broke the tense silence.\n\n\"And you didn't think this was something you should tell me Carrie?\" Jill asked, her voice a bit severe. I shivered.\n\n\"Oh, Care Bear, why do you always have to fight every battle alone?\" Julie sighed. \"Sorry Carrie, I didn't know it was a secret.\"\n\nI turned my head over my shoulder and bit my lip. \"I'm sorry Jill. It wasn't ... I mean there wasn't really a good time to bring it up.\"\n\n\"Do you want that girl to humiliate you?\" Jill asked. I could sense the irritation gone from her voice now. This was not a rhetorical question. \n\n\"No.\" I whispered. \"I ... Jill, I can handle Rebecca.\"\n\n\"You could handle Rebecca.\" Jill corrected. \"She has a lot of ammunition on you now Carrie. It isn't the same. I think you underestimate your situation.\"\n\n\"It's not a big deal really Jill.\" Courtney broke in. \"They are planning to\"\n\n\"Not now Courtney.\" Jill interrupted. \"Stand up and come over here with your slut juice bowl Carrie.\"\n\nI stood and collected the bowl and walked over to the table as she instructed.\n\n\"Put the bowl between your legs, standing with your feet wide apart, hands behind your head.\"\n\nI shivered and did as she asked.\n\n\"Rebecca hates you. You know this. She isn't like us. We love you. We care about you. We humiliate you in good fun. Rebecca does it with the intention of hurting you. She would love to publicly destroy you.\" Jill spoke, everyone else was silent.\n\n\"And you like it! You want her to ruin you, don't you?\" This time the question was rhetorical. \"God, you are pathetic Carrie Fitch. Forget it, I don't want you anymore. Go serve that dreadful cunt of a girl. You can wear your slut suit every day and go home with a bruised ass and throat from being spanked and throat fucked. She will fuck your asshole until you can't close it anymore. You want that don't you slut?\"\n\nI whimpered, and my lip shivered. \"No, I don't Jill, I swear I don't.\"\n\n\"I don't believe you, look at your cunt slime.\" \n\nI looked down and saw the long strand of juice dangling from my cunt just as it broke with a plop to the bowl. I cried. \"No please no.\"\n\n\"What is she planning?\" Jill turned to Courtney. \"You disgust me Carrie. Just stand there and drool about Rebecca, you sick bitch.\"\n\nCourtney cleared her throat, clearly uncomfortable, a rare event. \"She's planning to put rotten eggs in their lockers and on their heads. Gross, but not really... umm... thoughtful.\"\n\n\"She was so much more innovative with Darla.\" Jill said with disappointment. \"That's just boring. See if you can change her mind. Something more humiliating to help Carrie get her fix.\"\n\n\"Seriously?\" Courtney asked her.\n\n\"Yeah, maybe have Carrie just eat everyone's pussy but this time they will know who it is. Clearly, she will do it. Clearly, she wants to do it. Look at her cum box.\"\n\nI heard another plop and whimpered.\n\n\"Julie, help to convince her, you'd enjoy that too I bet. Having Carrie on her knees in the bathroom sucking all the cheerleaders like old times. You can take turns fucking her slutty ass and riding her slutty face every day.\"\n\n\"Please Jill, I don't want that I swear. We... we were planning to do something to her... before she does anything to us.\"\n\nJill smiled at me. \"I know you don't... yet you do. Bring your food in here and eat next to me slutball. It's okay, I'm not angry with you.\"\n\nEveryone breathed a sigh of relief except Sue, who knew Jill better than anyone. \n\nI brought my bowl in and knelt over my slut bowl and ate while Jill patted my head affectionately. \"Carrie, I don't want you to give that girl any control, do you understand me? You saw how much you just oozed. You would enjoy it, a part of you. But, she will destroy you if she gets the chance. It wouldn't be just to humiliate you, she would like to ruin your life, truly.\"\n\nI whimpered softly. \"I know Mis... Jill.\"\n\nJill laughed softly. \"Just call me if you can't handle it. I'm sure you will be fine.\"\n\n\"Now, clearly, I was not serious if there was any doubt. Courtney, I know your loyalty is to yourself. You like Carrie, but not the way Julie does. Consider what you would have to lose if that bitch gets leverage on her again. Julie, you need to stay as neutral as possible, I know you will take Carrie's side in a second and if the time comes, you will do the right thing. Let them have their childish fight if it doesn't escalate to any control over Carrie. She thinks she is tough, but we have all seen how she answers to her needy cunt.\"\n\nI groaned, and Jill just pet my head again and turned to me. \"It's okay Carrie, I adore your slutty ways, we all do.\"\n\n\"So, what's your plan?\" Jill was addressing me.\n\n\"I really hadn't thought about it much yet. But...\" I looked up at Julie and blushed.\n\n\"What pervy girl?\" Julie giggled.\n\n\"I ... was thinking of ... well... altering her spanks a little.\" I whispered.\n\n\"Evil girl.\" Julie laughed. \"I don't know why you are looking at me unless you are planning to do mine as well, in which case, I will get even Fitch, I promise you that.\"\n\nI grinned at her. \"I wasn't going to, but now that you promise me...\"\n\nThey all laughed. It made me feel good that I could still laugh with them from time to time and not just be laughed at all the time.\n\nJill smiled at me and it made me feel a lot better. \"Look, I'll leave it alone. It seems beneath you, but you do what you feel is right for your Carrie. I will bail you out once if you need it. I figure we owe you that since we fueled her a little with ... well... let's just say we owe you a few favors and leave it at that.\"\n\nI shrugged. \"I don't feel that way. You and Sue were always straight with me.\"\n\n\"Oh honey, if you think Jill and I are straight, you are pretty dense.\" Sue laughed.\n\nI just shook my head as we all laughed. Besides being naked and eating from a dog bowl on the floor with another bowl collecting my cunt juice as it dripped from my 'cum box', it was like a regular dinner with friends.\n\n\"And she has a date with a cheerleader Saturday.\" Julie laughed. \n\n\"Come on Jules!\" I shouted, exasperated. \"I'm not hiding things, but not everything in my life needs to be mentioned here.\"\n\n\"What is this about Carrie?\" Jill asked.\n\n\"It's Karen. She asked me out. Actually, she kind of told me I was to pick her up at 9.\" I replied.\n\n\"Okay, you have my permission.\" Jill said with a grin.\n\n\"Wha... Jill! I don't want to go.\" I whined.\n\nCourtney interrupted with a giggle. \"I may have told her you like the forceful type.\"\n\nI looked up from my bowl with food on my face. \"This isn't funny.\"\n\nJill laughed. \"Julie, do you mind if she goes on a date with Karen? Be honest, if it bothers you then it's off. If you think it would be as fun as I do to have her go on a normal date, putting her slutty needs aside to have a nice, asexual date for a change, then tell her she is going.\"\n\nJulie looked at me and smiled. \"I think it would do her some good to remember how normal people act on a date. You know, being dressed and not thinking of her gooey pussy the whole time. She will probably end up making out with her in the movie theatre. It will be interesting to see if she can resist turning it into some form of sex.\" \n\n\"Jules, come on, I am not an experiment.\" I looked at her pathetically.\n\n\"Well, I guess if you come back to Jill tomorrow, you will be. If she is asking me, I want what I told you I want. You to date Karen while I am dating Chad. Publicly anyway. Ohhh we could double!\" She giggled.\n\nJill looked thoughtful for a moment. \"Julie, you just surprised me.\"\n\n\"OH! I almost forgot.\" Time for a subject change. \"There is a lesbian group counseling session Thursday at 6:00.\"\n\n\"You inviting us Carrie?\" Sue asked and we all laughed.\n\nI remembered then that only Jill knew about it. \"No.\" I said, looking up at Jill with food on my face I'm sure. \"So, what do you think? Should I go?\".\n\nJill smiled. \"If you come back tomorrow, we will discuss it further. But yes, I think you should go and then tell me about it when you are done, whether I am your Mistress tomorrow or not.\" Then she looked at Julie and smiled back at me. \"You should take Julie with you.\"",
        "Julie interjected. \"I don't really think I need that.\" She laughed, but it was a weak, uncertain laugh. \"But, yeah, if you want company Carrie, of course I will go with you.\"\n\n\"Can I go too?\" Courtney asked. \"To keep an eye on Julie while she keeps an eye on Carrie.\" She giggled. \n\nAnd then, we finished eating. I had a few more ounces of slime than yesterday when I measured it out. But, I didn't drink it this time, Jill had me pour it into an empty ice cube tray and put it in the freezer. She told me if I stayed, I'd be filling it repeatedly.\n\nI cleaned all the dishes as they retired to shower and dress. Then she took me into her bedroom alone as Sue did whatever Sue did, Julie did homework and Courtney went home. When we were alone, Jill had me lie on the bed. She climbed next to me and surprised the hell out of me when she started kissing me. \n\nFor the next fifteen minutes, we made out and felt each other up. We didn't cum, neither of us, just kissed and fondled. It was very exciting. \n\nFinally, she broke away and kissed my lips one last time. \n\n\"I needed that... just in case I don't see you again.\" Jill smiled at me. I frowned.\n\n\"Hey, it's your decision Carrie, not mine.\" She looked at me seriously. \"I'm going to say a few things you already know. Things you should consider tonight and tomorrow.\"\n\n\"I'm not Darla. I'm not weak. I'm not malicious. And I prefer women to men. I will humiliate you because you get off on it and it is entertaining. I will not endanger your life or your reputation. You are a prize Carrie. I value you. I hope you know that.\"\n\n\"You will have orgasms. Denial is enjoyable. It helps you focus. But without occasional release, it is just cruel and I'm not cruel unless I need to be.\"\n\n\"You will work hard. Not just on being a subby slut. You will learn a great deal of truly useful things. You will learn to cook, to clean, to sew, to press clothes. And, you will learn a great deal about your passion. That's a really nice carrot I have on my stick to attract you.\"\n\nI smiled. \n\n\"Your answer is yes right now, I know it is. But I won't take it right now. Think on it. You will have to do what I say, when I say, with who I say, where I say. You will be spanked, painfully if needed to make a lesson point. Hopefully, you will keep that to a minimum. You have your freedom back to do whatever your heart desires. Consider it all, the good and the bad.\"\n\n\"Remember Candace?\" Jill asked.\n\nI looked at her blankly. She giggled. \n\n\"Victoria's Secret?\" She asked.\n\n\"Oh, yeah. What about her?\" I asked.\n\n\"She wants to see you really badly.\" Jill laughed. \"It's amazing the impression you leave on my friends who have met you.\"\n\nI looked at her puzzled.\n\nJill just rolled her eyes. \"She wants to see you on your knees.\"\n\n\"Oh.\" I answered, chewing my lip. \"And you want that?\"\n\nJill laughed. \"What I want changes all the time kitten. But, yeah, you will get your tongue in a lot of different pussies. You will get cocks in your mouth and ass. So, think about that as well. And think about Julie and where you want that to go. Because if you are here calling me Mistress tomorrow, Julie cannot be first until I release you.\"\n\nI frowned.\n\n\"I know. That's the tough one. You two are approaching a very special place in your relationship. Being my submissive could ruin that opportunity. So, consider that. I'm not a soft heart, I won't just let you go because you decide you are in love with Julie. We can make a calendar of when your service ends, but if I commit my resources to you, I expect you to commit your time to me.\"\n\n\"I already said you will be released before college begins. I won't do the long-distance relationship thing. I will always be your friend, your mentor, but I have no interest in trying to own a toy that shows up at their convenience.\"\n\nI bit my lip. \"I... want to.\"\n\nShe put her finger to my lip. \"Shh. No, I won't have an answer tonight Carrie. Tomorrow. Now, you may have three questions. Don't waste them.\"\n\nI crinkled my nose in thought. \n\n\"Would you be willing to do thirty days? And we could agree again every thirty days to go forward or end?\"\n\nJill laughed. \"No, I'm not a landlord who goes month to month. Minimum until summer, maximum until next fall when you go to school. We can come to an agreement on that now if you like. I want until Fall, what end date would you like and why?\"\n\nI shrugged. \"I guess it depends on what job I have this summer. If I came and worked for you full time, Fall would be good. I could even come back every summer and...\"\n\nJill laughed. \"No, you could not. Not impossible, but very unlikely, a conversation for another time. So, we agree, if you call me Mistress tomorrow, it is until you go to college next Fall.\"\n\nI frowned. I did agree to it though... I guess.\n\n\"Julie... when will ... I mean, I want to date her at some point.\" I babbled.\n\n\"Is there a question in there? I know that.\" Jill laughed softly.\n\n\"Will you let me date Julie?\" I asked.\n\n\"Yes. I will let you date just about anyone you want to date. As long as you put my wishes before your relationship during our time together.\" Jill smiled. \"I told you that already, you wasted that question.\"\n\nI frowned again. Jill giggled.\n\nI thought carefully. Then I looked at her and grinned. \"If I agree to ... submit... will you make love with me the last night before I go to school?\"\n\nJill laughed really hard, it was so nice to see her really laugh like that. I couldn't help myself, I laughed too.\n\n\"You are such a needy slut.\" Jill laughed. \"I will think about it and give you an answer tomorrow. The answer is conditional, I know that. If you are dating Julie in the Fall, then definitely not without her agreement. If our relationship is at a point where you may come back to being my submissive in the summer or after college, definitely not.\" \n\nShe stopped and kissed me again. \"You really are a special girl Carrie Fitch. You will do great things with your life. No matter what happens, I feel very privileged to have met you. I will never forget you.\"\n\nI smiled with a tear in my eyes. \"I could never forget you either Jill.\"\n\nJill wiped a tear and tasted it, moaning intentionally loudly. \"Okay slutball, go get dressed before I change my mind about giving you a choice.\" She smiled and squeezed my hand.\n\nShe left me alone for a moment and I remembered my clothes were in the other room. I gathered myself and went to the bathroom and cleaned my juicy pussy with a wash cloth before exiting the bedroom for what might have been the last time.\n\nIt was all up to me. And though it should have been an easy decision, it wasn't. I sighed and went out to dress. Julie was there, dressed and doing her homework. I smiled at her and pulled my clothes on. We hugged and kissed Jill and Sue goodbye. \"See you tom..\" I stopped and caught myself.\n\nSue giggled. \"I hope so slutball.\"\n\nAnd Julie and I left, closing the door ... a shudder went through my body. I was free.\n\n\"So...\" Julie giggled as we walked to my car. \"still thinking it over?\"\n\nI smiled. \"Kind of.\"\n\nJulie grabbed my hand and held it before I could put the car in reverse. \"You know, this is ... I mean... a pretty crazy life.\"\n\nI looked at her and smiled. \"Yes, it is Jules.\"\n\nI backed out and headed to take Julie home. We were very quiet for a while.\n\n\"So...\" Julie broke the silence. \"Regardless, can I spend the night Friday?\"\n\nI laughed. \"Anytime you want Julie, you know that. What about Chad?\"\n\n\"Who?\" Julie laughed. \"Don't be a bitch Carrie. I'm still not sure.\"\n\nI frowned a little but quickly forced a smile. \n\n\"So self-centered.\" Julie laughed softly. \"If you want to date me, you have to make it about me sometimes Care Bear, I'm a girl too you know.\"\n\nI laughed. \"I'd always make it about you Jules.\"\n\n\"Oh, please slut.\" Julie laughed.\n\nI laughed as we pulled up on her house.\n\n\"Call me if you need me.\" Julie smiled and kissed me on the cheek.\n\n\"I will. Want a ride to school tomorrow?\" I asked.\n\n\"Definitely.\" Julie answered. And she got out and I watched her walk in the door.\n\nI drove home with a myriad of thoughts running through my head. \n\nInside, Dad and Kelly were watching tv. I gave my Dad a kiss, hoping he couldn't smell the pussy on my breath. Then, I gave Kelly a kiss too, just to be nice.\n\n\"Anything fun happen today Carrie?\" Kelly asked. She had this almost smirk on her lips, like she knew something. But she was just guessing really, and I knew that.\n\n\"Same day, different old shi...\"\n\n\"Carrie!\" My dad interrupted. \"language please.\"\n\nI laughed, we all three laughed. \n\n\"I learned to make shrimp limon.\" I smiled.\n\n\"Good, you can start making dinner once a week.\" Kelly grinned at me. \n\n\"I do it off recipes.\" I frowned. \"I just follow directions well I suppose.\"\n\nOh God, of all the ways to say it! I blushed.\n\n\"Well I have homework to do, I best get to it. Goodnight.\"\n\nAnd they bid me goodnight. Kelly had a weird smile, like a smirk. Yeah, she must have smelled the pussy on my breath. Damn. I hoped she didn't say anything to my Dad, I don't think he needs to know everything.\n\nI went upstairs and climbed in bed. I did some homework, but I wasn't very focused.\n\nDecisions... decisions... decisions..."
    ],
    "authorname": "Panthergirl",
    "tags": [
        "cheerleader",
        "edge play",
        "lesbian",
        "high school",
        "orgasm denial",
        "oral sex",
        "bdsm",
        "coersion"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/jills-world-ch-03"
}