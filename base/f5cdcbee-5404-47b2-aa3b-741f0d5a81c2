{
    "title": "On the Simplicity of Words",
    "pages": [
        "-: -- :-\n\n\"Come on, Rose. Your teacher is waiting for you.\"\n\nI hung my head, clung to her hand.\n\n\"Rose,\" mummy sighed in exasperation. She knelt down on the dirty bricks and crouched forward so that she could stare into my eyes. \"We talked about this, Rose. I know you miss your old school, but this is a nice new school okay? Look at all the happy little boys and girls. Come on, love, it will be great.\"\n\nI buried my face against her, shaking my head.\n\n\"First day?\" I heard another woman ask mummy.\n\n\"First day here, yes,\" my mummy answered with a sigh.\n\n\"What class is she in?\"\n\n\"Year one with... Mrs Jackson?\"\n\n\"Oh, my Lea is with her too. Lea? Can you take...\"\n\n\"Rose,\" my mummy said.\n\n\"Lea, will you take Rose with you to class? This is her first day and she's a bit shy.\"\n\n\"Yes, mummy,\" said a lovely little voice.\n\nI snuck a shy, uncertain glance at the thin blonde girl who took my hand. She smiled toothily at me. \"Come with me, Rosie,\" she announced. \"I'm Lea. I'll show you where the pony drawing book is!\"\n\nTears and shyness forgotten, I followed her, not even saying bye to my mum.\n\nAnd that was how I met Lea.\n\nTime...<br>... passed.\n\nLea's mum would joke that she might as well set up a room for me at their house. My mum would laugh and say that she might as well do the same. Our mothers became close as sisters, Lea's mother, or Mummy Sarah as I'd call her, introduced my Mum (or Mummy Jane as Lea called her) to tennis and hiking, while my mum introduced Mummy Sarah to her book club and the finer points of Pimm's and horticulture. Our dads joined the same cricket club, then same hockey club, and soon enough were going away for boys weekends to watch football with their mates.\n\nAnd so began the wonderful golden years of my childhood.\n\nLife was idyllic. School was even at its very worst completely wonderful, and I sailed through the eleven plus with the other half of me by my side.\n\nThere was never any question of us not going to the same secondary school. I don't think it even occurred to our parents.\n\nIt certainly never entered into our thoughts.\n\nTime...<br>... passed.\n\nLea's dad got promoted; they moved to a different part of town. The trip to see her now needed to be planned in advance and coordinated around Mum's ability to come and fetch me or Mummy Sarah's ability to drop me off afterwards. It could no longer be every night, but at least three times a week one of us was with our second family and would sleep over there.\n\nMy parents loved Lea. And I worshipped the ground her parents walked on.\n\nWe'd joke we were the luckiest girls to ever live, to have not one but two families so devoted to us.\n\nAt fourteen I could flick a hockey ball into the corner of the net from fifteen metres out, and had developed a natural athleticism I'd inherited from my mum's dad. I could carry on going well past the point at which many others would drop in their tracks. When I was playing matches I would always hear her mad high pitched squeals and screams when I was running for the goal, her unfiltered ecstasy when I scored.\n\nLea played the Clarinet like she'd been born to it, and ran cross-country well enough to regularly place in the top three at school. When I could beg, borrow or steal a lift I'd be at her events, standing on the sidelines, screaming for her. She always had a smile for me, no matter how brutal the course or how hard she had to push to finish it.\n\nAnd I'd wait for her at the finish line; I'd be the one carrying her windbreaker, the one who'd put an arm around her to support her her as her body gave out from the effort she'd put in.\n\nAnd I was the one who caught her on that hateful Autumn afternoon when her eyes rolled back into her head and she had her first seizure.\n\nTime...<br>...passed.\n\nI was fifteen. I was much thinner now; a broken little remnant of a girl, watching as the slow torture of radioisotope therapy ate the other half of us away.\n\nThey'd shaved her beautiful hair to spare her some of the horror; the treatment had taken her eyebrows too. She was skeletal, exhausted, quiet as the grave. I'd sit, holding her wasted hand, neglecting schoolwork, hour after hour, day after day. Whatever she needed I would bring. Whatever she wanted, I did. I spent hours reading to her, and when she was at her lowest I would crawl into bed beside her and hold her, my cheeks wet with our bitter tears.\n\nI loved her; loved her with every pathetic atom of my being.\n\nAnd I wished beyond wishing that I could be the sick one so that she would be spared.\n\nShe never once complained. She just took it. Brave and indomitable as ever. But, then, that was Lea.\n\nHer craniotomy took place when the radiation had shrunk the tumour, and the surgery was successful. Slowly she recovered, began to smile again despite her weakness. But in spite of my dogged determination to help her recover, she'd missed too much of the year to finish it with me and her mum and dad decided that she needed a change of environment; somewhere quieter, somewhere where she'd have space and silence to recuperate.\n\nA new life where her lost year would not be brought home to her every time she saw me head to a different class than her.\n\nAnd where she would have space to heal from losing me.\n\nLea had not said goodbye; her parents had not permitted me to see her out of fear of the distress it would cause us. Instead, her distraught and broken mother had brought my mum a letter of sorts for me - a thin folded sheet of Lea's favourite pink foolscap with one of her silly googly-eyed ponies scrawled on the front of it.\n\nIn it, the simple words: \"I will never forget you, my Rosie.\"\n\nIt was spotted with her tears, and all too soon wrecked by mine.\n\nI cried myself into black insensibility - ruining my bed with snot, tears and the clear, watery bile from my cramping, empty stomach. It was days before I could be compelled to eat, and my mother never quite lost the haunted expression with which she guarded over me from then onwards.\n\nFutile, really.\n\nThere was nothing left of me that was worth guarding.\n\nTime...<br>...passed.\n\nThoughts of Lea accompanied me wherever I was, and I grew to treasure them like old friends. I became the soft-spoken girl in the corner, a slightly-more-corporeal ghost. My teachers learned to let me be, to not try to cajole me to participate in 'fun' activities.\n\nI broke more than one of them on the rack and pinion of my blank indifference to any bribe or punishment they tried to dole out to me. Nothing they could do could even register when compared to what had already been done to me.\n\nA discrete word was had with one or two of the more persistent cases, and after that nobody else tried to perturb me. My marks were good enough that I was no risk to the school's Ofsted rating, even if my interaction with anyone else was non-existent.\n\nSo they stopped trying to fix me.\n\nAnd I was quite fine with that.\n\nTime...<br>... passed.\n\nI obtained the necessary A levels to gain entry into a reasonable University. I quietly studied statistics and biochemistry, managed a 2:1, and walked out with an internship at a Biotech startup one town over from home.\n\nAfter a few short months they ended my internship and made me a full staff member, mainly off the back of my quiet, single-minded focus and complete lack of any external distractions.\n\nI took up hockey again for fitness, at first avoiding any competition, but swiftly shaking off the rust and reaching the local club's first team. Soon I was playing regularly for the County.\n\nI earned a reputation as a terrifying and implacable foe on the field - I no longer felt any real pain or caution and would simply go on until match end, merciless as the Morrigan, sometimes with cracked fingers and, once, a brace of cracked ribs. My club loved and respected me, but I mostly kept them at a cordial, careful arms length.\n\nFrom them and others I slowly formed a small cabal of closer friends, both male and female, but never any attachments. That sex that I allowed myself was a physical release only, and love held no interest for me.\n\nThere was no room in my heart for anyone any more.\n\nGradually I came to realise that I had never recovered from losing Lea. There were entire conversations that I needed to be able to have with her; things I needed to tell her, things I needed to hear from her. Things that we needed... settled.\n\nThe first therapist I talked to was hopeless.\n\nThe second tried but failed.\n\nThe third, a young woman with an old soul - she got me talking, and then, bless her and her gentle manner forever, somehow got me crying once more.\n\nShe said four simple words to me.\n\n\"Tell me about Lea.\"\n\nFour simple words.\n\nAnd they were what finally broke me down so that I could start to feel again.\n\n.:.\n\nI sat, staring at my mug, summoning the courage to broach the subject.\n\n\"Mum, I've got a question for you,\" I finally managed.\n\nShe looked up from the pastry dough, and brushed her hair out of her eyes. \"What is it, Rosie?\"\n\n\"Did you... did you keep in contact with Mummy Sarah? After they... left?\"\n\nShe stared at me, pastry forgotten. \"Oh,\" she breathed. \"Oh, that's a name I haven't heard you say in forever. What... what brought that back to mind?\"\n\n\"Gemma was asking me about Lea.\"\n\n\"Who's Gemma?\"\n\n\"Oh. She's my... therapist.\"\n\n\"You're seeing... a therapist? Of course. Of course you are. Rosie, you live in this shuttered world of darkness and shadows and never let me see into it. A therapist, for God's sake. Why didn't you say anything to me? My God, I'm your mum. You need to tell me these things, Rose.\"\n\n\"Mainly because I wanted to avoid this reaction,\" I said, softly.\n\nThen I waited, patient as a rock, watching her.\n\n\"I tried,\" she said, eventually. \"I tried to keep in touch. But... the whole situation was just so horrible. Lea was like my own daughter too. Sarah's responses always felt like... like she was being polite. Reading from a prepared script. I felt like I was intruding. I... I couldn't keep trying. So I... stopped.\"\n\n\"I'm sorry. You lost your friend too, then,\" I sighed.\n\n\"Yes,\" she whispered. She sniffed. \"Oh, these are hard memories, Rose.\"\n\n\"I guess... I thought maybe you just didn't want to talk to me about them. Out of fear.\"\n\n\"Oh, there was plenty of fear, Rosie. More than enough of that to last me the rest of my life. But... Lea was apparently ok. She was back at school and was starting to make friends. I... I didn't want to tell you because I was scared of what it would do to you. Her grades were improving. She was ok. That was as much as I could hope for for her. So... I stopped checking in and concentrated on you.\"\n\n\"It's okay. I understand.\"\n\nI heard the hiss of breath that she sighed out.\n\n\"I've been so scared of telling you that,\" she whispered.\n\n\"Why, mummy?\"\n\n\"Because of how close you two were. The two of you were light and shadow. She lit the dark parts of you, and you gave her balance. I thought... I was scared that you'd be furious with me.\"\n\n\"You were guarding me. I could never hold that against you. Not now that I'm old enough to understand what it must have been like for you.\"\n\nShe slowly began kneading the pastry dough again. \"That whole thing was one long horror show,\" she said between thumps. \"There was a two week period where I literally didn't sleep, and Dad would curl up on a sleeping bag outside your door in case you had your nightmares.\"\n\n\"Where did they move?\" I asked, watching her.\n\nShe worked quietly for a while, folding and refolding, keeping her hands busy.\n\n\"Bath,\" she said, eventually. \"Sarah got a position there, and they thought it would be a good place for Lea to recuperate. I think Lea went to the University of Bristol. That's where this is going, isn't it? You want to find her.\"\n\n\"Yes.\"\n\nShe sighed. \"Are you sure that's wise? Perhaps she's better off not being reminded of that time. Have you thought of that?\"\n\n\"I have to try. I still carry her in my head. She is always with me. That's why I'm so...\"\n\n\"Different.\"\n\n\"I was going to say broken. But... different is kinder, isn't it?\"\n\nMy mum made a small noise and turned her back on me.\n\nI stood and went to her, wrapped my arms around her and just held her.\n\n\"Don't cry, mum,\" I said softly. \"It's not your fault.\"\n\n\"I'm your mum,\" she whispered. \"Of course it's my fault.\"\n\n.:.\n\nThat evening when I got back to my flat, I opened my laptop and began prowling the University of Bristol's online presence, looking for any sign of her. She'd loved English and she'd been strong at Algebra, and I hoped to find some reference to her related to either of those disciplines.\n\nBut it was on the Music department's past event pages where I finally found the first traces of her. Hints and passing mentions of her under her mother's maiden name of Fergusson. Once I knew what to search I found old lecture timetables and then, finally, the meat at the heart of it - one glowing review of her solo performance in a recent chamber music recital and a mention that she was an associate of the faculty.\n\nI began to dig for her with an intensity driven by eight years of repressed need.\n\nAn hour later I was sitting, staring at photos of her. She was older now, obviously, and carried the haunted gaze of a survivor behind those pretty blue eyes.\n\nBut she was still my Lea, with those long blonde locks that cascaded down over her shoulders, with the slight asymmetry of her nose that she'd always hated and I'd always loved.\n\nI missed her almost more than I could bear.\n\nI glutted myself on her until the small hours of the morning.\n\nAs I was about to shut down and sleep, I saw a new post on her social media feed - someone had asked her if she was going to be at the party at a pub the following Saturday night. Further digging determined that the pub was called The Magpie, which I discovered was a stone's throw away from the Music department's front door.\n\nIt was the nudge I needed, the kick to my bum that set me into motion. The odds were that if ever I had a chance to find her it would be there.\n\nAnd I started laying my plans. I booked a room at the Radisson Blu for Saturday night, having made sure it was within walking distance of the pub. I booked my train tickets, and made an itemised list of the things I might need to pack into my little overnight bag.\n\nI crafted a thousand different reunions in my mind; a thousand different ways in which I begged her forgiveness for not finding her sooner. A thousand scenes where the hurts were magically healed, where she'd wrap her arms around me and hold me like she used to. Where we would just be Rosie and Lea again, two young girls, with no shadow of Death looming black and merciless between us.\n\nI told nobody what I was doing, out of some superstitious fear that it would jinx everything.\n\nAnd then I counted down the days, and then the hours.\n\n.:.\n\nI'd loitered in the Raddison's cafe until seven, wanting to give her time to reach the pub. Then I'd slowly traversed the small distance, some half a mile at most, and I'd tried very hard not to think about what was about to happen.\n\nI had, of course, failed miserably at that.\n\nEight years of regrets. Eight years of time never to be recovered.\n\nI hunched into my jacket, staring at the pub and the crowd of revellers thronging outside its door.\n\nIt looked warm, and inviting, and so wonderfully plain. The kind of place I would naturally gravitate to. A welcoming sanctuary.\n\nI was more terrified than I could ever remember being.\n\nI had no business being here.\n\nI was an interloper. I did not belong in this place.\n\nI had no idea if she was even here.\n\nOr if she'd even want me. Or even recognise me.\n\nI'd likely spend the entire night jammed into a corner, waiting in vain for the lightning stroke of luck, only to leave in crushing black disappointment and the familiar despair.\n\nThis was stupid. It was insane.\n\nMy heart ached, and I swallowed the sudden rush of nausea.\n\nBut the chance of seeing her again was too great to let go.\n\nI had to try.\n\nI owed it to her. To myself.\n\nTo us.\n\nIt was time.\n\nI waited for a taxi to pass, then squared my shoulders and stepped resolutely out onto the crossing. The noise grew louder, the shouts and revelry more present, more oppressive.\n\nI was mad. This was mad.\n\nWhat was I doing, the sane part of me screamed at myself as I pushed open the door.\n\nThe noise doubled and redoubled again.\n\nThis was it.\n\nI eased my way through the mass of people, with a soft-spoken \"Excuse me, pardon me, sorry, pardon me.\" when needed.\n\nSmiles and laughter all around me, good natured men and women making room for me, letting me by, one or two giving me inquisitive or speculative glances.\n\nI let them slide off me. I had only one goal here. Only one thing mattered to me.\n\nHer.\n\nI looked around, standing up on my toes, craning my head in desperation, trying to see a flash of her gold hair, trying to hear a snatch of her liquid laughter.\n\nBut it was futile.\n\nIt was too dark, too close, too noisy. Too many tall men, too many blonde girls that were not her.\n\nI closed my eyes, took a sobbing gasp, steeled myself against the stabbing dagger of disappointment, made ready to fight my way to a corner so that I could deal with the sadness that I knew would not be long in coming.\n\nI was a stupid child.\n\nWhat had I expected? For everything that had broken so long ago and fallen into such ruin to somehow magically be made whole?\n\nI should have known better. Magic had died with her departure. The world was mundane now; there was no room left in it for dreams.\n\n\"Idiot. Stupid fucking idiot,\" I cursed myself. \"Stupid, childish, infantile...\"\n\nI bit down the sob.\n\nI took a deep, agonised breath.\n\nI took one more slow glance around so that I would remember that I'd tried. A memory to keep for when I was old. The day I realised that she was, finally, gone.\n\nAnd then, as in one of those stupid clich\u00e9d movies that I so loved to hate, the throng of people around me parted just a little bit.\n\nNot much, but... enough.\n\nI saw the way her eyes slid past me, the way the sudden puzzled frown replaced her smile, the way her whole body jerked as she swung to face me. The way her wineglass dropped from her nerveless hand, painting a dark liquid slash in the air as recognition blossomed between us.\n\n\"Lea,\" I whispered. I staggered.\n\nHer face went from pink to white.\n\nI closed my eyes, unable to bear the hurt in hers. I moaned for a breath, and then another, and then she collided with me, crushed me in her arms, and for a moment all I was aware of was the feeling of her against me once more.\n\nShe was already sobbing, and she grabbed my arm and pulled me blindly through the crowd, barging us out of the pub's double doors and then dragging me around the corner into a narrow alley, away from the noise and the curious eyes that followed us.\n\n\"You!\" she shouted through her tears. \"You! After eight years! You! You can't just come here like this! You can't just come back into my life and upend everything like this! It's not fair! Why! Why are you here! Of all the times you could have picked, why now!\"\n\nI stared up at her, unable to form the words, unable to do anything except stand, grunting in agony like a stunned, mortally wounded beast.\n\n\"Answer me! Answer me!\" she shrieked hysterically, as she violently shook me from side to side. \"Where were you? Where were you! I waited and waited and waited for you but you never came! I needed you and you weren't there! Where were you!\"\n\nThen she hunched forward, head resting against my shoulder, panting. Her hands clutched spasmodically at me, and she made small, jagged noises of pain.\n\nBut still I couldn't answer. Still I stood there, shuddering, trying to find the speech that just wouldn't come.",
        "\"Say something, Rosie, for Christ's sake,\" she gasped.\n\n\"I'm... sorry,\" I managed to rasp the words at last, past a dry tongue that didn't want to work at all. \"For everything. For not being there for you. For not looking for you sooner. I'm sorry. I wanted to see you. I needed to. But. But you're right. I shouldn't have come here. It was stupid. And. And selfish. I'm... sorry. For... everything. Sorry. Goodbye. Lea. I'll... I'll go away. Don't worry. I'll go now. I'm sorry. For everything.\"\n\nI pulled myself free from her and turned away, clasping my arms around me against the agony, gasping for breath as the brutal jagged jaws of rejection slammed shut across my heart.\n\nThe world blurred and I stumbled away, heedless of where, just needing to be somewhere else, anywhere else, somewhere where I could try to forget the bewildered hurt in her eyes, somewhere where I could slither down into blackness and finally, once and for all, die.\n\n\"Rose! Rosie, wait!\" she screamed. \"No! Please! Come back! I'm sorry!\"\n\nThe slight weight of her hit me once more. She locked her arms around me, holding me tight, arresting me in my tracks. I could feel the way her wordless sobs wracked her, and her meagre strength was only just sufficient to keep us standing as I broke down.\n\nI turned, pulled myself to her by the lapels of her burgundy wool jacket as I tried to crawl in against her. I buried my face under her chin as I had so often in the past, and I wept like the broken little thing that, in so many ways, I still was.\n\nSomehow we ended up entangled on the filthy steps of the pub's fire escape, cheek to salty cheek, my arms around her and hers locked like a vise behind my neck.\n\nFeet passed us by; I could hear murmurs of concern from a group of women, gentle questions, offers to walk us home, but neither of us could stop crying long enough to answer them, and I for one could not bear to let go of the other half of me.\n\nNot just yet.\n\nNot when I'd only just found her again.\n\n.:.\n\nWe sat across from one another at a corner table in a small cafe, surrounded by a snowdrift of used tissues, half-finished cups of coffee and carrot cake crumbs. The lovely young thing who'd greeted us had taken one look at us and seated us in the most sheltered nook she had; she'd hovered but not intruded, topped up our tissues as and when we needed them, and taken more than one handful for herself to deal with her own helpless reaction to the emotional supernova we so heedlessly subjected her to.\n\nLea was a mess. I didn't even want to think what I looked like; my throat was flayed and my stupid fringe kept falling over my burning eyes and casting a dark veil over the world. I gripped her hands in mine, white knuckled, jittery and spaced out, too scared to let go in case she'd disappear on me.\n\nShe stared at me, gaze flitting over my features as if she were trying to etch each of them into her memory forever.\n\n\"You pierced your ears,\" she managed, after some time. Her voice was strangely smokey, and she had to clear her throat twice to finish the brief sentence.\n\n\"Just the one,\" I whispered.\n\n\"It's... pretty. That stone really suits you. It goes with your hair. Oh God, I'd forgotten how much I love your hair,\" she breathed, as she reached up to touch it.\n\n\"It's lapis. It's the blue I remembered in your eyes. I... I began to wear it for... for you.\"\n\nHer face crumpled up and she ducked her head. She took a breath, sniffed hard. \"Christ, Rosie. I'm a mess. You've wrecked me. What were you thinking? Showing up like this? Without even trying to get in contact first? What if I'd been at a performance, or a lecture? I had somewhere I needed to be. Somewhere important. I should have been there by now.\"\n\n\"I'm sorry,\" I said again, trying to meet her gaze. \"I didn't think. I haven't been able to think things through properly for eight years now. I just do things. And... sometimes if I'm really lucky... they go right like... this has...\"\n\nHer hands clenched hard on mine.\n\n\"God I've missed you so much,\" she said, voice cracking. \"I have been to hell and back. And this time I didn't have you to save me.\"\n\nI shuddered, sniffed again. \"You were always with me. There's always been a part of you, standing just behind my shoulder, always watching me. At my darkest I'd imagine you and what you would have done. And then I would do it. It's what got me through all... this.\"\n\n\"I wish I could have had that. Why? Why, Rosie? Why did you never come to find me?\"\n\nI stared at her hands, at the blue veins showing underneath her pale skin.\n\n\"Because I am far too fucked up,\" I groaned, at last. \"It took me years to work out just how completely broken I am. It took three therapists to make me cry again, Lea. Three. I didn't feel anything for years. I was too dead inside to feel anything at all after you left. Nothing could make me cry once I no longer had you. So... I was just going through the motions. Just existing. Not really living. Not for years...\"\n\nHer eyes were wide and dark in the half light of the cafe's corner; her lower lip trembling. She collected my hands in hers, raised them to her face, tucked them in against her cheek.\n\nI coughed, then swallowed the hot bitter acid in my throat.\n\n\"Rosie?\"\n\n\"I'm ok. I'm ok,\" I panted. \"Oh God. It's just too much to deal with all at once. You. Me. This.\"\n\nI hung my head as I struggled for a breath. \"I'm so sorry, Lea. I never meant to abandon you. You were my life.\"\n\nShe picked up a tissue, wiped her eyes for the three millionth time.\n\n\"I tried to cope. Managed to make it through school without you. I still don't know how. Anger. Rage, maybe. I got a degree. And a job, despite all this,\" I said, waving a dismissive hand at myself.\n\n\"So did I. Such as it is.\"\n\n\"I know. I found you on your department's facebook page. You guys suck at keeping things private,\" I said, sniffing.\n\nShe gave a choking laugh and wiped her eyes again. \"Fucking social media. It's the devil's playground. Still. It sounds like it brought you back to me. What else. Tell me what else.\"\n\n\"I started playing hockey again,\" I whispered. \"I play for the County again, sometimes.\"\n\n\"That's good. Really good. I'm glad. You were always brilliant at it. I'm glad you still have it in you.\"\n\n\"Did you ever start running again?\"\n\n\"No. I tried at first. But... not any more,\" she said. She looked away. \"Chemo destroyed my muscles.\"\n\n\"Chemo...therapy? Oh... oh Jesus, no, no, no no no\" I whispered, shaking my head violently, trying to deny what she was saying.\n\n\"Yes. I got another lovely present.\"\n\nI made some sort of horrible sound; she shuddered and squeezed my hands again.\n\n\"Rose. It's fine. It's fine. They caught it early, Rosie. I've been clear for four years. I'm ok now. You don't need to look at me like that. Please... Rose, stop that,\" she begged. \"Please, don't look at me like that. It's too much. You're wrecking me. Please.\"\n\nShe swallowed, looked down again.\n\n\"I should have written to you,\" she whispered. \"But... I was too hurt. Too bitter. Bitter that you'd had a normal childhood and I'd had... this. Then I grew up, and it became about... protecting you from this. I couldn't do anything else, but I could at least do that. Bit by bit... I guess I... began to believe that you were better off without me. That you'd heal and move on.\"\n\n\"I was never ok without you. Never.\"\n\n\"I... I can see that now. And... oh, it sounds so foolish. But... a part of me always hoped that some day I'd turn around and... you'd be there. And we'd hug, and you'd smile at me like you are now, and everything would be ok. I just didn't imagine it would be today,\" she finished with a weird little hiccoughing sob.\n\nI blew my nose. She wiped her eyes again.\n\n\"I can't believe you're really here,\" she said. \"After all this time.\"\n\n\"I wish I'd got it together sooner. I should have come sooner.\"\n\n\"You came. That's what matters. How...\" She cleared her throat. \"How long are you going to be here?\"\n\n\"Just... tonight. I have to leave tomorrow. Work. I didn't plan anything beyond getting here. I have to leave in the morning.\"\n\n\"Oh for fuck sakes,\" she sighed, disgusted. \"Where are you staying?\"\n\n\"A hotel near the station. The Radisson Blu.\"\n\n\"No. Absolutely fuck that. I've got a spare room. And... and I... I really, desperately need you to come stay with me. We need to talk, Rosie. There's so much I need to say to you before you leave again.\"\n\n\"Ok.\"\n\n\"Just like that? That was easy.\" she said, with a small smile. \"It's like... like old times.\"\n\nI shrugged, helplessly. \"How can I put anything into words right now? This is who I am. I never cared about anything else but being near you.\"\n\nShe blushed and looked away.\n\nI paid our bill and quietly slipped the lovely girl who'd guarded us fifty pounds as we left. It was every last bit of the emergency Oh-my-God-I've-lost-my-wallet stash from my jacket's inner pocket, but I didn't care. She stared in flabbergasted disbelief at the crumpled notes, and then squeaked and flushed hot and pink as Lea grabbed her, hugged her hard, and kissed her on the cheek.\n\n\"You're an angel,\" I declared to her, as I gently closed her hand over the gift. \"Never, ever lose sight of the lovely person you are.\"\n\nLea slipped her arm through mine in her age-old way, and dragged me off into the night.\n\n.:.\n\n\"Where were you supposed to be?\" I said, raising my voice over the roar of the engine behind us.\n\n\"After the pub? A colloquium on Ancient music. My... boss... booked tickets. He's going to be furious. So furious. Oh, I can't wait.\"\n\n\"Won't you be in trouble?\"\n\n\"So much trouble. I don't think words exist to adequately describe the amount of trouble. But I don't give a fiddler's fig,\" she whispered. She shifted closer to me, leaned in against my shoulder, and I fought down the lump in my throat as the scent of her conjured half-remembered memories of our youth.\n\n\"You look so nice,\" I breathed, when I could. \"So posh in that coat. Despite everything that's happened to you. I'm so glad to see you looking so well.\"\n\n\"And you look like you're not taking any care of yourself,\" she whispered back. \"You need to fix that. Rose... I'm sorry. I'm sorry for being so angry, for going to pieces. I... it was just such a shock to see you standing there. It uncorked everything at once. I wasn't ready. I would never have been ready. And I wasn't really sure that you were real. God, what a pair we make,\" she sighed.\n\n\"I'm still not sure I'm real.\"\n\n\"You're real enough for me,\" she said, as she gently placed her hand on my knee and squeezed it.\n\n\"I'm so sorry for not reaching out. If I'd...\"\n\n\"You had your own devils to deal with.\"\n\nThe bus negotiated a traffic circle, and she jostled against me. I shifted, tried to find a more comfortable spot on the seat without disturbing her.\n\n\"How's... your dad and mum?\"\n\n\"Mum's sad, Dad's moved on.\"\n\n\"What? No! When!\" I gasped.\n\n\"They got divorced shortly after we moved,\" she said, soft and matter of fact.\n\n\"Divorced. Oh. Oh thank God, I thought you meant...\"\n\n\"What? Oh. No. Not yet. There's still some miles left in the old silverback.\"\n\n\"I'm sorry.\"\n\n\"You weren't to know,\" she said softly. \"How could you have known? Mum's never kept in contact. She's too broken. Are... are your dad and mum ok?\"\n\n\"Yeah. Older, slower, still the same in most ways. Mum misses Mummy Sarah like nothing I can really put into words.\"\n\n\"Like mothers, like daughters,\" she sighed. \"I'll tell my mum to get over herself and reach out. It will be good for her. Maybe it will bring her out of her shell.\"\n\nShe shook her head and gave me a tired grin.\n\n\"We really are the mirrors of ourselves now. You got touched by light, I got dipped in shadow.\"\n\nShe squeezed my hand again. \"At least you filled out nicely,\" she said, matter of fact. \"You always were going to be a stunning woman. I'm glad that happened for you.\"\n\nI flushed, stared down at my lap.\n\n\"Are you... seeing anyone?\" I asked.\n\n\"Not... exactly. You?\"\n\n\"No. Not romantically. I've had my fill of heartbreak.\"\n\n\"Oh, Rosie,\" she sighed. \"You have to live too, honey.\"\n\n\"Said the ghost to the vampire,\" I quietly retorted.\n\n\"I've kicked cancer's arse twice. I'm no ghost and you're no vampire. And you're far too wonderful to spend your life alone.\"\n\nI turned my face away, tried to find some control.\n\nShe wormed in closer to me. \"I'd forgotten how you smelled,\" she said. \"Like home. Like safety. I cannot believe how much I'd missed this. How much I'd missed us. You.\"\n\n\"Going through every day like the best half of you is missing,\" I whispered.\n\n\"Catching glimpses of it in passing out of the corner of your eye,\" she agreed. \"You know what kept me going? Remembering how you'd crawl into my bed and hold me and read to me when the pain was at its worst.\"\n\n\"You were so frail, and looked so tiny without your hair. It broke me.\"\n\n\"I wanted to tell you not to cry. But I was never strong enough. And I was always far too selfish to tell you not to come and to look after yourself.\"\n\n\"You might as well have told me to cut off my own leg,\" I said. \"It would have been easier for me to do that than not come to you.\"\n\n\"I know.\"\n\n.:.\n\nHer phone began to ring as she opened her peeling front door.\n\nShe ignored it.\n\n\"Shouldn't you answer that?\"\n\n\"I know who it is. It's no longer important.\"\n\n\"Lea, it might be your boss.\"\n\n\"It is my boss. That's his ringtone.\"\n\n\"You should answer it.\"\n\n\"No,\" she said, with a set to her jaw that I remembered so well.\n\nShe shut the door behind us, turned on a light. \"It's not much,\" she said softly, \"but it's home.\"\n\nHer phone rang again.\n\n\"Answer that,\" I told her.\n\n\"No.\"\n\n\"He could be worried.\"\n\n\"He's not worried. He's angry.\"\n\n\"What?\"\n\n\"He wants to shout at me for not being at the lecture. For making him look bad, for embarrassing him in front of his colleagues again. Sadly, I'm destined to always be an embarrassment to him. Frail little Lea, the fetchingly fragile fianc\u00e9e he can trot out to show how kind and caring and normal he is. Look at Lea, everyone, the cancer victim I'm marrying because I'm such a great person. Behold and admire and bask in my generosity!\"\n\nShe posed dramatically, then slumped in on herself.\n\n\"Tonight was going to be when he announced our engagement. I wonder whether he did. Somehow I think not, the fucking narcissist.\"\n\nHer voice was soft but no less bitter for it.\n\n\"You're... engaged,\" I said, focussing on filtering down to what seemed to me to be the key fact. My voice sounded strange and vague even by the already fucked-up standards of my day. \"To your boss,\" I added.\n\n\"Yes.\"\n\nI leaned back against the wall, wondering how many more hits I would have to take. Wondering how many more I could take.\n\n\"You don't sound... thrilled about it.\"\n\n\"I'm not. It's a business transaction. My smile and musical ability and some photogenic fawning at events - a smoke screen he's bartered for security and breathing room for me.\"\n\n\"Oh Lea,\" I whispered.\n\n\"Don't. Don't you dare,\" she said, voice breaking. She stamped her foot and spun away from me, scrubbing furiously at the tears. \"I can't do this sober. I can't do this at all. Jesus. Jesus, of all the days to have to deal with this. Get a grip, Lea, get a grip,\" she finished with a whisper.\n\nI slunk closer and hesitantly touched her shoulder.\n\nShe wouldn't turn to face me.\n\n\"I had to,\" she whispered. \"I need the safety net. There is nobody who will help me. Mum's barely hanging on, Dad's drunk half of the time and angry the rest of it. I have next to nothing of my own. I exist hand to mouth. This was the only way out for me. And, anyway, it's not like he wants me for my body. He's got his own... tastes.\"\n\nMy heart broke. \"Oh my God, Lea...\"\n\n\"Please don't judge me,\" she whispered. \"I can take it from anyone else. But not from you.\"\n\nShe took a shuddering breath, sighed it out. She kicked off her heels, hung her coat up on a hook. \"Right. At the very top of the short list of things I can actually do something about is my sobriety. I'm opening some wine,\" she said. \"I am going to drink myself into a stupor. I can't deal with anything else tonight. Not now. It can all burn to ashes, for all I care.\"\n\nShe stalked off.\n\nI slowly unbuttoned my jacket and hung it beside hers, then stared around at the empty walls and the peeling wallpaper with mounting horror.\n\nThis wasn't a home.\n\nIt was a prison.\n\nMy Lea was in a prison.\n\n\"Rose, are you coming or what?\" she called.\n\nI wiped my eyes and glued on a brave face for her.\n\n.:.\n\nShe poured her second glass and topped up my first. I watched her as she took a sip, as she put her hand to the bridge of her nose in the old gesture of unease that I remembered so well.\n\n\"What is it?\" I said, softly.\n\nShe snorted. \"I forget how well you know me.\"\n\n\"You haven't changed much. I can still read you like a book.\"\n\n\"You always could. I missed that.\"\n\nShe sat back, stared around the cramped and dingy kitchen. \"He is going to be so pissed with me. Oh my god. I'm in for it now.\"\n\n\"Why...\"\n\nI coughed, cleared my throat, continued. \"Why did you put yourself in this position with him, Lea?\"\n\n\"I didn't have a choice. It's this or flat-share. I can't, Rose. I can't live with random other people in my space. This... this act of prostitution I'm going to put myself through for him. I... it's the only way I can hang on to what little I have. I get somewhere to live, access to events and society, the space to breathe and play my music. Time that I won't get, otherwise. He'll give me a stipend; more than enough to make sure I keep up appearances. He'll use me as a showpiece. A drawcard for the department and the University - a cornerstone of the little empire he's building. It's better than the alternative.\"\n\n\"But surely...\"\n\n\"Surely... what? You think that there's some benefactor out there who will help me out of the goodness of their heart? Someone who can magically conjure me a better life where I'm not working as an indentured servant to a power-mad man? This isn't a fairy tale, Rose. This is real life. My life. It's brutish, and painful, and... odds are it will be short. If you find a person who can change that, please do send them my way.\"\n\nI closed my eyes, hunching in on myself as the sharp edge of her rage raked me. She saw, reached out, clasped my wrist tightly.\n\n\"I'm sorry. Oh God. I'm sorry, Rosie. I'm sorry. Please. I'm bitter. I didn't mean that. I didn't mean to hurt you of all people...\"\n\n\"It's... it's ok. It's just... this is so unfair.\"\n\n\"I know. But this is my life. I have a roof over my head, enough to eat, money to put to my mum to make sure she's ok. It's better than lots of people get.\"\n\nShe sighed.\n\n\"My dreams were just dreams after all. They started to fade when I was fifteen. I've... accepted that. This is what I have now.\"\n\n\"You deserve a palace,\" I whispered. I bit back the sob, forced it down and away into the black shadowy place where I hid all the Terrible Things.\n\n\"You are the only person who has ever thought that,\" she said, smiling sadly at me. \"Everyone else just sees... well, me.\"\n\nI shook my head, vehemently denying her words but unable to speak past the numbing blackness.\n\n\"Don't be sad, Rose. Sometimes things just don't end up how you thought they would. At least I had you in my life. I had something good.\"\n\n\"I wish you'd never left,\" I managed.\n\n\"Life happens. We can either let it break us or... step aside until we can stand again.\"\n\nI drained my wine glass, and coughed as the cheap wine burned my raw throat. She refilled it for me.\n\n\"So tell me about yourself,\" she said, gently. \"Tell me something nice. Let me hear that you're at least doing better than this,\" she added, glancing around at the spartan kitchen.",
        "I swallowed, cleared my throat. I stared across the table at her, tried to find strength to talk in anything but short phrases.\n\n\"I work in Biotech. Back near home. Since just after Uni. Stats and Biochemistry. I'm doing ok. Ok career, some friends.\"\n\n\"But no lover? Nobody to keep you warm at night?\"\n\n\"No.\"\n\n\"Oh, Rosie. Your heart is too big to be empty.\"\n\n\"It's not empty.\"\n\n\"You can't spend your life never letting anyone else in.\"\n\n\"You don't get to make that choice for me,\" I breathed, low and fierce, and she flushed pink and looked away.\n\n\"Tell me more,\" she whispered. She sipped her wine.\n\n\"I've got a small flat. It looks out onto the... common where we used to hunt butterflies. But they've put a football field... there where the pond used to be. So that... sucks.\"\n\n\"Oh. That's a shame. I loved that pond. I had a lot of good memories from it. We did lots there.\"\n\n\"I still collect blackberries from the woods behind it. The bluebells still grow under the old oak. There's an owl in the tree again.\"\n\nHer knuckles had whitened on the wineglass. \"That's nice. The owl.\"\n\n\"Nowadays I spend most evenings at the hockey club. I can't stand being... alone with my thoughts, so I stalk my team members for practice. Or even just to be around people. It helps. Oh, I forgot, I broke some ribs. You can still see the dent in the bones.\"\n\n\"How,\" she breathed.\n\n\"Hockey stick,\" I said, with a quiet laugh, and she winced in sympathy. \"Don't worry, They had to carry her off the pitch on a stretcher.\"\n\nShe snorted her wine, and gave me a pale shade of a grin. \"You always were a terror. I always felt so sorry for the girls on the opposing team.\"\n\n\"I carry a lot of... rage these days,\" I said, softly. \"It's the only place I can let it out. When I'm running so hard that I feel like my heart is going to burst. That's all that makes all... all of this... bearable.\"\n\n\"My music,\" she sighed. \"My music is where I go when I can't hide from it any more. I never forgave my parents for taking me away. I'd rather have stayed - even if I was back a year, just being able to see you between classes or after school. They made the worst decision they could have with the best of intentions.\"\n\n\"They were drained. You'd been sick for so long. Your mum... I've never seen anything as horrible as the way she was crying when she came to say... goodbye.\"\n\n\"It was all for nothing, anyway. They lasted six months before dad cheated on her with some fucking slag at work.\"\n\n\"I'm... I'm so sorry.\"\n\n\"It's life, Rose. The sunlight that shone so brightly into yours cast black shadows in mine. I'm just glad something good came of it in the end.\"\n\n\"What good has come from it?\"\n\n\"This.\"\n\nShe squeezed my hand.\n\n\"Seeing you,\" she continued. \"Knowing that you're ok. Knowing that... that despite all the time that's passed, you still love me the way you used to.\"\n\n\"I never stopped,\" I whispered. \"That was the problem. I have never been able to let go. I could never get you out of my head. No matter what I did. No matter what happened. You were always... always there.\"\n\nHer eyes were dark and sad.\n\n\"Oh God,\" I said, as I breathed deep and slow. \"This has been a hell of a day. I'd forgotten what it was to feel like this.\"\n\nShe reached out to gently brush my cheek. \"You always did do things to extremes, Rose.\"\n\nHer phone rang, and I sat up and scrubbed my eyes, grateful for the brief interruption. She glared at it, then turned it over so she couldn't see the screen.\n\n\"Yeah, I'm in trouble,\" she breathed. \"That's the last one. He always phones three times when he's furious. Then he goes to sulk and hate-fuck one of his manwhores. And then he'll stew for a bit and let me have it with both barrels first thing on Monday.\"\n\n\"I'm sorry.\"\n\n\"Why? None of this is your fault.\"\n\n\"If I hadn't come...\"\n\n\"Then by now I'd be publicly known as the future Mrs Saunders. And the snide remarks would increase tenfold.\"\n\n\"I prefer Lea Fergusson,\" I said softly.\n\nAnd she smiled her old just-for-me smile at that.\n\n\"So do I,\" she said.\n\n.:.\n\nI dried myself with the threadbare towel and stared at my face in the mirror. My cheeks and nose were still horribly red. I looked like a complete wreck. But the shower had at least washed the worst of the damage off of me. I was raw and bloodied, but still standing.\n\nI slipped back into my tights and pulled on the hoodie Lea had found for me. I folded the rest of my clothes for the morning trip back to the hotel.\n\nLea was sitting on her old, stained couch, staring at nothing. She came back to herself as I appeared and gave me a smile. \"Better?\" she asked.\n\n\"Yes.\"\n\n\"Water fixes lots. I took to swimming. The Uni has a heated pool, it was the only exercise I could do that didn't hurt too much.\"\n\n\"I feel so guilty that you had to go through that alone.\"\n\n\"Don't. It's my own fault. I could have reached out at any time. Too proud, and far too bitter. But it's done. Come and sit here with me.\"\n\nI eased myself down onto the couch; she waited until I was settled, then shifted and lay down beside me with her head on my lap. The feeling of her weight on me made me shiver and I took a shaky breath as I tried to calm myself. I studied the line of her jaw, the oh-so-familiar curves of her eye and ear. I hesitantly reached out to run my fingers through her hair like I'd done all those years ago.\n\nThe scar from her craniotomy was less prominent now, but still just as visceral and upsetting as it had always been. The idea of some person drilling and delving into my Lea's brain had never felt acceptable - no matter how necessary it has been to save her life. I traced the line of it, then shuddered, breathing a little quiet \"no\" of abjuration.\n\n\"It still bugs you, doesn't it,\" she said, softly. She lay still, composed and angelic, eyes closed, breathing gently in and out.\n\n\"Yes,\" I whispered. \"It's still my Most Terrible Thing.\"\n\n\"I'm glad I couldn't see it.\"\n\n\"Yes. So am I. And I'm glad your hair stayed blonde and you didn't go grey around it.\"\n\n\"Ditto. My eyebrows went darker when they grew back, though.\"\n\n\"It suits you. More shadow, more definition. They frame your eyes so wonderfully now.\"\n\n\"I used to love this. Even when I was in agony, this calmed and soothed me. Your fingers, just touching me like this. You were always the person that could make me feel better.\"\n\n\"You centred me.\"\n\nShe pulled her legs up tighter against her, and sighed again. \"I wish you were here for longer.\"\n\n\"So do I.\"\n\n\"Thank you for being brave. Thank you for finding me.\"\n\nI stroked her cheek; she made a little noise and caught my hand to hold it in place.\n\n\"What will you do now?\" I said.\n\n\"Grovel.\"\n\n\"I hate that.\"\n\n\"So do I. But... I have no choice.\"\n\nI stared down at her as she clenched her jaw for a breath, for two.\n\n\"Pass me that blanket, please,\"she whispered. \"I'm freezing. There's no meat left on my bones any more.\"\n\nI helped her cover herself, and she relaxed back against me. I felt the tenseness slowly leave her as I started playing with her hair again; she reached up and curled her hand possessively over my knee.\n\n\"Why haven't you put any pictures up, Lea?\"\n\n\"It just never seemed important,\" she said. \"I only come here to hide and to sleep. All the rest of my time I'm in the department or... doing the things he needs me to. No rest for the wicked.\"\n\n\"I'm the wicked one.\"\n\n\"True,\" she whispered, smiling. \"I'm pure as fresh snow.\"\n\n\"Now that's a fib.\"\n\n\"I'm not talking about my mind,\" she said.\n\n\"Uh huh.\"\n\nI shifted my calves up under my bum, and rearranged her slightly so she was more comfortable.\n\nShe reached for and caught my hand again, then rolled slightly onto her back so she could look up at me. \"So serious, so intense,\" she whispered, as she played with my fingers in another throwback habit. \"What are you thinking that's got you frowning like that?\"\n\n\"It's my resting bitch face.\"\n\nShe snorted. \"As if. Oh well, tell that lie to anyone who will believe you. I know better.\"\n\n\"What happened? Where was it, this time?\"\n\n\"My breast.\"\n\n\"Oh for fuck sakes. You have the worst luck.\"\n\n\"Luckily I was paranoid. I saw my Oncologist the moment I suspected something. And the plastic surgeon really was good; there's hardly a scar. It was just a small mass, so not much damage done. I didn't need anything drastic this time. I'd show you but that would be weird.\"\n\n\"Um. Yeah. It would be.\"\n\n\"I'm teasing, Rosie.\"\n\n\"Sorry.\"\n\nShe laughed softly. \"Your buttons always were fun to push. God, I've missed you. Move to Bristol, you whore.\"\n\nI snorted, knowing she was only half joking. \"Ask me nicely and I might just.\"\n\n\"Don't be silly. It sounds like you're happily settled back there. Maybe... maybe I'll come visit sometime.\"\n\n\"I'd... I'd like that.\"\n\nShe stared up at me. \"Keep the candle burning for me, then,\" she whispered. She yawned. \"God. I'm shattered.\"\n\n\"Yeah.\"\n\n\"Rose? We've got a slight issue. The spare bed isn't made. And I don't really have much in the way of bedding, I'm sorry. Um. You could always just share with me? It's a double, so not enormous, but we'll be warm at least.\"\n\n\"Do you still snore?\"\n\n\"'fraid so.\"\n\n\"Oh well. Okay, but I can't promise I won't elbow you if it gets too bad.\"\n\nShe shifted off me and I stood. I took her hand and helped her up, and she led me through the tiny apartment to the master bedroom in the back.\n\nHere, finally, was a splash of her personality - the typical indigos and burgundies she'd loved as a girl written large with more mature fabrics, a music stand and scores, and a window that looked out onto a bit of greenery in the gardens below.\n\nShe stripped nude without a hint of self-consciousness, then pulled a plain cream cotton nightie over her head for a veneer of modesty. The lines of her ribs were painfully obvious under her skin; she was much too thin and I did not approve at all. But I held my silence as she clambered onto her bed.\n\nShe glanced up at me once she'd settled. \"I promise that I won't bite, Rose,\" she said.\n\nShe watched as I shrugged out of the hoodie. \"Don't you want a vest or something to hide those under?\" she asked, with a strange little smile.\n\n\"No. This is how I sleep. But I'll spare you and keep the tights on. Sorry, I'm a slut.\"\n\n\"Don't be. Sorry, I mean,\" she added, with a soft laugh.\n\nShe lay down and rolled away, waiting. I crawled in behind her, pulled the sheet and cheap blankets up over us, and then shifted in against her to share my warmth with her, trying very hard to ignore the fact that only a thin layer of cotton separated her body from mine.\n\nIt was not at all easy.\n\n\"You filled out very nicely,\" was all she said, with a shiver in her voice.\n\nI sighed, pushed any thoughts of responding away. \"Good night, Lea,\" I whispered. I tucked my face in against her shoulder, feeling strangely confused.\n\nShe reached over herself, found my hand, and pulled it around her, placing it in between her breasts and holding it there, over her heart.\n\n\"Sweet dreams, my shadow,\" she whispered back.\n\n.:.\n\nI woke; puzzled for a moment by the strange noises, the unfamiliar bedding, the utterly foreign sound of somebody's quiet, slow breathing. Then I remembered where I was.\n\nI cracked open a bleary eye and tried to focus.\n\nShe lay silent, watching me. As I shifted, she sighed; she lifted her hand and gently stroked it down along my cheek. \"Sorry,\" she breathed. \"I think I might have woken you.\"\n\n\"What time is it,\" I groaned.\n\n\"Still early. Seven or so.\"\n\n\"Mm. I need to be at the hotel by ten to check out.\"\n\nShe shifted. I closed my eyes again as she touched her forehead to mine.\n\n\"Sorry,\" I whispered.\n\n\"It's ok. It's life. We all have places we have to be.\"\n\nI slipped my hand around the back of her head, holding hers to mine. She made a small noise, turned her head slightly, trying to get closer. \"I wish you could stay.\"\n\n\"So do I. How long have you been awake?\"\n\n\"An hour or so.\" She pulled back, rolled slightly away from me.\n\n\"You should have woken me, Lea.\"\n\n\"No. I was content just watching you. It brought me peace. Right. Busses are infrequent on Sundays, so we'll need to make sure we're ready to leave by nine. There's a stop just down the road, the bus should be there by about ten past.\"\n\n\"I should have booked an extra night. But work...\"\n\nShe smiled gently. \"This was enough. I could survive another eight years off this alone, Rose.\"\n\nThen she rolled in and hugged me again; I took a slow, deep breath of her scent and held it as long as I could.\n\n\"So. Breakfast? I have muesli and a bit of fruit.\"\n\n\"Ok.\" I didn't move.\n\nShe laughed softly. \"You look enthusiastic.\"\n\n\"I'm tired,\" I grumped. \"Hung over. Emotionally drained. And warm. But mostly tired.\"\n\n\"Probably adrenaline more than the wine.\"\n\n\"Mm. Probably.\"\n\nI groaned and rolled onto my back. pulling my knees up to me to ease my hamstrings as I always did first thing. The blankets fell away from me, and Lea made a small noise. I glanced at her; she flushed.\n\n\"Sorry,\" she breathed. \"Didn't mean to go strange on you. You just have lovely breasts.\"\n\n\"What? Oh,\" I said. \"Yeah, I forgot they were poking out.\"\n\n\"Do you want a vest or a shirt?\"\n\n\"Seems a little pointless at this stage,\" I said.\n\n\"Well. The boys must love them.\"\n\n\"I'm sure they do, but none have ever dared to admit it to my face. And anyway, it's not like any of them have ever got to see my breasts. Not like this.\"\n\n\"Um... what?\"\n\n\"Oh. Um. I...\"\n\n\"You're... gay?\"\n\n\"Yes,\" I said softly, watching her, curious how she'd respond. \"I'm... strictly girls-only when I... need anything,\" I added, flushing as I stared at her widening eyes. \"Always have been, I think. I certainly don't feel even the vaguest interest in... being with a man. There's no complications with a woman, no risks. Nothing that can go wrong or hurt me. And, anyway... it's ephemeral. Come once, maybe twice, move on...\"\n\nShe flushed a deeper crimson. \"I... just assumed...\"\n\n\"To be fair, many do. They soon learn their mistake, though.\"\n\n\"Well,\" she said. \"The girls must love you, then. Lucky girls,\" she added, softly.\n\n\"Those few that get to, yes. I'm... picky.\"\n\n\"I'd never have guessed,\" she said. She sighed, then winced as she swung her legs off the bed. \"Ow. Joints are sore. So. Muesli?\"\n\n\"Yes, please.\"\n\n\"I'll start getting it ready while you make yourself decent.\"\n\nShe gave me a long, inscrutable look as she left me, and I lay still for a moment, wishing beyond wishing that I did not need to leave.\n\nOr that I could take her with me.\n\n.:.\n\nShe clenched my hand tightly in hers as we loitered in front of the gates to the platform. My train was due to leave in a few minutes, but neither of us could bear to sacrifice a moment that we didn't need to. I could see she was close to tears, and my own heart felt like it had turned to lead in my breast.\n\n\"When will I see you again?\" she whispered.\n\nI brushed her hair back from her eyes and tried to smile for her. \"As soon as I can.\"\n\n\"Don't let it be eight years again,\" she said, with a funny little shudder.\n\n\"Now that I know where you are, you are going to get absolutely sick of me.\"\n\n\"Never,\" she whispered. \"Never, ever, ever.\"\n\nThe public address system crackled to life, its strange stilted cadence breaking in on us.\n\n\"Your attention please. The train on platform... seven... is the eleven... forty three... Great Western Service to... London Paddington. This train is formed of... eight coaches...\"\n\n\"You've got to go,\" she said, gulping. She clasped me to her, and made a small noise as I wrapped my arms around her.\n\n\"Lea...\" I gasped, a hair's width from breaking.\n\nShe pulled free and stepped back, shaking her head.\n\n\"No. Stop. Whatever you were going to say, don't. You came. Come sooner next time,\" she added, blinking back her tears.\n\nShe stared at me, then suddenly lunged forward once more, bracketing my cheeks in her slender hands so that she could pull me to her and kiss me - no peck, no Continental double-mwa of affection - this was a lover's farewell, full of raw passion and longing and hurt and loss that left me shaking, breathless, and so horribly unsettled by the immediate way my body responded to her.\n\nI moaned in regret when she released me and I stared up at her, panting slightly, not fully able to process what she'd done. What... we'd done.\n\n\"Go. You need to leave. Now,\" she added, raw and broken. \"I've got to go. I can't say goodbye like this. Not here, not like this. Not to you. Be safe. I love you.\"\n\nShe turned and stumbled away.\n\nAnd, fool that I was, I let her go.\n\nBut the taste of her, the feel of her against me. The raw, bitter sense of being cheated when she'd pulled away...\n\nThose I wrapped in tissue paper and silk and spiderwebs and moonbeams and clung to like a holy relic as I spent the rest of the day in my bleak, grey Shadowlands.\n\nI doubt I'd have been able to give a coherent account of how I got home.\n\nThe only thing I could remember was the message I sent to let her know I was safe, the small single x she responded with.\n\nThe only emotion that I could even process was that I was most emphatically not okay.\n\n.:.\n\nIt was Tuesday evening. I hunched at the battered bar in the hockey club, slowly pickling myself with my third glass of truly awful pinot noir. Around me lapped the raucous conversation of club members; but I had only the companionship of my bubble of solitude.\n\nShane braved it. The club's gregarious fixer, schmoozer, organiser, matchmaker and social linchpin - and one of my few close friends - he alone could see and interpret my posture as the excruciation it was.\n\n\"Rosie,\" he greeted me as he slipped in beside me.\n\n\"Hey.\"\n\n\"You ok, love?\"\n\n\"No.\"\n\n\"Want to talk?\"\n\n\"No.\"\n\n\"Go on.\"\n\n\"No.\"\n\n\"You'll feel better.\"\n\n\"Won't.\"\n\n\"Girl trouble?\"\n\n\"Mm,\" I whispered, hunching down.\n\n\"Oh dear. Don't tell me you met one you want to hold on to?\"\n\nShane knew me better than most, but even he flinched back from the haunted look I gave him before I turned away.\n\n\"Oh,\" he said, softly. \"Oh shit. That face tells a story if ever one did. Dave?\"\n\n\"Yeah, mate,\" said our barkeep.\n\n\"Beer please. And keep them coming.\"\n\n\"Sure thing, Shane.\"\n\nHe leaned in towards me. \"I've known you five years. Talk to me.\"\n\n\"No.\" I shuddered, bit back a sob.\n\n\"Rosie, what's going on? I've never seen you like this.\"\n\nAnd the last of my willpower burned away in the gentleness of his compassion.\n\n\"My best friend. My best friend from school. The one I lost. The one... that... that I haven't seen for years.\"\n\n\"This was... Lea, right?\"\n\n\"I finally found her. I... tracked her down this weekend. It's... she's... it's hell, Shane. She's living in hell. And... and...\"\n\n\"Hey. Hey there. Come here.\"\n\nHe put his arm around me and I fell in against him, hiding my face against his shoulder.\n\nSilence blossomed outwards like ripples on a millpond, stilling conversations, leaving people staring in disbelief.\n\nThe natural order of the Universe had just been undone.\n\nRose was crying.\n\nRose was crying.\n\n\"Everyone, fuck off. Rose needs space,\" Shane said, calmly and levelly over my muffled sobs.\n\nI heard chairs scrape back as people moved away.\n\n\"Sorry,\" I whispered. I scrubbed at my face, furious with myself for my weakness. \"Sorry. Shouldn't have come here. Now I'm fucking up everyone else's evening too.\"\n\n\"You don't have anywhere else, Rose. We know that. We're your family here. We'll always be here for you.\"\n\nI made some stupid little noise, and he pulled me in against him and kissed my forehead with his rough stubbly lips. \"We've got you, love,\" he said. \"Ok?\"\n\n\"Ok,\" I whispered. \"Sorry.\"\n\n\"So what are you going to do? About your friend? About Lea?\"",
        "I squeezed my eyes closed, coughed, took a breath.\n\n\"I know what I want to do. But she'll never say yes. It will mean giving up everything she's worked so hard for.\"\n\n\"Try her.\"\n\n\"Don't need to. I know her.\"\n\n\"Rose, people change. Maybe you don't know her as well as you thought.\"\n\n\"Doubt that.\"\n\nHe sighed, but didn't remove his arm, and I was grateful for the comforting weight of it on my shoulders.\n\nSensing that I'd been defused and was now safe to approach, Dave sidled over and handed Shane his drink. \"Tell those other bastards they can come back now,\" Shane said to Dave. \"Her safety's on again. Defcon Five.\"\n\nDave laughed softly. \"Aye, will do.\"\n\nAnd of course I had just started to unwind, just managed a smile for Shane, when Lea's message arrived.\n\nHer simple, uncapitalised, unpunctuated \"i need you\" scared me far more than it had any right to do.\n\nI fled the clubhouse for the privacy of the fields.\n\n.:.\n\nI paced, desperately waiting for her to pick up.\n\n\"Lea?\" I asked when she finally did. \"Lea, is that you?\"\n\n\"Oh Rosie. I'm... Oh God. I'm... I'm so sorry for disturbing you. But... but you're the only one... the only person...\"\n\nHer voice was husky; I could hear the hurt in it that she so vainly tried to hide from me.\n\n\"Lea? What is it? What's going on?\"\n\n\"We... we had a row. About the... the thing I missed...\"\n\n\"Oh God. Are you alright?\"\n\n\"No,\" she moaned.\n\n\"What did he do? Lea? Did he hurt you? Did that... that creature hurt you?\"\n\n\"No. He just... shouted. A lot. Loudly. That I could... could cope with. But... he's also told me I'm no longer needed...\"\n\n\"Needed... where?\"\n\n\"At the department. That he's found a... replacement for me. That as the future Mrs Saunders he... didn't want any impropriety, any hint of nepotism. So he was just going... make me redundant. Turn me into a kept woman. A figurehead. I fucking killed myself to get this post, Rosie. And he's just taken it all away from me without even asking. Because he can. I have nothing left. Nothing.\"\n\nI clenched my free hand into a fist. \"I'll kill him. I'll fucking kill him.\"\n\n\"Rose. Not even you can fix this,\" she said softly. \"I'm sorry... it's just... I just wanted to hear your voice... I needed to talk to you is all...\"\n\nNow I could hear the slight slur of alcohol in her voice.\n\n\"Lea, please, tell me you're at home,\" I said, a sudden chill running down my spine.\n\n\"I am. For now.\"\n\n\"Please. Stay there tonight. Please, don't go anywhere? Ok? Please. Promise me. Lea. Please. I'm begging you.\"\n\n\"I promise,\" she said, in a voice that sounded horribly tired and old. \"Not like I have a choice. Nowhere to go now; they'll all scent the blood in the water. Rosie... what am I going to do?\"\n\n\"How long do you have?\"\n\n\"One month. He's given me one month notice.\"\n\n\"But it's a University. Surely there's some sort of...\"\n\n\"Not for me,\" she said softly. \"They never officially added me to the faculty. I'm just associated with them. Easy come. Easy go. I was hoping that...\"\n\n\"I'm going to fucking kill him.\"\n\n\"I'm sorry,\" she whispered, and my anger snuffed out like a candle.\n\n\"Do you have money, Lea? For then next few weeks?\"\n\n\"Until rent's due. Then I'm screwed,\" she said. \"It's so ironic. This whole pantomime, and it ends up earning me just what I didn't want.\"\n\n\"Lea, I want you to send me your bank details.\"\n\n\"No. No, Rose, no. I'm not going to do that. I can't do that. No.\"\n\n\"Lea. Please. This is me. I'm begging you. For God's sake, let me lend you some money until we get you sorted.\"\n\n\"There's no fixing this, Rosie. There's no other work for me here. There are no roles. I've checked. And even if there were he'd have them closed to me. I'm trapped. He owns me now.\"\n\n\"No.\"\n\n\"I am. There's no way out. I'm going to have to marry him and give up on what... what few of my dreams I still had. I just... I needed to hear your voice before I... surrender.\"\n\n\"No. This is wrong. I'm not going to let this happen to you.\"\n\nI took a shaky breath, steeled myself.\n\n\"Lea. Listen to me. There's still a way out for you,\" I said. \"But... it will mean big changes for you. Far bigger and much more disruptive than... than those you're already facing there. It will cost you everything. But you'll be free from him.\"\n\n\"What? What are you talking about?\"\n\n\"Come here. Come home. Move in with me until you find your feet again. Walk away from that fucking... that thing and his manipulation. Come back home to me.\"\n\nThe silence stretched out.\n\n\"Lea?\" I breathed, shaking. \"Please. Oh God. Please, say something.\"\n\n\"You can't offer me that,\" she said, softly. \"You can't dangle that in front of me. You can't take my problems onto you again. That's not fair on you, Rose. I can't do that to you.\"\n\n\"Lea. Please. I'm begging you to come home,\" I whispered.\n\n\"Please stop that,\" she said, as her voice broke. \"Please don't beg like that. You're breaking my heart. I can't take it to hear you ask me that like that.\"\n\nI snapped.\n\n\"Stop being so fucking difficult!\" I screamed at her. \"Stop it, stop it, stop it, stop it! Jesus Christ, Lea, can't you hear how much I need you to come back to me! You're killing me!\"\n\nAnd then I slumped down onto my heels, head against the advertising hoardings, gasping, fighting against the waves of bewilderment and rage and hurt at the thought that she'd choose her prison over me.\n\n\"Rose?\" she said, after some time, in a strange little voice. \"Rose? Rosie? Are you still there? I'm sorry. I'm so sorry.\"\n\nI gagged, coughed up bile, panted for breath. \"I... can't do this. I can't... lose you again. I've got... I've got to go. I've got to... get home somehow. I can't... I can't take your rejection right now. Just let me get home... first so I'm safe. Then tell me then. Then you'll... be free of me.\"\n\n\"Rosie,\" she whispered. \"No. Wait. Please. Stop. Please. Please... just... just be honest with me. Do you really want this? Do you... do you want me there that much?\"\n\n\"Yes, you stupid cow,\" I moaned. \"Yes. Did you really need to ask that?\"\n\nAnd then she was silent for a moment. I wiped my mouth, spat more bile, tried to calm myself for the bitter walk home.\n\n\"Ok,\" she whispered. \"I'll come home to you.\"\n\n\"You... you're coming home?\"\n\n\"Yes. To you.\"\n\nAnd then poor Shane had to brave the bitter cold to come and gently rescue me again.\n\n.:.\n\nI sprang into action. I cleared out my spare room, dumping anything that wasn't absolutely critical at the charity collection point down the road, dusting and cleaning like a psychotic maid until every surface gleamed. I descended on the shops like a dervish, ordered her a good double bed and cupboards from Ikea and built them with borrowed tools in one frantic evening.\n\nI added pillows to the couch in the colours she loved, hung prints of a few of her favourite artworks by Dali and Turner on the walls, and in the days before our agreed date I stocked the fridge and went on a binge to ensure she had clean linen and brand new pillowcases of the Egyptian cotton that she'd always liked.\n\nIt dynamited a crater into my savings but I didn't care. I lived frugally and could recover in time.\n\nMeanwhile, my Lea would have a safe space of her own. Space to live, to breathe.\n\nSpace to heal.\n\nIn Bristol she gave notice on her flat and quietly packed up the bits of her life she would bring. She set a forwarding address at the post office, but told nobody that she was leaving.\n\n\"I've got no real friends here any more,\" she said to me, on one of our long evening phone calls. \"Nobody who I'll really miss, and nobody who will miss me.\"\n\nOnce more I found myself counting down the days, and then the hours.\n\nI met her on the platform at Paddington. I caught her in my arms, holding her to me, giving her some time to catch her breath. I grabbed her two suitcases and shouldered her small backpack, ignoring her desperate entreaties to be allowed to help. I guided her through the bowels of the Tube network, and escorted her onto our train at St Pancras. I installed her at the window seat, body-slammed her bags into the rack above us, and then dropped down into the seat beside her. She stared wide-eyed at me, then fumbled for my hand, clenching it tightly as our train juddered and began to inch away from the station.\n\n\"You're a scary commuter,\" she whispered. \"God help the rest of them.\"\n\n\"I will smite anyone who even looks at you wrong,\" I growled, and she gave me a small brave smile.\n\n\"Rosie...\"\n\n\"No. Not here. Not in public. We'll talk about everything we need to once we're home. For now, just breathe. You got out. You've taken the first step. Did you change your number like I told you to?\"\n\n\"Yes. But... I gave the new number to mum. I'm all she has.\"\n\n\"That's fine. So long as El Fucko doesn't have it and can't get it, that's all I care about.\"\n\n\"I can't believe I'm doing this.\"\n\nI squeezed her hand. \"Believe it. I've got you, Lea. I'll take care of you for as long as you will let me.\"\n\nShe shuddered, turned, hid her face against me. \"Thank God you came back in to my life when you did.\"\n\n\"Like I'd ever let you tie the knot with someone without my permission,\" I whispered, and she gave a choking laugh.\n\nShe watched, slightly wild-eyed, as London gave way to greenery. She said little, and clung to me like a frightened little girl. The only times she let go of my hand were when we unloaded at St Albans, when we climbed into the taxi I hailed for us, and as we climbed the stairs to the flat.\n\nI bumped open the door and held it for her. She slunk in, hesitant, hunched over, staring around in disbelief at the clean surfaces, the colour and clutter I'd added in the hectic couple of weeks since we'd hatched our madcap plan.\n\n\"Welcome home, Lea,\" I whispered. \"I've got your room ready for you.\" I closed the door behind us and carried her bags down the short passage.\n\n\"There's no bath, I'm afraid, but the shower is decent and the water heater is gas so there's lots of hot water. So... here, this is you. I got you a desk, and some bedside tables and that lamp that is like the one you used to have in your room.\"\n\n\"I'm still looking for a chair, but you can use mine until we find one you like. The cupboards are all yours, and I've got a rug on order so we can soften the floor a bit for you if you like. Oh, and there's a bit of a view of the common if you crane out the window. It's not much. I wish it was more.\"\n\n\"It's perfect,\" she breathed. She sat down on the bed, and ran her hands slowly over the deep burgundy cotton of the duvet cover. She shook her head, stared around the bright, sunlit room, then up at me. \"Oh, Rose. My heart. I can never...\"\n\n\"Stop,\" I said. I knelt down in front of her. \"Stop. No. Don't you dare. You deserve this and so much more. Just let me do this for you. Please, Lea.\"\n\n\"Ok,\" she whispered.\n\n\"I'll put the kettle on. Unpack and get settled. Ok? I'll make us something to eat as well.\"\n\n\"Ok.\"\n\nI left her with her thoughts and made my way to my... to our small kitchen. I put the kettle on. I pulled some cucumber and cheese out of the fridge. I sliced them and found some olives and crackers that I arranged on a plate. And I listened to the quiet sounds as she unpacked the small remaining parts of her life that she'd been able to salvage.\n\nThen I just leaned against the window, staring out at the distant trees, conscious of little but the strange tension between the stress of her presence and the fierce joy that threatened to overwhelm me.\n\nI heard soft footfalls, and shivered as she slipped her slender arms around me and pressed in against my back.\n\n\"It's no palace like you deserve,\" I sighed. \"But I'll work on it.\"\n\n\"It is beautiful,\" she whispered back. \"And it's so much more than I deserve. Thank you.\"\n\nI covered her hands with my own, and squeezed them tightly against me.\n\nSlowly she unwound. She poked around the flat like a rescued animal taking its first hesitant steps into freedom. She found herself a sunny spot on our small couch that gave her a view she liked. She unpacked and checked and cleaned her Clarinet. She took a long shower, put on some soft formless clothes and fluffy socks and drank a glass of white wine with me. She phoned her mum to let her know she was safe and had a good, solid, snotty, rib-breaking cry afterwards. I stayed close by but didn't hover; knowing that she needed to vent, to let the pressure off bit by bit.\n\nThen, still sniffing and bedraggled, she dug into the freezer. She found the makings of a late lunch, and rejected any attempt or offer of help.\n\n\"I am going to cook for you every day,\" she told me through her tears. \"Every day. Make peace with it now. It will save you time. Don't even think of objecting.\"\n\nSo I sat and quietly watched her, and another small shard of my shattered soul was healed.\n\n.:.\n\n\"Are you sure you're warm enough?\" I asked her again.\n\n\"Stop mothering me.\"\n\nI stuck my tongue out, and she smiled. \"I'm fine. Really. This coat looks terrible but it's really warm.\"\n\n\"Ok.\"\n\nWe walked on, following one of the meandering paths across the common, skirting the newer open areas, hunting the secret spaces we both remembered from our childhood. I loved the feeling of her arm through mine, the natural way we fitted against one another despite the broken years between us. I loved the way she'd spontaneously lean in against me, resting her head against mine. I loved the slight colour in her cheeks, the artless way she'd wrapped my hockey scarf around her neck, trapping her hair within its knitted folds. We were silent, but not awkwardly so, just present with one another, experiencing this new thing between us, this new chapter.\n\n\"I need to find work, I suppose,\" she sighed, at last.\n\n\"Do you have any idea about what you want to do?\"\n\n\"It's about what I'll need to do. Temp positions to close the gaps, I guess.\"\n\n\"Maybe you can advertise music lessons?\"\n\n\"I don't have anywhere to teach, Rosie.\"\n\n\"Use the flat.\"\n\n\"No. That's your space.\"\n\n\"It's our space, Lea. Yours and mine.\"\n\n\"No. I'm just passing through.\"\n\n\"Do you really think that?\"\n\n\"What?\" she breathed.\n\n\"Do you really think I'm going to let you go so easily?\"\n\n\"Rosie...\"\n\n\"If we need more space we can find a flat with more space. I am not going to let you move into a hole, Lea. It's just not going to happen. Sure. Maybe once you're settled and want to move on and be with some guy and have the three and a quarter kids and one point seven spaniels. But not now. Not until I'm sure you'll be ok. And in the meantime, whatever you need, I will do. You know that.\"\n\nShe stumbled, stopped. She turned away from me.\n\nI gave her the moment she needed.\n\n\"I don't deserve you,\" she whispered, after some time.\n\n\"You are the most important person in the world to me,\" I told her. I wrapped my arms around her, held her. \"Nothing has ever changed that. If you decide you want to move on some day, that's your decision to make. But I will never, ever willingly let you go. Not ever again.\"\n\nShe sighed, stared up at the high clouds while she gathered herself. She leaned her head back against my shoulder, cheek to my cheek. \"Are you sure about... about the music?\"\n\n\"I'm working every day, and have hockey practice most evenings. The flat is empty. Of course you should use it. You should do anything you want to. Just... if you're going to bring boys home, let me know in advance.\"\n\nShe snorted softly. \"Oh, that will never happen. I'm very... selective.\"\n\n\"If it does, though. Just... warn me so I don't come barging in to defend your honour.\"\n\n\"I'll advertise music lessons at the flat. But only until I find something better. Okay?\"\n\n\"Deal,\" I said, staring at her, puzzled by the way she'd so directly ignored the hints, the teasing.\n\nShe was the first to pull away.\n\n\"There are lots of startups and small firms sprinkled around here,\" I said, shunting my train of thought out of its siding. \"You majored in English as well, didn't you?\"\n\n\"Yes.\"\n\n\"I remember how well you wrote. Do you still write at all?\"\n\n\"A bit. Sometimes.\"\n\n\"Well, then that's something else you should look at. Proofreading, copywriting. I know it's not what you love but... you'd be awesome at it. We're constantly having problems with the stuff they publish at work. If you like... I could ask if we need a contractor? It might be a good in for you? Until you've got a steady stream of students?\"\n\n\"I don't know...\" she said, unsure.\n\n\"It's worth looking into. You had a really special way with words, Lea.\"\n\n\"I guess... I guess you could. For now I'm... I'm still trying to convince myself that I'm not dreaming. That this is real.\"\n\n\"You aren't dreaming. You're here. You're home.\"\n\n\"And so are you,\" she whispered.\n\n.:.\n\n\"Lea?\"\n\nShe looked up from her tablet. \"Oh. Wow. You look wonderfully athletic...\"\n\nI flushed. \"Stop that. I have hockey practice. Listen... I know it's your first night here and you're tired and probably just want to chill, but they're a nice bunch so... um... do you want to come with?\"\n\n\"Are you sure? I don't want to invade your space...\"\n\nI just stared at her, and she had the decency to blush at the silliness of what she'd said.\n\n\"I wouldn't ask if I didn't want you to. We've got a small bar and you can have some wine or coffee on my account while we're there if you like. They'll look after you... so... want to come with?\"\n\n\"Ok. That sounds nice. Plus I'd... I'd like not to be alone. Tonight, I mean...\"\n\n\"It's a ten minute walk, so it's not too far. Grab your coat, it will be chilly by the time we come home.\"\n\nShe followed me downstairs; I held the door open for her, then swung my kitbag onto my offside shoulder. I took her hand, and she gave me a brief smile. \"I still feel like I'm dreaming,\" she confessed.\n\n\"I'm sure that it will pass.\"\n\n\"I don't want it to. Everything's these wonderful bright colours for once.\"\n\nWe walked to the clubhouse in quiet companionable silence, each content in our own heads. I installed her at one of the nicer tables and threatened Dave with a violent and prolonged mort par Rosie if he failed her in any way.\n\nHe laughed, Lea grinned, and the two of them hit it off like they'd been separated at birth. I watched her for a moment, fiercely proud of her adaptability and glad that I'd brought her. I made for the changing rooms and offloaded my bag and spare kit. Then I made my way out to the field.\n\nIt was bitterly cold, but fitness drills soon took the edge off. I built up a sweat, got into my groove. We played some quick five-a-side matches on the near half of the Astroturf, and at some point I realised that she was standing at the gate, watching me.\n\n\"Go inside, you mad bint,\" I laughed at her, as I took a brief water break and came to bask in her radiance.\n\n\"No,\" she said. \"I've missed seeing you do this. Let me have my time to be your number one fan and stop bossing me,\" she finished, with a smile.\n\n\"Just don't get cold, ok?\"\n\n\"I'll go in if I do. Pixie swear. I've got my coat and your scarf. I'm warm through and through. Now, off you go,\" she added, giving me a playful slap on my rump to speed me on.\n\nThe knowledge that she was there made everything better, though I had to work hard not to constantly steal glances at her.\n\nAnd of course my team-mates noticed. Noticed her, and noticed how clumsy and tongue tied I was around her.\n\nSignificant looks were shared. Coughs were coughed. Grins were grinned.\n\nI ignored them all.\n\nBut later in the clubhouse, as I tried to enjoy a quiet drink with Lea, my club took a perverse delight in torturing me by coming over one at a time to introduce themselves to Rosie's new friend.\n\nArseholes, the lot of them, and I scolded them all while Lea laughed at me with a lovely light in her eyes.\n\nBy the time we left for the evening, Lea had been vetted, poked, prodded, approved, blessed and was well down the path to being adored by everyone.",
        "And I was fiercely thankful for them, and fiercely proud of her, and impossibly glad.\n\nIt was late when we finally got home. Lea was wrecked; she stumbled, yawning, to the bathroom, brushed her teeth and made for her room. She pulled the door nearly shut behind her. I, meanwhile, had a long liaison with the shower, emerging pink and fresh.\n\nI paused at her door. \"Lea?\" I called softly. \"You still awake?\"\n\n\"Mm. Sorta.\"\n\n\"Ok. Night, sweetie. See you tomorrow. Yell if you need anything at all, okay?\"\n\n\"Night, Rose. Love you. Sleep well,\" she yawned.\n\nI nudged my bedroom door partway closed and crawled into bed, but it was some time before I could settle enough to sleep.\n\nI kept having to fight the urge to crawl in with her.\n\n.:.\n\nFootsteps woke me from a light doze. It was dark. I felt a moment's relief that I could sleep longer.\n\nI listened as Lea padded to the loo. There was a silence, then the sound of running water. I waited for the gentle squeak of her door.\n\nBut instead, mine slowly opened.\n\nI heard her nightdress brush against the door and the wall. She took a couple of soft steps. Then I felt my duvet shift as she pulled it back; my mattress deformed as she gently lowered herself onto it.\n\nI let out the breath I'd been holding; she froze for a moment. Then she slowly slipped in beside me. I shivered as I felt her cool skin against me, and bit down the noise I almost made as she covered us and then snuck her arm around me, just below my bare breasts.\n\n\"Rose? I know you're awake,\" she breathed. \"I can feel your heart racing.\"\n\n\"What... what are you...\"\n\n\"I'm cold and lonely. And I can't sleep.\"\n\n\"And...\"\n\n\"So I came hunting warmth. And companionship.\"\n\n\"Mm. Really?\"\n\n\"Yes. I needed to be near you.\"\n\nShe shifted against me, burrowing in closer. I tried to relax, but something about her scent, her presence, had the opposite effect on me. I squirmed involuntarily. I bit my lip, hard, as I tried to tear my thoughts away from how good she felt against me.\n\n\"I liked the way people watched us at your club,\" she whispered. \"I liked it when they asked if we were an... item.\"\n\n\"They're desperate to find chinks in my facade,\" I whimpered, trying to ignore the way that her proximity was unsettling me.\n\n\"Well. They found one. Me.\"\n\n\"You're not a chink in my facade. You're my foundation stone,\" I groaned.\n\nShe sighed. \"Rose. You need to be more careful of what you do to me when you say things like that. Words have power.\"\n\nI rolled over towards her. \"What do you mean? It's how I feel about you. It's how I've always felt about you.\"\n\nShe sighed. \"Yes. But... I mean...\"\n\n\"Lea, you're babbling...\"\n\n\"Forget it,\" she whispered.\n\n\"No. I won't. You've come in here with something on your mind and I know that you want to talk about it.\"\n\nI pillowed my head on my arm so that I could watch her. \"So tell me what it is.\"\n\nShe was barely visible in the faint ambient light; a silhouette, the shadow of a girl. I couldn't see her face, but I could tell by the tone of her voice that she was stressed.\n\n\"What is it, Lea?\"\n\n\"Remember how I told you that bringing boys back here wouldn't be a problem for me?\"\n\n\"Vaguely.\"\n\n\"I'm... I've...\"\n\nShe swallowed.\n\nI fumbled for her cheek, gently cupped it in my hand. \"Just breathe. I'm here.\"\n\n\"That's just the problem,\" she said, with a strange little laugh.\n\n\"Why?\"\n\nAnd then I shivered as she slowly ran her hand down my spine, lingering briefly at the small of my back. \"Oh...\" I gasped, as the penny finally dropped.\n\nShe trailed her fingers further down, and I felt her take a shuddering breath. I whimpered as her touch lit flames in me.\n\n\"I've never been with anyone,\" she whispered softly. \"Never. I was saving myself. Because... because... it's always been you, Rosie. It's always only ever been you that I wanted. So... I waited. For you.\"\n\nI shuddered, took a panting gasp of air.\n\nShe shifted in towards me.\n\nI could smell the faint overlay of her soap, the underlay of her.\n\nMy heart was pounding now; I tried to be adult, tried to fight away the need.\n\nI knew she was broken.\n\nI knew I was broken.\n\nBut as she slowly, shyly began to nuzzle against me the last little bit of my control burned away.\n\n\"I love you,\" she whispered, and I surrendered unconditionally to her.\n\nI clasped my arms around her, pulled her to me, over onto me so that I could have her closer. Her lips were hot on mine, her body as light as a feather as she rolled half on top of me. She was shaking, panting for air as I pulled her to me, held her to me, held my Lea to me as the last fragile boundaries between us blew away like smoke.\n\nShe threw her leg over me and levered herself up to straddle me. She arched forward and kissed me, then my cheeks, then, hesitantly, my throat. I moaned. I felt her fingers slide up along my ribs to my breasts. I fumbled for her hands, guided them, showed her how to tease me. She was a quick study. Her kisses were delicious and insistent. My need was almost unbearable. But we needed... we shouldn't...\n\n\"Slow... slower,\" I begged, when I could. \"Slow down. Slow down, you're... I'm...\"\n\n\"No,\" she moaned. \"I've waited so long for you. I thought I would never have you and then, just when I was about to give up hope, you came back to me. I'm not waiting any longer. I need you. I crave you.\"\n\nShe sat upright, and shifted. I felt the fabric of her nightie brush along me as she pulled it up and off her. She slumped forward again, and this time I felt the warmth of her breasts against mine. I let out a long, shivery groan. I pulled her to me once more, legs shuddering and spasming as she clenched her fingers on my aching nipples.\n\n\"Show me how to make love to you,\" she begged. \"Show me how to be what you want. Teach me how to do this. I want to be what you want...\"\n\n\"You are,\" I moaned. \"You always were. Oh god, oh god, just, just touch me the way you are. Kiss... mm... oh God... kiss me the way... you are... you're perfect... I love you... I love you,\" I cried out, and she shuddered her echo into my neck.\n\nI felt her fumbling at me, and I wailed a thin, reedy \"yes\" as she managed to get her hand under my leggings, down to me. I dug my nails into her back as she found me. She cried out, leaned into our kiss, then shifted off me so she could lie down beside me, and clumsily tease my aching lips open. I was soaked, and she let out another low breathy moan of need as she found my entrance.\n\n\"Lea, Lea, please, please, please,\" I begged, writhing against her. \"Put your fingers in me, please, please, put them in me... like... like this...\"\n\nI fumbled down, found her hand, took her, drove her into me, crying out as my body clenched down on her. I found my clit, started to furiously stroke myself as she pushed her fingers deeper into me, panting into my neck, biting down on my ear, grinding her belly against my hip as she took me.\n\nIt felt like mere seconds. Her fingers were perfect in me, perfect, and I could feel my orgasm building. \"Lea,\" I gasped. \"Lea, I'm going to come. I'm going to come. I'm going to... I'm...\", and then my body began to shake as she broke me. I arched upwards, back locking, and she clawed in against me as I began to convulse against her, gasping wordlessly, shaking uncontrollably, totally and utterly hers.\n\nShe held me tight to her, her fingers still sunk in me, letting me ease down, letting me come back to her. And then she just rolled in against me and rested her head on my shoulder, just being there with me, breathing, as I tried to remember how to speak. I shuddered, gasped as she slowly eased her fingers out of me, my thighs clamping down on her hand. She kissed my neck, and I shuddered again.\n\n\"I have been waiting a long time for that,\" she groaned. \"To have you as my own.\"\n\nI wormed my arm in under her and pulled her against me; she rolled part on top of me, resting against me, her slick and sticky hand resting between my breasts. I could smell myself on her, a dark, pungent scent mingling with hers, and my body spasmed again.\n\n\"Rosie?\" she breathed.\n\n\"Still... God... can't...\"\n\nShe laughed softly in her throat. \"So that was nice, was it?\"\n\n\"So... nice. Oh... oh my God... needed that...\"\n\n\"I'm glad. Consider it a little bit to even things.\"\n\n\"No,\" I whispered. \"No. I won't. I won't let you... use yourself for me... in any way or form. Never.\"\n\nI fumbled for her, pulled her up to me, kissed her hard, then broke for air. She sighed and tucked her face in against me.\n\n\"We've wasted so many years, you and I\" she whispered.\n\n\"I know. But you're here... now, and I'm here now. And... I'll never let you leave me again.\"\n\n\"Then make me yours,\" she breathed.\n\n\"Are you sure? Are you sure you want this? There's... there's no going back. If you... if you let me do this with you, I will...\"\n\n\"You will... what.\"\n\n\"There will never be anyone else. If you were ever to... to leave... that... that would be it for me.\"\n\n\"Rosie,\" she sighed. \"How could I ever, willingly, leave you? I want to be yours. I want every part of me to be yours. Yours and yours alone. You... you complete me. So. Come here. Come here and kiss...\"\n\nAnd I silenced the rest of her words with my lips, and held her to me as her entire body shuddered.\n\nI gently pushed her down onto the bed. I kissed her cheek, her throat, down over her shoulders, down over her small, firm breasts and the hard nubs of her nipples.\n\n\"Rosie... what...\"\n\nDown over her ribs, down over her quivering stomach.\n\nShe moaned, long and low as my lips traversed her belly. She shifted her leg, opening herself as I nibbled, teased lower, down, past her bellybutton, then lower, slower, over the downy fuzz of her mons. She shuddered once, shifted her bum to the middle of the bed, and cried out, writhing as I reached her sex.\n\n\"Rose,\" she begged, \"what are... what are you...\"\n\n\"Making love to you,\" I whispered. \"I am going to take you. I'm going to tongue you until you scream. I'm going to make you forget your own name.\"\n\nAnd then I touched the tip of my tongue to her, and she made a noise I'd never heard before, a low, primal grunt of need. Her thighs quivered as I touched her, she clawed at her belly, then at her breasts, shivering as I teased my fingertip along her.\n\n\"Lea?\"\n\n\"Uh huhn\"\n\n\"Tell me to stop if you need me to.\"\n\n\"No. No. No. Don't. Please. No. Don't stop. Please.\"\n\n\"Ok.\"\n\nAnd then she let out a long, glorious, raspy alto moan as I penetrated her.\n\nI slowly began to lick her, teasing the tip of my tongue around the base of her clit. She tasted delicious; her skin was wonderfully smooth, her vagina so tight and hot on me. Her thighs clamped rhythmically on my cheeks, squeezing me in time with the slow torturous strokes of my tongue. I could hear her panting, smell her sweat, and my own pulse was loud in my veins.\n\nI wanted her to scream. I wanted to blow her mind, show her with my body how much I loved her, how much I needed her, how much having her back meant to me.\n\nHer muscles clamped on me, and she groaned. Her panting gasps for breath were faint, high-pitched and desperate. She'd angled her hips, opening herself more to me. I could feel the way her belly was spasming, the way every muscle that I could feel was tensing slightly more every second that I licked her.\n\n\"Rosie,\" she managed. \"Rosie. Don't. Don't stop. Please. Oh please. Oh please. Oh... Oh...\"\n\nShe stopped writhing. I felt her thighs tense. I pushed two fingers deep into her, and she convulsed up off the bed. I felt her hands scrabbling at me, and she gave a grunting gasp, shuddering hard against me. She fell backwards, and let out a deep, long, guttural moan that made my toes curl in sympathetic pleasure.\n\nAnd then she just lay there, gasping every couple of seconds, boneless as a puppet cut free from the puppeteer's hand.\n\nI teased her just a little longer, then eased out of her so that I could slowly slip my body up along her sweat-slicked chest and kiss her again.\n\n.:.\n\n\"Rosie?\" she whispered, some unknowable amount of time later.\n\n\"Yes.\"\n\n\"That thing you did.\"\n\n\"What thing.\"\n\n\"With your fingers. And your... tongue.\"\n\n\"Uh huh.\"\n\n\"It was very nice.\"\n\nI laughed softly, and after a moment, so did she.\n\nShe shifted in my arms, pushed her leg gently against me.\n\n\"You realise there's going to be a lot of smugness at the club. My reputation will be ruined.\"\n\n\"Scared they'll all find out you're actually a complete softie?\"\n\n\"I've spent years cultivating my image as a Valkyrie. You've undone it in one day.\"\n\n\"So sad,\" she whispered. I could hear the mischievous smile in her voice. She shifted, stretched her arm further over me, then settled in against me with a sigh. \"We might as well change that room back to a study.\"\n\n\"And get a bigger bed.\"\n\n\"Yes. You smell so good. And feel so amazing. I don't want to sleep apart from you.\"\n\n\"We'll have to tell our parents at some point, you know.\"\n\n\"Some point. Not now. Lets just... have some time for ourselves, first. To learn... us.\"\n\n\"Ok.\"\n\n\"I love how you just... get me.\"\n\nI kissed her brow, and smiled as I felt her sigh.\n\n\"What time is it, do you think?\" she breathed.\n\n\"Early.\"\n\n\"Morning?\"\n\n\"Not just yet.\"\n\n\"Good. Means I get longer with you before you have to leave.\"\n\n\"I'm tempted to call in sick. Spend the day like this with you. Move only to eat.\"\n\nShe laughed. \"There'll be plenty of time for that later. I'll make sure I'm posed somewhere... nice... for you when you get home.\"\n\nI pulled her tighter to me, savouring the little breathy squeak she let out.\n\n\"Thank you,\" I whispered.\n\n\"For what?\"\n\n\"For coming back.\"\n\n\"Like I had a choice. The girl I love asked me to come to her.\"\n\nI took a shuddering breath as the emotion surged up in me.\n\n\"Rosie?\" she breathed. \"What's wrong, honey?\"\n\n\"Just...\" I whispered.\n\n\"Shh. It's ok. I... I know. I know.\"\n\n\"Sorry,\" I breathed, as I wiped my eyes. \"Being all stupid and stuff.\"\n\n\"You can be stupid with me.\"\n\n\"You make me stupid,\" I whispered, and she laughed softly once more.\n\nI gently began to run my fingers through her hair, and she made a soft happy noise against me. \"You melt me,\" she murmured. \"Always have done.\"\n\n\"I'm sorry I wasn't there to protect you from everything.\"\n\n\"It just makes this all the sweeter.\"\n\nShe yawned, and shifted slightly against me.\n\nI cradled her to me as she slowly fell asleep in my arms, and then I just lay there, bearing mute witness as the slow pre-dawn light transmuted her shadows to colours and made her real.\n\n.:.\n\nSlowly the days became weeks. Lea lost the hunted look behind her eyes as the fear of the other shoe dropping slowly left her. I managed her ruthlessly at times, never letting her question herself, never letting her doubt her central place in my existence. I hugged her as much as I could, kissed her as often as she'd let me and, yes, made her scream my name whenever she wanted me.\n\nWhich was often.\n\nAnd even as I worked so hard to heal her, I discovered that she was working her own magic on me.\n\nMy anger faded, flickered out and, finally, died. I smiled, often and without reason. She straddled my lap one evening and painted my nails for me, and despite my protests I had to confess that I liked the pampering and the ridiculous colours she'd chosen for me.\n\nShe threw herself into cookery, and every night became a competition for her to try to outdo herself on our initially shoestring budget.\n\nShe put on weight. Not much, but enough, and I loved the way she began to curve again, the way I could feel her give when I held her.\n\nI'd lean against the bathroom door, watching her as she showered, loving the flush that never failed to take root, the blush she never totally lost no matter how intimate we were. Her ribs still showed, but now they were punctuation rather than plot, and the dark hollows under her eyes had almost been chased away.\n\nI spent fewer evenings at the clubhouse, and began to spend at least two weekday evenings a week on her alone. We'd go for walks, explore our immediate area, meander through the smaller lanes as the leaves began to change.\n\nShe taught me what it felt like to be held, and to be loved - unconditionally and without restraint.\n\nI learned that she loved to have the small of her back kissed, and that she'd go to the extreme of hiding the last block of a bar of chocolate so she could, laughing, share it with me later.\n\nShe learned that she could render me insensible by sneaking up behind me and kissing me on the curve where my neck and shoulder met.\n\nI discovered, quite by accident, that champagne turned her libido up to eleven.\n\nShe discovered that she could get whatever she wanted from me with her smile alone.\n\nI discovered that she had a love of North African spices, and that lamb and apricot tagine was her idea of heaven.\n\nAnd she discovered how much I loved showering with her.\n\nI had never been happier.\n\nI gave my boss my frank opinion about the state of our website and press releases, and showed him some sample rewrites I'd bullied her into providing. I lied through my teeth about her experience, and she was on a part-time contract with us within a week. He must have mentioned her to his network, because within a month she had more work than she knew what to do with.\n\nShe cried herself to a standstill when she saw her first actual salary come in.\n\nWe used some of it to buy her a proper chair and a reasonable laptop, and a month later she was able to add a high quality pedestal monitor and ergonomic keyboard and trackball.\n\nThe recovery of her independence was the final missing piece she'd needed.\n\nShe'd walk up behind me whenever she could and hug me as hard as she could, never saying anything, just placing her cool cheek to the nape of my neck, her cat-like thank you that I never grew tired of.\n\nAnd while she'd sometimes talk about teaching music, she never took that step.\n\nSo I started finding tickets to orchestral performances in the area, and once a month I'd treat her to an evening out. I'd inflict a dress on myself, and makeup, and let her do something with my hair, and I'd sit there beside her, quietly admiring her as the music transported her to some far off space that only she could see.\n\nIt was the seventh of December when I took a day off work without telling her, and made my way to St Albans to pick up the ring I'd commissioned. The jeweller, a lovely old man, took great pleasure in displaying it to me and showing me the quality of the central garnet I'd wanted in the setting.\n\n\"Why a Garnet?\" he'd asked. \"Actually, wait. I know this. Persephone, am I right?\"\n\n\"Yeah,\" I'd confessed, flushing, loving the dry chuckle he'd given in reply.\n\n\"It's a beautiful stone. She's a lucky girl,\" he'd said, as he gently put the ring back in its bag.\n\n\"No. I'm the lucky one. She has to settle for me.\"\n\n.:.\n\nBut then came the mental block.\n\nI wanted the moment to be special.\n\nBut I had no idea how to make it so.\n\nAnd she, in her magical way, showed me.\n\n.:.\n\n\"Rose?\" she said softly, one morning, as we lay in our pre-awake state.\n\n\"Mm?\"\n\n\"I was thinking.\"\n\n\"Oh no...\"\n\n\"Shush. I'll bite you.\"\n\n\"What were you thinking?\"\n\n\"Do you think we'd be able to go on a city break somewhere? I've... I've never been anywhere.\"\n\n\"Where?\"\n\n\"Um... it's... it's my dream to see Marrakesh. It has been for years. Would it be... safe, for us, do you think?\"\n\nI rolled onto my side. Her face was a study in hope, but I could see that she had steeled herself to expect a gentle no.\n\n\"We'll look. And if it's safe I'd love to go.\"\n\n\"Really?\" she breathed, radiant.\n\n\"Yes. Of course we will. I've never been and I'd love to go with you.\"\n\n\"Thank you,\" she whispered. She crawled in close and sighed.\n\nI, meanwhile, lay there, the Eureka moment echoing in my mind.",
        "I buried my intent deep under layers of guile, but over the next few days I began placing the orders for the various things I needed. I got everything delivered to my workplace, and begged a locker off our sympathetic office manager who, alone amongst everyone, I'd let in on my plans because I knew he'd been to Morocco the year before.\n\nHe made a number of fantastic suggestions, then flushed scarlet as I hugged him in a complete departure from my normal character.\n\nFinally, I had everything I needed.\n\nLea had a busy week, and had been asked to attend a late meeting in person. It was my chance. I made my way in to the office, confessed to my boss, told him I needed the day and why I needed it, and was given an amused \"fuck off and don't come back unless she says yes.\"\n\nI retrieved my packages and waited for the taxi to arrive.\n\n.:.\n\nI pushed the couch back against the wall, and moved our coffee table to the middle of the floor.\n\nI unrolled the wafts of burgundy, violet, indigo and red fabrics and began tacking them to the roof; it took some time to work out how to secure them properly but I figured it out and began to construct a tent of cascading fabric that fell in gentle waves. I knew that the dim light of evening would soften the roughness and lend to the illusion, and I was happy that the effect would be as I wanted it to be.\n\nI wove the fairy lights in the space above the coffee table, and tied their battery box to the room's central light fitting.\n\nI covered the coffee table itself with a length of scarlet cloth, embroidered with silver Arabesques.\n\nI scattered petals of pink Damascus rose over and around it.\n\nAnd I placed the small Moroccan-style lamp dead centre.\n\nI closed the curtains and conducted a lighting test, and it was everything that I'd hoped it would be - a small oasis of light and colour, with the falls of cloth screening us from the rest of the world.\n\nAfter that, I just had to make the meal I wanted to prepare for her.\n\n.:.\n\nNearly home. Be there in ten minutes\n\nSee you now xxx I replied, blessing the fact that a text would not betray the stress I felt.\n\nI smoothed my dress in a helpless gesture of nerves, and quickly lit the candles on the kitchen counter and in the lantern. I cracked a window so the smoke would escape. I checked the food in the oven, it still had half an hour to go. Plenty of time.\n\nI opened a bottle of her favourite red, and poured us both a glass. I took a nervous gulp of mine.\n\nI was terrified.\n\nI took a breath. I pressed my hands to my cheeks, opened the window wider, took some deep gulps of fresh air.\n\nI lit the tee-light candles on the window sills.\n\nI dimmed the lights and lit the fairy lights.\n\nI turned up the soft soundtrack I'd set up on my phone, the selection of tracks that had felt appropriate for this moment with her.\n\nAnd even I had to admit that I'd done a good job.\n\nI closed my eyes, counted to ten.\n\nI heard her footsteps on the stairs, the soft footfalls as she approached our door.\n\nI took my place, and fought for calm. I touched my hair to make sure it was still in place.\n\nShe opened the door, then froze on the threshold.\n\n\"Rosie?\" she whispered. \"What on earth...\"\n\nI reached out, pulled her to me, kissed her, and hugged her hard. I took her backpack from her slack hand and gently dropped it beside the doorway. I pushed the door closed behind her, kissed her again. I took her coat off her and hung it, and then led her to the space I'd made for us. I helped her sit on the pillow I'd placed for her.\n\nAnd through all this she stared at the flat, at the candles, the colours, the lights... and at me.\n\n\"Rosie,\" she said, lower lip trembling in her classic tell. \"What's going on? What is this?\"\n\n\"I'm setting the scene,\" I whispered in her ear. \"For when we go away. You always cook for me. You do everything for me. I wanted to do something special for you.\"\n\nI passed her her glass of wine, then came and sat cross-legged beside her.\n\n\"I tell you a lot how much you mean to me,\" I told her. \"But... words are cheap. Actions say what a million words cannot.\"\n\n\"You did all this... for me?\"\n\n\"Yes.\"\n\n\"Oh, Rosie,\" she whispered. \"What did I ever do to deserve you.\"\n\n\"You took my hand and showed me where the pony drawing book was.\"\n\nShe laughed, a strange little half-sob, and she turned away for a moment so she could catch her breath.\n\nI drank my glass of wine beside her, and slowly she unwound.\n\nI served her her meal and ate mine beside her, and told her of the research I'd been doing on our potential city break, the things we'd need to do to be safe, the choices we'd have to make about where to go and what to do when we got there, and that if we took a slightly longer break then we could do a trip into the desert and see the North African stars.\n\nShe leaned her head against me, not saying much, just breathing. Her eyes were dark pools of liquid night, her breath gentle, her hand warm where it curled on my thigh.\n\nSometimes she'd smile, and sometimes I'd reach up to gently wipe away her tears.\n\nMy Lea.\n\nMy light, my shadow, my soul.\n\nThe very best part of me.\n\nShe got up once to go to the loo and wash her face, and I quickly scrabbled up the small black bag from inside the coffee table's topmost drawer.\n\nI hid it in the shadows of my lap, and waited, aching, until she'd settled herself back down beside me.\n\n\"Lea,\" I quavered, softly, my heart pounding hard in my chest.\n\n\"Yes,\" she whispered.\n\n\"Close your eyes.\"\n\n\"No more, Rosie, please,\" she gulped. \"No more. You've spoiled me so much already. I'm going to blub if you don't stop...\"\n\n\"Close your eyes,\" I begged once more, as I leaned in to brush my lips against her cheeks.\n\nShe took a shuddering breath and complied. I fumbled the ring into my shaking hand. \"Don't peek,\" I whispered. I took her left hand, kissed it, then slowly slipped the cool metal of the ring onto her ring finger.\n\nShe let out a low moan - something primal, something raw and unfiltered.\n\nShe opened her eyes, stared at her hand, then up at me. Her mouth worked, but no further sound came out.\n\n\"Will you marry me, Lea Fergusson?\" I somehow managed to gasp. \"Will you be mine from now until forever?\"\n\nShe shuddered, once.\n\nShe pulled me to her.\n\nShe kissed me.\n\n\"Yes,\" was the single simple word she sobbed in answer.\n\nAnd there, in the gentle candlelight, I kissed my love's tears away.\n\nAnd, at last, we were whole.\n\n-: -- :-"
    ],
    "authorname": "onehitwanda",
    "tags": [
        "romance",
        "separation",
        "dialog",
        "healing",
        "rediscovery",
        "loss"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/on-the-simplicity-of-words"
}