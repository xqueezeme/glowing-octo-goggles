{
    "title": "A Year Ago Ch. 18",
    "pages": [
        "This is an evolving story of Sara's sensual investigations. Please review the first phases of the story . . .\n\nThe delay of nearly a year cannot be excused but I hope the many readers will enjoy the re-start of Sara's adventure.\n\n*****\n\nI awoke from the sun coming through a gap in the drapery. As I looked about I did not see Thomas and I sat up. As I looked toward the door I saw Jennifer the maid standing with a tray. She was dressed in her black uniform trimmed in white details and tall black heels. The white ruffled slip seemed to be peeking out from beneath the short hem of her dress. She looked delightful standing still with the hot coffee pot.\n\n\"Where did he go?\" I asked her softly.\n\n\"Mistress took him from you.\" She did not move.\n\n\"Is that coffee for me Jennifer?\"\n\nI saw her smile slyly as she took four steps toward the bed.\n\nShe bent at the waist to place the metal tray on the ottoman beside the bed. Then she turned to hand me a cup and saucer. She giggled when she saw the book open beside the bed.\n\n\"Mistress Thomas loves that story.\"\n\nAs she turned to reach the hot pot I saw her naked sex again with the bright red stain.\n\n\"Why has she made your vulva red Jennifer?\"\n\nShe turned and poured the hot beverage into my cup.\n\n\"The Mistress does this when I am not a good girl.\"\n\n\"Is it a paint or makeup?\"\n\nShe turned the set the pot down then she bent to touch her heels thereby presenting her sex for my inspection. I looked at the smooth bottom with the flesh of her upper thighs slightly pressed by the straps holding her translucent hose'. The skin tissue about her anus was stained a bright red. I thought to touch her but resisted. The crease of her pussy was also covered with the red color.\n\n\"Mistress uses a lip stain once each morning. Do you want to touch me Mistress Sara?\"\n\nI did want her. Her beauty and her naked breasts had aroused me last night and of course my unfinished letter detailed what I wanted to do with Jennifer's body. \n\n\"You have a beautiful body and I'm quite tempted to kiss you.\"\n\nShe remained by the bed with her fingers wrapped about the tall spikes of her heels. I considered her effort but she didn't appear to be under a strain holding herself like this. I sipped my coffee and saw the red mark of my own lip paint on the edge of the china cup.\n\n\"How long can you remain in that position Jennifer? Does Angelica make you hold this position?\"\n\n\"As long as you care,\" she quietly said. \"I am trained. This is a modified yoga position, uttanasana.\"\n\nI studied her long limbs and the curve of her ass cheeks. The skin was without a suntan. I also noticed a small drop of her dew on her inner thigh.\n\n\"You are aroused by being forced to remain with me Jennifer?\"\n\n\"Yes Mistress Sara, I am highly stirred, quite.\"\n\n\"When was the last time you were fucked Jennifer?\"\n\nShe hemmed but said, \"Last night. Mistress fucked me as she watched Thomas enter you the first time.\"\n\nSo there was some secret spot I asked calmly.\n\n\"No she has three cameras arranged in this suite.\"\n\n\"Is she watching us now Jennifer?\"\n\n\"Absolutely.\"\n\nThe idea that Angelica had sent her maid into me this morning made me excited. \n\n\"What does she expect to see happen Jennifer?\"\n\nShe meowed softly like last night.\n\n\"She wants you to kiss my ass, to lick the red stain, to clean my body with your tongue Mistress Sara.\"\n\nI considered the statement. I was well fucked but the woman who had stirred me for months was beside me and her red pussy attracted me.\n\n\"Can you shift to a pigeon pose Jennifer?\"\n\nShe stood tall, reaching toward the ceiling. \n\n\"May I do so on the bed please?\"\n\nI shifted to the side of the bed as the maid moved to her knees and began to pivot to Kapotasana. Her control of her breathing was amazing as I watched her move to the camel pose and settle for a minute. Then she slowing moved her head back and down to the bed surface. The move took about a minute.\n\n\"Mistress, my pussy please.\"\n\nShe wanted me to kiss her exposed pussy while she remained in this contorted position! Jennifer was aroused. I could see the moisture oozing from her taut slit. I moved closer and she giggled softly.\n\n\"You can lick me now Mistress.\"\n\nThe intensity of the red stain was more evident now that the sun was on her vulva. I did nothing for a moment as I thought of her role as Angelica's servant. How would Angelica act at this moment? How should I push Jennifer further?\n\nI decided to prolong this backward seduction.\n\n\"Jennifer is your ass as open as mine? Has Angelica forced a plug in there lately?\"\n\n\"Oh yes Mistress Sara. I wear a plug almost every day. Do you want to push one into my bottom now?\"\n\nThe idea that Jennifer could accept an anal plug while in such a pose seemed ludicrous but she had taken my suggestion to another level. Angelica had clearly trained her lover.\n\n\"I don't have a plug.\"\n\nShe giggled, \"But you do have the egg. It's there on the nightstand.\"\n\nIt was. I reached over her belly carefully and picked up the toy with the string and button stop. \n\n\"If you could moisten it please Mistress.\"\n\nHer statement surprised me. She expected me to actually push the toy into her bottom! The pose she held was one of the most difficult and I couldn't imagine how she might be able to release her sphincter while in the position.\n\nJennifer shifted and her knees parted a bit. She was opening herself to me.\n\n\"I think I'm ready Mistress Sara,\" she breathed out filled with concentration.\n\nI stopped realizing that she had almost coopted me. I didn't want to do as she suggested I wanted her to do as I wanted.\n\n\"No Jennifer. I want you in a Deadbug pose now. That will get everything nice and open.\" \n\nThe release from pigeon would take a moment and I stood to retrieve the steel dildo that had first entered me last night. The weight of the thing surprised me. I saw my discarded bra, chemise and heels there on the floor by the door and I recalled Thomas' cock inside me. As I walked back to the bed I recalled that Angelica wanted my hair done today.\n\n\"Do I have time to play with you before the stylist arrives Jennifer?\"\n\n\"The woman and her assistant are here already. Mistress wanted you to be with me before they took your day from us.\"\n\nShe saw the heavy faux cock in my hand.\n\n\"Won't you use your clit to fuck me Mistress?\"\n\nNow I grimaced, \"No, and you are a bad girl to even suggest such a thing.\"\n\nI stood beside her and studied her back pose. Her fingers were on her toes of her tall heels with her legs spread wide. I realized that she had given me control. Her desire was evident as I ran my fingers up and down the cocktoy. I wanted Angelica to enjoy this fuck as much as I would.\n\n\"Where is the egg Jennifer?\" then I saw it beside her hip. I moisten the object and moved to sit on the bed edge. \n\nThe egg control seemed automatic as it had begun to vibrate once my warm hand touched it. I bent to first kiss Jennifer. \n\n\"I do want to play with you Jennifer,\" and I pushed the toy into her bottom hole.\n\nShe meowed again, \"Thank you for this Mistress.\"\n\nThen I moved to her pussy and tasted her. The red stain on her tender skin was intense but without a scent or flavor. My tongue rolled softly over her nib and she quivered.\n\nThe sounds this woman made were delightful and sexy but she became quiet as I stayed on her button. \n\n\"How is your little cunt doing now Jennifer?\"\n\nA soft moan, \"Ohh mis, Sara, \"\n\nI moved my fingers to her bottom and lightly rimmed the rose as my tongue licked at her red stained pussy. My other hand positioned the heavy cocktoy at her vagina.\n\n\"I wanted to fuck you Jennifer. That first evening when you met me at the door, I've wanted to be right here and now I am.\"\n\nThe dildo entered her pussy as my tongue ran down her labia lips. Slowly the toy moved in deeper and she meowed again. I saw that the egg button was at her rim. I slowly retracted the small vibrator as the long cock moved slowly back into her pussy.\n\n\"I never imagine I would enjoy seeing lipstick on a pussy but its affect is very enticing,\" I said softly.\n\nMy tongue licked along the side of her clitoral hood as Jennifer's hips began to move with the action of my hand and the metal dildo.\n\n\"Oh Mistress Sara, you seem to know how to fuck a woman. I love how you kiss my cunt. More please. Lick my red pussy clean!\"\n\nThough my mouth was near I paused and watched as the steel cock moved slowly into and out of my captive maid. I kissed her bottom and then began to pull the egg tether from her. She was moving slightly side to side as I fucked her. The juice flowing from her pussy dripped to my fingers.\n\n\"Jennifer you taste so good. Is this my breakfast? Will you be serving me coffee this way tomorrow as well?\"\n\nHer eyes were tightly shut and her brow tense as I watched Jennifer's climax begin.\n\n\"Oh fuck Mis Sara, oh fu, fuck! Push that cock against my clit please!\"\n\nI didn't but I did move and licked her red clitoris as she peak. Somehow she was able to hold her heels with her thigh spread wide.\n\nA deep moan came from her and she droned on for a minute as I played across her wet cunt. I had had her after all these weeks. I had teased and fucked Angelica's Maid Jennifer.\n\nI pulled out the faux cock and stuffed my tongue inside her body. Her pussy juice covered my face. Last night I was fed Thomas' cum and now I ate at Jennifer's pussy.\n\nI heard a soft click and the sound of heels moving away. Maybe twelve feet behind the wall a door closed.\n\nJennifer was still panting from her orgasm as she looked to me, \"She is very happy with you Mistress Sara.\"\n\nThe remaining hours of Sunday were spent with the technical and stylist. Angelica had come to see me just after the woman name Marlene had cut my hair as preparation for the extensions.\n\nShe came and kissed me lightly as I sat in the chair near the Sun Porch.\n\n\"You had a good night, I saw Sara. Now you can select the color and length for your new look. I was hoping for a subtle blonde but maybe you could do a light brown base with golden-blond highlights?\"\n\nThe team began following my nod. I had always like the color of Aniston's hair but I wanted it to run to my shoulder blades at the very least.\n\nAngelica came back a moment and moved to whisper in my ear, \"I wanted to witness last night before I so willfully pushed you regarding the hair. Get them to do exactly what you want, like you did last night and this morning.\"\n\nI informed Angelica that I had to be at my office Monday by Noon. \n\n\"That will give us some time tonight dear. Jenn and Thomas will have the evening off.\" \n\nI watched as she left the room.\n\nAs I sat for hours Jennifer came to set up a screen so that I could watch several movies as the technicians did their work. I giggle when in between the three features was footage from my playing this morning and last night. Seeing the clip of Thomas fucking me was erotic and somehow the two ladies working on my head didn't seem to notice. Maybe since the volume was low. \n\nJust past four they announced that the work was complete. I stood and stretched and then swung my new mane about as they watched. They each reached to touch my new hair and sort portions out. \n\nAs Marlene brushed it she said, \"It is a wonderful look Sara.\" \n\nThe stylist was happy and so was I. For the first time when I looked in the mirror I saw the woman I had become. No fake chest nor a wig. The details had been all in my mind but the long light brown hair finished my look.\n\n\"This is simply amazing! I couldn't understand how much work it would require but girls thank you so much.\"\n\nI needed to get dressed. The Maid Jennifer came in as the two women pack to leave. \n\n\"These are a present for you Mistress. Please follow me up to the suite.\" \n\nShe handed me pair of sexy high heels with four and a half inch spikes. The material was gold colored leather with a three-strap sandal design. They looked gorgeous and uncomfortable. Angelica was pushing hard at me.\n\nI watched Jennifer's bottom as we walked up the stairs. I studied her legs as she reached each step and thought that she must be wearing pantyhose. The dress was quite tiny but the details were special with a sheer mesh neckline and white trimmed sleeves. There was a two-tiered white tulle slip as well.\n\n\"How many of these black dresses do you have Jennifer?\"\n\nShe paused and turned to me, \"I have not counted Mistress. Maybe you would like to wear one for Angelica?\"\n\nThe question caused me anxiety. Was I going to be a prize as Jennifer was? She smirked and turned to continue.\n\nThen she said softly, \"I am sure you will soon Sara.\"\n\nThe simple dropped honorific somehow changed how I saw Jennifer. She and I were equals now in her mind. This morning had changed me and I had not contemplated how my role within this house might unravel. Did Angelica give me to Thomas as a test or to indicate the now secondary role I served. I didn't want to be a servant to a mistress. I had allowed my mind to be controlled by my sexual excitement but I wanted control of how and why I stayed here. \n\nI reevaluated the evening before, seeing the Maid covered with the red paint. Yet there was no sign of it this moment. She had cleaned off the strong red after we had played. Maybe she and Angelica had been together as my hair was extended.\n\nI ran my fingers through the long locks as I reached the upper step. I was happy with this present but wondered whether I would regret the arrangement. Angelica seemed to be manipulating me yet that was what lovers do for and to one another. I decided to push back subtly to see how Angelica reacts. \n\nHer actions were self-indulgent as I now saw her need to control me. Would she acquiesce to my commands? Could I dom her and call her my bitch? I paused and watched Jennifer continue as I startled myself with a new thought. \n\nI did not want to command her and that was it. I didn't see a DS relationship working. Not when she had these other lovers.\n\nJennifer realized that I had stopped and turned, \"What is it Sara?\" \n\nShe walked back the five paces as I turned to look out the window to the driveway.\n\n\"Oh, nothing, I just thought, never mind Jennifer. There's Thomas,\" he was tending to a vehicle I did not recognize.\n\n\"Oh that's the car of Mistress Cora. She is here to meet you Sara. I think her new man friend may be with her. He's a bit younger than Sergi. You remember him?\"\n\nI did recall meeting Cora and her 'charge' named Sergi. At that moment I thought clearly. Angelica was planning another evening but with new sexmates for me.\n\n\"Jennifer should I anticipate Cora's new friend stuffing his prick into me tonight?\"\n\nShe slyly smiled and said, \"Come Sara, we need to dress you and slip those heels on your lovely feet.\"\n\nHer manner told me that I was to be on display and would not have an evening alone with Angelica. I had enjoying being fucked by Thomas but I did not want a stranger in my body. Maybe I was over reacting. I decided to prepare to be their toy tonight. I might stop the party and demand that Thomas bring my Audi from the Garage. I could also fetch it myself if there was resistance from the group. \n\nWhen I had completed my shower Jennifer showed me the dress. It was a blue sleeveless Halston with a full skirt.\n\n\"You should wear the tiered slip for the proper affect.\" \n\nI wore a fitted ivory camisole without a bra as I stepped into the slip. She prepared the short dress. The mid-panel hem sloped up emphasizing the crotch.\n\n\"Is this really a antique dress Jennifer?\"\n\nShe smiled and help me settle the rear collar and clasp, \"No Sara, its just the label name. \"Heritage by Halston\". He died long ago but the label continues.\"\n\nThe heels were tall but surprisingly comfortable. \n\n\"Mistress wants you to wear this pearl choker too Sara.\"\n\nShe fastened the four-strand necklace about my neck and turned me. She looked at me and brushed the hair away from my face and kissed me. Her tongue moved passed my lips.\n\nI moved away, \"I think I may not be ready for all of this Jennifer. I like you, and Thomas but the treatment and assumptions Angelica makes do not make me comfortable.\"\n\nShe held me and said, \"You are hers Sara, that is what she expects. I never question anything she asks of me. There is safety here and you will be cared for just as I am.\"\n\nThat made it clear, \"Tell your mistress that I had to leave.\"\n\nI walked down the backstair to avoid the guests and Angelica. I turned at the Hall and stepped down the two steps into the Garage. These heels were shocking for the comfort, but driving would be an issue. The Audi was there in the open bay but now I realized that I had misplaced my phone and forgot my purse. Maybe the key was in the ignition.\n\nOpening the door I saw my black purse and the key.\n\n\"Going to leave without saying Goodbye Sara?\" it was Angelica.\n\nShe came to the driver's door, which was still open. I stood about to get in.\n\n\"That blue dress and the heels really show you off. Please come back inside Sara? Come and meet my guests.\"\n\nWe were inches apart now and I could smell her perfume, the sexy scent aroused me. She looked beautiful but I looked down.\n\n\"I don't think this is right for me.\"\n\nShe giggled, \"You mean the color blue?\" Coyly she came and hugged me.\n\n\"You know what I mean. I had hoped that we, I mean I wanted you this morning. Why did you send Jennifer? I did what you wanted last night.\"\n\nShe took my right hand, \"I think you confirmed that you were capable of allowing another to lead you, but I also think you enjoyed Thomas as well as following my command.\n\n\"Now you want to just run off? Without even a goodbye?\"\n\nShe held by bare arms as she moved to kiss me but I turned away.\n\n\"Now you want me, why not come to me this morning instead of having Jennifer,\"\n\nShe interrupted me, \"Because I want you follow me, not the other way.\"\n\n\"Listen, I may have been too aggressive but I thought you wanted to be with me Sara.\"\n\nI looked to her face with a tear forming in my eyes.\n\n\"I did Angelica, you not your maid. After this morning I wanted to be with just you tonight. Two women, no Thomas, no Jennifer and certainly not a new fuckmate with Cora.\"\n\nAs I considered her and the evening ahead I wondered about Cynthia for the first time. \n\n\"I think I should leave now.\"\n\nShe didn't let go of my arms, \"The hair is magnificent.\"\n\n\"Yes this,\" I lifted the locks, \"is now me. That is a special thing you did. But I wanted you Angelica not the hair.\"\n\nShe moved quickly and kissed me. I responded to her and our mouths opened.\n\nI turned to stop the kiss, \"No Angelica, you want me now only because I am leaving.\"\n\nShe was hurt and tears were on her cheeks as she released me.\n\n\"Maybe I screwed up but I wanted the best for you Sara, for us.\"\n\n\"Then send the others away, now and I will consider staying tonight. Only you and me here Angelica.\"\n\nShe stepped half a foot back and considered my statement.\n\nWe both looked into each others eyes as the seconds passed.\n\n\"You see Angelica, it's your requirements, and you may truly love me but I just can't do the spectacle and the sexual group thing right now.\n\n\"I wanted to be loved not just fucked,\" I said as I turned back toward the Audi door.\n\n\"Maybe you'll think this over and come back to me Sara,\" she said as she moved closer.\n\nI slipped into the seat and turned the key but the engine did not start.\n\nI needed more than she could provide and therefore I was leaving and Angelica still wanted me. \n\n\"I don't know, I could, I might, but tonight I must leave Angelica. You still have Thomas, Jennifer. Shit you've got another stud and Cora as well,\" I tried again and the engine started. \n\nShe bent to kiss me. She slipped down to the doorsill and her hand reaching to hold me a moment.",
        "\"Please stay, I will send them away in a few hours and then it will be only you and me Sara.\"\n\nBut I had to leave now. She had fouled the idea of us and I had to get away.\n\nShe stood and closed the door, \"Call me soon Sara.\"\n\nOn the way back to my home I cried. In the past day I had been fucked and played with. I was tried and want to sleep, alone and unencumbered. I would think better and consider everything with some rest.\n\nThe End of part eighteen\n\nTo be continued . . ."
    ],
    "authorname": "MadQuill",
    "tags": [
        "lesbian sex",
        "lesbian"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/a-year-ago-ch-18"
}