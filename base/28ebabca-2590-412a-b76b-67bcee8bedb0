{
    "title": "Prank War",
    "pages": [
        "Literotica 2018 April Fools Day Contest entry. \n\nVotes would be especially welcomed by all authors competing as it takes so many just to be eligible, much less win.\n\nAll on-screen sexual encounters in the following (when they finally do occur) are between consenting adults over the age of eighteen.\n\n*****\n\nAs a college junior, I had the poor taste to fall in love with a pair of lesbians. Well, what horny, red-blooded, all-American, college-aged, heterosexual guy doesn't?\n\nExcept, the problem was, it wasn't just lust. \n\nI don't know. Maybe it was at first...\n\nAfter \"wasting\" my junior high and high school years with a girl who accepted a dinky little ring graduation night, only to return it before climbing on the back of a motorcycle between a musician and his guitar case headed west just a month and a half later, I should have learned my lesson. But, I didn't.\n\nI met Wendy just before my college experience should have kicked off. I mean, the classes began right on cue. But, the whole \"party hard and fuck anything wet, willing, and able\" just didn't pan out since I had bounced from Lori to Wendy a month later.\n\nAlthough, Wendy was plenty wet, willing, and able by herself. At least at first.\n\nAfter dating for our entire freshman year, we moved in together our sophomore year in a little dinky efficiency just off campus. And I pulled that same dinky ring out of my sock drawer to offer her at Christmas. She lasted a little longer than Lori, five months as opposed to Lori's month and a half.\n\nBut, she dropped not only the class she had talked me into taking with her but out of college completely to join the Peace Corps. And mailed my ring back to me.\n\nPeace Corps? Maybe it was Greenpeace. Peace something or whatever peace anyway. Whether she was off in the jungle being gangbanged by a tribe of aborigines or off in the ocean milking sperm whales or just whatever the fuck didn't really matter to me. She was gone and I was on my own.\n\nAnd I was determined that this time I had learned my fucking lesson and would spend some time just exploring the rumors of that wild college experience everyone always brags about once I climbed back out of the alcohol flavored abyss I swan dove into that summer.\n\nAnd I thought I'd spotted my first choice of a target when she darted into the class I'd been supposed to take with Wendy five minutes late, wearing a lycra sports bra and bike shorts combination. With her dark hair up in a ponytail and beads of sweat dotting her exposed skin, including the single best-defined set of abs I still have yet to see, she had obviously come straight from a workout.\n\nThere were only a few flaws that kept the vision from being perfect. I didn't too much mind that she was a good half a foot shorter than me at five feet if she was even that tall. Nor did it bother me that she was roughly half of my own stockily muscled one hundred eighty pounds.\n\nBut, she had little, barely there, probably B-cup, breasts and I tended to prefer a woman we had to worry about one or the other of us getting a black eye when she rode me \"cowgirl.\" Also, she had these sparse, dark, baby fine hairs dotting her arms and upper lip. Not that I had a lot of room to talk with my own thick brown pelt, but I tended to think a woman should be hairless except the mane on her crown, her eyebrows, and her crotch, or at least appear to be.\n\nStill and all, I gave her a healthy eight-point-nine on my personal doability scale. She might have broken a nine if the \"smile\" she gave me when I pulled my left foot out of the desk in front of me, the one Wendy probably would have sat in, to allow her to take a seat hadn't been a bare twitch of the lips, hardly worth the name.\n\nThe blonde bow-bitch with Greek letters stamped across tits her step-daddy probably bought her next to me noticed the petite brunette beauty when she walked in as well. Although, it was a bit hard to know if it was lust or hatred that she'd just become the second best looking girl in the class that prompted her to snap off two of her fake nails clawing the desk when Donna walked in.\n\nThe \"instructor\" for the \"class\" was a graduate student Teaching Assistant and one of those enamored of the whole cooperative learning \"group think\" ideal. Which just pissed me off.\n\nWhat the fuck is so wrong with just covering the material and letting the best man win?\n\nI don't know. Maybe if I hadn't been so annoyed at yet another ridiculous group project where my grade would depend on the efforts of the others involved, I might have been just a little (or more than a little) pleased at the idea that I might be in a group with this stunning brunette. And get a chance to get to know her better.\n\nLike, maybe, the size, color, and shape of her nipples. Whether the carpet matched the drapes or if she had gone for the \"hardwood floors\" look.\n\nBut, I loathed group work. And even the idea of being in a group with Donna didn't phase me as I glared at the TA that had inflicted it on us. For sixty fucking percent of our semester grade, no less.\n\nThe guy in front of the bow-bitch to my right was probably forty if he was a day, and I could smell the colitas wafting off him from where I sat. As soon as the instructor shut up about the group stink that was being perpetrated, Mickey turned and gathered Donna, me, and the bow-bitch by eye and half-asked, half-stated that we would be a group.\n\nI didn't give a shit and shrugged that I was fine with it. Donna was a bit slower and peered at the three of us, me a bit longer, without agreeing or disagreeing before a big bruiser managed to plow his way to her.\n\nI'd sort of been aware of the big, thick-necked defensive tackle for the football team and a couple of his teammates on the other side of the classroom. And, I'd certainly been aware that at the same time Mickey turned and asked/told us we would be a group, Beevo had stood up and started plowing his way through the desks rather than walking around them like a sane and rational person might.\n\nAnd, I'd been pretty sure Donna was his target, although I didn't yet know her name.\n\n\"We want you to be in our group,\" he stated as he stood there with his arms folded across his chest to make his biceps bulge even bigger than they were, obviously talking to Donna.\n\n\"Uh, thanks,\" Donna said with that same thin-lipped smile she'd given me when I cleared her seat of my foot. \"But, I've already got a group.\"\n\nNaturally, Beevo tore his eyes away from Donna to give Mickey a bare glance and then stare me down. I was dimly aware of Mickey and Donna both glancing at me as I shifted and locked eyes with the big man on campus and collegiate football star and wondered just how this was going to go.\n\nThe large chested blonde bimbette chose to stand up and push her bubble tit against his bicep.\n\n\"Actually, I think I would like to be in your group,\" she said.\n\nHis eyes ticked away from mine to her, just enough to break the deadlock. But, it wasn't her eyes he was looking at. Nor was it Donna's eyes he looked at when he gave her one last final glance before agreeing and leading the bubble-chested, bubble-brained blonde back to his friends who had Cheshire grins plastered all over their faces.\n\nI remember shaking my head and thinking if that wasn't a gangbang in the making, then I didn't know what one looked like.\n\n\"I'll be your fourth,\" a voice said from behind my right shoulder.\n\nI glanced back and up to see a redhead wearing a hemp woven shirt and more hemp jewelry than I could shake a match at. And, she obviously wasn't looking at either Donna or myself.\n\nMy eyes crossed Donna's and our eyes shared a smile that never reached our lips.\n\nIt turned out that Marni was a \"professional student\" in addition to flower-child and working on her third bachelor's degree. Mickey was a semi-retired postal worker (which I suspect is code for couldn't pass the drug test) finally using his old unused G.I. Bill after his marriage foundered in the wake of his leaving the U.S. Postal Service. And, yes. The two of them hit it off like a bong and a lit match.\n\nDonna was a pleasant surprise, and I think I was for her as well. Both of us were used to carrying groups that would have been content with a C and ecstatic for a B as we pushed on for an A. And I think both of us were relieved to have someone else in the trench with us while our other two group members were a tad more interested in sharing a toke and a poke on their incessant munchy runs once the minimum was done.\n\nDonna and I also complemented each other well. I am something of a speed reader and have a borderline eidetic memory, but tend to get bored and become a little fragmented and tangential and it's an effort to make myself focus down and give projects a professional polish instead of adding more. Donna, on the other hand, is profoundly dyslexic, a bit worse with numbers than words, and is the poster child for laser focus and determination. She has had to be since, for whatever reason, she'd determined she wanted to be a newspaper journalist.\n\nAnd, yes, my mind still boggles at just how someone who knows they are profoundly dyslexic would be so determined to make a career of reading and writing. And, I confess I've always been just a little in awe of her unwavering determination since I switched majors four times when I got bored with what I was studying.\n\nBut, for our project that Fall semester, I was pretty much the research grunt, taking some of the pressure off of Donna to spend so much time in the stacks in the library. And she held my leash to keep me from including more than we really needed to pull our project up to a solid A.\n\nThat was how I met Leah, Donna's \"roommate.\" Although it took me a little bit to piece together just what relationship \"roommate\" was a euphemism for.\n\nI was dropping off a stack of copies from a research session at Donna's apartment and a girl who was definitely not Donna opened the door.\n\nDonna who?\n\nThe girl standing in the doorway was a cornfed country girl a good couple or three inches taller than Donna, with a good thirty or forty more pounds distributed in all the best ways, with sandy blonde hair and a squared body beneath a long-sleeved flannel and jeans that was both obviously female and just as obviously strong.\n\n\"Uh,\" I managed intelligently as I tore my eyes away from her to peer at the number on the door and stepped back a half step to double check the doors on either side. \"I was looking for Donna.\"\n\n\"Ah. So, you must be Ben, then.\"\n\n\"Um, yes,\" I managed, smiling that this lovely knew my name. \"I'm sorry, but if Donna has mentioned her beautiful friend, I don't recall.\"\n\nShe snorted, and her eyes sparkled, but the corners of her mouth didn't so much as twitch.\n\n\"I'm Leah,\" she introduced herself. \"Donna's roommate. If you have something to drop off, I can take it and make sure she gets it.\"\n\nI would much rather have waited to hand the packet to Donna myself. Not least so that I would have a little time with Leah. But, something in her manner told me that wouldn't be welcomed.\n\nIt took four weeks of seeing both of them and flirting with both of them before they finally applied a brick to the side of my head as gently as they could manage. Which was more than a bit strange for all of us as I was the first person outside of their lesbian acquaintances they had purposefully come out to more than just a passing comment to a guy they were trying to play off his coming on to them. A comment that could have been played off as a joke if push came to shove.\n\nOnce it penetrated that they actually weren't joking with me, I toned down the flirting and began looking elsewhere for some female companionship. Unsuccessfully, but I didn't want to be one of those assholes who pushes, certain that the female in question only needs his masculine fabulousness to persuade her that her lesbianism is just a phase.\n\nAlthough I admit, I did spend many a hot sweaty winter night beneath my sheets, alone, as I imagined just how those two might be warming themselves as the weather chilled.\n\nOur semester wrapped up, we got an A on our project (and the course), and that should have been that. Donna and Leah should have faded over my event horizon just as Mickey and Marni did.\n\nEven being invited to stop by and have a few drinks with them to celebrate our successful project shouldn't have been a big deal. After all, I'd been to their place more than a few times in the final stages.\n\nHowever...\n\nHowever, my sense of humor decided that it would be the perfect set-up to fuck with Leah a little bit in response to her constant harping anytime I'd had to borrow their restroom while I was there.\n\nAs time wore on that evening, and more than a few drinks were imbibed on all sides, I waited patiently for just the right moment. Finally, Donna excused herself to be rid of the alcohol she'd taken in to make room for more.\n\nWhen she returned, I was on my feet almost before she regained her seat. To the usual jeers from Leah, and less ribald comments from Donna.\n\nIn their bathroom, I did make use of the facilities. But, I also unwrapped the layers of Saran Wrap around my thigh and carefully molded it to the rim of the toilet bowl, completely covering it, before folding the seat and lid down and cutting away the excess hanging out with my pocket knife.\n\nAfter washing my hands, I took one last look to make sure it wasn't too obvious what I'd done from the door before rejoining the party.\n\nIntent on proving that she could handle her alcohol better than any mere man, Leah took so long that I was about half afraid that I would catch Donna with my prank instead of Leah.\n\nBut, eventually, Leah stood up and began making her way to the bathroom.\n\nDeciding discretion was the better part of valor, I also stood and began making my goodbyes to Donna and edging toward the front door.\n\nApparently, despite giving me flak about not sprinkling on the seat, Leah must not have checked too carefully when she went in after me because a shriek followed by a string of obscenities was all the proof I needed that my trap had worked. \n\nAnd it was time for me to get the fuck out of there.\n\nWith one last goodbye to Donna, who had been clued in that something had happened if not just what and started to smile, I fled down the stairs, two at a time, and made my way to my car at a jog.\n\nAs I was pulling away, I glanced up to see Leah in the doorway, giving me a single finger salute, her other hand, I imagined, being busy keeping her pants up. I honked and waved and cackled all the way out of their parking lot.\n\nI was still smiling when I arrived at the little roach motel I'd continued to live in when Wendy decided to follow the winds.\n\nThe phone was ringing inside. I answered it.\n\n\"Oh, my God,\" Donna laughed in my ear. \"You have no idea just what you've started.\"\n\nI would have answered, but she handed their phone to Leah.\n\n\"Oh, yes,\" Leah said, obviously trying to keep from laughing herself. \"You have just no idea what you've just started, Ben. I may rest from time to time, and I may pause to eat. But, I will not falter, nor will I be swayed from my vengeance, until I've paid you back threefold.\"\n\nUnlike Donna, Leah hadn't had the patience for the whole college ordeal, choosing instead to work blue collar odd jobs. So, to hear her waxing so eloquent in that West Texas country twang just made me laugh all the harder. While I was trying to get my breath back to actually respond, Leah handed the phone back to Donna.\n\n\"You are in so much trouble, mister,\" Donna said. \"Have a good holiday. And make sure to rest up while we are on break. Because I assure you, you aren't going to get much when we get back. She takes her pranks seriously. Oh, and Ben?\"\n\n\"Yes?\"\n\n\"Thank you,\" Donna said softly before she hung up.\n\nI considered calling her back, at the least to wish them a happy holiday as well. But, I'd done that as I left their home. And I was just pleased to have our brief acquaintanceship end on such a positive note.\n\nI was as certain as I could be that I'd seen the last of Donna and Leah that I ever would. And although I would miss them, a part of me was just as glad our relationship with each other was over since they had made it very obvious that sex was never, ever going to be an option.\n\nStill, I liked them a whole lot better than most people I knew and I was a bit wistful that we'd never have the chance to become better friends.\n\nI was disabused of that notion once college was back in session on my first evening back at the dojo where I studied TaeKwonDo and Hapkido. After a good sparring session, I walked out to my car to find it had been completely shrink-wrapped and the words \"Welcome back, Sweetie\" drizzled on the shrink-wrapped windshield in honey.\n\nI had no idea how they had found me. But, as soon as I saw it, I had a pretty good idea who had done it. Good enough that the only question left was if Leah had acted alone or if I would need to include Donna in my retribution.\n\nTom, the owner-instructor, was enough of a friend that he didn't insist on calling the police, but did allow me to watch the footage from his security camera. And, Donna was a full participant tossing the roll of shrink wrap over the top of my car to her only slightly taller lover and then bending down to catch it as Leah rolled it underneath.\n\nI considered myself well repaid for my own prank. \n\nAnd, it gave me a warm feeling that they thought enough of me to go to so much trouble. First finding me rather than letting me quietly disappear from their lives, and then the actual effort involved in shrink-wrapping the car.\n\nAnd, too, there was the message smeared on the shrink wrap in honey that I was really trying hard not to read too much into.\n\nBut, above all, there was a deep-seated moral imperative not to let things stand as they were. I would pay them both back. I wasn't sure just how. But, some things just have to be done.\n\nOur friendship burgeoned and grew over the spring semester as we would pull pranks on each other and then laugh with each other, first over the phone but then sitting in their living room over a few beers.\n\nI think, though, my favorite of their pranks on me from those college days was when they invited me to meet them at their favorite bar. Which in retrospect I should have suspected would be a lesbian hangout.\n\nWhen I walked in, a rather tall and muscular woman with one side of her head shaved, stuck her arm out in front of me to bar my entrance.\n\n\"I think you're in the wrong place, sugar britches!\"\n\nAt her loud call, everyone stopped whatever they were doing and turned to stare at me. Even the music playing stopped.\n\nAnd as I looked around, I realized that every single face turned my way was female.\n\nJust as I was about to tuck tail and slink away, I heard a familiar raucous laugh.\n\n\"Damn it, Leah!\" I yelled grinning. \"I am so going to pay you back for this! And you too, Donna!\"\n\n\"I didn't have shit to do with this!\" Donna yelled back, laughing with her lover now that jig was up.\n\n\"Oh, yes she did,\" the gal behind the bar called.\n\n\"Hey!\" Donna yelled as the rest of the room burst out into laughter.\n\nNot everyone was quite so welcoming, no. But, enough were, once I accepted the beer the owner and bartender served me on the house, that I eventually became almost as much of a fixture as Donna and Leah over that summer and the following fall.\n\nAnd, damn if quite a few of them didn't feed in with those two pulling pranks on me!\n\nI was a little more cautious with the others. Donna and Leah bore the brunt of my return fire despite their usual protests that they didn't always have anything to do with the shenanigans I fell into.\n\nI didn't have much luck with finding a woman who was wet, willing, and able with me. Which only makes sense since I was hanging out with women who liked women about as much as I did. And found about as much pleasing about men as I did as well.",
        "Although, there was that one tall, sexy redhead... But, Donna and Leah warned me off her. Not that I would really have minded being the next notch in her lipstick case. But, oddly since we weren't actually having sex, I didn't want to risk disappointing Donna and Leah.\n\nAnd it wasn't like they weren't encouraging me to find someone else.\n\nNot every night that we went out together was to their hangout. Sometimes, not often, but sometimes, we would hit up one of the dance clubs on \"Ladies Night\" so they could drink for cheap. And I would wander over and give them a little bit of cover from the panting college guys out looking for the ladies on \"Ladies Night.\"\n\nOn those nights, Donna and Leah would try to get me interested in some girl they noticed. And, those girls were usually pretty exemplary of the higher end available on those nights.\n\nBut, except for the whole \"no sex\" thing, I was pretty well content to hang with the two who had become my best friends.\n\nIn January, something happened that would cement our friendship into something that would last beyond college.\n\nI stopped by, probably to pull a prank, and ran into Leah coming out and looking awful.\n\nAnd, pausing to vomit in the plants just off the stairs.\n\n\"Leah?\" I asked. \"Did you two decide to have some fun last night without me?\"\n\n\"No,\" Leah said, obviously miserable. \"Flu, I think. Donna has it, too. And even worse than I do. I was going to go to the pharmacy to get some medicine for us since I'm in a little better shape.\"\n\nI ended up chasing Leah back inside and going to the pharmacy for them. And the grocery store. And staying with them for three long days, catching catnaps on their couch between nursing them, holding their blonde and brunette manes while they vomited, cooking bland broths and Jell-O for them, and cleaning up their sick when they couldn't even keep those down.\n\nPerhaps naturally, about the time they started to get well enough to fend for themselves on that third day, I started feeling unwell. And slunk off to my cave to wait to die or get better. And after a bit, I really didn't much care which.\n\nHoly shit! When Donna and Leah found out, you would have thought I had strangled their puppy!\n\nI have no idea just how they managed to find me. I wasn't listed and they'd never been to my little roach motel. I'd always gone to them or we'd met out somewhere.\n\nNeither of them was big enough to kick in my door by themselves, but I think they were giving it a serious tandem try when I managed to crawl out of bed and wobble unsteadily to the door.\n\n\"You selfish motherfucker!\" Leah announced her displeasure as she shoved the door open and knocked me on my ass.\n\nDonna was, as usual, more reserved. But, no less unhappy with me.\n\nWhether I wanted them or not, I got not one, but two nurses fussing at me.\n\nWhich was probably just as well since I got a lot worse before I got better.\n\nWe probably should have taken me to the hospital or at least a doctor, but we were young and stupid and didn't really understand just how dangerous the simple flu could be.\n\nAn interminable time later (that turned out to be seven days according to the calendar once I could check), I came out of my stupor enough one day to realize that I wasn't alone in my bed.\n\nOr, perhaps that was just a fever dream since by the time I was all the way awake, Donna was standing on one side of the bed and Leah on the other, with both of them looking like a whole lot of bad road piled in one place.\n\n\"You two look like shit,\" I rasped as I struggled to sit up. My entire torso felt like Tom had me do a hundred leg lifted crunches while he whacked my gut with his shinai on the down.\n\n\"Look who's talking, monkey boy,\" Leah yawned.\n\n\"Are you back with us, Ben?\" Donna asked.\n\n\"Uh, yeah,\" I said slowly. \"Why? Where else would I be?\"\n\nDonna and Leah shared a look over my head which could have meant anything or nothing.\n\n\"Well, in that case, I really, really need a shower and to change clothes,\" Donna said.\n\n\"And some real sleep,\" Leah yawned again. \"And you should definitely wash the stink off you. You smell like a teenaged boy's locker room.\"\n\nI couldn't really remember just what all might have gone on since they tried kicking in my door and only spotty memories from the days before that. But, I had the feeling that I owed them as I followed them out. That embarrassed me.\n\n\"Hey, guys,\" I said, causing them to turn back. \"Thank you.\"\n\n\"Yes, well,\" Leah shifted, obviously as uncomfortable as I was. \"You just remember if you ever pull this crap again, disappearing when you need help, I'll kick the ever-loving shit out of you, dickhead.\"\n\nDonna reached out and, in a rare gesture of physical affection, laid her hand on my arm.\n\n\"I'm glad you're feeling better, Ben. But, please, don't pull away from us when you need us again.\"\n\nFucking awkward. I mean, what the hell do you even say to that?\n\nIt took us about a week for things to return to normal, hanging out at the bar, pulling pranks on each other. But, even then, I knew we had reached a point where there could be no going back.\n\nDon't ask me how I managed it because I'm still not quite sure. But, despite having five radically different majors, I managed to graduate that May along with Donna who had never wavered in her plan. We had our celebration at the hangout, of course. How could we not?\n\nAnd I was awarded a certificate that night that was supposed to be a joke but meant more to me than my degree. Mollie, the owner of the bar, and several of the girls (not all, but many) awarded me with a framed paper certifying that I was an honorary lesbian.\n\nI know it was supposed to be a joke, one final prank as we looked ahead to our future. And, I did laugh about it with all of them as we posed for a picture with it.\n\nBut, I was touched, too.\n\nDonna left town and moved seven hours away to pursue her dream by working for a big paper in Dallas. Leah, of course, followed her.\n\nAnd I was once more left behind. Alone. But, it was different this time. Maybe because I had known all along that I was just sort of an add-on to their relationship and would never be as important to them as they were to each other. Maybe it was as simple as that we'd never had sex and never would.\n\nOr, maybe I was just growing up and recognized that part of loving them meant letting them go so they could continue to grow.\n\nFor myself, I was in a conundrum. I'd managed to graduate with a bachelor's degree in a field that didn't mean a damn thing unless you used it to springboard into a graduate degree. And I was more than a little tired of being a broke college student.\n\nI managed to luck out and find a job at a local detention facility using my degree.\n\nHowever, I made a critical error in judgment. The overnight shift paid a shift differential and I went for the money despite it meaning I wouldn't be interacting with the inmates/clients. And that, by itself, would have made it harder to segue into a casework or counselor position and continue climbing the ladder.\n\nThen, too, there was my sense of humor which, as usual, got out of hand when I was bored. And, since my \"job\" was evenly split between sitting on my ass and watching video and sound monitors and walking around the building to physically look in on the sleeping residents to make sure they actually were sleeping, I was pretty much always bored.\n\nI admit I may have taken my little games just a little too far when I reprogrammed the phones so that my direct supervisor and his supervisor, both named Richard, showed up on the crystal display as \"Dick calling\" and \"Lil Dick calling\" every time they used it. At least, looking back, I'm pretty sure that was the one more than any other that sealed my fate that I would never be able to move even laterally while I was with that facility.\n\nOr perhaps it was the photoshopped \"picture\" of the Chief and Assistant Chief that made the rounds of the rather attractive female Assistant Chief wearing a gorilla suit and bending the older Chief over his desk as she pegged him...\n\nDespite the warnings from my own romantic past, and despite the difficulties in meeting anyone when you sleep while the world around you is awake and vice versa, I did manage to meet someone.\n\nI wish I could say that I loved Jeannie, but I honestly don't know that I wasn't just tired of being alone. And we were pretty well compatible in bed. Which is to say that she would let me do whatever I wished to her body whenever I wished.\n\nHowever, whenever we weren't fucking, we were fighting. And sometimes when we were fucking, it was a little difficult to tell the difference.\n\nDespite even that warning, I pulled that same dinky little ring out of my sock drawer and offered it to her after about a year and a half. Third time's the charm, right? Maybe this time, I would finally have the whole white picket fence with two-point-five children and a mortgage that we would both struggle for thirty-five years or more to pay that was supposed to be the hallmark of a successful person.\n\nI even shelled out for a starter house in a neighborhood that wasn't the greatest but wasn't so bad as it might have been, even if the house was an old ramshackle building best described as \"a fixer-upper.\"\n\nI have no idea what happened, but one evening six months before the planned wedding, I woke up to an empty bed and that stupid ring sitting on my nightstand. When I went to her work, she had quit. When I went to the apartment she had kept despite spending most of the time one or the other of us wasn't working with me in the house that was supposed to be our home, there was a make-ready crew working on it. I still have no idea where she went or why she left and probably never will.\n\nBut, I knew what was important. I knew that it would be the definition of insane for me to ever try again. Even if I could find a woman that wasn't looking for a second ex-husband and step-father for her children from the first marriage.\n\nDonna and Leah... And, yes. I'd kept in touch with Donna and Leah. Donna and Leah were supportive in their respective ways. \n\nDonna assured me that I was a good man and would eventually make some lucky woman a good husband if I just didn't give up and set me up repeatedly, over my objections, with dates when I would make the drive out to visit them and could stay more than two days. \n\nLeah made whimpering and bawling noises and otherwise poked fun at me. And, of course, pulled pranks on me. I'm still trying to convince a certain gay men's magazine that I really, really do want to cancel my subscription that Leah renews every year on my birthday and the top of my closet is full of various sex toys, still in their packages that I didn't order, don't really want much less have a use for, but can't quite bring myself to toss in the dumpster.\n\nI \"worked\" at my job and brought home my paycheck to spend most of it on a house that I didn't really want or need but couldn't get rid of. I spent my mornings either working out or teaching myself all the myriad aspects of home repair. Around lunch, I would adjourn to the room with a small network of three computers to watch an array of porn that was gradually more and more explicit in nature and take care of my basic need as best I could without a woman in my life before sleeping for a few hours and doing it all over again.\n\nAt least once a month, I would make the trip to visit Donna and Leah. I think those visits and the phone calls we exchanged when I couldn't visit, and, of course, our little prank war were all that kept me sane.\n\nAnd, I like to think I helped them as well. Both had \"come out\" to their families and neither family had been accepting. Leah's parents and three brothers had disowned her. Donna was an only child and her parents were in denial and kept asking when she was going to \"settle down and give them grandchildren.\"\n\nThey didn't go out of their way to to make a big deal about it at their work or around town, but they were a couple and saw absolutely no reason to hide it anymore. And I think it cost them. I'm pretty sure that quite a few of Leah's jobs she actually moved on from because they couldn't accept that she was gay. And, I'm positive that Donna should have moved up rather than having other, less capable journalists who just happened to be straight, or at least closeted, promoted around her.\n\nSo, in one way, it wasn't really a surprise when I opened my door to a knocking one evening to find them on my front porch with everything they owned in the bed of Leah's pickup, although they hadn't expressly mentioned anything about it before they showed up.\n\nHome is where, when you show up hungry and cold, they don't hesitate to take you in, warm you, and feed you.\n\nThe house I'd bought was a two bedroom and I didn't hesitate to move their stuff from the bed of the pickup into the one that had originally been intended to be the nursery. They assured me that it was just until they could figure something else out. I just shrugged and told them it was theirs as long as they wanted it.\n\nDonna had given up her dream of a newspaper Pulitzer and turned her sights on a novel. Supposedly. If she ever managed to get more than a page before deleting it, I never saw or heard anything about it. Other than that, she spent a lot of time working out. At least she seemed to since about all I ever saw her in was work-out clothes and she was usually just drenched in sweat.\n\nLeah managed to pick up a part-time gig working behind the bar at their old hangout that had been sold and, while it was still a lesbian hangout, none of the old crowd was around anymore. Realizing it wasn't enough, she also managed to land a job for an auto-parts store delivering parts to garages. I thought she could do more but she seemed happy. And it wasn't like my own college degree was paying big dividends.\n\nProbably the biggest fight we ever had was when I refused to accept their offered rent payment. I didn't need it since I'd already been covering the house payment and utilities and everything without them and they weren't noticeably costing anything more except in the groceries. So, we compromised that they would buy the groceries and take care of feeding us and that would be their contribution.\n\nMistake!\n\nDonna had gone to the vegan end of the spectrum and had managed to convert Leah as far as a vegetarian. The first week, I suspected an elaborate prank. And with good reason as our little prank war had resumed from their second morning waking up when I'd loaded the shower-head with a fake blood pack I'd been intending to use on my next visit.\n\nI mean, I knew Donna was always a finicky eater whenever we ate together and Leah had been less and less meat-oriented over the years. But, I hadn't expected them to expect me to eat like that.\n\nMy ancestors didn't claw their way to the top of the food chain for me to eat like a rabbit, damn it!\n\nI didn't say anything, however, but just quietly resumed purchasing my own groceries. I ate what Donna prepared when I couldn't avoid it, but I would fix my own carnivorous meals when they weren't around to intervene.\n\nI admit, Leah got me good the day I came in from working in the yard and opened the freezer for a couple of hamburger patties to be greeted by a coiled diamondback rattlesnake with its mouth opened and fangs extended as if it were prepared to strike. It had to have been Leah since even without her vegan tendencies, Donna wasn't a fan of Herman as he began disappearing from the freezer periodically to reappear where and when least expected.\n\nThe second month they were there was the second biggest fight we'd ever had when they came home in the evening to find that I'd taken it on myself to switch our rooms. It just made sense to me that with two of them and only one of me, they should have the bigger room, and bigger bed. And, too, that room was at the back of the house with only two windows that opened into the backyard where the smaller front room had three windows some peeping tom could investigate hanging out into the front yard.\n\nAnd, in my defense, I had tried to talk to them about it and been ignored.\n\nHowever, Donna especially seemed bothered by the fact that I'd been handling their things in their absence. Leah eventually gave me some back-up. But, we reached an unspoken consensus that I would never again enter their room, their new room, without their being present.\n\nI think the most difficult, for me personally, was on my nights off. While I did enjoy spending time with them as they sat on the couch together and I lounged in my Papasan, once they went to bed, it was hard.\n\nI mean difficult! It was difficult.\n\nWell, in honesty, it was pretty hard, too.\n\nDonna and Leah had both aged well and looked even better than they had as the college coeds I'd first seen. More than that though, I knew them better. And if anything, my love and desire for them had just grown as I came to know them more.\n\nPerhaps not coincidentally, my most elaborate pranks on one or both of them occurred during my second day off, Monday. Or perhaps it was just that I had the time and energy while they were out of the house to do a more elaborate setup and it wasn't really letting off some of the sexual pressures that were getting to me in a safe way.\n\nTime went on, as it has a tendency to do, and they eventually gave up even the pretense that they would be moving back out. At least, until Donna sold her novel. But, even there, they often made jokes about having a back-house behind their mansion to keep me in as a groundskeeper, pool boy, and handyman. \n\nOne day as I was sharing the laugh while walking towards the shower to clean up after the pair had gotten me with yet another shenanigan, I noticed their bedroom door was standing open on the way past.\n\nThere, sitting on the other side of the bed in a rocking chair was a huge, life-sized stuffed teddy bear I'd pretty much forgotten about.\n\nI had never really known just which of them Wittgenstein belonged to. He'd just always sort of been there from even before I had come across their event horizon. And, I'd largely forgotten about him as their bedroom door was generally only open for one or the other of them to walk through it.\n\nBut, seeing him there gave me an idea for the ultimate payback prank that would once and for all set my mark as the indisputable winner of our little decade-long war.\n\nThe only question in my mind as I showered was whether it was a good idea or not.\n\nAfter the contretemps when I'd rearranged the house and moved their belongings without their consent, we'd had an unspoken agreement that each other's rooms were off-limits. As an unintended result, our respective rooms were the only safe zones from pranks. If I did what I was thinking of, I would be violating that safe zone and, possibly, their trust.\n\nI mean, I knew that I wasn't going to be peeking in their underwear drawers or anything. I just wasn't fetished that way and had little to no fascination with any of their undergarments they weren't currently wearing. But, I could see how they would wonder if I would violate their sanctum for a prank, would I not also investigate it for other, more prurient purposes in their absence?\n\nIn the end, perhaps it was my vile sense of humor that determined that the resulting prank would be worth it rather than truly feeling that they should know me well enough to know better that made me move ahead with my plan.\n\nAs the first step, I researched, found, and ordered an identical bear to Wittgenstein. And lost a lot of sleep as I waited for its arrival to make sure that I was the one who received it at the house we shared.\n\nOnce I had him inside and safely hidden in my closet, the somewhat easier part of my plan began to unfold. It took me the better part of a couple of months, working in secret as I could make the time when neither of them was around, but I eventually got the giant teddy bear mostly hollowed out into a sort of suit I could wear.",
        "Perhaps it shouldn't have been as difficult as I made it. I mean, I probably could have just ripped enough of the padding out to make room for me inside and called it good. But, I went the extra effort of keeping just the right amount of batting inside and stitching together an inner layer by hand to keep it in place so that I would be indistinguishable from Wittgenstein without close examination. I actually wanted to be able to stand up and move around in it.\n\nAnd, truthfully, I anticipated having to defend myself some once the prank went off.\n\nAnd, all right, perhaps some of my effort in arranging and keeping the padding was to make sure I had enough in strategic areas in case Leah reached under the bed for that sawed-off baseball bat.\n\nBut, I had time. I had decided that the proper moment for what I had in mind was April Fools Day. While we pranked each other at a minimum of once a week, and more often a couple of times per week, Halloween and April Fools Day we typically pulled out all of the stops.\n\nAnd, too, much more was, perhaps, forgivable on those days. At least I hoped it was any time I thought again about violating the sanctity of their space, their bedroom, as I would have to in order to pull this off.\n\nAs the day loomed closer, and my preparations were complete, I had those thoughts more and more often.\n\nNothing had been expressly said, but I rather had the idea that there might have been something a little more personal behind Donna quitting her job and the two of them moving back and in with me. It wasn't anything big, really. Nothing I could point to and say, \"Aha!\"\n\nBut, Donna had loosened up for a long time and been much freer with giving me hugs or just touching my arm in a gesture of affectionate concern while I was visiting them in Dallas. She hadn't been quite so free with physical expressions of affection since they had moved in with me. Nor did she smile as easily or as often.\n\nAnd, I'd noticed that she was a touch nervous once Leah left for work and we were alone in the house together until Donna left to go work out or whatever it was she did when she left the house.\n\nAnd, she didn't really go to quite as much effort with her appearance as she once had.\n\nDonna had been what the lovely ladies who allowed me to hang out with them in their refuge back in college referred to as \"a lipstick lesbian,\" always dressed up, with her make-up just so. I couldn't recall the last time I'd seen her in make-up or wearing anything other than workout clothes of one variety or another.\n\nLeah had always been a little more butch. As much as she could manage, being so obviously female and so attractive. And I'd noticed on the rare occasions when we went out into the world together, she was even more protective of Donna than I remembered, posting herself between Donna and any inevitable gawkers to stare them down until they looked away.\n\nNo. I didn't know anything for certain. But, I suspected that they hadn't told me everything. And probably wisely so as I probably would have been astride my motorcycle and headed for Dallas before they even finished the story to relive one infamous night when we'd shut down The Planet while I'd gone at it with five frat rats who just could not seem to accept that Donna and Leah really did mean no.\n\nBut, I thought maybe, just maybe, both of them would be alright with it. God knew they'd been loosening up enough around me, coming out of their room to go to the bathroom in just a sleep shirt and shorts that were just this side of indecent.\n\nAnd the way the two of them had hung out on the couch together as we heckled romantic comedies on Valentine's, the way they were dressed and the way they had touched and even kissed in front of me, gave me an aching erection just thinking about it!\n\nSo, yeah. Maybe they had relaxed enough around me in the intervening two years that they could deal with my intrusion into their space.\n\nI'd had to work the night before April Fools and came home that morning fully expecting to be greeted by all sorts of shenanigans. Instead, the two of them were waiting to have breakfast with me; a sun-dried tomato, mushroom, spinach and tofu quiche.\n\nI really would have preferred a different sort of prank.\n\nBut, both of them seemed to have forgotten just what day it was. And the quiche seemed to really be an effort on their part to have a nice breakfast with me rather than to punish me or prank me.\n\nTo my surprise, each of them gave me a long, lingering hug before they left me to clean up and went out the door together. Which was nice. Donna had been scanty with her physical displays of affection since moving in with me and I wasn't sure but thought I could count the number from Leah over the decade without stopping to unlace my boots.\n\nAs a result, I was thrown off balance enough that when I went to the bathroom, I didn't check carefully enough and the flashbang hooked to the toilet seat startled me, making me fall back into the bathtub. To be greeted by Herman in his coiled glory.\n\nOh, fuck yeah. It was on like Donkey-Kong.\n\nI'd had some misgivings after the nice breakfast we'd shared, not to mention those delightful hugs from two women I would cheerfully kill or die for, but now I knew it had all just been an elaborate set-up for their own April Fools efforts to have more than a salutary effect. And I was going to pay them back. Oh, I was indeed.\n\nBut, I would have to wait.\n\nLeah would be working deliveries for the auto-parts store until sometime around five when she would hurry home to change clothes and grab something to eat before rushing back out to tend bar at our old hangout.\n\nDonna would come in either with Leah or not long after, fix something sort of resembling food as much as it could without any meat or dairy product, and then spend the evening scowling at her computer as far as I was ever able to determine since I was usually asleep for most of that.\n\nI puttered around the house a bit, doing some light maintenance, but mostly trying to determine if I should try to wind down early and get some sleep since I had a feeling I wouldn't be getting much after I'd pulled my prank to top all pranks.\n\nEventually, I decided I would be wisest to rest early. Or try to.\n\nI tossed and turned in my bed before finally dozing off just an hour before my alarm sounded at four-thirty in the afternoon. I didn't really need to, I hadn't been asleep that long, but I cleared my bladder to clear the decks, just in case. And took a quick look to make sure I was still alone in the house.\n\nI quickly unburied my teddy bear suit from the bottom of my closet, back behind some piled clothes and boxes I couldn't really remember just what all was in them.\n\nI scurried through the hallway between our rooms on tiptoe, carrying the suit until I slipped inside their room.\n\nTheir room strangely smelled better than the rest of the house, despite being somewhat messier. Or perhaps not so much messier as just more cluttered.\n\nBut, I wasn't there to sightsee, nor to smell the air. I was on short time. At least I hoped I was on short time since I wasn't sure I was going to be able to stay awake if I had to sit still for very long.\n\nI plucked Wittgenstein from his chair on the far side of the bed and propped him in their closet. I'd originally thought about somehow rigging him to the back of their bedroom door. But, propping him so that he would fall out when they opened the closet door, prompting them to turn around to where I was sitting in his spot seemed like a much better proposition.\n\nNot to mention, I hadn't quite been able to work out the system I would use since I didn't want to violate their sanctum any more than I already was to work it out.\n\nOnce Wittgenstein was shoved in the closet, leaning against the inside of the door, I hurriedly put on my suit to mimic him and took my place in his chair and settled in to wait.\n\nAnd wait.\n\nAnd wait some more.\n\nAs I waited, it gradually dawned on me that there were some points that I had not considered carefully enough in my quest for the perfect prank to play on the two loves of my life.\n\nFirst, with so much of the batting left in place, I might as well have piled about four or five quilts on top of me. Which might be nice some time in December or January, but sort of sucked approaching five o'clock in the afternoon on the First of April with the temperature outside up over eighty degrees Fahrenheit. I hadn't been in place long when I began to sweat.\n\nAlso, while I had carefully cut and crafted an eye slit so that I could see quite clearly, it did not let in enough fresh air to counter breathing in my own exhales. Combined with the heat, I was becoming just anoxic enough to be uncomfortable.\n\nBut, it would be worth it. Oh, yes. It would be worth it indeed to once and for all put my stamp on our little war.\n\nAt least it would if they would hurry the hell up and get home.\n\nI was about to break down and slip the head off for a breath of fresh, cool air when I heard muted sounds of one or both of them entering our home and braced myself in anticipation instead as I struggled to hear through the costume batting and closed bedroom door with my eyes fixed across the bed at that door to watch for the perfect moment.\n\nI couldn't make out the words, but I could hear their voices drawing closer. I coiled to spring as the door burst open.\n\nAnd froze as Donna pushed her larger lover into the room and onto the bed, peeling off the baggy, loose shirt she had taken to wearing over her sports bras and bike shorts or leggings to reveal a midriff less sun darkened, but no less impressive than the first day I'd seen her. The vision of Donna's dark petite beauty would probably have been enough by itself to lock me in place, coming at me by surprise as it did.\n\nBut, what really stunned me was seeing Leah with her buttoned down shirt unbuttoned to expose her own sports bra and the fair-skinned midriff that was not so well defined as Donna's but was hardly less impressive.\n\nAs I sat in stunned immobility, Donna half fell and half crawled over Leah's body, her curtain of dark hair hiding the lip-smacking kiss I could hear being administered as their fingers entwined next to Leah's blonde head only partially visible.\n\nI'd seen the two of them kiss. But, it was more usually that absently affectionate peck two longtime lovers will share. This was different and I longed to see it as I imagined from the wet sounds and moans just what their lips, and tongues might be doing to each other.\n\nAnd I knew that I'd already hit a point where my little prank was going to cause a problem. Bad enough that I was in their room. But, with them in the state of undress they were in, not to mention sharing such a passionate moment, there was no way they could forgive my trespass. And the wise thing to do would be to move before it got worse.\n\nIt got worse.\n\nDonna rose up, her lips looking swollen and flush, and stood off the edge of the bed to reach for the fastenings on Leah's jeans even as Leah reached for them herself.\n\nI couldn't really see much except for the top of Leah's head and Donna's, but I'd seen enough to know what they were doing and I struggled to make myself move before we went flying headlong over that particular...\n\nI allowed myself a small sigh that might have been either relief or disappointment.\n\nIn their shifting, I'd seen a hint that Leah was wearing some sort of boy shorts panties or something under her jeans. So, at least she wasn't nude from the waist down. Damn it.\n\nMy two beautiful loves reached for each other once more and I hated myself for becoming so captivated I couldn't move to let them know I was there, or even close my eyes. For several minutes, all I could see was the tops of their heads and some half-glimpsed movements past that that led the mind places I'd fought not to let it go outside of my own bed as I imagined them sharing passionate kisses while their hands explored each other.\n\nDonna sat up and shifted. I loved the view. Donna's sleek torso clearly visible as she rose above her lover. Leah's fuller breasts filling her sports bra just beyond the crown of her blonde head as her lover rose above her. The two of them seeming joined below the waist.\n\nLeah sat up, reaching for Donna. But, I couldn't complain about the change in view as one of Donna's legs, her right, curled behind Leah's all but nude back and, as they kissed once more, the muscles in Leah's back began to bunch and writhe as she lifted her hips to grind against her lovers.\n\nSomeone moaned. I couldn't tell if it was Donna, Leah, or myself as I watched the two lovers whom I loved hump and grind against each other.\n\nMy cock was pressing painfully against the batting bunched around it, trying to spring fully erect to slap against my stomach. It was all I could do not to move, to bend forward to relieve the pressure. Or, perhaps to use my hand to press back against it. Or to get up and slide onto the bed to join the beautiful scene unfolding before my eyes.\n\nThe last was the easiest to fight as I knew that my joining the scene would only spoil it. Which made it easier to fight the others as I recognized that even moving would spoil it as well.\n\nAnd as much I despised myself for spying on them without their express approval, I also couldn't stand the thought of missing a damn thing as the two most beautiful women I'd ever laid eyes on made love to each other.\n\nAnd I wished, oh how I wished, that I had a little better angle than Leah's back with only one of Donna's legs, one of her arms, and the top of her head visible as they kissed and hunched their groins against one another.\n\nSuddenly, Donna broke the clinch and pushed her lover back on the bed. Leah, whom I knew was much stronger fell back easily.\n\n\"I know what you want, you dirty slut,\" Donna said huskily. \"I know what you need.\"\n\n\"Yes,\" Leah moaned. \"Yes, you do. Get it.\"\n\nWhat was this?\n\nI watched as Donna bent to the nightstand between the bed and the door and heard a drawer open. I couldn't see what it was that she retrieved, and lost sight of her for a moment as she bent further down.\n\nMy eyes tried to pop cartoon character style when Donna stood and put her knees back on the bed. With a large, fake phallus jutting out from leather straps around her bike-shorts-clad hips.\n\nThat was just strange!\n\nFirst, it just didn't make any sense to me that confirmed lesbians would use dildos, much less a strap on. I mean, if they were willing to do that, then why not throw a guy into the mix now and then? Why not me, for fuck's sake?!\n\nAlso, the more I thought about it, the more this whole scenario up to this point just didn't make sense. Leah was the bold and brash one. Donna was more reserved, especially since their return from Dallas. Seeing Donna being the aggressor in the bedroom just didn't line up with my impressions of their relationship dynamic or their personalities.\n\nThe thought fell by the wayside before I could run it down as Donna wrestled Leah over onto her belly, with Leah's help, of course. And between the two of them, they obviously worked the boyshorts or whatever they were down.\n\nI could catch just enough of a glimpse of Leah's bared hip past her blonde head and round shoulder to realize what was happening. Although my eyes were drawn inexorably to Leah's pretty face.\n\nAnd her rounded breasts filling out that sports bra that was all she had on her upper half.\n\nNot that Donna wasn't worth watching. Oh, holy fucking hell was she worth watching as she moved behind her lover, that long brunette mane loose and hanging, her finely toned abs bunching just beneath that sports bra covering her own, much smaller breasts.\n\n\"Gently,\" Leah groaned. \"It's been so long. Be gentle with me. At least at first, Ben.\"\n\nBen?! What the fuck?!\n\nEven as my brain grappled with this latest shock, my cock surged painfully against the stricture of my padded camouflage to hear my name being said by lovely Leah as dazzling Donna took a place behind her lover with that strap-on that I would dearly have loved to fill.\n\n\"But, you don't really want me to be gentle, do you?\" Donna snarled as she reached out and tangled her hand in Leah's shorter blonde mane. \"You've been wanting this cock for so long, haven't you slut? You want me to slam you the way only a real man can, don't you? Don't lie to me, bitch. I can feel how hot and wet you are.\"\n\n\"God, yes,\" Leah moaned as she lowered her cheek to rest on the back of her hand on the bed. \"I've wanted this for so long, Ben. And I've wanted you to take me, to fuck me like only a real man can. But, I'm scared. It's been so very long since anything so fucking huge has been inside my little pussy. Just let me get used to it. Just let my tight little pussy get used to your massive, hard, throbbing cock. Please?\"\n\n\"You know I will,\" Donna said, huskily. \"You know I love you and would never do anything to hurt you.\"\n\n\"I know you do. And I do want it. I want it so bad. Just... just give me a second to stretch around you.\"\n\n\"Alright. You just let me know when I can move.\"\n\nMy head was swimming as I imagined what I couldn't really see, the fake phallus Donna was sporting buried in Leah's blonde pussy, from hearing what I was hearing them say to each other. What the fuck was going on?\n\nI knew that each of them had boyfriends when they were still in denial about their own homoerotic leanings. And I knew that they'd had sex during those relationships. Both of them had admitted as much in drunken confessions over the years and had admitted sex with guys just hadn't done a damn thing for them. Had, in fact, left them feeling dirty, soiled.\n\nBut...\n\nBut, maybe, just maybe the two of them had gradually come to fall in love with me as I had them? Perhaps so deeply in love that they could overlook the fact that I was male?\n\nAnd what was with the strap-on anyway? Was this really how they were when they were alone?\n\n\"I'm ready for you, Ben.\"\n\nI blinked away the thoughts and saw that Leah's eyes were open and staring right at me.\n\nNo. No, she was staring right at Wittgenstein. I was Wittgenstein. Not Ben. She didn't know I was here. I couldn't let her even guess.\n\n\"Oh, yeah, Ben. Give it to me,\" Leah said.\n\nDonna's delightful abs bunched and flexed as she obviously began to move behind her lover, her hand on Leah's hip for leverage just visible past Leah's arm.\n\n\"Oh, fuck,\" Donna said. \"So fucking tight. And I've wanted you for so fucking long. Don't know how long I will last.\"\n\nNow, wait just a fucking minute! I had never in my life lasted such a short time! And wouldn't even if it was with one of these two!\n\n\"Don't worry about it, Ben,\" Leah panted. \"I'm almost there just feeling you in me. Just give it to me hard and fast and cum when you need to.\"\n\n\"You mean inside you?\" Donna asked as her abs worked faster and I heard the tell-tale rhythmic slap of her hips striking Leah's accelerate.\n\n\"Oh, fuck!\" Leah moaned. \"Yeah. Inside me.\"\n\n\"But, what if you get pregnant?\"\n\n\"Shut up and fuck me, Ben!\" Leah yelled. \"Fuck me like you rented that pussy for the hour! Shoot your load all up in me! I want you to put your baby inside me, you fucking dickless shithead! Now, fuck me like you mean it, God damn it!\"\n\nHoly shit! I fought the urge to groan and rock forward as my cock surged at the lewd things Leah was spouting. Put my baby in her? Even as my brain struggled with the implications, my cock was thrilled by the idea.\n\n\"God, you're going to make me cum!\" Donna panted as the rhythmic thrusting and slapping reached a crescendo.\n\n\"Do it, Ben!\" Leah shouted. \"Cum for me! Cum in me!\"\n\n\"Holy fuck!\" Donna gasped. \"Here it comes!\"\n\n\"Do it! Impregnate me!\"\n\nDonna thrust hard, making Leah squeal and pitch her head back. The pair held that position for a long second and then two before they fell forward. Leah to rest her cheek on the bed once more. Donna to rest hers against her lovers back.",
        "\"Fuck, I needed that, Baby. Thank you.\" Leah said. \"I hate to be a party pooper, but I need to head out to work.\"\n\n\"Aw,\" Donna said as she stood and started taking the straps loose so she could step out of the contraption. \"I was hoping we could pretend you were Ben taking me next. You got me really hot when you added that bit about him cumming in you and making a baby in you.\"\n\n\"I thought you might like that,\" Leah grinned as she pulled her shorts back over her sweet ass as she stood before brushing Donna's hair back to kiss her lover gently.\n\n\"Do you...\" Donna trailed off to bite her lip before trying again. \"Do you think there would ever be a chance we might get Ben to join us?\"\n\nWait! What the fuck?!\n\n\"Oh, baby,\" Leah sighed and gather Donna in for a hug. \"I know. I want him just as much as you do. Only slightly less than I want you. But, if he hasn't tried anything in all this time, I don't think he's going to.\"\n\n\"Maybe we should just slip into his bed someday while he's asleep?\"\n\n\"No, baby. We talked about that. We need him too much. I don't know. Maybe if we had a place to go if he got mad or if things went sour and he kicked us out.\" Leah made a production at looking at the clock. \"Look, I really have to go to work. We can talk about this some more when I get off tonight if it's really that important to you, okay?\"\n\n\"Okay,\" Donna sighed. \"Could I come with you? I don't trust myself right now not to go into his room.\"\n\n\"Sure, honey.\"\n\nI all but held my breath as the two of them slipped on more clothes over their sports bras and shorts they'd never removed and walked out the bedroom door, pulling it firmly closed behind them.\n\nI couldn't be this lucky! Could I?\n\nI sat still and quiet until I heard a distant door slam as I imagined they went out the front door. And burst into motion.\n\nI ripped my bear suit getting it off me, but that was fine. It wasn't going anywhere except a dumpster two down from ours so they would never even know it existed. Even with the hurry I was in, I couldn't help but pause for two gulps of fresh air and feeling the coolness against my sweat-drenched skin.\n\nFuck! Fuck! Fuck! This might still work out! I could put Wittgenstein back, bury my suit in a dumpster, and be in my bed with them none the wiser! \n\nSo long as they didn't come back for something they forgot and catch me at it!\n\nThinking that, after I placed Wittgenstein in his chair, I pitched my bear suit out their window rather than be caught with it.\n\nI opened the bedroom door gingerly and tiptoed out to peer around the door into the main room to find the coast clear.\n\nFuck yes! I was actually going to get away with this without them knowing!\n\nI all but sprinted through the house and let myself out the sliding glass door into the backyard. I was out of their room, but I still wasn't totally in the clear until that damn bear suit was gone.\n\nI paused just long enough to put their screen I'd knocked off back into place before scooping up the bear suit and sprinting to pitch it over the back fence.\n\nIn the alley, I ran it down two dumpsters to pitch the last of the damning evidence in.\n\nStill, I didn't feel completely safe. Not until I was back inside the house. How would I have explained that I woke up and just decided to check the alley at random?\n\nI locked the sliding glass door and allowed myself to stop and catch my breath. Anything from this point could be explained.\n\nBut, it would be better if I were in bed and asleep. I paused at the thought and looked down at my sweat-slicked skin. Ok, so I should at the least rinse the sweat off.\n\nI wasn't too surprised that Herman had slithered back into the bathtub. They'd had ample opportunity to reset their own pranks from that morning at least that much between the time I'd heard the front door and the bedroom door.\n\nI was however surprised that one of them had hooked another flashbang inside the freezer. Surprised enough I ended on my ass, holding Herman, on the kitchen floor.\n\nDamn it. I really, really needed to come up with something to pay them back, my own plans to put my stamp on our little prank war having gone so delightfully awry. Maybe I would come up with something while I rinsed the sweat off me.\n\nI didn't think of anything. I did, however, manage to ease my ache just a little while replaying the whole episode in my head.\n\nWell, let them think I'd forgotten. Actually, that might just be a pretty decent prank by itself. Let them sweat and check everywhere and everything looking for what I might have done while I bide my time for a couple of days and let a really great idea germinate.\n\nI shut the water off and pulled the shorts I slept in back on, opened the door and wandered in the direction of my bedroom.\n\nAs I settled on my bed, my bedroom door safely closed once more, thinking that I'd gotten away with my little, aborted prank and the cover-up, Leah and Donna sprang up on the other side sounding a pair of air horns and causing me to fall right back off onto the floor.\n\n\"Fuck!\" I laughed from the bedroom floor as the pair laughed down at me from where they were looking over my bed. \n\n\"Happy April Fools, dickhead,\" Leah jeered.\n\n\"Yeah, yeah,\" I said. \"I am the April Fool. Good one.\"\n\n\"I honestly can't believe you fell for it,\" Donna said, shaking her head. \"Although, I have to admit I was a bit surprised you managed to get Wittgenstein so close.\"\n\nThe whole damn thing was an elaborate prank from beginning to end. Donna had purposefully left the bedroom door opened that fateful day, just hoping I would come up with the very idea which I had.\n\nAnd I hadn't smelled the set up at all right up until they sprang over my bed at me with those air horns.\n\nNo. We didn't have wild sex. Leah really did have to go to work, just an hour later. And Donna went with her. They didn't return until after I was already due on duty.\n\nThe next morning, we laughed about it over a breakfast that might not have been so bad if tofu hadn't been masquerading as eggs in the spicy sauce. Something Donna called \"Tofu in Purgatory.\"\n\nAnd I came away with more than a hint that it was all just a prank, that they continued to be a monogamous lesbian couple without even a hint of bi-sexuality. Not even for me, their longtime friend. Their longtime male friend.\n\nBut, it's March once more. And while trying to hit on an idea for a prank, I think I came up with the ultimate one since they turned the tables on me so ably last time.\n\nI won't do a damn thing. Nothing at all. If they want to get me this year, they are going to have to work at it.\n\nI've set it up by not pulling anything since New Years. And it has been rough controlling my impulse as I've continued to bear the brunt of their pranks without fighting back. But, it's been worth it as I've seen the signs of them getting every bit as antsy as I could wish.\n\nFor April First, I'm toying with the idea of buying two red roses. And a strap-on that matches my size. Maybe even one of those \"clone-a-willy\" kits. And leaving the strap-on with the two roses tied to it on their bed while I'm safely in mine. Most likely dreaming of what they might do with it and each other.\n\nOr, no. Maybe I could strap it onto Wittgenstein in his chair. Maybe leave the two red roses sticking out of it where it encircles his waist.\n\nOther than that, I think I'll just bide my time until something truly diabolical occurs to me to spring on the two most important women in my life. Or until they think they are safe. Whichever comes first.\n\n*****\n\nIf you've made it this far, slap us a star or three. If it wasn't your cup of tea, there's more writers than me. If you love April Fools and pranks, however sexy they manage to be, don't be shy to give them all a read.\n\nLiterotica.com April Fools Day 2018"
    ],
    "authorname": "PuckIt",
    "tags": [
        "humor",
        "lesbian",
        "voyeur",
        "prank",
        "strap-on",
        "teddy bear",
        "roommates"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/prank-war-1"
}