{
    "title": "Celestial Wars Ch. 03",
    "pages": [
        "This is the third and final chapter of Celestial Wars, sequel to Celestial Matters. If you haven't read all that, then you should scamper off to read those first. You'll be lost if you don't. \n\nFor the rest of you, here we are, again. \n\nWe've made it to the end. I'd like to take this moment to give my thanks to Lady Ver for editing this story for me. She remains invaluable to me as I write these little tales. Any errors remaining are mine. I'd also like to warn you, gentle reader, that there is only a smattering of true erotica in this story until the final chapter. You've been warned. \n\nNow, off we go once more. \n\n***** \n\nChapter 13 \n\nPreparing \n\nMany things must the righteous beware, \n\nLest they slip from the path of Prayer. \n\nFear a trinket that is ever chill, \n\nAnd fright that makes a heartbeat still. \n\nFear darkness that flame cannot break, \n\nAnd men that death cannot take. \n\nBut what the righteous should most fear, \n\nAre the evils not always clear... \n\n~Author Unknown \n\n-Jonathan the Courageous- \n\nHalf a Millennium Ago \n\nThe dark of the young night held itself still as the demon's words echoed softly amongst the trees. Bitter cold air hung close to my skin, causing my flesh to crawl and my hair to stand on end. \n\nThe demon's red eyes gazed at me unblinking. They glowed a malevolent scarlet. \n\nI slowly drew Gloria from her scabbard. The heavy armor that I wore clinked loudly as I moved. Its heavy weight was a familiar and comforting presence as I stood before the creature of evil. The demon's mouth twitched up at the corners. He was smiling at me. \n\nI took a deep breath and centered myself. I thought of my goal. I thought of the songs that the bards would sing of me. I would be a legend. I would be the Undying Knight. \n\n\"You haven't answered me,\" the demon said calmly, his voice soft and mesmerizing. \n\nI shook my head. \"You are false, demon, for you have not truly answered me. So I pose the question to you again. I wager my soul in a duel for immortality. Do you accept?\" \n\nThe demon's smile turned down into a frown. \"You may think you are being clever,\" he said, \"but if I accept, a ritual will have been completed, and I will have no choice but to take your soul should you lose.\" \n\nI blinked. What did he mean by no choice? The black book stated plainly that all demons desired souls. The book said that amongst the Dark, the soul of a mortal was a delicacy. \n\nFor a brief moment I was unsure. If the book could be wrong about a demon's desire for a soul... perhaps it could be wrong about other things? \n\nThe demon twirled his sword in one hand. The blade was so dark... it looked like a piece of midnight. \n\nIt was too late now. The demon was summoned; my courage could not falter. \"I ask you again, demon. Do you accept my terms?\" \n\nThe monster that wore the face of a dark-haired youth cocked his head to the side. His ruby eyes looked me up and down once. Then, he shrugged. \"So be it, mortal,\" the demon finally said. \"I, Devnikolus the Unmaker, accept the stated terms.\" \n\nThe wind, which had been completely still, began to blow gently. It was as if the very heavens had been holding a baited breath. The frigid air grew even colder, making my eyes water. \n\nThe darkness amongst the surrounding trees deepened... and I saw wisps of shadow materialize on the outskirts of the clearing. Every moment or so I caught glimpses of demonic red eyes peering at me from between the branches. \n\nThere were more demons here... flitting about the forest. \n\n\"Do not fear,\" Devnikolus said. \"They are here to watch. It has been many years since I have been challenged. The demons of my court are merely curious. They shall not interfere.\" \n\nI nodded once. They were easy to ignore. They did not radiate power like Devnikolus did. \n\nDevnikolus reversed his black sword in his hand so that the tip faced down. Then, he slowly sunk the point of his blade into the earth. \"To begin our duel, touch the taper of your blade to the dirt.\" \n\nI didn't reverse my grip like the demon had. That would leave me out of my guard, vulnerable to attack. Instead, I merely bent my wrist and gently touched Gloria to the ground. \n\nThe book had warned about demonic speed, but I hadn't truly believed until I saw the Demon Lord move. \n\nIt seemed as if he simply disappeared. \n\nSuddenly, I felt a soft brush of wind tickle my back. I hurriedly dropped to the ground. My armor clanked loudly as I hit the grass. \n\nI felt a rib bruise. \n\nThe demon's black sword whistled wickedly over my head through the space my neck had been half a moment before. I rolled quickly away, trying to reestablish space between us. Using the weight of my armor, I tipped backwards and regained my feet. \n\nDevnikolus hadn't moved again. Instead, he stood still, his eyes watching me closely. He held his sword down by his side in a loose grip. \"How did you do that?\" he asked. \n\nNow it was my turn to smile. \n\n\"I ducked.\" \n\nThe demon returned my smile. His flawless, pale face beamed at me with genuine amusement. \"Yes,\" he said, \"so you did.\" \n\nHe came at me again with the same blurring speed. I felt the earth shift slightly to my right... and I waited a split second before spinning away from the thrust that I knew would come at my heart. \n\nSearing pain erupted on my shoulder as the demon's blade bit into my flesh. \n\nStupid, I thought to myself. A movement that is fast enough to dodge a man's thrust cannot evade a creature like this demon. \n\nI took several quick steps backward. I put my free hand on my wounded shoulder. There was a rend in my pauldron. The demon's sword had punched through the steel like a crossbow bolt. \n\nThe strength that would be required to deal this wound is unimaginable. \n\nBlood welled from my injury and spilled through my fingers. Hot throbbing agony lanced its way from my shoulder down my spine. My vision blurred as I blinked back tears. \n\nI heard soft whispers from the shadows of the trees. The watching demons were discussing my injury. \n\n\"You did it again,\" Devnikolus said as he flicked my blood off his sword. \"Once can be dismissed as luck. But twice? I am not the type of man to dismiss such things as coincidence.\" \n\nI gingerly removed my hand from my shoulder. The bleeding had slowed. I was in no danger of growing weak from blood loss. \n\n\"I still took a wound,\" I said as I moved myself back into guard. \n\nDevnikolus shrugged. I could tell my pain was not what interested him. \"You knew what to do, and your movement was good. You were simply not fast enough. Your heart should have been run through.\" \n\nI snorted. \"Your arrogance might be considered a weakness.\" \n\nThe steady stream of whispers amongst the shadows grew quiet. \n\nThe Demon Lord raised a careful eyebrow. \"Perhaps,\" Devnikolus allowed. \"But I know that no ordinary mortal could evade my blows for a single pass... yet alone two.\" \n\nI knew what the demon was talking about of course. He was talking about my ability to see. Since he had first stepped out of my circle, I had been watching his movements. I knew how he moved. I could somehow sense how the wind cupped his body. I could somehow feel how the earth shifted beneath his feet. \n\nI took a step forward and said, \"All I need is a little time to observe... and then I can see the answer to any fight. I can see the answers in the steel.\" \n\nThe demon paused. Then, a slow grin spread over his face. This smile was nothing like the last one. This smile was predatory. \"I've just had an idea.\" \n\n1623 AD \n\nJust outside Dublin, Ireland \n\n-Cariel- \n\nThe soulless knight's eyes seemed far away for a moment. \n\nHis gaze rested just above my shoulder, his face drawn tight with concern. That was understandable. I had just told him an archangel was outside. \n\nAs I looked at him... for just a moment... I realized how many years had passed before those sad brown eyes. \n\nMortal eyes were never meant for so much seeing. \n\nI nearly asked him what he was thinking about. \n\nThen, my concentration was shattered as Michael's compulsion magic washed over me once again. \n\nPain mixed with nausea jolted its way down my body. Every pore on my flesh quivered as the unpleasant sensations ran their course. A hard knot of fear settled itself in my stomach as I tried to resist. \n\nBut it was hopeless. I was a seraphim of Heaven, and I was being given an order from a celestial superior. My very nature demanded that I obey. \n\nMy resistance cratered once again and I found myself trying to take a step towards the door. My traitorous feet hadn't managed to carry me more than half a stride before I could feel my collar's magic flare to life again. \n\nMichael's compulsion magic was washed away as the green magic flared. Where once there had been hot pain, now there was liquid ice pumping in my veins. \n\nI felt like a doll stretched between two quarrelling sisters... each trying to pull me into their own grasp. \n\nMy skin felt tight and my head felt heavy. \n\nThe part of my nature that still remembered the millennium of loyal service I had rendered unto Heaven urged me to leave this cursed mansion. \n\nBut another part... the part that longed for possessive touches and wicked whispers... wanted to curl up and wait for Devnikolus to make the pain go away. \n\nThese conflicting emotions felt strange; it was as if two entities were living in my head. \n\nJon's eyes cleared and he took a hesitant step towards me. \"Cariel,\" he said, \"what you did mean Michael is here? Is he outside right now? Tell me what's going on.\" \n\nDon't tell him anything, one part of my being screamed. \n\nYou've already done enough damage. Tell the soulless one you have made a mistake. \n\nJon reached out a tentative hand and placed it on my cheek. I realized how I must look. My face was rigid... and tense. One hand had unconsciously gone to my collar. I was unsure if I had been trying to rip it off... or if I had been seeking the comfort of its touch. \n\nThe golden rays of the morning had filtered in through the window. The light illuminated swirling wisps of dust as they floated gently around the bedroom. \n\nThe soulless one looked very pale as the light of the new day touched his face. His scars looked like silver lines about the graceful curve of his face. \n\nA moment passed... then two. \n\nMichael must have realized that I wasn't coming... and the burning weight of his compulsion faded. \n\nBefore the last of the pain flickered and died, I was already speaking. \"Michael just tried to compel me to leave the mansion and the Master,\" I said. \"He has just descended from Heaven, and he has landed five miles from here... in a clearing that has recently witnessed much death.\" As I finished speaking, my collar warmed slightly... and tiny pinpricks of pleasure danced across my shoulder blades. \n\nI both shuddered and rejoiced as I realized my collar was \"rewarding\" me. \n\nThe soulless one was already out the door. \n\n-Jon- \n\nOld wooden floor boards creaked their protests as I sprinted down the hall to the master bedroom. \n\nPlease don't be asleep, I thought desperately. \n\nThen my stomach sank as I had a new thought. \n\nHe might have left... he has always moved where the breeze has blown him. Perhaps he went to tend to other things after spending some time with Maria. \n\nI spared no time to knock as I flew through the door and into my Master's chamber. \n\nSweat that had beaded on my forehead from fear, not from exertion, slipped into my eyes and stung them with their salt. \n\nI blinked as I looked around frantically. For a moment my gaze was blind and unseeing. I didn't know why I was so afraid, but the look on Cariel's angelic face before I had sprinted from the room had shaken me. \n\nMy vision cleared and I saw Lord Devnikolus sitting with his eyes closed in the center of the room. \n\nThe faintest wisp of a smile twitched at the corner of his face. \n\n\"Hello there, Jon,\" he said softly. \"Close the door behind you and keep your voice down. We wouldn't want to wake Maria... now would we?\" \n\nI took a deep belly breath and exhaled slowly. He is here... He is right here. \n\nA small slightly hysterical sounding chuckle escaped unbidden. I could not help the large grin on my face and I tried to hide it by turning to close the door slowly. \n\nWhen I turned back around, Devnik's eyes were open and staring at me. \n\nFor a brief moment, my mind skipped back to the memory I had just relived... back to the first time I had seen those eyes. Then, it was gone again. \"Master, I'm sorry to come bursting in like this, but I have some urgent news,\" I said, reason slowly reclaiming my mind. \n\nDevnik held up a hand. \"I already know, Jon,\" he said. The brief smile he had worn was gone. His face had hardened, and his brow was furrowed. \"This was all part of the plan.\" \n\nI blinked. \"Are you sure we're talking about the same thing?\" I asked. I didn't know much about Michael, but I did know that I had never seen Devnik pit himself against an entity as universally feared by the Dark as Lord Michael the Valiant. \n\nDevnik shrugged. \n\n\"We are both talking about Michael, aren't we?\" he asked in a voice that was much too calm. \n\nThis was getting to be too much. Over the past few days I had watched Cariel cut Devnik across the chest. I had been on the receiving end of a spell from an Afflicted woman. I had had my finger cut off. I had to stare down an entire ship full of bloodthirsty sailors. And finally, I had been struck by a Judicar and had my skull cracked. \n\nNow, after all of that, Michael was coming to kill us all. \n\nI wanted to go back to the chateau. \n\n\"Do you mind if I sit?\" I asked as I pointed to a chair pushed against a wall. \"I'm feeling rather tired all of a sudden.\" \n\n\"Be my guest,\" Devnik said with a wave of his hand. \n\nI sat and put my head in my hands. \n\nThrough my fingers, I saw Devnik close his eyes again. \n\nI recognized this as he \"thinking\" face. \n\nMinutes slowly ticked by. Over on the bed, Maria turned over and muttered something in her sleep. Outside the window, the light of the day grew from the luminous orange of late morning into the bright yellow of high noon. \n\nFinally, I couldn't keep quiet any longer. \"Would you mind telling me what plan you're talking about? Things have obviously changed since we were separated.\" \n\nDevnik reopened his eyes and sighed. \"It's a long story and I don't have time to tell you all the finer points.\" \n\nWith a bit of effort, I pulled my face from my hands and sat up straight. \"I'll settle for the broad strokes. I'm too tired to deal with anything more.\" \n\nDevnik flicked his fingers, and two snow-white candles appeared on the floor in front of him. He passed his hand over each of them. A flame blossomed on each wick. \n\n\"Basically,\" Devnik said, \"since we were separated, I've been spending my time trying to lure a greater entity of the Light to my mansion.\" \n\nI didn't have the energy to muster up any shock. \"Why?\" I asked wearily. \n\nDevnik placed a hand on the floor, and a bright demonic rune burst into existence. It glowed a deep crimson before fading into a softer dull red. \n\n\"Truth be told,\" he said, \"I'd like to know that myself. This little mission is what prevented me from fetching you both from France.\" \n\nHe paused, then said, \"All I was told is that Lucifer needed this entity distracted so that he could swoop in and make some mischief on whatever it was guarding.\" \n\nThat perked me up slightly. \"Lucifer? He was here?\" \n\n\"Ha!\" Devnik barked. He was smiling fully now. \"No... by the Dark, no.\" He shook his head. \"If Lucifer had taken so much as a breath nearby...\" Devnik trailed off for a moment, then said, \"If Lucifer had come to my manor, all the battalions of the Light would have razed this place to the ground by now.\" \n\nSome old part of me was uncomfortable discussing the King of the Dark. \n\n\"Did some lesser creature pass the message along then?\" I asked. \n\nDevnik unclasped the ruby that he always kept pinned to his cloak and set it down on top of the rune. Then, he carefully arranged the two candles next to the rune. He looked like he was setting up some sort of summoning ritual, similar to the one I had performed all those years ago. \n\n\"Orias came and told me,\" he replied. \"I guess our King must have thought I'd be the most amenable to him... though I probably would have listened to Caim as well.\" \n\n\"It is probably harder to ignore someone who can see the future,\" I said lightly. \n\nThis conversation was beginning to feel surreal. I had met Lord Orias on one occasion before; however, I wasn't used to talking about the Princes of Hell like they might stop in for tea at any moment. \n\nDealing with one Prince was enough of a headache. \n\n\"It makes him damn annoying is what it does,\" Devnik replied. He narrowed his red eyes in annoyance and subtly shifted one of the candles at the edge of the rune. \n\n\"May I ask what you are doing?\" I said. \"I'm hoping these candles are part of the plan to deal with Michael.\" \n\nDevnik peered up at me from his place on the floor. He gave me one of his rare boyish grins. \n\n\"Oh, you needn't be too worried,\" he said. \"We don't have to actually 'deal' with him.\" \n\nI cocked my head to the side. \"Cariel said he's barely five miles away.\" \n\n\"What I mean,\" Devnik said, \"is that we don't have to kill him. That would be an entirely different matter. We've just got to keep him here and distracted for the space of half an hour.\" \n\n\"He's already technically here,\" I said sarcastically. \n\n\"I know. I'm hoping Lucifer is already bustling about his business. I doubt I can keep our guest suitably entertained for that long face to face.\" \n\nMy nerves, which had begun to dissipate, came roaring back. \n\nFor as long as I could remember, standing next to Devnikolus meant that you were standing on the side with the most firepower. \n\n\"Wait,\" I said, \"You don't think you can match him?\" \n\nDevnik gave me a small shrug. \"I don't know. I've never met him before. He does have quite a reputation, though. Apparently Soneillon still has nightmares about a wound Michael dealt him back in Egypt a few centuries ago.\" \n\nI needed to stay grounded. Devnik normally didn't talk about his fellow demonic gentry... I was beginning to feel truly out of my depth. \n\n\"You never told me what the candles were for,\" I said. \n\nDevnik looked down at what he was doing. \"Oh... well, you might have noticed that it's daylight outside,\" he said, pointing absently out the window. \n\nA small sparrow landed on a tree branch bathed in sunlight just past the window's glass. It trilled a soft little tune and then fluttered off. \n\n\"I noticed,\" I said simply. \n\nDevnik rolled his eyes. \"Yes, well, you might have forgotten, but I don't do to well out in the sunlight.\" \n\nI nodded. \n\n\"Well,\" he said, \"that's what this is for.\" He tapped the ruby he had unpinned from his neck. \n\nI had always wondered why he wore that thing. Devnik's clothing changed depending on what was fashionable among the mortals... all except for that ruby. \n\n\"I thought you just liked jewelry,\" I said dryly. \n\n\"It was a gift for services rendered a long time ago,\" he said, his voice taking on a wistful tone. \"There was a cadre of fae that lived in a place that mortals called The Black Forest. Today there are some united provinces that claim these lands... but twenty-five thousand years ago, there was but a scattering of primitive mortals.\" \n\nDevnik looked up at me. \n\nI had leaned forward, and I caught myself staring just a little too pointedly. I was always starved for stories of the distant past. They reminded me of why I wanted to live forever. ",
        "He sighed and looked back down. \"To make a long and involved story short, this coven of faelings summoned me to help them deal with a detachment of legionnaires that wanted to eliminate them so that humans could claim that land.\" \n\nThe room had started to grow cold during Devnik's story. I could feel him drawing his power in close. The light from the window seemed to dim, and the shadows from the candles began to grow long and deep. \n\n\"When I scared off the offending angels, the Tree-Shaper of the coven gave me what all demons desire from the fae.\" \n\nI couldn't help but lean forward again. \n\nDevnik placed a single finger on his ruby and he stroked it fondly. \"They wove a sun-shield enchantment for me... and they put it in this ruby...\" \n\nA tiny rush of air escaped my lungs. If Devnik could go outside in the daylight that meant that he could face Michael head on. Perhaps things weren't so grim after all. \n\n\"Why don't you walk in the daylight all the time, Master?\" I asked. It was an automatic question. I had spent a great deal of time over the centuries watching Devnik avoid the sun. \n\nDevnik removed his finger from the gem and placed both hands on the glowing rune. \"Daylight shields are enchantments that require a ludicrous amount of time to recharge,\" he said. \"It has been eighty years since I last used the ruby's enchantment. It probably only has enough power within it to shield me for about four hours in the afternoon sun.\" \n\n\"That seems\u2014\" I began to say, but I was cut off. \n\nThe rune on the ground flashed brightly before going dark. The candles that had once burned a natural orange began to glow a cheerful green that symbolized earth magic. Red and green sparks began to glitter with the multi-faceted ruby. They danced and mingled in a mesmerizing and chaotic fashion. \n\nThen, it all stopped. \n\nThe room lightened and the candles winked out. \n\nThe rune on the wooden floor looked like an ancient coal stain. \n\nOnly the ruby remained. \n\nDevnik reverently picked up the gem and slipped it into his pocket. \"Well,\" he said as he cast a look over at the sleeping Maria, \"she seems to be an extraordinarily heavy sleeper.\" \n\nChapter 14 \n\n~Why do the Light cast no Shadow? What does this mean of my Shadow? Should I fear it? Is it plotting secret sins as I sit down to write? I do not know. I am watching it now... as sways in my candle's light.- A Diary found in the charred ruins of an Abbey~ \n\nThe Valiant \n\n-Maria- \n\nI could feel my Master's venom circulating through my veins. I could feel my Master sucking the blood from my body. Something...deep in my belly... shuddered contentedly. There was nothing better than this. \n\nEvery time his mouth pulled another draught of blood my mind slipped gently away from consciousness. With every drop he took, I could feel a soft and satisfying sleep drift ever closer. \n\nAs I felt the last of my essence leaving me to nourish and pleasure my Dark God, my mind sang out one last note. \n\nI love him. \n\nI am his. \n\nThese words became my only truth. They echoed like the ringing of a loud, clear bell. \n\n*** \n\nIn the back of my mind, I realized that I was asleep. \n\nBut this was not the kind of sleep I was familiar with. I had only experienced this kind of waking slumber once before...when I had been attacked by the Afflicted woman. \n\nI was dreamwalking. \n\nWhy does this happen to me every time I am forced to sleep? \n\nThe last time I had walked amongst dreams, I had found my Master's dream. I wondered if I could do that again. \n\nI cast my consciousness around in the dark ether that surrounded me. \n\nSuddenly, almost as if it was waiting to be called, the golden cord that symbolized my Awakening bond with my Master appeared. \n\nIt shone brightly amongst the dreary emptiness around me. \n\nI reached out, and touched it. \n\nInstinctively, I realized that the cord currently didn't lead anywhere. \n\nMaster isn't asleep right now. \n\nSome part of me huffed at that. I had been rather proud of that blow job. Why wasn't he sleeping beside me right now? Had I not satisfied him? Had I not been submissive enough? \n\nSomewhere, in the deep reaches of the dreamscape, I thought I heard a voice say: \n\nDo you hear the thoughts you have now Alarial? Were these your thoughts a few mere weeks ago? \n\nI shook my head. Every once in a while a small part of me would question my relationship with Devnik. It would ask me where my backbone had gone. \n\nAdmittedly, I had enjoyed punching my Master onto that stalagmite. \n\nSuddenly, I had an idea. \n\nI focused my thoughts, and attempted to see if I could control my own dream while I was in this altered state of sleep. \n\nIt didn't take me long for me to conjure up the image of what I wanted this place to look like...after all, this was the place where my world was irrevocably altered. \n\nThe sound of water droplets falling onto cold stone greeted my ears. \n\nDrip \n\nDrip \n\nDrip. \n\nI opened my eyes...and I saw the cave. \n\nThis was the cave where I had first learned what I was. This was the cave where I had first made love with Devnik. This was a place of firsts. \n\nI cast my gaze around at the damp and earthy rock walls and the wickedly sharp stalagmites. It was a thoroughly miserable place...and there was something missing. \n\nWith a smile, I closed my eyes and concentrated. \n\n\"I see you're awake my dear,\" came a voice from the darkness. It was the same words he said to me just those few weeks ago. \n\nI opened my eyes. \n\nDevnik was standing not one pace from me. \n\nHis red eyes were soft and inviting, and his perfect lips were curled up in a satisfied smile. \n\n\"You look beautiful Alarial.\" He took a step towards me. The softness in his eyes was melting into something that looked like hunger. \n\nI smiled up at him. He towered over me, but instead of feeling intimidated, I felt safe. \n\nIn the back of my mind, I realized that this is not how our relationship began here in this cave. Devnik had softened since we had left this sanctuary of earth and stone. \n\n\"Alarial,\" Devnik murmured and he ran one of his slender hands through my hair. \"What are you thinking about?\" \n\nI had never told him about the name Cariel claimed was my real one. Hearing the name in his voice sounded strange and wonderful. \n\nI put my head against his firm chest. Underneath the satin of his brocade I could feel a sheet of rippling muscle contract against my cheek. \n\nI shivered slightly from the chill. \n\n\"I'm a little cold,\" I said. \n\nDevnik's strong arms snaked their way around my body. One hand came to rest at the small of my back, and the other gently grasped the back of my neck. I shivered again for an entirely different reason. \n\nEvery woman should experience being held this way...knowing from just an embrace...that they are loved and perfect. \n\nFor a moment, as I lingered in the fold of his strong arms, breathing in his scent, I forgot that this was merely a dream. \n\nMy heart cracked a little when I remembered. \n\nMaybe I would use my last wish to have Devnik recreate this moment with me. \n\nDream-Devnik pulled me gently away after a moment or two. His red eyes peered into mine with a lust that I recognized all too well. \n\n\"It was so good of you to wait for me without clothes on,\" Dream-Devnik said with a smirk. \"I've always thought that clothes were a constant hindrance in our relationship.\" \n\nI gulped as I looked down at myself. I was as naked as the day I was born. \n\nEven in my own dream he had me off balance. \n\nDevnik took a step back. \n\n\"Would you like to dance for me?\" He asked. \"Do you know how?\" \n\nI nodded my head mutely. Of course I knew how to dance. It was one of the first things the Madame at the Rosy Garter made her girls learn. The Madame knew several kinds of dances. There were dances that said look but don't touch. There were dances that said I could be yours if you tried. \n\nThe Madame even showed us a very special dance...only to be used if our patron was very rich, and very dedicated to one girl. \n\nThis dance said, I am yours. \n\nSlowly, I began to move. I twirled and pranced about the dark cave...moving to music that only I could hear. Every once in a while my dance would lead me back to Devnik, and I would swirl around him, and nibble at his neck and trace feather light touches across his back. \n\nIn the back of my mind, I suddenly realized that I had wanted to dance for him for a long time. \n\nBefore I was even half-done, Dream-Devnik launched himself at me. We toppled backwards and while we fell everything shifted. \n\nWe landed on a bed made of black silk. \n\nWe were in the underground room at the chateau. \n\nHis body pressed down heavy against mine. I could feel his hard manhood through his trousers against my bare leg. \n\nI could feel the heat rising within myself. Wetness gathered in my sex in the anticipation of the act to come. The base, animal part of me that my Master had uncovered readied herself. \n\nMy nipples tightened as they brushed against his broad chest. I felt like I was drowning in him. His smell was like dark spice. It was masculine and powerful and incredibly potent. \n\nIn the back of my head I thought I could hear that same voice from before speak again. \n\nYou could shape this place into anything you desire as a dreamwalker. Is this what you would choose over all else? \n\nThe voice sounded much closer now. \n\nSuddenly, Dream-Devnik turned to smoke in my hands. His form and smell and presence disappeared like it had been made of ashes and shadows. \n\nThe bed and room also began to blur along their edges. \n\nA bright and pure white light began to burn in the center of the dreamscape...and it seemed to wash all my illusions away. \n\nSoon, nothing remained of the underground bedroom, and I was once again floating in the grey ether of the dreamscape. \n\nExcept this time I wasn't alone. \n\n*** \n\nI couldn't see my interloper. It was more like a feeling...a kind of knowing. \n\nThere was a presence here in the dreamscape with me...and it was not my Master. \n\nI felt unsettled as I looked out amongst the unbroken sea of nothing, as I waited for the presence to speak. \n\n\"I agree,\" said the presence. \"I have always found untempered dreams to be unsettling...let me take you to one of mine.\" \n\nThe white light flashed again, and for a moment I was blind. \n\nAll around me, I could feel the dream reworking itself. \n\n*** \n\nI was standing on a grassy cliff covered in flowers of every kind. I recognized pink tulips and white daisies and an array of deep purple violets. The sound of rushing and receding water hung like a half-heard melody in the background. I peered over the edge of the cliff. A calm light blue ocean rolled placidly below. \n\nThe peace that suffused this place was overwhelming. This was truly a place that could only exist in a dream. \n\n\"It did exist once,\" a voice said mildly. \n\nI turned around. \n\nA man dressed in an unadorned white tunic stood behind me. He had silver eyes and his hair was the color of burnished copper. His locks spun down to his shoulders in elegant ringlets that looked like flowing molten metal. \n\nThis brilliant hair framed a face that looked like it had been carved by a master sculptor, whose only desire was to press the face of bravery incarnate onto cold marble. \n\nThat was the most inescapable aspect of this man...one could not look at him and not think...brave. \n\nThe man gave me a gentle smile. \n\n\"Nearly two million years ago this cliff was a real place,\" he said. \"It was my favorite place in the mortal world.\" \n\n\"It's beautiful,\" I said without thinking. Overhead, a purple bird I had never seen before flew lazily across an azure sky. \n\nI suddenly realized how little of the world I had seen. \n\n\"Is it not real anymore?\" \n\nHe shook his head. \n\n\"What happened to it?\" I asked. \n\nThe man met my eyes. They were silver and sharp, and...for a moment...I thought I could see all the eons of the past dancing around their edges. \n\n\"An age of ice came,\" he said, \"and this cliff became a glacier.\" \n\nI looked around me, and tried to imagine this perfect place covered in ice and snow. It was troubling to reconcile that much change with what I saw before me. \n\nIt was like he just told me something as grand as a mountain or something as vast as an ocean wouldn't last forever. \n\n\"Who are you?\" I asked hesitantly. \n\nThe man's smile wavered. He took a step forward, and placed a hand over his heart. \n\nHe gave me a smooth, slow bow. \n\n\"I am Michael,\" he said. \"And I am to blame for your sorrows.\" \n\n*** \n\nI staggered backwards. The back of my foot met the edge of the cliff, and I had to force myself to stay still...lest I plummet into the ocean below. \n\nCould one die in a dream? I thought to myself. \n\n\"No,\" Michael said, \"you cannot die...but it is possible to get lost within Somnatul. That is what we call this...dreamscape...as you have come to call it.\" \n\nA creeping realization struck me. \n\n\"You can read my mind!\" I shrieked, before I clapped my hand over my mouth. I hadn't meant to raise my voice, but I was beginning to panic. \n\n\"Peace young one,\" Michael said. \"I have invaded your dream...so I am able to glean some of the thoughts that float on the surface of your mind.\" \n\nMichael paused then said, \"It is normally a great offense amongst the Somna to invade another's dream...but this is the only way I could speak with you before I meet with Devnikolus.\" \n\nMeet with Devnik...why? \n\n\"What business do you have with my Master?\" I asked. \n\nRegret washed over Michael's face. \n\n\"It pains me to see how my own magic has made you call a Demon your master.\" Michael said sadly. \n\n\"It was my Working that created the Aethling bond...I thought I made the spell impregnable...but it would appear that was prideful thinking.\" \n\nMichael slowly got down on one knee. He lowered his head and put one fist on the ground. He bowed to me as if I were a queen. For a brief moment neither of us moved. I stood there frozen and shocked. \n\n\"Please forgive me Alarial, daughter of Ilirial.\" Michael said, without looking up from the ground. \"We of the Light are not above fault. We can be hypocrites, and we can be blind.\" \n\n\"Um...\" I stuttered. I could feel heat rushing to my cheeks. \n\n\"...Please stand up,\" I finally managed to say. \n\nMichael rose in a fluid motion. He gazed at me wearily, waiting for me to continue. \n\nI didn't know what to say. Did I forgive him? \n\nThere is nothing to forgive. Without the awakening bond, you would have never met the love of your life. \n\n\"I accept your apology...Michael,\" I said after a pause. Calling such an entity by his name rather than a title seemed...wrong. But, I didn't know how to address an archangel properly. \n\nThe purple bird landed in a field of tulips. It plucked a flower from its stem and ate it in one quick motion. When it was done, it warbled happily before flying off. \n\nBoth Michael and I had turned to watch the little creature. \n\n\"I am glad you can offer me forgiveness Alarial,\" Michael said softly. \"Though, I know the reason you are so quick to forgive.\" \n\nHe turned and fixed his angelic eyes on me. \n\n\"You feel like things have turned out for the best...don't you?\" \n\nA swift wind blew across the cliff. Violets and Tulips and daisies fluttered gracefully along the sloped earth. I heard a particularly loud wave crash against the rocky crags below. \n\nI didn't know how to answer his question. I could feel a deep, rippling sadness in the timber of his voice...it made me feel like there was something I didn't understand...like there was some deep regret I didn't realize I should be mourning. \n\nMichael began to walk slowly up the slope towards me. Before I knew it, he was standing right in front of me. \n\nHe was tall. With the incline, I was nearly up to his shoulder. I wanted to take a step back...not because I felt threatened...but his intense gaze made me long for some kind of escape. \n\nThe cliff dropped just behind me...I couldn't get away. \n\nHe raised a slender hand, and touched it gently to my forehead. For a moment, his fingers were above my eyes, and I couldn't see what he was doing. \n\nWhen he withdrew his hand, he held the shimmering golden cord that was my Awakening bond. \n\nMy eyes widened. \n\n\"What are you doing?\" I asked...too terrified to speak above a whisper. \n\n\"Don't touch that...please,\" I said meekly. \n\nThe bond looked delicate and fragile in Michael's hand. Like it might snap if he squeezed it too hard. \n\n\"It would be fitting if I severed this,\" Michael said, as he stared at the shimmering tether. \"It is my magic, it is my transgression. I should put it right.\" \n\nI stood still...like a frightened rabbit caught in the gaze of a wolf. My body quivered...and I was afraid to move. \n\nPlease don't do this...please don't do this...please don't do this. \n\nI chanted this phrase in my mind over and over again...like a prayer...I held the words tight like a crutch...like a drowning man might hold driftwood. \n\nMichael dropped released his grip on the bond, and it disappeared. \n\n\"I cannot severe the bond right now,\" he said. \"To undo this working I would have to expend all of my magic...and I have to meet Devnikolus today...even with the sun aiding me, it would be arrogant of me to approach him with less than my full strength.\" \n\nI let out a breath of relief. \n\n\"But you should know one thing before you wake Alarial,\" Michael said, once again fixing me with his eyes. \n\nHe stared at me for an entire minute. Then he said, \n\n\"The bond does not simply influence you. Such magic is always reciprocal in nature. Just as the bond has changed you...so has it changed the Lord of Destruction. The man you claim to love...and the man he would be without the bond...are as different from each other as summer breeze and winter chill.\" \n\nOf course, I thought to myself...as I remembered those first few days with Devnik. Why did I not see it before? \n\nMichael looked closely at me, then nodded. \n\n\"I see you understand.\" Michael said, then his eyes hardened. \n\n\"But, before I allow you to wake, I will show the memories that some of the faithful have of your beloved before this bond came to be.\" \n\nWait...what? \n\nThe beautiful cliff side began to darken...and I could feel the dream changing again. \n\n\"Know that I do this not to be cruel,\" Michael said sadly, \"But because you need to know.\" \n\nMichael and his dream vanished like a wisp of smoke and new shapes began to form around me. \n\n*** \n\nI saw a primitive village in the still of night, with huts made all out of mud and grass and human determination. People with golden brown skin were running to and fro. True fear shone in their eyes. The tears of mothers fell like spring streams as they ran...clutching their babes. \n\nOne by one, the huts burst into black, heatless, flames. \n\nDevnik appeared from out of the smoking ruins of these people's homes. His eyes glowed a malevolent red. The black flames moved forward as he did. \n\nHe cast his head back, and cackled frenziedly into the night. \n\n*** \n\nI saw a forest bathed in moonlight. It was a primeval part of the world, untouched by human hands. Upon the forest floor, blue blood flecked the ground. Amongst the leaves and brambles, an Angel lay on his back. His face was cut and broken, but his brow was creased and resolved. \n\nAbove him, Devnikolus stood, he was wreathed in black flames, and he barely looked human. He looked like he was made up of those black tendrils of fire...like he was made of pure destruction. \n\nThe flames descended upon the Angel...and he screamed. ",
        "*** \n\nI saw the Lord of Destruction, standing in a field. Black tears were streaming down his flawless cheeks...but his red eyes were hard, and his mouth was a grim line. \n\nUpon the grassy field, men in golden armor lay scattered about. An angel with bright blond hair that I thought I recognized shouted at the Demon, but I couldn't make out his words. They sounded like begging. \n\nI saw black flames gather around the Demon Prince...and I wanted to close my eyes and look away... \n\n*** \n\n\"Maria! Wake up!\" \n\nMy eyes flung open, and I found myself staring into the same red eyes I had just had three visions of. My heart seized in my chest, and for a moment, I felt nothing but panic. \n\nDevnik gently placed a hand on my cheek, and gave me a warm, loving smile. \n\n\"Are you all right, dear one?\" \n\nChapter 15 \n\nBlack Deeds \n\n\"Love is not righteous. Only a fool who has never felt love's bitter edges would claim otherwise. Love is greedy, love is dark, and love is jealous. But this is why we desire love above all else. It is like a mania. Our thoughts become clouded, but our blood thrums with life.\" ~Attributed to Lilith, Princess of Lust and Blood \n\nDevnik \n\nThe daylight shield rippled like gauze around me. My skin tingled as if a thin layer of frost had settled softly against it. \n\nI picked the ruby up and slipped it into my pocket. The gem felt dead and empty. The magic that normally coursed through it was gone, expended. \n\nBeing forced to play one of my trump cards irritated me. The ruby was a comforting last resort. Now that it was used, I would have to wait decades before it could provide me with even an hour of protection. \n\nJon was staring at me, speechless. I restrained the urge to roll my eyes. Jon liked to think that he had seen all of my tricks, and he seemed eternally bewildered when I kept surprising him. \n\nMy gaze wandered over to Maria, whose hair was tousled by sleep. Stray locks of blonde hair pointed every which way, making her head look like the nest of some woodland creature. A warm feeling suffused me as I continued to stare at her. It was good to have her close. \n\nI had rather been hoping that my little ritual would wake her. One should not go to a potentially lethal battle without some sort of token of a lady's favor, and I had wonderful ideas about the 'favors' she could bestow upon me. All of them, however, required her to be awake. \n\n\"Well,\" I said, \"she seems to be an extraordinarily heavy sleeper.\" \n\nJon followed my eyes to the bed. \n\nThe white sheets had become tangled as she had stirred. They had fallen just enough to reveal the tops of Maria's breasts. Pale, curved skin peeked deliciously out from under the coverings. Maria had thrown one slim arm above her head. \n\nJon spoke while I took in the sumptuous lines of her figure. \"We had an extraordinarily trying journey, my Prince,\" he said as he averted his eyes from the sleeping half-angel. \"We were attacked twice. Once by an Afflicted, and once by an entire ship of sailors.\" \n\nI nodded without looking at him. \"I know, Jon,\" I said as I moved to stand. \"Orias foresaw your journey. He was the one who told me to send Ezrih to rescue you from the ship. He was the one who warned me that the Judicar was traveling with you.\" \n\nMy feet carried me toward the bed, and I knelt down beside Maria without thought. I listened to Jon splutter behind me while I traced my love's cheekbones with the pad of my thumb. She shifted slightly in her sleep. \n\n\"My Prince,\" Jon said, \"I hope you don't think too little of how I handled our travels. I was aware of the Judicar's identity the entire time and was bringing him here so that you could cast him through your Crossing Gate.\" \n\nI snorted. \"How could I possibly get him to willingly walk into my realm? No living thing not of the Dark can be forced to walk Hell's roads.\" \n\n\"Ah,\" he said, \"but if I recall, Daniel has a piece of Darkness in him.\" \n\nMy butler sounded terribly pleased with himself. Almost annoyingly so. \n\n\"In fact,\" Jon continued, \"I believe he has a stone heart beating in his chest ... crafted by your very magic.\" \n\nI pulled away from Maria and looked over my shoulder at the butler. \n\nJon shrugged when he noticed my eyes on him. \"I am merely speculating here,\" he said. \"But I imagine Hell would gobble Daniel up readily.\" \n\nFor a brief moment, I saw Daniel Fleeting\u2014one of the four men to ever win immortality from me\u2014condemned to wander my plane of Hell for eternity. It was a very agreeable fantasy. \n\n\"That was\"\u2014I paused, unwilling to admit I hadn't thought of something\u2014\"very clever of you, Jon,\" I managed. \"I will have to try and see if the Crossing will accept our guest after Michael and I have had words.\" \n\nMy butler nodded. He gestured to the door, and I waved a hand in dismissal. \n\nJon stood from his chair, and my supernatural hearing heard the tiny creaks and pops of his weary body. Suddenly, I felt very weary as well. Perhaps when this last matter was attended to, I would rest. \n\n\"Don't think I've forgotten about that debacle on the boat,\" I said calmly, as I turned my attention back to Maria. \"I'm going to tell Ezrih that you owe him...\" I let Jon imagine what Ezrih would want as repayment. \n\nJon sighed. \"As you wish, my Prince.\" \n\nThen I heard him open the door, but I didn't hear him leave. \n\n\"I suggest you hurry,\" Jon said after a moment's hesitation. \"I don't know what has kept him, but I doubt Michael is going to dally much longer.\" \n\nBefore waiting for my reply, he stepped through the door and closed it gently. \n\nI chuckled softly under my breath. I liked Jon. Impertinence suited him. \n\nUnderneath my fingertips, Maria suddenly jerked violently. A great, heaving gasp rushed from between her parted lips. Beneath her eyelids, I could tell that her eyes were moving frantically. She jerked her head again and tears welled at the corners of her eyelashes. \n\nMy heart clenched. She can't be afflicted with mortal illnesses ... can she? I thought uneasily. \n\nI was seconds away from calling Jon back when I caught the smell of it. A foreign Light magic on the air. It was insidious, and terribly, terribly subtle. It had completely slipped my detection. But now that I was focusing, I could sense it on Maria's skin. \n\nDream magic, I thought to myself ... And more potent than any I have ever seen. \n\nA deep chill ran down my spine and settled at the base of my back. Michael. \n\nFrantically, I placed a hand on Maria's cheek and pushed my own magic against the spell that kept her asleep and dreaming. \n\nTrue dream magic is an art that only the Light can perform ... but I could still dispel the working ... hopefully. \n\n\"Maria! Wake up!\" I nearly yelled as I continued to channel magic against the foreign dream magic. Red sparks twitched down my hand as I gritted my teeth. Dispelling this magic had already consumed several times the power I had estimated it would. \n\nFinally, the dream magic shuddered ... and then broke. \n\nMaria's eyes flung open. Her pupils were wide and dilated, leaving little of her silver iris visible. \n\nLust, light, and fear. Those are the three things that naturally widen the pupil ... and currently, fear radiated from my dear aethling's every pore. Before this moment I hadn't truly had any motivation to face Michael, other than duty to my king. \n\nBut now, seeing Maria small and shivering like this, a blossoming anger towards the arch-angel unfurled. I did my best to stifle my growing rage. \n\nWith a soft hand, I placed my palm on Maria's cheek. Her skin was cold and damp. \n\n\"Are you alright, dear one?\" I asked. \n\nHer body tensed up under my hand and she shied away from my touch. \n\nConfused and worried, I withdrew my hand as if I'd been burned. \n\nAh, I thought after a moment, her fear is not for Michael ... it is ... for me. \n\nThe anger that had been roiling and boiling inside of me reached a crest. Before I knew it the room was dark and cold and tinged with a wicked red hue. \n\nNever before had I felt this ... hurt. \n\n\"What did you dream of, my pet?\" I asked in the calmest voice I could muster. \n\nMaria huddled the sheet close to her body, attempting to cover herself. Her eyes had begun to water again. \n\n\"I won't ask again, aethling,\" I murmured dangerously. \n\nMaria's head sunk down. \"Michael visited me while I slept. He told me some things ... and he showed me even more.\" \n\nMy mouth grew dry. \"What did he say?\" \n\nMaria pulled her legs up to her chest and set her head on her knees. She closed her eyes. \"He told me he was sorry he didn't make the protections around the Aethling awakening stronger.\" \n\nI nodded dumbly, but she didn't see. Her eyes were still shut. \n\nShe continued. \"He also said that the only reason you've been kind and loving towards me ... is because the Awakening bond works both ways.\" \n\nNo ... I thought. That's not possible. I would have felt it. I closed my eyes and dived deep to search out the bond's presence within my magic self. \n\nIt was not on the surface like I had expected. It was not a weak and subtle thing as I had imagined it to be, to escape my notice for so long. I did not find it amongst the roiling ocean of Dark magic I had at my disposal. I did not find it even deeper down, within the place where the dark flames of Destruction rested. Michael probably lied to her. I can't find it where a normal working would take hold. \n\nBut I hadn't looked everywhere. With hesitation, I searched farther down. \n\nThere, down in the deepest part of myself, I found my love for Maria. \n\nIt looked like a golden cord, made up all out of starlight and stillness. And like a gently twisting vine, it had entwined itself all around my true form. \n\nIt looked wholly out of place wrapped around the embodiment of The Prince of Unmaking. Like snow white lilies decorating a guillotine. Like a dove perched atop a lion with blood on its maw. \n\nMy anger cooled as fast as it had risen. In its place was a pit of sadness and disgust. Our love is a lie, I thought to myself bitterly. No matter how much I might wish otherwise, this beautiful magic was guiding me to act against my nature. \n\nI opened my eyes and found myself looking into Maria's bright silver eyes. \n\n\"What else did he say?\" I asked, my voice sounding hollow and dull. \n\nMaria regarded me warily, though not with the same fear as before. Now she simply looked confused and tired. \n\n\"He showed me visions of you,\" she whispered. \"I watched you murder an entire village with strange black fire ... I watched you kill other angels ... I watched you laugh at their suffering.\" \n\nI couldn't remember what specific nights those might have been. There had been many in the early years. \n\nMaria watched my eyes to see if I would deny the truth of Michael's dream visions. I held her gaze as my stomach churned in regret. \n\n\"You knew that I was a monster,\" I said. \"In France\u2014in my library\u2014you caught an inkling of the black deeds I have done.\" \n\nMaria nodded once, her blonde hair swirling and falling in front of her face. \n\n\"You said you did not care then,\" I said. \"Has that changed? \n\nMaria pulled her hair back and looked at me with an expression I hadn't seen from her in some time. Her face was fixed in the defiant expression she had worn during our first moments together. With a speed I had forgotten she possessed, she blurred out of bed and shoved me. In my surprise I tripped over the chair Jon had been sitting on and fell hard onto the floor. \n\nShe was on top of me in an instant, her delicate nose a mere finger breadth away from mine, her golden hair hanging down and around us framing both our faces. Her hands rested on my chest crackling with unspent Light magic. I could feel the energy against my breastbone, and I could see the azure blue glow reflected off the floorboards. We held this position for a moment. \n\nAll that could be heard was the sound of our breath and the gentle hum of Maria's magic. \n\nThen Maria spoke and the words she whispered were words for remembering. They were words that resonated within me. \n\n\"There is some part of me,\" she said, \"that wishes to burn you to a cinder for every black deed that you wrecked upon the weak and innocent.\" \n\nHer hands on my chest shook and the magic that she held against me began to burn and char. It hurt, but I was too stunned to move. \n\nMaria closed her eyes and a tear that had been mantled on her lashes dropped and landed on my cheek. She drew a breath and continued. \"But that same part directs the bulk of her fury and disgust at the rest of me.\" A great tremor wracked her body. The magic that had been eating at my chest went still. \n\nSlowly, she lowered herself and gently pressed her forehead against mine. \n\n\"I am disgusted with myself ... because even after witnessing your crimes first hand ... I still love you.\" \n\nWords for remembering. \n\nWords that made me ache inside. \n\n*** \n\n-Alarial- \n\nThere. \n\nI had said it. \n\nThe fear and confusion and the grief all rushed out of me. I now felt pleasantly empty and numb ... like a wound had just been cauterized to stop the bleeding. \n\nNow I let myself think about nothing but the man lying beneath me. \n\nI did not think about the terror I had briefly felt when I had seen his face as I woke. I did not think of the part of me that clung to any semblance of right and wrong. That part had quietened. It had left me alone with my misguided love. \n\nSlowly, Devnik raised his arms and wrapped them around me. \n\n\"Thank you, Maria,\" he said, his voice hitched and faltering. If I didn't know better, I'd say he was close to tears. \n\n\"My real name is Alarial ... Master,\" I said into the crook of his shoulder. \n\nHe nodded once. With a soft hand, he took hold of my chin and looked at me. His eyes were warm and fire red. \"My name is Devnik,\" he said, \"not Master.\" \n\n\"But the bond makes me obey\u2014\" I began, but Devnik shushed me with a kiss that was long and deep and perfect. \n\nWhen he pulled away, he ran a hand through my hair. He pulled on one strand playfully. In that moment he looked nothing like a demon ... not even a little bit. \n\n\"Alarial is a beautiful name,\" he said. \"I like it.\" \n\nAnd just like that, my world fell back into place. \n\nFor a handful of seconds. \n\nA white flash scalded its way through the window ... and a loud boom accompanied it ... like thunder after lightning. \n\n\"Devnikolus!\" yelled Michael from outside, his voice sounding unnaturally loud. \"Events have occurred that I cannot explain and there are schemes in motion that I cannot divine!\" The timbers of the house shook slightly under the force of Michael's voice. \"I am coming in!\" Michael continued. \"I desire answers. These plots and plotters must face the Light's accounting with valor!\" \n\nDevnik smiled sadly at me. I nodded at him. We stood as one. \n\n\"No need!\" my Dark God roared back in an equally loud voice. \"I will meet you outside!\" \n\nMy eardrums throbbed from all the yelling. I wondered what the nearby humans must think. \n\nWait, did Devnik say outside? But it's daylight! \n\nI turned to tell Devnik off for being impulsive and forgetting that it was daytime. I never got to say a word, though. Before I could speak Devnik was already bounding through the hall and down the stairs. \n\n*** \n\n-Daniel Fleeting- \n\nConsciousness came to me slowly. \n\nMy body hurt and my eyes felt crusted shut. For a moment I lay still without moving. For an instant I was at peace. It felt good to just lie here ... motionless. \n\nThen the pain hit. Tiny white-hot knives seemed to dig into my skin wherever they could. With the pain came despair. \n\nHow could I have been so stupid? I thought bitterly to myself. How could I let myself fall into a trap so easily? \n\nAround my wrists and ankles the heavy weight of the manacles ensnared me. Curiously, however, I was lying down, rather than dangling from the ceiling. \n\nWhat had happened since I passed out? With surprising effort I managed to open my bleary eyes. \n\nI was greeted by pure, unbroken darkness. \n\nFor a moment I thought I had gone blind. I thought perhaps Maria's magic had destroyed my vision, that my demonic core had yet to heal me. \n\n\"You are not blind,\" came the voice of Vraiel inside my head. \"From what I can sense, we are deep underground.\" \n\nI tried to sit up. I managed to lift my head, when my magically induced injuries screamed in protest. My head clunked back down onto the cold stone floor and I gasped in a desperate breath. \n\n\"The damage that the aethling inflicted was severe,\" said Vraiel. \"It will take some time for the stone heart to heal us.\" \n\n\"So what?\" I asked wearily. \"Do we simply sit here and await our fate? We don't even know where we are.\" \n\nI sensed Vraiel attempting to send me soothing emotions, but my mood was black and full of bile. We had come so close to our goal ... and yet we had been outmaneuvered so easily. \n\nVraiel sighed in my head. \"Let me try to create some light,\" he suggested. \"Lend me control of your arm.\" \n\nGladly, I yielded control of my right arm. It stopped hurting immediately. \n\nVraiel lifted our hand. The manacle and chain rattled as our arm moved, but it did not restrain us. Vraiel began to pull on our store of Light magic. A bright bloom of blue light blossomed on the tips of our fingers. \n\nHe flicked our index finger and the ball of magic drifted slowly up and away. It eventually struck the ceiling. The orb erupted into an illuminating blue flash. Suddenly, the entire room was bathed in a gentle glow. \n\nI cast my gaze about as best I could from the ground. \n\nFrom what I could see, the room was startlingly simple. The walls were made of smooth black stone, and the chamber itself was hardly expansive. It was maybe eight paces from one end to the other. \n\nNot that we would be doing any pacing. \n\nVraiel relinquished my arm and the pain in that limb returned. \n\nI moaned piteously in the dark. \n\n\"There's no door in here,\" Vraiel said, his voice heavy. \"That explains why the chains aren't attached to anything. We couldn't leave even if we wanted to.\" \n\n\"Great,\" I said aloud. \"This room was designed to be accessed only by translocation magic. So we'll just wait for Devnikolus to pop in, shall we?\" \n\nVraiel didn't answer, but I could tell he was brooding. \n\nRight then, my demonic core roared into life. Red sparks glittered all over my bruised body. The pain that normally accompanied the mixing of demonic and angelic magic was added to the already present pain. \n\nI nearly lost my mind. \n\nVraiel helped me by taking control of my entire body while I spasmed in pain. His aid helped numb a good portion of it, but it was still many moments before I could think of something besides the pervasive agony. \n\nFinally the pain died away, and the red sparks guttered and winked out. \n\n\"The price of eternal life ... eh, Daniel?\" said Vraiel. He didn't say it unkindly, but I couldn't help but feel resentful. \n\n\"Don't you start having one of your moods, Vraiel,\" I said past a thick tongue. \"If I have to rehash the past with you now, of all times, I will probably strangle us with the chains.\" \n\nVraiel chuckled. \"Truthfully, I doubt I could make you feel any worse.\" \n\nThat was comforting. \n\nI tried sitting up again. My body contracted smoothly. I managed to flex my core muscles, which brought me upright easily. It happened like this every time. First there was the pain, and then my body was like new. \n\nI spied my sword lying tangled up in the black iron of the chains a pace away. I pulled it out from the mess of metal. As I pressed my hand into the grip the familiar warmth and power that I always came with my Judicar sword jolted up my arm. ",
        "Feeling slightly more in control of my desperate situation, I pulled my legs up and underneath me. I lay my sword across my lap and adopted the meditation pose that the fae called 'The Stone that Splits the River.' My mind slowed as I lowered myself into the meditative exercise. \n\nI took stock of all the wounds that had healed. I took stock of how much magic Vraiel and I had at our disposal. I took stock of the demon heart. It beat with its normal hypnotic pulsing. \n\nI moved on from the heart, lest it take me from my meditation with its lurid impulses. \n\nThen came a voice. It was so quiet and muffled, that had I not been in the hyperaware state that I was, I would never have heard it. \n\n\"Devnikolus.\" the soft voice said, \"events have occurred that I cannot explain and there are schemes in motion that I cannot divine.\" \n\nFor a moment ... I thought I had imagined it. \n\n\"Did you here that, Vraiel?\" I asked. \n\nVraiel ... for the first time in many centuries ... was stunned, and just a bit afraid. \n\n\"Vraiel?!\" I called. \"What is it?\" \n\n\"My God ... why would he come here?\" Vraiel said to himself. \"What have we walked into?\" \n\nVraiel was beginning to scare me and that sharp emotion rent me out of 'Stone Split River.' \n\n\"What is it! What was that voice?\" I asked again, my tone taking on a hard, frightened edge. \n\n\"Archangel Michael is on the manor grounds,\" Vraiel said, his voice disbelieving. \"There is high Celestial intrigue at work here, Daniel. Archangels and Demon Princes do not meet for anything less.\" \n\nSurely Devnikolus wasn't planning to fight Michael, was he? \n\n\"We have to help him!\" I sprang easily to my feet. The chains rattled, but at my full strength they did little to weigh me down. \"Let's just blast our way out of this place,\" I said as I began to pull on greater amounts of our magic. \n\n\"We can't,\" Vraiel said, his voice tight with angst. \"That voice that sounded so soft was actually a yell to shake the treetops.\" \n\n\"Oh. That must mean\u2014\" \n\n\"Yes,\" Vraiel thought. \"We are nearly half a league under the earth. An army of seraphim could not force their way out of this pit.\" \n\nI stood there for a full moment. \n\nThen I screamed my frustration. \n\nChapter 16 \n\nThe Confrontation \n\nThe Singers are the seven that tend to God's throne. They flitter about the Center Sphere, and chant the eternal praises of their Lord. When He does not sit the throne, the Light look to the Singers to lead them. \n\n-Taken from Alexander Morningstar's 'Celestial Matters.' \n\n~ \n\nDevnik \n\nI jumped the full flight of stairs in my haste. I landed at the bottom as gently as an autumn leaf, as silent as a whisper. My movements might have been quiet, but my body was shaking with an eager, uncontained readiness \n\nA brief pause took me as I reached out towards the oaken front door. Outside was the full light of the late morning. The memory of what had happened the last time I had stood under the sun's rays flashed vividly in my mind. \n\nMy chest itched as if it could feel the remnants of the cut Cariel had slashed across it. \n\nI put my hand on the door, and heaved it open. \n\nLight spilled across my face. \n\nFor a moment I had to suppress a deep seated instinct to flinch and cower in the presence of the Light's light. When I was composed, I cautiously I tried to take a step outside. I found my leg ready and able to move. \n\nThe daylight shield was working. \n\nNow then... \n\n*** \n\nCariel \n\nI sensed Devnikolus' presence blur past the door to the guest room. \n\nHe was going out there. \n\nHe was really going to go face Michael. It seemed almost surreal. It seemed unbelievable. For the vast majority of the Light, the Arch-Angels were all-powerful and unassailable. \n\nOne might more readily scold a thunderstorm for its actions than an Arch-Angel. One might more readily fight a mountainside than fight an Arch-Angel. \n\nFor a brief moment I worried. By all rights, I had held my own better than I had any right to in my fight against the Prince of Destruction. \n\nMichael was so far above me in terms of power and position that it made my head ache. \n\nI wondered why he was here... \n\nPerhaps he was here to offer the aid he had once refused me? \n\nI had met Michael twice before. Once, through Michael's friendship with my Celestial Superior Johoel. \n\nThe second was when I went to beg for my half-sister's freedom. \n\nIt had taken me two full days of begging and bartering before I was allowed entrance to the Center Sphere. When I had finally stepped into its golden halls, my meeting with Lord Michael had been brief. \n\nHe had told me that he could free Alarial from Devnikolus' control if I could get her to come away with me to a place where Michael would have time to meet us. \n\nWas he outside because he had changed his mind? Did he now intend to help us? \n\nA little too late for that, I thought angrily. Aid would have been welcome before I had this collar clenched around my neck. \n\n*** \n\nThe soulless man shifted slightly in his place by the windowsill... distracting me from my ruminations. \n\n\"You can't see the front garden from that window,\" I said, with some of my anger bleeding into my voice. \n\nThe strange human shrugged without looking at me. \n\n\"I don't particularly want to watch,\" he said mildly. \n\nThe man had been quiet and withdrawn since he had returned and told me about Devnikolus's sun shield and his plan to face Lord Michael. \n\nI raised an eyebrow. \"You watched me fight your Master,\" I said leadingly. \n\nJon laughed. \n\n\"Your Master too now,\" he said with a small smile. \"Unless I've been mishearing since I got here?\" \n\nI didn't rise to his jest. I wanted him to answer my question. \n\nWhen I didn't respond, he looked back at me and sighed. \n\n\"When my Prince fought you, there was a chance that I might prove useful,\" he said, his voice losing much of its mirth. \"But against an Arch-Angel... I imagine I'd just be a liability.\" \n\nI huffed at that, and pressed my shoulders against a wall. For a few moments I contemplated pouncing on this annoying human. I wasn't accustomed to hearing human sinners talk to me in such a manner. \n\nBut then...I thought about the punishment Devnikolus had given me when I attacked the Bra'rul. I thought about the chains, and the blows he had rained down on me. My body shivered and clenched. \n\n\"I want to watch,\" I blurted out suddenly. \n\nJon raised an eyebrow. \"I wouldn't recommend going outside.\" \n\n\"A window,\" I said quickly. \"Where's a window I could watch from?\" \n\nJon eyed me for a long moment. I could tell he didn't quite know what to make of me. \n\nSomething in that stare made me shift uncomfortably. \n\n\"Hmm,\" Jon said finally. \"I haven't been to this manor in about four centuries...but I think the bathroom might have a high window with a discrete view of the manor's front grounds.\" \n\nHe gestured out the door, and then turned back to look out the window that wouldn't show him anything of the fight. \n\nWithout saying another word, I left the human to his brooding, and crossed into the hallway. \n\nI was nearly to the bathroom when the door to the Master's chamber opened. Alarial stepped out, and neatly closed the door behind herself. \n\nShe turned, and froze when she saw me. \n\nMy half-sister's blond hair was an absolute mess...it looked like she had been the loser in a fight with her pillows. Her clothes weren't much better. She had slipped her old travel clothes on. A grass stain clung to the knee of her brown pants, and it looked like a few small specks of blue blood had stained her shirt at the shoulder. \n\n\"Are you going to watch?\" I asked simply. \n\nAlarial gave me a hard...scrutinizing look. \n\nI could only imagine what she saw. I was dressed in a heavy red robe that Jon had found in the guest room dresser. I still felt slightly nauseous and unwell from Lord Michael's compulsions. \n\nBut more than that... I could feel the lingering shame of my display earlier. I had told a demon that I would love him if he satisfied my addictions...and she had seen it. \n\n\"Yes...\" she said slowly, her silver eyes betraying her distrust. \n\nI turned, popped the bathroom door open, and gestured for her to follow me inside. \n\nThe window was too high to see out of for someone of my height. Scowling, I grabbed the copper bathtub, and dragged it underneath the window. \n\n\"What are you doing?\" Alarial asked from the doorway. \n\nI put one probing foot on the side of the tub. It seemed it would hold my weight without tipping over. \n\n\"The human said this was the best window to watch from,\" I said, attempting to keep the ridiculousness of the situation out of my voice. \n\n\"And what?\" she asked frostily, \"Are we going to take turns standing on a wash tub?\" \n\nI edged my feet over, so that there was space for her to stand on the side as well. \n\nAlarial tentatively stepped up onto the tub next to me...I could smell the Demon Prince's scent on her. \n\nI tried to ignore the feelings that roused in me...and turned my attention to the grounds beyond the window...where a dark haired man dressed in a black waistcoat was slowly sauntering toward a copper haired man adorned in a simple white tunic. \n\n*** \n\nDevnik \n\nThe wind was high in the tree branches as I walked slowly and measuredly down the garden path. The pleasant and unusual feel of the sun's warmth was at my back. Occasionally the breeze would swoop down and cut the heat with a tingling chill. \n\nI felt all these things as I approached Michael. He was taller than me by an inch or two, and broader as well. His face was sharp and harsh, and framed by a ridiculous mop of bright bronze hair that curled every which way. \n\nHe was just what I expected...just what I had heard. \n\nTo his credit, he didn't attempt to do anything awe inspiring or magically intimidating. \n\nThat was the low sort of posturing that lesser demons and humans might take note of...but not me. Instead, he simply stood in the middle of my garden with his hands clasped behind his back. His face was stern, and slanted in an angry, disapproving expression. \n\nBut that was all the reaction my appearance mustered from him. \n\nI stopped ten paces in front of him, and gave him my best smile. If he was not going to play the role of the righteously indignant angel, then I would happily take up the mantle of the mocking demon. \n\n\"So wonderful of you to drop in Michael,\" I said, layering my voice with false graciousness. \"You must excuse my lack of hospitality. I would have made the servants put the tea kettle on had I known you were coming...\" \n\nThe Arch-Angel cocked his head slightly to the side. His silver eyes narrowed. \n\n\"And yet,\" he said, \"You are wearing a daylight shield. You must have known I was coming in order to prepare...\" His voice was low and rich, but his tone was far too mild for an irate Angel. \n\n\"Are you insinuating that I have purposely not prepared any tea?\" I asked wryly...trying to diffuse the nerves that this Angel inspired in me. \n\nMichael frowned and waved a hand. \n\nSuddenly, blue sparks erupted from Michael's fingers, and blurred towards me at a shocking speed. I barely managed to raise a hand in time and knock the spell away. \n\nMy skin fizzled and burned from where the magic had touched my skin. I shook the pain from it with a grimace. \n\n\"Speak respectfully Devnikolus,\" Michael said, with nothing more than faint disapproval. \"Goading is far beneath us both.\" \n\nI blinked once and nodded. \n\n\"Very well,\" I said as my magic healed my charred flesh. \"I did know that you were coming.\" \n\nMichael inclined his head and returned his hand behind his back, \"Thank you,\" he said. \"I appreciate your civility.\" \n\nHe paused then. The sun slipped behind a passing cloud, and my garden darkened briefly. In the distance I could hear a horse and cart trundling down the dirt road. \n\n\"Devnikolus,\" the Arch-Angel began, \"would you please tell me why you killed a Judicar bonded Angel, and then killed Legionnaire sortie fifty-four?\" \n\nThat was very direct. \n\nI looked up at the sun. I estimated that fifteen minutes would be long enough in order to give Lucifer his half-hour. I just needed to keep him here a little longer. \n\n\"I'm afraid I can't tell you,\" I said, surprising myself with the sincerity in my own voice. \n\nMichael frowned. \"So there is a scheme,\" he said evenly. \"I wonder what could it be?\" \n\n\"Perhaps I needed their deaths for a greater Working?\" I suggested, hoping to keep him talking a few moment more...before the fighting began. \n\nMichael shook his head, \"No,\" he said almost too himself, \"I don't sense that you've stored their essence anywhere.\" He paused, then said, \"Could you have been trying to draw out Viriel? I know you have had encounters in the past...\" \n\nI nearly laughed aloud. I stifled it quickly. I doubted Michael would appreciate a laughing demon. \n\n\"Hardly worth my time,\" I said. \"He was an amusing distraction over the years...nothing more.\" \n\nThe angel nodded. \"Yes...quite,\" he said. \"And then I cannot forget that you anticipated my arrival...that means that you've either given this plan a good deal of forethought...or you've had some sort of access to predictions of the future.\" \n\nI stood still and silent. Watching Michael think was awe-inspiring. He hadn't been wrong yet. \n\n\"And then,\" Michael continued, \"there is the fact that you have chosen to stand bravely against me...rather than slink into the shadows...as your kind is want to do.\" \n\nI felt a brief twinge of irritation flicker in the corners of my mouth. Michael stood before me calmly and unafraid. A gentle breeze swept through the garden. The angel's bronze hair moved slightly in the wind. Above, the cloud covering the sun was blown gently away...and light bathed the manor grounds once more. \n\nIt took me a second before I was sure I could speak calmly. \n\n\"Perhaps I've found my courage,\" I said, biting back darker words. \n\n\"Courage can come and go,\" Michael said, as if he was conceding a point I had made, \"But I've found that unless valor rests at the heart of who you are...then most have to have an underlying reason for finding fortitude.\" \n\nI was beginning to find Michael's calm...irritating. \n\n\"Well,\" I said, \"As I've mentioned, I fear I am going to be less than forth coming about my motivations.\" \n\nMichael sighed. He fluidly lowered his stance. He brought his hands up and out from behind his back, and widened his fingers and thumb into a traditional magic casting stance. \n\n\"I had wanted to avoid this Devniel,\" Michael said softly. For a brief moment, I could detect the great well of pity and sadness Michael felt for me. He felt the sadness that only comes from looking on at a creature that has known heaven... and will never return. \n\nI lowered myself down into my own casting stance. \n\n\"I've never met you... and you never knew me when I bore that name,\" I said as I felt vitriol and pain crystalizing in my gut. \"I forbid you to utter it.\" \n\n\"Very well,\" Michael said. \"I must avenge those of the Light who have been killed. If I cannot do it with words, I will do it with actions. Let us be brave together demon.\" \n\nI opened my mouth to retort, but before I could utter a word, Michael twirled away from me. He whipped the back of his hand around and a wave of shimmering magic exploded outward at me. \n\nThe talking was apparently done. \n\nI drew on my power. Red sparks fluttered as I shot both my arms up into the air. Earth from my garden rose up and in front of me like a shield. The clumped and matted wall of dirt flashed and was turned into a fine powder as Michael's spell connected. \n\nAnticipating his next move, I pushed off on my left foot, and blurred away to my right...just in time to dodge a blinding gout of blue flames. \n\nAs soon as I touched back down to the ground, I pivoted, and jabbed both index fingers at my opponent and cast. \n\nTwin red beams of demonic magic sliced towards the Arch-Angel. \n\nMichael ducked underneath them both and rolled away. In a neat forward turn, he sprang back up to his feet, and pushed the heel of his palm at me with supernatural celerity. \n\nA shockwave of wind hurtled at me. It wasn't a traditional spell, and it caught me wholly unprepared. \n\nThe gale hit me in the face with the strength of a tidal wave. It lifted me from my feet...and I somersaulted bonelessly through the air. \n\n*** \n\n-Alarial- \n\nA small rasping scream caught in my throat as I watched Devnik fly end over end before landing in a hedge. My breath fogged the dirty glass window, and both Cariel and I hastily wiped it away. \n\nThis was too much. When Cariel and I watched them talk for so long I almost convinced myself that there would be no fighting at all. \n\nHow foolish I was. \n\nMy Dark God burst out the hedge in a flurry of leaves. In each hand he held two glowing red orbs of magic. The magic radiating from Devnik's magic set my face tingling. I held my breath as I watch Devnik throw one spell after the other. \n\nMichael dodged them both...and I cursed under my breath. \n\nTo my surprise, so did Cariel. \n\nWithout taking my eyes from the garden below, I asked, \"Why would you hope for a Demon's victory? From what you've said, isn't Michael our salvation?\" \n\nI watched Cariel's grip tighten on the window sill. She leaned her head forward slightly, and strands of red hair fell over her shoulders. \n\n\"You heard what I said last night,\" she said in a voice barely above a whisper, \"you heard the shameful things I want the demon to do to me.\" \n\n\"Yes,\" I said with a little heat in my voice, \"I did.\" \n\nWe fell silent as Michael unleashed a torrent of ice blue lighting at Devnik. I watched in horror as Devnik was forced to catch the spell with his hands. His face contorted with pain. \n\n\"Why doesn't he draw his sword and close the distance!\" I yelled at the window, as if I was a spectator at a game of court tennis. \n\n\"They're fighting very traditionally,\" Cariel said, as if she were my teacher. \"Beings of greater power begin by exchanging spells and taking the other's measure...when they draw swords...things will be different.\" \n\nI watched Devnik take a glancing blow to his shoulder as Michael unleashed a fresh spell. Devnik was spun by the magic...and he barely dodge Michael's following attack. \n\n\"He's losing,\" Cariel said softly. A piece of the wooden window sill splintered in her grasp. \n\nThe anger I had carried against Cariel leapt up, like a new flame from a smoldering coal. \n\n\"Be quiet!\" I screeched, as I forced my eyes from the garden. \"There is no one more powerful than him!\" \n\nEven as I said the words I realized how desperate they sounded. \n\nCariel turned her head to look at me. Sorrow was etched on her porcelain white face. Now that she was looking at me, I could clearly see tears dripping down her cheeks. \n\nHer voice hitched as she spoke. \n\n\"On any other day you'd be right...\" she said slowly. \"But right now...against that Michael...you're wrong...as wrong as you can be.\" \n\nI grit my teeth. I wanted to claw Cariel's eyes for doubting Devnik...I wanted to do...something. \n\nCariel stepped down off the tub, and sat down against the bathroom wall. She leaned her head back, and she stared up at the ceiling. \n\n\"Michael will probably kill him,\" Cariel said her voice dull and listless. \"If you're lucky, he'll forgive you and forge you another Aethling bond with a respectable Angel...as for me...hopefully he kills me quickly. I deserve no less for my failure...and my...desires.\" \n\nI was about to respond to her...or attack her...when the bathroom door opened, and Jon walked in, looking about pale and angry. ",
        "\"Be quiet Seraphim,\" Jon said in a loud, furious voice. \"He doesn't need to win. He just needs to last another ten minutes.\" \n\n*** \n\nDevnik \n\nBlack damn. \n\nHe was good. He moved well. He didn't waste more power than he needed to. His spells were ingenious and hard to read. He'd scored two hits on me...and all I'd manage to strike was a tree and empty air. \n\nWe're right here Master... came the dry, laughing whisper of Destruction. Michael would look wonderful dressed in black fire...use us\" \n\nNo. \n\nI couldn't use Destruction. That would change the nature of our battle. Right now, we were both testing the other. Using my black flames would constitute a lethal attack, and I didn't want to escalate things when I just needed to stall for a bit longer. \n\nThen I heard Jon's voice...just barely audible above the magic crackling amongst the garden. \n\n\"He doesn't need to win,\" Jon said, in what must have been a yell, \"He just needs to last another ten minutes.\" \n\nMichael's eyes narrowed in confusion, and I knew he had heard. \n\nShit. \n\nFavorite human or not, Jon was going to feel the full weight of my displeasure for that slip. \n\nThinking quickly, in an attempt to distract the angel from analyzing my idiot servant's words, I drew both my hands back, and flung three consecutive waves of bright red sparks at Michael. The arch-angel didn't even blink in surprise, and he was already in motion. He dodge the first by ducking underneath it, the second by jumping over it. \n\nHowever, as the third one approached, I anticipated how he would attempt to dodge...by moving to the side with his dominant foot. \n\nAs Michael shifted his weight to his right foot...a snarled tree root erupted from the ground in a spray of earth and bedrock. Like a snake, the wood of the root coiled itself around Michael's foot, and prevented him from sidestepping. \n\nThe blast caught him in the stomach. I watched the breath whoosh out of the arch-angel as his face scrunched in pain and surprise. The force from the spell would have sent him flying, but the root around his ankle pulled him up short, and he jerked to a rough stop before landing on the ground. \n\nHe wasn't down for long. \n\nA field of blue shimmered into life around Michael as he threw up a magical barrier. The follow up spell that I had already cast at him rebounded off his shield and set a rose bush on fire. \n\nThe angel sat up, and ripped the root from his leg like it was made of old parchment. He rose steadily to his feet and massaged his stomach. The white tunic that he was wearing was slightly blackened from my spell. \n\nMichael let his barrier spell die as he stared at me. \n\n\"The Dark have no command over the trees and plants of Creation,\" Michael said plainly. \"How did you...\" The angel trailed off as he began casting his gaze over the manor grounds. \n\nHe inhaled deeply...then nodded. \n\n\"These plants were grown in Hell,\" he said. His mouth turned down into a frown as he bent down and pulled a blade of grass from the ground. \n\n\"This place is your Crossing,\" Michael said, as he dropped the grass in his hand. \"Why have you lured me here Demon? You risk much by revealing this place.\" \n\nI smiled, perhaps he had forgotten Jon's mistake. \n\n\"I wanted to show you my garden,\" I said as I made an expansive gesture with both arms. \"I find it so hard to get an honest opinion about my roses from the servants.\" \n\nThe arch-angel sighed. He looked sad, and tired. \n\n\"What do you hope to gain from all of this Demon?\" he said. \"I heard a man inside the house claim that you were stalling me. Do you wait for reinforcements?\" \n\nI decided not to answer. I lowered myself back down into my casting stance. \n\n\"Has all of this been an attempt to kill me?\" Michael asked \"I can't think of anything...\" He trailed off suddenly, his eyes widening as his face alit with shock and frustration. \n\n\"No,\" he said slowly... \"This is a distraction!\" He yelled, his voice having lost its calm. \"Curses, the monastery!\" \n\nThe Arch-Angel turned. Enormous marble white wings erupted from his back in a flurry of blue sparks. With a speed I had rarely seen, Michael was already tearing down the pathway toward the entrance before I could take a breath. \n\nFuck. \n\nI closed my eyes hurriedly and threw my concentration toward the Working I needed to perform. \n\nRed lighting exploded from my palm as I raised it up towards the sky. Power rushed from my body as I poured my will into my earthly domain. \n\nMy domain responded...and the earth shuddered as my Crossing awoke. \n\nWhere once the Irish landscape had surrounded the grounds to my manor house...now suddenly there was nothing but an ever expanding blackness. The surrounding trees outside the walls of my property were gone...as were the subtle sounds of the nearby city. Despite the fact that there was nothing but darkness where the sky used to be...if one were to look around at the garden...one would think the sun still hung overhead. \n\nI had done it. \n\nI lowered my hand wearily and looked to see if I had been in time to catch Michael. \n\nAt the very edge of the grounds Michael had stopped. He was floating in the air...looking out into the never ending blackness where the mortal world used to be. \n\nAnd for a moment...everything was still and hushed...as we stood in a world straddled between Creation and Hell. \n\nChapter 17 \n\nThe Prince of Destruction \n\nI said the words, and the world fell away. \n\nThe Demon appeared, and asked me to stay. \n\nHe said Hell was near, he could show me the way. \n\nBut I ran and ran, fearing the price I'd pay \n\n-A strange poem entitled 'Winnowing' \n\n~ \n\n-Daniel- \n\nI was sitting with my back to one of the black stone walls. My sword was in my lap, and my mind was focused as I strained my supernaturally enhanced hearing, trying to catch the sound of Michael and Devnikolus on the surface. \n\nVraiel was tense and angry in the back of my head. \n\n\"I can't tell who is winning,\" he said. \n\nI ran my fingers down the length of my sword. Over the years, I've found that this action calms us both. \n\n\"You said that there was no chance of Devnikolus defeating Michael,\" I said. I tried to pitch my voice in a low and soothing tone, but I was nervous as well, and Vraiel wasn't fooled. We sat in silence. Nothing moved in the underground room except for the faint blue glittering of our light spell. \n\nA tiny red spark jumped across the far wall, directly across from me. \n\nI blinked. Thinking that I had imagined it. \n\nI opened my mouth, about to ask Vraiel if he had seen anything, when an explosion of Demonic magic thundered into life. \n\nHarsh runes, written in the jagged lines of Hell's language appeared in the four corners of the wall. The four runes began to grow across the wall in sharp lines... the way ice cracks upon a frozen lake. They glowed a deep, pulsing red as they wove themselves into a great pattern. \n\n\"I don't believe it,\" Vraiel uttered in my mind. \"This...this cannot be.\" \n\nThe magic symbols continued to dance across the wall. They swirled and curled in a frighteningly complex pattern. Then, like a bolt slipping onto a latch, the demonic runes halted with a thud. \n\nBefore me, the red lines of power had settled and cooled into the shape of an ornate double door. Above the twin doors lay an arch-way, and within that arch, were words: \n\n\"The Broken Gardens,\" I whispered, as I read. \n\nInstinctively, my legs and arms folded in front of me as a feeble, childlike attempt at protection. \n\nInsidious power, like none I had ever felt, emanated from that door. Muffled voices seemed to slip from the seams of the stone. \n\n\"Vraiel?\" I asked, as my voice trembled, \"What is that?\" \n\nThe doors creaked open slightly, and I couldn't help but gaze within. \n\n\"It is a Crossing,\" Vraiel said. \"We sit at the threshold of hell.\" \n\n-Alarial- \n\nJon had his hands over his eyes. When we had all realized that Michael had heard him, a shudder had run through the butler's body that I had thought might make his knees give out. \n\nHe had remained standing, but his shoulders had sagged, and his hand hadn't left his face. \n\n\"I'm such a fool...\" Jon muttered to himself. \"He's going to punish me for decades for this...\" \n\nI wanted to comfort him, but I couldn't tear my eyes from the window, where something I had never envisioned in my wildest imagination was occurring. \n\nThe world had disappeared. \n\nWell...not all of the world...just well...most of it. \n\nOutside of the manor grounds, the rest of Ireland seemed to have...disappeared. \n\nInstead, there was nothing but a frightening black space. I hadn't realized my love could do something like this. What had happened? \n\nMy eyes flicked toward Devnik. The red column of magic coming from his palm had thinned, and then guttered out. The spell was apparently over. My Dark God lowered his hand hesitantly. I couldn't quite see from so far away...but it looked like his hand had blackened...as if burned by his own spell. \n\nI twisted around on my precarious perch on the side of the bathtub. \n\n\"Do either of you know what just happened?\" I whispered. \"Everything has gone all...empty... outside.\" \n\nCariel didn't answer. Her legs were drawn up to her chest. Her slight pale body was shaking gently with tiny tremors. Tears were flowing freely down her face. Her eyes were closed tight. \n\n\"He had to trap him,\" Jon said as he dragged his hand down his face. \"Michael wasn't here for long enough, so Devnik had to prevent him from escaping and ruining Lucifer's plans.\" \n\nCariel's silent tears hitched at that...and her silent crying turned into audible sobs. \n\n\"But what did he do Jon?\" I asked loudly, all thoughts of whispering forgotten. \n\nJon looked at me. His face was too white and his brown eyes had unshed tears lingering within. \n\n\"He opened his Crossing,\" Jon said. \"We are in a realm in between Hell and the real world called 'The Winnowing.'\" \n\nI stared at him blankly. \n\nJon gave me a sad smile. \n\n\"When the Prince decides the time is right...this realm will dissolve...and every sentient being within not of the Dark will be given a choice. They can choose to resist the call of Hell and return to Earth...or they can allow themselves to be sucked into Devnikolus's realm.\" \n\n\"Oh,\" was all I could think to say. \n\n*** \n\n-Devnik- \n\nI smiled to myself. \n\nI had managed to drag my entire mortal domain into the Winnowing Realm. \n\nOrias had told me it was possible, if worse came to worse, but I hadn't really believed him. Winnowing is the realm a greater demon will take a mortal if it is believed that the mortal will be a boon to the Dark. \n\nIf the mortal accepts, he will pass into Hell, where Hell will corrupt them into one of the Dark. \n\nI chuckled lightly to myself. I wondered if Michael would be interested. \n\nBefore I could think of an appropriate taunt to yell at the arch-angel, I was distracted by a sharp sensation in my hand. \n\nI looked down. \n\nDark, shadowy flames were bubbling out of the hand I had cast the Working with. \n\nMy human hand had shattered. Already, fingers composed of pure Destruction were attempting to form to replace my lost appendage. \n\nI tried to focus my will on creating another hand before any more of my true form manifested itself. \n\n\"DEMON!\" Roared Michael at the outskirts of the manor gardens. \n\nI winced as the arch-angel's voice shattered my concentration. His voice seemed to vibrate the very earth. \n\nHe sounded angry. \n\nIn truth, I deserved his anger. I doubted anyone else in the history of Creation was bold enough, and stupid enough, to trap Lord Michael the Valiant in Winnowing. \n\nBut it was just for five minutes. Then, I would slip back down to my realm. I had been absent for a long time. \n\nSoon, I would finally be able to rest. \n\nI looked up from my broken hand. \n\nMichael was standing right in front of me. \n\nI hadn't seen him move...hadn't heard him move. \n\nHis eyes were inches from mine. They were the dark silver of a sky in a storm. \n\n\"Do you know what you've done?\" Michael asked. All his rage seemed to be gone. Now, all I could detect from him was sorrow. \n\n\"Friar Ferdinand's book was nearly complete. It would have changed lives.\" \n\nI opened my mouth to respond. I didn't know what I would say. \n\nHis fist struck me in the stomach. I'm suddenly doubled over, and in pain. \n\nCoughing, I tried to step back. \n\nMichael reached out and grabbed me by my hair and hurled me away. I strike the ground, hard. Tears gathered in my eyes and I have to blink them away. \n\nI look up and see him standing over me, his face a mask of sadness...but not mercy. \n\nMy nose broke as the heel of his hand crushed my face. Black ichor dribbled out of my mouth and covered my chin and the grass beneath me. \n\nMy body throbbed, threatening to come apart. \n\n\"Men would have read his book and known the Lord's love,\" Michael said, as he drew back his hand for another blow. \n\nI tried to collapse into magic and flee. \n\n\"Halt,\" Michael said in the language of the Light. \n\nBlue lighting crackled down my body. The pain was unbelievable. It had been eons since I had felt this kind of pain. \n\nThe whole of my arm shattered, and the inky black fire of Destruction began to stream out. \n\n'Master?' Came the dry questioning whisper of Destruction. \n\nThe flames wanted to know if I would use them. \n\nMichael's hand sparked as a new spell vibrated into existence. \n\n\"But now, Satan has probably killed him, and burned his writings,\" Michael continued as I writhed underneath him. \n\nI tried to gather my reserves, but summoning 'Winnowing' to such a large area had left me drained. I closed my eyes. \n\nThen I was flying. Blue sky mixed with the emptiness of Winnowing flew by. I crashed into the front door of my manor house. The strong oak doors splintered like kindling. \n\nWooden fragments pierced my human skin like needles. \n\n'Please Master?' Destruction called out. \n\nIt was so hard to resist now. My human body was battered and broken. Pain seemed to fill my every thought. My mental shields couldn't hold up much longer. Destruction was pouring out in place of my missing limb. It was too much. \n\nI acquiesced, and embraced Destruction. \n\nThe last of my fake form flaked away. True power, the likes of which I had suppressed for so long, rushed through me. Laughter began to bubble up from my sore throat. \n\nAnd then the change took me and everything faded... \n\n*** \n\n-Cariel- \n\n\"We need to be ready,\" Jon said, as he paced frantically back and forth in the tiny bathroom. \n\nA loud crack echoed from outside, and Alarial gasped. \n\nDevnik must have been hit. \n\nI ruthlessly suppressed a raging desire to go help him. Instead, I fingered my collar, and tried to think of happy things. I tried not to think about the Demon, or the choice I would have to make, now that we were all in 'Winnowing.' \n\nBut it was hopeless. A mere second passed and I was already trapped in another lurid fantasy. \n\nI'm naked with my legs spread, looking up at the Demon, awaiting his next command. His mouth is stern. His body is long and hard and entirely male. I can feel his dominance over me the way I'd feel the sun on my face. \n\n\"Do you know what choice you will make?\" Jon asked, breaking my fantasy. \n\nAlarial and Jon were both looking at me. \n\nMy sister's blond hair was tangled and her face looked frightened and nervous...but there was also iron there in the way she had set her jaw...I knew she'd made her choice. \n\nJon simply looked rattled. \n\n\"Yes,\" I said, as I kept my hand on the gold band around my neck. \n\nMy eyes unconsciously flicked back over towards my sister, looking for the anger and derision that I knew I deserved for my hypocrisy. \n\nBut she wasn't looking at me. Her eyes were back out the window. \n\nAnother crack echoed across the grounds from outside, and a bright blue light flashed in the window pane. \n\n\"Love...?\" Alarial whispered as she put a hand on the glass. \n\nA bright red light followed the blue one, and suddenly my senses came alive, as I felt a massive magical presence press against me. \n\nThen, I heard the laughter. It was like a dark, manic boom. There was no sanity, no goodness, in that laugh. It sounded like rocks grinding together. It was like nothing I'd ever heard before. \n\nI couldn't help but remembered some words that I had found carved into stone, as I perused the ruins of Alexandria. My commander, Seraphiel, had pointed them out me and the other Seraphim in our sortie. He had told us they described one of the ten Demon Princes. \n\nOnly now did I remember the words I had read so long ago. \n\nSoftly, I chanted under my breath. \n\nHis voice is like a breaking bone \n\nAnd the song of shattering stone. \n\nLike listening to a city burn. \n\nHe is the sound of the world \n\nComing Undone \n\n*** \n\n-The Demon Prince of Destruction- \n\nDevnikolus breathed in deeply. \n\nHe frowned. The stink of charred flesh and rubbled monuments didn't hang in the air. The cries of a broken civilization did not rise up to meet his ears. Strong men did not lie bloody and extinguished at his feet. \n\nThat was wrong. Devnikolus brings destruction wherever he treads. He looked around, needing something to burn. \n\nHis entire being screamed for the sweet song of ruin. \n\nHe looked around, and could see nothing but Hell wrought foliage. \n\nThe manor house... something whispered, and he scowled, there was nothing to burn here. \n\nAn angel clad all in white flittered in front of him on giant wings. \n\nMichael...whispered a part of the demon lord that cared for things besides damage and decay. \n\nPerfect. \n\nHe raised his hands, and limbs made all out of shadow and flickering flames rose in front of him. They were his true hands and he had missed them terribly. \n\nGouts of true black fire rushed forward. The angel's silver eyes showed fear, but his body was moving. He scurried back and forth, desperately avoiding the beautiful fire. \n\n\"Run little bird,\" Devnikolus said, pleased to hear his true voice on his black tongue. \"The struggle makes the inevitable undoing all the sweeter.\" \n\nThe angel shouted back at the demon lord while he moved and dodged and reeked of terror. \n\n\"You think this corrupt power will be enough Demon Prince?\" His voice was not as collected as it had once been. His calm had been broken. \n\nDevnikolus smiled. Other things would be broken soon. \n\nThe demon laughed, and then he moved. He glided forth...made of nothing but darkness and flames. \n\nSuddenly he was standing in front of the angel. The angel's face started in fear. He backpedaled furiously as Devnikolus reached out to touch him. \n\nBlue spells shot from the frightened angel's fingertips. They passed through Devnikolus, like pebbles through smoke. \n\nThe demon lord laughed again. Disasters like Prince Devnikolus heed nothing. A wall cannot stop the tsunami. A village cannot stand against the creeping lava. \n\nThe angel's fear deepened as Devnikolus's flames reached for him again. \n\n\"Enough!\" the angel yelled, as his wings shot him backwards. \n\nThe angel reached out his hand, and a sword appeared within it, out of a flash of blue lightning. \n\nThe shadow-flame creature cocked his head to the side as he stared at the gleaming silver blade. It had a royal blue handgrip and a golden cross embedded in the pommel. \n\nIcy cold power rolled off the blade. \n\nExcalibur...Whispered a voice inside of Devnikolus. Caution. ",
        "\"Now cease demon!\" the angel yelled. \n\nHe darted forth, jabbing the blade at his demonic foe. Devnikolus flowed away from the strikes. The sword did not touch him. \n\nThe angel's face was twisted in concentration. He was holding no part of himself back. He meant to slay the Prince of Destruction. \n\nThe sword whistled, as it rushed towards the demon's shadow-head. Devnikolus moved like liquid underneath the blade, and snaked around the angel. Black flames darted out, too close to dodge. \n\nBut then, the angel cut the sword at the flames, and they dispersed like smoke in the wind. \n\nThe Black Fire of Destruction could not find purchase on Excalibur. \n\nThe demon's fire shot out again, but not fast enough. \n\nThe bright blade sunk into the demon lord's shoulder. Ragged spikes of pain echoed through the demon. True pain, felt in the demon's true form. \n\nDevnikolus tried to shift himself away from it, tried to flow away from the cold biting metal. But it held tight. \n\nExcalibur resisted the Lord of Destruction. \n\nIt resisted like a tower amidst a hurricane, like an ancient oak amongst a forest fire...it stood against his chaos. \n\nThe Lord of Destruction howled, and threw out a wave of dark fire that encompassed the garden and darkened the sky. The angel was forced to withdraw and the sword slid out. \n\nNone of the fire found the angel's flesh, but it littered the field like pits of flickering nothing. \n\n*** \n\n-Alarial- \n\nI watched because I couldn't look away, even when the sword had been driven through him and that tidal wave of fire had erupted. \n\nMy eyes were fixed on the shadow-flame creature as it moved like wood-smoke around the garden, and shot black flames at Michael. Something in my gut curled at the sight of that fire. It was like an instinctive fear, like the kind that comes with deep water, or moonless nights. \n\nThat creature was the man I loved. \n\nEven though I was looking upon a true monster, my love for him was strong and clear through our bonding. Once in a while, I thought I could even see the shining gold cord of our joining deep within the flame shaped man. \n\n\"Jon?\" I asked, \"Is that what Devnik really looks like?\" \n\nJon, who had still been eyeing Cariel as she sat on the bathroom floor, looked at me. \n\n\"Yes, and no,\" Jon said. \n\nI had always wondered why people said that phrase. It was distinctly unhelpful. \n\n\"Meaning?\" I asked, as I watched Michael dodge another wave of fire, before cutting the rest with his sword. \n\n\"The human form, the one that you are familiar with, was what Devnik looked like when he was an angel.\" \n\n\"He was an angel once?\" I asked. I would have been more stunned, but my capacity for surprise had long been exhausted. \n\nJon nodded, \"He was Devniel, the angel of Building and Preserving. Then, something happened ages ago, and Devniel was corrupted by Hell into Devnikolus. It was then that he was cursed to live as that...thing...you see outside.\" \n\n\"But he can still appear as his angelic self?\" I asked. \n\n\"Apparently,\" Jon said, exasperated. \"I honestly don't know too much of the mechanics. He doesn't like to speak about it.\" \n\nCariel stirred from her place at that. She rose gracefully to her feet, and looked out the window. \n\n\"I think the thirty minutes have been over for a long while now...\" \n\n*** \n\n-The Demon Prince of Destruction- \n\nDevnikolus could feel the slow change. Like the first cracks in a strong barricade. Like the tremble that heralds a cracking mountain. The angel was slowing, and he was not. \n\nThe demon lord knew that he could break this angel. And the demon smiled, knowing that the sweet song of ruin would soon fill his veins. \n\nIt would be euphoric. \n\nThe sword was fast in Michael's hand, but the flames kept coming. It would be easier to fend off the quaking earth than to stop Destruction. More fire leapt forward. \n\nMichael screamed as a wisp of flame touched his tunic. The flames stuck and began to burn. A touch to his skin would end him. But the Angel was moving quickly. \n\nHe ripped the tunic free from his body. No fire touched his skin. The tunic was consumed by Destruction. Not even ashes remained. \n\nThe angel stood before him naked, with his hateful sword in hand. He was panting, but he was unmarred. \n\nBut Devnikolus laughed, for he knew it would not be long now... \n\n\"Devnik!\" came a voice from the broken manor doorway behind the Demon Prince. \"The time has passed! Dispel Winnowing, and let us escape!\" \n\nWho dares speak to me so? I am Devnikolus. Mortals would pray for plagues instead of me. \n\nBut then that annoying voice whispered, Jon. \n\nJust go... whispered the voice, Michael does not need to be destroyed. \n\nDevnikolus snorted. That made no sense. Everything needed to be destroyed. Men set stones atop one another so he could knock them down. Wood existed so he could burn it. Angels were made so he could twist them until they were still and lifeless \n\nNo...we must go, came the voice, but it was no longer a whisper. It filled the demon's head...it pushed him out. \n\nSuddenly, The Demon Prince of Destruction's strength was guttering. His limbs turned weak, and the flames of unmaking grew dim. His task was not finished...but he was fading. \n\n-Devnik- \n\nMy human body snapped back into place as I forced Destruction from my mind. Exhaustion hit me in an all-encompassing embrace. My legs wobbled, and I nearly fell to one knee. \n\nI tried to clear my weary vision. Michael was standing some distance away. He was naked, and all his rippling muscles were bunched and tensed. In his hand, Excalibur glinted menacingly. \n\nOut of the corner of my eye, I saw Jon standing with Alarial and Cariel in the splintered doorway. \n\n\"Alarial, Cariel,\" called Michael. \"Don't forsake yourselves. When this realm collapses, you will be faced with a choice. Do not abandon the Light. You have seen the corruption of the Dark first hand. Don't choose that for yourself.\" \n\nHe paused, before speaking softly, \"The Light will forgive all your trespasses. Love will purify you.\" \n\nI was barely listening to any of Michael's words. I was desperately trying to undo the tethers that anchored this in-between place to the Earth. I didn't want to face the sword of Legend in my current state. \n\n\"I already have my own love,\" Alarial said. \"He saved me from a miserable life. You didn't.\" \n\nI couldn't help but glance over at her, shocked. After all she had probably seen... \n\nI had hoped she would choose to accompany me if I had to open up Winnowing, but to actually hear her say it, that was another thing entirely. \n\nShe saw me looking, and gave me a small smile. \n\nThe last tether broke. \n\n*** \n\n-Daniel- \n\nThe tiny crack in the door to Hell widened. It was nearly imperceptible. But I had done little but stare into the waiting abyss between the gap in the doors. \n\nThen, the doors flung open, and I could do nothing but gaze into the true depths of the Hell that had opened up in front of me. \n\nWithin the door I could see a sky of twilight and royal purple...and what looked like an ever expanding garden, dominated by a single black tower in the center. \n\nThat was when I felt the pull. It was like icy hands had latched onto me, and they were determined to drag me, inch by inch, down into the depths. \n\n\"Resist Daniel\" Cried Vraiel in my head. \"Put everything you have into resisting Hell's call.\" \n\nI saw a shape pass like a ghost through the wall of my prison, and fly through the Crossing. Another shape followed the first. Then another. \n\nIn all, four entities swooped by me as they surrendered to Hell's pull. One of them had been Devnikolus. \n\n\"I think you're doing it Daniel\" Vraiel cheered. The doors had begun to close. Suddenly, the icy grip shifted. Now, it felt like my very heart was trapped in a vice. I slipped a little bit as I was dragged closer to the door. \n\n\"The heart is pulling us in Daniel!\" Cried Vraiel. \"If you feel you cannot resist, you must drop the sword. The sword cannot be allowed to pass into hell!\" \n\nIt wouldn't come to that, I thought. I had failed when faced with the temptations of the Dark once before. I would not submit so easily a second time. \n\nI felt a sharp tear in my chest. \n\nI watched in shock as my stone heart, with the pentagram etched into the side, exploded out of my ribcage, and tumbled through the door to hell. \n\nThe doors slammed shut, and then my vision dimmed. \n\nChapter 18 \n\nTalking of Eternity \n\nDon't fret my sweet. Endings don't last forever... \n\n-Forgotten Lovers \n\n~ \n\n-Alarial- \n\nIt wasn't painful. Not like I expected it would be. \n\nWhen Jon and Cariel had talked about Hell's 'call' I had imagined an uncomfortable and irresistible pull. \n\nBut there was none of that. It felt more like a question than a pull. I felt a cool presence embrace me, and it seemed to ask me if I would like to go with it. \n\nIt did not try and trick me. This 'presence' seemed to make it clear that Hell was our destination, and that I would be forever different should I choose to go. It also let me know that I could refuse, and remain on this Earth once Winnowing dispersed. \n\nThere was never any doubt. \n\nMy Dark God's warm red eyes were focused on me as I smiled at him. He returned my smile with a bright, honest one of his own. One that made his pale face dimple at the corners of his mouth. \n\nThen, right before my eyes, he sunk into the ground like he was a substance-less ghost. \n\nTake me as well. \n\nThe presence grew close around me, and a gentle grip pulled me through the earth. \n\nThrough a chamber deep underground. \n\nThrough a door not of this world. \n\n-Cariel- \n\nI watched my sister slide beneath the earth after her demonic lover and knew that all my efforts had been for nothing. \n\nHe is your lover too...Whispered the jealous side of myself. \n\nI could feel that Hell's call had settled on me. I wondered if I was the first Seraphim in history to feel this sensation. It was strange. Cold but calm. Questioning yet soothing. \n\nMichael was looking at me. \n\nA few short decades ago, I would have been bowing before this mighty man. I would have been awed to spend time in the presence of the great Archangel Michael. Now...all I felt was unsatisfied. \n\nI tapped a finger on the gold collar that encircled my neck. \n\n\"Do you think you could get this off?\" I asked. My voice was dull. \n\nMichael just looked at me. A tear trickled down his cheek. He seemed to be in shock. He genuinely hadn't expected Alarial to choose the demon. He truly believed that good always triumphed when it mattered. \n\n\"It will take centuries to unravel whatever locking magic Devnikolus might have devised.\" Michael said. \"We'll have to keep you isolated in case the mind control magic affects your judgment.\" \n\nHe sighed, and ran a hand through his bronze hair. \n\n\"It's over now Seraphim Cariel,\" he said, \"You go back to your Sphere, I need to check the monastery...though I know it is too late.\" \n\nI felt the compulsion to obey a celestial superior, but just then, the collar flared into life. Apparently, not accompanying Devnik down into Hell counted as trying to escape. \n\nOh...well that settles it then. \n\nI closed my eyes before I gave in and slipped into hell. I closed them mainly to spare myself from seeing Michael's expression, but also because I was really fucking tired. \n\n-Jon- \n\nI watched Cariel slip down after Maria. \n\nMichael's face twisted into open shock. \"Seraphim!\" He screamed. \"I order you to return to heaven!\" \n\nBut she was gone. \n\nHe rounded on me. Now there was anger on his face along with tears. \n\nI just shrugged. I had come to terms with this. My life as I had known it was over. I guess no human truly walks this earth forever. \n\n\"I made a deal a while back,\" I said with a forced laugh. \"I've got to go. Bye now.\" \n\nI gave him a jaunty wave, and stuck my tongue out at him as I went. \n\n*** \n\n-Devnik- \n\nHell welcomed me, as I sunk into its deep embrace. \n\nFor a moment, I was nothing but raw energy passing between the mortal Plane and the Demonic one. It was comfortable, and I could feel my pains ebbing away. I always enjoyed the transition back to Hell. It was like coming home. \n\nThen, I began to reform. \n\nThe press of a new reality began to reshape my physical body. My eyes began to see again, and my sense of touch, smell and hearing were returned to me. \n\nI blinked once, and smiled. \n\nI was sitting on my throne, in my tower, in the center of my Plane of Hell. My gaze swept over the throne room, where a very surprised Unami, who was sweeping the black marble hall, gave a startled yell. \n\nDespite my best efforts, I chuckled a little as he tripped over a blood red rug, and tumbled to the floor. \n\nThen, there was chaos. \n\n\"My Prince!\" squeaked the Unami. \n\nHe quickly stood and righted himself. He gave me a deep bow, and then sprinted off down a passage way, yelling news of my return at the entire tower. \n\n\"The Prince has returned! The Prince has returned!\" \n\n*** \n\nSoon, nearly my entire court was assembled in front of me. \n\nMy full court consisted of five X'irel and twelve Bra'rul, and I could see four X'irel and ten Bra'rul before me. \n\nAll fourteen of them were on one knee, lowered into a deep bow. For a moment, I simply gazed at them. Then, my eyes wandered up to high ceilings, where wrought iron chandeliers burned red wax candles. \n\nNearly thirty years since I had last sat upon this throne... \n\nMy eyes dropped back down at my subjects. \n\n\"Efular!\" I snapped. \"How have the affairs of court been in my absence?\" \n\nMy second in command jumped to his feet. He was a tall X'irel with a long braid of dark brown hair. Aside from his red eyes, he looked like a perfect human until he opened his mouth. X'irel have unnatural, needle sharp teeth. \n\n\"Yes Lord,\" he said, as he stepped up onto the dais that my throne sat upon. He reached into a pocket in his robe, and withdrew a thick piece of vellum. \n\n\"Three items of note took place during you three decade absence.\" He said, as he unfurled his list and peered at it. \n\n\"The first is that Prince Baal attempted to call on you. He refused to leave a message. He said he would try again in half a century.\" \n\nI cleared my throat. If that was the most important thing, than the business of the court could wait. \n\nEfular, while reliable, was not particularly subtle. He continued on. \n\n\"Second, is that a large party of imps have asked that you attend to an abnormally large Destruction fire that has erupted in the lower west side of the Purple Lily Gardens. They were...\" Efular finally stopped speaking once I raised my hand. \n\nI pointed at a Bra'rul named Oreda. She rose quickly from her bow. \n\n\"How may I serve my lord?\" She asked. \n\n\"Gather two others and search the realm for three newcomers that followed me through the Crossing. You are looking for a blond Aethling, a red haired Seraphim, and a human with scars on his face. They came through shortly after me, so they should be close by.\" \n\nOreda bowed low once again. She pointed at two Unami who were watching from the far end of the throne room and ordered them to follow her. \n\nThey left, and I turned back to Efular. \n\n\"Does anything absolutely require my attention for the next four hours?\" I asked. \n\nEfular frowned, and looked down at his notes. Reluctantly, he shook his head. \n\nI stood, and Efular sunk down into another bow. \n\n\"Members of the Court of the Sixth Plane of Hell,\" I said loudly so my voice carried, \"I am overjoyed to see you all. Tomorrow, I will hold an open court for all disputes, both large and petty. I shall also take some time for us to be reacquainted.\" \n\nI paused, and they looked up at me. \n\n\"However, for now, I will be busy. I return to you all with wonderful news. I have brought a Seraphim, an Aethling, and a living mortal down to hell. They shall become members of our court, and members of the Dark.\" \n\nThe court gasped, and I was greeted with a short round of polite applause. \n\nI held up a hand, and they quietened. \n\n\"For now, I shall oversee their changing. I ask that you all excuse me. Dismissed.\" \n\nThey all rose, and a din of chatter erupted amongst them as they began to exit into the passage ways. \n\nI turned to Efular. \n\n\"Make sure Oreda brings my new subjects to my chambers immediately.\" \n\nEfular nodded, \"It will be done my lord.\" \n\nHe hesitated, then said, \"It is good to have you back my Prince. It makes the court uneasy to be without the authority of our Lord.\" \n\nI clasped Efular on the shoulder briefly, and then walked through the doorway behind the throne into my chambers. \n\n*** \n\nI sat down wearily in my favorite armchair, next to the marble fireplace. I snapped my fingers, and a roaring orange fire blossomed in the hearth. \n\nOne must always have a fire. \n\nWhile I gazed into the flames, I formulated what I would do. I wanted to go out into the realm and search for my love, my future bondswoman, and my butler. There were many dangers out in my Plane of Hell...and that didn't include the demons who made their homes there. \n\nBut I couldn't. I had to play the part of the lord, so I had to have my subjects do my menial tasks for me. \n\nI sank back into my seat, and imagined what I would do to Oreda if any one of them came to harm. \n\n*** \n\n-Cariel- \n\nI stood with Alarial and Jon outside an intimidatingly tall black tower. \n\nI hadn't managed to see much of this strange place before being led here. \n\nFrom what I had seen it looked like a strange and savage garden in eternal twilight, with a sky shaded with light purples and some deeper pinks. Marble statues in various states of disrepair shared space with climbing roses. \n\nBut that wasn't the terrifying part. As I explored the garden, I had turned the corner at a large hedge, and nearly walked into a section that burned with Devnikolus's strange black fire. My nose had been inches away from the blaze. \n\nAfter that, I had found a mossy bench next to some roses, and waited to be found. \n\nIt wasn't long before a Bra'rul had accosted me. I had been expecting Devnik, and in my surprise, I had tried to use magic to defend myself. \n\nBut my magic hadn't come. I could still feel it within myself, but I couldn't draw it to the surface. \n\nI am powerless here. \n\n\"Come with me,\" the female Bra'rul had said. \"The other two have already been found.\" \n\n\"Where are you taking me...demon?\" I said, unable to keep some of the sneer out of my voice. \n\n\"To my Prince,\" she had said ignoring my jibe. \"Follow close behind, the gardens will destroy you if you take a wrong turn.\" \n\nSo I had followed, and now all three of us stood together. \n\n\"My Prince sent us out to find you,\" said the Bra'rul, who had introduced herself as Oreda. \"This is his stronghold, and the center of the Broken Gardens.\" \n\nI cast my eyes over at Jon and Alarial. Jon looked apprehensive. Alarial looked impatient. \n\nWe all entered through the gate, and found ourselves in an expansive black marble chamber. At the very end, a black throne with rubies in the hand-rests dominated a large dais. \n\nDevnikolus's throne. I thought. \n\nOreda continued speaking as we walked across the chamber. \"My Prince has said that he will oversee your corruption transformations personally. It is a very high honor. You three must be strongly within his favor.\" \n\nAlarial snorted a little bit, and I saw Jon bite his lip to keep back a smile. I'd like to say I remained composed, but I might have rolled my eyes. ",
        "Oreda pretended she didn't see. \n\nShe took us around the back of the throne, where a discreet door was positioned just behind it. \n\n\"This door will take you down a hall and up a flight of stairs. The Prince will receive you in his chambers.\" \n\nAlarial already had a hand on the door before the she-demon finished speaking. \n\n*** \n\nDevnikolus was sitting in a high-backed leather armchair. His red eyes were fixed on the fireplace before him. Orange light danced across his face, highlighting the strong length of his jaw, and his high cheekbones. \n\nHis eyes flicked up and over to us, and he smiled. \n\n\"I'm glad you all chose to come here.\" \n\nHe said it genuinely. With more warmth and emotion than I had ever heard from him. \n\nAlarial bounded forward, and launched herself into his lap. She was all blond hair and enthusiasm as she nuzzled his neck with her mouth and nose. I watched her lick at his skin, and press her thinly clothed breasts against his chest. \n\nDevnikolus put a slender hand on top of her head, and stroked her like she was a cat. \n\n\"Hush now, my love,\" he said, \"There will be time for that soon.\" \n\nAlarial stopped squirming and settled. Her eyes drifted shut, and her cheek rested against Devnik's chest. \n\nI wanted to be there in his lap. I ached for those possessive touches. \n\nDevnikolus looked up at Jon and me, still standing in the entranceway. \n\n\"I need to talk to all three of you,\" he said. \"You will all start to experience the corruption soon, and I want you to know what to expect.\" \n\nJon cleared his throat, and took a step farther inside the room. \n\n\"Yes,\" Jon said, \"I know that the...um...corruption involves us becoming true members of the Dark...but what does that mean?\" \n\nDevnikolus sighed. \n\n\"Basically,\" he said, \"Hell will turn you into demons.\" \n\nDevnikolus looked at us, perhaps searching for some hint of shock or surprise. We disappointed him. I imagine we had both suspected as much. \n\n\"Yes well,\" Devnikolus continued, \"The process will occur gradually over a three day period. For the first day, you will find that you will be unable to access any magic that you once had.\" \n\nJon grinned, \"No problems there.\" \n\nDevnikolus shrugged, \"That was directed more at the two angels rather than you...human.\" \n\nJon winced. \"You're not mad about my slip up...are you?\" \n\n\"Well discuss it after your change,\" Came Devnikolus's cool reply. \n\nJon's face fell, and he looked suitably miserable. \n\n\"On the second day,\" Devnikolus continued, \"You will be confronted with tremors and uncontrollable discharges of magic. This is the day where the corruption will analyze your inherent magic and willpower. The type of demon that you are transformed into will be in accordance with the strength of those two.\" \n\n\"I'm not going to be an imp am I?\" I asked bitterly. \n\nDevnik's eyes met mine. My core clenched, and I immediately regretted my tone. \n\n\"Doubtful,\" he replied. \n\nThen he said, \"On the third and final day, your physical transformation will occur. After that, you will officially be subjects of my court.\" \n\n\"Well,\" Jon said. \"That doesn't sound too bad.\" \n\n\"I'm going to be a demon,\" I said, my voice sounding strange to my own ears. \n\nDevnik looked at me curiously, and then he looked at Jon. \n\n\"Jon,\" he said. \"Go find Oreda. Tell her to give you rooms in the south side of the tower. I will visit you tomorrow to see how your corruption is progressing.\" \n\nThe butler looked at both Alarial and me, and then nodded. It might have been my imagination, but I thought I could see a tinge of red in his brown eyes. \n\n\"Yes Master,\" he said. Then he turned, and swept out of the room. \n\nThe door closed with a click, and suddenly my sister and I were alone, together, with our demonic Master. \n\n\"Stand up my sweet,\" Devnikolus said, as he patted Alarial on her head. \n\nAlarial smiled mischievously against his chest. She didn't open her eyes. \n\n\"Send her away Devnik,\" she said. \"I was a wreck while I watched you fight Michael and you need to make it up to me.\" \n\nThe demon prince shook his head. \n\n\"Sorry my dear,\" he said as he stood and carried her with him, \"But I need to see to Cariel first.\" \n\n\"But Devnik...\" Alarial whined as she glared at me. \n\n\"Hush now,\" Devnik said. He turned, and tossed Alarial underhanded towards the bed. She flipped over once in midair, and landed belly down on the bed. \n\nAs soon as she touched down, she spun around. Her playful face was gone, and she looked angry. \n\n\"Look,\" I said, \"I'll just go.\" \n\nI turned to leave. \n\n\"Do not move!\" Yelled Devnik. \n\nA whisper of cold settled onto the air, and I remembered that I was without my magic. \n\n\"Alarial,\" Devnik said firmly, \"You will sit on that bed and you will not speak. I will take care of your sister's needs, and then I will come to bed. Understand?\" \n\nMy half-sister glowered at him. \n\n\"Don't make me punish you pet,\" Devnik whispered, his voice taking on a spookily calm tone. \n\nAlarial sighed, and flopped back down onto the bed. She closed her eyes, and didn't speak. \n\nI stood shocked at the interplay I had just witnessed. \n\n\"Now,\" Devnik said, as he turned to me. \"I imagine your body is quite eager for some more venom.\" \n\nSuddenly, my heart was in my ears, and I could feel a fiercely coiled need well up inside of me. The need for the venom hadn't been so bad before he mentioned it...more like an ache that could be forgotten...but now...now I had to have it. I could feel my veins crying for it. \n\nDevnik nodded, he must have seen something on my face. \n\n\"I understand,\" he said. \"I exposed you to a good deal of it when I bit you last.\" \n\nI could feel my hands trembling at my sides. This strange and powerful need was terrifying, but I tried to control my speech as I spoke. \n\n\"If...if it wouldn't be too much trouble...Master.\" I said. I cringed when I realized I hadn't been able to keep the tremor out of my voice. \n\nThe demon smiled. \"No trouble at all. You have promised me free blood for eternity after all...and your blood will change in the coming days,\" he said. \"In fact, I may want to save a few drops for later.\" \n\nWith that, Devnik turned, and wandered over to a corner of the chamber. \n\nMy eyes flicked over to Alarial. I didn't think she was asleep, but I could tell she was trying her best to ignore us. \n\nDevnik rummaged around in a large mahogany cupboard. He produced a silver cup, and he placed it on a small circular side table. Then, he looked at me and, suddenly, the atmosphere in the room changed. \n\nSuddenly, there was a hunger in his eyes. \n\nIt was like he was invading me with his gaze...and something told me he understood more of me than anyone else. Something told me he could see the red-haired slut inside of me. The slut that would do anything for her master...because the master took care of her. \n\nI had promised to love him...if only he'd satisfy my need. \n\nMy dark-haired master held his powerful arms out, and I stepped into his embrace. He enfolded me in his grasp, and I cooed before I could stop myself. I could not escape these arms. But I didn't want to. I was safe here. \n\nHis hands slid down my body. They cupped the sides of my breasts as the moved. Our flesh made a soft swishing sound as his fingers drifted down my bare arms. \n\nSkin tingled and flushed underneath his touch. \n\nSoon, my wrist was in his grasp, and he raised it up to his mouth. His breath was cool as I felt him exhale gently on me. \n\n\"In the Demon hierarchy, there are two ways to establish yourself above another demon.\" Devnikolus said, his voice as sweet and rich as honey over bread. \n\n\"You may fight, and demonstrate that your magic is superior to theirs.\" \n\nA red spark jumped between us. And my body shivered. \n\n\"That way is temporary. Power can be gained and lost.\" \n\nI looked into his eyes, and wondered who could possibly think to defeat this man with brute force. Michael hadn't been able to do it. \n\nDevnik continued to speak. \n\n\"Or you may subject the other demon to your venom. If your venom and willpower is strong enough to dominate the recipient, then you have proven your superiority.\" \n\nHe smiled at me. \n\n\"I have already filled your body with my venom, and I can tell you already crave it.\" \n\nI nodded against him, unable to deny the incredible need I felt. I wanted his bite. I needed it like a mortal needed air. \n\nDevnik pulled my wrist even closer to his mouth. \n\n\"But I don't want you to simply be below me. I want you to be my bondswoman. My personal attendant. No task will be too lowly for you. If I told you to lick my balls for an hour, you will do it with joy. If I told you to bath me every day...you would offer to do it with your hair.\" \n\nMy lower stomach turned at his words...but not with disgust. \n\nMy demon master continued speaking, \"The position of bondswoman is generally held by a weaker demon, unable to refuse me anything. This is why I will bite you several times. I will increase your addiction until you cannot imagine anything better than serving me.\" \n\nHis mouth was so close. \n\nBite me. Please bite me. \n\nThen, he struck. \n\nHis teeth sunk into me. But it was so much more. I felt the rush of venom enter me, and it was like my soul was being pierced. \n\nWith each passing moment, I could feel his claim over me grow. My sex was wet. My breasts felt heavy and achy...but none of that mattered. \n\nWhat mattered was that I felt at peace. \n\nAnd I knew there could be no existence for me without him. \n\nI climaxed gently with his teeth clamped on my wrist. \n\n*** \n\nDevnik \n\nMy mouth felt slightly dry as I pulled Cariel's wrist away from my teeth. I had injected all of the venom in my glands into her. A lesser entity's mind would have been broken by such an onslaught. As it was, Cariel was weak and languid, and I had to support half of her weight with my hand against her back. \n\nAlarial's voice came from the bed. \"Is that what I look like? When you bite me?\" \n\nI turned my head, being careful with the pliant red-head in my arms. \n\n\"Yes my dear,\" I said. \"That look of rapture graces your pretty face as well.\" \n\nMy blond love frowned slightly, \"Why do you have to have her too?\" she asked. \"Am I not enough? Don't you remember that she tried to kill you?\" \n\nI sighed, and brought Cariel's wrist over the silver cup. I hadn't drunk any of her blood. I had been too focused on infusing my venom to drink. \n\nI allowed several large drops to splash into the cup, before healing Cariel's wrist with a dash of magic. \n\n\"I remember,\" I said slowly. \"But she is your sister, and I believe you will come to love her...in time. I can tell she already loves you.\" \n\nAlarial blinked her silver eyes in surprise. She fiddled with an errant blond lock of hair, and looked down. \n\nI turned my attention back to my bondswoman. \n\n\"Cariel,\" I whispered, as I gently brushed her hair from her forehead. \"Cariel, I need you to open your eyes for me. It is time for you to go.\" \n\nThe Seraphim's eyes opened with quick, cute flutters. Her eyes were wonderfully dilated, and I could feel that her soft body was generating an impressive amount of heat. \n\n\"Do I have to Master?\" She said. Gone was the haughty voice she used most of the time. When she was aroused and in my thrall, she spoke like a shy girl. A shy girl who wanted nothing more than to be found pleasing. \n\n\"Yes bondswoman,\" I said. \"Go out the door, and tell Oreda you will take the position from the late Turkik. She will show you to his old rooms.\" \n\nCariel nodded gently. Her face was serene in her submission, and her arousal. She was looked like the goddess of obedience as she padded to the door to my chambers. \n\nShe left without looking back. \n\n*** \n\nI took a small swig of the precious blue blood in the silver goblet. Hot ecstasy rolled down my mouth. Soon I was drinking every last drop. It was too good to resist. \n\nPower and arousal was suddenly pounding just beneath the surface of me...and I knew what I wanted. \n\nAnd now there was nothing between me and her...and she was what I wanted. \n\nThere was no Michael, no plot. No vengeful half-sister chasing us across France. \n\nNothing could touch us here. Here we could just be. \n\n\"Devnik?\" My blond love asked from the bed. The sound of my name on her lips made something warm and wonderful uncurl in my chest. I didn't know if that was our bond's doing or not. \n\nI also didn't care. \n\n\"Yes love?\" I asked. \n\n\"Is there any reason why you can't come to me now?\" She said the last words with a brilliant smile on her face. She looked young and beautiful and perfect. \n\nI blurred over to her. It must have looked like I appeared out of thin air, because she started backwards. \n\n\"None that I can think of.\" I said with a grin. \n\nI leaned down, and she leaned back to accommodate me. She gave into me so easily. Despite all the times we'd been together, she was still breathtakingly lovely and yet also innocent. \n\nShe titled her head back submissively. Her eyes were searching. \n\n\"Your sister's blood is on my lips,\" I said. \"I think you should have a taste.\" \n\nThen, my lips touched hers. Her kiss was sweet and loving. My body pressed down against hers, and her soft, warm breasts pillowed against my chest. Our kiss went on for minutes before she pulled away. \n\n\"Undress me?\" she asked breathily. \n\nMoving my hands, I unbuttoned her worn traveling top, and then slipped her free of her travel pants. \n\nAs the top came off over her shoulders, her breasts spilled free. Her small pink nipples were hard and needy. I took one into my mouth, and Alarial moaned as she cupped my head to her soft flesh. \n\nI gently suckled and nibbled upon her little bud. Then, I switched over the other, and she wrapped her legs around my back. \n\nFinally, I pulled away, and removed my own clothes. \n\n\"Master,\" my lover said as she watched me disrobe, \"I needed it a little rougher...please?\" \n\nI nodded. \n\n\"Get on your hands and knees,\" I said. My voice was dangerous now. Dark and commanding. \n\nMy pet didn't hesitate and she moved to do as I commanded. She presented her rounded bottom up to me. Like an offer. \n\nHer sex was still covered by a wisp of silken panties. \n\nI moved the silk gusset to the side to reveal the pink skin of her womanhood. Then, I slid my hands down her proffered buttocks. I moved my hand between, and found wetness between her legs. \n\nShe was wonderfully aroused. \n\nI knelt up, and settled my throbbing, thick erection between her globes. The tip of my cock kissed her lower lips, and I could feel her waiting warmth leave a wet spot at the head of my cock. \n\nWithout warning, I entered her...hard. \n\nI flung my head back, and roared. Her folds felt like heaven around me. Muscles all along her sex rippled as she tried to accommodate my entire length at once. \n\n\"Oh...Master...that hurt,\" she cried softly into the bed. \n\nHer plea ignited my lusts further. I grabbed her by the sides of her ass, and completely controlled her. I moved her up and down my cock furiously as I fucked into her. \n\nShe whimpered, and struggled slightly as she tried to regain her balance. \n\nI didn't let her. My arms were like iron around her, and she moved to my will as I parted her drenched pussy with my cock over and over. \n\nHer pussy was soaked, and her cum leaked down her pale thighs as they quivered and bucked. \n\nI ran a hand through her golden hair, and made a fist as I pulled at her tresses. \n\nHer head snapped back, and I nipped her on the ear. \n\nAt that, her entire body began to quiver, and she arched her back as a shudder ran down her body. I felt a new gush of hot wetness coat my balls as her channel spasmed and coaxed the seed from my manhood. \n\nI gave one final thrust, and held myself inside of her. Thick ropes of my pleasure splashed against the warm confines of her sex. \n\nAlarial gave one last deep moan of pleasure, before her knees finally gave, and she slumped down into the sheets. \n\nI followed her down, and I crushed her soft female body beneath mine. It felt good to lie like this. It felt like I was protecting the soft female with my harder form. \n\nBelow me, my love wriggled in contentment. \n\nWe lay like that for a time. \n\nFinally, I shifted, and I raised myself up onto my arms. \n\n\"Don't go,\" she said. \"We should just stay like this for the rest of our lives.\" \n\nI chuckled. I felt sated and calm. \"We are immortal my dear, that would be quite a long time.\" \n\nAlarial turned slightly beneath me, and her eyes met mine. They were lazy and content. \"Shush,\" she said. \"This is our happily ever after. This is how I imagine eternity.\" \n\nHow sweet. How sad. \n\n\"Oh,\" I said, as I settled down next to my beautiful lover, \"Do you think forever plays out so predictably?\" \n\nAlarial rolled over, and we lay side by side on the bed, staring into each other's eyes. \n\nShe gave me a small, submissive smile. \n\n\"You're here with me\" She said, \"That's all I need. You're my love. My master. My Dark God.\" \n\nI snorted slightly, amused. \"Is that how you think of me? Am I your Dark God little one?\" \n\nShe nodded softly, and I took her in my arms. \n\nHer blond head fit snugly under my chin, and her warm, curvy body pressed flush against mine. \n\nI draped an arm around her, and my hand found the nape of her neck. It settled there naturally. \n\nPossessively. \n\nIt would be tempting, I thought. To hold her for an eternity. \n\nI held her for a long time...till eventually I heard her settle into the soft, rhythmic breath that accompanies an untroubled sleep. \n\n\"Oh my sweet,\" I said softly to myself, as I looked upon the girl whose mind was made mine by accident. \"Sometimes I forget how young you really are. There are no true endings when talking of eternity. You have merely gotten a taste of this life. You have merely gotten a taste of Celestial Wars.\" \n\n***** \n\nIf you enjoyed this series, why not leave me a comment or send me an email? \n\nThank you to all who supported me. Words appeared on pages because of you. \n\nYours, \n\nNoble Truth"
    ],
    "authorname": "Noble_Truth",
    "tags": [
        "demon",
        "fantasy",
        "bdsm",
        "mind control",
        "magic",
        "long",
        "male dom",
        "female sub",
        "angel",
        "love"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/celestial-wars-ch-03"
}