{
    "title": "A Very Special Guy Ch. 05",
    "pages": [
        "This is the fifth chapter in a story about a hooker from Miami Beach who met and married a very special guy. He thought she was just a college student. Her secret fear, a fear that sometimes ruled her life, was that her husband would discover the dirty little secret in her past.\n\n\n\nApril fifteenth! It was over! Finally it was over. All of us had been busting our butts doing eighteen hour days and more. If you've never worked at an accounting firm you have no idea what we go through during the first three and a half months of each year. It's not our fault. Clients are always missing something and they are always late with their receipts and W2s and 1099s and all the rest.\n\nBut it was over now and every one of us breathed a big sigh of relief - the partners, especially - I was just a peon. There was still work for us peons to do \u2013 they called us \"associates\" but we were peons. We'd still be working, but now we could take a little time off.\n\nEvery year at this time our senior partner, Walter, led a bunch of partners to Las Vegas for an \"accountants seminar.\" Seminar my ass! They're going out there to gamble and fuck whores! Prostitution was legal out there. And if there was one thing Walter knew more about than accounting it was hookers (that's how I met him).\n\nThis trip he was taking Gordon, my very special guy, and Jack, another partner that my friend Gloria had gotten herself engaged to. The day they left, Walter's wife, Susan, joined Gloria and me in the evening for cocktails on the patio by the pool at our condo complex. We were drinking Macallan-12.\n\n\"He's gonna get laid,' Susan said. \"He always gets laid on these trips and Vegas is full of hookers.\"\n\n\"Jack's gonna get laid too,\" said Gloria. \"I could tell by the look on his face when he left for the airport.\" \n\nThen Gloria looked at me. \"What about Gordon? Has he ever fucked a hooker?\"\n\nShe had that \"oh so clever\" look on her face. Susan was not aware that Gloria and I had retired with lots of cash after short, but successful careers in the world's oldest profession. I think she suspected something when we taught her a lot of sex techniques, which worked so well on Walter, but I don't think she knew for sure.\n\nI chuckled. \"I think he's probably fucked a hooker. Most guys have. And yes I think Walter will lead him down the primrose path. They have a big suite with three bedrooms. I think Walter is planning some big parties \u2013 parties with girls.\"\n\nSusan looked at her watch. \"The sun's under the yardarm in Vegas. I imagine the party is about to begin, unless they are winning at Blackjack.\" \n\nWe had a couple more drinks and then went to bed. The next morning, Saturday, my phone rang early as I was trying to get some extra sleep. It was Gordon. \n\n\"You're up awful early,\" I said. \"I thought you guys would have a party and sleep late.\"\n\n\"We did have a party - a big one. But I couldn't sleep late. I was thinking about you.\"\n\n\"That's sweet!\" I said, hoping he really meant it.\n\n\"Well, not really. Sweetness has nothing to do with it. I missed you in bed,\" Gordon said.\n\nI laughed. \"That's a very nice compliment, but I figured Walter would arrange something to keep you occupied in bed.\"\n\n\"He did. He hired three hookers to come up to our suite and we had a big party. I took one of them to bed in my room.\"\n\nMy mind flashed a picture of Gordon fucking a hooker and I felt not the slightest jealousy. That's weird, I thought, remembering the sick jealousy I had felt last year when I thought Gordon was fucking his old girlfriend Margie.\n\nI chuckled. \"So you got laid?\"\n\n\"I got laid. But, somehow it just wasn't up to your standards. That's why I'm calling. Why don't you get on a plane and come out here. I miss you.\"\n\nGordon had said nice things to me a lot of times, but this was over the top. He was on vacation in Vegas, fucking anything he wanted. I think he knew he could get away with it. And he wanted me! Jesus! How many broads get that lucky? My head started making out a packing list.\n\n\"I'll get packed and on my way this morning, baby. You don't have to ask me twice. What about Jack? You think he might want Gloria to come out with me?\"\n\n\"He and I talked about it. Jack said his gal was good but not spectacular. Those were his exact words, 'Good but not spectacular.' So when I told him I was calling you, he said for me to have you invite Gloria as well.\"\n\n\"Alert the front desk that you're gonna have company. We'll see you soon.\"\n\nI called Gloria and told her that Gordon wanted me to join him because the hooker he screwed was disappointing in bed.\n\nShe almost shouted. \"You're the luckiest damn broad I ever met Geri. I have never heard of a man who prefers his wife to a really skillful hooker, although I must admit that you are a really skillful hooker.\"\n\n\"Well, Gloria, your guy Jack told Gordon that the gal he fucked was good but not spectacular.\"\n\nThere was a long pause, and then, Gloria asked, \"Were those his exact words?\"\n\n\"His exact words, 'Good but not spectacular,' was what he said.\"\n\n\"Oh my God! Jack always tells me that I am spectacular in bed- that's the word he always uses. Do you think he might want me to come out there? \"\n\n\"I don't think, honey. I know. Jack asked Gordon to have me invite you. Do you want to come?\"\n\n\"I'm headed to the closet to get my suitcase even as we speak.\"\n\nWe were routed through O'Hare and arrived in Vegas in late afternoon. We had a surprise for Walter. We had invited Susan to join us. We were not at all sure that we had done the right thing. We had no idea if it would be a pleasant surprise since she had never joined him on one of his \"business\" trips, but we thought \"What the hell!\" And Susan was very eager to join us. \n\nAt the front desk the clerk looked at his computer screen, checked my ID, and smiled. \n\n\"Not many wives are joining their husbands, but you are certainly welcome.\"\n\nWe went up to the suite. It had been cleaned but remnants of a big party remained, including a pair of bikini panties hanging on the head of Walter's bed.\n\nAll of us had brought our sexiest dresses and miniskirts with spike heels and by the time we had cleaned up and dressed we looked a lot like hookers \u2013 high-class hookers, of course, but hookers all the same. We had done it on purpose.\n\nWhen we went down to the casino we got a lot of friendly looks from guys. Gloria and I were comfortable with the attention. In fact, we were having fun.\n\n\"Like old times, isn't it?\" Gloria whispered to me. \"Kinda feels good to have guys look at you that way again, especially since I got my own guy waiting for me \u2013 a guy who thinks I'm 'spectacular' and is looking forward to seeing me.\"\n\n\"Yeah,\" I said. \"I know what you mean, but we better keep a close eye on Susan. She's never been in this situation before.\"\n\nWe walked around the casino for a while, checking out the tables, and fending off several guys. Susan got one genuine proposition, which gave her a really big thrill, and Gloria and I fielded several propositions easily. The offers give us an idea of what the rates were in Vegas \u2013 a little lower than Miami, probably because there was more competition here. \n\nFinally we spotted our guys leaving a craps table shaking their heads as though they had not had a good roll. We waved and smiled and joined them. Gordon gave me a big warm kiss and said he was glad to see me.\n\nJack beamed when he saw Gloria. \"Oh baby you can't know how glad I am to see you.\"\n\nWalter's mouth dropped open, his face looked shocked, and his eyes went from Susan's tight blouse to her very short miniskirt and then to her spike heels. She was dressed to show off her fabulous figure. I think Walter was shocked at how sexy she looked.\n\n\"What the hell are you doing here? Why are you dressed like that?\" Walter said, nervously examining his wife's sexy outfit.\n\n\"Geri and Gloria invited me to come out with them. This is fun. You're not gonna believe this Walter, but a guy offered me $400 to come up to his room for an hour. Can you believe that? Four hundred dollars! He had his hand on my ass when he said it.\"\n\nWalter's face turned bright red. I had seen his jealousy before. \"Geri how the hell could you let something like that happen? Susan doesn't know how to take care of herself in a place like this.\"\n\n\"Don't worry Walter. I'm watching her. I'd never let her go up to some guy's room for $400. Susan's worth at least $600.\"\n\nWalter exploded loud enough for people to look at us. \"Don't joke about that Geri. This is all your idea. I know it is. Jesus! Now what?\"\n\n\"We're all checked in to the suite. It's almost time for dinner and then we can start to party,\" I said.\n\nWalter was nervous as hell but we had drinks and then dinner. He kept trying to make a phone call on his cell but didn't get an answer. Finally we went up to the suite. I had left the bikini panties hanging on the head of Walter's bed and he ran in there and put them in his pocket first thing. \n\n\"Looks like you had fun last night,\" Susan said laughing.\n\nWalter kept dialing a number on his cell. Suddenly there was a knock on the door and our doorbell rang several times. I went over and opened the door and saw exactly what I expected. Three over-dressed, slightly over-weight hookers.\n\nWalter raced up to them. \"I tried to get you on the phone, but ... \"\n\n\"Come on in girls,\" I said. \"The party is about to begin. We're their wives and we decided to join them.\"\n\nThere was no way, of course, absolutely no way, that these gals were going to believe that story. I'm sure they figured that Walter had hired three more hookers to make a bigger party. Walter kept sputtering and trying to explain to Susan, who was laughing and getting a kick out of his embarrassment. I had told her to \"Go with the flow,\" and she was doing exactly that.\n\nGloria turned on some music, jazz, and started to mix the drinks. \n\nOne of the gals, Shirley, cupped Walter's crotch in her hand and said, \"I hope this thing performs tonight as well as it did last night.\"\n\nWalter spun away from her, embarrassed, and looked at Susan, who was giggling.\n\n\"I'm sure it will honey,\" Susan said to Shirley. \"It's never failed him yet.\"\n\nI had seen and done a lot of crazy things in my life, but this was a first for me. Here was a gal \u2013 she called herself Rosie, a working name I'm sure \u2013 that my special guy had fucked the night before and I felt no jealousy at all \u2013 only amusement. She was a fake blonde with much bigger tits than mine, and full hips \u2013 the kind men like to grab in both hands when they fuck. She was laughing and rubbing her body against Gordon and occasionally reaching down and stroking his crotch. \n\nI went over to them and started doing the same thing. Gordon did not have a hard on, but he was laughing and enjoying the attention. Gloria and the third gal were working on Jack the same way.\n\nBut what Gloria and Gordon and I were enjoying the most was the way Walter reacted as Shirley worked on him with Susan helping her out. Susan was laughing and Walter was as uncomfortable as I had ever seen him. Everything was working out as I had hoped it would.\n\nWe danced as threesomes and drank and laughed and one of the gals lit a joint and passed it around. Neither Gordon nor I took a puff and both of us were watching our drinking. Shirley opened her blouse and got her tits out. Then she grabbed Walter's hand and pressed it onto her tits. Susan just laughed.\n\nAfter a couple of hours of partying and drinking, Gloria and I pushed Walter into his bedroom with Shirley and Susan and closed the door. Then Gloria grabbed Jack and the gal working on him and disappeared into their bedroom. \n\nGordon walked over to Rosie. \"You don't have to stay,\" he said. \"I'm going to spend the night with my wife.\" \n\nThen he pealed off eight Franklins from his roll and handed them to Rosie. He was very nice to her but I could tell from her expression that she didn't believe I was his wife. She figured I was another hooker that Gordon wanted to be alone with. She was right about me being another hooker, of course, and I was glad he wanted us to be alone.\n\nThen Gordon led me into the bedroom.\n\n\"I don't need anybody else but you,\" he said. \"You're so damn good in bed that I think I'd keep you even if I didn't love you so much.\"\n\nThat got to me. \"You know how much it means to me to hear you say 'I love you?'\"\n\n\"I've figured out a lot of things in the ten months we've been married,\" he said. \"I know, for example, that you really do love me as much as I love you.\"\n\n\"And just how do you know that?\"\n\n\"Last summer when you were afraid of losing me to Margie your whole life seemed to fall apart. Jesus! You were even lousy in bed!\"\n\n\"I'm sorry about that.\"\n\n\"But last night when you knew us guys were fucking hookers, you could care less. It was like I had a get-out-of-jail-free card.\"\n\n\"Well ... I ... you know. I ... I guess you did.\"\n\n\"You were especially happy when I said that the hooker was not as good as you were. And tonight when you thought I might want a threesome it didn't trouble you at all. You just went along with anything I wanted.\"\n\n\"Because I love you.\"\n\n\"Oh it's more than that, Geri. Much more than that! It's what you understand that other women don't. Most women get sex and love all mixed up. You don't. You know the difference. And I think I know why.\"\n\n\"Well ... I ... I ...\" What the hell did he mean by that? Oh my God! Oh no! It can't be!\n\n\"I've put a lot of things together these past ten months,\" he said.\n\nOh shit! My stomach cramped. \"Such as?\" I said almost in a whisper.\n\n\"Such as how we met in Miami and how you paid your way through college and how you and Gloria taught Susan all those sex techniques and all the money that Gloria has and your reaction to Margie - so different from your reaction to Rosie and the way you are in bed \u2013 everything a man could ever want.\"\n\nOh my God! It can't come out now! Not after all our happy times. A sick, cramping feeling grabbed my gut. I felt like I wanted to throw up. Why now? Does he know?\n\nI just stood there, almost trembling. I couldn't think of anything to say. I was afraid to say anything. I just knew that whatever I said would be wrong.\n\nGordon looked down at me \u2013 then he took me gently in his arms.\n\n\"You were a hooker in Miami weren't you? That's the way you worked your way through college, wasn't it? You were a hooker.\"\n\nMy mind went numb. Don't lie I told myself. It was all I could think. My ugly past had come back to punish me. It's over! He's gone! All my inner fears these past months were justified. Don't lie. Tell him the truth!\n\nI looked him directly in the eye. \"Yes I was.\" \n\nGordon put his arms around me and kissed me and held me close. Then he looked down at me \u2013 his face inches from mine.\n\n\"I love you Geri. I never want to lose you.\"\n\nThen he picked me up and carried me to bed. I felt my body start to tremble. Oh my God I love him so. Sometimes I feel like this and I don't know why. Shit! I'm a pro and here I am trembling like some damn high school girl about to get laid. God I want to please him! \n\nHe's laying me down on the bed and starting to undress me. What does he want me to do? I'll do anything he wants! Anything! Should I ask him or just wait and see? What should I do?\n\nOh my God! All he wants is just a simple missionary. Why do I feel so damn helpless? \n\nOh God! That feels good! He's kissing me and fucking me and I'm trembling like a virgin. I love him. I love him so. Oh shit! Damn it! I'm gonna come. Not yet! No! It's too soon! He hasn't come yet. I don't want to come first. I want him to come first. What can I do to please him? \n\nThen the contractions began and I was lost in pleasure. \"Ahhh ... Ohhh ... Oh sweet Jesus!\"\n\nHe kept on fucking me and my hips went out of control \u2013 he's got me going again. I can't come again. I need to find out what he wants me to do. Oh shit! I can't stop it. It's happening again! \n\nHard, rhythmic contractions swept in waves over my body. \"Ahhh ... Ohhh ... Oh God ... I love you ... I love you.\"\n\nI've got to take control. This is not supposed to happen to a pro. I gotta please him first! What's happening? His rhythm is changing \u2013 it's harder and deeper. Oh thank you God! He's about to come! Pump your ass for him you horny little bitch and take it deep. Pump harder! There it is! He's shooting his load! Oh thank you God! It wasn't just me. I love him so. I want to please him so much.\n\nHe collapsed on my chest, kissing my face. I tasted his sweat. He's rolling off of me and kissing me. Oh God I love him so!\n\nI started to cry. \"I hope you liked that. I wasn't doing very much, was I? I just kinda laid there. I didn't seem to show you much action. I didn't expect to come twice with a simple missionary. Somehow you just got to me! I wanted to do more, but I just couldn't.\" \n\nHe held me close and kissed me softly. \"I love you Geri. I love you very much.\"\n\n\"I didn't do anything very special,\" I said. \"I'm sorry.\"\n\nHe chuckled. \"Don't be sorry, baby. I wanted to start out with a little love. Fix me another drink and then you can get fancy if you want to. Maybe show me something new.\"\n\nI got up to go in the living room and mix the drinks. I thought about his request. I could do that easy. I had a lot of choices! I was a pro. Then I trembled again and felt weak, as I remembered the sound of his voice telling me he loved me. What a very special guy he was. We're gonna have a life together, after all. There's not another man in the world like my Gordon.\n\nI walked out into the living room, stark naked, to the drink table and there was Gloria, also naked, mixing three drinks. I noticed she'd dyed her beaver bright red to match her hair like when she was working. I figured she did that for Jack. \n\n\"He said I was spectacular,\" Gloria said. \"Then he rested, and that bitch crawled on to do him cowboy. You know, it's funny, but I'm not jealous at all.\" \n\n\"That's easy,\" I said. \"Three reasons: she's a pro, Jack thinks you're better in bed, and you know he loves you \u2013 he asked you to come out here. That's why you're letting him have his fun with a little strange stuff.\"\n\nJust then the other bedroom door opened and Susan walked out. She was naked but had on spike heels. Her body looked absolutely fabulous.\n\n\"He's fucking that fat girl now,\" she said.\n\nGloria laughed. \"I think she sees herself as 'pleasingly plump' rather than fat.\"\n\nSusan shook her head. \"You saw her with her clothes on. She's fat! Why do guys like that?\"\n\n\"Handholds,\" I said.\n\n\"Handholds?\" Susan asked. \"What are handholds?\"\n\n\"Nice hunks of soft flesh on the hips to hold on to when she fucks him and extra large tits to hang down in his face. What position is she fucking Walter in?\"\n\nSusan laughed. \"You're right. She's on top with her tits hanging down for him to play with. It's driving him wild. But he fucked me first! Pumped his load and I could tell he liked it.\"\n\n\"Are you comfortable with all this?\" I asked Susan.\n\n\"I guess so. I'd for sure rather be here with him than at home alone knowing he's fucking some fat whore. This is all so new for me, but I think I like it.\"\n\n\"You saw the way he looked at you in the casino in that tight outfit. You have a magnificent figure and you showed it off well. He was jealous of every guy that looked at you. But I could tell he was proud,\" I said.\n\n\"I think he is proud, since you and Gloria taught me how to handle him,\" Susan said.\n\n\"Well, what's important now is that you've got him by the balls,\" I said.\n\nSusan looked puzzled. \"What do you mean?\"\n\n\"I mean that he's so jealous and you're so beautiful that he's afraid \u2013 terrified \u2013 that you might fuck another guy.\"\n\n\"Oh I'd never do a thing like that!\" Susan said firmly.\n\n\"Don't let him hear you say that,\" I said. \"Let him think you might do it if he doesn't treat you right. That'll keep him under control. Let him enjoy his whores but keep him worried about you. Things will go better that way.\"",
        "Susan looked skeptical. \"Are you sure?\"\n\n\"I'm sure! Just look at me and Gordon. I love him so much that he owns me. I worship him. I'd do anything for him and he can do as he pleases. He's got a whole deck of get-out-of-jail-free cards. But he loves me back and he wants me.\"\n\nSusan smiled and nodded her head. \"I like your advice. How did you learn so much about men?\"\n\n\"Experience,\" I said. \"Lots of experience.\"\n\n\"I better get back in there,\" said Susan. \"Maybe he's finished fucking that fat whore.\"\n\nSusan went back to her room and Gloria looked at me and smiled. \"Experience! Yeah, that's exactly what it was. Lets just hope our guys don't figure out where we got it.\"\n\n\"Mine has already figured it out,\" I said.\n\nGloria looked shocked. \"He what?\"\n\nI told her the story. How he paid Rosie and sent her away. How he figured out about Gloria and me and how he said he loved me and carried me to bed and how I lost control and started having orgasms. When I finished Gloria just stared at me for a moment. Then she looked at me and shook her head from side to side in wonder.\n\n\"I've said it before and I'll say it again, because it's true. You are the luckiest damn broad in the whole world. He loves you. He's waiting in there for you come back and show him a new trick. If there was ever a time to bust your butt and do it right, now's the time baby. Don't go ga-ga \u2013 keep your head. You're a pro. Get your ass in gear and fuck that very special guy \u2013 and do it so he'll remember this night in Vegas for a long, long time.\""
    ],
    "authorname": "LynnGKS",
    "tags": [
        "group sex",
        "hookers",
        "vegas"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/a-very-special-guy-ch-05"
}