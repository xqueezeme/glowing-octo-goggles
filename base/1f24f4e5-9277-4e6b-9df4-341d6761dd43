{
    "title": "Kiss Me Cate Pt. 02",
    "pages": [
        "I hope you enjoy reading this as much as I did writing it. \n\nI've had a long standing love of Irish lasses. Their eyes, complexion, smiles have always warmed my heart, and a few have broken it.\n\nConstructive criticism as always is welcome in the comments, others will be dealt with in the usual manner.\n\n*****\n\nI don't remember a time I slept so well. I could hear her heartbeat, her chest rose beneath my hand with each breath. I opened my eyes slowly, the dim light coming in around the drapes barely broke the darkness. In, and out, the slow rhythm of her breath nearly lulled me back to sleep. She was warm and soft in my hand, realization dawning on me as I thought about where my hand was. I began to slowly draw it away and her grip tightened on it. A soft sleepy laugh came from the darkness in front of me.\n\n\"I was wondering if that was an unconscious move or not.\" She brought my hand up and kissed it, and then put it back where it was, the soft warmth of her breast filling my palm. She nestled back against me and hummed. I quickly noticed why and was glad for the darkness as I'm sure my cheeks were blazing red. \"Can I take credit for that?\" She laughed again.\n\n\"Yes.\" I said softly. I paused, the heat draining from my cheeks. \"Cate...\" I began, but I didn't know what I was going to say.\n\n\"Dylan?\" She said, humor in her voice.\n\n\"I was going to say that I think I love you, but that's wrong. I do love you, no thinking about it is required.\" She pulled away and rolled over to face me. Her eyes wide in the growing light. \"Before you say anything, I've been thinking about all of the things you're likely going to say. Isn't it a little soon for that?\" I said mimicking her voice. \"No it's not. When you feel like I do right now you don't want that feeling to end.\" I smiled. \"Are you sure you're not just randy Dylan? No, well yes, but this is far beyond that. I dread weekends when I won't see you for two days. I get so lost in your eyes, your smile and not seeing them is almost painful. I know this might sound bad but, I feel like that, well the invitation had been extended, and yet I just want to hold you and never let you go.\"\n\nHer mouth opened slightly, her neck arching, her lips yearning like a plant for water. I leaned forward and tried to quench her thirst. She rolled me onto my back with surprising speed and began unbuttoning the rest of her flannel. She then grabbed at my t-shirt and began dragging it up. I reached behind my neck and nearly tore it off over my head. She dove on me as soon as it was clear. Our chests touched, the sensation was like a spark finding the ground. Before I knew it she was straddling my hips kissing me hard and fast. I ran my hands up underneath the mass of dark hair pulling her down to me. She sat back gasping, her lips swollen slightly.\n\n\"Dylan, make love to me.\" She took my arm and rolled off of me onto her back, and tugged me over onto my side. I ran my hand down her chest, between her breasts and over the flat of her stomach. It clenched under my touch. I touched the satin ribbon tie at her waist, pulling the bow free. She raised her hips and reached for the waistband. I reached up and stopped her, taking her hand and setting it aside. I got up and knelt beside her and reached for them pulling gently, slowly, waiting for her to tell me to stop. She only arched her hips higher, more urgent she reached up under my arm and ran the palm of her hand up the length of my stiff cock through my shorts. The flannel slipped away showing a neatly trimmed little triangle of nearly black hair above swollen pink lips. I took several deep breaths as she tilted one knee to the side, opening herself up. \n\n\"Ask me again.\" I said panting.\n\n\"Dylan, please make love to me.\" Affirmation given I parted her legs and entered her.\n\n\"Dear God!\" Her nails dug into my back as I took long fast strokes. I looked down at her face, tears streaming from her eyes.\n\n\"I'm hurting you.\" I said trying to stop. She kicked me with her heels.\n\n\"Don't stop!\" Her hips rose up to meet me. I leaned down and kissed away the tears. Her back arched thrusting her chest up at me and I increased the pace, knowing I had little restraint left. I let out a loud groan. She gripped me tightly as I exploded. When the blood eventually flowed back to my head I took a deep breath and rolled off. Cate began to laugh.\n\n\"What?\"\n\n\"I'm so glad we're waiting, you know, to go on that first date.\"\n\nI laughed. \"I'm sorry.\"\n\n\"The hell you are. You made me beg for it.\"\n\nShe was quiet, too quiet, I leaned on my hand and saw her face, a flush lit her cheek. She had far off look in her eyes. \"Are you alright?\" I said leaning down to kiss her.\n\nShe smiled. \"Oh yes, I'm more than fine.\" She sat up. \"Oh dear I'm glad we didn't do that last night. The um, wet spot is more of a splash zone.\"\n\nI chuckled. \"Are you okay though? You were tearing up there.\"\n\n\"You were a bit, vigorous. I'm good, was just a little painful at the beginning. It's okay Dylan, really it is.\" She rolled over and straddled my hips. \"We can take it a little slower this time.\" She reached down and began bringing me back to life with long slow strokes. A little smile spread across her face as I responded to her. She reached behind my neck and pulled me up, and pushed all the pillows behind my head. \"Scoot up a bit.\" Once I was settled, she mounted me sliding slowly down the shaft until I was buried in the silken wet heat of her.\n\n\"You have no idea how incredible that feels.\" I said with a gasp.\n\n\"I believe I do.\" She reached down and took my hand turning it over and took my thumb into her mouth. She sucked on it gently, getting it good and wet as she began rocking her hips.\n\n\"If you're thinking this is going to help me to last I don't think you're even remotely aware of your abilities.\" She only grinned, slurping and sucking on my thumb as she continued the slow rocking motion.\n\nShe removed it momentarily. \"Like this.\" She took the tip of her tongue and began to draw circles with it on the end of my thumb, pressing firmly. She then took my hand and reached down between us, setting my thumb against the hood of her clit. She looked me in the eye and I swear I could see a spark. She leaned back slightly and rocked back and forth, the strokes longer. I began circling her clit like she demonstrated and she moaned long and low. Her breasts bounced with each stroke and I was mesmerized, reaching for them automatically. Her skin was warm and damp, the rose pink nipple was so hard as to look painful. I stroked it, taking the nipple between my fingertips and pulled it gently, the rubbery skin snapping back when I released it. Cate sucked in a quick breath and let out a yelp as she ground herself down on my shaft. Her rocking sped up, and I sped up my thumb. Her breasts flushed a deep red as she began to shudder. \"Yes!\" I tweaked my thumb quickly and she bucked hard against me several times settling hard on my cock, gasping for air. She shook as her orgasm washed over her. I stopped stroking her and drew her to me. \"Give me a moment.\" She said gulping air. Her head was pressed into my shoulder. I had hold of her ass and I began lifting her slowly and setting her down. I laid out a line of kisses from her shoulder to her neck. Soon she began to follow the rhythm rocking gently up and down.\n\n\"Did I ever tell you that you have the most terrific backside I have ever seen, and now felt?\"\n\nShe laughed. \"There were a few times I caught you looking.\" Rock, rock, rock. She leaned back and kissed me, taking her time and doing it right. Her hands gripped the hair at my nape and pulled my head back, she was voracious, her tongue tangling with mine, her teeth sunk into my lower lip. She has such a long graceful neck and I kissed my way up and down. She cooed in encouragement and the rocking got faster. I was pulling her down with each stroke. She had a tight grip on my shoulders as she rode me. I drove my hips upward and came again. I fell back boneless against the pillows. Cate let out a squeak as she fell forward on me, grabbing the headboard before she smacked into it.\n\n\"Look at that, I've drained the life clear out of you.\"\n\n\"Succubus.\" I gasped with a silly grin on my face.\n\n\"The number of times I heard God invoked this morning, I'm more likely to think it was something of a religious experience.\"\n\n\"I need sustenance.\"\n\n\"You're not the only one. I think I just burned more calories than a marathon run.\"\n\n\"Yea but it was a lot more fun and easier on the knees.\"\n\n\"Speak for yourself.\" She leaned down and kissed me before rolling over onto her back with a little yelp. \"Damn that wet spot got cold.\" We both laughed. She rolled out of bed and wobbled as she got her balance.\n\n\"Was I...\" I started to say and got a gimlet look in return.\n\n\"You aren't serious are you?\" She replied to the incomplete question. She held out her hand and wiggled her fingers. \"Come on, we might as well conserve water, there's room for two in there.\" She nodded towards the shower. \"We can talk a bit while getting cleaned up.\"\n\nI followed her, hand in hand into the bath, she figured out the shower and gave it a moment to heat up. \"Why would you ask that?\" She was serious, the crease in her brow was back. \"I mean you must have with Stacy, or well before that I mean.\"\n\nI stepped into the hot spray with a deep sigh. \"Come on in I'll wash your back.\" I said with a smile.\n\n\"I'll let you wash the rest of me if you answer the question.\" \n\n\"If I do we'll be eating breakfast for dinner.\"\n\n\"You're avoiding the question.\"\n\nI took a deep sigh as I lathered up her hair, running my fingers through it and massaging her scalp. I must have been doing it right from the hum of approval she was making. \"I don't know.\" I started. \"Does it make me a jerk if I said I didn't care before, if I enjoyed it that's what I was in it for.\"\n\nShe nodded gently as I rinsed the shampoo out of her hair. She handed me conditioner telling me she'll be a tangled mess without it. \"So for the first time you care about what the other person feels. Yes up until now you've been a selfish lout.\" I worked the conditioner into her hair combing my fingers through the dark locks. \"The fact that you asked means you're growing I think.\"\n\n\"Now who's avoiding the question?\" I began washing her back, rubbing my fingers in deep relaxing the muscles to another hum of approval.\n\n\"You were wonderful Dylan. Just take your time, there's no race to win.\" I made my way down her back and legs, seeing red marks on her backside. I didn't say a thing I just grinned. She turned and I worked my way back up, taking care to get all the crevices squeaky clean. I rinsed her hair once more and she switched places with me under the water and proceeded to wash me head to toe.\n\n\"Really? Already?\" She said seeing the results her hands had while washing me. She soaped it up and stroked it gently.\n\n\"Well that's not going to help now is it?\" I said short of breath. She rinsed me off well.\n\n\"I have a surefire method.\" She nibbled my nipple with her lips and slid down my body. She took me fast and with relentless abandon corrected the issue. My hands on her head in benison. \n\n\"I didn't realize just how hungry you were. I have to get you breakfast fast before I lose my ability to walk.\"\n\nWe dressed and decided to check out the dining room here at the hotel. \"It's a good thing I brought a scarf you beast. I'll have to look into buying a few turtlenecks thanks to you.\" I was sure she wasn't angry because of the big grin on her face as we walked across the lobby. I excused myself and went and checked out of the other room since we didn't need it.\n\n\"Since it appears the door was never unlocked, I'll put it in as a cancelled reservation. Cheaper that way.\" He said taking the key and handing me the receipt. A smile crept across his face as he spied Cate behind me.\n\nBreakfast was quick and we set out to see the sights, what few there were at this time of year. We did brave a few shops to find a turtleneck or two after which I was promptly accused of being proud of the marks I'd left on her neck. I just grinned and looked innocently around. We took a short but brisk walk along the lakeside promenade. We huddled in a little cafe warming ourselves afterwards.\n\n\"Penny.\" She said.\n\n\"Hmm?\"\n\n\"You're deep in thought or you've got serious brain freeze from the cold.\"\n\n\"Oh, I was just thinking how miserable I'm going to be for the next eight weeks having to keep away from you for fear of impropriety.\"\n\n\"Well considering the morning we had, I believe there would be a good bit of impropriety.\" She smiled, it faded quickly. \"It'll work out. We might be able to sneak off for another illicit weekend.\" She wiggled her eyebrows which made me laugh.\n\n\"I'm all for that.\" I said toasting to her ingenuity with my coffee cup. I froze half way to my mouth. The smile on her face, the splash of freckles across her nose and cheeks, the blue sky reflected in her eyes, her hair mussed from being tossed about in the wind all came together in that perfect memorable moment. I knew that this moment, how she looked, the sound of her laugh, and the love that showed plainly on her face was something I would never ever forget.\n\n\"Are you alright?\" She asked, her expression turned to concern.\n\nI grinned. \"I'm fine, more than fine actually.\" Her eyebrows rose in question. I looked down and felt my cheeks warm.\n\n\"What are you thinking of?\" She asked with one eyebrow raised.\n\n\"I just realized that I'm in love with the most beautiful woman in the world, and well I forgot to breathe there for a minute.\" Both of her eyebrows rose and she reached beneath the table taking my hand and put it in her lap and held onto it tightly. She wasn't smiling but looking down unfocused at her cup. I leaned down and looked up into her eyes. She looked up at me slightly surprised.\n\n\"Penny.\" I said. She smiled.\n\n\"I've just had the most dreadful thought, that the alarm clock is about to go off and I'm going to wake up and have to go to work and that this was just a dream.\" I slipped my hand free and reached behind her thigh and gave her a pinch. \"Ow!\"\n\n\"Nope, not asleep.\"\n\nShe reached up quickly pulling my face to hers and growled low. \"Stop marking me up you scoundrel.\" She softened the rebuke with a lingering kiss. You would have thought we'd found heaven when we stumbled across a candy shop. We left with a small bag of chocolates which Cate was still going on about after trying a few samples in the store. Pink nosed and red eared we made our way back to the hotel.\n\nIt was late afternoon by the time we got back to our room. Cleaned and neatened up after our early morning shenanigans, with chocolates laid out on the pillows. \"It would seem they have you figured out, more chocolate.\"\n\n\"The way to a woman's heart is through her sweet tooth.\" She said giving me a peck on the cheek.\n\n\"I'll remember that when you get mad at me.\"\n\n\"Planning on angering me into a rage already?\"\n\n\"You know how guys are. We don't intend to do it, yet somehow we get the blame for everything.\" I said with a laugh. She just cocked an eyebrow at me. I snapped up the bag of chocolates and held it between us, warding myself from attack.\n\nShe smiled. \"Clown. Now what?\"\n\n\"Well you could take a nap. You look tired.\" \n\nShe grinned at that. \"Oh, do I now? Well with the amount of caffeine I've had this afternoon that's amazing. Yet you still find this haggard old crone attractive do you?\" She sat down on one of the chairs, kicked off her shoes and poked her feet as close to the fire as she could.\n\n\"Old hag, you're only a few years older than I am.\"\n\n\"Scandalous isn't it!\" She said mocking me.\n\n\"That wasn't my point Mrs. Robinson.\"\n\nShe gasped in shock. \"I can't believe you said that to me! From the very first minute you're the one that's been after me!\"\n\n\"I showed incredible restraint until...\"\n\n\"Until what?\" She asked grinning.\n\n\"Until fate brought us together again. Despite my attempt to force it's hand by lingering at that tea shop every day for two months.\"\n\nHer grin faded into a soft little smile. \"If it's fate then we'll meet again. I said that, didn't I?\" I nodded mirroring her smile. \"Do you believe in fate Dylan?\"\n\n\"More now than I ever have before.\" I'd never really considered it, that our lives are predestined. I guess I didn't agree with that, it seems a bit of over-simplification to assume we're just actors in a play. \"Though I don't know if the simple concept fits. I believe we all determine our own destiny, it's not created for us by some higher power, and we can change it. I do think there are threads in time that we can't change. Though I wonder if that's not just nature taking course.\"\n\nShe smiled and looked into the fire. \"When I was in school, oh sixteen or so, my friends would go on about not getting married and having children, not conforming. We were all very anti-establishment. I was as vocal as any of them about it. I was going to change the status quo. I wasn't going to rely on any boy. Ardent feminists, we were.\" She paused. \"Before I left for New York, I found out one of them, a good friend but we'd sort of lost touch, just had her second child. She's been married since graduating uni, about five years now.\"\n\n\"What about you?\" I said.\n\nShe exhaled sharply and gave me a wry look. \"Looking for a proper wife already? Aren't you a little young for that?\"\n\nI chuckled. \"Funny how that we think that twenty-three is young to start a family, when only a few decades ago I'd be an old bachelor right now. No, I was asking if you still hold to the 'ardent feminist' beliefs you did then.\"\n\n\"I do, maybe not so ardently as I did, but I still hold them. That's one reason I didn't tuck tail and run home when I got knocked down. It's not an easy decision to leave everyone and everything you know and start over in as strange place alone.\"\n\n\"I can't even begin to imagine it.\" I whispered. I got up from the bed where I'd been sitting and sat down on the floor in front of her. I took one of her feet and began rubbing my thumbs into the sole.\n\n\"Oh that's delightful.\" She said putting her head back. A few moments went by, a few little groans and moans escaped her lips as her toes wiggled in my grasp. \"Yes, I'd say I do. I don't want to rely on someone else. If I'm going to be with someone, love them, spend the rest of my life with them, then I want to be on equal ground with them. I want the things that I do to matter, outside of my relationship with someone else.\"\n\n\"Don't walk before me, don't walk behind me, walk beside me. That sort of thing?\"\n\n\"Exactly!\" She said pointing at me. \"Why does that sound familiar?\"\n\nI laughed. \"Commonly used quote on the internet. \"'Don't walk behind me; I may not lead. Don't walk before me; I may not follow. Just walk beside me, and be my friend.' Albert Camus, twentieth century French philosopher.\"\n\n\"Somebody's been paying attention in his classes.\" \n\n\"What's your family like?\" I asked, switching to the other foot. \n\nShe laughed. \"Well if things progress and you ever get the opportunity to meet them, I should warn you now that my Da is a very tall, broad police sergeant.\" She opened up her eyes enough to peek at my expression. I just smiled.\n\n\"I'll watch my step. Use, sir, a lot.\"\n\n\"Good, because if he had any idea as to how you debauched his favorite daughter you'd be coming home in a box. A small box at that.\" She said with a laugh.\n\n\"Well I'd best get in all the debauchery I can before my untimely demise.\" I worked my hands up the back of her calf and she stretched her toes with a sigh. \"If Da's that strict I can imagine Mum is equally dangerous.\"\n\n\"Och, no. Mum's a fine lady, a retired teacher. Mind ye if she were to find out what ye'd done to her wee lassie, she'll have Father Burke round to tea to meet my new fianc\u00e9.\" She said, her broad Irish accent kicking in causing a laugh from both of us.",
        "\"So file my last will and testament, and bring an engagement ring. Got it.\"\n\nShe bust out laughing at that. \"I've made them sound positively antiquated. That's a total fabrication. Da wouldn't be happy at all, but he'd purse his lips and offer you a drink and put out of his mind what we may have been doing. Mum would be feeding you like you were a starving wayfarer in off the road, to be honest.\"\n\n\"Bring a good bottle of whiskey and an appetite. Got it.\" \n\n\"That's right.\" She said laughing.\n\n\"So you're the favorite daughter, so there's another like you at home?\"\n\n\"Two similar, but not completely alike. My older sister Sinead is married with a little boy, works as an office administrator in some firm in the city. Her husband is a bit...\" Cate wrinkled her nose. \"He's a bit of a nit, nice enough but about as exciting as a pudding. My younger sister, Shannon, is the rock star. She plays guitar, fiddle, sings, and generally drives Mum & Da crazy.\" She said grinning.\n\n\"Got it, Sinead the suit, Shannon the party girl.\" She laughed at my generalizations of her family.\n\n\"Shannon is classically trained violinist and is trying to get into the philharmonic, so it's not all laser lights, fog machines and raves.\"\n\n\"Three girls? Does your father remember what the inside of his bathroom looks like?\" I should've been better prepared for the kick, I fell over laughing.\n\n\"So much for being a sensitive, supportive and caring male companion. I shouldn't have bought into your game so easily you chancer.\" She responded in mock offense, she lifted her chin and turned away from me. When I sat up she proffered the other leg for similar treatment and I began working my way up her calf from ankle to knee. \"Well that's the short form for me. What about your family. The ones you so quickly abandoned to run off with some girl you barely know.\"\n\n\"I wouldn't say I barely know her.\" I said smiling but didn't look up. \"She's one of three girls from Dublin, father is a copper, mother is a retired teacher. She's strong, very strong, despite what weaknesses she may think she has. She's also very caring, open and I know it sounds dated, but she's very sweet. A lady as well as a woman. She has the most... intoxicating blue eyes, a fiendishly quick smile and a wicked sense of humor. She's absolutely gorgeous, though she acts like she doesn't know it. I don't believe she's acting, she's totally clueless to the fact actually. She's tall, slender, has nice curves where they count, and moves with the grace of a swan.\" I chuckled as I saw another kick coming my way, but she pulled it back in. \"She talks with her hands, but I love that, she has such long fingers.\" I looked up to see her looking at her hand flipping it back and forth. \"Her birthday is the fourth of October. I knew it at the time, but thought it may have been awkward to mention it as I was just the hired and completely underpaid help.\"\n\n\"I don't know. The benefits package seems pretty good.\"\n\n\"There is that.\" I said wiggling my eyebrows at her. The light had faded to twilight outside, the only light in the room was the fireplace. \n\nShe cocked her head to the side. \"Dylan, you don't think...\"\n\n\"No. No. I do not believe for a moment you are capable of quid pro quo. I'm fairly certain that since fate threw us back together, time would have led to this eventuality, whether sooner or later. At least I'd like to hope so. The old saying goes, fate is a cruel mistress, so it made you one of my professors.\"\n\n\"Of a course you could have easily taught.\" She added.\n\n\"I'd like to think we would have started off with dinner, maybe a movie, I know it sounds clich\u00e9. I would have decimated you at mini golf. We might have enjoyed a hike or two, tried line dancing.\" She wrinkled her nose at that. \"I have eventual hopes of getting you to a beach and seeing you in a bikini.\" I laughed.\n\n\"Have you ever seen an Irish girl in daylight? We're whiter than a glass of milk! It's a wonder that we don't immediately burst into flames from the brightness.\"\n\nI laughed. \"I have noticed, but I'd say you're more lustrous than white, like a pearl, not a glass of milk.\"\n\n\"Flatterer.\" She smiled.\n\n\"The biggest obstacle we have at this point is keeping Chad off your case. Hopefully you've scared him enough to give up.\"\n\n\"I hope so, if I'm going to make a go at this teaching thing I don't need something like that derailing me before I get out of the damn station.\" The crease was back, her eyes had darkened.\n\n\"You're beautiful when you're angry.\" I said laughing, the crease disappearing being replaced by a smile. \"Are you hungry?\"\n\n\"Not really, maybe something light. Let's see what room service has to offer. I'm enjoying hearing what you'd do if things had worked out differently, and I'll take you down at mini golf my dear boy.\" We called down for a light dinner.\n\n\"An athlete are you?\"\n\nShe laughed. \"Not at all. I do like to whack a tennis ball around once in a while. I like playing with fuzzy balls.\" A huge grin split her face.\n\n\"Duly noted!\" There was a knock on the door and a waiter wheeled in a small cart. Once we were alone, Cate plucked a cucumber slice from her salad.\n\n\"You're not off the hook. You've learned much more about me in the past few hours than I know about you. Out with it, I want the scoop.\"\n\n\"There isn't really much to it. Dad's an engineer, Mom is the lawyer I told you that I knew.\" I winked at Cate. \"My brother James, who hates to be called Jim or Jimmy, so that prompts me to do it at every turn, that's just what brothers do, is a few years old than I am. He went into the family business of engineering, building stuff, skyscrapers, bridges. They call it civil, well they did before Jimmy got into it.\" I laughed.\n\n\"Oh you're not getting off the hook that easily. What were you like as a child?\"\n\nI laughed. \"I wasn't a troublemaker, I was a quiet kid, reader, loved puzzles. I've dismantled my share of old clock radios and erected massive towers of building blocks. I tried sports, didn't like to play them much, but watching them was fun though. I was more of a discoverer, watching bugs crawl on twigs, making baking soda volcanoes for the science fair. I was a shy teenager, I wouldn't even think of talking to a girl unless she spoke to me first.\"\n\n\"So I was a first for you?\" She said laughing.\n\n\"No, I'd overcome at least the basic shyness. I still wouldn't go out of my way to talk to a girl but I'd say 'hello' and such to a girl I knew without provocation.\"\n\n\"Look out Casanova, Dylan is on the loose.\"\n\n\"Okay, okay, though I don't picture you as the kind to start either. You seem too, uh, reserved to make the first move. Honestly I cannot be the first or only man who has told you that you're beautiful.\"\n\n\"You were the first that did so with such complete sincerity.\" Her smile was dazzling, even in the dim light. \"I completely missed your meaning at first which was what made it so honest. You didn't flower it with excess flattery, you just blurted it out. I think it was the awkward delivery that kept me talking actually. A sort of awkward meets awkward bond.\"\n\nI smiled. \"Mom is the hero, champion of the underdog. She does civil cases, contracts, malpractice and that sort of thing. She's not an ambulance chaser. When she goes after someone or some company her defendant is the one that benefits. She says that I'm a lot like my dad and that he would never have gone out with her unless she'd been the one to ask him out.\"\n\n\"Sounds like you have a little more of her than she lets on.\" She said looking around at the room in general.\n\n\"Well sure. Things have changed in the past few decades. Guys don't meet girls at the local soda shop and ask them out to sock hops any more.\"\n\n\"We're the poorer for it.\" She added with complete seriousness.\n\n\"It's a power struggle now. There's so much questionable intent and innuendo. Asking a girl on a date isn't easy any more.\"\n\n\"I think you did alright.\"\n\n\"I asked for a date two months in advance! You think that's going to work in the corner coffee shop or the college library?\" I laughed. \"Gee Jenny, would you like to go out with me on Saturday night, in June, preferably the last week? I know it's March, but I want to make sure you're available. What do you mean you're washing your hair that night? It's three months from now!\" At this point Cate had set aside her dinner and was laughing hysterically.\n\n\"Well the boys have to take some of the blame too! They don't know how to handle rejection without taking it too personally. They either want to throw themselves off of one of your dad's bridges or they end up stalking the girl and scaring the daylights out of her.\" She pointed her finger at me. \"Pointedly I never told you I was actually from Dublin, and I never told you when my birthday was. I take into consideration the field you're studying and the class I teach, and know that you've probably read my resume and personnel file from the human resources department. By the way, that's a very serious crime and you know it.\"\n\n\"I was sorry to read that your family cat passed on. What was his name? Tigger?\"\n\nShe gazed at me open-mouthed for a moment. I busted out laughing. \"Do you realize that all of what I said was public knowledge, available freely on the internet if you know where to look? Honestly Cate, you teach IT security. Didn't you think anybody with half a brain might look you up on social media?\"\n\nShe relaxed visibly. \"I thought I had the security locked down on that. Those bastards keep changing the settings every time they do some sort of 'service improvement'.\"\n\n\"Family pet names and birthdates are common password roots. You know this, teach.\" I got an eye roll for that statement.\n\n\"It's funny you mentioned taking apart radios. One of the things that got me hooked on the nerdier pursuits was a little crystal radio kit my father got when I was probably eight or nine. I was just blown away by that. Which is incredible considering that you need a fifty foot video screen and explosions to get anything more than a yawn from an eight year old these days.\" She laughed. \"Wow that makes me feel old.\" \n\nI laughed at that. \"Yea, we're old. I mean I've been legal to buy liquor for over two years now.\" I said holding up my wine glass.\n\n\"Thank heaven for that.\" She said raising her glass.\n\nThe remnants of dinner remained, crumbs, a few grapes forgotten on the side, and fewer left in the bottle of wine. I tipped the last of it out sharing it between us as we talked into the night sharing childhood stories, hopes and dreams. Where we thought we would be, where we ended up, which didn't seem to match up with either of our intended goals. She wasn't an astronaut and I wasn't a ballerina among other visions we had for ourselves as children.\n\nCate excused herself and went to the bath after enjoying her self-imposed single ration of chocolate truffles, eyes rolling back in her head as she shivered with joy.\n\n\"Note to self, Cate is not only a chocoholic, but a repeat offender.\" I said smiling.\n\n\"These are positively delicious, and I'm not saying you're wrong.\" She popped the other half into my mouth and patted my cheek gently. She was right, they were good. \n\nHomely sounds emanated from the bath, the whoosh of movement, the click of a toothbrush set on the counter, a short fast rush of water. I stared into the sparse blue and orange flames of the fireplace. All at once I wish I had never walked away back in July, and angry with myself for the time I felt that I'd lost getting to know Cate. The irritating issue of Chad and the trouble he could cause if he put his mind to it, and the pettiness of it all. The time we would waste hiding out, running away. As soon as the ire flared it was quenched. Despite everything that had gone wrong, here we were alone together, the rest of the world could disappear and I wouldn't see it happen or care. A soft brush against my shoulder, a faint whiff of her perfume and she was back. I looked up at her as she sat down, stunned into further silence. She rested her chin on the back of her hand. She had gotten ready for bed, opting for the flannel pajamas again, but neglecting the bottoms. The shirt tails of the top barely reaching her thighs, she crossed her long legs, her toes dangling dangerously close.\n\n\"I don't know about you but I'm beat, I was thinking of going to bed.\" Her cheek twitched as she tried to keep the smile from creeping across her face. I had no such luck. I leaned forward and planted a soft kiss on the top of her foot.\n\n\"That sounds like a good idea.\" I pushed the little cart into the hallway and made a hasty yet thorough toilette. When I came out of the bath the fire had been put out, the lights turned off and by the light from the other room I could see Cate laying on her side, brushing her hair back and revealing that the pajama tops and perfume were the only things she was wearing. She was absolutely breath-taking and I stopped to watch her. She looked up and smiled. She was the most beautiful woman I'd ever seen, and I very well believed I would ever see. This wouldn't be the fireworks of this morning, this would be a slow burn like a banked fire on a cold winter night.\n\n\"Wow.\" I said under my breath. Her grin got a little bigger.\n\n\"The male body has a wonderful barometer to show it's interest.\" She said.\n\nI smiled sheepishly. \"Aren't you warm in that?\"\n\n\"It is a bit hot in here. Can you give me a hand?\" She said toying with the buttons.\n\nOur movements synchronized, the buttons gently undone and the top landed somewhere on the floor as I rolled on top of her kissing her deeply. There was no hurry, we had time to enjoy ourselves. The night was dark and deep, the only sounds were the sighs and soft caresses we made in our little world.\n\n\"Doesn't that thing ever sleep?\" She said groggily.\n\nI chuckled. \"It has a mind of its own.\"\n\nShe let out a jaw cracking yawn, blinking in the early light. Her eyes opened and rested on me. She smiled and reached up and ran her fingers through my hair. \"You are beautiful.\"\n\nI smiled. \"Me? I think you have that backwards.\"\n\n\"No, I don't. It's not just that you're handsome, the rakish smile, deep dark eyes, it's here too.\" She said placing her hand on my chest.\n\n\"Nice pecs? I don't even work out.\"\n\nShe rolled her eyes. \"You've a beautiful soul Dylan Butler. It's just who you are.\"\n\n\"I'm not special.\"\n\n\"Oh, but you are.\" Her smile brightened. \"You were right, there's reason to disbelieve someone when they say they love you, especially after such a short time, but last night you didn't tell me, you showed me.\"\n\n\"I can show you again if you're not opposed.\" I said with a laugh.\n\n\"I'm not.\" She leaned in and kissed me deeply. \"Let me freshen up a bit first.\"\n\n\"One of new worlds greatest gifts to the old world.\" She said holding up her fork with a bite of waffle dripping with syrup.\n\n\"I thought waffles were Belgian.\"\n\n\"Maple syrup.\" She said popping the bite in her mouth, her eyes rolling upward.\n\n\"I can add that to the multitude of things I love about you.\" I said taking a sip of my coffee.\n\n\"My love of maple syrup?\" She said making a funny face.\n\n\"Not specifically, more your love of small things, details rather than large things. You look at things with a much finer detail than most people.\" I laughed. \"Like a kitten watching a bug.\"\n\nShe smiled. \"Some people can't see the forest for the trees. I rather like the trees.\" She picked up her coffee. She looked over my shoulder out the front window of the little diner we'd stopped at for breakfast. \"I think I've always been that way now that I think about it. Mum once said I was an unusual child, I could focus on one thing exclusive of others, and that I was completely content with one biscuit, cookie I mean, when all the other children would horde their resources or try to clamber for more.\" She smiled looking at me. \"You can only eat one at a time.\"\n\n\"Some kids can and would prove otherwise.\" I said with a laugh.\n\n\"I mean having it all doesn't make one happy. Having enough, that's the thing. I've seen it here, and increasingly back home, that the drive to amass wealth is the driving force behind people these days. A big part of it is being sold on some dream that if you have a bigger house, a bigger car and a bank account full of money like Scrooge then you'll be happier. Look what happened to him! I think I'd be happy as I could ever be just knowing I have a decent roof over my head, a loaf in the breadbox and someone to share it with.\"\n\n\"A loaf of bread, a jug of wine, and thee.\"\n\n\"A jug of wine would be good too.\" She added with a laugh. \"I'm so philosophical today. I wonder why?\"\n\n\"I don't know, but I like it.\" I said smiling.\n\n\"I get the impression I could read you the sixteenth volume of the Encyclopedia Brittanica verbatim and you'd be happy.\"\n\nI burst out laughing earning a look from a couple at another table. \"Which volume is that, the letter N or O?\"\n\n\"I don't think it would matter.\" She smiled, her nose scrunching up and her eyes closing to slits.\n\n\"You're right, I would be happy, and it wouldn't matter which volume it was.\"\n\n\"What sort of trouble should we get into today?\" She asked.\n\nI shrugged. \"I'm open to ideas.\"\n\n\"Well the sun's finally come out even if it is colder than a witches tit outside.\" I nearly choked on my coffee. \"What? You've never heard that before?\"\n\n\"It doesn't get cold in Ireland in the winter?\" I asked clearing my throat.\n\n\"No, not nearly as cold as here. I have an idea but I have to ask a favor for it.\"\n\n\"Yes. Whatever it is.\"\n\n\"You may change your mind when I ask. I'd like to practice driving on the wrong side of the road.\"\n\n\"You haven't driven since you got here?\" I said surprised.\n\n\"Well I have had a rental or two, but I was hoping I might swing a car by the end of the semester, and since you Yanks never did learn to drive on the proper side of the road I need to get used to it.\"\n\nThe waitress chose that moment to refill our coffee. \"Do you have anything for nerves?\"\n\n\"I have decaf.\" She said.\n\n\"Ignore him, he was about to give me the keys so I could drive.\" \n\nThe waitress smiled. \"She's going to chauffeur your lazy butt around and you're complaining?\"\n\n\"They drive on the wrong side of the road where she comes from!\" I said trying to defend myself. We all laughed and she set down the slip. Cate snapped it quickly away from me.\n\n\"Let me feel like I'm contributing something.\" She said giving me the evil eye.\n\n\"Yes dear.\"\n\nSeemingly out of no where the waitress called out. \"That's it honey. Now you understand.\" I reached into my pocket and took out my keys and set them in front of Cate. She mouthed a quick 'thank you' to me before paying the tab.\n\nWe headed south along the lake, stopping at two other wineries where we tasted the wares and picked up a few bottles. Cate's driving was cautious, but she got comfortable quickly. She remarked about the beauty of the lake off to our left several times. \n\n\"I think this lake is nearly as long as all of Ireland.\" She said with a laugh.\n\n\"It may be, the Finger Lakes are deep too, good fishing.\" We had skipped lunch due to all the nibbling at the wineries. \"If we come back up the other side of the lake we should be back around dinner time.\"\n\n\"Do you want to drive?\" She asked. I could see she was enjoying herself so I declined.\n\n\"I like being chauffeured around.\" I said with a grin and stretched out slightly in my seat.\n\n\"I hope you tip well then.\" She said grinning.\n\nSince we were still parked I leaned over and kissed her. \"Mmm, you do tip well.\"\n\nWe dropped off the wine in our hotel room and asked the concierge for advice on a pub in town. After beer and burgers we found a movie theater and checked out the shows.\n\n\"Dinner and a movie, this is starting to seem like a date.\"\n\n\"No, I'm better at dates than just a burger and a second rate action flick.\" I said smiling.",
        "\"I'm not above a burger and a second rate action flick. I rather enjoyed it.\" She hugged my arm tightly as we walked. \"I hope you don't think I'm some prima donna, needing to be impressed all the time.\"\n\n\"Absolutely not, but you have to admit, it's nice to get dressed up once in a while and do something out of the ordinary.\"\n\n\"Yes, yes. We must don our finest and set out for your villa on the Riviera soon. Before the snow comes at least.\" We both laughed at that.\n\n\"Yes, quite.\" I said in stuffy accent. \"Make sure I have the place fully staffed this time. Only three butlers a personal chef and chauffer. What was I thinking?\"\n\n\"Have you travelled a lot?\" I asked. \"Besides coming here to work, of course.\"\n\n\"A little, it seems more common in Europe I think because there are so many cultures in such a small area. I did a semester in Spain. That was a trip.\" She said scoffing. \"The boys were a bit over-zealous of their abilities to woo the ladies. Each one thought he was Don Juan, and being a foreigner they thought I would fall for it.\" She said smiling. \"I spent a little time in Paris and Munich for work, but those were more work than anything. I didn't get to visit much. How about you? You have this huge country and it's all the same.\"\n\nI smiled. \"I'd hardly believe it's all the same. In some areas of it you can barely understand people and they're speaking the same language. I've been a few places here. I've been up to Toronto, not a stretch it's only a couple hours drive from here. I went to France about ten years ago for a summer exchange program. I loved it, I would go back in a minute. It's too bad you didn't get to tour a little, Paris is a wonderful place. It's a big city though and I found the countryside more enjoyable. Meeting people away from the tourist traps getting to see what life is like for the average joe is much more fun.\"\n\n\"Is that what I'm doing?\" She smiled and hugged my arm tighter pulling us together. She took the opportunity for a quick peck on the cheek.\n\n\"I'm an above average Dylan, but if you want an average joe I can look around for one.\" I said laughing.\n\n\"I think you're better than just 'above average' Dylan.\"\n\n\"You may be somewhat biased.\"\n\n\"Maybe.\"\n\nAt the hotel we changed for bed, Cate opting for a t-shirt from my bag, which was barely long enough to be decent. We kicked back and watched some bad late-night television. I laid back with my arm around her shoulders, her head laying on my chest. She let out a deep sigh, her hand sliding down the inside of my thigh.\n\n\"I honestly don't think guys understand just how good it feels to be held.\" She said drowsily.\n\n\"We understand, we like it too, but we don't admit it for fear of seeming weak.\" I said with a chuckle and kissed her forehead. She spread her arms and hugged my chest.\n\n\"Okay, don't admit you're enjoying this then.\"\n\n\"Never.\" I was enjoying it very much. She drifted off to sleep, and I knew I wouldn't be far behind her. I turned off the TV and did my best to re-arrange her comfortably before turning off the light and pulling the covers up over us. She rolled over and backed herself up curling against me, her round backside nestled against me. A soft giggle emanated from the darkness.\n\n\"You're insatiable.\" She whispered.\n\n\"Only for you.\" I kissed her behind the ear. She cooed softly and we slipped off to sleep together. I had some very erotic dreams, limbs pinned down and bodies heaving.\n\nI woke with a slight start looking into the dimly lit, smiling face of Cate. The sheet had slid down, and the tee was pushed up past her breasts, the nipples rose-petal pink in the cool light of morning, and her hair was a complete mess.\n\n\"You look cold.\" I said smiling.\n\n\"Nothing of the kind I assure you.\"\n\nI licked my lip and noticed it felt thick, and came away with the metallic taste of blood. I looked at her questioning and her smile widened. I moved slightly and the sheet slid across my lap and I quickly realized my gym shorts were missing. My eyes went wide. \"Like that was it?\" I asked using one of her favorite lines.\n\n\"You tell me.\" She said.\n\n\"I guess it wasn't a dream?\"\n\nShe laughed. \"It would all depend on the dream now wouldn't it. If it dealt with dancing pink elephants then I assure you it was a dream.\"\n\n\"It was more like I was wrestling with a white tigress.\" I said smiling.\n\n\"So metaphorical for so early in the morning. Let's just say that you were talking in your sleep, and didn't stop at talk.\"\n\nI had the modesty to blush. \"I'm sorry. I didn't mean to... well what ever I did.\"\n\n\"Like hell you didn't, and you did it twice.\" She said laughing. She leaned in and kissed me deeply, then rose slightly and whispered in my ear. \"Don't worry, if I hadn't been willing, you would've woken quickly and rudely. Oh and Dylan, even asleep you're a wonderful lover.\" She kissed my earlobe, then bit it hard making me yelp in pain. I reached over her hip and gave her backside a firm slap, eliciting a similar response.\n\n\"Well since I'm such a natural while asleep, why don't we see how good I am awake.\" I quickly rolled her back, rolling over on top of her, causing her to yelp again and she began giggling. She tugged the tee over her head and threw it on the floor, and we took our time with the rest. Breakfast was going to be a late affair today.\n\n\"When is checkout time?\" Cate asked dreamily.\n\n\"I don't know, but if it's too soon we're not going to make it. I don't think I have a solid bone in my body.\" She reached down to my crotch rubbing gently.\n\n\"Maybe not, but it's performed admirably this weekend.\" She said laughing. \"Dylan, you won't think me a prude if I tell you something, will you?\"\n\nI kissed my way from shoulder to neck. \"I hardly think there's anything prudish about you.\" She reached behind her and gave me a quick spank on the hip.\n\n\"I think we've made love more this weekend than I have, well ever.\"\n\nI pondered the math, and smiled.\n\n\"You're smiling, I can feel it without even looking.\" She scolded.\n\n\"I can't help it. In all seriousness though, why do you think that is?\" She was quiet for a few minutes.\n\n\"I think it's because none of them ever touched me here.\" She said bringing my hand up and setting it over her heart.\n\n\"Well that's the mistake they made then. That's where you want to touch early and often.\"\n\n\"How is it that you're single.\" She laughed. A qualm ran through me as I wondered why myself, and the answer came instantly. \"Because I was waiting for you.\" I thought.\n\n\"The right woman hadn't come along yet.\" Cate's head jerked to the side to look over her shoulder at me.\n\n\"Dylan, please be careful.\" Concern colored her cool response.\n\n\"I am. That's why I haven't gone engagement ring shopping yet.\" I laughed trying to lighten the mood. She snorted and got very quiet. The grip she had on my hand tightened.\n\n\"Sorry. It's just human tendency to fear losing what you've gained.\"\n\n\"Who said anything about losing anything?\"\n\n\"My mind is racing all over.\"\n\nI was quiet for a moment, I wanted to ease her fears without causing new ones. It was as if I was approaching a skittish horse. \"Cate, I love you. That's not going to change. I don't mean to scare you if I look forward at how things may go, it's in my nature, maybe not to so much to plan, but to look out for eventualities.\"\n\nShe relaxed. \"Apart from that first bit, that's the most unromantic thing you've said all weekend.\"\n\nI laughed. \"I guess what I mean, if I can try for clarity.\"\n\n\"Please do.\"\n\nI growled and bit gently into the softness of her shoulder. \"I mean that I've never felt this way about anybody before. I want to see where this leads, and I hope it leads to something bigger, better is going to be hard to pull off because you're already incredible.\"\n\n\"You've recovered nicely.\" She kissed the knuckles of my hand. \"Go on.\"\n\n\"Go on? What do you want me to say? I picture us with two children, a boy and girl, a house in the suburbs, maybe a flower garden and a mini-van. A comfortable job that doesn't require a large chunk of my time so that I can spend it with my family, and makes me enough to enjoy a good life, maybe a trip to the grandparents in Ireland once a year.\" I said grinning.\n\nCate rolled over, brushed her hair out of her eyes and looked at me for a moment. \"You are both patently insane and the most wonderful man I've ever met.\" She smiled. \"Can we put the kids on the back burner and travel a bit while we're still young enough to enjoy it?\"\n\n\"Well we should get that done quickly, you are twenty seven. Oof!\" The knee came up quickly and caught me in the thigh. \"A little more to the left and we might have to write off the kids entirely.\"\n\n\"Don't worry, I hit what I was aiming at. I wasn't out to cripple you, just get your attention. I'll have you know I'm in fine form, thank you.\"\n\nI traced my finger down her side, grazing her ribs, dipping down at her waist and sliding over the swell of her hip. \"Oh, I'd say you're better than fine. I should know, I've been keeping a very close eye on your form for a while now.\" She smiled. \"Where would you like to go? Wait, don't tell me. A train trek across Europe first, maybe sub-Saharan Africa for a little safari, then off to Sydney for a little opera and seafood.\"\n\n\"Then up to Tokyo, Buenos Aires, Vancouver and Seattle, let's not forget a stop in the tropics. I'll need a vat of sun screen, and I'll warn you now that I freckle up terribly.\"\n\n\"There's nothing terrible about your freckles.\" I said kissing her nose. \"Here we are traveling the world in our heads and we can't even get out of bed.\"\n\n\"I suppose we should, and get it over with.\" She said, the distaste obvious in her voice. I laughed.\n\n\"The curtain rises and we're back on stage in less than a day.\"\n\n\"All the worlds a stage and we merely players.\" She said laughing. I slid out of bed stretching my hands towards the ceiling. I heard a little moan behind me. \"You have no idea how good you look, do you.\" She said with a smile.\n\n\"Ditto.\" I said turning, to look at her languid form. She looked like an homage to beauty laying on her side, her hair cascading onto the pillow. \"You look like a Roman goddess in marble.\" She bust out laughing and rolled onto her back.\n\n\"Oh yes, that's me Venus de Milo!\" She continued laughing. \"Come hither and assist me my adorable adorer.\" She said holding her arms up. I walked around the bed and lifted her out bodily. She let out a yelp and grabbed onto my neck balancing herself.\n\n\"Off to your bath milady?\"\n\n\"Yes and I'll expect you to do the honors of course.\"\n\n\"Of course.\"\n\n\"You're awfully fit for someone that doesn't work out.\" She traced a finger down my chest as I negotiated the bathroom doorway.\n\n\"I swim, not for competition, well not any more. It's more like meditation.\"\n\n\"Really? Well I guess we'll just have to check your breathing control another time then.\" She said her eyes ablaze.\n\nWe roamed around town a bit before heading back into the city in the early evening.\n\n\"Do you have your own place or do you stay in the dorms?\"\n\n\"I have my own apartment. Do you want the address so you can stop by?\"\n\n\"Yes.\" She said smiling. \"Not that I'll have much mobility short of public transit for a while yet. Are you near a bus stop?\" We unloaded her things and brought the wine upstairs. \"I'm not sure I should be the guardian of that horde.\" She said pointing at the line of bottles on the counter. \"They're not exactly safe with me are they.\"\n\n\"Show some restraint, make it last.\" I said. She dropped her bag in the bedroom and came back, hands in her pockets and stood in front of me.\n\n\"I keep telling myself I'll be fine, I won't break down, I can handle this for at least a few months. Truth is I want to climb up on the roof and scream at the top of my lungs that I love Dylan Butler!\" She said smiling. \"Then I think, damn you've known him three months and only been seeing him for a weekend, and I realize how ridiculously short that seems.\"\n\nI leaned in and kissed her. \"Don't worry, you'll be yelling at me for leaving my socks on the floor in no time.\"\n\n\"There's a hamper for a reason you heathen.\"\n\n\"See? I told you it wouldn't take long.\"\n\nShe uncrossed her arms and leaned into mine. I wrapped her up tightly, her head lay on my shoulder. \"This is going to suck.\"\n\n\"I know, but we'll do fine you and I. It's not you alone or me alone, it's us. Right?\"\n\n\"Thank you. Thank you for everything Dylan.\" She whispered, her voice nearly cracked.\n\n\"No, thank you Cate for taking a chance on me. I'm sure it was a difficult position to put yourself into despite your feelings, and before you know it we'll be able to stop skulking around like thieves in the night.\"\n\n\"Would you stay a little longer?\" She asked looking into my eyes with a mixture of emotions.\n\n\"Of course, anything for you, Venus.\" I said kissing her deeply. \n\nWe sat on the sofa, Cate leaned back in my arms and we talked. The light of a single candle gave off a faint floral scent. We talked about so many little things and nothing at all.\n\n\"Plaid school girl uniform, the mind boggles.\" I said.\n\n\"I bet it does, pervert.\"\n\n\"Do you still have it?\"\n\n\"You're incorrigible.\"\n\n\"Yes I am. Was that a yes?\"\n\n\"Probably in a box in my folk's attic.\"\n\n\"Well, if ever there was a reason for a trip to the old country, that would be it.\" We both laughed.\n\n\"You can get that look at any so-called gentlemen's club here in the states if that's what does it for you.\"\n\n\"You're what does it for me, I think we can agree on that.\" I tightened my arms around her.\n\n\"Don't you forget it.\" She laughed and went suddenly quiet. \"Dylan?\"\n\n\"Yes?\" I said, nose buried in her hair, the scent of her was heavenly.\n\n\"This isn't some flash in the pan is it?\" Her question wasn't accusatory, it was inquisitive and I treated it that way.\n\n\"No, I don't think so at all. I think you were right when you said fate would bring us together. We don't need to deal with the conventional method of getting to know one another.\"\n\n\"Wouldn't you say that's what we're doing now?\"\n\n\"Yes, be honest and tell me that you've jumped to this point with someone within a few days time before.\"\n\n\"I never have. I've always gone through the usual courting practice of dating a few times, then maybe going to his place or inviting him back to mine.\"\n\nI gasped aloud. \"You, a good Catholic school girl would invite a man to your place?\"\n\n\"Corrupted Catholic school girl. Although,\" She added quickly, \"I'm not a take a guy home on the first date kind of girl either. I am a tad more progressive than the rest. If I'd followed the nuns direction I'd be married with several children now and live a discontented life as a sidecar to some upstanding man of the community.\"\n\n\"That is hardly your style.\"\n\n\"Don't I know it!\"\n\n\"Is it possible to be an independent strong woman who earns her own way and makes her own contributions while still being able to share a life with another person?\"\n\n\"I'll show everybody how it's done.\" She said with a chuckle.\n\n\"I should get home.\" I said kissing the top of her head. She sighed deeply.\n\n\"I know, but that doesn't mean I want to let you leave.\"\n\n\"Are you kidnapping me then?\"\n\n\"Would you mind if I did?\" She grinned.\n\n\"Only if you promise to keep me forever.\"\n\n\"I might do that anyway. You're pretty tough to have around. You cook, clean, nurse-maid me, hell you even bathe me. I sound like a bedridden old crone!\"\n\n\"I like the idea of you being in bed all the time.\" I began rubbing her shoulders and massaging the back of her neck.\n\n\"Mmm, I like that idea too so long as you're bedridden with me.\"\n\nI noted her statement that she might be with me forever 'anyway' and didn't jump on the obvious reply. It was early yet, but then I didn't want to wait either. I remember hearing old people who told stories of barely knowing their spouse before getting married, and some of them had been happy for their entire lives. I was only twenty three, and I already felt like that's what I wanted, to be happy, and to make someone else happy.\n\n\"Most of all,\" she continued, \"you accept me as I am.\"\n\n\"Well who you are seems pretty terrific so far. You know if I stay any longer I'm not going to leave.\"\n\n\"You don't know how much I wish you could stay. Better you skulk off into the darkness while it's safe though.\" She sat up so I could slide from behind her. She turned and looked straight at the front of my pants. \"They say you should always leave them wanting more.\" She laid her hand on the fly of my jeans.\n\nI moved her hand, took her by the shoulders and pulled her to her feet. Her look of surprise clear in the dim light. \"No matter how much I have of you Catelyn Murray, I will always want more.\" Her features softened, she reached behind my head and drew me into a kiss.\n\n\"If you don't leave right now I don't know if I'll be responsible for my actions Dylan.\"\n\nI chuckled. \"That's incentive to stay and we both know it.\"\n\nI did begrudgingly leave and went back to my cold, empty apartment where I gave in and went to bed, hoping I'd dream."
    ],
    "authorname": "Member389",
    "tags": [
        "romance",
        "teacher",
        "holidays",
        "student",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/kiss-me-cate-pt-02"
}