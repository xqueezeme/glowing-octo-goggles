{
    "title": "Breaking My Own Rules Ch. 06",
    "pages": [
        "I was juggling a paper sack in my arms, because as usual, I had forgotten to take a conveniently handled, reusable bag with me. My keys had worked their way to the very bottom of my purse. I was trying to dig for them with one hand, while not losing the sack and especially the carton of eggs balanced on top of the other groceries. When I felt the sack sliding from my arms, I clutched desperately at it. It took a moment to realize it was sliding upward, in defiance of gravity.\n\n\"I hope there's healthy food in here,\" he said. I stumbled back a step against my apartment door, completely thrown off balance. \"You were looking for your keys,\" he reminded me.\n\n\"What are you doing here?\" I stammered.\n\n\"Apparently, reminding you that you need keys to open the door.\" He peered critically into the bag.\n\n\"You disappear for a month...\"\n\n\"Twenty-four days,\" he corrected.\n\n\"For twenty-four days,\" I continued snidely. \"You made a mess of my mirror AND my lipstick, with your cute little commands...\"\n\n\"Which you obeyed, right?\" He waved at my purse. \"Keys.\"\n\n\"Fuck you,\" I said, feeling uncommonly brave. \"If I want to masturbate, I will masturbate.\"\n\n\"Now is that any way to talk to someone who brought you toys?\"\n\n\"What? Toys?\" I asked, confused by the sudden redirection. The elevator doors opened and a neighbor walked out into the hall, looking our way with undisguised curiosity.\n\nHe didn't even look around. \"Would you like me to describe them, or should I just show them to you?\"\n\nI was rapidly searching for my keys with both hands, turning bright red, knowing it would not bother him a bit to do either in front of the neighbor. And I was pretty sure the toys he was talking about had nothing to do with Rubik's cube. \"Okay, okay, I'm opening the door.\"\n\n\"Good girl,\" he murmured.\n\nWhen I had the door open, I snatched the sack from him, almost sending the eggs flying. Both the corner of his mouth and his eyebrow cocked up with humor. \"I do believe I make you nervous,\" he chortled as he followed me into the apartment. He closed the door and I heard the click of the dead bolt as I headed for the kitchen.\n\nI started putting groceries away, pointedly not looking at him. I had my speech all rehearsed and ready to go. \"Look, I've been thinking about it a lot. I have to admit I like having sex with you. A lot. Okay, a whole lot. And I'm willing to play this dominant submissive game of yours.\" Now I was not even looking in his general direction. \"You know, when we're having sex. Like in a scene, right? Isn't that what it's called?\" I put the last of the perishables away as I waited for him to answer. He didn't make a sound and I finally had to turn and look at him.\n\nI hadn't turned on the kitchen light, so the only light in the room was coming from behind him. Two table lamps that turned on with the main switch by the door, and what little bit of light was left in the darkening sky. His face was in shadow, I couldn't make out his expression, but his silence swept a wave of anxiety through me. I tried to proceed with the speech as I'd rehearsed it. \"I mean, this business of not being allowed to talk...\"\n\n\"You think this is a game?\" he asked very quietly. \"You think we're acting out a scene?\" He took a step closer to me. \"That we remove our makeup and go home at the end of the show?\" Another step. \"I leave you instructions and you just blithely ignore them?\"\n\n\"You were gone for twenty-four days,\" I stammered. \"You can't expect me to go without...\"\n\nHe took two more steps closer. \"I can and do. I'm very disappointed.\"\n\nI discretely backed up a step. \"You give me rules that I can't possibly obey. It's not fair.\"\n\n\"Fair?\" Suddenly he was right there, toe to toe with me and his hand was around my throat. \"Did I promise you fair?\" He began unbuttoning my shirt with his other hand.\n\nI couldn't stop breathing hard, wondering if his hand was going to tighten at any moment. \"You said, if I was afraid... That my fear...\"\n\n\"Are you? Afraid? Or are you thinking about what toys I brought for you? Are you becoming wet just imagining what might be hidden in my pockets?\"\n\nHe spun me around and shoved me against the refrigerator, yanking my blouse down from my shoulders. Almost instantly, he had bound my wrists with my blouse, then he reached around and undid the front clasp of my bra, yanking it down and wrapping it around my wrists to reinforce the tied blouse. I was spun around again, and shoved back against the fridge. His hand returned to my throat.\n\n\"How many times did you come without my permission? And cherie, I will know if you lie to me.\"\n\nHis hand was high on my throat and I couldn't look down so I tried to turn to the side, avoiding his eyes which I couldn't even see clearly. He was having none of that, though. His thumb and index finger fastened on either side of my jaw. This caused the bottom edge of his palm to thrust hard against my windpipe. \"Four,\" I gasped.\n\n\"Then I shall have to come up with four punishments, shan't I?\" It sounded like a question to me, but I decided not to take any chances. I tried to shake my head, but he tightened his grip. \"Consider that rhetorical. But before we get to the punishment, I think I will introduce you to my toys.\" His hand drifted back down my throat. \"Be a good girl, and stay here,\" he said, with just a slight shove against the fridge at my back. What can I say? I stayed.\n\nHe moved over to my catch-all dining room table and just like in the movies, he swept it clear. I watched in dismay as my neatly folded laundry formed a messy pile on the floor and my laptop landed on top of the pile, along with assorted mail that I hadn't bothered to open yet. Then he was back, his hands on my upper arms, pushing me toward the table from behind. He bent me over it and shoved my feet apart until my upper body lay flat on the surface. I felt my skirt being unbuttoned, the zipper pulled down, then it drifted down about my ankles. A moment later, one leg opening of my panties was ripped apart, and the other side slid down my leg to join my skirt. His hands were on my ass cheeks, kneading and patting. Then swatting. I gasped, hoping that that would be the worst of it. I saw him reach down to the pile of laundry and extract some item. It quickly was repurposed into a blindfold.\n\nFor a long time after that, there was nothing; no touch, no sound, I couldn't even make out the sound of him breathing and I wondered if he had gone into the bedroom. I stayed as still as I could, but my arms were beginning to ache, pulled behind my back as they were, and I was losing circulation in my hands, if the tingling was any indication. Out of nowhere, there was another swat, and I yelped this time, it was so unexpected. Then his fingers were all over my exposed ass and pussy, exploring, pulling this way and that, like he was performing an exam, and I wondered, not for the first time, exactly what kind of doctor he was. He dipped one finger into my pussy. It was so wet, I could actually hear the squishy sounds as he pumped the finger in and out. Then another finger joined the first and, I admit, I was rather desperately hoping they would make their way to my g-spot. They seemed content though just to move in and out, and not nearly fast enough for my tastes. A third finger joined the first two and it took all my will power not to writhe or push back against the delicious sensation.\n\nSuddenly, all three were gone, and I wanted to moan at the loss. I thought I heard him hum contentedly, but it might have been my imagination. Something cold pressed at my opening, and I wondered if he had managed to fetch ice without my hearing it. Whatever it was, it pressed in and I stretched to accommodate it, having little choice in the matter. Almost immediately, I felt myself close up behind whatever he had put in me. A moment later, there was another one. And again I felt the wide stretching followed by the constriction as it passed inside me. I must admit that, other than a very basic vibrator, I was pretty na\u00efve about sexual toys. Still, whatever this was seemed to leave me with a pleasant fullness. If this was one of my punishments, I figured I could endure it without too much effort.\n\nAgain, for some amount of time, there was absolute silence, save for the neighbor above me who always played his stereo too loud. The ache in my arms and shoulders took center stage. My hands had stopped tingling, which was probably a bad sign. Then something belt-like was being slipped underneath me and fastened in back, which required lifting my bound wrists out of the way and sent even more shooting pains into my shoulders. Something like a cord or thin rope was pulled down from the front center of the belt, under my belly, to dangle between my legs. It swung freely at first and tickled my inner thighs. That sensation was followed immediately by a totally different one.\n\nSomething was pressing at my ass hole. It felt oily, lubricated perhaps, and not especially large. I tried to cooperate, to relax and permit it entrance, again as if I had a choice. I was also fervently praying that it wasn't an enema. That was just really not my cup of tea, or coffee, as the case may be. As it made its way deeper and deeper, I realized it was also gaining in girth, stretching me, uncomfortably, at first, and then painfully. I realized I was gasping and then grunting. His hand pressed down on the small of my back, so maybe I was squirming, too. When I didn't think I could possibly take any more, the stretching suddenly stopped, the girth of what I now presumed to be a butt plug eased. Although still stretched and filled impossibly full, the smaller circumference at my sphincter it seemed like such a reprieve as to suddenly feel pleasurable. I gasped in relief. The relief was short-lived though as the cord that had been left to dangle between my legs was suddenly drawn up between my legs. He ran it between my pussy lips and it seemed like there were small knots in the vicinity of my clit and one large knot perfectly positioned to fill my entryway. The cord then made some sort of connection to the butt plug which required that it be wiggled around to my consternation. Then the cord was being fastened to the belt thingy at my back. Once again, my bound arms were raised to get them out of the way. I moaned quietly as pain shot through my shoulders. The cord was pulled tight, spreading my pussy lips wide and pushing the butt plug even deeper inside.\n\nI was abruptly drug away from the table and pushed to my knees. Then his cock was slapping against my face, demanding entry. I opened my mouth, trying to find him with my tongue. He laced his fingers in my hair, gripping tightly, then pushed as deep as my throat would allow. I struggled to pleasure him with my tongue. I didn't like not being able to use my hands, but I was determined to do the best I could, maybe even make him forget about punishing me. He pumped in and out, setting a rhythm even as I was finding a rhythm with my tongue, when suddenly the whatevertheywere he had put in my vagina came to life, vibrating ferociously, moving and bumping about. It's not easy to gasp when a cock is filling your mouth. And quite frankly, I think he was taking a pretty damn big chance that I could control my reactions and not bite down, because it was one of the most intense sensations I had ever had, and he'd given me some mighty intense ones in our short time together.\n\nAs if he could feel the vibrations all the way up through my mouth, he started pumping faster, and just a moment later, he was shooting come down my throat. The vibrations in my vagina stopped as suddenly as they had started. I was left with the peculiar feeling that, regardless of the intensity of the vibrations, they would not suffice to bring me to orgasm, almost as if the device was designed to keep me on edge, maybe forever. In the same way, the butt plug was giving me a pleasurable sense of fullness, but nothing that could be called orgasmic. I began to have a really bad feeling about what my punishment might turn out to be.\n\nAgain, I was left alone, in silence, still blindfolded, kneeling on the carpet. I was trying to catch my breath; as if I was the one privileged enough to come, when I was yanked to my feet and pulled toward the door of my apartment. I heard the snick of the deadbolt, then the door opening. I admit it, I panicked. \"I'm naked,\" I hissed in the general direction of where I thought he might be, based on the firm grip on my arm.\n\n\"You have shoes on,\" he replied.\n\nThat was true, but hardly of consequence. Even as he pulled me out into the hall, my only solace was that my apartment was right across from the elevators, and I heard the ding of an arriving car. I prayed, like I'd never prayed before, that it was empty. Blindfolded as I was, I had no idea if it was better to enter the car, which might be empty, or resist, staying in the hall which might not be empty. In the end, I decided that resistance would only delay getting to someplace that might be at least a little more private. He was obviously totally delighted by my attempts at modesty, chuckling when I tried to hide behind him in the elevator. On top of everything else, the damn foreign objects in my body were tormenting me with a passive/aggressive version of pleasure/over-stimulation.\n\nThe stern, matronly voice in my head was lecturing; \"You brought all this on yourself. Now you have to live with the consequences.\" Another voice was shouting, \"You let him into your apartment!\" But the loudest voice was simply saying, \"OMG, OMG, OMG,\" over and over again. How was I supposed to take that? And, of course, before the elevator even reached the floor of his destination, the whatevertheywere in my vagina started vibrating again. I fell to my knees on the grubby carpet in the elevator, gasping. When the elevator stopped, he bent and pulled me up over his shoulder. That was probably for the best, because I was pretty sure I couldn't walk, crawl or otherwise engage in locomotion in any way, shape, or form. I wasn't even too sure of my ability to breathe.\n\nOn the way to his apartment, there were a couple of sharp smacks on my ass, and I actually thought I might come despite my nakedness, my head down position over his shoulder, and the sting of my ass. Because, overwhelming all of those negatives, I was utterly owned by the cord rubbing on my clit, the butt plug in my ass and the things in my vagina rolling about humming to themselves. My whole existence had been narrowed down to ass, belly and clit. And of course, he knew that. The vibrations stopped. We paused and I heard a key in a door. The door opened, then closed. A moment later, I heard another key in another door. It, too, opened and closed. I was dumped rather unceremoniously onto a floor that felt to be carpeted with a shag rug. I was trying to roll over off of my back, because, well, laying on your back while your hands are tied behind said back is extremely uncomfortable.\n\nOne of my knees was pulled aside and a slap was applied to my pussy lips. \"This is mine,\" he growled. \"Keep your hands off it.\" He shoved my knee back down so that I was lying on my side, then I felt him untying my clothes from my wrists. The blood rushed back in a most painful fashion. Despite the protest of my shoulders, and not being sure if I was allowed to move, I pulled my hands in front of me and tried to rub life back into them. I desperately wanted to pull the blindfold off and see where I was, but even I wasn't stupid enough to push him that far. What I wanted even more desperately, though, was to come. And I was terrified that I just might be stupid enough to help myself along, since he seemed to have disappeared again. That was, if I could ever get any feeling back in my hands. I had the distinct impression that he was watching and waiting for me to do just that. I curled up into a ball to relieve some of the tension on the cord looping its way through my slit and I hugged my knees to keep my hands busy and out of trouble. Then I waited.\n\nIt's an odd fact that your sense of time gets really messed up when you are blindfolded. I really had no idea how long it had been when the whatevertheywere inside me roared back to life. But it couldn't have been more than a minute later that the butt plug took to vibrating, too. In fact, pretty much all of me was vibrating when his voice came softly to my ear. \"Don't come, cherie. I haven't given you permission.\" I'm pretty sure I sobbed, because now that the butt plug was vibrating, those wonderful pulsations were travelling right down the length of that cord to my clit.\n\nI tried to replay the last Green Bay game I'd been to with my dad. I thought that might preoccupy me, take my mind off sex. I was wrong. Have you ever noticed the asses on football players? I mean jeez, how are you supposed to keep your eye on the football? I would have done a mental review of my bank account, except I never balanced it. I didn't need to. I knew it would always be empty by the last week of the month. What else do you need to know? I finally settled for imagining I was doing my data entry job at work. Only problem was, that was so boring, it couldn't distract from anything. I hugged my knees tighter and rolled back and forth on the floor. Then I begged.\n\n\"Please, sir. Please, may I come?\"\n\n\"What was that, cherie?\"\n\n\"Pleeeaaase,\" I wailed. \"Please let me come.\"\n\n\"No, I don't think so,\" he said, and suddenly the vibrations ceased.\n\nI was sobbing softly. Now I no longer felt like I was in imminent danger of climaxing, but neither had I received any relief. The aching in both my pussy and my ass was intense beyond belief. How long would he keep this up? It felt like he was waiting for something, but what? Then a light went on.\n\n\"I'm sorry, sir,\" I said, trying to speak between sobs. I had rolled onto my side, still hugging my knees.\n\nThere was a long pause, then from somewhere behind me, he said, \"Sorry for what?\"\n\nI tried to gather my scattered thoughts. My first impulse was to say sorry for disobeying, but he'd made it clear that he actually liked it when I disobeyed or resisted his will. He liked having an excuse for punishing me. And frankly, I was beginning to suspect that some perverse part of my psyche liked being punished, or the eventual earth-shattering sex that it lead to, anyway.\n\n\"I'm sorry that I used what was yours,\" I whispered. A smack landed on my rear, though not as hard as he was capable of by any means. \"Sir,\" I added with a squeak.\n\n\"And will you do it again?\"\n\n\"No, Sir.\" I shook my head for emphasis.\n\n\"And will you talk when you have not been given permission?\"\n\nI cringed. \"Probably, Sir.\"\n\nThere was a long pause, but no more blows fell on my throbbing behind. \"And will you move when I have told you to be still?\"\n\nI shuddered. \"Probably, Sir.\"\n\n\"And will you come before I give you permission?\"\n\nI was trembling now. \"Probably, Sir.\" I said it so softly I could hardly even hear myself.\n\nI felt his hands on me, pulling my arms from where they still hugged my knees to my chest. He was sitting cross-legged behind me. He rolled me up into his lap and kissed my forehead, then he sighed. \"Thank you for your honesty, cherie. You are not a very good sub, you know?\"\n\n\"I've tried, Sir, but it's so hard.\" I actually hiccupped.\n\n\"Shhh. If it weren't hard, it would not be so rewarding.\" I didn't know what he meant by that, but then his hand was at my waist and the cord between my legs fell away, even as the butt plug and the whatevertheywere roared to life. I gasped, anticipating more torture, but then his fingers were on my clit and he was whispering in my ear. \"You may come, cherie.\" I started coming before he even finished the sentence. If he hadn't been holding me so tight, they probably would have had to peel me off the ceiling.",
        "****\n\nI awoke lying on the shaggy rug. I wasn't sure if I passed out, or just fell asleep from the emotional and physical exhaustion. His toys had been removed, as well as the makeshift blindfold. I blinked trying to get my eyes to adjust. The light fixture in the room was on a dimmer, apparently, turned very low. I didn't know if this was the special room he had spoken of, but it didn't seem that remarkable to me. There was a large, tall oriental style armoire with a couple of full size drawers in the bottom. I couldn't make out the artwork in the dim light but it looked like it might be a lacquered floral Chinese design. There was a padded sawhorse sort of thing that reminded me of the vault from gymnastics. I really hated gymnastics. In fact I pretty much hated anything that had to do with phys ed. When I sat up, I realized that the shaggy carpet was actually a rug laid on top of the existing carpet, centered to cover maybe half the room. There was what looked like a massage table. And there was a leather chair. He was sitting in it, watching me.\n\nI figured if I was still here and I was still here, he wasn't done with me, and I didn't know if that frightened me or excited me. But I did know that I wanted to try to behave, to avoid further punishment. I had no idea what time it was, but I had to work tomorrow, and I was already treading a narrow line with missed work days. What a mundane, intrusive thought in the midst of the surreal Alice in Wonderland my life had become. I rolled onto my knees and put my palms on my thighs, my eyes downcast and waited for instructions.\n\nAfter what seemed like forever, he stood and walked over to me, then circled me slowly, as if he was studying me. Then he stepped away to the cabinet, which was now at my back. I heard him open the cupboard doors. \"Come here,\" he commanded. I stood slowly and walked over to where he waited, still keeping my eyes glued to the shaggy rug that my feet sank into. He reached over and raised my chin so that I was looking into the cabinet. I went -- as the novels like to say -- cold. I didn't even know the names of most of the implements of torture that hung within and on the insides of the cupboard doors themselves. Canes, whips, floggers, paddles, crops. \"Choose,\" he ordered. A tremor went through me, and he leaned in close. \"Choose or I will,\" he whispered seductively in my ear. I sucked in a breath and stepped closer to the cabinet. I touched some of the items, shivering to imagine what they would feel like. I finally handed him what I thought was a flogger. It had many thin strips, but they seemed soft, like felt or suede.\n\n\"A very good choice,\" he said, and I felt an inexplicable pleasure at his words. He took my arm and led me over to the sawhorse thing. He swung out small padded braces from underneath the body of the contraption. \"Your knees go here. Climb on.\" I still wasn't sure exactly what position I was supposed to take, but his palm between my shoulders pushing me down to a supine position on the padded top pretty much answered that question. He fussed around, adjusting the knee pads, then pulling me back so that my ass hung partially off of the end. I grasped the front legs of the apparatus with my hands as he ran his hand over my hair and leaned close to my ear. \"How many times did you come without my permission?\"\n\n\"Four, Sir,\" I answered, desperately hoping that that meant four strikes of the flogger. Silly me. \n\n\"Yes, and four times twenty is eighty. Isn't that right, cherie?\"\n\nI was gasping and he hadn't even struck me yet, but I didn't dare not answer. \"Yes, sir.\"\n\n\"Now, my darling, it is very important that you do not move. Can you do that?\"\n\n\"No, Sir. I'm sorry, Sir. I don't think I can stay still.\" I was begging and I wasn't even sure for what. But then he answered me.\n\n\"Do you want me to bind you?\"\n\nI actually said it. \"Please, Sir. Please bind me.\"\n\nHe moved back to the chest and opened one of the drawers, pulling out short segments of rope. He then proceeded to tie my wrists to rings embedded in the legs of the sawhorse. I hadn't noticed them before in the dim light, but now, being so much closer, I realized there were a number of such rings, to accommodate different positions, I supposed. He did the same with my knees, then adjusted the padded rests downward so that I was pulled even tighter against the padded top. Finally, he pulled a strap from beneath the padded crossbar and pulled it over the small of my back, cinching it tight so that my ass was thrust even higher. \"How is that?\" he asked.\n\n\"Thank you, sir,\" I replied. Incongruously, he had made me feel safe. I knew I couldn't screw up and earn even more punishment. At least until he ordered me to count.\n\nThe first slap of the flogger fell on my back, and the soft sound of the contact was more intense than the pain. I had a flash of confidence. I could get through this. I could make him proud of me. More blows fell, on the backs of my thighs, on my calves, even on the soles of my feet. He swept my hair off my back and the lashes fell from my neck to my ass and back again. I dutifully counted. At some point around thirty, I realized that my skin was becoming highly sensitized. The blows were not falling any harder, but the contact was progressively becoming more intense. I knew, had I not been tightly bound, I never would have been able to be still. At fifty, it was becoming hard to keep count. The intensity, more overwhelming than pain would have been, was flooding my mind, demanding my entire attention.\n\nSomehow, I made it to eighty. I was drenched in sweat, and gasping for breath. He was there, kissing my cheek and my forehead. \"I'm so proud of you,\" he whispered, and I literally felt a glow from his praise. A moment later, he was squirting some liquid all down my back and legs. The cold of the liquid against my superheated skin was like a burning, but then his hands were there, gently rubbing it in, cooling me down, soothing me. Still, he didn't release my bindings. And the burning had moved from my skin to my pussy. I needed him, wanted him to fuck me so bad, but I bit my lip and said nothing. No more punishment today. Anyway, it didn't matter. He knew what I needed, and when he had completely rubbed the soothing liquid into my skin, he was there, slowly pressing inside me. He even took care to grip my hips from underneath where the flogger hadn't reached. He started slow and gradually increased in speed, drawing his pleasure out and giving me time to change my focus from the flogging to the fucking. We came together, as if he had orchestrated it. Maybe he had."
    ],
    "authorname": "Chimera44",
    "tags": [
        "fellatio",
        "flogging",
        "bondage",
        "butt plug",
        "ben wah balls",
        "spanking horse"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/breaking-my-own-rules-ch-06"
}