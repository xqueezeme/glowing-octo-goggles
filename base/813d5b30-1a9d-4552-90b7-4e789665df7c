{
    "title": "There and Back Again Ch. 154",
    "pages": [
        "Chapter One Hundred Fifty-Four: Ritual Terror \n\nEveryone tensed as a black line appeared in the air, and a long-legged, oddly proportioned black creature seemed to drag itself through a barely visible hole, one long limb reaching through first, followed by the rest. It was a ghastly sight -- and certainly looked like no demon I'd seen in either game before coming to Thedas. \n\nThe demon paused momentarily, staring at us with its eyeless face as if surprised; it looked from person to person, and each Warden it looked upon reacted in some obvious way. Aedan wilted noticeably, curling in on himself and dropping one dagger completely. Zevran actually laughed, though his expression looked tight -- like he did whenever he was confronted with emotions he wished to deny the existence of. Alistair groaned, but seemed able to shake it off somewhat, and he hunkered down behind his shield. Loghain cried out, his voice strangely high-pitched and piercing, and dropped heavily to one knee. Anders slapped his hands over his ears and began frantically talking to himself -- like a toddler trying to block out his parents' scolding, I realised. \n\nSolona screeched and collapsed. I'd have bent down to check on her, but when its malevolent gaze fell on me, I screamed, having to fight to stop my hands from coming up to cover my own ears. I could feel an intense pressure in my mind, as though I was being crushed under thousands of gallons of water or stone, and sounds that could have no physical source assaulted my hearing. I heard strange, frightening, disjointed voices, speaking of my fears -- that the Architect would escape and do to me what he'd done to Solona; that because of my miscarriage Alistair would leave me, disgusted with my inability to bear him children; that Anders would merge with Justice despite everything and the blood of so many innocents would be on my hands for not stopping it; that the Crows would murder my brother, and Zevran become something he was not in his quest for revenge. Each revelation was like a blow to my psyche, and I could feel myself recoiling in pain. \n\nI fought it, knowing it wasn't my voice -- that those fears, while mine, weren't real -- but it was like trying to swim through gelatin, or mountain climb while holding my breath. It's too hard. I can't. I just...can't. I wanted to fall back, to shrivel and faint, anything to get away from that malevolent pressure and those petrifying fears. I took one unwilling step backwards, but suddenly the pressure relented. I heard the voice of my husband ringing out, and realised that somehow he had fought through whatever the demon had done to him and managed to use his abilities to cleanse the area, destroying whatever magic had incapacitated us all. \n\n\"The Maker is with us! His Light shall be our banner,\" I heard Alistair thunder; I recognised the quote as something from the Chant of Light -- I'd heard it on the battlefield from the Grand Cleric after the battle with the Archdemon. I missed a few words, but clearly heard him continue, \"At last, the Light shall shine upon all of creation, if we are only strong enough to carry it.\" \n\nFreed from my paralyzing fear, with a shout I leapt to his side, crossing my daggers to block the swing of one long clawed hand; Alistair blocked another blow with his shield, using it to push back and throw the demon off balance. Surprisingly, Solona was the next to react; she shouted something in Arcanum from the ground where she sat, and the demon screamed, flailing its hands about in front of it and arching its back in agony. The others recovered more slowly, Anders surrounding all of us with barriers which decreased the pressure even more, Aedan stepping forward to move me away from the still-dangerous claws, Bel bracing himself beside Alistair to block any further blows. But the damage had been done; we'd broken the demon's control, and it couldn't do much else but thrash. \n\nFinally Avernus' spell finished, and the demon winked out of existence like it had never been there -- except for the black-tinged, oily-looking barrier that glimmered wetly between us and the sarcophagus like some corrupted, filthy soap bubble. \n\nWe all stopped, wide-eyed and panting. I went to my knees, dropping my daggers, pushing my helmet off, reaching out instinctively for my husband and my brother. Their hands met mine and we clung together, Aedan and Alistair each reaching out for others until all of us were in a circle, holding each other and quietly marveling our survival. I laughed in sheer disbelief, and heard it echoing from some of those around me. \n\nAlistair pulled me to my feet, finally, and wrapped his arms around me. I pressed my face to his neck and breathed deeply, holding onto his armour for dear life. Everyone around me was similarly celebrating, shaking hands with friends, or in the case of Solona and Anders, or Aedan and Zevran, clinging to each other quietly. \n\n\"What was that?\" I finally demanded. \n\n\"Terror demon,\" Alistair explained. \"Incredibly rare, or so I've heard.\" \n\n\"Because we don't have enough terror all by ourselves?\" I whined. He chuckled wryly, but I could tell his heart wasn't really into it. \n\nI thought about it, and decided not to ask -- ever -- what everyone else had heard. I could guess, for some of them, but I was pretty sure that finding out wouldn't be helpful or beneficial for my mental well-being. \n\nThe elderly mage at the centre of the seals waited until we'd all recovered, then with a nod to Aedan, reached one hand into a fold in his robes and pulled out a small, sheathed dagger. I recognised it; it was the same dagger he'd used to draw my blood before I became a Warden. His blood magic dagger. I knew it was enchanted to stop blood from clotting, to make it bleed longer and deeper and prevent the body's natural healing mechanisms from working. Without much hesitation, he climbed onto the lid of the sarcophagus -- still ajar -- and laid back. He drew the dagger, dropping the sheath, and quickly, carefully, sliced deeply into his left arm above the elbow. \n\nJowan gasped; Conrad, seeing that he wasn't needed anymore, turned to the slight mage, put one hand on his shoulder, and turned Jowan away. Alistair nodded at the redhead gratefully. Solona gripped Jowan's hand as he allowed himself to be pulled a few steps away. I sighed, saddened by Jowan's obvious distress, but thankful that someone had been compassionate enough to give him the support he needed -- because I wasn't able to at that moment. I needed to see the end of this ritual myself, needed to know that the nightmare was over, and I didn't have it in me to care for someone else right then. \n\nAvernus' mouth moved -- chanting something, not that I could hear it -- and he stretched his arm out so that the rapid flow of blood dripped into the open sarcophagus beneath him. He'd hit the artery, I could tell -- the blood pulsed out of the wound, something I knew from episodes of CSI back on Earth was called 'arterial spray', and I was a glad I wasn't closer to the mess. Done with his chant, he turned towards the barrier, eyes focused on the back of Jowan's head. The young blood mage turned in time to see Avernus' good hand open one last time -- a sort of wave, I supposed, a final goodbye -- then fall limp. \n\nIt took surprisingly little time -- a few minutes at most -- until Avernus lay completely still, eyes open and unblinking, blood barely trickling out of the wound anymore. His skin was ghastly pale, but his expression oddly content. He was dead, I could feel it -- I only wished someone could close his eyes for him. \n\nThis was our penultimate step in the plan Avernus had concocted: a blood magic-fueled sleep spell, something hundreds of times more powerful than a normal entropy-based sleep, strengthened by a human sacrifice -- Avernus' sacrifice. The mage had insisted it was necessary; it would keep the Architect from dreaming, the problem that had drawn the attention of the tainted Carta members who had attacked Hawke and tried to free Corypheus. \n\n\"I'm going to die anyway,\" he'd said, pragmatic as always. \"Do you imagine waiting in there, alive, until I suffocate or starve to death is a kinder way to go? This way I know it won't be in vain.\" \n\nAnd no one could reasonably debate that. A quick, relatively painless death from blood loss was definitely preferable to a long period of suffering -- especially as it might be the facet of the plan that meant that Corypheus' inevitable escape wouldn't be repeated. \n\nOnce it was clear that Avernus was gone, with a quick, somber prayer led by Alistair, we turned to our next task -- closing the sarcophagus without touching the barriers between it and us. Avernus had been quite clear on that point: the wood of the long sticks we planned to use would pass through the barriers just fine, as would stone or other non-living things, but anyone who touched the barrier, even bumped gently against it, would die a horrible, painful death. \n\nSo very carefully, as we had practiced, we used our long poles and slid the lid of the sarcophagus back into place. It was more difficult with the inert form of the ancient mage laying on top, and I almost shrieked when one rough shove almost knocked the corpse off onto the floor, but eventually we succeeded and the stone lid dropped solidly into place. It was weird, not being able to hear it thud, but it was clear it was closed regardless. \n\nJowan whispered a last goodbye under his breath, and then when he'd had a moment to gather himself further, the other mages joined him and gathered nearest the barrier, examining the stone overhead. \n\nThe last step in our plan was the trickiest -- simple, but by no means easy. The goal was for the mages to bring down the entire side tunnel on top of the sarcophagus, burying it beneath several tons of rock so no one would ever find it again. It would hide the area where the taint was obscured, hide the sarcophagus and body, and more than that, prevent anyone -- or anything -- from finding or coming into contact with the nested, demon-powered shields. Avernus had insisted that any rock falling through the shields would be unscathed, and unless it crushed the sarcophagus completely, would not disrupt the bindings, the seals, or the magic-disrupting runes Greagoir had so painstakingly created. And that was why the sarcophagus was sheltered in a small, low nook in the wall of the cave itself -- the falling rock would block the opening, but not land on the coffin itself. \n\nJowan and Avernus had done the mapping to ensure that no part of the keep or courtyard lay above us. To the best of anyone's knowledge, the cave was underneath the mountain, deeply dug into the towering stone, and shifting a few tons of rock shouldn't affect the structure any more than digging the tunnels had in the first place. Faren, before our capture when he'd been living at the Peak, had seen no signs of other branching tunnels that might lay over or underneath us, and his stone sense was apparently excellent. So it would be somewhat dangerous for those of us in the Deep Roads when the collapse was created, but shouldn't put the Keep or any living beings nearby at any risk. \n\nIt was going to take all four of the mages to pull off, however. We'd need two mages, both powerful but not necessarily skilled with earth magic, to create the fractures in the stone that would trigger the collapse. Anders and Solona both fit into this category -- neither had a particular affinity for earth, but both were more than capable at pure destruction. Alim, who was somewhat more talented with earth magic, would have the job of containing the stone so that it didn't obliterate the main Deep Roads tunnel or those of us standing in it. \n\nJowan's job would be the most difficult. With Avernus' training, he was highly skilled with Earth magic, and he would be using his capabilities to their utmost potential -- to shape the rockslide as it descended. His goals were both to protect the sarcophagus from any accidental damage, using barriers and sheer magical muscle to keep the rock from dropping anywhere it wasn't intended to go, and to obscure any sign that the side tunnel had ever existed. He hoped to be able to make it look like a natural cave-in had occurred, destroying any sign that there'd ever been a room there. Only those Wardens currently involved were even aware the room existed -- with the exception of Faren, who we had decided to trust if he was ever fully recovered enough to question it -- and anyone else would believe it was simply one of many rockslides that occurred naturally in the Deep Roads. \n\nThe mages spent some time in discussion of the plan and their various duties. I stood back, watching the Solona I remembered emerge for a brief period when discussing magical theory -- she straightened up and came out of her shell, her easy style of diplomacy flawlessly breaching the gaps between the three male mages, all of whom were somewhat uncomfortable with each other. Alim and Jowan hated each other -- unsurprising, given Alim had snitched on Jowan to the templars about his blood magic; Jowan and Anders were uncomfortable with each other, each angry at the other for the pain and suffering they'd caused Solona. Anders disliked Alim on principle for having been a Chantry loyalist for so long; the elf thought the rebellious human was selfish for his multiple escapes -- all of which had negative consequences for the apprentices he'd left behind. \n\nBut Solona floated in the middle of it all -- a loyal friend to each, neither too accepting of the Chantry's doctrines nor too openly rebellious, non-judgemental and unwilling to censure any of the men for their choices. I'd never seen the four together, that I could remember, and it was somewhat amusing to watch them all dance around the beautiful woman as she subtly led each of them to being civil and working together. \n\nI noticed Aedan watching as well, and he winked at me when he saw me looking. \n\n\"I could have used skill like that back on Earth,\" I murmured. \"I'd have hired her in a heartbeat.\" \n\n\"I'll bet.\" He chuckled sadly. \"I'd hoped to make use of it in Kirkwall -- but I think it will take some time before that's possible.\" \n\nEven as he said it, I noticed Solona withdrawing into herself again; Jowan had reached out to touch her shoulder, as he'd done so many times before, and the poor girl flinched like she was about to be hit. He apologised, she shrank, Anders balled his fists up reflexively in impotent rage, and suddenly the whole dynamic changed. \n\nI sighed. \"I think you're right.\" \n\nThe mages seemed to be done with their discussion; Jowan braced himself, approached us, and simply said \"We're ready.\" \n\nAedan nodded. \"Where do you want us?\" \n\nJowan nodded down the main tunnel towards the dwarven door that led to the keep. \"As far down that way as I can convince you to go. I don't think I need to explain what will happen if anything goes wrong here.\" \n\n\"And how likely is it to go wrong?\" Aedan raised one eyebrow, and Jowan flushed slightly. \n\n\"I can't be certain. Obviously I don't think it will, or I wouldn't be volunteering to be standing so close. But there are no guarantees.\" \n\nAlistair smiled and punched Aedan's shoulder. \"Give him a break, would you?\" Aedan groaned and rubbed his shoulder theatrically, and Jowan relaxed slightly. \"We'll be down there. Just in case. Good luck, Warden.\" Alistair nodded at Jowan and then pulled me away gently, leading me down the tunnel. \n\nI grinned at Jowan and gave the four mages a thumbs up; the others followed us, and we all grouped just beside the massive dwarven door, out of sight of the entrance to what we were informally called 'the tomb'. \n\n\"Think it will w-work?\" Bel asked nervously. \n\n\"Of course.\" I wasn't sure Aedan felt as certain as he sounded, but he put on a good show, anyway. \n\nAnd then we stood there, quietly, waiting. I could hear the people around me breathing, a few nervous swallows, Alistair's armour creaking as he shifted his arm around my waist, but the quiet was almost deafening. I've never been good at waiting. I tried counting to one hundred in my head, tried concentrating on song lyrics, but my nerves had me counting unreasonably fast and I couldn't remember any of the words I was trying to think of. Time dragged some more. \n\nI was just about ready to jog back down the tunnel and see what the holdup was when the ground around me started to shake. It wasn't enough to knock us over, but it was certainly noticeable. I'd never felt an earthquake -- the Canadian prairies are remarkably stable, geologically speaking -- but it felt like what I had always imagined one to be like. My feet vibrated, dust flew up into the air, and a few small rocks and pebbles showered down on us from the walls and ceiling above. I stopped myself from looking nervously at the ceiling -- if it is falling, staring up at it is only a great way to break my neck -- but instead covered my mouth and nose with my hands in a vain attempted to filter the air, and huddled up against Alistair's side. \n\nThe noise that echoed down the hallway was deafening -- I hoped the four mages had done something to protect their ears -- and a great plume of dust billowed towards us, making the air all-but-unbreathable. I coughed, eyes watering and lungs laboring, but after a few moments, four shapes materialised out of the darkened tunnel. All four mages were filthy, covered in debris and dust until you couldn't tell the colour of any of their hair or robes, but they were smiling broadly. I choked on my breath of relief, which made Alistair laugh, and soon we were all giggling and coughing and slapping the mages on their backs -- except Solona, who watched with sad eyes -- while we waited for the dust to clear. When it showed no signs of doing so, Anders finally turned to face the obscured tunnel and chanted something; a magical breeze swept past, taking the worst of the cloying powder with it as it howled down the narrow passage. \n\n\"Come look!\" Jowan urged, a mischievous smile on his face. His mana pool was as empty as I'd ever seen it, but I was reassured by the presence of the smile. \n\nWe followed the eager mage down the tunnel until we reached the place where a small opening used to be. \n\nIt was gone. \n\nThe wall of the tunnel sloped down as though it had never been disturbed; there was no sign of a rockslide or opening anywhere. The pattern in the stone walls and ceiling which had been made by the original creators of the Deep Roads continued uninterrupted, and I couldn't see anywhere that it was obviously damaged or patched. The only sign that something had changed were two statues, across from each other, carved into small nooks in the walls of the tunnel. They looked identical to so many we'd seen in the Deep Roads under Orzammar -- dwarves, hammers raised over their heads, facial features obscured by apparent age. The pedestals were pocked, the intricate curls of the carved beards broken in places, the stone streaked with age just like every other paragon statue I'd seen in Bownammar and elsewhere. \n\nI looked at Jowan, dumbstruck, mouth hanging open, and noticed everyone else in the hallway doing the same. \"How?\" I finally stammered. \n\n\"Why?\" Aedan asked at the same time. \n\nJowan, who looked pale and tired, though immensely self-satisfied, smiled. \"I'm good with stone,\" he shrugged. \"And this way, you know where...just in case.\" \n\n\"Everything went well?\" \n\nJowan nodded, and Bel started nodding at the same time. Aedan raised one eyebrow at the dwarf. \n\n\"It feels...normal,\" he murmured, obviously concentrating on his stone sense. \"There's a small pocket way back, but I'd have assumed it was a natural formation if I didn't know better. There's lots of those in these mountains. But the stone feels just the same here as everywhere else.\" He looked at the mage in awe. \"Don't tell the Mining Caste in Orzammar, or they'll never stop complaining about mages destroying their livelihood.\" He looked at the statues again. \"Or the Artisans. They'll never stop pestering you to work on their restorations.\" ",
        "Jowan smirked again. The effect was ruined when some congealed rock dust flaked off his cheek, revealing a small patch of white skin. Aedan laughed. \n\n\"All right everyone, time for baths all around. And please remember, this is to be discussed with no one. As far as anyone knows, the Architect is in his 'protective chamber' upstairs -- which is sealed and never to be opened -- and Avernus passed away of natural causes in the night. We will tell everyone we had a private pyre up on the roof.\" Aedan's expression was suddenly serious. \"Anyone who violates that rule...well, let's just say you won't like the consequences if I find out.\" \n\nMurmuring agreement, we all went back to the dwarven door. Alistair opened it carefully, and we trooped through. Alistair and I picked up our assigned guards at the bottom of the stairs leading up to the main keep. I was happy to see mine was Avanna herself; she stared at my dusty hair and armour, but knew enough not to ask any questions, and her counterpart followed her lead. They silently followed upstairs. \n\nAlistair headed towards our quarters, but on a whim, I paused, looking back at Solona behind me. \"Come with me? Just for one second. I have something to show you.\" \n\nI gave Alistair and Anders both slight headshakes, and confused, they both wandered off; I knew they were planning to pop up to the roof and start a fire, just so there'd be smoke to provide evidence of the fictional pyre. Solona, still caked in stone dust, eyed me curiously; I ignored the unspoken question, and led her back to my office, closing and locking the door behind us, leaving Avanna outside, and offering the mage a chair. \n\n\"Solona?\" I asked, as I bent down behind my desk, pulling up the rug and reaching underneath. I waited for her answering hum, before continuing, \"How much do you know about anatomy?\" \n\nI reached what I needed and hauled the small chest up, fishing through a ring of keys I kept tied to my waist all the time. I glanced up at the mage, who was looking at the little chest in confusion. \n\n\"What?\" \n\n\"Anatomy. Body parts. Do you know much about what people's body parts look like, or what they do?\" I waited for her answer before opening the now-unlocked chest. \n\nShe frowned. \"Um, a bit? We are all educated in the Circle, and it would be hard to determine who showed talent as a healer if we weren't exposed to some basic information about bodies. But Anders is the expert, if you have a problem...\" \n\n\"No, no. I just...\" I sighed, and took a chance, opening the chest and lifting out the small glass jar within. \"I was wondering if you knew what these were.\" I set the jar on the desk, and then sat down to wait, watching Solona's face intently. \n\nThe mage picked up the jar, grimacing a bit at the gore inside. There wasn't a lot of blood -- cautery, Zev had informed me, was the key to doing what he'd done without causing death -- but there was a little and it had tinged the fluid within grey instead of the pink it would be if the Architect had been human. She tilted the jar back and forth, examining the grisly contents, her brow furrowed. \n\n\"These used to be attached to someone, obviously. The Architect, specifically,\" I explained, providing a small clue. \n\nI saw the moment when she realised exactly what she held; she went still, shoulders stiffening, eyes widening, and then she reached out and slowly, carefully, placed the jar back on my desk. \"Are those...\" She trailed off, seemingly unable to drag her eyes from the contents of the little jar. \"Really?\" \n\nI nodded. \"I felt like...well, it seemed only fair,\" I offered lamely, suddenly uncertain if I'd done the right thing by showing her. The mage was pale, her breathing quick and shallow, and one cheek kept twitching as she clenched her teeth and swallowed visibly. I wondered if she was going to throw up. \n\nI didn't consider that what I'd done -- or asked Zevran to do -- was the wrong thing, just that perhaps she didn't need to be informed. Which should worry me -- and doesn't. I just hope I've not made anything worse for Solona. \n\nFinally the mage met my eyes. \"But really, why?\" \n\nI considered for a minute, trying to determine for myself what had driven me to even plan such a thing. And how to explain it, even if I knew. \n\nI swallowed. \"I don't know if he...if it's even possible for him to...I don't know.\" I slumped in my chair slightly. \"I just felt like...he needed to be punished somehow. Some way that would be meaningful to most men. Just going to sleep forever seems too kind, but we couldn't kill him. So I thought...this way, he's not a man anymore. Won't ever be a father, if that was even possible. It takes something away from him, something most men prize, in return for what he took from you -- and me, if I'm honest.\" \n\nI watched her face closely as I spoke, looking for some sign of her feelings on the matter; I was terrified that I'd made it worse for her in some way, that I'd somehow exacerbated the trauma or made her relive it. But other than the persistent cheek twitch, there was nothing. I waited anxiously to see what she would say, but she seemed frozen -- eyes locked on the jar and its horrifying contents, unable to look away. \n\nFinally, when the silence had gone on long enough to become very awkward, I leaned across the desk and picked up the jar. \"I'm sorry,\" I whispered, leaning back and opening the chest I'd stored it in. \"Maybe it would have been better if I hadn't shown you.\" \n\nI went to place the jar in the chest, when Solona finally moved, reaching out her hand expectantly. \"May I?\" \n\nI hesitated only a moment before placing the jar in her hand. She stood abruptly, looked around almost wildly, then walked across the room, refusing to look again at what she held. I jumped when she smashed the jar by tossing it into the empty, dark hearth, glass shattering and fluid splashing wetly on the stone. Before I made it even halfway across the room, the mage had a torrent of bright red fire pouring out of her fingertips. \n\nSolona wasn't a strong elemental mage, I knew; her talents lay in other areas like entropy and spirit. But evidently her rage was an excellent catalyst, because the stream of fire rivalled anything I'd seen from any of the other mages, and her voice, which had started out a low growl, rose in pitch until she was almost screaming, wordless sounds of hate and anger and fear spilling from her lips in a frenzy. \n\nI didn't try to stop her, just stepped up beside her and waited until the fire petered out. I could feel her mana was completely depleted by the time the last few sparks fell, though she kept thrusting her hands out as though hoping for more. And then she was weeping, unintelligible words muffled by hopeless sobs, big fat tears pouring down her face to splash on the front of her robes. The contents of the jar -- and the shards of glass, the cork stopper, and even the preservative fluid -- had been vapourised, leaving nothing but a slight black stain on the stone and some scorching. \n\nI put my arm around her shoulders cautiously, and just stood patiently as the tears finally stopped and she wiped her face irritably with her sleeves. She ignored the handkerchief I offered her, instead turning to me and flinging her arms around my neck. I hugged her back, gently, careful not to hold her too tightly or restrain her. \n\n\"Thanks,\" she whispered, and finally I smiled, though she couldn't see it. \n\n\"You're more than welcome. I wish there was more I could have done.\" \n\nShe pulled away, her cheeks reddening as she eyed the now-filthy hearth. \"You've done enough. It's over.\" \n\nI just nodded. Yes, yes it is. Finally."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "romance",
        "modern girl in thedas",
        "celebrities"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-154"
}