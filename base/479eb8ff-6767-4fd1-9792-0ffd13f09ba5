{
    "title": "A God Called Bruce Pt. 05",
    "pages": [
        "Chapter 41:    The Horny Tom\n\n\n\n\nBreakfast on the terrace. A turning point. Bruce had arranged the barbeque area in the same fashion as the one in his yard. The banquet table was a bit larger though, easily seating around thirty people. \n\nThere was another innovation. One of the new girls was helping him with the cooking, he was obviously teaching her his methods. Three others brought the food to the table. They were dressed in the style of medieval serving wenches, aprons, billowing skirts and bodices that generously displayed their ample charms. They looked like they were having a lot of fun, bending forward at every opportunity to grant even better looks at their wares. There was a lot of giggling and joking around. Breakfast had just become a lot livelier. The moment the food was on the table the girls sat down with us to have their meal.\n\nAfter the meal the discussion came around to naming the place. Vulcan stood up and pulled a sign out of the air. It was about three by four feet wide and done in the style of an old fashioned English pub sign, with a picture and a name underneath.\n\nThe picture showed a disreputable looking huge grey tom cat with enormous goolies, on the prowl, on a yellow background. He sported a horn on his forehead like a unicorn. The sign read Horny Tom. Vulcan fastened it above the front door and stepped back to admire his handiwork.\n\nThere was thunderous applause. Gadeirus congratulated him.\n\n\"I only made the sign,\" he said, \"the credit belongs to the new girls, they asked me to make it.\"\n\nMore applause; for the girls this time. I guessed this meant we would be drinking in the Horny Tom from now on.\n\nMarge cleared the table with a wave of her hand and stocked it with ice buckets, French champagne and fluted glasses. The breakfast had just turned into a party. To my surprise everyone was very orderly and only drank a couple of glasses. An hour later all were back at work.\n\nAlgenon and Frank had moved to another table and were going over some computer printouts. They waved across to me and gestured for me to join them. I did as I was bid.\n\n\"We are getting somewhere with sorting out the time line and retrieving the records of the Ancients. Frank made a real breakthrough. I should have seen it myself, but Frank spotted it.\" Algenon seemed a little embarrassed.\n\n\"As you know the dates of the records are updated once every week to the current date. That means that, as far as the system is concerned, there are no records in existence older than one week.\"\n\n\"Yes, I remember that.\"\n\n\"Frank asked me if I had any idea how long the system had been idle. I told him that Endora had said it had not been used for millennia when we first asked her about it. So Frank asked how she could possibly know this if there were no records older than one week. When the question was put to Endora she said she just knew, but didn't know how.\"\n\n\"That's when it hit me,\" said Frank. \"Endora lies about certain things. She is unbelievably powerful, but intuitive knowledge is quite outside her capabilities.\"\n\n\"That is very tenuous proof that she lies.\" I was not convinced Frank was right.\n\n\"On its own, yes. AIs cannot lie, unless they are given specific instructions to give false answers to certain questions. This is the case here. Once I realised that Endora was deliberately giving us false information her whole web of lies became suddenly obvious. The only reason we couldn't see it was because we had never questioned her integrity.\"\n\n\"Give me an example.\"\n\n\"For the system to function Endora has to know where each power spot is in relation to whatever reference point she uses. Now, if you go from Sydney to London that is very easy since the direction and distance between the two cities is always the same on Earth. The power spots however are on different worlds and in different universes where everything is in constant motion relative to each other. For the system to function Endora must compute the precise location of power spots afresh each time they are used. To be able to do this she must compute the movement of the power spot in relation to her reference point at the time in question. This requires unbelievably precise time keeping, and a host of historical data, something that cannot be done in a world that is only one week old as far as she is concerned.\"\n\nI thought about this for a while and came to the conclusion Frank was right.\n\n\"So how are you going to unscramble this?\" I asked.\n\n\"We have to find the instructions that cause the lies. Once we get rid of these everything will be there, the timeline, the records of the Ancients, everything.\"\n\n\"And how do you propose to go about it?\"\n\n\"From a maintenance terminal, using a debugging programme. Now that we know what she does it's not all that difficult. We will ask Endora a number of questions. To some the answers will be true, to others false, depending on what we ask. By monitoring her we can find out what subroutine she goes into on questions where she is supposed to lie. That subroutine will not run when she tells the truth. It'll take some time, but it can be done.\"\n\n\"But won't she spot what you are doing and stop you?\"\n\n\"Unlikely. Monitoring and debugging programmes are transparent to the operating system. If it were not so you couldn't debug.\"\n\nThis was good news indeed. I thanked Frank and Algenon and went to my cabin. I poured myself a beer and lit a cigarette. When I handled Lachesis' cigarette case I remembered I had promised the Fates I would discuss their dilemma with Marge and Kia. Using the case as a medium I called Marge. A short time later she was with me.\n\n\"Feeling horny, are we?\"\n\n\"No Marge, we need to talk. You can have a nookie afterwards, if you like.\"\n\n\"Oh, I like. What's up?\"\n\n\"Do you know where Kia is, we should really have her here too.\"\n\nMarge traced a pattern in the air and said something in a language I did not understand. The moment she finished Kia stood in the room. We both gave her some scratchies and got our lick across the face as a greeting.\n\nI explained the dilemma with the fates and how I had promised Atropos to discuss it with them.\n\n\"This is not as big a problem as you might think,\" said Kia. \"I can sort this out with ease, if the controllers of the Fates let me.\"\n\n\"You know how to contact them?\" I was flabbergasted.\n\n\"No, but Lachesis knows and what Lachesis knows I know ... if I want to. I shall go and see her.\"\n\nWith that Kia disappeared.\n\n\"Just as well Kia loves us,\" said Marge. \"I dread to think what she is capable of if the situation were different. She is by far the most powerful creature we know of.\n\n\"But, be that as it may, you promised a nookie.\"\n\nA nookie it was.\n\n\"You know, Marge,\" I said to her during our post coital embrace, \"you are the closest thing to a wife I've ever had.\"\n\n\"I know. Me and Hera, both. You have two half wives.\"\n\n\"Hera?\"\n\n\"Oh yes, Hera is very much in love with you. You are only the second man she ever had in her life, and now, since she and Zeus have reverted back to being brother and sister again, you are the only one. She still plays with the girls, but then, nearly all the Goddesses do. It's part of what we are.\"\n\n\"I thought all she was interested in was the sex.\"\n\n\"You couldn't be more wrong. That first time, when you were really angry with her and fucked her out of spite, you still cared enough about her to make sure she had her orgasms before you had yours. That was new to her. Zeus fucked her when he felt like it, if she happened to get off while he was at it that was a bonus, if she didn't, he couldn't give a shit, as long as he got what he wanted. To him she was little more than a possession. That is not to say there isn't any affection between the two, but it isn't, and never was, love. It was you who showed her that.\"\n\n\"How do you know all this?\"\n\n\"She told me. Since you came into the picture she called on me a few times, ostensibly for some sex, but when it came down to it it was mostly to find out more about you. We've had sex before, usually at some hen party or other, never one on one though. We've become quite close. She calls me her sister wife. \n\n\"You treat her like a woman, not like the Supreme Goddess. She likes that. She finds it irresistible that you show her respect and affection without subservience. No one else does that, perhaps apart from me. I do pretty much the same now, I've learned that from you.\n\n\"Well, lover boy, all that talk got me horny again. Fancy another round?\"\n\nI did.\n\n\n\n\n\n\nChapter 42:     Betty\n\n\n\n\nNext day, after breakfast, Betty asked if she could talk to me for a while. We went to a separate table on the veranda and took some coffee with us.\n\n\"I just spoke to Panacea,\" she said. \"She tells me Frank and I can have sex again. It is safe now. You know what that means, don't you?\"\n\nI had no idea what she was talking about. She must have seen the confusion in my face. \n\n\"You have forgotten, haven't you?\" she chastised me. \"Remember when we were in front of the mirror after my treatment? I promised you my second cherry then. Can I share your bed tonight so I can thank you properly for all you have done for us?\"\n\n\"What about Frank?\"\n\n\"Oh, Frank will be thanking Marge. She has already agreed. She said she will cook dinner for the four of us before we retire to our respective beds.\"\n\n\"You got yourself a party,\" I said to Betty, sealing the bargain with a kiss.\n\n\"Now that this is out of the road, back to business. I need you to do something for me.\"\n\n\"What can I do for you, Betty?\"\n\n\"I want a video link with the people on the other planet. A big screen, say about six feet wide, inbuilt translators, something suitable for conference calls. There is a conference room in the Horny Tom that holds about twenty people. I want it installed there. The other terminal should be somewhere in the temple. I need this as soon as possible. When the delegation arrives they can stay in touch with home. If we can get it done quickly we can get them used to it before they come here.\"\n\n\"This is a job for Darrin, let me call him.\"\n\nI called Darrin via Endora and asked him to join us. He arrived shortly thereafter and I explained to him what Betty wanted.\n\n\"You never ask for anything easy, do you?\" he grumbled.\n\n\"If I needed something easy I would ask a mechanic, not a genius.\"\n\n\"Alright, alright. You don't have to butter me up. You can have it this afternoon. I'll get Vulcan and Algenon to give me a hand. We'll have to go with you to install it on the other end, say tomorrow morning, if that's okay.\"\n\n\"Wonderful, couldn't be better.\"\n\n\"Is he always this grumpy?\" asked Betty after Darrin had left.\n\n\"It's his way. It doesn't mean anything. He is by far the best technician I have ever come across and I have worked with hundreds of them when I was working as an engineer. He is quite a nice bloke actually once you get past his act.\"\n\n\"Pity I can't go with you.\"\n\n\"It's only another two weeks before you're fit to travel. The time will pass quickly enough.\"\n\n\"I know. I just get frustrated when I can't work at my own pace. There is so much I need to know, so much to explore.\"\n\nAt that moment Bruce turned up. I filled him in on what we were going to do. He wanted to join us but I told him he and Marge were needed here. Over a beer I explained that when we had the terminal going I wanted the natives to see a couple of familiar faces on the screen. I figured if I could get them to talk to friends via the video link they would quickly overcome any reservations they might have about the technology.\n\n\"Besides,\" I added, \"if, as I suspect, there is going to be a party afterwards you and Marge can port over and join us.\"\n\n\"Now there is a thought,\" said Bruce, with a broad grin.\n\nI went back to my cabin feeling restless and uneasy. I had not been inside more than ten minutes when Marge turned up. She complained about feeling jittery without knowing why. We were comparing notes when Kia staggered into the room, obviously in shock. Marge put some Cognac into a bowl and put it in front of the little fawn. Kia slurped the lot.\n\n\"Thanks,\" she said after a while, \"I needed that. I feel better now.\"\n\n\"What happened, did someone hurt you?\" Marge was cuddling the little thing; she was more upset now than Kia.\n\n\"No, no one hurt me. I just saw something that really rattled me.\"\n\n\"Can you talk about it?\"\n\n\"Just as soon as you give me some more of this fine old French Cognac.\"\n\nMarge giggled and put some more in Kia's bowl. It didn't last long.\n\n\"As you know, my intention was to speak to the controllers of the Fates,\" she explained. \"I went to see Lachesis, but kept myself invisible. She didn't know I was there. I could see in her thoughts that they were about to go and get their orders for the day so I didn't ferret around any more in her mind and decided to follow them instead.\n\n\"They went into an enormous cave. It wasn't natural, it had been built a long time ago. At the far end there were twelve huge statues, at least thirty feet tall, of hominid creatures, but with facial features like insects. The statues spoke to the Fates, giving them their orders.\n\n\"It felt odd. I could not see the thoughts behind the orders, as I normally do. It appeared as if the orders were coming from something other than a living being. I hung around after the Fates left and made a monumental discovery. The controllers of the Fates, the overlords of Earth and Olympus ... are machines! \n\n\"Somehow this discovery rattled me to the core. I had real difficulties getting back here. I thought I was going to die.\"\n\n\"I think you ran into a defensive mechanism that was meant to kill you,\" I said. \"What saved you is that you come from a different universe and that your make up is something they hadn't encountered before. That's why you only got sick.\"\n\n\"That makes sense,\" said Kia.\n\n\"Do you think it's Endora who is doing this?\" \n\n\"It is possible, I guess,\" said Kia, \"but I doubt it. It didn't feel like Endora to me. I think I would have spotted it if it had been her.\"\n\n\"What will you do now?\" Marge was worried.\n\n\"I shall go to what you call the Deer Planet for a rest until I am completely fit again. I shall be safe and welcome there.\" With that she disappeared.\n\n\"We should tell the others about this,\" said Marge.\n\n\"And how do you propose to do this without breaking your promise to Kia?\"\n\n\"Oops, shit. You are right, we have to keep this to ourselves. On second thought, we could discuss it with the Fairies. They know all about Kia. We would not be breaking any confidence.\"\n\n\"No. Leave the Fates out of this for now. Kia has a plan. Let's see what she comes up with first.\"\n\n\"How do you make that out?\"\n\n\"She would have been safe and welcome here. She went to the Deer Planet for reasons of her own.\"\n\n\"You can't blame her for wanting to be with her own kind when she is not feeling well.\"\n\n\"They are not her own kind. Distant cousins perhaps, no more. She told me so. These creatures live on a planet where they have food and shelter in abundance and no natural enemies. Their only pursuit apart from day to day living is philosophy. A planet full of thinkers. Kia will tell them about her problem and see what they can come up with. That's my guess anyway.\"\n\n\"What are we going to do now then?\"\n\n\"How about you make us some lunch. I don't feel like Bruce's food. Something Italian, maybe. After that I will have a look at where Darrin is at with the conferencing gear and you can start cooking for tonight's party.\"\n\n\"Spaghetti Bolognese with a bottle of Chianti maybe?\"\n\n\"Perfect.\"\n\nWe had our meal and I went to see Darrin. The boys were already installing the terminal in the conference room. Betty was there. She seemed happy with the set up. I was surprised at Darrin. He couldn't do enough for Betty, he actually smiled when he was talking to her. When I asked her later what had brought about this transformation she said: \"It's amazing what a little dickrub will do to the grouchiest of men.\"\n\nI figured Betty would have no trouble integrating into our little group here. \n\nThere was nothing for me to do so I went back home. Marge was busy in the kitchen. She had the window wide open. There on the sill was a ringtail possum sitting on its haunches, munching on an enormous strawberry.\n\n\"Where did this thing come from?\" I asked.\n\n\"He comes from our place. Bruce loves possums, he always has a little colony of them around. His name is Didi.\"\n\nI stuck my hand out and stroked his fur. \"G'day Didi,\" I said, \"you are welcome here.\"\n\nHe put his strawberry down, hopped on my shoulder and gave my earlobe a lick. Then he hopped back to his strawberry and continued munching.\n\n\"He likes you,\" said Marge. \"He'll visit you often from now on. He's a friendly little fellow. And now grab yourself a beer and sit outside somewhere. You are under my feet.\"\n\nI did as I was asked and sat on the veranda. I had not been there long when Frank turned up. I was at a loss for conversation, I couldn't very well tell him I was looking forward to fucking his wife. I got him a beer instead. Didi hopped on my shoulder when I went to the fridge to get the drinks and stayed there.\n\nFrank was delighted when I introduced him to the little animal. In no time at all Didi was sitting on his shoulder licking his earlobe. Didi's stamp of approval. The little fellow jumped on the table and sniffed on my beer can.\n\n\"I think he wants some,\" said Frank, highly amused by Didi's antics.\n\n\"Who am I to begrudge a fellow Aussie a bit of beer?\" I said, went to the kitchen and returned with a saucer. I poured some beer into it and Didi went nuts. He did a little dance around the saucer and started slurping it with relish. When he had finished he sat on his haunches and burped. Frank was in stitches. Didi went over to him and rubbed his nose on Frank's can.\n\n\"Want a bit more?\" said Frank and poured some more into the saucer.\n\nAgain the little dance routine. This time Didi took it slowly. When he had enough he looked at us, hopped off the table, ran across the grass to the nearest tree, ran up the tree and was soon lost to sight.\n\n\"He'll be back,\" said Frank. \"You'll never get rid of the little bugger now.\"\n\n\"I can think of worse things,\" I said.\n\n\"So can I,\" said Frank.\n\nI was again at a loss to find a subject for conversation. On the spur of the moment I asked him: \"Do you think Endora is unique?\"\n\n\"That is a really difficult question to answer,\" he said after a long pause. \"Endora is the result of a long line of technological development, millennia most likely. That during this time rival civilisations developed similar systems is almost a given. Something as huge and as sophisticated as Endora is unlikely to spring up in isolation. As to whether such competing systems have survived, that is an entirely different kettle of fish.\n\n\"We know Endora has survived, so we know it's possible. There has to be at least a possibility that one or more rivalling systems have survived too.\"\n\n\"Would Endora know of any rivalling systems?\"\n\n\"Without question. She would have had to be aware, at least at the time, of competing developments.\"\n\n\"Would she tell you, if there were?\"\n\n\"I doubt it. I wouldn't ask her anyway at this stage. It might spook her programming and kick other security subroutines in and we would have to start from scratch. We are walking on thin ice as it is. I take it you have reason to believe a rivalling system exists.\"\n\n\"Yes, but I can't tell you much without breaking a confidence I have sworn to uphold. Suffice it to say that I have reason to believe that the controllers of the Fates, and therefore the controllers of Earth and Olympus and God knows what else are machines.\"\n\n\"Actually, that makes sense.\"\n\n\"Whaaaaaat????\"\n\n\"Think about it. The builders of Endora left to a man for shores unknown to us as part of their evolution. They left us their technology as a legacy, albeit with some reservations. Say there was a rivalling system who did pretty much the same, except they had some civilisations they couldn't take with them, because they were still too primitive. One solution would have been to put some machines in charge to at least maintain the status quo. Better than throwing them to the wolves.\"",
        "I considered that for a moment. What Frank was proposing had to be a possibility. While I was still trying to get a grip on what he had just said Betty turned up. \n\n\"No more work today,\" she said. \"Party time.\"\n\nReluctantly Frank and I went inside. Marge had already laid out the table. She had made the same meal she had once made for me before, right at the beginning. Lobster Thermidore with all the trimmings. The moment the meal was over Marge cleaned up with a wave of her hand grabbed Frank and disappeared. I felt awkward. Betty sensed the mood I was in.\n\n\"Feels like incest after all these years as friends,\" she said. \"Come on boy, stick a bit into mum. You know you want to.\"\n\nI had to laugh. It broke the ice. A short time later I was drilling her with the precision of a sewing machine.\n\n\n\n\n\n\nChapter 43:      Machines in charge?\n\n\n\n\nTo my surprise I woke up with Marge at my side. She must have switched position with Betty during the night. It suited me fine. I still felt odd about having screwed Betty.\n\n\"Get out of that silly mood, there is work to be done.\" \n\nMarge was right. I had to pull myself together. We went for breakfast and during the meal I started feeling better. Darrin was ready, the equipment had been loaded into our space vehicle. \n\nVulcan was already at the controls when we got there and a short time later we were on the Blue Planet as Betty had christened it. I thought it quaint to have a planet called after the hair colour of its inhabitants.\n\nThere was the usual commotion. Everyone dropped what they were doing and came to greet us. I gave the headman his by now usual hug amongst much applause. This time he hadn't tried to prostrate himself, he evidently got the message that I didn't like that. He remembered the boys from before and greeted them cordially. I told him what we were here to do and the villagers watched as the boys set up the terminal.\n\nIf I had any reservations about the villagers accepting the technology, they were soon put to rest. They thought it was great fun, especially when Bruce and Marge came on the screen. Bruce introduced them to Betty who was quickly accepted into the fold. Betty showed them some images from our world. The fields, the creeks, the lake with its island and finally Catsville. Judging by the response the villagers loved what they saw. I didn't think we would have any shortage of recruits for our world.\n\nMarge and Bruce turned up and soon food and beer arrived from everywhere. We all had an impromptu picnic in the temple. One of the ladies tugged at my sleeve and said: \"Wanna fucky me again, Johnny?\" Bruce's language pupil once more, by the sound of it. I liked the idea and it was on. Within minutes Alec worship was in full swing. When we all had had enough we took our farewells and departed for home on wobbly knees.\n\n\"Wow,\" said Betty, who had been watching the orgy. \"I have never seen anything like it. They really get into it. And I thought I knew all about swinging.\"\n\n\"Yes, they certainly took up Alec worship with enthusiasm when Bruce suggested it.\"\n\n\"No,\" Betty was adamant, \"this is not a recent thing. These people have been having sex like this for a long time. It is their way. Bruce just gave it an added dimension.\"\n\n\"What makes you say this?\" I was curious how Betty had come to that conclusion.\n\n\"If it was a recent thing,\" she explained, \"there would be some who would take to it with gusto, others would join, but still be a little reserved and yet others would be watching from the sidelines and contemplate whether they wanted to join in or not. Last of all there would be a group who would find the whole thing disgusting and wouldn't have anything to do with it. There was none of that. No, for these people this is the normal way of having sex. I'll have to look into this. Fascinating territory for me.\"\n\n\"You are the anthropologist. You must have your reasons.\" I was still not convinced.\n\n\"You've been there. There were no fights, no arguments. Each person's choice was accepted by the others without problems. This reeks of very formalised behaviour. Rigid rules as to what is acceptable and what is not. Things like this do not spring up over night.\"\n\nI had to admit Betty was on fairly solid ground there. I was glad she was part of the team. Her help would be invaluable. I said as much.\n\n\"Glad to be here,\" she said. \"By the way, if you would like to stick a bit into mum again from time to time, all you have to do is say something.\"\n\nTo my surprise, the thought wasn't anywhere near as awkward as it was yesterday. I kissed her cheek and said I would give it some thought.\n\nMarge was home when I got there.\n\n\"Here,\" she said, \"have some Ambrosia. We need it after that romp.\"\n\n\"I thought that was exclusive to Olympus. Do you want us to go there?\"\n\n\"No need, I fixed that.\" She opened what had once been a broom cupboard to reveal a fair sized room. There were two Roman divans and a low table between them with two goblets.\n\n\"I pinched a bit more space from Olympus. I figured if it would work on Earth it would work here. Voil\u00e0, Ambrosia.\"\n\n\"Isn't that dangerous? The Gods could come here without trouble.\"\n\n\"It wouldn't do them much good, even if they did find out about it. They would still need Endora's permission to cross over into our world. We are quite safe from them. The Gods aren't very clever about such things. They haven't found out about Zeus' shagging room in your house, have they?\"\n\n\"How the fuck do you know about that?\" I was stunned.\n\n\"Logical deduction. I know he is rooting humans. You can tell by how happy he is lately. He doesn't go to Shagger's Paradise and I haven't built anything for him elsewhere. Where else would he go? That's why you guys are as thick as thieves. You are covering for him.\"\n\nThere went my last secret I thought I had from Marge. This chick was dangerous. She had figured out the thing with the Fates, and now this.\n\n\"Tell me Marge, you are smarter than most of the Gods combined, how come you are a lowly Goddess of hen parties in a backwater of your universe?\"\n\n\"For the same reason Bruce likes to be seen as some pisspot drongo. You know by now he's a lot smarter than that. We both decided a long time ago that there was mileage in being underestimated. We have no enemies. The Gods can't be bothered with us.\"\n\n\"How come you have put your guard down where I am concerned then?\"\n\n\"Probably for the same reason Zeus trusts you. You are irreverent, sneaky, obnoxious at times and all the rest, but you are fiercely loyal to your friends. That last thing is a quality rarely found on Olympus.\"\n\nI had my Ambrosia. It went down well. It made me physically fit again.\n\nI told her about Frank's thoughts on the controllers.\n\nMarge's face lit up like a Christmas tree. \"That's it,\" she exclaimed.\n\nShe hexed us another Ambrosia and motioned me to drink mine. For the next ten minutes she just sat there and thought. I did not want to interrupt her. Marge got up, took me by the hand and led me back into our space. She closed the door very carefully. Marge led me out to the veranda, bade me sit down and put some champagne on the table and two glasses.\n\nI did the honours pouring the drinks and lit a cigarette. \"What are we celebrating?\" I asked.\n\nMarge made some funny signs in the air again and seconds later Kia was there. She hexed a bowl, poured some champagne into it and asked Kia to join the celebrations. I could see it in Kia's eyes, she was as clueless as I was. She obviously wasn't snooping right now.\n\nMarge explained to Kia what Frank had been thinking.\n\n\"Frank is right,\" she said, \"there is a rivalling system that controls Olympus and Earth and maybe a lot of other things. Kia stumbled into it. I think it only vaguely perceived her presence and tried to kill her. The system probably thinks it has succeeded. For the time being it's not a good idea for Kia to go back there.\n\n\"Also, they don't know about us and this set-up of ours. It's not part of the model they are using. Lateral thinking is not within their reach. They are machines, remember. I don't think they are aware of Kia even. They just noticed something was trying to stick their nose into their affairs and activated a defence programme. Kia is transparent to them because of what she is. That's why she was able to follow the Fates to their home world.\n\n\"As to the rest of us, we are nobodies. Bruce and I, two Gods in charge of minor events in a backwater, Darrin and Algenon, back room technicians, Gadeirus, a has been who hasn't done anything significant for millennia, Vulcan, a second rate God who is not liked by bis peers and finally Alec, a two bit writer who can't think of something to write. Lil doesn't even rate. Do you get it? All of us are below the radar as far as that system is concerned. That's why we've been able to do what we did. And now we are totally out of their reach because of where we are. That gives us one hell of an advantage.\"\n\n\"What about the Fates?\" Kia was nervous.\n\n\"I thought you said that you can fix that dilemma if the controllers allow it. Just fix it, they won't know. As long as the Fates do their job the system has no reason to check on them. It won't even know the Fates are no longer what they were. Incidentally, what do you have in mind?\"\n\n\"I want to compartmentalise their minds. When they are working they won't remember more of us than that we exist and are their friends. When they are with us they can remember everything. No more qualms about what they are doing. I can do this easily.\"\n\n\"Then do it. When you have done it I would like you to go back to the Deer planet and put everything I've told you to them. Let them have a look if there is anything I've missed.\"\n\n\"I like this,\" said Kia, finished her champagne and dematerialised.\n\n\"A two bit writer who can't think of something to write?\" I was a bit miffed.\n\n\"What else would you call it, Darling? Get over it. Here, have some more champagne.\"\n\nI can't be cross with Marge. I drank my champagne and kept my mouth shut, knowing I couldn't win.\n\n\"Now I need to go to Catsville, I have a few things to do. See you tonight.\" And off she went.\"\n\nIt had been a while since I had a one on one drinking session with Bruce. On the spur of the moment I called him.\n\n\"Fancy a drink or three at my place in Sydney?\" I asked when he turned up.\n\n\"You bet, give us a sec,\" he said and disappeared again.\n\n\"Just had to tell the girls they are on their own tonight,\" he explained when he got back. \"Let's go.\"\n\nBruce had a bag in his hand when we arrived in my backyard. \"Fresh king prawns,\" he said. \"Fancy chilli coconut prawns?\"\n\n\"Now that's a treat,\" I said. \"On a bit of rice perchance?\"\n\n\"No problem.\"\n\nBruce conjured up a bowl, half full of marinade, put the prawns in the marinade and hexed some beer.\n\n\"Doesn't taste the same if I hex the marinade on, it's better if they stay in there for a while,\" he explained.\n\n\"Bruce, can we go to the lunch room in the compound on Olympus please, I've made a mistake.\"\n\n\"Sure,\" he said and we ported.\n\nI instructed Endora to keep any visitors out.\n\n\"What was that all about?\" asked Bruce when we were settled.\n\n\"I forgot how many creatures can listen in in that place. There is that fucking woodpecker for one, and maybe Zeus and Hera and God knows who else.\"\n\n\"Either you are getting paranoid or what you are about to tell me is dynamite.\"\n\n\"No paranoia. What do you think Zeus will do when he finds out he is being controlled by a machine?\"\n\n\"You are joking, of course.\" Bruce looked at me, a puzzled look on his face. \"You are not joking, are you?\" he decided after a pause.\n\n\"I wish I were,\" I said.\n\nI then told him what Frank and Marge had come up with without mentioning Kia.\n\n\"You have a real penchant for pissing in hornets nests. I tell you what Zeus will do if he finds out. Assuming this is right, he'll kill anyone who knows about this, just like he did when Asclepius did something the machines didn't want. The system will not let him act otherwise. If I were you I would leave this whole can of worms well alone.\"\n\n\"But we can't stand by and watch Earth and Olympus being run by a computer, can we?\"\n\n\"And why not? Do you really think an omnipotent Zeus would do a better job? You have only seen the benevolent side of him. I have seen the other side. You don't want to be around when he or Poseidon let loose, believe me. Frank reckons the builders of this thing didn't want to throw their charges to the wolves. If that is right, the machines are essentially benevolent. They are making sure Zeus and his minions don't get too big for their boots. If you tamper with that you don't know what cataclysm you bring about.\"\n\nThat was certainly an aspect I hadn't considered.\n\n\"And now, seeing that the prawns are ready let's get into them. That other shit can wait.\"\n\nThe meal was delicious. When I got home Marge was already in bed. \n\nHorny as usual.\n\n\n\n\n\nChapter 44:       Preparations for the big event\n\n\n\n\n\nI woke up refreshed and relaxed. Bruce's talk the night before had done much to quieten my inner turmoil.\n\nBreakfast was different this time. For once Bruce wasn't cooking. The girls had taken over.  Two of the girls, one a baker, the other one a chef, had commandeered the kitchen. They had been at it since before dawn, according to Bruce, and had provided us with fresh bread and croissants, jams and creamed cottage cheese in addition to the normal barbequed stuff. They received a standing ovation when they joined us for their meal.\n\nYou could tell Bruce was proud of his girls. It had been his idea and it was working a treat. After the dishes were cleared away one of the girls climbed on the table and announced that as of tomorrow their pussies were going to be useful once more and showed us her neatly trimmed bush as an appetiser. There was roaring applause.\n\nTomorrow the delegation would also arrive, lots to do until then.\n\nGadeirus took me around to show me the arrangements. The accommodation was fitted out with the furniture and implements of their culture. It was a large, three story house adjacent to the pub that would easily house twenty or more natives. It had a native style kitchen, stocked with food from their home planet.\n\nOne section of the pub kitchen had also been fitted out with native paraphernalia and stocked with their food. We were as ready as we would get, I was happy.\n\nMarge turned up and grabbed me by the arm. \"Come,\" she said, \"let me show you the nookie room.\"\n\nGadeirus grinned, evidently he knew already what that was about. There was a new staircase in the foyer of the pub leading into a basement. When I saw what was down there I nearly had a fit. Marge had created a scaled down version of my temple underneath the pub, complete with the moss cover that made such a beautiful mattress and the neat gravel paths.\n\n\"I thought I told you I didn't want a temple here.\" I was more than miffed.\n\n\"That's why I call it a nookie room. The Blueys invited us to their party, they expect us to invite them to ours. Where do you want to screw? On the veranda?\"\n\nAs usual Marge was right. If, as Betty suspected, communal sex was the only sex the natives engaged in, a place like this was mandatory. I wondered where the name Blueys had come from, probably Betty. It was as good a name as any, in fact it was very good, it had an affectionate ring to it.\n\nBack upstairs Betty was talking to the Blueys via her video link. There were a number of natives in front of their set and from the screeching, laughing and general carrying on I figured they were having a lot of fun. I left them to it.\n\nLunch was a sensation. Beef consomme with small flour dumplings, steak and kidney stew with mashed potatoes and green beans, apple pie with whipped cream for afters. It met with universal approval. Bruce doesn't like cooking stuff like this, but he certainly got into it with enthusiasm when he was served with it. Marge congratulated the girls on their skill. High praise indeed, coming from her.\n\nAfter the meal Betty told me she wanted to address everyone before the delegation arrived to inform them of some Bluey customs and taboos they ought to know. We decided that right after the evening meal would be a good time.\n\nI went to see Lil at Shagger's to tell her about Betty's briefing and that I wanted her to attend. She promised she would be there.\n\nAfter that I went to my cabin and sat on the veranda with a beer. The little possum must have been sitting in a tree waiting for me. I had hardly sat down when he rushed over to me, climbed on my shoulder and started nibbling my earlobe. I had a fair idea what he was after.\n\nHe stayed on my shoulder as I went to the fridge to get a banana for him. I peeled it and cut it into bite size pieces put it on a saucer and got another saucer for his beer. The little shit went nuts on my shoulder, hopping around and licking my neck. I went back to the table, put the stuff down and poured him a beer. He hopped down and did his little war dance again before he got into the food and the beer.\n\nIt was hard to miss. Didi was happy.\n\nI gave him some more beer when he had finished his and again he drunk only some of it. I was playing with him and giving him some pats when Bruce and Lil arrived. He jumped up and greeted both of them in his usual exuberant fashion.\n\n\"Didi is a good fellow to have around,\" said Bruce. \"You can let him in the house, he won't break anything and he'll do his business outside. He is very smart too. I got the little bugger pissed once. He didn't like it and since then he stops when he reckons he's had enough.\"\n\n\"I've noticed that. He does like his beer though.\"\n\n\"What else did you think? He's an Aussie, isn't he?\" Bruce laughed.\n\n\"There is that,\" I had to admit.\n\n\"Anyway, time to go to the pub. I wonder what the girls have cooked for tonight.\" Bruce seemed to enjoy someone else cooking for once.\n\nDidi hopped off the table and disappeared up a tree when we rose. We walked for a change. It was pleasant.\n\nThis time the girls had set up a buffet rather than serving food at the table. Mexican night. Tacos, chilli con carne, enchiladas, nachos, tortillas; that sort of thing. Colourful jugs with sangria stood on the table. It met with approval.\n\nAfter the meal Betty asked us into the conference room. She was in her lecturing mode, she had even set up a lectern. Her only departure from tradition was the ice bucket with the champagne and a flute glass instead of the usual pitcher with water.\n\nAlways the gentleman, Bruce got up, popped the cork and filled her glass. He then made the rounds and hexed everybody whatever drink they wanted. Once everyone was settled Betty started her lecture.\n\n\"Tomorrow we have guests from an alien culture. Setting aside the differences in skin and hair colour and the shape of their ears they look and function pretty much like us. There are some major differences you need to know about if we are to get along in harmony.\n\n\"These people live a simple life. That does not make them primitives, far from it. It is their choice. Violence and greed are unknown to them. Panacea tells me the Ancients viewed violence and greed as diseases, a leftover from more primitive beginnings, and had developed a cure for it. It is highly probable they had treated these people a long time back and eradicated these diseases from their planet.\n\n\"As a result their society developed in ways that are unknown in our world. There is no competition amongst these people. Everyone just does the best they can to contribute to the tribe. Tribe is defined as whoever is there at the time. This is important. This means that whoever is with them has the same obligations and privileges as everyone else. \n\n\"I have told their elders that we did not know the ways of their tribe and were likely to offend at some time or other. They just laughed and said that their children did not know their ways either and had to be taught. They will tell us when we are out of line. As long as we understand that their ways are sacred to them and try the best we can there shouldn't be a problem. All this will sort itself out in time.",
        "\"One thing you need to know right now. There is no such thing as marriage or parents in their society. Genitals are more or less viewed as communal property of which the individual person is little more than a caretaker. Genitals are there to please each other and to create offspring for the tribe. As far as I've been able to determine sex is a communal affair. So don't try to sneak off with one of them for a one on one quickie. Let them take the lead for now.\n\n\"Children are also communal property. If a child needs something whoever is closest is expected to take care of it. You will see some kids serve food and drinks during communal sex. They are naked to show they are pre-pubescent and taboo. Do not touch them when they are naked. It is best for now to let them do their job and do no more than thank them when they do something for you. At other times, treat them as if they were kids in your own society.\n\n\"There is a lot more to learn, but if you keep to these guidelines for now everything should go well. Any questions?\"\n\nThe one thing most of them wanted to know was if the sexual restrictions applied to everyone from now on.\n\n\"No,\" said Betty. \"You guys can carry on with each other the way you always have, just keep it out of their sight for the time being.\"\n\nI felt like some coffee so Lil and I went into the pub. \n\n\"Would you like a slice of cake with it?\" asked the serving girl after we sat down on one of the tables.\n\n\"What kind of cake?\" I asked.\n\n\"Maggie has made some Sachertorte.\"\n\n\"What's a Sachertorte?\" asked Lil.\n\n\"A world famous Viennese speciality. Brace yourself for a culinary experience, girl.\" I said and ordered two slices and two Vienna coffee.\n\n\"Coming right up,\" said the girl and went into the kitchen.\n\nThe coffee and the Torte were delicious. I asked to speak to Maggie.\n\n\"Where did you learn to bake like this?\" I asked when she came to our table. \"I have had it in the Hotel Sacher in Vienna. Yours is every inch as good as the original.\"\n\n\"Depending on when you were there I probably made it for you. I worked there for fifteen years.\"\n\n\"Wonderful,\" I said. \"We must talk about Vienna some other time. You are still busy I take it.\"\n\n\"Yes,\" she said. \"My baking seems to be popular.\" I thanked her for her effort and she went back to the kitchen. \n\nThis place of ours seemed to be shaping up better than Olympus. I wondered where they got all the ingredients from. I said as much to Lil.\n\nLil laughed. \"When Maggie and the chef, Ginette, asked for some stuff Bruce had them make up a big wish list. Vulcan grabbed one of the freighters and the two went shopping. Right now there is a very pissed off Columbian druglord wondering where all his goodies went, especially since this part of his business is legit. He can't even claim it on insurance. His reputation would be gone if people found out that he had been taken for millions of dollars worth of gear.\"\n\n\"They took that much?\"\n\n\"Sure. They cleaned out four warehouses of the most exclusive foodstuffs, wines and liquors there are.\"\n\n\"Where is the stuff now?\"\n\n\"Still in the freighter, parked in its usual spot. It's climate controlled. Just to make sure nothing spoils Bruce put a hex on it as well. We don't need the freighter for anything else, we have heaps of these things. Why move the stuff?\"\n\n\"When did they do this?\" I was a bit miffed because Bruce hadn't told me.\n\n\"Last night.\" That explained it. There hadn't been a chance to tell me.\n\nBruce was sitting out on the veranda with Vulcan. I went over to them. Lil followed me. They waved us to sit down, which we did. Bruce hexed us both a drink, force of habit I guess.\n\n\"Lil just told me about your shopping spree,\" I said.\n\n\"Yeah,\" said Bruce, \"that went well.\"\n\n\"Perhaps not so well for the people who worked there. What do you think the bosses are going to do to them. They'll be suspected of being in on it.\"\n\n\"They are going to be alright,\" said Bruce. \"Vulcan took care of that. That was the best part of our trip, sheer artistry.\"\n\n\"What did he do?\"\n\n\"You know how superstitious these arseholes are. Vulcan put black magic sigils all over the walls. Then in the centre of the now empty warehouses he put a magic circle. Inside the magic circle he erected a ten foot statue of Satan, complete with horns and tail, made of shit. When they see and smell this they'll be too scared to move. Those warehouses will get locked up. No one will go near them for years to come.\"\n\n\"Nice touch,\" I said when I stopped laughing.\n\nLil tugged on my sleeve. \"Time to go home, Master,\" she said. \"I could do with a grease and oil change.\"\n\n\"Go on,\" said Bruce, \"give her a lube job.\"\n\nHalf an hour later I had her screaming again.\n\n\n\n\n\n\nChapter 45:      The Delegation\n\n\n\n\n\nThe girls had set up a buffet for breakfast. It was much better this way. It allowed everyone to take what they wanted. I picked a cooked breakfast, Lil took some croissants and some fruit. Over breakfast she told me she was going to spend much of the day at Shagger's to make sure things were running well there. She would be back for the party though.\n\nVulcan told me he was going to use a different vehicle this time. He thought the luxurious appointment of the craft we normally used might be a bit overwhelming for our guests. He had Darrin install some cameras and a transmitter so their people at home could follow our journey. \n\nGinette was panicking. \"What am I going to cook?\" she complained, \"I have no idea what they can eat and what they like.\" \n\n\"Zeus created a mountain of food for them when he was there. Our type of food. They seemed to like it well enough. Perhaps make some stew, a lot of vegetables, root vegetables especially, and some different types of bread, they like their bread. Make it spicy. They like strong flavours.\"\n\n\"Hungarian goulash with a bit of extra chilli perhaps?\"\n\n\"They'll love it.\"\n\nGinette went back to her kitchen, much happier than before. Marge turned up, we were ready to go.\n\nVulcan spoke up: \"Let's wear uniforms for the trip.\"\n\n\"What on Earth for?\"\n\n\"Think about it. When we went there to visit we always wore our best chitons. This time we are working. We change into the chitons for the party tonight. You don't go in your working clothes to a party, do you?\"\n\n\"Good idea,\" said Marge and hexed us into our Star Trek uniforms. Apparently I had no say so in the matter. Gadeirus had issued everyone with a translator earlier. We were ready to go.\n\nIf they were surprised to see us in uniform they didn't show it. Everybody had turned up to see their delegation off. Before we boarded the craft Bruce addressed the crowd and told them they could follow our journey on the big screen. The applause was deafening. Vulcan had picked the right craft. They had a lot of luggage. It nearly filled our cargo area. \n\nWhen our guests were seated I instructed Vulcan to take us into a low orbit. I wanted to show the Blueys their world. Vulcan took the controls and Bruce took his place in the co pilot seat. The moment we had lifted off Bruce began his running commentary, explaining to our guests and the villagers at home what they were seeing. They were overawed.\n\nWe did one complete orbit and then headed for open space. When the old man saw the stars so clearly and so seemingly close he started to cry. I asked him what was wrong. He said he felt very privileged to see something as beautiful as this in his old age. Vulcan ported; the craft was now within visual distance from our world. Bruce showed them where we were heading and as the space station came closer he pointed out that this was our destiny.\n\nEndora had switched all the lights on again. Bruce explained that we did not live on the surface as they did, that our world was more like a big hut. Vulcan again did a complete orbit before docking the craft. After having passed the airlock Vulcan manoeuvred the vehicle on to the promenade in front of the Horny Tom.\n\nBruce and Marge ushered our guests to the the pub terrace, where everyone was waiting to greet them. Vulcan hexed their luggage into their accommodation and went to park the craft in it's proper hangar. I joined the others. Someone had extended the banquet table. There was room for everyone. \n\nThe girls served beer and savoury snacks to the adults and gave cranberry juice and cookies to the kids. After they had their refreshments Marge took them to the building where they were to live and showed them where Vulcan had stored their luggage. She showed them the rooms, the kitchen and the bathrooms and told them the house was theirs for the time being and they were free to make their own arrangements.\n\nThe kids were the first ones out. They made straight for the lake, stripped off and jumped in the water.  I wasn't sure if the kids were good swimmers so I went down to the water's edge to make sure they wouldn't get into trouble. I needn't have worried. Those kids could give a fish swimming lessons. \n\nPanacea had come down as well, perhaps thinking the same. I asked her to conjure up a beach ball. We stripped off and joined the kids in the water, tossing the beach ball over to them as we did so. I doubted they had ever seen a beach ball before. They soon got the idea. An hour later they were exhausted and called it quits. One of the girls tried to give the beach ball back to me. I explained it was theirs to keep and have fun with. She hugged me and kissed my cheek before running back to her mates holding the beach ball high above her head as if she was carrying a trophy.\n\nMaggie had known the kids would be hungry after all this chasing around. She handed them a big platter with scones, creamed cottage cheese, cream and jam, as well as a bowl of mixed berries. The kids were ecstatic. They hugged and kissed her, much to Maggie's embarrassment. Her cooking had just given her some young worshippers. Maggie went back to the kitchen wiping tears from her eyes.\n\nThe kids were happy. It was a good omen.\n\nRather than have a full meal before the banquet tonight Ginette had made sandwiches for everybody and served them with pickles, chutney and mustard. They would go well with the beer.\n\nThe natives evidently had never seen sandwiches before. Nevertheless they bravely got into them, albeit with a bit of apprehension. After a few bites they started chattering about this wonderful dish and how they all tasted differently from each other. Their women were giggling and opening them up, examining the different fillings and tasting bits, like little kids do. There was no doubt they liked the new experience. There was little left when everyone had had enough.\n\nThe crowd dispersed after the meal, presumably to have a rest and get showered and changed for later. I went to the kitchen to thank the girls for the lovely job they were doing. I was surprised to find the four Bluey women in there busily chatting to our girls, looking into pots and examining ingredients.\n\nI had trouble telling them apart. Blue hair pointy ears and golden skin are such strong features. It makes them all look alike unless one looks closely. It would take some time getting used to. Nevertheless, I thought I recognised one of them. It wasn't until sometime later when she rubbed my shoulder and said: \"You gonna fucky me again, Johnny?\" that I knew for certain who she was.\n\nUsing my translator I asked her how she had managed to join the delegation.\n\n\"I told the headman he had to take me, because I am the only one who can speak English. I did not tell him I only know a few words about fucking.\"\n\nEvidently Bluey society also had its share of scheming women. I told her such initiative deserved a root at least. She smiled, kissed me and gave my dick a rub. \n\n\"Fucky you later,\" she said and left. I wondered what else Bruce had taught her. I also wondered if Betty would approve. I decided not to put it to the test.\n\nWhen I got home Bruce, Betty and Marge were already there having a drink on my veranda.\n\n\"This is going better that I thought,\" said Betty. \"I have never seen a more lovable race. They will fit in very well with your vision for this place. When you first told me how you envisaged the society you want to build I had reservations. I no longer have any. These people are already doing it and it's working. We have much to learn from them.\"\n\n\"Before I forget,\" I interrupted, \"Marge, can you please see to it that Frank, Betty, Walter, Geoff and the new girls have suitable chitons to wear for tonight. Get Panacea and Iaso to give you a hand. Help them get dressed, if need be. Let's all turn up in finery to suit the occasion.\"\n\n\"You've got it, Buster, and then let's party!\" Marge grinned from ear to ear.\n\n\"Alright, let's break it up then. You Gods have it easy, we humans have to shower, do our hair, get shaved and dressed before we are presentable. You guys only have to wave your hand.\"\n\n\"Oh you poor sausage,\" said Marge. \"I have to ask Zeus to give you some more powers if it's such a drag.\"\n\nThe meeting broke up amongst laughter and I went inside to get ready.\n\nAn hour later, dressed in Hermes' finery, I was back at the Horny Tom to check on last minute preparations,. The girls had set the banquet up as a buffet again. They had added a variety of hot and cold seafood as well as a selection of cold meats and salads. It looked scrumptious.\n\n\"This way everybody can pick what they want,\" said Ginette. \"Besides, it gives us a chance to get changed.\"\n\nShortly thereafter everybody arrived. Betty got up and made a short speech welcoming our guests and then it was food time. \n\nI had expected our visitors to sit together as a group, at least to start with. They surprised me again by mixing freely with our mob. The kids predictably sat with Ginette and Maggie. Equally predictable Miss Sucky-Sucky sat next to me. Staking out her territory, the little bitch. Our cutlery was a bit of a challenge for them. They knew spoons and knives but our forks were something new. They saw straight away the usefulness of such an implement and quickly mastered its use.\n\nI marvelled at their ability to accept new things. Like kids they saw everything as an adventure and a challenge. The highlight of the meal was when Ginette showed them how to shell and eat prawns. They had a lot of fun with that one, especially the kids..\n\nThe banquet was an unqualified success. After the meal Marge cleaned up with a wave of her hand to save the girls the trouble. The Bluey girls had never seen anything like it and wanted to know if Marge could teach them how to do this. They were disappointed when Marge told them it wasn't something one could learn and that it required a rare talent one had to be born with.\n\nAfter a few more drinks Betty and the headman led the group to Marge's nookie room.\n\nMiss Sucky-Sucky never let go of my arm. She would not let go of me until the party was over, hanging on to me in between trysts, kissing me and whispering in my ear \"I love fucky you, Johnny.\" I didn't mind it one bit. She was sweet, gentle and loving. A perfect finish for the day.\n\nEventually the party came to an end. She went home with her people, I went home on my own, feeling happy and relaxed. It didn't take me long to go to sleep.\n\n\n\n\n\n\nChapter 46:      Suki\n\n\n\n\nI didn't go to the communal breakfast and made myself some coffee instead. After that heavy night last night I felt I needed a bit of a break. I had dreamt of the Bluey woman I had spent the evening with. In my dream I had called her Suki, after an old Indian flame of mine. It wasn't until later that I realised my subconscious had played a trick on me and had picked the closest name to Miss Sucky-Sucky. It didn't matter, she was going to be Suki from now on. \n\nI was still thinking about her when Marge turned up with Suki and the four kids in tow.\n\n\"They were hanging around the kitchen and getting under Ginette's feet,\" she explained. \"I'm going to show them the waterfall and give poor Ginette a break.\"\n\nMarge departed and soon after I heard excited squeals coming from the direction of the waterfall. Someone was having fun. After a while Suki came back on her own, soaking wet. She stripped her clothes off, hung them over a bush to dry and sat down next to me. I felt awkward. I didn't know how the Blueys would react seeing one of their own next to me naked outside the communal sex ritual.\n\n\"Come with me, Suki. Let's get some clothes on you before someone sees you like that.\"\n\n\"Why do you call me Suki?\"\n\n\"In the world where I was born there are many languages. In the Hindi language Suki means Someone who is happy, in Filipino Tagalog it means Regular customer. I thought both meanings suited you nicely.\" I didn't tell her that in Polish it means Bitch.\n\nShe liked the regular customer bit. I took her by the hand and dragged her off to my bedroom. Her eyes got big when she saw the bed, however, when I gave her a tee shirt and some shorts to put on there was disappointment in her eyes. I think she had expected me to screw her. The disappointment didn't last long. When she saw herself in the full length mirror wearing my gear she was all happy again. I gave her a pair of my thongs to complete the picture. She strutted around like a peacock in front of the mirror, giggling like a little girl. When she had enough we went outside again. I offered her some coffee, but she pulled a face and asked if she could have some beer.\n\nI cleared the table and went to get us some beer. I should have known. The moment I put the beer on the table there was movement in the trees and seconds later Didi was sitting on my shoulder licking my earlobe. It was obvious what he was after. Suki stared at him in amazement.\n\n\"His name is Didi, he is a friend,\" I explained. \"He likes beer.\"\n\nSuki reached out to Didi and he hopped on her shoulder, totally confused by now, as he couldn't find an earlobe on Suki's pointed ears. He wasn't fazed for long and licked her neck instead. Suki was delighted.\n\nI went to get a saucer and poured him his beer. Didi did his little dance again, much to Suki's amusement and began slurping. After he had had his second lot he disappeared again into the trees.\n\nBy that time our beer was finished and I went to the kitchen to get some more. When I put the can in front of Suki she grabbed my hand and stuck it into her shorts, trying to push my fingers into her twat. She was wet. Heeding Betty's warning and in the interest of interplanetary relations I pulled my hand back, even though my dick was bouncing around in my pants like a blue arsed fly trapped in a bottle.\n\n\"You no wanna fucky me, Johnny?\" Suki looked hurt.\n\n\"Look, Darling. First of all, my name is Alec and not Johnny. Next, I know what you are trying to do, you little shit. You are trying to seduce me and as far as my dick is concerned you are succeeding. Fortunately I still have some measure of control over the fucking thing. I know seduction is not part of your culture. You are trying it on because you want something. So what is it you want?\"\n\n\"I am your Suki, you are my Johnny, end of story. Seduction is not foreign to us. Every woman knows men want pussy more often than women want cock. I asked Marge, she says in your world it's the same. Women use that fact to get what they want, in your world and in mine.\" Suki looked at me defiantly, daring me to contradict her.\n\n\"Alright, tell me what you are after.\"\n\n\"This is a beautiful world, filled with wondrous things. I want to bring these things to my people. I want to learn your language, your technology your way to love. If that is wrong, send me back.\"\n\nI looked at Suki with new eyes. This chick was the Bluey equivalent of Marge. They were, as Bruce had so colourfully put it like pips in a fucking watermelon.\n\n\"If that's what you are after, I'll gladly help you in any way I can. You don't have to seduce me to get that.\"",
        "\"No, but I want to,\" she said and then continued in English: \"I love fucky you, Johnny.\"\n\nThere is only so much a man can take. I was no longer concerned about interplanetary conventions or Betty's warnings, all I wanted was to dip my wick. I grabbed Suki and ported us to my place in Sydney. \n\nSuki became aware of her surroundings after her second orgasm. Completely ignoring me and my dick, she probed the satin sheets, wondered at the gilt framed mirrors, the velvet curtains, the silk and the marble clad bathroom. Her delights knew no end when I put her into the Jacuzzi and joined her. I served one of Marge's exceptional vintage champagnes and she went completely nuts, declaring she had finally found heaven.\n\nWe were in the middle of a nookie when Marge turned up. Not one to miss out on sex when it was going, she was stripped and in the Jacuzzi sucking Suki's tit before I could express surprise. Suki, not to be outdone was fiddling with Marge's clit while I was still pumping away. It wasn't any of my doing, but all three of us came at the same time amongst much screeching and moaning.\n\nI asked Marge how she had found us.\n\n\"When I didn't see either of you at lunch I had a hunch what you were up to. This was the natural place to look. I think I was the only one who noticed, but we should go back before it becomes an issue.\"\n\nWe all agreed that was wise and a short time later we sat on the veranda of my cabin dressed and proper like good little girls and boys who hadn't been up to anything.\n\nRemembering what I had promised Suki I called Iaso and Panacea via Endora. When we were all seated with some more of Marge's vintage champagne I explained what Suki had asked for. \n\n\"I've asked you two because I think you can do each other some good. I want to start a database on Bluey anatomy and physiology, she can help you with that and in return you guys can teach her some English. Say two hours a day?\"\n\n\"That's no problem,\" said Iaso, grinning from ear to ear. \"I want to do some research on Bluey orgasms anyway.\"\n\nThey laughed, finished their champagne and whisked Suki off to the medical unit.\n\n\"I take it you are grooming her for something?\" Marge was looking at me, twisting her rock hard nipples through her tee shirt with a faraway look in her eyes.\n\n\"What are you playing with your tits for?\"\n\n\"You know one orgasm isn't enough for me. I am fucking horny, that's what for.\"\n\nKnowing I wouldn't get a straight answer from her when she's like that, I dragged her into the bedroom and fucked her a couple of times after having some of Marge's ambrosia. Better than Viagra, that stuff.\n\n\"That's better, Stud,\" she said when we were through. \"So, what are you going to do with Suki, apart from humping her?\"\n\nI told Marge what Suki had said she wanted to do.\n\n\"I think she would make a magnificent ambassador for her people and a great liaison officer between us and the Blueys,\" I said, \"She likes this place and she wants to learn. My feeling is she'll get us all the immigrants we want.\n\n\"She certainly is a cut above all the others we've seen, male or female. I don't think you could do much better. I'll spend a bit of time with her, take her to a few places, have her talk to a few people. Perhaps you should introduce her to Hermes.\"\n\n\"Hermes? Why?\"\n\n\"Hermes is the messenger of the Gods. What he doesn't know about diplomacy and how to get a message across hasn't been invented yet. He would be an excellent mentor for her.\"\n\n\"Why would he teach her?\"\n\n\"Hermes likes you a lot. He is also very very partial to a bit of pussy. Give him to me and Suki for a few hours and  ... You know what I mean. You should have him around here anyway. Give him access. He would like that.\"\n\n\"I might as well open the door to all of Olympus, if I do that.\" I didn't like that idea one bit.\n\n\"Are you nuts? Hermes is the soul of discretion. He will never betray a confidence or abuse a privilege. That's why he is the messenger of the Gods. They can trust him with any secret.\"\n\nOf course, that had to be right. \n\n\"What do you suggest?\"\n\n\"Invite him to one of our banquets. We'll drag him off to the nookie room afterwards and take it from there.\"\n\n\"When do you want to do this?\"\n\n\"Give me a few days with Suki first. I need to have her prepared. I'll tell you when we are sweet to go.\"\n\n\"Alright. What are we going to do now?\"\n\n\"I am going to cook you something, then I'll give you some more Ambrosia and after that we'll exercise Willie a little.\"\n\n\"Aren't we going to have supper with the others?\"\n\n\"No, I want you away from Suki for a couple of days. How about I make you a nice Greek Moussaka? I know where there is some superb Retsina that would go with it very well. Simple fare for once, nothing fancy.\"\n\nThe evening went as planned.\n\n\n\n\n\nChapter 47:       Zeus goes incognito\n\n\n\nNothing much happened over the next few days. The visitors were amazing. After only one day they sent their headman to Betty to ask if they could have some work. Betty explained that they were guests and were not expected to work while they were here. The headman replied that while his people were with us we were their tribe. They would feel bad if they weren't allowed to contribute to the welfare of the tribe.\n\nWithin a couple of days one of the fellows was helping Vulcan in the forge, two of the women and one little girl were in the kitchen cooking native dishes, which were well received. One of the women and three guys were creating a garden on that block where Betty had the farmhouse built and the rest of the kids were out with Bruce fishing. Suki was being trained by Marge and the medicos and the headman was busy helping Betty with her research. There was a lot of laughing, screeching and carrying on. They were happy.\n\nExcept for the headman, all were wearing tee shirts and shorts by now, courtesy of Marge. Panacea and Iaso had completed mapping the anatomy of the Blueys and had calibrated their machines. We would be able to treat and cure any of them if they got sick. It was a weight off my mind.\n\nAfter about a week Marge declared it was time to invite Hermes. Marge's ploy worked. He was instantly captivated by Suki's charms and promised to teach her the art of diplomacy. He couldn't thank me enough for giving him access to our world and promised to visit often.\n\nThere wasn't much for me to do. For a chance to get away from things and to have a good uninterrupted think I went to the primordial planet with a packed picnic basket and some beer. I hadn't been there for a while. Zeus must have been busy, because the first thing I noticed was a Gazebo with benches around a table, all made from marble. Strangely enough it really fit into the landscape. It provided some much needed shade.  With the two suns overhead it can get uncomfortably hot on this ledge.\n\nI was still looking through the goodies that Ginette had packed for me when I felt a wet tongue on my leg. It was Kia. \n\n\"What are you doing here?\" I said when I gave her her scratchies.\n\n\"I'm here with Zeus.\"\n\n\"Where is he then?\"\n\n\"Out there with his friend the dragon. He'll be back soon.\"\n\nSure enough, a while later two dragons landed on the ledge. One of the dragons morphed into Zeus shortly after landing. I went over to greet them.\n\nThe dragon didn't stay long and took off into the wild blue yonder again. Zeus went back with me to the Gazebo. I handed him a beer and invited him to a snack.\n\n\"Have you given it some thought what you are going to do with this world?\" I asked when the pleasantries were over.\n\n\"I wanted to talk to you about that. Now is a good time and this is a good place for it.\"\n\n\"The supreme Lord of the universe wants to know what I think? I am stunned.\"\n\n\"Don't be so modest. You may not be a God yet, but right now you are Lord of more universes than I am.\"\n\nI looked at Zeus trying to see if there was any sign of sarcasm, jealousy or anger. There didn't seem to be any.\n\n\"Sorry to contradict you, Chief. You've got it all wrong. I may have access to more worlds than you have right now, but I am not Lord of anything. I don't want to be Lord of anything.\"\n\n\"But you are in control. Hera told me what you are doing. She tells me you are the unquestioned leader of an emerging world.\"\n\n\"Perhaps the main difference between your world and mine is that the people and the Gods who live in my world like my vision of a society. They do not quite believe that it can be done, nevertheless they are working their arses off to try to bring it about. There is no hierarchy. The project determines what needs to be done, not me. I am just a contributor like everyone else. What do you think your Gods would do to me if I started bossing them around? But, enough of that, what did you want to talk to me about?\"\n\n\"If you were me, what would you do with this world?\"\n\n\"Look, Chief, How can a mere mortal put himself into the shoes of the supreme Lord of the universe? I can see one thing though. You are enjoying this world as it is, I saw you with the dragon, you were happy and carefree for once. I also saw grumpy old Hades relax and enjoy himself when he was here. Even Poseidon and the girls loved it. Would you still have that if you allowed your Gods to fuck around with this place?\"\n\n\"What are you saying?\"\n\n\"I guess I am trying to say that it would be a shame to destroy what could be a haven for you and those you trust and love. Build a place where you can go and be away from the pressures of Earth and Olympus. Only allow others in here on condition they let this world develop at its own pace without interference.\"\n\n\"I can see why the Fates support you. If someone had told me that one day I would take the advice of a human I would have destroyed them. But your counsel is wise, it shall be as you say.\"\n\nKia rubbed her head against my leg. I scratched her behind the ears. She told me telepathically: He means what he says, you can trust him. You should invite him to your world and show him what you are doing. He would like that and he'll not interfere. \n\nI thanked Kia and said to Zeus: \"Once a week we have a special banquet at my place with a lovely orgy at the end of it. The next one is in two days. Would you like to come and have a bit of fun with us?\"\n\n\"I would like that very much. I would rather go there incognito though. Perhaps in the guise of a human, say an old school friend of yours?\"\n\n\"Perfect.\"\n\nWe arranged to meet here and go to the party together. I gave Kia some more scratchies and took my leave.\n\nWhen I arrived back home Marge was sitting on the veranda playing with Didi. I sat down and Didi immediately took the opportunity to jump on my shoulder and nibble on my ear. I knew what he was after. \n\nI went into the kitchen, got a saucer and filled a small bowl with Kia's cherries. As usual he went nuts on my shoulder. For a second there I thought he would fall off, but he was smarter than that. He loved the cherries. It was obvious he knew what they were because he spat the pips in his paw and put them into the bowl. Someone had clearly taught him how to do that. Only after he finished his cherries did he get into the beer.\n\nHaving settled Didi down I asked Marge why she had come to see me.\n\n\"I've been looking all over for you. Where have you been? I was getting quite worried.\"\n\n\"I paid a visit to the dinosaurs and ran into Zeus.\"\n\n\"What did he have to say?\"\n\nI told Marge about our conversation and that I had invited him over.\n\n\"Do you think that's a good idea? There's no telling what he might do once he is here.\"\n\n\"Kia tells me he's on the level, he'll not interfere. She's seen it in his mind. But even without that I don't think for a minute that he'll take position against us.\"\n\n\"He will, if it suits him. Believe me, I know him. You've only seen him for a short time. I've watched him for millennia.\"\n\n\"That was a different Zeus. At the core of him he is a really nice, generous kind of being. I know he can be a real terror, but I suspect he never liked that part of himself. All his life he had to put up with two things that didn't help matters. Hera had given him grief all the time he'd been with her. He had come to hate her with a passion. Then he saw my cream running down Hera's leg and he knew what had happened. Instead of killing her, he saw that Hera no longer had a hold over him and that he was free again. You should have heard him laugh. He actually thanked me for what I had done. Without the daily strife from Hera he began to relax and enjoy his cheerleaders without having to fear repercussions.\n\n\"He was watching me doing big things, even by his standards, without fights and backstabbing, in a spirit of affection and cooperation. Then came the big one. When he and Hera were shaking in their boots in front of Lachesis I kissed her and asked a favour. When that favour was granted Zeus began to see that there was another, more gentle and loving way to get things done. I would enter any bet that his relationship with Lachesis changed for the better from then on.\n\n\"I had shown him how to deal with the two biggest irritations in his life. He's not coming here to cause trouble, he's coming here to learn. He likes our way much better than his old ways, it's in his nature.\"\n\n\"So what is going to happen now?\"\n\n\"Zeus is coming here as Harry, an old school chum of mine. I am telling you this because I know you will treat him like Harry, even knowing who he is. None of the others could, and that includes Bruce. They couldn't handle it yet. So please, this has to remain between us.\"\n\n\"What do you want to do now?\"\n\n\"Let's go and eat with the others and then join them in a romp afterwards.\"\n\n\"Wonderful. Let's go and get Suki. We'll share a meal and then we have ourselves a threesome. You haven't been with her for a while. She misses you.\"\n\nThe evening went well. Suki was happy to see me. All through the meal she kept pushing her body into mine and sneaking her hand down to give my leg and my dick a rub. By the time the meal was finished I was so horny I could have fucked a keyhole. Thankfully with those two tarts at my side that wasn't necessary. We romped for hours in the nookie room. In the end it became a dry argument, no natural lubrication left in their pussies and I doubt if I could have milked another drop from my dick.\n\n***\n\nI had told the others I had run into an old school friend of mine and invited him for the big party. No one queried it. When Zeus arrived in the guise of Harry they welcomed him into our midst. I have to hand it to Zeus, he handled himself very well in that role. As expected he caroused with a couple of the big titted barmaids. He even  sampled one of the Bluey women, though he wouldn't have been very impressed with their smallish tits. Zeus followed me to my place after the party.\n\n\"Very impressive, my boy,\" said Zeus over a beer. \"The question is: how long will it last? It is comparatively easy to keep a society happy while all are working together on a big project. When the enthusiasm wears off and day to day matters are less exciting, that's when troubles usually start. I shall be curious how things progress. It is a great experiment and I congratulate you for doing it. I wish you well. Keep me informed.\"\n\nWe had a couple more beers and then I took Zeus home. On parting he thanked me for an enlightening evening. I had done the right thing by inviting him. Maybe he would start looking at ways to improve society on Olympus and on Earth from now on.\n\n\n\n\nChapter 48:      The Colony grows\n\n\n\nThe next three weeks saw Catsville finished. At Betty's insistence Marge had added a campus to the town, a self contained seat of learning, a kind of school, university and research facility all in one. Algenon and the boys were quick to move their facilities to the new centre, quickly followed by the Gadeirus and Darrin. Panacea and Iaso set up a medical school and Suki, with Betty's help, started English classes.\n\nSuki had come a long way with her command of the language in such a short time, but good enough to teach? When I said something about it to her she said: \"So what? We all learn together. Good for everybody.\" I really didn't have an argument against this.\n\nBruce and I went on an inspection tour of the town, Suki tagged along. It was a wonderful place as far as places go, but it was dead.\n\n\"Place need people now,\" Suki said. \"Suki get people. Betty and Suki make plan.\"\n\nI wondered what those two had cooked up between them. Before making a decision however I needed to talk to the headman first. That evening we had a meeting. I had asked Betty, Marge, Suki, Bruce and the headman to attend. Betty and Suki presented their plan for colonisation. Essentially it was a list of the kind of people they wanted to bring over. Craftsmen, artisans, teachers, farmers, and so forth, as well as a couple of storytellers and children, lots of children. Suki had done her homework. She had spent many hours talking on the video link to her people. It seemed there was no shortage of volunteers.\n\nThis surprised me. These people were happy, there was no need to emigrate to escape uncomfortable conditions at home, which had prompted most migrants on Earth. I asked the headman why so many of them wanted to come.\n\n\"My people love to see new things, acquire skills they can't learn at home, listen to different stories. They often go to stay with other tribes. Many never return. This is an exciting world for them. You have become one of our tribes. They know they will be accepted and loved here. Why wouldn't they come?\"\n\n\"You don't have any problems with Suki's plan then?\" I asked.\n\n\"Not in the slightest. I would never stop my people from following their hearts. I need to go back though. One of the other elders will take my place. All the people who arrived with me want to stay, even the children. I am happy with their choices.\"\n\n\"When do you want to go back?\"\n\n\"As soon as possible. I must not be seen favouring one tribe. I have obligations.\"\n\nWe arranged to take Suki, Betty and the headman to the Bluey planet and take the first fifty migrants back with us as soon as Vulcan could get a suitable transport arranged.\n\nThree days later we were ready. The night before we had a big party and were all a bit worse for wear when we took off. The four kids had asked if they could come along for the ride. I could see no reason why they couldn't accompany us. They squealed with delight when I told them they were welcome.\n\nVulcan took the co pilot seat, letting his Bluey offsider, whom he had named Kar for some reason, take the controls. He handled the vehicle like a pro, evidence that Vulcan had been giving him flying lessons. Of course there had to be another party when we got there. \n\nWe stayed the night and went back with our migrants on board. Vulcan and Kar would make a second trip in a freighter to pick up their possessions a short time later. On the trip home Betty remarked she had to have a pint of assorted Bluey come up her cooch if the pressure on her abdomen was any indication. My old professor certainly knew how to party.\n\n***\n\nOver the next three months Catsville's population swelled to about six hundred. Our little town was coming alive. We had six farms now, potters, wood carvers and weavers. There were about thirty children of all ages, from babies to pre-pubescents. Two teachers looked after the kids when they weren't with a group of adults. As was their way the kids wandered from group to group staying here and there, being looked after by whoever was handy. The brewery was working and next to Vulcan's forge a workshop had sprung up making knives, forks and spoons under Vulcan's tutelage. Most of the cutlery was intended for the Blue Planet since it was far superior to what they were using and had found enthusiastic approval.\n\nZeus, in the guise of Harry, came over at least once a week, studying our progress. I had cleared access for him with Endora. He could not understand why our people never argued or fought. He still thought it to be a temporary phenomenon that was unsustainable in the long run.",
        "I was sitting with Zeus on the veranda of my cabin when the subject came up once more. Again I argued that the Blueys had such a society which had been going for a long time.\n\n\"I've been thinking about that,\" he said. \"Has it occurred to you that the Blueys, as you call them, are under orders to be on their best behaviour when they are around you?\"\n\n\"Why would they do that?\"\n\n\"To gain access to your technology. This sort of thing has happened before, you know.\"\n\n\"Why don't we go and have a look for ourselves, Chief?\"\n\n\"What do you have in mind?\n\n\"Say we spend a few days on their planet. I take it you can make us invisible to them. If what you say is true, signs of internal strife should show up if they believe themselves unobserved.\"\n\n\"A simple solution to a complex problem. I like that.\"\n\nWe spent the next three days on the Blue Planet. When we arrived I cursed myself for forgetting to bring a translator. Zeus laughed and touched my forehead. A massive jolt went through my system scaring the shit out of me. After that I could understand what the Blueys were saying.\n\n\"I have modified your voice box too,\" he said. \"You'll be able to speak their language from now on. It should come in handy.\"\n\nStill shaky from the experience I stammered my thanks to Zeus.\n\nWe had arrived in the temple. Alec worship was in full swing. We watched it for a while.\n\n\"Let's get out of here,\" said Zeus, \"it's rather undignified running around with a hard on.\"\n\nThat's when I noticed we were both sporting massive erections. I had to laugh. He was right, we looked silly.\n\nTry as we might, we could not see any signs of unpleasantness all the time we were there. People went around doing their business without arguments and anger. There was good natured banter and a lot of laughing. They were not working in the way we understand work, they were simply doing things that were beneficial to the tribe.\n\nWe visited some of the other tribes just to make sure, it was the same there.\n\nWhen we got back I noticed only a few minutes had passed in this reality. I was happy about that because I didn't have to explain where I had been for that long. I remembered Demeter having done something similar on one of our trysts. Must be a God thing.\n\n\"This is not natural,\" declared Zeus over a beer. \"There are always remnants of our primitive and violent past. A civilisation cannot evolve into what we have seen. We all know that this is how we should live, but there is something in all of us that does not allow this to happen. Believe me, I have tried to deal with this problem, without success I must admit.\"\n\n\"You are right, it's not natural. At least that's what we think.\"\n\nI told Zeus that Panacea had discovered that the Ancients had viewed greed and violence as diseases and had developed a cure. We thought that the Blueys had undergone such treatment and as a result had been able to create the society they lived in. I also told him that so far, in spite of our best efforts we had not been able to find out how it was done.\n\n\"Panacea and Iaso need help. I have an idea.\"\n\n\"I'm all ears, Chief. What do you have in mind?\"\n\n\"When I was forced to deal with Asclepius it was decided to transfer his powers in equal parts to his six daughters. I had no say in this. Panacea and Iaso are only working with one third of the power they could have if all six were working on the same project. I shall allow them to join you, if you wish. Let me warn you though. Panacea and Iaso are a handful at the best of times. To have the six of them together ... need I say more?\"\n\n\"If the others are anything like the two I've got I think they'll fit in well.\"\n\n\"They might at that,\" said Zeus with a grin.\n\n\"I'll gladly have them. Do you think they want to come? I wouldn't like to see them forced into this.\"\n\n\"They miss their sisters terribly. They'll come.\"\n\n\"When do you want to do it?\"\n\n\"What's wrong with right now?\"\n\nZeus took my hand and ported us to his grove on Olympus. Seconds later the girls joined us. There was no doubt they were daughters of Asclepius. Like their sisters they were skinny and had the same long blond hair, large blue eyes, pert little titties and long legs. They wore jeans and campus tee shirts like Panacea and Iaso did most of the time.\n\nZeus introduced them: Hygieia, Meditrina, Aceso, and Aglaea. I knew I would have trouble telling them apart for a while, they were so much alike.\n\n\"I'll leave you with them. You can have them if they want to come,\" said Zeus and disappeared.\n\n\"I am Alec,\" I said.\n\n\"We know who you are and what you do,\" said Hygieia.\n\n\"Good, that simplifies matters. Panacea and Iaso could do with your help. Do you know what they are working on?\"\n\n\"Yes, our sisters told us.\" I already got confused and didn't know any more who I was talking to.\n\n\"Look girls, I'm going to have trouble for a while telling who is who. Please forgive me.\"\n\n\"You'll always be able to tell Meditrina,\" one of them said. They all started giggling.\n\n\"Yes? And how is that?\"\n\n\"Meditrina is the only one of us who keeps the hair on her kitty.\"\n\nAmongst giggles they all pulled their jeans down and lifted their shirts. Sure enough, one of them had a light blonde fuzz on her twat all the others were neatly shaved.\n\n\"How am I to know? Am I supposed to stick my hands down your pants every time to find out if I'm talking to Meditrina?\"\n\n\"That would be nice.\"\n\nOh bother! But then, Zeus had warned me.\n\n\"Alright. You can pull your pants up again for now. Would you like to come with me and join your sisters?\"\n\nThe girls huddled for a minute, whispering and giggling.\n\n\"What are you on about now?\"\n\n\"Aglaea wants to know if we can have parties with you like our sisters.\"\n\n\"You can have your parties. It's the way we do things back home.\"\n\n\"Then we'll come.\" They were hopping around like kids, giggling and giving each other high fives.\n\n\"I'm glad we got this sorted out. Let's make tracks.\"\n\nWe linked hands and I ported us into the conference room at the medical centre.\n\n\"Quiet now girls,\" I said. \"I'm going to get your sisters. I want it to be a surprise.\"\n\nIaso and Panacea were working on computers when I got there.\n\n\"Enough for today kids,\" I said. \"Close off for now. You've got visitors.\"\n\n\"Visitors? Who?\"\n\n\"Never mind that now. Let's go.\"\n\nThey closed their applications and followed me. When we entered the conference room there was stunned silence for a moment, then the screeching, hugging and kissing began. When things had quietened down a little I said:\n\n\"You've got a lot to tell each other. I'll be off. I'll come back before dinner and take you to the pub where you'll meet the others.\"\n\n***\n\nInstead of going straight to the pub I ported us on top of the hill just outside Bruce's back gate. From here you could see all of Catsville below.\n\n\"Have a good look, this is your new home,\" I said.\n\nOne of the girls hugged my arm and put her head on my shoulder.\n\n\"This is beautiful,\" she said, \"I'm going to love it here.\"\n\nI couldn't help myself. I stuck my hand down the front of her pants and found a naked twat. Pulling my hand back I said: \"You're not Meditrina.\"\n\n\"No,\" she said, \"I'm Aceso and you could have kept your hand down there a little longer.\"\n\n\"That's for later.\"\n\n\"I'll hold you to that,\" she said with a wicked smile.\n\nWe strolled downhill to the Horny Tom. It was busy. They all stopped what they were doing and looked at the newcomers. I climbed on a table and asked the girls to follow me. I waved the crowd to silence.\n\n\"You all know Panacea and Iaso. Today we have the honour of being joined by their sisters. We now have all the daughters of Asclepius amongst us. Let me introduce Hygieia, Meditrina, Aceso, and Aglaea. I can't tell them apart yet, all I know is Meditrina is the only one amongst them with hair on her pussy.\"\n\nWhen I said that Meditrina stepped forward and showed them. The crowd went nuts. I thought for a moment the applause would lift the roof off the pub. With that simple gesture all four had become accepted as part of us. I caught a knowing smile on Meditrina's lips. The little bitch knew exactly what she was doing. \n\nThere was no more to be said, we climbed off the table and were quickly surrounded. Everybody wanted to make them feel welcome.\n\nEventually we had our meal. Aceso never let me out of her sight and when it was time to go to the nookie room she and one of her sisters grabbed me and wouldn't let go. It turned out to be Meditrina who had tagged along. The two were just like Panacea and Iaso, playing with each other as much as they were playing with me. It was nice. Eventually I staggered home with empty balls and a skin full of booze.\n\n***\n\nI went to see Bruce for some of his antidote before breakfast. I needed it. When I was sober again I asked if he could gather our original group including Marge and Vulcan and serve our meal here in his backyard like in the old days. Bruce was delighted with the idea so were the others when they arrived. After the meal I addressed the group.\n\n\"First I'd like to say we should have meetings such as this on a regular basis from now on. We have been very busy in recent months and our little get-togethers have fallen by the wayside. I'd like to correct this.\"\n\nThere was assent right around the table.\n\n\"We have been very careful,\" I continued, \"to avoid having a formal hierarchy. In spite of our efforts to keep things informal, a hierarchy of sorts exists. There is no denying that the seven of us are the core group who is guiding this project. In the past we have always talked things over amongst ourselves before making any major changes ... until yesterday it seems.\n\n\"Yesterday I introduced a major new element without prior consultation. I would like to explain what happened.\"\n\n\"Look mate, you owe us no explanation,\" said Bruce. \"You must have had your reasons.\"\n\n\"Be that as it may, I'd still like to explain. As you know I have been unhappy with the lack of progress with Panacea's and Iaso's research. Their success is crucial if we want to introduce the kind of society we envisage. We have all agreed on that.\n\n\"I took my problem to Zeus. He sees things from a different vantage point to us. I had gone to him in the past when I got stuck and his counsel was always spot on. He believes that what we are doing is meant to be, otherwise the Fates would not support us. That's why he has never tried to interfere.\n\n\"I told him about the Ancient's technology and what Panacea and Iaso were doing and that they had struck a major roadblock. He suggested that the combined power of all of Asclepius' daughters might well turn the tables and offered to release the girls to us, no strings attached. I took him up on his offer before he could have second thoughts about it and here we are. Four new additions to our flock.\"\n\n\"You did good,\" said Vulcan. \"The girls might be a bit silly and mischievous at times but when they work together on something they pack one hell of a punch. My father is right, together they might just pull it off.\"\n\nI was about to call the meeting off when Marge wanted the floor.\n\n\"I want to put immigration on halt for the moment except for some skilled workers. The pub is getting too small, the next lot of farms are too far away for a comfortable walk into town, the first farm produce will be ready shortly, we need vehicles to transport the produce into town, things like that. We need to extend our infrastructure. Vulcan, Betty and myself have worked out what we need and where. Once we have caught up we can bring some more people in.\"\n\n\"Do what you think is best Marge. If it's alright with everyone else it's alright with me.\"\n\nThere didn't seem to be any objections so we closed the meeting and had a couple of beers, just socialising. Things were under control.\n\n\n\n\nChapter 49:      Meditrina has an idea\n\n\n\n\nAlmost as soon as I met Meditrina I sensed there was something different about her and I don't mean her kitty-whiskers. Outwardly she was as playful and mischievous as her sisters, but underneath that shallow exterior I sensed a methodical, deep thinker. As I watched her over the next four weeks I was convinced I was right.\n\nWhile her sisters spent most of their time combing computer libraries for clues about the medical technology of the Ancients Meditrina went around talking to everyone. She spent hours with Algenon and Frank, talked a lot to Betty and the Blueys and hung around with Marge and Suki. When I found her studying Gadeirus' Xonnian tablet and carrying it with her everywhere she went my curiosity got aroused.\n\nI had taken to having a couple of beers with Didi late in the afternoon before I went for my dinner. Meditrina would visit me at that time most days for an hour or so. She always had me check who she was and wouldn't sit down until I had given her bush a tickle. I had long learned to tell them apart, but I wasn't going to admit it. It would have spoiled the game.\n\nDidi was utterly besotted with Meditrina. He would finish his beer and then hop into her lap, curl up and go to sleep after an effusive greeting. He did that with no one else. Normally she would ask me a lot of questions, about how I had discovered the technology of the Ancients and what I had been my thinking that led to the major discoveries. On the day in question Meditrina had Gadeirus' tablet under her arm. After I had given her a beer I asked what she was doing with it.\n\n\"I am trying for the big picture. I need to get into the heads of the Ancients, to understand why they did what they did and why they did it in specific ways. Frank tells me you have been a student of engineering, philosophy and anthropology. You will understand then that it is philosophy that leads to discovery and that discovery leads to technology. Today this is difficult to see, but if you study Archimedes and Heron for instance the connections are far more obvious.\n\n\"To answer your question, this tablet is unique. The Ancients left us little more than their technology and much of that is still inaccessible to us. We know nothing of their civilisation, culture and philosophy. This tablet however tells us much. Not only does it describe the Xonnian technology, it also gives an insight into their history, their culture and their philosophical approach. Even the language of the Xonnians is related to the language of the Ancients. Bearing in mind that philosophy leads to technology and that the technologies are related one would perhaps be correct in postulating that their philosophical approaches are similar. The similarity of language seems to validate this theorem rather neatly.\n\n\"I believe the more I understand the Xonnians, the better I will be able to understand the Ancients. Incidentally, Gadeirus agrees with me.\"\n\n\"This is wonderful stuff, Meditrina. But enough of this for now, let's have some dinner.\"\n\nMeditrina picked Didi up. He gave her a lick across the cheek, hopped down and disappeared amongst the trees. \n\n***\n\nIt was about two weeks later when Meditrina came to see me early. Marge was preparing breakfast in the kitchen when she arrived. We invited her to have breakfast with us. Marge left after the meal.\n\n\"You are early today, \" I said to Meditrina. \"Anything the matter?\"\n\n\"Yes. I have just discovered that the project we are working on can not progress until you do something first.\"\n\n\"Do what?\"\n\n\"That's what we need to find out.\"\n\n\"You speak in riddles, Dear. What are you on about?\"\n\n\"As you know, I have been looking at this project in its totality. On the surface it is like any other project, though bigger than most. A group of people trying to create a society. Nothing new here. A leader with a vision, nothing new there either. But, that vision developed later. In reality this project started with a series of unusual events which normally don't happen. Far too many of them. And the key ingredient in all these events was you. It didn't make sense.\"\n\n\"Give me some examples.\"\n\n\"It starts with Lil. A muse trying to get a writer to write. Does she? No. Instead, she turns up in a transparent nightie, strips it off and gets the writer to flash his dick. Enter mum and dad. Mum redecorates house using Olympus space to make it bigger inside. Never been done before in history, but, never mind, it gets weirder. Dad gives writer magic medal and shows how to flip from Earth space to Olympus space in spite of writer having been in and out of house across spaces before, without help of medal. Writer is taken to Olympus. On way back writer uses magic medal to activate power spots. Uses power spot to enter and leave Olympus, without God powers, on his own. Writer finds out magic medal is a dud and not needed. Is that in rough and ready terms what happened?\"\n\n\"I admit it's a bit weird, but why do you think it's so significant?\"\n\n\"Because it smacks of orchestration. that's why. I asked Bruce why he gave you the medal with those two colours. He said he was just having a bit of fun. I asked Marge why she put Olympus space into your house, she said it was a fun thing to do. I won't even ask Zeus why he picked the two power spots to get you into Olympus, he could have done it anywhere. No, some outside power wanted you to activate the system after it had lain dormant for millennia and made sure you had the tools to do it with. It manipulated all the players including Zeus. Why you and why now I have no idea.\"\n\nKia immediately came to mind. She had already admitted to me that she plants ideas into Zeus' head. I didn't want to tell Meditrina about Kia and her powers.\n\n\"I have felt for a while that I was being guided somehow,\" I said instead.\n\n\"Be that as it may, coming back to the reason why I came here. My analysis of the project shows that it was you who broke new ground every time in the past. Like when you found the lift or gained entry into the substation. My feeling is you need to do the same thing here. Endora has my sisters running around in circles. You need to break that cycle before they can get to the information they want.\"\n\n\"Easier said than done.\"\n\n\"Perhaps not. What do we have so far. A few references in the medical literature that greed and violence are diseases and that they had developed a cure. Then we have the Blue Planet, where we believe the Ancients eradicated these diseases. Perhaps they did the same on the planet of the deer. That's about it.\"\n\n\"Not much you can do with that.\"\n\n\"I disagree. The Ancients did everything with machines. From what I can gather they did not use drugs or vaccines. It would take some formidable machines to clean up an entire planet. Maybe they are still there. They've kept all the other stuff, why not that?\"\n\n\"Assuming this is right, where would you start to look?\"\n\n\"I've been listening to the Bluey storytellers. Some of their stories tell of a taboo land where the Blues are not allowed to go. It didn't sound like mythology, but the translators aren't very good, I've missed much.\"\n\n\"Assuming you are right, Meditrina, do you think anyone knows where the forbidden lands are.\"\n\n\"What is the point in telling people of a taboo area without telling them where it is? They wouldn't know what to avoid.\"\n\n\"True.\"\n\n\"We still have the problem with the translators not picking up everything.\"\n\n\"I speak Bluetongue. Zeus gave it to me as a gift.\"\n\n\"Bluetongue?\"\n\n\"That's what Betty called their language. Tongue of the Blueys, get it? It's also the name of an Australian lizard. Betty's sense of humour.\"\n\n\"And Zeus gave you command of the language? I wonder what power prompted him to do that.\"\n\n\"Yes, it is strange. Just when we need it.\"\n\n\"What will you do now?\"\n\n\"I'll talk to Suki and take it from there.\"\n\n\"Why don't we make tracks? Suki and Marge will be at the Horny Tom for lunch. I want to see Marge anyway. If we leave now we'll have time for a couple of drinks before they arrive. I would like that.\"",
        "It was still early so we decided to walk rather than port to the pub. She told me how much she loved our world and that she was happy to be here.\n\n\"You know it was Panacea who convinced us to move. It was an impersonal, barren metal world when we first came here. What you see now is what we built to make it a more pleasant environment for everyone.\"\n\n\"More evidence of orchestration.\"\n\n\"Why do you say this?\"\n\n\"Panacea is perhaps the only one on Olympus who has no rivals or enemies. Even Ares and his followers are nice to her. She has always been happy on Olympus. For her to want to move to a barren metal box amongst the stars is quite out of character. It's the kind of thing I might have done. I wouldn't have thought it to come from Panacea.\"\n\n\"Tell me, Meditrina, what is it that makes you so different from your sisters?\"\n\n\"My sisters are healers. They inherited the healing gifts of my father. I inherited his powers of observation and his analytical talents. My special sphere is diagnosis.\"\n\nSuddenly I could see what Zeus had in mind when he gave us the four sisters. The others would come into their own later. Right now we needed the special talents of Meditrina to get us to the next level.\n\n\"Thank you, Meditrina,\" I said. \"This makes a lot of things clearer to me. I can see the road ahead again.\"\n\nBy that time we had arrived at the Horny Tom. We chose a small table on the terrace. I went to get the drinks. Meditrina had asked for Irish whiskey, neat. This chick was full of surprises. What surprised me even more was that they had a bottle of Tullamore Dew in the bar. She was happy with that.\n\nMarge and Suki arrived together and joined us. Trout Amandine, steamed asparagus, and baby potatoes was on special, we settled for that and a bottle of Chardonnay. It was great. Suki no longer wore her translator. Her English was getting a lot better though she still had trouble with the grammar. She managed well. After the meal I told her I wanted to talk.\n\n\"Okay. We go Suki house. Talk there.\"\n\n\n\n\n\nChapter 50:     The Forbidden Land\n\n\n\n\nI didn't even know Suki had a house. Must be a recent acquisition. It wasn't far. From the outside it was a two story terrace with neat window boxes full of flowers and a tiny front yard, also full of flowers. The downstairs part was one big room with a kitchen at the back. A staircase led to the upper floor. The front room was sparsely furnished. Big colourful cushions on the floor and a low table, exquisitely carved, in the centre. Native style. The only concession to our civilisation was the mustard coloured carpet. Suki gave me an ashtray and a beer and busied herself in the kitchen.\n\nShe emerged from the kitchen carrying an ice bucket with a bottle of Champagne and two glasses. Instead of putting it on the table, as I had expected, she carried it upstairs.\n\n\"You come to Suki now, please,\" she called after a couple of minutes. I went upstairs. This was a day of surprises. Evidently Marge had been busy. The upstairs part was an exact replica of my bedroom in Sydney, complete with satin sheets, gilded mirrors and an adjoining bathroom with a Jacuzzi. Suki was already naked and in the water.\n\n\"You talk to Suki here,\" she said.\n\nI stripped off and joined her. She handed me a glass of champagne and with her free hand went straight for my dick.\n\n\"I said I wanted to talk,\" I said weakly.\n\n\"Yes. We fucky first, then talk. Suki miss you.\"\n\nBy that time my dick was as rigid as it gets. I didn't need much convincing.\n\nWhen we were done Suki poured us some more Champagne and leant back in the water.\n\n\"Much better. Now we talk. What you want to talk to Suki about?\"\n\n\"I want you to tell me the story of the taboo land on your planet.\"\n\n\"Suki cannot tell in English. You have no translating machine.\"\n\n\"I no longer need one,\" I said in Bluetongue. \"I can understand you now.\"\n\n\"You speak our language?\" said Suki, also in Bluetongue. \"Why did you not tell us before?\"\n\n\"It only just happened. It came to me in a dream.\" \n\nI was stretching the truth a bit here, but there was no way I was going to admit to spying on them.\n\n\"We are your people. The universe gave you the gift of our language because you love us so much. It is fitting. I will tell you what you want to know.\"\n\nI felt like a heel.\n\nIt was a long rambling yarn, by the look of it embellished over the centuries. There was a clear and discernible core to it however, which seemed to prove what we had suspected all along. Here is in essence what Suki told me.\n\nIn the beginning Bluey society was similar to Polynesian society on Earth from the descriptions. They lived in a land free from natural enemies. Apart from insects, lizards and birds the only other life was in the oceans. To me that meant that the Blueys were not indigenous to the planet but had arrived there as settlers. As their society grew, tribes formed who saw themselves different from the others and started to fight each other for domination. They fought over land, fish, women and anything else that was desirable and in the possession of their rivals. Tribal wars were the norm, cannibalism was common.\n\nThen one day the Helpers arrived. They set up a small colony on what is now the taboo land and were immediately attacked. The natives were no match for the new arrivals. The Helpers did not kill. They used some sort of stunner, perhaps similar to today's Taser. There were no casualties on either side.\n\nBlueys are anything but stupid. They quickly realised the futility of their attacks and stopped. An uneasy truce developed. The Helpers simply waited. When the Blueys realised that the Helpers had no intentions to dominate them dialogue started between the races.\n\nThe Helpers explained that there was a better way to live and that the strife in their society was caused by violence and greed. That was nothing new to the natives, they had figured that one out a long time ago. What was new to them was that violence and greed were the manifestations of a disease and that the newcomers had a cure. Astonishingly, it was a group of hardened warriors who decided that they had seen too much misery and killing and went to the Helpers to be cured. The Helpers obliged.\n\nThese people had been disliked and feared even by their own tribes, who saw them as a necessary evil. When the change that had come over them as a result of the treatment became obvious many decided that they wanted that kind of inner peace for themselves, packed up their families and went for treatment. The new movement snowballed.\n\nThe new converts simply ignored those who did not want treatment, but after a while many decided to be cured to gain admittance to their emerging society. \n\nBut there were those who did not want to change the old ways. Rebel groups formed. They decided their day had come and it would be an easy matter to dominate those who only wanted peace. The idea was short lived. The rebels quickly found out that a person who is free from greed and violent urges is not defenceless. Though no longer compelled, they were still highly trained warriors who knew how to deal with a belligerent adversary. The rebels who were not killed in the ensuing conflicts were forced to undergo treatment. After two generations greed and violence had been completely eradicated on the planet. The Helpers left.\n\nA new society emerged. They recognised they were all one people. The term tribe began to mean everybody present, regardless where they came from. When they talked about other tribes they simply meant some of their people who lived in a different place. When two tribes met they simply became one for the duration. That was the end of tribal rivalry.\n\nEverything belonged to the tribe and since no one took more than they needed there was plenty for everyone. The natives had always been liberal with their sexual favours and now that there were no more jealousies, sex became a form of tribal get together. It was by no means exclusive. People still had private couplings on occasion, but they kept it private and rarely talked about it. The children belonged to all and were looked after by anyone who was close.\n\nThese things had not all happened all at once, they had developed over time as new social conventions emerged which were held to be sacred.\n\nBluey society had become what it is today.\n\nThere was little information as to who or what the Helpers were. There were many descriptive terms for them and their technology that had lost their meaning over time. About all I could gather was that they were bipedal hominids with large eyes.\n\nHalfway through Suki's story we had climbed out of the Jacuzzi and gone to her living room. It had been a long tale, as she told it. By now it was nearly dinner time. We decided to go to the Horny Tom for our meal.\n\nBruce and Marge were sharing a table with Vulcan.  We joined them. Vulcan had not seen Suki for a while. He asked her how she was.\n\n\"Suki is very happy,\" she said. \"Johnny can speak Suki language now. Suki tell Johnny the story of our people.\"\n\nThere were some raised eyebrows around the table now. Before anyone could say something Suki spotted Betty.\n\n\"Suki talk to Betty now, then come back,\" she said and went over to her. I had a fair idea what she was going to tell her.\n\n\"How did you manage to do that?\" said Bruce.\n\nI told them what Zeus and I had done and how Zeus had given me the language because I had no translator. I also told them how I had explained it to Suki and what she had said.\n\n\"That won't do your reputation any harm. I love it,\" said Bruce amongst much laughter.\n\n\"Suki told me much that is new to me. I have a plan. Can you, Bruce, get the core group together for breakfast at your place in the morning. I'll bring Suki and Meditrina. This gives me a chance to digest what I've been told. I'll tell you then what I have in mind.\"\n\n\"Not a problem, Mate,\" said Bruce. \"Leave it to me.\"\n\nSuki came back just as the meals arrived.\n\n\"Betty want to talk to Johnny,\" she said.\n\n\"Go and tell Betty I will have lunch with her tomorrow. She can talk to me then.\"\n\nSuki did as she was told.\n\nWe had our meal and a couple of drinks afterwards. When we were done Suki got up and pulled on my sleeve.\n\n\"We go Suki house now,\" she said, \"fucky some more.\"\n\nFor a moment I just sat there, stunned by what she had just said in front of everyone.\n\n\"Why you wait?\" said Vulcan, mimicking Suki's speech. \"You go Suki house now. Fucky some more!\"\n\nI got up amongst howling laughter and got the fuck out of there. Once more I had provided the entertainment for the day.\n\n***\n\nNext morning I asked Meditrina via Endora to meet us at the Horny Tom. From there we walked up the hill to Bruce's place. The gang was already there.\n\n\"Johnny fucky good yesterday?\" Vulcan asked mimicking Suki again.\n\nHowling laughter all round except for Meditrina who didn't know what was going on. \n\n\"Suki fuck Johnny good. Johnny happy.\" Suki stated, grabbed me by the balls before I could stop her and decided: \"All empty now. Johnny get food. Fill up again.\"\n\nThe laughter continued for a long time. Eventually it died down. Bruce handed out the plates. For once I had no reply. I had beer with my breakfast, I needed a drink.\n\nAfter the meal I told the story of Suki's people and the forbidden land.\n\n\"I take it you want us to go there,\" said Bruce, \"Do you know where it is?\"\n\n\"Suki knows. Suki been there when young woman. Suki can find way.\"\n\n\"You mean you have actually been there?\" That was news to me.\n\n\"Yes. Suki travel lots when younger. Seen many tribes. Stayed with tribe next to taboo land. Suki come, show way.\"\n\n\"Good, you show us where it is,\" I said, \"we'll take it from there.\"\n\n\"No. Suki come with Johnny. We go see taboo land.\"\n\n\"I think we should take Kar with us too,\" said Vulcan.\n\n\"He might not want to set his foot on land that is forbidden to him,\" I said.\n\n\"Kar has balls the size of coconuts. He'll go everywhere I go,\" insisted Vulcan.\n\n\"Alright, go and get Kar then.\"\n\nVulcan disappeared and came back with Kar ten minutes later.\n\n\"I've told him what we are going to do. He is eager to come.\"\n\n\"Good. We'll leave tomorrow after breakfast. All of us here, unless someone doesn't want to come along. As long as everybody understands this might be very dangerous. The Healers, as Suki calls them, must have had a reason to declare the land a forbidden zone. We don't know what we might find there.\" I just wanted to make clear what they were letting themselves into.\n\n\"Healers no make taboo. My people did.\" Suki was adamant.\n\n\"Okay, Suki. Tell me why your people made the land taboo. Speak in your own language if that makes it easier for you.\"\n\n\"Our people believe,\" she said in Bluetongue, \"that our ancestors were possessed by demons who made them fight and eat each other. These demons were driven out by the Healers and imprisoned. They think the demons are still locked up in the place where the Healers lived. To make sure no one would release them by accident they declared the land taboo. No one wants to go back to the old ways. Panacea taught Suki that it is not demons who make people sick or violent. Panacea is a God. She knows. Suki is not afraid to go on taboo land.\"\n\nI translated what she had said for the others but still held onto the notion that it might be dangerous, that the place might be booby-trapped to keep people out.\n\n\"Nonsense,\" said Darrin. \"The race we call Ancients, for want of a better term, were honourable and compassionate creatures. They would not leave booby-traps behind. They had other, non violent, methods to keep people out, if they wanted to.\"\n\nOf course. Darrin was right. It would have gone against everything these people stood for.\n\nWe spent the next hour deciding how we were going to travel and what we would take with us. Vulcan proposed that Kar should pilot the craft and Suki should be co-pilot. Since Suki knew the way she could give Kar directions on the fly in Bluetongue, eliminating translation problems. Everyone agreed that this was a sensible thing to do. Darrin wanted to take some tools, Gadeirus decided to take only his Xonnian tablet and an interface, Bruce and Marge decided they would look after the catering.\n\nAlgenon declared that since this was an expedition and Captain Kirk was leading them once more to out there it was fitting to wear our Star Trek uniforms. That struck a chord. I was outvoted. Uniforms it was.\n\nBy then it was time for lunch. The others decided to eat at Bruce's place. I had promised to meet Betty at the Horny Tom and made tracks, leaving them to do their own thing.\n\nOver lunch I told Betty Suki's legend and what I thought it meant. She made me promise to give her a translation. I explained how I had acquired the language and what Suki thought about it.\n\n\"You are already a legend amongst the Blueys,\" she commented dryly, \"a bit more embellishment isn't going to hurt.\"\n\n\"I wish they wouldn't see me as a God.\"\n\n\"But they don't. They know that some of the others are, but not you.\"\n\n\"How do they see me then?\"\n\n\"They see you as one of them. They say their love for you and your love for them makes it so. They also say that you get your inspiration directly from the universe and that the Gods follow your lead, not because you are more powerful, but because what you are doing is right.\"\n\n\"If that is so, why do they worship me in their temple?\"\n\n\"They don't. They are simply celebrating the fact that the universe itself is guiding one of their own without intermediate Gods who may have their own agenda. They feel very privileged.\"\n\n\"Let's just hope I can live up to their expectations.\"\n\nWe left it there.\n\nI had nothing better to do so I left for home to prepare the report I had promised Betty. Knowing that this was needed later on I had instructed Endora to record Suki's story as she told it and render a translation. It made my job easy. All I had to do was to add footnotes with explanations wherever the translators were ambiguous or unintelligible. It took most of the afternoon. I mailed my report to Betty and went for my evening meal.\n\nAfterwards, when I was standing at the bar, slurping a beer and talking to the barmaid, Meditrina turned up. She grabbed my free hand, stuck it down her pants and declared:\n\"I am Meditrina and tonight you are mine.\"\n\nNext instant we were standing in my bedroom, naked. I still had my beer in one hand and my other hand on her bush.\"\n\nI remembered Marge telling me: It is the women who decide whose pussy, and how much of it, a man is allowed to have. I didn't argue.\n\n\"You can finish your beer,\" said Meditrina and lay on the bed.\n\n\"On your own?\" I asked. \"I thought you guys always came in pairs.\"\n\n\"The others do. I'm different. Tonight I want you for myself.\"\n\nIt was sweet and loving. A perfect end for the day.\n\n***\n\nThe others were already assembled when we arrived at Bruce's next morning. Bruce was making breakfast. Vulcan had parked the craft we would use on the back lawn. Marge hexed us into uniform. After we had eaten we boarded the vehicle. Kar took the controls. Suki sat in the co-pilots chair. She looked happy and excited.\n\nKar manoeuvred us to the hangar and through the air lock. We were in open space. Meditrina, who had not travelled on the craft before, was thrilled. I asked Kar to fly an orbit around our home to show Meditrina where we lived. Endora had put all the lights on again. Shortly thereafter he ported into orbit around the Blue Planet.\n\nInstead of landing us on the power spot in the temple, Kar set down manually about ten miles north of Suki's village, next to an isolated clump of trees in the middle of a large meadow. Suki's first marker.\n\n\"From here on it's all yours,\" he said to Suki.\n\nShe told him where to head next. There was nothing wrong with her memory. We only had to double back twice to find a marker she had missed. We flew at a height of about ten feet for most of the way, only climbing higher when we needed to cross a forest. \n\nBy midday we came to a river. Suki asked Kar to put the craft down. The river was about half a mile wide.  On the far horizon we could see the peak of what had to be a huge mountain.\n\n\"Why did we stop Suki?\" I asked. \"Are we there?\"\n\n\"No, not yet,\" she said in English. \"We go now straight towards mountain. After while we come to big forest. Forest is where taboo land start.\"\n\n\"Then why did we stop?\"\n\n\"Suki need piss. Then have beer. Then we go.\"\n\n\"I like the beer idea,\"said Bruce.\n\n\"Not surprise. Bruce always think beer.\"\n\n\"What do you expect? I am a God of booze.\"\n\n\"Yes, God of booze, barbeque and backyard dunny,\" Suki said dryly. \"No backyard dunny. Today we piss on grass.\"\n\nThat made everyone laugh. This chick was a regular stand up comic.\n\nWe arrived at the forest half an hour after we resumed our journey.\n\n\"Suki not know where to go from here,\" she said and got up from the co-pilot seat. I took her place and asked Kar to take us about a thousand feet up. I had no real idea what I was looking for.\n\nI asked Kar to take it slow and head for the mountain.\n\nAbout five minutes later Darrin called out. \"What's this on our left?\"\n\nSome distance away to our left was what looked like a clearing.\n\n\"Let's have a look,\" I said to Kar who swung the craft around.\n\nAs we got closer we could see this was no ordinary clearing. It was about a mile in diameter and perfectly circular. The area was devoid of vegetation and of a beige colour. It was completely flat. In the centre was what could be a small building. It was difficult to see because it seemed to be made from the same material.\n\nI asked Kar to put the craft down next to it. As we came closer we could see that it was a gazebo like structure like we had encountered on Olympus in the tunnels. There were no windows or doors. The ground and building were seemingly constructed of the same material we had seen in the tunnels of Olympus. This had to be the place we were looking for.",
        "I wanted to go straight over and investigate. Bruce held me back.\n\n\"There is no rush. We have at least six hours of daylight left,\" he declared. \"Let's have a rest, have something to eat and drink and then we go and have a look.\"\n\nI let him have his way. In no time Bruce and Marge had set up a table and chairs and the barbeque. While we were guzzling beer Bruce was making American spare ribs, a dish he served whenever he felt it was some sort of special occasion.\n\nI asked Endora what she could tell us about the installation. She insisted she had no information, though she admitted knowing where we were and could see the building through the vehicle's cameras. I told the others what Endora had said.\n\nAs soon as I had finished my meal I could not sit there any longer. The others were still eating when I strolled over to the building and put my hand on the wall. If the building was an exact copy of the one on Olympus, I reasoned, maybe I could get inside by picturing the interior. The moment I did that I was inside.\n\nIt looked identical but seemed inactive. The lights were dim and the consoles had only small pilot lights glowing. The system appeared to be on standby. I ported out and went back to the table. I told the others what I had seen.\n\nIt was Darrin who spoke up.\n\n\"I think it's a hardware thing. Endora doesn't know of this place because it's on standby. I would lay a bet she'll know all about it once we switch it on and it's online.\"\n\n\"You could well be right, Darrin,\" I said. \"What you told us makes a lot of sense. The problem is now how do we put it online without wrecking anything.\"\n\n\"If the place is identical to the substation on Olympus that won't be much of a problem,\" said Gadeirus.\n\n\"Why won't it be a problem?\"\n\n\"I have the entire layout of the Olympus installation on file on my tablet together with my notes. I know how to control the thing on Olympus. If it's the same here, it'll be a walk in the park.\" \n\n\"What needs to happen next, Gadeirus?\"\n\n\"First I have to make sure we have the same kind of installation in front of us and not a major variant. When we are as sure as we'll get, we go for broke and switch it on. Darrin and Algenon can give me a hand. It shouldn't take long.\"\n\n\"I'll stay out here with Kar and the girls,\" said Vulcan. \"It'll get too crowded in there if we all go.\"\n\nWe had been inside no more than two minutes when Gadeirus threw a switch and the lights came on properly.\n\n\"That won't interfere with anything,\" he said. \"At least I can see now what I'm doing.\"\n\nTwenty minutes later Gadeirus declared he was ready to power up the system. I kept my fingers crossed when he threw the switch. I needn't have worried. All screens and terminals came alive at once and Endora's voice came over the speakers.\n\n\"Substation on line and fully functional. Full medical library online and accessible. I have informed Pandora.\"\n\nWe'd done it!\n\n\"Let's have a look what else we've got,\" said Bruce and called up the lift.\n\nThe downstairs area was identical to the one on Olympus except it was filled with machines we had not seen before. Bruce made straight for the lunch room. He gave us a beer each.\n\n\"I'll get the others, \" he said and went back up.\n\nWhen he returned with the group he and Marge carried a box with glasses and a case of Marge's prize Champagne.\n\n\"Happy days,\" he said. \"Let's drink to victory and then we'll have a closer look.\"\n\n\"Before we get into the drink,\" I said, \"I want to remind you that it has to stay a secret where we've been today. I don't want the people to be afraid they might be overrun by demons because we have been on taboo land. We will say that we have discovered the secrets of the Healers, but not where and how.\"\n\nI repeated what I had just said in Bluetongue to make sure everyone understood. Suki and Kar agreed that this was the right thing to do.\n\n\"Good, then let's have some of that delicious Champagne.\"\n\nAfter a couple of glasses the boys went exploring. I stayed behind with the girls. After half an hour Bruce came back grinning from ear to ear.\n\n\"This place is a carbon copy of the other one. It also has its own power spot.\"\n\n\"I take it you have tried it, Bruce?\"\n\n\"Yep. Works fine.\"\n\n\"Good, we'll use that from now on. Bruce, can you stow any gear that's lying around outside and get Endora to take the vehicle home. We'll leave via the power spot.\"\n\n\"Good idea. Will do.\"\n\nAn hour later we were back in Bruce's yard. I had asked Panacea and her group to meet us there. Panacea laughed when she saw us in our Star trek uniforms and hexed herself and her sisters into uniforms as well. Marge brought out the Champagne.\n\nBefore we got into the drink I addressed the group. I repeated again that we could possibly have a panic on our hands if it became known where we had been and that we must keep that part secret, at least for now.\n\n\"As we discover what the Healers did to eradicate the disease,\" I said, \"and as that knowledge becomes common, the idea of demons will die a natural death anyway. Panacea and her group and the technical boys have an awful lot of documentation to go through before anything else can happen. Perhaps it would be best if we stayed away from the newly discovered compound until we have a better idea what we're dealing with. As for the rest of us, we simply continue what we've been doing.\"\n\nThere was general agreement with what I'd said. We had a few drinks. Panacea suggested since we were all dolled up we should go to Shaggers for a proper party. Shaggers it was. I wasn't all that interested and ported home once the others were busy. To my surprise Marge turned up five minutes later.\n\n\"I don't feel like a party,\" she said and hexed our clothes off. \"Let's go to bed.\"\n\n\"I thought you said you didn't feel like a party.\" I was confused.\n\n\"I don't,\" she insisted. \"I feel very mushy tonight. I need a cuddle.\"\n\nWe fell asleep in each other's arms.\n\n\n\n\nChapter 51:     Taming Devils\n\n\n\nNothing much happened over the next two weeks. Panacea's group and our technical boys did little more than study files. Gadeirus asked for a meeting of the core group. He also wanted Panacea and Meditrina to attend. We met at Bruce's place for breakfast.\n\nAfter the meal Panacea took the floor.\n\n\"The Ancients reasoned that in the dark past of any species violence was the sole mechanism that ensured only the fittest survived. The only defence weaker creatures had against stronger ones was constant vigilance and flight. Vigilance required close observation of the environment for signs of danger. It was observation and correct evaluation of the observed that led to intelligence. The smartest survived better.\n\n\"Somehow these abilities were hard wired into the creatures, which allowed for them to be passed on to future generations. Environment, the Ancients decided, could only trigger or subdue these traits, the root causes were genetic. For us there is little new here, we have suspected this to be the case for some time.\n\n\"By analysing the genetic code of the most violent creatures they knew of they eventually identified the genes responsible. It took a long time. It took even longer to develop a technology which inactivated the genes responsible without affecting anything else. Since the changes were genetic, they were passed on to future generations. The ancients had in fact created a new species.\n\n\"Up to here the records are voluminous and precise. Then it gets cryptic and vague. There are a few references but any attempt to clarify with Endora what they mean has been fruitless. Meditrina thinks that Endora can't, or won't, provide access to those records.\n\n\"What we suspect is that the Ancients took several planets, cleared them of all land based predatory life forms, populated them with sentient beings and eventually treated them. We believe the Blue Planet and the planet of the deer to be the result of such experiments. We further believe that after they were sure there weren't any undesirable side effects they treated their own society. Eventually they discovered an entirely new realm which suited their new society better. That's when they emigrated.\"\n\n\"Wonderful news Panacea,\" I said. \"How are we going with the machines?\"\n\n\"I can answer that,\" said Gadeirus. \"We've studied the blueprints and we think we know enough to put one of their gadgets together. We know where the machines are stored. There are hundreds, perhaps thousands of them. To store them conveniently their engineers took them apart to save space. We have identified all the bits we need and are ready to go.\n\n\"We've also found the place here where the machines were originally built. The equipment needed to test and calibrate the machines is still there. Darrin thinks we should assemble the device here where we have all the facilities. It's a huge area. They must have build these things a hundred at a time. It's even got its own power spot so we can port the things we need straight over.\"\n\n\"Good, let's go then. All of you have done a magnificent job. Marge, where's the Champagne?\"\n\nIt turned into quite a session.\n\n***\n\nDarrin informed us at the next meeting that they had brought everything they needed and assembly could begin. We went to have a look after breakfast. The hangar was about the size of a sports stadium. At the far end, next to the power spot, were piles of curved panels and boxes and boxes full of gear. \n\n\"Cripes, How big is this thing?\" I was astounded. \n\n\"Imagine a tunnel about thirty feet wide, twenty feet high and sixty feet long,\" said Darrin.\n\n\"Why so big?\"\n\n\"They had to treat a lot of people if they wanted to clean up a whole planet. They herded the natives through the tunnels. That's all it takes. The machine does the rest. The length of the tunnel insures whoever is being treated is in there long enough for the device to do its work. You can process easily thousands in a day with this thing. It needed to be that big.\"\n\n\"This is dreadful,\" said Marge. \"It needs a woman's touch. Vulcan, you stay here. You others go and have a drink. I'll call you when I'm done. For now I've got work to do.\"\n\nNo one argues with Marge when she gets like that. We went back to Bruce's place, Vulcan stayed behind.\n\nTwo hours later Vulcan joined us. He looked exhausted.\n\n\"I need a beer,\" he said. \"You should see what this crazy chick is doing to the place.\"\n\nWe wanted to go and have a look, but Bruce stopped us.\n\n\"She'll call us when she's done,\" he said. \"She'll get cranky if we go now.\"\n\nAn hour later Marge turned up. She grabbed a beer and said: \"Just let me finish my beer, then I'll show you what I've done.\"\n\nMarge had been redecorating alright. The hangar walls were obscured by trees, bushes and other greenery. Grass covered the floor. There was an area in the centre, paved with marble. The rest had become a magnificent garden with flower beds, low, neatly trimmed hedge rows, trees, statues, fountains ... the works. The roof was no longer visible, in its place was a blue firmament with an artificial sun providing the light. In one corner she had built a barbeque area with tables and chairs and a tent with a well stocked bar.\n\n\"This is where I want you to put the tunnel,\" said Marge pointing at the marble paved area. When it's done I'll put the final touches on it. It'll be great.\"\n\n\"It's wonderful,\" said Darrin. \"I shall love working here. But why?\"\n\n\"When the tunnel is functional we will presumable use it for treatment. I want this to be a joyous walk in a fitting place, not a walk into something that looks like an execution chamber.\"\n\n\"You've done well,\" said Bruce stepping up to Marge and hugging her. We could see how proud he was of her at that moment. \"What this place needed was indeed a woman's touch ... your touch. Thank you.\"\n\nHe then turned to us and said: \"Seeing it's lunchtime, how about we have some grilled trout? I went fishing with the kids yesterday and we caught some beauties. Let's try the new barbeque.\"\n\nWe did just that.\n\nAfter the meal Gadeirus grabbed Vulcan, Darrin and Algenon and set them to work. The rest of us went back to what we had been doing before.\n\n***\n\nThe boys took their time. They carefully tested and retested the components and made sure they complied with specifications. Only then would they add it to the growing structure. After two weeks they were satisfied the machine was finished. Marge finished her decoration by adding shrubs, climbers and flowers to the area surrounding the tunnel. It gave the device a more organic and friendly look.\n\nIt was Gadeirus who announced the completion of the device over breakfast at the site.\n\n\"We need to test it now,\" he said, \"and that presents a bit of a problem. The Ancients tested it originally with ferocious wild animals. We don't know what to use.\"\n\n\"I'll fix that,\" said Bruce. \"There is a creature in Australia called the Tasmanian Devil. About the size of a small dog, it's the world's largest surviving carnivorous marsupial. Because of its spine-chilling screeches, black colour, and legendary bad-temper, the early European settlers called it The Devil. They are asocial creatures, only coming together at mating time. No one has been able to befriend one. They do not show, or respond to, affection. If your device can turn one of these into a playful, affectionate pet it'll work on anything.\"\n\n\"That sounds like what we need. How do you want to go about it, Bruce?\"\n\n\"I'll get about a dozen of them, keep them in small cages for three days and only give them water. By that time they'll be hungry and really cranky. We make sure they have to traverse the tunnel to get to food. Then we'll see.\"\n\nWe decided to do what Bruce had suggested. I went to see Zeus to tell him we were preparing for testing. He had been visiting us as Harry during construction so he was well briefed on our discoveries.\n\n\"I would like for you to be there when we test the thing,\" I said.\n\n\"Try keeping me away, I'm as curious as you are.\"\n\n\"Yes, but I want you to be there as Zeus, not as Harry.\"\n\n\"Any particular reason?\"\n\n\"Yes. It's time they knew of your interest and involvement in our project. They need to know sooner or later anyway. I will tell them before you arrive.\"\n\n\"You are right, it is time.\"\n\nI took my leave of Zeus and went home. Bruce had already caught the Devils. He kept them in small boxes in a separate room because of their smell and the noise they make. Two days later we were ready.\n\nOur group was already there when I arrived, so were Hermes, Suki and Kar. Vulcan had built an enclosure on each end of the tunnel, one contained the boxes with the animals, the other food and water. The Devils were hungry and angry.\n\n\"By the Gods, they stink,\" said Darrin.\n\n\"They only make that smell when they're pissed off or frightened, when they're calm they don't smell,\" explained Bruce.\n\n\"Before we start,\" I said, \"there is something I have to tell you. I have invited Zeus to witness this test. He'll be here shortly. He knows what we are doing, in fact he's seen most of it already. He has been with us on and off for weeks in the guise of Harry.\n\n\"Before you get angry with me, let me tell you why I've kept this from you. If you had known, you would not have him treated as an equal and he needed that experience. For the first time in his life he has been amongst friends instead of subjects. He loved every minute of it. Don't take that away from him. Treat him as you would treat Harry when he arrives.\"\n\nThere was a stunned silence. In the middle of that silence Zeus appeared. \n\nBruce was the first to regain his wits. He grabbed a beer, handed it to Zeus and said: \"Welcome to the show, Harry. Have a beer.\"\n\nThat broke the ice. There was a lot of handshaking and kissing. Harry was back amongst his friends, even if he was Zeus. It had gone better than I had feared.\n\nBruce showed Zeus the cages with the enraged animals who were making a dreadful noise. He gave Vulcan a hand signal and Vulcan triggered the device that opened all the cages simultaneously. The Devils raced towards the food each one trying to get there first. Half way through the tunnel their mad rush slowed down and the screeching had stopped. \n\nWhen they got to the food there were no fights, as there normally would have been. Each animal fed, totally unperturbed by the presence of the others. The smells dissipated, the animals were calm, their legendary belligerence no longer in evidence. Vulcan locked the enclosure so the animals could not get back into the tunnel.\n\nAs with most carnivores the after a big feed the Devils lay down to rest, only occasionally getting up to lap some water. We left them to it. Cameras were trained on the enclosure to record the interaction amongst the animals. It would show up how much their behaviour had changed.\n\n\"So far, so good,\" said Bruce.\"A bit early to tell, but I reckon it works.\"\n\nI had expected a lot of awkwardness with Zeus present as himself, but everyone had followed Bruce's lead and called him Harry, as they had done for weeks. Zeus seemed to enjoy himself, joking and drinking with us as he had done before. He stayed for the evening meal and the party afterwards.\n\nFor the next week we observed the animals. Their nature had changed completely. They played with each other and with anyone who would visit them. They did not fight for food, nor did they screech or exude smells. Bruce decided we had seen enough and said he would take the animals back to Aussie.\n\n\"You are not going to put them back in the wild?\" I was horrified. \"They'd never survive there now.\"\n\n\"No. I know a guy in Tassie who's got an animal park. He's been trying for forty years to make friends with the buggers without success. He'll love them. Imagine a place where you can pat a Devil. He'll be rich and famous.\"\n\nBruce took them back the next day.\n\n***\n\nI was having a drink with Didi when Marge and Bruce turned up. Didi waited for his scratchies and then ran off into the trees.\n\n\"It is time we made a move,\" I said over drinks. \"It's up to me to take the first step. I shall walk the tunnel day after tomorrow.\"\n\n\"Bruce and I will go with you\" said Marge. Bruce nodded.\n\n\"No. Thanks for offering, but you cannot go with me.\"\n\n\"Why not?\" I could see Bruce was offended.\n\n\"Look guys,\" I said, \"we don't know what will happen. If something goes wrong and we all are in there there will be no one who can keep this project going. I need to go first. You and Marge can handle the project, even if I'm gone. We cannot let our people down.\"\n\n\"Why do you need to go first?\"\n\n\"Meditrina once said I had to initiate personally each major step or it couldn't happen. She is right.\"\n\n\"Nothing will go wrong,\" said Bruce. \"I'm not happy with it, but I accept your judgement. What do you want us to do.\"\n\nI gave Bruce a list.\n\n\"Get these people and Gods together for day after tomorrow morning. Dress up occasion. Chitons everybody. I'll invite Zeus and his siblings myself. I'll start with Hera first. I need to go and get changed now. I don't want to turn up in shorts.\"\n\n\"Let me do that,\" said Marge and waved her hand. An instant later I was clean and wearing the clothes Hermes had given to me.\n\nI took hold of Demeter's charm and asked to see Hera. Seconds later I stood in her atrium. She was not alone. The whole six pack was there.\n\nI greeted everyone. Hera gave me some wine and bade me sit down.\n\n\"We were expecting you,\" said Zeus. \"You have come to invite us, haven't you? For the big event day after tomorrow.\"\n\n\"The ways of the Gods are inscrutable to me. The decision was made not more than twenty minutes ago. I only told Bruce and Marge and came straight here. Pardon my confusion.\"\n\n\"We have known for days. It is a fated event. Our presence is required. We will attend.\"\n\nZeus waved his hand and I found myself back home, more confused than ever. No good asking for explanations, there won't be any. Events would unfold with or without me worrying about it. ",
        "I grabbed two bottles of Marge's prize champagne and ported to Suki's house, hoping she would be at home. She was.\n\n\n\n\n\nChapter 52:      Clean-up\n\n\n\n\nThe day arrived. All the Gods and humans from our little world were there as well as the Six-pack and Hermes. They had formed a semi circle around the tunnel entrance. I stepped into the centre and addressed the small crowd.\n\n\"You all know what I am about to do and why. We think we know what is supposed to happen, but success is by no means certain. We might have missed something or we might have made a mistake somewhere. Only walking the tunnel will show if we enter a new era or not. If something goes wrong Bruce and Marge will continue the project, we cannot let our Bluey friends down. I love each and every one of you. Wish me luck.\"\n\nAs I turned towards the tunnel Vulcan stepped forward.\n\n\"I shall go with you,\" he said. \"Should you walk to your doom, at least you will have a friend at your side.\"\n\nI was just about to say something in reply when Hades stepped forward and announced he was going as well.\n\nIt took me a while to close my mouth before I could stammer: \"You ... Hades? Why?\"\n\n\"There is this obnoxious, arrogant human who needs to understand once and for all that my balls are as big as his,\" he said with a grin.\n\n\"Fair enough,\" I said, \"let's go.\"\n\nNothing seemed to happen at first. About a quarter of the way I noticed that my heart wasn't thumping in my throat any more and that the feeling of apprehension had disappeared. My body felt lighter, my step had more spring in it.\n\nAt the half way mark I felt the noise in my head abating. Niggling thoughts, doubts disappeared the farther we walked.  I felt more in control. When we came close to the exit I knew something profound had happened. I experienced an inner peace like never before. My perception was keener, my thoughts clearer. Vulcan put it in a nutshell when we exited the tunnel.\n\n\"I'm free,\" he said.\n\n\"That we are,\" said Hades.\n\nAll eyes were on us as we walked back to the others, using a path outside the tunnel this time. Hades was the first to speak. He nodded to his siblings and said simply: \"Yes!\"\n\nEvidently that was enough. With Zeus in the lead Hades' brothers and sisters entered the tunnel. \n\nSeeing the supreme Gods from Olympus walking the tunnel erased any doubts some might have had. Everyone followed. A short time later we were all in the barbeque area. Marge hexed a glass of Champagne into everyone's hand and said: \"Welcome to a new world.\"\n\nWe drank to that.\n\nWe celebrated the rest of the day. Nothing was said about what had just happened. Just a bunch of friends enjoying each other's company. When it was time to go home Hera kissed me and said: \"Until now none of us understood what unconditional love is. We know now. Thank you.\" With that she disappeared.\n\nI called in at the Horny Tom on my way home. Suki cornered me as soon as she saw me. \n\n\"Suki wait for Johnny,\" she said. \"We go Suki house now.\"\n\nWe did.\n\n***\n\nI was sitting on my veranda about a week later when Zeus, Hades and Poseidon turned up. I served them beer and some snacks Marge had prepared for me the day before.\n\n\"What honours me with your visit?\" I asked.\n\n\"We want to clean up Olympus,\" said Poseidon.\n\n\"Wonderful,\" I said, \"give me a moment please.\"\n\nI switched on my communicator and asked Endora to relay to Gadeirus, Vulcan, Darrin and Algenon that they were wanted here. As an afterthought I asked her to call Meditrina as well. By the time everyone arrived I was already on the way with drinks.\n\n\"Our guests want to clean up Olympus, like we did here. Your help is asked for.\"\n\n\"What do you have in mind, Uncle Zeus?\" asked Gadeirus.\n\n\"We thought you could build a tunnel for us and put it on Olympus. It will take a long time to convince the Gods to walk the tunnel, but what's a century or so for Gods?\"\n\n\"You are going to tell them? What for?\" Gadeirus was horrified. \"It's going to cause no end of strife.\"\n\n\"I know,\" said Zeus. \"Do you have a better way?\"\n\n\"We'll trick them into walking the tunnels. We can have the whole place cleaned up in a day.\"\n\n\"Don't they need to make the walk of their own free will?\"\n\n\"No one asked the Tasmanian Devils. It worked just the same.\"\n\n\"True,\" admitted Zeus.\n\n\"Look, Uncle,\" said Gadeirus, \"first of all we need to build the devices. That'll take some time. I need information. I'll make a list of what I want to know and Meditrina can snoop around for answers on Olympus. She's good at that. Say we meet in about a week from now. By that time we'll have some sort of a plan. Just make sure no one finds out what you have in mind.\"\n\n\"Not a bad start. What you say makes sense,\" said Zeus. Turning to me, he continued: \"Seeing we are here; my brothers haven't seen Catsville yet. How about I show them around. Afterwards, if it's okay, we'll stay for supper and perhaps for the party later.\"\n\n\"You are welcome, Gentlemen. Go for it.\"\n\n***\n\nI had been racking my brain trying to find a way to treat the Gods all at once, as Gadeirus had suggested. Nothing came to mind. I didn't even know the magnitude of the problem. To get a better idea of what we were up against I asked Hermes and Meditrina to my place for breakfast. Marge had been staying the night and offered to do the cooking. On the spur of the moment I asked Bruce to attend too.\n\nAfter our meal I told my guests what I was trying to work out.\n\n\"My biggest problem is that I don't know enough about Olympus and how it works. I don't even know how many Gods there are. Can someone tell me what the population of Olympus is?\"\n\n\"About fifty thousand,\" said Hermes. \"I can get you a precise figure if you like.\"\n\n\"That many?\" I was astounded. \"I was under the impression there would be somewhere between one and two thousand, by what I've read about the pantheon.\"\n\n\"That would have been true in antiquity,\" said Meditrina. \"The world was a much simpler place then. As civilisation advanced on Earth new Gods were needed to administer the different aspects of the newly created technology. Today there are Gods of motor cars, traffic lights, microwave ovens ... need I go on?\"\n\n\"And all are ultimately the responsibility of Zeus?\"\n\n\"Who else? He's the boss.\"\n\n\"It must be a nightmare to administer. How does he manage?\"\n\n\"Like any other boss of a large organisation. He delegates. See him as the chairman of the board, the board being his siblings. They delegate as well, right down to the tooth-fairy, if you wish.\"\n\n\"I understand that. Sometimes, it seems to me, he must personally address everyone on some important matter. You don't have radio or television, how does he do that?\"\n\n\"Let me explain,\" said Hermes. \"In the beginning it was simple. He'd just summon everyone into his throne room and make his announcements. As time went by the throne room became too small for such events and he had an amphitheatre built. It was a Greek style, open air affair, little more than a hole in the ground. Gods teleported in and listened to what he had to say.\n\n\"Before I carry on, let me say this. Olympus is not a peaceful place where the Gods reign in harmony. There are factions who would love to see the demise of Zeus and his siblings and take over. Zeus realised he was becoming vulnerable and in the event of a couple of thousand of his subjects arming themselves during a public gathering he and his siblings, in spite of their power, would be in deep shit. He sent me on a mission to look for a solution.\n\n\"I found it when Vespasian started to build the Colosseum. After it was completed under Titus in 80 AD we watched it for a while in operation and decided that, with a few modifications, it would suit his purposes. The underground facilities weren't needed, neither were the eighty entrances. We whittled it down to ten. \n\n\n\"At the time there were about ten thousand Gods on Olympus and since the Colosseum could accommodate five times that number it left room for expansion. Zeus threw a circle around the structure that insured God powers would not work inside, except for the spot where he and his siblings sat. That meant that during those meetings there were only six effective Gods on Olympus. It also meant the Gods could not teleport into the structure or hex themselves weapons.\n\n\"The entrances were warded so no one could take weapons inside. Zeus and his party were safe. Soon it will not be big enough. You can see why Zeus wants to sanitise Olympus. It will solve the problem once and for all and we will have a much better society.\"\n\n\"How often do you have these get-togethers?\" I was curious.\n\n\"Twice a year. They are more a social event than anything else these days. The next one is in three months. Of course, Zeus can schedule a special meeting any time he so chooses.\"\n\n\"Let's go there now, I need to see this for myself.\"\n\nI had seen the Colosseum in Rome, but nothing had prepared me to see it in pristine condition. What a magnificent structure. It was miles away from where the Gods lived in a valley surrounded by forests. It was also deserted.\"\n\n\"Why is no one here?\" I asked.\n\n\"No reason,\" said Hermes. \"It needs no maintenance.\"\n\nWe spent the next four hours having a good look, especially at the entrances.\n\n\"This is exactly what we need,\" I declared after we got back to my place. \"We simply put our tunnels into the entrances and block any gaps so everyone has to walk the tunnels to get inside. Will they all come?\"\n\n\"No one dares to stay away from these gatherings. Zeus would have their hide if anyone refused.\"\n\nI called the tech boys and told them what I had in mind. They all agreed it would work.\n\n\"Do you need any help?\"\n\n\"No, said Gadeirus, we have plenty of time to get everything done. It would be nice though if Marge could give us a hand. She is very good at camouflage. They'll never notice something has changed if she puts the final touches on it.\"\n\n\"Try to keep me away,\" said Marge. \"I've already got lots of ideas.\"\n\nI went to see Zeus to tell him what we were doing. He was overjoyed at the simple solution.\n\nI spent the night on Olympus.\n\nIn Hera's bed.\n\n***\n\nThe next few weeks went quickly. The boys had done their job. Everything was ready. Zeus and his brothers came to visit every week, ostensibly for a progress report, though they seemed more interested in the banquets and the parties in the nookie room afterwards. Catsville was growing. The population was now two thousand. The Horny Tom had been extended twice, but even that was not enough. A second pub was built, predictably called Pussy Parlour. Needless to say the brewery was working flat out. Then, the big day arrived.\n\nI did not attend. My presence there would have raised too may eyebrows. I didn't miss much. After all the excitement of the preparation the event itself was an anticlimax.\n\nThe Gods went through the tunnels as expected and didn't realise what had happened to them until they were inside. There was much joy. They celebrated long into the night and finished off with a monstrous orgy. Olympus was free of violence and greed.\n\nThings would now get better on Earth since there were no more Gods stirring up trouble. Cleaning up Earth would take a long time. There was no quick solution as there had been on Olympus. The Gods would steer the planet towards more compassionate governments and religions to prepare the ground for intervention. It would take a long time, centuries perhaps.\n\nI was sitting on my veranda, enjoying a beer when Hera turned up. She kissed me chastely and waved her hand.\n\nIn a moment I found myself in Zeus' throne room, dressed in Hermes' finery. Zeus sat on his throne, flanked by Clotho, Lachesis and Atropos on his right and Kia on his left. In front of him, on a lower dais sat his siblings, Hermes and all the Gods who were living in the space station. I stood before them, not knowing what was going on. Strangely enough I was unafraid and calm, the result of my tunnel walk perhaps.\n\n\"We have decided the time is right, my boy,\" said Zeus. \"You should be one of us and take your rightful place on Olympus. Today you will become a God, if you wish.\"\n\nThat took my breath away for a moment. A torrent of thoughts went through my head.\n\n\"You need to accept,\" prompted Zeus.\n\n\"I am touched. This is a great honour,\" I said after a pause. \"There is nothing I would like more than to spend eternity amongst those I love, but I need to decline. My destiny lies elsewhere. The powers guiding me are not of Olympus. I have been given a great legacy and a people to look after. My place is with them. I do not know where that will take me, but go with it I must. I will always love you and I hope I will still be welcome here after today. Forgive me.\"\n\n\"Lachesis told me you would do this,\" said Zeus. \"There is nothing to forgive. You'll always be welcome amongst us. I wish you well.\"\n\n\"Thank you all,\" I said. \"I need to go now, I need to be alone.\"\n\nI bowed to Zeus and the others and ported home.\n\nI was just about to go inside when Bruce turned up, a can in hand, the others in tow.\n\n\"What you need, Mate, is a drink, not solitude. We told Zeus we wanted to go wherever you are headed. He understood. None of us wants to go back to Olympus, even if it's a nice place now.\"\n\n\"Thanks, Guys,\" I said. \"I hope you know what you're doing.\"\n\n\"Of course we don't, you idiot. That's the beauty of it.\"\n\nThere was laughter. The awkwardness of the moment had passed. We got into the drinks.\n\n\n\n\n\nEpilogue\n\n\n\n\nI was on my own, sitting on that marble bench inside my olive grove when Kia turned up. She hopped on the bench and gave me a lick across the face. Her greeting.\n\nI gave her some scratchies and was just about to go to my cabin to get some cherries for her when she stopped me.\n\n\"It's not necessary,\" she said. \"There are things I have to tell you. You have just passed your greatest test.\"\n\n\"What test?\"\n\n\"Had you accepted your godhood none of you would have been able to come back here. The race of beings you call the Ancients threw that temptation your way. They had to be sure you are worthy of their legacy.\"\n\n\"Are you one of them, Kia?\"\n\n\"No. They are so far ahead of me, I can't even imagine what they have become.\"\n\n\"What is your role in this then?\"\n\n\"Let me tell it my way.\n\n\"I sent Lil to you and Bruce and then Marge. At the time I thought it was my idea, because I could see it was required. The Gods on Olympus needed new ideas, something to shake them out of their apathy. Zeus needed shaking up in a big way. I should know, I had been with him for a thousand years and had watched his decline.\n\n\"You seemed to be just right for the job. Zeus' vulnerable spot has always been his dick. You homed right in on this. When I heard Zeus laughing for the first time in centuries within a minute of meeting you, I knew I had done the right thing.\n\n\"Then you did something totally unexpected. You found a back door into Olympus and an entry into other universes. When I saw the magnitude of what you got your hands on I suspected for the first time I may have been guided myself. As time went by this suspicion became a certainty.\n\n\"Let me tell you that I never planted ideas into your head, I just made some of the Gods a bit more accommodating, if you wish. I can see now why you had to act on your own.\n\n\"A short time ago the Ancients contacted me directly. They see in you a worthy successor. There are three things they are especially impressed with. The first was the way you handled Hades. Not only did you not shake in your boots when he threatened to destroy you, you stood up to him and actually challenged him. \n\n\"Even Hades could see that this was an act of true courage and not bravado. That's why he gave in, not because you showed him Lachesis' token. That is also why he walked the tunnel with you.\n\n\"The second act was the way you handled the plight the Blueys found themselves in. You went out of your way to help them and you are still there for them, trying to make their life more pleasant.\n\n\"The third, and most important part, was when you declined to become a God. They know now that it is not power you are after. They know you genuinely care and want to help.\n\n\"They asked me to tell you that the road ahead for you is a difficult one. The machines that control Olympus and Earth will find out what you have done. They will feel threatened and mobilise against you. It's part of their programming. You will have two decades of peace, by then you must be ready for them.\n\n\"They gave me the algorithm that will unlock most of Endora. I have already fed it to Frank. The only part that will stay inaccessible for now is their military technology. They wish you well. That is all they told me.\"\n\n\"And you, Kia? Will you still be around after today.\"\n\n\"I'll be around. I love you.\" Kia gave me a lick across the face and dematerialised.\n\n\"Alec, Frank wants to see you in his office,\" the voice of Endora came over the speakers.\n\n\"Tell him I'll be with him shortly.\"\n\nI went into my cabin and took a beer from the fridge. I drank my beer, threw the can into the garbage and ported to Frank to meet destiny.\n"
    ],
    "authorname": "Talemaster",
    "tags": [
        "greek gods",
        "gods",
        "olympus"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/a-god-called-bruce-pt-05"
}