{
    "title": "Mason Ch. 10",
    "pages": [
        "Toni felt Mason looking at her and looked back at him. Mason smiled at her and turned his attention back to Jamie and the pizza bread. \n\n\"So what does your mom like on her pizza?\" Mason asked.\n\n\"Pineapple and pepperoni and ham and cheese.\" Jamie replied.\n\n\"No peppers?\" Mason asked.\n\n\"No peppers, she says that they're yucky.\" Jamie replied.\n\n\"Onions?\" \n\n\"She likes onions but she doesn't like those fish things.\" Jamie replied.\n\n\"Those fish things are called anchovies and I happen to agree with her on that.\" Mason said, \"what do you like on your pizza?\"\n\n\"Cheese.\"\n\n\"That's all?\" Mason asked.\n\n\"Yup. That other stuff is yucky.\" Jamie said as he sprinkled cheese over the sauce that Mason had already put on the bread.\n\nMason laughed and then wondered if it would be cheating if he pumped Jamie for information regarding Toni's likes and dislikes. It would be cheating he decided and didn't ask any questions, he left Jamie in charge of calling them when the oven timer went off so he could start unloading the truck while the pizza bread baked. Jamie perched himself on a chair quite pleased to be given such an important duty.\n\nToni and her parents had already begun to unload the smaller items while he and Jamie were putting the pizzas together. Ben and Mason carried in the heavier pieces with Mason making the appropriate comments about how much things weighed when to him they weighed nothing. After carrying in the second heavy item, Mason noticed that Ben was breathing quite heavily and called a time out.\n\n\"We can get one more thing in can't we?\" Ben asked.\n\n\"I think that the pizza is about done, so it's a good time for a break.\" Mason said.\n\nJamie was on his way out to get them when they walked in; the condo was filled with the smell of fresh baked pizza bread making everyone comment about how hungry they were.\n\n\"This is way better than mom's pizza!\" Jamie quipped as he took another bite of his pizza bread.\n\n\"That's because my pizza bread isn't home made.\" Toni replied, \"but I do agree that this is delicious.\" she added.\n\n\"It sure is.\" Ben agreed. \"Thank you for dinner and for volunteering to help us unload the truck.\"\n\n\"Anytime, I wasn't doing anything tonight anyway.\" Mason replied. \"Toni, when are you moving in?\" Mason asked.\n\n\"Next week, I took next week off so that we could get settled in.\" Toni replied.\n\n\"I'd be glad to help.\" Mason offered.\n\n\"Thanks but unlike my parents, I'm having the movers unload the truck for me.\"\n\n\"We saved money by unloading the truck ourselves.\" Ben said in response.\n\n\"True, but now you have to take the truck back whereas if you had let them do it, they could have taken the truck back with them.\" Toni replied.\n\nMason saw an opportunity.\n\n\"Why don't I take the truck back for you? Toni can follow me in my car or her car if she isn't comfortable with driving mine.\" Mason suggested.\n\n\"We can't ask you to do that!\" Barbara said, \"You've already gone far above and beyond the call of duty.\"\n\n\"I really don't mind, all I was going to do this evening was play scrabble against the computer and read. Mason replied. \"What do you think Toni?\" he asked.\n\n\"Sure, we can take the truck back but I drive my own car.\" Toni replied.\n\n\"Can I go too?\" Jamie asked.\n\n\"No baby, it's already going to be late by the time we get home.\" Toni said, \"But you could help gramma and grampa start to unpack until we get back.\" Toni said when she saw the disappointed look on Jamie's face.\n\n\"That's a good idea.\" Barbara said, \"and you can start decorating your room too.\" she added.\n\nJamie was somewhat appeased but not entirely, he hated missing out on things and he really liked Dr. Mason.\n\nThe truck was unloaded two hours later with Mason doing most of the heavy lifting.\n\n\"You lift weights or something?\" Ben asked as he watched Mason move a dresser from the truck.\n\n\"I lift a little.\" Mason replied dismissively. \n\nAs the truck was being unloaded, Toni and Barbara cleaned up the kitchen. Barbara hadn't missed the way that Mason paid attention to Toni and Jamie both. She couldn't help herself, she had to say something.\n\n\"He's a very nice man.\"\n\n\"Yes, he is.\" Toni agreed and hoped that her mother would end the conversation there.\n\n\"Reminds me of James in some ways.\" Barbara said and then clamped her mouth shut. She realized that she shouldn't have said anything.\n\n\"What time do you want to go shopping for Jamie's bed and dresser?\" Toni asked completely changing the subject.\n\n\"Is ten too early for you? I wanted to look at some material for drapes while we were out.\" Barbara replied grateful for the change in subject and that Toni didn't seem to be upset about her comment.\n\n\"Ten is good; I wanted to make a few stops myself. James' parents are coming into town tomorrow night; maybe we could go out for dinner or something.\" Toni said.\n\n\"Sounds good, I'll call Gina while you and Mason take the truck back. Any preference on where we go?\"\n\n\"Just so its child friendly, I don't care.\" Toni replied.\n\nBarbara hesitated and then said, \"Maybe Mason would like to come, we should take him to dinner as a way of thanking him for all of his help.\" she added.\n\n\"Mom, I don't know and he might be uncomfortable around people that he doesn't really know.\" Toni replied.\n\nBarbara had the sense not to push anymore, \"It was just a thought.\" she said and closed the subject. She worried for Toni, she was afraid that Toni would be too afraid to love again after losing James but she still had a very good feeling about Mason, he was good for Toni and Jamie. \n\n\"The truck's unloaded.\" Ben said with a smile. \"As thanks I invited Mason to dinner with us tomorrow night.\" he added.\n\nMason watched Toni's reaction, there was a brief flash of anxiety and then it was gone. She was feeling something and she either didn't like it, was afraid of it or both and he wondered if it was the bond working. \n\n\"James' parents are coming into town; we're having dinner with them.\" Toni said.\n\n\"So what? The more the merrier.\" Ben said initially not understanding what the problem was.\n\n\"Look, it's fine; we'll do dinner another time.\" Mason said much to Toni's relief.\n\nOnce again Barbara couldn't leave well enough alone.\n\n\"They've met Mason before so I don't see a problem with him joining us.\" she said.\n\n\"Barbara...\" Mason started to say.\n\n\"We'll know the time and place by the time you get back from delivering the truck.\" Barbara said in her 'don't argue with me voice'.\n\n*******\n\nMason checked the rearview mirror of the truck often to make sure that Toni was still behind him. Both of her parents seemed to realize something that Toni hadn't, he was beginning to care for her. Not just care about her, but care for her and Jamie. At some point the was going to have to start thinking about how he was going to tell her about Katrina but that was going to be easy in comparison to telling her about what he was. He decided to call Ethan for help when the time came for that revelation. The irony of having to ask Ethan for help wasn't lost on him, theirs was now a solid friendship now that Katrina wasn't between them.\n\nThe other issue was when he was going to tell her that he bought the condo next to hers. After thinking about it for a few minutes, he decided that he wouldn't physically move in until their relationship was further along. He didn't want to accidentally run into her as she came or left her condo, for the time being he would stay at his house.\n\nGoing to dinner with her, her parents and the Jacobson's was going to be interesting. He knew from the brief inter action that he had with Gina, James' mother that she had blamed Toni for not saving James. What he didn't know was whether she still felt that way and if she would be angry if she thought that Toni had moved on.\n\nToni had her own thoughts as she followed the truck that Mason was driving. She liked him and not necessarily in the romantic sense but he was calming in much the same way that James had been. They were two completely different men she knew and understood that, but she had seen some of the same similarities that her mother had seen and that was why she didn't comment at her mother's statement. But there were major differences too, James was playful- she had often referred to him as her big kid but Mason was more reserved, his sense of humor running more to the dry side whereas James thought that the movie 'Dumb and Dumber' was the greatest movie ever made, Mason would probably consider it stupid just as she did.\n\nToni was honest with herself, she was anxious about Mason going to dinner with them but her mother had made it impossible for him to back out. It wasn't so much that he was going; it was more what Gina would think. Gina would jump to the wrong conclusion and think that Toni was dating already although they were well past the two and a half year mark of James' death. Toni had a suspicion that as far as Gina was concerned, she should never move on or remarry even if James had released her to do so. \"Why am I even thinking about this?\" she muttered to herself. \"It's only dinner.\" she added as she pulled in behind the truck when Mason parked it.\n\nThe drive back was quiet with very little conversation until Mason decided to give Toni an out as far as the upcoming dinner was concerned.\n\n\"I could call and cancel.\" he said looking over at her.\n\n\"Oh no you don't! My mother will accuse me of telling you to do it.\" Toni replied. \"It's fine really.\" she added.\n\n\"What is it about me coming to dinner with you that makes you so nervous?\" Mason asked.\n\n\"Can I be honest with you?\" Toni asked.\n\n\"Please.\" Mason replied. \n\n\"Gina, James' mother initially didn't like me because of the obvious differences in our skin color. Over time she adapted but still thought that I was after James' money which wasn't true, if it had been, we wouldn't have gone through three years of breakups and reconciliations before we got married. At any rate, when James died, she blamed me; she wanted to know why I couldn't save him a second time.\" Toni paused for a moment.\n\n\"The fact is it was a question that I asked myself everyday for months. What I'm getting at is this, she'll jump to the wrong conclusion and think that I'm looking to replace James with someone else with money and that I'm betraying him.\"\n\nMason gave what Toni said some thought, \"Toni, even if you found someone else, James is irreplaceable, you will always love him and I hope that whoever the lucky man is will understand that and not ask you to forget James or what you had together. As far as tomorrow night, goes, Gina would feel the same no matter who went to dinner with you but I stand by my offer to cancel.\"\n\nToni actually gave it some serious thought and decided against it. What would happen if she met someone? Would she turn them away just because Gina would be upset? \n\n\"No, I would like for you to come, it's like my dad said; you've helped us so much. Which reminds me, have you cashed that check yet?\"\n\n\"As a matter of fact I have.\" Mason replied, \"And I've already donated it to the veteran's fund at the VA hospital. As per the terms of our agreement, I believe that we-meaning you, Jamie and I have a date on Saturday night.\"\n\n******\n\nJamie was asleep on the sofa when they got back to her parent's condo.\n\n\"Leave him here for tonight.\" Barbara said. \"Just bring him clean clothes in the morning when you come.\" she added.\n\n\"Are you sure?\" Toni asked.\n\n\"I'm sure.\" Barbara said. \"I also talked to Gina and they're up for dinner and Mason is more than welcome to come too. There's a new sea food place that they heard about and want to try, is that alright with the two of you?\"\n\n\"Fine by me.\" Toni said looking up at Mason for his opinion.\n\n\"Sounds good, is that one by the pier?\" he asked. \"If it is, I've been looking for a reason to go myself.\" he added.\n\n\"I think that's the one, is six alright? Toni and I should be done with our shopping by two or three.\" Barbara said.\n\n\"Six is perfect.\" Mason said. He really didn't care where they went although he really did want to try out the new restaurant.\n\n\"Ok Mom, I'm going home and I'll be back around nine-thirty with clean clothes for Jamie. As a matter of fact, I'll just pack a suitcase so that he has clothes and things here.\" Toni said.\n\nMason walked her to her car after she kissed Jamie goodnight.\n\n\"It's early by grown-up standards; could I interest you in a drink?\" Mason asked.\n\nToni wanted to say no but felt like it would be a mistake so she said yes. Neither she nor Mason thought about the rumor mill, as far as they were concerned, they were off the clock and could do as they pleased and really, what was there to tell? \n\nMason followed Toni to her house and then they took his car to a small bar that looked relatively empty. Mason went in first to clear a path just in case the place was fuller than it appeared. As soon as he spotted an empty booth he headed toward it with Toni following close behind.\n\nThey hadn't been sitting long when Mason heard his name.\n\n\"Fuck it.\" he thought as he saw Joyce making her way toward them followed by a man whom he assumed was her date. Of all of the places that he could have chosen he had to chose one that Joyce would be at. He looked over at Toni checking on her reaction, she was having the same thoughts.\n\n\"Mason! Toni!\" fancy seeing the both of you here.\" Joyce said as she sat down next to Mason. \"This is Chuck, my significant other.\" she said indicating the man still standing. \"Sit down, they don't mind sharing a booth with us do you?\" she asked.\n\nToni looked at Mason and shrugged her shoulders as if to say, \"your choice.\"\n\nMason was aware that if he said that they minded that Joyce would have the story all over the hospital before they got back to work. Actually, it really didn't matter she would still talk about seeing them together and the rumor mill would continue to be fed. He could have compelled them to leave but if he and Toni were to become a couple as he hoped then this was going to be a part of their everyday lives. If they were already a couple and wanted to be alone, he would have compelled Joyce to go away but realistically they wouldn't have come to a bar if they had in fact wanted to be alone.\n\n\"Of course you may join us.\" Mason said. \"Please, introduce us to your ma..., significant other.\" \n\n\"Oh it's alright; you can call him my man if you want.\" Joyce said. \"Chuck baby, this is my colleague and office partner Mason Donahue and the lovely lady with him is Dr. Toni Jacobson. She works at the same hospital that we do but in a different department.\"\n\n\"Nice to meet you.\" Chuck said with a nod of his head.\n\nAn hour later, Mason and Toni made their escape.\n\n\"I'm sorry about that, I had no idea that Joyce would be there.\" Mason said as they walked out.\n\n\"Don't worry about it.\" Toni said, \"We're already the topic of the rumor mill so what's one more rumor? She asked.\n\nMason took her home and walked her to the door. He really didn't like the idea of her being in the house alone but there was nothing that he could do about it.\n\n\"Make sure you lock up and set your security system.\" he admonished.\n\n\"Yes dad.\" Toni teased and then laughed. It felt good to tease and laugh she thought as Mason tried to give her a stern fatherly look. \"I'll see you tomorrow night at the restaurant.\" she said as she stepped inside.\n\nMason was going to ask about picking her and Jamie up but changed his mind. Toni was already worried about what Gina might think and if they arrived in the same car it would only cause more problems and there was no need to add to that anxiety.\n\n\"I'll see you tomorrow night at the restaurant.\" Mason said before walking away.\n\nToni shut the door, locked it and set the alarm. She kicked off her shoes and went to Jamie's room to pack his suitcase for his room at her parent's condo. She packed a few book and toys for the next day and went to her room. She had stopped thinking of it as hers and James room a few months ago just as she had stopped thinking of the house as theirs. It was just a house now but one that she couldn't and wouldn't ever sell, there were just too many memories.\n\nShe found herself restless and decided to take a hot bath to relax. Afterwards, she lay on the bed and played all of the discs that James had made for her including the last one. She had to be sure, that James was going to be alright with her being with someone else if she found someone. The more she thought about it, the less concerned with Gina's feelings she became. She was an adult and didn't have to explain anything to anyone unless she chose to and that was that.\n\nBy the time she finished the last disc, she knew that James would have wanted her to be with someone else. The issue for her now was what would happen if that person died, she meant it when she told her father that she couldn't go through that again. She would much rather remain alone than go through the grief and pain that she felt when James died, so maybe she shouldn't get involved with anyone. The problem was that it didn't feel like the right decision. There was no one, so why was she even thinking about this? She wondered as she turned off the television.\n\nMason went to his condo as opposed to going home. It was fully furnished and set up the way that he liked it. There were two units of blood thawed in in the fridge as he had requested, he poured both bags into a large glass and heated it in the microwave. \n\nHe opened the patio doors and stepped outside taking his drink with him, it was beautiful here he thought as he sipped the warmed blood. He looked over to his right at the empty patio that belonged to Toni and found that he missed her. He wasn't ready to say that he loved her but he did miss her. The bond was beginning to establish itself he realized and then wondered what Toni was feeling.\n\n******\n\nThe next day, Toni was at her parent's condo suitcase in hand. Jamie had already had breakfast and was waiting for his clean clothes before taking his bath, even as young as he was, he liked things done in a certain way and couldn't be convinced to take his bath since his mom was on the way.\n\n\"But gramma, what if she forgets something and has to go back home or she stops at the store?\" he asked.\n\nBarbara finally gave up and let him wait until Toni got there. Jamie greeted Toni with a hug and a kiss before taking off to the bathroom.\n\n\"Where's dad?\" Toni asked.\n\n\"He went for a walk, he said something about wanting to explore the place, he should be back any time now.\" Barbara said. \"Have you eaten this morning?\" \n\n\"I ate a bowl of cereal and some fruit so I'm fine.\" Toni replied.\n\nBen came in a few minutes later slightly out of breath, \"man am I out of shape!\" he exclaimed. \n\nToni and Barbara both looked at him and then at each other.\n\n\"Daddy sit down and mom call 911.\" Toni said as she led him to a chair.\n\n\"911? Why are you calling 911?\" Ben asked.\n\n\"You don't look so good and if you're fine, we'll be having dinner with James' parents as planned now shush a minute.\" Toni said as she took his pulse. She noted with relief that it was rapid but not weak and irregular as James' had been.\n\nBen protested the entire time that the EMTs evaluated him. \"I'm fine!\" he kept saying.\n\n\"Well sir, your blood pressure is 190/ 110 that don't sound good to me.\" the one EMT said.\n\n\"Daddy stop fussing, we're going to the hospital.\" Toni said firmly.\n\nJust then Jamie came out of the bathroom. \n\n\"Grampa?\" he asked.\n\n\"I'm fine, I promise.\" Ben said holding out a hand to Jamie.\n\nJamie didn't look convinced but nodded his head as he took Ben's hand. \n\n\"Baby, you ride with me so gramma can go with Grampa.\" Toni said as the EMTs helped Ben onto the stretcher.\n\n\"This is just plain embarrassing.\" Ben grumbled as he was strapped in.",
        "Three hours later, they were on their way home with prescriptions for cholesterol and blood pressure medications.\n\n\"Low fat, low salt, no added sugar, what's a man supposed to eat?\" Ben lamented.\n\n\"Oh daddy, you won't starve.\" Toni replied.\n\n\"Maybe not but I'm not starting this diet until tomorrow. I'll be damned if I'm going to watch the rest of you eat lobster with butter and not have any!\" Ben proclaimed and dared anyone to argue with him.\n\n*****\n\nToni dressed for dinner with a care that she hadn't used since before James died. \"I just want to look nice.\" she told herself as she went through her closet; she pulled out a lavender dress and then remembered what kind of place that they were going to. She put the dress back, took out a pair of dressy jeans and then looked through her tops, finally she settled on a deep red top hoping that it still fit.\n\n\"Jamie!\" she called from her room, \"are you ready to go?\"\n\n\"I'm ready!\" he called back.\n\nFortunately, both the jeans and top fit, if she gained another ten pounds she'd have to either go on a diet or buy new clothes she thought. The last thing that she did before leaving the room was to decide whether she should wear perfume or not. She decided not and then changed her mind, the question was which one. She knew that if it was James she'd wear 'Red Door' but it wasn't James and somehow it didn't seem right for her to wear his favorite perfume. \n\nToni stopped herself and reminded herself that this wasn't a date. It was dinner with family and Mason had been invited to go along but still...\n\nShe could almost hear James saying, \"wear that one sweetness.\" Toni whirled around with her heart pounding fully expecting to see James standing behind her. With a shaking hand, Toni picked up the bottle of 'Red Door' and sprayed it on her wrist and behind her ears. Somehow she knew that James was approving of her choice.\n\n******\n\nMason was nervous but not for himself, his case of nerves was for Toni and her comfort. He had dealt with women like Gina Jacobson before and he knew that she could make things difficult for Toni if she chose to do so, hopefully, their driving separately would take care of any issues.\n\nSince Eustace encouraged him to learn how to dress more casually, Mason found that he enjoyed wearing jeans and tee shirts but for tonight, he wore the jeans but forwent the tee shirt opting for a dress shirt without the tie and opened at the neck. He left his house at five-thirty wanting to be there before anyone else arrived; he wanted to get a reading on Gina and her husband who he happened to like.\n\nThe restaurant wasn't too busy because it was a weeknight so it was easy for Mason to find a place to sit unnoticed. Gina and her husband arrived first but didn't notice him; if they had Gina wouldn't have said the things that she did.\n\n\"I can't believe that she's bringing a man to dinner with us! The nerve of her with James being gone for such a short time.\" Gina said. \"According to Barb, he a doctor and you know what that means; it means that he has money! You don't think that she's gone through all of that money James left her do you?\" she asked her husband.\n\nFinally, her husband spoke up.\n\n\"Gina, shut up.\"\n\nGina gasped, in all of their years together; he had never spoken to her like that.\n\n\"I'm sick and tired of you bad mouthing her. James loved her end of story, she loved him end of story. James has been gone for almost three years now and if she found someone to spend her life with then good for her! James would have wanted her to and you know it. For the record, Toni was the best thing that could have happened to this family, so get a grip and shut up about it.\"\n\nMason watched as Gina clamped her mouth shut and turned away to look directly at him. He could tell by her expression that she was wondering just how much he heard but he gave her no clues. He didn't like her he decided but he did like her husband for standing up for Toni like he did.\n\n\"Dr. Donahue! When did you get here?\" Gina asked.\n\n\"I've been here for several minutes.\" Mason replied his expression giving nothing away.\n\n\"Hello Dr. Donahue, it's nice to see you again.\" Mr. Jacobson said as he extended his hand.\n\n\"Likewise and please call me Mason.\" he replied as he accepted the extended hand.\n\n\"Fine, you can call me Robert and this is my wife Gina.\"\n\n\"Yes, I remember, it's nice to see you again.\" Mason said politely but made no move to touch her in any way.\n\n\"It's nice to see you again too.\" Gina replied. She was still stung by the way that her husband had spoken to her and by the uncertainty of how much Mason had heard if anything of her comments.\n\nToni and her family arrived a few minutes later, Mason spoke to each of them and picked Jamie up for a hug.\n\n\"Are you taking good care of your mom?\" he asked.\n\n\"Yep.\" Jamie replied hugging Mason back.\n\n\"Good boy.\" Mason replied putting Jamie down. He didn't miss the squinty eyed glare that he got from Gina as he moved closer to Toni.\n\nRobert had the foresight to call ahead and reserved a table for them in one of the private rooms. Mason maneuvered himself so that he sat across from Toni; he wanted to be able to look at her when they talked. Jamie insisted on sitting between Mason and his grampa Robert. \n\nEvery once in a while Mason would feel Gina watching him, especially whenever he was talking to Toni , he tried to make sure that he was looking at Toni in a platonic way but it was becoming harder to do, it appeared as if the bond was in full force at least on his end, Toni was harder to read.\n\n\"So Mason, tell me.\" Gina said. \"As a psychiatrist, how long would you advise a woman who has just lost her husband to wait before becoming involved with someone else?\"\n\nThe entire table went silent. Toni stared at Gina in disbelief; it was obvious that Gina was talking about her.\n\n\"I would say that it is an individualized choice.\" Mason said, \"If the surviving partner has grieved as much as they feel that they needed to and felt ready to move on, then I don't see an issue. If the surviving partner is looking for a replacement to avoid being alone, then that is a different issue.\"\n\n\"Gina!\" Robert said trying to stop her.\n\n\"If something ever happened to Robert, I couldn't even begin think about being with anyone else.\" Gina said softly looking at Toni.\n\n\"Mom, could you take Jamie outside for a few minutes?\" Toni said as she stared at Gina.\n\nShe waited until Jamie was out of earshot before speaking to Gina.\n\n\"I cannot believe that you would do this here and in front of Jamie!\" Toni said.\n\n\"Me? I'm not the one bringing a man to dinner and don't try to tell me that you're just friends.\" Gina hissed.\n\n\"First of all, Mason and I work at the same hospital. He's given up some of his evenings off to help us get moved so this was a thank you dinner and even IF we were more than friends; I don't see how it's any of your business.\" Toni replied heatedly.\n\n\"James....\"\n\n\"Is dead! Toni exclaimed. He was my husband and the father to that little boy out there. I know that you miss him, so do we but let me tell you something, he wouldn't want you to do what you just did in front of Jamie. This is a conversation that shouldn't be happening let alone in a public place but since we're talking, let me tell you something else; James wants me to find someone to be happy with, he wants me to find someone who can be a father to Jamie.\"\n\n\"No, he wouldn't....\"\n\n\"He did.\" Toni interrupted. \"He left me several videos; the last one was of him telling me what I'm telling you now. If you don't believe me come to the house and I'll play it for you.\"\n\nMason watched and waited ready to intervene on Toni's behalf if she should need it but she was doing fine all by herself.\n\n\"I'm not hungry anymore, I'll see you later.\" Toni said and got up to leave.\n\n\"Toni, wait.\" Mason said. \"Sit for just a minute and let's see if we can salvage dinner.\"\n\nMason turned to Gina, \"I agree with Toni that this wasn't the time or place for this conversation, and I also agree with her that whatever she decides to do about being with someone else is none of your business. I am proposing that we drop the subject, eat our dinner and go our separate ways for the evening. If Toni wishes to discuss this any further, it will be in private. Toni? What do you think?\" Mason asked.\n\nToni hesitated and then agreed but this conversation was far from over. Ben went out to get Barbara and Jamie leaving Mason and Toni alone with Gina and Robert.\n\n\"Toni, I'm sorry.\" Robert said. \"I didn't know that she was going to say that.\" he added, speaking as though Gina wasn't there. \n\nGina started to speak. \n\n\"Gina shut up; you've caused enough trouble for one evening.\" Robert said giving her a cold glare.\n\nThat dinner had to be the longest dinner of Toni's life, the only one who seemed to be unbothered by the whole thing was Jamie. Toni could tell that her mother couldn't wait to get Gina alone, neither could she for that matter, she would address the issue within the next day or so and she changed her mind about showing Gina the disc. No one except her knew what was on the disc, it was James' last gift for her and she wasn't going to going to share it with anyone. If Gina asked about it, she would just tell her that she changed her mind and if Gina accused her of not having the disc, she would just tell her to go to hell.\n\nMason followed Toni home to be make sure that she and Jamie got in safely. When they got to the door, she invited him in for coffee. Mason watched as she put much more coffee than was needed in relation to the amount of water she was using but didn't say anything. Jamie had already gone to his room to watch movies leaving the two of them alone.\n\n\"Toni, I'm sorry if my going to dinner caused any problems.\" he said.\n\n\"It's not you; the same thing would have happened even if it had been the pope sitting there.\" Toni said as she poured the coffee into mugs.\n\nMason looked into the mug and groaned inwardly, he had the feeling that the coffee at the hospital was going to taste like heaven compared to this. He took a tentative taste, grimaced and decided to be honest.\n\n\"Toni, can I be really honest with you?\" he asked.\n\n\"The coffee taste like shit?\" she asked.\n\n\"That's actually putting it mildly.\" Mason said, \"Do you mind if I make it?\" \n\n\"Knock yourself out.\" Toni replied.\n\n*****\n\nGina sat in the car not speaking as Robert yelled at her.\n\n\"What in the hell was that?\" he asked. \"Just what in the fuck were you thinking?\"\n\nGina cringed; Robert only used language like that when he was angry.\n\n\"It's just not right.\" Gina said when Robert paused long enough for her to speak. \"James hasn't been gone for three years yet.\"\n\n\"And it's been three years of hell for her and you haven't helped. Don't think that I don't know that you thought that she didn't do everything possible to save James and don't think that I don't know that you never really trusted her even though you and Barbara have become friends although I daresay after tonight you might as well kiss that friendship good bye. If Toni wants to enter into another relationship or remarry then I say good for her and you stay the hell out of it.\"\n\nGina's night wasn't over; Barbara was waiting for them when they got home. Both Ben and Robert stood back and watched the dress down that Barbara gave Gina.\n\n\"You are one sneaky bitch, do you know that? Barbara asked her. \"All of this time, I thought that we understood each other enough to become friends but apparently not. I don't mind that you have issues but they're you're issues and no one else's. You're the only one that seems to have a problem with Toni meeting and marrying someone else and I want to know why you felt so led to bring the subject up in a public place.\"\n\nGina couldn't say anything, what she did was wrong and she knew it when she did it, what she wasn't expecting was the backlash from it. She realized that Robert was right; she had just lost one of the best friends that she ever had and she wasn't sure that she could repair the damage.\n\n\"Barbara, I'm sorry. It's just that I still miss him and whenever I see Toni, I think of him and if she's with someone else, she's not only betraying him but me too and when I saw her with that man, I just got angry.\"\n\n\"Gina, we all miss James and we loved him like a son but you can't make everyone else miserable because you are. I think that you know that James would want Toni to be happy just like he wants all of us to be happy. I'm going to chalk tonight up as being due to a mother's grief but I swear to god, if you ever do anything like this again, I'll forget my oath not to cause undue pain and I'll kick your ass and that was your one and only warning.\"\n\nBarbara turned around and left Gina standing there with her mouth open. Robert, Barbara and Ben exchanged words for several minutes with Robert looking back at Gina several times. When they were finally gone, Robert walked past Gina without speaking to her.\n\n*****\n\n\"Oh my god!\" Toni exclaimed, \"This is so much better than what I made.\" \n\n\"Toni, I hate to break it to you, but the coffee at the hospital is better than what you make.\" Mason said teasing her.\n\n\"Are you going to show Gina the disc?\" Mason asked.\n\n\"No and to be honest, I don't care if she believes me or not. That disc was James' last gift to me and I'm not sharing it with anyone.\" Toni said adamantly.\n\n\"Nor should you have to.\" Mason said.\n\nJamie came out of his room dressed in his superman pajamas, \"Dr. Mason, will you read to me?\"\n\nBefore Toni could say anything, Mason was standing up and walking toward Jamie.\n\n\"I would like that.\" Mason said, \"But how about you read to me?\"\n\n\"I don't read too well.\" Jamie replied.\n\n\"That's alright; I'll help you with the words that you don't know.\" Mason assured him.\n\nToni watched as Mason and Jamie went to the living room where Jamie had already picked out a book. She cleaned up the coffee mugs and put them in the dishwasher before going out to the living room. Jamie sat next to Mason holding the book with Mason's arm around him as if it belonged there. \n\nShe sat on the chair and listened as Jamie sounded out the hard words with Mason's gentle coaching, after Jamie read the story through once, Mason reread it making sure to pronounce the hard words slowly and succinctly. \n\n\"Ok kiddo bedtime.\" Toni said her tone telling him not to argue.\n\n\"Good night Jamie.\" Mason said. \"I'll see you Saturday night.\" \n\n\"Night Dr. Mason thanks for reading with me.\" Jamie said as he went to his room followed by Toni.\n\n\"I like Dr. Mason.\" Jamie said as Toni tucked him in. \n\n\"I know you do.\" Toni replied.\n\n\"Do you like him?\" Jamie asked.\n\n\"Yes I do now no more questions.\" Toni said as she kissed him good night.\n\n\"He's a good boy.\" Mason said when Toni came back into the living room.\n\n\"Yeah, he is. I'm lucky to have him.\" Toni replied.\n\n\"I'd better get going.\" Mason said standing. I'll see you at work tomorrow night.\" \n\nToni walked Mason to the door, \"Thank you for reading to him, he enjoyed it.\"\n\n\"So did I.\" Mason replied. Before he walked out of the door, he bent and kissed Toni on the cheek and walked away before she could say anything. "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampire",
        "bbw",
        "bond"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/mason-ch-10"
}