{
    "title": "Bliss Ch. 06",
    "pages": [
        "\"Do you know what this is?\" Malcolm asked, interrupting me. It was a Friday morning in late July, and I was sitting in a chair in front of his desk, going over the lost ad contracts for the last quarter. I had come in to invite him to dinner with my family \u2013 my brother and his family were going to be visiting from Portland \u2013 but got a bit sidetracked. (Ok, I lost my nerve. It happens.) I looked up to find him holding up an oddly shaped pink rod, about an inch or so long, with a wire coming out one end and two half-moon shaped flanges on either side.\n\n\"No,\" I said, shaking my head. \"What is it?\"\n\n\"It's called an 'Oyster'.\" He held it out to me and I took it. The pink plastic was soft and smooth, it felt almost greasy. \n\n\"New client?\" I asked, handing it back to him.\n\n\"No.\" He looked at me and gave me his slow and wicked smile. Knowing what that smile usually meant, I felt my stomach clench involuntarily at it in a Pavlovian response- one of many he was capable of producing in me. \n\n\"What is it?\" I asked again, my voice barely above a whisper. \n\n\"Come here, poppit,\" he said, leaning back in his big leather chair and motioning me to him. \n\n\"Luna could come in at any moment, Malcolm,\" I said in a half-hearted protest as I stood up and moved to stand in front of him. \n\nHe smiled and reached past my left hip, buzzing his assistant.\n\n\"Yes, Mr. White?\" Luna asked, her voice soft but nasal. \n\n\"Please see to it that Ms Williams and I are not disturbed, Luna.\"\n\n\"Yes, Mr. White.\"\n\n\"Thank you.\" Malcolm leaned back in his chair again and looked up at me. \"Any further protests?\" He grabbed the hem of my skirt and started raising it up.\n\n\"We're at work,\" I said softly as Malcolm continued to raise my skirt, gathering the fabric as he went.\n\n\"I am well aware of where we are,\" he said, tucking the front of my skirt in to my waistband. He caressed me over my panties, running his hand down over my crotch and between my legs.\n\n\"We agreed...\" I began. \n\n\"I made no promises,\" he said, caressing my thigh and smiling at me. \"Spread your legs a bit.\"\n\nI obeyed, as I always did, even at work. I had laid down the ground rule of keeping our involvement out of the office, but thus far it had been more of a guideline. It seemed one of Malcolm's favorite past times was teasing me, and one of his favorite ways of teasing me was getting me turned on just to the point of distraction and then backing off. He never impeded my ability to do my job, but he came amazingly close to it. Every time.\n\nI gasped a bit as he reached inside my panties, placing the pink rod against my lips. I felt his fingers brush along my skin and smiled, my eyes on his. He removed his hand and I felt him smooth my panties down, pressing that pink thing in to me. \n\n\"This is made by a very reputable English company,\" Malcolm said, smiling at me with pride. \n\n\"It's from England?\"\n\n\"Yes.\"\n\n\"Did you wash it after you last used it?\" I teased, smiling at him. After I had refused to let him insert a plug in my ass on the grounds that I didn't know where it had been before me, he had explained to me that every implement he used to touch my body was brand new. He had, in fact, indignantly sworn it, and I had enjoyed teasing him about it ever since. \n\n\"Keep making those accusations and I will be forced to punish you,\" he said, smiling at me darkly, looking into my eyes. There was nothing more I wanted at that moment than to be punished. Nothing. I was so tempted to tease him more, but time and place restricted me. He took a small white gadget, about the size of an old pager, and clipped it to the waistband of my garter before attaching the cord from the thing he placed in my panties. He untucked my skirt and smoothed it over my thighs before rising from his chair. There was a slight bulge at my waist, but it was covered by my blouse.\n\n\"Malcolm?\" \n\n\"Do you know what this is?\" he asked, standing in front of me and holding up his keyring with his car fob in his hand.\n\n\"Your car fob?\"\n\n\"No. This is my car fob,\" he said, turning his hand to show me the remote for his car against his knuckles. \"This is far more valuable,\" he said, showing me what was in his palm again. \n\n\"What is it?\" I asked, feeling a bit breathless.\n\n\"This is my poppit fob,\" he said. He pressed a button and the thing in my panties came to life, vibrating gently against my pussy lips, the sensation traveling to my clit.\n\n\"Malcolm,\" I sighed, reaching out and grabbing his left arm. \"Please...\"\n\nHe grabbed a fistful of my hair with his right hand, pulling my head back as he pulled me against him. I moaned (I couldn't help it. I love it when he grabs me by my hair.), and he shushed me, that wicked smile back on his face. I closed my eyes, concentrating on breathing and trying to ignore the maddening vibration in my panties.\n\n\"It's only on one, poppit. Let's see how you react to two.\" \n\n\"Please, no.\" I whispered as the vibrations increased. It wasn't unbearable. In fact, I didn't even think it would be enough to make me orgasm. It would just keep me wet and wanting all day.\n\n\"Look at me, poppit. Open your eyes,\" I obeyed, looking up at Malcolm. He was watching my face intently, his expression serious but detached, almost clinical. \"Let's try three.\"\n\n\"Malcolm,\" I moaned, my right hand tightening on his arm as the vibrations increased again. The evil little vibrator was sending waves of sensation against my clit, making it swell as my pussy got wetter, but still stopped short of making me come. \n\nIt was maddening. \n\n\"You like three, poppit?\" Malcolm pulled my hair tighter, forcing me to arch my back against him. \"Should I leave it at three all day?\"\n\n\"No. Please, Malcolm. Please don't. People will hear it,\" I whined.\n\n\"No they won't,\" he chuckled. \"They won't hear a thing. The Oyster is practically silent.\"\n\n\"No,\" I whimpered. \n\n\"Hush.... Just listen,\" Malcolm said, bending down to put his lips next to my ear. I closed my eyes and concentrated on listening. I strained my ears, and while I could feel the vibrations, which made me think I could hear it, I couldn't actually hear anything at all. \"No one will hear a thing, poppit. Unless you make noise.\" \n\n\"Oh god, no...\"\n\n\"Tell me...how does four feel?\" \n\nThe malignant little toy began to thrum frantically against my lips, sending its pulsing sensations right through me. It felt good, but it still wasn't enough to get me off, and it ended up making my pussy ache for Malcolm, desperate to feel him inside me. I raised my left hand to Malcolm's shoulder and closed my eyes, trying to calm myself and control my breathing.\n\n\"Do you like four?\" Malcolm asked, his lips brushing my ear. I shook my head, not quite trusting myself to speak. \"Liar,\" he hissed, his tongue tracing along my earlobe. The vibrations dropped suddenly, becoming almost imperceptible, and I gave a heavy shuddering sigh.\n\n\"Please stop,\" I whispered, looking into his deep green eyes. The vibrations jumped back up. \"It's going to make me crazy.\"\n\n\"Why?\" The vibrations lessened a bit again. I looked down at his hand and realized he was randomly pressing buttons. \n\n\"Oh god, I'm so wet,\" I sighed as the vibrator slowed again. \n\n\"That's the point.\" Right back up to four.\n\n\"Take me home and fuck me. Please. I can't stand it. I want you to bend me over and fuck me as hard as you can. Please.\" The sensations abated slightly as he took it down one level. \"Please.\"\n\n\"We can't. We have a meeting in 30 minutes, remember?\" He tasted my mouth, licking my lips lightly with his tongue as the torment between my legs increased again. I leaned against him and felt his hard cock against my hip. \n\n\"I don't care,\" I pleaded. \"Please. I need you to fuck me. Let's just go \u2013 anywhere \u2013 please. I need to feel your cock in me.\" The vibrations picked up yet again and I squeezed his shoulder harder. \"Oh god, Malcolm. Please. You can even fuck my ass. Please.\" He raised his eyebrows in surprise at my words; he had been hinting for weeks about having me anally, but he never pushed it, and under ordinary circumstances I certainly wouldn't bring it up. I'd never had anal sex and the idea scared the bejeezus out of me. \n\n\"I will remember that,\" he said quietly, turning the vibrator off. He kissed me softly on the corner of my mouth before moving his lips to my ear. \"And I will take you up on it soon enough.\"\n\nHe extricated himself from me and sat back down at his desk, leaning back in his chair to smile at me. I leaned against his desk and started to reach under my skirt to take out his new toy, but he stopped me with a shake of his head. \n\n\"You can go clean yourself up, but I want you to leave it in during the meeting.\"\n\n\"You can't be serious?\" He just looked at me levelly. \"But...I can't...\"\n\n\"You can and you will,\" he said, cutting me off. \"And you will keep it with you, and wear it when I tell you to.\" He grabbed my right hand with both of his and held it palm up. \n\n\"But...\" I began again, not even sure what I was going to say. It didn't matter if I had a speech prepared and memorized; Malcolm kissed my palm before tracing its lines with the tip of tongue, and I was lost. \n\n\"Do not disappoint me, Melody.\" He dropped my hand and sat back again.\n\n\"I won't,\" I whispered.\n\n\"Take a moment to collect yourself, and then I think you better visit the loo before the meeting?\"\n\n\"Right,\" I said, giving him a shaky smile. I gathered up my paperwork and stood at the door, my hand poised on the handle, taking a few deep breaths. I turned back towards him. \"Better?\" I asked.\n\nHe simply nodded at me. Funny, I can remember exactly how he looked at that moment. His suit was a dark charcoal, his shirt a gorgeous burgundy that made his eyes look even greener. There was a slight bulge in his suit pants, and he sat back with his left hand on the armrest of his leather chair, his right hand tapping a pen against his lips. He looked back at me with an odd look on his face, almost a surprised look, not smiling. He just looked so commanding, sexy; I wanted to kneel in front of him and just stare. \n\nI may not remember what I had for dinner last night, but I will remember how he looked that clear July day for the rest of my life.\n\nI walked out and handed the files to Luna, asking her to make sure they made it to the conference room as I had to use the restroom before the meeting. She took them and smiled without looking up at me, assuring me they would be there for the meeting. \n\nI made my way as quickly as possible to the bathroom, afraid others may be able to hear me squelch as I walked. I took the stall farthest from the door and carefully lowered my panties, the little pink demon nestled in the crotch. I sat and grabbed some paper to clean it off, picking it up and looking at it in near-wonder. It seemed so innocuous, so nondescript, if you didn't know what it was you would likely never guess. It was hard to believe something so unremarkable looking could cause so much internal mayhem. \n\nLeave it to Malcolm, I thought, dropping it in the crotch of my panties. I cleaned myself up best I could with only toilet paper, considering my options. Option one: I could take this off and suffer the punishment. The idea was incredibly tempting and I smiled at that, wondering what he would come up with as a punishment. I had a masochistic side of me that surprised me with its width and breadth; the first time the pain he lavished on me pushed me to orgasm left me shell-shocked and weeping in his arms, unable to stop for what seemed like hours. I eventually managed to maintain my composure when it happened again (and again and again, etc), accepting within my deepest understanding of myself that I can enjoy pain \u2013 his pain \u2013 and far from upsetting me, the realization made me happy. I remarked to him once, after he broke a crop over my thighs as I came, that my enjoyment of his 'punishments' may prove to be a premium on failure, that I may strive to be punished so he would again tie me up, tie me down, tie me over something and welt me. He just smiled at me and stroked my cheek. \n\nOption two: I could obey him, as I usually do, knowing that Malcolm was a very generous lover, and that there may be much to be gained from allowing him his fun today, knowing my reward for doing so could be tenfold tonight. And, given my nature and his understanding of it, my reward could very well include time spent cuffed, clamped and whipped. I shivered at the possibility. My decision made, I stood up and carefully re-dressed, reseating the little tormentor where Malcolm had originally had it. I flushed and left the stall to wash my hands. \n\nI looked up as I lathered my hands at the sink and stared at my reflection in the mirror. Every time I saw Tony he would comment on how different I looked, usually exclaiming how amazing I looked. And he was right, I did look different. I couldn't exactly put my finger on it, but it was there. Other people had noticed, too. Krissie kept asking me what I was doing and where I was going for my facials. Even Ian took notice, asking me if I was using this product or that product. I smiled at myself, wondering what they would say if I told them the reason I looked so different was because I was regularly bound and brought to orgasm repeatedly before being fucked absolutely stupid. Still, I thought, looking at myself in the mirror, with results like these, if it could be bottled and sold people would buy it. \n\nI smiled at that thought as I dried my hands. I wondered, as I made my way to the conference room, what that ad campaign would look like. I saw Alyssa talking to Ian and Malcolm just outside the conference room and smiled as I passed by them, always surprised at the height difference between the two men. I couldn't catch exactly what she was saying, just enough to know she was asking for help with something about the soda account. I paused on my way in, but the grouping gave me no notice and so I went and took my accustomed seat towards the head of the large table, making small talk with the others already seated and those who trickled in.\n\nAt long last Ian, Malcolm and Alyssa came in; Ian took his place at the head, and I watched out of the corner of my eye as Malcolm pulled Alyssa's chair out for her. She looked up at him when he did and smiled, batting her eyes a bit, but it was lost on him. His actions seemed perfunctory more than chivalrous. I smiled a bit smugly to myself at that, believing if it were my chair, it would be the opposite. \n\nIan droned on for forty minutes or so, giving updates on new accounts and possible leads before turning the meeting over to Malcolm. Malcolm went over the lost accounts, highlighting problems with the account management that may have contributed to them jumping ship, and pointing out ways to curtail any further losses. He was as brief as Ian was longwinded, but I couldn't concentrate on either of them. I was too focused on the little pink vibrator in my panties, too preoccupied with wondering when it would go off again. To say I was on the edge of my seat is an understatement. \n\nAs soon as Malcolm finished, he opened the floor up to any questions, and I felt that demonic little toy between my legs come to life again. I bit my tongue to keep from making any noise and kept my eyes on the folders directly in front of me. After a few questions from others, the meeting was over and everyone stood to leave. \n\nI got up, grabbing my folders as the vibrations between my legs increased, and made my way towards the door. I walked slowly, concentrating on appearing as normal as possible, walking as normal as possible (which is hard to do, really, as you never really think of how you walk when you're not concentrating on walking normal, so there's not much to compare it to), when suddenly that mean little vibe began thrumming even faster, and I dropped my folders on the ground. They exploded, the papers sprawling out across the carpet. I dropped to my knees to gather them up, closing my eyes a moment to try and collect myself.\n\n\"Let me help you, Melody,\" Malcolm said, quickly rising and moving around the table. The vibrator stilled as he squat down next to me. I started gathering papers and putting them on the table as quickly as possible \u2013 I would sort them later, I just wanted to get back to the sanctuary of my office. \n\n\"Feeling alright?\" Malcolm asked under his breath, smirking at me in that infinitely sexy way he has as he gathered a folder and leaned over me to place it on the table.\n\n\"You are a criminal,\" I whispered at him, my entire body flushed not only with his tormenting of it but also his nearness. I would have given anything at that moment to be alone with him. He just winked at me and handed me the stack of papers and folders in his hand before standing back up.\n\nI rose, gathering the papers from the table and joining them with the ones in my hands. Alyssa came around the table and stood next to Malcolm. \"What a mess, Melody,\" she said. \n\n\"Yeah,\" I sighed, smiling at her tiredly. \"I guess my mind was on something else.\"\n\n\"Are you alright?\" she asked, sliding herself closer to Malcolm. I watched the space between them disappear and gave an inward groan. Alyssa was tall. Alyssa was thin. Alyssa was so beautiful she was often mistaken for a model. And, worst of all, Alyssa was thirteen years my junior. \n\n\"Fine, really,\" I said with a sigh. \"I think I just need to get out of here. It's so stuffy.\" This was a lie. The conference room was so cool I was surprised I couldn't see my breath. I could see Malcolm looking at me closely for a brief moment, but kept my face down. \"Time to get back to work,\" I said, as cheerfully as possible, moving around them and walked quickly back to my office. \n\nI closed the door to my office and dropped the pile of papers and folders on my desk, heading for the window. I stood, looking out at Elliott Bay, thinking about Alyssa and her gravity-defying tits, how close they were to Malcolm. Every time I had glanced over to them during the meeting she was touching him or leaning in to him, openly flirting. I felt my fists clenching, and had to concentrate on relaxing them. \n\nIt's not that I was jealous, exactly. Well, no, I was jealous, but not of her. I had asked Malcolm, at the start of our...whatever...why he wasn't pursuing a much younger girl. Everything I had read or viewed about D/s and BDSM, without exception, had an older man/younger woman theme, with the men being called Daddy or Master and the women being called baby girl or kitten., referred to as a pet. It was one of the things that put me off, and very nearly caused me to walk away from what Malcolm offered me. But he assured me he was not interested in such a situation. He'd tried something like it before and it wasn't for him. (He didn't offer any details, and I certainly wasn't going to press the matter.) He didn't want a pet, he wanted a lover, and his simple statement was enough reassurance for me.\n\nI smiled at the memory of lying with Marcus, holding hands and talking quietly. I was beginning to wonder if just being lovers was going to be enough. A knock at my office door brought me back to the present. \n\n\"Come in,\" I said, not turning around. I knew who it would be.\n\n\"You seemed upset,\" he said, closing my door behind him. I turned to face him, noting his concern.\n\n\"I'm not upset, Malcolm.\"\n\n\"Are you not feeling well?\" He seemed unsure, which surprised me. He was never unsure. \"Was it the Oyster? Was it too much?\" he asked gently. \n\n\"I'm fine, it's fine. Really.\" I walked back to my desk and sat down. \"Don't you have a more...pressing appointment?\" I asked, grabbing the mess of documents and starting to sort them. It was a job I would normally ask Krissie to do, but I wanted some mindless, busy work time.\n\n\"Alyssa?\" Malcolm asked. I could sense him looking at me closely, but I wouldn't look up at him, afraid to give anything away by my facial expression. Instead I just shrugged, more fool me. ",
        "\"You're jealous,\" he said, stepping up to the front of my desk and placing his hands on it. I looked up at him, his expression fighting between incredulity and humor. \"Of Alyssa. I can't believe it.\"\n\n\"I'm not jealous of Alyssa,\" I said hotly. He raised an eyebrow but didn't speak. \"I'm not, Malcolm.\"\n\n\"Then what is it?\"\n\n\"I don't know if I can explain it without seeming childish.\"\n\n\"More than you already do?\" he teased.\n\n\"Thank you, Malcolm. I was feeling merely uneasy, but you managed to push that right up to embarrassed.\" I leaned back in my chair and looked up at him. \"What's your next trick?\"\n\n\"I am sorry, Melody, but I cannot believe you are jealous of Alyssa.\"\n\n\"I'm not jealous of Alyssa,\" I said. I got up and went back to the window, my back to him. \"I'm jealous of her freedom with you,\" I said, watching a coast guard patrol boat as it rode alongside a ferry. \n\n\"I beg your pardon?\"\n\n\"She can laugh and...and...flirt with you. Freely. In front of everyone. She can bat her eyes at you and lean in to you and tease you.\" I turned back to him, crossing my arms over my chest and shrugging. \"And I can't.\"\n\n\"This was what you wanted.\"\n\n\"I know.\"\n\n\"This was your bloody rule.\"\n\n\"I know.\" \n\nMalcolm came around my desk and stood next to me, looking out the window. \"Two things to keep in mind, Melody. A person cannot be tempted or teased by dangling something in front of them they don't want.\" I looked at him and he nodded. \"I'm not daff, just not interested.\" \n\n\"I wasn't implying -\"\n\n\"I know.\" He turned and looked at me, smiling. He grabbed my right arm above the elbow and gave it a gentle squeeze. I smiled back at him, knowing he understood made me feel a lot better.\n\n\"I do need to be going,\" he said, glancing at his watch. \"I will see you later.\" I nodded and he head for the door.\n\n\"Malcolm \u2013 wait. What was the second thing?\" I asked. \n\n\"Right, sorry,\" he said, turning back towards me, his hand on my door knob. \"I would gladly let everyone in the company know we were fucking. I could give a damn about their opinions.\" He winked at me and left, closing my office door behind him.\n\nI turned back to the window, feeling heartsick at his choice of words. I traced the wakes of the boats in the bay and chewed my lips, willing myself not to cry. It was foolish of me to pine after him like this. From the start \u2013 the very beginning \u2013 he had let me know whatever we had together was purely physical, just a passing enjoyment of each other, nothing more. I sighed and went back to my desk, turning my chair around to face the window.\n\nI thought back over the past couple of months with Malcolm. All the nights spent in his big bed, holding hands and talking softly to each other. It was \u2013 compared to what we were most likely doing earlier in the evening \u2013 almost obscenely sweet. And every time I spent the night with Malcolm, I would wake up with his arms around me or his legs tangled with mine, as if we had to keep contact with each other to ensure neither of us floated away. I thought on all the small considerations he always showed to me, like finding he stocked up on all my preferred brands of toiletries after that first weekend at his house or always having my favorite soda in the fridge. It was all those things and more \u2013 the looks, the caresses, the affection \u2013 that made me think we were both feeling more, that we were both falling. \n\nI turned back to my desk and sat with my head in my hands, elbows on the spread of papers. I felt confused. I kept thinking I should be at the very least hurt, if not downright angry, but I couldn't really justify that. Malcolm never lied to me. He never mislead me. When we went out to the movies or dinner or wherever, he didn't fawn over me or molest me. Hell, he didn't even hold my hand. But he was always attentive to me and only me, as if there was no where else in the galaxy he would like to be. Even after his rugby games and practices, with all the girls there just kind of hanging around and flirting with the players, he always ignored them and zeroed in on me. \n\nI looked over at the clock on my computer and saw it was just after noon. I picked up the phone and called Tony. Some things you just need your best friend for.\n\n\"We were just talking about you,\" he said when he answered.\n\n\"You're not telling Carl about the time the house fell on my sister again, are you Glynda?\" I joked, smiling. \n\n\"There are some secrets even I won't tell, you wicked thing.\"\n\n\"Such a gentleman.\" \n\n\"What's going on?\"\n\n\"What are you doing?\"\n\n\"When?\"\n\n\"Now.\"\n\n\"Now?\"\n\n\"Yeah, now.\"\n\n\"Nothing. Why?\"\n\n\"I need a big shoulder.\"\n\n\"Oh no \u2013 something happen with Malcolm?\"\n\n\"No....well, maybe. Not that something happened, really. I....just need to chat. Just you and me,\" I emphasized. I adored Carl, but I'd been best friends with Tony since I was 15, and I really wanted to talk to just him. \"I figure I'll cut out early and we can go hang out for a while.\"\n\n\"Sounds good. Just let me change and I can come downtown. I need to go to Sur la Table, anyway. I'll meet you at the market newsstand in about thirty minutes.\"\n\n\"Thanks. You're the best.\"\n\n\"This I know,\" he said, and hung up.\n\nI sent Malcolm a quick email \u2013\n\nFeeling a bit blah so took aft off. Will be up for game tomorrow.\n\n-M\n\n- then gathered the spread of papers and folders on my desk. I neatened the pile and picked them up, standing and going out to Krissie's desk. I passed off the unappetizing chore of re-sorting them to her with the reward of taking comp time as soon as she was done. She jumped at the offer to extend her weekend, more than happy to sort for half an hour if it meant she could get out and enjoy the warm sunshine. I emailed Ian to let him know I was cutting out a bit early and letting Krissie do the same before updating my calendar and out of office notice. Then I quickly gathered up my bag and left, wanting to be long gone before Malcolm and Alyssa were done with their little meeting. \n\nI walked out in to the clear July sun and head towards the market. It was a fine day and the middle of cruise season, so the market was packed with tourists taking pictures of the fish throwers and the giant brass piggy bank. I spied Tony looking at a copy of 'Out' and pushed my way to him.\n\n\"Thank god,\" he said, spying me behind a group of people, all wearing the same shirt and a name tag lanyard around their neck with the name of a cruise line on it. \"I hate the market in the summer,\" he said with a sniff.\n\n\"You hate the market all year,\" I said, smiling at him. \n\n\"It's just so bourgeois.\"\n\n\"God, Tony, you're such a snob.\"\n\n\"This I know. Come, let's push our way to Sur and then get something really greasy and bad for lunch.\" We linked arms and made our way through the main crush of people to the curb. \"Now, tell me what's got you upset,\" he said as we waited to cross.\n\nI recounted the happenings of the morning, speaking plainly, starting with Malcolm's new device to have fun and ending with me standing at my office window and trying not to cry. Tony was aware of the nature of my relationship with Malcolm, so the bit about the vibrator didn't faze him, although he did make a few choice comments. By the time we were in line at Sur I had finished and was waiting for his response.\n\n\"You know I absolutely adore you, Melly, but you really can be a fucking idiot,\" he said, looking at me closely.\n\n\"Thanks. Your sympathy is underwhelming.\"\n\n\"This is all your doing. Don't you realize that?\" He stepped up to the register and made his purchase, chatting about hollandaise sauce with the clerk for a moment. When he was done he grabbed my hand and led me outside. \n\n\"I know, I said keep it out of the office. Malcolm reminded me of that himself.\"\n\n\"Not that,\" Tony said, shaking his head at me. \"Come on, treat me to a big falafel platter and we'll talk then, okay?\"\n\n\"Sure,\" I said, allowing him to lead me to the Armenian take out on 1st Avenue. We ordered and took one of the two tables set up on the sidewalk, waiting for the food and not talking. The proprietor, a woman of about 100, brought our food to us and grabbed one of our hands in each of hers before bowing her head in prayer. Tony looked me, his face a perfect mask of surprise and I had to bite my cheek to keep from laughing. When she was done she dropped our hands and smiled at us, showing all four of her teeth proudly, and head back to her place behind the counter.\n\n\"That was seriously odd,\" I said, cutting in to my falafel to help cool them. \n\n\"I certainly hope you tipped her well, my dear.\"\n\n\"Oh?\" I said, taking a sip of my soda.\n\n\"Yeah. I hope that wasn't a curse.\"\n\n\"Live in fear.\"\n\nWe ate in quiet for a few moments. The falafel was delicious, as was the hummus and pita and schwarmer platter we shared. I thanked Tony for introducing me to the place. I had been by it a thousand times before but never even noticed it. It was now going to be one of my favorite and frequented places to eat, weird table service notwithstanding.\n\n\"Do you know why Malcolm is so stand-offish with you, Melly? Not just at work, but when you go out?\" Tony asked. I was happily munching away on some roasted chicken and hummus and didn't notice he had stopped eating. \n\n\"Not really, no. Sometimes I think it's because we have a sexual relationship. Everything else is secondary.\" I took a sip of my soda. \"But when we're together, just the two of us, it seems like there's more to it.\"\n\n\"There is more to it.\" I snorted at that, but didn't say anything. \"Do you remember the first time we went out to dinner together? We all met at Lola's?\" he continued. I nodded, picking at the falafel. \"We arrived before Malcolm, remember? Do you remember what happened when Malcolm walked up to us?\"\n\n\"He kissed my cheek?\" \n\n\"Only because you turned your face. He went to embrace you and kiss you and you got really stiff. As if you were uncomfortable being in public with him.\"\n\n\"No I didn't.\" I chewed my straw a bit, thinking. \"Did I?\"\n\n\"Yes. And he looked quite confused. I know we were.\"\n\n\"I didn't know I did that.\"\n\n\"To be quite honest, Mel, we got the impression you were ashamed,\" Tony said quietly.\n\n\"What? No.\" I sat stunned, thinking. \"Really? I mean, I've never been ashamed of him.\"\n\n\"I know that.\"\n\n\"Shit,\" I groaned, so much making sense now. \"Shit shit shit.\"\n\n\"Relax. It's not that bad. It's not like he isn't totally smitten with you.\"\n\n\"Oh really?\" \n\n\"He lights up every time he looks at you, Melly. Every time, without fail.\" I glanced at Tony, wanting to see his expression. He was looking at me seriously, \"It's the truth. You both do, really, but with him it's like...he's always so surprised you are there, like he thought you couldn't be real or would disappear; and when you smile at him it's as if he was waiting for something \u2013 some cue \u2013 to tell him to breathe and that was it.\"\n\n\"Really?\" The old woman came back and gathered our dishes, giving Tony and I approving nods for having cleared our plates.\n\n\"Yeah. I'm seriously surprised no one at the office has picked up on it yet.\"\n\n\"Hmmm...\"\n\n\"Now you just have to figure out how to backtrack a bit, rescind your ban on public displays of affection.\"\n\n\"Isn't that why you're here? To help me figure that out?\"\n\n\"Oh please. If I could do that, I would have been living happily ever after long before Carl came along, wouldn't I?\" \n\n\"True.\" Tony was never known for his long-term relationships. Every man he met was THE ONE for about a month or two, then he turned in to HE WHO SHALL NOT BE NAMED. Until Carl \u2013 who seemed to be able to cut through Tony's melodramatic bullshit and be his anchor. The two really made it look effortless sometimes. \n\n\"One piece of advice \u2013 be honest, be up front, and be prepared to grovel.\"\n\n\"And dinner with my family?\"\n\n\"Ask him.\"\n\n\"That's it? That's your advice?\"\n\n\"I am giving you pearls, here.\" He stood and grabbed his bag. \"Now, if you don't mind, I am off to grab a cab home. It is warm and I am not up to a bus ride today.\" He bent and kissed my cheek. \"We will still see you and Malcolm for dinner Sunday?\"\n\n\"Alright,\" I sighed. I sat for a few minutes more, thinking back to what Tony had said. I knew he was right. I pushed him off because I didn't want him to feel obligated, like he had to make a show for anyone, least of all me or my friends. It was a ridiculous, immature thing to do, and I cringed at my own insecurity. \n\nI got up and made my way slowly up Pike to 3rd. I was going to catch the bus home, take a long shower, and was just debating with myself on whether or not I should go to Malcolm's and surprise him tonight when I heard someone calling my name. I turned to look, thinking for some reason it had to be Malcolm, but didn't see him. \n\n\"Melody! Melody Williams!\" I looked across the street to see a tall, skinny blond man waving at me. He looked vaguely familiar. I waited as he crossed the street and wove his way through the mass of pedestrians towards me. \n\n\"I can't believe it's you!\" he said, putting his arms around me and hugging me tightly. I accepted his hug, recognition just out of reach. \"It's been at least twenty years.\" Then it clicked.\n\n\"Robbie Baker!\" I squealed, hugging him back just as intensely as he held me. Oh my god! Robbie Baker!\"\n\nI hadn't seen him since shortly after college. We were good friends, sharing the same major and a love for Tony. Unfortunately, Tony was never interested in Robbie, a fact which hurt him all through college. Robbie had moved to San Francisco after graduation and we had lost touch. \n\nWe leaned back, looking at each other and smiling goofily before embracing again. We laughed and talked over each other, firing off questions and compliments too fast for either of us to answer, leaving a plethora of unfinished 'when did...', 'what about...' and 'how did...'. We both suddenly stopped and hugged tight again, laughing, not heeding the people passing us with odd looks. \n\n\"You look amazing, Melly. Amazing,\" he said at long last, stepping back and grabbing my hands in his.\n\n\"Please..\" I started, flattered.\n\n\"You look exactly how I remembered you. Exactly.\" His eyes seemed misty, and I looked at him closely. He was skinny, too skinny, almost emaciated. Dark circles under his eyes made his face look absolutely gaunt, and his hair was thin. My first thought was addiction, but he didn't have that ash to his skin that always seemed to me to be the telltale sign of heavy drug use. I looked even more closely, seeing a sore just inside his collar.\n\n\"Oh, Robbie,\" I said quietly, feeling the tears in my eyes. I was afraid to blink, I didn't want him to see them run down my cheeks. \"What...?\"\n\n\"I popped positive eleven years ago, Melly.\" He looked at me calmly. \"I've been totally healthy, totally asymptomatic until this past March.\" \n\n\"I had no idea.\"\n\n\"I know. No one did, though. No one from home.\"\n\n\"No one?\"\n\n\"Not even my mom, not until I got sick.\n\n\"Why?\" I hadn't realized we were walking together towards 3rd until we reached the corner.\n\n\"I guess it was half disbelief and half defiance. Does that make sense?\" I nodded, and he smiled. \"I have to go, I'm meeting my mom at the Met. Give me your number and I'll call you.\"\n\n\"Absolutely,\" I said. I gave him my number and had him read it back to me to be sure. \"Please call, Robbie. I would love to catch up.\"\n\"Of course,\" he said as we hugged again. I felt how skinny he was and suddenly felt very cold despite the warm July sun, and I started to cry a little. \"It's alright, Melody. Really.\" He stroked my hair at my sniffling. I looked up and kissed the corner of his mouth softly.\n\n\"Call me, Robbie. I know it's been ages, but...call me. I am still your friend.\"\n\n\"I know. And I will.\"\n\n\"Alright.\" He gave me a quick kiss on the cheek and hurried across the street. I watched him until he was lost in the sea of pedestrians, and crossed to the bus stop just as it arrived. I got in and quickly made my way towards the back, taking a seat on the aisle. It was almost 3PM, so the bus shouldn't get too crowded, but still I didn't want to chance being on the inside if it did fill. I hated that.\n\nI thought about Robbie, the joy of seeing an old friend cut with the pain at his condition. I got a napkin out of my bag and wiped at my eyes. It was unfair \u2013 running in to Robbie was like getting a puppy you knew you couldn't keep, the happiness in your heart tinged with the knowledge that soon you it would be ripped from you forever. I sat on the bus and thought about college, about how we fell out of touch, kicking myself for not trying harder to keep our friendship going. I had gotten so disgusted with constantly having to hunt him down, the unreturned calls and unanswered letters, the time I was in San Francisco on business and he never even bothered to meet up with me. I think that was when I gave up on him. \n\nThe last time he was in town...10 years ago?...he called my parents' house, but I never returned his call. I figured he was bored and just needed an escape, and \u2013 to be honest \u2013 my feelings were still hurt. I saw his not meeting up with me as a rejection. I wonder if he would have told me had I called him back. I sighed, chalking it up to one more thing in my past I desperately wanted to undo. \n\nI got off the bus a block before my stop. I needed some comfort, the kind of comfort a girl can only get from Ben and Jerry. I stopped at the QFC, picking up a pint of their finest chocolate as well as a package of double stuffed Oreos, microwave popcorn and a bag of barbeque chips. I toyed with the idea of getting some whipped cream, but figured the billion calories in my basket would get me through the night. \n\nI walked up my block slowly, swinging my shopping bag at my side, still lost in thought. I turned up the walk to my building, getting out my key, when suddenly my left wrist was grabbed and I dropped my groceries. I turned to my left and found myself looking in to Malcolm's green eyes. They were narrowed, but opened wide when I looked at him fully.\n\n\"Malcolm?\"\n\n\"You've been crying,\" he said softly, dropping my wrist and squatting down to pick up my groceries. He stood back up and looked at me intently, concern plainly written on his face, as I shook my head and shrugged at him. I didn't speak; I knew if I did I would cry and I didn't want to stand at my building's entry and cry in front of him. \n\nHe took the keys out of my right hand and opened the door, leading me with an arm around my shoulders. He pulled me to him slightly as we waited for the elevator, his hand caressing my shoulder, and kept up the reassuring contact in the elevator. He didn't ask questions or make small talk, he was just there. I turned and wrapped my arms around him, pressing my cheek to his chest and closing my eyes. Greedily enjoying the warmth of him, the smell of him, the feel of him. He stiffened slightly at first, and I thought he was going to push me away, but he didn't. Instead he tightened his arm around me and laid his cheek on my head. When the elevator opened he gently led me to my door, still holding on to me until he unlocked the door and followed me in.\n\nI took the bag from him and made my way to the kitchen, putting the groceries away. Malcolm followed me in, taking his jacket off and hanging it over the back of the stool before taking a seat at the breakfast bar, watching me silently. I stopped when I was finished, looking at him, suddenly feeling at a loss. \n\nIt was odd, seeing him there. He was so seldom at my place.\n\n\"Why are you here?\" I asked.\n\n\"I needed to see you.\"\n\n\"Oh.\" I looked around. \"Would you like something to drink?\"\n\n\"Vodka rocks.\"\n\n\"Alright.\" I got him his drink, looking over at him frequently, as if I wanted to make sure he was really there. I put it on the counter in front of him and watched as he took a sip. \"Why?\" ",
        "\"Why vodka rocks?\" \n\n\"No. Why did you need to see me?\"\n\n\"I just wanted to see you.\"\n\n\"You said needed before.\"\n\n\"Did I?\"\n\n\"You did.\"\n\"Well, then, I needed to.\"\n\n\"Why?\"\n\n\"Because I did.\" He took another sip and looked at me hard. I don't mean he looked at me closely, I mean I felt his gaze. It was hard, and it pierced right through me, making me want to gasp. \"What happened?\"\n\n\"I was feeling a bit...you know...so I took the afternoon off, and I...,\" I paused, thinking about what Tony had said, about how I had put the barriers up between Malcolm and myself. I walked around the kitchen island and took his hand, ignoring his look of surprise. \"Come sit with me, please?\" I asked, my voice low. \n\n\"Of course.\" \n\nHe stood up and let me lead him in to the living room, sitting next to each other on the sofa. I took his hand in both of mine and held it on my lap. \n\n\"I called Tony and we met at the market. He had some errands to run and we had lunch. Chatted a bit.\" I stopped again, my hands caressing and massaging his mindlessly. \"I told him about how much it bothered me to not be able to touch you or kiss you or anything, how aloof we are with each other, and he pointed out very plainly what you so elegantly stated earlier.\"\n\n\"What was that?\" he asked quietly.\n\n\"That the walls between us were designed, funded and constructed by me. I had no one to blame but myself.\" I sighed, fidgeting a bit. \"As such, I would also be responsible for their demolition.\"\n\n\"Arguable.\" Malcolm said, finishing his drink. You may have been the master architect but I was a willing engineer.\" I smiled at that. \"You're not talking about at work, are you?\"\n\n\"No.\" I sat for a minute, sizing my hand against his in my lap, wondering at the size difference. \"I mean...anywhere but work, I think.\"\n\n\"I see.\"\n\n\"I was thinking about that as I was making my way for the bus \u2013 I was actually thinking of getting a cab later to surprise you at home \u2013 when I ran in to an old friend from college.\"\n\"Oh?\"\n\n\"Yeah,\" I leaned back, smiling. \"I hadn't seen him for at least twenty years. Which was weird because we were so close in school. We did just about everything together.\" I grew quiet, a small smile on my face, looking at the wall and not seeing it, remembering being young and immortal.\n\n\"What happened?\"\n\n\"Hmmm? Not sure. He moved to the bay area and got really...flakey. He wouldn't return phone calls or letters. I don't know why, but I just chalked it up to he couldn't be bothered.\" I sighed. \"But when I saw him today, he was happy \u2013 so genuinely happy \u2013 to see me, and so damn lively it was like Robbie circa 1990 again.\" I stopped, feeling my eyes start to tear and powerless to stop it. \"Except it's not quite 1990 Robbie.\"\n\n\"What is it?\" he asked quietly. \n\n\"HIV. AIDS. He has a pretty big lesion on his throat, and what looks like the remnants of one on his temple,\" I said. I tried to blink back the tears and wasn't very successful. \n\n\"I'm so sorry, Melody.\"\n\"You know, I have been trying to figure out why I am so upset by this. We haven't been close for a long time. So why am I so upset? I am angry, no \u2013 I am pissed the fuck off, at having seen him again only to find that he's sick, he's sick and he's dying, and there's no way for him to get better and it's just so unfair. My heart burns with rage over it.\" I was crying, not sobbing, but the tears ran freely down my cheeks. \n\n\"You may not have seen him, Melody, but you never stopped caring for him,\" Malcolm said as he gently pulled me on to his lap. I laid my head on shoulder, soothed by his nearness and the feel of his arms around me. \"I think it would be odd if you weren't upset.\"\n\n\"You do?\"\n\n\"Absolutely. It's natural for you to feel a bit...cheated.\"\n\n\"Thank you,\" I sighed. We sat in silence. \n\n\"Can I ask if Robbie is tall? Thin with blonde hair?\" Malcolm said after a long while.\n\n\"Yes, he is.\" I sat up on his lap to look at him. \"How did you know?\"\n\n\"I saw you with him as I was heading over here.\"\n\n\"You did?\"\n\n\"Yes.\"\n\n\"Oh.\"\n\nI looked at him closely, at his expression of frank and open affection, and my breath caught. It wasn't as if I hadn't seen this expression before, I had, all the time in fact, but I gave an internal groan at my own stupidity in misreading it for so long. I took a deep breath.\n\n\"Malcolm, I...\" I looked at him, his green eyes widening just a bit, and realized what I was about to do. \"I think I'm going to make myself a drink. Would you like another?\" I asked, sliding off his lap and feeling like a grade-A USDA choice idiot. \n\n\"Just some water would be lovely,\" he said, looking at me funny.\n\nI made my way quickly to the kitchen and stood against the wall, taking deep breaths. Shit, I thought, what the hell is my problem. The first time there's affection between us, non post-coital affection anyway, and I'm about to tell him I love him. Idiot! He'll think I'm a complete moron. \n\nI detoured to the powder room off the hall and splashed some cold water on my face, scrubbing it dry with the towel. My skin looked shiny, my eyes were red-rimmed and still looked teary, but on the whole I wasn't a wreck. Satisfied there was no major case of raccoon eyes from my crying to frighten him off, I head back towards the kitchen.\n\n\"What are these boxes with the glittery 'D's on them?\" Malcolm called from the living room.\n\n\"Hmmm?\" I called back, washing Malcolm's glass and placing it in the drain to dry.\n\n\"On the shelf next to the barrister's case? There are three large boxes with big, glittery double D's on them?\" \n\n\"Shit,\" I muttered under my breath. \"Nothing, really. Just leave them be,\" I called back. I stilled for a moment, two empty glasses in my hands, listening. \"Malcolm?\"\n\n\"Oh my,\" he laughed. \"Duran Duran, huh?\"\n\n\"Fuck,\" I said, putting the empty glasses on the counter. I hurried back in to the living room and found Malcolm looking through one of the boxes. \"You looked.\"\n\"I can see why you didn't want me to open them,\" he said, pulling out an old magazine in a clear plastic protective envelope. \"Tiger Beat?\"\n\n\"It was for young teenage girls.\"\n\n\"1985? You would have been...?\"\n\n\"17,\" I admitted shamefacedly.\n\n\"Young teenage girls?\" he teased, smiling at me.\n\n\"Well, that was the target market...\"\n\n\"I see,\" he said, turning back to the magazine. \"Are you Roger Taylor's perfect date? Take the quiz!\" he read. He looked at me and gave me a wink, taking the magazine out. \"Let's see how you did,\" he thumbed through the pages quickly.\n\n\"Malcolm, please - \"\n\n\"Wow. 100%. I'm impressed,\" he laughed. He slipped the magazine back into the plastic and put it back in the box. \n\n\"Okay. I was a bit obsessed with Duran Duran when I was a teenager.\"\n\"A bit?\" he asked, looking like he was trying not to laugh.\n\n\"A lot?\" \n\n\"You have three boxes filled with Duran Duran memorabilia?\"\n\n\"Okay, I had an unhealthy obsession with Duran Duran when I was a teenager.\"\n\n\"And...?\"\n\n\"And what?\"\n\n\"And as an otherwise normal adult?\"\n\n\"No,\" I said, smiling at him shyly. \"I just can't bring myself to throw it all away.\" I closed the lid and slid the box back in to its place. \"Let me get you your water,\" I said softly, but Malcolm grabbed my upper arms and pulled me to him. \n\nHe slid his hands up my arms and held my face, looking at me intently for a moment before kissing me hard, his hands sliding to the back of my head and pulling me up to my toes. His kiss seemed urgent, desperately so, as he alternated pushing his tongue into my mouth with sucking and biting at my tongue when I explored his. I moaned a bit, out of shock at the intensity more than anything else, while my hands were raised to my shoulders before dropping down to hang impotently at my sides. \n\n\"Strip,\" he growled, breaking the kiss for the briefest of moments. I complied, unbuttoning my blouse and letting it fall to the floor at my feet. My bra quickly followed, before my hands shakily unzipped my skirt. I shimmied, letting it slide down my legs before stepping out of it and pushing it away with my foot. I pushed down on my panties and garter, taking my stockings with them, wiggling my hips and sort of goosestepping in place to get everything off at once. Malcolm's toy fell to the floor with a thud.\n\n\"What was that?\" he asked, moving his lips down my neck.\n\n\"The Oyster.\"\n\nHis hand grabbed at my hair, pulling my head back, as he stood up tall and looked at my face closely. \"You had it on all this time?\" I nodded, my mouth dry, not sure if he was upset or happy. \"Why didn't you take it off?\"\n\n\"You didn't tell me I could,\" I said, my voice barely a whisper.\n\nWith a groan, Malcolm seemed to...attack me. His mouth and hands and teeth seemed to be all over me, sucking at my nipple, biting at my ankle, caressing my neck. I grew dizzy, unable to keep up with his sensual assault, until I found myself on my back in front of my overstuffed chair, a suddenly naked Malcolm between my thighs, his cock pounding at me mercilessly while my heels dug in his ass to spur him on. \n\n\"You're mine, Melody. You belong to me,\" he panted against my neck. He slid his arms beneath me, his hands splayed on my shoulder blades, pulling me to him tightly. \"Every bit of you. Mine.\"\n\n\"Yes.\" I slid my hands across his back, arching myself in to him. \"Yours, sir\" I breathed as he bit at my shoulder. \n\n\"Malcolm,\" he groaned in to my ear. \"Say 'I'm yours, Malcolm.\"\n\n\"I'm yours, Malcolm,\" I whispered. \"Oh god, please, don't stop.\" I could feel myself tense up as he began thrusting in to me harder, pulling almost completely out before slamming back in to me with each stroke. I leveraged myself against him with my legs, raising my hips to his, moving my hands to my breasts and pinching my nipples as I came. \n\nMalcolm slowed, fucking me shallowly as I recovered from my orgasm. He raised himself up on his hands and looked down at me, the hair at his temples and brow damp with sweat. I reached up to touch his lips, but he darted his head and took my fingers in his mouth, sucking on them for a moment before pushing himself backwards. My legs fell off his hips and he withdrew from me completely. I propped myself up on my elbows and looked at him, his cock still hard, glistening against my thigh. \n\n\"Come,\" he said, holding his hand out to me to pull me up. \"Get on your knees, head resting on the chair,\" he instructed, patting the overstuffed chair. I did as he asked, closing my eyes and sighing as he ran his hands up and down my back before kneading my ass. I felt him lean over me, the hair on his chest tickling my back, as he bent to whisper in my ear. \"Don't move.\" \n\nI nodded, crossing my arms on the cushion and resting my head on them. I closed my eyes, thinking over what he'd said \u2013 that I belonged to him \u2013 the idea giving me a thrill that wasn't exactly sexual. I heard him come back in and kneel behind me before he placed his left hand on my hip, moving me to lift my hips off my heels. \n\n\"Do you remember what you said in my office today?\" he asked quietly, his right hand sliding slowly from my hip to between my legs. He slipped his finger inside me as I shook my head. \"No?\"\n\n\"I said a lot of things,\" I said.\n\n\"True. But I am concerned with one particular utterance.\" He pulled his finger out, sliding it forward to tease my clit. \"Can you guess what I refer to?\" I shook my head as I felt the slicked up fingers of his left hand rubbing around my ass gently. I was pretty sure I knew what he was talking about, but just in case I was wrong, I didn't want to give him any ideas.\n\nMy eyes flew open as I felt him slipping his finger \u2013 greasy with something \u2013 in my ass, and I groaned. \n\n\"Now, my sweet Melody, can you remember what you said this morning?\" His finger was pumping slowly in and out of my ass, so slicked up it moved freely. I groaned, my teeth clenched, trying to not tense up completely. \"Is that a no?\" he asked softly, his voice barely a whisper, as he added a second finger. \n\n\"Malcolm, please, I - \" I began, raising my head to look at him over my shoulder. He looked back at me hotly, his eyes searing my words in my throat, a small smile on his lips. \n\n\"Do you remember?\" I nodded, mesmerized by his gaze and the slow, steady motions of his hands. \"Tell me.\"\n\n\"I said you could fuck my ass.\"\n\n\"Yes.\"\n\n\"I'm nervous,\" I said, my voice barely audible. And I was. I was downright scared. Nearly petrified. But I was also intensely turned on, and quite conscious of the curiously erotic feeling of his fingers stretching me as they slid in and out. It was so different from the plug he sometimes used on me. This seemed far more intimate. \n\nThis was flesh to flesh.\n\nThe thought made me shiver.\n\n\"Trust me,\" he whispered. I nodded and lay my head back down on my arms. Malcolm moved his other hand from my clit to slide two fingers in to my pussy, moving them in a tandem rhythm with the ones in my ass. I moaned, goosebumps marching up my back as his fingers slowly worked my body, preparing me for him.\n\nHe added a third finger in my pussy, pressing down with the fingers in my ass and up with the fingers in my pussy. I cried out, arching my back and lifting my hips as he slid his fingers back and forth together, pressing firmly but not hard. It felt insanely good, being gently stretched and filled by him, the friction from his fingers slightly painful. \n\n\"Oh god...so good,\" I moaned, throwing my head back. My hips rocked slightly, seeming of their own volition, in concert with his fingers. \"Please don't stop,\" I begged as my hands moved back to grab my ass and spread myself wider for him. \n\n\"Hands on the chair, Melody. Grab the arms,\" he said, his voice sounding ragged. I obeyed quickly and looked over my shoulder, surprised at his use of my name instead of what I'd come to think of as his pet names for me, to find him watching me closely. \"You need to come,\" he stated. \n\n\"Yes...please,\" I panted, grateful at his knowledge of my body.\n\n\"As you wish.\" He changed the rhythm of his hands, moving them in tandem again, making the friction constant. I lowered my head to the cushion, whimpering as I felt my abdomen start to tighten. \"That's it, come, come for me, Melody,\" Malcolm said, before bending over me to run his tongue down my spine. I arched my back, pushing my head deeper into the cushion of the chair, as I felt my toes start to curl against his thighs. My hands clamped down on the arms of the chair as I moaned incoherently into the cushion, my orgasm moving slowly through me, making my entire body pulse, my ass and pussy clamping down around Malcolm's fingers for what seemed like hours. \n\nWhen I finally came back to my senses, Malcolm slowly pulled his fingers out of me, groaning softly as I whimpered. \n\n\"Are you ready?\" he asked, his hands roaming up and down my sides. I nodded, not wanting to speak. I couldn't remember ever feeling as excited and apprehensive at the same time. \"Relax, Melody,\" he said, kissing my back softly. He rubbed his cock along the trough of my ass lightly, making me shiver. I felt him shift behind me, pulling back, and braced myself against the chair, trying to keep my breathing even.\n\nMy head shot up, looking back over my shoulder at Malcolm as I felt him slide deliciously into my pussy. He smiled sweetly at me, almost sheepishly, and my heart forgot to beat for a moment. \n\n\"What - \" I began, but he just shook his head, sinking down on his heels, pulling me on to his lap. \n\n\"Fuck me. Ride me,\" he breathed in to my ear, sliding his hands around to my breasts and pinching my nipples. I moved my arms back to wrap around his neck to help stabilize me, and began to move. I didn't ride him so much as I just sort of...undulated on him, wriggling my hips about as I minimally moved up and down. (In all honesty, this was an entirely new position for me, and my legs already felt a bit rubbery. I did the best I could.) I began twisting, angling as I moved up and down, creating an intense pressure inside me, using my hips to hit my g-spot as much as possible, wondering at how effortless Malcolm always made it seem.\n\n\"Oh god...Malcolm...\" I whispered, feeling what little rhythm I was able to manage skip as my body tensed.\n\n\"I know,\" he said. He slid his hands to my hips to help me, and started thrusting up from below. \"Touch yourself,\" he whispered against my shoulder. I pulled one hand from his neck and dropped it between my legs, gently stroking my clit in pace with his thrusts. \n\n\"I'm going to come,\" I moaned, my other hand grabbing at Malcolm's hair. He began licking and nibbling along my shoulder and I began to shake and buck on his lap. \"Malcolm,\" I rasped as his teeth sank in to the back of my neck, his hands pulling down on my hips as he thrust into me from below. I grabbed his hair and pulled it into my fist as I came, the suddenness and intensity of my orgasm surprising me. \n\n\"Oh...Melody\" Malcolm cried, his voice hoarse, as I felt the heat of his come bathe me on the inside. \n\nWe remained like that, our bodies tremoring against each other, as our breathing slowly returned to normal. I sighed as I felt Malcolm's arms move to encircle my waist and pull me tight against him. \n\n\"I believe I bruised you,\" he murmured, his lips against my neck.\n\n\"Hmmm?\" I was totally blissed out, my hands resting on his forearms at my waist, my eyes closed, head against his shoulder.\n\n\"I bit you too hard.\"\n\n\"Hmmm?\" I repeated.\n\n\"Melody,\" he said, his voice half laugh and half sigh. He kissed down my neck to my shoulder, murmuring something, before laying his head against mine, \"...what you do...\" all I could decipher.\n\n\"Malcolm?\"\n\n\"Hmmm?\" I laughed softly at his mimicking tone.\n\n\"What were you saying? I didn't quite catch it.\"\n\n\"It is not important,\" he said after a moment. I turned my head to look at him, and he smiled and kissed my cheek. The gesture making me choke up a bit for some reason. He shifted, pushing the coffee table out of the way and maneuvering our bodies until we were laying on the floor. He grabbed a big pillow and the throw off the couch, keeping us spooned together, my head resting on his arm, before covering us with the chenille blanket. \n\n\"Why didn't you?\" I asked after laying together in silence for a while. I turned around to face him, pushing my legs through his and laying my head on his shoulder. \n\n\"I don't particularly enjoy it,\" he said, sliding his hand from my shoulder to my hip. I gave a snort, an 'as if' snort, to that. \"I really don't. It's not nearly as satisfying to me as your cunt.\"\n\n\"No?\"\n\n\"Not at all. Your cunt is hot and wet, so very wet, it feels like I am wrapped in liquid silk, a garment meant only for me, fitting me in a way I never imagined was possible. And when you come around me, it's as if your walls don't squeeze so much as they caress me, demanding with the most sensual of gestures that I join you.\" He took a deep breath, pulling me closer to him. \"It's incredible.\" \n\n\"So you're telling me it was just an empty threat?\"\n\n\"No. I am telling you it was an empty threat today. Tomorrow or another day...I make no such assurances.\"\n\n\"I see,\" I said, laughing. He chuckled, the low sound vibrating through me. We lay quietly for a while, my hand idly toying with the hair on his chest while his hand ran up and down my back. It was an oddly content feeling, and it made me even more nervous to bring up meeting my family, but I knew I had to. And, I reasoned with myself, it would save me from having to see his expression if I could ask directly to his chest.\n\n\"Can I ask you something?\" I began tentatively.\n\n\"Anything.\"\n\n\"Well...you remember me telling you about Danny?\"\n\n\"Your brother.\"\n\n\"Yes, exactly.\" I took a deep breath. \"The thing is,\" I started again, wincing at the tightness in my voice, \" the thing is, Danny is going to be in town in a couple of weeks \u2013 with his family \u2013 and there's a big family brouhaha when they're here. And I am expected to be there. I mean, of course I want to be there, too.\" I took another deep breath, trying to calm my nerves. Malcolm's hand had stilled on my back, but he remained quiet. \"I was just wondering if you would like to go with me?\" I finally asked, my voice squeaking ridiculously on the last word.",
        "\"Do you want to try that again?\" he asked, chuckling at my discomfort.\n\n\"Not really,\" I said. I could feel my face getting hot.\n\n\"It would be my honor to go.\"\n\n\"Really?\"\n\n\"Yes.\" I gave a huge, shuddering sigh, making Malcolm laugh again. \"Why did you get so worked up?\"\n\n\"I..it seemed too...I don't know.\" I thought for a moment. \"It seemed too relationship-y.\"\n\nHe pulled back to look at me, sliding his hand to cup my face. \"This is a relationship, Melody. This is our relationship.\" I smiled at him, and he smiled back, moving to press me to his chest again. \"What am I going to do with you? Hmmm?\" he asked with a chuckle.\n\n\"Anything you want.\" \n\n\"Anything I want?\" he asked, pulling back from me again, that wickedly seductive smile on his face.\n\n\"Anything you want,\" I repeated, the sudden dryness of my throat making my voice weak.\n\n\"I want a lot,\" he said, rolling me onto my back and pinning my hands above my head.\n\n\"A lot?\" I asked, breathless.\n\n\"Everything and more.\"\n\n\"That is a lot.\"\n\n\"Shall I tell you or show you?\" His eyes seemed to dance, and I wasn't sure if it was a challenge or a dare. I looked at him for a long moment, unsure of what my answer should be.\n\n\"Whatever you want,\" I said at last, and was rewarded with a penetrating kiss. \n\n\"Don't move,\" he said, sitting up and looking around. He reached over me and grabbed his slacks, dragging them towards us. His eyes met mine as he stood and slowly pulled his belt out. He dropped his pants, holding his belt in his left hand and holding his right out to me. I took his hand and allowed him to pull me up. \n\n\"Let me show you,\" he said, moving me to straddle my overstuffed chair. \n\nAnd he did. Several times, in fact. He showed me in no uncertain terms what he wanted. Showed me so very well that by the end I was a sweaty, welted, sated mess hanging over the back of my chair, and he had to carry me to my bed. "
    ],
    "authorname": "wanderingmindgames",
    "tags": [
        "vibrator",
        "female submissive",
        "work",
        "meeting",
        "fsub"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/bliss-ch-06-1"
}