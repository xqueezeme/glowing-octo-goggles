{
    "title": "A Year Apart Ch. 01: The Prologue",
    "pages": [
        "April 2<sup>nd</sup>, 2015 - Morris University - Morris, MN \n\nShrugging a backpack stuffed with heavy college textbooks off his shoulder and onto the floor, Calvin was relieved his classes were over until after spring break. The single dorm room he called home wasn't very large but it was a welcome sight after a day's worth of mid-term examinations. His brain hurt from cramming all the information into it that he could during two late-night study sessions earlier in the week, but it had paid off and Calvin felt confident he'd have good test scores. It was time to unwind, he decided. Retrieving a can of soda and a half-eaten bag of jerky from his mini-fridge, Calvin sat down at his desk and opened a sleek laptop to check emails. He was hopeful for any news of a house party that night; a plastic cup full of keg beer, loud music, and a house full of drunken college students would be a good way to relieve the tension of mid-terms, he thought. \n\nSnapping open the can of soda with one hand he began sifting through the spam cluttering his inbox, quickly spotting an email that piqued his interest: \n\nTo: cthomas \n\nFrom: Brooke1997 \n\nSubject: I MISS U \n\nHe opened it to find no message in the body but there was a video attachment which Calvin promptly clicked on. His computer's media browser suddenly filled the screen to display a young woman. She was lying on her side atop a bed, her head propped up by a bent arm over a pillow. Her brown wavy hair was an attractive mess, as though she had just woken up and done nothing more with her long tendrils than tousle a hand through it. She was wearing a pair of girlish cotton panties, white with little pink hearts all over them, and a clinging pink tank top with loose spaghetti string straps nearly falling off her shoulders. \n\nCalvin's brows rose with surprise at the girl's state of dress, or lack thereof. \n\nAs the video started playing the girl had a broad but shy grin; a smile that reached all the way to her green eyes and could light up a room. \"Hey, it's me,\" she began. \"Brooke - in case you've forgotten,\" she joked with a nervous giggle, \"So... I know this is totally out of the blue and I'm not even sure what I'm doing, but there's something I need to get off my chest. Gosh, this is so crazy, but... remember when you came home for Christmas break? I've been thinking about that night for the last four months and I can't get it out of my head. I don't know if it's just me and I'm imagining things, but I swore you were this close to kissing me.\" She held up a hand and pinched her thumb and pointer finger without actually touching them together. \n\n\"I mean, that is, before we both got all weird,\" Brooke appeared to grow more and more nervous as the video played, \"Anyways... um... if you really did want to kiss me and you feel the way I think you feel, you should keep watching this. If not, you should turn this off right now and delete it forever, because if that's the case I'm about to make a gigantic idiot out of myself...\" \n\nCalvin grinned at her awkwardness and continued watching with rapt interest, folding his arms over his chest as the video continued to play. \n\nShe pushed a hand through her messy waves, \"God, I can't believe I'm about to say this, but... I really wanted you to kiss me that night. I keep thinking the only reason you didn't was because you thought I'd freak out, or something. I hope I'm right because otherwise this video is going to be really embarrassing the next time I see you.\" She laughed nervously, a sound Calvin had always found adorable. \n\n\"I sometimes wonder if you think about me the way I think about you,\" Brooke continued, staring into the camera with suddenly sultry eyes, \"Like, late at night when I'm in bed touching myself. I imagine you're in your dorm room thinking about me... and... masturbating.\" \n\n\"Whoa,\" Calvin exhaled as he watched Brooke's hand slip beneath the hem of her panties, amazed at the sexy turn of events and impressed with her bold courage. \n\n\"Do you ever think about me and jerk-off?\" she asked the camera rhetorically, \"Because I think about you whenever I'm... you know. God! I can't believe I'm telling you all of this, much less on a video. I wish you were here so I could tell you in person. I miss you so much. If you were here I'd ask if you wanted to masturbate with me. Would you do that? Would you let me watch you rub your cock while I touched my pussy? Oh fuck, that would be so hot...\" \n\nCalvin couldn't believe what he was seeing. It was clear by the stretched bulge her hand formed beneath her panties that Brooke was masturbating. Calvin had to shift in his chair to accommodate for his own arousal growing between his legs. \n\n\"I know it's crazy but I just can't help it,\" the video continued. Brooke was slightly baby-faced in the cutest way, but her adorable visage had turned sultry and lust-filled, \"Do you want to jerk-off right now? Do you want to do it with me? Pull your cock out and pretend I'm there with you. Pretend I'm on your bed letting you watch me masturbate.\" \n\n\"Oh wow...\" Calvin stood up long enough to unfasten his pants and push them down to his ankles. His cock was fully erect and he reached for a bottle of hand lotion to use as lubrication. \n\n\"This is so dirty,\" Brooke moaned as her hand maneuvered beneath her panties with wriggling motions, \"I've wanted to make a video like this and send it to you for weeks, but... I've been too afraid. I can't take it anymore, though. I think about all the dirty things I want you to do to me and I don't want them to be just fantasies anymore. The next time you come home I want us to be together.\" \n\nBrooke sat up on her bed but kept her eyes on the camera. The video quality was perfect and Calvin felt like she was in the room the way she kept talking to him and maintaining eye contact. \"Are you touching yourself yet?\" she asked, \"Let me help you. Let me give you something to look at.\" \n\nCalvin stared as Brooke peeled off the tight top, revealing her naked torso. She had milky pale skin and looked unbelievably sexy, with a layer of soft baby fat on her otherwise slim frame. Her breasts looked to be the size that would fill a palm - just big enough to grab and squeeze - with dark pink nipples and bumpy areola. Calvin instantly started masturbating with a rapid pace. \n\n\"Do I turn you on? Do you like my breasts?\" She made a show of squeezing them, \"I want to feel your hands on them. I know how naughty that is but... fuck, it would be so hot to feel you grabbing and sucking on my tits. Are you jerking-off while you look at them? I want you to. I want to turn you on so much that you jerk-off and cum all over yourself while you stare at my tits.\" \n\nBrooke sat back against the headboard of her bed and pushed her panties down and off her shapely legs. \n\n\"Holy shit,\" Calvin moaned when he saw that she was shaved clean of any pubic hair, her sex on full display. \n\n\"Watch me masturbate,\" she encouraged, her hand returning to her pussy as she spread her legs wide. \"I'm thinking about you, sitting in front of your computer and beating-off while you stare at me. It's so dirty - it turns me on so much.\" She had a finger buried within her slit, and then inserted another. Her other hand was clutching at her own breast, kneading her fingers into its soft flesh. Her face was twisted with pleasure and she was having a hard time maintaining eye contact with the camera, \"All the boys at school are always asking me out. They probably want to fuck me. But I don't want them. I want you. I've fantasized about you for so long. The first time I touched myself I was thinking about you. I can't hide my feelings anymore... I want you to come home and fuck me. I want to feel you inside me... oh god, this is turning me on so much... I'm going to fucking cum... oh god, I'm going to cum...\" \n\nCalvin was pumping his cock furiously as he watched Brooke start to squirm, her heels kicking and sliding on the bedspread. Her breaths came as labored, squeaking gasps and her eyes clenched shut as the throes of an orgasm consumed her. It was the sexiest thing Calvin had ever seen. \n\nAfter several moments and a long exhale, Brooke's eyes opened back up and she looked at the camera with a shy smile that brightened her entire face. \"I can't believe I did that for you,\" she murmured, pushing a hand through her wavy brown hair. Her face held its smile, \"I wish I could see what you're doing right now, if you're jerking off or not.\" \n\n\"I am,\" Calvin replied aloud as though she could hear him, his arousal at near peak levels. \n\nBlush filled Brooke's cheeks and she pressed her hand against the side of her face, \"For all I know you have a girlfriend at college and I just made a huge fool out of myself, but I hope you get as turned on by me as I get for you.\" \n\n\"I do,\" Calvin answered her again, still masturbating and staring at her naked body. \n\nCrawling forward on the bed until her face filled the camera Brooke licked her lips and seemed to be staring right at Calvin, \"I know I'm being completely nuts but I don't care anymore, I want you. I want to do what it seems like we've always flirted around but been too afraid to actually do. Like on Christmas Eve... I know we both had too much to drink, but it felt real. I know you felt it too. God, I fucking need you so much. I masturbate all the time thinking about you. My head is filled with all the nasty things I want you to do to me. Like jerking-off and cumming all over my face. Do you want to do that? Are you close to cumming right now after watching me? Are you thinking about shooting your cum all over me until it's dripping off my forehead and cheeks?\" \n\n\"Oh my god,\" Calvin moaned as he imagined Brooke was right in front of him, talking dirty. He felt the familiar boil at the base of his cock as he urgently pumped himself. \n\n\"I want to be that for you,\" she said, leaning back and letting the camera capture her naked torso, \"I want to be a naughty slut for you. It turns me on so much to think about having your cum on me and inside me.\" Brooke grabbed at her own breasts again, \"Are you going to blow your load? Are you going to cum for me? All over me?\" \n\nCalvin's body stiffened in his chair and his head rolled back, \"Oh fuck...!\" \n\n\"I want you to cum for me,\" Brooke seemingly begged towards the camera, \"Do it, Calvin, cum for me... cum just for me.\" \n\nA stifled grunt filled Calvin's dorm room as semen erupted from his cock. Several strands of the sticky fluid shot into the air before landing on his stomach. His hips bucked in time with the ejections and his hand squeezed tightly around the shaft of his erection, coaxing on the orgasm for as long as he could until there was nothing left but a slow dollop oozing out of the tip and sliding down his wrist. \n\nThe video was still playing and Brooke made a giggling laugh, \"Either you just had a great orgasm or you think I'm a silly high school girl with a crush. God, I hope this video never gets online, but I'm pretty sure you wouldn't do that to me. Anyway, I hope you come home for spring break; you said you might. I love you.\" She blew a kiss towards the camera, \"I miss you.\" \n\nCalvin slumped in his chair as he watched Brooke reach towards the camera to switch it off and the video promptly ended. It wasn't the first time Calvin had fantasized about her sexually but it was certainly the most potent. Though spent from his orgasm he suddenly felt a burning need to see her, to talk to her, to tell Brooke that he felt everything she hoped he felt. \n\nRising to clean himself, Calvin used a towel to wipe the mess of his masturbation and discarded it into a plastic clothes basket on the floor of a closet. He considered immediately packing a bag and driving home for spring break, but it was a two-and-a-half hour trip to the Twin Cities and Calvin decided he needed to talk to Brooke right away. \n\nHe found his cell phone in the pocket of his jeans, which were still crumpled in a heap at the foot of his desk chair. Pulling up his contacts list he found Brooke's number and pressed the call button. Butterflies danced in his stomach when he lifted the phone to his ear and heard it ringing. Was he nervous? Excited? Probably both, Calvin decided. \n\nUnfortunately the call went to voicemail. Calvin frowned and didn't want to leave a message, so he hung up and tried a different number. \n\n\"Hello?\" a woman's voice answered. \n\n\"Hey,\" Calvin paced the short length of his room, \"It's me.\" \n\n\"Hi! How are you? How did mid-terms go?\" \n\n\"Pretty good I think. I'm glad they're over, though. Listen... is Brooke home from school yet? I tried her cell but it went to voicemail.\" \n\n\"Yes, she just walked in the door a few minutes ago. I think she's on her phone, talking to one of her friends. Are you coming home for spring break?\" \n\n\"Yeah, I'm going to leave this afternoon. Look, can you get Brooke? I need to talk to her.\" \n\n\"Just a second, honey.\" Calvin could hear his mother's voice as she yelled away from the phone, \"Brooke? Are you upstairs? Your brother is on the phone! He wants to talk to you!\" \n\n(To be continued...)"
    ],
    "authorname": "frozenhero1",
    "tags": [
        "masturbation",
        "jerk-off instructions",
        "joi",
        "dirty talk",
        "college guy",
        "high school girl"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/a-year-apart-ch-01-the-prologue"
}