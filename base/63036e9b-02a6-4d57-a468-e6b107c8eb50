{
    "title": "Sex, Real Sex",
    "pages": [
        "Sunday evening\n\n\"Honey, are you developing a paunch?\"\n\n\"Where?\"\n\n\"Where do you think?\"\n\n\"No, it's just the way I'm standing.\"\n\n\"Oh yeah? So, tell me: when d'you last go to the gym?\"\n\n\"Umm... Last week? No. Let me think... Last month? No... Last year? ...maybe? All right, I'll rejoin in the morning.\"\n\n\"Good idea. Now, come to bed. Don't put your jammies on; let's fool around.\"\n\n\"Really? Are you in the mood, despite my paunch?\"\n\n\"Sure; aren't you?\"\n\n\"Almost always! You know that. Do you remember how we used to fuck when we were first married?\"\n\n\"You know I don't like that word.\"\n\n\"What's wrong with 'married'?\"\n\n\"Idiot!\"\n\n\"But do you remember?\"\n\n\"Oh, yes... That time in our first apartment? That was on a Sunday, too. We spent the whole day in bed... It was before the kids came along, of course.\"\n\n\"Rumor has it there's a connection.\"\n\n\"You were such a stud...\"\n\n\"Were?\"\n\n\"You couldn't get enough of me back then.\"\n\n\"Still can't...\"\n\n\"Now's your chance to catch up, then. Come here and let me snuggle against you. Shall we leave the light on? Oh, run your hand down my back again... That feels wonderful!\"\n\n\"Would you like a proper back rub? I haven't given you one of those in yonks.\"\n\n\"Mmm... Please! You could even give me an improper one if you like...\"\n\n\"Okay, roll over on your front and pull up your nightie... Oh, I love the look of your naked ass.\"\n\n\"You know I don't like that word.\"\n\n\"Sorry... naked arse?\"\n\n\"Even warse!\"\n\n\"Naked buns?\"\n\n\"Better. Now kneel over them and rub my neck and shoulders, would you? Hold on... I'll take my nightie right off. There, that's better.\"\n\n\"Much... How's that?\"\n\n\"Mmm... Heaven! Ahh!... You make the tensions of the day just melt away... Remember that Sunday morning, back when? You looked up from between my legs, your face glistening with my juices and a few curly wisps of my pussy hair in your mouth. That image still makes me wet whenever I think about it.\"\n\n\"You smiled down at me, your face framed between your beautiful breasts, topped with nipples that looked like two maraschino cherries... or maybe two little searchlights, scanning the ceiling.\"\n\n\"Now they just flop sideways.\"\n\n\"But they're just as beautiful...\"\n\n\"Now I remember why I love you!\"\n\n\"Then I wriggled up to kiss you...\"\n\n\"...and I tasted my own pussy juice on your lips and tongue. That was so erotic! And your penis just slipped straight into my vagina; I was so ready for you! I don't think you'd ever entered me quite as easily as you did that day.\"\n\n\"You were still open from the last time we'd fucked... er... made love, the night before.\"\n\n\"And you were rigid! Harder than any other man I'd ever known.\"\n\n\"Oh, god! You know what that does to me!\"\n\n\"S'why I said it.\"\n\n\"Go on, then.\"\n\n\"Well, there was this one guy...\"\n\n\"Fact or fantasy?\"\n\n\"You tell me... But he gave good back-rubs, too.\"\n\n\"As good as mine?\"\n\n\"He had this thing he did... He'd kneel where you're kneeling and then lean forward along my back and gently bite the back of my neck.\"\n\n\"Like this?\"\n\n\"Mmm... And then I'd feel his penis nestling between the cheeks of my ass...\"\n\n\"Thought you didn't like that word.\"\n\n\"Just shut up and bite me again!\"\n\n\"Tell me about it?\"\n\n\"He wasn't circumcised like you are, so he had this amazing wrinkled foreskin that completely covered the head of his penis except when he was really hard. Then the head would come peeking out - as if it wanted to see what was going on in the outside world - and I'd lick it and push my tongue into his little hole. He loved it when I did that.\"\n\n\"I can see why he might.\"\n\n\"After he'd rubbed my back for a while, he'd reach around me, slide his hands under my breasts and pinch my nipples.\"\n\n\"Like this?\"\n\n\"That's right! Just like that!\"\n\n\"Then what?\"\n\n\"This gets pretty intimate, you know. What you're asking...\"\n\n\"Go on; you can tell me.\"\n\n\"Well, he leant back and separated my buns with his hands. Yes! Like that! I felt so damn exposed, with my asshole in full view! I just couldn't stop it puckering under his gaze - you know, contracting, the way assholes do?\"\n\n\"Mmm... Did you want him to touch you there?\"\n\n\"I really don't know. My body and brain had just turned to jelly. I just lay there feeling his eyes glued to my most private place, while my vagina simply oozed. I could feel my juices running down around my clit, soaking my pussy hair and dripping onto the sheet...\n\n\"And you know, I wouldn't scream right now if you were to run your hand down between my buns...\"\n\n\"You wouldn't want to wake the children...\"\n\n\"Mmm... Yes, go all the way to the front. That's heaven!\"\n\n\"I love the feel of your slippery cunt... Don't tell me! You don't like that word.\"\n\n\"Love the feeling, though... Don't stop! Rub my clit?\"\n\n\"Did he do that for you?\"\n\n\"Oh, he was absolutely brilliant at it. He knew just where to rub it - you know, along the sides as it swells, and then between the inner lips of my pussy, all the way back and into my vagina. And he seemed to know just how hard to rub me, and how fast.\"\n\n\"You must have been panting for him by this time - longing to feel his hard, uncut penis inside you.\"\n\n\"I was! I was wet and open and ready and wanted him to put me on my knees and just fuck my brains out.\"\n\n\"You mean, in the doggie pos... Oh, shit! Is that your damn cell phone?\"\n\n\"You know I don't like that word.\"\n\n\"Then don't answer it!\"\n\n\"Pass it here so I can see who it is. Oh, shit! It's Mom. She'll panic if I don't pick up, and you know where that leads!\"\n\n'Hello, Mom?'\n\n \n\n'...'\n\n \n\n'Calm down, Mom; try to stop crying and tell me what's happened. No, you're not disturbing us.'\n\n \n\n\"Ha!\"\n\n\"Shhh!\"\n\n \n\n'...'\n\n \n\n'Oh, no! Really?... Ppfft! No, Mom... I wasn't laughing, I promise. I can tell you're upset.'\n\n \n\n'...'\n\n \n\n\"What is it this time?\"\n\n\"Dad says he's going to leave her and run away with a Rumanian gymnast.\"\n\n\"Does he know any?\"\n\n\"It's some girl he's seen on TV, for god's sake! He's been watching too much Olympics.\"\n\n'No, Mom. I'm still here. Look, you know he just says these things to run you up. How long have you two been married? Fifty-eight years, isn't it? He's not going to leave you and shack up with a Rumanian gymnast, I promise. Anyway, when was the last time he ran anywhere?'\n\n \n\n'...'\n\n \n\n'No, I am taking you seriously! It's just the sex, Mom. He sees these under-dressed, under-age teeny boppers doing the splits on TV, and it makes his sap rise.'\n\n \n\n'...'\n\n \n\n'His sap, you know... Well, maybe you don't... Never mind. He'll forget all about it once football season starts...'\n\n \n\n'...'\n\n \n\n'I'll ask Bill.\"\n\n \n\n\"Honey, when does the pre-season begin?\"\n\n\"In three weeks, two days, and twenty-two - No, twenty-one - hours.\"\n\n'Bill says you've only got another three weeks to wait. Then Dad'll forget all about Rumanian gymnasts, and you won't get another coherent word out of him until after the Super Bowl.\"\n\n \n\n'...'\n\n \n\n'Yes, he's just the same. Look, would you like him to have a word with Dad?'\n\n \n\n\"Did you have to do that? He's your father, for god's sake!\n\n'Hi, Fred! How's it going?'\n\n \n\n'...'\n\n \n\n'I know! I watched her too. Isn't she something? Did you see her floor exercise?'\n\n \n\n'...'\n\n \n\n'And when she lay on her back and spread her legs in the air?'\n\n \n\n'...'\n\n \n\n'They probably use glue. I bet they have to shave themselves there... if there's anything to shave, that is. Wouldn't you just love to see a wardrobe malfunction in that position?'\n\n \n\n'...'\n\n \n\n'I think they said she's thirteen.'\n\n \n\n'...'\n\n \n\n'No, it's illegal, even in Rumania. Anyway, you don't speak Rumanian, do you?'\n\n \n\n'...'\n\n \n\n'You're right, I suppose. That language is pretty much universal.'\n\n \n\n'...'\n\n \n\n'They keep them in training camps, you know. Fewer distractions.'\n\n \n\n'...'\n\n \n\n'No, I don't think so. She's a valuable property of the State. They're not going to let her out of their sight.'\n\n \n\n'...'\n\n \n\n'I guess she could always apply for political asylum. I know someone in the State Department who could advise you.'\n\n \n\n\"What are you doing?\"\n\n\"Shhh... It's called 'inhabiting his fantasy'; it's standard psychotherapy for people with delusions.\"\n\n\"Oh, really?\"\n\n'...'\n\n'No, it's a long process... several months, at least.'\n\n \n\n'...'\n\n \n\n'Oh, well into the season. Be lucky if it came through before the play-offs.'\n\n \n\n'...'\n\n \n\n'Don't say that! You'll outlive us all! Anyway, what do you think of the American girl? Closer to home, you know. She's from Indiana. You and Ma could take a road trip...'\n\n \n\n'...'\n\n \n\n'No, I know. But at least you both speak the same language.'\n\n'...'\n\n \n\n'A threesome? Well, if you think Ma would go for it...'\n\n \n\n\"You're not helping the situation, you know!\"\n\n\"Shhh!\"\n\n'...'\n\n \n\n'Really? Where did you hear that?'\n\n \n\n'...'\n\n \n\n'No, I'm not doubting your gaydar. If you say she's a Lesbian, she's a Lesbian! Makes sense - all those half-naked girls training together every day. Just imagine what it must be like in the locker-room!'\n\n \n\n'...'\n\n \n\n'DIY? Oh! I see what you mean. Er... Yes, I guess you'll just have to.\"\n\n'...'\n\n'Umm... Well, yes, sometimes... Doesn't everybody? Look, why don't I let you talk to Kate?'\n\n \n\n\"Here, you take him. I will not engage in this sort of conversation with your father!\"\n\n'Hey, Dad? You know you've got Mom's knickers in a bit of a twist, don't you?'\n\n \n\n'...'\n\n \n\n'You old rogue!'\n\n \n\n'...'\n\n \n\n'Well, calm her down; tell her you were only joking or something. And tell her you love her, every once in a while, okay? We girls like that sort of stuff.'\n\n \n\n'...'\n\n \n\n'No, not me - her! I'll let you go so you can start rebuilding your bridges.'\n\n \n\n'...'\n\n \n\n'Love you, too. Both of you; tell Mom goodbye, okay? Bye!'\n\n \n\n\"Now, where were we, honey? ... Honey?\"\n\n***\n\nMonday evening\n\n \n\n\"How was your day?\"\n\n\"Good; Sally and I went shopping.\"\n\n\"And how is the delectable Sal?\"\n\n\"Actually, I think she's a bit lonely, you know.\"\n\n\"No boyfriend right now? ... Or girlfriend?\"\n\n\"Did you just leer? I don't believe it! You did! That was a leer!\"\n\n\"No, it was not; not meant to be, anyway. As far as I'm concerned, your best friend's sexual preferences are entirely up to her, okay?\"\n\n\"If you say so. But then why is your tongue hanging out?\"\n\n\"Let's just change the subject, shall we? Do you want to hear about my day?\"\n\n\"How was it?\"\n\n\"Awful! The Chairman has asked me to take over teaching Chlo\u00e9's course for the rest of the semester. You know Chlo\u00e9...\"\n\n\"Chlo\u00e9 Winter? Yes, I like her. She's the only one of your colleagues who doesn't treat me as if I were a complete moron. Isn't she about to have a baby?\"\n\n\"Precisely, and she's just starting three months' maternity leave, the bi... I mean, 'the thoroughly delightful and deserving modern professional young woman', who wants to have it both ways and let other poor sods like me pick up after her!\"\n\n\"Don't be mean, now. You know you like her, and she'd do the same for you.\"\n\n\"If I went on maternity leave, you mean? Say... Why don't you lie on top next time? That way, maybe I'll get pregnant!\"\n\n\"Who taught your course when you took your sabbatical last year?\"\n\n\"Umm... Okay. Point taken, I'll stop whining. But the first lecture is on Thursday! It's on 'The Role of Myth and Symbolism in Post-Modern Africa' or some such crap!\"\n\n\"Do you know anything about that?\"\n\n\"Bugger all, but I will by Thursday. Actually, I feel rather sorry for Chlo\u00e9. Her husband's a real jerk, and he's screwing the new Departmental secretary.\"\n\n\"You know I don't like that word.\"\n\n\"Sorry... 'Administrative Assistant'?\"\n\n\"Better. Anyway, I already knew that.\"\n\n\"You did? How?\"\n\n\"She told me all about it last June, at the annual end-of-the-school-year party. She even asked for my advice, poor girl!\"\n\n\"He told me all about it when we played tennis together in the summer.\"\n\n\"In detail?\"\n\n\"Excruciating! He was so damn full of himself, it was sickening! He didn't want any advice!\"\n\n\"Want to compare notes? You tell me his version and I'll tell you hers.\"\n\n\"Ha! Let's see if I can remember what he said... Of course, you know she'd had the hots for him from the moment she laid eyes on him...\"\n\n\"Actually, she hadn't noticed him until the day he cornered her behind the filing cabinet.\"\n\n\"... and she was panting for it.\"\n\n\"She was trying to decide whether screaming would cost her the job.\"\n\n\"But then they were interrupted, unfortunately.\"\n\n\"But then they were interrupted, thank goodness!\"\n\n\"After that first kiss, she was desperate to get more of him.\"\n\n\"She put him off as long as she could, but she was afraid he'd get her fired.\"\n\n\"Eventually, she talked him into a date.\"\n\n\"Eventually, she agreed to a date so she could ask him politely to stop pestering her.\"\n\n\"They met at this really classy, discreet restaurant where nobody knew them.\"\n\n\"They went to this dive where it was so dark you couldn't even see what you were eating.\"\n\n\"During dinner, she really hit the sauce.\"\n\n\"She doesn't drink much, but he insisted that she try every new wine he ordered. So, by the end of the evening, the room was spinning around.\"\n\n\"It would have been irresponsible of him to let her drive home in that condition.\"\n\n\"She couldn't have driven out of the parking lot, let alone found her way home.\"\n\n\"Luckily, he knew of a nearby motel that he'd used to help out other girls who'd gotten themselves too drunk to drive.\"\n\n\"He took her to this sleazy motel, where the bastard had already booked a room.\"\n\n\"The moment the door was closed behind them, she began to rip off his clothes.\"\n\n\"She was drunk, really liked her job, and hadn't been laid in months. She decided that going with the flow would likely be her least bad option. And if he was this keen, maybe the sex would be its own reward.\"\n\n\"He's a grow-er, not a show-er; but once it's up, he's hung like a stallion! (I've seen him in the showers, and at least one part of that statement is true.)\"\n\n\"He's got this little limp dick and the smallest pair of balls she'd ever seen! Like sugar-coated almonds, they are!\"\n\n\"She was frantic to give him head...\"\n\n\"It was the only way she could get him anywhere near stiff, but - god! - it was hard work!\"\n\n\"She just couldn't wait!\"\n\n\"He just didn't wait! He came all over her before he could even get it in.\"\n\n\"So he sprayed her tits with it! And she loved it!\"\n\n\"And then he was done: straight from PE to ED without passing 'Go!' And then he fell asleep. She wiped herself off, sobered up, and drove herself home in the early hours.\"\n\n***\n\n\"We're so lucky, honey; you 'n' me.\"\n\n\"How so?\"\n\n\"Having each oth... You bastard!\"\n\n\"Love you, too, honey. Sleep well.\"\n\n***\n\nTuesday evening\n\n \n\n\"Honey?\"\n\n\"Hmm?\"\n\n\"That story you were telling me on Sunday night...\"\n\n\"Right before Mom called, you mean?\"\n\n\"Yep, that one. Was that fact, or fantasy?\"\n\n\"Bothering you, is it?\"\n\n\"Do you want an honest, intimate answer, or shall I just joke it off?\"\n\n\"Umm... Try honest and intimate.\"\n\n\"Right. Hold onto your hat, then. Maybe I'm kinky. I probably am, but what the hell? You asked for it, so here's the thing:\n\n\"The single most erotic experience in my entire sexual universe is you telling me about making love with another partner. It just ties me in knots and leaves me absolutely breathless! Every fucking time!\"\n\n\"You are kinky. And... No, I won't!\"\n\n\"I don't want you to; that's the crazy thing! I don't understand myself! Why is hearing about it such a turn-on for me?\"\n\n\"Oh, come on! It's not rocket science, you know!\"\n\n\"I suppose you understand it, do you?\"\n\n\"Of course I do. There may be other bits of you that I don't understand - like what the hell you see in football, for example - but I sorted out that bit of your twisted psyche before we got married.\"\n\n\"So, tell me.\"\n\n\"It's the intimacy of it. When I tell you about my past lovers, I'm telling your subconscious that I love and trust you enough to share even the most intimate details of my life with you - things I'd never dream of telling anyone else.\"\n\n\"You know, I think you may be right! You're not just a pretty face...\"\n\n\"No, I've got other pretty bits, too. Now, where had we gotten to on Sunday?\"\n\n\"Before we slipped into the parallel universe full of Rumanian gymnasts?\"\n\n\"Oh, poor Dad! Growing old can't be much fun.\"\n\n\"It's better than the alternative.\"\n\n\"And that's supposed to make me feel better?\"\n\n\"No, but there is a lesson in there somewhere.\"\n\n\"Which is?\"\n\n\"Carpe penis!\"\n\n\"You jerk! Why do you always make me laugh? Take off your PJ's and come here!\"\n\n...\n\n\"Mom, Dad... Are you guys still awake?\"\n\n\"Oh! What is it, sweetheart?\"\n\n\"Rover's pooped on the kitchen floor.\"\n\n\"Oh shit!\"\n\n\"I was just getting myself a glass of milk, and that's what I said, Dad.\"\n\n\"Well, you shouldn't of, young lady! Watch your language.\"\n\n\"'Shouldn't have', Dad; watch yours.\"\n\n\"That's what I said; and don't you be uppity!\"\n\n\"You forgot to take him out again, didn't you, honey?\"\n\n\"Umm... Guess I did.\"\n\n\"Just how many times must I remind you?\"\n\n\"Rhetorical question time, is it, honey? Never mind, I'll clear it up. Back to bed now, sweetheart, and thanks for letting us know.\"\n\n\"Dad? Why don't you have any clothes on? You guys weren't doing it, were you? You were! You were doing it! That's gross!\"\n\n\"Chance'd be a fine thing! Anyway, where d'you think you came from, eh?\"\n\n\"But that was thirteen - no, fourteen - years ago! You should have grown out of it by now! And I don't need another sister, okay? One is more than enough. God! You do realize it might be a brother? You must promise me you'll put it down at birth if it is!\"",
        "\"Sweetheart, I promise you we won't add to the family, okay?\"\n\n\"Then why are you doing it?\"\n\n\"You'll understand when you're a little bit older.\"\n\n\"When you're a lot older, I hope! Now, sweetheart... Pass your Dad his robe and then go back to bed.\"\n\n***\n\n'Where's that damn light switch?' \n\n \n\n'Oh, you bloody dog! Couldn't you have held it until morning? Get out of my way! And stop trying to lick me! In your bed... Go on! Get in your bed! Goooood dog! Now, where's that pooper scooper? God, what a mess!'\n\n \n\n''Just how many times must I remind you?' Why is always my fault... Eh? Tell me that! Maybe because it usually is? No, I'm sure I can remember some occasions when she's screwed up...'\n\n \n\n'You know what you cost me, dog? Eh? You cost me a fuck, that's what you did; and it was shaping up to be a good one, too. And there aren't too many of those, these days. And licking my face will not make up for it. So, get in your bed... Go on! Goooood dog! Now, go the fuck to sleep!'\n\n \n\n***\n\n\"Did you take him out?\"\n\n\"Umm... No.\"\n\n\"I bet he needs to pee, too.\"\n\n\"It's raining, for Christ's sake! ... Oh, bloody hell! All right!\"\n\n\"Thank you, honey. Try not to wake me when you come back to bed. Goodnight!\"\n\n***\n\nWednesday evening\n\n \n\n\"Come to bed, honey.\"\n\n\"You're naked!\"\n\n\"And ready!\"\n\n\"But I can't! I've got this damn lecture to prepare for tomorrow morning!\"\n\n\"Bugger!\"\n\n\"I didn't think you liked that word.\"\n\n\"Just shut up and write your beastly lecture, okay? And don't wake me up when you come to bed.\"\n\n\"If I come to bed, you mean... I'm really sorry, honey. 'Night.\"\n\n\"'Night.\"\n\n'Damn! I was all ready to pick up where we left off on Sunday. Poor Bill... He's too old to be pulling all-nighters. Chlo\u00e9 might have warned him.'\n\n \n\n'What can I do now? These clean sheets feel wonderful against my ass - Oh, I don't like that word, do I? Well, there's a time and a place for everything, and tonight's the night for 'ass'! If Bill were here, I'd tell him. That would get him going! My tits feel pretty good too. Maybe I'll just rub my nipples a little... When was the last time I did this? Must be months ago! Let's see if I can still remember how to do it...'\n\n \n\n'I really enjoy sex with Bill, even after all this time. He does love to fuck! Oh, there's another one of those words. What the hell! No one's listening.'\n\n \n\n'It's nice that he doesn't get jealous when I tell him about my other lovers. Have to keep him guessing whether they're real or imaginary, of course. It really turns him on! Funny that I had to tell him why. I wonder how I'd feel if he told me about his? We've never talked much about that. Maybe I should ask him sometime.'\n\n \n\n'Wish I had more than two hands, so I could pinch both nipples and finger my pussy at the same time. That's why I need a partner. Or maybe I should get one of those vibrator things. Sally says she wouldn't give up hers for the world... But then of course she's single. I wonder what her sex life is like these days. I know what it used to be like, of course... Oh, now I'm getting all wet and slippery; that's lovely!'\n\n \n\n'If my breasts were a bit bigger, I could suck my own nipples. Wouldn't that be something? God! I remember the first time she sucked them! Thought I was going to die! It sent these waves of feeling deep into my cunt, just like I'm feeling right now. Oops, there's another one of those forbidden words. Poor Bill... I do give him a hard time!'\n\n \n\n'Maybe one hand for my nipples and one for my clit... Let's see how that works. All right! I think we're getting somewhere. Oh, I miss having sex with Sally! Whoa! Where did that thought come from? We haven't slept together since... it must be since Bill and I got married, more's the pity. I wonder what Bill would say if he knew.'\n\n \n\n'I remember the way she used to lick my clit. It takes a girl to do it right, though Bill's pretty good at it, I'll give him that. And he always takes the time to get me really ready before he comes into me. Hmm... like right now? It'll have to be a finger... maybe two?... Ahh! That's good. And then out again and up between my pussy lips and round and round my clit and then back into my vagina and round my clit again and deeper into my vagina and... I'm going to come! YESSS!'\n\n \n\n'Shhh, I mustn't wake the kids.'\n\n \n\n'Oh, not done yet?'\n\n \n\n'Imagine Sally and me together and Bill masturbating beside us...! Oh, WOW! That seems to be a turn-on! Ahhh!'\n\n \n\n'Another one?'\n\n \n\n'Imagine Bill screwing me while Sally watches us and kisses me... Yes!... AHH! Lovely, lovely, lovely! I think I'm onto something here!'\n\n \n\n'What, still not done?'\n\n \n\n'Imagine... Do I dare? Let's see, shall we? Bill screwing Sally... Ohmigod! With me - Yes? - watching the two of them - Yes! - locked in each other's arms... YES! OHMIGOD...! AHHHH...!'\n\n \n\n'Christ, that was intense, and now I'm soaked! Where's that tissue?'\n\n \n\n'I love him so much... So why does it turn me on to imagine him fucking my best friend, for god's sake?'\n\n***\n\nThursday evening\n\n\"I gave a damn good lecture today...\"\n\n\"...though you say so yourself...\"\n\n\"...particularly since I knew bugger all about the subject!\"\n\n\"Walk on water, too, can you?\"\n\n\"No, but you should see me in the sack! Wanna mess around?\"\n\n\"Honey, I'm really not in the mood; I've got a headache.\"\n\n\"Real or diplomatic?\"\n\n\"What difference does it make? I'm just not in the mood, okay?\"\n\n\"Oh... Okay, I guess...\"\n\n\"Oh, stop pouting! Get on with it, if you must! Get it over, would you?\"\n\n\"It's no good if you're not with me.\"\n\n\"Then why don't you just, you know...\"\n\n\"Masturbate?\"\n\n\"You know I don't like that word.\"\n\n\"Please yourself.\"\n\n\"Better.\"\n\n\"Very funny... How about 'DIY'?\"\n\n\"Oh, poor Dad; and Mom!\"\n\n\"Won't you join me?\"\n\n\"No, I will not! I'm going to sleep, so don't shake the bed, okay? And don't mess up the sheets.\"\n\n\"May I hold your hand, then?\"\n\n\"What? While you do it? No, it would keep me awake. Goodnight!\"\n\n***\n\n'Shame... I always feel horny after giving a good lecture. Oh well, let's see if I can get it hard without touching. If I can, I'll masturbate; if not, I won't. That's fair, isn't it?'\n\n \n\n'That little hottie sitting in the front row nearly put me off my stride this morning. The way she batted her eyelids at me every time I looked her way. I wonder if she does that for Chlo\u00e9... Oh, that got a reaction; I can feel something stirring... Why do I find sex between women so erotic?' \n\n \n\n'I wonder if Kate's ever had sex with another woman. Would she tell me about it if she had? In this bed? Wouldn't that be something! It'd be her best friend Sally, I bet. She'd drop by unexpectedly when Kate was relaxing by the pool - No, I know we don't have a pool, but I know just where it would be if we did have one, so just shut up and let me fantasize here!' \n\n \n\n'Kate's naked under her wrap because she always swims in the nude when she's alone... And she and I always swim naked together, for that matter - whenever the children aren't around, of course. Chance would be a fine thing!'\n\n \n\n\"Sal! What a lovely surprise! Wine? I'll grab another glass.\"\n\n \n\n'Girlchat, girlchat, more girlchat... Then:\n\n \n\n\"How about a swim, Sal?\"\n\n \n\n\"Shoot! I didn't bring a swimsuit.\"\n\n \n\n\"Honey, I remember your lovely bod from back when we roomed together in college! Those were the days! Remember all the things we got up to?\n\n\"Why don't we swim nude? Come here and let me undress you... There! You're as beautiful as ever! Now, may I kiss you?\"\n\n \n\n\"Yes, please! Mmm... I love the feel of your naked breasts against mine. Oh, how I've missed you! Kate...?\"\n\n\"What, love?\"\n\n\"Have you ever told Bill about you 'n' me?\"\n\n \n\n\"No, not yet. I'm keeping it for a special occasion. He loves to hear about my sex life before I met him. It really turns him on.\"\n\n \n\n'That got a rise out of me! All right, all hands on dick. Wow, I'm hard! Funny how I always use the same hand; it just doesn't feel right with the other one. I wonder if Kate's ever really had sex with an uncircumcised guy. It certainly sounded like she knew what she was talking about. Ahh! Now we're getting somewhere.'\n\n \n\n\"So, how's your sex life these days, Sal?\"\n\n \n\n\"I miss the times we had together... I really miss sleeping with you, you know!\"\n\n \n\n\"Yes; me too.\"\n\n \n\n\"Really? I always thought you and Bill were happy together.\"\n\n \n\n\"Oh, we are, we are... Very. But it's not quite the same, is it?\"\n\n \n\n\"You know my perfect fantasy?\"\n\n \n\n\"What's that?\"\n\n \n\n\"Promise you won't hate me if I tell you?\"\n\n\"Promise!\"\n\n \n\n\"The three of us having sex together. You know I've always fancied Bill...\"\n\n \n\n\"Yes, I've thought about that too.\"\n\n \n\n\"You have?\"\n\n \n\n\"He'll be home soon; shall we let him find us here by the pool or in bed together?\"\n\n \n\n'What'll it be this time? Better put them straight to bed, I think. Things are coming along nicely.'\n\n \n\n\"Take me to bed, Kate... please!\"\n\n\"Sixty-nine?\"\n\n\"Mmm... Your cunt's as sweet as ever!\"\n\n\"Yours too... Kneel over my face, love. No one sucks on my clit like you do, Sal!\n\n\"Oh! Hello, Bill! How long have you been watching us?\"\n\n'Silly question, seeing as how I wrote this entire fantasy! I'm gazing down at two beautiful women wrapped in each other's loving arms, their heads between the other's spread-eagled legs: four buxom breasts, three best friends, two hairy pussies, and a penis in a pear tree! Where did that come from?'\n\n \n\n\"Sally here's got the hots for you, honey. I think she'd like you to fuck her.\"\n\n\"Hi Sally! Didn't recognize you from behind. Don't stop what you're doing.\"\n\n\"Won't you join us girls? I'd love to see you screw her.\"\n\n'Who said that? Does it matter? Oh, it won't be long now...'\n\n \n\n\"Come on! Come and fuck her. She's ready for you. Let me guide it in!\"\n\n'I must decide which one I'm fucking, for god's sake! Would I rather fuck Kate or Sal? Whose lovely ass is this in my face? It must be Sally's. I think I'll fuck her while she and Kate suck each other's clits. That way, Kate can watch my prick sliding in and out of Sal's vagina.'\n\n \n\n'Oh, look at that little hole! It's amazing how it can stretch to take me in... She's much tighter than Kate! No kids, I guess. I fucking love that feeling of banging against her ass as I thrust into her! And it feels fabulous when she pushes back against me like that! I think she must be enjoying it, too. My balls are swinging right in Kate's face, and her eyes are glued to my prick... except it keeps on disappearing!'\n\n \n\n'The girls are really getting it on. Eating each other as if they were born to it! I wonder who'll come first? I bet we all come at the same moment. That's easy to arrange in a fantasy!'\n\n \n\n'Am I being unfaithful to Kate? No, this was all her idea, remember? And she's enjoying it, the hussy! Whatever... It don't matter no mo', 'cos here it comes... Yes! Here it comes! Three, two, one... BLAST OFF! OH, Oh, oh... Splish, splash, splosh! Ahh...! That feels so fucking goooooood! How I love orgasms! Now, where's that tissue?'\n\n \n\n'Mmm... that was nice; nicer than nice. Helps me sleep, too... Maybe I should patent it.......'\n\n***\n\nFriday evening\n\n \n\n\"You coming to bed, or what?\"\n\n\"Soon. It's the last quarter.\"\n\n\"I thought you said there were still three weeks to go...\"\n\n\"Exhibition game, in England; it's raining.\"\n\n\"God, you're an addict! I'll be reading, then.\"\n\n***\n\n\"Who won?\"\n\n\"Do you care?\"\n\n\"Not in the slightest.\"\n\n\"Well then. How's your book?\n\n\"Do you care?\"\n\n\"Not in the slightest.\"\n\n\"Well then. Let me finish the chapter.\"\n\n***\n\n\"Daddy, daddy! There's a monster hiding under my bed!\"\n\n\"Oh, sweetiepie... He's not there again, is he?\"\n\n\"What are you doing? Do you want to terrify the poor girl?\"\n\n\"I'll handle this... Come on, love. Let's you and me chase him away, shall we?\"\n\n\"He's really big and scary tonight, Daddy!\"\n\n\"But he doesn't scare us, does he, love?\"\n\n\"Not if you're with me, Daddy.\"\n\n\"All right, you monster! Now, you just listen to me! You're a very bad monster, and you're scaring my little girl here, and she needs to get some sleep 'cos she's got kindergarten in the morning.\"\n\n\"Tomorrow's Saturday, Daddy.\"\n\n\"Oh... so it is. Well, monster; she needs to get some sleep because... Why do you need to get some sleep, honey?\"\n\n\"'Cos I'm going to Samantha's birthday party tomorrow.\"\n\n\"Right! Hear that, monster? You're going to spoil Samantha's birthday party if you go on being so scary, so just stop it! ... What's that you say?\n\n\"Sweetheart, he says his name is Harvey and he was thrown out of monster school because he wasn't scary enough, and then he got lonely and thought that maybe you and he could be friends.\"\n\n\"Really?\"\n\n\"S'what he said, but I'm not sure that I believe him. I think I'd better throw him out of the window anyway, don't you?\"\n\n\"No, Daddy! You mustn't throw my friend Harvey out the window! Can't we let him sleep under my bed... Please, Daddy, please?\"\n\n\"Well, you'll have to share your breakfast with him in the morning, you know.\"\n\n\"That's all right, Daddy. Just let him stay, please!\"\n\n\"Well, if you're sure...\"\n\n\"Yes, I'm sure. He can keep all the scary monsters away!\"\n\n\"That's brilliant, sweetie! You and Harvey will make a real good team.\"\n\n\"Will you be on our team, Daddy?\"\n\n\"Sure I will, love. Thank you for asking me.\"\n\n\"But I want Harvey to be the captain.\"\n\n\"Oh! ... Well, all right; I suppose...\"\n\n\"You don't mind, do you Daddy? He's never been captain before, you see.\"\n\n\"That's very caring and thoughtful of you, sweetie. Of course I don't mind. Hop back into bed now and I'll tuck you in. Goodnight, sweetheart. Er... Goodnight, Harvey.\"\n\n\"Goodnight, Daddy. Goodnight, Harvey.\"\n\n***\n\n\"Is she okay?\"\n\n\"Sure, but she'll need an extra helping of Wheaties in the morning.\"\n\n\"Why, for goodness sake?\"\n\n\"For Harvey; he's sleeping over.\"\n\n\"Who the hell is Harvey?\"\n\n\"Don't ask.\"\n\n***\n\nSaturday evening\n\n\"Are we alone?\"\n\n\"No, we're together.\"\n\n\"At last!\"\n\n\"Children?\"\n\n\"Grandparents; sleepover.\"\n\n\"That'll be good, for all four of them.\"\n\n\"By the way, just how big is Harvey? Mom wanted to know.\"\n\n\"Well, he is on the small side, for a monster. After all, he does fit under her bed.\"\n\n\"I told Mom that he didn't need his own room, but he would expect breakfast. She asked me what monsters eat.\"\n\n\"She'll grow out of it...\"\n\n\"Mom?\"\n\n\"Probably not.\"\n\n\"So, how would you like to spend the evening?\"\n\n\"Watching TV...?\"\n\n\"I think I'll file for divorce on Monday morning.\"\n\n\"... after one last night of passionate sex, maybe?\"\n\n\"It'd better be good, then. Let's open a bottle of wine and take it to bed with us.\"\n\n\"A threesome!\"\n\n\"Say what? Oh! I see what you mean. I thought for a moment there...\"\n\n\"What?\"\n\n\"Never mind. Yes, let's; I'll fetch the glasses.\"\n\n***\n\n\"Come here and kiss me... Ugh! Did you shave this morning? You feel like sandpaper!\"\n\n\"Sorry, honey. I'll be right back.\"\n\n\"Why don't you take a shower at the same time?\"\n\n\"Do I smell?\"\n\n\"Just take a shower, okay? And trim your fingernails while you're at it! And your toenails... You gouged a great chunk out of my leg when you kicked me in bed last night. Then hurry back. I'll be waiting for you.\"\n\n\"Just save me some wine, okay?\"\n\n***\n\n\"That's better. Now, slip off your robe and come to bed. Arm around me? That feels nice.\"\n\n\"Where's that wine? Thanks... What a week!\"\n\n\"Mmm... Honey, you remember that conversation we were having last Sunday, the one Mom interrupted?\"\n\n\"Yes; I wondered when we'd get back to that. What about it?\"\n\n\"Well, it occurred to me that I've told you a bit about my past sex life, but I've never asked you about yours.\"\n\n\"I assumed you'd rather not know.\"\n\n\"Well, now I'm not so sure. I don't think I'd feel threatened anymore - not after all this time - so let's give it a try. Indulge me a little?\"\n\n\"Sure, I'll tell you anything. What do you want to know?\"\n\n\"I want to know you - to get right inside your head. So... I know! Why don't you start by telling me what you thought about when you masturbated the other night?\"\n\n\"Oh! Well, that was just a silly fantasy; you don't want to hear about that. Why don't I tell you about my first girlfriend instead?\"\n\n\"No, I want to hear about your silly fantasy. From the look of the soggy tissue I found next morning, it really turned you on.\"\n\n\"You may not like it, you know.\"\n\n\"Try me.\"\n\n\"Oh, god! Well, it was about you, of course...\"\n\n\"So far, so good.\"\n\n\"And... er... another woman...\"\n\n\"Interesting... Anyone I know?\"\n\n\"Umm... Well...\"\n\n\"Come on! You said you'd tell me anything. And no 'alternative facts' in this bed!\"\n\n\"Look, this was just a fantasy, okay? It really doesn't mean anything.\"\n\n\"Why don't you let me be the judge of that?\"\n\n\"Here goes, then... It was Sally.\"\n\n\"Yes, I thought it might be. I've noticed the vibes between you two.\"\n\n\"You have?\"\n\n\"Sure. I know you both pretty well, you know. So, what were we doing?\"\n\n\"'What weren't we doing?' is more to the point!\"\n\n\"Sex?\"\n\n\"Look, it was just a fantasy, okay?\"\n\n\"Go on; give me details. It's only fair.\"\n\n\"Well, in my fantasy - it was a fantasy, remember! - I cast you as lovers...\"\n\n\"Really?\"\n\n\"I said you might not like it. Why don't we talk about something else?\"\n\n\"No! I want to know what Sal and I did together.\"\n\n\"This is cruel!\"\n\n\"No, it's not; it's hot.\"\n\n\"You mean you don't mind?\"\n\n\"Your answer's between my legs. Feel.\"\n\n\"You're wet and swollen already!\"\n\n\"Right! So, what did Sal and I do together?\"\n\n\"She dropped by unexpectedly when you were having a glass of wine by the pool.\"\n\n\"We don't have a pool.\"\n\n\"Fantasy?\"\n\n\"Oh, okay. Go on.\"\n\n\"You'd been swimming nude like you always do...\"\n\n\"I do?\"\n\n\"We both do, when the kids aren't around. And Sal hadn't brought a swimsuit, so you asked if you could undress her... I'm sorry, honey! It's only a silly fantasy!\"\n\n\"Go on...\"\n\n\"You had been planning to swim, but once I'd got you both naked and feeling each other's breasts, I needed to move the action along a bit - to keep pace with my arousal, you know? - so you went straight to bed together, although you knew I was due home any minute.\"",
        "\"This bed?\"\n\n\"This bed.\"\n\n\"Oh, wow! Tell me about her body...\"\n\n\"Well, you know that her breasts are just a little smaller than yours, and she's got this gorgeous triangle of dark pussy hair between her legs.\"\n\n\"Mmm... yes; you got that bit right.\"\n\n\"You've seen her pussy? Oh, from when you roomed together, I guess. I've always wondered what female roommates got up to... Anyway, I came home and found you in bed together, in each other's arms. You hadn't made love in years and were starved for one another. Enough detail for you?\"\n\n\"Was I enjoying it?\"\n\n\"Are you kidding? You know what your sexual pleasure does to me! Of course you were!\"\n\n\"Oh, good; you got that bit right, too. So, what did you do?\"\n\n\"What do you think?\"\n\n\"Knowing you, you joined in and fucked at least one of us... right?\"\n\n\"Sal was kneeling over your face as you licked her clit. Her ass was round and naked and irresistible, and you... you urged me to screw her.\"\n\n\"I did?\"\n\n\"Yes. You wanted to watch us up close, from where you were lying between her legs.\"\n\n\"Hmm... Yes, maybe I did. So, you just drove this lovely prick that I'm holding into my best friend's cunt, did you? Just inches from my face? While we were eating each other?\"\n\n\"Er... yes, I did. I'm sorry, honey, but you made me tell you, and it's only a silly fantasy; forget it.\"\n\n\"I bet it was so erotic that you came all over your paunch and just left me to take care of myself, right?\"\n\n\"No! We all came together. I never want to come without you, even in a fantasy.\"\n\n\"Oh, that's a relief. Otherwise I'd have had to masturbate while you fucked Sally. Which reminds me...\"\n\n\"You're not angry?\"\n\n\"With the view from inside your twisted head? It's given me a lot to think about, that's for sure. But I love you, remember?\"\n\n\"What did you just mean: 'Which reminds me'? Reminds you of what?\"\n\n\"Umm... Never mind. This could get out of hand. Why don't we make love now? Your fantasy has made me horny as hell.\"\n\n\"Now who's being evasive?\"\n\n\"I am. Now, slide yourself under my leg and let me hold your prick against my pussy.\"\n\n\"Only if you tell me what you were going to say.\"\n\n\"Oh, Jesus! My heart's pounding! You sure drive a hard bargain.\"\n\n\"S'right! Stop evading my question, and I'll drive my hard bargain right into you.\"\n\n\"Okay... I guess. Anyway, the only way I could possibly continue this conversation is with you inside me. It wouldn't feel right, otherwise. So, slide your prick into me and then I'll tell you. Come on in... slowly, slowly... Ahhh! That feels wonderful! Now just lie still.\"\n\n\"May I rub your clit while you talk?\"\n\n\"Twist my arm, why don't you? And my nipples, while you're at it. Now, where were we?\"\n\n\"My fantasy reminded you of something...\"\n\n\"Oh, right. Well, here's the thing. I've never told anyone this before, but it sounds as if you'd half-guessed it already: Sally and I... we... er... we slept together all the way through college, right up until you and I got married - the night before, in fact. Then she broke it off.\"\n\n\"Ohmigod! Really? Oh, honey! I'm sorry. Do you miss her?\"\n\n\"Well, we're still best friends and we see a lot of each other, as you know; we just haven't had sex for the last fifteen years. At first, I didn't really miss it - you were more than enough for me! You still are - but just recently I've begun to remember what we did together, and fantasize...\"\n\n\"Wanna tell me?\"\n\n\"No...\"\n\n\"Come on; fair's fair! You're already inside my head...\"\n\n\"Shit! All right. Remember Wednesday night, when you were writing your damn lecture?\"\n\n\"Yes...\"\n\n\"Well, on Wednesday night, lying alone in this big bed and wanting you fiercely, I masturbated to images of you, me, and my long-ago lover Sally, making love together in all three possible combinations. There! Enough detail for you?\"\n\n\"In this bed?\"\n\n\"In this bed.\"\n\n\"Tell me about it?\"\n\n\"Fuck me while I tell you?\"\n\n\"Deal.\"\n\n\"Well, first you were masturbating as you watched Sally and me together... And I came. And then you fucked me while Sally sucked my nipples... And I came again. But the best bit was... Oh, God! I'm going to come again right now as I tell you... Rub my clit as you fuck me... Go on, please!\n\n\"The best bit was when you pulled your prick out of me, all wet and shiny with my pussy juice, and turned to Sally. She lay back and opened her arms to you, glanced at me to get my approval, and spread her legs wide. As you and she kissed, I guided your prick to the mouth of her vagina, and rubbed your hard slipperiness all over her clit. She began to moan as you thrust into her... just like you're doing to me right now!\n\n\"You two began to fuck, slowly at first, like you and I do, but then with increasing urgency - yes, like this - blotting out everything else, as the feelings that were erupting between you grew to fill the entire universe.\n\n\"I lay beside you as you fucked. I had one hand on your ass so I could feel your buns contracting rhythmically each time you drove your prick into her, and the other one between my legs. As you approached your climax... yes... you pulled me in close beside you both and... Ahh, yes!... the three of us... Yes!... came together... Fuck ME!... with simultaneous screams... OMIGOD!... as you pumped your semen... FUCK ME!... into her hungry cunt... FUCK ME! FUCK ME! FUCK ME!... YESSSS! Just like that!...\n\n\"Delight... delight... delight... God, I just love the orgasms you give me! That was something else...\"\n\n***\n\n\"Honey, do you suppose fantasies are infectious?\"\n\n\"That one seems to be. Symmetrical, anyway.\"\n\n\"But we have no idea what Sally would think.\"\n\n\"Do we dare find out?\"\n\n\"Inhabit the fantasy, you mean?\"\n\n\"Why don't we think about that?\"\n\nTHE END "
    ],
    "authorname": "Conversations",
    "tags": [
        "intimacy",
        "threesome",
        "ffm",
        "fantasy",
        "lesbian sex",
        "female masturbation",
        "male masturbation",
        "interrupted sex",
        "cunnilingus",
        "watching"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/sex-real-sex"
}