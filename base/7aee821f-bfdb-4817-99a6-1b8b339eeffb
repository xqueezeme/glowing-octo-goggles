{
    "title": "The Twelve Zenati Pt. 10",
    "pages": [
        "Authors note: Hello everyone. I hope you have been enjoying this series of the Tables. Thank you once again to David and Kate for being my second set of eyes. Enjoy! ~ellie. \n\n*****\n\nDressed in a plain linen shift dress, Olivia clutched Genesis' hand as she walked into the large imposing building of the Australian Federal Police, labelled with the initials AFP. She felt overwhelmed by the people who surrounded her, and if not for the strong presence of the man tightly gripping her hand, she might have turned and run, screaming from what she had to do. \n\n\"I need a bathroom,\" Olivia said quietly, slowing her pace and making Genesis look down at her in concern.\n\n\"I'll take her,\" Marcella said. She had forced her way into this hearing by browbeating the brothers into allowing her to act as Olivia's personal counsel, separate from the Zenati family who obviously had their own interests in this hearing which would supersede Olivia's interests if anything unexpected happened in this interview. Genesis had denied the accusation, of course, but Marcella stood her ground, and the brothers had relented rather than have her go to Olivia with her concerns and scare her any more than she already was.\n\n\"No,\" Genesis said abruptly. Marcella had done nothing but try to bully and intimidate him over her sister's welfare in the last few days. She had even been openly disapproving of Vivienne and Gideon's elopement at times. If she expected him to remain impassive where she was concerned after the last few days, she was sadly mistaken. He was tired of her judgemental and argumentative attitude to everything that he was trying to put in place to ensure Olivia's recovery and safety in the wake of her shooting and time with Remington Royce and the Suebi.\n\nMarcella blinked in surprise as, without another word, Genesis led Olivia to the reception desk and then to a small corridor on the left, leaving her, Noah and the rest of their party waiting for them in the lobby. \n\n\"I tried to warn you,\" Noah shrugged, when she looked at him with a questioning eyebrow. He admired Marcella's feistiness and wiliness in battle to get what she wanted. He imagined that she'd had to do it her whole life. He knew, however, that her constant threat to force Olivia to return to Perth was wearing thin with Genesis and had warned her that Genesis would stop being so accommodating if she didn't back off in her demands where Olivia was concerned.\n\nMarcella fell silent and pursed her lips. Now that Olivia had been pronounced physically and mentally fit to give evidence, she knew that her threat to take Olivia home to Perth, even against her will, was pointless. The three brothers and their family had been nothing but generous and welcoming. She had an apartment, a car and a credit card at their expense, and the freedom to come and go as she wished. The thought that it could all disappear, and she would have to return home alone before making sure that Olivia got everything she needed and was due, made her temper rise again. These people didn't understand, and she wished that she could tell them all to go to hell, but she needed to get inside this interview with them and ask her questions of the AFP once they were done asking theirs.\n\nThe conference room seemed crowded with so many people. Olivia sat in the middle of the conference table with Genesis and Noah on either side of her while a team of AFP agents and lawyers sat opposite her. One agent obviously the one in charge of this interview introduced himself as Carl Hopkins and nodded his head indicating they should take their seats and begin. Hopkins led her through her highly-detailed story, from the time she met Remington through to the shooting at her wedding. She had recounted the details in an easy matter-of0fact way as if they had happened to another person and had no bearing on her present life. She paused in her story now and then to answer questions, which seemed only for clarification rather than to probe her memory. \n\nAs the interview came to an end, the agents informed Olivia that they would review the evidence given by her against the evidence gained from the people she had mentioned in her statement. If there were any further questions, they would be in touch, but from a preliminary review of the evidence, they believed the statement that she had nothing to do with the illegal business dealings of Remington Royce and those who worked for him.\n\n\"If I could just ask a few questions before we conclude here today?\" Marcella spoke up, and as heads swung towards her, she pointedly ignored the glare that she received from Genesis and the raised eyebrow from Noah, who had immediately put a restraining hand on his brother's arm.\n\n\"And you would be?\" Agent Hopkins bent his head and flicked his notes back to the beginning. \n\n\"I am Marcella Gambaro, a co-counsel here and family counsel for Olivia Gambaro, who is my sister,\" Marcella reintroduced herself.\n\n\"How can we help you, Miss Gambaro?\" the agent said with a sigh, as if he were exhausted by the last weeks of mass arrests, following the busting of several drug-related gangs and their manufacturing and exporting holdings.\n\n\"I assume that all of Mr Royce's assets were seized and or frozen upon his arrest and subsequent death and are being held as evidence for the future prosecution of those close to him,\" she paused for the slight nod of the agent's head. \"My sister has legal rights to the legitimate assets accrued by Mr Royce, and we would like a detailed list of what is being held by the AFP. We would also like a timeline of when she will be able to access her personal effects from the house that she shared with Mr Royce,\" Marcella spoke briskly and succinctly, in a businesslike tone, surprising everyone in the room with her demands.\n\n\"I can put you in contact with the agent responsible for those elements of the investigation,\" Hopkins acknowledged that this was a reasonable request.\n\n\"Could I have those contact details this morning, please. I am afraid that we have put undue pressure on our hosts to provide even the basic necessities for Olivia. She had nothing but a blood-drenched wedding dress when she arrived at the hospital after the assassination attempt. We feel it is causing undue distress that she become seen as a charity case, due to her inability to access as much as a spare set of underwear from her home. We are fortunate to have such generous friends, but I am sure you agree that a month without her personal belongings is already a hardship she shouldn't have had to endure,\" she stated not only the legalities but appealing to their protective instincts as Olivia sat looking vulnerable and distressed by the situation.\n\n\"Certainly, Miss Gambaro,\" he nodded and looked to one of his lawyers for the information.\n\n\"If you would like to stay after the interview to meet with me,\" one of the men said while looking at her curiously. He hadn't expected to be called on this. The Zenati family were wealthy and seemed to be happy to care for the woman without being concerned about money from the Royce estate.\n\n\"And you would be?\" Marcella asked brusquely. \n\n\"Rockford, Joe Rockford.\" He passed a small card with his name and details to her.\n\n\"Thank you, Mr Rockford,\" she said and accepted the card. \n\n\"Was that all you required, Miss Gambaro?\" he asked. \n\n\"Olivia's boat was impounded several months before the shooting. We would like to know if that is detailed with the seized assets, despite belonging to her alone, or if I will need to seek information about that elsewhere?\" she asked.\n\n\"I am sure I can assist with that as well,\" Rockford answered.\n\n\"Then I am done for now.\" Marcella sat back, studiously ignoring the equally surprised and disapproving looks that she was receiving from the Zenati men.\n\nWith Genesis keen to get Olivia back to the clinic to rest and recover from having to relive her time with Remington, over half of the people in the room left with formal farewells and promises to \"be in touch.\" Marcella found herself with Noah and one of the women from the Tatar remaining with her to speak to Joe Rockford. They followed him from the conference room to his office, which was large but cramped with cabinets coded in a strange combination of numbers and letters. \n\n\"Give me a minute to pull all of the files. We're still finding more assets each time we interview newly-arrested associates of Royce,\" he explained and, with a sweep of his hand, indicated that they should take seats.\n\nMarcella had wanted to do this alone, but with yet another warning looming in Noah's eyes, she gritted her teeth and accepted that he would be part of this conversation. There was no way, however, that she was letting him take over her mission to get as much as she could from Royce's estate for her sister. She wanted to make sure that Olivia would never have to worry about money or security again, regardless of whether she was with Genesis or not. Genesis would never have the type of misogynistic power that her father wielded over their mother and themselves to make their lives miserable, not if she could help it.\n\n\"Do you have documentation for your sister's two identities?\" Rockford asked casually.\n\n\"I think we all know that Olivia had nothing to do with the false identity that Remington forced on her to hide her from her family and the people who cared about her,\" Noah jumped in. \"I trust there will be no further issue around that fact.\"\n\n\"No, but the documentation will be required if she wishes to claim the assets placed in the name of Serena Seabrook, including her personal belongings at Royce's residence,\" he explained his reason for asking. \"As I am sure you can understand, there is little in the name of Olivia Gambaro, and it will take some time to unravel the legalities around the assets belonging to Sabrina Seabrook.\"\n\n\"I have it,\" Marcella nodded, placing her briefcase on her lap and extracting a file. She had a copy of the documentation originally sent by Genesis to the Gambaro family to prove that Olivia was alive, plus all of Olivia's official documentation, including birth certificate, driving licence and a copy of her passport application. Replacing the case on the floor, she put the file on the desk but left it closed, showing that she was unconcerned with his request for proof of identification.\n\n\"Good. That will make this easier in the long run,\" he said, taking his seat behind the desk and placing four thick files on top of it. He withdrew a small external drive from a drawer and linked it to his desk computer, leaving them in silence as he concentrated on the task before him. \"None of the business assets belonging to Remington Royce were put into the names of either Serena Seabrook or Olivia Gambaro. However, as his wife, she would have a claim to all of them, unless someone from his family or business associates provides a will. We haven't been able to discover if he took the time to make one, or if he merely thought he was invincible and had no need of one.\"\n\n\"The wedding was interrupted,\" Marcella frowned. \"There were witnesses to say that the ceremony was incomplete. Olivia wasn't his wife, not that it matters in the law as she had de facto status but still...\" Her voice trailed off as she contemplated his words. \"Why do you believe that she was his wife?\"\n\n\"The paperwork was signed by all the necessary parties and witnesses and filed with the Department of Births, Deaths and Marriages.\" Hopkins shrugged as if this was common knowledge. \"Your sister is Olivia Royce, the widow of Remington Royce, and as such, she has a claim to all of his remaining assets. Of course, those assets have been seized, and until our forensic accountants are done with their investigations, they remain inaccessible. We may be able to allow Mrs Royce access to the house and her personal belongings, however, if you can prove undue hardship. As she is being so cooperative with the investigation, I doubt it would be a problem to allow access to any or all of his properties. I am sure her frankness with our investigators will continue, given her relationship with the Zenati family and the assistance they have been providing our teams.\"\n\n\"Who would have done that?\" Marcella asked. \"Filed the paperwork?\" she clarified.\n\n\"It could have been the priest on that day or one of Royce's henchmen wanting to score points with his boss for completing the formalities so that when they had both recovered, it wouldn't need to be repeated. Any number of people could have been motivated to file the paperwork for their own reasons,\" Rockford said.\n\n\"She would have been a valuable pawn to someone who wanted to take over the leadership role if she inherited his wealth and businesses. Whoever possessed her would have been unassailable. I believe that is what the man Kairos feared when he agreed to help your brother sever her ties to the Suebi,\" the older Tatar woman said to Noah, who was contemplating the fallout of this news as he sat back and listened to the conversation between Marcella and Rockford.\n\n\"You could be right,\" Noah said nodding thoughtfully.\n\n\"I'm open to any other reasons you can come up with,\" Hopkins shrugged. \n\nNoah frowned and looked at the Tatar woman, and it was in that moment he heard her soft laugh within his mind, and realised she hadn't spoken out loud at all. It was disconcerting to have her in his mind. Even though he knew of their power to read minds, he hadn't known they could invade a person's thoughts like this. He blanked his mind and tried to push the voice out, showing his displeasure. \n\n\"Relax, Zenati,\" the old woman's voice sounded in his mind again. \"There is more to be discovered from this man if the right questions are asked. Reach out a comforting hand to the sister.\"\n\nNoah hated not being able to react and scream at the woman to get out of his head. He hated the loss of control that he felt at his own thoughts and actions, but he reasoned if there was more to be discovered then he had to try it this way. He reached out a tentative hand to Marcella's arm and squeezed it for reassurance, not trusting himself to speak lest the old woman influence what he said.\n\n\"Maybe it was so that she couldn't testify against her husband,\" Marcella suggested. \"Olivia said that she witnessed a murder on the docks the night she met Royce. Has anyone verified that or what happened to her boat?\"\n\n\"There are several boats listed in the assets. Do you know its name or registration tag?\" Rockford asked, clicking a few keys to search the documents on the external drive.\n\n\"Yes, I have the original invoice when it was bought for her,\" Marcella replied, flipped open the file and handed Rockford a document from it.\n\n\"That boat isn't listed, but I'll make a note of it. We are still discovering hidden workshops and caches as time goes on. As for the murder Mrs Royce witnessed, I can't help you with that. I imagine that she will be questioned further about it, after her statement this morning,\" Rockford said.\n\n\"He lies, but we have what we need for now. The seed is sown,\" the old woman's voice whispered in Noah's mind.\n\n\"I'd like to schedule a time for Olivia and myself to retrieve her personal belongings from the house,\" Marcella spoke again, after getting no real answers from her last question.\n\n\"I'm not authorised to do that. However, if you would like to leave your contact details I will have someone who can authorise your entry to the property they resided in contact you,\" Rockford suggested.\n\n\"Quite obviously I am not in Perth at the moment, and I won't be returning until I have settled my sister's affairs,\" Marcella countered, as she handed him her business card after crossing out her work details and just leaving her mobile number. \"Could you also forward me a copy of the marriage certificate to this email address?\" She hastily wrote her personal email address on the card. \"I believe she has a right to view it and it will save the department having duplicates made when I request it,\" she said, letting him know that even if he withheld it, she would gain access to it by other means.\n\n\"Miss Gambaro, we are not the enemy here. I am sure that we can work together to ensure your sister is well cared-for throughout this ordeal,\" he said, softening his voice. Marcella narrowed her eyes at the change of tone. Something wasn't right here, she was sure of it. She remained silent for long moments, trying to fathom the wrongness of his words but she was at a loss, and when Noah stood beside her and offered her his hand to help her rise and farewell the man she started.\n\n\"Thank you for your assistance, I'll be in touch.\" She tapped his card on the desk in front of her. \"If you could send through the certificate and a list of assets that Olivia may be able to access when your team is done compiling evidence today, it would be appreciated.\"\n\n\"The lists are incomplete at this time, as there are still discoveries being made,\" Rockford hedged. \n\n\"Include a cover letter to that effect, but I would like the details and access to my sister's home and personal effects as soon as possible.\" Marcella's voice had taken on a steely tone. She was no shrinking violet that could be patted on the head like a good girl and sent away with nothing but a promise. If he didn't follow through, she would hound this man and make him regret underestimating her. \"I look forward to hearing from you,\" Marcella said as she shook his hand and turned to leave the room.\n\n\"She's a feisty one. You'd better get your ducks in a row, young man,\" the old woman cackled aloud as she shook Rockford's hand, surprising Noah, who chuckled with her. \n\n\"Call if you need any further interviews with Miss Gambaro,\" Noah said, refusing to even entertain the idea that Olivia was or even could be Mrs Royce. Then he turned and walked with the two women from the office and stepped into the elevator.\n\n\"Speak to Dominic about being able to hear my voice like this. I am sure that he will give you the answers you seek,\" the woman spoke silently to Noah as they left the building and separated to return to their respective homes. \"My name is Imelda,\" she volunteered, then she disappeared into the crowd.\n\n\"Would you like me to drop you at home, or are you planning on coming back to the clinic to see Olivia this afternoon?\" Noah asked Marcella.\n\n\"I think that I'd better go home and get my own car so you don't have to worry about dropping me home after I see if Olivia is okay,\" Marcella considered his question thoughtfully. \"Are you going to tell Genesis that Olivia was married to Royce?\"\n\n\"There's no point in hiding it,\" Noah shrugged. \"Secrets and lies, even by omission, end up hurting the people that keep them. There's no point in prolonging it. Better to rip the band-aid off, don't you think?\"\n\n\"If you say so,\" Marcella sighed. There was something wrong with that whole situation. She just couldn't put her finger on it yet. \"Can you wait for me to pick up my car so I can follow you and we can tell them together?\"\n\n\"Sure, let's go,\" Noah agreed and led her towards his car.\n\n\"Look, I know this is going to sound wrong somehow, but something isn't right about this whole marriage thing. Do you think you could delay telling Genesis until we see the certificate for ourselves? I mean, why cause angst if it's unnecessary? I'm not sure how Olivia will take the news, and I just want to verify that it's true first,\" Marcella spoke quietly, once they were in his car and heading back to her apartment.\n\n\"Royce is dead. It makes no difference one way or another now,\" Noah reasoned. \"I need to meet with Dom when we get to the clinic anyway, so that will give you a small window of time to verify the information from his email, but Genesis will want to know what happened in our meeting. Even without the marriage news, I doubt he's going to be happy about what you are doing.\"",
        "\"Why? So he can keep her dependant on his goodwill, just like Remington did?\" Marcella accused. She was damned if she was going to leave her sister to live a life just like their mother's, where she was stuck, married to an arsehole because she had no other choice. From the sounds of it that is exactly what Royce had done to her, kept her dependent and too afraid to step out of line.\n\n\"Woah!\" Noah swung his head to face her. \"Gen would never do that to Olivia!\"\n\n\"No?\" Marcella challenged. \"What does she have now that is hers? What freedom does she have from Genesis's overbearing presence? Shit! I can't even get close to her without having him stare at me and monitor my every word.\"\n\nNoah was speechless. He couldn't deny what she had said. Olivia had nothing, and Genesis was obsessive about his care of her. Noah understood why that was and accepted it, but this was the first time he could see it through the lens of an outsider. He and Genesis had talked about the sisters' history and the looming presence of a father who could so easily cut off his daughter and pretend she was dead rather than be overjoyed that she had been found alive, if not well. Her words disturbed him greatly. Was Genesis' obsession with Olivia stepping over a line somewhere?\n\n\"I hadn't thought about it like that. I guess that I can see your point, but Gen loves Olivia. He would never do anything to harm her in any way,\" Noah said sincerely, knowing it was the truth.\n\n\"I've seen these dependent relationships before and women who feel trapped by circumstances of their own making. They believed in the happily-ever-after bullshit that they were fed and then crashed and burned when things went pear-shaped,\" she said in a hard voice. \"If this relationship flames out, I am going to make sure that Olivia has a nest egg to fall back on, so that she never has to feel trapped and without choices again. The fact that Genesis won't like that tells me more than anything that she's going to need it,\" she huffed and sat back in her seat, leaving Noah speechless once again.\n\n*****\n\n\"Do we have to go straight back to the clinic?\" Olivia asked quietly from where she sat beside Genesis. \"Could we go somewhere for lunch, maybe?\"\n\n\"You want to go out for lunch?\" Genesis asked, surprised by the request. He had thought that the interview, which was more of an interrogation in his opinion, would have shattered her both mentally and emotionally, having to recount the details of her life with Remington Royce.\n\n\"Yes. Please,\" she said, letting hope colour her voice. She felt like she had been bedridden for months rather than weeks, and getting out of not only the bed but the clinic today had been wonderful.\n\n\"Okay, I know a place with good Italian food. Are you up for that?\" he asked.\n\n\"Good tiramisu?\" she asked with a grin.\n\n\"The best,\" he chuckled, and told their driver where to take them. They had two watchmen with them, as he didn't want to take any chances that one of the Suebi cells they hadn't found yet might be targeting Olivia. After the interview this morning, it worried him even more, and he knew he would need to hire personal security for her if she wanted to start going out with Marcella or Vivienne while he worked. Not that the idea thrilled him, but he would be no better than Royce if he tried to keep her caged the whole time she wasn't with him so he could ensure her safety.\n\nIt was barely twenty minutes later when they were seated in the isolated but elegant restaurant looking at the menu. Olivia had been to restaurants and elegant places in the last six months, but she had never held a menu or had choices about what she ate when she had been with Remy. Even in the hospital and the clinic there were few choices that she could make when it came to her world. Where Remy had left off, Genesis had taken over, and she felt overwhelmed by the decisions she had to make at that moment, despite it being not a very big one.\n\n\"Is everything all right?\" Genesis asked, seeing the strange look cloud her features.\n\n\"The truth?\" she asked tentatively, not sure about how he would react to what she was about to say. When he nodded, she continued. \"It's just that I haven't had to choose anything for myself in a very long time. What I ate was always decided by Remy and then you, and I'm not sure what to do with this,\" She waggled the stiff menu she held.\n\n\"It's difficult where we are staying at present, but if you want choices, we can talk about your preferences with the kitchen staff at the clinic,\" Genesis offered, still frowning, not liking that he was being compared to Royce again in his treatment of Olivia.\n\n\"It's okay. I understand I haven't been easy to deal with, especially in the beginning, and you had to make those choices because I wasn't eating. I'm just not sure that I am up to this much choice yet,\" Olivia admitted. \"Maybe you could narrow it down for me? What's good?\"\n\n\"Why don't you just order an entr\u00e9e, so you will have room for dessert?\" he suggested, narrowing down the menu for her. He would have ordered her just an entr\u00e9e-sized meal anyway, as her appetite was still virtually non-existent.\n\n\"That's a good idea,\" she grinned. \"Anything I want?\" she asked tentatively.\n\n\"Anything you want,\" he nodded, and gave her a small, encouraging smile. With the progress she had made since being in the clinic, it had been easy for him to forget those first days in the hospital, when he had struggled to get past all the psychological damage that Royce had done to her. She had been scared to do anything without his permission, including eat. He looked at the entr\u00e9e menu and realised that a dozen options they had were mostly high in carbs and fat. Perhaps it was still too soon to give her the types of freedoms he had been contemplating in the car. Even with bodyguards, she might not want to leave the safety of the clinic, or his side, for some time yet.\n\n\"Can I have the duck and plum spring rolls, please?\" she said, after contemplating him for a few more minutes.\n\n\"That's a good choice,\" he said approvingly and closed his menu, knowing what he wanted. He had worried that she wouldn't make a choice at all and he would have to guide her through the process. Pushing the menu to the side, he waved a waitress over and ordered for them, choosing a sweet sparkling wine for her to try with their lunch. \n\n\"I can't remember the last time I had wine with a meal,\" she acknowledged.\n\n\"If this is going to be our first date, then we needed to make it at least a little special,\" he gave a soft chuckle at her look of surprise.\n\n\"Gideon and Viv's wedding doesn't count?\" she asked, a small smile playing on her lips.\n\n\"No,\" he shook his head. \"That was about family, not dating. Besides, it's not every day that such a pretty girl asks me out to lunch.\"\n\n\"I highly doubt that,\" she laughed with him now. \"I am sure that you and your brothers have no problems getting dates. You're all too good-looking for your own good.\"\n\n\"You've been checking out my brothers?\" Genesis gasped in mock horror.\n\n\"Oh, you know a girl's got to have back-up plans and all that. Although Gideon is off the market now. Tell me more about Noah,\" she teased uncharacteristically, making him shake his head in disgust.\n\n\"No way. He is far nicer and more even-tempered than me. He's a good guy,\" he said, in mock outrage that she would consider either of his brothers as a backup plan and that one could be more appealing to her than himself. \n\n\"That won't do, at all. It's well documented that I like bad boys, so I guess you're stuck with me,\" she sighed heavily.\n\n\"I think I will survive somehow,\" he smiled, and reached across the table to take her hand. He enjoyed this playful side to her. Something he didn't usually enjoy in women in general, but with her there didn't seem to be an ulterior motive for teasing him, beyond having a little fun. There was no ring of truth to any of her teasing words. \"The question would be whether I could survive without you,\" he said seriously, taking her by surprise with his show of vulnerability. \n\n\"You would more than likely be relieved,\" she sighed, not wanting to face the look in his eyes just then and admit she felt the same. Not after what she had learned this morning. \"I was pretty dumb, and na\u00efve, not realising that I was involved with such a bad man in the beginning before it was too late. I feel like I only know bits and pieces of the puzzle. Can you tell me about Remy and what exactly happened in the church? Why his men tried to kill us both?\"\n\nGenesis spent a long time over their meal explaining in detail who Remington Royce was and his place within the Suebi Community. He also talked about the attack on the Mothers of the Tables and her cousin Nathanael's injuries, as he had tried to save his brother and their wife. The Gambaros were one of the few families to sustain an injury to a member of the table. \n\n\"In all, only one mother had died. That of the Martinos in Sydney,\" he concluded. \"We are still looking for members of the Suebi across the states, though we believe that we have taken out the major businesses and sources of income for them. Even if there are Suebi who have escaped the net, it will take them a long time to recover from their losses.\"\n\n\"So, all of Remy's places are shut down at the moment?\" she asked quietly.\n\n\"The illegal ones, yes. The legal ones are being run by managers, although the accounts are frozen and they are running on a simple budget from current income and expenses,\" he admitted.\n\n\"Hermione's?\" she asked, a tremor going through her at the thought of the last time Remy had taken her to the industrial room there and pushed her beyond her limits.\n\n\"I don't know the name, but I can find out.\" He squeezed her hand. \"Is there something about that place I should know?\"\n\n\"Remember I told you that sometimes he would push Serena's body too far and that she would take time to recover,\" she said quietly, dropping her eyes to the table. \"The last time he took her to Hermione's, I thought he was finally going to carry out his threat to kill her. I thought maybe she had smiled at a customer too much, or spoke too much at work to the strangers that came in. I don't know. He was angry though, and when she recovered enough for him to see her again, it was like it never happened. I wouldn't mind at all if they closed down Hermione's,\" she admitted.\n\n\"Then consider it gone,\" Genesis said. \"I will look into it and make certain of it, but I am sure that if they found a place with torture chambers and the like, then it would be closed immediately.\"\n\n\"It doesn't look like a torture chamber on the surface,\" she said and gave a weak smile. \"It's a very elegant, upmarket private club in the suburbs somewhere. No one probably even realises it's there, except its exclusive membership.\"\n\n\"Were you taken to a hospital when you were hurt?\" he asked. He had meant to find out for sure. When Olivia had told him of the times she had needed recovery, it sounded like she had been cared for at home by the housekeeper or Kairos.\n\n\"No, but a doctor came to see Serena,\" she explained, making the distinction between herself and the woman who was involved with Remington. \"Twice, when she had a broken bone, she was taken for an x-ray at a private clinic, but I don't remember where it was or what it was called.\"\n\nGenesis fell silent. No matter how much he flirted with the line between pain and pleasure in his dominance, he couldn't imagine treating a woman he cared for so badly that he would break her in any way, physically or mentally, and Royce had done both. He felt his anger rise and struggled to maintain a neutral face as she watched him.\n\n\"Perhaps the housekeeper or whoever looked after you would know. There must be records of your injuries somewhere, and if that doctor hid Remy's abuse of you, rather than report it, then he needs to answer some questions,\" Genesis finally ground out, knowing that he wasn't hiding his displeasure at the idea of her being hurt very well.\n\n\"Aunty Bea, she was at the hospital to turn off the machines that kept him alive for so long,\" Olivia agreed. Serena grumbled in the back of her mind that Olivia was telling Genesis so much, much more than she had shared with the police. It was as if Serena felt betrayed. She had agreed to Remy's treatment of her every time, she had given consent, and now Olivia was saying that she hadn't wanted what he gave her. The two distinct personalities in her mind hissed and poked at each other, until she lifted a hand across her brow and pushed her fingers and thumb into her temples.\n\n\"Why don't we get a doggy bag for the rest of your dessert and head home? It's been a fairly stressful day for you,\" he said, concern clouding his features and voice. His worries for her darkened further as she looked up at him and just nodded. He knew that she would have to deal with the fallout of having been the chosen one of such a notorious criminal, but he wished that he could protect her from all of the backlash that was yet to come, once the criminal proceedings commenced.\n\n*****\n\n\"Hey nerd, where are the superstars?\" Gideon asked, as Noah walked into the clinic with Marcella.\n\n\"They left an hour before us. I assumed they'd be here already,\" Noah frowned. \"Have you checked with the Watch?\"\n\n\"Not yet. I just assumed you were all together,\" Gideon shrugged.\n\n\"They probably just made a stop on the way home. Nothing to worry about,\" Noah shrugged and turned toward the newly-refurbished conference room that had become the base of operations for the next generation of the Zenati table.\n\n\"Vivienne is in the suite if you want to see her,\" Gideon informed Marcella helpfully, before following Noah into the conference room. \n\n\"Welcome back,\" she laughed after him, not overly concerned with the lack of greeting and the obvious dismissal. The fact was, she was concerned that Genesis and Olivia hadn't returned yet as well and was glad they were about to start asking questions. She turned toward the suite and a second later let out a yelp as Gideon returned and swooped her into a close embrace.\n\n\"Sorry, Marcie. Hi, it's great to see you,\" he grinned. Then he let her down and strode away to find out where his little brother and Olivia were.\n\n\"They're on a date,\" Orlando chuckled. \"You know, good food, wine, a little alone time outside of this place where they are interrupted constantly.\" He looked pointedly at the two brothers. \"You guys are like Siamese triplets. I'm surprised you stayed with the Papillo for an extra day,\" he said to Gideon.\n\n\"My wife can be very persuasive when she wants to be,\" Gideon grinned, still loving being able to say \"my wife.\"\n\n\"Not much of a honeymoon but maybe, when this is all over, you two can get away for a few weeks,\" Orlando suggested.\n\n\"That's the plan,\" he grinned. \"You have watchers on this date with them?\" he asked with concern. While Olivia was recovering well now, he was more than aware of the danger that she was in from the remnants of the Suebi organisation. It may be time to consider if she might not be better off in the impregnable fortress that was Emma and Junie's home, at the moment. \n\n\"They're on their way back now,\" Pietro informed them, having been nearby as the conversation started. \"Should only be another twenty minutes or so.\"\n\n\"Thanks, Pi,\" Gideon nodded and looked to where Noah stood talking with Tullo. He was no doubt worried about the media circus that would surround the arrest and trial of so many prominent men, when word got out about their disappearances and crimes. That was Genesis' domain, and Gideon was glad to let him have it. He could think of nothing worse than dealing with the media, but Genesis seemed to sail through it, as if the murky waters weren't full of sharks. \"I'm not really back to work yet, so I am going to go find my wife to keep me company while I wait for Gen and find out what happened,\" Gideon grinned and walked over to the suite where he knew Vivienne and Marcella were waiting for Olivia.\n\n\"What's going on?\" Gideon whispered curiously when he walked into the suite, surprised to see Marcella pacing on the far side of the room as Vivienne watched on inquisitively.\n\n\"One of the AFP sent her some information via email, and when she saw it, she swore and started making calls,\" Vivienne whispered back between accepting a kiss from her husband. \"There's no chance that Remy and Olivia were actually married, is there?\" she asked, not taking her eyes from Marcella, who was practically shouting into her phone now, as she demanded confirmation of the certificate that she had been sent from whoever she was speaking to.\n\n\"No, the shooting stopped the wedding. They hadn't got to the I do's, let alone the point of signing anything,\" Gideon reassured her.\n\n\"I'm not so sure about that,\" she frowned. \"Not that it matters, because Remington's dead and she'd be a widow, but it obviously matters to Marcella for some reason. Gideon turned to look at the small but self-assured woman still pacing the other side of the room.\n\n\"Listen, Dickhead. My sister was shot during her wedding ceremony. It wasn't complete. There were no I dos, so either someone is trying to pull off a fraudulent claim, using her name, for the millions the dead groom left behind, or they eloped, and the ceremony was just for show. I need to know. So, can you just confirm that the certificate number I gave you is authentic and that the two people listed as man and wife were legally married on the date it shows?\" she yelled at the phone, losing all pretence at being reasonable about the issue.\n\n\"I understand that you have a right to privacy policy, enforced by the law, but I have just spent the morning in the company of the AFP, so don't make me get them and come down there to kick your butt for being dumbass about this,\" Marcella groaned.\n\n\"No, she can't come to the phone. She was shot! The man she was about to marry when she was shot was killed in a hail of bullets. I am sure that you can agree these are exceptional circumstances we are dealing with here.\" She squeezed her eyes shut, as if dealing with the moron on the other end of the phone line was causing her physical pain.\n\n\"I better grab Noah and get some answers,\" Gideon frowned, and rather than getting up and leaving the spectacle, he texted his brother to get in there immediately. Seconds later Noah burst through the door expecting an emergency and took in the scene at a glance, sighing. Then he walked over to where Gideon sat with Vivienne, watching the little harridan yelling into her phone.\n\n\"According to the AFP, the documentation for the marriage was signed and filed with the Department of Births, Deaths and Marriages. That makes Olivia Royce's widow, which in turn means that she is one rich woman, at least once the assets are unfrozen, and even more of a target to the Suebi. Depending on who's in charge now, they will either need to eliminate her to get their hands on Royce's holdings, or get her to come back into the fold somehow and exploit her,\" Noah explained. \"I'm not sure Marcella is thinking of anything but the money at the moment, and the independence that will give Olivia and possibly herself as Olivia's lawyer.\"\n\n\"I thought you were acting on Olivia's behalf?\" Gideon asked.\n\n\"I am, but Marcella demanded to be co-counsel, and this news was a bit shocking to everyone. Gen and Olivia don't know yet, I think. The AFP hasn't made it public. I guess they just assumed we knew,\" Noah said as he considered the situation.\n\n\"So, she's trying to find out if the evidence is authentic before you tell them?\" Gideon posed the question even though it appeared rhetorical at this stage.\n\n\"Yeah. And, just by the way, Olivia's boat is not listed with Royce's assets. It was old and in bad shape. We may just have to face the fact that it's been scuttled or sold for parts,\" Noah informed his brother, knowing that he had promised to help her find the boat.",
        "\"Fuck! I'll still check out the marinas. You never know.\" Gideon rubbed a hand on the back of his neck, feeling a little stress creep up on him. He smiled as he felt Vivienne's hand come to rest lightly on his thigh and rub gently as she moved closer into his side. He let out a breath of pure happiness. She was the most amazingly intuitive woman where he was concerned. He had known that they would have an awesome connection; cursed couples always did, but she was beyond anything he had dreamed possible, and his heart overflowed with love for her every time he looked at her.\n\nNoah suddenly stood and walked across the room, taking the phone casually from Marcella's hand, and spoke in a calm, moderated tone.\n\n\"My apologies for my colleague. She is personally invested in this case... yes, I understand how you feel. However, I have a power of attorney signed by Olivia Gambaro, and I am authorised to act in her stead. Perhaps I could come down there in say the next half hour with the documentation, and you can show me the certificate in question, just so we can authenticate it for our records... Yes, a copy will be needed if it is authentic... Thank you, Curtis. I look forward to meeting with you at two thirty.\" Noah hung up the phone and handed it to Marcella with a perfectly straight face. Then he fished his keys from his pocket. \"You coming?\"\n\n\"Fucking arrogant prick,\" Marcella grumbled, with every intention that he would hear her. She then caught sight of Vivienne, having forgotten about the other people in the room. \"Oh God Viv, I'm sorry. Will you be here long? Can we catch up when I get back? Do you want to have dinner tonight?\" She rushed her apologies in her haste to not let Noah leave without her.\n\n\"Go find out what you need to know and call me when you're done. I'm sure my husband and I have time to squeeze in dinner sometime tonight,\" she laughed.\n\n\"I'll book Peewees again. We had fun there last time,\" Gideon suggested. \"We won't say anything about your call until you have confirmed the information,\" he said, more for Noah's sake than Marcella's.\n\n\"Alright. I'll talk to you when we're done with this meeting,\" Noah nodded and left the room.\n\nMarcella followed. She hated Noah's all-seeing, all-knowing, arrogant persona. It rankled her no end, so she sat silently and stewed as he drove them back into the city to find out the information she needed before she could make her next move.\n\nAn hour later, the information was confirmed. According to the Northern Territory authorities, Olivia was indeed married to Remington Royce, and no will had been lodged with the department, although that wasn't unusual for someone like him. Now she just had to find out who the lawyer was that handled his private affairs, and if he had been picked up in the raids. She needed to contact Rockford or Hopkins again and make sure that they were putting her in touch with the right man for the job. Searching in her bag for her phone, she was glad that she had placed the card in the small cardholder built into its case. She would call him once she wasn't sitting right beside the cool, calm and arrogant man next her. He had every reason to be arrogant, she admitted. He was good at his job and handled others remarkably well. He could read them almost, and knew the exact right thing to say and how to handle them to get what he wanted from the conversation. If Marcella was honest, she was a little bit in awe of him as a lawyer.\n\nNow she just had to deal with telling Genesis and Olivia, which Noah couldn't be dissuaded from doing now that Gideon and Vivienne knew because of her big mouth. She breathed deeply, building herself up for another emotional breakdown from Olivia.\n\n*****\n\nGenesis watched his brothers and the two women leave for their dinner reservations. He felt like someone had just struck a blow to his chest. It made no difference if they were married, of course. The man was dead and had no hold on her, but somehow it had affected him deeply, though he did his best not to show it. \n\n\"I honestly didn't even know he intended to marry me until the day of the ceremony.\" Olivia seemed to be pleading for him to believe her. \"I didn't sign those documents, I'm sure I didn't.\" She shook her head, wondering if the drugs she had been on, though a lighter dosage at the end of her time with him, could mess with her memories so badly.\n\n\"I don't think it matters one way or the other now. I believe you, but according to the authorities, you were married, and I guess now we have to deal with what that means,\" Genesis said, his mind clouding with the quiet conversation he and Noah had before breaking the news to Olivia. \n\n\"You believe me?\" Olivia asked incredulously.\n\n\"Since taking your name back and becoming mine, have you lied to me or given me any reason to doubt you in some way?\" he asked, knowing that she had been honest with him, brutally so at times, since they had come together and he had claimed her as his own.\n\n\"No, I would never!\" she blurted.\n\n\"Then I believe you. You don't have to convince me. I will always believe in you. We do need to talk about what this information the authorities have means, though,\" Genesis said, pulling her close as they sat on the couch.\n\n\"What do you mean?\" she asked. \"Why would it matter?\"\n\n\"Remington Royce was a very wealthy and powerful man, both in his legal business dealings and in the criminal world. As his widow, that wealth, if not that power, is yours by right, unless we can find a will that says otherwise, which the AFP has not discovered yet,\" Genesis explained gently. \n\n\"So, I'm rich?\" she asked, with a frown.\n\n\"Very much so, except that all that wealth has been frozen temporarily, while the investigation into the criminal dealings of Royce are looked into. Once that is concluded, those assets, those deemed to be legal and above board, will be released back to you, including his home where you lived and your personal effects from when you lived there. Marcella is trying to negotiate a time for you to access your personal belongings before the assets are released to you,\" he continued.\n\n\"If a will is found, it will go to whoever is named in it though, won't it?\" she asked.\n\n\"Yes. Which is why I believe Marcella wants you to have access to your personal property before that happens,\" he reassured her.\n\n\"None of that stuff is mine. It's Serena's. She lived with Remy and married him, not me. I was a prisoner in here, like she is now,\" Olivia admitted, tapping her temple to show that Serena lurked in a cage within her mind.\n\n\"There might be some things there that you brought with you from the boat, that were yours before he made you into Serena,\" Genesis reasoned. It wasn't the first time he had heard her compartmentalise Serena as a distinctly different personality, quite separate from herself, as if she didn't want to take any responsibility for any of the other woman's wrongdoings. Serena, he knew, was the young woman so in love with Remington that she wouldn't do any anything without permission, including eating or talking to anyone in the hospital. She was the woman who had loved Remington and mourned his death, while Olivia was the frightened but cheeky girl that he had seen flashes of in the beginning. The woman he now loved, having coaxed her out of the cage she had been held in by Remington and Serena. He would need to talk to Vivienne about the phenomenon in more depth, once they had time, wondering if the damage Remington had done to her had resulted in a split personality. \n\n\"Regardless of that, the marriage puts you in even more danger than we thought,\" Genesis admitted, finally putting the finger on why he felt like he had been sucker-punched by this information. \"If one of the Suebi were to take you and claim you once the dust of all the arrests settles, they would stand to control all that wealth as well as Remington's power, through you. You would be little more than a puppet to them and would be treated the way Serena always had been, as a toy to teach new tricks and show off to their friends,\" he said harshly.\n\n\"Why would I leave you? I wouldn't!\" She shook her head vehemently, looking worried that he would let her go after all they had spoken about in the last few weeks.\n\n\"And I would never willingly let you go, but,\" he paused, trying to work out the best way to say what needed to be said. \"The remaining Suebi allies might target you to claim that wealth and power. They may make kidnap attempts or even try to kill you, if you don't go with them willingly, so that his wealth and power would be redistributed amongst the survivors, or even given to one who had proven himself the new leader already. I need to keep you safe. I need you to understand how dangerous it is for you outside this building right now, and that you can't go anywhere without my brothers or me, no matter who else asks.\"\n\n\"Not even Vivienne? She said she wanted to take me to meet someone called Madrina, who has a teapot tree in her front garden,\" Olivia giggled, despite the seriousness of their conversation.\n\n\"I'd be happy for you to meet my Madrina, but you cannot go without my brothers or me, and even then, I think we will have to get you some private security for the time being,\" he explained\n\n\"Like bodyguards?\" Olivia asked, wide-eyed.\n\n\"This is serious Olivia, so yes. I will get people I know and trust to look after you like I would,\" he said in a tone that he hoped she wouldn't argue with. \"I don't know what I would do if anything happened to you. I can't imagine my world without you in it now,\" he said softly and kissed her tenderly. \"I love you,\" he whispered, testing out the words on her with a smile. \n\n\"I love you too,\" she whispered back. \"So if it's important to you, it will be important to me,\" she agreed. Serena had been dealing with bodyguards for almost the whole time she was with Remy. This wouldn't be any different. They would be just like the invisible people that Remy had to watch her. Except for Leila, who wasn't always invisible and seemed to genuinely like her and worry for her when she was injured or hurt by Remy. \n\n\"That's it, no argument?\" he asked. He hadn't been sure what to expect when he brought up the idea of bodyguards, but this calm and easy acceptance from her surprised him. In fact, she often surprised him by her quiet acquiescence since he had claimed her as Olivia and rid himself of the construct Remington had created, Serena Seabrook. Olivia was cheeky and fun and pushed him a little at times, but in general, she was particularly obedient, and it was obvious that she had been raised by a strong hand who expected that obedience and respect. He also knew that he needed to talk to Marcella a little more about her father before broaching the subject again with Olivia, and the to-do list in his head got bigger again.\n\n\"Would it make a difference?\" She gave a half smile. \"You've made it very clear what my choices are. I can accept what you ask of me, or we can argue about it and you can give me an ultimatum that I will agree to in the end, rather than upset you or risk losing you and everything you have offered me. I'm just cutting out the middle part of the process because you weren't going to back down, were you?\"\n\n\"No,\" he chuckled. Then he pulled her close. \"So, you'll agree to anything I ask without argument?\" His voice lowered perceptibly, and he murmured in her ear, his breath fanning across her neck.\n\n\"I don't think your powers of persuasion are that good,\" she teased lightly. \"I'm sure there will be plenty of things to argue about, but this isn't one of them. I understand why you want this. As long as you can explain why you want the things you want so that I can understand, then I won't argue very often.\"\n\n\"That's good to know,\" Genesis murmured softly, tightening his arms around her. There was something special about just holding her. Life for him had changed so dramatically since Father Bob had convinced him to help the girl he believed was in dire need of saving. Olivia seemed even more beautiful now than when he first met her. Her face was softer, more feminine, more open and giving than she used to be. The hard lines of anxiety around her mouth and eyes were gone, and she looked almost doll-like in her sweetness. It was as if the worries of her world had disappeared from her face, and her body relaxed in trusting contentment that was far removed from the fear she had lived with for so long when she had belonged to Royce. \n\nHe stroked her hair back from her face and kissed her forehead with a casual loving gesture. Olivia responded by sighing and snuggling tighter in his arms. Their bodies fit perfectly together, and his arms tightened, trying to hold her as close as he could as she closed her eyes. They sat there in silence for long minutes, and he watched her as he watched her sleep so often. She would twitch in her sleep sometimes, as if having a bad dream, then murmur his name as she snuggled tighter into his arms. One particular night, she had a particularly violent shudder in her sleep and had whimpered, \"Stay, Genesis, don't go, please.\" The memory alone filled him with a warmth that suffused his whole being and made him feel even more protective, if that was possible. She belonged to him and him alone now, even in her sleep.\n\n\"The choices you have are different now, sweetheart,\" he told her softly, stopping himself from using one of Royce's trigger words for her. \"I couldn't let you go now even if I wanted to. You are mine, and even though I intend to win any and all of our future arguments, it doesn't mean I won't listen to your concerns.\" Genesis continued to absent-mindedly stroke her hair. She had very quickly captured his heart utterly and totally. Whether it was the curse or not he couldn't say but, looking at her, he felt possessive and growled, \"You're mine to love, and I will do whatever it takes to make sure you are safe and happy.\"\n\nThe smile on her face broadened until her whole face glowed with dreamy happiness. She had morphed into the perfect woman since the first time he had seen her looking so lost and terrified in the hospital. She was so in-tune with him now that he had to remind himself of the beaten and brainwashed girl that he had first met. She had come so far in such a short amount of time, and his smile tightened, because possessing her the way he did came with the responsibility of caring for her, knowing that she might never recover fully from the abuse inflicted on her by Royce.\n\nShe had been broken, fractured in spirit and mind, by a monster, and he had worked hard to capture her heart, so it was his responsibility to keep it safe. There had been a beautiful, strong woman hidden inside the fa\u00e7ade of Serena Seabrook, and he had forced her to reveal it. Only a strong woman could survive what she had endured and come back from that edge. It was his duty now to make sure that she felt happy and secure with him, from this point on. He didn't want her to feel like he held the threat of him leaving her over her head, as he had on the night he had given her his ultimatum. He needed to reassure her that he would not let her go willingly ever again.\n\nHe had always revelled in his freedom, choosing a career that enabled him to travel the country and the world without ever having to put down permanent roots anywhere. He had decided to never put his heart on the line or give in to any family myth about curses, but the futility of that now lay in his arms, snuggled against him in the most delicious of ways. He looked down at Olivia's serene face and bent down to kiss her lips. He let his tongue trace her lips until her mouth opened in a plea for more. \n\n\"Come on, little one. Let's see what we have for dinner or would you like to order in tonight?\" Genesis said softly against her lips.\n\nOlivia's eyes opened with a soft but heated look. She studied his face almost as if she was seeing it for the first time. It never ceased to amaze her that he was still here and still holding her no matter what he found out about her before she became his. He was still here, holding her, with his eyes telling her that he loved her as much as she loved him. She had been thinking of the way he made love to her, possessing her totally, and she wasn't ready to give up that daydream to think about dinner. She pouted and closed her eyes again, with her lips curling her pout into a small smile as she snuggled into him again.\n\nGenesis knew how she felt as he watched her eyes close contentedly again. He wasn't ready for her to be out of his arms either, but they would need sustenance for what he had planned for them tonight, after that heated look she had given him. Genesis wove his fingers into her hair, making a fist and pulled her face away from his chest. Her eyes were open now, looking at him intensely, and he could see her craving for more. \n\n\"Little girls who pout could get spankings!\" Genesis murmured the threat huskily.\n\n\"Is that a promise?\" Olivia's whole face lit up with an impish grin.\n\n\"Absolutely, my cheeky girl!\" Genesis said with a laugh and flipped her over on his lap and gave her a quick smack on the irresistible, firm, rounded curve of her ass. She moaned and wiggled her ass under his hand, and he knew that if he didn't force himself to leave the couch right now, he in all likelihood wouldn't. Genesis laughed as he flipped her back over in his lap. He loved her playful manner, and he almost felt beyond happy at moments like this, when nothing seemed to be weighing them down. \"You are far too tempting, little one, but there is a time and place for everything, and right now we need to eat or you won't survive another night with me,\" he chuckled.\n\nHer gaze was hypnotic, filled with heat and desire and, if he allowed himself to admit it, love. They had professed their love for each other but to see it clearly on her face, mixed with the heat and desire she felt for him, almost unmanned him and it took all of his willpower to untangle himself from her and stand from the couch. All the wealth a man could ever want was hidden in her eyes. The greenest depth of the sea shining in her eyes were promises just for him. It was the kind of promise every man dreamed of from the woman he was devoted to. With her he felt strong, powerful and invincible. He would battle giants for her to keep her safe and at his side, because he knew he would never want to walk this world alone ever again.\n\nGenesis grabbed Olivia's small hand in his, and their fingers wove together, perfectly pulling her up from the couch to stand beside him. Olivia lifted his hand and held it lovingly against her cheek. Neither one of them wanted to break the spell, but Olivia sensuously kissed the back of his hand. \n\nFor Olivia, there was something about tactile contact with Genesis. She could be content with his warmth or in his scent, but she really needed to feel him touching her skin. Whenever she felt him touching her, she felt beautiful, she felt safe but, most importantly, she felt loved, desired and wanted. After the last few weeks, all she could think of was Genesis, holding her and making love to her. Nothing else in her life seemed to matter anymore.\n\nShe looked up at Genesis, and her heart ached in her chest. He was looking at her with committed and hungry love. The look in his eyes told her that he would do anything to keep her from harm, even from himself. His look was so loving and so intense that she felt her eyes start to fill up with tears. He gently caressed her face and reverently whispered, \"Don't look at me like that. You need to eat, and I only have so much willpower where you are concerned.\"\n\nGenesis pulled her with him to the kitchen and gave her a small glass of orange juice. He leaned over, kissed her, and, as he was turning away to get something from the refrigerator, Olivia cleared her throat quietly, making him turn back to meet her gaze. ",
        "\"Genesis, could you tie me up please?\" Genesis looked at her softly and questioningly. Olivia melted under his inquiring gaze and added, \"It frees me to think and understand everything that's going on, like I have no choice but to just sit and think.\"\n\n\"If I tie you up, little one, you won't have much room in your mind for thinking or understanding anything but what I am doing to you and that sexy little body of yours,\" Genesis growled softly. \n\n\"I spent a lot of time bound when I was with Remy, and then with you, when I wouldn't do as you asked,\" she said softly. \"It's almost like I need that forced stillness sometimes,\" she admitted. In truth, she craved to feel the freedom that being bound gave her. The freedom she needed to express and feel her emotions. When Genesis had bound her with more than just the brace, and she could feel the hug of the leather restraints binding her wrists and ankles, she had felt safe enough to let him in when he had issued his final ultimatum to her. It took the squeeze of her bindings, even when not restrained to the bed, to help her realise that she wanted this man. That he was her choice, not someone she was trapped into serving as a slave.\n\n\"Stay there and drink your juice,\" Genesis instructed and disappeared from the kitchen for a few minutes.\n\nThe act of submitting to Genesis had been full of desire and lust, but also the beginnings of love and trust in him. She would give everything she had to have that love and trust returned to her. Genesis had already proven that she could trust him. She was finally beginning to understand that belonging to Genesis was not what she had expected. Nothing else in her life had ever prepared her for the intensity of her feelings for him and her need to have those feeling returned. She wanted nothing more than to make him happy, the way he spoke about keeping her safe and happy.\n\nWhen he returned, he slowly and carefully wrapped her in her brace and cuffed her elbows behind her back, before cuffing both her knees and ankles. He groaned as he kissed her and finally, sliding a blindfold over her eyes. He stepped away from her, surveying the vision that was the woman he loved and desired like no other he had ever met before. As he moved around the kitchen, heating up a simple Irish stew that had been left for them by the kitchen staff, his eyes constantly strayed to Olivia and she looked more than delicious enough to feed his appetite.\n\nIt bothered him that she had said that she spent so much time in bondage when she was with Royce. He didn't want her to consider any similarities between the two of them, despite his pure pleasure in dominating her in every way possible, including bondage. He placed the stew in one bowl and pulled a stool up next to the one she sat on, considering her and what she had said about being bound. \n\n\"What are you thinking?\" he asked quietly.\n\n\"That even like this, bound and in the dark, my life is so different from what it was with him,\" she said softly. \"I wish today hadn't bothered me as much as it did, but you make me realise there is a better life for me now.\" She gave a crooked smile, grateful for the blindfold and not having to look at him while being so honest.\n\n\"I'm glad to hear that,\" he said, and picking up a forkful of the stew, instructed her to open her mouth. Genesis watched as her lips closed around the fork and imagined how good they would feel wrapped around his cock right at that moment. Tearing his eyes away, he looked down only to find her breasts straining against the tight top that she wore over the brace, as if begging for his attention and he groaned softly again, turning his attention back to the food. He let the simple act of feeding her distract him from the need and desire that he felt as he ate with her from the same bowl. \n\nOlivia felt his gentle caring despite how she sat bound and at his pleasure, and her own feelings contrasted with the all-consuming desire she had felt from him the night before. It was this contrast that set him apart from the monster-like Remy, who inspired absolute devotion through fear and anxiety rather than love. Though she couldn't see him, she could feel his hunger for her as he fed both of them. She imagined his mouth curling around the fork he then offered to her in turn, and wished she could see, but remained silent and passive until all the food was gone.\n\n\"Still feeling anxious about today?\" he asked, as he finished tidying up the plate and fork, as well as their glasses. He came to stand behind her, resting his hands on her shoulders and gently massaging the muscles there. \n\nFor Olivia, Genesis' hands on her were a dream come true. While his magic fingers were digging out all the knots in her back and shoulders, her insides were smouldering. All it seemed to take anymore was Genesis touching her and she was ready for him. This time, however, her body was fighting fatigue. With a full stomach and the relaxing fingers massaging her flesh, Olivia wobbled on the stool and felt him step forward, wrapping his arms around her to steady her. Then he picked her up and carried her to the bedroom they shared.\n\nGenesis slowly walked over, placed her on the bed and sat next to her. He took off her blindfold as his eyes roamed lovingly over her silky skin and, for Olivia, even a feathered caress could not have been more stimulating after being bound by him for so long. She had trouble catching her breath, and her chest heaved, while her nipples hardened with anticipation. Olivia squirmed under his heated gaze, and her breathing became rapid and shallow, drying out her half-parted lips, making her sneak her tongue out to wet them.\n\nStanding to undress, his eyes never left the beautiful woman in front of him. When he was naked, he lay on the bed next to her, and his hands began gentle, fiery caresses over her sensitive skin. Genesis gently leaned over and lightly kissed her lips. He didn't want the barrier of her clothes or the brace, and within minutes, he had unlaced the tight restraint and taken it and her shirt from her, allowing his hands to rove over more of her skin. He then unclipped her cuffs to allow her freedom of movement. Whether she chose to use it or not, he wanted it to be her choice tonight.\n\n\"You are mine, Olivia. It doesn't matter if you are bound physically or not, because we are bound to each other now in here,\" he said with feeling and touched the area over her heart, then bent his head to kiss her. \"I could spank you, flog you, whip you and it wouldn't change the passion I feel whenever I look at you. Tonight might be different from other nights we have shared, but in the end, I will still claim you as mine.\"\n\nOlivia's eyes were filled with heat as his fingers roamed over her nipples, making her gasp. His fingers trailed down her belly, leaving a tingling goose-bumped trail in their wake. Throughout it all, his eyes never left hers, and he could see that she was more than willing to submit to his every desire. She tilted her head up to meet his as he bent to kiss her. She felt the tenderness of that kiss, but also the demand that she surrender completely to him. She arched up against him and pressed into him as the kiss deepened, wanting all he offered her, the tender and the harsh.\n\nGenesis moved over her as her eyes heated further, demanding more of him. He moved between her thighs and, after making himself wait for this moment, he watched her face as he entered her without any further foreplay. He wanted to hear her cry out for him. He wanted to see the passion and heat in her eyes as she came apart for him. He wanted to be the only thing she saw as she felt the heat and desire for her that filled him, as he filled her. She had such an expressive face, and all of her emotions showed so clearly as he fucked her, taking what he needed as much as giving her what she craved. \n\nOlivia was in seventh heaven. With Genesis hovering over her so closely, she could feel his breath on her face and the heat of his body practically scorching her. She was on sensory overload after being bound and blindfolded for so long, and as she climbed toward her climax, the world around her became vivid with sensory delights, with her senses attuned to his touch, his sounds, the very sight and feel of him, the taste of his kisses as he claimed her mouth along with her body. Every time he made love to her it was a different kind of bliss.\n\nGenesis continued the slow, gentle, torturous pace which was driving them both crazy with need. He knew his pace was fast enough to keep stoking the fire inside her, but slow enough to deny her reaching the full extent of her climax. He watched her face intently as she grappled with the overwhelming desire that would soon become torturous for her, and watched for the first show of anxiety on her face to let him know when it was time to give her the full extent of his desire.\n\n\"Oh God, Genesis, please,\" Olivia moaned, as if in pain, and writhed beneath him.\n\nShe watched him smile as he recognised that she was reaching her limit and he reached between them to run his fingers over her slit as he repositioned himself and raised her hips from the bed. Then he slammed deep into her, while his fingers flicked her clit. Olivia felt like every nerve-ending in her body was on fire, as tingles lit up her body and detonated in an earth-shattering orgasm. Her back arched, her legs twitched, as her head was thrown backwards exposing her neck to his lips and teeth. \n\nGenesis used the opportunity to lick and bite at her exposed neck, like a man starving for the taste of her skin. His mouth only served to torment her more, adding shivers to her already-overloaded senses. Meanwhile, he continued to pound into her, owning every part of her, inside and out. The vibrations from her cries reverberated through him, increasing his hunger for her.\n\nOlivia floated on a cloud of endorphins while Genesis pinned her beneath him, providing the safety and dominance she needed. As her climax began to wane, she fell back to the bed, her chest heaving, trying to find air. Genesis continued to pummel her, and another wave of her climax began to build before the first even finished. \n\nGenesis bit into the soft angle of her neck and shoulder as Olivia's next orgasm contorted her body and forced another loud cry of pleasure from her. Unable to hold back any longer, he arched up, ploughing as deeply as possible into her and growling out his orgasm, as his cock pulsed with his cum.\n\nOlivia wrapped her legs around him and tugged him back against her, holding him as tightly as he had held her through her orgasmic bliss. Clinging to him while she floated back to earth, she whimpered softly into his chest, enjoying the heat and weight of him as it pressed her into the mattress. His weight on top of her made her feel secure and safe, almost like the bondage did. She felt free to laugh or cry and free to give him the love she felt for him. She felt his lips nibble across her jaw and capture her mouth in a tender kiss and knew that she could be herself with this man and he would still be here in the morning. That thought alone made her happier and stronger with him than without him. That kind of unconditional love had been withheld from her, even by her parents, who loved her if she was a good girl. The same with Kevin and, eventually, Remy, who at least was honest and told her outright that she needed to be a good girl or he would ensure her life was miserable.\n\nGenesis levered himself up on his arms and looked into her eyes. He could tell that the intensity of what they shared scared her as much as the memories which her interview today had evoked and he felt the need to reassure her that he wasn't like Remy and that he would never abandon her now. She never said a word, with her face and eyes doing all the talking. Genesis looked her in the eyes and said, \"You're safe with me. You are mine, now and forever.\" He smiled at her then. \"I am yours in the same way,\" he admitted, showing his very real vulnerability where she was concerned.\n\nHer look was one of questioning and anticipation, but he had to look deep into her eyes to find the question. There was also a fierce, loving determination behind her eyes, with her heart laid wide open in front of him. She was giving him her heart, while trusting him to treasure and cherish it. Her eyes were begging him to accept the gift that she was offering. It was an awesome responsibility, but one that Genesis was willing to accept. He gently growled, \"Tell me who you belong to, who owns your heart?\"\n\nOlivia's face and eyes lit up like a Christmas tree, with her infectious smile dominating her face. She took a gasping breath, and as a tear trickled down her face, she said, \"I belong to you, Genesis Zenati.\"\n\nOlivia and Genesis held each other tightly, their naked bodies fitting perfectly together, with their limbs intertwined. Occasionally one would kiss or caress the other but, finally, the long stressful day took its toll. They eventually fell asleep intertwined, as if both were afraid to let go of the other.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "investigation",
        "bdsm",
        "psychic",
        "brothers"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-10"
}