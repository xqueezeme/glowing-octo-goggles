{
    "title": "An Undeniable Passion Ch. 25",
    "pages": [
        "A couple of weeks later, Drake announced to Virginia that since the tack room was almost finished she could hire a groomsman if she wished. He mentioned that he needed to go into town so if she wanted he could post the notice for her. She wrote one up and gave it to him. He took the carriage into town and after posting the notice he continued on to the goldsmith. He went inside and asked if his order was ready.\n\nHe then proceeded to the ship yard to check on the repairs to the Aurora. He was led out to where the she was and he glowed with happiness to see her deck smooth and free of holes once again. The charred stumps that had once been masts had been removed and the bases of new ones had been installed. He was taken inside a long building where the new masts were being built. The foreman assured him that the ship would be ready to sail again in a month's time. Drake thanked him for his time and walked back to the carriage. He then drove to the harbor and found a ship on which to send a letter back to England.\n\nWhen he returned home, he went up to the sewing room. Virginia looked up as he entered. She smiled and announced, \"You're just in time. I'm finished. You now have a very respectable riding outfit. Mostly black with a touch of color. Go in the next room and try them on,\" she said.\n\n\"Surely I don't have to do that,\" he said smiling. \"I can just change here.\" He removed his coat and began to unbutton his waistcoat. She pushed him towards the door.\n\n\"Next door,\" she said firmly, but laughing.\n\n\"Fine,\" he relented. He grabbed his new clothes and went to the next room, where she stored her fabrics. A few minutes later he returned buttoning the waistcoat.\n\n\"Well, how are they?\" she asked as he pulled on the frock coat.\n\n\"Fine, except for one thing,\" he said, straightening the coat.\n\n\"And what is that?\" she inquired, with a mischievous gleam in her eye.\n\n\"Why are my breeches lined in pink?\" he asked patiently, knowing full well why.\n\n\"Because I ran out of black lining fabric?\" she replied, trying to stifle a smile.\n\n\"I was just in your fabric storage room and saw that you have plenty of it,\" he said, trying to be serious as well.\n\n\"Oh, I must have missed it,\" she said innocently. She could no longer keep up the pretense and began to laugh. \"Would you like me to change it? I can quite easily.\"\n\n\"No, it's fine,\" he said, laughing as well. \"Actually, I think I rather like it. Thank you for making it.\" He leaned forward and chastely kissed her on the cheek.\n\nHe went back to the adjoining room and changed into his other clothes. When he returned she asked, \"Did you go check on your ship?\"\n\n\"I saw the Aurora. The repairs are on schedule, she should be ready to sail in a month,\" he said happily.\n\nHer heart dropped when he said the words. \"You must be looking forward to it,\" she said in a tight voice.\n\n\"It will be nice to see her back in the harbor, where she belongs,\" he replied.\n\nShe blinked back tears and didn't respond. Turning her back to him she retrieved the dress she had abandoned to work on his suit and laid it out on the table. In an unsteady voice she said, \"I'm glad you like your riding suit. I hope you get a lot of use out of it.\"\n\nSensing that he was being dismissed he thanked her again and left. She heard the door to the stairs close and she sank into a chair. She buried her face in her hands as his words ran through her head, 'where she belongs.' And where you belong too, Drake, she thought. She only had him for another month and then she was going to be alone. Alone in a house full of servants. It was going to be months before Billy was back and even then he would be living in the out-building. Virginia had never felt so alone since her father had died. She sat in the chair for a long time and finally Rosy came looking for her to tell her that dinner was ready. She found Virginia sitting in the dark. As she entered with her candle, she saw that her mistress had been crying.\n\n\"Ma'am, are you alright?\" She used the candle to light an oil lamp, illuminating the room and knelt by Virginia's chair, taking her hand.\n\n\"No, Rosy, I'm not,\" she replied.\n\n\"What is it?\" she asked gently.\n\n\"He's leaving. In a month he'll be gone,\" she murmured. \"I thought if I kept my distance, guarded my heart, it wouldn't matter when he left, but I failed and it does hurt.\"\n\nKnowing that she was talking about Drake, she said, \"Why will he be leaving, ma'am?\"\n\nVirginia poured out the story to her maid. About first meeting Drake and running away from Charles and ending up on Drake's ship. About their last night on the water and how angry she was, and Billy staying to look after her. She even told her about Thomas and explained why she had been so shocked when Rosy had revealed even more of the man's terrible nature. She told her about Charles and Drake showing up on the same day and about the fire that damaged the Aurora causing Drake to stay in Williamsburg. \"And now that the ship is almost repaired, he'll be leaving.\"\n\n\"You love him, don't you?\" Rosy asked.\n\nVirginia sighed. \"Yes, ever since that first day in Liverpool over a year ago, I've loved him,\" she admitted.\n\n\"He loves you as well, ma'am,\" she said encouragingly.\n\n\"Don't believe everything he tells you, Rosy,\" she said with a harsh laugh.\n\n\"He didn't tell me. It's obvious just from looking at him. Sarah and Dolly see it too. It's as plain as day.\" She paused and then asked, \"Does he know you love him?\"\n\n\"He says he knows, but I'm not sure if he really believes it.\"\n\n\"Maybe if you tell him, he'll stay. Maybe all he needs is to hear it from you.\"\n\n\"I don't know, I just don't know. He's been so eager about his ship being repaired. He keeps going to check on it, to see how much longer it's going to take.\" Wiping her eyes, she let Rosy help her stand. \"I have to wait and see what he does when the Aurora is ready to sail, then I'll know what to do.\"\n\nDrake went downstairs and hung his new riding clothes in the wardrobe. He knew he would treasure them forever. He again peeked inside the breeches at the bright pink lining and couldn't help but laugh. Turning away from the wardrobe he dug into the pocket of his frock coat and pulled out the small velvet box. Opening it, he gazed at the emerald ring inside. The goldsmith had done a wonderful job. He closed the box and placed it inside the bureau. He knew exactly what he was going to do with it. Deciding to read until dinner was ready, he went down to the library to wait.\n\nA couple of hours later Rosy entered with a tray for him. Setting it down , she said \"Miss Templeton won't be joining you tonight, sir. She has a headache and has gone to bed early.\"\n\nRising from his chair and moving to the desk where she had set the tray, he replied, \"Thank you, Rosy.\"\n\n\"Will you be needing anything else tonight, sir?\"\n\n\"No, Rosy, thank you. Good night.\"\n\nShe bobbed a quick curtsey. \"Good night sir.\"\n\nA few days later, Rosy announced to Virginia that there was a young man at the door for her. He was responding to the posting for a groomsman. He was the fourth one to come by. She hadn't hired the others because she didn't feel comfortable with them. She felt that since Drake was leaving whoever she hired would have to be someone that she could trust to have around. If Drake were staying the issue wouldn't be so crucial.\n\nVirginia met him in the sitting room. \"Good morning, my name is Virginia Templeton,\" she greeted him.\n\nHe stood and nervously clutching his hat, replied, \"Good morning Miss Templeton. I'm Daniel Lancaster, but everyone calls me Danny.\" He was tall and lanky, with dark blond hair that he kept pushing out of wide brown eyes. Virginia guessed he was about twenty years old.\n\n\"Well Danny, why don't you tell me a little about other places you've worked.\"\n\nHe explained that he didn't really have any experience directly as a groomsman. \"I've only worked as a stable boy, helping out my Dad. He was one of the groomsmen at the Kincaid house in the next county. He got kicked by a horse and can't work now, so I'm looking for a position. I can do the job ma'am, especially since you said in the posting that you only have a few horses.\"\n\nHe looked at her with such guileless eagerness that her heart immediately went out to him. She wasn't about to act so hastily though. She talked with him for awhile about his duties at the Kincaid house and she took him out to the stables and showed him the newly renovated quarters and tack room. She also showed him the barn where some of the equipment was kept. They then returned to the house, where he asked, \"Do you live here alone, ma'am?\"\n\n\"Well, I do have three house maids that live here and at the moment a friend of mine is staying in the house, but he'll be leaving in about a month.\" She stopped and looked at him, \"Why do you ask?\"\n\n\"Oh, it's just that you referred to everything as yours, not ours, which is what I'm used to hearing when being interviewed for a position.\"\n\n\"Have you applied for many positions?\" she asked.\n\n\"A few, But they always want someone with more experience.\" He looked up at her with earnest eyes. \"Please give me a chance, ma'am. You won't be disappointed.\"\n\nVirginia liked the young man. She felt at ease around him and knew that he would work hard. \"Alright Danny, I'll give you a chance. The position is yours.\"\n\nHe gazed at her with eyes full of gratitude and for a moment she thought he might hug her. \"Oh, thank you, ma'am. Thank you!\"\n\n\"You're welcome, Danny. Now come with me and I'll introduce you to the rest of the staff.\" She took him to the kitchen where she found Dolly washing the breakfast dishes. Then Sarah who was washing the windows in the spare bedroom. Rosy was making the beds and came out into the hallway to meet the young man. Virginia noted that Rosy blushed quite a bit while being introduced to Danny and he did likewise.\n\nThe next month was torture for Virginia. The time seem to both fly by and crawl incredibly slowly. As the end of Drake's time with her came nearer she craved his company more and more. They went for long horse rides and spent many hours in the library playing billiards or just chatting by the fire. And she spent many hours at night in bed willing sleep to come but it always eluded her, leaving her with her thoughts and more often than not, tears\n\nOne afternoon Drake arrived home after being in town and announced that the repairs to the ship were finally complete. He had been to see her and she was once again magnificent.\n\nVirginia tried to share in his happiness. \"That's wonderful, Drake. When does she go back into the regular harbor?\"\n\n\"In a couple of days. I'm hoping to meet with Simpson tomorrow. He's been captaining a ship that runs between here and New York and he's due to dock in the morning. I must speak with him as soon as possible.\"\n\nShe fondly remembered Drake's first mate. Of course he would need to speak with him. New crew members would have to be hired and cargo arranged. He would be very busy over the next few weeks, she thought. She forced a smile. \"Say hello to him for me when you see him.\"\n\nWhen she emerged from her bedroom the next day, he was already gone. She had breakfast and moped about the house waiting for him to return.\n\nDrake returned to the house after lunch and found Virginia upstairs in her sewing room. She was just standing by the table staring down at her incomplete dress. Drake knocked on the door, startling her.\n\n\"I'm sorry I didn't mean to scare you,\" he said, unable to suppress a chuckle.\n\n\"Oh that's alright,\" she murmured. \"I didn't hear you ride up.\" She picked up the dress, and pretending to examine a seam, she asked, \"Did you see Simpson?\"\n\n\"Yes, I did. We discussed what needs to be done for the Aurora's return trip to England and he's going to take care of everything.\"\n\n\"Well, that's good, that he's so capable,\" she said lamely. She felt tears threatening her eyes and she blinked them back.\n\nHe approached her and stroked the dark violet fabric of the dress she was holding. \"This is going to look lovely on you,\" he commented.\n\n\"Thank you. Violet was always so annoyed that I looked better in this color than she did. It being her name of course,\" she said, laughing too loudly and putting the dress down.\n\nHe noted her agitated mood and flustered behavior. \"V, are you alright?\"\n\n\"Yes, I'm fine. Why do you ask?\" she said, once more picking up the dress only to put it down again. She suddenly couldn't bear to be in the same room with him and with a muttered, \"excuse me,\" she rushed through the door and down the stairs. She turned into her room and closed the door behind her. \n\nThe tears that had threatened a few minutes earlier finally burst forth and she sat down on the edge of her bed as they slowly streamed down her face. She wasn't going to be able to bear it when he left. Perhaps she should ask him to stay, tell him she loved him. No, it's too late, she thought. Simpson's already making all the arrangements to return to England. I'll be lucky to see him again this year, she thought, recalling how long he usually liked to stay in Liverpool before having to make another round trip, and he may not even come back to Williamsburg. The east coast was dotted with ports and his next cargo could be destined for any of them. In a few weeks he was going to sail away, right out of her life forever. She collapsed onto the bed as a fresh wave of tears overtook her and she swore she could hear her heart breaking.\n\nVirginia stayed in her room for several hours and finally emerged only after it was dark outside. She knew her eyes were red and puffy and she hoped that in the dim evening light, Drake wouldn't notice. She entered the library where she knew he would be. He greeted her and asked if she felt up to a game of billiards before dinner. \"No, not tonight, I think I'll just read a bit.\" She picked up her book and stared at the page, not really seeing the words. It took every ounce of her willpower not leap up and run into his arms, begging him to stay.\n\nAs soon as Virginia entered the room he had noticed her drawn face and puffy eyes. It tore at his heart to see her like this but he didn't comment on it. She declined his offer of a billiards game so he just aimlessly shot the balls about the table until dinner was announced.\n\nThey sat across the table from each other in a tense silence. Dolly reported back to the other two maids and Danny in the kitchen between serving the courses. \"They're not speaking to each other. The atmosphere out there is terrible. She's very upset and he seems most uncomfortable,\" she announced.\n\n\"Why doesn't one of them say something?\" Rosy said, exasperated. \"She should either ask him to stay or he should ask her to go with him.\"\n\n\"I'd rather if they stayed. Do you remember that time about a month and a half ago when they let their emotions get the better of them? They were so happy. Can you imagine it being like that all the time?\" Sarah said happily.\n\nIntrigued, Danny eagerly asked, \"What happened?\"\n\nRosy whispered back, \"Well, when Mr. Stratford was making the renovations to the stables, Miss Templeton went out there to get him for lunch one day. Well she was gone for so long so I went out to see if everything was alright. I found them together, on a pile of hay, and you can guess what they were doing. After about an hour they came back in and almost right away they were laughing like a couple of kids and he was chasing her up to her room. But by that evening, everything was back to normal. It was very strange.\"\n\nDanny stared at her with wide eyes.\n\n\"But he's leaving soon, and that's why she's so upset,\" Sarah added.\n\n\"I better go clear their plates,\" Dolly sighed leaving the room. She returned a few moments later with the plates, both of them hardly touched. She set them down and said, \"Not only are they not talking, they're not eating either.\"\n\nVirginia looked at Drake across the table. She nervously cleared her throat and asked, \"So, when does your ship sail?\"\n\n\"I'm not sure when she sails. It depends on how quickly Simpson can arrange things.\"\n\nNot looking at him, she replied, \"I see. And is he trying to arrange things quickly?\"\n\n\"Well, yes. The sooner everything is finalized the better. Only a fraction of the original crew is still here so new ones are being hired and loading the new shipment will take some time. But I would think she'll set sail back for England in a couple of weeks.\"\n\nStill avoiding his eyes, she again replied with, \"I see.\" She felt tears welling in her eyes again and quickly excused herself from the table and ran from the room, almost colliding with Dolly. Drake stood and almost rushed off after her in an attempt to talk to her and explain things, but instead he sat back down and let Dolly serve the next course of dinner.\n\nVirginia avoided him for the next week, taking Liberty out for long rides around the farm and staying in her room in the evenings. Drake missed her company and stood before her door more than once, tempted to knock on it and urge her to come downstairs.\n\nThe morning came for the ship to sail and Drake rose early, hoping to catch Virginia before he headed into town. He knocked on her door but received no answer. He cracked it open and found the room empty. She was already up. He hurried downstairs but Rosy told him she was already out, having taken Liberty for a ride.\n\n\"I tried to delay her, sir, but she went anyway,\" she explained.\n\nThoroughly deflated, he went back upstairs and got ready for the day. He dressed and waited in the house until the last minute before he had to leave. She still hadn't returned.\n\nHe went out to the stables and asked Danny if he could take him into town in the carriage. He sat in the cab looking forward to being back on the ship. He alighted from the carriage and spoke briefly with the young man before shaking his hand. Danny nodded and smiled before driving off.\n\nDrake scanned the crowd in the harbor looking for Virginia's red hair. She was nowhere to be seen.\n\nHe walked onto the docks and boarded the Aurora. He found Simpson and shook hands with his good friend.\n\n\"Is she all ready to go?\" he asked, looking up at the brand new billowing white sails and the gleaming deck, with hardly a scratch on it.\n\n\"Yes, sir. All ready,\" Simpson replied with a large smile.\n\n\"It's a good time for crossing. Spring is always good, pleasant weather with lots of wind,\" Drake said, walking around, greeting old crew members and being introduced to new ones.\n\nVirginia stood far away from the docks but close enough that she could see the Aurora. She was wearing a hat to hide her tell tale red hair and the shadow from the wide brim partially hid her face. She knew Drake was probably already on board and she had purposely waited until the last minute before coming to see the ship sail. She didn't trust herself to see him and thought it best to avoid the chance.\n\nSure enough, she only had to wait a few moments before the large ship began to move. She fought back tears as it slowly slid out of its berth and out of the harbor. Her heart broke all over again as it majestically sailed away. She watched until she could no longer see it and then slowly turned away. She pulled off the hat, letting her coppery hair spill down her back and walked to where she had tied up Liberty. As she approached she saw that her horse was nowhere to be seen. She looked wildly about, but she wasn't nearby. She sighed heavily, and knowing that Liberty knew how to get back to the house, she decided to hire a coach to take her home. It was then that Danny pulled up in her carriage, with Liberty tied to the back.\n\nShe stared at him bewildered. \"Danny, what are you doing here with the carriage?\" She looked at Liberty tied to the back. \"Where did you find her?\"\n\n\"I brought Mr. Stratford down earlier and I found Liberty wandering down the street. I saw you here looking for her and came over. Would you like a ride back?\" He was grinning broadly and seemed to be oddly excited about something.",
        "I guess he's never been a carriage driver before and must rather like it, she thought. She sighed and walked up to the carriage to open the door. With her mind a few miles out to sea she numbly pulled open the door and climbed inside.\n\nShe sat on the bench and froze. A pair of glowing amber eyes stared back at her. Drake. Was he really there? Her mind swirled, how could he be here, his ship just sailed away. She continued to stare at him, blinking, thinking she was surely losing her mind. The shock of seeing him, combined with the stress of the last few days finally took their toll and the carriage dipped and dimmed before she slumped over onto the seat.\n\nShe awoke to someone stroking her face and saying her name. Her eyes fluttered open and there were those warm eyes again. She tentatively reached out to touch him. \"You're here,\" she said, her fingers gripping his arm.\n\n\"Yes, V, I'm here,\" he said smiling at her. He was holding her in his arms across his lap.\n\n\"But, your ship! I saw it sail away!\" she said bewildered.\n\n\"You saw the Aurora sail away. Not my ship,\" he said with a twinkle in his eye.\n\nConfused, she closed her eyes and shook her head. \"But the Aurora is your ship.\"\n\n\"It was, up until a few months ago. It now belongs to Simpson. I sold it to him.\"\n\n\"You sold it to him?\" she asked, still confused.\n\n\"Yes, V, I sold it. I'm not leaving you. Now do you believe that I love you and will never hurt you?\"\n\nHer eyes welled with tears and she threw her arms around him, \"Oh Drake! Yes! Yes, I believe you!\"\n\nHe laughed at her happiness. \"Come on now, let me hear you say it, you love me too, don't you?\"\n\nShe pulled back and stared at him with glowing eyes. \"Yes Drake, I love you. I love you more than anything\"\n\n\"Why couldn't you tell me that before?\" he asked, still smiling at her.\n\n\"Because I wasn't sure of you. I thought you would sail away the very first moment...\" she suddenly paused as a thought struck her. Her eyes narrowed and she glared at him. \"You sold your ship to Simpson months ago?\" she shouted at him. \"And you let me believe all this time that you were going to leave me? How could you? Do you realize the torment you put me through?\" She began to struggle, attempting to get out of his arms. \"Let me go!\" she demanded.\n\nIgnoring her struggles, he said, \"At any time, did I say I was leaving? No. I only spoke of the Aurora leaving.\"\n\n\"And of course you omitted the part about no longer owning the Aurora. I hate you Drake Stratford! I want you to go back to England! I never want to see you again!\" She continued to struggle in his arms.\n\n\"Will you please stop wriggling around so much? And may I ask you something?\"\n\nRealizing that he wasn't going to let her go, she ceased her struggles. \"Of course, you can ask, but that doesn't mean I'll answer,\" she snapped.\n\nHe dug into his coat pocket as he said, \"I'm afraid my dear V, that I will require an answer to my question.\" She refused to look at him as he pulled the small velvet box from his pocket. He flipped the lid open and lifted it to her eyes. He cleared his throat and spoke. \"My dearest Miss Templeton, will you marry me?\"\n\nShe gasped at the shining emerald ring in front of her. She looked down at him with wide eyes. She could see the anxiety in his eyes and knew that this time he was serious. She stared again at the ring and holding his arm, she lowered it so she could see the shimmering green stone better. \"Well, do I get an answer?\" he asked, his voice betraying a note of nervousness.\n\nShe flung her arms around his neck again. \"Yes, Drake, yes. I'll marry you!\"\n\nHe pulled her to him and hugged her tightly. He drew away and said, \"Hold out your hand.\"\n\nShe did and he slipped the ring onto her finger. She tipped her hand back and forth in the light, watching it catch and shine on the stone.\n\n\"Do you like it?\" he asked.\n\n\"Yes, very much so,\" she said, her eyes again glistening with tears. \"It's perfect.\" She lifted her eyes and her gaze met his. As always, before she knew it, his lips were on hers and her mind was in a whirl. All she could think of was how happy she was.\n\nThey arrived back at the house and Danny had to loudly clear his throat several times before they finally heard him. Virginia looked up and saw that the carriage had stopped and Danny was holding the door open for them. She blushed and giggled before getting up from Drake's lap and alighting from the cab. They slowly walked up the steps to the house and walked inside, where he took her face in his hands and gently kissed her. In an action that reminded her of Billy, he tipped his head back and shouted, \"She said yes!\"\n\nRosy, Dolly and Sarah rushed out of the kitchen and embraced her. Virginia looked bewildered at the three young women. \"You knew? You all knew?\"\n\n\"Only since yesterday, ma'am,\" Rosy said. \"It was so hard letting you go this morning, when you went off before Mr. Stratford even got up,\" she said, shaking her head.\n\n\"I was wondering why you were trying to make me stay,\" she said.\n\n\"Oh ma'am, we're just so happy for you. We knew all along that you loved each other and when Mr. Stratford told us last night of his plan we knew you wouldn't be able to resist. It was just so romantic.\"\n\n\"It almost didn't work. She was quite angry with me in the carriage when I told her that I had sold the ship months ago,\" Drake said, still holding her about the waist.\n\nShe wriggled out of his grip. \"And I still am angry. You're going to have to work very hard to get me to forgive you for that. The torment, the agony, the pure torture you put me through!\" she said, her voice rising.\n\n\"Would you have believed me if I had told you months ago?\" he asked.\n\n\"Probably not,\" she admitted. \"But it doesn't matter, you were still very mean and you're not going to get away with it that easily.\"\n\nHe saw the sparks flashing in her eyes and said softly, \"I wouldn't half mind if you continued to be angry about it. Those sparks in your eyes are most flattering.\"\n\nShe glared at him but her gaze softened when she saw sparks in his eyes as well, but they were of an entirely different nature. Her anger quickly turned to passion and she looked at him with a heat in her eyes that he hadn't seen for some time. He took a step towards her but she stepped away. He lunged for her as she shrieked with glee and ran up the stairs with him right behind her. They ran down the hallway to her bedroom, slamming the door behind them.\n\nThe three maids watched them from the foyer. They shook their heads and walked back into the kitchen. Danny was there and told them about what had happened in town. \"Oh yes, she was mad. I could hear her yelling at him, and I thought, 'oh no, the whole things off!'\"\n\nDrake suddenly flung the door of the kitchen open. His coat and waistcoat were both gone, his shirt was untucked and his hair was hanging about his shoulders. He quickly placed three bottles of wine on the counter and said, \"Have a drink to celebrate our happiness.\" He turned to leave but turned back and said with a grin, \"I don't think we'll be needing anything more today so enjoy the wine.\"\n\nThey laughed as they heard him running up the stairs and down the mezzanine above their heads.\n\nFour months later - August, 1799\n\nElizabeth and Virginia were in her sewing room. Virginia pulled the partially completed wedding dress over her head. Elizabeth gasped. \"Oh Ginny, it's just lovely.\"\n\nShe twirled before the mirror, liking what she saw. \"Thank you Lizzy. I think it'll look wonderful when I finish.\"\n\nBilly and Elizabeth had returned from their honeymoon to find the house abuzz with wedding plans. They were delighted for them and couldn't wait to help. They were also delighted to find maids in the house. After being waited on hand and foot for the past seven months, they weren't looking forward to returning to all the work that the house required.\n\nDrake had started on the out-building but it wasn't finished yet so they were still staying in the main house and Virginia had never been happier. It was almost like being part of a big family.\n\nShe made some marks on the dress and some notes before carefully removing it. Rosy poked her head in the sewing room to let them know that lunch was ready. \"Has Drake come back from town, yet?\" she asked.\n\n\"No, ma'am, not yet. Shall I wait with lunch?\"\n\nVirginia's stomach growled and she laughed. \"No, Rosy. If he misses it, that's his fault.\"\n\nDrake had been going into town almost every day for the past couple of weeks, claiming to be waiting for the Aurora to return. He said he was anxious to hear from Simpson how the crossings went. She kept reminding him that it was far too soon for them to be back, but Drake wouldn't hear of it.\n\nBilly came in from the out-building and was just washing up when Virginia heard a carriage pull up out front. \"Well, he's arrived just in time,\" she said.\n\nShe heard the front door open and a few moments later Drake rushed into the library. He had a large smile on his face and he grabbed her arm. \"Come with me. Close your eyes. I have a surprise for you,\" he said, tugging on her arm.\n\nMystified as to what he was up to, she complied. \"Must I close my eyes right away?\" she asked as he led her from the room. He led her into the sitting room and sat her down. He told her to open her eyes and as she did, a squeal of delight peeled out of her. Sitting across from her was a young woman with a large mass of black hair in an elaborate arrangement, wearing a rather low cut dress for the middle of the day. She was staring back at Virginia with dancing blue eyes.\n\n\"Violet!\" she cried and flung herself across the room at her friend. The two women embraced and after drying their tears, Violet explained how she had received a letter from Drake inviting her to the wedding.\n\n\"I couldn't possibly miss your wedding day, especially since it took such a long time in coming,\" she said with a giggle.\n\n\"How long ago did you send that letter?\" she asked, looking up at her future husband.\n\n\"A month before I asked you,\" he admitted.\n\n\"Well, that was rather presumptuous of you. What if I had said no?\" she said.\n\n\"I knew you would say yes. How many times have I told you that you're the only woman for me and I'm the only man for you?\"\n\nShe rose and melted into his arms. \"Yes, you were right. All along you were right.\" She pulled back and looked up at him. \"It was her ship you've been waiting for wasn't it? Not the Aurora.\"\n\n\"That's right. I wanted it to be a surprise, so I couldn't tell you,\" he said, obviously pleased that he had succeeded. \"I was actually hoping she would be a couple of more days so that it would be your birthday, but is this alright?\" he asked.\n\n\"Yes, it's wonderful. Thank you,\" she whispered.\n\nThree weeks later - Saturday, August 24, 1799\n\nVirginia twirled around the dance floor, lost in Drake's eyes. It was their first dance as husband and wife. Their wedding earlier in the day had been beautiful and now they were married and dancing in the ballroom of their home. She liked the way that sounded, 'their home'.\n\nAs they floated about the floor she caught a glimpse of Violet. She had changed from the demure dress she had worn during the wedding to one of her more scandalous gowns and now had a throng of men about her. Virginia laughed, so delighted to have her flamboyant friend nearby again.\n\nAlong with the Aurora sailing off to England under a new captain Drake had also entrusted Simpson with closing his home in Liverpool and transporting his belongings back to Williamsburg. Simpson and the original crew members of the Aurora were all present at the wedding and were joyously recounting tales of how Virginia had stowed away aboard the ship and fallen in love with Drake.\n\n\"They're wrong you know,\" she said referring to the sailors. \"I fell in love with you the moment I first looked into your eyes on that wintry street in Liverpool a year and a half ago,\" she said gazing into his warm eyes.\n\n\"So did I,\" he replied.\n\n\"So how is it that it took us so long to get to this moment?\" she asked with a smile.\n\n\"Well let's see, first there was Charles, who was all wrong for you, then Thomas, who, also, was all wrong for you - you weren't very good at picking fianc\u00e9s, my dear - then you wouldn't trust me and then you hated me, then went back to just mistrusting me.\" He paused and looked thoughtful. \"I do believe it was all your fault,\" he said looking down at her with a serious expression.\n\nShe opened her mouth about to utter a sharp retort, when she saw the smile teasing at his lips. \"Why you...\" she said, smiling herself.\n\n\"It doesn't matter now, because I always knew,\"\n\n\"That I'm the only woman for you and you're the only man for me,\" she said, finishing his sentence.\n\n\"It's undeniable,\" he said, gazing into her shining emerald eyes, continuing to twirl her about the dance floor.\n\nThe dance ended but they stayed on the floor as other couples slowly joined them. After three dances, Virginia begged a rest. \"Mr. Stratford, you're going to have be a little more gentle with me,\" she said as she sank into a chair.\n\n\"What are you talking about?\" he said handing her a glass of wine.\n\nShe gently pushed the glass away and looking up at him, said, \"Surely you didn't think that behaving like husband and wife for the last few months wouldn't result in something, did you?\"\n\nHe gazed down at her, his brow furrowed in confusion. \"There hasn't been talk has there?\" He looked about the crowded ballroom, before sitting beside her. \"Even if there was it doesn't matter now that...\" He trailed off as he noticed Virginia gently stroking her abdomen and looking at him meaningfully.\n\n\"You mean...\" he whispered.\n\n\"Yes,\" she said smiling.\n\nHe leaned forward and pulled her to him. \"Oh V! Really? A baby?\"\n\n\"Yes, a baby,\" she said, tears glistening in her eyes.\n\n\"A family,\" he said, gazing at her in wonder, his voice barely above a whisper.\n\nFive Years Later\n\nDrake leaned over and dangled another strawberry above Virginia's mouth. She lifted her head from the blanket they were lying on and tried to grasp it with her teeth. He kept pulling it away, teasing her with the berry. He finally let her have it and then leaned over and kissed her deeply, tasting the sweet fruit in her mouth.\n\n\"Oh no, they're kissing again!\" a young voice called out.\n\nDrake lifted his head and smiled at the two small children staring at them with distaste. The little girl giggled and ran off chasing a butterfly that had flown into the backyard. Drake laughed watching her long red curls bounce as she ran, her green eyes sparkling with laughter.\n\n\"Victoria looks more and more like you every day,\" he whispered.\n\nThe little boy came and rolled onto the blanket, his dark hair tumbling into his hazel eyes. \"Are we going to Aunt Violet's tonight?\" he asked.\n\n\"Yes, Gregory, we are,\" Virginia replied. Violet had fallen in love with Williamsburg the moment she arrived. The constant activity of the growing town had appealed to her. She had bought an estate close to town and had already had two discreet but none the less scandalous romances and was currently involved with a visiting Duke who was intensely smitten with her. She was holding a party that night to celebrate Virginia and Drake's fifth wedding anniversary.\n\n\"And will Uncle Billy and Aunt Lizzy be there too?\"\n\n\"Yes, they'll be there too,\" Drake answered. \"And your cousins.\"\n\n\"Hooray,\" he cheered, jumping up and down. \"Can I have some strawberries too?\" he asked gazing at the bowl of fruit.\n\n\"Yes, you can. And take some to your sister,\" Drake said to his son, as he ran off with the bowl.\n\nVirginia lay back and gazed up at the puffy white clouds and she suddenly recalled a day, long ago, shortly before Drake had arrived back from England where she had fantasized about this very scene. She smiled as she remembered how hard she had tried to place a different face over his but was unable.\n\n\"What are you smiling about, V?\" he asked, leaning over her.\n\n\"Just how happy I am. How this is all I've ever really wanted,\" she said, reaching up and stroking his cheek.\n\n\"A family?\" he asked.\n\n\"Yes, but more importantly, a family with you,\" she said softly. \"And with three children it will be even better.\"\n\nHe pulled back and looked down at her. \"Three?\" he asked, placing a hand gently on her stomach.\n\n\"Yes, three,\" she replied, smiling at him.\n\nHe leaned down and pressed his lips to hers as she wound her hands around his neck, pulling him close. His hair fell down around her cheeks as she faintly heard a cry of \"Kissing!\"\n\nWhen he finally pulled away from her they were both breathless. \"Should we call Rosy to come out and look after the children for awhile?\" he asked, his golden eyes glowing.\n\nThe End"
    ],
    "authorname": "opels",
    "tags": [
        "virginia",
        "drake"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/an-undeniable-passion-ch-25"
}