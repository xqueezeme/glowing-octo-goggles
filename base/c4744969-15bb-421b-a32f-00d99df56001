{
    "title": "Just a Little Magic Ch. 02",
    "pages": [
        "JUST A LITTLE MAGIC Chapter 2\n\nI was stunned. Gobsmacked. Janine ... raped? And dead nine months later? The date Lillian had mentioned was less than nine years away.\n\nI looked over at Janine. She seemed pretty calm - maybe she'd had a long time to get used to discussing this subject. I turned back to Lillian.\n\n- \"How .. how can you know this?\"\n\n- \"I was tracking Janine's future. Obviously, not a day at a time. But I checked in on her birthdays. When I looked for her on her 28th birthday ... I couldn't find her.\"\n\n\"She was dead. She died a day after giving birth. I was shocked. But I also found it strange, because on her 27th birthday, she didn't have a boyfriend, much less a husband. I went back 9 months, to the moment of conception.\"\n\nLillian was also fairly calm as she told me this story. She had impressive self-control - or perhaps she'd also had time to get used to the facts she was relating.\n\n\"Janine was sedated, Pete. It wasn't a drug. It was a spell.\"\n\n- \"A magician?\"\n\nLillian paused, to take a sip of her drink.\n\n\"No, Peter.\" she said. \"It was an archmage.\"\n\n- \"Is an archmage ... like an archbishop - one step higher?\"\n\n- \"An archmage is much more powerful than a mage. By several orders of magnitude.\"\n\n- \"Were you able to find out who it is?\"\n\n- \"Yes.\" said Lillian. \"His name is Robert Clifford.\"\n\n***\n\nMy real father was an archmage? And a rapist? A murderer?\n\nHe'd gone to the hospital where Janine delivered the baby. He killed her, and stole the child. No: he was going to do that - in the future.\n\n- \"Why would he do that?\" I asked. \"It's unbelievable!\"\n\n- \"I asked myself the same thing.\" said Lillian. \"Why would he kill Janine? And why steal the baby? But then I wondered if he had done the same thing to someone else.\"\n\n\"It was difficult, time-consuming, and extremely painful. I'd seen your - Clifford. I followed him back through time, one day at a time. And then I saw it.\"\n\n\"One month before Janine's murder, he murdered a woman who had just given birth, in Osaka, Japan. Police were baffled, because her newborn child was missing.\"\n\n\"And one month before that, he murdered a woman in a hospital in Tampa, Florida. Her newborn baby had disappeared, too.\"\n\nThis was the freakiest story I'd ever heard. My father was a serial killer? And baby-snatcher? I glanced at Janine, but her face was expressionless.\n\n\"That made me wonder if there was a pattern of some kind.\" said Lillian. \"Three dead women. Three stolen babies. Why would Clifford want these babies?\"\n\nI did a little research on the two other women, in Japan, and Florida. Do you know what I found?\"\n\nI shook my head.\n\n- \"Both of those women were from magically-talented families.\"\n\n- \"What? How could you know that?\"\n\n- \"We know these things, Pete. If a magically-talented woman is looking for a magically-talented man, she can find one. We keep track of bloodlines. If Janine had wanted talented children, she might have found a Baba who would have suggested a mate like ... you.\"\n\nMe?\n\nI couldn't help it - I looked to Janine. There it was - that incredible expression that I found so daunting, and yet so appealing at the same time: half-closed eyes, the quarter smile ...\n\nDamn. Janine and me?\n\n- \"Wait - what's a Baba?\"\n\n- \"A matchmaker. She knows the magical families, and can find a suitable husband or wife - if you're looking.\"\n\n\"I'm sorry.\" said Lillian. \"I got side-tracked. Back to the story: I looked into mysterious deaths of talented women, combined with missing babies. I wasn't surprise to discover that there were several - and none of the girls involved were married at the time. Then I began to backtrack, nine months earlier, to find out who had impregnated them.\"\n\n- \"No.\"\n\n- \"Yes. Clifford, every time. It took me a year to track him down on every occasion, but once I had a pattern, it was easier to follow.\"\n\n- \"A pattern?\"\n\n- \"Oh yes.\" said Lillian. \"That's the whole reason behind it. At first, I couldn't understand how the dates of the murders were connected. Then I went further back, looking for some kind of link between the women involved. May I show you something?\"\n\nShe reached under their coffee table, and slid out a briefcase. Lillian opened it, and pulled out a single sheet of paper. She handed it to me.\n\nJANUARY 9 2001\n\nFEBRUARY 8\n\nMARCH 9\n\nAPRIL 7\n\nMAY 7\n\nJUNE 5\n\nJULY 5\n\nAUGUST 4\n\nSEPTEMBER 2\n\nOCTOBER 2\n\nNOVEMBER 1\n\nNOVEMBER 30\n\nDECEMBER 30\n\nIt made no sense to me. \"I'm sorry ...\" I said.\n\n- \"My birthday is December 30th.\" said Janine.\n\nI looked at the paper again.\n\n- \"The woman in Japan? She was born November 30th?\"\n\n- \"Yes.\" said Lillian.\n\n- \"And the woman in Tampa? November 1st?\"\n\n- \"Yes.\"\n\nI understood. But I didn't.\n\n- \"What does it mean?\"\n\n- \"Count the dates, Pete.\" said Lillian.\n\n- \"Thirteen.\"\n\n- \"Do you notice anything else?\"\n\n- \"They're ... about a month apart?\"\n\n- \"Think of magic.\" said Lillian. \"And the number 13.\"\n\nIt took me a moment. I was thinking of a Baker's Dozen, and playing cards (13 cards in each suit). Unlucky number 13. Magicians ... and finally I thought of female magicians.\n\n- \"Witches?\"\n\n- \"There are 13 witches in a Great coven.\" said Lillian. \"All of these women were - are - magically talented. And the significance of those dates? All 13 were born on the night of a full moon.\"\n\n- \"Is that bad?\"\n\nLillian looked solemn. \"Their children could be especially powerful.\" she said.\n\n\"But it's worse than that. Look at the dates of the rapes.\" She produced a second page from the briefcase.\n\nJANUARY 14 2028\n\nFEBRUARY 13\n\nMARCH 13\n\nAPRIL 12\n\nMAY 11\n\nJUNE 10\n\nJULY 9\n\nAUGUST 8\n\nSEPTEMBER 6\n\nOCTOBER 6\n\nNOVEMBER 5\n\nDECEMBER 4\n\nJANUARY 3 2029\n\n\"Thirteen women murdered. Their daughters all stolen at birth - and all conceived the night of a full moon.\"\n\n\"Robert Clifford is going to create a coven of witches: all his daughters, all conceived under a full moon - from thirteen magically-talented mothers, all born under a full moon.\"\n\n***\n\nIt was too much to take in. Lillian gave me a few moments to absorb what she'd just told me. It didn't make sense. It was just too ... weird. Too monstrous.\n\nI shook my head.\n\n- \"Wait - how can he be sure that these women will end up ... pregnant? And how can all of the babies be female?\"\n\n-\"Magic.\" said Janine.\n\nOh. That.\n\n- \"Okay.\" I said. \"If he only gets 12, that's not a coven - is it? So, if you were to get an abortion - wouldn't that stop his scheme? No reason to murder you if there's no baby to steal, right?\"\n\n- \"Magic.\" said Lillian. \"He would put a spell on these girls. They would find that they were happy to be pregnant. They would want to bear these children.\"\n\n- \"He's that powerful?\"\n\n- \"Oh, yes. And with a coven like that ... the damage they could do is incalculable.\"\n\n- \"But .. isn't someone going to notice? I mean, if 13 women are murdered and their newborn babies are stolen?\"\n\n- \"They'll be spread around the world, Pete. Think of it this way: roughly 360,000 babies are born every day. Slightly over 50% are female. Let's leave it at 180,000, for the sake of simplicity.\"\n\nThe frequency of children born into magical bloodlines is 1 in 25,000. That means that roughly 7 magically talented babies are born every day.\"\n\n- \"That's all?\"\n\n- \"That's it. So, on average, 3 or 4 females. Sometimes, though, only one. Then there are the ones that don't survive to adulthood, because of illness, accident, war ...\"\n\n\"When Clifford is looking for a magically-talented female born on, say, the 9th of January, 2001 - there may only be one - and she could be anywhere in the world.\"\n\n\"That's why a series of murders and abductions, spread around the globe, won't attract any attention until it's far too late.\"\n\nThat was depressing. Still, I had a few more brilliant ideas. That is, I thought they were pretty smart until I actually said them.\n\n- \"Couldn't Janine hide? Or move?\"\n\nJanine rolled her eyes.\n\n- \"Magic.\" said Lillian. \"He could find her anywhere in the world.\"\n\n- Well, couldn't you, like, gang up on him, or something?\" I said. \"What if the families of the other 12 women joined up with you? Aren't they mages, too? Couldn't you overpower him?\"\n\n- \"Very few magically talented people actually develop their skills, Pete. Your mother and you, for example: you didn't even know that real magic existed. She has talent, but has never used it. Her skills are non-existent.\"\n\n\"We can't kill him, or even imprison him. We just don't have that kind of power.\"\n\n- \"What about -?\"\n\n- \"The Police?\" Lillian had actually read my mind again. \"Do you remember my airline example? Besides, can you picture me in a police station, trying to tell them that my daughter is going to be raped and murdered ... eight years from now?\"\n\nIt all sounded so hopeless.\n\n- \"There must be something you can do. We have to stop him, somehow.\" Oops - somewhere along the way, 'you' had turned into 'we'. But I would help, if I could. I didn't want anything bad to happen to Janine, or any of those other women.\n\n\"Can't you get help? From someone?\"\n\nLillian gave me a tired smile.\n\n- \"That's what we are doing, Pete.\"\n\nIt took a couple of seconds for me to catch on.\n\n- \"Wait. Me? What can I do? I can barely move a playing card!\"\n\n- \"That's actually quite impressive, for someone who's only been practicing for such a short time. But, no - we don't expect you to confront your father, or to challenge him.\"\n\n- \"Thank God for that!\"\n\n- \"No, Peter. We can't challenge your father directly. But we are hoping that you'll help us to fool him. If we can't beat him, perhaps we can still deceive him.\"\n\n- \"And save my life in the process.\" said Janine. \"Not to mention 12 more girls.\"\n\nI looked at Janine. I'd lie down on railroad tracks with a train coming to save her life. And if there was the slightest chance that she'd think of me as a hero afterwards - that she might feel inclined to show me her gratitude - well, doing a good deed doesn't always have to be its own reward, right?\n\nWhat an idiot. We're talking about a life and death situation - rape and murder - and I'm fantasizing about Janine.\n\n- \"I want to help.\" I said. \"What can I do?\"\n\nLillian paused, and looked me in the eye.\n\n- \"You can have sex with these women, and impregnate them before your father does.\"\n\n- \"I'm sorry - did you just say ...?\"\n\n- \"Yes. If they're already pregnant, then he can't impregnate them.\"\n\nShe was serious.\n\nIt was the weirdest, most unbelievable, most insane thing I'd ever heard in my entire life. Okay - I had just turned 18, so it wasn't that long a life. And in terms of sexual experience ... well, let's just say that I knew more about magic - real magic - than I did about sex.\n\n- \"I think we've overloaded him, Mother.\" said Janine.\n\nLudicrous. Ludicrous piled on top of preposterous. Utterly and completely ridiculous.\n\nThe ladies took a short break. Lillian returned with a beer and a glass for me. Technically, I was underage, but consider the topics we'd been discussing, it didn't seem all that unreasonable for me to have a beer.\n\n- \"Thank you.\"\n\n- \"Are you familiar with the cuckoo, Pete?\" she said.\n\n- \"The clock? Or the bird?\"\n\nJanine rolled her eyes again. \"The bird.\" she growled.\n\n- \"Many species of cuckoo are brood parasites.\" said Lillian. \"The female lays her eggs in the nest of another species of bird. Those birds end up raising and feeding a cuckoo as one of their own.\"\n\n- \"Is that real?\"\n\n- \"Very. And what we're suggesting here is that you be the cuckoo to your father's agenda.\"\n\n- \"I'm sorry ...\" I said. \"It just seems ... far-fetched.\" Oddly enough, I believed in magic, so I could accept the idea of archmages, witches and covens, full moons ...\n\nBut I had a hard time believing that a dozen women would want to bear my child. Even one would be a bit of a stretch.\n\n- \"Our plan is quite complicated, Pete.\" said Lillian. \"We know that you're not really much of a ladies' man at this stage.\"\n\n- \"That's putting it mildly.\" I said. Or maybe it was the beer talking.\n\n- \"We have almost eight years to prepare, though.\" she continued. \"With our coaching, you can become a mage. We can also help you to become more attractive to women.\"\n\n- \"Really?\" I didn't know which idea was more far-fetched: that I could be a mage, or that I could be attractive to women.\n\n- \"Magic.\" said Janine. She didn't add the word 'dumbass', but I heard it - again.\n\n- \"We'll train you, Pete.\" said Lillian. \"We can help you to become a world-famous magician. We can also help you to become more ... successful with women.\"\n\n\"You'll be rich, famous, appealing ...\"\n\n- \"Okay. Let's imagine - just for a second - that what you say is possible. Why would 12 different women agree to have a child with me?\"\n\n- \"Magic!\" said both Janine and Lillian, in chorus.\n\n- \"What? You mean, put a spell on them? Just like my - Clifford would?\"\n\n- \"There's a big difference.\" said Lillian. \"We'd be doing it to save them.\"\n\n- \"How's that going to save them? He'll just rape them, and then kill them anyway, and take the babies.\"\n\n- \"No. When he realizes that he's been fooled, he'll understand that there's nothing he can do about it. Revenge would be pointless - there would be no point in harming the women. He wouldn't want to risk antagonizing families with talent, either.\"\n\nThere was a big hole in her logic. Actually, several big holes. I couldn't quite figure it out, though; every time I tried to organize my thoughts, they scattered like hyper-active puppies. What I could do was ask more questions - those were just single thoughts.\n\n- \"Umm - what if he found out? Wouldn't he realize, before he raped them, that they were already pregnant? Or ... if he checked, afterwards - wouldn't he know that they were pregnant by someone else?\"\n\n- \"That's precisely why we need you, Pete. Your magical bloodline is the same as your father's. They're virtually indistinguishable, like a signature, or a fingerprint.\"\n\n- \"Like magical DNA.\" said Janine.\n\nI was still struggling to accept that, when a new thought struck me: \"What about when he comes to steal the babies? Won't he still murder the mothers?\"\n\n- \"We'll move them.\" said Janine. \"But we'll make sure that he gets access to the baby. That's when he'll realize that he's been fooled.\"\n\nThat didn't make sense. If we could hide the mother ... wait - he would know?\n\n- \"He's going to know? He's going to know it was me?\" I started hyper-ventilating.\n\n- \"He won't harm his own flesh and blood, Pete.\" said Lillian.\n\nReally? I wished that I could share her confidence.\n\n***\n\nIn the coming days, I found further questions and reservations about Lillian's plan.\n\n- \"Do you where he is, right now? Clifford, I mean.\" I couldn't bring myself to call him my father. I'd never known him, for one thing, and for another, I really didn't want to be connected to him in any way, given what he was planning.\n\n- \"He would know right away, Pete, if I tried to scry him.\" said Lillian.\n\n- \"Scry?\"\n\n- \"It's a spell that allows me to watch someone from afar.\"\n\n- \"So you could find him, if you had to ...\"\n\n- \"Drawing his attention to us is the last thing we want to do.\"\n\n- \"I know. But isn't there some kind of - I don't know - like a Council of Mages?\" I was thinking of the White Council from Lord of the Rings. I wouldn't have minded having Gandalf, Elrond and Galadriel on our side.\n\nBut Lillian shook her head. \"There's no such thing. Witches and mages are far too independent to accept any kind of authority. Except for witches' covens, which are usually no more than three - 13 is the absolute maximum - most wizards won't collaborate with other spell casters. It requires too much trust.\"\n\nJanine reached out, and placed her hand over mine.\n\n- \"I trust you, though.\" she said.\n\nI was the biggest fool in Creation. I was overwhelmed by all of the information Lillian had presented me with. It sounded crazy, and dangerous, and way, way over my head.\n\nYet all I could focus on was the fact that in order to save Janine, I would have to impregnate her. I would be having sex with Janine. And saving her life, of course. That too. She would be grateful for my help, right? She might even want to have sex with me again - afterwards.\n\nPlus I'd be having sex with other women. Twelve other women. Okay, it'd be years from now. But still ...\n\nI would be a hero. The hero who gets the girl. Girls. If I survived. If I could pull it off.\n\n- \"I just ... I don't know if I can do this.\" I admitted.\n\n- \"You can, you know.\" said Lillian.\n\n- \"You have to.\" said Janine, softly.\n\n***\n\nJanine and Lillian swore me to secrecy.\n\n- \"Who am I going to tell? They'd never believe me!\"\n\n- \"We're serious, Pete.\" said Lillian. You can't tell anyone about the plan, or about your father. And you certainly shouldn't let anyone know that you can do real magic - especially your mother.\"\n\nJanine saw my face.\n\n- \"What did you do?\"\n\n- \"Umm ... Sammy kind of knows that ... the magic is real.\" I said. \"It's not his fault. He was with me when your first package arrived, and -\"\n\n- \"Who is Sammy?\" asked Lillian.\n\n- \"Pete's best friend.\" said Janine. \"His only friend.\"\n\nI didn't object. That was harsh - but true.\n\n- \"Well, there's no point crying over spilt milk.\" said Lillian. \"If he already knows about magic ... then he knows. But you must not tell him about the plan. Understood?\"\n\n- \"Yes. Absolutely.\"\n\nThen Lillian asked for permission to hypnotize me.\n\n- \"What? Why?\"\n\n- \"To make it simpler for me to find you - to scry you, if necessary. I can do it easily with Janine, but you and I aren't related by blood. This will make it much easier for me to locate you, should the need arise.\"\n\nI was hesitant. It sounded cool, in a way - like having some kind of Guardian Angel watching over me. But hypnotism?\n\n\"It will allow me to find out if there are any threats to you out there, Pete. Any danger. Then we can take steps to protect you.\" continued Lillian.\n\n\"We really have to do this if we're going to continue.\"\n\n- \"Okay.\" I said. When she put it that way ...\n\nAt first, it felt like soft fingers on my scalp, gently massaging - except that Lillian wasn't actually touching me. Then, it got a bit creepy: I could feel the soft fingers on the inside of my skull, stroking ...\n\nFascinating, but uncomfortable at the same time. Apparently it wasn't too uncomfortable - I fell asleep in the middle of the process.\n\nTwo hours later, I woke up.\n\n- \"You fell asleep.\" said Lillian. \"That's not an unusual reaction. You seemed really tired, though, so I let you sleep a bit longer.\"\n\n***\n\nA week later, mother and daughter were prepared to explain certain aspects of their plan to me. They sat me down, and served me coffee.\n\n- \"First off,\" said Lillian, \"you're going to have to travel around the world to meet these women. That will take a certain amount of money.\"\n\n- \"You're going to have to be famous, too,\" said Janine, \"so that those women will want to meet you. It would really help if you could be cool enough, and suave enough to attract their attention.\"\n\n- \"Rich, famous and cool?\" I said. \"That's a bit of a tall order. How am I supposed to do that?\"\n\n- \"We're going to help you become a world-class magician.\"\n\nThey were dead serious. And then a thought struck me.\n\n- \"You've been planning this since my 13th birthday?\"\n\n- \"Long before that.\" said Lillian.\n\n- \"Wow ...\"\n\n- \"And one more thing: you can't expect 12 women to want to bear your child the first time that you're with them. You're going to have to impress them. You'll have to become an accomplished lover.\"",
        "- \"Really?\" Now, that sounded interesting. Very interesting. But I had to face facts: I was a geeky 18 year-old virgin.\n\n\"How am I going to do that?\"\n\n- \"I'll teach you.\" said Janine.\n\nYowza.\n\n \n\n***\n\nLillian taught me magic. She was demanding, but patient. I began to think of her as a combination of Yoda and Mr. Miyagi. But much better-looking, of course.\n\nJanine didn't really take after her all that much; Lillian was taller, with red hair. I didn't mind spending time with her at all.\n\nI made progress - just not very quickly.\n\n- \"You started late, Pete. That's nothing to be ashamed of. And most of what you did early on were simple parlour tricks. It just means that you have to work hard if you're going to catch up to Janine. Be patient. You have talent - it will come.\"\n\nIt soon became apparent that mentalism was my strongest discipline.\n\nLillian put 4 cards on the table in front of me, face down.\n\n- \"Which one is the Queen of Diamonds?\" she asked. \"Don't look at the cards! Look at me!\"\n\nIt didn't happen right away. We had several fruitless, frustrating lessons. But I gradually became aware that when I looked at Lillian - when I concentrated on her - I could hear a voice. Her voice. She wasn't speaking to me, exactly. It was more like she was just around the corner, talking out loud to herself. Or to someone else that I couldn't see.\n\n- \"I still feel ... awkward, listening to your private thoughts.\"\n\n- \"Don't be shy. If I wanted to shield my thoughts, you wouldn't hear a thing. Listen closely to what I'm telling you about the cards - just by thinking about them.\"\n\nIt took concentration, but I found that I could sift through the stream of consciousness (for lack of a better expression), and pluck out the references I was looking for.\n\nI flipped over the Queen.\n\n- \"Now the six of hearts.\"\n\nI got the first three cards, one after the other. The fourth card was still face down.\n\n\"Alright.\" said Lillian. \"Now tell me: which card is that?\"\n\nI eavesdropped on her thoughts again.\n\n- \"Nine of spades.\" I said. It wasn't even a guess. I knew it.\n\nLillian flipped it over.\n\n- \"Well done! See how easy that was?\"\n\n- \"Wow.\" Even I was impressed with myself.\n\n- \"You should be pleased.\" said Lillian. \"You're making tremendous progress.\"\n\n- \"Thanks.\" I didn't feel that way. \"I wish I could do as well with the other disciplines.\"\n\n- \"You probably didn't know this, Pete, but mentalism is fairly rare. You should be proud of your skill.\"\n\n- \"But you and Janine -\"\n\n- \"Not so much. Not the way you can.\"\n\n- \"Really?\"\n\n- \"Really. Now let's try six at a time.\" she said.\n\n***\n\nMeanwhile, Janine took charge of other aspects of my education. First, though, she wanted to see my wardrobe.\n\n- \"You mean my clothes?\"\n\n- \"That's what a wardrobe is.\" she said, with a sigh.\n\nWhere Lillian was patient, and often encouraged me, Janine was harder to please. She shook her head quite often, so that I began to wonder if I was ever going to be able to rise to whatever standard she was expecting.\n\nWhen she came over to see my closet (while my parents were at work), Janine couldn't hide her ... revulsion? Disgust? Whatever it was, it was well past disappointment.\n\n- \"We have to buy you some clothes.\" she declared. \"How much money do you have?\"\n\nI ended up contributing about $600 - half of the money I had to my name. Janine took me shopping.\n\nCasual shirts and pants. Dress pants and more shirts - with buttons.\n\n- \"Aren't those expensive?\" I asked.\n\n- \"Never mind the prices. Quality first.\" she said.\n\nA couple of pullover sweaters. Belts. Socks. Shoes - lots of shoes. Underwear.\n\n- \"I have underwear.\" I protested.\n\n- \"Burn every last one of those things.\" said Janine.\n\n- \"What?\"\n\n- \"Imagine yourself with a woman - a woman who wants to have sex with you. What is she going to think when you drop your pants for the first time, and she catches her first glimpse of those tighty whities with the frayed edges?\"\n\n- \"Umm ...\"\n\n- \"That's correct. It's called 'Coitus Preventus'. In other words - you ain't gettin' any.\"\n\nHarsh. Janine was often harsh. But she was probably right (who was I kidding? She was right. I was getting priceless advice here).\n\nI got more than advice. I got three suits, and a couple of ties (which I didn't know to tie). When I saw the bill, my heart stopped.\n\n$2300.\n\n- \"Janine ...\"\n\n- \"Relax, Pete. I've got this.\" She pulled out a credit card.\n\n- \"Janine -\"\n\n- \"Look: don't worry about it. We're investing in your future, alright. When you start pulling in serious money, you can pay me back, okay?\"\n\nI was encouraged by her confidence - that I would be making money some day. But I was also so completely under her spell that I would have done anything she suggested.\n\nJanine took me for a haircut, too. Then she dressed me in my new blue suit, and took me to an upscale restaurant, where she proceeded to teach me how to order drinks (what? you think any waiter in his right mind was going to ask me for I.D., when I was with Janine?)\n\n- \"You look fantastic.\" I said.\n\n- \"Thanks. Read the menu.\" Then she sighed. \"Thank you, Pete. That was nice of you to say - and at the right time, too. Just remember that your date may not know what to order. If you haven't been to this restaurant before, you'd better get familiar with what they offer, so that you can suggest something she'll like.\"\n\n\"But that's advanced class stuff. We'll get there, eventually. For now, let's work on the basics. Leave the bread alone. Don't you have bread at home?\"\n\n- \"Thish ish really good, though.\"\n\n- \"Don't talk with your mouth full, Pete. Do that again, and I swear I'll kick you in the nuts.\"\n\n- \"Sorry.\"\n\nJanine proceeded to teach me how to order, how to eat and drink (not simultaneously), and generally how to behave like a civilized person in a fancy restaurant.\n\nThen she drove me home.\n\n- \"Thanks, J.\" I said.\n\n- \"Don't call me that. Don't ever guess at a girl's pet name, or diminutive. If you get it right, she might be impressed - for all of 2 seconds. Get it wrong - she may never forgive you. Got it?\"\n\n- \"Got it. Thank you, Janine.\"\n\nThen she surprised me by leaning over, and brushing her lips against my cheek.\n\n- \"Good work today, Pete.\" she said.\n\nYowza.\n\n***\n\nMy Mom found all of the new clothes in my room.\n\n- \"Peter? Is there anything ... you need to tell me?\"\n\n- \"About what, Mom?\"\n\n- \"About where all these clothes came from?\"\n\nDamn. I understood immediately. The mentalism kicked in, full force. Just by concentrating on my Mom, I could hear her thoughts and fears, loud and clear.\n\nIt was like listening to Lillian - except that my mother was (metaphorically speaking) running up and down the hallway, tearing out her hair while shouting that her son was selling drugs, or that he had robbed a men's clothing store - and that Ralph Lauren or Yves St-Laurent had helped me do it, because there was no way I could have picked out the good stuff by myself.\n\n- \"Sorry, Mom.\" I said. Then inspiration kicked in, and I lied my ass off.\n\nInternet. Sign-in contest. Unblock ads for a chance at a prize. By some miracle, I'd won. $2000 gift-certificate at a clothing store.\n\n- \"Really? That's ... incredible. But ... Pete - who helped you pick out the clothes? The suits?\"\n\nShe knew damn well that I hadn't done it myself.\n\n- \"Well ... I've been ... seeing this girl ...\"\n\n- \"You have a girlfriend?\" Mom's eyes lit up. She couldn't quite believe it, though.\n\nWait a minute, I thought. It wasn't that unbelievable. Was it?\n\n\"I'm so pleased for you.\" said my Mom, as she wrapped me in a hug. \"She has really good taste.\"\n\nMy mother was referring to my supposed girlfriend's taste in clothing not her taste in men. Thanks, Mom.\n\n- \"When do we get to meet her?\"\n\n***\n\nSammy was seriously ticked off at me.\n\n- \"A girlfriend?\"\n\n- \"Who told you that?\"\n\n- \"Your mother! Just now, as I walked in the door. 'Hello, Sammy. You must have met Peter's girlfriend ... tell me: what's she like?'\"\n\n\"Dude! Seriously? Since when am I the last one to find out something this big?\"\n\nI tried to calm him down, and to explain the situation.\n\n- \"Sammy - it's Janine!\"\n\n- \"Janine is your girlfriend?\"\n\n- \"No! Not exactly ... she's teaching me magic. She and her Mom.\"\n\n- \"Is her Mom hot?\"\n\n- \"Sam.\"\n\n- \"Well, is she? Can they teach me, too?\"\n\nI couldn't tell my best friend - my only friend - about the plan. But was it okay to let him know that Janine and Lillian were going to help me become a professional magician? How else could I explain all the new clothes?\n\nAnd surely it was alright for me to let Sammy know about bloodlines. Not only was it true, but it would explain why they weren't going to teach him magic.\n\nSo I spilled some of the beans.\n\nSammy was pretty cool with what I told him. He accepted that magic was going to be my gig, and not his - and I have to say, he was very supportive. I think he was genuinely happy for me.\n\nBut he was still a bit ticked off.\n\n- \"Okay - I get it. But are you totally ditching high school? Or have you completely forgotten? Final exams are in two weeks, man.\"\n\n***\n\n- \"It's not that important.\" said Janine.\n\nI had just confessed to Janine and her mother that I hadn't been paying attention in class for the past two months. I wasn't much of a student, to tell the truth. I'd usually put in just enough effort to stay off the teachers' shit lists, without breaking a sweat.\n\nBut I'd been concentrating on magic (and Janine) far too much. And now I was afraid that I was about to crash and burn on my finals.\n\n- \"It would be better if he got his diploma.\" said Lillian. She was speaking to her daughter.\n\n- \"Alright.\" said Janine. \"I'll show you how to do this, Pete. It's not that much different from finding cards for Mom.\"\n\n- \"Wait!\" I said. \"Are you talking about mind-reading?\"\n\n- \"Yep.\"\n\n- \"But ... isn't that cheating? What if I get caught?\"\n\n- \"You won't.\"\n\n- \"But -\"\n\n- \"Look, Pete.\" said Janine. \"If you do this my way - and pass your finals ... I'll go to your Prom with you. I'll be your date.\"\n\nThere was that smile, that inimitable curl of lips and cheeks, that little flash of teeth, which could reduce me to jelly. Unless I was completely mistaken, Janine was offering me more than a couple of slow dances.\n\nHoly yowzas, Batman!\n\n***\n\nLillian instructed me to practice on people that I knew: family, Sammy, schoolmates.\n\n- \"Isn't that ... like an invasion of privacy?\" I'd already done it, but it still kind of freaked me out.\n\n- \"Think of surface thoughts as almost public domain.\" said Lillian. \"Look, some people can read body language, or facial expressions - isn't that the same?\"\n\n- \"You mean, like reading tells in poker?\"\n\n- \"That's exactly what I mean.\"\n\n- \"Speaking of which,\" called Janine, from the kitchen, \"I'll be teaching you poker this summer. Watch some videos online, when you have time.\"\n\n- \"After your exams.\" said Lillian.\n\n- \"Okay. Umm ... I kind of already read someone's mind once before. It was ... my Mom. I don't know how it happened, to tell you the truth. All of a sudden, it was like I could just ... hear her.\"\n\nLillian smiled. \"It's much easier with blood relatives.\" she said. \"In fact, I would caution you not to try it with complete strangers. On the bus, for instance. You never know when you'll come across another Talent - and they won't appreciate it.\"\n\n***\n\nI didn't have to read Sammy's mind; when I told him that Janine was going to be my Prom date, he hit the roof.\n\n- \"What? You and Janine? Whoa!\" At first, he was thrilled for me. Then he remembered his own predicament. \"What the fuck, though, Pete? We were supposed to go stag. Batman and Robin! How could you just dump me like that?\"\n\n- \"You're right.\" I said. \"Sorry. I wasn't thinking. Let me fix this.\"\n\nBelieve it or not, I actually found the intestinal fortitude to tell Janine that I wouldn't be taking her to the Prom.\n\nIt was the first time I'd ever seen her even a little flustered.\n\n- \"You're kidding, right?\" she said.\n\n- \"I'm sorry. I was ... really looking forward to going with you.\" I said. (Really really really ...) \"But I sort of promised Sammy that we'd go together. You know, like Batman and Robin.\"\n\nJanine didn't get it. She had on her mildly annoyed face. But Lillian seemed to understand.\n\n- \"You don't want to come between friends, dear.\" she said. Then she turned to me. \"Would it make a difference if Sammy had a date, too?\"\n\n- \"I beg your pardon?\"\n\n- \"It just so happens that Janine has a friend that would probably love to be Sammy's date to the Prom.\"\n\n- \"I do?\" said Janine.\n\n- \"Of course you do. Penny Marks.\"\n\n- \"Ohh ... right. Penny. That's true. She'd love it.\"\n\nI felt that I had to stand up for Sammy's interests. Besides, if I got him a blind date to the Prom, he was going to hold me responsible.\n\n- \"Is she ... pretty?\"\n\n- \"Oh, Penny is cute.\" said Lillian. \"And she has a wonderful personality ...\"\n\n***\n\nSammy thought about it for all of 1/8 of a second.\n\n- \"Dude - you got me a date? That's awesome! I'm in! I'm in! Is she hot?\"\n\n***\n\nMy exams were a simple matter of paying attention. In Calculus, all I had to do was listen to Doug Macmillan's thoughts. I had trouble keeping up, but that was okay, too. If my answers matched his exactly, I was going to finish with a 95% - which would have attracted way more attention than I wanted.\n\nAccounting was a breeze. One hundred multiple choice questions. Honestly, how can a teacher get away with that sort of shit? Mr. Baldwin was just too lazy to mark longer answers. I just read Evie Longo's mind, and then changed 7 or 8 of my answers so that they'd be wrong.\n\nOn the one hand, I wished that I'd known how to do this years ago. I would never have had to study at all. Then again, I was graduating without knowing my ass from my elbow. My magic career had to work out - because I had zero other skills to fall back on.\n\nBut I was learning other, perhaps more valuable skills.\n\nJanine called me up the day of my last exam.\n\n- \"Can you come over this evening?\" she asked.\n\n- \"More training?\"\n\n- \"Exactly.\"\n\nLillian wasn't there. Janine was wearing a dress - something she didn't do very often. It had thin shoulder straps, which left most of her shoulders and all of her arms bare. She'd also done her hair up differently: it was tied up behind her head, in a very loose ponytail, which resulted in a corkscrew of thick, dark brown hair.\n\nI was struck speechless.\n\n- \"Hello, Pete.\" she said. Then she waited. She was expecting ... something.\n\n- \"You look ... fantastic.\" I managed to say.\n\n- \"Attaboy.\" she said. \"Always tell your girl if you like the way she looks. Why don't you come over here and sit down?\"\n\nJanine was sitting on the couch - almost dead center. I almost went to the armchair on the other side of their coffee table, but she patted the cushion next to her, and smiled.\n\nI sat down - carefully - closer to her than I'd ever been before. Janine leaned forward to pour us both a glass of effervescent, bubbly wine.\n\n- \"Champagne?\" I asked.\n\n- \"Sparkling wine. To celebrate the end of your exams. Successful, I hope?\"\n\n- \"I think they went well.\" Then I caught her scent. I couldn't tell if it was shampoo, conditioner, or perfume. \"Wow ... Janine, you smell great, too.\"\n\n- \"No, Pete.\" she said. \"You can take a deep breath. Then you should look me in the eye, and just smile. Let me know that your sense of smell is fully engaged. That's plenty - don't say anything. It's so much hotter if you just appreciate it - and if I know that you do.\"\n\n- \"Is this ... another lesson?\"\n\n- \"You never stop learning.\" she said. \"But tonight, I thought that we should thoroughly explore some of the basics. Why don't you put your arm around me, Pete? And lean just a little closer ... that's it ...\"\n\nJanine took hold of her bunched-up ponytail, and tossed it over her opposite shoulder, exposing her lovely neck and almost bare shoulder to me. Then she tilted her head towards me.\n\n\"Kiss me, Pete.\"\n\nMy experience with girls was so limited ... I almost fainted when Janine said that. But I found my little reserve of courage, and leaned forward to press my lips against hers.\n\nShe was warm, and soft. I couldn't help it; my arm tightened around her shoulders. Janine reached around to take hold of my shoulder - her arm was pressed against my chest.\n\nIt felt to me as if she was purring. I could feel the pressure of her hand on my shoulder - that had to be encouragement. And then I felt the tip of her tongue slip between my lips. I nearly melted. I'm sure that I moaned into her mouth.\n\n- \"Mmm ...\" she moaned back, softly.\n\nJanine was kissing me. She was french kissing me. Patience, young Jedi, I told myself. But it was still the most intense sexual experience of my life, and Janine could feel my passion as I gently stretched out my tongue to meet hers.\n\nI almost forgot to breathe. Janine broke our kiss, and leaned back a bit.\n\n- \"Is there ... anywhere else you'd like to kiss me?\" she asked.\n\nI'm not completely clueless. She hadn't changed her hairstyle for no reason.\n\nI kissed Janine's ear, hesitantly tracing the contour of her ear with the tip of my tongue. Then I took her earlobe into my mouth, and gently sucked on it.\n\n- \"Mmm ... nice ...\" she hummed.\n\nI kissed the proud column of her neck, and ran my lips down the edge of her jaw line.\n\n- \"Have you been studying?\" she whispered.\n\n- \"Uh - no. I'm just ... trying to make you feel good.\"\n\n- \"Attaboy. That's a very good approach. Keep going.\"\n\nShe seemed to enjoy my efforts, but that didn't stop her from offering feedback.\n\n\"Not too wet; you don't want to leave a slug trail down the side of my neck. No wet willies, either.\"\n\nShe drew me back up, and pressed her lips to mine again. I was sitting on a couch, necking with Janine - the most incredibly beautiful girl I'd ever been close to, let alone talked to. And she was kissing me!\n\nJanine really seemed to be into it, too. Her eyes were closed, some of the time, and her hand was gripping my shoulder fairly tightly. I felt emboldened - without really thinking about it, I reached out with my free hand, and placed it on her waist, just below her breast.\n\nShe broke our kiss.\n\n- \"Easy, Cowboy. Initiative is good - but let's stick to kissing, tonight. Okay?\"\n\n- \"Oh - sure. Sorry.\"\n\n- \"You're doing fine, Pete. There's no need to jam your whole tongue into my mouth. You have just the right amount of pressure - it's very nice. You can vary the tempo, though; a little more urgent, or a little less, makes for a pleasant change of pace.\"\n\n\"Don't be afraid to take the lead, too. Change the angle, or change your approach, if you want. It's not a test: we're exploring, here. Together. Finding things we like.\"\n\nShe tilted her head to the side, and opened her mouth a little.\n\n- \"You're so beautiful.\" I said.\n\nShe smiled. \"Thank you. Will you kiss me again?\"\n\nWe necked for the better part of an hour. Janine called a halt to the French lesson.\n\n- \"Any more and our lips will get chapped. But you did well, Pete. You're a good kisser.\"\n\nI'm sure that I blushed. I could feel the heat rising to my face. \"Thanks.\"\n\n- \"Would you like to practice some more tomorrow night?\"\n\n***\n\nI was half an hour early for our ... date? Lesson? I was sure that she wouldn't appreciate me knocking on her door too early, so I walked around the block - twice. I briefly considered getting a coffee at the shop on the corner, but that wouldn't have been good for my breath.\n\nThen I began to worry about said breath, so I went to the convenience store and bought a package of breath mints. I ate half of them while I waited. That's right: I didn't have the patience to suck 'em slowly. I was crunching them between my teeth.",
        "Somehow, I managed to wait until the appointed time - and not a second more. Janine opened the door. She was dressed much more casually than yesterday, in jeans and an untucked t-shirt. Her long hair was piled up in a loose bun, though she'd left a few stray tendrils hanging on either side of her face.\n\n- \"Hello, Pete.\"\n\n- \"Wow.\" I breathed.\n\n- \"Now that's a nice compliment - I really haven't gone to any trouble.\" she said. \"I don't have any more sparkling wine. Would you like something else to drink?\"\n\n- \"No. I don't ... need anything.\"\n\n- \"Water, at least.\" she suggested. \"In case your mouth gets dry.\"\n\nAs she opened a cupboard, and stretched for glasses on the lowest shelf (she was only five feet tall), I realized something amazing: Janine wasn't wearing a bra.\n\nBeneath her loose t-shirt, her breasts jiggled and moved.\n\n- \"Shall we sit on the couch?\" she suggested.\n\nI wasn't able to answer: I'd been temporarily robbed of the power of speech. She was just that hot. She was teasing me, too. Janine didn't do things by accident, or on impulse. If she wasn't wearing a bra ...\n\nShe didn't kiss me. All she did was turn on some music, using a remote. Then she sat back, looking straight ahead. She was obviously waiting for me to take the initiative. Fair enough. That gave me considerable freedom. This was a lesson, after all; if I screwed it up, we could just start over.\n\nI slid my arm behind her, over the back of the couch. I let my hand rest lightly on her shoulder. She felt it, but she didn't turn towards me.\n\n- \"Janine.\" I said.\n\nNow she did turn her head - but she leaned back a little as she did, so that we still quite far apart.\n\n\"I really appreciate ... what you've been showing me.\"\n\nI leaned a little closer. Janine knew exactly what I was doing. She watched me, with those beautiful eyes, but she didn't move an inch.\n\n\"Everything you've been showing me.\" I whispered, even as I leaned a little further.\n\nFinally, she smiled, and closed the remaining distance between us. I sighed into her mouth as her lips met mine. She continued to let me be the aggressor, though, so I slipped the tip of my tongue past her lips.\n\n- \"Mmm ...\" she moaned, just before breaking the kiss. \"Good job. Be careful about using the tongue too soon. Better a little late than too early. Other than that, I can't fault your approach. Nicely done.\"\n\n- \"Can I kiss you again?\"\n\n- \"Of course you can. But tonight, Pete ... anything above the waist is open game. You understand?\"\n\nI almost swooned. The oxygen supply to my brain was probably never seriously threatened - it just felt that way.\n\n- \"Really?\"\n\n- \"Girls have boobs. And most women are going to expect you to at least notice them. Kissing is very intimate ... and very sensual. But boobs are very important, when it comes to foreplay. You can't just kiss a girl, and then say 'Bend over'.\"\n\n\"Show me some love.\" she challenged.\n\nIf I haven't made it clear enough - Janine was a phenomenally beautiful woman. Lustrous long hair, incredible facial features ... and a great rack. She was only 5 feet tall, and couldn't have weighed 100 lbs. (actually, 93 - as I found out later). But her breasts were exceptional. For such a tiny person, she looked ... chesty.\n\nPart of her appeal was her hourglass figure. But I would be remiss if I didn't mention how eye-catching her upper fuselage was.\n\n\"32C.\" she told me, later. That combination struck me as entirely ... unfair. How could a woman so otherwise petite have breasts that stood out like that?\n\nFor now, though, I contented myself with leaning forward to kiss her again.\n\nTo be honest, I was afraid that she would suspect that I was just marking time until I could get my hands on her boobs. I tried my very best to kiss her as well as I possibly could.\n\n- \"Mmm ...\" she moaned. She was encouraging me - no doubt of that.\n\nI placed my hand exactly where it had been last night - on her waist, just below her breast. She didn't flinch, or protest. If anything, she shifted a little closer.\n\nHer t-shirt wasn't tucked into her jeans. That was no accident. Somehow, I discovered a reservoir of boldness, as I lifted the edge of her shirt, and slid my hand underneath.\n\nWarm flesh. Smooth skin.\n\nI'm sure that I gasped into Janine's mouth. She responded by seizing my tongue between her teeth, and biting down gently.\n\nIt probably took me four or five minutes before I moved my hand north. First, I was fascinated by the curve of her hip, and the narrowness of her waist. Then I had to go west, running my hand across the smoothness of her stomach, until I discovered her navel, and dipped my finger into it.\n\nBut when I progressed a little farther, my fingers encountered the swell of her breast. I gasped again - but so did Janine, as she leaned forward and pressed her boob into my hand.\n\nI explored the contours of her breast, gently lifting it, as if to weigh it in my palm. It was so smooth, so soft - and yet substantial, almost heavy. Then I circled it with my fingers. When the tips of my fingers brushed across her nipple, Janine shuddered.\n\nI lost track of time. Who knows? I might have played with her boob for ten minutes - or twenty. We were still kissing all that time, and Janine let me know what she liked with the pressure of her lips and tongue. She also wasn't shy about running her hand across my chest, or stroking my stomach. Several times, I felt that she was about to go lower - but she only brushed my belt line, and then immediately moved away.\n\n- \"Pete.\" she gasped. \"Take your shirt off.\"\n\n- \"Really?\"\n\n- \"Yes.\"\n\nI complied. But I was absolutely fascinated when Janine pulled her t-shirt over her head.\n\nAnd there they were.\n\nMother of Mercy.\n\nJanine had the torso of a goddess. Fine - if you want to be an asshole, you can dwell on the fact that hers were the first naked breasts that I'd ever seen, up close and in person.\n\nThey looked so big, compared to her diminutive stature. Her boobs were ... fleshy. They hung lower on her chest than I'd expected, spreading out in every direction. Her nipples seemed to sit high, a little above the center of her breasts' mass. They weren't perfectly round - for some reason, I felt like Johannes Kepler, discovering elliptical orbits for the first time.\n\nIf that's too complicated for you, allow me to simplify matters: Janine had incredible tits. I just looked at them, for the longest time, until she lifted my hand, and placed it on her left breast.\n\n- \"Yes - just like that.\" she said, as I began to caress her.\n\n\"Never just ... grab - a tit. Don't squeeze too hard. Ah ... imagine I had my hands on your balls - how hard would you want me to squeeze? Mmm ... like that.\"\n\n\"And - my nipples. They're not light switches, okay? Be gentle, just like you're doing - unless I let you know that I like it a little rougher. Easy - oh ... why not - why don't you ... use your lips ... and tongue ...\"\n\nWith that kind of invitation, how could I refuse? I dipped my head, and ran my tongue across her nipple. Then I closed my mouth on it, and sucked gently.\n\nJanine cradled my head, and fed more of her nipple into my mouth.\n\n- \"Yeah.\" she crooned. \"Just like ... mmm.\"\n\nThey were so soft. Smooth. But full, and heavy. I might have been biased, but I thought they were the greatest breasts in creation.\n\nShe wasn't idle, either. Janine ran her fingers over my nipples, and stroked my stomach. At one point, she lowered her head and flicked her tongue across my nipple.\n\nI was amazed by how good it felt. My first instinct was to return the favour.\n\n\"Ah! Wait! Stop, Pete!\"\n\nJanine pushed my head away. She leaned forward, and kissed me hard.\n\n\"That's ... very nice, Pete. But we have to ... you have to learn a bit more.\"\n\nShe rose to her feet - a little unsteadily - and then Janine took my hand. I stood up.\n\nJanine led me into a part of their apartment that I'd never seen - her bedroom. My thoughts had been pretty wild for some time now, but the sight of her bed nearly made my brain explode.\n\nBut I came back to the present pretty quickly. Janine opened her dresser drawer, and pulled out ... a bra.\n\nShe immediately put it on, covering up her beautiful breasts. Boobs.\n\nJanine took a deep breath, and turned to face me.\n\n- \"Okay, Pete.\" she said. \"Sometimes, you're going to have to ... overcome some obstacles, before you can move on.\"\n\nShe took a step towards me.\n\n\"Undo my bra.\" she said.\n\nI stepped closer, and took her in my arms. Then I hesitated. I'd never kissed a girl for over an hour. Nor had I ever ...\n\nJanine lifted her arms over her head.\n\n\"Kiss me, Pete. And then take my bra off ...\"\n\nThe kiss I could manage. The bra was a nightmare. Who the fuck invented that type of fastening? I struggled with it for half an age before Janine rescued me.\n\nShe turned her back to me. \"Watch.\" she said.\n\nJanine showed me how it was done. Then she turned to face me again, pressing her lips to mine, and her fantastic breasts to my chest.\n\nYeah, I fucked it up again. Janine just smiled, and stopped kissing me.\n\n- \"Try it again - without distractions.\"\n\nOn my fourth try, it was like a light went on in my head. I got it. Janine promptly re-fastened the bra, and had me do it again.\n\nMy reward for success (other than the unimpeded view) was a further test: she put on a different bra.\n\n- \"Try this one.\"\n\nThis bra was a little more sheer, with a slightly different closure. I figured it out on the second try.\n\nThe third bra she put on was almost transparent.\n\n- \"That's hardly fair.\" I said.\n\nShe smiled. \"If you're in a woman's bedroom, and she's only wearing a bra, I can promise you that she won't she won't mind at all if you pause to admire her form. And if she's wearing a bra like this one, she wants you to.\"\n\n- \"You're incredible.\" I said.\n\n- \"That's not bad. It's okay to look, Pete - this is one occasion when I'm not going to tell you that my eyes are up here.\"\n\nThe fourth bra she put on was blue, and it did a spectacular job of lifting her twin orbs and pushing them together, creating a delectable four or five inches of cleavage.\n\nMaybe I was distracted by the sights, but I had a hell of a time trying to unfasten that one. Janine let me struggle for a while, and then put both hands on my chest. She stepped back, and turned around.\n\n- \"What do you see?\"\n\n- \"Nothing.\" I admitted. \"It looks like there are no hooks at all.\"\n\n- \"That's because it fastens in the front.\" My face must have fallen, because Janine enjoyed a good chuckle at my expense.\n\n\"Don't worry - if she's wearing one of these, she'll tell you.\"\n\nThat was a very pleasant prospect to consider. Janine kept talking about 'her', or 'she' - as if I'd be doing this with other women. I thought it might smarter to keep my mouth shut - and not to tell her that there was only woman I wanted to do this with.\n\n- \"I think maybe we should stop here, for tonight.\" she said.\n\n- \"Okay.\" I said, trying my best not to sound too disappointed.\n\n- \"Are you free on Tuesday evening?\"\n\nI would have cancelled my own induction into the Rock n' Roll Hall of Fame, if it had been scheduled for that Tuesday evening.\n\n***\n\nWhen Janine opened the door, I was very surprised. For one thing, she was wearing a t-shirt and track pants. I'd never seen her dressed so casually. She always looked like someone who spent a minimum of an hour (or two?) on her make-up.\n\nShe'd also dyed her hair. Jet black. I'm sure that my mouth fell open.\n\n- \"What do you think?\" she asked. \"It's for your Prom.\"\n\n- \"I ... I had no idea that you could be even more beautiful.\"\n\nShe grinned. \"Hot, you mean?\"\n\nI shook my head. \"You always look hot, Janine. But you're beautiful, too.\"\n\nFor the first time in our acquaintance, I think that I might have caught her just a little bit off guard. Her smile disappeared, but then Janine met my eye, and nodded, slowly.\n\n- \"Thank you, Pete.\" she said. \"That's very sweet of you to say.\"\n\n- \"Only the truth.\"\n\n- \"Ooh ... are we in the process of creating a monster, here?\"\n\nJanine led me into the kitchen, where she popped the cork on another bottle of sparkling wine.\n\n- \"What are we celebrating?\" I asked.\n\n- \"The bet that I lost.\" she said. \"I thought that it would take much longer to ... teach you certain things. You know: like kissing, and ... foreplay. But Lillian said that you'd pick it up fast. Faster than magic, even.\"\n\n- \"You lost?\"\n\n- \"You've done well. You have a gentle touch, and when you kiss me ... let's just say that I feel like the most important person in the world, let alone the room. You're very intense, Pete ... and that's a good thing.\"\n\n\"I've been looking forward to tonight's lesson.\"\n\n- \"Me too.\" Truth be told, my knees were practically knocking. My legs were actually shaking. Thankfully, I could lean on their kitchen counter, so that I wasn't in danger of falling down.\n\nJanine took her glass - and the rest of the bottle - and led me to their couch (a piece of furniture that I was really beginning to like).\n\nShe surprised me again: instead of waiting for me, Janine initiated our first kiss. She put both arms around me, and squeezed me tightly.\n\n- \"I've been looking forward to this all day.\" she said, softly.\n\n- \"Me too.\" I said again. Only since the moment I'd last left her apartment - and virtually every three minutes since then.\n\nIn a sudden burst of energy, Janine spun around, and straddled my hips. She kissed me passionately, pressing her full breasts into my chest. She was also sitting on my lap, where she couldn't help but feel the hard shaft in my pants.\n\nTruth be told, I'd been erect from the moment she opened the door. But Janine couldn't possibly have missed the fact that she was sitting atop an iron bar.\n\n- \"Ohh ...\" she moaned. \"I love that you're hard for me already. That's so hot ...\"\n\nThat had to be one of the sexiest things I'd ever heard.\n\n\"Tonight - tonight, Pete ... you can touch me anywhere.\"\n\nMy heart might have stopped, for a second or two. That was the most exciting thing I'd ever heard - new record.\n\nWhen I recovered my wits, I slid both my hands under her T-shirt, and ran them up and across her back. Janine gasped into my mouth, and tried to drive her tongue into my throat - something I thought we weren't supposed to do. Apparently there were exceptions.\n\nI explored the smooth skin of her back, and her sides. But I couldn't resist the temptation of her heavenly tits, and my hands soon gravitated to the orbit of her chest. Janine actually leaned back, to grant me greater access. What a glorious feeling, to have twin handfuls of her magnificent breasts.\n\nI caressed her, and fondled her for some time. After a while, though, I remembered what she'd said.\n\n- \"Anywhere?\" I asked.\n\n- \"Anywhere.\"\n\n- \"Can I take your shirt off?\"\n\nJanine immediately began to pull her T-shirt over her head. She somehow got it caught on her earring, and had to struggle a bit to get it loose. I took advantage of her predicament immediately, leaning forward to take her nipple into my mouth.\n\n- \"Aah!\" she grunted. But she didn't reprimand me, or protest in any way. In fact, there was no doubt whatsoever that she was grinding her crotch against the ridiculous bulge in my pants.\n\nI paid homage to her nipples, while caressing her glorious tits. I might have lost track of time, temporarily, but I hadn't forgotten what she'd said.\n\nAnywhere?\n\nI gently pushed Janine back, and turned her slightly, until she got the hint, and left my lap to sit back on the couch, beside me.\n\nI kissed her, and she responded immediately. Meanwhile, my hand brushed over her stomach. I dipped my fingers under the waistband of her track pants. Janine caught hold of my tongue, inside her mouth, and began to suck on it.\n\nMy fingers delved a little lower, across her flat stomach. When the tip of my finger encountered a little tuft of hair, I shivered. I had my hand in Janine's pants! That, apparently, was exactly where she wanted me to be, because she groaned and immediately spread her legs a little bit wider.\n\nI explored a bit further, very slowly, and very carefully. Too slowly for Janine - she surprised me yet again, by suddenly standing up, and pushing her track pants down below her knees, before sitting back down.\n\nShe was practically naked - and the reality was even better than what I'd been imagining.\n\n- \"You can look, Pete.\" she said, her voice a bit thick. \"Take a good look.\"\n\nI did as she asked. Her hair was trimmed short, in the shape of a narrow triangle. Below that ...\n\nJanine tried to get technical, explaining the difference between labia majora and labia minora. The sight was breathtaking; I let her talk while I enjoyed the view - something I'd never seen so close up before. Damn - I was so close that I could smell her arousal.\n\n- \"This is my clit.\" She spread her lips so that I could see it clearly, and then rubbed her own finger over it. \"This is the key to unlocking my orgasms. But you can't just break the door down. It's too sensitive. Do you understand?\"\n\nI clearly didn't.\n\n- \"You have to warm a woman up, Pete. You can't just pinch her nipples and grab her by the clit, or jam your fingers into her. Play with me ... kiss me like you do. Another time, I'll let you explore some more, so that you can discover where I like to be kissed, and touched.\"\n\n- \"You ears? Your neck?\"\n\n- \"Yes, those - and many more places. When you've turned me on - and you'll know it, then my little clit will become one of your best friends.\"\n\n- \"How will I know -?\"\n\n- \"Touch me.\" She spread her legs a little wider, resting the nearer leg on my thigh.\n\nI reached out and gently glided my finger over the soft, smooth skin of her outer lips.\n\n- \"Ah - good for you. I like a gentle touch. Some girls will have different preferences - but you'll know what they want, too.\"\n\n- \"How?\"\n\n- \"Future lessons.\" she said. That idea sent a thrill through my entire body. We were going to do this again. We were going to do more of this.\n\nI spread my fingers into a V, and caressed both of her outer lips.\n\n\"I'm already turned on.\" she said. \"Your kisses, and the anticipation ... just the idea of what we're going to do tonight ... but you can see - and feel - that I'm still dry down there. When I'm aroused, you'll see the difference.\"\n\n\"Kiss me again.\"\n\nI continued to stroke the edges of her pussy, but I concentrated on the taste and the feel of her lips of her tongue. She had put on some sort of pale pink lip gloss, which made her lips slide over mine. It was very sensual. I had to slow down, to control my breathing - I didn't want to start panting.\n\nMy finger trailed up the very centre of her inner lips.\n\n- \"Mmm ...\" she moaned, and kissed me more intensely. I responded in kind.\n\nWhen we broke the kiss, to catch our breath, I glanced down. Janine's nipples were standing up proudly, hard little nubs that I wanted to take into my mouth.\n\nHadn't she said 'anywhere'? I dipped my head and did just that.\n\n- \"Ahh! God damn ...\" She slumped back even further, as if sinking into the cushions of the couch. Her hips rose at the same time, presenting her exposed pussy even more fully to my gaze - and to my exploring fingers.\n\nWhen my tongue flicked across her erect nipple, Janine suddenly reached out and grabbed me by the hair. She pulled me forward, while simultaneously thrusting her chest forward, mashing her breast against my face. I got the hint, and sucked harder on her nipple.\n\nMeanwhile, I discovered that her pussy was growing warmer. Maybe blood flowed there, the same way it did to a male's erection. But as I ran my fingers over her lips, I discovered what she'd been talking about.\n\nShe was getting wet.",
        "I'm not quite sure what possessed me. I wanted very much to see what Janine's pussy looked like as she grew more aroused. Reluctantly, I pulled away from her gorgeous breast. I lifted her nearer leg off of mine, so that I could turn and slide to the floor.\n\nI knelt between her spread legs, my face only a foot from her glistening pussy. Yes, she was that wet. Her inner lips were swollen, and now protruded well beyond the outer lips. There was also an obvious separation between her labia minora, as they swelled and spread apart.\n\nI slid my finger between her inner lips, and slipped it inside her. I slowly pushed it in, then reversed course, before pushing in again - all the way to the second knuckle.\n\nJanine moved her lower body a little further towards me. I moved my finger inside her, but also rotated my thumb so that I could brush it lightly over her clit.\n\n- \"Nnnhh ...\"\n\nShe reached out again, and took hold of my hair. She didn't exactly pull - the pressure was almost imperceptible, but somehow I guessed what she wanted.\n\nI leaned forward, and pressed my lips to her pussy. I kissed her lower lips, the same way I'd kissed her mouth.\n\n- \"Aaah!\" she cried out. It was a cry of pleasure. She confirmed that by now tangling her fingers in my hair, and definitely tugging my face closer.\n\nI'd never eaten pussy before. But Janine seemed to like everything I did.\n\n- \"Yes.\" she whispered, when I ran my tongue over her lips. She also seemed to approve when I pushed the tip of my tongue inside her.\n\nI had a free hand. On instinct, I reached up and took hold of her boob. For a moment, I feared that I'd moved too abruptly - that I was being too rough with her tender parts. But Janine's reaction suggested quite the opposite.\n\n- \"Ahh! Yes - lick it. Suck it!\"\n\nShe was fully aroused - even I could tell that.\n\nI found her clit with my tongue - and treated it just as I had her nipple. I licked it, ran my tongue across it, and sucked it into my mouth.\n\nJanine came.\n\nI knew instantly, because I felt and tasted the flood of her juices - and because she surged off the couch, and nearly pulled out a hank of my hair.\n\nThen she sagged back on the couch, temporarily exhausted.\n\nI got up off my knees, and sat back down on the couch beside her.\n\n- \"What are you doing?\" she asked. \"Stand up. Take your pants off.\"\n\n- \"My - my pants?\"\n\n- \"Underwear, too. All of it. I want to see what we're working with.\"\n\nShe didn't have to tell me three times. I stood, and shucked my pants (easily, because I'd left my shoes at the door). My erection was making a ridiculous tent of the boxers Janine had bought for me.\n\nI managed to get them off, whereupon my iron-hard dick snapped up against my lower stomach, pointing straight at my chin. It couldn't have been harder without snapping in half.\n\n- \"Not bad.\" said Janine, her eyes fixed on my erection. \"Bring that closer.\"\n\nI took a half-step forward, and then gasped as Janine reached out and took hold of my cock with her warm hand. She sat up a little straighter.\n\n\"Niiice ...\" she murmured. \"We can do some great things with this.\"\n\nOH my God. Janine had her hand around my cock.\n\n- \"You know, Pete - you skipped a class tonight. Or maybe I should say that you combined two lessons into one. Oral wasn't supposed to be on the agenda until later.\"\n\n- \"Sorry.\" I said.\n\n- \"Don't be. You surprised me a bit - but you rang my bell, too. That means that you deserve a reward.\"\n\nJanine leaned forward, and took my cock into her mouth.\n\nI nearly passed out from the shock.\n\nShe ran her tongue around the head, while it was inside her mouth. I'm sure that I groaned.\n\nI would like to explain, in my own defence, that I'd been primed and loaded for almost a week. Yes, I'd been masturbating twice a night after my sessions with Janine, but I had no idea that tonight's lesson would go the way it did. The anticipation, the visual, tactile and olfactory stimulation ... it was all a bit too much.\n\nI tried to warn her ... I think. Then I erupted, and ejaculated what felt like a torrent of cum into her mouth.\n\nJanine bravely tried to swallow it all, though some of it escaped her. I didn't notice where it all went - I was too busy trying not to fall down, as my knees quivered and shook.\n\n- \"Hmm ...\" said Janine, wiping her lips with her finger. \"Looks like we have to work on your stamina, too.\"\n\n\"Be here at 7 tomorrow.\"\n\n*****\n\n \n"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "magic",
        "magicians",
        "nerds",
        "virgin",
        "training"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/just-a-little-magic-ch-02"
}