{
    "title": "Speech and Debate Pt. 04",
    "pages": [
        "I'm not sure if straight people could ever truly understand how it feels to wake up next to a warm manly body as a gay guy raised in the often times sexually repressive South. It comes with a nearly debilitating mixture of contradictions in the extreme: joy, lust, thankfulness, and peace wrestling with abject terror and the desire to run before things turn ugly, as we are nearly conditioned to expect that they will. It was a sad state of affairs that I felt these things as the morning dawned on our second day in Boston, but luckily I was able to suppress the negativity and bask in my small but growing optimism towards whatever was happening with Daniel.\n\nAs my wispy, unremembered dreams began to fade into nothingness and my mind returned to normalcy, I felt Daniel's warmness pressed into me, holding me tightly to his chest, his muscled arm thrown over me as if he would never loosen. \n\nI didn't want him to. \n\nI shifted myself a bit, working sore muscles as I pushed myself into him, dissolving into his embrace, unsure if he would waken and this living dreamscape I'd found myself at the center of would come crashing down around my ears. I laced my fingers through his own and pulled our hands to my chest, holding them over my heart and feeling it beat through our embrace, keeping time. It seemed to be counting down the seconds, a ticking clock beating out the coming end to my bliss with unforgiving fierceness. \n\nThat level of true happiness melded with apprehension is a rare thing, as I've come to realize as I got older, but even then I grasped the uniqueness and tried to float on the high.\n\nMy eyes were just adjusting to the grayish morning light of our room when I felt Daniel begin to stir behind me. His hips pressed into the bare skin of my ass and he made a soft sound of pleasure, like a cat waking from a summertime nap on the windowsill. Though I couldn't see his face, I imagined that he wore a smile of contentment to match my own. \n\nAt least, I hoped he did. \n\nMy body responded to his slight movements without thought, pressing back against his morning hardness and slowly grinding into him, seeking to remain as close as this, or closer for as long as I could.\n\nOur fingers were still locked together, held to my chest as my breathing began to regulate. I expected him to disentangle himself and for this secret moment together to end when he did; but, instead, he pulled me closer and pressed his face to my hair, breathing me in deeply and sighing, his chest expanding as he too stretched his muscles. I shivered when I felt the power of him begin to awaken behind me, the corded strength of him as he readied his lithe body for the day to come. \n\nDaniel must have felt my trembling; he guided our interlocked hands over the pale skin my chest and down my stomach, gliding smoothly over our hips.\n\n\"Morning,\" he said groggily, his voice blessedly absent of the shock and fear I'd come to expect. \"Are you cold?\"\n\nHe pulled the covers around us more tightly and snuggled even closer to me, his hard cock finding a spot between my ass cheeks, unconsciously humping into me. \n\nI couldn't help but moan at the contact.\n\n\"Morning,\" I whispered through the escalating pleasure, trying to keep it from my tone. \"How'd you sleep?\"\n\n\"Like the dead,\" he said, his lips at my ear, softly kissing my neck, driving rational thought from my body, a jolt of electricity working down my spine and all the way to my toes. He guided our hands over my hips towards my very obvious hard cock. \n\n\"Glad to be awake now.\" \n\nI felt a small twinge of loss when he unwound his fingers from mine, but only for the time it took him to grasp my shaft in the warmth of his palm and tug gently on my length. His lips kissed the back of my neck and my hand reached behind me to press his head to my skin.\n\nHe continued to work my cock in his grasp, twisting and pulling, using his thumb to gather and disperse the precum that began to leak from me. His lips still traversed the soft skin of my neck and ears, dialing up my nerves in succinct intervals, waking the most dormant parts of me. I wanted him so badly I thought I would burst with it. He gracefully moved himself from behind me and gave me the space to fall onto my back as he rose on one elbow to get a better angle. \n\nFor the first time today, I met his gaze. As if it was the first time I'd ever seen him, I was rocked by what lay behind his eyes. Passion and lust were there, to be sure, burning brightly. But beneath that, lurking in the deep dark places, something else. Something I could only describe as caring.\n\nNo! I couldn't...wouldn't...allow myself to think like that.\n\nHe pressed his face to my neck again, never slowing his pace on my dick with his increasingly skilled fingers. A few more sessions like this and Daniel's skill could very well have surpassed my own.\n\nMy touch danced over the smooth skin of his strong shoulders as he moved down, past my collar bones, licking and kissing at the pale skin of my chest. He took my nipple in his mouth and my back arched, which only served to drive him on, my body betraying my desires to his observant nature.\n\n\"Daniel,\" I moaned, my hand coming to the back of his head, feeling the soft prickles of his hair against my skin.\n\n\"Shhhh. Let me.\" His voice was a deep growl, masculine and controlling but devoid of violence.\n\nI had no real choice but to give in and let him do to me whatever he pleased. I couldn't have been more willing to give up that control. Something in Daniel brought that out in me. When he touched me, I lost the need to be the master of my own form. I simply allowed myself to be...to be touched and manipulated, twisted and prodded in ways I never would have sanctioned normally. \n\nDaniel's lips on my hip bones sent my pelvis to the ceiling, fucking myself in his grip. It was beautiful torture and I rode it as best I could. Daniel looked up at me through his long, dark lashes, his brown eyes just beginning to catch the dawning light and gleaming with hints of amber and gold, catching my ice-blue gaze. The things that can be communicated in a stare like that far outweigh anything actual speech can accomplish.\n\n'Let me, I need to do this. I desire this. Please,' he seemed to beg.\n\nHis tongue on my cock as his mouth closed over my sensitive head nearly sent me to the moon. Heat and wetness flooded me, every nerve focused like a laser on my cock. He twirled his tongue around my rim, reveling in it, increasing and decreasing speed and pressure as if he'd been doing this for years. All the while, his eyes searched my face.\n\nSlowly, he bobbed his head up and down my shaft. First one inch and then two dematerialized down his throat until he had half of me ensconced inside him. He made satisfied groans despite his full mouth, rumbling from deep in his chest as he adjusted himself so he was kneeling between my thighs. His strong hands spread my legs with ease and held them there against my uncontrollable trembling.\n\n\"Ahhh, that's incredible. Don't stop.\" \n\nMy voice sounded strange to my own ears, almost as if someone else was urging him on, someone outside of my body. Daniel's hips waved back and forth in the open air, the rounded curves of his ass outlined in the gloom behind us as he forced me deeper and deeper into him until he eventually hit that place where reflex took control and he gagged. He pulled off, not missing the chance to use his tongue on the ticklish skin under my cock head, swallowed hard, and caught his breath.\n\n\"I want to...,\" he panted, his hips wiggling and waving behind him. The desire in his tone was unaffected and apparent, the question lurking just beneath. He needed me to guide him.\n\n\"Relax, concentrate on breathing through your nose, and don't force it. Pretend like you are swallowing, focus on each muscle and push your reflexes to the back of your mind.\"\n\nThe instruction was all I could think to give, meager as it was, but Daniel seemed to take it as gospel and dove back onto my tool with gusto, easily taking me to the same distance as before. He toiled slowly at first, but soon I felt another bit of me wrapped in the heat of his mouth. \n\n\"Oh, fuck,\" I groaned, my hands coming to the sides of his head, doing all in my power not to force him down to the root. Within a minute, I felt his breath against the skin of my pelvis, coming quick and hot.\n\n\"You're almost there. Oh, my god, I can't believe... how?...almost.\"\n\nWith a final thrust of effort, he engulfed my cock to the base, his lips settling around my trimmed pubes, his nose nestled in, his throat contracting and releasing in untrained and involuntary waves over the entire length of me. \n\nNo one had ever done that to me before and I immediately felt closer to him than to anyone else in my life to that point. The new sensations coupled with the jolt of Daniel's willingness and unexpected success at even trying this technique almost pushed me over the edge.\n\nThe complacent submission I had reveled in flashed to ash as my passions exploded in me with a heat I thought Daniel must surely be able to feel. Though he over powered me and outweighed me by nearly twenty pounds of solid lean muscle, I grabbed his head and tore him from my shaft in one smooth motion, drawing him forward and pushing my lips to his with intenseness that frightened me even then. I tasted my own sweat, the saltiness of my precum and passion on his tongue as he pushed back against me. My hands grabbed at his hips and gripped his ass, seeking to turn him. \n\nI needed to touch him, to bury myself inside of him in any way I could. \n\nHe got my drift and broke our kiss so he could flip around and straddle my chest, his face still pointing at my slick cock, his perfectly sculpted ass now just centimeters from my hungry mouth. My hands spread his cheeks and I besieged his jock hole with my tongue at the ready for an exploration of that most erotically charged of numbers: 69.\n\nDaniel's back arched, one hand gripping my cock and twisting on the saliva-slicked skin, the other reaching behind him to press my head to his hole. His hips rocked back and forth as he started to ride my tongue, fuck himself against me.\n\n\"Oh shit, David. Yeah, fuck. eat my ass. You like that jock hole?\" \n\nHis voice was fuel to add to the bonfire already raging in me. I didn't break from my rimming to answer him, only flicked faster and faster, pressing deeper as I tasted and drank down his manliness.\n\n\"Ahhhh. Oh my god. Oh.\"\n\nDaniel fell forward onto his hands, his hairy thighs shaking as he struggled to process the feelings. \n\nI went faster.\n\nAs if there were no other choice, the only floating wreckage on stormy seas and the only hope for salvation, Daniel opened his mouth and pulled my cock back into his throat. My tongue in his hole, in and out, in and out, and Daniel working my pulsing shaft deep in his throat was a combination I couldn't have been prepared for.\n\n\"I'm close...\" I groaned through gritted teeth, forced to stop my rimming for a moment. Daniel took no notice, only sucking harder, his ass undulating before me, his hole throbbing in time.\n\n\"I'm gonna...Daniel...Oh fuck, I'm about...\" \n\nHe made no move.\n\nThe first jet of my cum hit the back of his throat and he jerked a bit in surprise. He pulled back so that he only held half of me and let my cum fill his mouth, stream after stream being pulled from me as if by force. I felt like my soul was escaping through my cock, seeking a new home inside Daniel. For his part, he sighed high in his chest and swallowed each new offering my dick pumped into him with practiced ease. \n\nWhen my orgasm had subsided to a manageable level, Daniel pulled off of me, seeming a little sad to do so as he turned and straddled my hips facing the other direction.\n\nHe rubbed my sensitive and cum-smeared dick head on his thoroughly wet hole and slid it around, putting on a show for me.\n\nIf I had to give a review of the performance, I'd say it was Oscar worthy. But instead, I crunched myself forward, uncaring of the discomfort and sucked his cock for a moment, until his grip on the back of my head pulled me off, the pain of having my hair tugged not even registering against the onslaught I was already basking in.\n\n\"Not for you. You don't get to touch my dick today,\" Daniel scolded me with mock sternness, gazing down on me as I twisted in his relentless grip. His eyes were firm as steel, but I somehow felt safe being pinned under his iron will.\n\nI nodded my aquiescence to his desire.\n\nHe released my head with a gentle push and returned his grip to his rock hard uncut cock, pulling the foreskin forward so a crystal drop of precum fell from his tip and pooled warmly on my stomach. Though I wanted to wipe it up and take it to my parched lips, I dared not move my hands. What I wanted was firmly in the back seat, now. Daniel was in complete control.\n\nHe moved my cock near to his hole and maneuvered himself so that I pressed into his warm opening, but never entered. The pressure was nearly enough, almost gaining the much desired access, but he walked this razor's edge like the master I was coming to recognize him for.\n\n\"I like your cock at my hole. Such a big nerd cock.\" \n\nHe tapped my cock on the gateway to his promised land and jumped at the feeling.\n\nI didn't speak. What would I say?\n\n\"You want me to ride your big nerd cock?\" He asked, his voice dripping with sex. \"Hmm?\"\n\n\"Yes,\" I replied, my voice crackled and tortured, trying not to appear too eager.\n\n\"You want to fuck my hole? Put your monster dick inside my tight jock ass?\"\n\nI nodded.\n\n\"Hmm? What was that?\" He pressed his hips down onto my cock, his eyes rolling up in his head as he pushed himself just to the line and peered over the edge. \n\nGod, how I wanted him to jump.\n\n\"Yes. I want to fuck you.\"\n\nThe smile that spread over his face, that slowly crept up and displaced the pleasure and lust there, was the definition of boyish wickedness.\n\nHe released my cock and eased himself from me, leaving my aching and sensitive mast throbbing useless in the open air. His torso descended and he leaned forward until his olive skinned face and morning stubble filled my vision. His eyes held mine so that I couldn't have looked away if I'd wanted to, a stare that would haunt my dreams for the next decade and beyond. \n\nWhen his mouth was so close to mine that I could feel his breath on the skin of my lips, the desire to connect almost painfully withheld, he whispered: \"Not yet.\"\n\nMy cock pulsed; like the aftershocks follow the quake, I shot a single line of thick white into the air, landing with a warm wet softness on the lightly damp skin of Daniel's ass. His neck flew back, his eyes squeezing shut when my cum made contact. \n\nHe chuckled when he realized what happened.\n\n\"Naughty boy, nerd! No one said you could cum again. What am I to do with you?\" he teased.\n\nHe kissed me gently and deftly crawled from his position to stand firmly on the floor between the beds. \n\nMy brain was essentially a puddle somewhere near the back of my skull. I was surprised the basic five senses remained intact. Daniel observed my confusion on the bed, gazing up and down my prostrate position, seeming to commit the image to memory. His smile bordered on a smirk. He was definitely enjoying this power trip and my resulting inability to remain mostly human. He sauntered towards the bathroom, my cum clearly plastered on his mounded ass cheeks, a bleach stain on tan satin. He flicked on the light and in moments I heard the metallic ping of the shower.\n\nI thought his bombshell that he had messed around with his teammates had been nonchalant. The price and general juiciness of Georgia peaches. His current game of sexual dominance and willing submission was something else entirely. Incomprehensible.\n\nHe drew the shower curtain back and stepped into the spray.\n\n\"Now we're even.\" He pitched his tone so that I heard him clearly over the sound of the water.\n\n\"Even?\" I asked.\n\n\"You didn't cum last night. And I did. Thank you for that, by the way. Fucking amazing.\"\n\n\"Welcome.\" I said, as if I'd folded his laundry or cleaned a dirty dish. \n\nSeriously, David? 'Welcome?' Not even 'YOU'RE welcome. Just, 'welcome.' \n\nJust shoot me now.\n\nDaniel laughed, loudly.\n\nAt least he didn't stoop to imitating my doofishness. \n\nSmall miracles, right?\n\nAfter a long silence, in which I did my best to shake off my wounded pride and fasten the shattered remnants of my brain into functioning lobes once more, I said:\n\n\"So then I take it, that yesterday, everything we...did...wasn't just a birthday thing.\" \n\nIt wasn't exactly a question. Just a desperate attempt at a leading conversation. I knew what I wanted to know. Or at least, what I THOUGHT I wanted to know. How wrong I was, if I only could have known.\n\nThe water abruptly cut off, the curtain was pulled back quickly and a very wet, very erect, and very hurt looking Daniel stepped back into the bedroom.\n\nI was so captivated by his expression that, for once, I hardly registered his gleaming nakedness as he stood by the bathroom door. His face was inscrutable, his eyes wide and full as he stared down at me still laying on the disheveled bed.\n\n\"Why would you say that?\" he asked. His voice was quiet and low and he worked one hairy muscle wrapped leg in small circles his eyes dropping from my face to follow the patterns his toes left in the carpet fibers.\n\nPanic began to rise in me, slowly at first, still unaware of the emotional battlefield I had just forced us both onto. I tried quickly to crush it and remain jovial.\n\n\"It's just. I don't expect you to...well, you know?\"\n\n\"I obviously don't? What is it I am expected to do, exactly? What's the protocol for our situation?\" \n\nHis questions were pointed, each one meant to dismantle my own. I was rapidly loosing the battle against my panic. He had called this 'our situation.'\n\n\"You're...you.\" I continued. \"You're popular. I'm just...well, not. That's not meant to be a pity party, just the facts of this life. And you have a girlfriend. Amy?\" At that moment, I was only partially sure that this was her name, but couldn't have cared less about her. \"I know how this game is supposed to end.\"\n\n\"And how is that?\" His voice was firm, just a touch of anger creeping in on the edges.\n\n\"You're supposed to ignore me. Act like none of this ever happened. Maybe you'll smile at me once or twice in the hallways at school, but you're supposed to go back to being the Captain of the Lacrosse team and forget about me. Write it off as something that happened 900 miles from home, something no one will ever know about. Just giving the gay nerd what he wanted for his birthday.\"\n\nIt came pouring from my mouth in an unstoppable flood, the words not even able to clearly find the emotions from which they emanated before they left my lips. The more I spoke, the more I was unable to stop speaking, the tighter my chest became. A lump was in my throat, pressing hard and making it difficult to breathe. \n\nTo my horror, I felt my eyes begin to water, my vision going misty the more that my words tumbled forth. I writhed on that bed in agony, wanting him to say something, anything. Scream at me, yell at me, call me names, anything but the silence that sliced at my dwindling confidence bit by bit, second by second.\n\n\"You don't know me very well, David,\" he said from the door, finally raising his gaze to my own. And like my own, Daniel's eyes seemed to shine with a wetness I hadn't seen before. \n\nMy resolve broke and full panic took control of my body. I acted on pure instinct. I had to run. I had to get away. There was no where to hide in the small room, no where I would be safe, so my weak legs hit the floor and carried me past his naked body and into the bathroom before he could speak again, before his eyes could do any more damage.",
        "I turned on the water and stepped into the shower in one swift motion, uncaring of the temperature that went from arctic to lava while I let it hit my face, my palms pressed to the white tiles in front of me, the only things keeping me standing.\n\nMaybe I didn't know him very well. I had spent the past two days simply trying to hang on as he yanked me down, around, under, and through this physical roller coaster. I hadn't had the time to really think on anything else.\n\nHis eyes. \n\nChrist, they had been so...sad. \n\nAs if what I thought, what I thought it meant about him, actually mattered to him and had an impact. Could someone like me actually have the power to wound someone like him? My teenaged brain couldn't begin to fathom the possibility. \n\nHe WAS supposed to act like I predicted. That's what happened when a gay man found himself entangled in a straight man's web. It was supposed to be purely physical and forgotten as soon as it ended. That was the safest thing for all parties. No one got hurt that way, they just took it for what it was and never broached the subject again. Simply a one off, sexually stimulating, fantasy. I knew that. But Daniel's eyes had hinted...no, they insisted...that this was different. For him. And the fact that I had assumed otherwise had cut him, injured him somehow.\n\nMy head spun at my foolishness, my treatment of Daniel, the man who had been nothing but kind to me over the past two days and showed me places I hadn't ever explored within myself. I felt like such a fool, but I couldn't shake the assumptions and stereotypes of what this was supposed to be. It wasn't safe for me to harbor those fantasies, the hopes of something deeper and more meaningful from someone who stood so far above me. There were rules to high school and Daniel seemed uncaring as he began to shatter each one of them in turn. And to top it all off, he wanted, expected, and hoped that I would follow him down the new path he apparently wanted to forge together . \n\nWe had today in Boston. One more day of rounds and then one more night before we returned to school in the morning. \n\n24 hours left and I'd ruined it all with my thoughtless assumptions.\n\nI thought I would perish to a cloud of dust when I felt his hands at my shoulders, his fingers gently pressing into my skin as he traversed my body. Lighter than silk but with an effect like steel, his arms moved under mine and pulled me to him. Unlike the previous morning, I didn't feel his hardness press into my backside. Only the firm and now familiar strength of his muscles, the soft mound of his sex nestled gently next to me. He pulled my back too his chest, my hands coming to rest on his own, pressing them harder into my skin.\n\nI wanted to apologize, to beg for his forgiveness and pray that I hadn't ruined everything. I wanted to, but Daniel kissed the nape of my neck and all thought vaporized. My head fell onto his shoulder as my knees sagged and I let his superior strength almost entirely support the weight of us both. I'd done my best to keep them at bay, but tears came hot and fast down my cheeks. Thankfully, they were silent and not the wracking sobs I felt I wanted to release, but Daniel still noticed.\n\nHe turned me to face him, his hips pressing into mine, his hands around the small of my back as he stared into me, seemed to take me apart and put me back together again until I couldn't recognize the man he saw.\n\n\"None of that,\" he whispered. He pulled me tighter to him. For the first time, neither of us were hard and sex-crazed. We were two men pressed together, seeking closeness, intimacy that I hadn't planned on and was unsure how to return.\n\n\"But...,\" I began.\n\n\"What happens, happens, David.\" He said, as if that was the answer. Maybe for him, it was. I was not so sure.\n\n\"What's going to happen?\" I wanted that question to be taken seriously, but instead it left my throat mixed with the irrational fears of a child who's just discovered what comes after life. \"I don't want...If you...when we...?\"\n\n\"I don't know.\" \n\nHis hands traveled over my ass and up the small of my back. I struggled to maintain his gaze. \n\n\"I really don't know. But I can promise that it won't be what you said.\"\n\n\"How can you promise that? When we get back to school you could...\"\n\n\"But I won't.\"\n\n\"Why not? What good will it do you to...keep me around?\"\n\nIt killed me that in that moment I thought of myself as little more than a sexual plaything for Daniel, some THING that could be \"kept around,\" like an old sweater, still unable to accept that this was anything more than physical for him. Confusion fueled exploration, easily forgotten. But even if it was, I wanted nothing more than to be that object for him. To be used like that. Like I'd come to expect, been told to expect, conditioned. It was Daniel who wanted something more. \n\n\"Because...I won't. You should know that by now. I thought you were supposed to be the smartest guy in the grade? Can't your nerd brain understand something as simple as that?\"\n\nIt couldn't. But the smile he flashed me assured me that I was willing to try. We had been exploring unknown mountains for the past two days, climbing at dizzying heights, but still firmly planted on solid ground. Daniel was planning a trip to the vast unknown of outer space. But for that smile, I think I would have traveled anywhere and done anything.\n\nI turned my head and leaned in to kiss him. It was gentle but persistent, not the lust filled animalistic kiss I craved from him every waking hour and in my dreams. Just a kiss that I hoped would convey what my bruised brain and self sabotaging heart could not. He sighed into our kiss and I felt him relax in my embrace as I, too, had done. \n\nI'm not sure how long we stayed like that, our mouths pressed together, tongues dancing an easy tango. The water had lost some of its blistering heat when he finally broke our embrace and reached up to wipe a remaining tear from my cheekbone with a grin. \n\nHe reached behind me to turn off the water and stepped out of the shower silently. I found myself staring at the beautiful shape his back made, the wide shoulders tapering down into a deep V and then easing into his bubble butt. But for once, I wasn't overpowered by the desire to take him, touch him, devour him. Instead, something of a sense of comfortable...ownership... began to settle on me. Daniel had given something to me, a part of himself that I'd never received before. And he'd promised to give more.\n\nHe handed me a towel and we began to dry off in the steam filled silence. \n\nAs we dressed and readied ourselves to head back to the competition, I tried my best to keep the myriad emotions I was feeling from becoming too apparent on my face. Daniel tossed me a new jock strap, black this time, which he'd pulled from his suitcase. He presented it to me without comment and I placed it on the bed, fully intending to wear it today despite this morning's events.\n\nWith his naked back towards me, Daniel suddenly straightened from his suitcase, his hands going to his hips as if he was searching for something on the floor in front of him. He turned and looked around the room, found what he was seeking and made quick and sure movements as he approached me. He grabbed my cell phone from the top of the dresser and soon stood just inches from me, my phone in his hand.\n\nI wanted to ravish him, his nakedness so close to my own. He stared at me in silence for a moment and I was unable to move or tear my gaze from his. \n\n\"You need to shut up and just go with it,\" he said in advance, his eyes dancing with mirth at whatever it was he was planning. Without waiting for my compliance, Daniel knelt in front of me, opened his mouth and took my soft cock into him. \n\nGently, he sucked on my length, working the flesh towards firmness, allowing it to expand into him. In my shock, my eyes traveled to the ceiling. If I thought too much about what was happening to me, I would surely find some way to ruin it. \n\nIn moments, my cock was fully hard and Daniel was bobbing contentedly down my shaft, his skills no less impressive than when we'd first awoken. The feel of him on my member so soon was almost too much. I was still sensitive and not fully recovered from my first orgasm of the day just minutes before.\n\nBefore I could react, Daniel raised my phone in his outstretched arm, placing it high above his head and aiming it towards his mouth wrapped around my cock. Without looking, he pressed a button and a bright white light suddenly illuminated everything from my waist down. Daniel pulled off of my cock and opened his mouth, doing his best to smile around my girth as he held my head on his tongue. \n\nCLICK.\n\nFor once, my haziness came from the blinding flash of my camera phone and not the life altering emotions of the day. \n\nDaniel made a thumbs up with his free hand. The white light threw his position into comedic relief.\n\nCLICK.\n\nAs if he'd checked off a to-do task, he rose from his knees, my wet cock bobbing up and down between us. He handed me my phone, two new photos displayed clearly on the gallery screen.\n\n\"There ya go.\" He sauntered back towards his suitcase.\n\n\"What the fuck was that about?\" \n\nI must have been quite the site, my hard cock swinging in the breeze, holding my phone and staring at it as if I were a caveman discovering fire and not the technologically savvy man of the 21st century I was.\n\nDaniel smirked as he pushed his arms into his sage green button-down shirt, my animal brain just registering the erotic movements of his muscles beneath his olive skin.\n\n\"Now you have something in your back pocket if I ever become an asshole. I don't plan on it, but if I ever do, now you have some ammunition. It's all I could think to do to ease your fears a bit, level the playing field. At least as you see it.\"\n\nIf I had been able to speak, I wouldn't have. I just stared at him aghast. The power he had just willingly placed into my hands, literally placed into my hands via telephone, was a show of trust that I didn't know how to return. He dressed completely and motioned for me to do the same. I was actually thankful of the reminder as I may have spent the day glued to that exact spot, staring at the photo of my cock in Daniel's mouth until the sun set and rose again the next day had he not provided it.\n\nI was still making sense of the way the game had changed when we got to the Competition and headed to our separate rounds.\n\nMy first two rounds of the day went well, ending in two more pointless victories and two more inferior debators garnering the points that were rightfully mine. It didn't phase me as it should have. After I handily won my third of four rounds for the day, I didn't even wait for my score before I gathered up my coat and bag full of research materials and notes and strode quickly from the auditorium.\n\nIt took me a minute to get my bearings along the winding hallways of the massive building, but I soon found myself standing in front of room 314. I'm not sure why my feet carried me there, or where I found the strength to complete the journey despite my brain screaming in terror at what I had planned.\n\nI entered the room from the first of the two doorways, ensuring that I wouldn't be seen as I snuck in the back. I turned the handle quietly and opened the door without incident. I scanned the room to make sure I was in the right place and then slid into an empty desk in the last row.\n\nDaniel was unmistakable, even from behind. His short black hair was styled perfectly and his broad shoulders cut a striking figure in his charcoal grey suit coat. I tried not to sigh as I stared at him and rested my chin in my palm. Being in the same room as him had a profoundly unsettling quality for me, transforming me into a mindless drone of hormones and fantasies. I normally resented those sappy, brainless guys and girls. Now, I had become one.\n\nThe student, who had been speaking when I entered, finished their speech and there was a smattering of half-hearted applause that died down as quickly as it had begun. \n\nOne of the two judges in the first row scanned their roster and turned to the small group behind them.\n\n\"Daniel. You're next. Commentary only. Yes?\" he asked.\n\nDaniel stood and my heart began to race. In a moment he would be facing me.\n\n\"Yes.\" He replied as he walked to the front of the classroom, his stride long and confident. Unlike the previous competitor, Daniel did not hold a stack of index cards in his hand. He would deliver his Original Oratory from memory.\n\nHe stood with his feet shoulder width apart, as we'd been taught, his eyes on the floor as he gathered his thoughts for a moment. When he raised his eyes to begin, his sight landed on me and his mouth remained open for a moment.\n\nIt happened slowly at first. Like watching a glacier break apart, starting from a small, barely noticed crack and widening into a schism that sent huge sheets of ice crashing to the sea below, Daniel's nerves became increasingly and more obviously flustered.\n\nI refused to break my gaze from his. He stared straight back at me, the words coming to him on auto pilot, nearly monotone as he rattled off his opening statements. \n\nPity. \n\nIt was an impressive performance. I'd watched it a time or two back at school when we did peer evaluations. \n\n\"How can we, then, ascribe those values to ourselves when we wallow in hypocrisy,\" he intoned. \"How could a people still claim to be noble and good...,\" \n\nHe paused. He cleared his throat. \n\n\"Noble and good when...umm...sorry...noble and good.\"\n\nI couldn't help it. I chuckled to myself. \n\nHe was shaken. Truly shaken by my mere presence. His invasion of my round yesterday was being paid back in full and with satisfying results. Very satisfying.\n\n\"Fuck it,\" he said. \"I forfeit.\" \n\nThat cut my mirth short. Daniel strode from the front of the room, the other students becoming aware that something new was happening to cut the drudgery. He barely paused to grab his bag and coat and headed straight towards me, each step more sure and growing in speed. His brown eyes burned into me and my breath became stuck in my lungs. \n\nLike a bull running down a Spaniard, he made it to me in record time. His grip closed around my wrist and yanked me from my seat in one smooth motion. He didn't stop to see if I was following, he just dragged me bodily from the room. Not with violence or ill intent, his grip was firm but not painful. He knew I would follow. He was just giving me very firm instructions to do so. In a flash, the door was opened and he lead me into the hall, letting it slam behind us loudly, echoing down the empty hallways.\n\nDaniel still held my wrist in his grip, his arm extended behind him as he strode surely. I watched the muscles of his legs and ass as he moved, covered by the suit pants but doing little to actually hide their magnificence. We'd gone about 25 yards in this fashion, Daniel leading and pulling me from behind when I finally found my voice.\n\n\"What are you doing?\" I asked. \n\nThere was more than a little desire in that question and I felt my cock start to swell in my pants, beginning to fill Daniel's loaned jockstrap to bursting.\n\nDaniel was silent. He lead us around first one corner and then another as my trepidations and desire mounted in equal measure. After a third turn down a hallway I hadn't seen before, Daniel's pace quickened until we were almost jogging over the linoleum tiles. With a grunt like a football tackle, Daniel suddenly turned and pushed open a bathroom door I hadn't noticed. He yanked me into the room before I had a moment to adjust.\n\nI heard, rather than saw, Daniel's coat and bag as he threw them inside the small two-stalled room. I remember the sun through the clouded windows made a bright but still somehow dingy rectangle on the floor, but everything else escaped my notice. Daniel released my wrist and gripped my face between his palms as he pushed me to the wall, using his mastery of my body to ensure I didn't slam my head into it.\n\nHe pushed his mouth onto mine and kissed me deeply, his tongue forcing its' way inside. My muscles turned to water and my own bag and coat crumpled to the ground at my feet. His scent was intoxicating, the heat and pressure of him as he ground himself into me a shock like the first blast of Boston cold at the airport. My body shivered uncontrollably in the same way. His tongue traveled my mouth and I returned his advance as best I could in my hazy state. \n\nWhen he released me I mumbled: \"What the hell was that for?\" as I tried to catch my breath and calm my racing heart.\n\nHis hands were still on my face but had softened their touch to a gentle caress.\n\n\"I need to get you out of my system.\"\n\nAs high as I had just been, I came crashing down just as far.\n\n\"Why?\" I struggled against the rising tears. He would not see me cry twice in one day. I wouldn't allow it.\n\n\"Because, I can't be thinking about you all day, every day. I can't be thinking about what I want to do to your body in the middle of AP English. Or what I want you to do to mine. I'll fail inside a week.\"\n\nAnd just like that, I was soaring again. \n\nDaniel's troubled expression was the only thing keeping me tethered to the earth. He was really going through something. What it was, I couldn't begin to define, but it was writ large on his features. Lust was there, passion as well and the usual fears of reproach and rejection. It looked as if he were mapping out his possible courses of action. The steps and reactions and counter reactions that could take place should he choose to go one way down this crossroads as opposed to another. \n\nThough I was far from sure which road we should travel, I knew which routes to avoid. And in that moment, I desperately wanted to lead him away from the more nasty options. So I relied on that most sacred of teenaged social skills: the obtuse question.\n\n\"What's wrong?\" I asked, not really wanting him to answer and fearful he would.\n\n\"I don't know,\" He answered, leaving the space for my heart to begin to beat again. \"Maybe nothing. Probably nothing. I mean...,\" he faltered. \n\nI stared at him in the silence, memorizing his face at that precise moment, bathed in dusty afternoon sunlight from the windows, just in case this was all about to end.\n\nHe sighed deeply, as if he was releasing all of his anxiety in that one long breath.\n\n\"Don't look at me like that, David, \" he said in mock desperation. \"It's not fair.\"\n\n\"I'm sorry,\" I said, and meant it, truly afraid I was the cause of his turmoil.\n\n\"Shut up. You have nothing to apologize for.\" \n\nBefore he'd finished speaking, his words obviously meant to soothe me despite his own discomfort being more crucial, he pressed his lips to my neck and kissed the space behind my ears. His open grip moved through my hair, starting at the base of my neck and traveling slowly until he held the back of my head in his open palm. His other hand found the front of my black dress pants and covered my throbbing erection in his grip.\n\nHis lips at my throat, kissing lightly and then moving to a new location before I got used to it, over and over again ,made my skin tingle.\n\n\"Daniel,\" I sighed into him. \n\nHis fingers fumbled with the buttons of my shirt, working from the top down. His lips never left my skin as he licked my collar bones and showered a line of kisses down my sternum, each new contact sending me to my toes.\n\nHis hands found my hips as his fingers tried to undo my belt, a race to see wether the pants or the shirt would succumb first, but sure that both would eventually give way to his assault. Daniel pushed me away from the wall and towards the window sill at the far end of the room, directly facing the still unlocked door. The backs of my thighs hit the tiled windowsill and I sat down hard. ",
        "Daniel's hands squeezed at my thighs and grabbed at my full crotch. His kisses to my chest pushed my shoulder blades to the window and I sat there like a rag doll, unable to control my limbs, completely at his mercy.\n\n\"Let me do this, please?\" he begged me between kisses, working his way down my ribs and across my stomach. \"I need to have you.\"\n\nI grabbed his head against the rising sensations as he neared my cock with his kisses, his breath hot on me. \n\n\"I want you to,\" I breathed. \n\nThat was all he needed to hear. His strong fingers soon ripped open my belt and nearly tore the zipper on my pants as he opened me to air. He growled deep in his chest as he looked at my rigid tool through the black cotton and for the first time in my life, I understood what it felt like to be desired, wanted, craved. \n\nDaniel took the opportunity of my hips rising from the windowsill to flip me towards the wall. My arms locked and gripped the sill, my pants pooling near my ankles. The exposed globes of my ass were open to the air, outlined by the thin elastic strips of Daniel's jock. My hole trembled at the new vulnerability. I gritted my teeth and sucked air into my lungs with difficulty, the potential pleasure reaching nearly painful heights.\n\nDaniel's lips on the small of my back caused me to arch back into him, his hands taking the muscles of my ass and easily enfolding them in his manly grip. He tugged them apart and I was truly exposed to him for the first time. \n\nAt first, his tongue just flicked with the gentlest pressure against the sensitive skin of my hole, teasing me to life but making my arms tremble beneath me. He held me open and took my shivers for the cue they were. He lapped more firmly.\n\nIf you've never been rimmed by a guy who's eaten pussy before, I can't recommend it highly enough. If they can master the complex female form, the more primal make up of the male ass was low hanging fruit, so to speak. \n\nHe began to fuck my ass with his tongue, wetting my opening thoroughly. The groans that escaped from him only heightened the experience. In my stupor, I must have realized the door was still unlocked behind us and anyone at all could have walked in and found Daniel with his face buried in my pale ass at any moment.\n\nLet them watch. That wasn't going to stop me.\n\nDaniel reached in front of me and finally freed my cock from its prison, allowing it to swing to rest in his palm. I fucked myself against his torrent of tongue work and used the forward gyration to pump myself into his hand. It was an even call as to which ball of pleasure I sought to deepen more. Photo finish as far as I'm concerned.\n\nAfter an eternity of submitting to him on all fronts, Daniel rose from his crouch and I felt his bulge as he pushed it against me.\n\n\"God, you feel so good,\" He breathed into my ear, echoing my internal monologue. \n\nMy hips and his found a rhythm and rocked together making us both groan.\n\n\"I want you to fuck me,\" I said.\n\nThe voice that came from my lips was full of surety though I don't remember authorizing it to be heard. The body wants what it wants when it wants it.\n\n\"Are you sure?\" \n\n\"I NEED you inside me, Daniel. Right now.\" I felt like a horrible slut for the admission, but I'd never spoken truer words.\n\n\"I didn't bring any lube...\"\n\nThough it was almost painful to voluntarily withdraw my ass from his still covered cock, I spun and sank to my knees in front of him. His belt and zipper gave way easily to my prodding, and I removed his cock from his grey-green boxer briefs and hooked them under his low hanging balls.\n\nI could have stared at his uncut cock and reveled at the way it seemed crafted specifically for my hand, but instead I straightened my tongue and made quick circles around his head and foreskin, lapping up his plentiful pre cum as I went, savoring the sweet liquid. I opened myself and shoved him all the way inside me. He filled me completely and made my ass ache for the same attention. On the back stroke I made sure to lather his cock with wetness.\n\nWhen I was sufficiently sure I'd gotten him going and thoroughly lubricated, I rose and turned. I placed my hands on the wall in front of me, one hand gripping the windowsill, the other stabilized on the bare wall. I pushed my ass towards him and arched my back, begging him to take me. \n\n\"Fuck me, Daniel. Now. Please.\"\n\nHe gripped his cock in his hand and guided it to my ass. The first contact was electric. His smooth skin slid easily over me, my wet hole and his wet cock meshing perfectly.\n\n\"Yes...,\" I moaned and pushed back. \n\nHe pressed more firmly, his head against my hole. I pushed myself back and felt him enter me. My entire body was on fire, past the point of pain or pleasure and just fizzling on pure nerves. My breath left my lungs in a deep sigh when he pushed forward and I pushed back. I felt myself fill with him, pushing out all room for anything else, my tight hole gripping his dick like a vice but easily allowing him in.\n\n\"Holy shit,\" Daniel groaned as he neared his destination. I felt his hips settle onto my bare ass and his fingers grip my hips bones is a still firm but shakier hold. He pushed home and I saw stars.\n\nI took the lead and moved myself up and down his pole, slowly at first but with increasing speed. My ass pushed him out and then pulled him back in, my hips rocking forward and back. I could feel each millimeter as it left me and then retook it's position inside me.\n\nI pulled back further, nearly allowing him to leave my tunnel and felt his cock head press against my prostate. My cock throbbed and a strong stream of precum erupted from me.\n\n\"You're ass is so tight,\" Daniel said as his hands moved up my spine, thumbs pressing gently, massaging any tension from my muscles. \"Fuck, I'm not going to last long.\"\n\nThen I'd better get to work.\n\n\"Pound me,\" I breathed. \"Fuck me hard.\"\n\n\"You sure?\"\n\nI slammed my ass all the way down on his hard cock, feeling his pubes on my cheeks and moaning loudly as I did. That should answer his question.\n\nThere are rare moments when your soul leaves your body. Near death experiences. Spirit Quests. When Daniel grabbed my hips like handle bars on a bicycle and started fucking me against the bathroom wall was a third.\n\nThe speed of him was breathtaking. My chest pressed to the wall and windowsill in front of me and I used whatever strength remained in my arms to push further into him. Daniel growled like a wild cat as he picked up speed. His cock hit my spot over and over, twice a second, once in and once out. My mouth hung open and my slit oozed a steady stream. I could already feel the explosion building in my balls. I dared not reach down and touch my own cock for fear I might actually kill myself with sheer pleasure.\n\n\"Oh, fuck me Daniel. Yes, oh shit, fuck me. You're cock feels so good.\"\n\nI knew he liked \"dirty talk\" but the words just fell from me without thought.\n\n\"Ahhh, David, I'm close. Oh my god, I'm gonna cum soon. I can't...ohhh.\"\n\nHis cock was like hot iron inside me. And there was only one way to quench that fire.\n\n\"Do it. Cum in my ass.\" I said in broken pants as he pistoned in and out of me.\n\n\"Ahh, I can't.\"\n\n\"Give me your load, Daniel. Cum in me. I want to feel you inside me. Yesssss...do it for me.\" I urged him on.\n\nWith a sound like nothing I'd ever heard, Daniel's cock buried into me to the hilt and expanded. I felt it swell, felt the cum travel from his balls and down his shaft, his head against my prostate until it, too, grew. The first blast sent me hurtling over the edge. My ass grabbed at his cock, milking him, three, four, five times, each new jet being matched as my own cum splashed into the wall before me, his cum filling me up and mine streaming to the floor.\n\nDaniel stayed buried in me until his cock finished twitching. When he removed himself, slowly with each inch causing him to shake a bit from the sensitivity, I held his load deep inside me, not letting any of it escape. My breathing began to lengthen again and I climbed down to reality, my cock still leaking a little.\n\n\"That was...shit...what the fuck was that?\" Daniel asked. \n\nFor the second time, he was flustered and at a loss for words. I enjoyed him like that. He was cute when he was just a little bit off of his game.\n\n\"I'm glad you approve.\" I joked as I lifted my pants from around my ankles, careful not to let any of Daniel escape my still aching hole.\n\n\"Yeah. I approve. Shit...fuck me, dude.\" Daniel had one hand to his temple. His cock still glistened wetly in the sunlight, covered in his own cum and my ass. \n\n\"Maybe later,\" I shot back. He chuckled and gave me that crooked half smile again. I stuffed my semi hard cock back in my pants and zipped up.\n\n\"How was it for you?\" he asked. \n\nHis insecurity and desire for reassurance was endearing. In reply I gestured to the massive amounts of my genetic material currently drying on the tile wall. He laughed again and zipped himself up.\n\n\"That was so different from what I expected. Better. Way better than when I fuck Amy.\"\n\n\"Gee thanks. So sweet of you to mention someone else you've fucked so soon after breeding my hole for the first time.\"\n\nI meant it to be a bit biting and it had that effect.\n\n\"No!\" he said with concern. \"Sorry, I didn't mean to compare...you're not any...shit...\"\n\n\"Don't worry about it,\" I giggled, his panic melting any little anger I might have held at the mention of the dread cheerleader, Amy.\n\nHe took me at my word and placed a gentle kiss on my lips, just a second of contact that ended far too soon.\n\n\"Thanks,\" he said. I was unsure if he meant for the use of my ass, or the forgiveness of his post-coital faux pas.\n\n\"Sorry if I got a little too into it there for a minute. I don't know what came over me.\" \n\n\"Was I not there too? I seem to recall fucking myself on your dick pretty forcefully. You didn't do anything I didn't ask you to do. Want you to do.\"\n\nDaniel's reassured grin was like a shelter against the storms that continued to rage in me. I could hold on to that if things ever got mixed up again.\n\nDaniel gathered up his coat and bag from their original resting place against the wall and collected mine from near the door. He handed them to me with a friendly shove.\n\n\"What are you going to do about your last round?\" he asked, suddenly aware of where we were and that we had come here to compete.\n\n\"Nothing. It's not like they matter anyway.\"\n\n\"Yeah.\" He agreed.\n\n\"Do you want to get something to eat?Get out of here?\" I asked nervously.\n\nHis features immediately brightened further and he nodded his ascent.\n\n\"I'd love to. Lead the way.\" He gestured to the door. When I reached it and pulled it open I was sure that there would be a waiting crowd of spectators who had heard him fucking me senseless and bare against the bathroom wall. I wasn't sure if they'd applaud my involuntary groans or stone me for them, but thankfully the hallway was blessedly absent of judgmental eyes. I stepped into the hall, my ass still tingling , the warmth of Daniel's cum still trapped and held deep inside me.\n\n\"Don't you want to...ya know...get rid of that?\" Daniel asked as we walked in the general direction where we assumed we'd find the staircase to the first floor.\n\n\"Not on your mother fucking life,\" I said as I continued to lead the way.\n\nThe rest of the afternoon was spent in a daze of meals, conversation, coffee, more conversation, smiles and laughs. All the while, I could feel Daniel's strength inside of me still. Whenever my mind wandered to the tingles that still centered on my sore hole, my cock would swell in my pants.\n\nAfter a while, we ended up back at the hotel. I regretfully cleaned up from our delicious session and crawled beneath the covers. I was exhausted. More tired than I could remember being since my last week of sophomore year, when I had three final exams in one day and had remained awake on nothing but red bull and espresso for 36 hours straight. \n\nThe day thus far had seen my highest highs and lowest lows and ended in the most mind blowing sexual experience of my young life. My brain NEEDED to shut down and sleep to process some of the raw data I'd thrown at it over the past 12 hours. \n\nMy nap was deep and blessedly dreamless. I couldn't have survived any more fantastic dreams after having lived through one in the waking world. There's a reason we forget the things our subconscious cooks up at night, nine times out of ten. We aren't meant to handle that stuff.\n\nWhen I woke some time later, the sky outside the window was beginning to darken, the deep purples and almost fluorescent pinks and oranges of the setting sun finally allowing me to admit that the North did have it's advantages. \n\nThe sound of short bursts of air at very regular intervals was all I could hear. Confused, I roused myself from beneath the covers and sat up in bed.\n\nDaniel was on the floor at the foot of my bed. He lay on his back, his torso bare and his huge arms laced behind his head, his chest spread to its most broad as he repeated his crunches rapidly. I watched him for a moment, counting 15, 16, 17, 18. There was no telling how long he had been going before I woke up and noticed him, but a sheen of sweat covered his hairy chest and never-unmoving abs. I watched them contract and loosen at blinding speed, at least to me, who would have been panting for oxygen at half the pace and praying for death, to boot.\n\nTo make his actions all the more obscene, Daniel wore only his white jock strap for covering. Though his hips remained on the floor, from my position nearer his feet, I had a fantastic view of his muscled ass as he crunched up and back down, each time, gently squeezing, small dimples appearing at his hips.\n\nFuck, I wanted to pounce on him like those lions in the National Geographic Nature specials.\n\nI must have made some sort of noise, because Daniel finally noticed me and my moment of voyeurism came to an end. At the top of a crunch, he unlaced his fingers and lounged back on his elbows, a broad grin on his face, apparently unaware of just how...impossible...he looked simply laying there.\n\n\"Good morning, sleepy head. Thought you were going to sleep forever.\" He said as he prepared to get up from the floor.\n\n\"Oh no. By all means, stay where you are. Don't get up on my account. I'd be just fine if you never moved an inch from right there except for me to devour you.\" \n\nMy nap had worked wonders on my confidence. Or maybe it was my hormones once again gaining control over my brain. Most likely, both.\n\n\"You like it when I work out, huh?\" I nodded. \"I haven't done my routine these past two days, thanks to someone distracting me.\" He jerked his head in my general direction, but I was happy to see that he didn't move from his lounging on the floor.\n\n\"Can I get up and onto the bed yet, nerd?\" he asked from beneath me. \"Had your fill?\"\n\n\"Nope. But get up if you simply must.\" I rolled back and threw my arms dramatically over my eyes as if this were the most grave imposition. Daniel flopped down next to me on his side, not quite touching me anywhere. I reached my hand forward to draw my fingers over his hard nipple when he suddenly slapped me away.\n\n\"Nuh uh,\" he clicked, wagging his finger at me like a cartoon school marm. \"No, sir. Same rules as this morning. No touching for you. You can only watch.\"\n\nThis thing with Daniel, whatever it was, was like stepping into a pro sports game having never read the rulebook or even watched a match. I had no idea what he was going to decree next, what line I would cross or wether I was able to proceed as planned. He certainly had a way of keeping me on my toes. Or back. Or knees. \n\nWatching Daniel as he teased himself with his own hairy hands nearly caused me to commit a crime. \n\nHis fingers took one of his dark nipples, surrounded by his trimmed black hair, and twisted hard, his hips pushing his jock-covered-cock towards our heads. \n\nBut I couldn't grab it.\n\nAnother pull on his nipple and his free hand stroked on his tool through the fabric and made him moan, his mouth open and his tongue running around his lips.\n\nI lay there powerless. Only watching.\n\nHe put two fingers in his mouth and sucked on them, his eyes closed but his face slowly turning to me while he rubbed his leaking cock continuously.\n\nI didn't know where to look first. If only I could have split screen vision!\n\nHe brought his thick, wet fingers down between his legs and roughly fingered his ass hole, pushing himself up into the air as he rode his own hand.\n\n\"Mmm, David,\" He moaned through gritted teeth.\n\nI'm not sure what happened next. I'm pretty certain I must have lost consciousness. The next thing I remember is Daniel with the vibrator he'd bought last night lubed up and pressed to his hole in his own grip. Then more blank memory overload when he pushed it inside his visibly pulsing opening and screamed my name again. \n\nDaniel was the first to break the rule of no-touching when he flipped the lid to the lube and squeezed some onto my waiting prick.\n\n\"It's so big.\" He whispered close to my ear as he lubed up my cock. \"Do you think I'll be able to take it all?\n\nWith that, one muscular thigh rose from the bed and crushed my stomach to the mattress, as he straddled my hips. One hand behind him, he teased my cock and rubbed it over his now ready jock-hole.\n\nI lay in stunned silence, eyes wide with what must have looked like fear but was something more akin to awe. Daniel leaned forward to kiss me, our mouths still closed, resting on his forearms as he pressed the tip of my aching cock into his willing ass.\n\n\"Ooooh, fuck,\" he moaned into me. His hips began the slow journey forward, each small change pushing another portion of me inside him. His ass was hotter than anything I'd thought possible. His face contorted a bit but he continued his deliberate pace, adjusting in intervals and breathing deeply. His cock pulsed through his jock, his precum beginning to make a small pool on my upper stomach.\n\n\"Oh, my god.\" I felt as my cock pushed past his prostate. The pool got significantly larger. \n\nAt first, I could feel the muscles of his virgin ass spasm uncontrollably as I was buried deeper and deeper into him. Soon, the spasms quieted as Daniel learned to ride the sensations, breathe through them, and then ultimately master them to use on my trapped cock.\n\n\"You're dick is amazing,\" he whispered to me.\n\nMy brain was screaming to just ram it in! End this slow progression. But I ignored it and let him lead this. \n\nA final deep breath followed by an equally deep kiss and I was buried to the hilt in him, his ass twitching around my tool, but my balls resting against the glistening skin of his bare ass. Daniel seemed to be shining. He nearly glowed from the inside.\n\nHe wiggled and moved his hips as he adjusted to the feeling of my cock keeping his spine aligned. His hands were on my chest as he began to rock back and forth in small undulating motions. \n\nHe was using muscles I didn't know existed, much less had names like Adductor, Abductor, and Adonis Plate. He never removed more than an inch of my hardness from him before he rocked back and took it back inside. He soon found the ability to synch is external rocking with the internal pulsing of his hole. I swear I could watch his abs contract before my eyes and FEEL as his ass squeezed me tightly, pulsed up and down my entire shaft. I imagined my cock was rubbing up along the muscles I could see, fucking him from the inside, involuntarily tensing his abs from behind. \n\n\"I want you to fuck me,\" Daniel growled at me in his husky baritone. \"Slowly.\"\n\nMy hands were on his hips in a flash, holding him down on my cock, feeling him pulse along me. He let out a long groan as I eased myself from him, withdrawing almost to the end, before easing slowly back in.",
        "\"Holy shit...do that again.\"\n\nWith pleasure.\n\nIn to the hilt, out slowly, back in at a crawl. He felt and registered every inch. His body made that clear.\n\nI didn't want to go much faster. If I did, this would all be over too soon. When he rocked his hips back, I rolled mine forward so I pressed fully into him. On the back stroke, I held his hips in place so that I never fully exited his ass. With this rhythm, Daniel, the Captain of the Lacrosse team, rode my cock.\n\n\"Ahhh, it feels so huge inside me. Fuck...don't stop fucking me. You're going to make me shoot, soon. Fuck yes!\"\n\nThe stream of sexy talk was nearly constant, as if my cock was physically pushing the words from inside of him.\n\n\"God I want you to pound me, but I don't want this to stop. Keep going like this. Fuck me! Your cock, David. Shit I love your cock in my ass.\"\n\nMy name on his passion addled lips made me want to give him the pounding he desired. Somehow, I controlled myself.\n\n\"You're going to make me cum soon. I want to feel what you felt today. Cum in me. Please?\"\n\n\"Fuck, yes,\" I agreed.\n\nHe leaned forward and kissed me fully. My cock slid smoothly inside him and just as smoothly withdrew and repeated. \n\n\"Ohhhhhh, fuck. Cum in me, David. I want to feel you shoot in my tight ass. Are you going to cum for me?\"\n\nI continued my fucking but felt my balls draw up tighter. Daniel must have sensed the oncoming storm and it made him groan as he rode me faster.\n\n\"Oh, shit, Daniel, I'm so close.\"\n\nDaniel's rocking picked up a little steam.\n\n\"Yeah? Fuck yes, cum in my hole.\"\n\nI reached between us and tore the jock strap away from his cock so I could wrap my hand over his uncut member as my cock pulsed and stretched his ass apart. The contact was enough to send him to the moon.\n\nHis jizz coated my stomach and spilled into my palm. It caused his muscles to tense on my cock, to tighten so much I thought he would squeeze me out of existence. As if to protect itself from annihilation, my prick expanded even further as I felt my cum splatter against Daniel's insides. I kept thrusting as I came, coating every inch of him with my seed and watching as my orgasm drove him to a second unexpected extension of his own. In a moment both his ass and my chest and stomach were literally coated in 18-year-old boy cum.\n\nOur breaths were ragged and Daniel collapsed on top of me, his face pressed to the side of my neck and shoulders, but his ass still spasming and thrashing around my equally sensitive cock, oozing myself into him. Every now and then, an involuntary shiver would make him convulse. The old southern ladies would say \"someone's walking' on your grave,\" but I tend to believe losing your anal virginity had more to do with it than old school superstition. \n\nWe didn't do much speaking over the next several hours. At some point, Daniel ordered us room service and scared the bell boy who delivered it thirty minutes later by answering the door with a his erection pointed straight into the hallway. He tipped the man generously before bounding back into the bed beside me. Our food was cold by the time we ended up eating it. \n\nThe old adage of \"fucking like bunnies,\" seems appropriate. \n\nDaniel enjoyed the slower, longer sessions when he took my dick inside him and forced me to cum twice more. We tried for a third, but by that point, I was shooting almost painful blanks.\n\nHe returned the favor twice more, once on my side and once with my knees pulled to my chest and my hips resting on a pile of pillows. \n\nMy skin was wrinkly from our third shower in maybe four hours when we finally collapsed to the bed and stared at the ceiling, both of our bodies at the limit of their abilities. One arm was thrown over my chest, attempting to hold my racing heart inside when I felt his fingers lace through my other hand.\n\n\"Don't worry,\" he said as he drew our entwined hands to his own hairy chest and covered it with his other palm.\n\n\"Hmm?\" I asked, pretending not to have heard him, unsure I was able to walk this path of conversation right now.\n\n\"Don't worry. Seriously. You have nothing to be afraid of.\"\n\nI kept my eyes on the ceiling.\n\n\"You don't understand.\" I said, the mix of powerful adolescent emotions beginning to come to a boil inside me. \"You can't. You are too good to be believed. I know it's only exploration, like you said, but...\"\n\n\"You can't be stupid enough to believe that line, still? Not now,\" he said from beside me. \"I thought you were smarter than that.\"\n\n\"That's the second time today that you've questioned my intelligence.\" I scoffed. \"What am I supposed to believe?\"\n\nThe question hung unanswered between us for a while.\n\n\"I'm not sure.\" Daniel said, but he pressed our interwoven hands to his chest even tighter. \"Can't we just enjoy it for now? Still? I don't know what will happen tomorrow, but you can feel that right?\" His hands pressed me into his chest, his heartbeat pounding out a strong, steady, sure rhythm beneath my fingers.\n\nI nodded.\n\n\"Just focus on that for now. And know that I will find a way to see you. When we get home.\"\n\nI turned my face towards the window, not wanting him to see the tears that leaked from my eyes, the unparalleled joy that mocked me as I caught my reflection in the surface of the darkened window panes.\n\n\"Don't worry about that.\" He finished the thought. I felt him snuggle up behind me, our spent bodies finding comfortable spaces again, molding to each other with now practiced ease. His arm and our locked grip wound over my shoulder and was pressed into my chest.\n\n\"Get the light?\" he asked and kissed the back of my neck.\n\nI turned the knob and sent the room into darkness.\n\nI tried to memorize the feeling of that moment, to take a snapshot that I could look at whenever I needed it. In a few hours, everything was going to change. No matter what way we worked out together or alone, tomorrow was a day of total change. \n\nI had begun this trip as one person, someone I could understand and knew how to be. The past three nights had obliterated that man. Tomorrow, I would have to start figuring out who I was now, after Daniel.\n\nDuring Daniel.\n\nGod, I hoped it was during and not after. I'm not a religious person, but I never prayed so hard for anything as I did that night. \n\nBy the time I was able to drift off the sleep, Daniel was slumbering peacefully behind me, nestled into my hair and squeezing me almost uncomfortably close. \n\nMemorize it.\n\n\"I will find a way to see you. When we get home.\"\n\nTomorrow I started rebuilding myself. And I would start with that single piece of information as my new foundation."
    ],
    "authorname": "DAMackey",
    "tags": [
        "jock",
        "nerd",
        "bottom",
        "rimming",
        "top",
        "gay sex",
        "bathroom sex",
        "emotional",
        "virginity"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/speech-and-debate-pt-04"
}