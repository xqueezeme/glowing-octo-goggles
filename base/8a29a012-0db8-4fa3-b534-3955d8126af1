{
    "title": "Faith, Hope and Love",
    "pages": [
        "\"Okay, that's the third time I caught you looking across the bar at that girl. What's going on?\"\n\n\"Seriously?\" I glanced at Eli after I swallowed a mouth full of beer. \"Since when is it weird for us to check out girls while we're here? Hell, I thought that was the main reason why we came in the first place.\" \n\n\"It is, but her?\" he all but snorted. \"You can't be serious.\"\n\n\"What's wrong with her?\" I took another look. I admit the girl wasn't beautiful in the classic sense, but she was attractive enough. \n\n\"She's chubby,\" Eli critiqued. \"And on the plain side.\" \n\n\"She's not chubby, dumbass!\" I snapped, half annoyed and half laughing. I knew he was being a jerk just to bother me, but that it didn't stop me from reacting. \"She's also not built like the little boys you like to date.\" Eli liked his women on the slim side. He grinned at my dig, which was so Eli. We'd been friends too long for name calling to matter. \"And have you looked at those eyes? There's nothing plain about them.\" \n\n\"Her eyes?\" He asked, rolling his own. \"I'm pretty sure that not a part of the woman we typically come to bars to check out.\"\n\n\"Not usually,\" I mused. \"But there's something about hers that...\" \n\n\"Fine, she's God's gift to men everywhere,\" Eli interjected sarcastically, cutting me off. \"But that still doesn't explain your interest because we both know she's not your type. You're usually into 'the girl next store' and this one certainly isn't that.\" He paused long enough to take a pull from his beer and notice me looking at her yet again when he was done. Eli shook his head in disbelief. \"For Christ's sake! She's wearing a nose ring and her hair's purple! Are you trying to tell me you're suddenly into that?\" \n\nThe girl wasn't wearing a nose ring. It was a small stud and her hair was long and brunette, not purple. Okay, so there was a streak of color coming out from underneath on one side, but it wasn't blaring or obnoxious. It actually looked good. Of course, that didn't make Eli's point any less true. \n\n\"No, she's not,\" I admitted. \"But there's something about her.\"\n\n\"You're not going to mention her eyes again, are you?\" I knew he meant it as a dig, but I didn't let him distract me.\n\n\"They're gorgeous.\" I insisted before frowning and adding, \"But also sort of sad.\" She was sitting at the bar by herself nursing her drink. The place was filled with holiday spirit this close to Christmas, but she seemed immune. \n\n\"They're brown,\" Eli stated with a shake of his head as he looked at her once more. \n\nWe remained silent a few moments, each watching the brunette thinking our own thoughts. A guy walked up to her and started talking. It was pretty clear that he was hitting on her. It was equally obvious based on her expression that he was going to crash and burn. I couldn't hear what she was saying, but it must have been rough because the guy left only moments after he arrived. \n\nEli shook his head and added, \"Although, the girl definitely has a style all her own.\" \n\n\"I like it.\" I hadn't missed his sarcasm. I simply chose to ignore it. Eli shrugged and moved on to checking out some of the other women sitting nearby. My eyes remained on the brunette. She was probably a couple years younger than me. Maybe twenty-four or twenty-five. \n\nMost of the women in the bar had either come straight from an office job or had taken the time to stop home and dress to impress. The girl was different there as well. She was wearing an old, black long sleeve concert tee-shirt for some Christian band and comfortable jeans. It should have made her seem out of place, but it didn't. Not to me anyway. \n\nEli and I spent the next ten minutes catching up since we hadn't seen each other in a few weeks, but every time there was a lull in the conversation my eyes wandered back to the brunette. Honestly, I occasionally stole a glance in her direction even when we were talking.\n\nMy best friend wasn't blind to my antics, but instead of commenting again, he'd just roll his eyes when he caught me. I was only half paying attention to what he was saying when Eli suddenly finished his beer and stood. For a moment, I thought he was going to insist we go over and introduce ourselves, but instead he said, \"Well, it's getting late and I've got to go.\" \n\n\"Already?\" I was disappointed. Eli had only agreed to meet up for a couple of drinks, but I had hoped to convince him to hang out longer. I took one look at his expression and knew it wasn't going to happen. That typically meant only one thing. \"Hot date?\"\n\n\"Smoking!\" he laughed, but it was short lived. He grimaced as the music started again. \"Besides, I've had as much as I can stand of Christmas Carols.\"\n\nI didn't blame him. Tomorrow was the Eve and I was looking forward to when the holiday was over. Don't get me wrong. I love the whole Christmas spirit thing and all, but sometimes it got old.\n\n\"I hear you.\" The bar was popular in town for a couple of reasons. First, it had cheap drinks during happy hour. And second, they had something going on most nights for entertainment. I liked when they had a live band. I could deal with the trivia contests. Unfortunately, tonight was karaoke night.\n\nWorse, some genius decided that there should be a holiday theme since this was Christmas week. I know that might not sound bad, but you could only suffer so many badly sung renditions of the Christmas Song before snapping. Still, the night was young and I wasn't ready to go home yet.\n\n\"I'm going to hang out a bit longer,\" I said, holding out my hand and adding with a slow grin, \"Happy Festivus.\" It was an old joke between us. Eli didn't celebrate Christmas. He didn't really celebrate Hanukkah either despite his upbringing. He wasn't the most religious guy in the world so Seinfeld's Festivus holiday was perfect for him. \n\n\"Happy Festivus for the rest of us!\" He laughed as he shook my hand and pulled me into a brief hug that was more of a chest bump. \"And you have a Merry Christmas.\"\n\n\"Thanks, but it doesn't look hopeful. I love my extended family, but I'm not sure why we still get together every year. Some of my cousins are way out there. In fact...\"\n\n\"Just be sure to say hello to Jean for me,\" Eli interjected with a grin as he stepped back, obviously not interested in listening to my holiday woes yet again. \"And wish your parents a Merry Christmas for me.\" His bringing up my cousin reminded me that I forgot to tell him the news. This was going to be good.\n\nEli had a crush on Jean for years, ever since her parents went away on a romantic getaway for one of their anniversaries and left her with us for a week. We were around fourteen or fifteen at the time. Back then Jean lived about two hours away so nothing ever came of it, but the sparks were obvious between the two whenever her family visited. \n\nI would have tried to set them up when she graduated college and moved closer for a job, but Jean brought a live-in boyfriend with her. I'd met him a couple of times. She seemed to really care for the guy at first, but he wasn't my favorite person in the world and it had nothing to do with Eli. I didn't like the way he treated my cousin. She deserved better.\n\n\"Speaking of Jean,\" I said nonchalantly before he disappeared. I also pulled out my phone and started typing. \"I heard she finally dumped the loser. He moved out last week.\" \n\nI watched for Eli's reaction and wasn't disappointed. His expression was almost comical. That's when I hit send on my phone, texting him Jean's number. \"You should give her a call soon. A girl like her won't stay on the market long.\" Eli pulled out his phone when it beeped and grinned when he saw what I sent him. \n\n\"You know, I might just do that.\" I knew that there was no 'might' about it. I was betting my cousin would get a call shortly, maybe even before Eli reached his car. I laughed to myself as I watched him go.\n\nI figured my best friend had a pretty good chance with my cousin. I'd had them both over my place around Thanksgiving and even though she was still dating the loser at the time you couldn't miss how much they were drawn to each other. Besides, Jean had okayed me giving Eli her number. Hell, she'd all but suggested it. I was pretty sure they would be dating before the new year.\n\n~~Grandma got run over by a reindeer~~\n\nI didn't quite groan as two drunk guys began singing. One of them was terrible, but the other carried him enough not to make it completely painful. On the other hand, two drunks singing was rough enough even without their choice in song. \n\nI finished my beer somewhere in the middle of their rendition and decided two things. The first was that I wanted another. The second was that I needed something to distract me from the terrible karaoke. So of course, I glanced at the brunette across the bar once more. \n\nI hadn't been completely honest with Eli earlier. Everything I said was true, but what I didn't include was the fact that she looked familiar to me. Mostly because I didn't need the abuse. Plus, I really had no idea where I knew her from and if I told Eli that he'd have dragged me over to her and embarrassed me. Of course, I was going to do that all by myself now anyway. \n\nI stood, left a tip and made my way to the other side of the bar. I wasn't sure what I was going to say, but I hoped I'd do better than the last guy. I thought that I'd figure out an approach along the way, but I was distracted when I saw a worn guitar case next to her leaning against an old beat up duffle bag. They were both against the bar and had seen some serious use.\n\n\"Just passing through?\" I couldn't stop myself. It was the first thing that popped into my head when I saw her stuff and it slipped out.\n\n\"Seriously?\" She didn't look amused. Great.\n\n\"Well, it was either that or 'haven't we met somewhere before?'\" She didn't even crack a smile. I had the distinct impression that I had a better than average chance of crashing and burning even worse than the last guy. Thank God I waited until Eli left. He would have enjoyed this far too much. \"Sorry about that.\"\n\n\"Look, even if you had a good line, it would have been wasted on me. I'm not really in the mood for company.\" She turned back to her drink and took a sip, dismissing me from her thoughts. The only problem was that I wasn't quite ready to be dismissed yet.\n\n\"I get it. It's just that I really do think we may know each other.\" She turned back and looked at me in a way that let me know that despite her mood she was taking me seriously. Not that it was helping based on her expression. It was pretty obvious that the young woman didn't recognize me. The fact that she continued to stare made me wonder what she was thinking. I hoped she liked what she was seeing half as much as I did.\n\nEli was crazy if he really thought she was plain. I mean, sure she wasn't a drop dead gorgeous beauty, but there was something about her that drew you in. First of all, her eyes were even more incredible up close than I originally thought from afar. They were deep brown and expressive. Looking into them made me feel like I had a window into her innermost thoughts and feelings. Oddly, the sadness I saw there intrigued me more than anything else.\n\nMy eyes drifted lower and I noticed that although her lips were slightly chapped, they were also very appealing, being neither too thin nor too thick and shaped enticingly. They fit her mouth perfectly and I caught myself wondering what it would feel like to kiss them. \n\nI definitely had it bad for this girl. Everything about her got to me. I mean, when you catch yourself following a girl's jaw line with interest that's definitely a sign. I will admit to being momentarily thrown when I noticed the purple under layer again. I hadn't realized that there was some pink in it. Of course, that only lasted until I noticed her neck.\n\nCan a neck be sexy? Well, hers was. \n\nShe was tan the way light skinned girls get tan when they've been in the sun a long time and were passed the whole burning thing. That was odd for this time of the year, especially considering she didn't have the look of someone recently returned from vacation. I'm sure there was a story there. The question was would I be able to get her to share it.\n\nI sincerely hoped so and I wasn't even sure why. I mean, sure I was attracted to her, but it was more than just physical which was weird considering how different we were. Not that the physical attraction wasn't enjoyable in and of itself. \n\n\"I don't know you.\" Her words brought me back from wherever my mind had gone. She sounded confident which was okay because the more I looked at her the more certain I was that I didn't know her either. There's no way I would have forgotten this girl.\n\n\"I don't think we've ever met before, but I've seen those eyes before.\" Another possibility came to mind. \"Do you have a sister?\"\n\n\"Only child.\" She turned back to her drink, ready to dismiss me once more. I wracked my brain in frustration. \n\n\"I'm certain I've seen you before,\" I insisted. \"Only, you looked different back then.\" That made her frown.\n\n\"How so?\" \n\n\"Well, happier for one thing.\" I didn't quite groan at my choice in words, but it was a close thing. I'd let my frustration get to me and I answered without thinking. Thankfully, she didn't sound particularly offended. \n\n\"Then it must have been a long time ago.\" Her expression grew closed. It was clear that this girl wasn't in a good place. It was equally obvious that she wasn't the type to share her woes with a stranger so I let the subject drop. \n\nIt was tougher to do than you'd think because despite her lack of expression, the emotions behind her statement were plain to see. It was all in her eyes. There was some sort of sorrow buried deep that was weighing her down tonight and I couldn't help wonder what it was.\n\n\"Not giving up yet?\" she sighed. I guess I'd been staring at her in silence a little too long. The stool next to her opened up right at that moment. I sat in it almost without thought.\n\n\"Apparently not.\" She didn't seem amused.\n\n\"Look, if I'm really bothering you, say the word and I'll leave.\" I waited but she didn't say anything. I could tell she was tempted, but instead she went back to her drink. There wasn't much left so I took that as a sign. \"Can I buy you another?\"\n\n\"Why not?\" she asked, still not smiling. \"This place in expensive.\"\n\n\"You think this is expensive?\" It took me a moment to get the bartender's attention. \"Wait until happy hour ends.\"\n\n\"I won't be here that long.\" I guess I needed to work fast. It sounded like she was planning on bailing soon. \n\n\"You're not from around here, are you?\" Wow, was I going to use all the bad pickup lines on her tonight or what?\n\n\"How could you tell?\" Her question was sarcastic as she glanced at her duffle meaningfully, but I didn't mind. After all, she was letting me buy her a drink which was a good sign as far as I was concerned. She ordered a beer and I followed suit. They were quickly delivered and I paid.\n\n\"I'm Colin, by the way.\" I thought she was going to refuse to tell me her name when she brought her glass to her lips instead of replying, but after she took a sip she turned and faced me. \n\n\"Faith.\" I was a little taken back when she held out her hand, but that didn't stop me from taking it in mine and shaking it briefly. I felt an almost electric connection between us as soon as we touched. I guess I should have been surprised, but by this point I was sort of expecting it. It was all I could do to contain my attraction to her. \n\nOn the other hand, I was pretty sure Faith was a bit blindsided. She tried to hide her reaction, but her expressive eyes gave her away. I smiled slowly. For the first time since I came over to this side of the bar I felt myself relaxing. \n\n\"I've always liked that name.\" It was the truth too.\n\n\"Not me,\" she replied. \"I hated it when I was a kid. In fact, I used my middle name instead until recently.\"\n\n\"What changed?\" I was watching her carefully. She paused before answering. \n\n\"Me.\" There was that deep sadness again hidden behind a shell of cold reserve. I hoped she'd say more, but Faith fell silent and went back to sipping her beer. I took a pull from mine as well.\n\n\"You're not going to make this easy, are you?\" She gave me yet another look, but this one wasn't quite so cold.\n\n\"I told you I wasn't in the mood.\"\n\n\"Yes, you did,\" I said agreeably. \"But you didn't ask me to leave when I gave you the chance so I figure there's hope.\"\n\n\"Maybe I just wanted a free beer.\" She was holding up her glass to make her point. \n\n\"Not just.\" One look at her eyes and I knew I was right. \"By the way, what name did you used to go by? Maybe that will jog my memory.\"\n\n\"You're definitely being tenacious with this whole 'We've met before' thing.\" She didn't really seem bothered by it though. In fact, I think she sort of enjoyed it, like we were playing some sort of game. \"My friends used to call me Carrie.\" She raised eyebrow as if daring me to tell her how I knew her. I thought hard, but the name meant nothing to me. Two or three Carries came to mind, but none of them were her. \n\n\"I got nothing,\" I finally admitted. \"How about telling me your last name?\"\n\n\"Not going to happen. I don't know you well enough for that.\" She almost smiled. Almost. I was getting to her. \n\n\"So, what brings you to town?\" I asked, trying to keep the conversation going.\n\n\"You were right. I'm just passing through.\"\n\n\"Going home for the holidays?\" I thought it was a good guess and she even nodded in agreement, but the humor that started to form fled from her eyes and she finished half her beer in two swallows. I clearly wasn't the only one not looking forward to Christmas, but I had a feeling she had a much better reason. Whatever it was, she didn't want to talk about it. At least not yet.\n\n~~You can say there's no such thing as Santa, but as for me and Grandpa we believe~~\n\nThe crowd applauded the two drunks as they finished their song. There was also a comment or two thrown back and forth between them and a few other guys at one of the tables that I was betting were their friends. If not, a fight would have broken out. Only true friends can insult each other like that without repercussions. \n\n\"Thank God that's over.\" I deciding a change in subject was needed once again. \n\n\"It was pretty bad,\" she agreed and relaxed slightly.\n\n\"But not the worst of the night by far,\" I sighed, remembering some of the earlier singers. \"Be thankful you weren't here when someone decided to sing the Alvin and the Chipmunks' Christmas Song.\"\n\n\"You're not serious.\" The look she gave me made me grin.\n\n\"Sadly, I am, but don't worry. It was so bad that the guy running the Karaoke promised not to let anyone else pick that song again tonight.\"\n\n\"Amen.\" Faith took another, smaller sip from her beer. She looked better. I guess changing the subject worked. Well, either that or the beer was doing its job. It was time to lighten the mood.\n\n\"So, are you planning on singing tonight?\" She looked at me with a raised eyebrow, but I wasn't put off. \"Come on, it's not that farfetched. You're sitting in a karaoke bar with a guitar case.\" \n\n\"These people wouldn't be interested in the kind of Christmas Carol I'd sing.\" \n\nI wasn't quite ready to give up on trying to convince her to take the stage, but quickly became distracted when another song began. The girl singing it wasn't nearly as drunk as the two guys before her. That was too bad. I think she would have done better if she had been.\n\n~~Santa Baby, just slip a sable under the tree, for me~~\n\n\"Ugh, this one is going to be painful.\"\n\n\"Eartha Kitt she's not,\" Faith agreed. We listened in silence for a few moments. The singer was trying to sound sexy, but failing miserably. I literally cringed at one point and I'm certain I wasn't the only one, but the girl seemed oblivious. Maybe she was as drunker than I originally thought. God, I hoped so, for her sake.",
        "\"I don't understand how she can be so bad!\" I groaned in frustration when I couldn't take it any longer. \"It's not a hard song to sing. I'm pretty sure that even I could do better.\"\n\n\"Now that I'd like to see.\" Still no smile, although Faith was getting closer. I'd decided to make it my mission tonight to make this girl smile. If I was really lucky, maybe even laugh. I had a feeling it wasn't going to be easy, but I could be stubborn when I wanted. \n\n\"You first.\" I glanced her way to see how she was taking my teasing. She seemed unfazed, but honestly, I lost my train of my thoughts when I saw that she was using an index finger to wipe some beer from the corner of her mouth and lips. I couldn't stop myself from staring as I followed the movement carefully. It was now officially a tossup on which feature interested me more, her eyes or her mouth.\n\n\"You couldn't handle it.\" She said it in such a matter of fact tone as her hand dropped back into her lap. That broke me from my trancelike state, but it still took me a couple of seconds to remember what we were talking about.\n\n\"You know, you might be right,\" I admitted with a self-depreciating snort. \"I have a feeling you could not only sing it better, but also make it a hell of a lot sexier.\" She didn't bother disagreeing. In fact, something in her expression made me think she was momentarily tempted to show me, but it passed quickly which was too bad, really. \n\nWe fell silent as we watched the spectacle the singer was making with her Karaoke choice. Okay, Faith watched the girl. I mostly watched Faith. I couldn't help myself. She noticed, but didn't say anything.\n\n\"What are you thinking?\" I found myself asking.\n\n\"I was wondering if you were finally ready to admit that the whole 'haven't we met before' thing was just a sad attempt at a very old line.\" Okay, this time I saw the smile. It was slight and didn't quite make it to her eyes, but it was there.\n\n\"Absolutely not.\"\n\n\"Am I supposed to believe you didn't come over here to hit on me?\" Her disbelief was obvious.\n\n\"No, I definitely came over here to flirt with you.\" I waved the bartender over and ordered us another two beers. \"But I have also seen you someplace before. Those eyes stay with a guy.\" \n\n\"Again, with the eyes?\" she frowned. \"I don't get it. Mine are nothing special. They're dull brown.\"\n\n\"Dull? No way! There's nothing dull about them or you.\" The look she gave me made it clear she wasn't buying what I was saying. I couldn't have that so I reached out and laid my hand on top of hers. That caught her off guard. Her eyes met mine. \"They're soulful, at least that's what I'd call them.\" I paused and looked deeply into them for a few seconds. I was surprised that she let me. \"Yep, definitely soulful.\" \n\nShe didn't look away immediately and I certainly had no intension of breaking eye contact. In fact, if it were up to me I could have spent the rest of the night sitting there like that, but the bartender placed our drinks in front of us interrupting the almost spell-like quality of the moment.\n\nFaith immediately moved her hand out from under mine and looked away. For the first time, she actually seemed a little uncomfortable, embarrassed even. I wasn't excepting that. She didn't seem the type. \n\n\"You're a lot smoother than I originally thought.\" That made me laugh which seemed to annoy her. \"You are.\"\n\n\"No one has ever called me that before,\" I said between laughs. \"Don't get me wrong. I'm not bad with women, but smooth? I don't think so. In fact, if my friend Eli hadn't left before I came over he would have enjoyed sharing stories of just how not smooth I can be.\"\n\n~~Hurry down the chimney tonight, Hurry tonight~~\n\nThe applause for the poor girl singing as she finished the song was sporadic at best. She was lucky people were in the holiday mood or she probably would have been booed off the stage.\n\n\"Alright, who's next?\" The guy MCing the Karaoke machine looked a little desperate to move on. I looked at Faith when no one immediately answered. I figured I'd take another shot at getting her to sing. I had the feeling she'd be good. I was also pretty sure she'd enjoy herself.\n\n\"One more song like that and the place will start to empty out. How about you go up there and save the poor guy's job?\" \n\n\"I'm not really in the holiday spirit.\" She took a sip from her new beer, but it looked like she was planning on taking her time with this one.\n\n\"I'm working on it.\" My comment seemed to amuse her. I saw her smile her first real smile of the night, but it was fleeting. Still, after staring into each other's eyes even she had to admit there was some sort of connection between us.\n\n\"I noticed.\" \n\nI ignored everyone else and focused on her. \"Are you really only passing through?\" I was curious about Faith. I wanted to know what put her into a bad mood and see if I could help her get past it. I was also hoping she be around for at least a little while.\n\n\"Yes and no,\" she began slowly, offering me more than I expected. \"I've been away for a long time and it's time to go home, only there's no longer anyone to go home to.\" I can't say I was surprised by her words. It explained the sadness.\n\n\"Your parents are gone?\"\n\n\"My mother a long time ago. My father just before I left home.\" \n\n\"That must have been rough,\" I offered, letting her see I meant it. She looked at me and frowned briefly before shaking her head.\n\n\"You know, I haven't talked about dad's passing to anyone, but for some reason I'm almost tempted to with you,\" she said, sounding surprised. \"I can't even blame the alcohol. I'm nowhere near drunk.\" She paused and shook her head. \"It must be the whole coming home thing. Or maybe it's the holiday. Daddy always loved Christmas.\"\n\n\"Or maybe it's time,\" I said gently. \"Maybe you've mourned long enough and it's time to share your pain so that you can let it go. The worst of it anyway.\" I think my words surprised me even more than they did her, but I meant them. \n\n\"And I'm supposed to do that with some random guy I met at a bar?\" Faith asked in disbelief. I wasn't sure if it was a rhetorical question or not.\n\n\"Weird, right?\" I laughed gently. \"But you obviously need to talk to someone and I promise you, I'm a good listener.\" She gave me another odd look.\n\n\"And I'm supposed to trust you because?\" \n\nThis time I was pretty sure her question wasn't rhetorical, but instead of answering I sat silently waiting, meeting her gaze and letting her see the truth in my eyes. She shook her head after a short while and looked away, but I knew I'd gotten through to her. I was proven right a moment later when she started talking.\n\n\"I drove my poor father crazy with my antics growing up,\" she began slowly. \"I was motherless and pissed off about it. I had some good friends that tried to help me stay on the straight and narrow, but I also hung out with a wild crowd at times. They were the only ones who seemed to understand my anger.\" She paused, lost in thought. My own thoughts wandered a bit as well.\n\nThe first time I met Eli it was in eighth grade about a month after I moved into town. We ended up getting in a fight. I can't even remember what it was about, but he had a reputation as a trouble maker at the time so the trip to the office started out worse for him. It was obvious that the principal had it out for Eli. I wasn't completely blameless and refused to let him take the full brunt of the guy's anger. I'm not even sure why. It just felt wrong.\n\nEli seemed surprised when I stepped forward and took my part of the blame. We got to talking two days later while sharing our in-school suspension. I'm not sure how it happened, but we became fast friends that day despite our differences. \n\nA lot of my other friends at the time didn't understand why I started hanging out with him. I mean, despite the fight, I was a good student and not generally a troublemaker so my connection with Eli didn't really make sense to them. I couldn't explain it at the time, but I think what it came down to was the same thing Faith had said about hanging out with the 'wild crowd'. Eli got my anger, and being forced to move away from my home and friends meant I had plenty of that. \n\nOf course, as the years went by our friendship grew for a lot more reasons than that, but it was my anger and his ability to accept and understand it that started it all. Maybe it wasn't the same thing as what Faith faced, but it was similar enough to help me understand what she was trying to say. \n\n\"I get that.\" Faith looked at me and saw that I really meant it. I think that gave her the resolve to continue.\n\n\"You have to understand. My wild streak was very difficult for my father. You see, dad was a minister.\" She smiled at my reaction. I couldn't hide my shock. I mean, come on! A nose ring and purple hair doesn't typically bring to mind a minister's daughter. On the other hand, the Christian band tee-shirt was a bit of a clue. \n\n\"Yes, that's right. I'm a minister's daughter.\" For once, I was smart enough to keep my mouth shut. \n\n\"Needless to say, my little pranks growing up that typically ended up with me in trouble didn't go over well with dad or our community for that matter. It's all funny now, but back then, not so much.\"\n\n\"I can imagine.\" \n\nI waited for her to continue, but she sat staring off into space for a while. There was no doubt she had more to say, but my interrupting her thoughts right now wouldn't help. Faith had already shown that she wasn't the type to share what was going on in her head haphazardly. I guess I was hoping the connection we felt for each other might help her continue to open up to me. \n\nShe brought her glass to her lips again, but I'm not sure she actually drank anything this time. I think she was using the motion as a distraction while she decided how much she wanted to share with me. I didn't quite hold my breath. Faith gave me a long look before coming to a decision. She focused on her glass as she began to speak again. \n\n\"Dad and I fought all the time up until the end of my junior year of high school.\" She paused again, but this time I had the feeling that it wasn't because she wasn't sure she wanted to continue. I thought it was more of her trying to work up the courage to say something that was clearly difficult for her. I was proven right a moment later. \n\n\"That's when his cancer was discovered and I suddenly realized he wouldn't be around forever.\" Faith fell silent and I reached out, squeezing her hand once more without thought. \"I'd been pushing away the only parent I had left and if I wasn't careful he'd be gone before I got a chance to know him any better than I knew my mother.\" She was briefly lost in thought again. I understood. \n\n\"Things changed after that,\" she eventually continued. \"We became closer and used to spend a lot of time together, talking and really getting to know each other. I even stopped hanging out with the wrong crowd.\" She snorted and then added more to herself, \"To be honest, I pretty much stopped hanging out with everyone.\"\n\n\"You focused on taking care of him.\" \n\n\"He was my father,\" she shrugged as if that explained it. It did too, but it's not every teenager who would have been able to do what Faith had. \"The sad part was that he never got truly better. He went into remission once, but before his body fully recovered the cancer came back.\"\n\n\"He was sick for a long time and it still amazes me when I think about how long he fought. I'm pretty sure he did it because he didn't want me to be alone.\" Talking about her father was obviously very hard for her. I couldn't stay quiet as the silence lingered. It was too painful. \n\n\"I'm sorry you went through that.\" It was the best I could offer. Faith nodded, but didn't say anything. \"So, where have you been since he passed?\" The question wasn't so much of a change of subject as it was a way of giving her an out if she wanted. \n\n\"Dad always wanted me to go overseas and volunteer in one of the third world countries for a couple of years like mom and him did when they were my age so when he was gone that's what I did.\"\n\n\"He believed in giving back and always swore that spending two years in Africa was one of the best things he'd ever done. Some of it might have had to do with the fact that that's where he and mom met. They were both volunteers and I think he hoped I'd find someone special the same way, but there was more to it than that.\" This time the drink she took was real, but it was only a single swallow. \"Dad was a man of strong faith. He never lost it. Not when mom died and not even when his cancer was at its worst. I think he hoped that going overseas would help me with mine. He worried about me.\"\n\n\"He was your father.\" \n\nShe nodded sadly in agreement. I waited, but this time it looked like she wasn't going to continue without some additional prompting. \"Was he correct? Did volunteering help?\" She actually smiled, although somewhat ironically before answering. \n\n\"I still have my moments and I don't follow Him in a way that my father's old congregation would understand, but in the end, I like to think that God and I came to an understanding.\" Her smile faded as she added, \"It's not like I really had a choice. The way my father faced death showed me the way and that lesson was driven home when I went overseas saw what people in the third world had to deal with on a daily basis.\"\n\n\"I guess that means that your dad did get what he wanted for you in the end.\" Faith smiled as I think she realized that I was right. Her eyes brimming with tears briefly, but they didn't fall. Instead, she blinked once or twice and pulled her hand out from under mine again.\n\n\"Well, I never did meet the guy of my dreams.\" She was joking, trying to lighten the mood which was more than understandable considering we were sitting in a bar and crying probably wouldn't have gone over well. \n\n\"Don't worry about that,\" I said with a grin, trying to help to her regain control. \"The night's still young and I'll grow on you.\" It was a little over the top, but I thought it would amuse her. The weird part was that I was only half kidding. \n\nFaith didn't bother replying, but she did shake her head at my obvious flirting. I also noticed that she was smiling again with more than a little satisfaction. Talking about her dad had helped like I hoped. Faith seemed to be in a much better place now. I wanted to keep her there so I figured it was time to change the subject. \n\n\"You never did tell me why you were here?\" \n\nShe gave me an odd smile at first, which confused me until she explained. \"In other words, what's a girl like me doing in a place like this?\" \n\n\"Oh no!\" I laughed. \"No putting words into my mouth. I've thrown out enough bad pickup lines tonight myself without you adding to them.\"\n\n\"Fair point,\" she replied, her smile growing a little wider before she answered my question. \"I have some friends in the area I'm going to visit tomorrow. I didn't want to be alone for the holidays.\"\n\n\"I can understand that.\" Listening to her was making me appreciate my family more, warts and all. Sure, some of them were way out there, but I knew they'd be there for me if I needed them. \"Okay, so now I know why you're in the area, but what made you pick this bar?\" \n\n\"Dumb luck. My friends are out of town until tomorrow and there's a cheap hotel down the block. The bus from the airport dropped me off on the corner. I saw this place and decided I could use a drink after being on three different planes for more hours than I care to remember.\"\n\n\"I guess that makes me lucky too.\" \n\n\"Not that lucky.\" She was giving me a playful look I couldn't resist. \n\n\"A guy can dream, can't he?\" I joked back, and then it happened. She actually laughed. I don't know if it lit up the room, but it certainly did things to me. \"Wow, it was so worth the wait.\" \n\n\"What?\" Her confusion was obvious.\n\n\"Your laugh,\" I answered honestly. \"I'm going to remember this moment for a long time.\" She blushed and looked away, toward the karaoke stage once more. I followed her eyes and saw a girl finishing up her attempt at 'Rockin Around the Christmas Tree'.\n\n~~Everyone was dancing merrily, in the new old fashioned way!~~\n\n\"She's not bad,\" I offered. The singer's voice broke on the last note. \"Of course, she's not particularly good either.\"\n\n\"You're a tough crowd.\" I noticed that despite her words she didn't disagree.\n\n\"Is that why you don't want to go up and sing? Afraid I won't be impressed?\" I left the challenge out there. Faith looked at me and shook her head, but she also took one last swallow from her beer before standing and making her way to the stage.\n\nI enjoyed watching her move. Eli was crazy to call her chubby earlier. Frankly, if anything, she was on the thin side despite her curves. Faith's jeans fit nicely on her butt and hips, but were loose around the waist. She was definitely not shaped like a little boy and watching her move got to me.\n\nFaith spoke with the MC. She clearly wanted to sing a particular song, but it was also obvious that he didn't have it. It looked like the guy was trying to convince her to sing something else, but she wasn't having it. I felt bad for the guy. Faith didn't seem the type to take no for an answer. They argued for a few moments before she turned and came back toward me.\n\n\"Chicken out?\" I teased.\n\n\"Not hardly,\" she retorted as she stopped and grabbed her guitar out of its case. \"But they don't have the song I want and it took a bit to convince him to let me play it instead.\" There was something in her tone that let me know the song was important to her.\n\n\"It must be special.\" She smiled sadly at me comment. \n\n\"It was my father's favorite. I'm not sure how this crowd will deal with it because it's religious, but it's what I feel like singing.\" I reached out and squeezed her hand in understanding. She looked at me and suddenly her eyes grew a little glassy with unshed tears. I thought she was going to lose it, but instead she shook her head once to get control of her emotions before stepping away. \n\nThe bar was packed and although some people took notice of her as she settled onto a stool, most were so busy in their own conversations that they didn't pay much attention until she started playing. I have to admit, I was surprised and impressed when her fingers flew across the guitar strings almost effortlessly. Faith was a very talented musician, but that was quickly overshadowed when she started singing. \n\n~~Mary, did you know? That your baby boy would one day walk on water~~\n\nI never heard the song before, but the moment Faith started singing it drew me in. She was right. It wasn't really the right type of song for this place, but that didn't matter. Her voice was amazing. It was full bodied, just like the rest of her. It was also a little raspy, but I think that might have been caused by the obvious emotions she felt while she sang it. The rest of the place disappeared into the background as I listened. \n\nI don't view myself as overtly religious, but my parents did their best when I was a kid to make sure I knew the importance of Christmas. It wasn't only about the Holiday season for my family. Sure, there was Santa and presents, but the main focus was on the story of Jesus's birth and what that meant for the world. The words of this song reminded me of that, hitting me in a completely unexpected way. \n\nFaith's emotional delivery only made my reaction more powerful. The connection I'd felt almost from the first moment I laid eyes on her morphed into something far stronger than I was prepared for. I was stunned when I realized that a tear was actually falling down my cheek. I wiped it in embarrassment, but continued to listen in unabashed admiration of the song and the young woman singing it.\n\n~~Did you know that your baby boy is Heaven's perfect lamb? This sleeping child you're holding is the great I AM...~~ ",
        "The song ended and I was startled by the applause that burst from the crowd. I hadn't realized that I wasn't the only one pulled in by Faith's voice and the song she chose to sing, but based on the reaction of the crowd it was obviously true. I mean, not everyone had mist filled eyes like me, but then again, I wasn't the only one.\n\n\"Wow!\" the MC said, shaking his head before covering the mike and saying something to Faith. It looked like he was trying to convince Faith to sing another song, but she refused. \"And with that, we're going to take a ten-minute break.\" He was a smart man. Who the hell would want to follow Faith on stage?\n\n\"So, were you impressed?\" Faith's flippant tone as she rejoined me made me smile despite what I was feeling. I was too stunned by the emotions her song brought out to reply in kind.\n\n\"You have no idea.\" I think my raw reaction both pleased and embarrassed her.\n\n\"It is an amazing song.\" She put the guitar in its case and leaned it back against the bar before sitting and reaching for her beer. \n\n\"Yes, it is, but so is the singer. Thank you for reminding me of what Christmas is really about.\" Her eyes focused on mine and I let her see how much her song meant to me. Faith put down her beer and surprised me yet again by leaning toward me. \n\nI might not view myself as smooth, but I wasn't stupid either. I knew what she offering me and there was nothing I wanted more. I leaned in and kissed Faith. It was amazing, chapped lips and all. The sad part was that it couldn't last. Faith pulled back far too quickly for my liking.\n\n\"It's your turn,\" she said, changing the subject. \"What do you plan on singing?\" I was disappointed, but part of me understood. Our emotions were running on overdrive and she didn't want to do anything she'd regret later. It made sense, but I didn't have to like it.\n\n\"Not going to happen. I don't sing. Ever.\" I guess my disappointment was obvious because she took my hand in hers and smiled tentatively. \n\n\"It's just Karaoke. How bad can you be?\" I realized between her actions and teasing that Faith was letting me know in her own way that she wasn't totally distancing herself from me. It helped. It helped a lot.\n\n\"I'm hungry. How about some food?\" My offer distracted her.\n\n\"I am in the mood for a good burger,\" she finally relented. \"I haven't had one of those in a long time.\"\n\n\"Then you're in the right place. The burgers here are great. Let's get a table.\" \n\nShe nodded in agreement and we stood, still holding hands. I grabbed her duffle with my free hand and she took her guitar case. It wasn't long before we were seated at a booth. Her things took up one side and we sat together on the other. \n\nI released her hand momentarily to situate the duffle and guitar, but when we sat together our hands fell together again like it was the most natural thing in the world. We looked at each other and I think we might have kissed again if the waiter didn't arrive. He offered us menus, but we declined and both ordered burgers and another beer.\n\n\"You have a beautiful voice,\" I said after he left the table. \"Is that what you plan on doing for a living now that you're back in the states?\"\n\n\"No. I enjoying singing, but my main love is teaching. The arts mostly, but at this point I could also teach English as a second language.\"\n\n\"No surprise there,\" I smiled, remembering where she spent the last couple of years. \"What language did you speak while you were away?\"\n\n\"Swahili.\" I could tell from her expression that she was remembering something that amused her. She saw my curiosity and shared her thoughts with me. \"I had three years of high school Spanish and another two at college, but I can barely remember some of the basic words. On the other hand, I can argue prices at the local fruit market in Swahili with the best of them.\" \n\n\"It must have been something.\" I liked to travel and see different places, but what Faith had done was so much more than that. She'd dedicated two years of her life to helping others. That said a lot about Faith, her values and how she was brought up.\n\n\"You have no idea.\" I could see the beginning of dozens of stories she could share in her soulful eyes, but instead she said, \"I'm tired of talking about me. Why don't you tell me something about yourself?\" \n\n\"Well, let's see. Most days I can barely handle English much less speak another language. I can't sing like an angel. Oh, and I haven't spent the last two years helping the underprivileged in a third world country.\" \n\n\"I'm not interested in what you can't or haven't done.\" Faith looked momentarily amused, but then her expression grew serious. \"I wasn't expecting this tonight.\" She held up our clasped hands for a moment to let me know she meant us. \"I'm not even sure what this is.\" She looked away briefly, deep in thought, but it wasn't long before she refocused her incredible eyes back on me. \n\n\"I mean, I get some of what I'm feeling. You're the first good looking guy I've met in a long time who seems interested in more than just getting laid.\" Her bluntness surprised me, but not in a bad way. Faith wasn't like the rest of the girls I'd dated and I found her direct honesty refreshing. \"More to the point, your willingness to listen and ability to make me smile were a kindness when I needed both desperately.\"\n\n\"I'm glad I could help.\" \n\n\"Me too,\" she half joked, squeezing my hand and smiling briefly as the waiter dropped off our beers. She waited for him to leave before continuing. \"And I guess that with all that, it's no surprise that I want you.\" My heart picked up its pace considerably. Faith was definitely different. \"But there's more to what I'm feeling than that and frankly, it has me confused considering how little I know you. That's why I want you to tell me more about yourself and your life.\" \n\nFaith was still staring into my eyes and hers told me that mixed in with her desire and confusion was something more. Maybe a couple of somethings more. There was a warmth there that promised things I'd only dreamed about if I was careful, and I had to be careful because I also saw fear there. The latter was understandable considering how quickly we were falling for each other.\n\nI couldn't figure out why I wasn't feeling a little scared myself, but I wasn't. Not sitting here next to Faith, staring into her eyes and holding her hand. I was too full of other emotions to let fear in. \n\nNow all I had to do was convince her to trust what we were both feeling. To trust that I wouldn't hurt her. No wonder she was desperate to know more about me. \"Okay, but I have the feeling that seeing my life through your eyes will make me seem selfish and not particularly adventurous.\"\n\n\"I doubt that.\" Her confidence in her statement made me nervous. I wasn't a bad guy and I'd done well for myself in the six years since I'd graduated college, but I could have done more and given back some. \n\n\"The most adventurous thing I've ever done in my life was take an eight-week geology trip out west during the summer of my sophomore year of college and Eli had to talk me into it. He's the geologist. The only reason why I went in the end was because I screwed up my first semester and needed to make up the credits.\"\n\n\"Eight weeks seeing the country? That sound interesting.\" I guess she wasn't going to let me off the hook. By the same token, it was gratifying to see that she wasn't put off by what I said about my reason for going.\n\n\"It was,\" I admitted. \"We saw some amazing things that I'll never forget.\"\n\n\"Like what?\" She sounded honestly curious. I paused for a couple seconds gathering my thoughts.\n\n\"Well, any one of a dozen things in Yellowstone Park. The Badlands and the Devil's Tower also come to mind.\" I took a pull from my beer as I warmed to the subject. \"Oh! And the Grand Tetons. We didn't actually go there, but I remember seeing the snow-covered mountains in the distance and being pretty damn amazed. It was the only time I've seen that in real life. Well, not including the local ski slopes, but that's not the same.\"\n\n\"What was your favorite part?\"\n\n\"That's easy,\" I said with a slow smile. \"The people. It was interesting as hell meeting people from different parts of the country.\" One memory came to mind and I laughed.\n\n\"What?\" There was no way she was faking the interest I saw in her deep brown eyes.\n\n\"You have to understand we were in the middle of nowhere most of the time,\" I began in explanation. \"We traveled in six vans with about thirty or forty others who were taking the same class. We slept in tents and bathing was infrequent.\"\n\n\"I was in a third world country for the last two years, remember? I get it, probably more than I'd like to admit.\"\n\n\"Yeah, right.\" I nodded before returning to my story. \"Well, we knew before we left that we weren't going to be able to shower every day, but I don't think even Eli expected that we'd have to use outhouses. Worse, when we arrived at one site we had to clean out the pit of the outhouse first. Eli drew the short straw.\"\n\n\"That must have been interesting.\" Her eyes sparkled in amusement. \n\n\"You have no idea,\" I laughed. \"Eli's one of those people who you have to judge by what they do, not what they say. He's always bitching and moaning, but ninety-nine times out of a hundred he does the right thing despite that.\"\n\n\"I'll remember that if I ever meet him.\"\n\n\"Oh, you will.\" My confident tone made her shake her head, but she didn't disagree. \"In either case, so there we were, me with my cell phone ready to take pictures and Eli tying a bandana around his nose and mouth as they tilted the outhouse over. One of the TA's handed him a shovel with a wide grin and Eli jumped in the pit. He was already bitching and moaning before he landed. It didn't help that half the camp was standing over him watching and laughing.\"\n\n\"Was it bad?\" Faith looked honestly curious. \n\n\"Not really. The place hadn't been used since the year before and the stuff in the pit was dry, but then again, shoveling shit is still shoveling shit no matter how you look at it.\"\n\n\"True,\" she laughed briefly. \"But what does this have to do with meeting new people?\"\n\n\"Well, I guess Eli's complaining was a little over the top because suddenly this guy name Brock, who had to be six four and easily weighed two hundred and twenty-five pounds, took pity on him. He grabbed a second shovel and jumped into the pit. He then proceeded to go at it like there was no tomorrow. Only, instead of complaining he actually started singing old television show themes.\"\n\n\"He didn't?\" Faith was clearly having problems believing my story. I didn't blame her.\n\n\"Apparently, Brock grew up on his grandparents' farm and his grandfather made him watch old television shows at night. You know, Gilligan's Island, F-Troop, Happy Days and Love Boat. Somewhere along the line Brock took to singing the themes to distract himself when he was stuck doing chores he hated.\"\n\n\"Like cleaning out an outhouse pit. That must have been a sight to see.\"\n\n\"Oh, it gets better,\" I laughed. \"Eli starts singing along with him and pretty soon their shoveling in unison. That's when everyone else starts joining in. You should have seen the look in the eyes of the guy who was running the class when he came to see what was going on.\" \n\n\"I can imagine.\" We shared a laugh before Faith asked her next question. \"Did you meet any locals while you were on this trip?\"\n\n\"Plenty, but some were far more interesting than others,\" I answered, remembering some of the more colorful ones. \"About half way through the trip Eli heard about a lake ten miles away from where we were camping. It was supposed to be beautiful and we were starting to get a little stir crazy so we decided to go on one of our off days.\"\n\n\"A few people were interested in joining us, but when the guy in charge refused to let us use a van for our little excursion and Eli insisted that we were going to hitchhike instead they pretty much disappeared, which was a good thing because you can't hitchhike with ten people.\"\n\n\"What happened?\" \n\n\"Well, we were lucky on the way there because a couple of friendly girls around our age picked us up. It struck me as odd as hell considering we were two strangers who looked worse for the wear, but they didn't seem worried.\"\n\n\"How friendly are we talking?\" Faith teased. \n\n\"Not as friendly as we hoped,\" I joked back. \"They were cute blonds, but they both had boyfriends they were meeting at the lake. We spent the time in the car with them swapping stories about the differences in where we were brought up. It was quite the eye opener, but not nearly as much as the trip home.\" \n\n\"Did you find a ride?\" \n\n\"Yes, from two guys in a pickup.\" I smiled once more at the memory. \"There were two big dogs in the back. There wasn't room inside the cab for both of us so I figured we'd get stuck with the dogs. Thankfully, one of the guys stopped us before we could jump in. Turns out the dogs weren't the friendly kind. He made us step back while he led both dogs into the cab of the truck.\"\n\n\"We climbed into the bed and settled in. The first thing we noticed were two rifles hanging in the rack along the back window on the inside. I guess they'd spent the day out hunting. It explained the dogs' not so friendly demeanor. It was a heck of an eye opened to Eli and me. I know that in some parts of the country hunting dogs and a gun rack aren't that big of a deal, but to us city boys it was a bit of a shock.\"\n\n\"I can imagine,\" Faith laughed. \n\n\"That wouldn't have been half bad if the two guys hadn't started passing a fifth of something back and forth over the dogs. Eli almost lost it as that point. He spent the rest of the trip in a non-stop rant that was pretty damn funny.\"\n\n\"What did you do?\" I shrugged at her question.\n\n\"Not much. We'd stayed at the lake longer than we should have and the road was pretty empty when we started making our way back to the campsite. I was tired from swimming all day so it was either accept these guys' hospitality or walk.\"\n\n\"We weren't really traveling that fast and there was nothing for miles around. Even if the pickup veered off the road it wasn't going to hit anything except maybe some brush. Besides, the passenger was doing the bulk of the drinking. I spent most of the trip nodded on and off, ignoring Eli and his ranting.\"\n\n\"And that's not an adventure?\" Faith was smiling and I took a moment to enjoy it. She really was beautiful in a way all her own. \n\n\"I meant a worthwhile one. I've got plenty of stupid ones.\" She rolled her eyes, but I was gratified to see that she looked amused. \n\nI continued to share stories about my life until our burgers arrived. We finally let go of each other's hands and fell silent for a few minutes while we ate. Despite saying she was hungry she only finished half her burger and a few fries before she pushed her plate back. \n\n\"You still haven't told me what you do for a living.\" Faith was sitting with her back to the side of booth so she could watch me. \n\n\"Oh, nothing special. It's a typical boring office job. Although, it can be interesting at times.\" \n\nI briefly described what I did between bites as I finished my burger, but then moved on to stories about my family and my plans for the future. Afterward, we nursed our beers and eventually ordered dessert. \n\nI was sharing more with Faith about my life and goals than I ever remember telling anyone else, including Eli and he was my best friend. I could tell she appreciated my openness because she took my hand in both of hers and rested them on her lap. She also started sharing more about herself.\n\n\"...and I'm pretty sure I have a job waiting for me back home at my old grammar school, but I'm not sure I want to take it. With dad gone I have no real reason to stay there.\" \n\n\"What about friends?\" \n\n\"I've been away for two years and even before then, I didn't stay close to many people after high school because I was busy taking care of dad and studying. Honestly, the few people I did keep in touch with moved away not long after graduating college.\"\n\n\"Are you here visiting one of them?\"\n\n\"No,\" she replied. \"I'm meeting up with a couple I made friends with while overseas. They worked with me and showed me the ropes. They finished their two years six months ago. We promised to get together once I was back in the states. I called them when I knew for sure I was coming home this week and they invited me over for the holiday.\"\n\n\"They sound like good friends,\" I offered.\n\n\"They are. In fact, they're already hinting that I should look for a job out here. They insist that there are plenty of schools in the area that could use a good teacher.\"\n\n\"There are, and I like the idea of you settling here.\" Faith looked at me and smiled warmly, lighting up places deep inside of me. \n\n\"Definitely smooth.\" I like the fact that she looked relaxed despite the teasing accusation. Hell, who was I kidding? I liked pretty much everything about Faith, even the stuff that made her different, or maybe especially that stuff.\n\n\"It's too bad you're going to have to get rid of the nose stud and dye your hair back to one color. I really like them.\" Eli wasn't wrong earlier when he said that Faith wasn't my type, but I guess types can change, especially when love was involved.\n\n'Love? Whoa boy! Slow down. Let's not get ahead of ourselves.' My thoughts were a jumble, but deep down I knew it was already too late. I was hooked on Faith. Just sitting next to her made me feel better.\n\n\"Why would I have to get rid of the stud and dye my hair?\" It took me a moment to refocus on the conversation.\n\n\"You really think you'll be able to find a job as a teacher with them?\" \n\n\"At the right school,\" she replied with a shrug. \"I may choose to get rid of them one day, but right now they're as much a part of me as my tattoos.\"\n\n\"Tattoos? As in plural?\" I guess I shouldn't have been surprised, but I was, again.\n\n\"I told you I was a wild child growing up.\" She smiled at my reaction, but then her expression turned a little melancholy as she let go on my hand. \"Although most of them I got later, after I calmed down.\"\n\n\"Any I can see?\" My curiosity was definitely getting the better of me.\n\n\"This one I got after dad died.\" She lifted her top enough for me to see her ribs on the left side. There was a saying with two small stylized crosses on either side. It said, 'Always on my mind, forever in my heart'. I don't know why, but I reached out and touched it. Faith didn't stop me, although I did see goosebumps form. \n\n\"It's beautiful,\" I said as I pulled my hand back and she dropped her top. She nodded, but still looked a little sad so I added, \"What about the others?\"\n\n\"Well, there's this one.\" She surprised me by pulling her long hair up and away from the right side of her head. I shifted and moved closer. Faith tilted her head and moved her ear. I saw what was tattooed behind it. There was an anchor there. It was small and hidden by her ear and hair. You couldn't see it normally.\n\n\"Very nice.\" I hadn't realized how close I'd gotten until I saw the goosebumps my breath caused. \"How about behind the other ear? Anything there?\"\n\n\"What do you think?\" she teased, shifting her head and hair so that I could see behind her left ear. This time I reached out and moved her ear. Even touching her there felt electric. I moved closer to get a good look at the tattoo. It was a heart. I couldn't stop myself from brushing my lips against it when I saw. Faith shivered and pulled back. Her dark eyes were smoky as she looked at me. \"Get it?\" \n\nI frowned at her question. Frankly, I was having problems even focusing on it because there was nothing I wanted to do more than kiss behind her ear again and see where that led, but this wasn't the time or place.\n\n\"Faith,\" she said in explanation, pointing to herself and then she directed my attention from one ear to the other adding, \"Hope and love.\" ",
        "\"I get that the heart means love, but had no idea that an anchor means hope,\" I said thoughtfully, before looking deep into her eyes and letting her see a little of my desire. \"Although, I'm less concerned about their meaning than about the fact that I can't decide which of the three I want to kiss more.\" Faith's eyes grew a little big and she smiled slowly. \n\n\"Down boy,\" she teased. \"You still haven't even seen all my tattoos.\" \n\n\"There's others?\" My groan was real. She smiled knowingly. \n\n\"One more, but it's the biggest by far. Don't get your hopes up. I'm not going to let you see it yet.\"\n\n\"That bad? Or is it located somewhere you can't show me here?\" Faith laughed at my question, but refused to tell me anything else about it. We were interrupted by the waiter coming and dropping off the check. Faith began reaching for it, but I grabbed it first.\n\n\"At least let me pay half,\" she demanded. \n\n\"Not going to happen. This is the best date I've been on in years. You're not going to ruin it by arguing about the check, are you?\"\n\n\"You consider this a date?\" Faith sounded surprised. I leaned forward and kissed her on the lips for the second time. She let me and even returned it, but she seemed more tentative this time. I guess it made sense in a way. The first kiss was after her emotions were in overdrive from singing the Christmas Carol for her father.\n\n\"Definitely,\" I answered afterward. \"And if I'm lucky, the beginning of a Christmas romance. Maybe even something more than that.\"\n\n\"Has anyone ever told you that you come on a little strong?\" Thankfully, she sounded more amused than angry, or maybe the right word was bemused. \n\n\"No one else has ever had a reason. None of the girls I've dated before have ever affected me like you.\"\n\n\"Wow,\" she said, shaking her head. I wasn't quite sure what she meant by that and knowing Faith, she wasn't going to explain. I was proven correct when she changed the subject. \"So, are you ready for some Karaoke? It's your turn to sing.\" \n\n\"Not in this life time.\" I dropped enough cash on the table to cover the check.\n\n\"I guess that means it's time for me to find my hotel and grab some sleep. I'm not expected at my friends until tomorrow. It was nice meeting you.\" She was obviously joking. It was nice to see she was enjoying herself, even at my expense. Her mood had changed significantly since we first met and I was happy that I had something to do with that. \n\n\"That's fighting dirty.\" Faith laughed at my response. \n\n\"It's your own fault,\" she argued. \"I was feeling really down before you came over with your silly 'Haven't we met before' line.\"\n\n\"I believe I started off with asking you if you were just passing through.\" \n\n\"Like that's any better.\" I wasn't offended because she was right. It was pretty lame.\n\n\"A fair point,\" I laughed. \"But I still think I've seen you somewhere before.\" The waiter came by and took the check, thanking me when I told him to keep the change.\n\nWe left the table and made our way back to the bar. Neither one of us was ready to call it a night. The only problem was that the bar was a lot more crowded now and we couldn't find a place to sit, at least not with Faith's duffle bag and guitar in tow. \n\n\"Maybe it's a sign.\" Faith was getting frustrated. I didn't blame her. It was difficult getting through the throng of people with her duffle bag. I was guessing that the guitar case wasn't any easier. Still, I wasn't ready for this night to end and that seemed to be what she was hinting at.\n\n\"It is. It's a sign that we should lock this stuff in my car for safe keeping and continue to have fun.\" She gave me an odd look that actually made me laugh. \"Don't worry. I'll give it back whenever you want to leave.\"\n\n\"Maybe that's a good idea.\" \n\nIt took a little effort to make it to the door. I think I only bumped two people with the duffle, but honestly, I wasn't sure. I spent most of the trip apologizing to strangers. Faith followed close behind me. Once we made it outside it became obvious that it had gotten a lot colder in the last few hours.\n\n\"I guess I'm not used to crowds anymore.\" Faith sighed despite the frosty weather. The relief didn't last long though. \"Or the cold. I'm freezing!\"\n\n\"Give me the guitar and go back inside. These no reason why we both have to do this.\" She hesitated and for a moment I thought she was afraid I'd steal her stuff or something, but then I realized she was looking at the bar and not me.\n\n\"I'm not sure I want to go back in there even without my stuff.\" I guess the crowd really was bothering her.\n\n\"No problem. Let's go to my car. We can warm up in there before we decide where we're going next.\" I turned and made my way to the parking lot without giving her a chance to disagree. I wasn't ready to say goodbye to Faith.\n\nWe put her stuff on the backseat and quickly got into the car. The cold wasn't nearly as bad once we got out of the wind. I turned on the car and let it warm up.\n\n\"So, what do you feel like?\" She looked thoughtful for a moment at my question and then broke into a smile.\n\n\"Hot chocolate. I haven't had any in a while and this weather sort of demands it.\"\n\n\"Hot chocolate it is.\" Faith was rubbing her hands together to warm them up, so of course I reached out and took them in mine. It wasn't intentional, but when she looked up and met my eyes I once again did what came naturally. Faith accepted my kiss willingly enough so I guess she felt the same.\n\nIt didn't take long for the car to heat up, but I think we beat it by quite a bit. I know I did. I was patient with Faith and didn't rush the kiss. Eventually her lips parted and I tasted her for the first time. It felt like many things, but mostly it felt right. I lost track of time for a while. It was obvious that Faith did as well. I'm not sure how long we would have stayed like that if someone didn't beep. They wanted our parking spot. We separated reluctantly. \n\n\"Hot chocolate.\" My voice was a little rough as I reminded myself of where we were off to next. I pulled out of the spot and glanced Faith's way. She was touching her lips with a far off look in her eyes. I reached out and took her free hand as soon as we were out of the parking lot. She turned toward me and smiled hesitantly, but she looked troubled. I frowned and asked, \"Are you okay?\"\n\n\"I wasn't expecting this. Whatever this is.\"\n\n\"What do you want it to be?\" I knew what I was feeling. The question was, did she feel the same?\n\n\"I'm not sure.\" Her eyes met mine and I saw the confusion there. Her answer was honest, but it didn't help. I felt a twinge of fear because I had no idea what to do if what I was feeling was one sided. The whole situation was scary in a way I'd never faced before. \n\nI tried to rationalize, telling myself she might feel the same and not know it yet or that she might at least grow to feel the same eventually. It didn't make me feel much better though. I'd never felt this way about a woman before and it was driving me crazy. \n\nFaith must have noticed something odd in my expression as I stared at the road because she squeezed my hand, drawing my attention back to her. It felt good to know she cared enough to make the effort, but she still looked confused so it only helped so much. \n\n\"I'm not sure how much of this is genuine and how much is just the moment,\" she said, trying to explain. \"I mean, tomorrow is Christmas Eve and I'm going home for the first time in two years. I'm feeling very emotional. Maybe this isn't real.\" I swallowed with some difficulty because it sounded very much like she was trying to convince herself. I couldn't let it go at that. \n\n\"But what if it is? Do you really want to pass up on the chance that what we're feeling is something more?\" I kept one eye on the road and one on her. Faith's expression was thoughtful, but every so often her eyes darted nervously. It was pretty obvious that she was still unconvinced and seemed to be working herself up to something. I had a feeling that it wouldn't be good if she ever got there so it was time to back off a little. I didn't want to scare her away. \n\nIt was my turn to squeeze her hand. I did so gently until she looked at me again. \"How about this? How about we don't overthink this whole thing tonight and instead, enjoy it for what it is? Maybe it's something long and lasting or maybe it's not, but it feels good right now and I don't want to lose that.\" I didn't quite hold my breather, but it was a close thing. I was relieved when the tension surrounding her eased a little and she smiled tentatively. \n\n\"Me neither,\" she admitted, sitting back in her seat. \n\nI decided to remain silent because what I was feeling was too strong. if I spoke right now I wouldn't be able to hide it from her and that would only make things worse. I knew what I was feeling was real in a forever kind of way, but she needed time. I was willing to give her as much as she required. I'd never felt this way for someone before and deep down I knew I wouldn't again.\n\n\"So, you mentioned hot chocolate?\" I was relieved that she changed the subject. It let me focus on something other than what I was feeling. \n\n\"You have two choices,\" I said in a light tone. \"One, we can go to this coffee shop I know about twenty minutes away that makes the second best hot chocolate in the world.\"\n\n\"Second best? Who makes the first?\" I grinned at her question. It was exactly what I wanted.\n\n\"That would be me. I loved my grandmother's hot chocolate so much when I was a kid that she told me her secret recipe. I've improved on it since then. I'm willing to bet quite a bit that you'll love it if you want to come over my place and give it a try.\" She arched an eyebrow at me which made me grin. \"It will be the best hot chocolate you've ever had. I promise.\"\n\n\"Smooth,\" Faith said with a shake of her head. I didn't bother commenting. Instead, I focused on convincing her. \n\n\"Did I mention that my house has a fireplace? We can sit in front it, enjoy our hot chocolate and watch Christmas movies all night if that's what you want.\" \n\n\"Fireplace? That does sound tempting.\" I could tell that she wasn't quite ready to accept my offer despite her interest. \n\n\"How about I promise to be on my best behavior?\" Faith didn't seem to believe me based on her expression, but she looked more amused than anything else. \"Hey! I haven't done anything to earn that look. I think I've more than proven I'm a good guy.\" \n\n\"Oh, I know that,\" she replied confidently, making me feel warm all over. \"But the key word in that sentence is 'guy'.\"\n\n\"I'll be the perfect gentleman.\" It was a last ditch desperate offer, but I really wanted her to say yes. Faith tilted her head and looked at me for what felt like a long time. I could tell when she finally came to a decision.\n\n\"And what if I'm not looking for a perfect gentleman?\" My heart skipped a beat at the desire I saw in her expression. That was not the reaction I was expecting. \"What if I'm looking for someone who's a little smoother and comes on a little stronger than a typical gentleman?\" I swallowed with some difficulty before answering.\n\n\"Well, that does come more naturally.\" Faith started laughing and a moment later I joined her. The laughter seemed to help relax us both.\n\nI continued to hold her hand as I drove to my house. Thankfully, it wasn't that far. We really didn't say much during the trip. We didn't have to. I think we both enjoyed the shared silence as our anticipation grew. The heat between us was a palatable thing by the time we arrived. Of course, it only lasted until I parked the car and we got out. The cold hit us like a wall.\n\n\"It's freaking freezing out here! You better not have lied about the fireplace!\" Faith pulled her guitar out of the back seat while I grabbed her duffle bag.\n\n\"Woods already split, stacked and ready to go,\" I promised as I led her to my house.\n\n\"Nice porch.\" I smiled at her comment and nodded. It was one of the things I fell in love with when I first saw the place. It had a wraparound porch that was great in the summer. \n\n\"I'll show you the outside another time, when it's warmer out.\" She nodded in agreement. I could see her shivering. I quickly let us inside. We dropped her stuff off in a corner of the living room. She saw the fireplace and smiled as she rubbed her arms trying to warm them. \n\n\"Very nice.\"\n\n\"It's getting there.\" The truth was that I was proud of my house. I'd put a lot of time and money into it. \"It's a bit of a money pit, but it's my money pit and I love it. Let me get rid of our coats and then I'll show you around.\" She took hers off and handed it to me somewhat reluctantly because she hadn't warmed up yet. I hung it on the coatrack near the door with mine. I know this sounds silly, but even they looked like they went together despite the different styles.\n\nI spent the next few minutes showing Faith around. I'd bought the house from an old couple who retired to Florida. They'd done an admirable job maintaining the place, but a lot of stuff was original and I slowly began replacing the parts that weren't worth saving as soon as I bought it. For instance, the Formica counters in the kitchen had to go. On the other hand, the crown molding in most of the rooms was definitely staying. \n\n\"There are three bedrooms. I've only worked on the master so far, but it came out pretty good even if I do say so myself. How about we go take a look?\" \n\n\"Still smooth and still coming on a little strong,\" Faith teased. I couldn't stop myself from laughing.\n\n\"I thought that's what you liked about me?\"\n\n\"I do,\" she smiled, giving me a quick kiss. \"But, let's save that for later after we warm up.\" \n\n\"Tease.\" I was only half joking. Faith smile turned more playful.\n\n\"Hey, you were the one who promised me the best hot chocolate in the world, a fireplace and a good Christmas movie.\" She was watching me. It was almost like she could see the internal struggle. \n\n\"Fine,\" I finally relented. \"But I never promised the movie would be good.\" Faith started laughing and after a moment I joined in as I took her hand. We made our way back to the living room. \n\n\"Nice piano,\" she said as glanced toward the corner farthest from the fireplace. \"Do you play or is it only for show?\"\n\n\"I play,\" I answered, cracking my knuckles and shaking my hands out. \"But only when my fingers aren't stiff from the cold. Which should I start first? The fire or the hot chocolate?\"\n\n\"If you go outside and get the wood, I'll start the fire while you make the hot chocolate. My house growing up had a fireplace and dad seemed to think setting the heat at sixty-five in the dead of winter was normal. Let's just say that I learned to get the fireplace going by the time I was ten.\"\n\n\"A girl of many talents,\" I joked. That earned a smoky smile from her. It made all the expected parts of me stand up and pay attention. \n\n\"You have no idea, but don't worry,\" she teased back, the promise clear to see in her expression. \"You probably will before the night's done.\" Faith was so not like what I was used to, but as I looked at her I realized how good that could be. \n\n\"I'd better go get the wood before I come on even stronger than you like.\" I heard Faith laughing as I ran out the back door to the wood pile. It made me smile despite the cold.\n\nThe fireplace had a couple of logs that were just beginning to catch when I was done making the hot chocolate. Faith was sitting on the floor in front of it watching the flames. I put on some Christmas music and grabbed a blanket from the end of the couch before joining her. I handed Faith one of the cups and the blanket. Faith laid the latter out so we could sit on it before taking her first sip from the former. \n\n\"This is good!\" Her eyes grew big as she took another, longer taste. She shook her head afterward and grinned. \"It's also spiked. Is this how you 'improved' your grandmother's recipe?\"\n\n\"Absolutely not,\" I deadpanned. \"All I did was add some nutmeg. The alcohol is all grandma.\"\n\n\"And she gave this to you when you were a kid?\" Faith eyebrow was raised as she waited for my response. \n\n\"Sometimes,\" I laughed. \"You'll understand when you meet her.\" \n\n\"You sound awfully confident that I will.\" Faith was watching me in that way she had. I wish I knew what she was thinking. I knew it had to be interested based on the conflicting emotions that I saw in her eyes.\n\n\"One day soon.\" Something changed when I uttered my reply. Faith nodded slowly as if accepting the moment for what it was. The hesitation I'd seen earlier disappeared. I felt something powerful form between us, but then she looked away and changed the subject once more. \n\n\"This hot chocolate is very good, but the best? I don't know about that.\" I could tell she was teasing, but I was in no mood to retort in kind. Sitting next to her and seeing her skin glow in the firelight had my mind on other things. Faith took another sip from her cup. \n\n\"You have a little on your lips.\" She started to reach up to wipe them, but I stopped her. \"Let me.\" I leaned forward slowly, giving her a chance to stop me, but Faith didn't. In fact, her deep chocolate eyes got that sexy, smoky look again. \n\nI lost myself in the taste of her. Her mouth opened to mine and the lines between us blurred. There was no one to interrupt our kiss this time and it felt incredible. The logs were fully encompassed in flames by the time we came up for air. \n\n\"I did promise you a Christmas movie, didn't I?\" The words came with some difficulty as I fought to regain control. I didn't want to go too fast and scare Faith away. I learned a moment late that I needn't have bothered. \n\n\"Later,\" Faith replied huskily, reaching out and pulling my shirt up. The desire in her eyes made me want to laugh in relief, but I didn't. Instead, I helped her pull off my shirt before reaching out for hers. It came off almost as easily. \n\nI froze for a moment when I saw that both of Faith's thick nipples were pierced with straight barbell rings. My surprised only grew when I realized she was also wearing a belly button ring that was simple and yet sexy as hell. Maybe I should have expected more piercings, but for some reason the thought never entered my mind until I saw the reality. That didn't mean I didn't like what I saw. In fact, I was stunned more by the primal hunger that surged through me at the sight of Faith's piercings than I was by the fact she had them. \n\n\"Any more?\" I asked with some difficulty. Faith shook her head.\n\n\"I tried a tongue ring briefly, but talking with it was a pain.\" \n\nI reached out and unbuttoned her jeans, lowering the zipper slowly and exposing more of her skin. She not only let me, but also smiled as she took in my reaction.\n\n\"No piercing below the waist?\"\n\n\"Definitely not. Even the thought of that makes me shudder.\" She obviously had never even considered it seriously. I didn't blame her. \n\n\"Hmm, interesting.\" I pulled off her jeans and panties leaving her naked. I took a few moments to take in the sight of her totally unencumbered body. Faith was definitely one of those people who looked better without clothes, not that she didn't look good in them too. \n\nHer breasts were shapely without being oversized. Her pale skin was smooth and begging to be touched. The curve of her hips made my mouth water, but it was the sight of the dark patch of hair peeking out from between her legs that really got to me. \n\n\"You obviously like what you see.\" Faith had a satisfied look about her. I guess she was enjoying my reaction to the sight of her naked body. \n\n\"You have no idea!\" I groaned, completely losing control and falling on her. Faith was surprised at the abruptness of my reaction, but she didn't complain when my hands wandered across her body as I kissed her deeply. \n\nEvery new discovery I made with Faith only turned me on more. On most girls, the purple streak in her hair, the piercings and the tattoos would have probably turned me off, but with Faith they only added to her allure. I didn't quite understand it myself. All I knew was that everything about this girl drove me crazy, and that wasn't even taking into consideration the deeper emotions that talking with her and listened to her sing awoke in me. ",
        "I shifted my kisses to behind Faith's left ear. The tattoo there labeled those deeper emotions perfectly. 'Love'. I didn't bother denying it. There was no point. It didn't matter that she was nothing like the girl I expected to spend the rest of my life with. It didn't matter that she wasn't my type. All that mattered was that I didn't lose her. \n\nI began leaving a trail of kisses down her neck. I took my time, but I had a goal in mind so I tried not to linger too long in any one place. Although, I have to admit that I did take a couple of moments to suck on each nipple. The barbell rings there and her gentle moans as my tongue caressed them made it hard to move on, but I promised myself I'd be back later and shifted lower. \n\nFaith's stomach was smooth without being overly muscular. The gentle curves of her narrow waist ended where her hips flared. She moaned and laid back when I began kissing her pelvis. I traced the ring on her belly button and then moved to her hips. A moment later her legs opened to me. The small, dark patch of hair there was now fully visible and damp with need. The scent of her desire filled the air. I kissed her soft inner thighs and became inebriated as each of my senses was assaulted by things that were pure Faith.\n\nI nestled my nose in between her legs and ran my tongue along the pink peeking out from the soft down there. Faith moaned and reached down, grabbed the back of my head with both hands. She pulled my mouth against her and forced my tongue inside. That was all it took. Faith came for the first time and filled my mouth. It tasted like ambrosia to me. I drank down as much as I could, but in the end it covered my cheeks.\n\n\"Enough,\" Faith moaned contently when her orgasm was finally done.\n\n\"Not nearly.\" I pulled back, but didn't move from between her legs. I gave her a chance to recover by going back to kissing her inner thighs. I waited until I felt her responding once more before returning my kisses to the waiting pinkness. It took far longer to make Faith lose it a second time, but truthfully, I was fine with that. I was addicted to the taste of her. \n\nMy nose and mouth was pressed against her dark patch of hair while my hands caressed her soft breasts and my fingers played gently with her pierced nipples. I lashed the apex of her opening with my tongue when the time came and she cried out. Her body shivered and shook under me. I'm pretty sure she rolled into more than one orgasm before she was finally done.\n\nThis time she pushed me away when she was able to move once more. I let her with some reluctance, but that was quickly forgotten when she pulled me up and kissed me deeply. If the taste of herself on my lips bothered Faith, she didn't show it. \n\nHer kisses turned more demanding as she reached out and unbuttoned my pants. Soon, I was as naked as Faith and that made her smile seductively before she began kissing her way down my body. \n\n\"My turn.\" No girl had even done that to me before and I was surprised to find out how sensitive some places were. She started behind my ears and her hot breath sent shivers down my spine.\n\nI was more than ready by the time she reached her goal. I had shifted at one point so that I could rest my back against the couch. I looked down at Faith. The sight of her chapped lips wrapped around my stiffness was pretty amazing, but I was distracted by her back. I'd found her last tattoo.\n\nIt was a dragon, done in all blacks and greys. It was impressive and also, somehow hot. There was nothing masculine about the dragon, but that didn't mean it wasn't dangerous looking. I never pictured myself being turned on by a tattoo, but this one got to me even more than the ones behind her ears. \n\n\"You like?\" Faith was laying on her stomach and looking up at me. My stiffness was resting on her cheek. I loved how comfortable and confident she looked at that moment.\n\n\"It feels amazing.\"\n\n\"I meant the tattoo,\" she laughed. \"But I'm glad you like what I'm doing.\" I took another look at the tattoo. There were some words I couldn't make out from this angle. \"I got it when I was fifteen and I was still mad at the world.\"\n\n\"What does it say?\"\n\n\"Sometimes the Dragon Wins.\" She was smiling now watching me for a reaction.\n\n\"That's a little depressing, isn't it?\" Faith laughed again before responding. \n\n\"Depends on who's the dragon,\" she said, her eyes smoldering once more as she added meaningfully, \"And sometimes, losing isn't all that bad.\" \n\nOkay, so that pretty much twisted my mind and I would have asked more questions, but words were lost to me when Faith once more took me deep inside her mouth. Pretty much any lucid thought followed. I leaned back against the couch and allowed myself to forget everything and enjoy. \n\nThe oddest part was that Faith continued to watch my expression as she worked at bringing me to my release. Most of the girls I dated who were willing to do what she was seemed more focused on the task than my reaction. Not Faith. She liked seeing how her actions affected me. \n\nI had the back of Faith's head in the palm of one hand, but I didn't need to direct her anywhere. She knew what she was doing. Still, it felt good to have my fingers enmeshed in her hair. It wasn't long before I was close. \n\n\"I'm going to lose it!\" I groaned in warning. Instead of pulling away, Faith's eyes grew hungry. She took my entire length deep as she cupped below. I'm sure she felt my release in her hand a moment before my cum flooded her mouth. \n\nFaith seemed immensely satisfied by her ability to bring me off so quickly. I know I was. She moved next to me and rested her head on my shoulder while I recovered. I wrapped my arm around her.\n\n\"The fire needs more wood,\" Faith said a few minutes later, pulling away from me and moving toward the fireplace. I would have volunteered to do it, but watching her naked body move was just too enjoyable. She quickly added a log before grabbing the remains of her hot chocolate from the end table. \n\nFaith didn't seem remotely uncomfortable with her nakedness. It struck me that there was still a lot I didn't know about her, but I was looking forward to learning. \n\nThe dark-haired beauty turned and saw me watching her. The slow smile she offered sent a shiver through my body. I patted the spot next to me and Faith rejoined me willingly. We started kissing as if it were the most natural thing in the world. Maybe it was.\n\nOur kisses grew more insistent and Faith pulled me down onto the blanket in front of the fire. It was obvious what she wanted. I wanted it too. Frankly, it felt more like a need than a want by that point. Faith opened her legs and arms to me. I settled on top of her and felt all four wrap around me in welcome. \n\nI sunk into Faith slowly as we stared into each other's eyes. She was tight despite being ready. I took my time so I wouldn't hurt her. I tried to keep the pace slow even after she got used to my length, but it was impossible. Both of our bodies were demanding more. \n\nFaith's gorgeous eyes were afire with her need and desire. Her perfect lips were parted slightly as she panted. I leaned down and kissed them for as long as I could, but eventually I had to pull away so we could finish. Her moans filled the room and got to me in ways I can't explain. My orgasm was building far too quickly to control.\n\n\"I can't hold off much longer!\" \n\n\"Don't!\" she gasped out in reply. \"I want this! I want you!\" I began thrusting into her as hard as I could. \"Yes! I'm ready! Now! NOW!\"\n\nThat was all I could take. I slammed deep one last time and completely lost it. Faith hips lifted from the blanket as she joined me in release. I came for a long time, especially considering I'd already done so once tonight, but Faith stayed with me the whole time. Somewhere along the line our actions calmed enough that we were able to kiss once more. The touch of her lips to mine caused my hips to thrust one last time almost of their own accord. It also caused Faith to shiver in one last a mini orgasm.\n\n\"That was...well, nothing I've ever felt before.\" Faith sounded a little stunned. I understood.\n\n\"I did tell you I'd grow on you.\" It was my attempt to make her smile and it worked, if only briefly. \n\n\"Yes, you did,\" she admitted. \"But that still doesn't mean you're the man of my dreams.\" I was a little taken aback, but then she grinned and added, \"My sexual fantasies? Definitely. But my dreams? That will take more than a few amazing orgasms.\"\n\n\"The night's still young.\" \n\n\"I need a break first!\" Faith laughed gently as she burrowed into my side and rested her head on my shoulder once more. We lay there watching the fire and enjoying the Christmas carols still playing in the background. Somewhere along the line she fell asleep. I didn't mind as long as I had her in my arms. \n\nThe fire was warmly glowing coals when she finally stirred again. Faith opened her eyes and lifted her head long enough to see me smiling down at her.\n\n\"Not a dream,\" she mumbled contently as she nestled into me and used the arm resting across my chest to give me a hug. I kissed the top of her head and squeezed back. We lay like for a few minutes and I thought she was going to fall back asleep, but instead she lifted her head and asked, \"What are you thinking right now?\" \n\n\"Honestly? I wasn't expecting this tonight.\" A part of me was still amazed by the turn my life had taken in such a few short hours.\n\n\"You?\" Faith laughed. \"All I was hoping for when I got off the bus earlier was a drink, a warm meal and a decent bed to sleep in. I didn't expect my foul mood to disappear until after the holidays.\"\n\n\"Glad I could be of services.\" \n\n\"Speaking of being of services...\" Faith didn't bother finishing her sentence. Instead, she shifted down and began working at bringing a certain part of me back to life with her sexy mouth. It didn't take long. \"You never did get a chance to see my dragon clearly.\" I wasn't sure what she meant until she shifted.\n\nFaith straddled my hips facing away. I felt her run the head of my hardness along her wet opening a few times before she settled down on me. I rested my hands on her hips as she settled down on my slowly. The feeling on her body encompassing my stiffness was incredible.\n\nFaith wasn't in rush this time and seemed to enjoy just sitting there with me buried inside of her. I took a moment to take in her tattoo again.\n\nFaith had a narrow waist and one of the sexiest backs I'd ever seen. The dragon spiraled down the center with the words 'Sometimes the Dragon Wins' at the base of her spine done in a script that seems to make it almost flow like it was part of the dragon. Whoever had tattooed her back was a true artist. I could have stared at the dragon for hours, but Faith chose that moment to squeeze down on me and a groan escaped my mouth in appreciation.\n\nI watched the dragon undulate for the next ten or fifteen minutes as Faith rode me, slowly picking up speed. My hands continued to rest on her shapely hips and my stiffness throbbed inside of her when she finally lost it and came. She fell back afterward and rested her head on my shoulder with me still deep inside of her.\n\n\"Sorry,\" she gasped out, once she could talk again.\n\n\"Why?\" I kissed her temple as I asked the question. I loved the feel of her against me.\n\n\"Because I couldn't wait for you. It felt too good.\"\n\n\"It did, didn't it?\" I smiled, reaching down between her legs and gentle pushing my fingers through the soaked hair there. Faith moaned softly when I brushed the top of her opening. \"No need to apologize. I've already cum twice. Besides, we're not done yet.\"\n\n\"No, we're not.\" Faith lifted off my shoulder and somehow spun around so that she was now facing me without letting our connection slip. I was still inside of her and one look at her expression made me stiffen to my full length.\n\n\"You're insatiable!\" I groaned.\n\n\"I can get off if you'd like?\" Faith deep brown, smoky eyes let me know there was no way that was going to happen despite her teasing which was a good thing because I wouldn't have let it anyway. \n\nI took hold of Faith's hips and thrust up into her, making her gasp. She fell on my lips and kissed me hungrily and began riding me. Despite her recent orgasm, it didn't take Faith long to cum yet again. I think part of it may have had something to do with me fulfilling my promise to myself from earlier. I kissed my way to her pierced nipples and explored how my tongue caressing the barbell rings there affected her. Not only did it drive Faith over the edge relatively quickly, but I found I liked it too. Frankly, if I hadn't cum twice already I would have lost it. \n\n\"Dammit,\" she moaned afterward as she rested her cheek on my shoulder this time. \"That's two I owe you.\"\n\n\"Don't worry,\" I laughed. \"I'm sure I'll collect eventually.\"\n\n\"Well, you better collect soon because I'm pretty much done in.\" I smiled down at her because I knew she was telling the truth. She was already starting to feel like dead weight. It made me feel good that I had exhausted her. It also felt amazing to have her in my arms.\n\n\"Let's go to bed.\" Faith didn't argue. In fact, I pretty much had to lead her to my room and the king-sized bed there. \n\nI had some thoughts on what would happen once we got there, but she looked so exhausted that I let them fade as she fell asleep almost instantly. I guess along with a few good orgasms, the long day of travel had finally caught up to her. The weird part was that as I looked down at her sleeping form I really didn't mind. Being here with her was enough.\n\nFaith rolled into me and the warmth of her body next to mine gave me a feeling of contentment I'd never felt before. I threw my arm over her and fell asleep, knowing this was going to be my best Christmas ever.\n\n**********\n\n\"Hey, wake up.\" The soft touch of Faith's perfectly shaped lips against mine did as much to wake me as her words. I returned the kiss happily despite still being half asleep.\n\n\"Good morning.\" I smiled as I opened my eyes. I couldn't help myself. I think part of me expected to wake up and find Faith gone. Or worse, find that what we shared the night before hadn't been real, but as soon as her lips touched mine I knew the truth. It was real. Far more real than made sense considering how little time we'd spent together, but not only couldn't I deny it, I didn't want to. \n\nA deep feeling of contentment took hold. Unfortunately, it only lasted until I saw that Faith was already showered and dressed to leave. \n\n\"Whoa, where are you going?\" I sat up in bed, rubbing my eyes trying to force away the last of dregs of sleep.\n\n\"I didn't want to leave without saying goodbye, but it's snowing outside and I need to get to my friends. They're expecting me soon.\" Despite her words, I got the feeling that at least part of Faith didn't really want to go. Still, she started to step away. I grabbed her wrist without thought and fought to get my thoughts in order.\n\n\"Call them and tell them you're going to be late.\" My words were abrupt and more than a little demanding. Add that to the way I was holding her and I shouldn't have been surprised by Faith's expression. She didn't look afraid so much as annoyed. \n\n\"Sorry.\" I couldn't get myself to let go, but I did relax my grip as I added more gently, \"I thought we'd hang out today.\" She looked into my eyes and saw what I was trying to say despite my doing such a sad job of it. Her expression softened, but only for a moment.\n\n\"I can't do that. What would I say?\" she argued. \"'I'm sorry, but I can't come over right now because I met some hot guy in a bar and we're going to spend the day in bed together?'\" Faith was trying to pull away again, but only halfheartedly. I refused to let go.\n\n\"Sounds good to me. Oh, and make sure to include the whole 'hot guy' comment when you tell them.\" I was teasing hoping to make her laugh, but it didn't work, at least not fully. Faith did smile, but only briefly. \n\n\"That wouldn't go over well with these friends. Take my word for it.\"\n\n\"So? You don't seem the type to shy away from saying something because it might offend someone. If it's the truth, then it's the truth.\"\n\n\"It's not about offending them,\" she retorted. \"It's about hurting their feelings. They're good friends and it would be wrong to blow them off. They deserve better.\"\n\n\"If they're that good of friends then tell them the whole truth and not just the easy truth. I bet they'll understand.\"\n\n\"The whole truth?\" Faith looking confused, but I think deep down she understood. It was up to me to convince her.\n\n\"Yes,\" I said carefully, watching her and hoping. \"As good as I'm sure the sex would be if we spend the day together in bed, it's the being together part that matters. Say what you want, but our meeting was more than some random pickup at a bar and you know it. It was fate.\" Her eyes were drawn back to mine despite her misgivings. \"If you told your friends that, I'd bet they would understand.\"\n\n\"They probably would,\" she admitted slowly, but then shook her head and added, \"If it were true, but just because you say I know something, that doesn't make it's so.\"\n\n\"Are you trying to say you don't feel anything for me?\" I didn't bother hiding my disbelief. \n\n\"I feel plenty,\" she acknowledged. \"But it's all jumble that I can't make heads or tails out of right now. You are a good guy and I won't ever forget the kindness you showed by drawing me out and listening to me talk about my father last night.\" She took a deep breath and let it out slowly. \"And you were right. I needed to share it with someone, but that doesn't mean that there was more to it than that. Frankly, it would be crazy if there were.\" \n\nFaith was one of the most honest people I'd ever met and I knew she believed what she was saying. Could I have been so wrong? Could what I was feeling be one sided? The thought tore me apart, but if it was true then there was nothing I could do other than accept it no matter how much pain it brought me. \n\n\"So, all you feel for me is appreciation?\" Faith must have seen the hurt in my eyes because she placed her free hand over mine in a comforting gesture.\n\n\"Not only,\" she said, not wanting to lead me on, but also not wanting to hurt me. \"I mean, after last night I couldn't possibly deny the attraction we feel for each other, but don't you think that the great sex we had might be part of the problem?\" When I didn't immediately answer, she added, \"I know it's got me confused. I mean, a large part of me would love to do exactly what you want and spend the day together reliving last night over and over again, but a real relationship takes more than that.\" \n\nShe was trying to make what I was feeling nothing more than simple physical desire and there was so much more to it than that.\n\n\"For what it's worth,\" I interjected, not doing a good job of hiding my annoyance. \"You were the one who mentioned staying in bed. I said spend the day with each other. I don't really care what we do as long as we're together.\"\n\nI saw the truth of my words hit their mark. Faith being Faith, she didn't seem embarrassed by the realization that she was the one who made it sexual, but it did make her thoughtful.\n\n\"Colin, I need time to sort things out,\" she finally said, shaking her head. \"No one falls in love this quickly!\" \n\nI don't know what reaction she expected, but suddenly my doubts about what she felt toward me disappeared and I was so relieved that I started laughing, which of course made Faith frown until I explained. \n\n\"Love,\" I said, gaining control of my laughter. \"It's odd that you were the first one to use the word, even if it was in denial. It makes me oddly hopeful despite your reaction. I'm probably reading more into it than I should, but I know that what we're sharing is real. I guess I'll have to have faith that you'll see and accept it eventually.\" ",
        "\"And that's funny, why?\" If I were a betting man, I'd say my explanation was affecting Faith, but she was still fighting it by focusing on my laughter and not my words.\n\n\"Some of the laughter was in simply relief, but the rest was because of what I just said,\" I explained, no longer smiling as I reached out and pulled her mouth to mine. It wasn't a long kiss, but it was heartfelt. She was stiff at first, but relaxed into it quickly enough if only for a few moments. It didn't take Faith long to pull back. Instead of letting her go, I shifted my lips to behind her right ear and kissed her there. Finally, I did the same behind her left ear. \"Get it? You and your tattoos say it all. Faith, hope and love. Don't you agree?\"\n\nI was hoping she'd answer my question or at least see the humor in what I said earlier and laugh, but neither happened. Instead, she tried to pull away again. \n\n\"I'm not letting go.\" It was more of a promise than a threat and I think she understood, but that didn't stop her from running. That's what she was doing after all. She was running from the intensity of what we were both feeling. \"Call you friends.\"\n\n\"I really can't stay,\" she snapped, once more refusing to look at me. Her words were oddly familiar, but they hit too hard for me to focus on that. I knew that if I didn't say or do something in the next few seconds that got through to her than there was a good chance I'd lose her, my faith, hope and love notwithstanding.\n\nFaith had already half convinced herself that our time together was some sort of Christmas fling that would only end up a fond memory once the holiday was over. I needed to convince her that what we shared was real, but before I could do that I had to break through the wall she'd built between us. I racked my brain trying to think of something to say, but nothing came to mind. \n\nI was nearly in a panic with her words replayed in my head over and over again, 'I really can't stay...I really can't stay...' when I realize why they sounded so familiar. A crazy thought popped into my head. It was ridiculous, but it was all I could come up with so I went with it.\n\n\"But baby it's cold outside.\" It was impossible for Faith not to get the reference, but I prayed she take up the challenge I'd thrown out. Thankfully, I wasn't disappointed. I could see her fighting it, but music was too important to Faith for her to let a song remain unfinished, even one as silly as this one.\n\n\"I've got to go away.\" Faith didn't sing her response like I hoped, but she did use the right words. I knew it was up to me to take it to the next level. I swallowed with some difficulty, but I refused to back down. \n\n~~But baby it's cold outside~~ I sang, which if you knew me would have surprised the hell out of you. I don't sing...ever, not even in the shower, but I was desperate and hoping for a little Christmas magic. My voice was terrible, but Faith smiled at my attempt and sang the next line. \n\n~~This evening has been~~ I know this is corny, but as she relaxed ever so slightly and actually sang the lyrics instead of leaving I could actually hear the music begin in my head.\n\n~~Been hoping that you'd drop in~~ My voice was a little gravelly, but it sort of went with the song, at least that's what I told myself.\n\n~~So very nice~~ Faith's voice was just as beautiful than I remembered. She rolled her eyes at me, but it was followed by a smile. I felt a surge of hope that almost made me almost miss my next line.\n\n~~I'll hold your hands, they're just like ice~~ \n\nI thought I was doing okay singing until that moment, but only because the song was more spoken than sung. In either case, I rushed the line and it came out a little off. \n\n\"Michael Buble you're not,\" Faith teased. \n\n\"I was going for more of a Leon Redbone vibe,\" I joked back. \n\n\"Hmm...\" she said, still looking amused. \"Probably closer to Louie Armstrong...without the trumpet.\"\n\n\"Ouch! Now that was mean,\" I grinned. \"And I like Louie Armstrong's voice!\"\n\n\"It's certainly distinctive enough,\" she retorted. I was enjoying our byplay, but from the change in her expression I could tell it was almost over. \n\n\"You know, I wasn't kidding before. I need some time and distance to make sure it's real.\" I looked up at her trying to judge what she was feeling. Faith was calmer now, but I wasn't sure if she was still running. She seemed to read my mind. Faith smiled warmly before leaning down and kissing me gently. \"I said I had to go. I didn't say I wouldn't be back.\" I knew it wasn't a promise to return, but it at least left the door open. \n\n\"When?\" The question slipped out before I could stop it. \n\n\"When I'm sure.\" Her answer made me frown, but there was little I could do about it. She saw my concern and added, \"I haven't even been home yet. There's things that need to be done. There's a lot I need to work through.\" \n\nI took a deep breath and let it out slowly. I knew that what she was asking for was fair, but I also knew it was partly an excuse. I took a moment to stare deep into her deep brown eyes. It made her nervous, but at least she didn't turn away. \n\n\"You're really not sure what we have is real, are you?\" Faith didn't bother denying it.\n\n\"How can I be?\" she asked softly. \"We met less than twenty-four hours ago. Come on. Admit it. Somewhere deep down you're worried we're moving too fast too.\" \n\n\"Not really.\" It was the truth so I saw no reason to hide it. \n\n\"Well, I'm sorry, but I am,\" she said with conviction, but not unkindly. \"My emotions were running high last night with Christmas being so close and me being back in the states for the first time in two years.\"\n\n\"And what about this morning? Because you can't tell me you're not still feeling it. If you weren't you would have slipped out without waking me.\" She didn't bother denying it, but she didn't give in either.\n\n\"It's all too crazy.\"\n\n\"A lot of the best things in life are,\" I argued, and then grinning added, \"Think about how great a story it will make when we're old and grey.\"\n\n\"Oh sure!\" she snorted. \"I can just picture trying to explain to our kids that you picked me up at a bar with some of the worst pickup lines ever used.\"\n\n\"First of all, like I said last night. I really have seen you somewhere before,\" I insisted, but continued before she could comment. \"But more to the point, crazy or not, deep down you know what we're feeling for each other is real.\" She looked ready to argue, but I didn't give her a chance. \"Don't bother. After all, all I said was that our meeting would be a good story. You're the one picturing us having kids together, not that the thought doesn't make me happy.\"\n\n\"I wish you'd stop throwing my own words back at me!\" she snapped in frustration, finally pulled away from me with enough force to break free. \n\n\"Then stop fighting what your subconscious sees just as clearly as I do!\" I retorted, sitting up in bed.\n\n\"I have to go,\" Faith said, steeping back. Her voice sounding small for the first time. I could tell I'd pushed her as far and hard as I could without making it worse. \n\n\"I understand that you need some time to process it all,\" I said, finally backing off. \"I'll give you as long as you need, but you have to promise me that you won't overthink it. We feel what we feel and emotions aren't always logical. That doesn't make them wrong.\" Faith's eyes met mine and after a few seconds she nodded slowly.\n\n\"Good,\" I sighed, knowing it was the best I could hope for. \"Go back to the place you grew up and settle what needs to be settled. Only, don't get confused. That place isn't home. Not for you anymore.\" I thought she was going to argue, but she surprised me by actually smiling.\n\n\"Have I ever told you that you can be a little pushy?\" \n\n\"You may have mentioned it a time or two.\" Faith rolled her eyes and suddenly we were both laughing. Despite the distance between us, it felt good. I wanted to kiss her one last time before she left. I think part of her also wanted that, but she was slowly backing away, making it obvious that it wasn't going to happen. \n\n\"Faith?\" She stopped briefly at the door to my room. \"I don't suppose I can convince you to leave me your number?\"\n\n\"I told you, I'll be in touch once I figure things out.\" \n\n\"That doesn't seem very fair,\" I sighed. \"You can contact me, but I don't have any way to get in touch with you.\"\n\n\"Sure you do,\" she grinned. \"I mean, you keep saying that our meeting was fate and that you know me from somewhere. If that's true than I'm sure you'll be able to track me down once you remember.\" She was teasing me. I think she expected me to complain, but instead I smiled.\n\n\"Hmm, good point,\" I said thoughtfully. \"When I do remember, and I will remember eventually, I fully expect you to apologize for not believing me.\"\n\n\"Is that all?\" Faith's widening grin made it obvious that she didn't believe me. \n\n\"Well, that and accept that fate brought us together and it would be totally selfish for you to keep us apart.\"\n\n\"Still coming on a little strong...\" she retorted with a laugh before looking at her cell phone. She lost her smile. \"I've got to go. My cab is here.\"\n\n\"Faith...\" I began. I was sorely tempted to use those three little words everyone knows, but I chickened out. Not because I wasn't sure I felt them, but because I wasn't sure how she'd deal with them.\n\n\"Yes?\" Faith asked nervously. \n\n\"Merry Christmas,\" I replied. I could have left it at that, but instead I added a little more confidently. \"And I'll see you soon.\" \n\n\"Merry Christmas Colin,\" she replied, turning to leave. Her back was to me, but that didn't stop me from hearing her add softly, \"You just might.\" The door closed behind her a moment later. I lay there with my back against the headboard until I heard her leave my house. It was one of the hardest things I'd ever done. \n\nA half hour later I was still in the same position. I think part of me hoped she'd come back if I stayed there waiting, but eventually I had to get out of bed. \n\n\"Faith, hope and love.\" I decided that I'd just have to hang on to all three until I could kiss them all once more. I had no idea how long it would be before that happened, but I promised myself it would and that when it did, I've never let Faith go again.\n\n**********\n\n\"What's wrong with you?\" \n\nI glanced up and saw Eli looking at me from the doorway. I was hiding in my childhood room, but of course, he found me. I had to shake my head at the fact he was here. I guess my love life wasn't the only one that had taken a drastic change in the last couple of days. \n\nIt turns out Eli did call Jean as soon as he left the bar. I didn't get all the details yet, but the end result was that he cancelled his date with smoking hot girl he was supposed to be meeting with and went out with my cousin instead. \n\nIt must have gone well because he ended up coming to my house for Christmas dinner. I mean, it's not like he wasn't invited. Eli was like a second son to my parents. The only reason why he usually chose not to come for the holidays was that it meant dealing with the rest of my crazy family. I guess part of it might also have been the fact that Jean used to bring her old boyfriend. \n\nIn either case, Eli was here today. I'm sure most of the family thought it was because he was my best friends, but the truth was pretty obvious to those who bothered to take notice. Eli was willing to deal with my extended family for one reason and one reason alone. Jean. I could understand. I'd withstand worse to be with Faith. Thoughts of her made me groan.\n\n\"I am a dumbass.\"\n\n\"Agreed,\" he said easily, walking into the room and sitting next to me on my bed. \"But what's this all about? Not the purple haired girl from the bar again?\" I took a deep breath and let it out slowly.\n\n\"I've been wracking my brain for days, but no matter how hard I try, I can't remember where I saw her before and I'm afraid I'll never see her again unless I do.\" He frowned.\n\n\"You really like this girl.\" It looked like the truth was finally sinking in. I mean, I'd told him about what happened, but Eli was having problems accepting it.\n\n\"More than that,\" I admitted. \n\n\"More?\" His disbelief was obvious.\n\n\"I'm going to marry Faith one day.\" I guess I should have been more surprised by my own words since I hadn't planned on saying them out loud. They pretty much slipped out like a lot of things over the last couple of days, but only because each of them was the truth. I'd known how I felt about Faith from the moment I first laid eyes on her. It defied explanation so I gave up trying to explain it.\n\nEli reaction was more expected. He was stunned by my words. He whistled softly and shook his head as he realized I meant it. Eli being speechless was a rare occurrence and typically didn't last long so I took advantage and added, \"Go ahead, tell me how crazy that sounds, but it's a waste of breath. It isn't going to change how I feel.\"\n\nEli continued to stare at me in silence while I waited for his reactions. I thought he was going to lay into me about how ridiculous I sounded when he got this far away look in his eyes. I watched as he took a deep breath and let it out slowly. \n\n\"I would tell you how crazy that sounds or at least make fun of you, but I'm sort of in the same boat.\" Okay, so now I was stunned. Not because he felt the way he did about my cousin. That had been obvious for years, but Eli was a bit of a womanizer and to see him settle down so quickly was a bit of a shock.\n\n\"Jean?\" I asked, already knowing the answer. He nodded. \"I figured. You two make a good couple.\"\n\n\"It's no secret that I've had a crush on her forever, but it's not like we know each other all that well. Still, I feel the same way about her that you feel about this Faith girl. We spent the last two days together and it's been amazing, and I'm not just talking the sex.\"\n\n\"Too much information!\" I cried. \"That's my favorite cousin you're talking about.\" Instead of being apologetic, Eli did what Eli always does. He went on the offensive. \n\n\"Favorite? That's sad because she likes your cousin Ryan a lot better than you.\" \n\nI laughed. Eli had definitely picked the right cousin. Ryan was probably a good guy deep down, but most people couldn't sit in the same room for with for more than five minutes at a time without wanting to scream. I knew for a fact that Jean couldn't stand him. Don't get me wrong. We both loved Ryan. He was blood after all, but like? That was a whole different story.\n\n\"So, how does it feel to be Jean's rebound guy?\" My retort scored a hit, but I'd only used it because I knew it wasn't true. Jean wasn't the type.\n\n\"Fuck you,\" Eli said without heat. \"At least Jean and I have stuff in common. What are you and little miss sad puss going to talk about?\"\n\n\"Everything and anything.\" He looked at me, snorted and then shrugged. The fight seemed to go out of both of us at the same moment.\n\n\"Yeah, I get that.\" We fell silent, each thinking about the new women in our lives.\n\n\"There you two are.\" I looked up and saw Jean taking her turn standing in my doorway. I smiled when I saw that although she was talking to both of us, she only had eyes for Eli. \"No hiding without me, especially when Ryan is threatening to sing Christmas Carols.\" Eli and I exchanged a look and started laughing.\n\n\"What?\" Jean asked, but instead of answering I stood.\n\n\"We'd better get out there and stop him. Ryan's singing is bad enough, but he'll insist on playing along on mom's piano and the boy really can't play. It hurts to listen to him try.\" \n\n\"You'd think after all those lessons he took he'd get a clue,\" Jean threw in.\n\n\"That bad?\" Eli asked, standing as well.\n\n\"Oh yeah!\" I said emphatically. \"I don't think he actually likes playing, but he loves the attention it brings him.\"\n\n\"There's no way Ryan could be that bad unless he put zero effort into it, lessons or not.\" Jean shook her head as she spoke. \"Of course, his mother never sees it that way. Remember when she sent him and Rose away to music camp one summer? She made your mom buy the video from the camp's website the following Christmas, which was bad enough, but then to add insult to injury she made the entire family watch him play. Now that was painful!\"\n\n\"Yeah, it was really bad.\" Something was tickling the back of my brain, but for the life of me it wouldn't come. I thought I almost had it, but then mom called us down for dinner.\n\nThe rest of the night when quickly enough. My family was entertaining if nothing else. Frankly, so was Eli and Jean as they did the new relationship thing. \n\nCousin Ryan did eventually start singing some Christmas carols, but I got to the piano first which made it somewhat bearable. I couldn't sing for shit, but I had a touch of talent when it came to the piano. In my family that wasn't much of a thing since music was in our blood. Our grandparents met while both playing in a big-name orchestra and the rest, as they say, was history. \n\nEveryone in our family took to music in one way or another. Well, except for Ryan, but there's always one oddball in a family.\n\nA few of my cousins even play in bands, although mostly only on the weekends to make some extra cash. Jean was a mean base guitarist back in high school, but stopped playing in public when her band broke up. It was pretty ugly from what I hear.\n\nInterestedly enough, the best musician out of our generation was Ryan's sister Rose. She was amazing on the cello and was starting to build a following professionally. Go figure.\n\nIn either case, for me the family passion came in the form of a piano. I mostly played for myself, but that was enough. It was one of the few things that almost always helped me relax.\n\n\"So, do you have any plans for New Year's Eve?\" Jean asked a few hours later as the party started running down. Most of the remaining family was in the kitchen and dining room. We were in the recreation room in the basement. Jean and Eli were sitting next to each other on the couch. I was in my father's recliner as we watched some old Christmas special.\n\n\"Eli and I typically get together with some old friends for a poker party,\" I said, looking back and forth between them and realizing the truth. \"But I'm guessing that's not happening this year.\"\n\n\"Got it in one.\" Eli didn't look remotely remorseful. Jerk. Of course, I wouldn't feel that way if Faith was around.\n\n\"We're going out with a bunch of my friends. You're welcome to join us.\" My cousin actually sounded like she wanted me to go, but that wasn't going to happen.\n\n\"I'll pass.\" The last thing I wanted to do was go to a party with Eli and Jean as the third wheel.\n\n\"Come on,\" Jean argued. \"It will be fun. I'll feel bad otherwise. Did I mention that they'll be plenty of single women there?\"\n\n\"Thanks, but I think I'd rather play card with the guys.\" \n\n\"Passing up a chance at some hot women so you can lose money in a room full of guys and cigar smoke.\" Eli had on his shit eating grin. \"You really do have it bad for that wild child you met the other night.\" \n\n\"Wild child?\" My cousin curiosity was piqued. \n\n\"This has nothing to do with Faith,\" I snapped, not wanting to discuss her. \"I just don't feel like going to some big gala and blowing a shit load of money on watered down drinks.\" \n\n\"Don't worry,\" Eli said to Jean when she frowned. \"He'll come. This is going to be a bunch of your friends and I'll need my wingman along. He's never failed me yet and he's not about to now after all these years.\" I looked at Eli, wanting to argue, but he was grinning confidently. Jackass.\n\n\"I'll go,\" I sighed. It not like I had a choice. Eli was right. He'd need me along to help smooth his interaction with Jean's friends. Some people didn't get his sense of humor. Besides, I'd been his wingman too many years to not be there when he asked. That didn't stop me from pointedly looking at my cousin Jean and adding, \"As long as you don't try and set me up with any of your friends.\""
    ],
    "authorname": "JoeDreamer",
    "tags": [
        "love",
        "romance",
        "holiday"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/faith-hope-and-love"
}