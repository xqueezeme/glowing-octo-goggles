{
    "title": "Jessie & The Tornado Ch. 04",
    "pages": [
        "Again, I suggest reading the first three chapters before beginning this one. Also, I want to emphasize that if you are expecting a story with non-stop sex, then you will be disappointed.\n\n*\n\nWhen I woke up the next morning, the first thing I did was check my car. Jessie's purse was gone. I had already noticed that her car was not in the driveway of her parent's house, and one of her parent's cars was also missing.\n\nI tried calling her cell phone over and over, but she never answered. I left a number of messages begging her to call.\n\nNow, all I could do was wait. Had she and her parents gone somewhere? Then why were two cars missing? I paced back and forth from one end of my house to the other for hours, like a caged lion.\n\nFinally, finally I saw her parent's car pulling into their driveway. It was a just a little after noon.\n\nHer parents got out of the car, but there was no Jessie.\n\nI started walking across my yard over to theirs. When her mother, Gloria, saw me she walked over and gave me a hug.\n\nTo say I was surprised would be an understatement. I knew we were good neighbors, but not exactly what you would call best friends or anything. We always waved at each other, and often spoke to each other, mostly \"Hi, how's it going?\"\n\nI had attended a couple of neighborhood functions, and it seemed like Winston, Gloria and I would usually end up sitting together but that was really just social.\n\n\"Oh Sam, Jessie is so confused right now. Won't you come over and have some coffee or tea so we can talk,\" she offered.\n\nOver the course of the next two hours, I found out a lot more about Jessie.\n\nGloria said when Jessie came in late last night, she was crying so hard she woke her Mom up.\n\n\"At first, well . . . I thought you had done something,\" she said, a little sheepishly. \"But when I started to say something about you, Jessie got mad at me and started defending you. Then she told me it was something she did, not you.\"\n\nOver the next couple of hours, Gloria and Jessie talked. With a lot of tears thrown in.\n\n\"Sam, when she was talking about dinner and dancing . . . Sam I haven't seen her smile that much since John Bennett died. Actually, since even before that. \"Did you know she and John Bennett were having problems, and almost called the wedding off?\"\n\nI was stunned.\n\n\"No, she never told me that,\" I said.\n\n\"It was just a couple of days before the wedding; Jessie told me she wasn't sure if she still loved John. She didn't know if she could go through with the wedding.\n\n\"Then John was killed. Did you know they had a terrible argument that night, and John left very angry?\"\n\nI shook my head.\n\n\"A few hours later he was dead . . . and Jessie blamed herself. As the weeks went by, she seemed to forget about all her misgivings. Now . . . well now John Bennett was her one true love, and they had never had any problems.\n\n\"Jessie just couldn't accept that the argument might have been responsible for his death so, at least in her mind, the argument never happened.\n\n\"What really happened was that John was shot during a bungled robbery at a convenience store. The argument had nothing to do with it. But deep inside, Jessie still blamed herself.\"\n\n\"Did she ever have counseling?\" I asked.\n\n\"One session, and then she said that was a waste of time and money,\" Gloria answered. \"She never went back. Somehow she managed to repress her fears and anger. At least until last night.\"\n\n\"She told me what happened last night. How she first cried out your name, then John's. It shook her to her very core. Did she love you, did she love John?\n\n\"But I think somewhere, way in the back of her mind, she was also thinking that if she actually didn't love John, did that mean she didn't really love you?\"\n\n\"Gloria, I had no idea. I should never have let it get that far. We pushed too far, too fast,\" I started.\n\n\"Sam, in the past month or so I have seen Jessie come back alive. She calls me nearly every day, and I can tell you she has been happier this past month than I can ever remember.\n\n\"She also told me that last night . . . well she said she not only wanted it to happen, but needed it to happen. She needed that contact, that closeness with someone else.\n\n\"Unfortunately, her memories got in the way.\"\n\n\"Gloria, do you think Jessie would agree to see the same counselor I saw, after my wife's death?\" I asked.\n\n\"I don't know. Maybe. Perhaps if she knew you had suggested it. Sam, Jessie is really crazy about you. Maybe she might agree if it comes from you.\"\n\nJessie woke up Sunday morning before 6 am, and told her mom she was going back to Athens because she couldn't face me. Gloria knew she was in no shape to drive by herself, so Winston drove Jessie's car, and Jessie rode with her mom back to Athens.\n\nWe talked a little while longer, then I returned home where I started looking for my counselor's business card. I finally found it, and luckily it included her cell number.\n\nAfter I got her on the phone, I tried to explain.\n\n\"Look, Dr. Andrews, I have a situation, and I really need to talk to you about it. I know it is Sunday afternoon, but is there any way we can talk?\" I asked.\n\n\"Sam, I am in Athens,\" she said.\n\n\"Umm, Athens, Greece, or Athens, Georgia?\"\n\n\"Athens, Georgia,\" she laughed, \"I could never afford Athens, Greece on what the county pays me to meet with you stoic firemen and policemen.\"\n\nI knew that wasn't true. Dr. Andrews had a successful private practice, but also contracted with the county to provide counseling to any county employee who needed it, at reduced rates. Dr. Andrews explained that she was in Athens filling in for her old psychology professor. He had just had a quadruple bypass, and would be out for about a month.\n\n\"Look, Doc, this has nothing to do with the county, and I will pay your regular rates if I can just tell you what is going on. If you can help, I'll also pay your regular rates for that.\"\n\n\"Okay, Sam, why don't you start at the beginning,\" she finally agreed.\n\n\"Well, about a six weeks ago I was pulling weeds out of one of my flower beds when I heard someone yell, 'Look out.' I jumped up just in time to be knocked flat on my face by a soccer ball . . . . . . Then last night she whispered, 'Leave me alone, Sam, just leave me alone.\"\n\nI had been talking for almost two solid hours, with just a few questions from Dr. Andrews.\n\nI also told her about my conversation with Jessie's mom, and that Gloria thought Jessie might agree to meet with someone if she knew the suggestion came from me.\n\n\"Doc, she is in her dorm room. Do you think you could call her and see if she will see you? This is really important to me, Doc.\"\n\n\"I'll call her, Sam, but if she says no, then there's nothing I can do,\" said Dr. Andrews.\n\nDr. Andrews had said she would call me back, and 30 minutes later she did.\n\n\"Well, that was an interesting conversation. As soon as I told her who I was and that I was a psychologist, I thought she was going to cuss me out, then hang up. She did cuss me out, but before she could hang up I managed to say the magic word,\" she explained.\n\n\"Magic word? You mean 'please,'\" I asked.\n\n\"No, I mean the magic word 'Sam,' as in Sam asked me to call. Sam is very, very worried about you.\n\n\"She just whispered your name, 'Sam? Sam asked you to call? Sam is worried?' Then she started crying.\n\n\"I am on my way now to her dorm room. I thought she might feel a little more comfortable there, than in this motel. I'll call you later, okay?\"\n\nI figured it would take a couple of hours to hear back, so I left to get something to eat.\n\nCame back and waited and waited and waited. Two hours, three hours, four hours and I am pacing back and forth like a madman.\n\nFinally, five hours later, my phone rings.\n\n\"What an extraordinary young woman you have there, Sam,\" Dr. Andrews began. \"I went over planning on spending maybe an hour, and ended up spending nearly five hours.\"\n\n\"Well, Doc, what can you tell me. I am dying to know how it went,\" I confessed.\n\n\"Of course, I can't really discuss too much, due to doctor-patient confidentiality rules, but I can tell you some things,\" she said. \"And the first thing I can tell you is that she was scared to death, absolutely terrified that you now hate her.\"\n\n\"Hate her? Doc, I lov-LIKE her. Like her a lot.\"\n\nOh crap, did I nearly tell my psychologist that I thought I was in love with someone I had barely known for just over a month, and had actually only seen three times? She would probably think I was the one who was crazy and needed counseling!\n\n\"Sam, you know of course I have a degree in psychiatry, but did you know I also minored in English?\" she asked.\n\n\"Um, no,\" I answered.\n\n\"I just bring this up to let you know that I am not familiar with that word you just used.\"\n\n\"What word?\" I asked.\n\n\"Luv-like? I must confess I haven't heard that one before,\" she said, and I could hear the laughter in her voice.\n\n\"Yes, well, that means that I really, really like her . . . a lot!\" I answered, and could feel my face turning red.\n\n\"Are you blushing Sam?\" she asked, and again I could hear the laughter in her voice. \"Hey, it's alright Sam. I may be an old lady now, but I remember what it felt like to be young and in love. My husband and I had known each other all of two weeks when we got married. And that was 35 years ago.\"\n\n\"How . . . how is she Doc? I've got to know, I'm dying here,\" I implored her.\n\n\"She is going to be fine Sam. FINE! It's just going to take a little time,\" she answered. \"I meant it when I said she is an extraordinary woman. So strong in some areas, so . . . well confused in others.\n\n\"But between us Sam, between you, me and her . . . she is going to be fine.\n\n\"Do you have any idea how much she likes . . . luv-likes you?\" and again I could hear the laughter in her voice. \"It's just going to take a little while. She still has some issues from her past she is finally now beginning to deal with.\n\n\"I learned a lot about her in those five hours. I also read every one of the e-mails the two of you wrote each other! That was the most fun I have had in years!\"\n\nI could feel my face turning red again, \"You read all . . . ALL our e-mails?\"\n\n\"Yes, and she also told me all about you, Obediah! What a dirty trick to play on her. But I know she is really excited about showing you her bikini now! Once I convinced her you didn't hate her.\"\n\nI think my face turned even redder.\n\n\"She, uhh, told you about that?\" I asked.\n\n\"Yes, she did. Oh, and talking about your e-mails reminds me of something.\n\n\"You said you are going to pay for all these counseling sessions, so you need to understand my rate fee. You know I have one rate I charge the county, and a separate rate I charge my private clients?\"\n\n\"Yes,\" I said.\n\n\"Well I am going to have a new, special premium rate I only charge people who make endless, juvenile jokes about my beloved alma mater. You do know I graduated from the University of Georgia don't you?\"\n\n\"Oh, shit, I mean crap,\" I stumbled along, \"Look, Doc, I didn't know that . . . but at least it explains something.\"\n\n\"Explains what?\" she asked.\n\n\"Since you graduated from UGA, it explains why you didn't know the word 'luv-like,'\" I said.\n\nDr. Andrews actually laughed out loud.\n\n\"Why Sam Baker, that is going to cost you even more money! By the time I am finished with you and Jessie . . . why I will be able to afford plane tickets to Athens, Greece after all.\"\n\n\"Doc, and I mean this, if you can help Jessie . . . then I will buy you and your husband round-trip, first class tickets to Athens, Greece,\" I declared.\n\n\"I may just hold you to that, Sam,\" she said.\n\n\"When can I see her, Doc?\" I asked. \"I'd like to drive over tonight if I could.\"\n\n\"Give it a week or two Sam. Jessie is to meet with me Monday, Wednesday and Friday of this week, and the same next week.\n\n\"Can you wait two weeks?\" she asked.\n\n\"If I have to,\" I said, and I knew she could hear the disappointment in my voice.\n\n\"Can I write her?\" I asked.\n\n\"Of course Sam, and I know she would love to read anything you write. Just kind of go a little easy on the 'luv-like' part. I mean you can tell her how you feel, but concentrate a little more on the 'like' part, and a little less on the 'luv' part. I mean you can tell her you love her, in fact I think that would be wonderful for her to hear, but maybe not quite yet.\"\n\n\"Thank you Doc. I mean THANK YOU so much,\" I said.\n\n\"Goodnight Sam.\"\n\n\"Goodnight Doc.\"\n\nWithin 30 seconds I was Googling a song, then within another minute or so I was writing.\n\nMy Dearest, Dearest Jessie,\n\nThere is an old song I heard many, many years ago. It was very sad, because it was talking about someone who thought he had lost the most important thing in his life.\n\nThe song was by a guy named Charlie Rich, and part of the lyrics are:\n\n'Hey, did you happen to see\n\nThe most beautiful girl in the world?\n\nAnd if you did, was she crying, crying?\n\nHey, if you happen to see\n\nThe most beautiful girl that walked out on me,\n\nTell her, \"I'm sorry.\"\n\nTell her, \"I need my baby.\"\n\nOh . . . Won't you tell her that I . . . . . . . . . . . . . . . . .'\n\nAnd if you want to know what I want to tell you, then you will have to Google the song and listen to it.\n\nOh, Jessie, I am so sorry.\n\nI feel so responsible for what happened.\n\nAs much as I wanted to be with you last night,\n\nAnd believe me, I WANTED to very much,\n\nI should have realized it was just a little too much, too soon, too fast.\n\nAt times I can't believe that we have known each other for barely over a month.\n\nAnd that yesterday morning was actually only the second time I have ever seen you in person, and last night only the third.\n\nCan YOU forgive me Jessie?\n\nTell her, \"I'm sorry.\"\n\nTell her, \"I need my baby.\"\n\nOh . . . Won't you tell her that I . . . . . . . . . . . . . . . . .\n\nYour friend, and more than friend,\n\nSamuel Obediah\n\nXOXO\n\nP.S. That reminds me. I have always heard that deforestation is a terrible thing. But now that I know you have undergone your personal deforestation (Big, BIG Grin), I can't wait until I can see you in your bikini!\n\nI hit send, then waited. I knew it usually only took Jessie a few minutes to respond. I waited . . . and waited . . . and waited.\n\nI glanced at the clock and realized, to my shock, it was nearly midnight.\n\nLet's see, it was after nine pm when Dr. Andrews called back, and we probably talked for an hour. Then I wrote the e-mail to Jessie, which I probably sent about 10:15.\n\nJessie was probably already in bed. From what her mother had said I knew she had barely gotten any sleep last night, and today had to be really emotional for her.\n\nCrap! I had been waiting for nearly an hour-and-a-half and she was asleep all this time.\n\nI was just starting to turn the computer off when I heard, \"Ping.\" I knew I had mail. Then, quickly, \"Ping,\" \"Ping,\" Ping,\" and more \"Pings.\" Altogether I had 14 e-mails!\n\nI opened the first one.\n\nMy Dearest, and I mean Dearest Sam,\n\nI loved the song.\n\nThe only change I would make would be:\n\nTell HIM, \"I'm sorry.\"\n\nTell HIM, \"I need my MAN!\"\n\nOh . . . Won't you tell HIM \"I . . . love him.\"\n\nNow I am crying again, dammit!\n\nSam, I am the one who needs to apologize.\n\nI felt like such a fool. And I knew you probably never wanted to talk to me again, and probably would hate me forever.\n\nWhen Dr. Andrews called, at first I thought my parents had made her call, but when she said that you had asked, that you were worried and concerned about me . . . Sam I just broke down completely.\n\nSam, she made things so easy for me to understand. I had been fooling myself for so long.\n\nShe told me I can't see you for at least a week. It will be the longest week of my life. I don't even want to think about it perhaps being two weeks.\n\nBut we can write. I can't believe you still want to write to me.\n\nOh, I had better warn you. She said she is really going to make you pay for all the University of Georgia jokes, since she is a graduate of UGA. Not sure HOW exactly she is going to make you pay, but watch your backside.\n\nI have got to end this quickly because my roommate is already so mad at me she may never talk to me again. First, all day long I have done nothing but cry and wouldn't tell her why. Then when Dr. Andrews came over I kicked her out. After I got your e-mail, I have been running around like a totally crazy person.\n\nTell me Sam, do Marines think about ANYTHING other than girls in bikinis? That is, other than getting them OUT of bikinis?\n\nTell me please, that's ALL they think about? I still remember when my Mom told me there really wasn't a Santa Claus. I was so disappointed. Don't destroy my one remaining dream, that Marines are ALWAYS thinking about girls in bikinis, and then getting them OUT of bikinis?\n\nAfter your e-mail, I took a quick shower, then made my roommate blow dry my hair and help me style it. Then I made her help me with my makeup. She was complaining about how tired she was the entire time.\n\nWhile I was getting dressed, she actually went to bed and fell asleep, so I had to make her get up and take pictures.\n\nI hope you don't have ANY trouble falling asleep tonight (evil grin!) Wonder what you are going to be dreaming about?\n\nYour friend now and always (and I hope soon a lot more than friend)\n\nLove,\n\nJessie\n\nI have to admit it was with some trepidation that I clicked on the second e-mail.\n\nJust what had she sent me?\n\nOh. My. God!\n\nThe entire screen was filled with a picture of one single breast, barely covered by about a single square inch of almost translucent cloth. I could see how hard Jessie's nipple was in the picture and could almost taste it in my mouth.\n\nThe next email had a picture of her other breast, again with a tiny little square of cloth that barely covered the nipple.\n\nNext came a picture was of her ripped stomach. You could see the individual muscles. To tell you the truth, I hadn't really noticed that the night before.\n\nThe fourth picture was from the navel to just above her thighs. There MIGHT have been two or three inches of cloth there. I mean it BARELY covered what it was supposed to cover. Yes, you would DEFINITELY have to have a complete wax job to wear that.\n\nThe fifth picture was from the waist down her incredible long legs.\n\nThe sixth picture was of her butt. My God, a thong bikini, and the thong was, again, a tiny little strap between her two butt cheeks.\n\nI have to confess that by now I was a little uncomfortable, and had to start wiggling a little to relieve the pressure.\n\nThe seventh picture was a back shot, from her waist down to what must have been six inch heels. Do woman have ANY idea what high heels do to a woman's legs? How it drives men crazy?\n\nThe eighth picture was a full shot of Jessie from behind, looking over her shoulder at the camera.\n\nThe ninth picture was similar, but now she was bent over with her butt stuck out even more.\n\nI think I was salivating. It was all I could do not to lick my computer screen.\n\nThe tenth picture was a full frontal view of Jessie in her bikini, with her hair perfectly done and makeup applied. Of course it took me a minute or two (or more) to raise my eyes that far up! Hey, I'm a guy!\n\nMy God, she is stunningly beautiful! And sexy!\n\nThe eleventh picture was again taken from behind, about a three-quarters view, only this time Jessie is not leaning forward quite so much. She is looking back at the camera, and holding the top of her bikini in one hand. Her other arm is across her chest and she is cupping her breast in her hand.",
        "The twelfth picture is again from the front, waist up, and Jessie is still holding the bikini top in one hand, while her arm covers one breast, and her hand cups the other.\n\nThe thirteenth picture . . . the thirteenth picture is full front, from head to feet. Almost the same picture as before, meaning her one arm is over one breast, while that hand cups the other breast. But now she is not wearing her bikini bottom either! Her other hand is strategically placed over her mound.\n\nNow I know what she meant when she said, with an evil grin, that she hoped I would not have any trouble falling asleep! I would be lucky if I got ANY sleep tonight.<br> And if, by some miracle, I did get any sleep, I knew what I would be dreaming about!\n\nDear Jessie,\n\nYou are truly, truly an evil person!\n\nAnd I love it . . . and you.\n\nI can't write anymore because I don't have any blood left in my head.\n\nIt is being used elsewhere.\n\nYour babbling and drooling friend,\n\nSam\n\nP.S. Don't tell me you were thinking about wearing this to the \"Y\"?\" We would both have been arrested. You for wearing it, and me for what I was trying to do you WHILE you were wearing it.\n\nI guess at some point I did fall asleep. The next morning I had another e-mail from Jessie.\n\nDear, Dear Sam,\n\nCan't talk. Overslept because I stayed awake last night taking \"interesting\" photos for some dirty old man\n\nAnd don't say a word about time management when it is YOUR fault I was up so late.\n\nLove you,\n\nJessie\n\nMy Dear Jessie,\n\nThat's right, blame someone who wasn't even there.\n\nI'll go in for my 24-hour shift at 6 pm, so I don't know how much time I will have to write tonight.\n\nDr. Andrews actually told me to go easy on the big \"L\" word, so let me say this about that.\n\nLike, Like, Like, Like, Like, Like, Like, like you like crazy.\n\nSam\n\nDear Jessie,\n\nThey just called me and I have to go in early. One of the other firemen injured his back, and they want me to finish his shift. Don't know if I will be able to write tonight or not.\n\nLIKE, LIKE, LIKE you,\n\nSam\n\nThat night she wrote me a much longer letter.\n\nMy Dear Sweet Sam,\n\nI had the most incredible day today. Best Monday of my life.\n\nFirst, I had the goofiest grin on my face ALL day. People kept asking me, \"What's wrong?\"\n\nHaven't they ever seen anyone who is happy?\n\nOh, well perhaps they haven't seen me happy in the past two years.\n\nI really need to ask you a very personal, very private question.\n\nIn your e-mail you mention that you were my \"babbling and drooling friend.\"\n\nAt your age, how -- exactly -- is that different from any other day????\n\nHave any trouble sleeping last night? I hope so.\n\nAnd another even more personal and private question.\n\nWhat did someone tell me one of the Marine Corp mottos was: \"The Marines have landed and have the situation well in hand?\" Is that right?\n\nI hope, after looking at my photos, that you had \"the situation well in hand,\" last night. (Smirking at you)\n\nI had a very good session with Dr. Andrews this afternoon. How does any one person get to be so smart? Oh, that's right. She attended UGA, and was never a Marine!\n\nYes, I cried some. Maybe more than some. Things that I thought were far behind me weren't. They had just moved from one side to the other, waiting for the right situation to come out again.\n\nSam, there is no other way to describe it, but I was really \"fucked up.\" And thought I was doing such a good job of adjusting to it. I even remember telling you once that I had had an additional year to get over my grief, and was wondering if I was being fair to you.\n\nYou are so far in front of me I only hope you will continue to wait for me.\n\nPlease, wait for me Sam? Please?\n\nDr. Andrews was a little upset with me for sending you the photos. And no, she did not see them, I just told her about them. After today's session, and with my understanding more about myself, I know why she was a little upset.\n\nBut I still hope they drive you CRAZY!\n\nI also understand what she meant about being careful with, as you describe it, the big \"L\" word. So I will try to tone that down a LITTLE! Not completely, but a LITTLE.\n\nOn a really encouraging note, Dr. Andrews said that if my Wednesday and Friday sessions go as well as todays did, then I might be able to see you Sunday. I would say Saturday, but Georgia's soccer teams are playing a charity match against Georgia Tech's soccer teams. All the money is going to MADD (Mothers Against Drunk Driving), and I really want to play.\n\nOn a discouraging note, she also said that while kissing and holding hands is okay, she STRONGLY advises against touching. At least yet.\n\nSam, if you can come up Sunday (I don't know your schedule), then you are going to have to be the strong one. I know that as soon as I see you I am going to want to jump your bones! So, I don't care how much I may beg, or plead, or cry, no touching under the clothes! Okay?\n\nBut don't be surprised if I try to suck your appendix out through your mouth. (Evil grin)\n\nYour now and forever friend,\n\nLIKE, LIKE, LIKE, LIKE, LIKE, LIKE, LIKE, love,\n\nJessie\n\nSee, I told you I would try to tone it down a LITTLE!\n\nMy Dearest, Sweet Jessie,\n\nDid you hear about the two blondes who decided that this Christmas they wanted to cut down their own Christmas tree? So they drove two hours into the country and walked deep into the woods to find the perfect Christmas tree. They had planned the trip well, especially considering that they were blond. They were dressed warmly with boots, warm coats and hats. They had a chain saw, hatchet, a bag to protect the tree and rope to drag it back to their car. Every detail was covered.\n\nFirst, I am glad to hear that you were smiling so much Monday. You have such a beautiful smile. I am just sorry that it is now so late on Tuesday night, and I am just getting a chance to write. I actually went in four hours early Monday, and worked over six hours today, so you can imagine I am a little tired.\n\nBecause of the other fireman's injury (he will be fine, just needs to rest his back) they have had to change all of our schedules.\n\nSo, instead of 24 on, and 48 off, for the next few days I will be working 24 on, 36 off. That means I may have to work Sunday. I will know more later in the week, but I was really looking forward to seeing you Sunday.\n\nMy God, Jessie, are you trying to kill an old man?\n\nThose photos!!!!! Wow!!!!! I wanted to lick my computer screen!!!!!\n\nJessie, I will wait for you as long as it takes!\n\nAnd if when we do finally see each other, then all we can do is hold hands and kiss? I would rather hold hands with you than kiss any other woman in America. And if I can just kiss you once or twice when we do meet, then I will consider it a blessing.\n\nAnd in answer to your letter from Sunday, I can't speak for other Marines but I know this Marine is only thinking about a certain young lady wearing a bikini . . . and dreaming about the day he can get her out of said bikini.\n\nNow, my precious one, I have to get some sleep. I hardly got any sleep Sunday night FOR SOME REASON!!!!! And we were so busy Monday night and Tuesday all day, I only got about three hours sleep. Now it is Tuesday night and I am exhausted.\n\nYour tired friend,\n\nMega-Likes,\n\nSam\n\nP.S. The two blondes searched and searched for the perfect Christmas tree. They had gone to all this trouble, nothing but the perfect tree would do. They searched for hours through knee deep snow and biting wind. Finally, five hours later with the sun beginning to go down, one blonde says to the other, \"I can't take this anymore. I give up! There are hundreds of beautiful trees out here. Let's just pick one whether it's decorated or not!\"\n\nAfter getting up Wednesday, I spent most of the day working outside. Jessie had sent me a short email Wednesday afternoon, just before her meeting with Dr. Andrews. She said she would write more after the meeting, but by the time I went to bed Wednesday night, I had not received anything else from her.\n\nWhen I got up on Thursday, I had something of a different type of letter from Jessie.\n\nDear you lying good-for-nothing, low-life, scumbag (but I still love you, Sam, although you have a LOT of explaining to do),\n\nI was so mad at you last night I couldn't write.\n\nI actually got up an hour early just to write this.\n\nHOW? How could you lie to me like you have?\n\nPoor, \"Oh, I've never been to college.\"\n\nYesterday I had another great session with Dr. Andrews. After the session ended, she asked me if we were still writing each other daily -- and if you were still including UGA jokes? She really seems to be interested in how many UGA jokes you send me. Why?\n\nI told her \"yes,\" to both counts, then mentioned something that has really amazed me since we started writing.\n\nI told her that I sometimes actually had to look up some of the words you used, and told her how incredibly beautiful some of your letters were.\n\n\"I can't believe someone who has never been to college can write like that,\" I think I said.\n\nDr. Andrews started laughing and said, \"Never been to college? He has more college credits than anyone I know who actually hasn't graduated. I think he only needs one required course to obtain his degree. He probably has enough credits for two degrees.\"\n\nOnce she realized I truly didn't know, that you had told me you hadn't been to college, she clammed up, saying she had already said too much.\n\n\"You'll have to ask Sam about that,\" was all she would say.\n\nOKAY, MARINE ASSHOLE (is that redundant?), what gives?\n\nHave you been lying to me since the first day we met?\n\nAnd it had BETTER be good.\n\nYour honest as the day is long friend (apparently can't say the same about you),\n\nJessie\n\nDear My Sweet, Precious, Beautiful, Understanding and Forgiving Jessie,\n\nOkay -- First of all I did not lie to you: Technically.\n\nAnd even more than that, I don't think you could say I lied in any way, shape or form. Perhaps I omitted one thing, but that is not the same as lying.\n\nYou have to look at it from my point of view.\n\nOne day I decided to pull the weeds out of my flowerbeds. After working very hard, I heard someone yell, \"Look Out!\" Thinking someone might be in trouble and need my medical assistance, I jumped to my feet. Having been kneeling for so long, when I stood up so quickly, I got dizzy. At approximately the same time, I was struck in the head by (at that point) an unknown object. The object itself had barely the force of a feather hitting me, but the combination of the very light impact, together with my slight dizziness caused me to lose my balance momentarily.\n\nThe next thing I know some beautiful, half-naked goddess (perhaps fallen from Mount Olympus?) was thrusting her -- assets -- in my face. Very delightful assets I might add!\n\nI was discombobulated for a minute.\n\nThen this delectable creature, this gorgeous flower of femininity began speaking.\n\nIt was immediately apparent that if she had fallen from Mount Olympus . . . well she must have landed on her head because she started saying she had knocked me out. That, of course, NEVER happened.\n\nThis beautiful creature then insisted on helping clean out the third flower bed, during which time I don't think she ever paused from talking. I don't think I have ever seen anyone talk for 30 minutes before without taking a breath. Then one quick breath, and another 30 minutes of talking.\n\nIf I had wanted to say something, I would have been unable to do so.\n\nYes, at one point the question was asked, as best as I can remember: \"Have you been to college?\"\n\nI answered factually, truthfully and honestly. \"No, I have never been to college.\"\n\nAt no point was the question EVER asked if I had taken college courses, how many courses, how many credit hours I had earned, or anything else.\n\nA direct question was asked, and in the one-third of a second I was given to answer, I said, \"No.\"\n\nAgain, let me say this: I have never been TO college. Even when Debs graduated, I was unable to attend, so no, I have never set foot on a college campus, nor have I ever sat in a college classroom.\n\nComputers, and the Internet, are wonderful things. You can take college courses while sitting in a tent in the middle of the desert in Iraq. You can also take college courses while sitting in your living room in Charlotte, or a hotel room in Atlanta.\n\nAs Dr. Andrews implied, yes, I have more than enough credits to graduate, but I have one remaining required course in English.\n\nIf the correct questions had been asked, and if I had been given an opportunity to answer, then I could have explained all this.\n\nBottom line: The questionee answered the question asked. It is not his fault that the questioner did not ask the correct questions.\n\nYour honest as the day is long also friend,\n\nSam\n\nXOXO\n\nDear less than completely truthful Sam,\n\nWithholding information is a form of lying.\n\nI have sometimes heard the phrase, \"Some people have it, and some people don't, and he is full of it.\" I now understand that statement.\n\nYou are so full of it I don't know how it doesn't slosh out of your ears when you walk.\n\nJust out of curiosity, when you lose your balance \"momentarily,\" as you put it, do you usually fall face forward into flower beds, and have to then spit out a mouthful of dirt before you can say anything?\n\nAnd the next time I see you, YOU HAD BETTER HOPE AND PRAY that I don't have a soccer ball with me, or we will see how much impact a well-kicked soccer ball has upside your head!\n\nAnd don't think I don't see through your transparent attempt to get on my good side by calling me a \"beautiful, half-naked goddess.\" It won't work, buster!\n\nBy the way, \"beautiful goddess,\" with \"delightful assets?\" Thank you. But you still aren't on my good side YET!\n\nAnd if I was, your comment about \"landing on my head,\" would have ruined that!\n\nI don't think I have ever seen anyone stare without blinking for an hour before.\n\nOkay, I will concede that perhaps I should have been more specific in my line of questioning. But then again, I normally don't deal with people who apparently have a penchant for telling less than the truth, the whole truth and nothing but the truth. I will try to remember that in the future when engaging in a conversation with Marines in general, and one certain dumb-ass Marine in particular.\n\nWhen are you going to complete your remaining course so you can graduate? And don't obfuscate!\n\nThe way I see it, you owe me SEVERAL meals at my favorite French restaurant.\n\nOh, Sam, I think I have laughed more in the last six weeks with you than I have in all the rest of my life put together.\n\nBut I am STILL a little mad at you.\n\nYour goddess with the delightful assets,\n\nLove,\n\nJessie\n\nXOXO\n\nThe rest of the week was spent exchanging similar e-mails, and trading insults, blond and UGA jokes, and Marine Corps jokes. I honestly never knew it could be so much fun to receive, and send, insults before.\n\nYes, guys always insult each other, and yes, we enjoy it. But being able to trade barbs with Jessie was truly one of the most fun things I have ever done.\n\nIn her letter written after her meeting with Dr. Andrews on Friday, Jessie again wrote how productive the meeting was, and her disappointment that I would not be able to see her over the weekend.\n\nThe fact is . . . well . . . I didn't exactly lie, I just told a small fib.\n\nOkay, I lied.\n\nMy shift ended Friday night at midnight, so I went home and went to bed, waking up about 6 am Saturday. I drove to Athens, Georgia, arriving at about 9 am. I knew Jessie's soccer match was scheduled for 10 am.\n\nI drove around the campus for a little while before finding the Turner Soccer Complex where the match would take place. I bought a ticket and program, then sat down and watched Jessie play.\n\nI was stunned. I knew she was good, but she was amazing. She scored three goals to lead the Lady Bulldogs to a five to three win over the Lady Yellow Jackets. Jessie was all over the field, and her speed was breath-taking.\n\nOnce I saw Jessie kicking the soccer ball, I realized why she had nearly knocked me out that day.\n\nWait, once I saw Jessie kicking the soccer ball, I realized why she had slightly stunned me that day.\n\nAfter the match was over, they announced that all the ladies, from both teams, would be signing autographs while the men's teams were warming up.\n\nI waited until there were only a few people in line, and finally made my way up to Jessie. I had noticed that usually she would just sign her autograph, then look up at the person while she was handing them back the program.\n\nWhen it was my turn, I handed her my program, and said, \"Sign it to my honest friend, Sam.\"\n\nShe actually had started writing, \"To my hon,\" when she recognized my voice.\n\nShe looked up at me, and I'm not sure when I have ever seen such joy in a person's face before.\n\nI was only standing about a foot away from Jessie, but she yelled my name out loud. Then as her teammates were turning to look at her, Jessie's arms were around my neck and we were hugging each other.\n\nJessie's uniform was soaked with sweat and her face and hair were still wet from playing. It was wonderful.\n\n\"Sam, Sam, I can't believe you are here! Why didn't you tell me you were coming?\" she asked.\n\n\"I wanted to surprise you,\" I explained. Then I handed her a box that contained a dozen roses.\n\nJessie started tearing up, then was in my arms again hugging me. Our lips met in a quick kiss.\n\nFinally Jessie broke the embrace and start saying, \"O God, I must look awful. I am hot, sweaty and stinky.\"\n\n\"I think you look beautiful,\" I said, before I heard someone else say, \"Crap, can we throw up now?\"\n\nWhen Jessie and I looked up, I was completely surrounded by about six other players on the team.\n\n\"Girls, this is my . . . my friend Sam,\" Jessie said.\n\n\"Sam? This is Sam? This is the jerk who has all the blonde jokes?\" asked one member of the team -- a blonde.\n\n\"This is the butthead who tells all the Georgia jokes,\" asked another, obviously a Georgia native based on her deep Southern accent.\n\n\"This is the dipshit who tells all the University of Georgia jokes?\" asked a third. This one was about three inches taller than I was, and did not look happy.\n\n\"Down, girls, down,\" said Jessie with a smile. \"Yes, he might be a jerk, a butthead and a dipshit, but he is MY jerk, MY butthead and MY dipshit.\"\n\n\"You let them read my letters?\" I asked Jessie.\n\n\"No, dickhead,\" answered the tallest member of the team, \"but she sure tells us all your idiotic jokes!\"\n\n\"Look girls, I really need to go take a quick shower and change clothes,\" Jessie said. \"Do y'all promise not to hurt him, at least not too much, until I get back?\"",
        "The tallest member of the team, who I later learned is named Rachel, told Jessie: \"Okay, Jess, but hurry. I don't know how long I can keep this group under control.\"\n\nJessie handed me the flowers, then the next thing I know I am alone, surrounded by six girls -- none of whom really look that happy to be with me.\n\n\"Uhh, do any of you know any good Georgia Tech jokes?\" I asked, trying to break the tension.\n\nMy inquiry was met with a resounding silence.\n\nFinally, the really tall one (Rachel) leaned over me and looked down at me like I was some particularly repugnant specimen under a magnifying glass.\n\n\"Hey, Ass-wipe, do you know there is only ONE reason we are not stomping and kicking the crap out of you right now?\"\n\nNot trusting myself to speak, I just shook my head.\n\nRachel then leaned back and actually smiled: \"Jessie and I have been in school together since the first grade. In the past two months I have seen her happier than I have in years.\n\n\"Now, while I may want to kick your teeth in -- and believe me I could do it -- we're going to let you live. At least for a little while. But if you ever hurt Jessie . . . the entire Marine Corps won't be able to protect you.\"\n\nAfter that, the other team members seemed to loosen up, and started joking with me -- a little.\n\nThey all had some little story to tell about Jessie, and how much she had changed in the past six or eight weeks.\n\nHer teammates were also the ones who told me about how Jessie had broken her nose and gotten the stitches in her eyebrow from a soccer ball, but refused to come out of the game. She finally allowed the team doctor to put a small Band-Aid on her eyebrow to keep the blood out of her eye. She went on to score five goals in that game, then spent nearly three hours at the emergency room afterwards.\n\nAlmost before I knew it, 20 minutes had passed before I heard one of the girls say, \"Here comes Jessie.\"\n\nThen I heard someone say: \"Oh My God. She's fixed her hair.\n\n\"And she's wearing makeup,\" someone else said.\n\n\"And lipstick,\" added another.\n\n\"Holy crap! She's wearing a dress! Jessie is wearing a dress,\" said someone else.\n\n\"Actually,\" said the blonde, \"she's wearing my dress. The one I planned on wearing after the game when I go out to eat with my boyfriend.\"\n\nWhile they were saying these things about Jessie, I was trying to see, but most of the girls were standing directly in front of me, including tall Rachel. Finally they moved as Jessie came closer.\n\nHot Damn! Had I actually been dumb enough to say that Jessie was cute, in an athletic sort of way? This girl . . . this woman . . . walking towards me was absolutely stunning. Her long blonde hair was cascading down her front. Her outfit was a simple sleeveless dress cut pretty low, and the hem was . . . well higher than mid-thigh. It was immediately obvious from the movement of her breasts and the way her nipples were pushing against the thin fabric that Jessie wasn't wearing a bra.\n\nAs Jessie walked up to me and put her arms around me, I heard one of the girls say, \"Damn, Jess, you should dress up more often.\"\n\nJessie briefly brushed her lips against mine, then turned to her blonde teammate, \"Susan, I hope you don't mind if I borrow your dress?\"\n\n\"Hell no, Jessie, in fact it looks a lot better on you than it does on me,\" was her answer.\n\nI don't know how the dress looked on what's her name, but I do know it was beautiful on Jessie.\n\nJessie turned back to me, \"Well, I don't see any blood, so I guess they weren't too hard on you!\"\n\n\"A couple of broken ribs, lots of internal injuries, but it was worth it, just to see you now,\" I said.\n\nA couple of the girls snickered.\n\n\"Silver tongued devil,\" I heard one say.\n\n\"Wonder what else his tongue can do?\" another asked, and I think both Jessie and I blushed, which evoked a lot of laughter from the group.\n\nAs Jessie and I got ready to leave, Rachel leaned down and gave me a hug and kissed my cheek, then whispered, \"You be good to her, or so help me I will find you and rip your balls off.\"\n\nOne by one, each of the girls gave me a hug. A couple kissed me on the cheek. Then all six hugged Jessie.\n\nWhen I handed the roses back to Jessie, she held the roses in one arm while putting the other around my neck. This time it was a LOT more than just brushing her lips against mine. In fact, it was a very passionate, tongue-in-mouth kiss, prompting her friends to start \"ooing\" and \"ahhing,\" as well as making comments about PDAs (Public Displays of Affection).\n\nJessie grabbed my hand and said, \"Let's get out of here.\"\n\nWe stopped at my car to leave the flowers since Jessie said she wanted to walk. Then, holding hands, we walked all over the UGA campus for nearly two hours.\n\nNeither of us talked very much. Really, neither of us needed to . . . just being together, holding hands was far more important.\n\nJessie would tell me about some of the different buildings we passed, or about some of the areas of campus, and I would ask some questions, but mostly we just enjoyed each other's company.\n\nFinally, after about two hours, Jessie asked if I wanted to sit down and rest for a little while. We were walking along a path around a small lake, so we walked over to an old oak tree and sat down.\n\nI sat with my back against the tree, and Jessie sat down in front of me, then scooted herself back against me until her back was pressed against my chest. She then leaned her head back against my shoulder. I put both my arms around her, just under her breasts and she put both of her arms over mine.\n\nAfter about 15 or 20 minutes of just sitting together, Jessie finally begin talking.\n\n\"Sam, I could just sit here with you for the rest of the day. I can't believe I feel so peaceful and calm.\"\n\nJessie gave her head a little shake.\n\n\"I could never have sat here like this with John Bennett. When I was with him, I always felt like I had to be up doing something.\n\n\"Sam, for the last year of his life we were planning our marriage. That is supposed to be a wonderful time in a woman's life . . . but for most of that time I was miserable. I think I hid it, I don't think John Bennett knew, but I kept wondering if I was making the biggest mistake of my life.\"\n\n\"Why do you always use his full name?\" I asked.\n\nJessie laughed. \"His last name was actually Mitchell. John Bennett Mitchell, but he always introduced himself as John Bennett, then John Bennett Mitchel. Kind of like in the Bond movies where he always says, 'Bond . . . James Bond.\n\n\"I'm not sure if that is a Georgia thing, or a Southern thing?\" she said.\n\n\"Oh, definitely Southern thing,\" I told her, \"I had several friends like that.\"\n\n\"Anyway, John Bennett and I met in the fourth grade. We had our first date, a movie, in the ninth grade. We had sex with each after our senior prom. He was my first, and I was his first. In fact, until last Saturday night I had never kissed anyone else before.\"\n\nShe turned her head towards me and kissed me on the cheek.\n\n\"That was so wonderful . . . dancing with you, then kissing you.\n\n\"When John Bennett asked me to marry him . . . it just seemed like the natural thing to say yes. I really didn't think a lot about it. But I remember I was more . . . I don't know . . . relieved than excited.\n\n\"As we began the planning, well, it seemed more like I was planning it for someone else then me. I just couldn't get excited about it. One of my friends even told me that at times I acted more like I was planning my execution than my wedding. 'Don't you love him,' she asked.\n\n\"When she asked that, I finally realized that while I did love John Bennett, I was not IN love with him.\"\n\nJessie was quite for several minutes. I just hugged her harder.\n\n\"Two days before the wedding, I finally told John Bennett I wasn't sure if I could go through the wedding, that I wasn't sure if I was doing the right thing . . . that I wasn't sure if I loved him.\n\n\"That was the first time I had ever seen him get mad. First time I had ever seen him really cry. 'Two days before our wedding is a hell of a time to decide you don't love me,' he yelled at me, then walked out.\n\n\"I called my Mom and told her. She told me that whatever I decided, she would stand by me, but this was a decision only I could make. I thought about how John Bennett looked, how much I had hurt him, then called him on his cell and apologized, saying it was just a case of nerves, pre-wedding jitters.\n\n\"I told him I still wanted to get married, and he was so happy. He said he was going to stop at a store and buy some beer for us, and would be home in 30 minutes.\n\n\"After hanging up, I curled up on the couch and cried myself to sleep.\n\n\"I woke up three or four hours later. He wasn't back yet. I turned on the television and they were reporting about an attempted robbery that had gone wrong. How one guy walked in to a convenience store and was shot and killed by the robbers.\n\n\"On TV, they were showing the front of the convenience store and I recognized his car. I knew immediately.\n\n\"If we hadn't had the fight . . . . . if I hadn't told him I wasn't sure about getting married . . . he wouldn't have been there and would still be alive.\"\n\nJessie is softly crying now and the only thing I can do is hold her tighter.\n\nAfter several minutes, she finally continued.\n\n\"I actually managed to convince myself that the fight never happened. That I was madly in love with John Bennett. That I was looking forward to the wedding.\n\n\"At least until last week. When we were making love . . . oh, God, did I want to make love with you . . . and then I called out his name. It all came back to me. All the guilt, all the pain, all the anger. It was overwhelming, Sam, so overwhelming.\n\n\"I had to get away. Do you understand Sam, why I had to get away?\"\n\nI told her I did.\n\n\"Mom and I talked for hours that night. Of course she already knew the doubts I had been having, but I had never told anyone else, and deliberately tried to make myself forget.\n\n\"The next night, you sent Dr. Andrews and that was the first time I ever told anyone else about how guilty I felt. That I blamed myself for John Bennett's death. We met for five hours and I think I cried for at least four of those hours.\n\n\"She helped me to understand that it wasn't my fault. That it was a horrible accident. That John Bennett has chosen to go into that convenience store, in a bad part of town. I still had trouble accepting that until she told me another story.\n\n\"She never mentioned any names, but told me about another patient of hers who blamed himself for his wife's death because he was tired, and his wife let him sleep late one morning. How he had almost killed someone else because of his anger . . . not against the other person, but against himself.\n\n\"She never told me Sam, but that person was you wasn't it?\"\n\nI had never told Jessie any of the details about Deb's death, and at first I just nodded, \"Yes.\"\n\nThen I told her what had happened that last morning when Debs was killed, and how it had taken several firemen and police officers to pull me off that other driver several weeks later.\n\nJessie and I both shed some tears as we remembered.\n\nBy now Jessie and I had been sitting under the tree for over an hour. She had shifted until she was mostly facing me, with her legs across my thigh and her head resting against my chest.\n\nWe had both been silent for the past 10 or 15 minutes, just taking pleasure in the closeness of the other when Jessie lifted her head up, looked at me and said, \"You know what, Mr. Walker?\"\n\n\"What, Miss Johansson?\" I said, turning to look at her. Our faces were just inches apart.\n\n\"I have half a mind to kiss you,\" she said.\n\n\"Only half a mind?\" I started to say before her lips met mine.\n\nAgain, the kiss was incredibly tender and gentle. As before when we exchanged our very first kiss, it was more sensual than sexy, more playful than passionate. When we finally broke the kiss, we were both smiling.\n\n\"I really like your half mind,\" I told Jessie. \"And since you're a blonde and attend UGA, I guess I had better get used to it.\"\n\nShe didn't say anything at first, just started tickling me. I finally managed to grab both of Jessie's hands to stop her assault on the ticklish parts of my body. We were both laughing.\n\n\"Like I told the girls, you might be a jerk, butthead and dipshit, but you are MY jerk, MY butthead and MY dipshit,\" she said.\n\nI am not sure just who kissed who, but we suddenly were kissing again, only this time it was a very sexy, passionate kiss. I soon had my hands around Jessie's back, pressing her against me.\n\nJessie then surprised me.\n\nWhen we decided to sit and rest, we had walked about 50 or 60 feet from the path over to the oak tree, but were in full view of anyone walking by. There actually hadn't been that many people walking along the path, but every 10 minutes or so we would see someone.\n\nJessie grabbed my hand from her back and put it inside her low-cut dress. As I began squeezing her breast Jessie began moaning.\n\nBy the time we finally broke that kiss, we were both breathing hard, and I could see the hunger and desire in Jessie's eyes. I knew it probably mirrored my own.\n\n\"I thought . . . I thought,\" I gasped, \"you said we have to be strong, and no touching under clothing.\" My hand was still inside her dress, squeezing her breast.\n\n\"If you remember correctly,\" Jessie answered, \"I wrote that YOU have to be strong. I have decided that I am going to do everything I can to drive you absolutely crazy with lust and desire. I plan on trying to seduce you today, Mr. Walker.\"\n\nAs I was about to reply, my stomach beat me to it and growled very loudly.\n\nJessie began giggling.\n\n\"Obviously, you are hungry in more ways than one,\" she said with one of her patented smiles.\n\nI had stopped for a country ham biscuit on the drive to Athens, but that was now (looking at my watch) some nine hours earlier.\n\n\"To tell you the truth, I am starving also,\" said Jessie, \"both for food . . . and you.\"\n\nSince Jessie still had both her legs across my thigh, she had to get up first. What should have been a very simple act probably took her at least a minute, since she seemed to feel the need to keep thrusting her butt right in front of my face.\n\n\"Can you brush . . . my behind . . . off for me,\" she coyly asked.\n\nI brushed some leaves and grass off her beautiful butt, then took my hand and gave her a rather sharp smack!\n\nShe yelped.\n\n\"Why Mr. Walker, suddenly I see a whole new side of you,\" Jessie said, while slowly licking her lips with her tongue.\n\nI just shook my head and stood up. We again hugged and kissed passionately, albeit briefly before walking back to my car. It actually took half an hour to walk back, and by then Jessie's stomach was also growling and we were giggling at each other. Well, Jessie was giggling . . . Marines don't giggle, they laugh.\n\nOne of my friends had told me about an excellent Italian restaurant in Athens, so I drove there where we enjoyed a two-hour lunch. We had barely sat down at a table with Jessie across from me when she slipped off her shoes and immediately stuck both feet into my crotch where she started trying to massage me with her feet! Luckily I found out that she is intensely ticklish on the bottom of her feet. I knew I had to store that little factoid for future reference!\n\nUndaunted, she then sat down beside me where she tried to keep one hand strategically located between my legs. It was all I could do to try to keep her hands above the table for the entire meal.\n\nIt didn't help matters when, after Jessie left to use the bathroom, she returned to tell me she was now \"commando,\" having taken her panties off.\n\nI shook my head and rolled my eyes. After that, she kept trying to grab my hand and put it between her legs.\n\nAfter eating we returned to the car. As I held the door for her, Jessie took an inordinate amount of time getting in, making sure I could see that she was now \"commando.\"\n\n\"Now what?\" Jessie said, and again I could see the desire in her eyes.\n\n\"Girl, you are either going to drive me crazy, or kill me,\" I declared!\n\n\"Actually, I just want to screw your brains out,\" Jessie said with an enticing smile. \"If I drive you crazy . . . well that's just a bonus.\"\n\nI shook my head and tried to act uber-serious and stern, \"What I SHOULD do, Miss Johansson, is turn you over my knee and give you a spanking for the stunts you just pulled in the restaurant.\"\n\nJessie was sitting down on the seat of the Mercedes, but immediately turned around and put her knees on the seat and thrust her bare bottom, sans panties, towards me.\n\n\"Oh, please Mr. Walker, please,\" she cooed, \"like I told you once, I've never tried spanking, but I've read Fifty Shades of Grey.\"\n\nDespite myself, I laughed out loud. Then I gave her a sharp smack on her bare butt. She yelped.\n\n\"I don't care what Dr. Andrews says, you are seriously disturbed,\" I muttered as Jessie joined me in laughter.\n\n\"Maybe I could find an Athens-Clark County police car and borrow a pair of handcuffs to control you,\" I threatened.\n\n\"Oh, handcuffs and bondage,\" Jessie purred. \"If you want to tie me up, we could stop at a Lowe's or Home Depot for some rope.\"\n\nWe both started laughing as Jessie turned back around until she was again seated.\n\n\"God, you are one CRAZY lady, Miss Johansson,\" I said.\n\n\"That's your influence, Mr. Walker,\" she countered.\n\nJessie leaned over towards me, and somehow I met her halfway and we were kissing again.\n\nI was just about to the point where I no longer cared what Dr. Andrews said. I mean there is only so much a normal, 100 percent red-blooded American boy (and ex-Marine) can take.\n\nMy hand began caressing Jessie's inner thighs, with the intent of caressing a lot more when Jessie reached over and stopped my hand.\n\n\"Sam, I want you so much it's almost killing me,\" she said.\n\n\"But since you brought up Dr. Andrews, I keep thinking about what she said. Can we wait for one more week?\" she asked.\n\n\"Jessie, Jessie, Jessie,\" I sighed, \"you really are going to drive me crazy or kill me!\n\n\"Yes Jessie, yes,\" I said, \"we can wait for one more week.\"\n\nJessie promised she would try to control herself for the rest of the day, but only reluctantly agreed to put her panties back on.\n\n\"I like going 'commando' with you around,\" she teased.\n\nWe went to a movie, and, for the most part, Jessie behaved herself. Several times her hand dropped down between my legs and she began rubbing me through my pants.\n\n\"This next week is going to be the longest of my life,\" she complained the third time I made her stop.\n\nAfter the movie we stopped for ice cream, then it was time to take Jessie back to her dorm.\n\nTo tell you the truth, I think both of us were a little afraid of what would happen if I found myself alone with Jessie in her dorm room, so we kissed . . . and kissed . . . and kissed while sitting in my car. Even then, it took considerable will power not to allow anything else to happen.\n\nIn between kisses, I found out that Monday of the following week was a school holiday, so Jessie and I made plans to spend the long weekend together.\n\nOf course little did we know that a killer tornado was going to disrupt everyone's plans for that weekend?"
    ],
    "authorname": "OldSarge69",
    "tags": [
        "usmc",
        "marine corps",
        "soccer",
        "uga",
        "georgia",
        "fireman",
        "veteran",
        "humor",
        "athens",
        "friends"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/jessie-and-the-tornado-ch-04"
}