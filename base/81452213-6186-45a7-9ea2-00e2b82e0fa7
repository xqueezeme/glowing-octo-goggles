{
    "title": "Her Weekend",
    "pages": [
        "Her Weekend.\n\nI enjoy the occasional submission to my wife and recently lived out this scenario.\n\nIt was a Friday and we had the entire weekend to ourselves. All through the day my wife sent me text messages letting me know that this weekend she will take charge and fulfill some of my fantasies. \n\nOne test in particular makes me lose my concentration for the rest of the day. \n\n\"I will restrain you in our living room and completely use you for my pleasure whenever I want.\" \n\nAnother text tells me. \n\n\"Stop by the Love Shack on your way home and pick up the items I have selected, the sales girl will have them waiting for you.\" \n\nNot being able to concentrate any longer, I inform my boss that I have an appointment and head out he door. As I am driving, another text comes in saying. \"Don't forget the lube!\" \n\nI pull into the parking lot of the Love Shack and notice that there seems to be a lot of cars. I walk up to the counter and ask the salesgirl if there is a package behind the counter for me to pick up, she asks my name and after looking under the counter she comes back up and hands me a list. \n\n\"What's this?\" I ask. \n\nYour wife wanted us to have you pick out all of the items instead of us.\" The salesgirl tells me. \n\nI look at the list and it is not that long actually. \n\n\"Here, I'll help.\" The sales girl says and snatches the list from my hand. \n\n\"Sorry, it's part of your wife's deal, look at the bottom of the note.\" She explains and shows me the words written at the bottom in my wife's handwriting. \n\n\"GET HELP FROM SALES STAFF!\" \n\n\"Ok, where do we begin?\" I ask. \n\n\"We'll start out small, follow me.\" \n\nShe leads me over to a wall that has an assortment of toys ranging from butt plugs to anal beads to cock rings. \n\n\"Lets see, the first thing on the list is a butt plug, the one she has picked out has a wireless vibrator in it, you'll love this one! It has a range of 50 feet and the vibrator is quite powerful, your wife can be anywhere in the house and turn it on.\" \n\nShe unceremoniously tosses it in the basket I am carrying.\n\n\"Um, Ok what's next?\" \n\n\"Aah, restraining straps.\" She says rather loudly. \n\nMoving along we come to a shelf with assorted restraint devices. \n\n\"Wwhich one do you think she picked?\" \n\n\"I haven't a clue.\" \n\n\"Your wife must be serious about keeping you in place, these are the same type they use at hospital psych wards, you'll never get free unless she wants you to.\"\n\nAgain, taking them off the shelf and tossing them in the basket. I'm beginning to really feel nervous when the sales girls asks. \"What's next on the list?\" \n\nLooking at the list it says. \"Pick out a dildo for me and one for you, then find a harness they both will fit in, make good choices, we don't want any holes to be disappointed!\" \n\nI relay this to the sales girl and she walks me over to the back wall where dildos of every imaginable size, shape and color are on display. \n\n\"I already know what size and style harness your wife wants so I'll get that while you pick out your dildos.\" \n\nI have to mention that the entire conversation is happening in a normal voice and many of the other customers appear to be eaves dropping. \n\nHaving never picked one out before, I am still looking when the girl returns. Dropping a box into my basket, she tells me that the particular harness she picked can be used by either man or woman and has special features depending on who is wearing it. She explains that it holds the dildo tight for easy use as opposed to others that move around and make it hard to use. \n\nRather loudly she asks, \"Find one you think will fit?\" \n\nI'm not sure I can get much more embarrassed, but this girl is sure trying. \n\n\"I'm not sure what to look for.\" I tell her. \n\nAgain, rather loudly she replies, \"Well it is obvious that one of them is going to be used on you, so what do you think would fit?\" \n\nSeveral people have turned to look, but I try to ignore them. I reach up and pick out a small bullet shaped device, however the salesgirl tells me that won't work in the harness. \n\n\"You need to choose from this wall section here.\" \n\nThe dildos on this wall are extremely life like and much larger than I would have liked. Seeing my hesitation, the salesgirl finally pipes up saying. \n\n\"Look, your wife already picked some out so I'll show you those and you decide which ones you want to buy.\" \n\nWell the choice I had ranged from average to humongous, I settled on an average 6 incher in blue (for me) and a larger eight inch, porn star molded version for my wife. \n\n\"I think we are all done.\" I tell the girl.\n\n\"Almost. We still need lube, and lots of it according to your wife.\" \n\n\"Here we go.\" she says showing me a rack of assorted bottles. \n\n\"Personally, I prefer this stuff.\" She says picking up a very large bottle. \n\n\"This is the favorite of both our male and female customers.\" \n\n\"I'll take it.\" I tell her. \n\nWe head to the counter to pay and as she is ringing everything up she asks me. \"Any idea what's in store for you at home?\" \n\n\"Not a clue.\" \n\n\"Well, from what we heard you should enjoy it, but I know your wife will!\" \n\nShe hands me my bag of purchases and as I leave she yells out. \"Enjoy, I can't wait to hear all the details!\"\n\nEmbarrassed beyond belief, I get in my car and head towards home. When I get in the garage, I notice a note hanging from the door. Getting out of my car and taking the bag with me I stop to read it. \n\n\"Your first task is to remove all of your clothes. Do this then continue reading the rest of the note!\" \n\nI set the bag down and begin to remove my clothes. Once I am completely naked I unfold the rest of the note and read on.\n\n\"Get the lube out of the bag and apply some to your asshole, I want it greased up and ready. Next take out the butt plug, turn on the switch and insert it. Once this is done knock on the door ONE time.\" \n\nI place my clothes and the bag with the rest of th eitems on the work bench. I'm hard as a rock in anticipation of things to come. \n\nThe next step is a bit daunting, my wife has fingered my ass several times, but I have never inserted a foreign object. The plug feels huge in my hand, I can only guess how big it will feel in my ass.\n\nDoing as I'm told, I squirt some lube on my fingers and smear some around and into my asshole. I do this several times, I want to be fully greased up for whatever she plans. I grease up the plug and after struggling a little manage to get the plug in place. Although not too large it does have me feeling quite full, the curved end of it sitting rather pleasantly on my prostate. \n\nI knock on the door once as directed and almost immediately, the plug in my ass begins to vibrate, the sensation almost brings me too my knees. I realize how bad I was set up at the store and my wife has already taken the remote control portion of the plug. \n\nThrough the intercom, my wife tells me to enter the house but stand just inside the door. As I open the door and begin to walk the vibrations increase. This time my knees completely buckle and I end up crawling through the door. The vibrations ease a little till they are just a low hum.\n\nOnce inside I notice another note on the floor. This one tells me to take all the purchases into the bedroom except for the restraining devices. I am to leave them in the living room. \n\nI take the box out and place it on the sofa, all through this event the vibrating in my ass goes up and down in strength, making it difficult to function let alone walk. \n\nI am not sure where my wife is watching me from but she seems to know my every move. Once in our bedroom I see another note. \n\nThis one reads, \"Go into the bathroom and clean yourself completely INSIDE and out.\" She had put extra emphasis on the word inside. \n\n\"Then take all of the dildos out of the boxes and take them into the shower with you and wash them with soap and water very thoroughly.\" \n\nOur enema kit was hanging from the shower door in case I had any questions as to what \"inside\" meant. I filled up the bag with warm soapy water and let it do it's thing. Once I have completed my \"inside\" cleaning, I remove the dildos from their packages. \n\nIn my hands they seem much larger than they did in the store, I am definitely having second thoughts. Once the water has warmed up I step in and wash up my body. Almost forgetting her other instruction I step out and grab the dildos. \n\nEven though I know they are fake it still feels wild soaping them up and running my hands over such realistic feeling fake cocks. The way they are formed with real life heads and thick veins, it's almost as if I had a real cock in my hand. My wife had obviously been watching me because she scared the hell out of me when she spoke up. \n\n\"You seem to really be enjoying jacking that cock, and boy does it turn me on to watch you do it.\"\n\nI had been soaping up the larger of the two dildos and I guess I had spent a little too much time with it.\n\n\"Get out and dry off, I have big plans for you tonight.\"\n\nAs she leaves she grabs the black dildo out of my hand saying. \"I'll take this for now, you'll get plenty of time to play with it later. Oh, and put your plug back in before you come out.\" She said just before closing the door. \n\nI grease up my hole as much as possible and after a little struggling I get the plug to slip in, again, the curved head is doing magical things to my prostate.\n\nWhen I come out of the bathroom and into our bedroom I am greeted by a sight to behold, the only thing she is wearing is a smile, it is obvious she is excited, her beautiful breasts are flushed and her nipples are standing very erect. \n\nAs I am drying off she reminds me that she already has the butt plug remote by turning it on full blast. Again this drops me to my knees. \n\n\"Ooh, I like that. On your knees already!\"\n\nShe slowly lowers the speed until it turns off. As I start to get up she hits it full blast again saying, \"Oh no, I like you down there, remember, you wanted to be my servant, and servants should always be on their knees.\"\n\nAs I mentioned earlier, the plug is resting squarely on my prostate and all the vibration not only has my cock hard as a rock, but pre-cum is practically running out of the tip. \n\n\"Follow me, and bring the toys.\" She says and turns and walks out the door.\n\nThankful for carpet I follow her on my hands and knees. It is very difficult to crawl with the dildos in my hands and she notices this. \n\n\"Here, let me help you, she then takes both dildos from me and starts to walk out the door.\n\nTurning around, she comes right back saying. \"I have a better way for you to carry these, open your mouth.\"\n\nWhen I hesitate, she maxes out the vibrator and when I open my mouth to moan, she shoves the smaller blue dildo in. \n\n\"Keep it there and don't let it fall.\" \n\nSilicon or what ever it is made of is actually quite heavy and the only way to keep this thing in my mouth is to suck on it. I make a few slurping sounds doing so and my wife notices. \n\n\"You are such a slut, making all those noises while sucking that cock, I only wish I had a real one to feed you!\" \n\nWalking down stairs on hands and knees is difficult on its own let alone having a powerful vibrator in your ass and a dildo in your mouth.\n\nI eventually make it down stairs and into the living room where my wife has taken a seat on the couch with a glass of wine in her hand. She is idly running the black dildo across her cheek watching the TV.\n\nAs I enter I see what has her attention, there is a porn movie on the screen and two well endowed men are giving a busty blonde all she can handle.\n\n\"Come here.\"\n\nWhen I crawl over she takes the dildo from my mouth leaving a trail of slobber as it goes. \n\n\"Mouth watering good huh?\" she teases. \n\n\"Massage my feet while I watch the movie.\"\n\nI sit on the floor in front of her Indian style and grab her left foot. As I begin to rub she takes her other foot and slides it up and down my hard-on. \n\nI cannot see the action on the TV but from the sounds I hear it is quite hot. My wife has slowly started to run her hand across her breasts, slowly caressing her nipples, occasionally pulling them and rolling them between her fingers. She then spreads her thighs, when they open fully I can see her shaved pussy and it is glistening with wetness. \n\nShe takes her free hand and slowly descends it towards her slippery slit. Once there she slides a finger between her lips and dips it into her hole. When she pulls her finger out it is dripping with her excitement. She offers it to me and I gladly it lick clean.\n\nMy wife brings herself off rather quickly, and informs me. \"I had so many orgasms while waiting for you to get home. I'm ready for the main event.\"\n\n\"Go lie over the ottoman.\" \n\nThis is when I realize what she needed the restraining straps for. Sticking out from under the ottoman are both wrist and ankle straps and a wider strap I am not sure what it is for As I lie down, she takes the wrist straps and secures them around my wrists. When she pulls them snug I am completely unable to move, my chest is pulled flat on the cushion and it leaves my ass slightly in the air. \n\n\"Wow, I won't need the ankle straps at all.\"\n\n\"But this one will help hold you in place.\" She adds as she secures a strap around the ottoman and over my lower back. \n\nShe is absolutely correct, there is no way I could move even if I wanted to. I am however able to move my hips and as my cock is also flat on the cushion I begin to slide back and forth hoping to generate some friction for my ever hard cock. She notices this and reaches under me and pulls my cock out so it is simply pointing straight down the end of the ottoman, taking away any hopes of me achieving an easy orgasm. \n\nShe sets the plug in my ass to full power, and just to be cruel places the remote control on the cushion in front of my face. \n\n\"I'll be right back, I have to get ready for the rest of our fun.\"\n\nAfter a few minutes the vibrating plug in my ass in really working on me and has my cock rock hard, it is also causing my hips to buck and shake involuntarily. My wife notices this when she returns and says. \n\n\"Wow, I knew your ass was hungry, but I never knew how much. Don't worry though, when I'm done you will have had your fill of cock in your ass, or then again maybe you'll want more. We'll just see what happens. I can guarantee you this, my cock won't ever go soft so I'm going keep fucking you until I get tired!\"\n\nAt his point she walks in front of me and I can see that she has slipped on the harness, but has not put one of the dildos in it yet. This is an incredibly sexy sight, my wife naked except for a black leather harness. \n\n\"Did you know that there is a small dildo inside this for me? It is just the right size, curls in nicely to hit my g-spot and has little nubs that sit perfectly on my clit, just walking has me ready to come again, I can't imagine how it will feel once I start fucking you!\" \n\nShe draws my attention to matters at hand by showing me the two new dildos. \n\n\"Ok, you bought two dildos today, one for me and one for you, now pick carefully, which one is for me and which one is for you?\"\n\n\"The blue one is for me.\" \n\n\"Are you sure, this is your last chance to change your mind.\" \n\n\"I'm sure, I picked the smaller blue one for me.\"\n\n\"Ok then, it's your ass.\" \n\n\"Wait, what do you mean by that?\" \n\n\"Well, this little blue one is for you to use on me so that means that you got this big black one for me to use on you!\" \n\n\"No that is not what I meant, that one is way to big.\" I plead. \n\n\"Oh I'll bet we can make it fit honey, we just need some practice and lots of lubricant. But I'll tell you what, since you are a virgin back there I'll take it easy on you, at least to begin with.\" \n\nWith that she sets down the larger of the two dildos and unsnaps the ring and inserts the blue dildo into the harness. Once she has it firmly in place she gives it a pull to make sure it won't come loose. Watching her lewdly tug on a cock, real or not, is strangely erotic. She notices my stare and begins to stroke it just as she has watched me do on many occasions. \n\n\"I feel so powerful with this thing on, no wonder men are always playing with themselves. I would too if I had one if these in my pants. Now before we get to the main event, there are a few other things I want to do.\" \n\nShe then kneels in front of me. The ottoman is at the perfect height and my face is right at her crotch. \n\n\"I want to know what the attraction is to face fuck someone; you seem to really get off doing it to me, so now it's my turn, open wide bitch!\" \n\nI try to turn away, but she grabs my hair and holds my face right in front of her rubber appendage. Holding my head steady she moves her hips around causing the head of the dildo rub across my lips. \n\nEventually I open my mouth. \n\n\"There you go, that wasn't so bad was it? You do it to me all the time, I think turn about is fair play don't you?\" \n\nMy mouth is full I can only nod. Slowly she pushes more and more into my mouth, until my nose is resting against the leather panty holding the dildo. \n\nShe grinds her hips against my face and gives a little shudder. \n\n\"Oh shit, between seeing you swallowing a cock and that cock on the inside I'm about to cum.\" \n\nI try to bob my head a little hoping if I make her cum she will end her assault on my mouth, however, in the position I am in I cannot move very much. She has other ideas anyway, sliding the cock almost out of my mouth and when only the head is left in she tells me to lick all around. I do as she says and try my best. \n\n\"We'll have to work on that.\"\n\nReturning both her hands to my hair she grabs a handful and begins a slow push back into my mouth. This time when she hits bottom, she pulls out rather rapidly and promptly begins to fuck my face as promised. The whole time she is watching her cock slip between my lips she is saying.\n\n\"Fuck that's hot, now I see why you like it. If it feels as good as it looks from this vantage point I understand why you like it.\"\n\n\"I still think I need to get you a real cock to swallow!\" \n\nHer hips are bucking erratically as she drives the cock in my face and I know she is fast approaching another orgasm. With one last thrust she begins to cum, almost violently shoving the fake cock down my throat.\n\nFalling back on the floor, pulling her cock from my mouth she takes it in her hands and jams it against her cunt forcing the internal dildo deeper into her slit. She looks as if she is jacking off a real cock as she is doing this. When at last her orgasm begins to subside she lets go of the dildo, but continues to tremble as the last of her orgasm runs through her body. \n\n\"Oh fuck that was good, I need a minute to relax, but as good as that felt I'll bet it will feel even better when I fuck your ass!\"\n\nI am extremely hard this whole time, but the position I am in offers no relief. After a few minutes she has recuperated enough to stand.\n\nWalking around behind me she makes some lewd comments about how perfect my ass looks for fucking. While back the there, she traces her finger along my crack, stopping to slowly tap the plug in my ass. \n\nThis causes me to jump, although I cannot move very far. She continues her tease down towards my balls; taking them into her hand she gently massages them rolling them between her fingers. \n\n\"Oohh they feel so full, I'll bet you have a big load of come in here for me.\"\n\nLetting them slip from her grasp, she slowly encircles my hard shaft, her hand feels wonderful, and again I try to buck my hips, hoping to gain any friction I can. \n\n\"Aren't you the horny one, save that thought, we'll put this to use later.\" She says giving my cock one last squeeze before letting go. \n\n\"You are leaking quite a bit, we can't have you staining the carpet.\" ",
        "She reaches over and picks up her wine glass, empties it in one gulp, and then places the head of my cock in the opening telling me.\n\n\"Let's see how full we can make it, I wonder if I can fuck you until you can't cum any more?\"\n\nWalking back in front of me she grabs the bottle of lubricant and liberally pours some on the dildo, stroking it as if it were real. She can see the fear in my eyes as I realize the point of no return is here. \n\n\"Don't worry, I'll be gentle on you, I don't want the first time to be the last, I plan on this becoming a regular part of our lifestyle.\" Wagging her hips in front of me to further the point. \n\nShe then walks behind me. \n\n\"Please use lots of lube so it won't hurt.\"\n\n\"Don't worry babe, you bought the big bottle so I'll use plenty.\" \n\nWith out warning I feel her grab the plug and begin to pull it out of my ass. Stopping part way out she pushes it back in fucking me with it. She wiggles it around and I buck my hips as it dances across my p-spot. \n\n\"OOOH, your ass is hungry, well, let's not keep it waiting any longer.\"\n\nShe fully removes the plug with and audible pop and sets it on the end table.\n\nI feel the cold gel fall between my ass cheeks, however her hands quickly begin to warm it up. As she applied it to my asshole I could feel her finger working it's way into me. \n\n\"You are quite gaped open, I can get lots of lube in there\" \n\nI can practically feel it running into me. Soon she has her finger buried all the way up my ass and began moving it in and out like a thin cock. Just as I was starting to get used to the feeling, she added a second finger, leaned forward and told me to let her know if it hurt at all and she would quit. \n\nIt did hurt a bit at first, but it also felt so good that there was no way I was going to tell her to quit! As my sphincter got used to the fingers stretching it, she began moving them in and out, fucking my ass with them. Once I had fully adjusted to two fingers, I felt a third begin its entry. I wasn't sure if I could take all three, but she took it slow and easy, and soon my ass was stuffed with her fingers. She is constantly adding more lube with each finger, so things are nice and slick now. \n\nThe feeling was incredible. She tried to add a fourth finger but could only get them in part way without it hurting more than the pleasure it was giving me. She pulled everything leaving me with a throbbing cock and a well lubed ass.\n\nWithout warning I felt the end of something pressing up against my ass. As it slowly entered me, I realized it was the dildo attached to her waist. Thinking of the size and shape of it, I wondered how much of it I could take, just as quickly realized I was going to find out. \n\nSimilar to when she used her fingers, she slowly worked the dildo into my ass going in a bit farther with each stroke. It felt much softer than her fingers had, once she felt me relax she'd push in a little further. \n\nSlowly she impales me on her cock until I can feel her rubber balls touch mine. When she begins to pull back out the feeling is incredible, her angle and the dildo are perfectly matched to my prostate and as it slides across I can feel myself harden even more. She pulls all the way out of me saying she likes how it looks as it stretches me. Slowly she pushes back in, however this time I feel a little more urgency in her motion.\n\nAs the speed of her thrusts increased, so did my pleasure, she asked if she could go faster, and in response, I bucked my hips back into her. \n\nSoon she was fucking my ass just as hard as I usually fucked her when we made love - and it felt great! All this time she is telling me how good it feels and how she never wants to stop. \n\nMumbling things like. \n\n\"I'm pile driving your ass!\" And. \"I could do this forever!\"\n\nSuddenly she changed tactics, pulling it all the way out and then putting just the head in and ou. I could feel my sphincter expand and contract with each stroke. \n\nWhen she cannot take her own teasing she says. \n\n\"Hold, on, I'm going to fuck you till I cum again.\" \n\nDriving all the way in she begins a rapid and hard pistoning motion grabbing my hips for support. \n\nLeaning forward, I feel her hard nipple scrape across my back. Having a cock in my ass rubbing my sensitive prostate, her tits on my back and the overall image of what this must look like I announce to her that I am about to cum. \n\n\"Me too, wait for me.\"\n\nToo late, on her next outward stroke I explode, it feel as if my whole cock will rip from my body with the force of the spunk shooting from my cock. I know it is splashing into the wine glass encasing my cock.\n\nShe doesn't stop driving into me and her frenzied thrusts continue to coax more and more sperm from my balls. I hear her familiar whimper signaling that she is close as her thrusts become jerkier and I realize she is there. \n\nWith a shriek she drives balls deep. Her hips are spasmodically bucking against my backside while she rides out her orgasm. \n\nWhen at last she is satiated, she collapses on my back breathing deeply. This rest period does not last for long though as she slowly begins to rotate her hips causing the dildo massage my inner passage again. Positioned perfectly against my prostate, my cock again engorges with the stimulation, it also causes me moan out loud. \n\n\"You like that huh?\" \n\n\"It does not feel at all like what I expected, I thought there would be more pain and less pleasure, but, yeah, I have to admit, I liked it.\"\n\n\"Well by the looks of how much cum is in the glass under your cock you really enjoyed it, I wonder how much more we can get in there?\" \n\nBeginning her thrusting movements again she says. \n\n\"I'm glad you liked it because that is one of the best orgasms I have ever had and I want more.\" \n\nShe emphasized this by driving into me with force. \n\n\"Don't forget, I will never go soft so we can keep this as long as I want, especially since you can't move.\" \n\nShe is slowly pulling all the way out and slowly pushing back in while she is talking to me. \n\n\"Ooh Bill you should see how your ass stretches around this dildo, I can't wait to see what it looks like with the bigger one you picked for you.\" \n\n\"It's too big\" I try to say, but she silences by starting a rapid fire assault on my ass.\n\nGrabbing my hips for leverage she's like a madwoman shrieking and moaning that she can't stop coming. The friction has me on the verge again and when she realizes this she abruptly stops and pulls completely out leaving my ass bucking against the air.\n\n\"I'll be right back.\" she says and without warning pulls completely out of me and walks away. \n\n\"Where are you going? I was so close!\"\n\n\"Oh, me too! But I need to stretch my legs. You know, while I'm up I think I'll swap out dildos. As easy as your ass took that blue one I'll bet it will have no problem taking this black one.\"\n\nWaving it in front of me for added effect.\n\n\"No, I don't think I'll ever be ready for that one!\"\n\n\"Oh nonsense, you didn't think this one would fit earlier.\"\n\n\"Besides, just like last time, I'll be gentle and you can tell me to stop at any time, not that I will, but you can ask.\" \n\n\"Just remember, this was your idea. In the beginning I was not real big on the idea, but now that I have fucked you once and it felt soooo good, I plan on doing it again and again, especially since I can make you cum in the process!\"\n\nUnsnapping the harness, she pulls the blue dildo out and begins to insert the larger black one. I know it is for affect that she is doing it in front of me, and it is working. \n\nI am following her every move wondering what I got myself into. She must have sensed my thoughts, because as she was snapping the holder tight she reminds me of her promise to be gentle, at least until I am comfortable enough for her to pound away.\n\n\"OK, just like last time I have got to see this between your lips so open up and say aah.\" \n\nShe gets on her knees and slowly moves towards my face with this massive black cock. Up close it looks even bigger than when I held it in the shower. I try to back away, but the restraints are tight as ever, and they hold me in-place. \n\nKnowing I have no place to go I submit and open my mouth. \n\n\"That's a good slut, I knew you'd be easy.\"\n\nJust the bulbous head fills my mouth and bloats my cheeks, but she is not satisfied and continues to push further in until she hits my throat and causes me to gag. Pulling back out a little she leaves the head in my mouth and explains to me how we will have to work on my deep throating so I will be able to swallow all of her just like she does to me.\n\n\"OK, enough playing, I want to see this in your ass!\"\n\nShe pulls out of my mouth with a pop, and walks on her knees around to my exposed backside. \n\n\"Please be gentle!\" \n\n\"Oh I will, don't worry, I don't want to scare you away from my new found fun and games. I am so glad you asked for this, I just wish we would have tried this sooner.\"\n\nI hear her squeeze out more lube and again she is inserting two fingers into my ass. She does this two or three times explaining that the girls at the store told her to be sure to keep plenty of lube inside as well as on the toys.\n\n\"That should be enough inside, now for the outside, if I didn't think you'd run, I'd let you go so you could lube up this cock, I would love to see your hands wrapped around this again, it really turned me on watching you in the shower soaping this up.\" \n\n\"Like I said, maybe I'll have to look for a real cock for us to play with, I think I would cum just from watching you and another guy together, I wouldn't even have to touch myself!\" \n\n\"Ok enough talk, you ready?\" \n\n\"Ready as I'll ever be I guess.\"\n\n\"That's the spirit.\" \n\nSoon I feel her rubber head poking at my backside and brace myself for the pain. She pushes a little harder, after a split second of pain she informs me that the head is in and to relax and loosen up. \n\nShe is rubbing her hands along my ass cheeks and it is feeling really good. As she is massaging my cheeks she is steadily applying inward pressure. Every so often pulling out just a little bit before beginning her inward drive. \n\nIf I thought I was stretched before I was wrong.\n\nShe informs me that she is half way in and continues to pushes further. I cannot believe how full I am feeling and how good it actually feels. Each minor movement is like a mini orgasm as the dildo pushes hard on my prostate. With one last push she informs me that she has all eight inches inside me, and I can feel her hot skin against my ass as she makes short twitching movements causing electric shocks to move through my ass.\n\n\"I didn't think it would all fit either, you're a real ass slut.\"\n\nGiving my ass a playful slap she says. \n\n\"You ready? Ready for me to start fucking you?\"\n\n\"I think so, just take it easy in the beginning.\"\n\n\"Don't worry, I will.\"\n\nAs she starts to pull back out she explains how sexy she feels fucking my ass. About halfway out she stops and asks. \n\n\"Oh my gosh, did you come again?\" \n\n\"Not yet, but every movement has me on the edge, why?\" \n\n\"The glass has about an inch and a half of cum in it, we must be really milking your prostate, lets see if we can drain these.\" She says while fondling my heavy balls.\n\nSlowly she begins to pull out again and tells me that there is a steady stream of fluid pouring out of my cock as she moves, it only stops when she stops moving. \n\n\"I'll bet we can fill it all the way up before I let you loose, I'm sure going to try anyway.\" \n\nPulling out more she only stops long enough to change direction, beginning an inward assault again. \n\nShe does this slow in and out several times commenting on how the semen is just a steady flow into the glass. After bottoming out a final time, she begins to steadily pick up speed until she is driving into my ass like a porn star.\n\nIt feels better than I could have ever expected and I am bucking my hips back to match her every thrust. She is moaning and grunting telling me how good it feels and how she is going to cum any minute. I can tell she is almost there when she begins to take short choppy thrusts until finally, she drives all the way in and begins to shudder causing the dildo to vibrate inside me. \n\nAll of her movements have me just at the verge of an orgasm, but this last bit sent me over the edge as well and with a scream I let loose what felt like torrents of cum into the glass.\n\nI am spent, and the only thing keeping me on the ottoman are the restraints. Otherwise I'd be a puddle on the floor. Desy on the other hand is just catching her second wind, she's laying across my back breathing deeply but still making little choppy thrusts with her hips trying to get every little bit out of her last orgasm. \n\n\"Oh my gosh, I can't stop Bill, are you ok?\"\n\n\"My ass will never be the same, but I feel like that last orgasm started in my toes. It feels like my balls are drained, but at the same time it feels incredible\"\n\nI feel her reach down and gently cradle my nuts. \n\n\"They still feel full, let's see what we can do about that.\"\n\n\"You know what else?\" \n\n\"What?\"\n\n\"This is the best ab workout ever, so not only are you going to get this more often because of the great orgasms, I'm going to develop 6-pack abs to boot.\" \n\n\"Glad I can help.\" I retort sarcastically. \n\nShe has obviously regained her breath as she is no longer leaning on me. She is now fully long dicking me with her 8-inch life like cock. Being stretched as I am and her cock dragging across my prostate with her slow in and out movements is like a pump filling the glass a little more with every in and out stroke. \n\nShe is steadily watching the glass and giving me a running commentary. \"We've got about two inches now, I'll tell you what, two more orgasms for me and we'll call it a night.\"\n\n\"I can't wait.\"\n\n\"Don't be like that.\" Then adds. \"Hang on, here it comes.\" \n\nGrabbing on to the restraint around my waist for extra leverage she picks up the pace and really begins an assault on my ass. She's grunting with every thrust, her words coming out in stuttered sentences. \n\n\"All....most....there...going...to...big.\"\n\n\"Take...my...cock...you...slut.\" \n\nShe is now sliding fully in and out on every thrust, and truth be told I am thoroughly loving the feeling of both submission and the cock in my ass working my prostate into a frenzy. I decide to join her in the dirty talk. \n\n\"Fuck my ass, make me cum like the dirty slut I am. I love your cock in my ass, I don't ever want you to stop fucking me.\"\n\nHer last inward thrust was the last straw for me, and I unloaded another blast of cum into the wine glass. It was a whole body orgasm for me and as she kept pacing toward her own orgasm, I was basically vibrating underneath her. \n\nSeeing me orgasm and feeling my ass clamp down on the dildo caused it to rub harder against her clitoris sending her over the edge. \n\nAll I heard was \"Fuck, fuck, fuck, fuuuuuuuuuccccckkkkkk.\"\n\nThis must have been a doosy for her, because she fell back, unceremoniously pulling her dick from my ass. \n\n\"I can't take anymore, I know I said two more orgasms, but that last one was worth at least two.\" \n\nGetting up on her knees, she shuffles over behind me. \n\n\"Uh, oh.\" she says.\n\n\"What?\" \n\n\"Your ass is quite open, hopefully it won't take too long to close.\"\n\n\"Just kidding, it's almost there.\" \n\nShe is gently rubbing her hands over my buttocks and around my abused hole. It actually feels nice after everything it has just been through. She continues down until she contacts my balls, taking them in her hands she asks me. \n\n\"Anything left in these? They are definitely lighter than when we started.\" \n\n\"I'm not sure, but I don't want to try and find out tonight.\"\n\nI can feel my cock still in the wine glass, but it has definitely gone soft. Leaning in, I feel Desy's hot breath on my balls and then her tongue gently lick them. \n\n\"Well now, what are we going to do with this?\" she asks as I feel her lift the glass away from my withered cock. Moving up to my face she holds the glass in front of her showing me the contents. \n\nThe pearly liquid is thick and sticking to the sides as she swirls it around. Grabbing a towel she had laying on the couch she wipes down the cock sticking from her waist. With a glint in her eye she looks at me and says. \n\n\"Ready for one more task?\" \n\nI know where this is going, She loves to have me eat her creampies and lick up my come from any other imaginative place she can think of. \n\n\"That's a lot.\"\n\nThinking she is going to have me drink from the glass I ask her to let me go so I can sit up and not choke. \n\n\"Oh, you don't need to sit up the way I am going to feed it to you.\" \n\nShe then takes the dildo and places at my lips, and tilts to the wine glass and pours some of cum onto the strap-on cock. \n\n\"I want to see you slurp your cum from my cock, Please!\"\n\nI have never minded the taste of my cum, so without hesitation, I open my mouth and accept her appendage onto my tongue. She squeals in delight as I do this. Tilting the glass a little more allowing it to run down the shaft. \n\nI only have the head in my mouth, so it easily runs into my mouth and across my chin. She pushes in until I gag, then pulls back out and then pours more across her black cock. The color contrast is crazy, the pearl white rivulets running down the black appendage is actually turning me on and I try and lean forward and slurp it into my mouth. \n\nSeeing this, my wife comments. \n\n\"Wow, we really do need to find you a real cock to play with, you cum hungry little slut!\" \n\n\"Mmmhhmmm.\" Is all I can mumble. \n\nThere is a steady stream now running across her cock into my mouth and I am swallowing as fast as I can, but some still spills across my lips. \n\n\"Oh my gosh, I thought I was done for the night but I need you to do one more thing for me.\" \n\n\"Anything after the fucking you just gave me.\"\n\nQuickly, she fumbles with the straps holding me in place and sets me free. \n\nGrabbing the wine glass she hops up on the couch and says. \"Blow me.\"\n\nBeing bent over and having your ass pounded makes you a bit stiff, but I quickly work the kinks out and crawl between my her legs. I grab hold of the dildo forgetting for a second that part of it is inside her and rubbing her clit. \n\n\"Oh, Fuck, jack me off, I'm going to come again.\"\n\nGrabbing her tool with both hands I begin a feverish jacking motion. I can see her begin to tense up when she takes the wine glass and pours out of the last of my cum from the glass over her cock head, I greedily engulf her cock and try to get as much cum as possible, swiping my tongue around my lips trying to get what leaked out. \n\nStill jacking it off, and seeing my mouth full of her cock did the trick. She came like a banshee, bucking her hips and grabbing my head and pushing further into my mouth. She finally pushes me away mumbling no more, please no more.\n\nI crawl up on the couch beside her siting down gingerly and snuggle in close. \n\n\"I was really apprehensive about this at first, but that is some of the best sex I have ever had.\" I tell her. \n\nI slowly reach down and grab her dildo, gently stroking it. \"No, please I am so sensitive, I've never came so hard or so much. But I can tell you, this isn't the last time we will do this, but next time I want you free so I can have you on your back and fuck you face to face and maybe even have you ride me for once.\" \n\n\"I'll need a couple days to let things go back to normal.\" Patting my back side. \n\n\"You never give my pussy a rest why should your ass be any different?\"\n\n\"I'll bet you didn't take king dong in you the first time did you?\" I say grabbing it and shaking it. \n\n\"You have point there.\" She giggles.\n\n\"Help me get this thing off then we'll go to bed.\" \n\nI help her with the straps and as she is pulling the inner dildo out of her pussy, she shudders in one last little orgasm. ",
        "Leaving everything lay around, she says, \"We'll clean up tomorrow.\" \n\nAnd we head off to bed.\n\n \n"
    ],
    "authorname": "FatWillySTL",
    "tags": [
        "bondage",
        "cum eating",
        "strapon"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/her-weekend"
}