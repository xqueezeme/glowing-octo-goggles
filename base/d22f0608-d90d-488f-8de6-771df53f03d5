{
    "title": "Hypergeniture Bk. 01 Pt. 03",
    "pages": [
        "BOOK ONE \u2022 PART THREE\n\nAuthor's Note: Thank you to everyone who has engaged with this story already! Your comments, feedback, favourites and ratings are wonderful and most welcome. Please enjoy this next part and leave a 5-star rating if you are so inclined, and let me know what you think through the feedback portal on my page, or in the comments.\n\nI'm always open to hearing your input!\n\nAll sexual activity is between characters that are 18 or older. This is a work of fiction and any resemblance to real persons, places or events is purely coincidental. The below is not intended to serve as a template for real life sexual encounters or relationships, nor should it be regarded as such. Stay safe, happy and healthy! :-)\n\n----------------------------------------\n\n25 \u2022 Meanwhile...\n\n\"Kissed? Like, on the lips?\"\n\nElle nodded vigorously, confirming her twin's wildest dreams. Tecla couldn't believe the impossibility of it all, but her sister wouldn't lie. \"So, are you two going to do it again? The kissing and stuff?\"\n\nElle shook her head and Tecla's shoulder's sagged. She'd been holding out hope for her two siblings, but Elle's body-language seemed to close off any chance of a rekindling. Yet, the record was soon corrected as one sister offered the other a plan...\n\n\"I don't want to be doing stuff that excludes you, Tec. It has to be the three of us.\"\n\nTecla's eyes stretched as green-grey irises flared with something close to a shade of red. \"Like, threesomes and stuff? Jeez, sis... I don't want to be mean, but I don't think about you in that way.\"\n\n\"Don't be a loser, Tec! Obviously, you and I won't be doing stuff with each other. That would be gross, right?\"\n\nTecla nodded, her cheeks glowing red as her thoughts synced up with her twin. \"So, we'd do stuff with Olly but never with each other?\"\n\n\"Kinda... I mean, there's nothing wrong with being in the same room, is there? Like, I'd want to at least see everything,\" Elle confessed. \"Think about it, Tec. If we can't share, it won't work. It's either both of us with him, or someone will feel left out and get hurt. We're sisters, and that means we have to do this together... In any case, I've already told Olly you're with me on this.\"\n\nThe sweet smile that accompanied the last words was equal parts disarming and daring. Together, it made for an irresistible cocktail.\n\nTypically the shy one, Elle had taken command of the situation. For once, the cool, calm, edgy and rebellious Tecla was out of her comfort zone and feeling like a normie. She took a deep breath as her sister held on to her hands and squeezed. It all made perfect sense, in a weird kind of way, but she didn't need rational arguments. Deep down, she knew she would've done the same things as her sister did in Cape Town if their roles had been reversed. She loved her brother in that way and anyone with eyes could've guessed it... It wasn't a pervy thing, mind you -- it was the way she felt in her heart. After all, what's a good big brother if not a boyfriend you aren't allowed to kiss? Or, a husband you're not allowed to honeymoon with?\n\nOkay, maybe that's a fucked up way of looking at it. Still, Tec could forgive herself for being a little fucked up. She had thought about all this stuff before and the hesitation was more a show for her sister's sake. The truth was simple and she knew what she wanted.\n\nAs their twin-connection communicated wordless accord, the sister's embraced. They'd made a massive decision with big implications, yet there wasn't a shred of doubt in their hearts. Releasing their hug, one told the other how excited she was to see their brother again. The other agreed and they giggled happily at the prospect of daring new experiences -- naughty, innocent, love-soaked... All the best things be it with a taste of sugar or spice.\n\nAn intrusion interrupted their joy as the girls turned to face a visitor. \"Oh, Natasha,\" Elle rolled her eyes, still unimpressed with the 'other woman'.\n\n\"Cuz!\" Tecla added, far more gregarious. \"Have you settled into the penthouse? It's so big, we've hardly even seen each other!\"\n\nTash seemed to shrink as scrutiny came from two sides. One was cruel and one was kind but they both made her stomach turn. \"I'm comfortable,\" she started, \"but I don't like the security people at this house... They all look at me funny. I think they even went into my room...\"\n\n\u2022 \u2022 \u2022\n\nAlicia opened the encrypted message from her subordinate in Singapore. They'd made an inventory of Natasha Orwell's possessions and found the mystery phone that she used in Cape Town. Well, they found half of it...\n\n<kbd>We discretely laid eyes on the device, minus battery and SIM-card. The back cover was missing and there appear to be scratches on exposed circuitry. This could be an attempt to hinder digital forensics as we close in. If the phone has any special security features, it's not immediately obvious. Data should be easy to recover. Should we confiscate it, ma'am?</kbd>\n\nTapping her finger against the plastic of her laptop, Alicia considered her next move. She was playing chess against an unknown opponent and chess wasn't her game. Right now, her priority was getting her king somewhere safe. Every move mattered; every move gave her enemy a chance to make one of their own. She couldn't waste a single opportunity shuffling pawns.\n\nNatasha Orwell could wait.\n\nAlicia had to turn her attention to the source of the plot against her boss. Her childhood friends -- her 'uncles' -- had been great help. They were always so sweet with her; men of the Cold War who would visit her father to talk of secrets and spies. Gentlemen who came from both sides of her motherland's deep divides to chart a course out of darkness. Those same men who helped her escape her wretched youth now took care to help her with something just as scary.\n\nOne of them wrote to her from London.\n\n<kbd>Everyone knows the Brits are covering up the attempted assassination of your boss. Strangely, no one cares to look into it. Neither East nor West has so much as raised an eyebrow at what happened. Meanwhile, I can't find this old boyfriend of Elizabeth Wharry -- these are just people's memories. Nothing was written. Sorry Allie, I wish I could be more help.</kbd>\n\nAlicia smiled as she saw the use of an old nickname. The absence of answers was almost made up for by the few happy memories of years gone by.\n\nIt seemed the player had made her moves and had to be patient. Something would emerge; something would click into place.\n\nNothing in the world is static. As long as things move, opportunities will arise. That's how Alicia survived and that's how she'd keep Oliver Orwell alive. Alive long enough to figure out why someone would want him dead. Then, she knew what she would have to do... Kill them first.\n\nThe screen of Alicia's laptop died. Low battery.\n\nShe gazed at her reflection on the black screen, noticing her bruises healing faster than expected. Of course they would, she thought. Her body was used to repairing itself after a fight -- she'd done it before, and she could do it again.\n\nClosing her computer and setting aside work, Alicia turned her neck to catch sight of her boss. His head was drooping against the cabin of the private jet; his lips parted slightly as he snored. She thought he looked... Cute. It was a thought that made her smile as she checked her watch and calculated the time until they landed.\n\nWith her happy expression fading to neutral professionalism, Alicia made her way to Skylar. The blonde was sitting alone, listening to music. She removed her earphones as her boss approached. \"Ma'am?\"\n\n\"I want him to feel comfortable in Singapore... Keep security front of mind but let him have time alone with his family.\"\n\nThe plane shuddered and the pilot asked everyone to put on their seat-belts as Skylar gave Alicia a thumbs up. Soon, all the Orwells would be in one place and the two of them would step back to let their boss remake his family.\n\n26 \u2022 The Little Red Dot\n\nI fell in love with Singapore the second we landed and I looked out the plane's window. Rain danced with humidity to splash life down onto our umbrellas as we disembarked. Then, it was into one of a dozen black automobiles and towards the heart of the city.\n\nThe Mercedes van that carried my immediate entourage was a lounge on wheels. It felt like a private jet with a sanctuary for four passengers, separate from the cabin. It even had little automatic curtains, which Alicia immediately closed.\n\n\"Sorry, sir,\" she excused, \"I know it would be nice to look out, but I'm worried about people looking in.\"\n\nI understood. After what happened in London, I would never resist caution again. \"It's fine. At least we can still hear the rain.\"\n\nTurning my attention to my phone, I read the end-result of the interview I'd attended in Cape Town. It was a glittering article, although it still felt unnerving to read about myself.\n\n<kbd>Oliver Orwell comes across as decisive and promises to bring empathy and calm to his role. The new chairman of Pellinore is much like his predecessor -- the woman who left him a fortune. He is mysterious and carries himself with an aura of power.</kbd>\n\n\"Mysterious? Powerful?\" I chuckled under my breath. I'd never thought of myself as either of those things. It was a relief to see the article was positive, especially after I turned down the journalists' advances.\n\nWhen we were in South Africa, it felt like I was losing my mind. In many ways, I was... But, with Alicia and Skylar by my side, things were getting better. I had a better grip on reality and I felt comfortable proceeding with the bold new direction of my life.\n\nTurning my attention back to the present, I enjoyed the trappings of luxury. The cooled leather of my seat invited me to doze off again as the reality of international travel set in. We'd been in the sky for ages, and crossed several time zones. The luxury of our plane helped soothe the jet-lag a little, but not much.\n\nIn the car, there was only Alicia to keep me company. Watching her as she worked her phone, I couldn't help but see the big sister I never had. As she caught my glancing eyes, she gifted me the subtlest of smiles. Her attention drifted to her nails; her pupils involuntarily shifting back to me. \"The penthouse is incredible,\" she remarked.\n\n\"I've heard it's quite massive.\"\n\n\"And quite beautiful,\" Alicia added.\n\nI shrugged. \"Can something that big be beautiful? Isn't beauty about restraint?\"\n\n\"Restraint is more of a burden, sir. If you really want to create something beautiful, that is.\"\n\n\"Creativity is about making decisions, isn't it? If you take the biggest room and fill it with the most beautiful things, you wouldn't have created a masterpiece. There has to be intention.\"\n\nAlicia agreed, \"Sorry sir, my mind veered from buildings to people... Take the biggest heart you can find and fill it with the most beautiful people? Well, that would be a masterpiece.\"\n\nI felt my lungs stop for a split-second as I processed my companion's words. These were words I could take to mean many things and, in that moment, they meant everything at once. With restraint still on my mind, I felt one last urge to rebut.\n\n\"They say all great art should contain one deliberate mistake, so as not to upset God. Maybe all great people must do the same... Maybe I should take up a vice to avoid wrath and lightning strikes and whatnot.\"\n\n\"A vice other than incest, sir?\" Alicia asked cheekily, and I caught her scold herself for the potential impertinence. \"Well, at least you admit that your life is a great one. Right now, it might not feel that way, but you will change the world. I promise.\"\n\n\"I would like that to be true,\" I confessed. \"At the very least, I'd like to fix my mother and set my sisters up for a perfect future. I'd love to give Tash -- my old best friend -- something too, but right now, she's too mysterious.\"\n\n\"And too dangerous.\"\n\n\"I want to confront her!\" I insisted. \"I want to ask her straight-up if she betrayed me! I want to tell the world we nearly got killed and that someone out there--\"\n\n\"It would be the wrong approach, sir,\" Alicia interjected with supreme calm. \"We need evidence. If we're wrong and you accuse her, she'll never forgive you, and we'll possibly lose important information.\"\n\nI huffed, \"We aren't learning anything new!\"\n\n\"It's still early days. We need to be patient, sir. Let me handle this. Focus on your sisters and on doing right by them.\"\n\nI had to agree; she was right about everything and about what needed to be done. So, silence settled like a warm blanket. Not a linen-wrapped hug, but a sweaty woollen sheet that wad thick and suffocating. It was the beginning of one of the panic attacks I refused to call panic attacks. My body was about to go to war with itself, but a gentle hand from Alicia on my knee soothed it all.\n\nHow did she seem to understand me better than I understood myself?\n\nLooking up, I decided it was time to find out. \"Where did you study, Alicia?\"\n\n\"I got a business degree--\"\n\n\"Where?\" I repeated.\n\nMy companion smirked, knowing she might as well tell me. \"Toronto. I was paid to keep an eye on you; enrolled in the same school. You must've seen me a hundred times, sir. Each time you did, I would look down and try to hide my face, but when we met in London, I could see you recognised me.\"\n\nI exhaled, laughing under my breath, happy to know the truth. \"I knew it! Wow... You must have seen me do some embarrassing stuff back then.\"\n\n\"Like that night you and your friends got kicked out of the karaoke place?\" Alicia giggled. \"Your singing was so bad a pair of guys wanted to beat you up, but I kicked their asses before they could follow you outside.\"\n\nI smiled, remembering the night in vivid detail... Or, as vividly as I could considering how drunk I was.\n\n\"Are you excited to see the twins?\" Alicia pivoted.\n\n\"Very...\"\n\nOur vehicle came to a gentle stop and Alicia removed her hand from my knee before Skylar opened the door. We emerged into a room of stark contrast -- black walls and a bright white floor. Suspended above us, massive panels ensured an equal distribution of intense fluorescent light. Aside from that, we were in a void-like space with nothing but the sleek black doors of a private elevator in front of us.\n\n\"Your personal garage,\" Alicia explained. \"There are five turntables for cars and one for a motorcycle. Ms Wharry only had the yacht and rented her cars, but you might want to fill the spaces, sir.\"\n\nAh, the motorcycle turntable... I imagined Tecla might take more interest in the garage than me. Then again, the day I'd let her get on a motorcycle would be the day I've completely lost my mind. I thought it was far too dangerous, but I also had to remember she was eighteen now. Things had changed.\n\nBoy, had they changed.\n\nAs we got into the elevator, Skylar explained that my sisters were in the building's spa. Our plane was expected to land much later, otherwise they'd have thrown a welcome party. Meanwhile, my mother was in her room while Natasha asked if security could take her out for the day. They allowed it, but only because they wanted to observe what she did.\n\nWe went straight to the top floor. Before leaving me to my own device, Alicia spoke in a hushed tone. \"I thought you'd like to know that your sisters sent a girl to buy them birth control...\"\n\n\"I see...\"\n\n\"Would you like me to go buy you some condoms?\"\n\nI swallowed hard and blushed even harder. A burning blush that set fire to my cheeks and spread all the way down my neck.\n\n\"Condoms? Probably not necessary,\" I remarked. \"I mean, those pills work... Plus, I arranged for their IUDs months ago -- to help with girl stuff.\"\n\n\"Girl stuff?\"\n\n\"You know... Pain and stuff.\"\n\nAlicia's face went pale as she made a realisation. \"Oh my god... You had to deal with all that, didn't you? Your mother didn't help at all.\"\n\n\"I was always their first call. Even their teachers knew it was better to rely on me when I was an ocean away in boarding school. Once or twice, I had to leave math class to take one of those calls when maybe they were sick or did something naughty.\"\n\nTaking a breath, Alicia composed herself. I'm sure there were worse things in the world than a brother who had to help raise his sisters. In fact, I smiled retelling the story; thinking back with a strange fondness for the memories. Still, it hit her hard, but she summoned some resolve and lightened up. \"So, no condoms then, sir?\"\n\nI laughed. \"No, but I am about to go see my mother. So, can I get some body armour and a helmet?\"\n\nAlicia rolled her eyes. I could read her mind: she thought I was silly, and she liked it.\n\n\u2022 \u2022 \u2022\n\nIn 1998, Liz Wharry speculated big-time in a number of Asian markets. All those bets came good and she walked away with her fortune doubled. For a female investor, it was unheard of... Liz Wharry ate 'unheard of' for breakfast and followed with 'impossible' at lunch.\n\nTo celebrate her wins, three Singaporean penthouses were purchased in the same building. The largest occupied the top two floors while the others took up single floors beneath. Wharry merged these to create what was the most desirable urban property on the planet.\n\nNow, it was all mine.\n\nMy bedroom was on the top-floor, painted pristine white with monochrome furniture. Glass walls on two sides gave me remarkable views of one of the world's most impressive skylines. The rain was still dusting the windows, and I enjoyed the serenity of it all. Laying back on the bed, I took in the sights, feeling the warmth of freshly ironed sheets. For the first time, I enjoyed my newfound wealth as anyone would -- I felt totally at peace.\n\nI had people to worry about my problems. People I trusted.\n\nOn the bedside table, the staff had left a book of crosswords. My memory had been fading; my intellect was becoming dull. I blamed the stabbing and all the shocks, twists and turns that life threw at me. After the strange dream I had on that last night in Cape Town, it seemed to be out of my system. Still, I had to keep working on it.\n\nIf I lost my mind, I would lose my family.\n\nRight then, laying in bed, I could close my eyes and sleep for the rest of the day, but I had business to attend to...\n\nSpringing to my feet, I orientated myself and walked in the direction of the wardrobe. Expecting privacy, I started taking off my shirt only to find a pair of maids unpacking my things from the plane. \"Shit! Sorry,\" I apologised frantically. They greeted me politely before returning to their task (not even blushing).\n\nThe constant presence of people was still new. As was the fact that all my staff seemed to suffer from blindness and deafness where anything I said or did was concerned. I was quite sure I could strip down completely and neither of the women would bat an eyelash, but I decided to spare them the discomfort.\n\nHeading in the other direction, I found two bathrooms that mirrored each other. I assumed one was for 'him' and the other was for 'her', but they were very alike. Not sure which was which, I turned left and made my way to the nearest mirror.\n\nI wanted to look alright before seeing my mother. Mostly, I wanted to look healthy so that she didn't worry or become anxious. My beard had been getting a little out of hand and although my dark hair was messy, nothing looked bad. I decided that I was pleased with my appearance, splashing my face with water for good measure.\n\nHeading back to the wardrobe, I found the maids were gone and I could change clothes. Again, I discovered similar but not identical spaces mirroring each other. The one in darker tones was clearly the 'masculine' side.\n\nIt was odd that a home created by a woman who notoriously never dated would have such accommodations.",
        "Alicia was still buying my clothes as we went along, with Elle helping here and there. That meant my selection was limited and conservative. There was nothing flashy or colourful, but a grey t-shirt and some shorts were all I needed for a meeting with my parent.\n\nMy mother's bedroom was on the floor beneath mine, along with four other generous suites. On my way, I peeked into each of the empty rooms, hoping my sisters or cousin might be back early.\n\nThe staff had moved a second bed into one of the bedrooms, so the twins could share. They'd never had separate rooms and with all the trauma of late, they weren't ready to start. Peeking my head through the door, I could clearly see which side belonged to Tecla and which to Elle. The latter's space was spotless, but Tec didn't keep the same kind of discipline. It wasn't messy in a way that was disrespectful to the cleaning staff; more chaotic than dirty.\n\nA faint smell piqued my interest, and I was tempted to go into their room because I knew what I'd find in the bedside table.\n\nTecla smoked when she got stressed and it wasn't a habit I approved of as her parental brother. I smirked, thinking back to the last time I caught her with a pack and threw it away. She offered me all kinds of rewards in exchange for letting her keep the cigarettes. Eventually, she yelled, 'I'll blow you if you let me keep 'em!'\n\nI grounded her for a week because of that remark. Now, it seemed like such an innocent joke from a testy younger sibling, compared to the seriousness of recent events.\n\nMoving through the heart of the penthouse, I took a look through our cousin's door. Unsurprisingly, I found that my security people were doing what I hadn't done to my sisters... They were going through all her drawers and checking under her mattress. I was glad to see Alicia had picked a trio of women for the job because I definitely didn't want some sweaty soldier of fortune digging through Tash's underwear. Ideally, I wouldn't want anyone doing it, but if it had to be done...\n\nProceeding, I made my way to the final set of expensive double doors. They were slightly ajar and I gently pushed them open to reveal more of the plush bedroom. Soft colours popped like sprinkles of joy that gave it a feminine feeling. In perfect harmony with the surroundings, I found my mother. She hadn't spotted me yet; running on a treadmill with earphones blaring the music of John Coltrane.\n\nNow and then, I remembered why her name suited her so well.\n\nEve was an encapsulation of all womanhood and looked like the lady from Eden herself. Like the rest of us, she had dark hair that fell in waves, but she kept hers a little shorter than her daughters'. Her skin was infused with a drop of olive, which was a little sign of maturity that only added to her beauty. Yes, she was beautiful and I used to tell her all the time, but no compliment ever made her smile.\n\n\"Hey, mom!\" I announced myself, trying to be louder than the music in her ears.\n\nMy mother started slowing her run to a walk. Looking at me over her shoulder, she radiated motherly love. It was an incredible look -- a look I wished for all my life, but seldom got.\n\nStepping off the machine, she exhaled deeply and for a second we were measuring each other up. She was happy to see her son alive and the way she strode toward me confirmed it. We hugged as long and as hard as we'd ever hugged before with her recently exercised body feeling warm against me.\n\n\"God, I'm glad you're alive!\"\n\n\"It's good to see you Mom... I tried calling from Cape Town--\"\n\n\"My phone broke,\" my mother interrupted, suddenly with a tinge of hostility.\n\n\"They told me you had trouble--\"\n\n\"What else do they tell you?\"\n\nOur hug came to an abrupt and uncomfortable end. I immediately relied on instinct, making moves to defuse the situation. I moved parallel to my mother and towards the frameless windows that gave a view of the ocean. All the while, she moved in step as if we were fighters in a ring. This was what always happened, no matter how sweet our interactions started.\n\n\"Nice treadmill,\" I remarked, changing the subject. \"Have you been to the gym--\"\n\n\"They brought the treadmill up from the gym. I prefer not to leave my room.\"\n\n\"Okay... That's okay. It sounds like they're taking good care of you. If there's anything you need, you should just ask. We've got money now.\"\n\nMy conflict-avoidance skills were being tested, but the tactics seemed to be working. In the silence of the ceasefire, my mother turned away to get something from her vanity. It was a sheet of paper with writing on both sides. On the page, I found a list of items; each more ludicrous than the last.\n\n\"A list of demands? Mom... Half of this stuff is cosmetic surgery. The last thing you'd ever need was to look even better!\" I chuckled, trying to keep things light.\n\n\"They're watching me,\" my mother declared. I thought madness had finally taken her as she kept rambling, \"The press are all over us. I won't be put in some magazine's list of ugliest or fattest people! I won't have them take pictures of me looking worn-out and old!\"\n\n\"You're forty--\"\n\n\"I won't have it!\" Eve screamed. \"The press are killers who'll do anything to make me look bad. They already say I'm a slut who got pregnant too young and tried to sell her bastard baby to some rich lady!\"\n\nBastard baby... I tried to let those words slide, but there was definitely a lump in my throat after she said them.\n\n\"Who's been publishing these stories?\" I asked. \"We'll push back with lawyers and PR firms and all the media companies we own--\"\n\n\"That's fine for you -- you're protected. But me?! I'm fair game!\"\n\nLater, I would ask Alicia if there was truth to anything my mother said. In the moment, I already knew the answer was no... She was losing it and the list she'd given me was a sad reflection of the fact. Sure, I could give her some things to try soothe her nerves, but others were completely unworkable.\n\n\"You can't have a house of your own,\" I stated, looking at item number three.\n\n\"Why not? Do you expect me to stay with you like a prisoner? Maybe so that your little henchmen can spy on me?\"\n\n\"You can't live on your own, mother... You'd worry us too much,\" I said plainly.\n\nAt this, Eve responded with fury and soon she was chucking pillows my way. One, two, three... All on target and not one of them making me flinch.\n\nShe was apoplectic, \"You think I'll kill myself?!\"\n\n\"I'm worried you'll hurt yourself, yes. Hell, I'm worried you won't eat if you're left to your own devices.\"\n\n\"Fuck off!\"\n\n\"Mom--\"\n\n\"Fuck off, Oliver! Come back once you're ready to give me every last thing on that list!\"\n\nShrugging with no amusement, I took the list and tore it through the middle before dropping it. With that dramatic gesture done, I walked briskly out of Eve's room; not rushing or running, although she was hot on my tail and slammed the door between us with a force that made it feel like the whole building was shaking.\n\nI knew the pattern. She would be over it all in a few hours.\n\nLike a dozen times before, we'd have some reconciliation and I'd suggest therapy. She would refuse and promise that she was just having a 'bad moment.' Then, I would go back to calling her Mom until she became Eve again.\n\nI could respect that my mother wasn't well, but I could also only take so much abuse.\n\nIt affected us all in such a horrible way, and she never took anyone's help. Hell, if she'd been honest and told me about Liz Wharry, I might've been able to rescue her from her depression years ago.\n\nNow?\n\nNow, it was probably too late.\n\nAt the end of the day, I was Eve's child and she was my parent. She was the one with an obligation to take care of me, although it had always been the other way around. In return for being her caregiver -- for being our family's caregiver -- I got cursed at and stuff thrown at me. Yet, however hopeless I may have felt, I would still try to help her a million times more.\n\nAs I took the stairs back up to my room, I called Alicia to ask what could possibly be done for Mom's health. I knew there were no answers, but a son had to keep trying.\n\nA son had to keep trying.\n\n27 \u2022 Twintality\n\nIt seemed impossible to be unhappy in a home as luxurious as the penthouse.\n\nAfter two glorious showers (one hot and one cold), I'd washed away the sores of my encounter with Eve. The pain of my wound was quickly fading as I weened myself of the pills, no doubt helping reduce my mental haze. All that, and the prospect of reuniting with my sisters, made me feel good.\n\nAs night fell, the rain persisted and I waited for dinner and the arrival of the girls. I'd dressed expensively for what promised to be a grand reunion. I never used to care so much about looking good, but now I wanted the twins to see me unlike they'd seen me before. Yes, I wanted them to look at me and I wanted them to want me... Any last doubts about what we were doing seemed to have faded from my subconscious.\n\nI still wanted to doubt, thinking that's what anyone should do in a situation like ours. That doesn't mean I did... I couldn't.\n\nThe evening was cooler, but still humid -- not unpleasant or uncomfortable. The climate touched me softly and I enjoyed the way its warm fingers massaged my skin. A steady electronic beat kept me company as I dared to hope for an evening of... New beginnings.\n\nObserving the city, I saw the palette of the world change as light became the landscape.\n\n\"You always loved the dark,\" a familiar voice remarked.\n\n\"Night-time is about more than darkness, Tec.\"\n\nI turned to face the door and the stunning beauty of the sister I hadn't seen in weeks.\n\nTecla was more beautiful than the dusk outside in a little black dress with a thin matching choker. Her hair was in a high ponytail and skin rejuvenated by a day at the spa. Her tall heels gave her the extra height she needed to meet me as we marched to embrace. With our arms wrapped around each other, we squeezed and hugged and held each other appreciatively -- relieved and reunited.\n\n\"Fuck, I've missed you,\" my sister groaned as I held her slim body against mine. She nuzzled her lips against my shoulder and spoke against my skin, \"Can we never let go?\"\n\n\"Never isn't long enough.\"\n\nI agreed.\n\nWe slowly ended our embrace to hold hands and marvel at the sight of each other -- both alive and well. Then, Tecla twirled away from me and walked to the spot where I'd been looking at the city. Ours was taller than the other buildings and their light cast shadows that did nothing to hide her beauty, only enhance it. \"Elle is on her way and dressed exactly like me... A little show of solidarity between sisters.\"\n\n\"I should be careful then. It would be a tragedy if I confused one sister for the other.\"\n\nTecla grinned. \"Especially since you've started fooling around with one of us.\"\n\nI expected Tec to know everything, but I still blushed. \"The room is quite dark... I'd better be sure where Elle is all the time, so that I don't accidentally kiss you instead.\"\n\n\"Accidentally?\" Tecla pouted. \"Hopefully it won't be an accident.\"\n\n\"Are we really flirting?\"\n\nMy sister didn't answer. She didn't need to... Tecla was sex personified. Foxy. Confident. Charismatic.\n\nWe were flirting and it was nice. It felt good. It made us happy.\n\n\"Our intention isn't to confuse you,\" Elle's voice interrupted. I turned to face her and what I saw bowled me over. She wore the same little black dress. The same tall heels. The same high ponytail. The same thin choker.\n\nTecla picked up where her sister left off. \"We can't get over our twin-mentality. Believe me, we've tried, but we'll always want to share everything. We hope the matching clothes send a... Message.\"\n\nI chuckled under my breath as I looked from one beauty to the next. The girls outshone the skyline outside -- outmatched a city built over decades by genius architects. They were a design from the heavens and more perfect than anything in or outside that room, and I knew I wanted to spend the whole night with them. Sex, or no sex; I wanted to be with them forever.\n\n\"Elle, shut that door and come give me a hug,\" I instructed.\n\nBeaming a smile, my sister nearly tripped over her feet as she excitedly shuffled over to me. I didn't plan on kissing her but the way we embraced made it inevitable and our lips locked together. The presence of Tecla cut it short. We were shocked by how brazen we'd been, but we didn't hold back on the intensity for those few seconds.\n\n\"No fair,\" Tecla teased. \"When do I get kisses with our cuddles?\"\n\nTurning to Tec with Elle still in my arms, I made sure one last time. \"Are you convinced that's something you want? We can't go back when this gets started. If it falls apart, everything falls apart...\"\n\nAgain, Tecla didn't answer with words. The way she edged forward was certain; the brush of her hand against my waist soon followed by the touch of her lips. She kissed harder than her sister, ultra-assured and with a healthy dose of arrogance. She also kept our kiss longer, letting her tongue press ahead, but being denied by her brother.\n\n\"Slow down, my love,\" I said. \"We can take our time.\"\n\nFor a second, we broke our kiss and I asked again if she was sure and again she answered with action. This time, when she pressed for more, I did the same and our tongues met with the least amount of resistance. I felt her fill my mouth, and the resistance as I pushed back. We landed somewhere in the middle, making out deeply with eyes closed and full of goosebumps. When the kiss ended, we were breathless and I could feel both sisters' bodies buzz under the heat of passion.\n\nIt was exciting, arousing, and electrifying. The naughtiness made our hearts race and the romance made our knees weak.\n\nIt all came much easier than I expected. The humidity mixed with the scent of perfume had concocted a special kind of drug. Blood was rushing through my veins and it all sparked one big chemical explosion. We were in a three-way embrace, but the twins kept an invisible barrier between them. They focused on me with a kiss from Elle before one from Tecla, back to Elle, and back to her. We kissed and kissed and kissed.\n\nOur tongues tangled. Our bodies grew warm.\n\nIn a brief moment of respite, Elle put her hand to my cheek and watched me with a beautiful affection. She edged closer, her nose brushing against me as her lips clung to mine. There was no energy behind that moment other than gravity itself. Like nature drew us together -- like it was all as the universe intended. With weight and certainty, her lips made a journey. First, a loving peck on my chin before she went lower to leave a love-bite on my neck.\n\nThe sex-charged touch of my sweet and innocent little sister had lightning intensity. On the other end, Tecla was the devious, foxy and delinquent twin. Her thumb hooked onto my belt and tugged like she wanted to take it off. Slowly, she'd drawn herself closer to us and soon her tongue was meeting mine in our frantic back and forth.\n\nThere were no more rules. We could do whatever we wanted.\n\nUntil then, I thought what we had before was complete and total. That what a brother and sister had came with limits. Yet, I couldn't have been more wrong as new sensations filled gaps I never knew existed. I gripped my sisters where brothers don't touch. They giggled until their giggles grew heavy and womanly. Their softness felt good under the pressure of my fingers; a pressure that built and massaged, making their kisses clumsier and more frantic.\n\nThere was another switch as twin telepathy saw Tecla take her sister's place with her lips against my neck. She was even more sensual and sexual than Elle with her teeth sinking into my neck, then her tongue dragging its way up my throat. Elle was a softer and gentler kisser, taking her time. I went slow with her -- really slow -- teaching her all there was to know about kissing and touching and teasing.\n\nMy cock was swelling in my pants as feminine hands dared to come closer and closer to the stiff shaft. As the moment threatened to explode into unadulterated sex, our bubble burst! A knock on the door saw us panic to recover the veneer of innocence.\n\nLuckily, we were far enough apart as the handle turned and Tash peeked her head through the door. \"Hey, Olly... It's good to see you,\" she smiled without stepping inside. \"Are we still doing dinner?\"\n\nI checked my watch. We were ten minutes late for the meal with our little session lasting far longer than it felt.\n\n\"We'll be straight down,\" I assured.\n\n\"Cool. They went all out for the catering now that you're back.\"\n\nA Tash left the three guilty looking siblings, and as the door closed, relieved laughter broke out and I gripped my knees with eyes stretched wide.\n\n\"That was close!\"\n\nWe were happy not to be caught, but also happy that we'd crossed a barrier. It all made us a little crazy and a little delirious -- and very proud. With the laughter subsiding, we pulled ourselves together and started to head downstairs. On the way, Tec turned to me with a concerned face. \"Are we the other women?\"\n\n\"No, Tash and I tried--\"\n\n\"But she didn't want to commit, and she hurt our brother in the process\" Elle completed.\n\nTecla understood. \"So, she's toxic then?\"\n\nElle confirmed, \"She melted down and now she's radioactive, but with us you'll never have to worry, Olly. We'll never play games with your heart. We're with you forever and for always.\"\n\nTecla agreed and took my hand while her twin did the same on the other side. We were closer than we'd ever been, physically and emotionally.\n\nThere was a lot more of that to come, and we'd become even closer still.\n\n\u2022 \u2022 \u2022\n\nEntering the elevator, Tash pressed for the third floor and I pressed for the fourth. Dinner had been easy-going, although our cousin seemed to be in a world of her own. As we stopped on three, she got out and gave a puzzled look when the twins didn't do the same. \"Aren't you guys going to get some sleep? I'm bloody tired.\"\n\n\"We spent a day at the spa, remember?\" Tecla explained before Elle finished the excuse. \"It's been so long since we've seen, Olly... We're going to have a cup of coffee in the pyjama lounge.\"\n\nTash didn't give much of a response. \"You guys are adorable,\" she mumbled lackadaisically. \"See you tomorrow.\"\n\nWith the elevator doors closed again, we laughed at our naughtiness and deception.\n\nIt didn't feel wrong. Again, I felt as if it should have... As if I should feel bad about it all.\n\nI didn't, I couldn't, and we wouldn't...\n\nLanding on my floor, my sisters took control and grabbed hold of me. \"What about coffee?\" I teased as they pulled me past the espresso machine and through the doors of the bedroom.\n\nClearly, coffee could wait as the three of us tumbled onto the bed, laughing as we jostled for positions. It was joyous and playful -- just a brother and his sisters wrestling and fooling around. The girls were all over me, but I had strength enough to turn the tide until I was the one on top. Not to be outdone, Tecla started tickling my sides and with her sister's help I was soon on my back again.\n\nI squeezed girls' asses, looking for grip, making them hum and grind and -- I swear -- drool with excitement. We went from playful to intense in the blink of an eye, and now I wanted them. We needed each other!\n\n\"Go lock the door, baby-girl,\" I instructed Elle.\n\n\"Yeah, baby-girl,\" Tecla giggled. \"I'll get our brother nice and comfortable while you're at it.\"\n\nOur sister wriggled off the bed. \"You're a big talker, sis,\" she said. \"Especially for a virgin.\"\n\nTecla blushed, but she was too busy humping her hips against my leg to feel any embarrassment. \"Mmm... Takes one to know one. After tonight, we won't be virgins anymore. Right, bro?\"\n\nMy reply was swift and certain as I wrapped an arm around Tecla and threw my weight to roll her onto her back. \"I'm going to be your first? Perfect.\"",
        "\"I saved myself for you,\" my little sister mewled; her words making my cock flex.\n\nMy hands trailed down Tecla's smooth thighs with my head tracking along until I was at the perfect angle. With a little scooch, my sister helped me tuck her dress up to reveal a minimal pair of black panties. \"Fuck, bro,\" she crooned, \"I'm so wet... It's gross.\"\n\n\"Not gross at all,\" I soothed, daring to touch the damp patch of fabric that kept me from her soaking pussy. \"I love seeing you get all wet for me. It makes me feel really special.\"\n\nTec's throat creaked with satisfaction. She was so happy that I was happy and so... Content. She wanted to 'do good' and I knew nothing she could do would be wrong.\n\nElle grabbed me from behind, holding on and kissing my ear. Turning bold as the lights were low and sex was in the air, she even sucked it a little, making me groan my appreciation.\n\nEnjoying the sounds and sensations as her pussy began to tingle more and more, Tecla moaned. \"Mmm... We got waxed today, bro... Nice and bare so you can see our tight little pussies in perfect detail.\"\n\n\"Fuck, Tec,\" Elle breathed, \"you're so damn naughty in the bedroom.\"\n\n\"I am,\" our sister confirmed.\n\nElle reached around to undo my belt and then my pants. \"I want to be first, sis. That okay with you?\"\n\nTecla shook her head, not willing to wait a second longer. Her sister grumbled but she wasn't going to put up a fight. Together, the girls and I worked in the tight space between us to free my erection. Like a curtain that dropped, my cock plunged out of my pants and bounded to its full hard length. Precum was oozing from the tip and my balls were already groaning for release.\n\nI had to be my sisters' first and I had to be their best. Nothing would ever replace the memory of me taking their innocence -- not for me or for them. I wanted it to be perfect and perfect is what it was as I hooked Tecla's panties and pulled them down her legs. Elle was rubbing my back and we both gasped at the incredible sight of our sister's perfect pussy lips.\n\nShe seemed almost impossibly tight; the labia subtle and the slit hardly even visible. My mind was racing.\n\nHow do I do this without hurting her?\n\nI could only be gentle and with my hands under her knees I prompted Tec to spread her legs wider. She followed my lead and opened up, pulling her legs apart and towards herself. Her teeth sank into her lip with so much force she might've pierced the skin, but adrenaline would obscure any pain. She was ready for anything, glancing down at my hard shaft and doing the math in her head. Yes, she knew it was going to be a tight fit with her wide eyes confirming her anticipation and excitement.\n\nPressing my cock against that unbelievably tight pussy, we shared a shallow gasp. With the least amount of movement, I'd managed to achieve penetration. Just the head of my cock -- maybe an inch -- but it was still the most intense tightness I'd ever experienced during sex.\n\nTec wanted more...\n\nWith her fingernails sinking into the mattress, my sister took me deeper. Her eyes were watering as a millimetre of movement stretched her, then a millimetre more. I was being careful: watching her eyes and the way her chest moved. I saw her lips shiver with each extra ounce of force behind my cock. Soon, about half of my shaft was encased in the silky warm walls of my little sister's pussy. It was enough to start pivoting my hips forwards and back but I knew she'd want more.\n\nTecla whimpered until it turned to moaning. Until her hips were moving with mine and she wanted more of me inside her.\n\nI had to slow my sister down a little, to be a good first-time, and a good teacher. My thumb twirling against her clit gave her relief and respite as she lounged, immersed in the feeling. Her moans lost their sharpness and became long drawn out hums but desire was still building and each was sharper than the last.\n\nFrom behind, Elle nudged me around as she helped remove my clothes. All the while, I kept a finger on her twin's pussy until I was ready to start again. Ready to penetrate Tec with a steady push through my hips and into her tight pussy.\n\nI could feel my cock's angle change as I straightened my back and Tecla lifted her tummy. We were plotting a clear course and it allowed me to go a little deeper. A little deeper and a little deeper still, but she could only take two thirds of me before her throat contracted and her breathing became sharp as a blade. Her lips parted and she let out the most sensitive of feline whines.\n\nHaving me inside her like that was all my lil' sis needed... Her tight pussy grew even tighter so that my cock was starved of room and I had to withdraw. Her whine turned to a cry as I hoped to the heavens that the walls were soundproof! It was a tantrum and an exaltation; it was her wanting me back inside. It was her wanting to be taken over the edge.\n\nThrusting myself back into her, I gave my sister what she wanted and her voice reached new heights. There was no mistaking her primal scream. It was the sound of a deep womanly orgasm and it rocked the whole room!\n\n\"Fuuuck!\"\n\nTec was trying her best to breathe through the leg shaking and throat shattering feeling. The feeling of her pussy tingling and tightening and going off with a mind of its own. The feeling of it all happening around the hard length of her big brother's cock.\n\nIt was her first ever orgasm with a boy -- with a man -- and it rocked my 18-year-old sibling's world.\n\nMy cock was beginning to twitch; my balls tightening. I pushed forward again -- the extra wetness of Tec's orgasm and sudden burst of cum from my cock giving me all I needed! As my cock fully split my sister's pussy, hit its limit, and blasted cum deep into her, we shared a visceral groan. I had to shut my eyes as the world turned to a blur and right before I did I swear I saw hers roll back. Then, there was nothing to do but stay deep inside my sweetheart sister as we fought to catch our breath.\n\nEverything around me seemed to buzz with unnatural energy... Glorious, unnatural energy.\n\nIt was electricity of our own making.\n\nThe feeling of cum pumping into Tecla awoke a primal urge. I wanted to do it again and again, so I pushed deeper as I grit my teeth and fought my inner caveman. But, why not submit to the urge? Why not embrace my own biology? It felt good and it felt right and I didn't want the feeling to end, even as sweat dripped from my brow.\n\nMy body gave way as I fell atop Tecla. We rolled onto our sides and that's when we parted -- her pussy leaking as my cock left -- slick and spent. \"Hmmm,\" she groaned. \"Nothing else, just hmmm.\"\n\nI smiled at the adorable contentment. Opening our eyes, we looked into each other's with a newfound feeling of unity. It was as sweet as it was sensual. Hell, it was existential and profound.\n\nInhaling all her strength, Tecla's expression turned back to lust. She clambered down to my crotch, pushing me onto my back. That's when I saw Elle -- truly saw her -- all naked except for her thin black choker. She'd unleashed her long raven hair and it flowed down her back like a magnificent waterfall. In the low light, her eyes seemed to change colour as they drank in the glow of the city outside. Her breasts were perfection: teardrop shaped with firm and round orbs at the end of a gentle slope. Her nipples were the perfect size and the perfect shade of pink and her skin shone under the dim lights.\n\n\"It's only fair I get you hard for our sister,\" Tecla grinned as her inexperienced mouth took my cock. When her teeth grazed me ever so gently, she pulled back. \"Sorry, first time.\"\n\n\"Don't say sorry,\" I soothed, making Tec smile as I stroked stray strands of hair from her face. Soon, her lips returned to my cock, wrapping tight around the shaft. She was dedicated to perfecting this new art. Her every move was considered and careful, but slowly she built her trademark arrogance... She gulped up more and more of me; convinced she could take it all. She retreated, started again, retreated and started again.\n\nShe learnt quick and soon my sister was blowing her brother like a pro.\n\nBare naked, Elle came to lay beside me and our tongues joining as her twin nursed my cock into a full and firm erection. Her body was warm from desire -- and soft -- and her kiss was patient despite the urgent heat between her legs. My fingers went where I never thought they would, but where they wanted to be.\n\nSweet Elle. Innocent Elle.\n\nHer pussy was slick, tight, soft... I stroked it and felt the lips were a bit more pronounced than her twin's. Not much, and I could feel the same astonishing tightness as my middle-finger pressed into her sex and was instantly in a wicked grip.\n\nI don't know if it was second or minutes or hours, but soon I was rock-hard again. So hard it hurt as my cock flexed inside one sister's mouth while I kissed and fingered the other.\n\n\"Are you ready?\" I whispered and Elle nodded with the most adorable fuck-me-eyes seen in the history of the world.\n\n\"Can I have it doggy?\" my sister asked, as if she needed permission from her big brother. Of course, she could have it any way she wanted.\n\nThe sometimes selfish Tecla didn't mind giving up my cock as she slinked away to let her sister take her turn. One last lick of her tongue along the length was her parting gift and I knew I was now ready to make love.\n\nOn her knees and gripping the headboard, Elle's back arched as she waited for me. Getting behind her, I was shocked by the roundness and firmness of her ass. Sure, I'd seen her wear bikinis and short-shorts, but I never realised it would look the way it did. Glancing to the side, I could see Tec getting naked too; bending over to take off her heels. They were body doubles... Both perfect, with subtle differences: two souls bound to mine. Three souls almost identical and always in love and always close and always meant to embrace one another.\n\nAlways meant to end up like this.\n\nWith a smile in my heart I ran a hand over Elle's bare back, underneath the cascading waves of her long black hair. It arched deeper as she waited for me and again I felt my animal-nature -- my primal sex drive. It filled my chest with a burning sensation that demanded to be drenched by the relief of sex.\n\nIt didn't take long to realise why Elle wanted this position. Instantly, I could go deeper as more of my shaft sank into her. I pressed on and her body welcomed me, I pressed some more, and she welcomed me some more. Yet, just like her twin, she was impossibly tight; a virgin. I was her big brother, wanting to show her what sex should feel like. Strange as it may be, my role as her guardian now extended to making love and I took it slow. I gave her room and time and I waited for her knees to move and her hips to push back at me. Then, I started...\n\nAn inch at first -- half back and half forward. Then two inches -- one in and one out.\n\nI gripped Elle's hips tight as Tecla circled. Like her twin, she massaged me, but her hands went a little lower and were a bit more hyperactive. As she groped my ass, I could feel being a spectator was killing her. Still, she held back to let her sister have this beautiful memory.\n\nMoving my hips with growing vigour, I began gliding back and forth deep inside Elle's pussy. She was purring, groaning, moaning; her hips twisting and knees slipping as her knuckles turned white where she gripped the bed.\n\nI could hear Elle's words strain for release, but she wasn't a verbal lover. No, she was shy and precious and her courage came in flashes, not in floods. She used all her strength to keep her pose as the bed rocked underneath her. It was an earthquake that built and built as my cock jolted her body with each distinct pump.\n\nThe expensive mattress creaked under the weight of our love-making. It felt good being inside my sister -- it felt good making her feel good. Her neck twisted and shoulders rolled back and in that moment I knew she was going to cum and I knew I'd join her in doing it. I'd never wanted anything more than to share her orgasm and I started rushing to my own; pounding harder to make sure we came together. When it happened -- the extra tightness, slickness, sound -- all I could do was close my eyes and let it pass through me. One final instinctual thrust saw my balls slap against my sister's pussy as she took all my cock inside her with a yelp.\n\n\"Mmm... Fuuuck!\" was the first thing Elle cried out with a beautiful rasp and a love-broken voice.\n\nWe came in unison, like it was meant to be! Our bodies felt weightless for the briefest of moments as if love ripped gravity away and left nothing but transcendence. Soon, reality hit and physics returned to the world as exhaustion struck. With the last spasms of ecstasy rocking our bodies, we slowly parted.\n\nBoth twins shifted, crashing onto their backs about a foot apart. Both all naked and full of their big brother's cum. Tec turned to her side and checked the clock next to the bed. \"Wow... You two were at it for twenty minutes.\"\n\nI was absolutely gobsmacked. It had felt like two or three, but the sweat over my body and the fire in my limbs confirmed it must've been longer.\n\n\"Next time I want to go second,\" Tecla giggled. \"Boys go longer after the first shot, right bro?\"\n\nI crashed onto the bed between the girls and they crawled closer. \"I'll answer all your questions, and teach you everything you need to know. We'll learn new things together... We'll love each other completely. We'll never hold back and we'll be together until the very end.\"\n\nThe girls loved my words and hugged me even closer.\n\nThat night, I would sleep better than any night before. My world was complete, even as dark forces lurked nearby.\n\n28 \u2022 Morning Sky\n\nIt felt good waking up in a warm bed, among messy sheets that wore the signs of the magical night before.\n\nThe girls weren't around. They probably had the sense to make some effort at hiding our affair. Elle and I shared a bed in Cape Town, but there were fewer staff and it felt more innocent. Now, we needed to be more careful. It was the downside of everything that was happening: the need for secrecy. But, that morning, secrets were the last thing on my mind.\n\nWaking up naked was an incredible feeling -- a remarkable feeling -- and waking up rock-hard felt even better. It was like I was nineteen again, except back then I never had the luxury of relaxing. There was no chance for rest since I was already more than halfway through varsity, having dedicated myself to a blitzy education.\n\nNow, things had changed, and with billions in the bank, I could afford to lay back and stroke my morning wood... A simple pleasure that I could never indulge before.\n\nI closed my eyes and relived the sights, smells and sounds of the night before. If I'd worried about my memory and about losing my mind, those worries were now gone. I could conjure everything in glorious detail as I laid back and let my imagination transport me.\n\nThe twins' perfume still hung in the air, and even the stale smell of sex pleased my senses. As I moved and the bed creaked, the noise triggered even more memories. I recalled the feeling of being deep inside my sisters. Then, impure thoughts dominated my mind as I imagined fucking them harder. The thought of making them scream deep womanly cries of passion was making me twitch. It was a thought so erotic it made me groan out loud, like a fucking beast. Yet, the beautiful thing was that I wouldn't cum soon. No, I could stroke and stroke and stroke as I laid back and let my imagination relax me.\n\nTecla... Elle... Me... I wondered if our triangle would ever be complete, and my mind sparkled with thoughts of them making love to each other... Maybe one day they would.\n\nWhether they ever did, or not, things were already perfect. I smiled, letting my hand ever so gently keep my erection alive.\n\n\"G'day, sir,\" an Aussie accent interrupted.\n\n\"Woah!\" I nearly tumbled off the bed, trying to protect my modesty. Dragging sheets over my crotch, I wanted to reprimand Skylar for invading my privacy, but her calm demeanour told me she could watch me jerk off for hours and be 100% professional about it. Quite simply, loss of privacy to staff was part of my new life.\n\n\"If you have a moment, sir, I would like to run through your schedule for the day.\"\n\n\"Eh... Sure. What's the time?\"\n\nSkylar checked her watch, which I realised was a Rolex with a feminine strap but a masculine chassis. \"It's a minute past noon, sir. No worries, your first appointment is only in an hour. We know you prefer to take the mornings slow.\"\n\nI chuckled. \"You mean, you know that I'm a bit lazy?\"\n\nMy protector didn't play along, rather starting to talk about my schedule. As she was about halfway, I did a spit-take and interrupted her. \"Hell, Sky... This stuff isn't part of your job. Sorry that I haven't appointed a staff yet.\"\n\n\"No worries, sir,\" Skylar winked. \"We could amend your schedule to make that today's priority?\"\n\nI bit my cheek while considering the option. It seemed like a good idea, but there was a lot to plan and the day was already ticking on. \"Tell me, would you be willing to talk business while I shower?\"\n\nSkylar nodded. \"Of course, sir. I'll avert my eyes, but you have nothing to be modest over.\"\n\n\"Ha! What's that supposed to mean?\"\n\n\"You've got a nice body. Good size donger too... If they were all that good looking, I'd give men a second shot.\"\n\nI blushed a red so deep it looked purple and felt like fire. \"Fuck't Skylar, my life is so fucking-fucking strange nowadays.\"\n\nThe blonde laughed out loud. \"Ms Le Roux would frown on our little dynamic. I think it's good though. You can't expect me to take a bullet for you if we aren't open with each other.\"\n\n\"Alicia? Gosh, I'd never dream of talking to her like we do. She's a touch more conservative than the pair of us.\"\n\n\"And probably a lot classier, sir.\"\n\n\"Probably,\" I agreed, springing to my feet with verve. I kept a sheet wrapped around my waist, but could have gone without it. There were no boundaries between me and my shadow.\n\nMaking my way to the shower, I started manipulating the taps until the water was nice and warm. Checking over my shoulder, I saw Sky avert her eyes, and I got behind the glass partition that was now steaming up. It would hide most of my body, but I expected she could still get an eyeful if that's what she wanted.\n\nThe body-jets and rain-head started coating me in water, and I spoke loudly over their spray. \"So, what are the most important hires I need to make?\"\n\n\"Personal assistant is top of the list, and we have someone in mind.\"\n\n\"Oh?\" I questioned, massaging shampoo into my hair.\n\nSkylar took a second to compose her thoughts. \"We were thinking it might be a good position for your cousin.\"\n\nA little stunned, I poked my head out from behind the glass. \"What? First, she's a nurse with no experience in business. Second -- and I hope you haven't forgotten this -- we can't trust her.\"\n\n\"That's why she's perfect for the job. We can use it to our advantage, feeding her false information, and seeing what she does with it. The experts you employ in London call it a barium meal trap.\"\n\nI returned my energy to the shower. There was a lot to think about. The idea wasn't a bad one, but it would cause a few headaches. Worst of all, it would make me feel like I was deceiving my cousin, but maybe that was necessary... Maybe I had no choice.\n\nThis sounded like a Skylar idea. Alicia specifically didn't want me playing detective. She didn't want me to worry, and she didn't want me too involved. The blonde Aussie, on the other hand, wanted to be more bold.\n\n\"Alicia doesn't like this plan?\" I guessed.\n\n\"I convinced her in the end.\"\n\nI smirked. \"A bit above your pay-grade, isn't it?\"",
        "I could hear Skylar smile -- actually hear it change her voice. \"I figure you'll eventually make Alicia your right-hand, and not just your head of security...\"\n\n\"Then you'll take her job? Ambitious. I like it.\"\n\n\"Thank you, sir.\"\n\n\"Is it the pay-rise you're chasing?\" I asked.\n\n\"No, sir. If I wanted a raise I'd get on my knees and earn it the old-fashioned way.\"\n\nI laughed out loud under the water. \"Ha! You were bullied at school, weren't you?\"\n\nSkylar's surprise was evident, even though I couldn't see her. \"How... How do you come to that conclusion?\"\n\n\"The lack of a filter -- the fact you make a joke out of everything. Becoming the class clown is a sure-fire way to neutralise bullies. They can't hurt you if you pretend not to take yourself seriously.\"\n\nMy protector confessed, \"They didn't agree with who I chose to love... But, I'm not nearly drunk enough for this conversation, sir.\"\n\n\"Of course. Thanks for opening up, even if it's just a little at a time. The Natasha thing is a good enough idea,\" I conceded, \"but it'll still leave me without a proper PA.\"\n\nSkylar disagreed, \"The only qualification she needs is the ability to represent you. We have people for all the technical stuff.\"\n\nFair enough.\n\nI shut off the water and Skylar passed me a towel. Heading back into the bedroom, I grabbed my phone and started playing a Dave Brubeck album. The room's expensive bluetooth sound system was pitch-perfect, and I smiled as every note hit, thankful for the existence of good music.\n\nNext, it was into the walk-in robe for a change into some comfortable clothes. Skylar followed, stopping halfway with a hand on my shoulder. She let her hand run over my wet skin until her fingers were close to where I'd been stabbed. She leaned in a little closer and took a good look at the scar.\n\n\"It has healed nicely, sir,\" she appreciated. \"How's your health generally? They were never able to identify the poison on that blade.\"\n\nI dismissed the question, being a typical man, never wanting to discuss his health. As we resumed our walk to the wardrobe, I kept up our earlier conversation instead. \"I'll talk to my cousin later. Seeing how eager she is to take the job might reveal something about her agenda.\"\n\n\"Yes, sir. Whatever her intentions are, I don't think she's a super-spy. You know her well enough to tell if she's acting suspicious.\"\n\n\"Suspicious... Somehow, I wouldn't use that word. She's inconsistent and stressed, and she's definitely keeping a secret. The small lies are messy: like that second phone she has, or the fact she never left her place on the night of the stabbing. Then, there's the way she feels about me... I'm not saying a romance between us is perfectly logical, but the way she was on and off about it seems crazy. Like she's processing a lot of guilt.\"\n\nSkylar agreed and we returned to the bedroom proper. \"You've moved on from her, sir?\"\n\nI nodded, before getting dressed and walking back to the room-proper.\n\nMy mind drifted off as I spotted a little piece of paper on the bedside table. It was a note from Tecla:\n\n<kbd>Last night was incredible. You're incredible. We're incredible. It was all incredible. I miss it already: miss being able to hold your hand and touch your body without limits. I love you, Olly. You're the best big brother--</kbd>\n\nThe note stopped midway and I smiled as I imagined the reason for the pen trailing off. I could already see Elle standing over Tecla, watching as her sister wrote the note. She'd have wanted to get out of the room fast, before someone discovered them there. She would've opposed the note, as much as she loved me, because it was evidence of what we'd done and what we'd done could be used against us. Tec, on the other hand, would happily challenge authority and rules. She didn't care, even when she should've, about what people expect or require. An artist at heart, her only duty was to love.\n\nElle cared more about what people thought, and thought more about people. She was almost my co-parent growing up -- the assistant-manager of our home and our family. She could stress herself out over small things, but through the sex I saw her grow as a person, and she always found a safe place in my arms.\n\nThey were a good pair. We were a good trio. I blushed at the beautiful letter and tucked it into a drawer. It was something I would keep forever.\n\nTurning to the glass panes that overlooked the city, I realised it was raining again. We'd been talking about my cousin and about understanding her, but I wanted to avoid thinking about all that. Still, I couldn't pretend it didn't matter.\n\n\"This man Alicia is looking for... Liz Wharry's old boyfriend--\"\n\n\"We don't know anything yet,\" Skylar offered. \"At least not anything that could help get some answers.\"\n\nUnsatisfied, my mind turned to something else. \"My mother is losing it... Completely.\"\n\nSkylar seemed to shrug as I caught her reflection in the glass. \"Sorry to hear that, sir. What can we do about it?\"\n\n\"Well, she seems paranoid about the media. Maybe you and Alicia could reassure her that we have measures in place to ensure privacy. I know you even have those anti-photography thingies.\"\n\n\"Easy enough, sir.\"\n\nI scratched my arm as I considered telling Skylar even more about my private life. \"I... She once locked herself in her room and threatened to take pills. I wasn't home and my sisters had to sit by the door and beg her not to kill herself.\"\n\nSuddenly, the room was so silent you could hear a pin drop. I don't know why that recollection hit me as hard as it did, but in that moment it was all I could think about.\n\nI continued, \"I... I don't know how to fix her, but I feel I have to try.\"\n\nMy bodyguard was breathing shallowly and I got the first sense that she could be shocked by words. \"How do your sisters feel about their mother?\" she asked\n\n\"After all the things that happened? I try to get them to stop thinking about her... To pretend she doesn't exist, for the sake of their sanity.\"\n\n\"Okay,\" Skylar conceded, \"but that doesn't answer my question... Do they love her as much as you do?\"\n\nI inhaled sharply and exhaled deeply. \"No... No, I don't think they love her at all.\"\n\n\"That makes it lonely for you? I mean, you can rely on them for companionship in every aspect of your life, but not when it comes to your mother... She's a burden you feel only you can carry--\"\n\nWaving away the conversation, I gripped my knees and felt anxiety build. The nausea and racing of my heart intensified. Skylar patted me on the back and asked if I wanted her to get me anything. I simply straightened myself and told a lie.\n\n\"I don't get panic attacks,\" I declared -- fooling no one.\n\nMy protector knew I wanted her to leave the room, so I could struggle in private. I knew she wouldn't. She stood by me as I grunted my way back to health -- as I struggled against my body -- as I wrestled with my mine. It was becoming more common, even after great victories. \"You must think I'm pathetic? I have money, power, love... Everything a man could want, yet this is how I behave!\"\n\nSkylar didn't respond. The corners of her bright pink lips gently curled upwards, and she gave me the most reassuring smile I'd ever seen. She didn't think I was pathetic, but what did she think? Had I taken on more than I could handle? Was I arrogant or just foolish? How could I overcome the flaws that stood between me and happiness?\n\n\"You can't do it alone,\" Skylar counselled. \"That's why I wanted to work for you: because I knew you'd need help. That's why we're all standing by you! Because, sir, you've got too much on your plate for one person to handle. Fuck, you've had too much on your plate since the day your dad died and you had to parent twin girls and a grown woman! You've been in the deep end for more than a decade with no relief.\"\n\nAppreciating the support, I couldn't help but chuckle with renewed fortitude. \"The deep end... Well, did I tell you I can't swim?\"\n\nSkylar gave me a funny look before hooking my pinky with hers and making a promise. \"Good thing I'm a qualified lifeguard!\"\n\n29 \u2022 Radioactive\n\nThe penthouse had its own suite of offices on the second floor.\n\nIt seemed having work and play so close together would be the norm for the rest of my life. Each home came with its own workplace, and my bedrooms were all a stone's throw away from my boardrooms. This meant there was little escape, and it justified the massive scale of the residences. If I had to spend my entire life inside them, they might as well be as grand as possible.\n\nStepping into my Singaporean nerve-centre, there was a reception with a desk for a secretary and a small office off to the left for a more senior assistant. Through the middle, double doors led to a 12-seater boardroom table and an executive desk. The style -- much like the rest of the house -- was modern and open, which made working there a pleasure.\n\nUnlike the London house, this one seemed to have been designed by someone who knew what they were doing.\n\nAll the latest technology was present, whether for video conferencing or encrypted communication. Pellinore was a big player on the financial markets, where milliseconds matter, so the internet connection was blazing fast and stable. There was an uplink to the company's intranet, and from there I could access everything I needed to do my work. It was a legacy system; antiquated, but it did the job and brought back memories of our first computer, which we kept and used for 10 years.\n\nI was lost in memory before I snapped back to reality, and noticed someone behind my desk. \"Tash? What are you doing here?\"\n\nMy cousin was typing away on the desktop terminal that we used to link up with the broader company network. My arrival startled her. \"They... They told me I can use this computer to video call my mom.\"\n\n\"Oh... Did you manage to make the call? Wasn't there a password on the machine?\"\n\n\"Eh... No. I found it... I... Fuck, my head hurts. Sorry, I can't seem to keep a train of thought.\"\n\nNarrowing my eyes, I tried to split fact from fiction. Everything seemed like a lie -- everything could be questioned. The headache seemed real enough. Natasha was groggy, uncomfortable in her own skin, overwhelmed...\n\nMy sisters called her radioactive, well maybe this was radiation poisoning... Her own toxicity biting her in the ass.\n\nUgh, Tash... I wish you could just tell me what the hell is going on in your head.\n\nTaking a few steps closer, I spotted something on the otherwise pristine desk. As I reached for it, I kept an eye on Natasha, but she'd turned her attention away from me. The item was a sheet of paper, neatly folded. Opening it, I found a recreation of my mother's list from the day before.\n\nThis time, I was a little more careful reading it; registering each demand.\n\nThere actually seemed to be a few items I could arrange, which wouldn't be the end of the world. The more extreme ones were out of the question. Assuming my mother wasn't mentally fit to make her own decisions, I had to step in where necessary.\n\nI had to be both her son and her guardian.\n\nEve thought changing everything about herself would reset things. Once life gets started, it's never that simple... You can't remake yourself in the same way you crumple up your bad teenage poetry. Our days aren't pages that can be thrown away without destroying ourselves in the process. Yet, it's a desire we all feel, but few of us ever attempt.\n\nSetting the list aside, I felt uncomfortable and dirty. It was sick that my own mother wanted her son to pay for her near-psychosis.\n\nI had hoped to have time in the office, alone. I had hoped to set some of the complexity aside to focus on my more menial tasks. So, I was in no mood for Natasha, or my mother, or the confusion the two of them wrought.\n\nChecking my phone, I opened the encrypted voice and text app. For security reasons, it didn't generate notifications, so it came as a shock when I saw a handful of missed calls that begged to be answered.\n\n\"Could you come see me in a few minutes, cuz? I need to return a call, then we need to have a chat.\"\n\n\"Nothing bad, I hope?\" Natasha asked with pursed lips.\n\n\"No, nothing to worry about,\" I assured.\n\nTash got up, sort of stumbling and grasping her head as she dragged her feet out the door. \"This damn headache.\"\n\nBefore I took my call, I sent Alicia a text, telling her to get some aspirin to my cousin. Then, I scrolled to the Pellinore CEO's contact and tapped her number.\n\nMy last conversation with Cassandra Nash had been tense, which wasn't a problem. That was the way of business on the scale we did it. While I may have been a rookie in this new world, I at least knew and accepted that.\n\n\"Mr Orwell,\" was the self-assured greeting I expected. \"I hear you're in Singapore.\"\n\n\"Hi, Cassandra. You seem to know so much about my comings and goings. Have your friends in British intelligence been gossiping again?\"\n\n\"Let's not get into that fight, Chairman. I want to get some actual work done.\"\n\nI listened as Cassandra explained a choice open to the company. An offer had been made to buy a stake we held in a boutique hotel.\n\n\"Sounds a little small for a business our size,\" I remarked.\n\n\"How's an annual profit of forty-million? Big enough?\" Nash relished. \"The place was the brain-child of an actor who wanted to play at being a hotelier. We gave him the money for his vanity project two decades ago, and since then, it has become an enclave for the ultra-wealthy.\"\n\n\"So, what's the problem?\"\n\n\"We've received a proposal to sell the place under market-value.\"\n\nI raised an eyebrow and rubbed my chin, not quite getting the issue. \"Don't accept it. Sounds pretty straightforward.\"\n\n\"You'd think... But I've got a heads-up that the police are very interested in things that happened at that hotel--\"\n\n\"And you want to sell before the investigation becomes public and the bad publicity hits?\" I smiled; this was exciting.\n\n\"Exactly.\"\n\n\"So, what do the cops think happened at this place?\"\n\nNash enjoyed my curiosity and fostered it by offering truly scandalous information. \"The place hosted prostitutes, drugs, and at least one transfer of nuclear material. Unfortunately, you and I can't tell the board we know about an investigation.\"\n\n\"Nuclear material?\" I chuckled, awed by the absurdity of my once mild-mannered life. \"So, we need to convince the board to take what looks like a bad deal without explaining the real upside? You've made me complicit in this by telling me.\"\n\n\"Sure,\" Cassandra admitted, \"but you're having fun, aren't you?\"\n\nIt was certainly interesting and I knew the risks were negligible in the big scheme of things. From Nash's perspective, it was a show of trust and an invitation to partner on something after our ups and downs. Still, I couldn't help but let my thoughts wander.\n\nThere was something far bigger on my mind.\n\n\"Liz Wharry had a boyfriend at the time she wanted to adopt me--\"\n\n\"Where did you hear that?!\" Nash demanded, clearly panicking as the conversation took a turn.\n\n\"You're not the only one who has friends that are spies, Cassandra,\" I said, thinking of Aaron in South Africa. \"Tell me about the boyfriend.\"\n\nThere was a long silence on the other end of the line. I held my own; letting the quiet stir an answer from the titan of industry. \"His name was Edward Sardonis,\" she explained. \"You don't need to know anything about him.\"\n\n\"Edward Sardonis?\"\n\n\"Yes. That's his name.\"\n\n\"My people will find him,\" I insisted. \"You might as well help them do it.\"\n\nNash was silent again, but this time the silence didn't break. There was conviction behind everything about her -- even in the way she did nothing. This was clearly one of those times that she was absolutely convinced inaction was best.\n\nI had no time for games or silence or more deception. With Natasha, I could still play and tease out the knowledge I needed. I didn't have the same patience for Cassandra. I pressed on with more questions! \"Why did the British government want me as chairman of the company? What's their long-game?\"\n\n\"Try not to think about it...\"\n\n\"Come on! I'm going to need answers eventually. Let's not make this hard because I will start putting pressure on you. We both know you depended on Liz Wharry--\"\n\n\"Yes!\" Cassandra yelled. \"I depended on her as a friend and business partner, and now I depend on you. You can make my life hell and relegate me to obscurity, but the answers you're looking for aren't worth selling your soul! You are far too nice to carry out your threats, boy.\"\n\nI chuckled softly to myself. Cassandra was right -- I wouldn't be able to stomach destroying another person in the way I threatened. Or, was that just the old me?\n\n\"Don't underestimate me,\" I declared. \"These answers are important and I think you know why. Then again... I've never even considered that you might be the one plotting against me. Cassandra Nash: overlooked for the top job by a young and inexperienced man... Seeking retribution or a promotion?\"\n\n\"What are you on about? Where is all this coming from? Did something happen?\"\n\nNash's voice seemed to turn almost motherly, but I wasn't buying it. \"You know what happened! How doesn't everyone know? How have we managed to keep it quiet?! There are people hunting me and people protecting me and I don't know either's motivations!\"\n\nFor the third time, silence. Almost a minute of nothingness until Nash changed the topic completely. \"Get back to me about selling that hotel.\"\n\nThen, the line went dead.\n\nTaking a look at my watch, I saw the conversation had lasted longer than I expected. Natasha was already waiting by the door to talk to me, and she'd clearly been listening in. \"Who was that you were fighting with?\"\n\nI shook my head dismissively. \"Only a business partner.\"\n\nTash was looking comfy in a pair of shorts and loose-fitting top. It fit the humid climate well, yet she still seemed stiff... She kept licking her lips and articulating her shoulders. With a cup of coffee in each hand, she approached and offered me one -- black -- made the way I like it.\n\nTaking the coffee, I set it aside with memories of poisonings on day-time soap operas flashing through my head. I focused on Natasha and tried to decipher her one last time.\n\nMy cousin had been losing weight because she'd been eating very little... She could have anything she wanted, and our people would make it, but she had no appetite. Guilt shows itself in many ways: lip-biting, sweating, little lies told for no reason, a lack of interest in life...\n\n\"We haven't hugged since I arrived. Why?\" I asked, knowing that withdrawal was another sign of something not quite right.\n\nMy cousin's face was blank, but the embrace between us was warm as we made up for the neglected hug. There wasn't even a hint of sex in the way we held each other. Only bittersweet affection.\n\n\"Looks like things are over,\" Natasha remarked. \"It feels just like the old days... So close to taking things over the edge, but always holding back. We can be cousins, or we can have sex -- best friends or lovers -- but never both. Why couldn't you just have accepted casual fucking and done away with the niceties?\"\n\n\"Casual fucking? That's not even what you asked for! You wanted... Nevermind...\" I withdrew, not in the mood for another fight.\n\n\"I wanted to stop pretending. Stop everything that tries to pretend--.\"\n\n\"So, all the memories of loving one another are pretend?!\"\n\n\"You didn't let me finish,\" my cousin insisted. \"Things changed that night with the crazy chick at the jazz club. Surely, you know the idea of us being in love is ridiculous, Oliver, or did they teach you too many of those 19th century love stories at your fancy schools?\"\n\nI smiled, recalling my old literature teacher's passionate lectures. \"I only ever pretended to read those books.\"",
        "\"I'm right and you know it!\" Natasha declared.\n\n\"You know what, Tash? You are right!\" I accepted. \"You and I could never have the best of both worlds.\"\n\nMy cousin projected contentment, pretending not to notice the edge in my voice. \"I'm sure you'll get the best of both worlds somewhere. Maybe even somewhere close to home.\"\n\n\"You're very smart,\" I conceded, \"which is why I want you to be my new personal assistant.\"\n\nNatasha burst into laughter. \"What?! I'm a nurse, Olly.\"\n\n\"When last were you at work, being a nurse?\"\n\n\"Thanks to you getting hurt? Ages ago! Still, time away from the wards hasn't changed my profession. I don't have the skills--\"\n\n\"Sure you do,\" I interrupted. \"You'd need to keep an eye over things, do some basic admin, run a calendar... You won't be doing advanced accounting or playing the stock market. Your job will be to represent me, and I trust you to do that.\"\n\nMy emphasis on the word 'trust' seemed to trigger something in my cousin. At the best of times, when someone tells us something like that, it causes a rush. Yet, the amount of pleasure she took in hearing it was off the charts.\n\nTash pretended to have doubts, \"Jeez... Maybe...\"\n\nI smirked, feeling sure I held all the aces. \"One-seventy-five a year, sterling, basic salary.\"\n\nMy cousin's eyes went wide and her lips gaped as she tried to process the number. It would be about five times what she made in her current job. \"Really?\"\n\n\"Sure. You could always negotiate for more,\" I offered. \"Or, does the rule that we're only allowed to be one thing at a time also apply to this situation?\"\n\nTash didn't like my little remark, but she didn't let it phase her. \"I can be your employee and your cousin at the same time, but if you think I'll call you sir--\"\n\n\"Only in front of other people.\"\n\n\"Okay.\"\n\nNatasha's final approval came fast and definitively. A little burst of energy accompanied the deal we made, and I saw a spark of her old self. She was regaining her cheek just as something made her eye twitch, and she closed up again. I checked around me but saw nothing that could have led to her sudden change of mood. The only thing in front of her was me...\n\nI was desperate to find out what had her acting so strange. With our negotiation done, it felt like I had an opening and I took a chance to question her on her state of mind.\n\n\"Are you okay? In general?\"\n\nNatasha shrugged without any sense of conviction. \"Yeah. I'm good.\"\n\n\"It's just... You've lost some weight, and you've been a bit up and down.\"\n\nNatasha laughed off my concern. \"I'm not bipolar, if that's what you're implying.\"\n\n\"Eh... I wasn't implying anything,\" I said, truthfully. \"Like it or not, I care about you, and you seem a bit... Off.\"\n\nMaking sure to avoid eye-contact, Natasha took a seat on the edge of the desk, turning her attention outward and beyond the glass of the windows.\n\nMany men share my affliction: an attraction to the most cryptic of the opposite sex. Usually, murder isn't involved, but the fundamentals stay the same.\n\nThe potential is always there.\n\nAt that moment, Natasha was the most mysterious of all women, and the most dangerous. If she'd been anyone else, I'd have made up my mind by now -- I'd have accepted that she was a traitor. But, she was my cousin, my old best friend, and a very-very mysterious woman... I harboured a subconscious fascination; almost self-destructive in nature.\n\nI remembered there was one last thing I had to bring up. \"It's a technicality, but I'm going to need you to do a psychometric test before taking the job.\"\n\n\"Huh?\" Tash queried.\n\n\"It's like a personality quiz you'd get in a magazine.\"\n\nNatasha teased, \"No one reads magazines anymore!\"\n\n\"Really? Well, that's a problem because I own a lot of them.\"\n\nLaughing with me, Natasha took a deep breath and consented to the test. \"Will I get to see how much money you have?\"\n\n\"You'll have access to all our files and some access to accounts. I'll spare you the mystery: I make about $75-million a year after tax from Pellinore. The account balances you'll see are higher than most billionaire's, but we're slowly investing all of that liquid money.\"\n\n\"Oh, yeah,\" Natasha recalled, \"Wharry had a weird amount of cash on hand, right?\"\n\nI raised an eyebrow. \"I remember telling my sisters that, but I don't remember telling you.\"\n\n\"Huh? You must just be forgetting. We talk about lots of stuff.\"\n\nJust as I was about to dig into my curiosity, there was a knock on the door. It was one of the young maids, with an envelope in her hand. \"For Mr Orwell,\" she said shyly, bringing it to me.\n\n\"Have security checked it?\" I asked, weary about anything from the outside.\n\n\"It's from your sisters, sir.\"\n\nExcited, I opened the envelope, turning away so that I had privacy while reading Tecla's script:\n\n<kbd>Roses are red. Violets are blue. You may be my brother, but I wanna make love to you (...again)</kbd>\n\nTec's not-quite rhyme made me chuckle, and I pocketed the note.\n\nWith the Natasha business punted down field, I had to go visit my girls. As soon as possible...\n\n30 \u2022 Bedhead\n\nI let Alicia take care of getting Natasha to work. Having a personal assistant was a relief, even under the strange circumstances. Soon, I would have a better grip of the business... And a better view into my cousin's chaotic mind.\n\nSetting all that aside, I went upstairs to focus on something really important: my sisters.\n\nBefore laying eyes on them, I heard the music: a perfectly tuned guitar strumming out Sweet Child o' Mine, and a melodic voice singing along softly. Tecla had bought herself a new instrument with the allowance I paid her. Watching her play always made me smile and always made her sister sing along. They composed their own arrangements; slowing down every song and singing in almost in whispers, but with power behind each syllable.\n\nThe twins were in their pyjamas and perfectly serene. As they saw me, Tec set her guitar aside, jumped to her feet and planted a kiss on my lips. \"Hello, brother-lover.\"\n\nElle was on the bed, quickly hiding her phone as she caught sight of me (as 18-year-old girls often do). She also jumped to her feet and raced in my direction, tripping halfway and falling into my arms.\n\nI smiled from ear-to-ear as I got her back onto her feet. \"Jeez, sis, you'll hurt yourself.\"\n\n\"Hmmm, not if you're always there to catch me.\"\n\nPulling Elle closer, I let my hands slip under her pyjama top and squeezed her breasts, making her purr. \"Ready for another round?\" I asked.\n\n\"Fuck, yes... Nghhh...\"\n\nKissing Elle, I felt her tongue rush against my lips, demanding that I meet it. Tecla tugged on my elbow and I turned to her next. She had an arrogant streak and kissed me harder and faster. She moaned and ground her body against me as I sucked her tongue. Then, it was back to Elle for a far gentler -- lingering -- lip-lock.\n\nFire and ice. Perfect balance.\n\n\"Mmm... Now, that's how brothers and sisters should say good morning.\"\n\n\"Morning?\" Tecla giggled.\n\n\"It's almost five,\" Elle completed.\n\nTecla chimed back in, \"We've come to bed because we're sore after last night.\"\n\n\"Shit!\" I worried. \"Did I hurt you?\"\n\n\"The good kind of sore, big brother... I've seen you roam around in boxers, but you're packing a few more inches than I expected.\"\n\n\"Yeah,\" Elle agreed shyly.\n\n\"Eight inches at least,\" her sister offered.\n\nTecla looked to Elle, prompting her to join in on the dirty talk. Taking a deep breath, she gave it a shot, \"Could be eight and a half...\"\n\n\"Felt like nine to me,\" Tec grinned from ear-to-ear. \"Glad you didn't become a pornstar, bro. You definitely could have...\"\n\nI blushed as my sweet little sisters fell into conversation about the size of my cock. It was flattering, in a pervy kind of way. While they conversed, we gravitated towards Tec's bed, crashing down with one twin on either side of me. As we nestled together, we could talk about being happy while sharing love-sick kisses.\n\nBefore we got fully settled, Elle decided to go fetch some water for the group. With her stumbling to her feet and leaving the room, I was left alone with Tec and for the first time in a long time, we could talk face-to-face and in private.\n\n\"Elle has been reading up about sex, which is why she was so quick to hide the phone,\" Tec snitched, immediately. \"She thinks I'm way better at it than she is, and she wants to improve.\"\n\nI shook my head. \"You two shouldn't be competing over stuff like that.\"\n\n\"She's the only one competing,\" Tecla assured. \"I've already got my prize... Big brother.\"\n\n\"Are you still sure about all this?\" I asked.\n\nGiving me a puzzled look, my sister was insulted that I'd even ask. Of course, she was sure! There was no universe in which anyone could twist her imperturbable nature and convince her to do anything she didn't want to. She was calm if not cocky and always certain of her decisions. \"I read a book about people like us... Brothers and sisters who fall in love. It's natural, but they say you can end up confusing love with sex. They feel the same to me -- I love you already, I've always loved you, and sex just takes it to the next level. Is that wrong?\"\n\n\"Not wrong at all,\" I counselled.\n\n\"When I turned 18, I waited for you to come into our room... I waited for you to come kiss us, to come fuck us...\"\n\nMy eyes went wide. \"Bullshit.\"\n\n\"No... It's true. We even dressed up for our big brother that night -- made ourselves look sexy. You'd earned it by taking such good care of us, and we wanted to repay you. We wanted you to claim your reward.\"\n\nTecla pulled herself closer to me, until her lips were an inch from mine. I could feel the vibrations of her breaths and see right into her soul.\n\n\"I still call bullshit.\"\n\n\"Mmm... Maybe,\" my sister confessed. \"But we wouldn't have stopped you -- I wouldn't have stopped you -- if you came into our room and--\"\n\nThe return of Elle interrupted Tecla's story and her mouth slowly left the orbit of mine. Whispering one last line, Tec got round to answering my initial question. \"I'm sure about everything and I love you.\"\n\nMy sister's certainty made me smile as we welcomed Elle back to our sibling-bed. She passed around a large bottle of water, and we all hydrated before nestling together again and resuming our infinite kisses. It was paradise between the three of us, and nothing in the world could ever be more perfect. Yet, I felt like we were still only at the beginning; that there was still so much more brilliance in store for us.\n\n\"How have you two been keeping busy?\" I asked, breaking the back and forth.\n\nTecla sighed. \"It's been kinda boring, to be honest. Aside from the amazing time we get to spend with you, of course.\"\n\nElle snuggled closer to me. \"We need to get some hobbies.\"\n\nI agreed, \"What would you like to do? I've got more than enough money to make anything happen for you, and you know I will.\"\n\nThe girls contemplated for a few seconds before settling on answers. Tecla was first to float an idea, \"Instruments. I've always wanted to learn more instruments.\"\n\n\"What about a foundation?\" I asked. \"Funding music education in schools--\"\n\n\"Uhm... Maybe... Sounds like a big deal. I think I should first learn to play the piano better before trying to change the world.\"\n\nI understood -- it was better to be realistic, at first. \"What about you, Elle?\"\n\n\"Oh, I want a business of my own,\" my sister declared. \"You know what social entrepreneurship is, right?\"\n\n\"Alicia probably knows better than me, but I have a rough idea,\" I confessed.\n\nElle elaborated, \"I want to do something that makes money and makes a difference. Not sure what, yet.\"\n\nBoth ideas sounded good to me and I wanted to make it happen for the girls. Thinking like a businessman and a billionaire for but a second, I had an idea of my own... My sisters would be perfect at enhancing my image -- at showing I'm a businessman that'll maintain the legacy of Liz Wharry. The girls are intelligent, articulate and independent, and they'd be co-chairwomen of the company one day.\n\nAs we resumed our late-afternoon cuddling, my sisters did what 18-year-olds often do and reached for their phones. Social media was forbidden for security reasons, but they could still message certain friends and play games.\n\nAfter a few minutes of playing Tetris, Tecla reached over to her bedside table, opened the drawer, and produced a pack of cigarettes. \"I've always wanted to have one of these in bed.\"\n\nI immediately snatched the pack. \"Oh no you don't!\"\n\n\"No fair! I'm old enough to make up my own mind,\" my sister protested.\n\nElle took my side. \"Listen to our brother. It's an awful habit.\"\n\nAs I got up to throw the back in the bin, Tec grabbed my arm and tried to drag me back onto the bed. \"I'll blow you!\"\n\n\"Last time you made that offer, I grounded you,\" I reminded cheekily.\n\n\"But this time it's for real! C'mon... Just one... I'll tongue your ass if you're more into that, or I'll let you spank me for being naughty. You can choke me a little, or pull my hair... Make me call you daddy or mister or sir... Please, Olly, just one!\"\n\nThe insistence made me smile. The desperation? Not so much.\n\n\"You're addicted, Tec. Since when?\"\n\n\"No, I just want to have a cigarette in bed. That's all, bro... Daddy, mister, sir...\"\n\nKnowing I'd never win this fight, I took one cigarette out of the pack and threw it into my little sister's hands. \"One. Your last one ever.\"\n\n\"Thanks Olly!\" Tecla beamed. \"I promise this is the last one ever... You won't regret it.\"\n\nThose last words were said with foxy intent as my sister lit up and took her first drag. The way she exhaled was... Sexy. I couldn't believe it, but I was looking at my sweetheart sibling while thinking about her that way. Even the night before, my thoughts had been a little more tame; a little more brotherly. I didn't want to slip any further, but the sex in her eyes told me we could indulge in the moment and still leave with our innocent sibling bond intact.\n\n\"Come and make good on your promise,\" I commanded, teasing the band of my pants.\n\nTecla gave me an anxious look before taking another drag of the cigarette. The nicotine was to calm the nerves of a blowjob novice who wanted to please her big brother. As I dropped my trousers, she started her slow approach. My cock was hard without a touch; straining against itself.\n\nI was ready for some real fun, and watching Tecla slink in my direction practically made me drool. Time and time again, I reminded myself that this was the little sister I helped raise. Time and time again, that thought made what we were doing feel even better.\n\nTec kept the cigarette in one hand as she knelt before me. Putting it to her lips and sucking, she inhaled then exhaled warm smoke and giggled at her own naughtiness. She looked at my cock with fascination, tilting her head in all directions as she planned her approach. I could see the determination in her eyes -- how she wanted to make me moan, groan, explode... She licked her lips before looking back over her shoulder.\n\nElle was watching us intently; doing her own research for later. Her twin shuffled around on her knees and I followed. Now, Elle could see us from the side and Tec did one better by adjusting her hair to give our sister a perfect view. \"Watch and learn, sis.\"\n\nWith unearned confidence, Tec exhaled one last breath of smoke as her warm lips descended on my shaft. She opened as wide as possible with her tongue out flat and soon my shaft was gliding along it and into her mouth. The heat from her smoke was still there and it only heightened the sensation as my eyes rolled back in delight.\n\nMy sister had all the momentum, pushing and pushing until she pushed too far and gagged. She was cocky and wanted to take all of me in one go.\n\nDoing her best to break past her gag-reflex, Tecla struggled hard before I took her head in my hands and practically ripped her from my cock. Looking at my breathless sister, with her face all sloppy, I couldn't help but be all brotherly. \"Take it slow, sis. It already feels amazing.\"\n\nBeaming a smile at my affirmation, Tec nodded eagerly and took my saliva coated shaft in one hand. With the cigarette in the other, she inhaled another puff and blew the smoke out over my cock. The menthol vapours made it tingle as she stroked the full length. She took another drag, but this time she kept her lips shut until they were against the tip of my penis. Pushing her head forward, the smoke encased me at the same time as her warm cheeks and soft tongue.\n\nMy little sister's eyes watered as the smoke escaped through her nose, but most of it was stuck in her mouth. Pulling away, she coughed loudly with a hand on her chest but a smile on her face. When she looked up and saw my approval -- my ecstasy -- she was the happiest sister in the world!\n\nShe pressed the tip of her cigarette against the tiles and flicked the thing aside before using her hands to stroke and twist my cock. She was full of new determination and soon her mouth showed it as she swallowed me all the way to where her tongue ended and her throat began. Again, she had to pull away -- again she had to catch her breath -- as spit ran down her chin and her eyes watered to the point that happy little tears were running down her cheeks. She was soon back at it and this time I helped her over the edge as I pushed her head that last inch. Now, I was all the way inside; my cock feeling the tightness of her throat as she slammed my thighs.\n\nI knew what Tec could handle, and I turned my sights to Elle as she watched her sister hold my cock deep in her throat. The little pyjama shorts she wore were wet, soaking wet, and it's only when her eyes went as wide as they could go that I released Tecla's head and she snapped back to reality.\n\nMy sister's chest was heaving as I cradled her chin and caught her eyes with mine. \"Too much?\" I asked.\n\nTecla shook her head, wrapping her arms around my thighs, lining up, and taking me deep down her throat! I was soon in a world of unbelievable pleasure as I felt the tightness, the silkiness, the sensual touch... This time, it all came fast as lightning, and I came with it as my cock exploded at the very moment my balls hit her chin.\n\nFeeling warm and thick brother-cum explode down her throat, Tec pulled back in panic. Any cum that wasn't in her mouth or draining down her throat shot onto her lips as her sore throat sought fresh oxygen. She was trying to swallow, inhale, exhale and moan all at once. \"Nghhh!\"\n\nI stroked my little sister's hair, soothing her as she collected and composed herself. Her eyes almost rolled back in her head as finally she could breathe.\n\n\"Sooo, that's what it tastes like!\"\n\nElle scrambled to the edge of the bed and closer to us, frantically asking questions. \"Didn't it hurt? Could you feel it in your throat? How does it taste?\"\n\nScooping a bit of creamy white semen from her chin, Tecla shuffled over to her sister and offered a taste. Elle shook her head, not wanting to lick cum from her twin's finger, so Tec put the finger in her own mouth and sucked it clean with eyes closed. \"Mmm... It tastes... It tastes like cum,\" she reported. \"I kinda like that... It means I made our brother happy.\"\n\n\"You did,\" I agreed, \"but no more smoking.\"\n\nThe twins giggled as I stumbled to the bed and we entangled our bodies again. We got naked because being naked together felt nice; our warm bare bodies soft against each other.\n\nAfter a few moments, Tec fell asleep after all the exertion and Elle whispered in my ear, \"I'm gonna be just as good as her.\"\n\n\"It's not a competition, sis,\" I assured, kissing my sweetheart girl's forehead.\n\n\"No, Olly... I'm gonna be just as good as her. I promise.\"\n\n31 \u2022 Night Falls\n",
        "At midnight, I left the twins' room.\n\nI was naked and unashamed of it when I woke up from our early afternoon slumber. I was also wide-awake, so I pulled on some clothes.\n\nRealising we'd left the door open all the while, I cursed myself... Fuck.\n\nIt was my job to make sure we were more careful than that! On my way out, I gently shut them, checking the corridor for any curious eyes.\n\nThe lights around the penthouse were either off or dimmed as I took a stroll through each room. Housekeeping had closed most of the shades, but here and there, ambient light from the city cast a glow over monochrome interiors.\n\nAlicia was right about the place being beautiful. Everything had a purpose and everything was hand-selected, but not by the woman who would've been my mother. No, if she had designed the place, it would've been functional but ugly. That was her philosophy; not mine. I wanted to use the money she left behind to make something beautiful and pragmatic. It's what I wanted for my sisters. It's what I wanted for myself.\n\nThe girls were still first in my mind, but for the first time ever, I gave thought to what I needed and wanted from life. My grand plan for life may have been upended by shock after shock, but that didn't mean I wasn't in a better place than I would've been. Despite almost getting killed.\n\nThe night before, I learned that love could be infinite. That afternoon, I learned something more practical... I had new tools to help me run the family -- to keep everything running smoothly. A blowjob here, or maybe an erotically charged spanking there... I would never have dreamed of it, but now dreams I never had were becoming reality faster than my imagination could conceive them.\n\nReaching my bedroom, I found two women waiting for me. Alicia had a folder in her hands, watching the door and waiting for me. Meanwhile, Skylar looked out the windows, searching for even the slightest disturbance in the massive metropolis around us.\n\n\"Evening, sir,\" my head of security greeted.\n\n\"Good evening you two. What's up?\"\n\nAlicia explained that they had the results from Natasha's 'psychometric' test. We had convinced her that this was something all employees went through before taking on their roles. The truth was a little more complicated than that...\n\nYears ago, a group of psychiatrists came together and conducted a study. They took 100 people and made them write a test designed to look like a perfectly normal personality questionnaire. Half the group were given a secret to keep, being told that they'd be asked about this secret, but not being told how. The other half weren't told anything.\n\nWhen both groups did the test, it was clear from the results that the first group had something to hide, based on their answers. In theory, this could be used outside a controlled setting to make conclusions about people's hidden agendas.\n\nReading Natasha's results made my tongue swell and eyes bulge. They had concluded she was keeping something hidden. Something criminal.\n\n\"Bullshit!\" I mumbled. \"This is pseudo-scientific crap, Alicia. I'm not going to use this as the basis for my opinions.\"\n\n\"It matches our suspicions, sir. I agree that the methodology is... Interesting. Still, I think they're onto something. The rest of the report highlights other finding they've made on the information we gave them.\"\n\nI scanned over the next few paragraphs. We had a dozen psychologists, criminologists, and ex-federal agents analysing one woman. The idea that I needed that much help to understand someone I'd known my whole life left a lump in my throat. Yet, I couldn't argue with their findings... It all seemed plausible.\n\n\"What's our next move?\" I asked.\n\nAlicia was reluctant to be specific; she wanted me to make a final decision. \"All we can really do is keep observing her. Once we find out who she's been in contact with, we'll need to do consequence management.\"\n\n\"Consequence management...\"\n\nThose words left a bitter taste in my mouth. Pulling my hair back, I made a dark realisation. \"If she does turn out to be a traitor... We can't exactly hand her over to the police...\"\n\nSkylar saw me wrestle with what would need to happen. \"We're not there, yet,\" she counselled. \"Let's first get final confirmation, sir.\"\n\nAlicia clarified further. \"Once we know, we'll manage the risk responsibly. The chances are she's being blackmailed, so maybe we can help her.\"\n\nI shook my head and turned away from the two women, moving to where Skylar was standing when I found them. \"If she told people where to find me -- how to get at me -- I don't want to help her. Imagine! Elle and Tecla without their brother and Eve without her son! I'm the one who needs to take care of them! I'm the one who needs to give them a better life, and she wanted to take that away? Kill me, fine... Kill me! But don't hurt my family because I will destroy you!\"\n\nSweat was dripping down my brow and my hands were shaking. During my tirade, I'd lost my voice and lost my footing. I was seething with rage I should've released a long time ago. Putting a hand against the windows that overlooked Singapore -- the Little Red Dot -- I tried to compose myself. I failed.\n\nAlicia walked over to me and put a hand on my back. \"We'll handle this, sir. Trust in your team to make everything work in the end.\"\n\n\"I do trust you, Alicia. I trust you too, Skylar. But, I wish I could trust Natasha -- I wish that I hadn't grown to hate her. I wish... All I want to do is focus on the good. There's so much good, but this drags me down into a dark place even as light floods into the world!\"\n\nSlamming my fist against the glass, I made Alicia flinch. She took a step away from me before stepping forward again. I could sense she wanted to hug me, but we both knew she wouldn't. We gave each other a smile; hers strong and mine a little weaker. Yes, we both knew we wanted to give each other a little hug, but those smiles would suffice for now.\n\nThere was a painful silence as three minds were finally made up. We had convinced ourselves that Natasha was a spy and a traitor. The time for action was coming fast, which raised new problems. New struggles.\n\nI had been so obsessive about convincing myself that the obvious was true that I never even considered the implications.\n\nTime is what we needed, but when would the second attack come?\n\n\"I've had a long day,\" I excused, prompting my two security-women to leave.\n\nIt was just me and the night as the room cleared and I looked out the windows to a city alive with millions of people's hopes and dreams flowing like blood through veins. Every light in a window had a story; every car on the road a destination.\n\n\"At least there are the twins,\" I told myself. \"That's the best thing to have ever happened to me... Maybe the money made it possible, but I don't think so.\"\n\n\"No, I think we made it possible all by ourselves,\" a voice completed from the shadows.\n\nI turned to see Elle standing in the door. She was wearing nothing but an expensive robe -- something she must've bought recently. With her hands gripping each end, she hugged the garment to her body and looked at me with eyes full of confusion.\n\n\"Sis? How long have you been listening?\"\n\nMy little sister stepped closer and answered my question with one of her own. \"What were you talking about with them? I knew... I kind of knew... But... Do you really think Tash was the one who told those men where you'd be?\"\n\nI didn't know what to say. Rubbing the back of my neck, I closed my eyes and prayed for wisdom to all the gods and sundry. \"Sis... Don't worry about it. We've got it under control.\"\n\nRushing forward, Elle got right up close to me and wrapped her arms around my body. \"It's fucked up,\" she mumbled. \"How could she do that to you?\"\n\n\"We don't know--\"\n\n\"Why not? Why can't they find out? Alicia should find out. We need to know!\"\n\nAll the emotions and confusion that I had bottled up inside were now being expressed by my sister -- unleashed with honesty I had struggled to muster. She was a better part of me: unafraid of feeling in ways I tried to avoid. With her in my arms, I did my best to console the both of us.\n\n\"You're going to tell Tec,\" I guessed. \"That's okay, but don't jump to conclusions... Our people are still investigating and we need to be calm.\"\n\n\"I'll kill her, Olly. If she was behind this I'll take a brick and--\"\n\nI held Elle a little tighter, squeezing all the tension from her body until she was ready to let go of her anger. It was a practiced technique that got us through a lot over the years. She seemed to take a breath and calm herself, but I could still see rage burning deep inside as we let go and gave each other some distance.\n\n\"Do you want to sleep here tonight?\" I offered, wanting to soothe her\n\nMy sister shook her head. \"Not without Tecla, and she's already sleeping like a baby. In fact, I don't think she's ever slept as well.\"\n\n\"It's an odd arrangement the two of you have,\" I remarked. \"You're not curious about each other?\"\n\n\"We're twins. If we get curious, we can look in the mirror.\"\n\n\"So, you always want to be together but you never want to be together?\"\n\n\"Eh... I don't know,\" Elle shrugged, wiping some tears from her cheeks. \"We want to be with you.\"\n\nI could see my sister was tired and rearing to go back to bed. \"I'll be up until late,\" I said. \"Why'd you follow me up here?\"\n\n\"Oh... I wanted to ask you a question, but it isn't important. Not with a fucking murderer living in the house.\"\n\n\"Go ahead,\" I encouraged. \"Let me and Alicia worry about keeping us safe.\"\n\nElle bit down on her lip and frowned, having a quick mental conversation with herself. She decided it was worth asking the question she wanted to ask. \"Did you like Tecla's blowjob?\"\n\nI almost laughed at the strange query, but my little sister was dead serious about her question, so I answered just as seriously. \"Yes, I did enjoy it. Why do you ask?\"\n\n\"I'm not sure I can be as good as her at it... I want to try though.\"\n\n\"It's not a competition,\" I insisted.\n\n\"Maybe I can be better at other things--\"\n\n\"It's--not--a--competition.\"\n\nI smiled, waving my sister closer before planting a kiss on her forehead and sending her off to bed. Her doubts reminded me that the dynamic between twins is unknowable to even their closest family. She would go tell Tecla about Natasha and she would keep worrying about whether she could match her sister's sexuality. I knew that would make things more complicated.\n\nI also knew everything would be alright, because I had them and they had me.\n\n\u2022 \u2022 \u2022\n\nDeciding I couldn't possibly get to sleep, I made my way down to the second floor of the penthouse.\n\nEventually, I reached a set of weighty doors that sealed the home cinema off from the rest of the house. Pushing them open with my shoulder, I entered what was a decent-size room with a massive screen on one end, comfortable sofas, and a small bar.\n\nI grabbed a bottle of water from the mine-fridge and drank down half of it before crashing onto one of the sofas. My wound burned a little as I did, but it was nothing I couldn't handle. The pain had become more psychological than anything else -- it only hurt when I had conflicting emotions.\n\nOn the one hand, I'd never been happier. On the other, life had never been more complex.\n\nThere was a major tennis tournament due to start in Melbourne, and I found more than one channel playing highlights from the previous year. I zoned out, watching the best of the best play a game I enjoyed myself.\n\nI still had Cassandra Nash's request on my mind -- the need to convince Pellinore's board to do something that seemed stupid at face-value. That kept my mind busy as I matched the play on screen with the plays I planned to make.\n\nFifteen minutes passed before the sound of the doors opening drew my attention. Clad in her cream-coloured summer pyjamas, Eve walked into the room and took a seat beside me. \"Hey,\" she greeted, simply and with a trace of angst.\n\n\"Hey.\"\n\n\"I'm sorry about yesterday...\"\n\n\"That's okay.\"\n\nMy mother didn't look at me as she spoke. \"You always say it's okay. It must tire you out though.\"\n\n\"It does.\"\n\n\"Maybe if you give me some of those things on the list, I'll get better?\" my mother angled.\n\n\"Maybe...\"\n\nWe didn't talk for the next half-hour; sitting with a foot between us as the tennis players ran around on the big screen. It wasn't a particularly interesting match, but it kept the both of us quiet. As the play ended and the player's shook hands, Eve got to her feet and offered to go make tea.\n\n\"That would be very nice,\" I said.\n\nGiving me a soft-edged smile in return, my mother seemed happy to have some function. All throughout my life, she would make the occasional small effort at reconciliation, but it never lasted. Still, I appreciated the moments of relief and comfort that came with it each time she tried.\n\nWith Mom out the door, I grabbed the remote and started skipping channels. Once I was past all the sport, I reached the news and stopped on a panel discussion between some business people. That sort of thing was part of my world now, so I sat and watched as they discussed the state of the global economy.\n\nI felt a buzz in my pocket. It was an email from Cassandra Nash, sent after another one of our fights about the truth. I read it, and again, and again...\n\n<kbd>You should never know everything, but you deserve to know how your father died. Have your people look into it.</kbd>\n\nMy body went cold, and I felt my tongue swell in my mouth. I nearly slapped myself to make sure I wasn't in some grim nightmare! I read the message a fourth and fifth time, thinking this was another one of my moments of madness.\n\nStumbling to my feet, I started running after my parent.\n\n\"Mom! Mom! I need you!\"\n\n\u2022 \u2022 \u2022\n\nAlicia was in a pair of sweatpants and a t-shirt, roused from her sleep to join the meeting between me and my mother.\n\nWe returned to the cinema, with its soundproofing offering an advantage, as I tried to get the truth from my mom. Since approaching her, she'd gone through phases of anger, tears, denial... Now, she was back at the start and properly pissed. \"You have a damn nerve bringing up your father like this!\"\n\n\"What happened to him?\" I demanded.\n\n\"The man lived an unhealthy life,\" my mother insisted. \"He had a stroke.\"\n\nI pointed to Alicia. \"You know, she can find out if you're lying.\"\n\nBiting down on her lip, my parent's eyes drilled into my head of security, but Alicia didn't flinch. \"Ma'am, this information is important for your son's security. We still don't understand why he's in danger.\"\n\nMy mother threw her hands in the air before turning away from us. She started pacing the room, which was a habit I sometimes practiced when I needed to think.\n\nI realised it was something I inherited from her.\n\n\"You can't tell your sisters,\" Eve insisted, deciding that it was best to come clean. \"They can never know about this!\"\n\nI was defiant, \"There's nothing I don't share with them.\"\n\n\"Oh? So, you're going to tell them your father was a drunk and that's why he died?\"\n\n\"What?!\"\n\nMy mother shrugged, wiping an errant tear from her eye. I didn't want her to relive old traumas, but I needed her to go back to that tragic time. I needed her to remember and retell, so that Alicia and I could figure out the present. Slowly, surely, we got the true story of my father's passing.\n\n\"He used to drive for Elizabeth Wharry, when she visited Canada, but she fired him after the adoption failed. Well, I say fired... She was polite about it, but she wanted to avoid seeing a reminder of what could have been. He found a new job, also as a driver, but with less pay. Then the twins came and the pressure of having to put bread on the table caught up with him.\"\n\n\"I never once saw him drunk,\" I retorted.\n\n\"You wouldn't remember, Oliver. He was often away for nights at a time, laying passed out somewhere. One night, he got behind the wheel of a friend's car and... He...\"\n\nMy mother began crying, a visceral, terrible, gut-wrenching, cry of remembrance. I stepped up and held her grieving body in my arms as it all poured out of her, but she was quick to break the hug as she spat memories into words. \"He ran someone over... He killed them... Died in the accident himself, along with his friend who was in the passenger seat.\"\n\nAs my parent continued to choke on her tears, she sought my eyes. Hers were bulging and burning -- aflame with sorrow. She wanted to read my thoughts and understand my reaction.\n\nThe truth is, my mother probably saw a blankness drawn across my face that night.\n\nYet another thing about my childhood turned out to be a lie.\n\nWhere does it stop?\n\nAlicia had stepped back to give a mother and her son time to process a deeply personal moment. I wanted her to do the opposite -- I wanted her to be closer -- I wanted her to be my companion in that moment, because god knows it felt very lonely.\n\nEve was right that I shouldn't tell my sisters -- that I shouldn't share what I now knew. While I still had vague recollections of our dad, all they had were stories, and I couldn't ruin that for them.\n\nI had to ask my parent more questions, but first she had to empty her eyes of tears. As she regained her composure, slowly-slowly, Alicia stepped closer while I started asking away.\n\n\"Did the police confirm he was drunk?\"\n\n\"Yes.\"\n\n\"Did he have enemies?\"\n\n\"Oliver...\"\n\n\"Maybe someone from when he worked for Liz Wharry?\"\n\n\"Oliver... Stop.\"\n\n\"I need to know, Mom.\"\n\nMy mother put an arm around my shoulders and pulled me close. \"You're not asking any questions I haven't asked before. The truth is simple. He was drunk and he drove and when people do that, they make accidents.\"\n\n\"No, there must be more!\"\n\nMy mother kissed my forehead for the first time in two decades. Her lips were melancholy and full of pity. With that kiss, she hoped to tell me that it was okay to give up and accept the worst was true. She wanted me to accept that my father was practically a murderer and his death self-inflicted. I looked into her eyes and watched them turn from torment to ease. She left me to reach for her tea and returned to being her depressed old-self; no more and no less.\n\nShe'd given up, but I wasn't going to do the same.\n\nI turned to Alicia. \"Have our people go through the old records. See if they can--\"\n\n\"Oliver!\" my mother interrupted. \"Don't go digging!\"\n\n\"We have new information.\"\n\n\"Stop it!\"\n\nMy mother's voice cracked with that last word and she threw her lukewarm tea all over my face. Alicia was quick to get between us, with her instinct being to guard me against any threat. She would've knocked Eve out had I not held her back.\n\nTaking a deep breath, I knew exactly what I had to say. \"You've kept a lot from me, Mom. I assume we need memories to help us interpret the present -- we need some honest recollections to help us ground ourselves in reality... Well, I don't have many true memories left, so you can imagine I'm beginning to lose my mind. Since I can't rely on you for facts, I'll go looking for them myself.\"\n\n\"Bite me,\" my mother scoffed, throwing her cup and shattering it against the wall before marching out of the room. If the doors weren't so big and heavy, she would have slammed them, but their weight slowed her rage.\n\n\"At least she didn't throw the cup at me. This time.\"\n\nAlicia picked a throw blanket up from one of the cinema seats and used it to wipe my face. I felt like that kid who got yelled at in front of his friends. A little humiliated.\n\nI tried to explain away what happened. \"I must've said the wrong thing.\"\n\nMy companion was full of pity. \"Nah. You stood up for yourself.\"\n\n\"She had good reason--\"\n\n\"Good reasons don't make it right. Our ethics can't be reduced to our aims. The ends don't justify the means. Parents need to be bigger than that.\"",
        "I shook my head. \"If I were a parent, I'd have done the same.\"\n\n\"Keeping secrets is one thing,\" Alicia remarked. \"Trying to control how people react once the secret is out... That's different. Sure, parents are entitled to keep some things away from their children, but once the cat's out of the bag, they need to be supportive. Sorry, sir, but your mother is not--\"\n\n\"Alicia, I love you, but I won't let you talk about my mother like that.\"\n\nMy companion smiled from ear-to-ear as I accidentally let slip a four-letter word. She laughed breathily, in that restrained way that was a sure-sign of unrestrained happiness. We both knew we'd pretend I'd never said the word 'love', but she enjoyed it for a few seconds before silently swearing to forget.\n\nWith my face cleaned up, we made our way out of the cinema. As we reached the elevator, Alicia turned to me. \"I'm going to send Skylar up with some lorazepam. It'll help you sleep and calm you down. I'll arrange that you take breakfast in bed, and I'll make sure Natasha keeps your morning free.\"\n\nI appreciated everything, but wanted one last thing... I wasn't ashamed to ask for it either. \"Send my sisters to my room as soon as they wake up. Tell them I need to unwind...\"\n\nNodding, Alicia did her best to hold back a knowing smile. \"I'll let them know you could use a little TLC, sir.\"\n\n\"Thank you for everything, Allie.\"\n\n32 \u2022 Awake in Singapore\n\nVivid dreams kept my subconscious busy as my body rested. It was a deep sleep, aided by one magical little pill that managed to set my mind at ease for at least the night and most of the next morning.\n\nWhen I woke up, it was like flicking a switch and suddenly my mind was alive again. I smiled, realising it was another morning where I woke up naked. But, I hadn't gone to bed naked...\n\nThe feeling of a hand gently tugging at my cock made me groan. Its grip was soft and its motions were slow; gentle. The strokes were easing me from my slumber and making me groan to life. All the tension from my body lifted as the massage kept its slow and methodical pace.\n\nMy back arched as the hand stopped, only to be followed by the sudden feeling of warm lips wrapped around the tip of my cock. The lips sealed tight, pushing down on the shaft as they slowly dragged along my skin and took more and more of me into an increasingly tight space. The heat of the mouth and softness of the lips were a formidable one-two, and I reached down to tangle with the hair of the woman who was making me so happy.\n\nAbout halfway down the length, the eager mouth stopped and withdrew. She left my cock with a pop and a deep exhalation; gasping for breath. Opening my eyes, I saw Elle with her hair messy and forehead covered in a sheen of sweat. Her cheeks were flushed and lips slightly agape as her chest heaved for oxygen.\n\n\"Good morning, bro,\" Tecla greeted. She was sitting next to her twin, watching as our sister sucked my cock.\n\nElle made sure I was looking at her as she blew me a kiss, still all messy and hot as she gave her all to me.\n\nMy little sister looked wild -- intense -- as if a beast inside her had taken over and wanted nothing more than to make her brother cum. She got down, leaning forward and kissing the inside of my thigh, then a little higher, and a little higher still. Her mouth reached my balls and she kissed them before wrapping her lips around and sucking ever-so gently. Her tongue soon landed flat against the sensitive place. She articulated it while tightening and loosening the grip of her mouth. She played with me, making me moan and groan and tell her how much I loved it.\n\n\"Fuuuck, Elle, you're making me feel so good!\"\n\nWith affirmation from her big brother secured, my sister's lips vibrated with contentment as she slowly dragged them from my balls.\n\nElle's next target was the shaft of my cock, which was now flexing as pre-cum dripped down the side. This was going to be her first taste... She was scared. She wanted to like it.\n\nMy sister kissed the crown of my cock, feeling the substance against her lips and letting it coat them before pulling back to lick them clean. She extended her tongue and edged forward again, touching the tip to the base of my cock and moving her way up along the length. When she reached the top, she planted a kiss and swallowed deeply, tasting her big brother and settling that she liked it.\n\nElle took my shaft in her hand again and squeezed as she slowly stroked it. She wanted to produce more precum for her taste-test, but there was only going to be so much of that... If she wanted to get a really good feel, she was going to have to get me all the way.\n\nAgain, she put her lips to the base of my shaft. She left little kisses in the way she used to kiss my cheek. One, two, three. Her lips landed on the tip again and I shuddered as she kept them there, letting the feeling of softness against that sensitive place linger. Just as she'd planted innocent pecks on her way up, she did the same going back down. With each inflection, she drew a reflex as my cock twitched under her touch; leaking and tensing and firming. Once back at the base, she let her kiss linger again, then it turned continental as her tongue took centre stage. The movement was ultra-slow; an uninterrupted millimetre by millimetre journey up along my cock until it reached the apex and my Elle's lips made an airtight seal. She pushed her head down, swallowing me up before stopping a few inches later. Back up; and down again; over and over in increasingly fast movements!\n\nA new sensation hit as Tecla shuffled over beside me and kissed my neck. Her touch was sexual with a gentle aggression and she wanted to leave a mark as a tender kiss turned to a possessive love-bite. Her hand trailed down my torso, leaving goosebumps in the wake of her fingers passing over my skin. She wanted to kiss my body while her twin worked my cock. She wanted to explore every square-inch and see how I responded. Now and then, her lips dragged, her tongue teased, or her teeth tested.\n\nSuddenly, Tec's warm touch cooled as a new heat entered the equation. I gasped for air as my penis crossed a barrier and entered the grip of Elle's throat. It was almost unbearably tight and the sound of my little sister gasping and gagging made me want to release her, but she only wanted more and more of me -- more and more of her big brother's cock, filling up her throat.\n\nNot being able to breathe with my shaft filling her throat, my sister's eyes rolled back, but didn't relent. The feeling was so new, she just had to register each micro-sensation, and that took time. Time she took as she kept me deep-deep down her throat and between her cheeks with her mouth open-wide and her tongue keeping me in place.\n\nI was breathing hard and loud and Tecla's manicured fingernails were gripping my chest when I realised I had to be the teacher. I had to set the rules.\n\nTaking Elle's head between my hands, I wrenched her from my cock. She pulled back, leaving behind a slick shaft with a line of dribble clinging to her lips as she did.\n\nMy little sister was blue in the face, but oh-so proud of herself as she saw me happy.\n\nTecla helped her twin out as her hand reached for where her sister's mouth had been and started stroking while Elle regained her strength. The movements were slow and precise; intended to keep me on the edge, but saving my climax for Elle.\n\n\"Nice teamwork, girls,\" I complimented, and my sisters giggled happily. Elle dared to bring her hand closer to her sister's and cupped my balls as Tec stroked. The two were in perfect sync with their twin telepathy making sure there was wordless synergy amongst them.\n\nReaching to cup Tecla's breasts, I took one of her nipples between finger and thumb and gently pinched the stiffness as my palm sank into her pillowy boob. She pulled back a little, straightening her back so I could see her better. Taking my hand, she freed her breasts and brought them to my mouth, wanting her brother to taste them. Then, just as my lips sealed around one of her perfect pink nipples, Elle wickedly took my cock down her throat in one fast movement!\n\nThree people moaned in unison. Three siblings. Three soulmates.\n\nThere were three different sounds and each was more intense than the last. It was the sound of sex and of pleasure and of love and it was perfect.\n\nAs Elle's lips came close to the hilt of my cock, I felt the explosive rush of thrusting my hips up to push my shaft even deeper into her throat. It was like being thrown with boiling water before a icy gust blows it all away. The tight sensation made my lips seal down harder on Tecla's nipple, and her croon as my cock threatened an eruption. Feeling something stir, Elle moved faster and took deeper mouthfuls, throat-fulls, cheek-filling and tongue gliding inhalations of her brother's cock. Each time she went up, she inhaled through her nose so she could go down a little longer.\n\nI could only take so much and a full-body orgasm was about to rock my body. It started with a tingling in my lips, a contraction of my throat, a tensing of my abs, a lifting of my back... Then, it was like my body vanished from the world except for those parts that were touching and being touched. Until even that faded and it was just the shaft of my cock buried down my little sister's throat. Until it was even less: just the feeling of cum exploding; filling Elle's cheeks.\n\nMy sister pulled back fast with cum oozing out of her mouth -- her lips blowing bubbles as she parted them. She wore the biggest smile a girl could ever smile, and her eyes bulged with amazement. Those eyes were an artist's palette: a mix of colours and textures that painted my world as I looked into them. She wiped her mouth and swallowed down as much of what was in it as she could. All the while, we were in bliss -- all three of us -- amazed at what had just happened. Amazed at what our life had become.\n\n\"I'm so proud of you,\" I told the girls as they settled on either side of me. Elle was the happiest to hear it; pleased that she'd done well and made her brother cum.\n\nUs three siblings giggled softly as we drank in the moment -- the glory of our new life. I knew then, for all the challenges, there was immeasurable hope for the future. Our future."
    ],
    "authorname": "ScrappyPaperDoodler",
    "tags": [
        "brother",
        "sister",
        "twins",
        "threesome",
        "drama",
        "romance",
        "smoking"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/hypergeniture-bk-01-pt-03"
}