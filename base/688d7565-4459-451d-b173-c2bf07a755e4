{
    "title": "Anne's Anal Antics",
    "pages": [
        "Nick's cock slowly invaded the glossy pucker of Anne's anus then exited at the same pace. The sensual scene replayed several times and the warmth of her tight channel soon had him longing for more. Trying to ignore his lack of control over the maddeningly sluggish speed, he focused on his wife as she worked her ass up and down his length. With both his wrists and ankles shackled to the bed, he had no option but to embrace the novelty of being used as her sex toy. \n\nThe unusual turn of events began the day before. While on his way to work, Nick's cell phone rang at exactly 7:10 am, as expected. Even without checking caller ID, he knew it was his wife, who called every morning at the same time. \n\nAnswering the call, Nick greeted Anne warmly, \"Hey Babe.\" \n\n\"Hey! Miss me yet?\" Anne's voice was laced with humor, since they had just parted fifteen minutes earlier.\n\nNick snorted, \"Of course! Did you read any good stories today?\"\n\nDuring her early morning exercise routine, Anne enjoyed reading stories on her favorite erotic literature website. She favored the 'Anal' and 'BDSM' categories and looked forward to scouring the new releases each day. If one tickled her fancy, she would relay it to Nick, in great detail, during their separate commutes to work. \n\n\"Actually, I read a really hot 'Anal' story,\" she said wistfully. \"A husband tied up his wife as punishment, then gave her ass a really rough ride. It made me super horny\". \n\nPicking up on her not so vague hint, Nick's tone was mild, \"Oh, really.\"\n\n\"You know... it's been a while since we've had time to play some kinky games. And... well... I've been a very naughty girl lately. I'm pretty sure I deserve a punishment,\" trying her best to sound contrite, she still managed to miss the mark. \n\nAnne truly loved anal sex, which was a blessing in Nick's mind. The problem was that she wailed like a banshee during anal orgasms. With teenagers still at home, their opportunities to cut loose were few and far between. \n\nKnowing his wife was desperate for kinky sex, Nick took her not so subtle invitation in stride. She was right; it had been quite a while since they enjoyed a wild night. In truth, he was shocked it had taken her this long to propose a secret sex date and was fully on board with the direction of their conversation.\n\nResponding to Anne's obvious desire, Nick played his part. \"I'll be the judge of whether you really deserve a punishment. Now, tell me what you've done,\" he said, in a commanding tone. \n\n\"Well, for one thing, it just so happens that I'm speeding at this very moment,\" Anne knew it was a weak effort, but this was just the first pitch.\n\nUnderwhelmed, Nick sighed, \"You speed every day. That's not really worthy of a punishment.\"\n\n\"Oh,\" unconcerned by her swing and miss, she was ready for the second pitch. \"Well, I 'borrowed' $30 from your wallet before I left for work.\"\n\nNick chuckled, \"Ok... no big surprise there. Most days I feel like your personal ATM. Is that all?\" He asked, fully expecting more from his inventive wife.\n\nHaving saved the best for last, Anne was confident she was on the verge of a home run, \"So, it turns out the Parkers asked us to dinner Friday night and I said we would love to come.\"\n\nDead silence followed for several moments while Nick processed the unwelcome news. She knew perfectly well he didn't enjoy spending time with the Parkers. Though the wife was a dear friend of Anne's, the husband was socially awkward.\n\n\"Little One,\" Nick said, after clearing his throat loudly, \"you really DO deserve a punishment for this. Let me see what I can do about making room in my schedule tomorrow afternoon.\"\n\nWhen Nick used her sex toy moniker, Anne's pussy clenched. Being at her husband's mercy, while he used her body for pleasure, was the ultimate turn-on. Luckily, she would be done by noon the following day, which was perfect timing.\n\nGiddy from success, Anne barely contained her delight, \"Oh, boy! Um, I mean... oh no! Well, I'll just have to accept whatever punishment you feel fits the crime. But, my ass has been feeling very left out lately.\"\n\nAnnoyed by the upcoming dinner with the Parkers, Nick decided to tease his wife as partial payback. \"Maybe your punishment will be forgoing anal intercourse,\" he joked, in his most serious voice.\n\nStunned, Anne practically choked, \"Babe, punishment should always include anal!\"\n\n\"You're in no position to make demands, Little One.\" Nick kept up his torment, a wry grin on his face. \"I'll take your request into consideration, but don't count on getting your way. This was a pretty serious transgression. Now I'm just pulling into work. We can talk more later.\"\n\nDeflated, Anne replied, \"Love you.\"\n\n\"Love you, too,\" Nick hung up, pleased with himself for putting one over on his wife.\n\nIn her car, Anne was horrified by the turn of events. Her clever plot to induce a rough anal session had very suddenly gone off the rails. Surely, Nick must know how badly she wanted some kinky ass action! \n\nFiguring she could entice him into compliance, Anne quickly came up with a plan to ply him with margaritas. There was no way he could resist the allure of her eager ass with a strong hit of tequila on board and she knew just the place that would cater to her needs.\n\n*****\n\nThe following day, Anne and Nick met at home just before lunchtime. When she suggested a quick trip to their favorite Mexican restaurant, he readily agreed. Not only were the drinks strong, the food was outstanding and most importantly, service was quick. \n\nAs usual, they requested an out-of-the-way booth. After being seated, two of their favorite Margaritas magically appeared at the table and their food order was quickly taken. With the preliminaries out of the way, they sipped their drinks and relaxed.\n\nA very direct person, Anne had no qualms about speaking plainly. Hoping Nick had forgotten about his absurd idea to withhold anal, she decided to test the waters.\n\n\"Hey Babe, I'm pretty horny. Let's get crazy this afternoon,\" she said, while winking suggestively.\n\nNick chuckled to himself, guessing Anne was concerned about his threat to avoid anal play. Though he had every intention of drilling her ass long and hard, he thought it might be fun to keep up his ruse.\n\nCocking an eyebrow and maintaining his poker face, he said, \"Today, we'll keep it low key. After all, Little One, you DO deserve a punishment.\"\n\n\"Haha, very funny. Get serious and quit goofing around,\" she said, attempting mask her obvious concern.\n\nAlthough typically a terrible actor, Nick felt confident in his performance. Anne was genuinely squirming before his very eyes and it was quite entertaining. \n\nLeaning in, he spoke sternly, \"Make no mistake, my mind is set.\"\n\n\"But Babe, don't you enjoy fucking my ass while I'm tied to the bed? You can put me on my knees, ass up, and have your way with me.\" She tried to tempt him by painting an erotic image. \"Picture your hard cock plunging into my little hole... imagine my screams when you make me cum...think about my ass clamping down while your cock empties its load inside me! Come on, I need you to deliver a cream pie to my back door! Pleeaase...!\"\n\nAlways impressed by Anne's anal enthusiasm, Nick's cock immediately stiffened. Oh yes, he planned to do all of that, and more. But for the moment, he was enjoying the charade.\n\n\"I've made my decision. Anal, bondage and punishments are all off the table today,\" he said, managing to sound disinterested.\n\nWatching Anne's face flicker with frustration was immensely amusing to Nick. He expected her to change strategies and was not disappointed. \n\nAnne moved on quickly, trying to guilt him. \"But Babe, you're the one that got me hooked on anal! When you think about it, this is really all your fault. You owe me a good ass fucking!\"\n\nThere was some truth to her statement. It had taken Nick over twenty years to convince Anne that anal sex was worth a try. Once she realized anal orgasms were real, and rivaled the vaginal variety, there was no stopping her. In a sense, he was responsible for creating this anal monster.\n\nIntrigued to see where she might head next, Nick continued to yank her chain, \"Missionary position and vaginal penetration will do for today, Little One.\"\n\nAnne's face twisted in disbelief. That kind of sex was fine for weeknights, when they had to keep quiet because the kids were home. But this kinky opportunity was too precious to waste! \n\nDeciding to try her luck at flattery, Anne didn't miss a beat. \"Ok, Listen. I'm going to be totally honest. If you weren't so good at banging my ass, I wouldn't even want to have anal. Skills like yours shouldn't go to waste.\"\n\nNarrowing his eyes, Nick's reply was simple, \"Nice try.\"\n\n\"Babe, please tie me up and fuck my ass! It's been too long since we've played and I really need it,\" she whined, as a last resort.\n\nShaking his head, Nick thought about taking pity on her. If he just confessed it was a joke at her expense, she would settle down. About to speak up, he suddenly felt her bare foot directly on his crotch. With her toes, she softly caressed his rock hard boner under the table while smiling in victory.\n\n\"You keep saying 'no', but your cock says 'hell, yes'. Am I right?\" Anne whispered, her eyes alight with merriment.\n\nSuddenly unwilling to surrender, Nick took several deep breaths and tried to focus on unsexy thoughts. Picturing dinner at the Parkers brought him back from the brink.\n\nSpeaking slowly and softly, he replied, \"My rules for today stand.\"\n\nAnne shrugged and sighed, \"Ok, you win, Babe. Let's just enjoy lunch and head home. Hell, maybe we should just relax. You do seem a bit tense.\"\n\nTheir meals arrived and the lovers quickly ate, while discussing other matters. Nick was surprised that Anne managed to put the conversation behind her, since she was not fond of losing.\n\nIn the back of her mind, Anne felt justified about preparations made earlier in the day. Nick had chosen to play with fire and would soon get burned. She was fully prepared to act and take matters into her own ass.\n\n*****\n\nArriving at home, the couple went directly upstairs to their bedroom. Nick sat on the corner of the bed while Anne slowly removed her jeans and white button down shirt. Knowing full well he enjoyed a good striptease, she made sure to exaggerate her movements. When down to her black lacy bra and matching thong, she walked to her husband and took off her lingerie.\n\nStanding naked before him, Anne looked at Nick with sincerity and asked, \"Babe, can I give you a massage? You deserve one for being so patient with my shenanigans.\"\n\nThough Nick was ready to bang his wife's ass senseless, he was moved by Anne's thoughtful suggestion. Her massages were pretty decent and they had plenty of time. \"That's a nice offer, Little One. Go ahead. But first, undress me.\"\n\nBlushing sweetly, Anne replied, \"With pleasure.\"\n\nSince Nick had left his jacket and tie downstairs, it didn't take her long. She climbed on the bed and crouched directly behind him, setting her knees on either side of his body. Reaching around his chest, she unbuttoned his dress shirt and removed it. His plain white t-shirt followed.\n\n\"Stand up and turn around,\" she whispered, seductively.\n\nNick followed her instructions which put his pelvis directly in front of her face. While staring in his eyes, Anne unbuckled his belt, unbuttoned his trousers and then lowered the zipper. Tugging, she pulled down both his pants and underwear, leaving him naked and semi-erect.\n\n\"Now, come lie down and let my fingers do their work,\" she said while tapping the bed lightly.\n\nHappy to comply, Nick stretched out on the middle of the bed, face down. After straddling him, Anne sat on the center of his back. \n\nStarting with his shoulders, she spoke with concern, \"Oh Babe, your arms feel so tense! Put them over your head so I can work all your muscle groups.\"\n\nNick was highly distracted by the wet spot forming on his back under Anne's pussy, but managed to register her request. Stretching his arms towards the pillows, he was vaguely aware that Anne scooted forward, until situated between his shoulder blades. After leaning over the edge of the bed, she appeared to grab something. Then, quick as lightening, he felt cold steel around his wrists and heard the telltale click of handcuffs.\n\nNick's head immediately reared as he pulled on his hands and found them restrained. Reality hit hard; his 95 pound wife had just gotten the drop on him, no small feat since he weighed in at 210. Immediately after, the nimble ninja scurried off his body and sat next to him. \n\nAlthough reluctant to look at his wife, who was surely proud of the prank, Nick turned his head to the side. What immediately caught his attention was the slick pussy on display between her widely spread thighs. He groaned, feeling foolish that he had been snared face down. \n\n\"Ha! I totally skunked you!\" she squealed.\n\nNick knew there would be no living this down, since Anne was prone to gloat. Being generally easy going, he was tempted to join in her mirth, but decided to take stock of the situation. \n\n\"Nice move, Little One,\" he conceded, always gracious. \"So, what happens next?\"\n\nAnne was not done crowing, \"Holy guacamole! I actually captured you!!! I wish you could have seen the look on your face! Classic!\"\n\n\"Yep, you caught me fair and square. So, what's your end game?\"\n\nCackling at his unintended pun, she replied. \"It's more like my 'rear' end game!\"\n\nTaking several deep breaths, she settled down. Giving pleasure to Nick was definitely part of the plan and she wanted to put his mind at ease.\n\n\"Ok, ok! Phew! These are your options. I attached the handcuffs to a small piece of chain that's locked to the bed post. That leaves you free to roll onto your back. If you choose that path, I'll put your cock to good use. But you'll be completely at my mercy, for a change. Or... I can lay here and play with myself while you take a nap. It's entirely your call, Love.\"\n\nNick's mind was made up immediately, but he made a show of mulling it over, \"Let's see, I can let you at my cock, or lay here like a lump on a log. I'll go with option number one.\"\n\nClapping like a three year old, Anne was overjoyed. While much preferring a submissive role during kinky games, Nick pushed a previously unknown hot button by threatening to withhold anal sex. He had no one to blame but himself for her extreme measures. \n\n\"Great!\" she exclaimed. \"Now, roll over and keep your legs together. I need to chain up your ankles.\"\n\nSupporting himself on one elbow, Nick flipped his body as Anne instructed. She hopped off the bed and produced metal ankle cuffs which must have been stashed under the mattress earlier in the day.\n\nOnce all of Nick's limbs had been restrained , Anne proudly studied her work. Staring down at her husband's face, she tenderly kissed his forehead.\n\n\"Don't worry, Babe. I'll be gentle,\" she whispered directly in his ear.\n\nAn easy going fellow, Nick laughed at the tiny trickster, \"Well, Little One, you seem to have me right where you want me.\"\n\n\"Why, yes I do. Thanks for noticing,\" she laughed while on her way to the door. \"Now, you stay put and I'll be right back.\" \n\nBeing restrained was a new experience for Nick. The couple had engaged in bondage since early in their relationship and over their three decades together, Anne had spent countless hours in cuffs, chains and even a stockade. Never before had she expressed any interest in turning the tables, so this was an unexpected twist.\n\nNick was impressed that Anne drew on her wealth of experience when binding him to the bed. Testing his mobility, he was actually proud she had managed to secure him without causing pain. The cuffs weren't too tight on his wrists/ankles, nor were his limbs stretched to the point of discomfort. All in all, it was a pretty successful effort. \n\nHis attention shifted after noticing Anne had returned and was standing in the middle of the room. To say she had dressed for the occasion would have been an understatement. \n\n\"Like what you see?\" Anne eyes shone with mischief as she modeled her new outfit.\n\nUsually preferring soft, feminine lingerie, this afternoon she had gone in a new direction. A strapless black leather corset gave her the look of a woman in control. Already petite, it further accentuated her tiny waist, while managing to make her small breasts appear larger. She opted to go without panties, leaving her hairless sex exposed for his viewing pleasure. A bit further down, thigh hi, black sheer stockings hugged her toned legs. Completing the erotic ensemble were severe looking black stilettos. \n\nNick's jaw hung open at the site of his wife, dressed in the very risqu\u00e9 outfit. \"Fuck! You look SO hot, Little One!\"\n\nTurning away from him, she stuck her hips to one side and patted her ass. With his cock now at full mast, he briefly strained to rise before remembering he was bound to the bed.\n\n\"Little One, let me up and I'll give your ass the rough ride of your life,\" he said, attempting to negotiate.\n\nAnne shook her head while laughing, \"Oh, I'll get a rough ride, don't worry. You had your chance and blew it. I'm planning to take what I want.\"\n\n\"Come on! I was just joking about withholding anal. Let's trade places,\" he sniveled.\n\nShrugging, Anne replied, \"You poked the horny bear, Babe. What's done is done. Now if you insist on talking, there will be consequences.\"\n\n\"But,\" he began.\n\n\"Exactly! Butt...\" she answered, making air quotation marks with her fingers. \"That's the name of this game. Now, I warned you to keep quiet and you disobeyed.\" \n\nAnne tapped her index finger against the side of her mouth and squinted in faux concentration. \"Let's see, how shall I deal with your disobedience? Hey, I have an idea,\" she said, waving her hands in earnest. \"Instead of jabber-jawing, you should use your mouth to pleasure me!\"\n\nSensing the game was well underway, Nick wasn't sure if he should respond verbally. Wisely, he chose to nod his head in agreement. Anne's outrageous outfit and bawdy behavior had him longing for any type of contact with her body. \n\n\"Ah, you're a fast learner, I see,\" she said. \"Let's put your mouth to work. I want you to lick my naughty hole, like a good boy.\"\n\nAgain, Nick nodded emphatically, happy to acquiesce. Allowing Anne this 'switch' moment only seemed fair under the circumstances and he was happy to go along for the ride.\n\nCarefully, so as not to jostle her husband, Anne crawled back on the bed. She straddled him at the level of his neck and kneeled, placing her ass directly over his face. Ever the tease, she gyrated her pelvis while rubbing her hands along the gentle curves of her buttocks. \n\n\"Now, give me some sugar... in my ass,\" she said, with authority.\n\nAnne felt Nick's body shaking from the laughter he struggled to suppress. Rimming his wife wasn't really a punishment and watching her get off while he tongued her ass was a turn on. Consequently, he was more than happy to oblige.\n\nSmirking, Anne bent over and looked between her legs, \"I'm granting you access to a very special place, Babe.\"\n\nAs if unveiling a treasured gift, she shifted her hands to the center of her toned ass and parted the creamy white cheeks. There, for Nick's viewing pleasure, was her delicate star. In the light of day, he could easily appreciate each and every fold that made up her unmentionable entrance. Slightly darker than the rest of her skin, the tone gave it an almost exotic appearance. In all, it was a very appealing target and one he never tired of hitting.\n\nMisinterpreting his pause, Anne spoke words of encouragement, \"Come on, Babe. You know what to do. Put your mouth on my ass.\"\n\nWith pleasure, Nick puckered his lips and pressed them against Anne's anus, which now quivered in anticipation. Lovingly, he nibbled, sucked and kissed his way around the small circle, eliciting soft moans from his wife. No amateur, he knew exactly how to manipulate the crinkled skin surrounding her back door. ",
        "Anne was perpetually amazed at the enjoyment she experienced during anal stimulation. In her mind, it proved anal sex was a natural sex act, undeserving of its taboo status. Before long, the exquisite feel of his molten mouth against her opening, had her primed and yearning for more. \n\n\"Babe... please! Slip your tongue in my bum and make me cum.\" she whimpered.\n\nShe didn't need to ask twice. Nick was an extremely generous lover and looked forward to driving her over the edge. Sticking out his tongue, he stiffened it as much as possible, before properly invading his wife's shamelessly offered orifice. \n\nTo assist, Anne slowly lowered her body until his tongue barely poked through the taut entrance to her pleasure spot. The searing heat inside her sensitive rim affected her so profoundly, it momentarily stole her breath. Craving complete penetration, Anne began her final decent onto his mouth.\n\n\"Fuuuuck, Babe. That feels so good! Oooooh!\" Anne began to wiggle her ass on his relentless tongue. \n\nPicking up on her obvious cues, Nick went for the gusto. Slowly but surely, his tongue achieved maximum intimate contact. As usual, her external sphincter accepted his intrusion after some initial resistance. Once past that barrier, he pushed forward, just deep enough to cross her more unyielding inner sphincter.\n\n\"Aaahhhh! Baby! Please! Make me cum!\"\n\nWhile significantly smaller than his cock, Nick's tongue made up for the size discrepancy with its dexterity. He alternated between swirling his tongue and thrusting in and out of her most private place. In no rush, he was happy to soothe her need. Judging by the amount of pussy juice collecting on his chin, he knew she would soon climax. \n\nWhile Nick worked his magic on her ass, Anne was beside herself. She had waited, somewhat patiently, for this moment all day. The feel his sensual lips and talented tongue on her intimate area sent a wave of relief through her body. At the same time, the sexual tension that had been building was about to detonate. It was an interesting contrast that she relished.\n\nAfter spending several minutes catering to Anne's carnal urges, Nick felt her posture change. Arching her back, she began to move slowly up and down over his face, while still holding her cheeks open for his perusal. She was close, and he prepared himself for what would come next.\n\nSuddenly, she stiffened. In a desperate attempt to find purchase, she moved her hands to Nick's chest, leaving his face sandwiched between her thankfully small ass cheeks. Barely able to breath, he soldiered on, bravely. \n\nTime seemed to stand still as Anne plunged over the orgasmic cliff. What began as a small spark located in the center of her anus, soon spread like wild fire through her entire body. In that split second, every muscle in her pelvis began to rhythmically contract and relax as the blessed release claimed her. \n\n\"OoohhhMyyyGoddd,\" she howled at the top of her lungs, with her head thrown back in ecstasy. \n\nAfter several seconds, Anne went limp and fell forward onto Nick's abdomen, removing her ass from his face. Mumbling, she appeared momentarily incoherent but managed to shift so that she lay beside him with her head on his chest. Stroking him, she purred like a contented sex kitten.\n\nMissing his banter, Anne finally murmured, \"Babe, that felt amazing. You can talk now, if you want.\n\n\"Nope. I'm good,\" was his cocky reply.\n\nPeering up at his face, she snickered, \"Really? There's nothing you want say?\"\n\nHis only reply was to shake his head with a bemused expression. Sometimes, words just weren't necessary.\n\nAccepting Nick's vow of silence, Anne's focus abruptly shifted when she noticed his cock bobbing proudly between his thighs. Capped elegantly with a drop of precum, it called to her on a spiritual level. Though drained from the force of her recent climax, she needed his dick in her ass and would settle for nothing less. Spurred by her undeniable desire, she reached out and gripped his pulsating manhood with both hands. \n\n\"Hmmm, you'll be talking soon enough,\" she replied with confidence as she fondled his cock. \n\nGenerally, Anne was not a fan of being on top, preferring to absorb the force of Nick's masculine power during intercourse. Realizing this was her dominant moment to shine, she decided on the position which would give Nick the best view. After kicking off her shoes, she scooted forward and squatted, while facing his feet. Balancing on her knees, her ass hovered tantalizingly over his erection. \n\nAnne needed true anal satisfaction, and now the time had come. \"Brace yourself, Babe. I'm going to ravish my ass with your cock,\" she whispered in a voice tinged with lust.\n\nReaching behind her, she grabbed his dick with her right hand and used the other to pull her left buttock to the side. With precision, she aligned his manhood against her hungry hole and rubbed the head on her entrance. The combination of his precum and saliva was an effective lubricant and she knew from experience it would be enough to ease his passage.\n\nNick felt her brace as his cock poked through the exterior. With care, she proceeded to mount him until he was completely seated in her rear entrance. Though far from their first anal experience, Nick still appreciated the extraordinary sight of Anne's ass, as it engulfed his cock. Never tiring of the powerful image, he only wished she was able to achieve his vantage point. \n\nFirmly gripped by her warm flesh, he craved the sweet friction that came from savagely sawing in and out of the narrow channel. But for now, he was satisfied to let Anne drive and bide his time. \n\nHaving moaned throughout the insertion and adjustment period, Anne finally spoke with great pride, \"Babe, look! I put you deep into my ass, all by myself!\"\n\nThe presence of Nick's thick shaft in her ass always sent Anne into orbit, since the stretch of her sensitive tissue was almost enough to induce an orgasm. However, being on the edge of Nirvana wasn't as good as arriving. There was still work to be done. Placing both hands on his thighs and arching her back, she prepared for the final assault.\n\nShe began to rise and fall over his hard length with determination. At first, it was intentional, as she tried to settle into a reasonable rhythm. Attempting to pick up speed, she found it to be quite a challenge without Nick's help. Gracefully, she managed to shift to her feel without dislodging his cock. But, it soon became apparent that her small stature made it impossible to achieve the punishing pace she so desired.\n\nAfter several minutes of Anne's efforts, Nick's desperation grew unbearable. Though he enjoyed this appetizer, his cock was ravenous for the main course. Still, he held back and waited for her to pass the baton.\n\n\"Babe, I... this... is... hard,\" she finally admitted, failing to plunder her own ass.\n\nNick was more than ready to resume alpha status. During Anne's next downswing, he unexpectedly bucked his hips. Consequently, Anne toppled backwards, while still impaled on his dick. Landing with her back against his chest, she tried and failed to right herself. Nick waited as she wiggled for a few seconds, making sure she was stable on her perch.\n\n\"Now tell me Little One, who's in charge,\" he whispered. \n\nRelieved by the assist, Anne's request was simple, \"For the love of God, just drill me, Babe.\"\n\nNick finally let loose on her needy ass when he was satisfied with her position. Bucking like a bronco, he fiercely pounded her from below while she held her pelvis slightly above his. Her screams, moans and entreaties for \"MORE\" were like music to his ears. His wife truly loved anal sex... of that he was certain.\n\nNow that Nick was giving what she badly needed, Anne was in heaven. Despite their relative positions, she gladly allowed him to claim her body, making it his. Large and powerful, his cock affected her in a way his tongue could not and the depths to which he plumbed her inner walls soon had her poised for another climax. Listening to him grunt as he found pleasure in her ass finally pushed Anne over the edge. \n\n\"Please! Don't! Stop!\" She begged.\n\nHaving sensed his wife on the precipice, Nick was soon rewarded for his frenzied efforts. When she finally succumbed, her ass clasped his dick with superhuman force. Once her rhythmic contractions began, he allowed a well-deserved orgasm to overtake his body. Spurt after spurt of his seed gushed forth into her raunchy recess as he yelled out her name with lecherous delight.\n\nAlready riding the crest of body spasms, Anne had an emotional climax when he called out her name. There was no greater reward than inducing Nick's orgasm with one of her own and she thrived on this sexual high. Instinctively, she clutched his hips as an anchor while their bodies shook in tandem. \n\nAnne collapsed on top of him after weathering the sexual tsunami. She fumbled for several seconds before attempting to disengage from the source of her sexual satisfaction. The consummate 'Dirty Girl', she enjoyed having his cum in her ass and wanted to save what she could. Remarkably, she managed to rise and flip all in one motion, stretching out along the length of his body. Sated, Nick was content to let her relax, though he was still restrained.\n\nAs she listened to his heart rate slow, Anne sensed he might be drifting off and decided to set free her afternoon fuck toy. Briefly, she wondered if he would seek retribution. With all her heart, she hoped so... only time would tell.\n\n\n***********\nThis story is dedicated to my husband, \"Nick\".  He's a kinky bastard and I love him madly."
    ],
    "authorname": "SueDanym",
    "tags": [
        "bondage",
        "domination",
        "femdom",
        "handcuffs",
        "married",
        "orgasm",
        "tied",
        "rimming"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/annes-anal-antics"
}