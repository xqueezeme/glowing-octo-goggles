{
    "title": "A Real Man in My Life Ch. 05",
    "pages": [
        "Parker's assertion that my boyfriend was having sex with someone else was as pathetic as it was predictable.\n\n\"Is he really,\" I said, \"I'm sure I would have noticed.\"\n\n\"Really,\" said Parker, \"I have evidence.\"\n\n\"Oh, do tell Parker.\"\n\n\"I've promised not to,\" he said. He leant against my car and sighed with a deep and meaningful shake of his head, and with his appalling level of amateur dramatics I thought that for once he had copied Bradley rather than the other way around. \"I just don't want you to suffer any more pain Natalie, Come here,\" he said spreading wrinkling his nose with a feu-compassionate resigned smile on his lips and his arms wide.\n\n\"Fuck off Parker,\" I stepped back from him.\n\n\"No,\" he said adopting his voice he used to use to try and boss me around, \"Come here Natalie.\" He moved closer and tried to envelope me in his arms, even though I was a head taller than him.\n\n\"Parker, get away from me, you take one step closer and I'll punch you in the face.\"\n\nHe stopped and did his now famous arms outstretched, mouth open, bottom lip protruding, looking around for support 'What have I done now?' dance that Bradley had almost mastered.\n\n\"Leave me alone you fucking idiot!\" I said getting out my mobile phone and walking back towards the school and the other staff members that could witness his strange behaviour.\n\nI could see his supressed anger in his face, he had always really hated me standing up for myself and 'giving him cheek', he was so convinced that he was in the right. He started with that thought in his mind.\n\n\"Natalie, this is your last chance,\" he growled, \"right now I'm prepared to take you back, no questions, no names, no pack drill, even though you're dressing like a slut,\" his voice dropped a few octaves in disgust, \"and... and I'm even... I'm even prepared to forgive and forget that you've slept with Woods!\"\n\nHe dragged out the word 'slept' and gave it so much am-dram venom ending in disappointment that I thought I was going to laugh and 'Woods' as if my lovely Gray was just the very worst sex pervert.\n\n\"Yeah, I slept with Gray, lots of times but at least I had the decency to have waited until I was separated from you first. And you know what, he's a thousand times better in bed than you are. I folded my arms, \"he gave me more orgasms in one weekend than I had with you in our whole married life! So other than you slagging me off for the last three years, fucking all of your female employees other than Edith, why should I get back with you again?\"\n\nHe bit his bottom lip and tried to think. It went on for just too long.\n\n\"Because... because I... love you? Yes! Yes,\" he said dropping to one knee, \"I love you Natalie; Woods doesn't he's just using for sex...\"\n\n\"Yeah and he can carry on as far as I'm concerned.\"\n\n\"But...\" he suddenly remembered and then picked up his brown folder, \"I have evidence! AND I forgive you!\"\n\n\"Have you finished Parker?\" I said with folded arms and a furrowed brow, \"Yes? Good, well Parker fucking Wallace,\" I spat, \"I don't forgive you for screwing Shauna, and then for screwing Penny, and then screwing Stephanie, and then screwing Diana; and I don't forgive you for spending your money on them on not our children, or our house. I forgive you nothing Parker,\" I shouted, \"NOTHING!\"\n\n\"Natalie!\" he scolded like a school master.\n\nThe amateur dramatics hadn't finished,\n\n\"Natalie,\" he said with a studied wobble in his voice, \"Darling, I... I want you back, you're all I've been able to think about for weeks, please... please give me another chance!\" He reached out for me and I pushed him away, the heel of my hand in his unprotected solar plexus. He groaned and fell back slightly then looked angrier than before.\n\n\"You're MINE Natalie!\" he snarled. That look I'd never seen before was quite scary and I did feel just a little concerned, we'd gone for it more than we ever had before. Well I had at least.\n\n\"Everything OK Natalie?\" said a voice from behind me. It was Pete Creamer, one of the huge PE teachers and twice the size of Parker.\n\n\"This is Parker, my ex-husband...\"\n\n\"You're still my wife!\" Parker snapped at me, eyes blazing, but he came back to himself and starting backing away slightly as the giant Pete moved closer, Parker tried to recover his bravery pointing at me, \"don't you forget that!\"\n\n\"No Parker,\" I said, \"I'm still married to you, I stopped being your wife when you started sleeping with other women.\"\n\nParker growled\n\n\"Oh my fucking Christ, this is none of your business!\"\n\n\"OK Mr Wallace, I suggest you leave the school grounds,\" said Pete, and I could see through the staff room window several colleagues looking across at us, one with a phone to her ear.\n\n\"You going to make me boy?\" said Parker trying to increase his size.\n\n\"I can if you really want me to,\" said Pete with a grin taking a single pace forward. Parker turned, and stepped towards his car huffing and puffing for the want of some kind of verbal response.\n\nOnce he was safely at his car with the door open he did the touching his eyes with two fingers and pointing at me in that 'I'm watching you' gesture.\n\nI proceeded to point at him then raise my middle finger in a 'fuck you' gesture, glad that no children were on site to witness Mrs Wallace's 'difficulties'. Parker's car pulled away with some difficulty, I guessed that on top of everything else that was buggered as well. In a cloud of smoke and some rattling, his old BMW finally got out of the car park. I rolled my eyes and thanked Pete.\n\n\"No problem,\" he said, \"glad to help Natalie.\"\n\nI heard the screech of his fan belt as he reached the junction and I wondered who he was going to get to fix his car this time. So many of the local garages refused to help him because of unpaid bills and bounced cheques and the rather annoying habit of his of trying to bargain the price down or barter with them - after the work was done of course.\n\nOne of the people watching the proceedings was the school headteacher who had a discussion with the site manager and before I'd even left the car park, they had captured a still picture of Parker in action and attached it to the banning letter we occasionally gave to pupils and parents telling him that he had no further business on school grounds and would be prosecuted if he set foot on any land belonging the county education department. I wrote out the envelope myself the very next morning.\n\nI rang Gray when I got home and told him of Parker's increasingly irrational behaviour.\n\n\"Are you OK Baby?\" he said, \"Do you want me to come over?\"\n\n\"I'll have a glass of wine and a nap, I'll be fine Gray honest.\" I replied trying to sound more confident than I felt.\n\n\"So long as you're sure Darling,\" he said.\n\n\"I am honest,\" I said, \"Oh by the way, Parker says he has evidence that you're shafting someone else.\" I added a giggle letting him know how ridiculous I thought it was.\n\n\"If I had the energy to make love to two women, then I'd be at your place every night Baby,\" he said, \"and I'd never let you out of bed.\"\n\n\"Oh Gray you just say the sweetest things!\"\n\n\"You are the sweetest thing Nats, I love you,\" he said, \"If you need me just call and I'll be there, Promise.\"\n\n\"Thanks Gray,\" I said and almost asked him to come and stay, even though I knew he was working several cases in London that week.\n\nI went down to the kitchen and as if by magic Tom appeared with his big smile. A couple of minutes later we were joined by Gemma. Bradley was noticeable by his absence but the noise from his closed bedroom door suggested electronic death and violence via his Playstation.\n\nI cooked tea and Gem and Tom just hung around guessing that something had happened with their father. I kept quiet about the incident but did wonder what the fuck had been in the brown folder he'd kept pushing at me. It would be nothing, Parker was involved after all.\n\nI heard nothing from Parker for a week, but as I guessed he was in the shit financially and he was working on a way to pay for his car repair - I found out from Tom just how bad it had got some months later.\n\nOn the next Saturday night, I had gone out to dinner with Gray, leaving a now eighteen year old Gemma in charge at home, and it was such a wonderful night that when I got home on the Sunday still dancing on air, neither Tom nor Gemma would bring me down bless them. \n\nGray had taken me to a wonderful Chinese restaurant and we had eaten the most wonderful food and just loved being in each other's company, and were stupid and soppy with each other. We got back to Gray's house and I suggested a swim and opened the patio doors, stripping off.\n\nAs I stood at his open door in just my string panties, he reminded me that we shouldn't really swim after a large meal so I just strolled out onto his patio and saw the moonlight making the ruined church and other buildings look enchanted. The early summer night was warm, the stars shone and I just wanted to go out into onto his land, naked, and just feel the grass on my bare feet.\n\n\"Nats?\" said Gray a little confused.\n\n\"Get naked and walk with me,\" I said holding out a hand.\n\nHe stripped down to his boxers and did just that and we walked out into the moonlight, the screening trees hiding us from the distant road, there being no other properties on Gray's small country estate.\n\nI picked up speed and started to run, I didn't know why and still don't but it was spur of the moment excitement and exhilaration, and as we neared the ruined Saxon church he grabbed me and pulled me down onto the lightly undulating grass, cool and soft against our bare skin; bare skin that had that strange white glow that goes with being bathed in moonlight.\n\nHe kissed me and I responded, our mouths meshing in intimate joinder, passionate yet gentle contact that calmed us down and fired us up, and I knew that I would make love in the grass that night, for the first time ever.\n\n\"Make love to me Gray,\" I said, \"I've never done it in the open before.\"\n\n\"Wow,\" said Gray with a smile, \"another first to chalk up at my place.\"\n\n\"Yeah,\" I said, \"hurry up and start chalking.\"\n\nHe pulled my panties off in a flash dripping his head to my already damp pussy that he had exposed to the moonlight and kissing the bare shaved flesh above my vulva.\n\nHe feasted on me for what seemed like hours but was probably just minutes and I guess was just about making sure that I was as wet as he needed me to be.\n\nHe rolled across me and I reached down to remove his boxers only to find he already had done, and was bearing down on me his huge erection ready for action and pointing at me with a purpose.\n\nHis one slow thrust entered me in one go and I gasped wondering just when he was going to stop. I raised my thighs and gripped him pulling his face down to mine so we could kiss, me tasting the now familiar tang of my own pussy on his lips and tongue, but I didn't care a fuck. The action I was getting was wonderful and I felt the first of a stream of comes starting in my loins and the pleasure didn't stop until I stared up at the moon crying out as his hot come splashed into me. I lay there and felt his copious gift pour from me, happy that there would be no nasty wet patch for me to sleep in tonight at least.\n\nAfter we had gotten our breath back we both stood and walked back to the house, and naked I jumped into the pool to refresh myself.\n\nGray jumped in after me and we kissed and made out for another twenty minutes before towelling each other dry and heading to his bedroom. (One embarrassing moment occurred later that autumn when Gemma was walking across to the ruined church and found a pair of black string panties my size in the long grass and as we prepared another barbecue, she whispered to me asking how they had got that far across the countryside. I just grinned.)\n\nIt was a wonderful night for me but an unsettling one back at my house in town. At a little before eleven, while I was stripping off by Gray's pool back at my house Tom heard a noise coming through his open bedroom window from the patio doors and living room directly below him.\n\nHe got up and as he came out of his room saw that his brother's bedroom light was on pushed the door and saw that he wasn't there. He got Gemma and they both tiptoed down the stairs with mobiles in hand ready to run and call the police at the same time.\n\nTom said that he could hear excited voices and pushed Gemma behind him thinking it could be drugged up burglars. Gemma was eldest of course and pushed him out of the way easing the living room door open and turning on the light to see a giggling Bradley helping his father disconnect the TV, excited at whatever ruse the two of them were up to.\n\n\"Err...\" said Parker caught in the act.\n\n\"Err... echoed his youngest son, he caught on quicker than his father basically because he believed what his Dad had told him, \"Dad's just recovering his property!\" Snapped Bradley, his bottom lip protruding self-righteously.\n\n\"What by nicking our TV?\"\n\n\"It's Dad's TV,\" said Bradley.\n\n\"No it isn't,\" said Tom, \"the one Dad had was that Polaroid that broke down, Dad took it to get it repaired and we used the one from Mum's room.\"\n\nGemma looked severely pissed at this intrusion, she was there when I changed the locks after Parker started taking what he considered to be 'his stuff' after the split, the demarcation being what the value was rather than whether he'd bought it or had ever used it.\n\n\"Yeah, that one is the Samsung that Mum bought to replace it back before Christmas. She had to borrow the money from Grampy because you kept bitching that her bedroom TV was a 32 inch and way to small, that's a 48,\" she folded her arms and stared at her Father with some disappointment edged with contempt, \"Dad's TV is wherever HE took it to get it repaired...\"\n\n\"Oh yeah!\" said Parker, \"Sorry I forgot, it's just that mine has broken down and I thought I'd come and collect...\"\n\n\"Well it isn't yours Dad,\" sighed Gemma, terribly let down by her youngest brother for believing his Dad's shit again and more so for letting him in once we had all gone to bed or were out.\n\n\"You should still take it Dad!\" said Bradley, still caught up in his Dad's convincing story delivered with such passion and vehemence.\n\n\"No, it's OK Bradley, your sister is right,\" he slapped his thigh, \"Johnny Morris! That's the bloke that's got it, I'll go round and see him.\"\n\n\"Yeah,\" said Gemma.\n\n\"And I'll thank you not to talk down to me like that young lady, you're not to grown up for me to take my bloody belt off to ya.\" He stuck his chin out with a slight wag of his head, and Tom had to stop himself laughing as Bradley did likewise, hoping desperately that his bossy older sister would get what was coming to her from their Dad.\n\n\"No you won't Dad,\" said Tom defiantly. He probably wasn't as strong as he Dad but with both him and Gemma it would be a different deal, and the police would be called.\n\nParker wagged his head again turned to the patio door he'd entered by,\n\n\"Well seeing as my children are ganging up on me, it's time I was off.\"\n\n\"I'm not ganging up on you Dad!\" said Bradley standing tall with a huge smile, and still proud to have let his father in for his nefarious purpose.\n\n\"Not now Bradley,\" said Parker dismissively.\n\n\"But... the Telly!\"\n\n\"Not now Bradley,\" snarled Parker, \"I'll wish you all a goodnight then.\" He said, leaving the housing via the patio door with his head held high, Tom overhearing something about the garage not taking a shitty old broken TV. \n\nBradley looked confused.\n\n\"Mum changed the locks for a reason!\" said Gemma with folded arms and, apparently looking every inch like me when I'm angry.\n\n\"Yeah, well... it's still Dad's house!\" said Bradley, angry that his scheme to help out his Dad get one over on his Mum had failed.\n\n\"No it isn't, Mum had the house, Dad kept the business, after all it's the only thing he fucking cares about...\" snapped my Daughter, her likeness to me driving him to distraction.\n\n\"But... the business...\"\n\n\"And just how were you going to explain the missing TV tomorrow when Mum gets back?\" said Tom incredulously, \"Burglars with your finger prints? Dad had gloves on Bradley, did you notice?\"\n\n\"That... bloody solicitor could buy her a new one,\" growled Bradley.\n\n\"But the TV, what the fuck were you going to say to Mum?\"\n\nBradley fumed and just stormed off to his bedroom. Gem looked at Tom, snarled and bolted and locked the patio doors shut, removing the key and taking it to her bedroom with her.\n\nI wasn't to find out about this for another three months however, or the visitor Tom had seen his Dad with from the downstairs bathroom window and listened to their conversation.\n\nParker came to the final rehearsal the following Saturday and was his usual obnoxious self. He arrived before he was expected and stormed across the car park to me,\n\n\"Have you looked at the pictures?\"\n\n\"What pictures?\" I said getting my bag with my lunchtime sandwiches.\n\n\"The ones in the brown folder that I gave you?\" he said as if I was an idiot not to realise.\n\n\"No Parker I gave them back to you.\"\n\n\"Well... well look now,\" he said.\n\n\"No Parker, won't look, because it's just more of your shit trying to create grief between me and Gray and I won't play your bloody games,\" I hissed.\n\n\"Natalie please,\" he whined actually looking hurt and contrite, \"I made a mistake Baby,\" he said reaching for my hand, but I moved away from him, \"I'm sorry for what I did, I'm sorry I slept around, but I know I made a mistake.\" He stopped moving and looked at me, \"I'm begging you, forgive me, please take me back.\"\n\n\"Parker?\" I said in shock, I knew he was up to something but this was way beyond what I'd thought for.\n\n\"Natalie, I'll do anything. I'll go to classes, marriage guidance, whatever you want me to do, please I want you back, I need you.\"\n\nI looked at this man that had been everything to me for so many years prostrating himself before me, but I just felt cold. \n\nYes he had been my life, but now I'd met a man that was so much more, but I knew him and his pie crust promises and Parker Wallace could attend all of the classes on the Planet Earth but save brain surgery and a personality bypass he'd still never be half the man that Graham Woods was.\n\n\"Parker, it's too late!\" I snapped knowing that the second I used any kind of sympathy or warmth towards him he'd use it against me. \"We don't have that spark anymore, we haven't had it years, there's no room for me in the world of Parker Wallace, I don't think there's room for anyone in that world, not even your children, that's it Parker, I want a divorce and I want it soon. I've had it, I can't be doing with your constant grumbling and presence, and you always finding a way to blame me for whatever shit you caused to happen in your life.\" I turned to walk into the school, \"Goodbye Parker.\"\n\n\"And that's it?\" he shouted across the car park at me, \"nineteen years of 'us' just flushed down the toilet because you've met Mr Wonderful, oh that's just perfect.\"\n\nI stopped and turned,\n\n\"No Parker, nineteen years of 'us' flushed down the toilet because you couldn't keep your trousers over it. Mr Wonderful didn't come along until you were on your second or third lover, I lose track of them.\"\n\n\"Well what about these huh? Your perfect Mr Wonderful isn't that perfect!\" He had another folder similar to the one he'd given me the week before and he took some of the colour pictures out and slapped one of them against me. \"Look,\" he growled then hit me with another, \"LOOK!\" he snarled louder.\n\nI looked at the picture, it was a blurry photo of a man in a suit kissing a striking brunette that was wearing a coat very much like one that Deedee wore, a bright red zipped Harrington.\n\n\"It's lover boy, and that slapper friend of yours Diane.\" I looked at the picture, \"I was surprised that no one seems to know that you and lover boy are an item. That piano playing poof just said that he reckoned that Woods was shagging one of the singers, but wasn't sure which one. As soon as I mentioned his name Diane got all stupid and soppy about him. So I got a private detective to see what was going on.\"",
        "\"No it isn't!\" I hissed back at him.\n\n\"IT FUCKING IS!\" he shouted loudly and so close to my face that I could feel the faint spittle from his exertion, in a second he'd taken a grip of my hair and pulled my face to his and tried to kiss me but I slapped him. \"Bitch!\" he snarled and pushed me away, raising his hand as if to respond.\n\nSuddenly we were surrounded by friends.\n\n\"Oh and now the fucking lynch mob is here for me!\" he dropped his raised arms to his sides with a slap.\n\n\"Parker,\" said the deep voice of Gray.\n\n\"Fuck of Woods, this is fuck all to do with you.\"\n\n\"I beg to differ,\" said Gray.\n\n\"I've got pictures of you and the slapper Diane!\" he said triumphantly taking one and waving it in the air spinning to show everyone what he had.\n\n\"I know that it's not Deedee and Gray Parker, so why don't you just accept that you've lost and fuck off and leave us alone.\"\n\n\"Look!\" he stabbed at the picture with his short stubby finger.\n\n\"Yeah,\" I said, \"and let's take a look. I reckon that once you got some friends to stand in, it must have taken you a while to Photoshop them.\" He looked at me with narrowed eyes. The person you are suggesting is Gray has a shaved head not a bald one, look you can see that Gray has hair at the sides. The brunette you cast as best supporting actress is too tall to be Deedee and the Harrington she is wearing has a Burberry lining, while the one that Deedee wears, if you look just across there, you'll see is a red tartan.\" We all turned and there she was waving to him with a cheesy grin, \"Oh and look at Gray's Discovery, his has a number plate with four figures, the one you found, or hired, or stole has seven however much you tied to blur them; nine out of ten for style but none for effort or authenticity.\" \n\n\"Thanks for trying to create shit between us Parks,\" said Gray, \"But you know what, you're so keen to be an actor you forgot your propensity to be a drama queen.\"\n\n\"I have evidence...\"\n\n\"You don't have anything Mr Almost Bankrupt businessman. A quick check with Companies House said that PJW Holdings Ltd has been suspended with significant debts. Five minutes with your former staff says that there's half a dozen angry businessmen and women that want their money back or they'll take it kind out of your face.\" Gray steeled himself for the final blast, \"Natalie? The real reason he wants to move in with you is he's already tried to put your house on the Market. Haven't you Parks?\"\n\nParker looked at the ground,\n\n\"Tom was there, and listening to his Dad and an agent from Crickland, Moss and Janway's in Kings Street. Seems that he got a key from somewhere, guessing he copied young Bradley's. Tom ran down and put on the deadlock and rang me. I spoke with Steve Moss who's an old mate of mine and it seems that you and you husband made it up, and were looking to downsize now the kids have grown. You were very excited by the six hundred thousand he mentioned Parker.\"\n\n\"It was just a valuation, because... because I still have a right to money from that house!\" Parker must have seen my shocked face, \"I just spun him some bull, just to get him to play ball...\"\n\n\"And Tom very wisely kept you and him out.\" Said Gray with a sigh. \"You've made lots of mistakes over the years, the worst of which was driving this beautiful woman away from you in your fight to be the best. But most of all you made one big mistake - you blabbed to your best mate;\" Gray turned slightly and there was Stu, \"Can I introduce a friend of mine Stu Knowles, or as he is more affectionately known Detective Sergeant Knowles of the City of London Police.\"\n\n\"Hi Parker,\" said Stu.\n\nParker's lips moved but no sound came out.\n\n\"Detective Sergeant Knowles and I have worked on a few cases together over the years, it was me that tracked him down for Caroline's gig, and two weeks ago when you were walking around trying to dig up shit about me? Well, you told my friend Stuart almost all that you intended and of course he came straight across and told me. And I mean actually the second you stopped telling him about how you were going to bring me down. I was intrigued of course.\"\n\nStuart stepped forward and took his hands from his jacket pocket and nearly thirty years of hate poured out.\n\n\"Trouble with you Wallace is you honestly think that everyone else is stupid and that nothing ever changes, most of all people. As far as you're concerned Gray here is still a just bouncer and I'm just the sad son of a single parent Dad without two shekels to rub together that were the only people your family could look down on when actually after 15 years in the police, a master's degree in criminal justice psychology and lots of world travel, me and my police inspector wife and our two children spread our time between here and our house in France.\" He grinned, \"You still think just because someone has let you talk down to since your ninth birthday they are straight off of the breadline and that they must be hard up and grateful to you for sharing your bountiful wisdom. Oh, and out of interest I'd sooner starve than take you up on your offer of 'a few bits and pieces' to help make a few extra quid and take the wife and kids somewhere nice.\"\n\nParker was famous for dangling the offer of things over people to get their support or approval just like his father had done to him when he was a child with his promises of gifts when he 'pulled off the big one'. Parker had inherited his father's 'here you go, have a good night down the pub on Saturday with the family' with a fiver palmed to the person to hide it's small denomination. Strangely enough hardly anyone he dealt with ever did pubs and nights out, but of course in Parker's fantasy world it meant he could mentally lord it over people and treat them as lower down the chain than him.\n\nStuart continued, \"You sat there and told me what an idiot Graham is; trouble is the only idiot around here is you mate. But the real trouble is you really don't get that do you? And the tragedy is they you never will.\" \n\nParker was getting really cross now and I just knew he wanted to blow his top but of the two people pissing him off the most, one was a huge former bouncer that could break both his legs and then sue him and the other was a police officer and he knew it would end badly for him.\n\nI watched as Parker's face almost rolled up.\n\n\"Cunts\" hissed Parker, \"Sing your own fucking songs to your dead wife Woods.\" He raised is lip waiting for Gray to lose his temper.\n\nBut Gray didn't; instead he just smiled.\n\n\"Thanks Parks, Caz is dead mate as you say; but you know what, I'll sing to your wife instead...\"\n\nParker went to move forward but Gray did as well,\n\n\"Come on then Wallace, time for you to finally show us what a big tough man you are in front of all these witnesses that reeeeeeally like you mate.\"\n\nParker knew he was beaten and with all the dignity he could still muster he stalked away to his car. \n\nNow was the time it chose not to start of course, so he took his mobile phone and without turning back put his hands in his pockets and walked away.\n\nTom and Mark appeared,\n\n\"So how are you with Duran Duran songs Stu?\"\n\n\"Dunno, let's have a go shall we?\"\n\nThe hours of rehearsals, the moving of the gear, tuning of instruments, arguments over songs, arranging of songs, the sorting of costumes, the T-shirts, the late entry of the videos was all leading up to this moment. The hall lights went down and the first applause of the night happened. We looked around in real excitement, the butterflies buzzing away in earnest now. \n\nThe high screen at the back of the stage came to life and the logo we'd seen on the souvenir programmes appeared. 'The Koncert for Karoline' logo popped up in white letters as the first humming of the guitars as the equipment was switched on. There was some unmistakeable feedback from Tom's Telecaster.\n\nA single spotlight hit the stage and there slowly walking onstage was Gray and Caroline's son Sam walking hand in hand WITH MY GEMMA! Bloody Ray!\n\nGem walked slowly across the stage holding Sam's tiny hand and holding between them was Caroline's original guitar. It was an old Epiphone Les Paul that she used to make sing. They walked to the back of the stage in almost complete silence bar a few hushed awwww's. They put Caroline's guitar into a stand and the spotlight remained on the guitar as they walked away. There was a slight patter of applause which tripled as little Sam beamed a grin and waved out to the audience he couldn't see. \n\nWithin seconds the screen came to life and there was some of the original video that the local BBC station had supplied and it was a tremendous shot of Caroline doing the opening riff to 'her song' with a beaming smile on her face. Those of us in the wings caught the wonderful, happy, heart-breaking sight of tiny Sam pointing up at the video of his Mum, still hanging on to my Gemma's hand and jumping up and down on legs not really strong enough for that kind of thing. I pointed him out to Deedee and Elaine and with seconds we were all three weeping and picking tissues from pockets and trying not to wreck our makeup.\n\nWhen it was time for the second guitar to join in and Mark's guitar appeared in the spot light, followed by Tom's and they joined in with the recorded Caroline, somehow isolated from the video soundtrack. Finally the unmistakable shiny silver scratchplate of Gray's Precision appeared and perfectly in time the lights came up and the show went off with a bang. 'The Boyz' had done it again, and the crowd rose to their feet and stayed there, even although twenty years had passed since the last time this had happened.\n\nTom started to sing,\n\n'If you want to, turn me onto, anything you really want to, turn me on to your love, sweet love\n\nCome on, sweet Caroline, your my sweet Caroline...'\n\nThe stage lights meant that Gemma and Sam were now visible to most of the audience and many more people saw her with him in her arms both bopping to the music and Sam now beaming a huge smile to his beloved Daddy who was only a few feet away from him. The programme said that Sam was bringing his Mummy's guitar on stage and that Caroline had been married to the hunky bass player Graham. \n\nThe first song reached a crescendo and from the background we heard Ray's powerful amplified voice,\n\n\"Ladies and Gentlemen, Welcome to... THE CONCERT FOR CAROLINE!\" \n\nThis was the prompt for the Boyz to go straight into 'the boys are back in town' and didn't they just, with the crowd joining in with the chorus as they had in the old days.\n\nAs that song finished Ray's lofty position by the drum risers was lit next and he started to play and sing Robbie Williams 'let me entertain you' and the pace didn't lessen as that went straight into 'Sergeant Pepper's lonely Hearts Club band' which saw the brass come on. \n\nWe three girls had started to sing with 'let me entertain you' but hadn't come on. Then it was 'sex on fire', which saw us come on in our sexy little black dresses to roars of approval and wolf-whistles, followed by 'all the small things' - wagging our little fingers suggestively.\n\nThen we stepped back into our favoured spot and our microphones, and Stu came on and it was Madness's turn. We did 'driving in my car', 'night boat to Cairo' which had Mark's wife Kate in her Ray Bann's playing her sax and 'baggy trousers' which of course had her on a wire flying across the stage. Stu would return in the second half for his Duran Duran spot.\n\nOnce Stu had finished the gang looked across to me and I tried to saunter across to centre stage coolly. Gemma was stood in the wings stage left and looking at me excitedly, young Sam still in her arms and picking up on the buzz, on the other side of the stage in a black 'K4K Krew' T-shirt was my Tom assisting with the instruments and microphones. Shit but I was nervous.\n\n\"Ladies and Gentlemen, give it up... for the gorgeous NATALIE!\" shouted Ray.\n\nThe place erupted and I giggled almost dropping my microphone. I stepped up centre stage,\n\nAs the Boyz waited for the wolf whistles and general banter to subside and then there was a simple 'one two three four' tapped out by Marty's drumsticks, the twangly guitar started quietly, I closed my eyes and away we went,\n\nI sang those words I knew so well, \n\n\"Listen to the wind blow...\" and we were away. \n\nI sang well, only marginally conscious of the my own voice coming back to me through the monitors, but hearing Deedee, Elaine, Tom, Ray, Mark, even Gray coming in on the choruses and harmonies. \n\nHalfway through, we hit the bit everyone was waiting for and the crowd new it. The cheers started as Marty just tapped out the rhythm on the high-hat cymbals. Once they had settled, Gray looked at me and grinned, and he started probably the most famous bassline in British classic rock music, especially for those rockers that loved Formula one motorsport. All through that pause the shouts and whoops just got louder.\n\nJust as we had on that first rehearsal we went face to face, and as his speed of playing speeded up, Tom joined in with his Telecaster making it scream. Gray and I danced across the stage, face to face, until it was time for me to turn and face the audience and shout, \"Runnin' in the shadows!\" and we all went back to our microphones and the final chorus.\n\n\"Chains - keep us together.\"\n\nAs I belted out the final line, I was more alive than I had been in years and as the crowd roared I wondered how I would ever match this physical and emotional high.\n\n\"The gorgeous Natalie Delaney!\" shouted Ray using my maiden name, \"and on bass guitar Mr Graham Woods!\" \n\nThe crowd roared and Gray took my hand and we bowed together to more cheers. We straightened up and I leaned across and kissed his cheek. More cheers; Gray smiled that huge smile to me, and I kissed his lips, with a kiss that took too long to be just friendly. The noise was twice as loud and I could even hear our friends shouting through their microphones.\n\nWe took a last bow and went back to our chosen spots on stage; what a night this was shaping up to be!\n\nAnother ten songs and we were slowing up for the end of the first half, when Gray walked up to his mike,\n\n\"OK, we have a surprise guest joining us for the end of the first half; ladies and gentlemen, especially the ladies, please welcome direct from Philadelphia and courtesy of the United States Navy, Lieutenant Commander... STEVIE... MAC... WILLIAMS!\"\n\nThe screams didn't stop, and that included me, Deedee and Elaine. Steve was the really hot, exotic and amazingly cool American student that played in the band in the last six months. His Dad was an officer in the US Navy working as a defence attach\u00e9 between London, Portsmouth, Faslane, Portland, Plymouth and anywhere else in the UK he would head for - at speed. \n\nStevie Mac never said what he did or where he went but we all knew that by the way he spoke he would join the US Navy like his Dad.\n\nStevie walked on stage playing the opening bars of 'Dixie' like he used to in the old days and looking even hotter than he did to us all those years ago. Lieutenant Commander Stephen Macwilliams United States Navy, stepped up to Tom's Microphone, and struck the Cherry Red Fender Stratocaster with US Navy pilots wings attached to the stop that he'd obviously brought with him.\n\n\"Ladies and Gentlemen,\" he purred looking outrageously cool in doing so and the screaming got louder and quite rightly, he looked fucking gorgeous and perhaps new it. He had a close cropped hair, a Mediterranean tan, Ray Banns (real ones!) and a tight fitting Baby Gap T-shirt that clung to a body leaner but as hot looking as Gray... well nearly!\n\nTaking us all back years he leaned back and yelled, \"Yeeeeeeeeeeeeehaaaaaaaaw!!\"\n\nWe hadn't rehearsed it but we knew what it would be. He played the opening bars to Sweet Home Alabama and off we went, regressing back to those kids we had been twenty two years back; we had rehearsed it for Gray to sing so knew what to dance, when to come in on the backing vocals, it was a joy; the audience only let us go when the stage manager closed the curtains (something we hadn't rehearsed for!) and turning up the house lights.\n\nI walked across to Gemma who was sitting down with a rather sleepy looking Sam on her lap and looking really pleased into the bargain, and despite Gray asking didn't seem inclined to pass him into anyone else's care. We of course headed for Stevie Mac who was shaking hands with everyone. \n\nIt turned out that he was stationed on an aircraft carrier that was on patrol in the Mediterranean and was a jet pilot. I thought Elaine would melt; she had carried a crush on him all through the last year of school. \n\nGray had tracked him down, and it had taken them a month to arrange his two day stay in England. Barrister Graham, who worked for the Ministry of Defence on occasions, pulled every string he knew of telling his lords and masters, various defence attach\u00e9's about his late wife's (Former Royal Navy and Surrey Police) early passing and this need to raise money for her cancer charity. The US Navy were shown some of the photos of the young good looking American in England, one Stevie Mac, playing in his school band, and some of the video of the coolest boy in school with his host of adoring fans for him to be given special permission to fly his FA18 Hornet from just south of Cyprus to RAF Northolt to play this one gig. \n\nHis good looks had improved and the fact he flew fast fighter jets off of aircraft carriers and had been to Top Gun school like in the films had all the women huddling around him like they were all-star struck teenagers again. I kissed him on the cheek and thanked him for coming, but headed straight for the hunk I was most interested in.\n\nGray, Tom, Mark, Ray and Marty were talking through the first half, happy that things had gone even better than they'd guessed they would. It was of course the inclusion of the audience that lifted a gig from the good to the sublime.\n\nTom then had us all off the stage and drinking isotonic drinks, water, before changing into our new 'K4K' T-shirts and blue jeans for the final blast.\n\nFor the second half the curtains pulled back to show the orchestra in black Hats and sunglasses playing 'Everybody needs somebody' and then Gray's deep voice called,\n\n\"Ladies and Gentlemen please welcome from Calumet City, Illinois, after an extensive tour of Greater London, Kent, East Sussex and some of the nicer parts of Surrey please welcome THE BLUES BROTHERS!\"\n\nThree songs finishing with Jailhouse Rock and there was no left sitting down. The strings came on and we did Electric Light Orchestra's 'Sweet Talking Woman' and 'Mr Blue Sky'. There was almost no room on the stage now. \n\nI stepped up with the gorgeous blonde Elaine, who during the interval had dragged straighteners through her hair and we stood next to each other, front centre stage. Elaine had always been a bit of a comedian,\n\n\"Hello,\" in an accented voice as close to Swedish as she could get, \"My friend and I would like to sing a few songs for you.\" There was some initial confusion, then some giggles then the 'dum de dum de dum de dum' intro started and the screaming followed.\n\n\"That history book on the shelf - is always repeating itse-eelf!\n\nWaterloo! I was defeated you won the war...\"\n\nThanks to the success of Mama Mia, everyone was into the brand and the entire ground floor of the Guildhall was on its feet and soon as the intro to Dancing Queen started we could barely hear ourselves even with the monitors over the cheers which got worse as we went into the chorus,\n\n\"You can dance, you can jive, having the time of your life,\n\nOooh, see that girl, watch that scene, digging the dancing queen!\" and we dipped and pointed down at the girls dancing in the aisles just and Agnetha and Frida did in the famous video.",
        "Mark came forward for the only song he ever sang, the male voice for 'Does your mother know' and the Boyz rocked!\n\nTo cool everyone down we finished the Abba bit with 'Thank you for the music' everyone was still stood up.\n\nRay appeared with a microphone and applauded Elaine and I breathless back to our place. He had a towel around his neck, and mopped his sweating brow.\n\n\"Wow!\" he said, to the shouting and cheering, \"What a night! Ladies and gents, I've just been told by the guildhall staff that as of three days ago we officially sold out and have already reached TWENTY FIVE THOUSAND POUNDS FOR CAROLINE!\" He clapped the crowd, \"That's more than we ever thought, thanks so much!\" he wiped his face again, \"But you know so many of us were good mates with Caroline, including lots of you out there. Deedee Darling,\" he called over Diane and she walked across and slipped an arm around him.\n\n\"Good evening Ray!\" she said in her sexy rumbling voice. More howls and wolf whistles which increased as she dipped and pouted to her fans.\n\n\"It's been amazing Dee hasn't it?\"\n\n\"Ray, it's been incredible, getting all of our old friends together in such a great cause for a great girl, it's wonderful.\"\n\n\"Yes,\" said Ray and the audience was starting to wonder what was going on with this discussion amongst all of the music, \"BUT!\" he said still talking, \"don't you think that it's astounding, time is fleeting, and madness takes control...\" There was some shouting as some of the audience got it. Some music started in the background, \"BUT listen closely...\" the music got still louder,\n\n\"Not for very much longer!\" screamed Deedee standing next to him.\n\n\"I've got to keep control!\" The crowd got it and the band came in.\n\n\"I remember doing the Time Warp.\n\nDrinking those moments when\n\nThe blackness would hit me.\n\nAnd the void would be calling!\"\n\nThe entire place joined in with\n\n\"Let's do the Time Warp again!\"\n\nAt the end of the bar the music stopped, dead, and Ray said quite simply\n\n\"It's just a jump to the left...\"\n\nAlmost 2,500 people did as much of the time warp as they could with the limited space - it was one of the highlights of the evening with Ray and Deedee in each other's arms, laughing, crying, giggling, shouting to the rest of us having played the entire audience like pro's. It was perfect.\n\nIt was time for the cool-down before the big finish. Four of us came to the front, and for the first time in 20 years we were going to sing a special song for a special person.\n\nThere was Gray on the end, my Tom having taken his bass guitar and handing him a big acoustic, me, Elaine and grown up Tom, with another acoustic guitar. \n\nTom stepped forward.\n\n\"Ladies and Gentlemen we are all here this evening to remember someone really special that we lost; but at the same time we also need to remember someone that, without her, none of this would ever have happened. Please welcome,\" her turned to his left with his arm extended, \"vision, soul and spirit of the Schools Theatre Company...\" he smiled a soppy smile and lost the 'announcer voice' and used his softer 'Tom' voice, \"Miss Anne White!\"\n\nSomehow he'd managed to track down Miss White and smuggle her into the building. With her same beaming smile she was instantly recognisable as the wonderful music teacher that had driven us, taught us, guided us and knew when to give us free reign she walked on from stage right on my Tom's arm. \n\nShe was of course twenty years older, looked greyer (but then so did some of us!) and more care worn and she walked onto stage with the same calm poise that she always had done, when we called her forward at the end of a concert or tour or such like.\n\nShe smiled and waved and got a standing ovation, especially from all of us on the stage. She came and stood between Elaine and I. None of us had seen her since our last concert in this hall twenty years ago and it was like meeting your favourite much loved Auntie again. We always called her 'Miss' or 'Miss White' even though she got married to her long-time boyfriend Mr Franklin, a science teacher at my school. \n\nAt the last concert before her wedding, we sang a song to her and she cried her eyes out. I just knew that tonight would be no less emotional for all of us.\n\n\"Miss White, this song is just for you,\" said Tom.\n\nAs soon as I saw Miss White I knew why the four of us and the Boyz had rehearsed this song, on our own, at the end of the last few rehearsal session.\n\nI pulled her tighter to me and gulped back the emotion, and as I sang the first line my affection for this wonderful lady was audible,\n\n\"While I'm far away from you my baby,\n\nI know it's hard for you my baby\n\nBecause it's hard for me my baby,\n\nAnd the darkest hour is just before dawn...\"\n\nThe boys picked their guitars harder and we all knew where this would go.\n\nThe rest of the band joined in gently and Miss White smiled and put her hands to her face in shocked pleasure. \n\nIt was a song that she would always sing herself, or whistle and Elaine had found out that her Dad would sing it to her when she was a young girl. Once we found out, we of course learned it and played and sang our teenage hearts out to her in our best ever four part harmony.\n\n\"Each night before you go to bed, my baby,\n\nWhisper a little prayer for me my baby, yeeeeah,\n\nAnd tell all stars above,\n\nThis is dedicated to the one I love,\"\n\nMrs White-Franklin rested against me laughing and crying, and Elaine came closer and hugged her too.\n\nI looked across to Elaine and we smiled, both knowing how this would go; we raised the pitch just as the Mommas and Pappas used to\n\n\"And there's one thing I want you to do,\n\nEspecially for me,\"\n\nI held the microphone in front of Miss White and she got it as well, and placing a hand gently to mine, pulled the mike to her mouth and just as she had done all those years ago belted out,\n\n\"And it's something that everybody needs!\"\n\nNow it was a five part harmony and Miss sang with the Schools Theatre Company for the second time. The roar from the crowd was enormous and we sang our hearts out again for a wonderful lady. \n\n\"Each night before you go to bed, my baby,\n\nWhisper a little prayer for me my baby, yeeeeah,\n\nAnd tell all stars above,\n\nThis is dedicated to the one I love,\"\n\nI will confess that on a couple of the 'This is dedicated to the one I love\" I did look across and smiled at my wonderful boyfriend Gray.\n\nWhen we finished the roar from the crowd was deafening. Miss White was shown back to a seat on the stage with the brass and strings where she was hugged and kissed by all the other surprised musicians; after all, she had as much right to be up there as we did. \n\nElaine and I walked back to our place and Tom and Gray stayed at their microphones, \n\n\"Sing it Gray,\" said Tom off of the mike, \"one more time for Caroline\".\n\nThe crowd heard though, and even though they didn't know what song the Boyz were on about they cheered and shouted 'Yes'.\n\nHe grinned and nodded, and Marty came forward from his drum riser with a tambourine and a water bottle, Mark appeared with Gray's bass, Stevie Mac with another acoustic guitar and Ray was there with a small piano strung like a guitar around his neck and they all walked towards the front microphones and waited for silence.\n\nTom and Gray strummed their guitars just once and Gray began to sing, his first solo of the night,\n\n\"To lead a better life, \n\nI need my love to be here,\n\nHere, \n\nMaking each day of the year\n\nChanging my life with a wave of her hand,\n\nNobody can deny that there's something there.\"\n\nThe boys joined in on the 'oooh's' all the way through and Ray had set his piano to sound like an accordion. It was classic Boyz stuff and a pleasure to listen to.\n\n\"There, \n\nRunning my hands through her hair\n\nBoth of us thinking how good it could be\n\nSomeone is speaking, but she doesn't know he's there.\"\n\nAs I listened I remember that they used to play this song to and all stand around Caroline, and look at her and fawn, and just generally try to embarrass her. I could hear the emotion in the song and thought on how this must be upsetting for Gray and all the Boyz and I felt my bottom lip tremble. I had been making eyes at Gray all night and now he was singing a song to his lost love.\n\n\"I want her everywhere,\n\nAnd if she's beside me I know I need never care\n\nBut to love her, is to need her everywhere,\n\nKnowing that love is to share\n\nEach one believing that love never dies\n\nWatching her eyes \n\nAnd hoping I'm always there.\"\n\nElaine slipped a hand through my arms and squeezed, then pointed up at the screen and there were pictures of Caroline, but then there were also picture of Deedee, Elaine, Kate and all the girls from the company.\n\n\"I want her everywhere\n\nAnd if she's beside me, I know I need never care\n\nBut to love her is to need her everywhere\n\nKnowing that love is to share\n\nEach one believe that love never dies,\n\nWatching her eyes,\n\nAnd hoping I'm always there.\n\nTo be there, and everywhere\n\nHere, there and everywhere!\"\n\nAt the final 'Here, there and everywhere' there was my picture and Gray turned round to me and blew a kiss to me, and there was a roar of approval. To save my blushes Deedee and Elaine were waving back with the same sweet smile that I was! Gray laughed and stepped back, taking his bass guitar from Mark, with my Tom handing Mark his Gibson.\n\nThe Boyz returned to their usual places with their usual guitars, and Stevie Mac played the twangly intro instantly recognisable from the Eagles and stepped up to his mike.\n\n\"On a dark desert highway\n\nCool wind in my hair,\n\nWarm smell of colitas, rising up through the air\n\nUp ahead in the distance, I saw a shimmering light\n\nMy head grew heavy and my sight grew dim,\n\nI had to stop for the night.\"\n\nThe verse continued until all of the Boyz at their various microphones and hit the chorus in perfect harmony and the audience joined in.\n\n\"Welcome to the Hotel California\n\nSuch a lovely place\n\nSuch a lovely face,\n\nPlenty of room at the Hotel California\n\nAny time of year\n\nYou can find it here\"\n\nStevie Mac encouraged the audience to come in on the choruses and it was wonderful.\n\nAfter the brilliant guitar outro the Boyz played pitch perfectly, Stevie took a big bow and faced the audience he had in the palm of his hand,\n\n\"Ladies and Gentlemen,\" he purred, which had all the women in the place screaming at him, \"Seeing as we are all feelin' Californian...\"\n\nThe last gasp was of course the Beach Boys, and with Ray's keyboards brought down from his elevated position to the front of the stage and he said that despite whatever we played now, he insisted that we were all now too old to stand on the furniture. He struck his guitar and played the intro to 'Surfin' USA', and I don't think I've ever seen so many people on one stage jump in the air and turn 180 degrees at one go. \n\nThen it was 'Fun, fun fun', then it was just the Boyz and an acapella version of Barbara Ann, before we all sang 'I get around'. \n\nThe last song was a secret, even from the rest of us and it was to be a tribute to Caroline. It was being done by The Boyz, and Caroline - lovely gorgeous, curvaceous, feminine Caroline - had been an honorary 'Boy' and would even dress in their school colour of black rather than our blue, and they had said they would do something worthy of their former band mate.\n\nRay came forward, leaving his beloved keyboard behind and adjusted the mike stand. There was some good natured cheering, but the silence on stage and his look had the two and half thousand people hushed.\n\nHe looked over his shoulder at the huge screen and the picture of Caroline in a rocking line up with the all of the Boyz. Those of us close enough could see the tears pouring down his face.\n\n\"This is a song for my Caroline,\" he said, \"I think at one stage we all fell in love with Caroline in one way or another.\" He rubbed at his eyes with the sleeve of his T-shirt, \"one of us even got to marry her.\" The air in the hall could have been cut with a knife, \"anyway, this song is for my gorgeous mate Caz,\" he looked up, \"still miss you baby!\" he shouted, the grief in his voice audible and touching everyone.\n\n\"See me!\" he cried, with real emotion in his voice, \"Feel me... touch me... heal me...\" It was from 'Tommy' the only musical we ever did; we did want to do Rocky Horror but the Catholic School complained. \n\nSlowly it continued with the band joining in and Ray throwing himself into the song, and only the Boyz backing him.\n\nThis of course led to the big chorus and the second time around Ray waved for us all to come and we all came on stage and joined in the chorus, holding hands.\n\n\"Listening to you I get the music\n\nGazing at you I get the heat\n\nFollowing you I climb the mountain\n\nI get excitement at your feet,\" \n\nThe music rocked up to its crescendo and all of us not holding instruments were holding hands with tears pouring down our faces. Stood right at the front of the crowd was my Gemma still with Sam in her arms dancing to and singing a song she'd probably never heard before with tears in her eyes for a woman she never knew.\n\nThe entire hall was on its feet, holding hands and swinging them in time to the music. Young Sam was clapping and beaming up at the pictures of his Mum, including a picture of a blissfully happy couple on their wedding day, and lots of photos of Sam with Mum and Dad growing up. Finally there was the picture of her in her hospital bed fighting the disease until the end.\n\nAs the song came to its finish, I could see Ray talking with Gemma, and as the audience roared at the climax of the tune, she put Sam down to his feet and he toddled awkwardly across to his darling Daddy, who let go of his guitar and swung his son up in his arms holding him high up to the picture of his Mum. The crowd roared, and far from scaring the young boy having his face kissed by his father, Sam turned to the crowd and put his arms in the air and roared back.\n\nNo one in the house that night had a dry eye, let alone the stage.\n\nI figured that with all of that love for Caroline around the place, Gray wouldn't want to be anywhere near me this night so I backed off a bit, only to see lots of other women honing in on him. I was most pleased when he obviously saw me, and he came over, a lightly dozing Sam in his arms, and took hold of my hand.\n\nHe smiled at me, and leaned down to whisper in my ear,\n\n\"I've just had the most fantastic compliment of the night,\" he said beaming a smile at me.\n\n\"Really?\" I said intrigued. I figured it would be something about what a fantastic child Caroline and he had raised, or how proud Caroline would have been of the whole night.\n\n\"Yeah really,\" he said, \"Gemma said that I was lovely, and I could marry you if I wanted; well, more like if you wanted really.\"\n\nI blushed a fluorescent red putting my hands to my hot cheeks.\n\n\"Why Gray-Gray!\" shouted Ray, \"I do believe you just proposed to my girl here!\"\n\nWe both turned, and said \"What?\" in unison.\n\n\"You two are among my oldest and dearest friends - that still talk to me.\" He took a draught of his bottled water, \"the pair of you have been making big moochie eyes at each other for three months now and, I get the funniest feeling you haven't just been going to the pictures on those long quiet evenings. For fuck sake you two, life is too short!\"\n\nWe kissed and laughed.\n\nThere was an after show party in the Guildhall's bar, that stayed open until two in the morning, and we stayed for as long as little Sam, and I for that matter, could keep our eyes open. I walked with Gemma and Tom while Gray held a sleeping Sam in his arms. He came back to my place and stayed over. Sam was bedded down in the spare room, and Gray climbed naked into bed with me. The buzz continued and we talked about our favourite bits of the show, which songs, which singer. \n\nStill too pumped to even think of sleep, Gray found the perfect answer, we started to kiss playfully, and before I knew it I was on my back with my thighs spread wide as he lay between them adding the perfect ending to a perfect day, his fingers dancing across my genitalia with the same mastery that he had shown with his guitar. He added his tongue and before I knew it I was either running fingers across his scalp or pulling his hips harder into my pussy as I came again and again. Finally I was flipped on to my hands and knees and fucked. Gray was a master lovemaker but he was also brilliant at the basics and I came twice just with him screwing me. We fell asleep in the spoons position, him still inside me.\n\nWith ears slightly ringing it was as if the music carried on, and in a way still does...\n\nEpilogue\n\nThe Concert for Caroline raised in excess of forty thousand pounds, both from ticket sales, donations on the night and the corporate sponsorship raised by a certain barrister involved in the event. We made the local TV news, with the promise of some minor extra income to be made from DVD sales.\n\nThe Boyz still rock out in pubs two or three times a year, but now they occasionally have a brunette singer that pops in for a couple of songs, sometimes with her two friends.\n\nElaine was the lucky girl that disappeared into the night with Stevie Mac, there are suggestions that it was back to his hotel room, some back to her house but I'm not convinced as her two children would have been there. But what does it matter, she was divorced from her cheating husband - he was a career singleton.\n\nFrom her Facebook page, I know she's been on a couple of holidays in the US, one of which was in Virginia, home of course of Norfolk Naval Shipyard, the other being way off in San Francisco.\n\nOver a coffee a few weeks later Deedee told me that she'd got really pissed with Ray at the Guildhall bar and went back to his place. \n\n\"I shagged him,\" she said simply, sipping her coffee and watching young Natalie colouring in on a small table joined by my Gemma.\n\n\"Really?\" I beamed, \"Cool!\"\n\n\"Oh, I'll never be able to turn him back,\" she said waving at our daughters, \"but we have had a few more practices sober since then just to see if he really likes it...\" \n\n\"And does he?\"\n\n\"Fuck yeah,\" said Deedee, \"And he's really good at it.\"\n\n\"Excellent!\" I said, \"A fuck buddy is better than just a buddy.\"\n\n\"That he certainly is,\" she looked pensive, \"at first I think we just looked at each other as fuck buddies, a bit of rough and tumble, friends with benefits but he's started to just show up at my place and it's really nice. He brought around a big old electronic keyboard and he's teaching Natalie to play the piano, and she worships him; I'm hoping he might want to hang around for a bit, on his own terms of course.\" I smiled. The old Deedee I knew would never have settled for someone else's view before, and I guessed that being a parent had changed her, for the good I guessed. She smiled, \"And how are things with you and the man mountain Graham?\"\n\n\"Wonderful,\" I said, \"He's offered to sort out my divorce from Parker.\n\n\"Excellent,\" said Deedee, \"you take that brain damaged fuck-up for every cent he has.\"\n\n\"I've got the house and maintenance for the kids until they graduate on the understanding that he's still earning money of course. I get a feeling that Bradley will want to move out as soon as he leaves school. Sadly I don't think that Parker will want him to move in. So I'll be stuck with him until he moves out to his own place, and I'm not holding my breath for him to suddenly become a financial success. He's too much like his Dad for that to happen!\"\n\n\"Well, I'm pleased that Gray is looking after you. He'll eat him and his poxy solicitor for breakfast.\" She said and downed the last of her latte.\n\nThe school year finished and we moved into a quite wonderful summer.\n",
        "I got an extremely simple divorce from Parker, and Gray didn't need to so much as raise his legal finger. The fact that just the suggestion of some effort from him was enough to convince Parker's cheap 'legal advisors' to tell him to sign up and shut up; he did both. \n\nHe had by then moved out of his office to 'maximise his efficiency' and laid off most of his few remaining staff including his ever faithful (mostly) PA Edith. As soon as I heard I phoned putting her on to Gray who had a chat and emailed her a letter to present to her former employer demanding her appropriate redundancy rights seeing as she had worked for him so long. \n\nHe bitched and insisted she didn't have any but Gray had given her an excellent briefing on contracts of employment and terms and conditions, telling her precisely what to say and more importantly what action she would take to recover it. Parker paid in full, the cheque even cleared.\n\nWith just a little discussion Edith told me that Parker had eventually run out of ideas, tricks, contacts willing to work with him, friends and more importantly suckers. His kind of business relied on there always being people that would sign up or sign on to his scheme and they had run out. The final nail in the coffin was his being taken to a small claims court by a group of tradesmen he owed money to.\n\nWith the end of the office Bradley talked about his Dad having 'taken advantage of the information technology revolution and your office being where you laid your hat and at your fingertips.' Next, as my lovely Tom had once pointed out, the second bedroom in his flat was turned into an office and the perfect excuse to limit the children's access visits. \n\nThe boys no longer had a bedroom, Gem was now 'too old to sleep on the couch' so the weekends became Saturdays or Sundays and the Wednesdays stopped altogether and he was then able to concentrate on the really important person in his life; yeah, still him.\n\nBradley would still stay overnight on the sofa very occasionally if he knew Gray was coming over but was growing less enamoured of his father as the days, and the disappointments continued. \n\nThis detachment from her father didn't bother Gemma as in September she would be happily ensconced and studying to be a teacher at Edgehill University. \n\nIt's rather a long way away but the journey flies by in Gray's superb cars. All of her gear just disappeared into the back of the Discovery when Gray drove her there because (you guessed it) her father didn't offer despite the number of mate's vans he had promised his little girl since her interview had gone so well. Whereas Gray considered it an honour and said so, driving all the way there and back. On our first weekend visit Gray let me drive the DBS and it was great fun. I miss my not so little girl and our chats, but she is really happy and only ever a phone, text or Skype away and comes home for her breaks.\n\nTom was at Sixth Form college, playing in his band when he could and ignoring his little brother because after all Bradley was still Bradley - due to starting his final GCSE study in year eleven and not working anywhere near enough;\n\n\"It doesn't matter!\" he whined at me reasoning (not excuse-ing) that, \"Dad is going to take me on as an apprentice in his firm and I can learn more in the University of Life than I can from any tu'penny ha'penny college!\" He snapped, as if I was an idiot not realise its import. I also think that even he was beginning to think that it might not happen though. \n\nI told him that there wasn't 'a firm' as such despite his father raving about how much easier and more efficient he was not having an office or any staff to deal with but Bradley wasn't having any of it.\n\nAs for me, the morning after the gig Gray told me to pick a fortnight in the six week summer holiday and work out childcare for the kids, which was Bradley with my parents on and off, with my Gemma very much in charge at home.\n\nIt was so he could drive across Europe in his Aston Martin; we drove to Brussels which was grand, then Paris which was romantic, then on to Berlin which was soulful, then to Prague which was interesting then a two day rest in Austria which was wonderful. After the most romantic evening I could see from his distracted face that something was bothering him.\n\n\"I...\" he started.\n\n\"You can tell me anything Gray,\" I said, thinking of the worse but not fearing it.\n\n\"I had everything planned,\" he said taking my hand and kissing it as we looked out from our hotel at Zell am Zee, \"In two days' time I was going to propose to you in front of the Trevi Fountain in Rome,\" he grinned reaching into his pocket, \"but I can't hold out that long, Darling Natalie, will you marry me?\" He held out a tiny velvet box with the most gorgeous diamond solitaire.\n\n\"Yes!\" I gasped out, \"Yes, please!\"\n\nHe pulled me into his arms and we kissed,\n\n\"One thing though Nats,\" he beamed at me in the moonlight, \"can you live with being Natalie Woods?\"\n\nI laughed, he laughed. \n\nWe married just before Christmas and my Dad gave me away a second time. Bradley did not look happy about any of it at all, but did go with my Dad (who just loved Gray, very much his kind of man), his big brother Tom, Terry and my two brothers to buy really snazzy suits and matching shoes that probably cost more than the rest of his wardrobe put together. \n\nWe used the tiny church down the road from Gray's place decorated for Christmas, with Gemma and little Natalie as my bridesmaids and Deedee and Elaine (who had been there the first time I did this!) as maids of honour. Our ring bearer Sam toddled down the aisle on his wheeled frame and beamed a smile that had all of us gulping back tears. His Uncle Terry was there in his wheelchair, proudly as best man for a second time.\n\nWe all stayed at Gray's place for most of the Christmas holidays; the kids had Christmas day with their father (it was his turn) having lunch at a hotel he'd booked and paid for months before, then back to his small flat and falling asleep in front of the TV. \n\nGray and I had Sam, Terry, his best mate Dave, and my Mum and Dad over and we were just about getting the mountains of snacks that Gray, my Mum and I had prepared when all three were dropped off. Originally Gray was going to go and collect them but I secretly believe that Parker wanted to see Gray's house just to make sure it was as fantastic as Gemma had described it. The speed that he pulled out of the drive at convinced me that it was.\n\nThat evening was wonderful and the kids all stayed over for Boxing Day and the few days afterwards. Gray had the best of everything of course, and his big old country house was like something out of a 1980's American TV Christmas special and rather than just me cooking the lunch we all did. \n\nGray was generous with OUR gifts; I made him promise that he wouldn't go mad but Bradley spoke constantly about how much money his Dad always spent on them over the years and said he'd seen 'a look' in my face so bought presents from 'Mum and Gray'. \n\nAnd didn't he just.\n\nHe bought Tom a real Fender Telecaster in the same colours as the cheap Japanese repro he'd bought from a friend a couple of years before, Gray had sat in our kitchen and played it a couple of times so knew what he was after.\n\n\"It's an AMERICAN ONE!\" shouted Tom, leaping up and hugging Gray and me in a way he'd never done with his Father. I guessed that the American ones were different and as he slipped it from the huge black flight case he explained about American and Mexican Fenders. Ooooooh-kay...\n\nBradley had a \u00a31,000 portfolio of rather good shares and lots of interesting books and programmes for his laptop on how the market worked, and on-line support from a company run by one of Gray's investment specialist friends so he could learn the money markets for real. Both me and my Dad begged Bradley not to tell his father as he'd blow the lot.\n\nBradley couldn't wait to tell his Dad and of course took his advice; I did ask Gray if he could set up the software to stop his Parker just syphoning it off. Gray said that he'd already done that and when he inevitably tried, the software would stop him and send an email to the friends company that had overwatch of the account. The email was received the day before New Year's Eve and Parker was cross and his excuse was that HE wanted to help his son and add some more shares of his own to the account. Yeah right.\n\nBut Bradley went with his Dad's advice and his famous 'take a chance', 'seat of your pants', 'winners always win' investment strategy and that particular portfolio is now down to just under \u00a3300. Even if he'd just left it and done nothing it would have raised \u00a3150 in the first year.\n\nHe bought Gemma a short jacket, a really good quality one I might add, that she had expressed a desire for having seen a friend in one, and told her that it was a 'car coat'. She looked confused but put her hand in the pocket and found an envelope with the booking forms for driving lessons.\n\nThis has been something that Parker had been 'meaning to sort out with a mate of his' since her seventeenth birthday almost a year before and her getting her first provisional licence. \n\nHer first lesson was all day on the Saturday between Christmas and New Year, and she took to it like a natural as I knew she would.\n\nHer driving instructor said that she had exactly the temperament and turn of mind to drive and if she had a few solid days of practice she'd pass first time. Gray heard that and just booked him for a solid week during the Easter break and come the time Gem took and passed her test first time.\n\nGray, being Gray, gave her a huge bear hug when she came back with her pass certificate, and apologised.\n\n\"Sorry Gem,\" he said, \"I was going to pay for lessons until you passed, and now you've passed faster than I thought for.\" He reached into his jacket pocket and withdrew a couple of keys. \"Here,\" he said handing them to her, \"This should bring you up to the value of Tom and Bradders presents.\" I knew from the shape of the keys what it was and bit my bottom lip. \"Out in the garage honey, next to the Disco.\"\n\nGemma shrieked and leapt into Gray's arms hugging him and thanking him. It was a car of course; she didn't care which, what colour nor how old. It was a car, and she'd wanted to take that step into the grown up world and he'd arranged it.\n\nNext, we were all running out to the long driveway and the electronic garage door slowly opening to reveal a dark blue Ford Focus only a few years old with a huge ribbon bow on the bonnet. It was way more expensive than Tom and Bradley's presents but this was Gray of course.\n\nGemma opened it with the blip key and jumped in. Gray bent down to the open driver window.\n\n\"It's fuelled up, it's taxed and MoT'd for a year and it's insured in your name. BE CAREFUL WITH IT!\" He grinned patting the roof and stepping back. \n\nTom climbed in the front passenger seat and Sam appeared next to him.\n\n\"Yeah, there's a spare seat for you buddy,\" said Gray picking up his son and placing him in a special child seat already in the back. \"You three drive carefully now. Tea is at four!\"\n\n\"Thanks Gray!\" I said, watching as my family all went out for a drive for the first time without us. Almost all of my family of course.\n\nBradley was stood on the steps of the front door, arms folded and looking down his nose at his sister's British Racing Green, 16 valve, two litre late Christmas present. There was some green eyed monster presence and I told Bradley that his turn would come when he was old enough.\n\n\"Dad's mate is going to teach me - for nothing,\" Bradley spat and with a sigh taken straight from his father's repertoire added, \"and at least that's something that Dad won't have to pay for now.\"\n\n\"Yeah,\" said Gray with his deep rumbling voice, \"poor thing.\"\n\nSo confident was my lovely Gem that she drove herself back to Edgehill after the three week holiday.\n\nBefore the wedding I had asked the kids which house they wanted to live in; my lovely Gem was away at Edge Hill of course but still agreed with Tom that they would live where I would be happiest, while Bradley asked if Gray really was going to cover over his swimming pool and Jacuzzi, and would he be building a gym. \n\nWe sold my house and we all moved there after Christmas. Bradley wanted desperately to complain about the disruption to his social life (he didn't actualy have one) but struggled to find something to bitch about in the great house so much like the one his own father had mentally prepared him for since he could sit, listen and understand his bullshit. His bedroom was huge, with a bathroom that only he and Tom used. Gemma's room was attached to the one that Sam used and he didn't mind.\n\nAt Gray's recommendation I worked out the profit that my place had made in the twelve years I'd lived there and happy that my money was going straight into the bank - Gray had no mortgage - I rang Parker and said that I was going to give him half of the profit.\n\n\"How much?\" he said.\n\n\"Eighteen Thousand,\" I said, \"I'm rounding it up to twenty as a good will gesture.\"\n\n\"Twenty five,\" said Parker, just as Gray predicted he would. I cancelled the call as Gray suggested.\n\nParker rang me back.\n\n\"Natalie,\" he said, \"I...\"\n\n\"It's just gone down to fifteen,\" I said, \"and if you dare to try to bargain with me like one of your spivvy contacts, I'll keep the fucking lot!\"\n\n\"Sorry Natalie,\" he said with little feeling.\n\n\"I'll transfer the money into your account tomorrow...\"\n\n\"No!\" he almost cried out, I guessed that the second it appeared in his main account it would disappear to service any debts he probably had, \"No, please may I have a cheque made out to me?\"\n\nI wanted to giggle; working in a large primary school the 'please may I' phrase was something that the children were taught.\n\n\"I'll get a building society cheque raised and have them post it to you.\"\n\n\"I'll collect it,\" he said brightly.\n\n\"Whatever,\" I replied, \"but that's it Parker, I'm only doing this because you're in the shit, and if you don't have a business Bradley will end up working in MacDonalds for the rest of his life.\"\n\n\"Thank you Natalie,\" he said, actually sounding like he meant it for the first time, \"Bradley will be fine, I'll look after him like he's my own...\"\n\n\"HE IS YOUR OWN DICKHEAD!!\" I screamed down the phone and disconnected the call and turned it off. Fucking Parker! \n\nHe was back to his old self and performing again, saying what people wanted to hear without thinking and extremely lucky to get anything after that, by Gray convinced me to send him the twenty thousand as discussed. I doubt he has much left.\n\nNo one was more surprised than me when later that summer I missed a period, I was normally so careful about those kind of things, but Gray and I were so much in love that we struggled to keep our hands off of each other, and eight months later our son James was born and he's the apple of everyone's eye including Sam who loves nothing more than holding his little brother and hugging him.\n\nSam had come on in leaps and bounds and now there was a big family in his home, he is no longer residential at his school and comes home each day, with the occasional nurse or physio visit. \n\nHe loves his 'Big Sissa' Gem and when she's away they have a weekly Skype chat on his tablet and it's the highlight of his week, while she is the only person that gets to call him 'Sammy' and he goes all silly when she does.\n\nThen there's Tom; he just worships Tom. \n\nTom has always had limitless patience and will still sit with him and help him with school stuff without it seeming to be about school. Sam was good with his various specially designed electronic devices but one day he was watching Tom drawing a caricature, something he'd always been good at and had taken some special art lessons to improve. He had drawn a picture for Gray to be scanned and made into a birthday card for one of Sam's carers, something that Tom often did for his friends and family.\n\nSam watched intently as Tom made Cathy his physiotherapist come out of the paper, with her permed hair, lush eye lashes, pouty lips and nose ring; he added some very simple colour and Sam was transfixed. Tom was charmed and not knowing that Sam couldn't use a pencil or pen he didn't let that stop him teaching his new little brother to draw.\n\nSo he started to help his new mate hold a pencil and then make marks with it, something his school had struggled with. Tom's gentle support and encouragement, and loud and over the top congratulations would have Sam beaming his smile and lots of laughter. Over days and weeks and a large piece of clay painstakingly shaped to fit Sam's tiny misshapen hand and then baked in the college art studio ceramic ovens he'd cracked it, and Sam was beginning to draw very basic shapes. The college art lecturer found him in his studio waiting for the timer and listened to what that nice Wallace boy was up to and had him bring it back in if it worked and cast another three in rubber, telling him to get in touch again as Sam grew up. The college lecturer sent one to Sam's school with Tom's notes on that they had done. This was all news to Gray and I of course.\n\nAfter a few months of having his son home, and the support of me and my two eldest children I found Gray stood in the kitchen, tears pouring down his face with a trembling bottom lip, as he carefully and purposely put a crumpled sheet of paper with some very scratchy circles with dark lines around them on to the fridge door and held it there with magnets.\n\n\"You OK Darling?\" I said, having never seen him like this before.\n\n\"Yeah,\" he giggled, \"Look,\" he took a step back and pointed at the collection of pencil lines, \"It's me and you,\" he choked back another gasp of emotion.\n\n\"Gray...\" I said at first not getting his emotion.\n\n\"He's just got it out of his book bag and gave it to me so proudly,\" he said his eyes streaming with tears, \"Isn't it fantastic!?!\" he giggled and wiped his eyes so he could see it more clearly and pulled me to a hug, laughing again.\n\nSuddenly I got it; such a simple thing that simple parents get all of the time, so much so you have assign parts of the fridge door to each child and take down the oldest picture to put up the new one, often in secret. Gray had never had it before, and I guessed he thought that he never would.\n\n\"It's wonderful!\" I said and hugging him round the neck and kissing him and laughing along with him.\n\n\"It's called Daddy and Mummy Natty,\" he said simply as he caught his breath again, his chin on my shoulder.\n\n\"Mu...\"\n\n\"Mummy Natty,\" he said pulling back to look into my face, \"his choice of words honey, not mine.\"\n\nI put my hand across my mouth, my eyes brimming with tears now,\n\n\"Oh Gray,\" I managed to gasp out. \n\nHe wiped tears from my face,\n\n\"You and your children are the best the thing that have happened to my little boy since Caroline died, and I can't even begin to thank you enough for it.\"\n\nWe were both grinning like idiots and weeping big tears. I rested my forehead against his,\n\n\"You and Sam,\" I gasped in a whisper, \"you're both sooo worth it.\"\n\nSuffice it to say that after tea, I pulled Sam onto my lap and kissed his face, thanking him for the great picture and held him there in a hug all evening, then taking him up for his bath and wrapping him in big soft towels, and carrying him through to his bedroom, dressing him in his soft PJ's, tucking him in and kneeling by his bed and reading him all the stories he asked of me before kissing him good night. Silly, simple Mum stuff that I'd done for my own children but I felt so proud that within less than a year of losing his real Mum he had taken me into his trust and into his heart.\n\nWhile Tom loved and looked after his new family it was obvious that he didn't care whether his baby brother James was planned or not, while Bradley took it personally looking at me as if I was some promiscuous single mother trying to find a way to get a bigger council house, rather than a 39 year old, professional office manager married to a millionaire with three kids of my own already and gorgeous step son that was improving by the day. ",
        "Bradley pretty much spent his time in his room, in the Jacuzzi or in the home cinema and never bothered Sam; I know that my Tom still watched him for signs of any kind of disquiet.\n\nBradley was so unimpressed that when I announced to the family that I was pregnant, like Adrian Mole, he whined that the screaming would interrupt his revision for his exams, the exams he didn't normally care a monkeys about because his real education would be at the 'University of Life' with his Dad.\n\n\"What the hell do I tell my friends?\" he snapped as if I had fallen pregnant just to annoy and embarrass him, his Father's son to the last.\n\n\"What on earth does it have to do with your friends?\" I said, \"Are they interested in your family then?\"\n\nWhile we now lived some distance out of town, I still drove Tom and Bradley there and their respective educational establishments so he was still in touch with his few friends, one of which was very interested in his family. \n\nHis slimy friend Si had started to drift away from him once word spread that his Dad's business was going down the toilet, but when Bradley had started to complain that his mother's damned lover was making them all move out to his damned place in the country with a swimming pool and home cinema Si became a bit more animated. I disliked Si and said to Bradley that I didn't particularly want him at the new house because I trusted him and his slimy Dad as far as I could throw both of them. \n\nSo Si would cycle the two and a half miles out of town specially and would ring the bell then adopt a Roger Moore eyebrow style, fold his arms, lean on the nearest suitable support and try to adopt the 007 laconic smile hoping desperately that Bradley's gorgeous older sister was around.\n\n\"Fuck off Simon,\" Gem would whisper to him if she was.\n\nAs Bradley settled in and got comfortable he started to adopt a far more parochial approach to the wonderful house we all lived in now. After he showed Si his huge bedroom I watched as Bradley showed him the pool, covered against leaves and other winter detritus, and the Jacuzzi that needed just the flick of a switch to bring it to warm and frothy life in less than five minutes.\n\nHe also showed him all of the electronics in the downstairs rooms he was so cool about and the size of the drinks cabinet; I looked on in disbelief as his scummy friend took out his phone and prepared to take pictures. I stopped him, showed him back to the kitchen and asked why exactly did he needed photographs of the inside of our house. \n\nHe tried the same smug 'trust me' smile his equally scummy father and sometime partner of Parker had used but failed to respond verbally so I sent him on his way on his bike, pointing out that the place was covered by CCTV and intruder alarms adding that it wouldn't be wise for anyone to try a screw the house of one of the cleverest and successful prosecutors in the country.\n\nParker? Well, his business is still his business although no one quite knows what it is these days. His old... sorry his classic BMW is just about running.\n\nAs soon as he found out that he would still need to pay Bradley something to be his apprentice, that job, like so many of Parker's promises throughout his life, turned out to be just so much more of his shit. \n\nBradley was stunned and I could read the real hurt in his face this time. Bradley, who looked up to his wayward and unreliable father as the font of truth and wisdom, had based his entire future on the crap his Dad had sold him and didn't really try with any of his exams and as Tom got 'A star' marks for his first years of 'Advanced level' exams, Bradley received perhaps the worst set of scores his normally excellent school had ever had, the best being a 'D' for I.T. and half a dozen 'U' - for 'ungraded'. I wrote to the head master apologising for him knowing that this kind of thing could seriously affect the schools Ofsted (Office of Standards in Education) report.\n\nParker's response was to blame the school for not teaching him well enough, the economy for the drop in his business to not enable him to pay Bradley, me for... well he never got around to that, then finally Bradley who had actually spent the last year of his schooling playing computer games, surfing the Internet, hanging around with Si and generally disdainfully slagging off anything that wasn't an apprenticeship with his Dad's 'Firm'.\n\nGray came to the rescue once again though, and found Bradley sat on the bench seat looking out across the surrounding countryside with tears in his eyes. He took Bradley gently by the shoulder told him it would be OK and without fuss or blame drove him to the Further Education College he had gone to and helped him sign up for the classes he would need to do to retake his exams, just as he himself had done had all of those years ago.\n\nBradley settled into his college life with its more adult atmosphere and showed a real aptitude for I.T. He retook his exams and passed and is now on a computer programming course working for a small programming firm in his spare time.\n\nHis hormones finally kicked in and he cut his silly hair, learned to ride a bike, learned how to talk 'to' people rather than 'down' to them and stopped being the arsehole we'd all put up with for the last three years - mostly.\n\nMy six months of maternity leave stretched into a year and Gray has asked if I absolutely want to go back to work and I do. He has offered that I can become a stay at home Mum to James if I want to with his total support, or work at home doing some clerking for his chambers. I desperately want to do both of course and the thought of leaving James with a childminder just as he becomes a little person is heartbreaking. But I have done it three times before of course. As the spring edges into summer, the option of stay at home Mum becomes much more interesting.\n\nAs I stood staring out across the countryside from my new patio, a mug of tea in my hands he came up behind me,\n\n\"Penny for your thoughts Nats?\"\n\nI smiled and rubbed my cheek against his,\n\n\"It's just all this,\" I said turning with his arms still holding me, \"I can't believe that what we have is so perfect.\"\n\n\"Yeah, and it's going to go on being perfect,\" he kissed me again.\n\nThe sun started to sink and I felt his hot hands on the cheeks of my bottom\n\n\"Yeah,\" I said smiling into his lovely face, there was no way I could leave this place for a job. \"Perfect; tell me more about how I could work for your chambers from home...\"\n\nThe sun went down, we kissed some more, all was well with the world."
    ],
    "authorname": "Androgynousother",
    "tags": [
        "straight sex",
        "outdoor sex",
        "oral",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/a-real-man-in-my-life-ch-05"
}