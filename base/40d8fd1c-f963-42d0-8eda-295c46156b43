{
    "title": "Bottom Feeders",
    "pages": [
        "\"Hey, Layla, are you busy Saturday night?\" Rod asked.\n\nRod had called his sister on the phone. The summer was winding down and soon they would both be heading back to their respective colleges for the fall semester. Their parents were divorced. Layla was a year older and entering her senior year, and had spent the summer with their mother and her new husband. Rod had stayed with his father. They were both ready to escape the family drama and get back to school and be on their own.\n\n\"No plans yet,\" Layla said. \"What's up?\"\n\n\"I thought you might like to go to a party with me.\"\n\n\"What's the matter, Little Bro, are you so hard-up that you have to ask your sister for a date?\"\n\n\"Not exactly. It's up at the Lyons' place. Remember them?\"\n\n\"The Lyons? You mean the swingers? What, are they having another one of their wild sex parties? And you want to take me? What, are you some kind of pervert?\"\n\nThe Lyons lived nearby their father's home, in a big house on almost an acre of land, with a large, screened-in swimming pool. They were known to have a very open marriage and were also known to occasionally throw wild parties where anything goes, and their guests would come expecting to mingle, swing and swap. Rod and Layla had never been to one but had heard that a lot of wild, mad fucking and sexual experimentation was the purpose and usually the no-holds-barred result.\n\n\"No, not a pervert. Just horny I guess; I haven't been laid in a month. But I thought it might be fun to go and see what it was like. When we get there we can go our separate ways. But I can't go alone. Only couples are invited. The party rules are pretty simple: Bring a partner and a bottle and share both.\"\n\n\"And you got yourself invited?\" she asked.\n\n\"Yep, on the recommendation of a friend at work. I hear they're searching for some young blood.\"\n\n\"Well, okay, that's better, I guess. I thought you were getting all weird on me. But it might be fun. Something different, anyway.\"\n\n\"That's what I thought, maybe get into some older stuff. The party starts at eight. Why don't you come over here a little after and we'll head over together. And remember it's a pool party. Show off that body of yours and you'll have some old guy creaming himself in no time.\"\n\n-\n\n\"You look great, Layla,\" Rod said, as he looked her over. She was dressed comfortably in white shorts and a flowery halter top which showed off her tanned arms and legs, and of course her cute butt and perky breasts.\n\nThey were both good-looking kids. Rod was tall and lean and wore cargo shorts and an indigo batik shirt with tropical birds on it. Both looked ready for a summer party.\n\n\"So do you, little brother,\" Layla said, handing him a fifth of rum. \"Now let's go to this party and see how lucky we can get.\"\n\nThey drove separate cars to the party because they had no idea where or with whom they'd end up later that night. They parked about a block away and walked to the house. They were greeted at the front door by Lita Lyons, the lady of the house and host of the party, who wore a red, white and blue one-piece swim suit that was tacky wet and clung like glue to her petite body and enormous tits. They all recognized one another from being distant neighbors, but they made their re-introductions just the same.\n\n\"Welcome, and thanks for coming,\" Lita said. \"The bar is out back on the lanai, through those French doors, along the wall to your left. Help yourself to whatever; there is plenty of ice and mixers.\"\n\nThey walked out back and found the party already in full swing. There was a buzz in the air, a vivid hum of conversations and dozens of scantily-clad bodies. They mixed rum with Coke at the bar and found a convenient spot nearby to stand and observe.\n\nSome of the guests were already letting their freak flags fly. Articles of clothing were coming off and various body parts were coming out. There were couples in the pool getting friendly and frisky with other couples, mixing mates. There were small groups scattered around the large screened-in area, some standing, some lounging in chairs. Two women were sitting on the edge of the pool making out and two men were in the water in front of them with their faces glued to their crotches. Rod and Layla were watching when before long the men traded cunts and the two women grinded their pussies into their faces as they sucked each other's tongues.\n\nRod recognized a woman at the far end of the patio. It was a woman who had lived a couple doors down from them when they were teenagers. She had to be close to their Dad's age but was all over a guy many years her junior.\n\n\"Hey, is that Mrs. Fitzsimmons over there?\" he said, nodding toward the couple.\n\n\"Yes, I think it is,\" Layla said. \"She still looks pretty good for her age, doesn't she? Looks like she's got herself a young buck. Looks like you got here too late, Rod.\"\n\n\"Yeah right,\" he laughed. Mrs. Fitzsimmons was wearing a two piece swimsuit and was kissing the young man passionately. He had his hand on her breast and she had her hand inside the front of his swim trunks. An older guy with a drink in his hand stood to her right watching them intently.\n\n\"Don't be shy!\" Lita Lyons said loudly as she breezed by. \"Feel free to mingle. We're all here to meet people and enlarge our circle of influence...among other things!\" She smiled coyly and kept walking.\n\nRod scanned around looking for his friend and didn't see him at first. Then they spotted one another at the same time and waved. He was at the far end of the pool with his girlfriend and another couple.\n\n\"Hey, there's my friend from work,\" Rod said. \"Let's go over, I'll introduce you.\"\n\n\"I'll join you all in a minute,\" she said. \"I need to find a bathroom.\" She set her drink down and headed into the house. Rod walked over to his friend.\n\n\"Hey Rod, how's it hanging?\" his friend said loudly, laughing. He was sitting with his arm around a slim redhead in a black bikini. \"This is Amanda. And this is her husband Bob,\" nodding to his right. \"And you know my girlfriend Lisa.\" Lisa was on the other side of Bob, who had a hand on her thigh. They all said their hellos.\n\n\"What happened to your girlfriend?\" Lisa asked. \"Did she run off?\"\n\n\"That's my, uh...that's Layla,\" Rob said. \"She'll be right back. She had to find a bathroom.\"\n\n\"She's hot. Does she do girls?\" Lisa asked, with a smirk. Bob gave her a sideways glance.\n\n\"I don't know, maybe. Ask her,\" he said. \"I know I do!\" They all laughed.\n\n\"Are you having fun yet?\"\n\nRod told them that he had only been here a few minutes. They made idle chatter for a short time and then Layla joined them. Once again introductions were made all around. Soon Rod's drink was empty and he left to get a refill.\n\nHe went to the bar and had to wait a couple minutes as others ahead of him fixed drinks. He looked around at the weird scene. Voices and music had become louder and the party was becoming racier by the minute. By the time he'd gotten his drink he looked at the far end of the patio where two couples had really attracted the attention of a few of the guests.\n\nOne couple was older, perhaps in their fifties, and the other couple was much younger, maybe in their mid-to-late twenties. Both of the men were naked below the waist and were getting their dicks sucked. The young attractive brunette's head was in the lap of the older, balding man, and his cock was deep in her mouth. His slim, gray-haired wife was going down on the blond, much-younger man.\n\n\"Jesus, will you look at that!\" a female voice said.\n\nRod looked to his right and an attractive older woman was standing next to him watching the same spectacle he was.\n\n\"If I was going to blow some guy at this party I'd at least try to find someplace a little more private,\" she added.\n\nRod looked her over and she looked fine. She was maybe fortyish, with coal-black hair cut in a shoulder-length bob with a shiny glitz. She was darkly-tanned with a thin, athletic body and a tasty-shaped rump. She wore a frayed, short blue denim skirt that barely housed the top half of her lean thighs, and the rigid nipples of her firm, medium-sized tits reached out for him from behind her white tube top. He tried not to stare and hoped he could think of something intelligent to say.\n\n\"Uh, yeah,\" he half-stammered. \"Sure is bold.\"\n\n\"Look at the shit-eating grin on that old fart's face! That girl may be young but she must be one hell of a cocksucker.\"\n\nRod was surprised to hear the risqu\u00e9 language coming from this attractive, older woman. But it was kind of an instant, ice-breaking turn-on, and he liked her already. And he figured right away that here she was at this party so she must be looking for something new and different. And maybe that something could be him.\n\n\"Do you come to these parties often?\" Rod asked lamely.\n\n\"I've been a few times. How about you?\"\n\n\"First time for me.\"\n\n\"I've noticed some new faces. You're kind of young aren't you?\"\n\n\"Twenty-one,\" he said.\n\n\"Old enough, I guess,\" she said. She seemed to look him over for the first time and liked what she saw: Tall, good-looking, with a mop of beach boy blond hair on his head, broad shoulders and muscled forearms and legs. \"What's your name?\"\n\n\"Rod.\"\n\n\"Hmm, Rod, huh? That's a strong-sounding name. I'm Maud.\"\n\n\"Pleased to meet you, Maud.\"\n\n\"Pleased to meet you as well.\" They shook hands and then she batted her eyes and said playfully, \"Gee, what does a gal have to do to get a drink around here?\"\n\n\"Oh, I'm sorry. What'll you have? Your wish is my command,\" he said.\n\nHer eyes lingered on his for a moment. She smiled flirtatiously and said, \"Oh, really? Well, I think I might save my wish for later. Right now I'll settle for a drink. Vodka rocks with lime.\"\n\nRod felt a chill and goosebumps broke out on his arms as he turned back to the bar. He hoped Maud didn't notice. He was suddenly nervous because this hot, suave older woman was apparently coming on to him. She was smooth and in control, this he knew, but she was making him feel at ease, at least as much at ease as he was capable of at the moment. He tried not to appear too nervous as he filled a glass with ice and poured it full of Stoli. He squeezed a lime wedge and dropped it into the drink, then turned and handed it to Maud.\n\n\"To a hot summer night,\" she said with a snicker, raising her glass.\n\n\"To a hot summer night,\" he said, and they tapped glasses.\n\nThey were silent for a few moments as they sipped their drinks. Rod glanced back over toward his friend and he saw that his sister had moved on. Layla seemed to be in a deep, animated conversation with another couple a few feet away.\n\n\"Do you want to try to find someplace where we can sit down? Get away from the noise, relax a bit?\" Rod said to Maud.\n\n\"You're not going to try to undress me are you?\"\n\n\"No. Not without your permission, anyway. Maybe with my eyes.\"\n\nMaud laughed. \"Oh, you are too cute,\" she said. \"Sure, let's go find a seat.\"\n\nRod topped off his drink with rum and they headed into the house. The living room and family room were occupied but Maud knew the layout and led them to an office at the side of the house. There was a desk against one wall, bookshelves on another wall, and a love seat facing the books. Maud flipped on a small table lamp and they sat. They were close together on the loveseat and Rod got a whiff of Maud's perfume for the first time. She smelled fabulous. It was Chanel No. 5. He didn't know squat about perfume but he knew that one because it was a fragrance his mother often wore.\n\n\"Did you come to the party with anyone?\" Maud asked.\n\n\"Yeah,\" Rod said, and took a gulp of his drink. He felt a quick, burning jolt from the rum he'd poured to top off his drink.\n\n\"And she's okay with this?\"\n\n\"She's okay. I checked her out a few minutes ago and she'd already hooked up with somebody. She's not really my girlfriend. We just came together because I was told it was couples only. Who'd you come with?\"\n\n\"I came alone. Lita doesn't mind if some of the women come by themselves...they just don't want it to be lopsided with too many men and not enough women. So I came to check it out and see if I could find anyone interesting.\"\n\n\"Do you think I'm interesting?\"\n\nMaud turned slightly toward him. \"Well, let's see. There's a house party going on. You're young and handsome and I'm sitting alone with you on a loveseat in a room by ourselves. What do you think?\"\n\n\"I like. Sorry if I seem a little nervous. I've never been to a party like this before.\"\n\n\"Don't be nervous, relax. I know we have a big age difference but I wouldn't be sitting here if I didn't like what I see.\" She stirred her drink with her finger and sucked the liquor off of it. \"So Rod, tell me. What did you come to this party looking for?\"\n\n\"I don't think I really knew until now. But I think I found her.\"\n\nRod's eyes were like soft blue rays penetrating hers. She licked her glossed lips.\n\n\"So young, yet so smooth,\" she said with a twinkle. \n\nIn an instant her mouth was against his and their lips parted. Their tongues collided and their mouths meshed into a saliva, rum and vodka mosh pit. Rod's arms surrounded her and they kissed powerfully for a solid two minutes. Their tongues mashed deep into their mouths as their hands roamed over all new territory and while Maud's vagina wetted and Rod's cock hardened.\n\n\"Let's get out of here,\" Maud said when she got her tongue back. \"I know a place we can go.\"\n\nShe rose and took his hand. She led him out a side door and down the drive and they walked swiftly without words up the street. When she stopped they were standing next to a blue sedan.\n\n\"Do you have a car?\" she asked.\n\n\"Right there,\" he said, pointing to his Toyota a short distance away.\n\n\"Okay, follow me. It's only a ten minute drive, a private place out by the lake.\" She paused for a moment and felt a shiver. \"Give me your hand,\" she said softly, and pulled his hand up and under the front of her skirt till it was flush against her crotch. \"Feel that?\"\n\n\"Hmmm, no underwear,\" he said.\n\n\"Feel how wet I am?\"\n\n\"Yes...\"\n\nShe took his other hand and put it up under the back of her skirt. She pressed the tips of his fingers against her asshole.\n\n\"Feel that?\"\n\nHe nodded.\n\n\"That's my butt plug, holding your spot. You get to take it out.\"\n\nShe kissed him and her tongue dove deeply into his mouth and then right back out.\n\n\"I'm going to put my mouth all over you and get you off,\" she said hoarsely. \"And then you're going to put your mouth all over me and get me off.\"\n\nThey kissed again and Maud ran her hand strongly against the outline of his cock through the fabric of his shorts. She opened her car door, got in behind the wheel and lowered her window. She signaled him with her finger to come closer. He put his forearms on the open window and leaned in. She put her lips to his again and took another taste of his tongue for the road.\n\n\"You're a good kisser,\" she said, then whispered: \"And I like it in the ass, so get ready. Follow me.\"\n\nThe window rolled up as the engine roared to life. Rod took his keys and his hard-on and walked over to his car, got in and followed her. He was stoked and excited about going to bed with this exciting, erotic older woman. But he couldn't imagine even for a second the education he was about to receive.\n\n-\n\nRod's boner abated as he followed closely behind Maud's car. 'Who the hell is this woman?' he wondered. 'And how in hell did I end up with her? What am I doing here?'\n\nAfter several miles Maud turned left onto the old Lake Road. The Lake Road was a six mile loop around the large, kidney-shaped lake. A few minutes later she made another left and Rod followed her down a wooded drive and they parked the cars in front of a small lakefront cabin. There was a wooden skiff with a thirty-five horsepower outboard motor on a trailer parked beside the cabin.\n\nMaud got out of her car with only her keys in her hand and Rod followed her to the front door. He eyed the subtle sway of her ass in her short skirt as she walked in front of him and pictured the plug up her ass where his hand had just been. \n\n\"Is this your cabin?\" Rod asked as Maud unlocked the deadbolt.\n\n\"No,\" she said. \"It belongs to friends. They don't use it much anymore and they let me come here when it's not rented.\"\n\nOnce inside Maud flipped on a light and closed the door behind them. She tossed her keys onto a table by the door and turned to Rod and they embraced. Their bodies were plastered together as they kissed and Rod felt the delicious pressure of her tits against his chest and his groin against hers. She took his hand and led him to the bedroom.\n\nThe cabin was one large room with a small kitchen on one side and the bedroom on the other. There was also a loft above the living area and a deck outside overlooking the lake.\n\nOnce inside the bedroom Maud swung around to face Rod and sucked his tongue into her mouth and put her hand between his legs.\n\n\"Are you ready for a great piece of ass?\" she asked.\n\n\"Yes.\"\n\n\"Good,\" she said, rubbing his cock. \"Because I can't wait to suck this thing. Be right back.\" She went into the bathroom and closed the door.\n\nRod sat on the bed and waited. He looked around the simply-furnished room: a bed, a dresser with a mirror, a nightstand, a chair. He heard the toilet flush and water running in the sink for a minute or two. Then the door opened and Maud reentered the bedroom.\n\nShe was completely naked. The only thing on her body was a five o'clock shadow of pubic hair above her damp pussy. Rod could not believe his good fortune as he took in the sight of her gorgeous body, its sexy length and leanness, her perked nipples, slim waist and taut stomach. Her skin was deeply bronzed from face to feet without a single tan line anywhere, not even from a ring or a wristwatch. It was obvious that Maud spent much of her summer into the sun and out of her clothes.\n\n\"Your body is beautiful,\" Rod said, as she walked to him.\n\n\"Thank You. Now let's get a look at yours.\" She knelt before him and unbuttoned his shirt.\n\nRod removed his shirt and tossed it aside. Maud kissed his muscly, hairless chest and traced her tongue over his nipples and down over his flat stomach as she unfastened his shorts. She hooked her fingers inside the elastic waistband of his underpants and yanked his shorts down to his ankles. His thick, erected cock popped out and bounced up and down in salute; its pee hole was already glistening with expectation.\n\n\"Oh, wow,\" Maud said. \"Now I guess I know why they call you Rod!\" She licked her lips and then licked the tip of his cock and ran her tongue along the eight stiff inches of it. \"Come in my mouth.\" He groaned when she wrapped her lips around it.\n\nRod leaned back on his hands and gently swung his groin into her, fucking her mouth as she sucked him. Her hands were under his butt cheeks, squeezing gently, coaxing him to cut loose with anything he had stored up inside. He held back even as he poked her, not wanting to come too soon. He wanted to prolong what was happening as long as he could. But he was anxious to get on to other things too.\n\nShe had his whole dick in her mouth and he could feel her tongue massaging his shaft. She pinched his ass harder, in time with her oral gymnastics. He groaned with each of her vacuum sups and pushed his cock into her throat. He dug his hands into her shoulders and tried to pull her head closer even though that was virtually impossible. \n\nThis went on for several minutes: Rod's moans and Maud's slurps punctuating their movements, his hands and groin in supple sync with her hands and mouth as she gave head.\n\nWhen he came Maud felt like he was sandblasting the back of her throat. Rod bleated loudly and his body shook all over as he released, sooner than he'd wanted but he could hold it back no longer. His cum plowed its way up and exited his cock in a powered stream almost too wide for its outlet, sizzling like a geyser letting off steam.",
        "Maud gagged as she held on and his ropes of semen were delivered, each lesser than the one before. When he was finally emptied she de-mouthed his greasy cock, slick with saliva and jizz, and rose to kiss him with his cum oozing from the corners of her mouth. She put her open mouth on his and pushed her tongue into him, shoving his fresh sperm deep into his mouth. If I'm going to swallow his cum, she thought, so will he.\n\nShe pushed him back so he was lying flat on the bed with his feet on the floor and his shorts around his ankles. She slid her naked body upward and over his until her pussy lips were on his mouth. She straddled him with her weight on her knees and sat on his face. Gently she swirled her twat around his lips, teasing.\n\n\"Lick me,\" she said.\n\nRod obliged. He ran his tongue along her silky folds, tasting her, his mouth slowly filling with her tangy brine. Then he speared his tongue into her.\n\n\"Oh yes!\" she gasped. \"Fuck me with your tongue. That's good.\"\n\nRod jabbed her over and over, reaching his tongue as far into her as he could. His nose was mashed into her groin so he took quick breaths when he could. Maud moved her cunt around, and with his tongue inside her she wiggled her clit under his upper lip.\n\n\"Suck me while you tongue-fuck me,\" she purred.\n\nWith her clit resting on the back of his tongue, Rod curled his lip around her taut tool. She oohed and aahed as he massaged it and she grounded into him, forcing his tongue into her deeper still. This went on and on, with a chorus of Maud's moans and Rod's jaw beginning to cramp.\n\nA couple feet south Rod's dick was again at straight attention and pulsing at the seams, but Maud had other ideas. She changed position slightly so her asshole was against his mouth. She expertly positioned herself and maneuvered her butt plug between his lips.\n\n\"Take it out,\" Maud said, breathing heavily.\n\nRod brought his hand up to her ass but Maud stopped him.\n\n\"No, no,\" she hissed. \"With your teeth.\"\n\nThis was all new territory for Rod but he didn't want to sound like a prude so he went for it. He clamped his teeth onto the flange that protruded from her comely ass. Then Maud slowly rose her body up and the rest of the plug, four or five inches, gradually emerged from her asshole and Rod held it with his teeth. He spit it out and it rested on his chest.\n\n\"Thank you,\" Maud said, and lowered her butthole to his mouth. \"Lick my ass,\" she rasped.\n\nAgain, new territory. \"What?\" he said.\n\n\"Lick it!\" she said. \"It's clean. Don't worry, it's the cleanest asshole you'll ever lick. And tonight it's yours.\" She pressed her asshole to his lips.\n\nRod stuck his tongue out through his lips until the tip met her sphincter. He felt it open and close in response. It felt like it had opened quite wide, and it continued to stretch and contract as he rimmed her. His trepidation eroded and he began to enjoy what he was doing the more he heard Maud's sounds of delight.\n\n\"Ah, yes,\" she murmured. \"That's it, that's good.\"\n\nAfter a few minutes of that Rod knew where he was going next. He knew Maud would expect it, so he did it before he was asked. He grabbed her thighs with both hands and pulled her ass flush to his face and plunged his tongue as deep as he could into her asshole.\n\n\"Oh God, yes!\" she groaned, and grinded her ass into his face, wanting all of it. \"Oh fuck, you're a natural.\"\n\nRod worked his right hand over from her thigh to her pussy and slipped two fingers into her and she was suddenly getting it in both ends. Maud's fingers were stroking her clit in conjunction with his.\n\nTheir symphony of tongue and finger fucking went on for what to Rod, seemed like a long time. Rod's mouth was occupied of course, but Maud's made enough noise for both of them with her blissful animal whimpers. And she was right, Rod thought, it was clean, and tasted good, kind of fruity. She was lubed and ready.\n\nBy now, Rod's dick was throbbing like a dirt bike. Fat and stretched and achy, it was back in full, well done and ready.\n\nRod decided to force the issue a little bit. With his hands he pushed her ass away and to the side. Maud lost her balance and he pushed her down onto the bed next to him and rolled on top of her, his face square with hers. The butt plug plopped onto her left tit.\n\n\"Your ass tastes good,\" he said. \"But it's all nice and lubed; we shouldn't let that go to waste. It's time to put it to good use.\"\n\nRod slipped a finger into her asshole, then two, and wiggled them, slithering in the slickness within, the walls of her trench hugging them. Then he rubbed his slimy fingers over his purple helmet and up and down his shaft. He put the head of his half-lubed dick, swollen and aching, against her winking rim. \n\n\"Give it to me,\" Maud said. \"The whole enchilada.\" She gripped her hands onto his hips.\n\nRod leaned in and pushed the head of his cock against her asshole. Maud took a deep breath and opened wide, and pulled him to her. She grunted when he entered her but he was surprised how easily and quickly her ass swallowed up the head and the first couple inches of his dick. \n\n\"That's it, that's good, Big Boy. Give me what you got.\"\n\nHe pushed and felt the tight delight of the pressure of her warm asshole on his cock. Then he pulled back and swung his meat into her. She squawked and dug her polished nails into him and just like that he was balls-deep.\n\nRod had his hands flat on Maud's shoulders as he fucked her, and her body moved in concert with his, her experienced, quivering ass sucking his cock like it had never been sucked before. She lowered one hand to her swollen, hungry clit, stroking it, and with every sexy swing into her back door he pounded her harder, and she stroked herself harder, then faster, together.\n\n\"You like that ass, don't you?\" she jeered.\n\n\"Oh Yeah,\" he said breathlessly. He could feel heat like an oven in his groin from the slick friction of his dick scraping the walls of her oily asshole again and again as they fucked, and the more he drilled her the more she wanted.\n\n\"You like licking it, you like fucking it.\"\n\n\"Uh huh,\" he grunted, pounding away, sweating with a new intensity.\n\n\"That's it, keep it up, sticking me with your big, fat rod. I'm going to come big...I always do when I'm assfucked.\"\n\nRod suddenly realized he was having the best fuck of his life. Maud's ass was like a pressure cooker, steaming his hot sausage, now long and plump with the need to explode.\n\nMaud's asshole was also burning with the yearning and she rubbed her swelled tool even harder, vigorously coaxing her own climax.\n\nShe stared at him unblinkingly and his eyes were wide blue pools staring back at hers. He grunted with each hitch of their bodies and each drilling of his screw into her anchor. \n\n\"Yes, Yes! Ugh, fill me up.\" She squeezed his cock with her ass muscles and strummed her clit like a harp. \n\nRod's balls were bubbling but the anal pinch on his penis kept his sperms from swimming downstream. \n\n\"Oh, God,\" she howled, \"I'm gonna come.\"\n\nRod felt the pressure on his cock lessen as she howled again and began her release. Her body gyrated in spasms as her cum came in waves and her head shook side-to-side. He rammed his dick into her relaxed ass harder and the resistance and fit was by now a perfect union, his stiffness skating in and out of her ass over and over, working in tandem like a well-oiled machine. His semen soon had an exit strategy and he bellowed like never before when it rose up through him and his dick felt like an overloaded circuit when it blew.\n\nAs his ejaculate shot into the reaches of her trench, Rod felt Maud's cum flowing out of her and tickling his balls. Little by little he gradually slowed his fuckrhythms and when finally his spurts were spent he stopped and they both simultaneously smiled. \n\n\"That was incredible,\" Rod said. It was all he could think of.\n\n\"It was. And your cock is wonderful, it fills me up. But you can take it out now.\"\n\nRod smiled again sheepishly and pulled out. He rolled onto his back next to her and realized he still had his shoes on and his shorts were still wrapped around his ankles. He kicked off his shoes and tossed his shorts on the floor.\n\n\"That's it,\" Maud said. \"Get comfortable.\"\n\nRod wasn't sure if she was kidding or not. He picked up the butt plug from the mattress between them and started examining it. Maud shifted her body onto her side to face him.\n\n\"Not nearly as big as your cock is it?\" she said.\n\nHe shook his head, laughing. She took the plug from his hand and licked it from end to end and then put the whole thing into her mouth. After several puckered power-sucks she took it out of her mouth and handed it back to him.\n\n\"Go ahead,\" she said.\n\n\"What?\" Rod said nervously.\n\n\"Go ahead. Suck it,\" she said. He hesitated. \"Don't be a prude. You've already licked my asshole, for Christ's sake, so what's the difference? I want to see you suck it.\" \n\nRod looked at her and her eyes burned into his. \n\n\"It's a turn-on!\" she added.\n\nAfter a moment Rod shrugged and put the butt plug into his mouth, first the tip and then in one motion the length of it disappeared and he sucked on it as she had. When he removed it from his mouth she replaced it with her tongue and she kissed him with a savage force. Then she lay back on her side facing him with her hand on his semi-hard.\n\n\"Have you ever sucked cock?\" Maud asked him point-blank. She began caressing him.\n\nRod squirmed and hoarsely said that he had not.\n\n\"Why not?\" she asked.\n\n\"It's not something I've thought about. It's not something I want to do.\"\n\n\"You should try it. I bet you'd be good at it.\"\n\n\"What?\" he asked, more uncomfortable.\n\n\"You did a pretty damn good job sucking my clit. I bet you could suck a mean dick too.\"\n\nMaud couldn't help but notice that Rod's cock was again fully erected in her hand. \n\n\"Well, will you look at that,\" she said nodding at his swelled member. \"You've gotten hard again with all this talk about sucking cocks.\"\n\n\"I don't think that's it.\" He ran his fingers through her shiny black hair.\n\n\"So I guess you've never been fucked up the ass, either?\" she said.\n\n\"No,\" he said. \n\n\"You should try it, you might like it. I know I do.\" \n\n\"I could tell.\"\n\n\"Yeah, it's like a drug or something. And the bigger the cock the bigger the high,\" she said, squeezing his cock between her fingers. \"Ah, it must be fun to be a young man. You've already come in my mouth and my ass, and now you're already raring to go again. I guess now you want some pussy.\"\n\nRod turned on his side and with one hand behind her head he reached his other hand to her vagina. It was wet.\n\n\"That sounds like a great idea,\" he said.\n\n\"Okay, let's go for it, Romeo. But later I want you to do my ass again, okay?\"\n\nRod mumbled a positive response as he rolled her over on her belly, mounted her from the rear and slid his cock into her wet, loose cunt.\n\n\"That's it, fuck me from behind, like a dog. Fuck me like you're the Alpha and I'm your bitch.\"\n\nRod has his hands on her hips and started slinging it to her pretty good. But after the slick, snug glove of her asshole, fucking her vagina felt like he was jabbing his cock into a slack, sloppy void. He grunted with each powerful push but lubed as they were it was almost as if he could feel nothing.\n\n\"Squeeze me,\" he said, as he pumped away and lightly bit her neck.\n\nHe felt her cunt walls closing in on him, and it felt better, a little tighter and he continued to poke away, but as his cock kept gliding in and out of her saucy snatch he kept thinking about her ass. He wanted back in.\n\nAfter a few minutes banging in Maud's slippery slope he realized that despite his hardness he was no closer to another orgasm. Finally he slowed his rhythm and pulled out.\n\n\"I want some more rump roast,\" he whispered into her ear.\n\n\"Yes!\" she rasped, as he lowered his head to her butt.\n\nHe spread her cheeks apart with his thumbs and she groaned with glee when he flicked his tongue around her rim. He rimmed her for several minutes, taking his time, his work punctuated by Maud's satisfied sighs. Rod stifled a chuckle while he licked her flexing asshole and listened to her sexy babble. We're speaking in tongues, he thought to himself.\n\nMaud's loudest outburst yet came when Rod rammed his tongue into her ass as hard and as deep as he could.\n\n\"Jesus Christ you're good!\" Maud barked. \"Hmmm...\"\n\nIn and out, in and out it went, and he felt her asshole pinching his tongue with every plunge into it. After a short while of this, pushing his tongue deep inside and then fighting the strength of her tightening asshole to pull it back out, he felt an ache in his cheeks and jaw and knew another cramp was coming. His cock was on full alert and still slick with lube and pussy juice, and ready for a repeat performance up Maud's lush, hot butt.\n\nRod backed off and stretched his facial muscles every which way to fight off the cramp. Maud's asshole opened wide and closed several times, winking at him. He stuck his finger in. It was still greased with spit and lube and semen. Maud raised her ass up in invitation. She opened her asshole wide and held it.\n\n\"Bottoms up,\" she said.\n\nRod didn't hesitate this time around. He put the head of his pole inside her stretched hole and rammed it home.\n\n\"Yeow!\" Maud screamed.\n\nIn no time Rod was hammering her like a nail gun. Bang, bang, bang, knocking bottom. He knew Maud liked getting assfucked and he decided to give her one to remember and she hissed with every slam and the bed frame groaned along with her. Rod was breathing hard and loving the hot, tight friction on his cock as he rammed her. He reached around her, searching for her gash, wanting to fill her both ways, but her hand was already in place, stroking herself, cajoling her cunt to another orgasm.\n\nShe came first, with a wallop. It was as if the clog up her ass had pushed it out of her. She howled like a dog as she excreted her love potion in a string of wavelets onto the bed, and her asshole tightened like a winch until she was through. Then she wilted onto the bed, instantly relaxing all her muscles, including her spent sphincter. She lay there limp while Rod pounded her ten, eleven, twelve more times until he had emptied his balls deep into her again.\n\n-\n\n\"Roll over on your stomach,\" Maud said. \"Let me see your ass.\"\n\nThey had been lying in the bed for twenty minutes in recovery mode. It was now after midnight.\n\n\"What? Why?\" Rod said.\n\n\"I said roll over.\"\n\n\"What are you going to do?\" he asked as he did as he was told.\n\nMaud traced her finger around his butt cheeks and along the crack of his ass. He winced in surprise when she jerked his buttocks apart.\n\n\"You have a nice ass,\" she said. \n\nHe winced again when he felt her tongue on the rim of his ass. It felt very foreign to him...it was another first...but he quickly decided he liked it. He sighed loudly when she inserted her tongue into him.\n\n\"Oh, God!\" he said. For several minutes he felt her smooth, wet tongue slipping into him, poking, stroking, massaging him. The same tongue that had been on his cock and in his mouth was now up his ass.\n\nOnce she removed her tongue Rod was still basking in the pleasure of it all when he shrieked like a goat in a bear trap when he felt a jolt of something long being bolted up his ass.\n\n\"Holy fuck!\" he yelled, \"What the hell?\"\n\n\"It's my butt plug,\" Maud said. \"Leave it in for a little while. See if you like it. I'll be right back.\"\n\nThen she walked to the bathroom and closed the door.\n\n-\n\nWhen she came out of the bathroom she was dressed. She walked over and sat on the edge of the bed.\n\n\"Thanks for a hell of a night, Rod, but I have to be going.\"\n\n\"That's it?\" Rod asked, shocked that it was over so suddenly. \"Already?\"\n\n\"Yes, I gotta go.\"\n\n\"Can I see you again? I don't have to head back to school for a few more days.\"\n\n\"It's tempting, but I don't think that's a good idea. Tonight was great, really it was. But that's all it was: Tonight.\" She leaned down and kissed his lips.\n\n\"Do you want your butt plug back?\" Rod asked, reaching behind his back.\n\n\"No, I have others. You keep it. As a souvenir.\"\n\nMaud got up and walked out of the room. Rod followed her, naked with a limp biscuit and a plug sticking out of his ass. He watched her pick up her keys and open the front door.\n\n\"Turn the lock and pull the door all the way shut when you leave,\" she said on her way out.\n\n-\n\nThe next day Rod called Layla and they compared notes. Layla had gone home with an older couple and they had spent the night in various three-way combinations. In the morning they cooked her breakfast.\n\nRod told her about his night and its abrupt ending. They agreed that they had both made out rather fortuitously by not hooking up with a maniac or anything, but neither felt like it would become a lifestyle.\n\nOver the next few days Rod drove by the cabin a few times hoping to catch a glimpse of Maud but the place was vacant. He realized that she had planned her work and worked her plan to perfection\u2014she'd picked up a young guy and gotten what she'd wanted anonymously. And by using the cabin she wouldn't have to worry about some smitten college kid sniffing around or knocking on her door.\n\nRod went back to school and became immersed into college life. He reconnected with a casual girlfriend he had seen for a while the year before but that didn't last too long. She got tired of him trying to fuck her up the ass all the time.\n\nRod began to realize that his life had changed, undoubtedly altered by his night with Maud. He found himself staring at asses all the time. Every attractive girl he'd see on campus whether it was in classes, walking out on the quad, in the library, wherever it was, he'd be staring at her ass. He wondered if she liked it up there. Same with the faculty and staff, even guys sometimes. He began to wonder if he was anal-retarded or something.\n\nHe managed to have a sexual relationship with two other girls that semester. One was abhorred by the thought of anal sex; the other let him go there a couple times grudgingly. But it didn't compare to the memory of Maud. She craved it. Rod missed it.\n\nAt the end of the semester Rod went home for Christmas break. Again he drove by the cabin by the lake a few times. It was always empty except once. He saw a car parked there so he knocked on the door and a small, plump Mexican woman answered. 'I no know no Maud,' she said.\n\nChristmas was always weird with divorced parents, splitting time and celebrating everything twice. He caught up with some friends, did some temp work to make some extra money, but Rod couldn't wait to get the hell back to school.\n\nSo, back to school he went, chasing his diploma and chasing booty. He picked back up with the girl he'd been seeing the previous semester so at least he was getting a little tail now and then. She didn't really get into it though; she just wanted Rod to come so he could pull his damn thing out.\n\nToward the end of the semester his father called him with some news.\n\n\"Hi, Dad,\" Rod said when he took the call.\n\n\"Hello, son, how are you?\"\n\n\"Oh fine, just studying for finals.\"\n\n\"That's good. When is your last exam?\"\n\n\"Next Thursday. I'll probably come home on Saturday.\"\n\n\"That's good. Look, there's something I have to tell you.\"\n\n\"Oh yeah, what's that?\"\n\n\"Well, I've been seeing a woman.\"\n\n\"Hey, good for you, Dad. It's about time you got back in the saddle. How long has this been going on?\"\n\n\"I met her a few months ago at a friend's house. She's a principal at an elementary school. And I asked her to move in with me.\"\n\n\"Oh, wow, it must be serious! Am I going to have a stepmother?\"\n\n\"I don't know, perhaps one of these days. It was just easier this way. I'm still traveling a lot during the week. But I wanted to let you know ahead of time. I didn't want you to come home for the summer and be blindsided.\"",
        "\"Well, I appreciate that.\"\n\n\"Anyway, you'll meet her next weekend. Her name is Marisa and I'm sure you'll like her.\"\n\n\"I'm sure I will,\" Rod heard himself saying before they ended the call. Rod was now very happy that he already had his summer job lined up. The summer was shaping up to be a little different than summers past.\n\n-\n\nRod drove home from school and arrived at the house late Saturday afternoon. He walked inside without unloading his car. His father was in the family room watching a ballgame on TV.\n\n\"Hi, Dad,\" he said as he entered the room.\n\n\"Hey, welcome home! How was your trip?\"\n\n\"Oh, fine, smooth sailing.\"\n\n\"That's good. And good to have you home.\"\n\nRod plopped onto the sofa and they chatted over the play-by-play on the TV. They talked for a few minutes about sports, exams, his summer job, among other things.\n\n\"So how's married life treating you?\" Rod asked, touching on the subject he was most curious about.\n\n\"Oh, we're not going there yet,\" his father said with a laugh. \"Marisa's upstairs. We spent some time today at the club and then when we got home she went for a swim. She wanted to shower and get herself ready to meet my son for the first time, I guess.\"\n\n\"How's cohabitation going so far?\"\n\n\"Good. It just seemed to make sense for both of us. I'm usually on the road during the week, and she's off much of the summer. So she rented out her townhome and moved in here. She loves to sunbathe and use the pool, so it was an easy decision. And she's pretty cool, I think you'll like her. She won't cramp your style.\"\n\n\"I'll be working a lot so I'm not too concerned...\"\n\n\"Well, speak of the devil,\" his father interrupted, muted the TV sound and stood up.\n\nRod rose and turned toward the door where there stood a slim, tallish, dark-haired woman in a flowery sundress with thin straps over her shoulders that sexily contrasted her tanned arms and legs. \n\n\"Come in, Marisa, meet my son.\"\n\nShe strode into the room with a confident smile on her face. But when she approached and was a few feet away her pace wobbled slightly and Rod felt a brick in his stomach. He saw the look of a frightened deer in her eyes, which bored into his. He was looking at Maud.\n\n\"Nice to meet you,\" Marisa said nervously, and raised her arm to shake hands.\n\n\"Nice to meet you too,\" Rod said. They shook and then stood there, frozen. Marisa was scared shitless; Rod wanted to get the hell out.\n\nDad didn't seem to notice. He tried to engage them and ran on about how great it was that they were all together and what a great summer it would be. Then he said he was going to take the three of them out to dinner.\n\n\"Uh, Dad, I can't go out to dinner. I've already made plans,\" he lied.\n\n\"No...\"\n\n\"Yes, I'm meeting some buddies. Sorry, I wish you had told me beforehand.\" \n\n\"You're right,\" his dad said. \"Sorry, we will do it tomorrow.\" He turned to Marisa. \"Hon, we're on our own tonight.\"\n\nRod noticed an ever-so-slight exhale and a look of relief on Marisa's face.\n\n\"It's my pleasure to meet you,\" Rod said, looking into her eyes. He detected a subtle smile and nod. \"I look forward to getting to know you. I can see my dad has great choice in women. But I need to unload my car and get ready to meet my friends.\"\n\nHe had no plans other than to get the fuck out of that house.\n\n-\n\nAfter he moved his stuff into his old bedroom he showered and headed out. He stopped into a couple of his old hangouts but didn't find anyone he knew. So he bought a six pack and drove out to the cabin where he and Maud/Marisa had had their tryst. It was vacant so he parked his car and sat outside on the deck for a couple hours staring at the lake and drinking beer. It was late when he drove home.\n\nThe next day Rod kept himself busy part of the day getting situated in his room while his father and Marisa sat around the pool in the backyard. He'd sneak peeks out the window every now and then and admire how fine she looked in her black bikini. As tan as he remembered her, and just as sleek. He couldn't help visualizing her completely tan naked body, in bed atop him, and under him, his dick inside her, and his tongue in her mouth and her cunt and her ass. He became half-hard with the thought of it.\n\nThey went out for an early dinner to a popular seafood restaurant. Rod and his father ate big combo platters and Marisa nibbled on a crab salad. They made idle chatter for an hour as they dined and although the vibe was a little tense they gradually became more relaxed. Rod made sure to compliment Marisa a couple times. He told her how nice she looked in her red dress, and he wasn't lying either. It was low-cut and was held up only by what looked like two strands of red dental floss looping over her shoulders. It showed just a hint of cleavage and two braless nipples etched into the thin fabric. Rod tried not to get caught looking but didn't think he was too successful.\n\nThe next day was Monday and Dad was off on business. All Rod had planned was to go down to the manufacturing plant and take care of all the paperwork for his summer job. He would be working the day shift from 7 a.m. till 3:30 p.m. each day. On the way out in the morning Marisa stopped him and asked if they could talk for a minute.\n\n\"Thank you for keeping our secret,\" she said. \"It makes things a lot easier that way.\"\n\n\"Of course. I wouldn't want to burst Dad's bubble.\"\n\n\"Well, I appreciate it.\"\n\n\"So your name isn't really Maud?\"\n\n\"No, it's Marisa. Sometimes I go by Maud.\"\n\n\"When you don't want somebody to find you. Or bother you.\"\n\n\"Yes, sort of. But your father told me your name was Rich, not Rod.\"\n\n\"Rod is a nickname. R-O-D are my initials: Richard Orwell Davis.\"\n\n\"Oh, I see. Look Rod, I'm sorry. But I have a prominent job in the school system. It would not be very good if a rumor got started that I picked up a college boy for anal sex.\"\n\nThere was an awkward silence as they stood there looking at each other for a long moment.\n\n\"I thought about you a lot after that,\" he said. \"I went to the cabin looking for you even though I knew you wouldn't be there. I wanted to relive that night. Do it all again. And you know what else? You turned me into a backdoor man.\"\n\n\"I knew you were a natural,\" she said softly, with a touch of a smile. Rod saw dewiness in her eyes. He took her hands in his.\n\n\"But since I can't be your backdoor man, I guess I'm just going to have to settle for having the hottest stepmom around.\" He squeezed her hands and kissed her on the cheek.\n\n\"I gotta go,\" he said, and headed out the door.\n\n-\n\nRod started his job the next morning. He would work till three-thirty and was home before four. And usually he would head right out back to the pool for a quick swim to refresh. Marisa was on her summer vacation so only worked occasionally when she had meetings or conferences scheduled. She was a sun worshipper so on some days she'd be in a bikini, lying in a lounge chair beside the pool when he got home. He'd say hi, dive in and swim a few laps, then go into the house and up to his room. He'd often watch Marisa from the window as he dressed.\n\nOver the first couple Rod and Marisa were like ships passing in the night. On weekends he'd go his way and his father and Marisa would go theirs. But the weekdays, Monday through Thursday at least, they shared the space and gradually relaxed and became more comfortable living under the same roof. They shared meals and jokes and innuendos, maybe even flirted a little. And they stole glances at each other.\n\nThen one hot, sunny Thursday there was an equipment breakdown at work. The bosses sent Rod and all of the summer workers home a couple hours early so the maintenance crew could make repairs. Rod got home early and went up to his room to change into his swim trunks. Like any other day he peeked down at the pool. There she was, like most days, lying in the lounge, shades over her eyes, listening to NPR on the radio, her lean body basking in the bright sun, her black hair wet and plastered to her head. But this time she was topless.\n\nRod licked his lips as he took in the delicious sight. She really is a sexy bitch, he told himself. He watched her for several minutes and found it was hard to pull his eyes away. He took some zoomed photos of her with his smart phone for future reference. Wearing only his swim trunks he quietly made his way down to the French doors that opened onto the pool area.\n\nHe opened the doors and slipped outside. She hadn't seen him, her eyes must have been closed. She hadn't heard him either, she was listening to the radio. He sauntered over and when he was a few feet away he made a loud coughing noise. Marisa's body started and she scrambled to find her bra on the table next to her.\n\n\"Oh my God, do you always lounge around here topless? What's this world coming to?\" Rod said with faux annoyance, then laughed.\n\nMarisa located her top and placed it loosely around her breasts and glared at him, her eyes wide with shocked embarrassment. Rod took the lounge chair next to her and sat facing her.\n\n\"You're home early,\" Marisa said.\n\n\"Well?\"\n\n\"Well what?\" she asked, her hands clutched on the bikini top covering her tits.\n\n\"Do you always lay around here topless?\"\n\n\"Well, not always,\" she said, relaxing. Her face broke into a smile. \"Sometimes I go bottomless too!\"\n\n\"Hmmm,\" Rod said. \"I'd like to check that out sometime.\"\n\n\"I don't think it's anything you haven't already seen before, is it?\"\n\nRod reached over and grabbed onto her bikini top. He tried to pull it away but Marisa held it tight.\n\n\"Come on, Marisa, let go. Make my day.\"\n\nThey both smiled flirtatiously. Rod imagined the twinkle in her eyes behind her Ray-Bans. She loosened her grip on the flimsy garment. He pulled it away and tossed it onto the seat cushion beside her.\n\n\"There,\" he said. \"That's better.\"\n\n\"How long did you stare at me before you came outside and said something?\"\n\n\"Long enough. I stare at you all the time. You look good, Marisa.\"\n\n\"Thank you.\"\n\n\"You wearing your butt plug right now?\n\n\"Don't be naughty, now.\"\n\n\"I still have the one you gave me. I stick it up there sometimes, whenever I think of you.\"\n\nMarisa looked down and pretended to move something imaginary from her sweaty stomach. \n\n\"Do you need help with anything?\" he asked. \"Spreading suntan lotion on any hard-to-reach spots? Like your erogenous zones, or your private parts?\" \n\nShe stared at him a moment, her eyes a mystery behind her dark shades. Then she collected her towel and bikini top and stood up.\n\n\"It's getting kind of hot out here,\" she said. \"I think I'll go inside.\" She started walking to the house.\n\n\"If you're hot, why not go for a swim?\" he called after her.\n\nHe watched her swiveled ass and bare back as she walked away. She opened the French doors to the master bedroom and disappeared inside. The door was left halfway open behind her.\n\nRod looked at the lounge where Marisa had just lain, and he could see its impression left in the cushion. There was a paperback book and a tall glass, half-filled with tea and melting ice on the table. He looked back over at the open door to her\u2014and his father's\u2014bedroom. He stood up, wondering if he should or shouldn't. His tickled cock told him he should.\n\nHe walked over to the door and slipped inside. Even with the door open it seemed dark inside the bedroom after the bright sunlight outside. His eyes were adjusting when she spoke.\n\n\"What took you so long?\" she said.\n\nShe was standing by the bed, naked except for her skimpy, damp bikini bottom plastered over her horny cameltoe. God, she's hot, he thought. He walked to her and wrapped his open arms around her and her hands immediately delved inside the back of his trunks to fondle his firm ass. Their open lips met and their tongues collided in a tenacious mouthfuck. Rod felt his stiffening rod being pushed down by the fabric of his shorts as Marisa pushed them floorward. \n\n\"I knew this would happen,\" Marisa said, in between tongue sucks. \"I didn't know how or when, but I knew...\"\n\n\"Me too,\" he said.\n\nWith a quick rush Rod felt his trunks suddenly fall around his ankles and his erected dick was flopping up and down from the force of it. He knelt down in front of her, his nose an inch from Marisa's clammy crotch. He yanked the thin fabric of her bikini bottom aside, spread her lush lips and buried his mouth into her, licking, lapping, sucking, eating, and she ran her fingers through his hair and over his scalp. She screamed with delight and leaned into him, screwing his face.\n\nRod's hands snuck up under her bottom and he wedged her cheeks apart, his fingers searching for her tunnel of love. Her asshole instantly dilated at his touch, so Rod filled the void by ramming two of his pussy-dripped fingers into her.\n\n\"Oh, Jesus Christ,\" she belted out, digging the digging.\n\nRod kept mashing his face into her pussy, getting off on her groans, and he sucked her turgid clit and continued to grind his fingers into her asshole, prepping it for the main act. He felt the force of her crotch compressed against his face.\n\n\"Oh, God,\" she squealed. \n\nHe turned her torso and drove her onto the bed with his face. Her twisted oyster tasted fine and was mushy in his mouth, but his dick was hard and cocked and ready to take aim on her wet, open twat.\n\n\"God, I've waited for this. I've got to fuck you,\" he said as he mounted her. \"Then your ass is mine.\"\n\nShe fed his cock into her all the way and squeezed it with every cunt muscle she had. Rod groaned as he started pumping her and his distended dick felt the encouragement from her collapsing walls. \n\nHer ass was barely on the bed and her legs flailed in air as he drilled her. They both breathed and hissed heavily as they fucked. Rod wanted to release his stony burden and unload his cum into her so he could move on, relieved, to her ass. And take his time. Marisa understood.\n\nThey screwed hard. He punched, she scrunched. He fucked, she bucked. She dug her fingernails into his back. He dug his fingers into her ass. It was looser than he liked, despite her carnal clenching, but he kept grinding away, thinking about her snug asshole. When he finally came it was an eruption, and their bodies were a savage dyad that shook as one, and he was as entered into her as he could be, cock in cunt, fingers in ass and tongue in mouth. When he was done he pulled out and turned her over on her belly as he pushed her onto the center of the bed.\n\n\"Wait!\" Marisa reached over to the nightstand and opened the shallow drawer. She took out a small rubbery tube and handed it to him. \"Here,\" she said.\n\n\"Thanks, we'll get to that,\" Rod said. Then he pulled aside the narrow strip of her bikini bottom and buried his tongue into her ass.\n\nShe bugled like an elk. He decided he would tongue her till she came, then he'd fuck her ass. It took about fifteen minutes of his licking and rimming and tongue-fucking her butthole, her moaning throughout, until she had an orgasm. She had been stroking her clit like she was churning butter the entire time and when she came it was like a breached watershed. \n\n\"Fucking Christ!\" she bellowed.\n\nHer warm wet rush ran deep and puddled on the bedspread. It would have to be cleaned, Rod thought, before the old man got home. Then he rose up onto his knees behind her, between her legs, and picked up the tube. He squeezed a liberal amount into his hands and rubbed his palms up and down over the shaft of his sturdy cock and then jabbed his fingers in and out of Marisa's asshole. Then he pointed his pole at her hole.\n\nMarisa felt the tip of his cock kissing her ass and opened it wide for him. Rod didn't hesitate and pushed his reloaded missile into her, the smooth cushioned friction arousing and encouraging him further, and he found his rhythm, and fucked her, and she squinched her ass around him, and with every pulse she hissed with bated breath.\n\nHe pounded her for several minutes and soon felt his cum coming. He groaned like a leaky baritone sax and Marisa recognized it for what it was.\n\n\"Keep it up!\" she blurted. \"Keep going.\"\n\nRod ejaculated deep into her and his semen tickled the head of his dick, but he kept pounding away nonetheless. After a couple more minutes his dick was spent. But he kept drilling hoping to reach pay dirt.\n\nHe finally did. Her body trembled and her asshole loosened around his drained member. She came again, and Rod pulled out and watched his cum roll out of her asshole as her body vibrated on the mattress. Then he traced his tongue along the crack of her ass and upwards over her sweaty back to her neck and sucked her earlobe into his mouth. \n\n\"God, we can fuck,\" Rod whispered into her ear. He rolled her over onto her back and jammed his tongue into her mouth and kissed her, roughly at first, but it soon morphed into a long, loving tongue tangle. When the kiss finally ended their faces broke into wide smiles.\n\nRod dragged his depleted body up and off of her and stood.\n\n\"God, what a fuck!\" he said, and walked naked out of the room, his drippy cock swinging between his thighs, and upstairs to take a shower.\n\nMarisa stared at his ass until he was out of sight.\n\n-\n\nThat's how their summer affair started. There would be no more sly flirting or coy smiles or sexy innuendo. It was now understood. When Dad was away, they would play. And the more they played the more brazen they became.\n\nThree or four times a week they would find themselves naked together and would tear each other up. Before long it got to the point where Rod would get home from work and Marisa would be sunbathing nude out by the pool, and he'd walk out there naked, take a dip in the pool and then lie in the lounge beside her. They would talk innocently at first but it would soon migrate to something sexy or suggestive and one thing would lead to another. Rod's dick would start to get aroused and soon Marisa would have her hand wrapped around it, stroking him, and soon it would be in her mouth. The first few times when things heated up they would take it into the bedroom, but before long it was not uncommon for them just to get into it right then and there. Sometimes Rod would eat her pussy right on the lounge chair or assfuck her right out under the hot sun. Often they'd jump into the pool to cool down but more often than not that would just lead to more shenanigans.\n\nThey started sleeping together many nights, sometimes in her bed, sometimes in his. One night in her bed, Marisa was sucking his cock with her index finger lodged in his ass when her cell phone rang. \n\nShe unlatched her lips and detached her finger and said, \"It's your father, I better get this.\"\n\nShe talked on the phone to his father for several minutes while she stroked his cock. It was the normal goodnight phone call for the most part, except for when Rod stifled a groan and ejaculated all over both of them.\n\n\"Do you feel guilty?\" Rod asked, after she ended the call. \"About what we do?\"\n\n\"Yes and no,\" she said. \"Yes, when I'm alone and I think about him. No, when I think about you. Does that make sense?\"\n\n\"Yep,\" he said. \"That's kind of how I feel.\"\n\n\"Can I tell you a secret?\" Marisa said.\n\n\"Of course,\" Rod said.\n\n\"You give me something I can't get from your father.\"\n\n\"What do you mean?\"\n\n\"Uh, what I mean is, your father is kind of old-fashioned. Sexually, that is. He won't...can't...give me what I need. But you do.\" She leaned close and said, \"Emphasis on the 'butt'.\"\n\n\"Oh, you mean he doesn't like anal?\"\n\n\"Let's just say he's not as enthusiastic about it as you are.\"\n\nMarisa pulled the lubricant out of the drawer and handed it to him. Rod smiled and kissed her lips.\n\nHe rolled her over on her belly. He licked her crack, rimmed her, lubed her and then fucked her up the ass.\n\n-\n\nIt was late in the summer when things changed in a big way. It was one of the last days before Marisa had to start back to work full time and just a couple days before Rod would be heading back to school.",
        "It was a partly-cloudy, late Tuesday afternoon and Layla went over to her father's house to get some of her things that were stored in the basement. He knew Marisa and Rod had to be around somewhere because she saw their cars were parked outside, but she wasn't quite ready for what she saw when she looked out the kitchen window at what was going on out by the pool.\n\nLayla's jaw dropped open at the sight. There were her brother and Marisa, lounging side by side, both completely naked. They were talking and yukking it up, obviously very comfortable together. She hid behind the curtain and watched, unable to pull her eyes away. Rod's dick had been flaccid but began to grow in front of her eyes.\n\nMarisa sat up and leaned over to Rod and kissed him. Layla watched his hand move to her breast as they kissed, and she started stroking his cock, which grew rapidly in her grasp. Two things struck Layla as she watched the scene unfold: First, her bother had a very impressive cock. And second, Marisa was a very impressive cocksucker.\n\nShe watched Marisa's slim, agile body bend at the waist as she lowered her head and slowly took Rod's enlarged cock into her mouth, and all of it disappeared like a snake slithering into a pit. Instantly her head was moving up and down and soon his groin was moving in smooth sync, and it was obvious to Layla that they were well-practiced. \n\nLayla watched, mesmerized, and within a couple of minutes she heard her brother groan and go into body spasms and Marisa's head absorbed his tremors as he came. At about the same time Rod was pouring his seed into the back of Marisa's throat, rain started pouring from the clouds above. \n\nRod's long, hard cock reemerged from Marisa's mouth and Layla watched her kiss the tip of it, then put her mouth on his for what Layla assumed had to be a wet, spermy, kiss. She then saw Marisa rise and take his hand and lead his naked body with its flopping cock into the master bedroom.\n\nLayla quietly shuffled down the hall to the wide-open bedroom door. It was hard to see much around the door jamb, and she didn't want to risk being spotted. But she could hear just fine.\n\n\"Every time you suck me I feel like I gotta piss,\" her brother said.\n\n\"You complaining?\" asked Marisa.\n\n\"Not at all, but I gotta go.\"\n\n\"Well, hurry up, you have work to do. Leave the door open, I want to watch.\"\n\nLayla caught a glimpse of her naked brother walking into the master bath, his semi-hard cock leading the way. She listened as his strong stream of piss splashed into the toilet bowl, hard at first, then lessening, then trickling. The toilet flushed and the water ran for a moment. The bed squeaked when Rod climbed aboard.\n\n\"Here, you might need this,\" she said.\n\n\"You bet I will,\" he said.\n\nLayla didn't hear much at first and was afraid to peek. Then it started. First there was heavy breathing, then sighs, which turned into whimpers, then loud slurping and smacking of lips on flesh.\n\n\"Ooh, that's good, Baby, you know how I like it,\" Marisa hissed breathlessly. Rod's response was muffled. \"I'm going to miss this when you go back to school.\"\n\nLayla knew she should leave but she couldn't pull herself away. She listened as the whimpers grew in volume and intensity.\n\n\"Oh, fuck yes!\" Marisa blurted.\n\nLayla peeked around the door and she was like a deer in the headlights, her body frozen with gooseflesh at the sight before her. Marisa was on her belly with her knees folded under and her butt sticking up and Rod had his face buried in her asshole, and head and ass were moving together in a gentle, steady sway.\n\n\"Feel that?\" Marisa said. Rod mumbled something undecipherable with a mouth full of ass.\n\n\"Are you hard again?\"\n\nRod pulled back and said he was. He sat back on heels and picked something up off the bed.\n\n\"Give it to me. The whole, big, hard fucking thing.\"\n\nRod fingered Marisa's asshole and she moaned when he poked her deeply to lube her tube. Rod's cock looked enormous in his hands as he slathered it with the shiny stuff. He mounted her from behind and Layla could tell by the movement of his ass and Marisa's scream of pained pleasure that his cock was up her ass. Then he started fucking her.\n\nLayla watched as her younger brother pounded Marisa's ass, the bed springs screeching louder with each powerful plunge. The air filled with a chorus of their grunts and groans and Marisa's cursing and sexy, dirty talk.\n\n\"Love the way you fuck my ass, Honey,\" she spit out. \"I love your cock. In my mouth. In my cunt. In my fucking ass.\"\n\nHer brother picked up his pace even more, his groin and her ass shaking and baking in heat, extracting even more salty talk from his lover.\n\n\"Shit, I'm going to lick your ass and mash my fucking pussy in your face, that's it, oh God, I'm going to come, I'm coming fucking big...\"\n\nMarisa shrieked, Rod pounded away, and Marisa shrieked some more, and Layla watched their molded bodies shake like a mound of half-chilled Jell-O as Marisa released a spasmodic orgasm.\n\nHer quakes had barely quieted when Rod groaned and Marisa knew what was coming.\n\n\"Wait!\" she said sharply. \"In my mouth.\"\n\nMarisa pulled away and Rod pulled out and scooted up to her head on his knees. Her face was blocked by Rod's back but Layla could tell by her angle and their movements exactly what was happening. \n\nLayla shook her head and backed away from the door. She figured there was probably more to come but she figured she'd best get while the getting was good. She retreated down the hall and out of the house and decided she would come back some other time to get her things. On her rainy drive home and the rest of the day and night all she could think about was her brother and Marisa, lying naked together outside, kissing, fondling, his big cock with her big mouth around it. And his tongue, on her ass, in her asshole, and his cock, enlarged again and covered with oil, fucking her sexy ass, and her coming, and then him pulling that big, oily cock out of her ass and putting it back into her mouth, and shooting his cum into her throat again.\n\nShe was shocked and appalled of course. But she was turned on by it too. She had to talk to her brother. He had some explaining to do.\n\n-\n\n\"Hey, how's it hanging, Lover Boy?\" Layla said when Rod answered.\n\n\"What?\" he said with a chuckle. \"What are you talking about?\"\n\n\"Your love life. Getting any action lately?\"\n\n\"Huh?\"\n\n\"Look Little Brother, you need to level with me. I came by Dad's house yesterday afternoon to pick up some of my stuff and happened to glance out the window and saw quite a show out by the pool.\"\n\n\"Oh no,\" Rod said. A tingle went down his spine.\n\n\"Oh yes.\"\n\n\"Oh God. What did you see?\"\n\n\"I saw my brother lying naked and making out with Marisa and I saw your cock get hard and I saw Marisa give you a blowjob. Then it started raining and she dragged you like a puppy into the bedroom. God knows what happened in there!\" Layla left it at that. She didn't want him to think she was spying and wanted to see what he was going to say.\n\n\"Ah, geez, I can't believe this. Please don't tell anyone. I don't want Dad to get hurt.\"\n\n\"You must be kidding. You don't want Dad to get hurt so you're screwing his woman? How long has this been going on?\"\n\n\"All summer,\" he said. \"Well...it's kind of a long story.\"\n\n\"I love a good story. Tell me.\"\n\n\"Okay, here goes.\" Rod took a deep breath. \"You remember that party we went to last summer? The swinger party?\"\n\n\"Of course.\"\n\n\"Well, Marisa is the woman I went home with.\"\n\n\"You're kidding?\"\n\n\"No. But she called herself Maud, not Marisa, kind of like a disguise because she didn't want me to get attached. She picked me up. It was her choice, believe me. She decided she wanted a young guy and she saw me. She took me to a cabin that some friends of hers own so I couldn't trace her. It was a one-nighter. I never saw her again until Dad introduced her to me.\"\n\n\"That must have been interesting.\"\n\n\"It was very awkward, but Dad didn't really pick up on it.\"\n\n\"Wow,\" Layla said. \"But how..? You mean you see her again and all of the sudden you're fucking her?\"\n\n\"No, it wasn't like that. I was trying to get used to the idea of her just being our sexy stepmom. It took a while. But with us living under the same roof all summer, and Dad being away a lot, we just became closer, and...\"\n\n\"And you decided to start fucking her.\"\n\n\"Well, it was her decision too. We became closer, more comfortable around each other. We remembered that night we had, and...\"\n\n\"And what?\"\n\n\"I can't believe I'm telling my sister all this stuff. But it kind of feels good to tell somebody.\"\n\n\"But you're both cheating on Dad.\"\n\n\"I know, that's why it's good to let it out. But we don't really feel... You see...\"\n\n\"Rod, what the hell are you saying?\"\n\n\"Okay, but this is confidential, right? You see, Marisa doesn't get all of what she needs from Dad. Sexually.\"\n\n\"Oh, please...\"\n\n\"No, I'm serious. She's really into the ass. She's an anal freak, she loves everything about it, giving and receiving. And Dad's, uh, not too enthusiastic about it.\"\n\n\"And you were, and that's why she picked you up at the party?\"\n\n\"I am now. It all started that night. It's a prerequisite now.\"\n\n\"Oh, really?\"\n\nLayla thought about what she'd observed the day before watching and listening to Rod and Marisa in the bedroom, and how into it they both were. She wondered what she'd missed after she left. \n\n-\n\nThey'd said their goodbyes. They knew they wouldn't see each other for a while. Rod headed back to school and Layla, who had gotten her degree over the summer, was about to start a new job.\n\nRod thought about Marisa a lot at first, he even called her a couple times in unsuccessful attempts for phone sex, but she was busy back at work, and he fell back into college life, partying, studying and chasing tail. Occasionally he'd call on a weekend to check in and a couple of times his Dad put her on the phone, but despite some raunchy talk and humor on his end she had to play it pretty straight.\n\nThe time just sped along and before he knew it football season was winding down and the semester was entering its crucial final weeks. Rod made his plans to go home for Thanksgiving; then he would be quickly back to school for a few more weeks of class before final exams. Then there would be the Christmas break.\n\nRod anticipated that the Thanksgiving break would be awkward. He didn't look forward to being near Marisa when his father was around. It could be too easy to slip up and give their secret away. He didn't look forward to sitting down to dinner and seeing Marisa across the table, avoiding eye contact and trying to make small talk when what he really wanted was to tear her clothes off and go down on her.\n\nBut it was even more awkward than he thought it would be. He felt it almost immediately after he arrived Wednesday night. Dad was his normal self, but Marisa was standoffish and kept her distance and he didn't get a chance to talk to her. Thanksgiving Day was even weirder. It was a small gathering\u2014the three of them, Layla and an uncle and a couple cousins\u2014and everyone seemed to enjoy themselves, but Layla seemed rather distant also. And as he watched Layla and Marisa in the kitchen while preparing the meal, Rod noticed by their interaction that they had bonded in some way. He could tell by the way they talked to one another, and worked together, occasionally touching, and during dinner he detected several covert glimpses between them. The next day he casually asked Layla about it and she told him that they had both reached out and had gotten to know each other better over the last few months.\n\nRod headed back to school and dove into his last few weeks. He put Marisa out of his mind as best he could, trying to accept the fact that they had had a one-nighter and then a summer fling, and that was that. It was over. Who in their right mind could expect it to continue anyway, under the circumstances?\n\n-\n\nIn the middle of December, one night when he was cramming for his next-to-last exam, Rod got a call from his father. They said their hellos and then his father got to the reason for the call.\n\n\"Look son, I wanted you to know, Christmas is going to be a little different this year.\"\n\n\"What do you mean?\"\n\n\"What I mean is that there will not be one. Not at my house anyway. I'm heading down to the Caribbean. I'm going to visit an old friend who owns a resort hotel on a remote island where no one can find me.\"\n\n\"Dad, what's going on?\"\n\n\"You can stay at the house over Christmas break. In fact I'd appreciate it if you kept an eye on the place. Hopefully you can have a nice Christmas at your mother's.\" \n\n\"Dad, what happened?\"\n\n\"It's embarrassing is what it is. It's Marisa. I kicked her ass out.\"\n\n\"Kicked her out? Why?\"\n\n\"Because she's a cheating slut, that's why. I caught her in bed with your sister. And they were going to town, let me tell you.\"\n\n\"Layla? You gotta be kidding.\"\n\n\"I wish I was. I had some meetings canceled last week and came home a day early. I heard a racket in my bedroom and there they were, both eating pussy like it was The Last Supper.\"\n\n\"Oh my God. I didn't even know they were into girls.\"\n\n\"They're into licking assholes, that would be my guess.\"\n\n\"What?\"\n\n\"Never mind. Anyway, sorry to dump this on you, but you had to know. I'm flying out tomorrow morning and will be gone a few weeks.\"\n\n\"Gee, Dad, I'm sorry.\"\n\n\"Thanks. And to think I was considering marrying the bitch. And I'm through with your goddamn sister too. I still can't believe it!\"\n\n\"Again, I'm so sorry, and I hope you have a safe trip. I hope it helps you...\"\n\n\"It can't hurt, that's for sure. I'll be in touch.\"\n\n-\n\nA couple nights later Rod called Layla. He didn't expect her to pick up but she did.\n\n\"Layla, Dad called me. He told me what happened.\"\n\n\"Yeah, it's been a little wild and crazy around here lately.\"\n\n\"But you and Marisa? I noticed you two were kind of chummy at Thanksgiving, but...how did it get started? I didn't even know you were bisexuals.\"\n\n\"I didn't know either. But after that swinger party we went to\u2014I told Marisa I'd gone there with you\u2014I got into some three-ways. I liked it with two men, and I liked it with two women. Then I would hang out with Marisa sometimes during the week when Dad was away. We liked each other, we talked about a lot of things, we were attracted, one thing led to another.\"\n\nAfter a moment of silence, Rod said, \"Wow. I never thought you and I would ever share the same woman!\"\n\n\"I know, it's crazy, isn't it? Maybe someday we'll share the same man.\"\n\n\"Huh?\"\n\n\"Have you called Marisa?\"\n\n\"No, I was going to do that next.\"\n\n\"You should. I'm sure she'd like to hear from you.\"\n\n-\n\nMarisa answered on the first ring.\n\n\"Hi Honey, how is my favorite college boy doing?\"\n\n\"I'm fine, but how are you? I heard what happened.\"\n\n\"I figured as much. Sordid news travels far and fast. But I'm okay.\"\n\n\"I just spoke to Layla. I didn't know you two were into girls.\"\n\n\"If it feels right, go with it. Just like the night we met, remember?\"\n\n\"Yeah, I can't forget.\"\n\n\"Anyway, it wasn't planned, it just happened. And know what? She's almost as good a fuck as you are. Just one thing missing.\" She laughed and added, \"How's school coming along?\"\n\n\"One more exam, the day after tomorrow. I'll be home Saturday. Where are you staying?\"\n\n\"With friends for a while. My townhouse is leased out so I'm winging it.\"\n\nAfter another pregnant pause, Rod asked, \"Do you think I could see you?\"\n\n\"Oh, I think that could be arranged. Call me this weekend after you get settled in.\"\n\n\"I will,\" he said. As they ended the call he noticed he was fondling himself through the denim of his jeans.\n\nMarisa ended the call and turned to Layla, who was lying beside her on the bed, naked but for an old white t-shirt.\n\n\"He'll be home this weekend and it looks like the threesome we talked about might actually happen.\"\n\n\"Really? Oh my,\" Layla said. \"When we talked about it I never really believed it would...\"\n\n\"You saw me and him going at it. You said that turned you on.\"\n\n\"Yeah, it did.\"\n\n\"I'd like to see you and him going at it. That would turn me on.\"\n\n\"Oh God, I don't know. It's kind of weird, you know?\"\n\n\"You want to see him lick my ass again, don't you? You want to see him fuck my ass with his tongue.\"\n\n\"Yes.\"\n\n\"You want to see his big cock in my ass?\"\n\n\"Yeah, I do.\"\n\nMarisa leaned her face close to Layla's. \"Well, I want to see all that too,\" she whispered. \"But you don't have to do anything you're not comfortable with.\"\n\n\"Shit, you're making me wet,\" Layla said.\n\nMarisa kissed her and as her tongue dove into Layla's mouth her fingers dove into her soggy gash.\n\n\"My God, girl,\" Marisa said. \"You're dripping!\"\n\nLayla smiled and kissed her deeply as she pushed her flat onto her back. She climbed on top, straddling her. She slid her eager loins up, gliding over pussy and stomach and breasts and neck and chin until her soaked bare pussy was kissing Marisa's lips.\n\n------------------"
    ],
    "authorname": "Swampcooler",
    "tags": [
        "ass",
        "oral",
        "taboo",
        "mature",
        "older woman",
        "younger man"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/bottom-feeders-2"
}