{
    "title": "Forever Again Ch. 06",
    "pages": [
        "Author's Note: This story depicts graphic lesbian sex, incest between twin sisters, vampirism and mind control. If these topics do not interest you or are prohibited in your area please back out now.\n\nThis is the sixth installment of a long story. Those that have read my other stories will know that I tend to have some story behind the sex so if you're looking for a quickie this story may not be to your liking. \n\nFor those of you that haven't backed out, I hope you will enjoy my words.\n\n~CD\n\n*****\n\n\"Are all the preparations in order for the banquet?\" The Steward asked.\n\nVala nodded, \"Yes my Lady I believe that they are.\" She proceeded to run down the list of preparations that she had made over the last week. When she finished she looked at the Steward for comment. For several long seconds the Steward only stared at her. Her long delicate fingers interlaced on her desktop. As she flexed her fingers slightly the huge emerald ring on her finger caught the sunlight and sent green sparkles around the room, dazzling Vala's eyes. After several more seconds Vala started to get distinctly uncomfortable and wondered if she had made some mistake. She started to run over her preparations in her mind but was interrupted in her thoughts.\n\n\"It seems that Miss Bernadette was right about you after all.\" The Steward finally said with a faint smile. \"You have done well Vala Strauss. Remarkably well in fact. I'll be sure to let the Lady know about what a good job you've done when I meet with her in a few hours.\" The Steward reached over and picked up her quill. \"Now, if you would, could you please go down to the kitchens and check with the head cook. He was complaining about the cooper again. Something about leaking barrels or some such nonsense. I'm honestly so tired of both of them and their never ending prattle that I'm about to stuff them both into a leaking barrel and drop them into the river.\"\n\nVala sat quietly and managed to suppress a slight smirk at the Steward's frustration with the two men. Their constant bickering was a source of endless amusement and gossip among the staff.\n\nThe Steward looked up and saw Vala's ill hidden mirth and gave her own wry smile. \"Don't you laugh or I'll make you carry the barrel down to the river.\" She glanced down at the pile of papers before her and sighed. \"Or perhaps I'll make them sit at this desk for a while and review all of this mess.\" She waved a hand negligently over the mass of papers. That would be punishment enough for anything I suppose.\"\n\nVala sat respectfully and waited.\n\nThe Steward seemed to grimace slightly then looked up to Vala. \"Oh that's enough grousing from me. You have duties to attend to, go on.\"\n\nWith a curtsey, Vala walked out of the room and into the hall. Several minutes of walking and a lot of stairs later Vala entered the kitchen.\n\nHer meeting with the head cook and the wine steward took only a short time and Vala was soon on her way out of the kitchen. As she was walking out she passed by Greta and was again struck by how alike she was to Branwen. She found herself saying hello just to hear Greta speak.\n\n\"Good morning milady.\" The redhead replied. Vala marveled as she walked on, even the voice was the same.\n\nVala's thoughts returned to her duties for the day but as she mounted the second flight of stairs an idea formed in the back of her mind. She didn't give the notion much thought but as the day progressed the thought occasionally pushed its way back to the front and she chewed on it for a while before going back to her duties. By the time the sun was touching the western a horizon tight, the idea had formed into a plan. If anyone had seen Vala at that moment they would have wondered why a mischievous, almost malicious looking smile was spreading on her lips.\n\n* * *\n\nVala's chambers were immaculately cleaned and organized when she opened the door and walked in. The floor was clean swept, the furniture straightened and clean, the curtains pulled closed with every crease and fold seemingly just so. Even the desk was organized and with a piece of parchment laid out and ready to use with a quill and ink bottle. There wasn't a single item out of place or a speck of dust visible anywhere. Even the fire wood next to the hearth was neatly stacked. Vala thought that having her chambermaid for a lover apparently had other advantages as well.\n\nVala gave a small start as Branwen emerged from the bedchamber carrying a broom. She had thought the rooms were empty.\n\nBranwen apparently didn't expect to see anyone else either because she gave a small squeak of surprise and dropped the broom. \"Mistress! I'm sorry, you startled me.\" \n\n\"That's quite alright Branwen. You startled me as well.\" Vala said as she walked over to the maroon velvet sofa and sat down. She patted the cushion next to her in indication. Branwen came over immediately and sat down. Vala gripped her by the shoulders and started kneading her thumbs into the stiff muscles with a steady rhythm.\n\nBranwen groaned in appreciation. \"Mmm...\"\n\nAfter a few minutes Vala leaned in close to Branwen's ear. Vala had to resist the urge to start nibbling on her neck immediately. First things first she thought. \"I have a job for you my dear.\" Vala cooed. \"Something I want you to do for me.\"\n\n\"Anything for you Mistress.\" Branwen said dreamily.\n\n\"Good. First I want you to...\" Vala whispered Branwen's instructions.\n\n\"Yes Mistress.\" Branwen said obediently.\n\nNow to see how far she can be pushed, Vala thought. Putting all her will into the words, Vala gave Branwen her next set of instruction. As she spoke she could feel Branwen's shoulders tighten.\n\n\"But Mistress...\" Branwen hedged.\n\nVala had expected some resistance and was ready for it. She shifted her hands from Branwen's shoulders and cupped her firm young breasts. Giving them a squeeze she said \"But it will make me happy Branwen. Very, very happy.\"\n\nBranwen shuddered, \"Mistress...I... \"\n\nVala found Branwen's stiff nipples through the course fabric of her uniform and gave them a pinch. She leaned in so that her lips brushed Branwen's ear. When she spoke, her words were thick and sweet as honey. \"It will make me so happy. It will give me great pleasure.\"\n\nWith a moan Branwen's resistance collapsed \"Yes Mistress. Anything for youuu...\" Her words turned to a moan as she sagged back against her Mistress. She whispered, \"Anything.\" \n\nA little hiss of anticipation escaped Vala's lips as she gave a long sucking kiss to the nape of her lover's neck. After a minute she said, \"That makes me so, so happy Branwen. It makes me feel so wonderful.\" She licked Branwen's ear and lowered her whisper even more, \"When you obey my wishes it makes me feel like that Branwen.\"\n\nHer words had the desired effect. Just like the previous night, hearing that she had pleased Vala greatly sent Branwen over the edge into rapture without Vala even really having to touch her.\n\nBranwen's tight young body bucked back against Vala as the climax rolled though her. Short little barking grunts filled the rooms as the petite redheaded chambermaid jerked with the paroxysms. Vala savored the look of ecstasy on her young lovers beautiful face. It was the delicious look of blissful agony. \n\nAfter a time Branwen calmed down and sagged against Vala. She lay there for a while, breathing heavily and twitching every now and then. Finally she said shakily, \"I'm sorry Mistress... I didn't mean to go before you...\"\n\nVala shushed her. \"Nonsense, I love watching you.\" She turned Branwen's face to hers. \"It's beautiful.\" She kissed her gently. \"You're beautiful.\"\n\nBranwen moaned into her mouth.\n\nBreaking the kiss Vala sat up. \"But now you have a job to do.\"\n\nBranwen shuddered and suppressed another moan, \"Yes Mistress.\"\n\n* * *\n\nDarkness filled the sky outside the small window of the sitting room when a soft knock sounded at the door.\n\nVala was seated at her desk making several notes of items that were yet to be done for the banquet. Thankfully she thought, the list was now quite short.\n\nBranwen pulled the door inward and said \"Please come in.\"\n\nVala turned to see Greta walk in carrying a tray of bread and a stoneware bowl of soup. She caught the small smile that Greta had given her sister as their eyes met for an instant. It was a smile of friendship, sisterhood and family. Of love. \n\n\"Oh, thank you Greta.\" Val said. \"I'm sorry to bring you all the way up here at this hour. I'm afraid my duties kept me occupied all day and I never got a chance to eat.\" She stood and pointed at the table. \"You can just place it there on the table.\" As Greta turned and placed the tray on the table Vala strode over closer to her. She took a moment to study the girl again. \"Remarkable.\" She said.\n\n\"Milady?\" Greta asked, turning around and seeing Vala staring at her.\n\n\"Branwen, stand next to your sister.\" Vala said. Branwen complied.\n\n\"You look exactly alike.\" Vala said in wonder that was only partially feigned. She stepped closer and inspected the two sisters looking at one then the other and back again. \"But I think Branwen has more freckles.\" She looked back again, \"And perhaps Greta...\" she paused, \"Perhaps you hair is a bit darker.\" Vala stepped in front of Greta and smiled warmly. \"But you're both quite beautiful young women. Don't you think Greta?\"\n\nGreta's eyes darted from Vala then to her sister for a moment and back. \"Um... I ... suppose...\" She started.\n\nVala looked directly into Greta's eyes and said slowly, thickly, \"Your sister is very beautiful, just like you Greta, don't you think?\"\n\n\"I... I think I should g... go milady...\" Greta stammered nervously.\n\n\"Look at her.\" Vala said, her voice was now thick and laced with power.\n\nWith jerky, hesitating movements, Greta turned and looked.\n\n\"Your sister is so beautiful.\" Vala's enchanted voice flowed sweetly through Greta's mind, soaking into her soul.\n\nGreta's eyes lost their focus. \"I... she...\"\n\n\"You think your sister is very beautiful Greta.\" Vala said hypnotically. \"You love your sister very much. Don't you?\"\n\n\"Yes milady.\" Greta said slowly, her eyes locked on Branwen who was looking back at her lovingly.\n\nVala came up directly behind Greta and whispered in her ear. \"Your sister is very beautiful Greta and you love her very much. Tell her how much you love her.\"\n\nGreta whispered, \"I love you Branwen.\"\n\n\"Tell her how beautiful she is.\"\n\n\"You... you're very beautiful Branwen.\" \n\n\"Good.\" Vala cooed in her ear. \"Telling your sister she is beautiful makes her happy, doesn't it Branwen?\"\n\nBranwen smiled dreamily, \"Yes milady. It's wonderful.\"\n\n\"You like making your sister happy, don't you Greta?\" \n\n\"Yes.\" Greta said faintly. \n\nVala leaned in and whispered deep into Greta's ear. \"You love making your sister happy Greta. Making her happy makes you happy. The better you make her feel, the better you feel. Isn't that right Greta?\" Vala's words flowed through Greta's head, seeping into every corner of her mind.\n\n\"Yes milady.\" She whispered, her voice a little breathier than the last time. \n\n\"Say it again to your sister.\"\n\n\"You're so beautiful Branwen. I love you.\" Greta said softly.\n\nSmiling, Vala said, \"Good, now Branwen, you tell Greta.\" \n\nWith eyes shining, Branwen said, \"I love you Greta. I love you so much.\"\n\nImagining her word seeping into Greta's mind, Vala said, \"Your sister loves you too Greta, and she is so beautiful.\" Vala looked to Branwen. \"Branwen, why don't you show your sister how beautiful you really are.\"\n\nWordlessly Branwen reached around her back and unfastened her apron, letting it fall to the floor. She then unbuttoned her uniform and let it slip to her feet as well. As Vala had instructed her she wasn't wearing anything under it. She now stood completely nude before her twin sister. The fire and the single lamp casting flickering shadows across her firm young body.\n\nGreta's eyes widened in surprise and shock which brought her partially out of the enchantment that Vala was weaving inside her mind. . \"Branwen! I... no... I have to... \" She stammered and tensed to leave.\n\nVala gripped Greta by the shoulders and whispered into her ear, putting all the force of her will into the words, \"Your sister is breathtakingly beautiful. You've secretly always wanted to see your sister like this. You've secretly always hoped you would get the chance to show your sister just how much you love her.\"\n\nGreta trembled as her mind fought against Vala's control, \"Branwen...\" she whimpered. \"No...\"\n\nVala licked Greta's ear and kept talking, letting the silken words flow into her young mind, knowing it was only a matter of time until the servant girl's resistance collapsed completely making her a slave of Vala's will. Just the thought of Greta on her knees beside her sister sent a hot gush of euphoria burning through Vala's veins and she had to struggle mightily with herself not to moan aloud. Regaining control of herself, Vala whispered hotly, \"You want to show her how much you love her and let her show you her love in return.\"\n\n\"Branwen... I... I... love you.\" Greta said as she trembled.\n\nVala gave Branwen a look.\n\nWith a seductive smile the beautiful redhead took a step forward and wrapped her arms lovingly around her twin. Leaning in, Branwen kissed Greta tentatively on the cheek. Then a little more firmly. Moving to her lips she gave a small peck, then a longer kiss, then finally a long very unsisterly kiss.\n\nAt first Greta only stood motionless, frozen into immobility by a hurricane of conflicting emotions and thoughts that whirled about in her head. But after a few long moments she rolled her head slightly, then a bit more. Finally her eyes slid closed and she started to return her sister's kiss. They kissed for several minutes, their movements gradually becoming more passionate as Greta's body responded, breaking down her resolve even further. Branwen broke the kiss and moved her lips down her sister's neck, across the hollow of her throat and back up the other side to her ear. When Branwen gave a nibble to her sensitive earlobe, Greta gave a small sigh of pleasure and reached up to run her hand through Branwen's thick red hair.\n\n\"That feels wonderful Greta. You love how your sister makes you feel.\" Vala said coming in close behind her again. She leaned in so close to Greta's ear that she was sharing Branwen's breath. She couldn't resist giving the redheaded chambermaid a kiss so she gave Branwen a lick on the lips letting her know what she wanted. Branwen instantly complied, eager to please her Mistress. She moved her lips to Vala's, letting her Mistress kiss her while Greta panted between them. Pulling away after a few heartbeats Vala cooed in Greta's ear again. \"Greta do you love your sister?\"\n\n\"Yesss...\" she hissed.\n\n\"Do you want your sister to make you feel even better?\"\n\n\"Yesss...\"\n\nVala caught Branwen's eye and gave her a meaningful look. Branwen shivered, whether in anticipation or nervousness Vala couldn't be sure. But obediently her hands came up and started unfastening the buttons of her sister's uniform.\n\nThe movement brought Greta back to her senses again, \"Branwen... no...\" She turned her head, her face blushing a furious red. \n\nIgnoring Greta's increasingly feeble protests, Branwen popped the last button and pulled her sisters dress partly down, exposing her shoulders and breasts.\n\nGreta shivered, \"No...\" she breathed but made no move to stop her sister. In fact she continued to run her hands through Branwen's hair. \"No... please... no...\"\n\nBranwen, ignoring her sister's objections, brazenly spun her around so that Greta's back was to her. She grabbed Greta by the breasts and pulled her in so that Branwen's breasts were crushed into her sister's back. Greta moaned out loud when her sister's hands found her stiff nipples. \n\n\"Branwweeennn...\" she moaned. \n\nFire burned through Vala's veins as she watched the lewd display before her. The look of lust that now burned hot in Branwen's eyes. The look of confused passion in Greta's. The love in both of them. Vala wanted them both desperately. Slipping her thumbs under the fabric, Vala pulled Greta's dress the rest of the way down then yanked down her small cloths as well. Stepping in close the trailed her fingers teasingly down Greta's smooth stomach. She said in a husky voice. \"Greta, the only thing you love more than your sister, is me, your Mistress.\"\n\n\"I... I... no...\" Greta still protested weakly between her panting moans.\n\nVala ran her fingers through the small tuft of curly red hair that covered her mount. \"You love me Greta.\"\n\n\"I... love... no...\"\n\nVala slipped one finger, along the outer lips of Greta's wet sex enjoying the little whimper the girl made. \"You love me deeply Greta. You want to make me happy. You want to serve me Greta.\" She lowered her voice further, concentrating, putting all her will into sinking her words into Greta's soul. \"You love me Greta. Say it.\" She commanded as she pushed a finger inside Greta. \n\nThe redhead cried out at the intimate invasion but still made no move to stop Vala. \"I...I... \" she whimpered between moans.\n\nSliding her finger in and out several times Vala enjoyed way the wet sounds mingled with Greta's whimpering moans. \"You love me Greta.\" Vala said sweetly.\n\n\"I... love... you...\"\n\n\"You love your Mistress.\" Even with her clothes still on Vala could feel her excitement building rapidly. She had never before dreamed that controlling someone's mind and body so completely could be so exciting for her but it was. What she had done with Else, Inga and Rae had been exciting but she hadn't really known how or even what she was really doing. Now she knew she understood what she could do. She still didn't understand how it worked, but she knew it did. Taking Branwen had been a thrill for her but that seduction had started days, weeks ago even if it had been interrupted for a while. But this, taking Greta in just a span of minutes? This was... ecstasy. Vala's control of Greta was complete but she wanted more. She needed more. Just like with Branwen, she needed her completely.\n\nGreta shivered and bucked as Branwen bent down and started to lick her sister's nipples. \n\nShe needed Greta completely. Kissing Greta on the lips she said, mimicking the words she had made Branwen recite, \"Your body, mind and soul are mine.\" Her words driven by her rising need started to take on an edge. \"Say it.\" she hissed, \"Say it.\"\n\n\"My body, mind and my soul... are... are yours... Mistress.\" Greta gasped.\n\nAn incredible thrill ran through Vala at the words and she felt close to a climax even without being touched such was her arousal. \"Say it again. Say it for me.\" She squeezed her legs together and looked straight into Greta's eyes. \"Say it.\" She hissed. \n\nGreta's green eyes dilated wide, the green irises disappearing almost completely as the last ragged scraps of her resistance fell away in the face of Vala's irresistible will. Greta's mind finally opened completely and she fell willingly into Vala's command. \"My body, my mind and my soul are yours, my Mistress.\" She whispered. \n\nAt Greta's complete surrender, a stunning climax finally ripped through Vala. She planted a hard, desperate, savage kiss on Greta's lips as rapture surged through her being. Her center contracted in an agonizingly intense orgasm as the world around her faded off to nothing. Virtually the only things Vala was conscious of was the feel of Greta's lips, the sound of Branwen's moaning and the passion in her veins.\n\nOnly vaguely did she hear the ripping pop of her dress as Greta and Branwen tore it off her, sending dozens of tiny buttons scattering around the room. She barely felt the painful impact of the floor as the three of them collapsed to a heap in front of the fire.\n\nVala's whole world for the remainder of that night was nothing but an unending tide of pure ecstasy. Even years later Vala could never get the events of the evening straight in her mind. It all had blended together into one seemingly endless night of sapphic lust and debauchery. Only vague disconnected images came back to when she tried to recall. Lying back against the couch while the two sister each suckled one of her breasts while one of them had their fingers deep in her sex. Having both sister down on their knees in front of her, side by side, their hips touching while she pushed two fingers into each of them, enjoying their twin moans. Sitting in the chair masturbating while watching the two sisters wrapped in a passionate embrace devouring each other's sex. Lying on her back as one sister ground her sex into Vala's while the other sister sat on her face. And through all of it the moans and cries of passion and the thick smell of lust.",
        "* * *\n\nIt was sometime in the depths of the night when Vala awoke. The room was dark and cold, the fire having burned down to glowing embers. She could see in what little moonlight came in through the small window the curly red hair of the twins as they lay curled up one on either side of her. One, she couldn't tell them apart in the darkness, had her head on Vala's shoulder and the other on her stomach. Carefully, so as not to wake them, she wriggled out from under the twins and covered them both with blankets. She added a few logs to the fire and then went out into the sitting room, added wood to that fire as well then sat on the couch with a blanket and watched the growing flames.\n\nThe dark still of the night is always when thoughts become most clear in the mind, or at least appear to at the time and Vala's thoughts now were deeply troubled. What in the world was happening to her, she wondered. She had taken over the minds of those two women as surely as the sun would rise. But how? Why? She asked herself these questions but in truth, a truth she wasn't sure she wanted to admit to herself, she already knew the answers, or at least some of the answer, the dreams. The dreams and her Mistress.\n\nYes, she knew the why, but not the how. How could she do these things? What had given her this power to control minds simply by speaking her will? Vala shivered but it had nothing to do with the chill in the air. She again thought, as she had many times before since this power started to show, that perhaps someone else was controlling her just as she was controlling those girls in the next room.\n\n'Someone', she sniffed. Not 'someone', her Mistress. That nameless woman who came to her only in her dreams. Was she even real or just a figment of Vala's mind? Vala wasn't sure. Vala wondered not for the first time if she wasn't quietly going mad.\n\nIn the darkness of the night it all seemed so ridiculous. A beautiful woman that came to her only in her dreams and compelled her to seduce other women. And somehow this woman had given her an irresistible, honey coated voice to make those seductions possible? She must be mad.\n\nSilently she stood and with the blanket wrapped tightly about her she padded back to the door of the bedchamber and cracked it open just enough to peek in. The fire was burning higher now and Vala could see the two sisters still sleeping peacefully. One of them had moved and they now lay curled together, one laying her head on the other's breast.\n\nNo, apparently she wasn't completely mad because it was actually happening. Those two beautifully young women were now hers to do with as she pleased. Somehow it was all real... somehow... somehow.\n\nA pop for the fireplace startled Vala and she jumped, her movement making the door squeak. One of the twins stirred. Vala carefully closed the door and returned to the couch.\n\n\"I must be mad.\" Vala said to no one.\n\n\"No, you're not mad.\" Said a quiet, feminine voice from behind her.\n\nVala jumped up in fright, the blanket falling to the floor leaving her naked. \"Who's there?!\" she said not seeing anyone. \"Show yourself!\"\n\nIn the far corner of the room by the window a shadow seemed to detach itself from the wall and move towards her. \"You're not mad my Valamera.\" Said the voice again.\n\nWith a gasp Vala recognized the voice. The recognition sent a thrill of fright as well as excitement coursing through her like electricity. \"Mistress?\"\n\nThe shadow moved closer, into the firelight. To Vala's startled mind it seemed as if the shadow was actually transforming before her eyes but she thought it must be a trick of the darkness and flickering light of the fire. As the shadow reached the side of the couch Vala could clearly see the familiar form she knew so well but had never actually seen with her waking eyes. It was the woman from her dreams, her Mistress.\n\n\"Yes my Valamera, it is me. I've finally come to you.\"\n\nA violent trembling began to overtake Vala and she couldn't speak. \"W... w... wh...\" She stammered.\n\nThe woman stood before Vala and smiled warmly at her.\n\nLooking into the woman's eyes, everything around Vala faded from view as she fell helplessly into their hypnotic depths. The only thing she could see was her Mistress. The woman was breathtakingly beautiful. Her pale grey eyes were a perfect match for a pale, smooth skin. The paleness of her eyes and skin was only accentuated by her pitch black hair and luscious red lips. She was the most beautiful woman that Vala had ever seen. She was even more beautiful in person than Vala had imagined in her dreams. Vala's heart swelled with a feeling of profound longing and love. \"You...\" Vala whispered.\n\n\"Yes?\" The woman asked, her voice as smooth as oil on glass.\n\nA thrill raced up Vala's spine as recognized that voice. Not just the voice but the quality of the voice. It was that same one that she used on the twins, and Rae, Inga and Else. That distant part of her mind realized that she was right to think it was being used on her as well but she felt, no she knew that she was powerless against it. And in truth she wasn't sure she wanted to resist. \n\nSomewhere deep in the back of Vala's consciousness a single musical chord was struck. A single note singing softly in her mind, its tone soft and delicate but it rang true, resonating deep within her soul. Vala knew she had heard that chord before but its memory slipped elusively away from her. \n\n\"Who are you?\" Vala found her voice at last. It sounded very small to her own ears. \n\nThe woman laughed demurely. The sound was like music to Vala's ears. \"You will find out very soon my Valamera... soon. But not quite yet.\" She raised a hand and gently stroked Vala's cheek.\n\nAt the touch Vala moaned with pleasure. The contact was the purest of bliss. If Vala had been struck down at that moment she would have died the happiest woman in existence. The note in her mind sang louder. \n\n\"It has been so long Valamera. So very long. But now that I have found you again we will be together, forever.\" She leaned in and gave Vala a tender kiss on the lips.\n\nTears of joy flooded Vala's eyes and ran freely down her cheek. Her entire body trembled and with a deep longing as she flung her arms around her Mistress, returning the kiss with a desperate abandon. Her Mistress returned the kiss just as passionately. In the back of Vala's mind, the chord that was struck had begun to sing louder, its musical tone was both beautiful and powerful, its sound filling her heart with profound joy. It was a chord of familiarity, of experience, of knowing... she had done this before. Not the kiss specifically, she had certainly done that with enough other women lately. No, it was the feel of this particular woman, her Mistress, that somewhere deep in her soul, she knew. Tears of bliss burned down Vala's cheeks, this was right, it was meant to be this way, forever. \"Mistress.\" She breathed. At the sound of the word the chord was struck again, louder this time and Vala moaned. \n\nFinally after what seemed to Vala like far too short a time, her Mistress pulled back. \"Soon my Valamera, soon.\" She said, moving her hand to the back of Vala's neck. Her thumb started to massage the tender spot just in back of Vala's ear, driving another moan from her lips. \"Now you must rest.\" She said silkily as she moved to kiss the side of Vala's neck.\n\n\"Mistress...\" Vala moaned softly, the tears of joy still flowing freely. \n\n\"Soon\" Her Mistress said softly. \n\nAnother long moan of pleasure filled the room as Vala felt her Mistress's lips kissing the tender flesh of her neck. A familiar tightness began building rapidly in her center. Her pulse quickened and her breathing became labored as the feelings built. The chord resonated still louder, its beautiful tone spreading throughout her body even as it threatened to shatter her mind. Her eyes slid closed and the world around her faded. Teeth nipped the tender skin of her neck, gently at first then more insistently. Her moans turned to raged gasping then finally a cry as the tightness in her center gave in to total release. Rapture burned through her veins as she climaxed. At the moment she peaked she felt a sharp stab of pain in her neck. She cried out in surprise at the unexpected pain. But as soon as it had started the pain was gone, replaced with still more pleasure. The resonant chord in her mind was struck again, this time as if by a thunderbolt, her soul sang with the powerful, blissful chord. Her climax soared even higher and she screamed. Vala felt as if her very soul was being pulled out and twisted. On and on it went till Val though her mind would surely break. Nothing in her life had ever felt like this before, none of her previous lovemaking sessions, not even in her dreams had she experienced anything like this. She thought that she must be dying because nothing in life could be like this.\n\nFor what seemed like an eternity Vala's erotic torture went on. Feelings she couldn't begin to describe seared her body and mind from the inside out. Her throat was torn ragged from her screaming and her body was limp, powerless in the grip of her Mistress. She began to wonder if she would die here tonight, her life's energies drained from her by the erotic, magical touch of this woman, her Mistress. Still her Mistress held her, lips on her neck and still the note, high and pure, brilliant and clear, sang in her mind filling her soul. \n\nAs Vala's reserves slipped even further away part of her mind wondered if perhaps her Mistress actually was actually draining her life away, drinking in her very soul. She tried to grasp the thought, to move, to think but it was futile. Another spasm gripped her sex and she reveled in it. The darkness was consuming her but still the pleasure went on and on until finally unable to take any more her conscious mind faded out. \n\nIn the silent darkness of Vala's mind, the note sang on. \n\n* * *\n\nWith a gasp Vala sat bolt upright. Sweat coated her nude body and the cold air prickled her skin. She stared wildly around the room, eyes wide with unreasoning panic. Her eyes fell on Branwen and Greta both staring at her nervously.\n\n\"Mistress?\" One of them, Branwen she thought, asked tentatively.\n\nVala sucked in several ragged gasps of the cool air and closed her eyes. She opened them and looked around the room again. Gradually she got control of herself. She looked up at the twins and managed a smile. \"It's... it's ok. I'm alright. It was just... just a dream.\"\n\n\"Are you sure Mistress?\" Branwen tentatively brushed a few strands of hair away from Vala's forehead.\n\n\"Yes, I'm ok. It was just a dream.\" She shook herself. \"Just a dream.\"\n\nShe looked at the two young women shivering in the cool morning air. Their slim bodies kindling a fire within her. With an iron will she suppressed the feelings. Both of you go in the other room and get dressed. You have duties to attend to.\"\n\n\"Yes Mistress.\" They said in unison.\n\n\"And Branwen, get me something to wear as well.\"\n\nWith a bow, Branwen said \"Of course Mistress.\"\n\nOnce they were in the bedchamber Vala took another long calming breath. A dream. That was it, it must have been a dream. She raised her hand to the side of her neck. Nothing, no bite, no blood, no scar. But did it feel warm? No, she sighed, just a dream.  \n\nBut... a distant voice in the back of her mind started to ask. \n\nNo, she insisted firmly, it was a dream. Her hand touched her neck again, it did feel warm and at her touch it tingled. \n\nHad it? \n\nNo, no, no. A dream! She said to herself again. But it had been so... so... what? Frightening? Beautiful? Erotic? Vala wasn't sure.\n\nBranwen came back in with a long blue velvet gown. Vala pushed thought of the dream from her mind as Branwen helped her get dressed. She had duties to attend to as well. The banquet was tomorrow evening and it wouldn't do to fail in her tasks now.\n\n* * *"
    ],
    "authorname": "china-doll",
    "tags": [
        "twins",
        "lesbian",
        "all girl",
        "incest",
        "twincest",
        "vampire"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/forever-again-ch-06"
}