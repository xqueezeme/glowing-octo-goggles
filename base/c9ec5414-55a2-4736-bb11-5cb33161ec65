{
    "title": "The Legend of Goldicocks",
    "pages": [
        "Queen Goldicocks had an appetite for sex that was legendary all over her kingdom. There were rumors that she had once been so horny that she had fucked three bears. This was a vicious lie. Goldicocks had never fucked an animal. She had however fucked every cook, servant and stable hand in her castle. She had fucked them one by one and she had fucked several of them at the same time. But even with all this fucking, Goldicocks had never had an orgasm. Every cock she fucked had a problem: some were too big, others were too small. She dreamt of finding a cock was just right. \n\nWhen she turned twenty-six Goldicocks had been so frustrated that she had disguised herself as a peasant and left the castle so that she could find a cock to satisfy her. She fucked nine local men on her first day out, but while they were all decent fucks, no cock was just right. She traveled all over her kingdom fucking every young man she encountered. Goldicocks had a wonderful body so it was easy to persuade men to ride her. They would take one look at her golden hair, beautiful face, and creamy shoulders\u2014let\u2019s be honest, they would take a look at a her full breasts\u2014and say, \u201cOh please let me fuck your brains out?\u201d Goldicocks was happy to oblige. But while every man she fucked came hard, Goldicocks was never satisfied.\n\nAfter months of traveling\u2014and fucking\u2014the land, Goldicocks came to an old forest. Everybody in the land avoided the forest because a wicked witch lived in it. The witch was said to be a cannibal but, because of the rumors about her and the three bears, Goldicocks knew you couldn\u2019t trust everything you heard. Goldicocks walked into the forest. After an hour of walking down a thin path she heard frantic screaming. As she got closer she made out words..\n\n\u201cHansel oh Hansel. Yes, yes, fuck me with that. Shove it into me. Gretel suck my nipples. No, not like that. Bite me. Yes you bitch. Hansel, what are you doing? No, no, no! My pussy not Gretel\u2019s. Yes. Right there. Much better.\"\n\nGoldicocks stepped into a clearing and saw the strangest house she had ever seen. It was made, not of bricks or cement but of dildos. Its walls were lines of many sized dildos. The burglar bars were long thin dildos and the roof was tiled with thick veined dildos. Goldicocks got wet just looking at the house. The sounds of sex made her even hornier. \n\n\u201cFuck me with it Hansel. Now, let Gretel take over. Hansel, come here and let me taste your wonderful cock.\u201d\n\nGoldicocks looked through the dildo barred window and smiled. If this is what people meant that the witch is a cannibal, I have nothing to fear. Yes, she eats meat, but definitely in a way I sympathize with. \n\nThe witch had not been kidding. Hansel\u2019s cock was wonderful. The witch sucked at it in deep pulls and Hansel\u2019s fingers clutched her long black hair. Gretel\u2014who had a wonderful ass\u2014crouched beneath the witch. She was holding a large double-sided dildo. She rammed it into the witch\u2019s cunt and then climbed on the other side. Then, with commendable dexterity, she began jerking her hips back and forth. Gretel moaned and mauled her breasts as she gyrated. Hansel reached over and spanked the witch\u2019s buttocks as she sucked him.\n\nGoldicocks was now too turned on to watch passively. She reached for the window dildos--hoping one would detach and she could use it to fuck herself. The moment she touched the house of dildos there was a bright flash and the sound of thunder. \n\n\u201cDamn it. I hate interruptions,\u201d shrieked the witch. She let go of Hansel\u2019s dick. \u201cI\u2019m going to see who that is. You two keep yourselves hot and wet for me.\u2019\n\n*****\n\nA moment must be taken in appreciation of Goldicocks\u2019 breasts. They have been mentioned in passing but a more is needed to convey just how magnificent they were. They were soft, smooth, lightly tanned, and the perfect size for cupping. They bounced hypnotically with every step Goldicocks took and they seemed to strain against whatever she wore, struggling to get out. Her nipples were dark and perpetually stiff. They called out desperately to be licked and nibbled. \n\nIt was Goldicocks breasts that saved her life. The witch, as witches generally are, was not forgiving. When someone angered her, they were she usually turned into a dildo. If she was extremely angry she would then gave the dildo to the ugliest, smelliest hag she could find. \u201cFuck yourself with this at least twice a day,\u201d she would instruct the hag.\n\nGoldicocks escaped this treatment because of her breasts. When the witch saw Goldicocks, the rage disappeared instantly. It was replaced by lust. Because she was turned on, Goldicocks was flushed. Her cheeks were a light red, and her full lips gleamed with moisture. The corset Goldicocks wore was too tight. It pushed her breasts up aggressively. Her shoulders and the tops of her breasts were in view. \n\nThe witch muttered a magic word and one of Goldicocks nipples popped out. The witch smiled. \u201cAnd what can I do for you darling?\u201d\n\n\"Sorry to disturb you. I am the queen of this land.\"\n\n\"There is no queen in this forest but me,\" said the witch. She wasn\u2019t looking at Goldicocks face. She was intent on the newly revealed nipple. The witch was thinking how nice it would be to coat that pink nipple with cream and lap it up. Or maybe wine would be better?\n\n\u2018I didn\u2019t mean to presume,\u2019 said Goldicocks. \u2018I just needed help and you\u2019re magic. I thought you could help me. I have tried a lot of dicks in my life but none of them fit right. I don\u2019t know what\u2019s wrong with me. I\u2019ve never had an orgasm.\u2019 \n\n\u2018I\u2019m so sorry dearie,\u2019 said the witch. \u2018Orgasms are fun.\u2019\n\n\u2018So, I\u2019ve heard.\u2019 \n\n\u2018I might be able help you, but not for nothing.\u2019\n\n\u2018I will give you two caskets of diamonds.\u2019\n\n\u2018What use would diamonds be to me. I\u2019m rich. I have a successful dildo business. Still, I would be interested in this diamond.\u2019 The witch stepped closer to Goldicocks. She pinched Goldicocks nipple between her thumb and ring finger.\n\n\u2018I\u2019m not into women,\u2019 said Goldicocks.\n\n\u2018You can\u2019t be serious,\u2019 said the witch. \u2018You\u2019re honestly saying you feel nothing when I do this?\u2019 The witch enveloped Goldicocks nipple with her mouth. She sucked on it, while circling the raised nub with the tip of her tongue. \n\n\u2018Not a thing. Tickles a little.\u2019\n\n\u2018What about when I do this?\u2019 \n\nThe witch pulled up Goldicocks skirt and pressed her fingers against Goldicocks clit. She began to rub in small circles. \n\n\u2018I appreciate what you are doing from a strictly technical perspective. The way you get all your fingers into it is commendable. Most people just use one or two. You are obviously skilled, it just doesn\u2019t do it for me.\u2019\n\nThe witch never took that as a challenge. She knelt before Goldicocks and shoved her tongue into Goldicocks\u2019 folds. She lashed her relentlessly with her tongue. At the same time, her fingers continued rubbing Goldicocks clitoris.\n\n\u201cIt\u2019s not you, it\u2019s me,\u201d Goldicocks said politely. She could see the witch was determined. \u201cI used to enjoy tongues and fingers when I was in my teens. After I felt a cock inside me that was the only thing I liked. I don\u2019t think I\u2019ll be able to rest until I find the perfect cock.\u2019\n\nSuddenly, Goldicocks felt a cock plunge into her. She gasped. She looked down and saw that the witch was holding a dildo. The witch pushed it in as far as Goldicocks\u2019 cunt would allow and then began to rotate it gently. Little jolts of pleasure shot down her spine and all through her cunt.\n\n\u201cThere you go,\u201d laughed the witch. \u201cYou want cock, there\u2019s a cock.\u201d She pushed Goldicocks to the floor. Goldicocks hips began to gyrate and the witch was pleased at how wet her vagina was. After ten minutes the witch realized it would take a while to make Goldicocks orgasm. She stopped for a moment and pulled up her own skirts down. She then repositioned her vagina over Goldicocks tongue. \u201cLick me out while I fuck you.\u201d\n\nGoldicocks had never licked a woman\u2019s pussy before. She was a little nervous. She tried to think of what she'd like. She brought her tongue against the witch\u2019s labia and heard the witch groan. She moved her tongue clockwise. Would anti-clockwise be better? She tried to use her tongue methodically. She divided the pussy into zones and decided to address each systematically. She would begin by licking the outer lips, then move inwards. She would suck occasionally but rely on her tongue. She already knew, from the men she had given blowjobs, that her tongue was gifted. Goldicocks started impressively but before she could really get into her plan, her concentration was broken. The dildo thrusting into her felt too good. She felt dizzy. \u2018Keep doing that! Keep fucking me! It\u2019s never felt that good.\u2019 \n\n\u2018Forget about me. I\u2019m going to give you your first orgasm,\u2019 said the witch. She \n\nincreased the pace of her thrusting. Goldicocks stopped licking and enjoyed the waves of pleasure. \n\nFifteen minutes later, Goldicocks was shaking her head back and forth, sweating, panting, and yelling in three languages. \u201cI\u2019m so close! Wow! Oh yes! Icasha ni polo ayaya (which is Troll for \u2018I\u2019m going to come\u2019)! Fuck me. Yeah! Lahahahhaha (which is unicorn for \u2018Just a little longer!\u2019)\u201d\n\nA little longer turned out to be another half an hour. The witch\u2019s hand began to get tired. She kept going, grim with determination.\n\n\u2018I\u2019m about to come,\u2019 Goldicocks screeched again.\n\n\u2018That\u2019s what you said half an hour ago.\u2019\n\nTen minutes later Goldicocks had still not yet had an orgasm. \u2018I give up,\u2019 the witch \n\nsighed. \u2018You\u2019re impossible.\u2019\n\nGoldicocks felt weak. Her cunt was sore. \u2018It\u2019s always like that. I feel like I\u2019m going to come, but I can\u2019t.\u2019\n\n\u2018We really need to find you the perfect fit. I think I know just the thing. Follow me.\u2019\n\nIn the house, Hansel and Gretel were both touching themselves.\n\n\u2018What are you doing?\u2019 demanded the witch. \u2018It\u2019s not polite to masturbate when I have guests.\u2019\n\n\u2018You told us to keep ourselves hot and wet.\u2019 \n\n\u2018Oh right. I forgot. Good slaves. Keep going.\u2019\n\nThe witch walked to her bed and pulled a large metal chest from underneath it. It had a large silver lock and she opened it with a magic word. The chest flipped open and inside there was a long, curved dildo. It was a dildo like none Goldicocks had ever seen. It was ribbed with bands of gold and studded with emeralds. Each one gleamed in the light. \n\n\u201cThis is the most magic dildo I have ever created. It took me eighteen years of celibacy to create. I enchanted it with my every sexual thought and trust me there were a lot of them. \n\nIt gives so much pleasure that anyone who has an orgasm with it comes so hard that they fall into a deep coma that they can\u2019t be woken up from. You can\u2019t have orgasms so it should be safe for you.\u2019\n\n\u2018How will it help me.\u2019\n\n\u201cThis dildo is also a powerful magic wand. It will lead you to the perfect cock if you just do as I say. Rub the head of the dildo against your clit and say these magic words:\n\n\u2018Dildo, dildo on my clit,\n\nWhere\u2019s the dick with the perfect fit?\u2019 \u201d\n\n*****\n\nWhen the magic words were said, the dildo would spark, hiss and sizzle. Goldicocks would hold it in the air and, when it pointed in the direction of the perfect dick, it would glow. The unfortunate thing was that the dildo had to be kept out for it to work, so Goldicocks walked out of the forest and through the neighboring villages holding the dildo aloft. Many peasants burst out laughing. She considered ordering her mockers beheaded, but that would reveal that she was the queen.\n\nGoldicocks traveled for three days and then traveled through the mountains. Whenever she got tired she would remind herself she was on a noble quest. Every morning when she woke up she had to recharge the dildo. She would rub the dildo against her clit and say,\n\n\u2018Dildo, dildo on my clit, \n\nWhere\u2019s the dick with the perfect fit?\u2019\n\nIt was frustrating. The dildo sent such chills of pleasure through her body that she was randy all day. As she walked, she would fantasize about what she would do when she found the perfect dick. Eventually Goldicocks reached the White kingdom, which was ruled by King White. It was a very puritanical kingdom, where most husbands and wives had sex once a month--and when they did they had sex through sheets. When the citizens of the white kingdom saw Goldicocks carrying a glowing penis, they were all quite scandalized. They averted their eyes and some of them wanted to send letters to the king, demanding she be arrested. \n\nThe people of the White kingdom loved their king. He was a paragon of virtue. His life exemplified the principles of the kingdom. He had gone through his teenage years without masturbating once; when a woman's ankles were exposed, he politely averted his eyes; and he had been a virgin when he married. He had married the love of his life the duchess Eleanor three years earlier. She had made him extremely happy. They had chatted, held hands and hugged all the time. They had 'made love' only once, and that was to conceive their daughter, Ho. The lovemaking had been a polite affair done, naturally, through a sheet. When Eleanor had died, the king had been heartbroken. He dedicated his life to raising Ho White as well as he could. Ho White was rebellious girl who was always getting up to mischief. She was hard to bring up alone, but King White never considered remarrying. After Eleanor died he had sworn he would never love--or make love--again.\n\nIt was to King White's palace that the magic dildo led Goldicocks. She walked up a \n\npath into the palace gardens where the King was sitting, thinking about his dead wife. When Goldicocks saw the dildo was pointing at the King she rejoiced. She had found the perfect dick. She ran forward, screaming with delight and tore off her bodice as she did so. August heard her yell and looked up. He was shocked to see a bare breasted woman running at him. Instinctively he averted his eyes.\n\nA moment later Goldicocks was on him. She pushed him to the floor and unbuckled his belt.\n\n\"Who are you? What are you doing?\" he demanded.\n\n\"Queen Goldicocks, nice to meet you, and what I\u2019m doing is taking off your pants so that I can fuck you harder than you ever have been fucked.\"\n\n\"How dare you,\" he said as she pulled out his cock.\n\nGoldicocks slurped at his cock. She kissed it gently and imagined how wonderful it would feel inside her. \"Don't worry,\" she said between sucks. \"I'll explain everything after we fuck.\"\n\n\"This is positively obscene,\" said the king. He had only had sex once and Eleanor had never done anything as depraved as suck on his cock. \"Guards! Guards! Help!\" \n\nAs the guards were coming, the king realized that what the woman was doing to him didn't feel bad. It felt quite good actually. Her mouth was so hot and wet and slippery that she had made him rock-hard. Goldicocks fondled King White's grabbed his penis and squeezed it between her tits. She bobbed up and down, licking the tip of his dick whenever she neared it.\n\nThe guards arrived with swords drawn. \"What is it?\" \n\n\"Oh, it's quite alright,\" moaned the king. \"Go away.\"\n\nAfter another minute the King started to tremble and was almost about to come in Goldicocks' mouth.\n\n\"Don't you dare,\" she scolded. \"I've been searching for this dick all my life. Now that I have it I won't be satisfied until its shaft is pumping inside if me.\" \n\nWith that, Goldicocks rose and started took off the rest of her clothes. The King started to think about Eleanor.\n\n\"I can't,\" said the King. \"My wife\u2026\"\n\n\"Don't worry. She'll understand. Maybe we can do a threesome later?\"\n\n\"She\u2026she's dead.\"\n\n\"Then there's no problem is there?\"\n\nGoldicocks grabbed August's cock and guided it between her legs. She was so wet that it slid right in. \n\n\"I swore never to make love to another woman,\" the King protested.\n\n\"No problem, because I'm not going to make love to you. We're going to fuck.\"\n\nGoldicocks began grinding her hips into August. It was amazing. She could feel him all through her body. He was so hard\u2026and it was perfect. Goldicocks had fucked so many men in her life. Many of them had been bigger and wider than King August but none of them had felt so good. Her fingernails tore into the king's back and she rode him mercilessly. \n\nAugust's initial reservations evaporated. He had never felt anything remotely as pleasurable. He began meeting Goldicocks' thrusts enthusiastically. The feelings he was experiencing were stronger than anything he had ever felt. \n\n\"Fuck me, fuck me, fuck me,\" screamed Goldicocks. The sensations were amazing. Her whole body felt like a firework had exploded inside her. \"I'm close to coming. I'm close\u2026 Ohhhhhh!\" The pleasure built until Goldicocks was shaking her head from side to side, grabbing her breasts, and pushing her pussy against the king's cock as vigorously as she could. She could not breathe. It was too much. Her body began convulsing. Her vaginal muscles spasmed. She erupted. \"Oh wow, wow, wow, wow.\" \n\nGoldicocks had had her first orgasm. \n\nExhausted, she climbed off the king's dick. \"So, just before I started fucking you, you seemed to want to ask some questions. I'll answer anything you want now.\"\n\n\"Will you marry me?\" the king asked.\n\n\"That's a bit sudden,\" Goldicocks said. \"Though, after that orgasm, the answer's yes.\" Goldicocks looked at the king's penis. \"Oh you poor dear,\" she said with a smile. \n\n\"You're still hard. I guess I'll have to ride you again.\n\nTHE END"
    ],
    "authorname": "the brothers cum",
    "tags": [
        "goldicocks",
        "queen goldicocks",
        "dildo clit",
        "dick perfect",
        "hansel gretel",
        "king started",
        "clit dick",
        "perfect dick",
        "find perfect",
        "found perfect"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-legend-of-goldicocks"
}