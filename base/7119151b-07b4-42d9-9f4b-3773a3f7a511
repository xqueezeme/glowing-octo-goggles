{
    "title": "The Twelve Vitali Ch. 33",
    "pages": [
        "Authors note: Hello everyone. Thank you everyone for the positive feedback and comments they continue to mean the world to me and have brightened my days. Thank you once again to Paul who continues to be my second set of eyes. There are only two more chapters after this, I hope you all enjoy it, ~ellie. \n\n*****\n\n\"Mrs. Vitali, Matteo has arrived and is asking that you join him at the airport,\" Bradbury said without preamble, walking into the stark room in which she sat looking worried and pensive. At least in the car she had some information, here she had nothing but silence and impossible scenarios playing out in her mind, despite occasional updates from Hugh, who sat with her.\n\n\"Okay,\" she said, getting to her feet and following the man from the room. No one spoke again as they drove the short distance, and she bolted from the car into Matteo's arms as soon as Hugh as pulled to a stop.\n\n\"Miss me?\" he murmured into her hair as he held her tightly. He picked her up and carried her onboard the plane.\n\n\"Just a bit,\" she said in a shaky voice, tears threatening to spill from her eyes. \"Have you heard from Ricco? Is he okay?\" she asked. For once the jet seemed crowded with people, and Cat allowed Matteo to place her in a seat and help her with her belt before taking his own beside her and taking her hand in his.\n\n\"No, but he and Stefano were nowhere near any of this, so I am sure they are fine. They are probably just trying to get home as fast as possible themselves,\" he reassured her. \"There are other things we need to worry about, other things I need to tell you.\" He leaned over to kiss her. \"The most important thing is, I love you,\" he smiled and kissed her again.\n\n\"As we suspected, the Kimberly,\" Roberto said. \"Leyton took off half an hour ago, and Rick is on the ground with his men. We've done what we can for now.\" He said seriously, then he smiled down at Cat. \"I love you too,\" he smiled and went to take his seat.\n\n\"How long will the flight last?\" she asked.\n\n\"Just over four hours,\" he said softly. \"Are you unwell? You can lie down after take off,\" he said, looking at her with concern.\n\n\"Will you lie down with me?\" she asked, gripping his hand even tighter.\n\n\"For you, I would do anything,\" he smiled softly. \"We need to talk about what will happen once we land though,\" he said seriously and lifted Cat's hand to kiss it.\n\n\"Is it bad?\" Cat asked. \"What's going on right now? Is it as bad as I think?\"\n\n\"Probably not, but it's not good either,\" he admitted honestly.\n\n\"Then can you tell me after I have had a few minutes to just enjoy the fact that you're here and safe? The last four days have been awful, and I just want to hold you close for a little while and not think about anything else,\" Cat said, her eyes filling with tears again. \"This baby of yours is screwing with my head, and I can't stop crying.\"\n\n\"This baby of mine?\" he asked. \"I think it's your baby more than mine at present,\" he chuckled. \"but I can have words with her if you like,\" he grinned and placed his hand over her belly.\n\n\"Her?\" she queried. She had expected that Matteo would want his first born to be a son.\n\n\"Only a daughter would give their mother this much grief. My sons will be perfect gentlemen. I am sure of it,\" he chuckled again, making her smile and relax with him. No matter how anxious or upset she was, Matteo always had a way of making her smile and feel his love. She loved him in return for that. She loved him for so many things, but most of all she loved him for being exactly who he was.\n\n\"I love you so much,\" she whispered, and craned her neck up to kiss him.\n\n\"Fuck the warning light!\" Matteo growled, needing the closeness with her as much as she said she needed him. As the plane continued to climb, he undid their belts and picked her up, walking with her to the bedroom at the rear of the jet. He shut and locked the door, determined to keep the world, his family, and the pressing issues at bay for at least an hour before facing them all again and telling her that David had been abducted by a madman. There was nothing he could do from the plane except keep up to date with all that his family and friends were doing and issue orders that could be done just as easily by his father, who sat in the cabin. He needed to reconnect with the woman he loved, and she, him. This was just as important for both of them as keeping up to date with what was happening on the ground. They could do anything; handle anything when they were together, including dealing with Ricco's disappearance and David's abduction.\n\n\"Thank God you're here!\" Matteo breathed, placing her on her feet inside the room and turning to lock the door behind them. \"I've missed you so...\"\n\nBefore he could guess her intentions, she launched herself into his arms. Matteo staggered back against the door with her attack, recovered, and then wrapped his strong arms around her, lifting her tightly against his body. His lips found hers, and when her lips parted he slid his tongue inside. She tasted delicious. He felt her arms wrap around his neck and her tongue came out to dance with his.\n\n\"Fuck, I've missed this!\" Matteo growled against her lips.\n\n\"I've missed you too,\" Cat said, kissing the corners of his mouth, his chin, his neck.\n\n\"I thought I would never get back to you. The flight seemed to last forever, and waiting for you at the airport...\" Matteo said, lowering her to the floor and leading her to the bed. \"I don't ever want that much time between us again!\" He growled, sitting down and pulling her sideways onto his lap.\n\n\"Me either,\" Cat replied, wrapping her arms around his neck and bringing him close for a deep kiss.\n\nHis mouth opened under hers and his tongue met hers. He groaned at the taste of the only woman he had ever truly loved. She tasted better than he had remembered, her lips soft, her tongue alive and tantalising within his mouth. He ran his hands through her dark hair, holding her head steady for his assault. He slanted his mouth over hers, deepening the kiss. One hand trailed down her neck and over her shoulder, then began to stroke over her breast, feeling the nipple harden under the fabric.\n\nCat pulled her head away. With a smile she slid from his lap and stepped back from him, intending to apologise for her neediness and at least try and discuss what the hell was happening and why they were on a plane to God knows where when the family was obviously in crisis.\n\nMatteo watched her, unsure why she had put distance between them. He studied her silently as she gazed back at him. She wore a dark blue skirt that came to her knees and flared out, stockings, and a pair of heels. With every move the skirt swirled out, giving him a glimpse of her bare thigh above the lace edges of her thigh high stockings. She wore a sheer white blouse, and Matteo could see the faint outline of her lace bra beneath it. Her nipples were hard and poked against the filmy material. He shifted uncomfortably, his cock straining against the confines of his pants as he watched her eyes fall to his lap.\n\n\"It's been too long, hasn't it?\" she murmured almost to herself. He was just as needy for their physical closeness as she was, she realised. Without a word to discuss her worries about everything that was going on, she went and knelt before Matteo to unfastened his pants. He raised his hips, helping her to lower both his pants and boxers, and she looked up at him, a small smile touching her lips. She slowly leaned her head down and touched the head of his cock with the tip of her tongue. Matteo closed his eyes and groaned.\n\n\"Far too long!\" he agreed with a deep groan. Matteo opened his eyes and was held captivated as she parted her soft lips and swallowed his cock deep. Her eyes never left his as she began to move up and down his cock, her lips and nose buried in his pubic hair. Her tongue coming out to lick his balls as she deep throated him.\n\n\"Fuck yes!\" Matteo hissed.\n\nCat smiled around his thick cock and murmured in appreciation. She loved that she had this kind of effect on him. She loved the sounds he made, especially when she massaged the underside of his cock with her tongue.\n\n\"I'm going to cum if you don't stop!\" Matteo hissed, tightening his fingers in her hair, wishing he could last longer. No man would stand a chance with what she was doing to him after so long apart, he admitted.\n\nCat began to move her mouth faster on him. She felt his hands slide into her hair and try to slow her movements, but she wanted this, wanted to taste him, to make him weak for her. As if giving up the fight, she felt him push her down onto his cock gently to take it all. Cat placed her hands on his thighs and let him guide her.\n\n\"Fuck! Cat!\" Matteo growled, and he pulled her head tighter against his lap. His hips pumped at the same time, driving his cock deeper, then he threw his head back, growling loudly between clenched teeth as he erupted in her mouth.\n\nCat kept sucking until he released his hold on her, and then sat back breathlessly on her heels, looking up at him as he lay back on the bed, his breathing ragged. She smiled softly as he lifted his head to look at her and make sure she was okay.\n\nSitting up, Matteo reached down and pulled her to her feet. His hands circled her waist and lifted her up onto the bed and slid to the floor, reversing their positions in a rush of movement. His hands were on her knees, slowly inching upwards. His fingers caressed the outsides of her thighs. He watched as she leaned her head back and took a deep breath, thrusting her breasts out.\n\n\"You're always so hot and wet and ready for me,\" Matteo said, his fingers brushing against her pussy lips. \"But I know I can make you hotter, wetter...\" his voice trailed off as he bent his head and began to kiss up to the same path his fingers had travelled along her thighs. With his hands on her knees, he spread them wide and looked at her pink, wet pussy. His eyes closed as he leaned in and took a deep breath. \"I have dreamed about this pussy, Cat.\" He breathed against her sensitive skin.\n\n\"Matteo...\" She sighed his name.\n\nSlipping his hands up her thighs, he leaned in close and ran his tongue along her lips. He heard her sigh with pleasure. His nose rubbed against the patch of dark hair on her mound. He used his thumbs to part her lips and then touched his tongue to the tiny nub of sensitive flesh as he uncovered her clit.\n\nCat stifled a cry as her hips bucked up at his mouth. Matteo used a hand on her stomach to force her back down and slowly began to lick her clit. He alternated between using the tip of his tongue and the flat of it. Every few strokes he would lick from her ass to her clit, sticking his tongue in her tight hole and wiggling it.\n\n\"Matteo...please...I need...\" Cat panted.\n\n\"Tell me, Cat. Tell me what you need.\" Matteo asked, looking up at her from between her thighs. His mouth and chin glistening.\n\n\"I need to cum, Matt. Please!\" She begged breathlessly, her eyes holding his.\n\nMatteo held her gaze as he lowered his head again and started working her clit with his tongue. He saw her move her hand, and seconds later felt it sift through his hair, pulling him closer. His tongue worked furiously over her clit as the fingers of one hand began to fuck her. He slid one finger from the other hand through her slit, lubricating it, and then worked it against her asshole. He felt her tense as he played with her puckered hole, but then relax, and his finger slid into the first knuckle.\n\nCat gasped as she felt Matteo slide his finger deep into her asshole. She tilted her hips up to give him better access. She had come to enjoy ass play, and it had an amazing effect on her body now. She shook with her need and desire for him and what he was doing to her.\n\n\"Oh, God!\" Cat hissed, bucking her hips against Matteo's devouring mouth.\n\nHis tongue lashed at her and lips sucked at her while his finger fucked her pussy and tight asshole simultaneously. She spread her legs wider, lifted her hips higher, her hand dug deeper into his scalp as she pulled him closer to her pussy.\n\n\"Matt-ay-oh!\" She cried as she arched hard against him and cried out with her orgasm in a harsh sibilant voice. Matteo continued to lick and suck until she fell back onto the bed begging for mercy in high pitched whimpers as she squirmed under his onslaught.\n\nCat raised her head and looked at Matteo as he rose to his knees between her legs and, levering himself up onto the bed, crawled over her body. She pulled him to her and wrapped her body around him, fully aware that they both still wore their shirts, and her skirt was bunched around her waist, making her uncomfortable. She pushed on his shoulders gently, and he rolled onto his back, taking her with him.\n\nHolding her and realising what she wanted, he helped her to place her knees beside his hips, straddling him. She leaned forward, placing her hands on his chest as he held her hips. She saw his hand move between them a second before she felt the tip of him rub over her wet pussy. With one hand on her hip, he guided her down onto him with a soft groan.\n\nMatteo let out a deep breath as Cat's pussy surrounded him. She was so hot, so wet, so tight. All of his dreams and fantasies of her over the last four days seemed faded and lifeless compared to the reality of her. He loved the way she felt, and moved, the taste and sound of her. He loved everything about the woman who looked down on him with lust filled eyes as she impaled herself on his cock. His eyes went to her face as she closed her eyes and finally sat with him fully embedded, rotating her hips, making sure she got every millimetre within her.\n\nMatteo settled his hands on her hips and moved her on him. He loved watching her eyelids droop and the hitch in her breath as she rode him. He watched as she sat up and her hands went to her blouse, and she started to unbutton it, baring her white lace covered breasts to him. She reached inside and pulled each one free, offering them up to him as they sat up on top of the bra she still wore.\n\nMatteo slid his hands around her hips and up her back. He pulled her forward and buried his face between her generous breasts. He took a deep breath, taking in the scent of her and the light and flowery perfume she wore. He stuck out his tongue and trailed it across her breast to one hard nipple. He swirled his tongue around it several seconds before taking the hard-pink bud into his mouth and sucking hard.\n\nCat sighed, arching her back, offering him more. Matteo's other hand came up and played with her other nipple. Pinching and pulling, giving her the edge of pain he knew she wanted. He knew how the sensations travelled through her and heated her even more, not that he believed that could be possible at this point in time as her pussy surrounded and clenched at his cock. He took turns licking and sucking each nipple while Cat ground her pussy against him. The harder he sucked her nipples, the deeper she would take his cock.\n\nMatteo growled and grabbed her hips again. He leaned up slightly and took possession of her body, guiding her up and down his cock, setting the pace. He looked up at her as she readjusted her hands on either side of his head and he leant up further to capture her mouth. He felt the fingers of one of her hands in his hair as she kissed him deep, following his head back down to the bed. Her tongue came out to mate with his. Sucking on it, she moaned into his mouth as he thrust up into her.\n\nNothing but their harsh breathing could be heard as they fucked each other. Matteo could feel his climax coming. He wanted to feel Cat cum again. Feel her squeeze and milk his cock. He reached a hand around and touched her swollen clit. It was all she needed to send her over the edge.\n\n\"Matt-ay-oh!\" She cried his name as she threw her head back and came in a rush.\n\nThe power of her pussy clenching on his cock had him groaning out in his own release as his cock lengthened and swelled and he emptied his balls deep inside her. Matteo held her body tight against his as his cock twitched inside her. Her head was buried against his neck, and he could feel her hot breath on his skin below his ear, which only served to inflame him more, made him want to do that to her all over again.\n\nHe loved having her body against his. Her breasts pressed against his chest. He just liked touching her, having her close. It had been almost a week since he had felt this content. They lay entwined with each other for a while, Matteo stroking her hair and her back.\n\n\"Matteo?\" she whispered.\n\n\"Yes?\" he whispered back.\n\n\"Now that we can both think straight again, can you tell me what's going on?\" she asked quietly, now dreading the answer.\n\n*****\n\n\"Where are you taking us?\" Ricco asked when he realised that he should have been seeing Melbourne from the windows and could see nothing but desert through the breaks in the clouds below them.\n\n\"We are going to where you need to be. Trust us, we know what is needed at this time,\" Sava said enigmatically, making Ricco want to punch him and make him talk honestly. Grumbling, Ricco stood and walked uncertainly toward Stefano. He crouched down next to his father and spoke in a low voice.\n\n\"We aren't headed to Melbourne,\" he said quietly.\n\n\"There is nothing we can do about that now, neither of us is in a position to hijack the plane,\" he chuckled. \"I think the theory that Vanessa was the weak link to be used against us was correct. I believe that Giovanni is possibly heading to the Papillo with some sort of leverage to see, or even free Maria. I expect that is where we are heading. I don't believe Matteo or any of your brothers are in danger at the moment, so we need to concentrate on where we feel the danger is located, and that is Vanessa and Theresa. Though I am having trouble seeing what danger there is exactly.\"\n\n\"You must trust us,\" Fawn said from her seat beside Stefano. \"All will become clear when the time is right. I can tell you now that your brother also travels to where we go, with his wife and father,\" she said.\n\n\"Matteo?\" Ricco didn't know whether to be relieved or worried by the information.\n\n\"So, both the old and the new Chair go to meet their fate,\" Stefano said. \"And we with them.\"\n\n\"Cat and Theresa as well,\" Ricco said, seeing the potential to wipe out both levels of leadership in his family and devastate the remaining members.\n\n\"Go back and let me concentrate,\" Stefano said abruptly. It was as if all of his talents had been muted and he was no longer able to feel the danger to his family he had so clearly felt before they stepped onto the plane with these people. He knew he had to trust the Tater now, but he felt as ill at ease as Ricco did, despite his dismissive words to his son.\n\n*****\n\nBy the late afternoon, it had been determined that the danger of the early afternoon had been purely directed at Cat and Theresa. Zion and Lucca had ordered the scaling down of the alert. The extended family members and the Vitali women were allowed to return to their homes as long as they remained alert and kept their watchmen with them. Zion and Lucca had called a meeting and gathered at their childhood home in the Athenaeum with their siblings and cousins.\n\n\"It was Giovanni, and he took Cat's brother, David, and his friend, Mick, as well to ensure Matteo brought Cat to him,\" Lucca said, filling in everyone who hadn't been aware of the most recent developments. \"Matteo and Cat should land in the Kimberley within the hour.\"\n\n\"You said Ricco and Stefano are already there?\" Thomas asked with a frown. \"How could they have known to go there rather than home?\"\n\n\"That's why they are the Oracles,\" Lucca shrugged, not knowing what had driven them to go north rather than home.\n\n\"How did they get there? It's not like they took the family jet,\" Chase asked.\n\n\"The Tater are assisting them, apparently,\" Lucca said guardedly. \"It has been difficult to get the information. They landed on a remote property owned by the Tater, according to the Papillo, who were tracking the plane.\"",
        "\"I hate to be the doom and gloom guy here, but does it bother anyone else that all six of the family leaders are all heading towards a madman who had already kidnapped members of our family and holds a pretty big grudge?\" Kalum asked angrily. As the warrior of his table, Matteo's safety was his priority. For a warrior to lose his leader was almost unheard of; and he had no intention of being the first. \"You should let me go, if nothing else I can be a reliable link between what's going on there and our table.\"\n\n\"Once everyone is on the ground communication will become easier. The Papillo have sworn to assist in any way necessary. Rick has been close friends with Matt since they were kids, he will ensure his safety. For the moment all we can do it wait and ensure everyone here remains safe. With the leaders gone, the attack we thought would come with the naming of the new table may still happen, it would be the perfect time for the Suebi to move on us,\" Cobi spoke up, making the table fall silent.\n\n\"Then why the hell did we let everyone go home?\" Zachary said, thinking of his wife, Kari.\n\n\"Because today was Giovanni, not the Suebi,\" Cosimo explained patiently. \"The fake watchmen were those of the Martino family. Nothing about this reeks of Suebi, I believe they have lost their tenuous control over Giovanni, if not Mario. The Suebi would have to know we are all on alert now and our families would have added security. Our loved ones are as safe as they can be for the moment, regardless of where our fearless leaders are. Don't forget, we also have leaders here, and, I have to admit, both Zion and Lucca stepped up today better than many of us would have believed, given their age and experience.\"\n\n\"Here, here,\" the other older members murmured in agreeance with the sentiment.\n\n\"You all stepped up today and over the last few weeks admirably. We can all feel much better about making our retirement plans. Matteo and Ricco are in safe hands,\" Frankie added. \"But we need to stay alert. The moment we relax the extra security we will become vulnerable again. If you wish to go home and ensure your wives and babies are safe and content, go, Zach, and take Cobi with you. You have families, and when you were little I can guarantee your fathers would have been at your side long before now. The family is everything; you should never sacrifice that for sitting here to play the waiting game. No one would expect that of you.\"\n\n\"Just keep your phone handy,\" Zion said with a smile to Cobi. \"And if you could come back later, once you have checked on Maryanne and the baby, I would really appreciate having you around tonight,\" he said, admitting how much he needed his big brother's guidance and advice.\n\n\"Sure,\" Jacobi nodded. \"Give me an hour or two and I'll be back.\"\n\n\"Let's all take a break and order up some dinner from the restaurant downstairs. It's been a long afternoon. Those who need to check on loved ones, or even get out of here for a while, you're welcome to do so, just be alert and take all the necessary precautions,\" Zion said, thinking that he needed to check on Aria. \"Lucca, you and Thomas and Cosimo stay, please. If Matt or Ricco are going to call anyone it will be one of us,\" he said.\n\n\"Yeah, I was thinking the same, I'll grab some menus,\" Lucca agreed and waved Thomas toward him.\n\n*****\n\nCat listened to the whole story of Giovanni and Maria's childhood, Maria's love affair with Stefano and her subsequent marriage to Roberto. She listened to Matteo's version of his childhood leading up to Alessandro's death and how Matteo got the scar on his chest. She listened to the more recent events that occurred this year and realised a lot of what he was saying was an assumption of Vanessa's motives and Giovanni's reactions, as well as how Mario seemed to fit into the picture.\n\nThrough it all she remained calm, asking only relevant questions. The only time she reacted with anything but calm acceptance was when Matteo told her that David and Mick had been taken, possibly because both were seen together, and Giovanni and his men may not have known which one her brother was and which was a close friend. She had quickly recovered her calm demeanour, however, and concentrated on the situation they were flying into.\n\n\"Kitten,\" Matteo said softly. He had been watching Cat carefully. Given her emotional outburst recently, he became worried by how calmly she was reacting to the news that David was being held hostage by a madman. \"Talk to me,\" he encouraged. \"None of this is easy or good. It's okay to be worried, angry, scared,\" he said gently.\n\n\"I understand,\" she said softly. \"I assume, that by the time we land, your family, and even your friends will have a plan in place around what happens, and I trust you to make sure David will be okay. Thank you for being honest with me about it. I know it can't have been easy to tell me David was in trouble,\" she sighed. \"I think you should go out there and talk to everyone about what is happening on the ground and what really will be waiting for us.\"\n\n\"That's it?\" he asked, confused by how calm she seemed, as if things like this happened to her every day.\n\n\"I love you,\" she smiled and leaned forward to kiss him. \"Never, ever, doubt that. I know none of this was your doing, and we are all flying blind here, so to speak, until we know for sure what Giovanni wants. I love you. I trust you. Everything else will be as it needs to be,\" she smiled sadly. \"Let's go and find out what's been happening while you've been in here looking after me as if I am a fragile china doll that might break at any moment.\"\n\n\"You are no fragile china doll, that much I know,\" he chuckled. \"Everyone underestimates you, even me at times, but I love you and trust you to tell me what you need. If you say you are fine, I believe you. But know that you don't have to be strong when it's just you and me. You can be upset and angry that David is in danger because of my family's past. It's okay to blame me for not keeping him safe like I said I would. I am so sorry, Kitten.\"\n\n\"I don't blame you!\" Cat exclaimed, shocked at his words. \"None of this was your fault; you weren't even alive for most of that sordid story. His father, and then his brother, failed to get Giovanni, and I expect Mario, the help they needed when they needed it. Even if they had gotten the help, I doubt Giovanni would have taken it.\"\n\n\"That's probably true, but I feel so guilty that we didn't have a man watching David,\" he sighed.\n\n\"He would have hated that. And who could have known this would be what Giovanni did?\" she asked with a shrug.\n\n\"Come on,\" she said softly. \"It's time for you to lead your family instead of worrying about me when I am okay. I promise I am perfectly fine. The baby has stopped making my tummy roll, thank goodness, or maybe he just knows his Daddy is close by and is behaving,\" she gave a small laugh that didn't meet her eyes.\n\n\"I thought we decided she was a girl?\" he chuckled, but stood and began to straighten his clothes and pull her to her feet to fix her own attire. Then they walked out into the cabin, and Matteo was immediately gathered into serious conversations about what was happening back in Melbourne and what would be waiting for them on the ground in the Kimberley.\n\nCat moved to the front and took a seat, placing a hand on her belly as she contemplated what she knew. She knew Matteo would do his best to protect her from any perceived danger, and she was grateful he hadn't left her behind in Melbourne and tried to mount a rescue attempt on his own. He seemed to forget that she had been surviving madmen and threats to both herself and David for almost her whole life. She knew what she had to do to protect the people she loved. It wasn't her that Matteo had to worry about right now, it was Theresa. Vanessa as well, because she must be so messed up by seeing her mother in January to be doing this and helping Giovanni, either that or they were forcing her somehow.\n\n\"Mrs. Vitali,\" Bradbury said, coming to take a seat close to hers.\n\n\"Yes?\" she looked up at him.\n\n\"Ricco and Stefano have checked in and are safe,\" he said without emotion. \"I know you were concerned when they couldn't be contacted.\"\n\n\"Thank you,\" she said quietly \"I appreciate you telling me. Are they back in Melbourne now?\" Cat knew Ricco would worry about her once he found out where she and Matteo were headed, and knew she would have to call him and show that she was handling everything that was happening.\n\n\"No,\" he said carefully. \"I believe he has already landed at the Papillo stronghold ahead of us.\"\n\n\"What? Why?\" she gasped. She had thought Ricco and the rest of the family would be out of danger now. \"Why would he have flown all the way here? Was he threatened by Giovanni as well?\"\n\n\"I do not believe so, but you will need to talk to him about that once we land,\" Bradbury said in the same careful unemotional tone.\n\n\"Okay,\" she said, and leaned back in her seat again, closing her eyes. She heard him get up and start to move away. \"Thank you for not letting me go with Vanessa today. I'm not sure how calm Matteo would be right now if I had,\" she blurted, opening her eyes again.\n\n\"That's my job,\" he said softly, looking uncomfortable under her stare.\n\n\"You know it's creepy, right? The way you look at me like that. The way you always watch me so closely,\" she said with a sigh.\n\n\"Occupational hazard,\" he shrugged and gave a rare smile, which was more just a quirk of his lips on one side. \"I let you and Matteo down once, it won't happen again,\" he assured her.\n\n\"I know,\" she said quietly. \"No one blames you; they had a look-alike for Hugh. You couldn't have known until you got into the car yourself and spoke to him.\"\n\n\"It won't happen again,\" he nodded and moved away from her then, and Cat smiled, having heard just a fraction of emotion enter his voice. Maybe he was human, after all, he'd almost smiled and had spoken to her like a regular person rather than some aristocratic employer to be protected and not interacted with.\n\nCat sat back, she had known things were going too well. Good things never happened to her, and even with all of the hiccups and sacrifices she had to make she still felt like the luckiest woman in the world to have the love of two men like Matteo and Ricco. She had known it couldn't last, and now she was sure of it. She had been dealing with madmen and crises of one description or another her whole life, she knew it would one day catch her in a situation she couldn't bluff her way out of.\n\nShe had dealt with her grandmother's death because her mother couldn't. She had dealt with the awful men and pimps that her mother brought home in her constant state of drunkenness or drug-induced stupors. She had dealt with her mother's death and the authorities who had tried to pull her and David apart, and she had dealt with the demands of Ned in return for giving her a place to stay where she could keep David close. She dealt with David ending up on the wrong side of the law far too often, and all of the thugs and pimps who hounded her until Frankie became involved with David.\n\nCat smiled as she thought of Frankie. She really should have made more time for him and his wife. She owed him so much. She sighed and thought of the latest madman to come into her life and threaten the people she loved. She knew what she had to do, and she had only one regret. Once again she placed her hand on her belly protectively. She was never meant to live happily ever after, and now that she finally accepted that, instead of constantly worrying that the men she loved would realise they had made a mistake in returning her love, she felt at peace. She would do what she needed to do to keep them all safe. She was stronger and more determined than they realised. She would protect David as well as this family that had accepted her and shown her so much love, despite the fact that she didn't belong in their world. She hoped Matteo and Ricco would forgive her one day.\n\n*****\n\nRicco was beginning to lose all patience with the men and women of the Tater. Whenever he questioned what they were doing on a remote ranch he was asked to trust them, but as he struggled to find a signal on his phone his trust in them was wearing thin. He struggled to maintain his normal easy-going friendly persona as the darker feelings began to rise with his anger. They were stranded and at the mercy of their hosts when people he cared about were in danger. Where he had thought that it was Vanessa and Theresa in danger, he knew now with certainty that Cat and Matteo were being drawn toward that danger. He wasn't sure how he knew it, but he would stake his life on it being true, which only made being at the mercy of the Tater even more maddening.\n\n\"Are you ready yet?\" Fawn asked from behind him.\n\n\"Me? Ready?\" he snarled at her. \"I have been ready since we landed!\"\n\n\"No, you haven't, but perhaps you are now,\" she said, ignoring his tone. \"We can wait longer if you need more time.\"\n\n\"Fuck!\" Ricco yelled at her. \"Are you fucking insane? The woman I love is flying to her doom, and you are holding me hostage here! I can't pretend to be okay with this anymore! Get me a friggin car and let me go!\"\n\n\"Where will you go?\" Fawn asked calmly.\n\n\"The ghost town! Giovanni wants Maria and will sacrifice Cat and Theresa both if he doesn't get her! It's not fucking rocket science to see what is happening here!\" Ricco was beyond angry now, his voice loud and full of rage as he spoke.\n\n\"When did you come to that conclusion?\" she asked, seemingly unconcerned by his rage which he focused on her. \"No one has been able to contact you to tell you what has occurred to your brother and his wife. Why would they be coming here to the Papillo family?\"\n\n\"I know it, I know they are here, or...\" he hesitated. \"Fuck, they are on their way here, or at least to the stronghold! I don't have time to fucking explain or argue with you!\" he fumed, and he moved threatening toward her. \"You get me the hell out of here or I will lose it! If anything happens to the people I love, you, and your whole family will regret it, I promise you!\"\n\n\"How do you know it?\" Fawn asked, then smiled, standing her ground as he loomed over her threateningly. She placed one hand on his chest and brought the other to his head. \"Where do you feel this?\" She asked in the same calm voice that was driving him insane.\n\n\"I feel it here!\" he lowered the hand on his chest down to his gut, and considered lowering it down to his balls just to wipe that smug smile off her face. He wanted to punish her for tormenting him like this. He needed to move, he needed to do something other than standing here and wait for god knows what before they would go to the Papillo stronghold and then to the ghost town. As if reading his mind, she lowered the hand from his head down to his balls and gripped with a snug hold, not tight enough to hurt him too much.\n\n\"You live your life as half a man. You hide your darker baser feelings behind a mask of an agreeable non-threatening persona. You wouldn't drop my hand this far, even though you know where your knowledge comes from and why you should trust it. Even the people you truly love have never seen all of you. Right now you feel love and hate in equal measure, despair and hope, lightness and your darkness, and you know what you know and feel to be true in a way you haven't before. Why? Because at this moment you are a whole man!\" Fawn emphasised the word man by squeezing his balls before releasing them.\n\nRicco had barely held back from cursing and pushing her roughly away from him. Sending a woman out to confront him and his anger had been a wise move on the Tater's behalf, because he would never put a hand on a woman without her permission, and never in such a rage as he currently felt. Instead, he stared at her with his hands clenched into fists at his sides as she manhandled him. He breathed heavily as he struggled to control his emotions enough to speak again, her words running through him with a ring of truth to them. He was saved from speaking again by several SUV's pulling out of a large garage, the lead car pulling up beside them.\n\n\"Ready to go?\" Sava asked.\n\n\"Yes!\" Ricco growled and reached for the handle to let himself into the car. \"Where's my father?\" he seethed.\n\n\"He, too, is again seeing with his inner eyes and travels with us,\" Sava said unconcernedly by Ricco's rage. Were he in the same position he would not be as contained as either Vitali man was, but then he had never held back his emotions the way these men did. \"He suffers greatly having to confront the woman he has always loved.\"\n\nThose words shocked Ricco. Had Stefano not gone to Maria when they had discovered her fate back in January? Roberto had taken him and Cobi, as well as Matteo. He hadn't considered that Stefano had refused to see her or where he had taken Theresa at the time. He now knew that Theresa had been taken to see Nik Donati, not his mother, and it had shaken her severely. Still, he could see the pain in his father's features at the time, and the misery on his face at the end of the plane ride, though he had mistaken it for concern for Roberto and Matteo. He hadn't understood it until Sava named it then. He thought of Cat and his anger at Matteo for bringing her into the great danger he could sense. He wondered if there was any crime that could erase his love for Cat. She may have married Matteo, but, if he was honest, his only real romantic love had been for her.\n\n\"They fly still,\" Ricco said as a statement rather than a question. He looked at his phone, wishing for a better signal as they drove along the dirt road in the middle of nowhere.\n\n\"They do,\" Sava answered, even though it wasn't necessary.\n\nAs if by the power of his thoughts alone, the phone came to life in his hand, several messages all filtering through the weak signal slowly. Most from the watchmen, he assumed; many from Cobi and Lucca, and several from Matteo and Cat. It seemed that the notifications went on for the longest time. He'd been out of range, and any information he had been given had come from these people, and he was eager to check those facts and what he knew in his gut with the real information that he could gain from Lucca and Zion.\n\n\"Would you question yourself now that you have finally found that true inner sight?\" Sava asked, glancing at the phone in Ricco's hands. \"Would you slip back into being the good twin and hide half of yourself behind your brothers? You will not help your mother or the woman you love by doing that,\" he warned.\n\nRicco did not look up from his phone, but as if with a new-found clarity he could see the truth of Sava's words. His whole life he had been the voice of reason, even with Cat and Matteo. He had put his desires aside growing up in favour of Cobi's desires and visions. He had played good cop to Cobi's bad cop in the efforts to take control of their siblings and hold a tacit leadership over them, all except Matteo, who had always been so self-assured and well-balanced. Even when Matteo withdrew largely from social life after losing Nik, he remained strong and confident with his dealings both in family and business. Cobi could never have found a way to command or demand anything from him. Ricco realised that now.\n\nThere had to be a reason Matteo would bring Cat here. He couldn't imagine Matteo would want her any closer to danger than he did. He concentrated on the thought and dug within himself. 'What would have brought Cat here?' he wondered. 'What did Giovanni have that could possibly make the risk to Cat and the baby worth it?'\n\n\"David!\" he hissed aloud. \"Fuck! Giovanni has David!\" He felt a cold hand clutch his heart as he realised Cat had and would continue to sacrifice herself for her brother. The only family she felt she had, despite giving lip service to himself and Matteo about being a Vitali. If Giovanni had David, she would not have meekly let Matteo leave her behind, nor, he realised, would Mateo have made her.",
        "\"Yes,\" Sava said gravely, nodding his head.\n\n\"I need to let my brother know I am here and working on the problems we face,\" he said finally, and called Cobi. Lucca and Zion may be leading, but Cobi was still his twin and knew him best.\n\n*****\n\nTheo Martino sighed heavily and faced his table and the remnants of the table of his father. While his father had been retained by the Chairs of the other families who remained in the fortress of the Battaglia, Theo had been released to gain control of his table and assist the Vitali in dealing with the crisis that was Giovanni, and, he suspected, Mario. The news that, after being called to present himself at the Battaglia fortress, Giovanni had kidnapped three, or possibly four of the Vitali family and flew to the Papillo stronghold with them, had been met with cries of outrage and accusations. In truth, Theo could not blame them, and had added his own outrage, though it was mostly against his father.\n\nHe had been true to his word when he had spoken to Matteo alone. He bore him and his family no ill-will, and if he had known that what followed was even a possibility he may not have obeyed his father so completely in the days that followed their first meeting alone. He knew any harm that came to the Vitali now would be laid not only at his father's feet but his, as well as each of the older members of his table who must have known what was happening.\n\nHe eyed Alfonzo, who for once seemed subdued within the group. He had thought to inherit the chair, but he was an arrogant man who would have dominated the table by brute force rather than lead them into the future as a united and democratic table. He narrowed eyes as he decided how to address what needed to be done.\n\n\"Did you know?\" Theo asked him directly. \"Did you help him, thinking to unseat my father and me?\" Several of the men at the table gasped and began to bluster at one of their own accusing another.\n\n\"Not how it would play out, but I knew he had a plan of his own to take his revenge on the Vitali,\" Alfonzo shrugged as if it was of no consequence.\n\n\"Anyone else eager for Giovanni to succeed? There has always been bad blood between the two families.\" Theo asked the group, and thinking he supported his father's deeds several spoke up.\n\nSitting to Theo's right side, Archie took note of each man. All were those who, like Alfonzo, wore their Savoy connections like a badge of honour to the point of hyphenating their family name to Savoy-Martino. It surprised neither of them to see three of the older men and their sons among the number.\n\n\"It's my understanding that there is little the Vitali can do to stave off the impending disaster, nor we the disaster of our own making, but I intend to try and mitigate the fall out for both families,\" Theo said, and looked up at the door. A dozen men of the Battaglia entered the room. \"Thank you, gentlemen,\" Theo said. \"Those who just identified themselves as sympathising with the attack on the Vitali will be able to help you with your investigations into the Suebi influence within our family, no doubt.\"\n\n\"You all recognise me as I recognise you, I assume! It would pay no one and only disgrace your family further to hinder our investigations into this crisis and the actions of the Suebi!\" Marcus' voice rose up over the shouts of outrage. \"If any of you have pertinent information, now is the time to speak, lest your family suffer the same fate as the Pellegrini, where their fortune and power have been usurped entirely in favour of more honourable men who do not turn a blind eye to the flouting of long-held Table laws!\"\n\n\"This is a serious moment, gentleman, and the fate of our family rests upon how you act at this moment. Do you wish our tables to be erased from history, or do you wish to rise above this crucial moment in our family's timeline?\" Theo said, his voice strong and determination in his voice. If Matteo ever forgave him, he would ensure there was never a reason to doubt himself or his family again. \"You may have the room, Marcus, the rest of us will reconvene at my offices where I will remain until you have a verdict on my part in this event.\"\n\n\"You and your brother, Archie, have answered our questions sufficiently and with candour,\" Marcus nodded. \"You may also take those that have already spoken with us.\"\n\n\"Thank you,\" Theo gathered his things and stood. \"Beware, brothers, the men of the Battaglia have been given full access to the watchmen and all their records. Giovanni was nothing, if not a fastidious record keeper. Even of his own subterfuge, it seems.\" He walked from the room followed by Archie and the few men who he had trusted enough to have questioned before the confrontation without telling the others what was occurring.\n\n\"I am sorry, Papa,\" Theo placed his hand on Bellino's shoulder. He had acted as Oracle beside Trevino for the last three decades and knew his and his brother's fates were now sealed. He was proud of the way Theo was behaving in the face of this disaster. He also knew this situation was a possibility, but had chosen to ignore his feelings in the face of all that had been done to create the crisis by the Vitali themselves.\n\n\"The fault is mine for believing what I wanted instead of what I knew to be true,\" Ballino sighed in resignation. \"I never believed it would come to this and the destruction of our family line.\"\n\n\"It may not come to that. Our future all hangs on how we lead now,\" Theo said seriously.\n\n\"I understand, and perhaps by the end you will be proud to be my son again,\" Bellino said sadly. He was as much at fault for Giovanni's mental state as Trevino was. He knew the consequences for openly attacking another family, and prepared to face the full force of the thirteenth, along with his brother for how they had handled the ticking timebomb that was Giovanni.\n\n*****\n\nLeyton Papillo stood with three of his brothers and two of the six members of the Tater who had approached him and Rick as they scrambled to make sense of what was happening and how to deal with it. The members of the Tater had walked calmly into their offices with Ricco and Stefano Vitali to take control of the crisis. He had been slow to trust, even with the Vitali men among their number, but Rick had eased his fears and worked with them on what they hoped would be a decent plan of attack rather than defence.\n\nHe watched as the first jet came in to land and prepared to face the madman, Giovanni. The plane taxied slowly toward the private hangers of the Papillo family. This was a small airfield used only by the family who lived in this remote part of the eastern Kimberly. Stairs were brought, and even after the door was opened nobody appeared at the doorway for long minutes.\n\nTheresa appeared in the doorway, eventually. The emotional woman being used as a shield by Giovanni, who held her tightly to his body and turned on the top platform of the stairs to address the small delegation.\n\n\"Giovanni,\" Leyton said stiffly. \"Let the others go and we will bring the woman you want to you instead of having anyone else hurt today.\"\n\n\"How long until Roberto and Matteo arrive to negotiate the exchange of one mother for another?\" Giovanni demanded.\n\n\"Forty-five minutes, give or take,\" Leyton said calmly, despite his unease at the sight of the gun held in the hand of the man he was facing.\n\n\"Refuel the plane!\" Giovanni demanded. \"If Matteo and Roberto bring what I have asked I will allow the brother and his friend to leave. I am a man of my word. However, if they do not bring what I have asked for and help me to retrieve what is mine, then I can hardly be expected to keep my end of the bargain. We will wait here for his arrival.\" He disappeared back into the plane, and the door closed again before Leyton could ask for proof of the condition of the other hostages.\n\nLeyton sighed, his eyes scanning the sky for a plane he knew wasn't there yet, and sent silent thoughts of luck to Ricco and his party, who had gone to retrieve Maria from the ghost town. There were secrets from all the families there, some as bad as Giovanni, most worse. Murder was the unforgivable sin that found most people incarcerated in the ghost town for the rest of their lives. Though that was not the only reason individuals found themselves abandoned by their families. No family was immune, not even his own, and he was not about to sanction a madman like Giovanni gaining access to such a facility.\n\n*****\n\n\"I don't want to see him,\" Maria said, wringing her hands. She had stood tall and proud in the face of her son's obvious anger when he walked into her room, believing this was another quest for answers as it had been when Roberto had brought him and his siblings in January. When she heard why he was here again, however, her bravado had crumbled.\n\n\"This isn't a choice for any of us, Maria!\" Ricco was still filled with impotent rage that this stupid, selfish woman thought she had a choice. \"He has the woman who raised me in your place when you wanted us all dead! He has, or will have, the woman I love, and he is coming here for you! If you think I won't sacrifice you the way you sacrificed Alessandro, and were prepared to sacrifice the rest of us, think again! I owe you nothing! I don't even know who you are!\"\n\n\"You don't understand,\" Maria began to sob.\n\n\"Here's what I do understand,\" Ricco snarled at the woman who gave birth to him. \"Your father and your brothers have catered to Giovanni's obsessions and demands for too long without getting him the help he needs, and now the woman I love, the woman Roberto loves, and many others, have to pay the price when it's you he wants! So, I am going to give him what he wants, just like you and your family always did!\"\n\nMaria tilted her head and sniffled. He spoke only of the woman Roberto loved when speaking of his stepmother. What of Stefano? She was about to ask when Stefano appeared in her doorway as if sensing his son's anger and despair for the woman he loved, and finally overcoming the fear of seeing Maria again in the flesh he had gone to his son's aid.\n\n\"Ricco, go and help with Sava's preparations,\" Stefano said icily, and moved into the room.\n\n\"Stefano,\" Maria breathed. She hadn't seen him since she had been taken away the day she had lost her mind. Any correspondence had come from Roberto, and when she had met her children in January Stefano had not been here that she knew of. His hair was grey at the temples, but still rich and dark. His height and physique still that of a fit man. His face still the one she knew so well, despite the lines of age. He was the man she had fallen in love with, except for the ice in his eyes and voice.\n\n\"Maria,\" he said, moving to sit in the chair facing her and staring as if looking at her for flaws, almost trying to marry his memory of her with the woman who sat before him with tear streaks on her cheeks. He breathed, she was the woman he had tried to hate, tried to put out of his mind and life. It was easier to convince himself of the lie of her death than sit here and face her and his heartbreak.\n\n\"I don't wish to see him,\" Maria said stiffly, referring to Giovanni, and saw the ice thaw momentarily in Stefano's eyes before they chilled again.\n\n\"Matteo is Chair now, and Ricco is his Oracle. Unlike our union, both of your sons love that woman deeply. Against all the odds, the constant pressures and interference that makes your life look like child's play, she loves them both equally in return,\" Stefano said, his voice warming as he spoke of the love affair of Catriona and his sons. \"Yet she travels here to sacrifice herself for the good of the family you would see destroyed for the second time. The woman I loved could not possibly be so selfish. This is your chance to redeem yourself in the eyes of your children. Tell me that you don't care if they ever forgive you and I will leave you to your fate.\"\n\nStefano placed a wedding photo of Matteo, Cat and Ricco on the table before Maria to look at. She picked it up, looking at it and stroking the face of Matteo, the son who had lived after she stabbed him in her manic hysteria. Giovanni had driven her to it, she had felt she had no choice, but, still, she was glad he lived and grew to be the man who would lead the family in the next generation of the table... Her son, not the son of the woman who took her place... Her son.\n\n\"She is one of the bravest women I have ever met, and will stand at Ricco and Matteo's side until her last breath. The least you can do is face the mistakes of the past that have brought the three of them to this moment in time where everything they have ever wanted could be taken from them,\" Stefano said calmly and reasonably, trying to appeal to what was left of her maternal side. He had heard Ricco in here shouting out his rage and knew that wouldn't work with Maria. No one had ever been able to bully her into anything except her brother and his obsessive mania.\n\n\"Tell me what I must do,\" Maria sighed in resignation, hearing the emotion in Stefano's voice as he spoke of his sons and the woman they loved.\n\n\"To begin with, telling me what transpired between you and Vanessa to make her put her brothers at such risk. Vanessa is travelling with Giovanni and doing his bidding, as you once did,\" he said, letting the weight of that disclosure sink in, and was pleased to see her horrified expression. He did not feel the need to inform her that Vanessa was engaged to Mario, Giovanni's son. \"It was she who told him that you were alive and living here. Why would she have done that against our wishes?\"\n\n\"Nothing that I didn't say to the boys or Mia. My regret and sadness at having not been able to see them grow up and be there for all of their milestones,\" she said honestly. \"I would never have encouraged her to go anywhere near the Martino's, especially not Giovanni.\"\n\n\"I believe you,\" Stefano said after a long silence in which he tried to sort out his emotions. \"I need you to dress and leave this place with me. If he is allowed to come here, there are others, true psychopaths who reside within this facility whose families could also be in danger if Giovanni and Mario do not get what they want. We cannot risk all the families because he continues to hate Roberto and me for taking you away from him.\"\n\nFawn appeared in the room then as if by magic, neither Stefano nor Maria having noticed her enter with the clothes and shoes she would wear to meet her brother and the two women who had taken her place as Mother of the Vitali. Maria stood nervously and nodded. She felt sick. She had lived this sheltered, protected existence for decades. To leave this place seemed like such a foreign concept. She felt tears fill her eyes again, and she couldn't name the feelings that filled her. Dread came the closest emotion to anything she could name. This was a prison, she knew, but there were far less appealing things than remaining here for the rest of her life.\n\n\"Stefano?\" she turned back toward him. \"Why not call the authorities and have them deal with the kidnapping and threats?\"\n\n\"Would you have us expose the Papillo to the scrutiny of the authorities, or this place be searched for and found by the Suebi? There are far worse people than you living their lives here. You are a ghost, Maria. We could deny your existence, point out that you died decades ago, but once this information becomes public, enemies of the tables will take advantage of that information. As it is, Giovanni has been working with the Suebi to undermine our family. The Suebi just didn't realise what his end goal was, or at least we hope that is the case. Either way, we can't have him come here,\" Stefano said. \"Ricco and I were out of communication and untraceable when he made his move, so we have come here to bring you to him instead of allowing him to unmask a secret of the tables.\"\n\nMaria nodded and went to change, considering what he had said. Life outside was different now, she knew that. The internet and mobile phone had changed the world, made It smaller, she wasn't an idiot, and although she wasn't able to access any of the new technologies, she could understand what she saw and heard about on the television. The thought of leaving this place where she was safe and cared for her terrified her. The thought of seeing Giovanni scared her, but the thought that if she didn't, she could be condemning her children to a life of pain and heartache for the second time, terrified her even more.\n\nShe dressed carefully, and with Fawn's help did her make-up for the first time in forever. When she emerged from her room to face Stefano again, there was a brief look of recognition and fire before the ice glazed over his features again. She gave a small smile. Those small flashes of emotion told her that he still loved her on some level, and it somehow made her stronger, maybe even a little braver. She had always believed his refusal to communicate with her from the time she had been taken to Paolo's surgery to deliver Vanessa after trying to kill her unborn daughter had equated to hatred. She knew now she had been wrong, and that alone gave her the impetus she needed to leave this place and face her past.\n\n\"Who chose the new mother?\" she asked.\n\n\"Matteo, I have never seen a man more in love,\" Stefano answered with a smile. \"Although Ricco comes close.\"\n\n\"The mother of your children?\" she clarified.\n\n\"We agreed that Theresa was strong enough to live with the stigma of becoming stepmother to five unhappy children and a table of strong-willed men,\" Stefano said, frowning. \"She is a good woman, Maria, and I do not want to see her hurt by this, or having to deal with any jealousy on your part.\"\n\nNot once did he mention love or even affection, and Maria considered if Roberto had felt the same way about her. That she had the attributes required to be the mother they needed and was content that Stefano loved her enough for both of them. She and Stefano had a great love, in the beginning. Marrying Roberto was necessary to ensure her escape from her family and keeping the love and security she had found in Stefano.\n\n\"Matteo would not have let Cat marry Ricco to keep her, despite his willingness to share her affection now. He threatened to leave the family rather than see her walk down the aisle to his brother. It is perhaps what I should have done but couldn't,\" he mused. \"You married Roberto anyway, so it is a moot point now, and you will see your husband at the airport if we make it in time. Come, let's go.\"\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "plane",
        "brothers",
        "fathers",
        "family"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-33"
}