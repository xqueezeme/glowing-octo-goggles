{
    "title": "A Grad School Night Out",
    "pages": [
        "This is my first time writing erotica, so please let me know what you think! If it's not too terrible I'll try to write more!\n\nMy phone buzzed in my pocket as the professor droned on about the significance of John Soane's work within architectural history. I pulled my phone halfway from my pocket glancing at the screen to see a text message from Natalie. I pulled my phone discretely into my lap and opened the text, \"Hey! I have a favor to ask, any chance I might be able to crash with you in 2 weeks for a night?\" I tapped out a quick \"Absolutely! To what do I owe the surprise visit?\" and turned back to the slide of the Bank of England building at the front of the room and waited for a reply. \"Thanks!! I'm going down to Florida on vacation with some people and my broke ass can't afford a plane ticket so I'm driving solo and you'd be the perfect stopping point to crash for the night. And of course I'd love to catch up...wouldn't want you to think I'm just using you for your couch\" I found myself wondering how she could afford the vacation but not the flight before remembering Natalie was pretty frugal and was likely driving just to save the money even if she could afford it, but who was I to deny a gorgeous friend a spot to sleep? I told her to let me know when she thought she'd be getting in to town and leaving the next day and slid my phone back into my pocket.\n\nNatalie and I had both gotten our bachelor's degrees in architecture together a year and a half ago and kept in touch through texting and seeing one another at random mutual friends' weddings. We hadn't been super close but definitely spent plenty of time together during our undergrad years. Since graduation I had moved on to grad school while she transitioned into a business career having not liked architecture as much as she had hoped. Even in the college environment where beautiful women were plentiful, Natalie had stood out; she worked out almost daily and knew how to walk that fine line of being in perfect shape but never getting too muscular. She stood about 5'8\" with long toned legs that ended at a tight sculpted ass, a flat stomach that she often showed off with crop tops on nights out, and a set of B to C cup breasts that seemed too perky to be real. She had a body to die for but her face was what put her over the top. \n\nShe had a radiant smile, beautiful blue eyes, and dirty blonde hair that cascaded around her shoulders. Her complexion was flawless, her cheekbones perfect, and a small cute button nose that she would crinkle up when she laughed really hard. All in all, she was gorgeous. Our friendship could only be the result of our having been in so many classes together; I'm not a bad looking guy, 6'2\" in decent shape but not overly muscled with blue eyes and brown hair, but at no point in my life had I been welcomed into a group of stunning women before Natalie had started inviting me and some other architecture people out with her sorority sisters. Either way, there was never any misconception that this was a friendship and nothing more, I was there because I was moderately intelligent, I occasionally made her laugh and I would buy her a drink every now and then.\n\nTwo weeks went by and Natalie had let me know she'd be arriving just before 7. We made plans to grab dinner and go out \"like the old college days\" with some of my friends. I had warned my friends that week that she was gorgeous and showed them some pictures and had to endure the typical \"damn dude! Look who's getting lucky this weekend!!\" I reassured them that nothing was happening and we were just friends but to no avail. It got so bad that my two roommates said they would stay at their girlfriend's places to give us all the space we would need. I tried to convince them to stay at our place so Natalie wouldn't think I had planned it all out to get her alone but they wouldn't heed any of my pleas.\n\nNatalie called me as she pulled in to make sure she was at the right place and I went out to greet her. She hopped out of the car wearing capris length yoga pants and a loose fitting blouse. God damn I had forgotten how good she looked. She walked up, smile beaming, and we hugged hello. We made small talk about how her drive went and her vacation as I helped her carry her stuff inside. She asked what the plan was for dinner and I told her we were going to be meeting some friends around 7:30 and then hit a few bars for the rest of the night. \"Sounds great! Any chance I can grab a shower and change before we head to dinner?\" She asked. \"Sure, we just need to leave in about half an hour so if you can manage in that time, go for it.\" I showed her where the bathroom was, gave her a towel, and left her to it. I went to my room and changed into some jeans and a V-neck t-shirt while texting my buddies back and forth, still trying to convince them nothing would happen. As I was grabbing my shoes I heard the bathroom door open and the creak of the floor as she walked down the hall. I looked up to see Natalie wrapped in a towel that wasn't near long enough, standing in my bedroom doorway, the towel hiding hardly any of her long glistening legs. \"Just need to grab some clothes and we'll be ready to go!\" She said walking over to where her bag was sitting on the floor. She crouched down, unzipped her bag and started rummaging around for something to wear. I told her I'd let her get dressed and made a move to leave. \n\nBefore I could close the door Natalie stopped me, \"Wait! What are the places like that we're going to? Like what should I wear? Casual? Dressy? Sexy?.....or are we hitting the shitty undergrad bars and I need something slutty to fit in?\" \n\n\"Haha, no, no shitty undergrad bars, we won't be losing any shoes to sticky floors tonight. You could go casual or dressy, there will be a solid mix of both where we're going. Although nobody would protest in the slightest if you decided to go sexy or slutty.\" \n\n\"Oh I'm sure they wouldn't,\" she retorted, \"but ok, which one would be better?\" She said as she stood up pulling two dresses out of her bag and holding them up next to her. One was your classic little black dress, spaghetti straps, v-cut neckline, and a hem line that fell about mid-thigh. Yes, that would be wonderful to sit next to all night. The other however, was a summer sun dress, white with small dark blue polka dots, scoop neckline, and a loose fitting skirt that fell just above the knee. I'm a sucker for a sun dress so I faked a little indecision before pointing at the white one.\n\n\"Oh, are we going dancing? That could play a role in things.\"\n\n\"I don't know, would you like to?\"\n\n\"Absolutely! I haven't been dancing since undergrad! Ok that changes things a bit.\" She held the two dresses back up and asked, \"Which dress do you think I'd be sexier in.\"\n\n\"Haha so dancing now changes things from what would work for the bar to what's sexier?\"\n\n\"Well...yeah. If I don't feel sexy I'm certainly not going to feel great grinding all up on you.\" My dick twitched in my pants at the thought of her ass grinding into me and made me pause for a second.\n\n\"Then shouldn't you pick what dress would make you feel sexiest rather than me?\"\n\n\"Well I'll be dancing with you all night right? And I'd feel sexy knowing you think I look sexy...don't debate it, it's just a girl thing. So which dress?\"\n\n\"I may have undersold how much I appreciate the white one before...still the white one.\"\n\nShe broke into a big grin, \"You like it that much huh? Good to know. Ok shoes, which ones?\" She tossed a pair of brown wedge sandals with a shorter heel out of her bag, some dark blue flats, and a white pair of taller heels. \n\n\"For comfort, the flats obviously. If you're still looking for sexy, the sandals.\"\n\n\"Good choice. I love those.\" She said tossing all but the sandals back into her bag.\n\n\"Anything else you need help with? Jewelry? Underwear? Major life decisions?\"\n\n\"Haha, Depends I guess. How sexy do you want me to feel?\" A mischievous and daring grin falling across her face.\n\n\"Ooo that's a dangerous question. Dare I say as sexy as possible? Or would the more politically correct answer be 'as sexy as you choose to feel?'\"\n\n\"Screw political correctness, that's no fun. So...let's see...\" She bent over to rummage through her luggage again only this time she didn't crouch as she had before. As she bent over the towel pulled up and revealed to me the underside of her gorgeous ass and a slight glimpse of her pussy. A sight I never imagined I would see, and it was better than I ever would have hoped. Her ass was smooth and tight with the perfect plumpness. As she bent further her cheeks spread ever so slightly giving me a glance at her tightly puckered asshole. My dick strained my boxer briefs, growing down one leg, thank god they kept it from pitching a tent. I gawked for a moment before regaining my composure and averting my eyes. \"Uhh Nat...you're peeking out of your towel a bit, just FYI\"\n\nShe glanced down at her chest first, checking to make sure she didn't have a nipple peeking out the top of the towel before realizing what I meant and turning bright red. \"Oh...sorry...haha usually guys have to buy me dinner and a drink before they get that kind of peep show\" she laughed nervously.\n\n\"Well shit, I've bought you plenty of drinks and never gotten close to a peep show before!\"\n\n\"Yeah well see, you forgot to buy dinner, that's where you went wrong.\"\n\n\"Ah, devil is in the details. Well I was going to buy you dinner tonight anyway so we'll just say I got my peep show early\"\n\n\"Oh you don't have to do that! I should be buying you dinner for letting me crash here!\"\n\n\"No trouble at all, and even you said you're driving because you're broke, so let a guy buy you dinner if he wants to.\"\n\n\"Fine but I'm at least getting a round of drinks.\"\n\n\"Fair enough.\"\n\n\"Ok back to clothes...not that clothes matter now since you've basically seen everything. I believe we were going with 'as sexy as possible' as your answer? So if that's what we're shooting for...which is sexier?\" She said, holding up a lacey strapless white bra and matching thong in one hand, and a plain white strapless bra and light pink thong with a small white bow on the front. \"The plain white one is a push-up...so ya know...shows the girls off a little more.\"\n\n\"Jesus...I'm not sure you need the help showing the girls off, but....fuck I don't know. Can't say I've ever been in the position of picking out a friend's lingerie before.\"\n\n\"Haha aww don't I feel special,\" she said mockingly, \"I'd show you more but with a white dress the options are a little limited. So...which one do you want to dance with tonight?\" She pried, eyes twinkling; she knew how much of a tease she was being for sure. This was turning into one hell of a night already and it wasn't even 7:30.\n\n\"If I must choose, I'm not a huge lace guy, give me sleek and simple any day. Maybe that's the modern architecture coming through a little too much, but I'll go with the pink and white.\"\n\n\"Haha you nerd. Ok I think that's all I need you for. For now at least.\" She teased and shooed me out the door.\n\nI went and crashed on the couch, completely baffled by what had just happened. Did I seriously just pick out Natalie's entire outfit, lingerie and all? Natalie's....of all people, the hottest most unachievable woman I'd ever had the pleasure of knowing. That was the most surreal 10 minutes of my life, but it was over now. I shook myself out of my daze and settled back into reality where I knew we would go out to dinner, joke, have fun, she'd be a little flirty per usual, we may dance a bit, and then we'd come home and we'd go to bed with her in my room and me on the couch exactly as it was meant to be. I let out a sigh and stood up as I heard the door to my room open. \n\nBouncing around the corner from the hallway came Nat, looking drop dead gorgeous as anticipated. \"Everything to your liking?\" She asked\n\n\"Better than advertised. Ready for date night?\" I asked, sounding far more confident than I felt with such a leading question.\n\nHer eyes widened slightly as she smiled back at me, \"Oh so it's date night now huh? Jeez, you flash a guy a little ass and all the sudden you're dating, what happened to keeping things casual?\" She teased.\n\n\"Well pardon me, but we gentlemen don't believe in catching a little ass and then kicking it to the curb. We believe in dates and etiquette; pulling out chairs, opening doors, and walking a lady home at the end of the night.....in the hope that she'll let us be the piece of shit we actually are for the rest of the night.\"\n\n\"Hahaha, I doubt you could convince me you're a piece of shit. I've seen too much to the contrary.\"\n\n\"Haha thanks. Well, shall we?\" I asked, offering her my arm.\n\n\"Gladly\" she said, grabbing my arm with both hands and grinning ear to ear. If I wasn't careful, I might think she had a thing for me with a smile like that.\n\nWe walked down the sidewalk toward the main hub of campus chatting about school and how work had been, making jokes at each other's expense and having a good time. As we approached the restaurant the conversation lulled and she leaned against me resting her head against my shoulder as we walked along. It felt exhilarating walking down the street with Nat on my arm, people looking at her, looking at me, then back at her. I even made eye contact with a few guys who gave me a nod and look as if to say \"wow....well done, how'd you manage that?\"\n\nWe arrived at the restaurant and met up with my friends. Dinner was loud and full of laughing and prying questions for Nat. She took them all in stride and joked along. Towards the end of dinner I brought up plans for the rest of the night, \"So where does everyone want to go? Natalie requests a place with dancing if possible.\" A few of the girls chimed in excitedly that they wanted dancing as well. A few guys groaned but acquiesced. We set a schedule for a few nice bars that grad students frequented before heading to a spot with a large and often busy dance floor later in the evening. We got our checks and I had to listen to the jeers from my friends as I told the waiter to put Nat's dinner and drinks on mine. She brushed them off by saying she was buying drinks later, but I still got a few winks from the guys.\n\nAfter the first bar I could tell Nat was feeling the effects of the margaritas at dinner and a few of the vodka cranberries she'd had at the first stop. She sat closer to me, leaned in to whisper things in my ear more frequently, clinged to my arm a little more as she laughed at things I said, and at one point her hand found itself resting on my leg. It was all great, but I had to keep telling myself it wasn't real. I'd known her for six years and she'd been flirty before; never like this, but we'd never been out just the two of us before either so I assumed all her attention was directed at me because I was the only one she knew. \n\nAs we walked to the second bar, taking our time as we walked behind the group, she clung to my arm, her head on my shoulder. \"You doing ok?\" I asked.\n\n\"Fantastic.\" She replied, \"This is nice. I missed hanging out with you.\"\n\n\"Missed you too.\" I said, and with a slightly bold move, I took her hand in mine and kissed the back of it. \n\nShe locked eyes with me, squeezed my hand tight, and smiled, \"Oh you're going to be a problem for me aren't you?\"\n\n\"A problem? Me? Never.\" I teased, \"Besides, I would never want to bother you.\"\n\n\"Too late. You've got me all kinds of bothered,\" she chided, \"It's ok though, you're a good kind of bothersome.\" She said, returning her head to my shoulder.\n\n\"Whatever that means.\" I responded, trying to pry a little more out of her before I went making huge assumptions and getting myself into a world of trouble.\n\n\"That means, Mr. Gentleman, if you walk me home tonight, I might just let you show me...what was it? What a piece of shit you really are?\"\n\n\"Haha oh now you're getting really dangerous because I'd say you're getting a little too tipsy to be making decisions like that and I wouldn't want you regretting anything,\" I cautioned.\n\n\"Regretting anything? I've only thought about it for the past three weeks. I'd say if I was going to regret it I would have come to that conclusion a while ago.\"\n\n\"Three weeks?! You only texted me about staying 2 weeks ago.\"\n\n\"Well...I didn't know if I had the guts to ask you when my cousin goes here too and I could have easily stayed with her instead. But I did, and now I'm here, and I'm glad I did, so don't think I'm regretting a thing. Nor will I regret anything else that happens.\"\n\nI couldn't hear myself think my heart was pounding so fast, I couldn't believe what I was hearing. She came just for me. She wanted me. She wanted all of me. I spun her in front of me, wrapped one arm around her waist, my other hand cradled her neck, and I kissed her. I felt electricity run through me as she kissed me back. It was passionate, but also an intense desperate sort of kiss, something that had a lot of time building up behind it. I finally let her go, slowly opening my eyes to see her staring back with a soft, adorable sort of embarrassment.\n\n\"What?\" I asked\n\n\"I don't know...I just kind of realized how desperate what I just said sounded.\"\n\n\"Haha well I wouldn't worry about it considering it took that act of desperation and more for me to realize what you thought.\" I said as we began walking after the others who thankfully hadn't seen any of the kiss. It would have been unbearable if they had.\n\nWe got to the next bar, both of us giddy as could be and joined in everyone else's conversation as we caught each other's eye periodically and smiled knowingly. I still couldn't believe this was happening but I definitely didn't want to wake up. \n\n\"I can't wait to get you alone, but I also can't wait to get you dancing. I don't think we've ever danced together!\" Nat whispered in my ear\n\n\"No we definitely haven't, I would have remembered that for sure.\" I responded\n\n\"Mmm get you all up on me before you get all up in me\" she cooed\n\n\"Be careful or you'll have me pitching a tent in the middle of the bar.\" I laughed\n\n\"Oh really? Well I'll just wait for when we're dancing to tell you all the things I want you to do to me so I can feel that tent being pitched while I grind my ass against it.\"\n\nDamn did she know how to get my mind racing. Now I was missing half of every conversation because I kept drifting off to think about what she would possibly say later, and god help me if I thought about what we might actually do later.\n\nFinally someone roused everyone from their chairs to get us all moving towards the final stop for dancing. We walked to the next bar arm in arm, stealing glances at one another but never saying anything, the glances said everything we needed to know.\n\nWe showed our IDs at the door and walked into the loud thumping music. The bar was packed with people 2 and 3 deep trying to get a drink, and the hope of getting a table was nonexistent. One of the girls led the way as we all wove our way through the crowd over to a small tucked away corner where there was a bar ledge mounted to the wall. Over the pumping music I heard someone yell \"shots then dancing?\" Everyone nodded and a few people left towards the bar to get a round of shots. As we stood watching everyone in the bar talking, flirting, and dancing Nat started swaying to the music, her hips twisting and flowing to the beat smoothly as her dress fluttered around her. The other girls started doing the same, not really dancing but feeling the music and letting their bodies move subtly as we waited for our drinks. The guys all stood completely still, watching the women throughout the bar gyrating and moving seductively against other guys and girls, lost in the music and the eroticism in the air.\n\nEventually the few that had left returned with handfuls of shots. We all raised our glasses to one another silently and downed them. The guys had barely set their glasses on the bar rail before the girls had paired off with them, grabbing their hands and towing them out into the throngs of people. I turned to find Nat staring at me seductively. She held out her hand and I let her lead me out into the masses in a direction opposite where the rest of our group had gone. I called over the music that they had gone the other way, but she either didn't hear me or didn't care and proceeded into the crowd until we were in the middle of everything. She turned around, smiled and leaned up close to my ear \"I know they went the other way, but I'd rather they not see how I plan on dancing with you.\"",
        "With that, she turned her back to me, wrapped her arm up over her shoulder and around my neck, pushed her body back against mine, and began grinding her ass back into my groin to the beat of the music. It didn't take long for me to be rock hard, straining against my jeans and pressing against her ass. I knew she could feel it, and she just kept grinding, changing her motions from side to side to up and down and in circles at times, it was almost as if she was trying to jack me off through my jeans using only her ass. She moved seductively and smooth to every bass pumping song, falling into time with every beat as the DJ orchestrated the flow of the music. My hands rested on her hips and I moved with her, keeping my now throbbing cock lodged between the cheeks of her ass. Her hands fell on top of mine and she began guiding them around her body. Down her legs as she dropped low for a beat, up over her stomach to clutch her breasts and back down again. \n\nShe pulled my head down to her, \"I want your hands on me. I want to know you want me. I'm yours, however you wish. Talk to me, tell me everything you want.\"\n\nShe let my hands roam her body wherever I pleased. I felt every curve I could get my hands on as I scrambled for the words that could explain how badly I wanted to carry this gorgeous woman off the dance floor that very minute and rush back to my place. \"I want to do everything to you. I want to make you squirm and moan as much as I possibly can. No matter what you want me to do to your perfect body, I'll do it without hesitation, all you need is to ask. All I want is to make you the most satisfied woman you could possibly be by the time we fall asleep tonight.\"\n\nShe turned to face me for the first time, hooked her hand around my neck, and leaned back, thrusting her perfect chest out towards me while she continued to grind into me from the waist down. She whipped her hair around like a stripper on a pole before pulling her body against mine. I could feel her breasts against me and her nipples prodding through her dress as she leaned up to my ear, \"if you really mean that, I've been fantasizing about all the ways I could have you for quite a while. Care to check a few off the list?\"\n\n\"Absolutely. Want to share what on your list gets you off the hardest?\" I asked as she ground her pussy into my thigh especially forcefully.\n\n\"The hardest is nothing special, just the idea of you on top of me slipping into my pussy is about enough to make me cum all over your leg right here. But after that...well, then I guess I get a little kinkier in my desires.\"\n\n\"Well why don't you turn back around, grind that ass into me a little more, and we'll see if we can't make you cum right here while you tell me all about your kinky side?\"\n\nShe gave me a lustful look as she turned back around and resumed her position in front of me. I adjusted myself discretely in my jeans as I was harder than I'd ever been, and nestled back into her ass as she worked back into me. My hands cupped her chest for a moment before dropping down over her stomach, pushing the fabric of her dress slightly between her legs. I felt my hand move over the edge of her thong, felt the small bow that was on the front of it beneath my fingers, and then dove lower to where I knew her clit would be. I didn't have to guess much as her hand tightened around my thigh as I brushed over it.\n\n\"Now, what sort of kinky things do you have in mind after I fuck your pussy for the first time?\" I asked as I began to massage her clit through her dress.\n\nHer eyes had closed and her lips parted slightly as she breathed heavily. Even with all of the people around us, no one paid us any attention as we were all so crammed together it was difficult to see what anyone around you was doing other than bumping into one another occasionally. The music masked our conversation as Nat began to tell me about a side of her I never would have guessed existed, \"my god you're going to make me cum quick. I...I want you to bend me over and...and take me from behind. I want you to pound my pussy while you....while you...oh my god...while you finger my ass. I want you to cum in my mouth so I can...I'm going to cum...oh my god...oh my god,\" she threw her head back against my chest and I felt her knees clench together while her legs shook slightly. Her grinding against me slowed slightly and fell out of time with the music for a moment as she rode out her orgasm. Once she recovered, she turned to face me, lust in her eyes, \"I've never wanted anyone so bad in my life. I want you to own me like no one else has. I want you to fill all three of my holes with cum before the night is through. We need to leave right now.\"\n\nWith that, she dragged me out of the bar with an absolutely dumbfounded look on my face. Once we got outside and started walking down the street, I finally regained some composure and asked \"While we walk...few questions...where did all of this come from? How long have you felt this way? And did you say what I think you said back there?\"\n\nShe all of the sudden became sheepish. The girl who had just been talking dirty and telling me she wanted to be filled with my cum had left the bar and instantly become a shy seemingly innocent woman. \"Oh, I don't know...I guess it started that night senior year when I got really drunk. I had always thought you were hot but never really considered us as a possible thing until then.\"\n\n\"Wait, what night?\" I asked, mentally doing summersaults at the fact she thought I was hot.\n\n\"When I got super drunk at the bar and you stopped me from drinking more and literally carried me back to the house and put me in bed. That was really sweet, but then to come back the next morning and bring me breakfast because you knew I wouldn't want to get out of bed? That's when I sort of started seeing you differently and started noticing all the nice things you do, how much you make me laugh and smile, and how I've never felt bad when you're around even if I was having a crappy day before I saw you. So...yeah...when things were sucking at my job before I just kept thinking how much I wished you were there. If I hadn't had a really terrible week of work I may not have asked to stay with you but after that week I just needed you to make me feel better, and well, here I am....and I'm happy.\"\n\n\"Wow....I never would have guessed, but I'm glad you're happy.\" I said, pulling her into a sort of side hug as we walked along, \"I'm happy too. Now...about that dancing session...\"\n\nShe grinned mischievously, letting some of that girl I saw in the bar back out, \"Yeah...what about that? Definitely the first time I've cum in public. That was fun. But maybe not as fun as the rest of the night. And to answer your question, \" she took my hand and lifted it to her mouth, \"I want you to cum here,\" she said as she slipped one of my fingers into her mouth, \"here...\" dropping my hand down over her chest and making my palm cup her pussy, \"and here\" she finished, sliding my hand back over her ass.\"\n\n\"That's what I thought you said. You're just full of fun surprises for me tonight aren't you?\" I responded, feeling completely baffled. She had kept my mind reeling almost since the moment she had arrived.\n\n\"What? Surprised I have a kinky side?\" Nat said nonchalantly.\n\n\"I mean I'd never really thought about it, but I would have thought your kinky side would have been something...I don't know, not sure what, but I wouldn't have guessed this\"\n\n\"Well, to be clear, I've never explored my kinky side much outside of by myself.\"\n\n\"So...by that you mean?\"\n\n\"Don't worry, I'll show you.\" She said teasingly as we arrived at my place. I unlocked the door, opened it for Nat, and chased her inside. No sooner had the door closed and her lips were on mine.\n\nWe made out furiously, our hands all over one another as we pin balled our way down the hallway to the bedroom, me shedding my shirt and shoes, her kicking off her shoes and unzipping her dress. As we got into the bedroom I pushed her dress to the ground and stood back to take her all in. I had picked her underwear but to actually see them on her was an entirely different thing. I could see the outline of her pussy through her thong as it clung to her after having been soaked through. She was clearly shaved bare beneath and there wasn't a trace of hair on her body below her neck, nothing but smooth toned skin to run my hands over. Her nipples pushed against the fabric of her bra as her chest heaved along with her breathing. She was stunning. \n\nShe fell back on the bed and motioned for me to join her. I climbed onto the bed and crawled up her body, kissing her stomach, between her breasts, up the side of her neck, and then to her lips. Her hands clutched at my back pulling me against her and searching for every bit of me she could reach. Her desire and complete desperation in the moment was one of the hottest things I've ever experienced. She eventually unbuttoned my pants and pushed them down my legs, helping me kick them off. I unhooked her bra and she quickly tossed it aside. I had but a moment to glimpse the perfect breasts that were uncovered before me for the first time, taking in her small quarter sized areolas with her hard protruding nipples before she pulled me back against her. I kissed her neck, down over her collar bone to her chest where I circled her nipple with my tongue before taking it in my mouth, gently sucking it. Nat moaned softly, her hands running through my hair. I did the same to the other breast before kissing my way lower. When I reached the edge of her thong I hooked my fingers under it and started inching it down. Nat responded and lifted her hips, allowing me to pull it off completely. Her beautiful naked body laid out before me, I took a moment to soak it all in.\n\n\"You are absolutely gorgeous.\" I said as I spread her knees and climbed between them.\n\nAs she started to respond her breath caught and a low moan escaped her lips as my tongue flicked gently over her clit. It didn't take long for me to get her hips writhing and her body squirming as I ran my tongue up her slit, tasting her sweet juices before circling her clit and diving back down for another lap. I slid a finger inside of her as I moved my tongue to focus more on her clit and heard a gasp as I brushed her gspot. As I began sawing first one, then two fingers inside of her, Nat began to talk to me through gasps and moans, \"oh my god....so good...holy shit...yes, oh right there, shit you're good at this....know...oh god...know all my spots...\" and just when I thought she might be close to cumming I decided to use what she had said earlier against her; I took a third finger, now completely covered in her juices, and in a smooth motion slid it up her ass to the second knuckle. \"Oh...I'm...I'm cumming\" she cried as her hips lifted off of the bed, her knees squeezed my head, and her orgasm overtook her. As she came I thrust all three fingers in and out of her holes while sucking on her clit. I could feel her whole body contracting around my fingers, squeezing them tighter and tighter. As her orgasm subsided I slowed my thrusting until I eventually pulled out completely. I wiped my mouth off, having been flooded with the rush of her orgasm, and climbed my way back up her body. \n\n\"Holy fuck. That was amazing. You can do that any time you want and you'll never hear a word of protest from me.\"\n\nI grinned ear to ear having enjoyed it probably as much as she had, \"well I'm here to satisfy, and I'm glad you enjoyed it.\"\n\n\"I'm not completely satisfied yet.\" She retorted as she started pushing my boxer briefs down. My cock sprung from the waist band, bobbing up and hitting my stomach. I'm by no means a monster but I do ok at 6.5\" and a solid girth. Nat took my dick in her hand and started slowly pumping, \"oh I think this will fill me nicely,\" she commented as she swung her leg over me. \n\nShe sat up and aligned my cock with her pussy and began slowly lowering herself onto it. It was almost enough to make me cum on sight. Once she was about a third of the way down she began rocking up and down the length of my dick, slowly taking in more and more of it. Her breasts bounced with the rhythm and I had to think of something, anything else to not cum too quickly. She eventually bottomed out and ground her pelvis into my groin, pushing me as deep as I could go. \"Oh my god...\" she said as she placed both of her hands on my chest and began to ride me, \"you have no idea how long I've wanted this.\"\n\n\"Then why don't you just shut up and enjoy it\" I responded, matching her pace and meeting her rhythm with thrusts of my own.\n\nShe smile devilishly, \"you may not want me to shut up, I like dirty talk, it gets me all kinds of riled up.\"\n\n\"Oh really? You like it when someone tells you that they're going to roll you over and fuck you how you've been wanting? And how after he coats the inside of your pussy with cum, he's going to fuck your mouth and your ass just how you asked?\"\n\nNat let out a soft moan and closed her eyes for a moment, \"yes...yes I do like it, and I'm going to enjoy every last minute of it.\"\n\nAs she finished her comment I rolled her over onto her back, pushed her knees back towards her head while I knelt between her legs, and slipped back inside of her. \"Oh that's deep...oh fuck....mmmm yes, fuck me hard. Take me baby.\"\n\nI began slowly thrusting in and out of Natalie's pussy, building up speed as I went. I massaged her clit with my thumb which elicited a long moan. Eventually I was fucking her with long hard strokes which made her breath heavily in time to my rhythm. It wasn't long before the sight of this gorgeous woman below me had me on the verge of cumming. \"I'm so close,\" I told her, \"do you want me to pull out?\" I asked, giving her a last chance to go back on her cumming in all three holes comment.\n\n\"I have an IUD, paint my pussy white like I asked for,\" she responded.\n\nWith that I felt my balls tighten and my dick began to shoot inside of her. Nat's hand dropped to her pussy and began furiously massaging her clit, \"oh my god don't stop fucking me, I can feel you cumming. Oh shit, oh shit...\" and with that I felt her pussy clench around my cock and begin milking me of every last drop of cum that I had. With a final spurt, I thrust my dick as deep inside of her as I could and left it there, feeling her contracting around me, riding out her orgasm.\n\nShe finally opened her clenched eyes and I collapsed on the bed next to her. \n\n\"That was better than what I imagined it would be. Holy shit.\"\n\n\"And to think...if plans hold true, we're only 1/3 done with the night.\"\n\nShe smiled, \"I know! Speaking of the other 2/3, I need to grab a couple things for part 3.\" She rolled out of bed and unzipped a portion of her bag and pulled out a large ziploc bag. When she turned back to climb into bed, I could see a bottle of lube, a vibrator, and 4 butt plugs of increasing size, the largest of which was slightly shorter in length than my cock but a little wider. \"So...when I said I've mostly been doing my kinky side solo, I meant it's pretty much been only toys in my ass up to this point.\"\n\n\"Ok, and by toys you mean up to which one of these?\" I asked, curious if she had taken them all or if there was still a lot of work to be done before my cock was going to fit.\n\n\"I've had the first 2 in, but the 3rd I think I could take when really turned on.\" She responded.\n\n\"And you want me to be the first other than toys? Are you sure?\"\n\n\"I'm absolutely certain. I couldn't possibly think of anyone I'd be more comfortable with.\"\n\n\"Well good,\" I smiled, \"so how often have you played with these?\"\n\nNat turned slightly red, \"Umm...a lot....like...I don't know...almost every day for a while. I wasn't worried about increasing in size for a long time because I was cumming so hard from the smallest one but over the past 2 weeks I started trying to work the bigger ones in...ya know...to prepare for the possibility of this. I actually had the 2nd one in the whole way down until I took a shower.\"\n\n\"You mean...when I hugged you when you got out of the car you had a butt plug in?!\" I asked shocked.\n\n\"Mhmm.\" She responded casually, \"So, ready for round 2? I want to suck you while you play with my ass and get me ready for round 3 sort of 69 style.\"\n\n\"You don't have to ask me twice,\" I said as I pulled her in for a long deep kiss.\n\nNat swung her leg over me and assumed the 69 position. The sight of her pussy hovering over me and her asshole just above it just wanting to be played with was unbelievable. I felt her hands running up my thighs then cupping and kneading my balls as her tongue began to flick over the head of my dick. She knew what she was doing, I could tell from the start she was going to be amazing at giving head. Soon she was bobbing up and down on my dick, slowly taking me down her throat inch by inch. I shook myself out of the distraction realizing I had a job to do; get her ass ready for my dick. How I arrived here, I'll never know or believe, but I was going to take full advantage of it.\n\nI leaned my head up and began teasing her clit with my tongue as I let my fingers trace and tickle her asshole. I used the residual juices from her pussy as lube for my fingers as I let one disappear up to the second knuckle which elicited a moan that was softened by my cock halfway down her throat. I worked my finger in and out and around in her ass in time to her bobbing up and down on my cock. Once I could easily saw my single finger in and out of her ass as deep as I could, I slowly added the pressure of a second finger lubed up by her pussy. Nat was continuously moaning on my dick as I finger fucked her ass. I took a brief break from concentrating on her ass to enjoy the fact that she had taken my cock all the way down her throat and was now slowly and rhythmically deep throating me while her hand tugged and kneaded my balls. If I lost myself in that sensation for longer than I minute I would have cum, but I returned my attention to her ass, wanting to last as long as possible. \n\nAfter my two fingers had loosened her up, I grabbed the 2nd plug and lubed it up. As I pushed it against her asshole it was met with little resistance and slipped all the way inside her. I began to tongue her clit as I tugged and played with the end of the plug. \n\nNat removed her mouth from my dick, \"if you keep this up I'm going to cum long before you get your dick in there.\"\n\n\"Oh and that's a bad thing?\" I asked\n\n\"No, I'm just saying you're going to make my ass cum before I make you do! That's not fair!\" Nat protested\n\nI didn't need any more coaxing, with that I dove back in and began tonguing her clit more frantically which made her dive back onto my dick, taking me fully down her throat. Her speed increased and I knew I would cum soon. In a last ditch attempt to make her cum first I removed the 2nd plug and began working the 3rd in. It didn't take long for the flared tip to be pulled into her ass by her eager sphincter. The new girth and length made her moan long and deep, and when I began to play with it she began rocking her hips back and forth to meet the toy's every thrust.\n\nI tried to hold out as long as possible but in the end the sight of Nat's dripping wet pussy and plug in her ass along with the furious deep throating I was receiving was too much. I warned her that I was about to cum and she let out a soft moan of assurance. She pulled back off my dick until just the tip was in her mouth and began jacking me off with her hand. Moments later my orgasm overtook me and I erupted into her mouth. Jet after jet sprayed over her tongue as my dick pulsed. As soon as the pulsing stopped Nat slowly lowered her mouth back down my cock, taking it all the way down her throat. The feeling was absolutely amazing as I felt my cum and her tongue swirling around my shaft before she slowly pulled all the way off and swallowed every drop. ",
        "I lay there completely dazed as she swung her leg over me and turned around to lay by my side.\n\n\"Mmm, you're tasty.\" She cooed as she kissed me, \"So not to rush anything, but how long do you think it will be before you're ready for round 3? Cuz I'm soaked just thinking about your dick in my ass.\"\n\n\"Haha, well give a guy a few minutes to come down from one orgasm before he has to start building for the next! But I'd say ten to fifteen minutes and I'll be ready. But in the meantime, I have an idea you might like.\"\n\n\"Oh do tell\" she said excitedly.\n\nI got up from the bed and motioned for her to follow me. I positioned her with two hands on the wall and her ass thrust out. \"Now, no matter what, your hands are not allowed to leave that wall,\" I instructed. She smiled with a glint in her eye that told me she was going to enjoy this.\n\nI stood behind her and began playing with her nipples with one hand as the other ran down her spine, over her ass, and grabbed the end of the plug. I started slowly thrusting the plug in and out of her ass, never completely pulling it out, but just enough that the flared head started to stretch her asshole. She began rocking back to meet each thrust harder and harder as my speed increased, \"oh my god....feels so good. Don't stop,\" She ordered.\n\nI leaned in and started kissing the base of her neck between whispering in her ear, \"Do you like having your asshole filled?\" \"Y-yes\" \"Do you like knowing that I'm going have my dick in your ass tonight\" \"God yes.\" \"Are you going to be a good girl and make your ass cum for me?\" \"Mmmm ye-yes\" \"Good girl. Now, how bout you cum all over this toy before I give you the real thing.\" \"Y-yes sir\" she moaned. \n\nMy dick was already halfway recovered but something about this gorgeous woman calling me sir got me going and I was back at full mast in no time. I stood beside her thrusting the plug in and out of her while my other hand masturbated her clit until she couldn't take it anymore. Her knees clenched and shook as she let out a long moan, cumming for the fourth time.\n\nI slowly slid the plug from her ass after her convulsions stopped and let her slump against the wall to recover. As she leaned against the wall, her head on her hands, I went and grabbed her bottle of lube and applied a generous amount to my dick. I set it on the desk next to where she was standing just in case I needed more later. I pulled her up so she was standing completely upright and kissed her neck. She turned her head towards me and we kissed, letting our tongues swirl in one another's mouth. I pulled her back against me, my arm across her chest with one hand cradling her breast and kissed her shoulder as I lined my dick up with her asshole. \n\nHer breathing was still labored as she asked, \"We need to lube you up don't we?\"\n\nShe had been too overwhelmed in her orgasm to realize I had already done just that. As I answered her with a soft, \"already did beautiful\" I slid into Nat's tight gorgeous ass. After the toy there was very little resistance and I was able to slide halfway inside of her with no trouble at all. Once I got halfway I began a slow thrusting that worked myself deeper and deeper into her ass until at last my body pressed against her and my balls smacked against her pussy. \"Oh my god that feels big. Holy shit...that feels deep, deeper than you were in my pussy.\"\n\n\"I hope that's a good thing.\"\n\n\"Absolutely.\" She said, sounding more confident now that she had taken my entire length, \"Now fuck me.\"\n\nWith that I grabbed her hips and watched as I pulled most of my length back out, her asshole gripping my shaft tightly the whole way, and then slowly sank back into her. I repeated my long thrust slowly a few times before beginning to fuck her harder and faster. As our pace built, her hips pushed back against me forcing my cock as deep into her asshole as it would go. She moaned through her heavy breathing with every thrust, lost in the pleasure of being fucked in the ass for the first time. \n\nAfter the toy and now my cock, Nat's legs were shaking and looked as if they might give out. I pulled her back against me and, still connected, walked backwards until I felt the bed behind me. I collapsed back on it, taking her with me. I rolled her over so she was lying prone on the bed and began to thrust into her again. Nat's hand disappeared beneath her to play with her clit as I let the pace of my strokes build again from long and slow to hard slapping thrusts. I knew I wasn't going to last much longer as I looked down and watched my cock disappearing between her two gorgeous ass cheeks and saw her lifting her hips to meet my thrusts every time. A short time later I felt the heat in my balls as my impending orgasm began to build.\n\n\"I'm not going to hold out much longer. Are you ready for it?\" I asked through my heavy breathing\n\n\"Nnnngh...harder, fuck me harder, I'm so close,\" she pleaded.\n\nMy final few strokes before I came smacked into her ass harder than any before and sent me over the edge. My dick pulsed and twitched inside of her as she gasped, \"Oh my god I can feel it. I can feel you cumming. Oh, oh, oh........ahhhhhh\" she squealed as her ass clenched my cock like a vice, tugging every last drop of cum out of me.\n\nI collapsed on top of her, both of us glistening with sweat. We lay there, my dick resting inside of her for a while, taking in what had just occurred over the past few hours. Finally my dick slipped from her ass and we decided a shower was necessary. I climbed off of her and looked down to see my cum oozing from both her pussy and her ass, the dirtiness of it all was incredibly hot when I knew it was Nat that it was oozing out of. It was without question, a hell of a night, and hopefully the start of something even better.\n\nI leaned down, kissed Natalie passionately, and without a word, towed her to the shower. As we showered and cleaned one another Nat decided she would stay one more day before going on to Florida and then stop for a day on her way back. She said her friends would understand when she told them why she had missed a whole day at the beach.\n\nWe toweled off and headed back to the bedroom. We curled up completely nude, kissed goodnight, and fell asleep together...exactly how I knew the night would end."
    ],
    "authorname": "OnePenIsMightier",
    "tags": [
        "anal",
        "college",
        "oral",
        "public"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/a-grad-school-night-out"
}