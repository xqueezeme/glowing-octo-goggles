{
    "title": "How (I Like) To Give a Blowjob",
    "pages": [
        "***So, this might be a bit of a generic topic...but, I wanted to write about something I enjoy, and consider myself reasonably good at. I hope you enjoy reading it almost as much as I enjoyed writing it! Happy reading!\n\n*\n\nFirst things first, I like to start when I shouldn't. One of my very favorite times is when my guy is on the phone...I like to surprise him and give him a challenge to keep his voice even, so that whoever he's talking to won't suspect a thing. So, when he's sitting in a chair, for instance, I'll get up, under the pretense of retrieving something, and when I return I'll settle on the floor between his knees. Often, I'll keep my attention elsewhere for a few minutes, and then, slowly (and quietly, sneakily if possible) I'll turn to face him, lean in, and gently brush my lips over his still clothing clad cock. It will, inevitably, jump a bit with the pleasure and surprise. Now he knows what's coming, and his face will show it: a beautiful contortion of restraint and longing; knowing that he should tell me to wait, but unable to do so. That look...it always urges me forward.\n\nSlowly, I reach up and undo his belt, my lips still pressed against his now slowly stiffening dick. As I unbuckle, unbutton, and unzip, I make sure to let my fingers brush against the ridge as well, the pressure from my fingertips increasing slightly with my progress. Throughout these moments, I'm fortunate enough to be able to inhale deeply, taking in his scent, my mind flying forward to the moment I'll finally be able to taste him. But, I force restraint upon myself, and continue to go slowly.\n\nCareful not to actually touch his penis, I slip my hand into his now open pants, aware of his audible sigh; a mixture of relief and slight frustration as I'm not touching him now. With my head resting on his belly, and hand happily in his pants, I trace around the base of him with my finger tip, slowly, before wrapping my hand around his shaft and giving a gentle squeeze. I squeeze harder, and give a slow stroke from the base of his shaft to the head, letting my thumb gently stroke over the head. I encounter a drop of pre-cum, and slip my thumb into it, through it, creating a silky trail around the tip that I long to taste. With my head resting against his body, I can feel him holding his breath, so as not to utter sounds that would give him away to his friend on the telephone. Reluctantly, I back my thumb away from the oh-so-sensitive tip of his cock, and give his shaft another firm, tight fisted stroke. \n\nRight about now, he often tries to end his phone conversation, knowing that then he'll be able to more vocally enjoy my attentions that way. I, however, want to make him squirm just a bit more, so as he's starting the goodbye process, I promptly remove my hand from his cock. Instead, I lightly caress his balls, enough so that he knows I'm not going anywhere, but also making him aware that it's in his best interest to keep talking. (This is the one area of our sex life where I like to have the upper hand sometimes...typically I prefer to submit to my guy, but when it comes to giving him head, I occasionally enjoy drawing it out and keeping him in my clutches!). He takes hint and resumes his conversation, and I immediately reward him by bringing my other hand to his pants, so that I can return to stroking his cock once again, while still giving his testicles attention as well.\n\nI continue this for several minutes, stroking and squeezing his full testicles, occasionally giving them a gentle tug, as I simultaneously jerk his cock, occasionally giving the tip extra attention with my thumb, whenever pre-cum begins to accumulate there. Then, as I start to feel that he's adjusting to the attention, and not struggling with his composure anymore, I let myself slip down, so that my mouth can finally skim over the familiar flesh. My closed lips experience the heat that's radiating from his shaft, the wetness from the tip, and the pulsing from the head. As much as I might like to tease him further, I can't keep torturing myself. I let my lips part, and (finally!) feel the perfect sensation of his cockhead slipping between them. I can't keep my tongue from gliding over the same spot my thumb previously attended to, happily tasting the pre-cum that has beaded up. I gently probe the hole there, and then trace the ridge with my tongue, sucking easily on the head, while still jerking his dick with my hand.\n\nI continue that for a few moments, savoring the taste that's always familiar and new, comforting and exciting. Very soon, though, I want, and need, more, and can no longer content myself with sucking on only the head. So on the next downward stroke, I let my lips follow my hands further down his shaft, and even further still, until my hand hits the base, and I release it. As I let go with my hand, I suck harder with my mouth, sucking furiously as I pull away. I drag my tongue along the underside of his cock, and then massage the head, hard, causing him to pull the phone away and cover it, as he lets out a groan of pleasure. \n\nWhen I suck his cock back into my mouth this time, I do it quickly and take it deep, all the way, until the head is pressing against the back of my throat. I make myself keep going, to a point just short of gagging (thank God for my lack of gag reflex!), until my lips are wrapped tightly around the base. I push my head forward a couple of times, grinding his cock into my throat, feeling it spasm around the familiar pleasant invasion. As I sneak my tongue out, licking his balls, I hear him give a hurried goodbye into the phone. I know he's done talking when I hear him let out a very audible moan, and, at the same time, he pushes his hips up into my face, pressing even more tightly into my throat.\n\nHis sounds of pleasure, combined with the fact that sucking his cock turns me on more than almost anything else, is making me start to squirm. Unable to resist, I sneak a hand into my pajama pants, and, feeling the immense wetness and heat, I am compelled to give my pussy a long stroke. As I tease myself, I work even harder on him. I settle into an easy routine, sucking in quickly and deeply, each time deepthroating this thick cock, as I stroke my clit. Then, I pull away slowly, but sucking hard, as I finger my pussy with a single finger, which is enough to feel good, but leaving me craving more.\n\nSuddenly, he pushes me off of him, gently enough not to hurt me, but firmly enough to know that my time of taking charge in this is over, and it's his show now. He stands, takes my hand, and leads me upstairs, to our bedroom. He undresses me quickly, and finishes undressing himself, before he lies down on the bed and motions for me to join him. As I climb onto the bed, he pulls me up, so that I'm straddling his face, and then he pushes my back down, instructing me, without words, to get back to work. \n\nI obey, happily, and start to ease back into the blowjob, but the instant his tongue connects with my flesh, it's like an invisible force is pushing me forward, forcing me to work harder, faster, and more diligently than before. I get closer to gagging on each stroke, somehow seeming to take his cock deeper, feeling my throat tighten each time I taste his balls with my tongue. At the same time, I can't help but respond to the excitement of nearly gagging on his dick, and I grind my pussy against his face. It soon becomes a vicious cycle, the deeper I take his cock into my throat, the more excited he becomes and the deeper he pushes his hips into my face. This, in turn, excites me further, and I can't help but grind against his talented tongue, which seems to urge him forward even more, causing me to suck harder.... And so it continues.\n\nAs his cock starts to spasm and jerk more frequently, I give more attention to his balls, with my hand; squeezing and tugging them with one hand. I return my other hand to his cock, and make sure that my mouth is pressed tightly to my wrapped thumb and index finger. By now, his cock is deliciously slick, with a mixture of my saliva and his pre-cum, and, using my hand as an extension of my mouth, I jerk him off hard and fast. At the end of each downward stroke, my hand flattens against his pelvis so I can deepthroat him for a brief moment, before pulling away, my hand gripped as tight as possible. I suck hard with my mouth as I pull up and away, my tight hand pulling his skin up and over the head of his dick, eliciting groans and bucking hips. Within minutes of this, I know he's ready to cum, and so I manage to squeeze my hand even a little tighter, so tightly that my hand almost aches. As his tongue furiously strokes my clit, and dives deeper into my pussy, I match him stroke for stroke, deepthroating him in rhythm with his tonguing. I keep jerking him off as his cock starts to spasm, harder and faster when his balls tighten in my hand. His hips surge forward, and as soon as I feel the first shot of his thick cum blasting the back of my throat I hold my head as tightly to him as possible. I let him grind his cock into my throat, hard and deep, feeling his thicken and jerk, filling my throat with each shot. I might gag once or twice, but I think the spasms of my throat muscles only cause him to cum even harder. I refuse to pull my mouth away until his cock starts to relax a little, savoring the change of rock hard to slightly softer against my cheeks and tongue. Meanwhile, I let my tongue trace every inch of him, licking up every inch, not letting any of his cum go to waste.\n\nKnowing that my own orgasm will come soon enough, I relax on top of him, letting his cock slip from my lips, but leaving my face against him, resting my cheek on his dick, still unable to leave it. Perhaps because I know that as soon as he starts licking me again, I'm going to need to feel him slipping between my lips once again."
    ],
    "authorname": "MissOrallyFixated",
    "tags": [
        "blowjob",
        "oral sex",
        "blowjob how-to",
        "oral sex how-to",
        "fellatio",
        "fellatio how-to"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-i-like-to-give-a-blowjob"
}