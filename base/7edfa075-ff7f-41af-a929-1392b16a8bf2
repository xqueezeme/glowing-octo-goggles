{
    "title": "Expanding Horizons Ch. 02",
    "pages": [
        "Dear readers, \n\nThis is chapter 2 of a four-chapter story. If you haven't read chapter 1 already, I suggest you might enjoy this installment more if you read chapter 1 first. \n\nA great big THANK YOU to aussie_101 for his fantastic work editing this story for me. Any errors you find are purely my fault. :) \n\n*\n\nKeira and Nico were frozen on the bed, even as Gus, the camp director, started pounding on the door to Nico's cabin. \n\n\"Nick!\" he was yelling.\n\nBoth Nico and Keira's faces registered disappointment at Gus' intrusion, and terror at the implications of being caught. Nico jumped off the bed and grabbed some shorts, while Keira covered herself with the bed sheet. \n\nGus' voice bellowed again, \"Nicky! You awake? We got a problem!\"\n\n\"Yah! Yah! Coming, Gus!\" Nico called out, as he slipped his shorts on. He put his finger over his mouth, making the 'hush' signal, and then smiled reassuringly at her. \n\nKeira's eyes were wide with horror, and her heart was beating hard and fast at the prospect of being caught, as she clutched the sheet up to her chin. \n\nNico leaned over her and whispered directly in her ear, \"Wait a few minutes after we're gone, and then go back to your cabin.\"\n\n\"Ok\", she half-squeaked, half-whispered in reply, fear and disappointment written on her face.\n\n\"Don't worry. It's okay,\" he said calmly, and kissed her briefly but passionately on the lips. \n\nAll she could do is nod at him, wide-eyed. She wondered how he could be so calm with Gus bellowing outside the door. \n\n\"I'll see you tomorrow,\" he whispered as he smiled sadly, and pulled away from her, looking like it was the last thing he wanted to do. He pulled a T-shirt over his head and nodded to reassure her one last time before slipping out the door.\n\n\"What's up, Gus?\" she heard Nico ask with a good affectation at nonchalance.\n\n\"That Jenkins kid is drunk again. He threw up in his cabin,\" she heard Gus reply angrily, his loud voice getting fainter as they moved away.\n\nKeira's heart was beating madly as she scrambled out of bed and began frantically searching for her clothes. She found her thong and shorts by the bed, but her top was clear across the room from where Nico had thrown it earlier. She realized her robe was still outside on the Muskoka chair by Nico's door and wondered how Gus hadn't seen it. She slid into her top and pulled on her thong, which was wet and uncomfortable, then the shorts. It pressed the wet thong against her, reminding her physically of what she'd just done. She looked at the clock and waited a few minutes while she paced in his cabin. \n\nA mixture of emotions swirled within her. She was so glad she'd had the courage to come here tonight. It had turned out so well, except for being interrupted at the end. The things he'd made her feel! It was like nothing she'd ever felt before. The two boys she'd been with before had gone down on her, but they didn't take the time and care Nico had. Neither one of them had made her come. The only orgasms she'd ever experienced were by her own hand. \n\nIt seemed he had been focused entirely on nothing but her pleasure. And what pleasure! It was amazing. She shuddered as she remembered it. But, oh, to be interrupted just as she was about to lose her virginity. Such disappointment. They were so close. She wanted him so badly. Wanted to know what it felt like. She ached to feel his hard cock inside of her. \n\n'Oh well, there's always tomorrow night', she thought to herself as she slipped out the door, wrapped her robe around herself and made her way quietly through the dark to the bath house to wash up. In the bathroom she couldn't help the smile that was plastered across her face as she looked in the mirror. She made her way back to her cabin and quietly slipped back inside and into bed, pleased to note that everyone seemed to be still asleep.\n\nThe next day was a frenzy of activity. She had to help the kids in her cabin pack to go home, and there were a plethora of tasks for the counselors. The CIT's would be going home today too. \n\nIn the Dining Hall at breakfast, she looked for Nico and was disappointed that she didn't see him. Then just as she and her table of kids were getting ready to leave, she spotted him coming in. Her heart leapt in her chest, seeming to constrict her breathing. How would he react when he saw her? \n\nWithin a few seconds, he noticed her. He didn't look away as she feared he would. On the contrary, a broad smile spread across his face and he held her gaze with a look full of hunger and promise. A rush went through her and she smiled back broadly. Her face flushed and her heart started beating madly. \n\nAfter a few moments, she realized one of her girls was trying to talk to her. She turned to the girl, blushing, mumbled an apology and asked her to repeat what she'd said. When she looked up again, Nico was gone.\n\nAt the bus loading zone, she saw him again. He smiled that smile at her and gave her that look that made her melt every time their eyes met. After the kids and CIT's were packed off and the buses had left, there was only the management team and about a dozen counselors remaining at the camp. Everyone breathed a sigh of relief, and then they all moved off in teams to take care of their remaining tasks. There was a lot of work to be done. The cabins had to be cleaned out. All equipment had to be put away for the end of the season. Any broken equipment had to be taken to Gus' shop for repair or disposal. \n\nKeira found herself passing him or near him at several points throughout the day. Every time she saw him she wanted nothing more than to run into his arms and kiss him hungrily. That look in his eyes seemed to make her legs liquefy. Her anticipation, and the wetness in her panties, grew steadily throughout the day. \n\nShe kept thinking about the night before. She was amazed with herself for having had the courage to go there. Thank god she had! She kept thinking about how she felt kissing him, the rush of pleasuring him with her mouth, the incredible orgasm he'd given her. Imagining what it was going to be like tonight, she was almost giddy with anticipation. \n\nShe debated telling him she was a virgin. She wondered how he would respond to that. When would she tell him? Before? After? There didn't seem to be a right time. What if she told him and then he didn't want to? \n\nKeira knew Nico was leaving in a few days, moving to Vancouver to go to UBC. He'd told a group of them earlier in the summer when they had all been talking about their plans for the fall. Somehow she knew that these last two days they had indulged their attraction did not make him beholden to her. She still had a year of high school left. She knew she couldn't ask him to be her boyfriend, or ask him to be faithful to her in some kind of long distance relationship. Of course, some part of her did want that, but she knew it wouldn't be fair to him. He should go to university and have fun and not feel tied down to her. Even though it caused a pang of irrational jealousy, she knew that fun would include having sex with lots of college girls. Hell, the way he looked, they'd be throwing themselves at him. She did not begrudge him, even though it hurt her to imagine him with other girls.\n\nYet, even though he was leaving, she knew she wanted him and this was her last chance. Circumstances had put them together here now. She would take what she could get and be grateful for the experience. She wanted nothing more than to feel him inside her. She knew it was the right time to lose her virginity, she wanted it to be with him, and she had no qualms.\n\nAfter a long day of hard work, admittedly in a lust-filled haze, she decided to have a shower to freshen up before dinner. In the shower, she couldn't help imagining Nico's hands on her as she lathered and shaved and rinsed herself smooth and clean. After putting on new panties, she realized she wasn't going to be able to keep these ones dry either. She found a very flattering sundress she hadn't worn much this summer, and brought a little sweater for after dinner.\n\nIn the dining hall, the few remaining people at the camp had dinner together. It seemed strangely empty in the large hall with only sixteen of them instead of the usual din of a hundred and thirty. Nico sat across from her at dinner and she participated in pleasant conversation with him and those around them. She noticed his gaze dart down to her cleavage repeatedly. Every time their eyes met, she saw that look in his eyes and felt that rush go through her again and she was sure she was blushing. Her cheeks felt so hot. She hoped no one else noticed.\n\nAfter dinner there was another campfire. She was glad she'd brought the sweater. The evenings were getting cool. Gus offered beer to anyone who wanted it, even though some of them were under nineteen, and not legally old enough to drink. Keira wondered when the evening would ever end. This felt like the longest day of her life, waiting till she could be alone with Nico again. At the campfire, she was surprised when Nico came and sat next to her on the same bench. She thought he might want to maintain distance in front of the others. She reveled in the warmth of his leg against hers, while at the same time she fought the urge to lean against him. She found herself edging closer and closer to him in small increments. The closeness was nice, but was driving her crazy at the same time. She could feel him, she could smell him, but she wanted, no needed so much more. She wondered if he was experiencing the same kind of angst and impatience that she was. \n\nIt was a subdued group. Everyone was tired from the frantic activity and hard work of the day, and there was an undercurrent of sadness that they would all be leaving the next day. Keira and Nico sat in companionable silence staring at the dancing flames in the fire pit, listening to a few quiet conversations around the circle. \n\nAfter a while, Nico surreptitiously whispered to her, \"wait a few minutes then come to my cabin.\" \n\nShe looked straight ahead at the fire, but inclined her head slightly to show that she'd heard and understood. Her heart rate sped up and she felt another tingly rush go through her. \n\nNico made a show of looking at his watch and then he yawned and stretched. He announced to the group he was tired and rose to leave. She mumbled \"good night\" along with the others seated around the circle, and watched him leave. She hoped her longing and the flush on her face was not visible to the others by the light of the fire. Nico's leaving, it seemed, gave a number of others around the circle the same idea. People started leaving in ones & twos, heading back to their cabins to turn in for the night. It was a natural time for her to leave and cover the fact that she was following him.\n\nHer heart was racing as she made her way through the dark to Nico's cabin. Looking around to make sure no one saw her, she quickly approached and knocked softly on the door. He opened it almost immediately.\n\nShe was greeted by his broad grin as he pulled her inside, closed the door and drew her against him in a swift fluid motion. He immediately captured her mouth with his while one hand pressed against her lower back, and the other hand tangled in the hair at the nape of her neck. She responded enthusiastically, opening her mouth to him, dancing with his tongue and wrapping her arms around him. She formed her body against his and felt his swelling bulge against her pelvis. She ground against it, and he groaned low in his throat. \n\nThey both pulled away from the kiss, panting, and he leaned his forehead against hers, looking into her sparkling green eyes. \n\n\"That was the longest day of my life,\" he whispered against her lips. \n\n\"Mine too,\" she said. She was so glad he felt the same way. \n\nShe flicked her tongue at his lips, and he captured her mouth in another drugging kiss. She started tugging at his shirt, as his hand slid from behind her neck, down across her collarbone, down over the swell of her breast. He squeezed it in his palms, feeling the weight and firmness of it. He felt her taut nipple, hard as a pebble, beneath his palm as he rolled over it. She gasped and he brought his thumb and finger together around her nipple, causing her to moan slightly and pause on her journey to remove his shirt. Meanwhile he pressed his pelvis against hers and she could feel the heat emanating from his hard bulge against her. \n\nShe pulled at his T-shirt and he reluctantly released her breast and lifted his arms to allow her to remove it. Her breath hitched as inch after inch of his tantalizing flesh was revealed. As soon as they tossed his shirt aside, his mouth descended on her again, kissing her lips, then quickly down over her jaw, down her neck, licking and nibbling into her cleavage. He pulled the fabric of her sundress gently across her shoulder, revealing more skin, as his lips and tongue devoured. Her chest was heaving with her heavy breaths as he slid her other strap down too and let them both fall down her arms. He peeled down the sundress, revealing her round breasts, her areola puckered, her nipples hard and standing up for attention. \n\nHe looked at her with a devilish grin and dipped his head down and sucked her left nipple and areola into his mouth, flicking the nipple with his tongue. She gasped loudly, running her fingers through his hair, letting her hand trail down his bare back, caressing the contours of his lean muscular frame. He released her nipple with a pop, squeezing it between his lips and moved to the right one, while his hand came up to tweak the left one between his thumb and fingers. \n\nNico's other hand was on the move too. She felt it slide over her backside around to the front of her pelvis where he cupped her sex through the dress. She knew he must be able to feel the heat and moisture emanating from her. She'd been wet all day. Now she was sure her panties were positively soaked. \n\nAs he slid his hand down to pull up at her dress, she moved her hand from his hair, down his shoulder, across his chest and down to his pelvis. His cock was hard, hot and straining the fabric of his shorts. She stroked its length firmly, causing him to moan. \n\nNico's hand trailed up the inside of her thigh to the wetness at the juncture. He ran his fingers over the tiny strip of soaking fabric. Keira gasped finally feeling his hand there, and slid her own hand into the waistband of his shorts to stroke his hard cock. Nico groaned in response, released her nipple and looked into her eyes as he slid his finger under the strip of fabric, between her wet swollen lips. His eyes widened in delight and he grinned wickedly finding her so wet.\n\n\"I've been like this all day,\" she whispered. \"I could hardly wait for tonight.\" \n\nShe gasped as he slid two fingers into her.\n\n\"I had a hard time controlling myself too,\" he said hoarsely. \"Especially every time I saw you.\"\n\nHis breathing became deeper as she stroked him\n\n\"I know!\" she returned his smile, colour rising in her cheeks, \"Every time I saw you I just wanted to...\"\n\n\"Do this,\" he said wickedly as he thrust his fingers up inside of her. She gasped in pleasure, staring into his dark eyes as her tight muscles clenched around his fingers. \n\n\"Actually, I wanted to rip your clothes off,\" she said with a slight giggle, as she stroked him harder.\n\nNico groaned again, and with a low raspy voice, he said, \"You are so beautiful and so sexy, you know that?\" \n\nHer green eyes shone as he leaned forward and captured her mouth again as he slid his fingers out of her and up over her clit causing her to shudder and moan into his mouth. \n\nPulling away from the kiss, and from his magic fingers, she whispered, \"I want you now,\" as she pulled her sundress down over her hips and let it drop to the floor. He pulled his shorts down and his cock sprang to attention as she wiggled out of her wet panties. He stalked toward her like a predator, pushing his body against hers, kissing her again. \n\nKeira laid down on the bed and spread her legs wide revealing her swollen, dripping pussy. Nico stared at it with a mixture of awe and hunger on his face as he got into position between her knees. He leaned over her with his arms supporting him on either side of her head. His movements were confident and sure. \n\nShe was glad he knew what he was doing. \n\nShe looked at his face and then looked down to see him swirl his cock head up and down in her juices. He placed it at the opening to her pussy and looked back into her eyes as he slowly pressed forward. There was a little pain as her lips stretched to accommodate him. She furrowed her brow and he stopped, looking concerned. \n\n\"Are you okay?\" he asked, concern etched in his voice and face. He seemed to sense she was inexperienced. She wondered if it was that obvious she'd never done this before. \n\n\"Yes, it's okay. Keep going,\" she breathed.\n\nHe pressed forward slowly, watching her face intently. It was slightly uncomfortable for her, feeling so full. Up to now, she'd only had fingers and tongue inside her. Suddenly she realized he was all the way inside her. His pelvis was against hers, his balls against her ass. He held there for a moment, looking into her eyes. \n\n\"Is this okay for you,\" he asked. \n\n\"Yes, it's good,\" she said, and realized she was telling the truth. The discomfort was dissipating and it felt amazing to have him all the way inside her, filling her up so completely. She'd never felt anything like this before. She smiled into his eyes reassuringly, pulled his head down and leaned her head forward to kiss him. He kissed her deeply and she wrapped her legs around him, reveling in the feeling of touching so much of him, of feeling him so deep inside her. \n\nHe pulled his pelvis back slightly and she released her legs to let him move more easily. He pulled out a little and slid back in tentatively, watching her face all the while, to gauge how she felt. Her pussy felt so hot and tingly, stretched and full. She smiled warmly and seductively at him, caressing his back and shoulders with her hands, encouraging him to continue. He slid out almost all the way, till just the head was inside her, and slid slowly back in. \n\nShe felt the tip of his cock hit something inside and it sent a jolt of pleasure coursing through her from her pelvis outward. \"Unh,\" she moaned, and then smiled seductively at him to show him that she liked it. \n\nNico smiled wickedly, pulled out and pressed back in again, a little faster this time. Again she moaned and he picked up the pace even more. Keira noticed that his pelvis was grinding against her clit and his cock was hitting something deep inside her on every down stroke. The combination of sensations was overwhelming. She watched Nico's face, tight with concentration. He was breathing heavily and his arms and body were tense with the effort of going slowly and maintaining control. \n\nNico began pulling out and thrusting back in more quickly now. Keira was amazed at feeling so many things at once. She felt an intense heat throughout her pelvis; she felt jolts of electrical pleasure course through her as his pelvis grinded on her clit and his cock slid past her opening and hit somewhere deep inside. She could feel an incredibly tingly hot pressure building within her and knew she might come soon. \n\nShe could see that Nico was getting close. His breathing was fast. His face was an intense mask of concentration. He was going faster now, thrusting harder each time. Suddenly Nico changed positions. Barely slowing in his thrusts, he leaned up slightly so there was more space between their bodies. While continuing to support himself with one arm, he reached down with the other and pressed his thumb against her clit. She cried out and arched her back at the intense sensation, which jolted through her like an electric shock. On top of everything else, it was too much. ",
        "Nico was in a frenzy now. He thrust his pelvis hard and fast, and pumped in and out of her with astonishing speed and power, while he rubbed her clit vigorously up and down. \n\n\"Come for me, Keira,\" he ground out between clenched teeth.\n\n\"Oh god,\" Keira cried out as tingly explosions fired within her. Her body tensed and she arched her back as her inner muscles convulsed and contracted. She clamped her legs around his ass and grabbed onto his shoulders, probably digging her nails into his skin. \n\nNico continued thrusting as Keira rode her orgasm. Finally as her orgasm began to subside, he grunted long and low and thrust deeply and climaxed within her. She felt this final thrust deeper than anything she had felt yet, and looked at his face. She knew he was coming and was delighted watching him achieve his own release. \n\nFinally, Nico collapsed on top of her panting heavily, his arms still holding his torso above hers, his face resting on the pillow beside her ear. \n\nAs their breathing started to slow, Nico lifted his head and smiled into her eyes. He brushed a strand of hair back from her forehead behind her ear and whispered \"so beautiful,\" before he leaned down and kissed her deeply. She returned the kiss, opening her mouth and seeking his tongue, while she glided her hands languidly over his back and shoulders. \n\nHis cock was still inside her and she tensed her muscles around it, causing him to stop kissing her and open his eyes to look into hers. A wicked smile spread across his face. \n\n\"Do that again,\" he whispered. \n\nShe squeezed even more forcefully this time, and he raised his eyebrows, smiling broadly at her. His deep dark eyes bored into hers. A mischievous look crossed her face and she tensed again, causing him to raise his eyebrows and moan softly. It occurred to her that she could still feel him hard inside her. She was surprised he hadn't softened after he came. She squeezed again, and as soon as she released, she felt his cock pulse inside her. \n\n\"How did you do that?\" she asked\n\n\"Same as you I guess,\" he said. She just smiled into his eyes, enjoying this closeness, allowing her hands to slide smoothly over his back. \n\nAfter a short pause he asked, \"Was that okay for you? I wasn't too rough was I?\" \n\n\"Oh no, not too rough,\" she said. \"It was great. It was better than I could have imagined.\"\n\nHis eyebrows shot up and his eyes widened with a look of concern. She realized immediately what she had just given away. She thought about back-pedaling and saying 'better than I had imagined it would be with you,' but before she had even formulated what she might say, his brow furrowed and he began questioning her.\n\n\"What do you mean?\" he paused thoughtfully then added, \"Was this your first time?\"\n\nShe blushed, if that were possible in her flushed post-orgasmic state, and tried to look away, even though his eyes were just inches from hers and there was nowhere to go. A dozen things to say flashed through her mind, but she couldn't bring herself to say any of them.\n\nWhen she wouldn't answer, but just looked guilty, he said, \"Keira, why didn't you tell me? I would've tried to make it special for you.\"\n\n\"Oh, but it was special,\" she protested, \"and I didn't tell you because I thought you might not want to, if you knew.\"\n\n\"Might not want to? Are you crazy? Keira, I've been wanting this for months. It was all I could do to resist you for so long.\" Keira smiled knowing it was true. She'd seen the effect she had on him several times throughout the previous weeks. \n\n\"Yah, well, you were so damn noble all summer, I thought you might get noble on me about this, and not want to take my virginity considering we have to go our separate ways tomorrow.\" She finished the sentence with a matter-of-fact tone, trying to keep the sadness out of her voice, but knew that her expressive eyes would betray her anyway.\n\nHe frowned slightly, looking thoughtful. \n\nKeira hastily added, \"But I knew I wanted this anyway. I knew I wanted you. Wanted it to be with you. I don't care if you have to go to BC in a few days. If this is all I can have with you, I'm glad to have it.\"\n\n\"God, Keira,\" he said, shaking his head slightly. \"I don't know what to say. I'm honoured. I just wish I knew.\"\n\nKeira smiled broadly at that, but she didn't know what to say. She felt reassured. Yet for some reason, she was still glad she hadn't told him beforehand. \n\nNico smoothed his fingers gently across her forehead and down the edge of her cheek the way he always did when he was brushing a strand of hair out of her face. She'd grown to love the simple gesture that conveyed so much. \n\n\"You are so incredibly beautiful, you know that,\" he said, \"I wish we had more time together.\"\n\n\"Me too,\" she said, \"but I understand why we don't. It's okay. Let's just make the most of the time we do have left.\" She squeezed her muscles around him again, realizing that his cock wasn't as hard as it had been, but was not completely soft yet. \n\nNico raised his eyebrows and pulsed within her. \n\n\"You want to again?\" he asked hopefully.\n\n\"Hell, yes,\" she said smiling broadly, and she kissed him forcefully and passionately, heating them both up again. \n\nShe felt him swell and harden inside her and squeezed her muscles around him again. He thrust slightly a few times, causing her to moan in pleasure. \n\n\"Let's try another position, ok?\" Nico said.\n\n\"Oh? Ok,\" she said. \"Show me what to do.\"\n\nHe propped himself up on his arms and pulled out of her. She whimpered slightly and frowned at the feeling of him leaving her depths. She realized how good it had felt with him inside her. \n\n\"You get on top.\" Nico said. His forceful demand sent a shiver through as it had the night before. As he got up off the tiny single bed, he smiled mischievously and added, \"I bet you'll like it.\"\n\n\"Okay,\" she said as she pulled herself up. \n\nNico laid back on the bed, his cock now standing at attention straight up from his pelvis. She admired it as she straddled him and tried to put her knees on either side of his hips. She felt slightly awkward kneeling up over him, but he seemed to be absolutely enthralled and delighted looking at her, as his hands slowly caressed her thighs and hips. Seeing the look on his face helped to put her at ease. She felt a little unsure now that she was expected to take the lead, not just lie back and let him do everything. She grasped him and angled his hard cock toward her still dripping hole. \n\n\"Like this?\" she said uncertainly, as she placed the head of his cock at her entrance. \n\n\"Oh yeah,\" he breathed watching as her swollen pussy lips spread and engulfed the head of his cock. \n\nLooking into his eyes, she gently lowered herself on him, amazed at how the sensation was different now that she was on top. She could feel him in different places than before. He groaned as she sheathed him, and she moaned deeply and tilted her head back as her pelvis rested against his. He was completely inside her and she felt so gloriously full again. \n\nShe lifted off him till about half his cock was showing and then slid back down slowly.\n\n\"Like this?\" she asked, as she did it again.\n\n\"Mmmm,\" he moaned with a crooked smile on his beautiful lips, looking at her through heavy lidded dark eyes. \"Just do whatever you want, whatever feels good for you.\"\n\nShe lifted again and moved back down a few times, while he continued caressing her hips, guiding her gently. \n\nShe paused a moment and raised one eyebrow mischievously. She rolled her hips like a belly dancer, and enjoyed the way his cock moved within her. He raised his eyebrows, his eyes widening, and smiled broadly as she did it again.\n\n\"You like that?\" she asked.\n\n\"Mmmmm yeah,\" he moaned. \n\nHe slid his hands up her torso to cup her breasts, and gently pinched both nipples as she continued to roll and grind on top of him. \n\n\"Ohhhh,\" she moaned.\n\n\"You like that?\" he asked.\n\n\"Oh yeah,\" she panted. \n\nHe smiled knowingly, and continued tweaking and rolling both of her nipples.\n\n\"I told you that you'd like being on top,\" he said.\n\nKeira lifted off him again and plunged back down a little more forcefully. She shocked herself with the intensity of his cock bottoming out within her. But she liked it. A lot. So she did it again. And again. After several times up and down like that, she varied the speed and intensity. Leaning back a little, when she pulled up she felt him press over a spot inside her that caused an intense jolt of pleasure. When she dropped back down again, a wave shivered up through her body as his cock hit a spot deep within her. She moaned deeply staring into his eyes. \n\nNico's breathing was speeding up. Keira's was as well, as the sensations inside her built, and he kept squeezing her nipples, sending electrical jolts of pleasure coursing through her from her pelvis and her nipples to ripple throughout her body. Nico began thrusting up to meet her downstrokes and she started moaning every time she came down on top of him. \n\nKeira was getting more and more excited as she felt an orgasm building within her. Nico's breathing was becoming deeper and harsher, like he was trying to control it. Keira's movements became more frenzied, up and down, over and over again. Her breasts were bouncing. Her moaning started to blend into one long wail, and her head lolled back on her shoulders. Nico moved his hands from her nipples to her hips to guide her in continuing her up and down movements. Then he moved one hand to her clit and pushed on it with his thumb. \n\nKeira screamed as her orgasm crashed through her. She tried to keep moving on him, but she was out of control, almost like a ragdoll. Nico kept thrusting up into her, lifting his torso off the bed with each thrust. Explosions went off within Keira. Tingly heat so intense she thought she would pass out. All through her orgasm, Nico kept thrusting up forcefully and pressing back and forth over her clit. Finally as her orgasm started to subside, Nico groaned in relief and thrust one final time as he came within her. His climax was intense and prolonged. He grunted several times as his cock pulsed within her. Then he collapsed back onto the bed, ceasing his movements.\n\nKeira collapsed forward onto him, crushing her breasts against his chest. She was still breathing heavily and her heart was racing. She concentrated on deliberately slowing her breathing by taking long deep breaths. She looked into his eyes and kissed him. \n\n\"You liked that?\" he said, smiling. The look in his eyes showed he already knew the answer. \n\n\"Yes, I liked that,\" she said. \"That was awesome,\" she whispered against his lips before she pressed them against his again. \n\nThey kissed slowly and tenderly for a long time, his hands gently caressing her back, her ass, and the curve of her hips. \n\n\"Can I stay here with you tonight?\" Keira finally got up the nerve to ask the question that had been in her head for several long minutes. \n\n\"Who is still in your cabin?\" he asked in reply.\n\n\"Nobody. Everyone's gone,\" she said.\n\n\"Do you plan to come back here as a counselor next year?\" he asked.\n\n\"Yes,\" she said resignedly, knowing where he was going with this line of questioning.\n\nNico thought for a moment. \n\n\"Well then, we'd better be sure to wake up early and get you back to your cabin so no one discovers you here,\" he said smiling. \n\nKeira lit up and kissed him again. \n\n\"Here, let me set the alarm,\" Nico said starting to stir beneath her. \n\nKeira raised her pelvis off him and his flaccid cock slid out of her. Again she felt that feeling of loss, of losing the fullness and closeness she had enjoyed having him inside her. She slid off him and stood, stretching her arms and legs. Nico stared at her in wonder as he got up. He grabbed his little travel clock from a chair that was used as a makeshift bedside table. He was surprised to see how late it was -- nearly 1:30. He set the alarm for 5:30 a.m. \n\n\"It won't be much sleep, but if you get back to your cabin before sunrise, we should be safe,\" Nico assured her. \n\n\"Okay,\" she said.\n\nThey lay together facing each other on the tiny single bed, and Nico pulled the covers over them both. The bed was so small they couldn't help but press their bodies against each other. Nico smoothed his hand across her cheek again and kissed her deeply. Then he leaned over and turned off the lamp beside the bed, plunging the little cabin into darkness. \n\n\"Good night,\" he whispered. \n\n\"Good night,\" Keira replied and leaned forward to kiss him again. She felt so warm and comfortable in his arms and so tired from the long day of hard work, followed by intense lovemaking, that she was asleep within minutes. \n\nShe awoke to an annoying beeping sound. As she revived she felt Nico's naked body against her and she became aware of the soreness between her legs. She smiled to herself in the darkness as she realized where she was and remembered what had happened a few short hours ago. She felt Nico's body shift and reach over off the bed, and the annoying beeping sound stopped. He flicked on the lamp. Harsh light flooded the darkness. \n\n\"Time to go,\" he said sadly. \n\n\"Ok,\" she said, her voice marred with the same sadness. \n\nThey both got up and dressed slowly. Once she was dressed, she turned back to him and he pulled her into a firm embrace. She kissed him deeply and passionately, and he returned the kiss. They kissed for several long minutes. \n\n\"Thank you for this,\" she said. \n\n\"You're thanking ME?\" he chuckled. \"You have no idea what a beautiful gift you've given me. I know how much it means. So thank YOU,\" he said. \n\n\"I wanted this as much as you did,\" she said, and kissed him again. \n\nAfter a few minutes they both pulled away, seeming to know it was the right time. \n\n\"We'll have to act 'normal' in front of the others later,\" he said. \"I don't want to jeopardize your job here next summer by acting stupid on our last day and revealing we broke the rules.\"\n\n\"Okay,\" she said sadly. \"I know. It's for the best. I guess I'd better go now.\" She struggled not to cry. She could feel tears forming in her eyes, so she turned to leave, but then turned back to kiss him again. \n\n\"I'm so glad we did this,\" she whispered against his lips. \"I'll never forget you,\" she said more decisively. Then, fearing tears were going to burst out at any moment, she turned and left quickly. She couldn't help the tears from falling as she walked back to her cabin. She got into bed and cried silently for a little while till sleep claimed her again. \n\nThat morning she packed up the rest of her stuff and prepared to go home. She saw Nico in the dining hall for breakfast and they sat together and talked pleasantly. Whenever possible, they shared a private look that sent a shiver through her and made him smile mischievously. \n\nThe bus came to take the rest of the counselors back to the city. Nico had his car and would be staying on another day to help Gus with a few things. \n\nKeira gave goodbye hugs to everyone. Her hug with Nico lasted a little longer than all the others, but she was fairly certain no-one had noticed. She whispered into his ear, \"Thank you\", and kissed his cheek before she released him. He smiled at her as she boarded the bus, but his expression turned sad as it drove away. \n\n***\n\nThat was the last time she'd seen or heard from Nico until just under two months ago when she'd received that Facebook friend request. The most exciting friend request she'd ever received, bar none! \n\nNow, she can barely believe she is going to see him again. What will it be like when she finally sees him? Will he like what he sees? Will they still have that spark, that connection that was there all those years ago? She thought it was still there, based on the conversations they've had over the past few weeks, but seeing someone in person is completely different.\n\nThoughts swirling around in her head again, Keira grins as the fasten seatbelt sign comes on. She feels the plane tilt and the captain comes on the audio system to announce they are beginning their descent into Toronto. \n\n'Oh my god,' Keira thinks to herself. 'Here we go.' She can barely contain her excitement. \n\n***\n\nThank you for your time, dear readers. \n\nChapter 3 is with my editor, aussie_101, and will hopefully be submitted within a few days. The fourth and final chapter, which will really take our Keira and Nico into uncharted territory, is nearly done. \n\nFeedback is our biggest reward on Literotica. I'd love to hear your thoughts on this new story, so please take a moment to comment, vote or send feedback. \n\n~sleeplessgurl\n\nP.S. If you're looking for something great to read, check out aussie_101 and many other wonderful writers on my favourites list. "
    ],
    "authorname": "sleeplessgurl",
    "tags": [
        "first time",
        "big breasts",
        "interracial",
        "long black hair",
        "green eyes",
        "girl on top",
        "guy on top",
        "nipple play",
        "deep dark eyes",
        "summer camp"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/expanding-horizons-ch-02"
}