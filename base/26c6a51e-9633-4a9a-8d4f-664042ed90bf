{
    "title": "Silver Pt. 05",
    "pages": [
        "******************************\n\n*** If you are under the age of 18 or are not of legal age in your jurisdiction, please exit this story immediately ***\n\nThis story is for adults only and contains content that is sexual in nature.\n\nThis is part 05 in the \"Silver\" series. I urge you to please peruse the pages of, \"Silver Pt. 04.\" This story is fiction, but, it does contain versions of sexual experiences that I have shared with lovers throughout my life. \n\nI welcome all of you to vote, comment, and leave suggestions with your thoughts on this story! Thanks to all of you for your votes, kind words, and yes, criticisms on the four previous parts!\n\n*** A very special thank you must go out to \"WickedInside\" for her editing skills and suggestions that made this story so much better! ***\n\n******************************\n\n\"So, Michael, is this going to be a fancy wedding?\" Marlene asked after showing her enthusiasm about buying a new dress, shoes, etc.\n\n\"I don't know, where is the reception being held?\"\n\n\"Hold on a second... It says here that the reception is being held at the Ben Franklin, in Philadelphia. Nevermind, this just answered my question,\" Marlene laughed. \"Why in Philly?\"\n\n\"I believe that Becky is from the suburbs of Philadelphia,\" I answered. \"That is a beautiful building; I worked directly across the street from it when I was employed at the hospital.\"\n\n\"Michael, how about if we rent a room at one of the hotels on Market Street?\" she asked in a very excited voice. Placing her hand on mine, she continued, \"It would be so much fun, so romantic, and we wouldn't have to worry about driving home after the reception.\"\n\n\"Easy there Beautiful; let's just reply for two people right now and maybe we can make reservations at one of the hotels later,\" I laughed.\n\nMarlene's excitement was so enjoyable to listen to. She sounded like a little kid stepping onto the grounds of a town carnival. I knew that we would be staying at a hotel in the city; why wouldn't we? The city is so romantic at night; the sights, sounds, and smells saturate your senses. As you walk through the historical city, you think back to the founding of our country. I pictured us walking around Independence Mall, eating lunch at the Reading Terminal Market, and possibly taking a walk down to Penns Landing and relaxing along the river front.\n\n\"What do you want me to put down for your food selection?\" she asked, bringing me out of my dreamy state.\n\n\"Huh?\" I replied.\n\n\"What were you thinking about, Handsome? You were thinking about staying in the city weren't you?\" she seductively purred as she ran her hand up my thigh.\n\n\"Yeah, actually I was. How did you know?\"\n\n\"I could see the half smile on your cute little face,\" she giggled as she reached up and pinched my cheek.\n\n\"You're starting to scare me, Marlene,\" I chuckled.\n\n\"Oh, Michael, I can't wait... This is going to be so much fun,\" she said excitedly. \"Now what do you want to select for your entree? The selections are: prime Rib, chicken Kiev, and salmon.\"\n\n\"Prime rib for me, Sweetheart,\" I responded.\n\n\"I knew that; I shouldn't even had asked you. I think that I'll have the salmon,\" she whispered to herself as she checked the appropriate boxes. \"I'll mail this on the way home, OK?\"\n\n\"Yeah, that will be great,\" I said, leaning against her and giving her a kiss on her neck.\n\n\"Hey you, what are you doing? I have to go soon,\" she moaned.\n\nI gave her a little nibble on her neck before reaching up and taking her earlobe between my teeth. I gave it a slight tug before sucking it inbetween my lips. \"Mmm, you taste good,\" I moaned as I released the delicate lobe and kissed behind her ear. Marlene gulped and took in a deep breath before letting out a long, sensual moan. \"You're giving me goose bumps,\" she whispered, before releasing a longer moan as I licked the inside of her ear. \"Michael, You have to stop; I have to get going.\"\n\n\"Do I have to? Do you really want me to?\" I asked while lifting her hair and taking the back of her neck into my mouth. As I sucked on the baby soft skin, I could feel the chills race through her body.\n\n\"Yes, no, yes, don't stop,\" she moaned with a shiver.\n\n\"Is that a yes, stop, or a no, don't stop?\" I teased, reaching her breast with my hand and squeezing the erect nipple that I knew would be waiting for me.\n\n\"Oh god, yess...yes...no...don't stop,\" she stammered.\n\n\"Marlene, it sounds like you are having a little problem making up your mind.\"\n\nI took her other nipple between my fingers and lightly gave it a squeeze and tug. I reached my other hand up the oversized shirt and raked my fingers down her back. My hand stopped at the waist of her shorts, and I slid a couple of fingers down the little gap at the small of her back. Her skin was so soft, so smooth, so warm. I loved touching her, and feeling the sensual curves of her body. \"You started something this morning before I was cock blocked by Misty,\" I whispered in her ear.\n\n\"Mmm, I couldn't do that while she was staring at us,\" she moaned as I sucked on the back of her neck.\n\nI released Marlene's nipple from my fingers and brought her hand to the hard on that strained in my shorts. She began to stroke it's length through my pants. \"Mmm, i want this in my mouth,\" she moaned as she continued to massage my cock. She reached under the waistband of my shorts and moaned, \"You are so hard... It's so warm in my hand, Michael.\"\n\nMarlene moved from the sofa and knelt before me. She began to remove my shorts as she tugged at the waistband. I lifted my ass and she slid them down my legs until they rested at my feet. \"Do you want to go back to the bedroom?\" I asked.\n\n\"No, to use the words of someone that I know; you won't be lasting that long,\" she seductively moaned as she began to slide my cock around her face before taking the head into her hot mouth.\n\n\"Marlene,\" I gasped. \"that feels so good, Sweetheart... Oh yes...\"\n\nMarlene dipped her mouth down quickly on my shaft before withdrawing it and rubbing the head along her pouty lips. The sensation of her soft lips sliding against my sensitive skin had my pre-cum draining onto her. She slid her tongueout and licked the underside of my shaft, lapping up the salty fluid. \"Mmm, Michael, you taste so good,\" she moaned, before taking me into her mouth again. My cock disappeared as her hand twisted and jerked from the base. She bobbed her head up and down my shaft before releasing it again, licking and swirling her tongue around my head as her hand continued to slowly stroke the remainder of my cock.\n\n\"Marlene, that feels so good, yes...yes...so...good,\" I moaned. \"Sweetheart, I'm going to come...\"\n\nMarlene released her hand and took the length of my shaft into her mouth. She held it inside as I felt her nose press into my pelvis. My cock began twitching as I felt my orgasm building. she withdrew my shaft to the head, grabbed the base in her fist again, and began to stroke my length as her mouth enveloped my head. She rapidly sucked it with her lips as her hand grasped me more firmly and jerked me hard. I warned her of my oncoming orgasm as I threw my head back against the sofa, raised my ass, and tensed. Marlene kept me between her lips as spurts of cum began to fill her mouth. I grasped her hair as cum continued to race from my cock. She moaned loudly, swallowing every last drop that I could produce. She continued sucking on my shaft as her muffled moans grew louder, climaxing with my cock buried in her mouth. Her lips tightened around my shaft as she reached the peak of her orgasm. \"Mmm, mmm, mmm... That was so, so amazing, Michael,\" she said in heavy breaths as she released my cock. \"I came while sucking you, Michael; I can't believe that I came while I was doing that. That never, ever happened to me before. The things that you do to me,\" she whispered, before cleaning me with one last suck.\n\n\"The things that I do to you? How about the things that you do to me?\" I gasped as her mouth slid up my cock and released me. \"Marlene, that was so very sexy,\" I said as I cupped her face with my hands. \"You, my love, are so unbelieveably beautiful, sexy, sensual, loving, caring, and thoughtful.\"\n\nI leaned forward, took her hands into mine, and brought them to the back of my neck, kissing her softly as she folded her arms snugly around my neck. My hands ran through the back of her head as the silky soft hair slipped through my fingers. We held our lips together, tenderly sliding and sucking them into each other's mouths before finally seperating with a moist pop.\n\n\"I love you, Marlene.\"\n\n\"I love you too, Michael.\"\n\nA half hour later, Marlene was collecting her clothes from the previous night's dancing, and placing them into her car. \"You don''t mind if I wear your clothes home, do you, Handsome?\"\n\n\"No, of coarse not; you look so sexy,\" I said as I gave her a hug and kiss goodbye.\n\n\"I'll be wearing your shirt and thinking of you while I'm lying alone in bed tonight,\" she cooed. \"I'll call you later, OK?\"\n\n\"OK, Sweetheart; I'll talk to you later...\"\n\n**********\n\nWe talked on the phone from home, Marlene's office at work, and during our occasional nightly walks through the neighborhood. The minute that we heard each other's voice or felt each other's touch, any tension that we were holding, instantly released from our bodies. The summer was passing us by and the daylight was lessening. One night after dinner, I sat at the piano and began to play. I warmed up for awhile, playing bits and pieces of various songs that I had learned and managed to remember.\n\n\"It's beautiful, isn't it?\" the voice said to Marlene as she sat in her SUV, parked outside of my house. Marlene jumped in surprise as she hadn't heard the elderly man approach. \"Oh, I'm sorry young lady; I didn't mean to startle you,\" the man said. \"I'm Richard, Michael's next door neighbor.\"\n\n\"Hi Richard, I'm Marlene.\"\n\n\"I've seen you and Michael together lately, and it looks like the two of you are quite the special ones,\" Richard whispered as the sound of the piano drifted through the open windows, and out into the summer air.\n\n\"Richard, people keep saying that, you being the third one,\" Marlene said in a questionable, but surprised tone. \"Why do you say that?\"\n\n\"I guess it's from the years of marriage and experience,\" he explained. \"You know, my wife and I would sit out on the stoop and listen to him play at night. I don't know how he does some of the things that he does.\"\n\n\"Is your wife in the house?\" Marlene asked.\n\n\"No, my Suzie passed last March,\" Richard answered in a shaky voice.\n\n\"Oh, I am so sorry,\" Marlene said as she took the elderly man's hand into hers.\n\n\"My Suzy would sit by the window saying her rosary while Michael climbed up onto the roof and decorated the house for Christmas. She wouldn't stop until he returned to the ground, put the ladder away, and cleaned up after running the lights around the house and plugging them in for a test.\"\n\n\"He really did that? He wasn't kidding when he told me?\" Marlene asked.\n\n\"No Marlene, he wasn't kidding. It was almost like clockwork; after he finished, our phone would ring, Sue would pick up, and Michael would ask her if she could come out to see if all of the lights were working. We would walk out together and let him know if things were alright. It was simply amazing; everything was just perfect,\" he said.\n\nNot realizing that I had an audience, I began to play the Billy Joel song, \"And So It Goes\" and the piano came alive. \"Oh my God, this is such a beautiful song,\" Marlene whispered.\n\n\"I'm not familiar with this tune,\" Richard admitted.\n\nMarlene told Richard the name of the tune as they listened together. I continued playing the beautiful, but sad love song as I hummed the words to myself. Marlene rubbed Richard's hand with her soft touch as the music filtered out through the screens of the spare bedroom. I ended the song and sat for a second, thinking of what to play next. I made my decision as my left hand hit a \"C\" octave in the base and my right played the third inversion of a \"C\" chord. My left hand played an \"E\" octave next as my right remained on the same \"C\" chord. I continued playing the piano solo to \"Layla\" by \"Derek and the Dominos\". The piano thundered beneath my hands as I played the legendary piano piece.\n\n\"Holy crap...\" Marlene exclaimed. \" Oh, I'm sorry Richard,\" Marlene said, apoligizing for her language in front of my elderly neighbor. \"Listen to that; It sounds like it is coming from the stereo.\"\n\n\"I told you, he is amazing, and I don't know how he manages to do the things that he does,\" Richard said, as he placed his other hand over Marlene's. \"Did he tell you that he used to cut his own grass?\"\n\n\"Nooo, he did not...\" Marlene shrieked. \"How in the world did he do that?\"\n\n\"He would line the lawn mower up at the edge of the sidewalk, walk straight up, then walk backwards to the sidewalk. He would move the mower over, line the wheels against the edge of the grass, and repeat the same thing. He worked his way across the lawn, bending over and checking the grass to make sure that he didn't miss anything before he continued. It was quite a process,and he did it every week. And not only that; he edged the walkway too!\"\n\n\"I can't believe it,\" Marlene said in a shocked voice. \"Is there anything that he can't do?\"\n\n\"Yes Honey, he can't see,\" Richard said sadly.\n\n\"No, he really can't, can he?\" Marlene whispered. \"But, he makes me wonder sometimes.\"\n\n\"I have to get inside and finish cleaning the dishes,\" Richard said, \"It was a pleasure meeting you, Marlene.\"\n\n\"It was very nice meeting you also, Richard. If you ever need anything, let Michael and me know, OK?\"\n\n\"Thank you, Marlene, I'll be sure to let you know.\"\n\nI was still fiddling with the piano when I heard a knock at the door, and then the youthful voice of Marlene shout, \"Hey Liberace, can I come back?\"\n\nMisty raced from the room out to greet Marlene. \"Hey there, Misty-girl; how are you?\"\n\nI heard the usual thump on the floor and as I walked out, Marlene was bending over and scratching the black Lab's belly. \"Hey Beautiful, what a nice surprise!\" I said with a big smile on my face.\n\n\"I was just ending my day at work and wanted to stop in and give you a kiss before I went home for the night.\"\n\n\"You're just getting home now?\" I asked.\n\n\"Yeah, it was a long, long day and I just needed a hug and a kiss.\"\n\nMarlene raised up, walked into me and gave me a huge hug. \"I love you more than anything, Michael,\" she said as tears began to run down her face.\n\n\"Hey, hey, what are the tears for, Beautiful?\" I asked as I held her tightly.\n\n\"As I pulled up to your house, I could hear the sound of your piano. I sat outside listening to you play for awhile and your neighbor, richard came up to me to say hello. He commented on how he and his wife used to sit out and listen to you play.\"\n\n\"Sue passed away last March,\" I sadly said.\n\n\"Yes, he told me. He also told me about all of the other things that you do as we listened to your beautiful piano.\"\n\n\"Like what?\"\n\n\"Like cutting the lawn,\" Marlene cried into my shoulder.\n\n\"Sweetheart, why does me cutting the lawn make you cry?\"\n\n\"I asked him if there was anything that you couldn't do and he said yes, you couldn't see. And that's when it hit me... You really can't see. You are so nonchalant with everything that you do. I never think about it; I don't realize that you really can't see.\"\n\n\"Marlene, that is a good thing. I don't want you to think of me as blind; I want you to think of me as a regular guy.\"\n\n\"But, you're not a regular guy, Michael; you are a very special, very talented, very kind man.\"\n\n\"Marlene, I don't understand... I'll walk into a wall if it will make you feel better.\"\n\n\"Marlene laughed a bit and said, \"No silly, you don't have to walk into the wall to make me feel better. It's just when he said that, I felt so sorry for you.\"\n\n\"No, no, don't feel sorry for me, Beautiful... I'm lucky to be who I am, with what I have,\" I said in a firm voice. \"If you want to feel sorry for someone, pay a visit to the Children's Hospital of Philadelphia. There is a place where you can feel sorry for people. Although, they'll most likely say the same thing that I just said.\"\n\nMarlene looked up at me and gave me a light kiss. \"You are still amazing to me,\" she said with a sniffle.\n\n\"Well, I didn't say that I wasn't amazing!\" I grinned.\n\nMarlene began to laugh as she tapped me on the chest with her hand. \"You always find the words to make me laugh when I'm in the middle of a good cry.\"\n\n\"I do my best,\" I said as I kissed her. \"Hey, is this your work attire?\"\n\n\"Yes, it's just one of my business suits that I wear every day.\"\n\n\"Color?\" I asked.\n\n\"Gray today, but I have a bunch of other colors and styles at home.\"\n\n\"Very nice,\" I said as I reached down and took her ass into my hands. \"Mmm, very nice indeed.\"\n\n\"Michael, stop,\" Marlene laughed, \"You're so bad...\"\n\nShe pulled me over to the sofa and we sat and talked for awhile. \"Handsome, can I ask you something?\"\n\n\"Ask away,\" I replied.\n\n\"What do you see? I mean, I know that you can't see anything, but what is it like?\"\n\n\"Hmm,\" I thought. \"It's kind of light gray, but with millions of dancing white lights that sparkle within the background.\"\n\n\"Lights?\"\n\n\"Yeah, millions and millions of pin point lights that blink on and off as they dance before me,\" I tried to explain. \"As far as trying to compare it to something that you might better understand... Did you ever drive into a fog bank?\"\n\n\"Yes, it's white, but blank,\" she said.\n\n\"Exactly, it's blank, with the exception of the lights,\" I said as I took her hand into mine. \"It's just blank, Sweetheart; that's what I see.\"\n\nWe continued to talk and the subject quickly changed to the upcoming wedding that we would be attending. Marlene said that it sounded like an Irish wedding by the sound of the two family names.\n\n\"What? Dalton and O'hara?\" No, that's more Pollish,\" I joked.\n\n\"Oh Michael, it is not,\" Marlene giggled as she reached up and squeezed my cheek. \"I was thinking of a green dress; what do you think?\"\n\n\"Marlene, that is totally up to you.\"\n\n\"What color suit are you wearing?\"\n\n\"What color suit?\" I stammered. \"Um, kind of a dark gray.\"\n\nI only owned one suit. It was my wedding/funeral/all purpose suit. Shit, it was only fourteen years old, but it worked in a pinch. I had heard the top morning show in Philadelphia radio, teasing their producer about a department store suit that he had bought for an upcoming wedding that he was attending. The traffic girl said that every man should have a fitted suit at some point in his life. And there I sat with Marlene; the most beautiful, fashionable woman that I ever knew when I made the decision that I indeed would purchase a personally tailored suit.\n\n\"Hey, earth to Michael,\" Marlene laughed. \"What are you thinking about?\"\n\n\"Oh, nothing... Just how beautiful you are and unbelievable you'll look in your dress.\"\n\n\"You know, you can't use the, 'how beautiful I am' thing every time I ask what you are thinking.\"\n\n\"Yes, I know,\" I replied with a smirk, \"but that's what I was thinking!\"\n\n\"Uh huh, nice try, Handsome.\"\n\nI laughed innocently as I crossed my heart with my finger. I had four weeks to get a new suit. I decided that I would go into the city and purchase a tailered suit and while I was there, make a surprise visit to Marlene at her law firm.\n\n\"Hey Sweetheart, would you be interested in going down to the shore to my sister and brother-in-law's house and staying over for a night or two?\"\n\n\"Michael, that would be so nice... I haven't been to the shore since I was a kid,\" she said excitedly.\"\n\n\"You haven't been to the shore since you were a kid?\" I asked in disbelief. \"You never went with your husband?\"\n\n\"No, he didn't like the beach.\"",
        "\"That's sad, Marlene,\" I said as I lifted her chin to look at me. \"I have a lot to show you, and your eyes won't know where to look next because there is so much to see down there.\"\n\n\"I can't wait,\" she smiled. \"Will your sister mind? Do they have enough room?\"\n\n\"No, she won't mind; especially since I already asked her!\" I grinned. \"And yes, they will be able to squeeze us in for the night. Looks like you are going to be meeting a few of my sisters this weekend!\"\n\n\"Oh geez, I shouldn't have been so excited about meeting them when I asked you last week... Now I'm nervous.\"\n\nI laughed and reassured her that there was nothing to be nervous about, and that my sisters were all very nice and excited to meet her. I also told her that she would be meeting my mom, since we would be dropping Misty off at her house. \"Misty isn't going with us?\" Marlene asked.\n\n\"Nope, she is having a sleepover at grandmom's house,\" I replied. \"If you think that your mom spoils her, wait until you see the way my mom treats her,\" I laughed.\n\n\"Oh Michael, your mom, your sisters... I think that I'm going to be sick.\"\n\n\"Stop Marlene,\" I laughed, \"Believe me, they will absolutely love you. Just be yourself and be prepared to laugh.\"\n\nThe week passed quickly and we found ourselves filling Marlene's Mustang with our bags, Misty's supplies, and food to bring to my sister's shore home. I spread a heavy blanket across the back seat of the Mustang and tucked it in snuggly so it wouldn't slide down when good old Misty took her seat. I asked Marlene if she could keep the roof closed until we delivered her to my mom's because I didn't know how she would react to an open roof. It was a gorgeous Saturday morning and as Misty settled herself in the back, the Mustang roared to life. God, how I loved that sound; the deep , thundering groan of a powerful engine as it screams out loud in a tantrum before quickly settling to a low, sensual growl. It's a guy thing, I suppose; although, I know many women who feel the same way, and I'm guessing that Marlene was one of them.\n\nWe backed out of the driveway and were soon on our way to grandmom's. Misty laid in the back with her long black nose resting on the center console. \"Michael, look at her,\" Marlene said in a sweet voice. \"She is so cute.\"\n\nThe midnight blue beast glided down the highway as if it were floating on air. The early morning ttraffic was light as we drove along. I gave Marlene directions as we drove, telling her to turn here and there. \"How do you know where you are?\" Marlene asked in disbelief.\n\n\"I used to drive, remember? I can tell by the feel of the road; there are different dips and crests that give me signals of where we are for the most part. Every road has it's own story to tell.\"\n\n\"That's amazing; I don't even notice them, Michael. Not unless I hit a pot hole,\" she laughed. \"Again, the things that we don't realize.\"\n\nWe were soon pulling into my mom's driveway and the Mustang's low growl silenced as Marlene turned off the ignition. We gathered Misty from the back seat and her supplies from the trunk before walking to the front door. My mom was waiting there for us and Misty's tail wagged wildly as she opened the door to let us in. \"There's my pretty puppy,\" my mom excitedly exclaimed. I unhooked Misty's leash and off she ran, dashing from one room to another,, doing her investigative work, and looking for the two cats that my mom owned. I heard some crunching coming from the kitchen. \"Misty, get your nose out of the cat food,\" I yelled. she came running through the house and stopped at my mom's feet. She somehow knew that my mom was older and her manner changed whenever she approached her. \"Misty, you're not a cat,\" my mom laughed, \"You're a big old puppy dog.\"\n\nI never got the chance to introduce my mom to Marlene since Misty grabbed the attention from all of us. \"Mom, this is my Marlene,\" I said. \"Marlene, Sweetheart, this is my mom.\"\n\n\"Hello, Mrs. Dalton, it is so nice to finally meet you,\" Marlene said with a big smile as she stood there with Misty's necessities in her hands. I took the supplies from Marlene as my mom walked to her and gave her a hug.\n\n\"It is nice to meet you too, honey; Michael has told me so much about you.\"\n\n\"Oh geez, I hope that it was all good,\" Marlene said nervously.\n\nI set up Misty's bowls with water and food as the two women talked on the sofa in the living room. I let Misty outside before I began to walk back into the room. \"He's so bad,\" I heard my mom whispering as Marlene laughed.\n\n\"I'm so bad what, Mom?\" I said as I leaned over and kissed her hello.\n\n\"None of your business, Mikey,\" my Mom responded, \"Marlene and I were just talking...\"\n\n\"It sounds like the both of you are up to no good,\" I said in an inquisitive voice.\n\nA bark came from the back door and Marlene stood up to let her in. \"Mike, she is absolutely beautiful, and so sweet,\" My mom told me as Marlene disappeared around the corner. \"You should see how she looks at you. Her eyes lit up when you walked into the room.\"\n\n\"Mom, she is the sweetest person that I ever met,\" I said as I sat down next to her on the sofa. \"We love being together.\"\n\n\"Look out!\" Marlene yelled as she opened the back door. Misty came racing into the room, stopped in front of my mom, and dropped to the floor onto her back. \"There's a surprise,\" I commented as my mom reached down and scratched Misty's belly.\n\n\"Marlene walked into the room and said, \"Oh there's a surprise; Misty on the floor, and on her back getting a belly rub.\"\n\n\"Mikey just said the very same thing,\" mom said as she looked towards Marlene.\n\n\"Great minds think alike,\" I grinned.\n\n\"Oh brother, I'm in trouble if that's true,\" Marlene giggled.\n\n\"You're in trouble alright,\" I said. \"Are you ready? I think that we better get going before the shore traffic backs up on the expressway.\"\n\n\"Yes, I'm ready, Mikey,\" Marlene said in a teasing voice as she touseled my hair.\n\nI gave her the \"eye\" and whispered how much trouble she was in before lightly biting her finger. Marlene laughed as she helped me stand. We said our goodbyes to my mom and Misty as she walked us to the door.\n\n\"Have fun you two, and tell the gang down there that I said hi,\" mom said. She gave Marlene another hug and told her to stop by or call her anytime that she wanted. I leaned down to my four foot, nine inch mother and gave her a kiss. \"Thanks for watching Misty, Mom; I love you.\"\n\n\"I love you too, Mikey; see you tomorrow night?\" she asked.\n\n\"Yep, we'll pick up the hound dog tomorrow night. I'll call you when we are leaving the shore,\" I said before walking down the steps with Marlene in my arms.\n\nWe made our way to the car, hips bumping into each other as we carelessly prepared for our hour long journey to Ocean City. As we sat in the Mustang, Marlene asked, \"Do you want the roof down, Mikey?\"\n\nShe reached over and pinched my cheek, laughing as she unlocked the latch from my side of the car. \"You're sooo funny,\" I said with a blushing face. \"You're also in so, so much trouble,\" I added.\n\nMarlene laughed as the roof began to retract and lower into the back of the rumbling car. The windows slid down next before we backed out of the driveway and were on our way. Ten minutes later, we were easing onto the entrance to the Alantic City Expressway. As Marlene straightened the car and prepared to merge into the shore traffic, the Mustang roared to life and again, my head pressed into the headrest. This time I was ready for the jolt as I smiled while the beautiful midnight blue beast rocketed onto the highway. \"What a thrill,\" I excitedly thought to myself as the warm summer air drifted over the top of our heads. And there I was, the passenger in a beautiful Mustang GT Convertible with a sexy, long legged beautiful woman at the driver seat. \"Go ahead guys; look all you want, but she is all mine,\" I thought as we passed cars along the way.\n\nFourty minutes later, we were merging onto the Garden State Parkway with the same sequence of events; Marlene easing the car around the entrance and stepping on it when the time came to merge onto the busy highway. The smell of the salt air filled my senses as we drove down the road, driving over the bridge to the bay and exiting into Ocean City. I gave Marlene directions to my sister's home and in minutes, we were pulling up to the front of the house.\n\n\"Holy crap... This one, Michael?\" Marlene exclaimed in disbelief as she grabbed my thigh with her fingers. \"Are you sure?\"\n\n\"Yep, this is it,\" I smiled.\n\nThe house was absolutely gorgeous. It was an eight bedroom, six bath stunner that sat on the bay. The Mustang rumbled beneath us as Marlene gazed at the outside of the property. \"It's alright if you turn the car off, Sweetheart,\" I said as I placed my hand on top of Marlene's.\n\nMy sister came bouncing out of the front door and greeted us as we were making our way out of the car. \"Hey Mike, I'm so glad that you guys could make it down,\" she cheerfully said.\n\n\"Rose, this is my Marlene; and Marlene, this is one of my younger sisters, Rose.\"\n\n\"It's so nice to meet you, Marlene; Mike has told me so much about you. Oh my god, your car is gorgeous.\"\n\nMarlene held her hand out to my sister and greeted her with a huge smile. We retrieved our bags from the small trunk and made our way into the house. Marlene stopped dead in her tracks as we entered. \"Oh Rose... This is absolutely stunning.\"\n\nWe stood in the foyer and Marlene looked up at the beautiful stairway that circled to the upper levels of the home. We left our things there and my sister told us to follow her out to the kitchen where some of my other sisters sat having coffee and munching on donuts.\n\n\"Hey guys,\" I said as we entered. \"How is everybody?\"\n\nMy sisters, Lauren, Kimberly, and MaryEllen all came over and greeted me with a hug and a kiss. I introduced each one to Marlene and they happily said their hello's. We sat at the large table and joined them with a cup of coffee. \"The guys are out on the deck if you want to go out and say hi,\" Rose said.\n\nMarlene turned and looked out onto the sprawling deck that extended over the bay. Two jet ski's and a twenty-four foot boat rested along the floating dock that drifted at the base of the deck. A twenty foot fiberglass pool laid to the left of the sliding glass door of the kitchen. The guys were sitting around the outside table; laughing and drinking their morning cups of coffee. Marlene whispered, \"Oh my God, this is absolutely breath taking.\"\n\nAfter finishing our first cup, Rose asked Marlene if she would like a tour of the house. They disappeared and I went out onto the deck to say hello to the guys. My brother-in-law, Sam, greeted me and guided me to the table and I sat outside, talking and laughing with my brother-in-laws. They were questioning me about Marlene, joking and asking if she were going to come out and show her \"butter face.\"\n\nI laughed along with their so-called humor until they stopped in mid-sentence. Rose and Marlene stepped through the sliding door and onto the deck. \"Holy fuck,\" I heard one of the men whisper under his breath. Marlene approached in her black shorts and pink tank top. I introduced Marlene to the silenced crowd. They each stood, shaking her hand as they exchanged pleasantries. One of them nudged me under the table as he sat down next to me. \"Nice job, Mikey,\" he whispered.\n\nWe all made our way back into the kitchen and sat down for a real breakfast. Marlene helped Rose and Lauren clean up after we had finished before asking me if I wanted to take a walk up to the beach. She took my hand and led me up to our bedroom so we could change into our beach attire. As we entered our room, Marlene turned and kissed me. \"Michael, this place is huge... It's beautiful... Do you know that there is a map of Spain in our bathroom sink?\"\n\n\"Yes, so I've heard,\" I said, not making a big deal about it.\n\n\"Michael, you can fit six people in our shower; do you know that?\"\n\n\"Yes, I know that, I've been in it before.\"\n\n\"Your sister and brother-in-law are so sweet; you would never know...\" she said.\n\n\"Never know what? That they are as rich as crap?\" I smiled. \"Sweetheart, they're not about money; they're about family and having fun together,\" I explained.\n\nMarlene went into the bathroom to change while I slipped into a comfortable pair of swim shorts. Marlene stepped from the bathroom and said, \"What do you think, Handsome?\"\n\nShe walked over to me, placed my hands on her slim sides, and raised them up to her breast. I could feel her nipples straining through the thin cups of the swimsuit that she was wearing. \"Mmm, I like this,\" I moaned. She pulled my hands around to her back where I felt nothing but silky smooth skin. \"Marlene, this isn't the one piece leopard bodysuit that you wore a couple of weeks ago, is it?\"\n\n\"No silly, it's a one piece bathing suit. It's backless though.\"\n\nI ran my hands down her naked back until the fabric of the suit made it's appearance, just above her beautifully sculptured ass. I took her soft cheeks in my hands and pulled her into me. Marlene reached back and brought my hands around to the high cut sides of her bathingsuit and I dropped to my knees in front of her. My face rubbed against the silky fabric covering her stomach and I hugged her tightly. \"You are so beautiful, Sweetheart,\" I whispered as I looked up at her. \"Anything that you wear is absolutely stunning.\"\n\n\"I think of you when I pick out what I wear, Handsome,\" she replied as her fingernails ran through my hair. \"Are you ready for the beach?\"\n\nI stood up and looked down at my crotch. \"I don't know if I should leave the room looking like this,\" I laughed, as my hard on was very apparent through the loose swim shorts that I was wearing.\n\nMarlene gave it a pat and laughed, \"You may want to strap that thing to your leg or something.\"\n\nShe threw on her beach coverup before we made our way downstairs. We asked if anyone was going with us, but they said that they would join us a bit later. We grabbed our blanket, chairs, and a few bottles of water and off we went. The sound of the ocean waves greeted us as we stepped onto the warm sands of the beach. Marlene selected a spot to lay our blanket and in minutes, we were sitting together, the sun shining brightly as we faced the pounding surf of the Atlantic ocean.\n\nWe spent time walking along the beach on the soft sands of Ocean City, dodging the small children who were blindly running from the sand into the water. Marlene was sporting her steel blue, one piece bathingsuit, and I was in a pair of black shorts with two white twigs sticking out from the leg openings. The sound of children screaming as the waves hit them, the sea gulls who were fighting for food, and a low flying prop plane with a trailing advertisement filled the air as we strolled lazily along.\n\n\"Michael, this is so relaxing, so beautiful, and so, I don't know, romantic,\" she said as our hands waved freely between us.\n\n\"This is one of my most favorite places,\" I replied with a sigh. \"This is where I like to go to forget about everything.\"\n\n\"You're right, it makes you forget about everything,\" Marlene said with happiness in her voice.\n\nThe rest of the gang joined us as we sat in our chairs; the girls all talking about the things that girls talk about, and the guys telling me how hot Marlene was! \"You stepped in it this time,\" one of them said.\n\n\"It's about time that I stepped in something,\" I replied.\n\n\"No Mikey, you really, really stepped in it this time,\" another stated. \"She was born to wear that bathingsuit.\"\n\nThe weekend was so relaxing as we all had dinner together the first night that we were there and my sisters and brothers-in-law got to know Marlene. I recieved several more pats on the back and comments from the men, regarding Marlene, her personality, and mostly her beautiful body.\n\nThat night, Marlene and I decided to take a walk on the boardwalk. We lazily strolled along the old wooden planks. Music blasted from the arcades and t-shirt stores as Marlene took in the various sights and sounds. The smell of caramel corn, funnel cake, and pizza filled the salty night air. We stopped and bought fudge, saltwarter taffy, and caramel corn for our moms and the girls at the law firm. Marlene could have fed an army with all that she had purchased. After returning home, we sat up with everyone for awhile and the girls shared glasses of wine as they talked and laughed, telling Marlene embarrassing stories at my expense. As I said before, I was screwed, and not the way that I wanted to be. The talk soon turned to the upcoming wedding and the girls discussed their options on dresses; whether they should wear short sleeve, long sleeve, or sleeveless. They all voiced their opinions regarding the month of September; was it a fall wedding, or Summer? September in the Philadelphia area usually had temperatures still running in the mid eighty degree range and on the calender, it was considered summer. But late September they decided would be considered more of a fall season. So, it was decided, the mid September wedding that we all would be attending would be more summer and would call for a short, or sleeveless dress. I chimed in that they may want to consider the air conditioning inside the reception to which a whole new discussion resulted. On and on they went discussing colors, shoes, and whether they were staying in the city that night or not. It was late and I was pretty pooped from the beach, boardwalk, and the never ending discussion that was taking place, so I walked to the back of Marlene's chair, reached around to hug her and told her that I was heading upstairs to bed. She reached up and held my arms as they wrapped around her neck and squeezed them tightly as I gave her a smooch on her cheek. She told me that she would be up in awhile. I said good night to everyone and made my way upstairs.\n\nAfter washing up, brushing my teeth and undressing down to my underwear, I plopped onto the bed and fell asleep on my stomach, lying across the bed. I woke to a pair of warm, stiff nipples gracefully sliding across my back. I raised my head from the bed and the scent of wine became noticeable as a pair of hot lips clamped onto my shoulder. \"Mmm, you taste so good, Handsome,\" Marlene moaned as she pressed her body down onto me. \"I want you to fuck me, Michael,\" she whispered into my neck with a slight giggle. \"I want you to bend me over this bed and fuck my hot pussy,\" she continued with a giggle. \"C'mon, Handsome, I want that beautiful dick of yours stuffed in my wet cunt.\"\n\nI never heard Marlene blatanly talk like this, especially using the word, cunt. \"Sweetheart?\" I started.\n\n\"What, my Love,\" she replied as she tried to turn me over and grab my cock.\n\n\"How much wine did you have?\" I continued with a laugh as Marlene began to yank my underwear off.\n\n\"Just a couple of glasses with your sisters, maybe a little more than a couple,\" she giggled. \"C'mon, Michael, get up and bend me over this very here bed.\"\n\n\"Shh...\" I whispered, trying to get Marlene to lower her voice so the rest of the house wouldn't hear her.\n\n\"Michael, fuck me from behind,\" she said again in an exaggerated whisper. \"I want your cock to fill my cunt.\"\n\n\"OK, OK,\" I whispered, \"Shh... Lay on the bed and I'll fuck you,\" I said as I slid from the bed.\n\nAs I stood up, Marlene laid halfway off of the bed with her feet planted on the floor and the rest of her body sprawled across the mattress. She wiggled her ass in front of me, reached back and spread her cheeks and whispered loudly, \"Shove that cock in me right now, Michael... right now... fuck my cunt right now.\"\n\nI pressed against Marlene, leaned over and began to rub her back, hoping that I would get her to fall asleep. I didn't want to do anything that would have her feeling embarrassed tomorrow morning, but I think that she was past that point.",
        "\"Michael,\" she said in a raised voice, as she continued to wiggle her ass and spread her legs even further.\n\n\"OK, Ok, Sweetheart...shh...shh...\" I whispered. I leaned up to the top of the bed and grabbed a pillow and told her to lay her head on it, hoping to muffle any sounds that would eventually be coming from her mouth. She took the pillow and did as I asked before telling me to fuck her hard. I was caught between a rock and a hard place as I slid my cock along her already soaked pussy. My cock easily slipped between her lips and entered her silky hole. Marlene let out a muffled moan into the pillow as my shaft bottomed out inside her and my hips pressed into her ass. Thank God for that pillow, because that scream would have woke the dead, I thought. I withdrew my cock to the head and plunged back into her. She began to push back as I repeatedly rocked in and out of her. Marlene lifted her head from the pillow and whispered, \"Yes, Michael, keep going...keep...fucking...meeee...\"\n\nShe pressed her face into the pillow again and yelped as my cock plunged deeper into her spread pussy. I could hear the muffled sounds coming from the pillow until she lifted her head again. \"Michael, I can feel your balls hitting my clit; they're hitting...my...clit...yes... Oh yes...\"\n\nShe began to thrust her ass more forcefully into me, and her muffled moans were non stop until she tensed and voiced her orgasm into the pillow. I wasn't far behind as the sense of my own climax collected in my tightening balls before pouring spurts of cum into Marlene's pussy. She pushed hard into me and wiggled her ass as my cum continued to fill her. My legs weakened beneath me and I fell on top of her in a heap of sweat. My cock continued to spasm inside of her as I tried to catch my breath. Marlene was saying something into the pillow as her ass continued to wiggle against me before contracting in another orgasm. I felt her body fall limp into the bed as her legs gave way. Her body was raising up and down with her heavy breathing as the weight of my body laid on her.\n\nI took her hair into my hands and caressed her head. \"Shh,\" I whispered, \"Are you alright?\"\n\nShe shook her head up and down as it rested in the pillow. \"Shh... I'm going to get a towel to clean you off a bit,\" i whispered next. I didn't get a reply as I slowly withdrew my still hard cock. How can this thing possibly be hard, I thought as I ran to the bathroom and retrieved a warm washcloth and towel. I returned to Marlene, who was lying in the same position that I left her. My cum was running along her thigh as I reached for her leg. I cleaned her up as best I could and dried her with the towel. I reached to feel her back to make sure that she was still breathing before I returned to the bathroom to rinse out the washcloth and clean myself up a bit.\n\nReturning to the bedroom, I walked around to Marlene's side of the bed and drew the sheets down. I lifted her head and placed the pillow at the top of the bed. I gently rubbed her shoulder, \"Sweetheart, c'mon, it's time for bed,\" I whispered. Marlene moaned incoherently. I tried to lift her and pull her up onto the bed, but the dead weight of her body, matched with her legs slumped over the other side made it impossible for me to lift her up. Jesus, this is going to be a workout, I thought. I walked around the other side of the bed and lifted her legs, swinging them up onto the bed. Well, at least I had her on the bed; now what? I crawled onto the bedand turned her on her side, placing my arms around her torso and began to pull her up. \"C'mon Honey, time to get under the covers,\" I whispered, recieving a mumbled reply. After much maneuvering, I finally moved Marlene into a decent sleeping position before pulling the covers over her. \"Boy, you're going to feel like crap tomorrow,\" I laughed to the lightly snoaring, inebriated beauty.\n\nI didn't sleep well that night. I kept reaching over to make sure that my baby was alright and more importantly, still breathing. I finally woke to the sound of sea gulls sqwalking in the early morning daylight. Marlene's head was pressed between my shoulder blades and her arm draped across my belly. I gently lifted her hand and slid out of bed, freshened up in the bathroom, dressed, and went downstairs to retrieve a cup of hot coffee. My sister Rose was already sitting at the kitchen table, reading the morning paper as I entered. \"You look like you're ready for a cup of coffee,\" she said.\n\n\"Yes, I'm more than ready,\" I responded.\n\nRose grabbed me a cup and we decided to sit on the front porch and enjoy it there. The eastern morning sun rose above the roof tops and warmed us as we relaxed and enjoyed our coffee. \"Mike, Marlene is so nice,\" Rose said as she sipped her mug. \"We had so much fun last night. She is so funny and so much in love with you.\"\n\nI was taken back by her statement as she continued, \"You should see the way that she looks at you; her eyes twinkle, and when you hugged her from behind last night, her face glowed in happiness.\"\n\n\"Are you sure that wasn't from the wine?\" I asked with a chuckle.\n\n\"No Mike, it wasn't from the wine... You do something to her and she lights up. You can physically see it happen,\" she said.\n\n\"I don't know rose; I don't know what I do, besides treat her nicely and show her how very much I love her.\"\n\n\"Maybe that's just the thing that she needs. Maybe that's the thing that she has been looking for since her dad and brother died,\" rose stated.\n\n\"She told you about her dad and brother?\" I asked in surprise.\n\n\"Yeah, we talked about it for awhile after you went upstairs. We talked about our lives at home too.\"\n\n\"Yeah, I told her about that,\" I said as I sipped nervously from my mug.\n\nWe sat and talked for another hour as one by one, my other sisters joined us. Not too much later, the door opened and a groggy voice said, \"There you guys are; I thought that you all left...\"\n\n\"Oh Marlene, you look like something that the cat dragged in,\" my sister Lauren laughed.\n\n\"I feel like something that the cat left in the litter box,\" she replied with a half hearted laugh. \"Good morning Handsome,\" she groaned as she made her way over to me and gave me a kiss.\n\n\"Hey Beautiful, having a rough morning?\" I laughed. \"Come, sit on my lap, Sweetheart.\"\n\nRose arrived with a hot cup of coffee for Marlene as she rested in my lap. \"Mmm, thanks, this is just what I need,\" she said to rose.\n\n\"That's what you said last night,\" I whispered in her ear.\n\nMarlene took my hand into hers and squeezed it hard. \"Real funny, Handsome,\" she muttered under her breath. I gave her a little laugh as I gently lifted my crotch into her ass, to which I received a light slap on the leg.\n\nWe all sat and chatted about the plans for the day. I rubbed Marlene's back as she laid her shoulder into me and sipped her coffee. \"Do you feel alright?\" I asked.\n\n\"I've felt better,\" she replied.\n\n\"What kind of wine were you girls drinking?\"\n\n\"I had two glasses of a chardonnay and a couple more of some type of red.\"\n\nI laughed and asked her if she remembered coming to bed last night. \"Michael...\" she whispered in embarrassment. \"I remember most of it.\"\n\n\"Do you remember telling me what you wanted?\" I teased, continuing to rub her back.\n\n\"Shh... Some of it, but...\"\n\n\"But what,\" I grinned.\n\n\"But nothing,\" she said with a sly smile.\n\nMarlene finished her coffeeand talked a little more with the girls before telling me that she was going to get a shower. I told her that I would be up in awhile because I wanted to get one also. I sat and talked with my sisters and they all adored Marlene. They loved her personality, humor, and how she fit right into the previous night's conversation. They asked me how we met, so I told them the long story of how it all happened. As I ended my story, I said, \"I was just sitting on the step brushing Misty and she just walked up to me and said hi.\"\n\nMy sisters were amazed at the story and they all commented about how we both acted around each other, and the way that our faces light up while in each other's presence. I told them how I truly felt about Marlene and how much I loved her. I excused myself and ran up the steps to get a shower. When I walked into the bedroom, I could smell the scent of Marlene's citrus body wash and shampoo. The sound of the hair dryer began and the usual chill ran down my spine. I stripped before walking into the bathroom and as I entered, the hair dryer stopped. I guess that she saw me in the mirror and was silent as I walked behind, reached my arms around her waist and told her that I loved her. She laid her head back into my shoulder as I raised my hands to cup her tits. \"Michael, I'm sorry; I'm so embarrassed...\"\n\n\"Sorry about what?\" I asked.\n\n\"Last night, and the things that I said...\" she trembled.\n\n\"Marlene, there is nothing to be sorry about,\" I said as I squeezed her breasts together. \"Actually, it turned me on, although I was pretty shocked to hear you say it.\"\n\n\"I know one thing,\" she said, \"I'll never drink like that again. I don't mind a glass or two, but that was way, way too much for me and I know that between the both of us, we certainly don't need that in our lives anymore. I'll never do that to you, Michael, I swear...\"\n\nOK, OK, I hear you... That's fine with me. But you can keep talking the same way,\" I whispered in her ear as I pinched her nipples.\n\n\"Mmm, that's so good...\" she moaned as my hands caressed her breast.\n\nI kissed her neck and told her that I was going to take a shower. she shook her head up and down before I released her breast and hopped in the shower. The sound of the hair dryer started again as the hot water pounded against my body. I soaped up with Marlene's citrus body wash and stroked my cock as it grew hard in my hand. I stood there, cock in hand thinking of the events of the previous night and how Marlene begged me to fuck her cunt. I don't know what it was, the sound of a gorgeous woman saying that? The sound of a partner in a law firm saying it? Or the combination of both. I washed the rest of my body before returning to my cock and soaping it up one more time. It was straining in my hand as the shower door opened and I heard Marlene ask me to save it for her. I jumped at her words and turned red faced in embarrassment. \"Hurry up, Handsome, I'll be waiting with open mouth,\" she seductively said. I almost came right then as the words echoed in my head. I washed my hair and stepped out to dry off. I brushed my hair, and quickly ran the hair dryer through it before brushing my teeth. I walked into the bedroom with my cock bouncing lewdly in front of me.\n\n\"Come here, Handsome; I want to show you something.\"\n\nI walked over towards Marlene's voice and she took my hand. \"I was thinking of wearing this to the beach, but thought that it might be quite inappropriate. I think that it would be better to save it for a vacation to the islands with you instead,\" she whispered.\n\nShe raised my hands to her breast where I felt two small pieces of triangle which barely covered her excited areolas and nipples. A string at the top of each triangle ran up her chest and tied behind her neck, while another pair tied behind her back. Her nipples strained through the minuscule fabric. My cock lurched in front of her as my hands rested on the two patches. \"Hmm, somebody likes this,\" she whispered as her lips grazed my mouth. She took my hand and ran it down her tummy and rested it on another skimpy patch of triangle that covered her pussy. Strings ran around the sides to a smaller triangle which pointed down into the valley of her ass where another string disappeared and attached it to the front.\n\n\"Jesus, Marlene, this is fucking unbelievable,\" I whispered. \"Where in god's name did you get this?\" I asked.\n\n\"I came across it on a website and thought of you as soon as I saw it on the model.\"\n\nShe took my raging cock in her hand and said, \"It's metallic silver.\"\n\nMy cock lurched in her hand once again as the words left her mouth. \"Silver,\" I whispered in one long dreamy breath.\n\n\"You like?\" Marlene asked excitedly.\n\n\"I would be an idiot if I didn't,\" I replied as I cupped the bare cheeks of her ass in my hands. \"You know, every time that I think that you can't outdo yourself, you prove me wrong.\"\n\n\"Even if we never make it to the islands, I'll wear it for you whenever you want,\" she whispered in my ear as her hand began to stroke my engorged shaft.\n\nMarlene pushed me onto the bed and climbed between my spread legs. She continued to stroke my cock as I felt her nails rake down my chest, along my right thigh, before grazing them under my balls. The chills raced through my body as the long painted tips lightly fondled and tugged my hanging sack. I let out a pleasurable moan as her hands worked their magic. I felt Marlene's hair hit my pelvis as she bent over and took my cock into her mouth. She took me down to her fist which slowly stroked the base before withdrawing up to the head. she held the tip of my cock in her mouth as she swirled her tongue around the sensitive skin. Slurping noises rose from her mouth as she hungrily massaged the head. Marlene knew just how long to do this before she dropped down, taking the length of my shaft into her mouth and throat. I gasped as the combination of her lips wrapping around the base and the feeling of my already sensitive head entered her throat. Marlene reached her hands under my ass, digging her nails into my flesh and pulled me deeper into her. She moaned as she withdrew my entire length and gasped for air. \"Michael, I love sucking your beautiful cock. It is so smooth and hot in my mouth. I want you to come now,\" she said before taking my length into her throat again. She began to moan around my cock as her nails held a firm grip on my ass and her mouth began to bob up and down the full length of my raging hard cock. I reached to the side of her face and felt her cheeks hollow and her lips extend outward as she pulled up to the head. She pulled my ass cheeks apart and increased her spead as my cock grew that last bit, signaling my growing orgasm. I raked my fingers through Marlene's hair as her head continued thrusting my cock into her mouth. I warned her of my nearing orgasm and her nails pulled harder at my ass. I tensed and my hands held Marlene's head as jets of cum raced into her mouth and throat. She moaned excitedly as the spurts of salty fluid drained from my balls. I didn't think that it was ever going to stop as Marlene sucked every last drop from my convulsing shaft. She continued moaning as my deflating cock dropped from her mouth. Releasing my ass, she rolled to her side, reached into the triangle patch that covered her pussy and quickly brought herself to an explosive orgasm. Her head was rocking back and forth on my thigh as her fingers continued to dance across her clit. \"Oh Michael, oh Michael, oh god...\" she whimpered as she slowly came down from her intense climax. She wrapped her arms around my leg and repeatedly kissed my thigh. \"Michael, I love you... I love you so, so much,\" she cried into my thigh as she tightly clung to my leg. I softly ran my hands through her hair, telling her how much I loved her too.\n\nShe laid like that for a few minutes before climbing up to me and giving me a kiss.\n\n\"You are so beautiful,\" I whispered, as I softly caressed her delicate face.\n\n\"I can't wait to wear this for you again,\" she giggled, nuzzling her nose into my chest.\n\n\"I swear, you're trying to kill me,\" I laughed.\n\nNeedless to say, the rest of our day went swimmingly well and Marlene experienced her first time on a boat and jet skis. The day flew by and it wasn't too long before we found ourselves packing up the car and calling my mom to let her know that we were on our way home. We said goodbye to my sisters and their husbands, telling them that we would be seeing them at the wedding in a couple of weeks. The drive home was uneventful as we talked and laughed about the events of the weekend. We picked up Misty at my mom's and headed home. After unpacking the car, we headed back to bed for the night, falling asleep in each other's arms within minutes of our heads hitting the pillows.\n\nThe next morning, we decided to take Marlene's mom out to breakfast at a local diner. After some much needed coffee, eggs and hash browns, we went back to my house and Marlene showed her mother the layout of the house. Mrs. Cassidy marveled over the beauty of my home and even more at the pictures of my daughter. \"Michael, she is absolutely gorgeous,\" she said, picking up Monica's graduation picture the same way that Marlene had done the first night that I met her.\n\nI went to open my mouth with a grin before I heard Marlene say, \"Don't say it, Handsome.\"\n\n\"Say what?\" Mrs. Cassidy asked.\n\nMarlene laughed, \"Nothing mom... Michael was just about to be bad again.\"\n\nShe reached up and pinched my cheek the way that she loves to do and gave me a kiss. \"You better behave yourself,\" she giggled.\n\n\"Marlene, I don't know what you're talking about?\" I said innocently.\n\n\"Uh huh,\" was all that she said in response.\n\nMisty trailed Marlene's mom around the house and dropped at her feet as she sat on the sofa. \"How are you,pretty girl?\" she asked as Misty rolled onto her back. \"Oh, you really like having your belly rubbed, don't you, Sweetheart?\" she continued as she leaned over and tickled Misty's stomach.\n\nMarlene kissed me and told me that they had to go and get some shopping done. \"You're not going to buy any more bathing suits, are you?\" I grinned.\n\n\"Who knows what I'll buy next?\" she teased.\n\nI walked them both to the car and kissed them goodbye. Marlene backed the SUV out of the driveway, beeped the horn, and drove off. \"I'll be seeing you tomorrow,\" I whispered with a smile as the sound of the SUV disappeared.\n\n**********\n\n**********\n\nThe ride into Philadelphia was on the adventurous side. Misty was older and getting closer to retirement. The taxi had dropped us off in front of the train station and after paying the driver, I told Misty to find the door to the station. She guided me perfectly to the entrance, placed her nose towards the handle, and let me inside as I pushed the door open. We descended the steps, purchased our ticket to the city and climbed another set of steps to the platform. She sat at my feet as we waited for the next train to arrive. A couple of people asked if I would need assistance onto the train as it arrived, but I politely declined, trusting that Misty-girl would lead me safely onto the train. The doors opened and I gave her the command to find the door. She hesitated for a moment and seemed unsure as to what I was asking her to do. I repeated my command for her to find the door and she immediately began to walk forward, stopped at the edge of the platform, letting me know that we were about to step into the train and then guided me safely inside. A female voice advised me that a seat was available next to her and as I fixed my ears to her voice, commanded Misty forward until I heard her say, \"Right here, sir.\"\n\nI took the seat next to her, reaching down to feel the empty cushion and sat down, guiding Misty back underneath me. The woman and I held a nice conversation during our trip, but Misty was a bit anxious as the train came to every stop. she wanted to get up and leave the train and I had to calm her down at every stop until we reached the end of the line. The woman offered to follow us up to the street level to make sure that we made it safely. Misty was more than ready to exit the train and I could tell by her anxious tugging that this would be her last trip into the city on a train. As we stepped onto the platform, I told her to find the steps. She looked both ways, made a right turn and began walking on the platform with the sound of the woman's heels clicking behind us. Misty made a sharp left and stopped. She placed her front paws onto the first step and stopped, waiting for me to tell her that it was alright to climb the steps. I gave her the \"OK\" and we made our way up the steps, through the turnstiles, and out to the street. The woman commented how amazing the two of us were and asked if we needed any more help. I told her no, that we would be alright and thanked her for looking after us as we parted ways. The smells and sounds of the city hit me like a brick wall as we began our trip up sixteenth street in the City of Brotherly Love. The sound of honking cars, jack hammers digging up another hole in the street, and the voices of people of different nationalities filled my senses as Misty weaved her way through the crowded sidewalk. Every once in a while, I would hear the surprised voices of people gasp as Mistty nosed her way between them, making room for the both of us to walk. I had to laugh at myself at the comments and hoped that we didn't send anyone into a heart arrhythmia. We crossed the lights at Walnut, Sansum, and Chestnut Streets, receiving hellos and of course some wise cracks from the usual douchebags that seem to always think that they are funny by barking at Misty. It didn't bother her, she didn't give a fuck; not unless they were stupid enough to try to block our route by standing in front of us. I only heard Misty give a very low growl one time while she was working, at a dick that thought he was being funny. To tell you the truth, I wouldn't have wanted to be on the receiving end of Misty's pearly whites.",
        "After crossing the light at Chestnut Street, we made a left and began the home stretch to Eighteenth Street. After crossing, I asked a person who was standing there, if they could let me know how far down it was to the building that I was looking for. As luck would have it, the policewoman to whom I was speaking, told us to follow her, telling me when to turn as we approached the store. I thanked the officer and told Misty to find the door. As we walked to the door, I heard the sound of it revolving. Fuck, a fricking revolving door, I thought. It wasn't one of Misty's strongest points, but as we got close to the entrance, the police officer told us when it was clear to go, and we did, entering the prestigious store where I planned to purchase my first, and hopefully last, fitted suit.\n\nAs Misty and I entered the huge lobby, a whiney voice began to approach. \"Sir, sir...\"\n\nI stopped, knowing that he was following us as we continued to walk. I stopped and heard the man say, \"Sir, you can't have that dog in here.\"\n\n\"Sure I can,\" I smiled, \"She has the credit card.\"\n\n\"Sir, that dog is not allowed in this store,\" the effeminate voice stated.\n\n\"James,\" I began.\n\n\"Robert,\" he said in an insulted voice.\n\n\"Robert, this dog is certainly allowed in this store and any other store or public building.\"\n\n\"Sir, I am going to have to aske you to leave the premises immediately,\" he demanded.\n\n\"Mr. Robert, this is a guide dog, and you can not do any such thing,\" I politely said.\n\n\"Sir, I insist, you must leave right now,\" he replied.\n\n\"Robert, my friend, you are making a huge mistake and if you, your store, and your company want to be slapped with a fifty thousand dollar fine, I strongly suggest that you stop your whining and show us to the men's department.\"\n\n\"Security, security,\" Robert yelled in a tantrum.\n\nI heard the sound of a security radio approaching as Misty laid calmly at my feet. The guard told me that I would have to leave the store after Robert discussed the issue that apparently was bunching his panties. \"Sir, I'm going to have to escort you from the building,\" he apologetically stated. I pulled out the card that I carried in my wallet, stating that it was a federal and state law that a blind person and their guide dog were not to be denied access to any public building.\"Robert, you are asking for trouble,\" the security guard stated.\n\n\"Robert apparently pointed to the exit as the security guard gasped and asked me to follow him. \"Call the police if you want me out of here,\" I said as I stood firmly with Misty still lying at my feet. \"Robert, I'm trying to save you from getting yourself in a whole lot of shit.\"\n\n\"Call 911,\" Robert said in anger.\n\n\"There won't be any need to do that sir,\" a female voice said in a firm, aggrivated voice as it approached behind us.\n\n\"Officer, this man and this mutt refuse to leave the store,\" Robert said with a smile.\n\n\"That's because he's not leaving,\" the female officer stated. \"Get your manager's ass down here right now,\" she ordered the security officer.\n\nIn minutes the manager of the store was standing before me, apologizing profusely and offering her personal assistance as my female police angel explained the circumstances that the store now faced. I accepted the straight laced manager's offer and asked her to lead the way to the men's department. I thanked the female officer once again and before we parted, she gave me her number and told me to have her paged when I was finished my shopping. I thanked her once again and parted with the manager, telling Misty to follow. She led us to an elevator and as we entered, she pushed the button to the men's department. \"Your dog is beautiful,\" she said in a pleasant voice.\n\nThe change in her personality was instant as the elevator doors closed. \"thank you, uh...\"\n\n\"Stacey,\" she answered.\n\n\"Thank you, Stacey,\" I said.\n\n\"What brings you to our store today?\" she asked.\n\n\"Well, I decided that I need to have a personally fitted suit,\" I said, explaining that I had a wedding to attend with a beautiful woman.\n\n\"Lucky woman,\" she said. \"Every man should have a personally fitted suit at some point in his life and I'll be more than happy to have you looking your absolute best,\" she smiled, as her hand rested on my shoulder.\n\nI could smell her perfume and the slight hint of cigarette on her breath as she continued to ask me questions about colors, styles, etc. I began to sweat as her flirtacious voice continued talking and her hand slid down to the back of my arm. The elevator came to a stop and as the doors opened, Stacey asked me to follow her. Her heels clicked on the marble floors of the store as she walked confidently in front of me. Misty was right on her tail as we followed her to the men's private collection.\n\n\"Hello, Mrs. Evans,\" I heard a man's voice say. \"How can I help you?\"\n\n\"I am personally handling this man's need for a suit,\" she said, \"So I won't be needing you, David.\"\n\n\"Please come this way, sir,\" she stated.\n\n\"You can call me, Mike,\" I replied as we followed her back to the fitting room.\n\n\"OK, Mike, let's get started by measuring you. do you have an idea of your jacket size?\"\n\n\"Thirty-eight regular,\" I answered, \"but that was ten years ago and I've lost some weight since then.\"\n\n\"Excuse me, Stacey, but do you have a chair available in this room?\" I asked.\n\n\"Sure, let me bring it over to you,\" she flustered.\n\n\"No, please; I just want to place Misty out of our way,\" I explained.\n\nStacey guided me to the chair and I quickly had Misty lying underneath of it, giving her the command to rest. I took Stacey's hand and she led me back to where I was ready to get measured. \"Your dog is unbelievable,\" Stacey began, \"She is lying there with her head between her outstretched legs, not taking her eyes off of you.\"\n\nI was always proud to hear compliments about my Misty-girl. She was a great dog and it never took people long to fall in love with her, except for poor Robert, who was probably going to get his ass chewed out later, and not the way that he may have wanted!\n\nStacey started at my neck, working to the center of my back and measuring down to my wrist next and marking the numbers down. she told me to relax as she wrapped the cloth tape measure around my waist. \"Thirty-one waist,\" she said to herself before kneeling on the floor and measuring my inseem. I was wearing a nice pair of Dockers but wore sneakers because I was going to be doing a lot of walking through the city. She reached the tape up into my crotch and hesitated as her hand brushed against my cock which I was desperately trying to keep under control in my pants. There was a fifty- fifty chance that she would choose the side that it was hanging and as misfortune would have it, she picked the side where my good old boy was beginning to grow. What can I say, when a woman's hand is reaching between your legs, there's a pretty damn good chance that this is going to happen.\n\n\"Oh my...\" I heard her whisper as she stretched the tape down my leg to the top of my sneak. \"You're not going to be wearing these to the wedding, are you?\" Stacey laughed.\n\n\"No, I'm sorry, I wore them because I have a lot of walking to do today,\" I answered with a laugh.\n\nStacey asked me if I had any particular color suit in mind as she took some more measurements around my body. \"Whatever looks best to you,\" I replied. \"I'll trust your judgement with that,\" I smiled.\n\n\"Do you have a price range in mind?\" she asked next.\n\n\"Oh, I don't know... This is the first, and most likely last, high end suit that I will ever purchase,\" I said in an embarrassed tone.\n\n\"Well, we have suits that range from five hundred to nine thousand dollars,\" she explained as if we were sitting down and talking over a cup of coffee.\n\nI coughed out loud and placed my hand on my chest. \"Say that again,\" I said in a squeaky voice as if she had grabbed my balls and gave them a good squeeze. \"Well, I think that I'll skip the nine thousand dollar one; I don't want to stand out in the crowd,\" I sarcastically said.\n\n\"Mike, you'll be standing out in the five hundred dollar one,\" she said with a smile. don't worry, I'll fix you up with the price since Robert put you through such a hassle already.\"\n\n\"Don't be too hard on him,\" I said, \"He was probably worried that Misty would get hair on his lizard shoes.\"\n\n\"You mean alligator shoes?\" she laughed.\n\n\"Yeah, I guess... Aligator, lizard, snake skin; they're all the same to me,\" I laughed.\n\n\"Actually, they're not,\" she said as she backed me into the chair and lifted her foot onto my crotch. \"Here, give me your hand and I'll show you,\" she said. I was dumbfounded as I sat there with a woman's shoe pressing into my lap. She took my hands and placed them on her calves. I felt the silky stockings that graced Stacey's toned leg. She slid them down to a pair of soft, high heel shoes and said, \"These my handsome friend, are snakeskin pumps; they'll set you back around seven hundred and fifty dollars in case you're interested.\"\n\nAs she leaned down, guiding my hand to her shoes, the heel pressed onto my cock. She moved it around the slightest bit and seductively said, \"Feel how soft they are?\"\n\n\"Very nice,\" I stammered. I wasn't going to do this, especially when this pretentious bitch was playing with me, but more than that, I was in love with my Marlene. I wasn't getting myself into any trouble and I was wishing that Marlene was here with me. \"They're very nice Stacey, but can you help finalize my choice for a suit? I'm meeting my beautiful girlfriend for lunch.\"\n\n\"Sure Mike, we can...finish up,\" she teasingly said. \"Does your...um, girlfriend work here in the city?\"\n\n\"Yes, she works at a law firm on Market Street,\" I said with a proud smile.\n\n\"Oh, that's nice... What is she, a secretary or something?\"\n\nAs I stood up from the chair and looked at her, I simply said, \"No, she's a partner in the firm.\"\n\n\"Oh, I see,\" Stacey said, changing the tone of her voice.\n\n\"Maybe I'll send her in for a couple pair of those shoes that you so elequently showed me,\" I sarcastically stated.\n\n\"Yes, that would be nice,\" she responded in a smug tone. \"Well then, let's get you fixed up so you can be on your way.\"\n\nShe called David from the floor to assist her in choosing a proper suit and after fourty-five minutes of finding the right style, color, and discounted price for the suit, shirt, tie, and yes, snakeskin belt, Misty and I were escorted down to the front door where we met the female police officer. Stacey surprisingly slipped her card into the pocket of my dockers, telling me that her personal number was on it if I needed any more help. I shook her hand, and thanked her for her help and for the generous discount that she provided me, saying that I would see her next week when I returned to pick up my suit.\n\n\"Wow, what did you do to her?\" the officer asked as we stood outside of the building.\n\n\"I don't know, officer; I just told her how it was,\" I chuckled. I took the business card from my pocket, handed it to the officer, and asked her if she could throw it in the trash for me. She laughed, saying, \"Mike, you don't put up with that high society lifestyle, do you? And please call me, Judy.\"\n\n\"Nope, I hate that shit, Judy,\" I stated, \"I just needed a real nice suit for the love of my life.\"\n\nI told officer Judy that I was headed to Sixteenth and Market and she said that she would accompany me. I also asked her if there was a flower shop along the way. She pulled out her radio and told her dispatch where she was heading as we began the three block walk. We stopped into a flower shop after turning the corner at Sixteenth Street, where I purchased a dozen red longstemmed roses. Judy walked behind Misty and me as we weaved our way between people, crossed streets and stepped onto the sixteen hundred block of Market Street. I told her the number of the building that I was looking for, and she guided us inside, leading us to the elevator and stepped in with us. \"That dog of yours is unbelievable,\" she said, after asking me what floor I was going to. \"You should have seen those people stepping out of the way as you walked up the street.\"\n\n\"Are you sure it wasn't because you were walking behind us?\" I asked.\n\n\"Oh no, honey, they weren't looking at me; they saw that black dog and jumped out of the way,\" she laughed.\n\n\"Her name is Misty,\" I said to Judy.\n\n\"Well, Misty here, is the shit,\" she laughed.\n\nAs the elevator stopped at the eighteenth floor, I thanked Judy for her help and kindness, telling her that I would be back in the city next week. \"It was a pleasure, Mr. Mike, and if you ever need anything, you let me know,\" she said with a smile. She handed me a card and told me that it had her name and precinct number on it. I thanked her again, stepped from the elevator and onto the floor of \"Hartgrove, Cassidy, and O'Niel.\"\n\nI could hear the sound of the busy phone ringing directly in front of me, so I told Misty to go forward. We took about ten steps before Misty stopped in front of a desk, where I heard a pleasant female voice answering each call, \"Hartgrove, Cassidy, and O'Niel; how may I direct your call? One moment please...\"\n\nI stood in front of the desk with a box filled with a dozen red roses in my hand, waiting for the woman to greet me. The female voice finally said, \"Can I help you sir?\"\n\n\"Hi, Marlene Cassidy please,\" I answered.\n\n\"I believe that she's busy, may I ask you if you have an appointment?\"\n\nMisty shook her body and the sound of her leash rang out loud. \"Can you please tell her that Michael is here to see her?\" I asked.\n\n\"Oh,\" the woman said as she stood up and looked over her desk. \"Oh, oh, Michael... her Michael,\" she said in a surprised voice. She came around the desk and hugged me. \"Hi Michael, I'm Margie. Oh, she is going to be so surprised. And this must be the imfamous Misty!\"\n\n\"Hi Margie, I've heard a lot about you,\" I said as I stood there blushing before her. \"And yes, this is Misty.\"\n\n\"I know that I'm not supposed to, but can I give her a scratch on the head?\"\n\n\"Sure, let me sit her down first, then you can say hello to her.\"\n\nMisty sat and wagged her tail as Margie knelt down and scratched her face. \"You are so precious,\" she said in a sweet voice. She raised up and ran around to her phone, saying, \"Oh, she is going to be so, so happy to see you.\"\n\nMargie picked up the phone and tapped a couple of numbers. \"Mrs. Cassidy, there is an incredibly handsome man and a gorgeous dog here to see you.\"\n\nI think the door to Marlene's office opened before Margie hung the phone up. \"Oh my god, what are you doing here, Michael?\"\n\nShe ran into my arms, squishing the box against my chest and hugged me tightly. \"What are you doing here?\" she asked.\n\n\"Well, I had some errands to run in the city, so I thought that I would stop in and see if you were available for lunch,\" I said with a smile.\n\n\"What kind of errands?\" she asked in a high pitched, surprised voice.\n\n\"I had to pick up roses for my girlfriend, so I thought what place better than Philadelphia,\" I grinned, pulling the long box from between us and handing it to her.\n\nShe placed the box on Margie's desk and opened it. \"Oh my God, Michael, they're gorgeous,\" she said, holding her hand to her mouth. \"Margie, can you help me grab a vase and some water?\"\n\nMargie was one step ahead of her as she took the roses, unwrapped them from the tissue paper,, and began snipping the ends before handing them to Marlene to place them one at a time in the vase. \"Michael, these are going to look beautiful on my desk,\" she exclaimed as she continued to fill the vase. After adjusting the last one, she turned to me and with tears beginning to run down her face, said, \"Michael, they are absolutely gorgeous.\"\n\nShe took my face into her hands and kissed me softly. \"How did you get here?\"\n\n\"We took a taxi to the train station, hopped off at Sixteenth and Locust Street, and walked up to your building,\" I calmly said, not telling her about our little detour to the store.\n\n\"You said that you had errands to run though.\"\n\n\"I did; I stopped and picked up flowers!\" I grinned.\n\n\"I know by that face, Michael... You're up to something,\" she giggled.\n\n\"Margie, look at this face... Don't you think that he's up to no good?\" she asked her beautiful assistant.\n\n\"Yeah, he kind of has that sheepish look about him,\" she mused.\n\nI held my hand up in innocence. \"C'mon Handsome, I want to introduce you to some people,\" she excitedly said.\n\nI held onto Misty's leash as Marlene took my other hand into hers and we walked down a hallway. She stopped and knocked on a door before peeking her head inside and asked, \"Do you have a minute?\"\n\nShe opened the door the rest of the way and we stepped inside an office. \"Ed, I want to introduce you to my Michael. Michael, this is one of the firm's original founders, Ed O'Niel.\"\n\nI heard a very deep voice say, \"Oh my,\" before coming around to greet me. \"Michael, Ed O'Niel; it's a pleasure to meet you. I've heard so much about you.\"\n\nThe voice towered over me. He had to stand well over six foot I thought. \"It's very nice to meet you, Mr. O'Niel,\" I said as I shook the man's hand. It encumbered my own as we firmly shook hands.\n\n\"Call me Ed,\" Mr. O'Niel said\n\n\"Please, Mr. O'Niel, I wasn't raised that way,\" I said as the large man kept a firm hold on my hand.\n\n\"Ed,\" Marlene interjected, \"Don't waste your breath; he's not going to call you by your first name. It didn't work with mom either,\" she laughed.\n\n\"OK, but I wish that you would call me Ed,\" he said in a booming voice. \"And this must be Misty,\" he boasted. \"May I say hello to her?\"\n\nI sat Misty down as her tail wagged wildly as Mr. O'Niel knelt on the floor and gave Misty a good old fashioned scratch. \"What a beautiful pup you are,\" he said to Misty in a higher pitched voice. Misty sat proudly in front of him, sucking in all of the attention that she could muster. Marlene laughed at the sight and asked him to stay there while she ran and grabbed her smart phone for a picture. She was back in a flash and took pictures of Misty and Mr. O'Niel as they stared at each other.\n\n\"What's all of the commotion about?\" a female voice asked.\n\n\"Janet, we were just going to visit you next,\" Marlene said in an estatic voice. \"This is my Michael, and Misty is the one entertaining Ed on the floor. Michael, this is Janet Hartgrove.\"\n\n\"Hello, Mrs. Hartgrove,\" I said as I held my hand out.\n\n\"Hi Michael, nice to meet you. Call me...\" she began before being interupted by Marlene.\n\n\"Don't bother Janet; he's not going to call you by your first name,\" she said with a big smile to her voice. \"Don't feel bad, it didn't work for Ed, or my mom either,\" she laughed.\n\nI shook hands with Mrs. Hartgrove, telling her that it was a pleasure to meet her. Her hand was small, but a bit on the plump side; not thin like Marlene's. We stood and talked for awhile; Marlene explaining that Mrs. Hartgrove was the other founder of the law firm. \"Both Ed and Janet graduated with my dad from the University of Penn,\" she said. \"They all decided to start the firm after they and my dad met at a convention,\" she continued. \"And well, when dad died, they created the firm, and held the Cassidy name for me hoping that I would follow in my father's footsteps. They saved my life,\" she tearfully said.\n\n\"Oh Marlene, Sweetheart,\" Mrs. Hartgrove said, \"You were the one who worked so hard to become the successful woman that you are today. We just gave you a little guidance.\"\n\n\"That's right, Marlene, you are the bright one, and the future of the firm,\" Mr. O'Niel stated from the fllor. \"Janet and I aren't getting any younger,\" he said.\n\n\"Speak for yourself, Ed,\" Mrs. Hartgrove laughed.\n\nMarlene took a few more pictures of me and Mrs. Hartgrove, with Misty and Mr. O'Niel on the floor in front of us. \"Oh my god, that is a great picture,\" she exclaimed. \"I'm going to get this framed for all of us!\"",
        "Marlene finally managed to detach Ed from Misty,and told her two partners that she and I were going to grab a bite for lunch. I said my goodbyes, shaking hands once again with Mr. O'Niel and Mrs. Hartgrove before leaving the office with Marlene. She stopped in her office and grabbed her purse before walking us out to Margie's desk. \"Oh Dianne!\" Marlene said, \"This is my Michael,\" she said as we approached the front lobby. \"Michael, this is Dianne, one of my paralegals.\"\n\n\"Hi Dianne,\" I said with a smile as I held out my hand. She grasped my hand and pulled me in for a hug. She was built like a brick shithouse; tall, lean, with large breast that pressed hard into me.\n\n\"Hey Handsome,\" she said in a cheerful voice as she continued to hug and rock me in her arms. \"Wow, you are everything that Marlene claimed,\" she stated as she took a step back and ran her long nails along my cheek. My face almost turned purple from embarrassment and the girls laughed.\n\n\"Don't worry, Michael,\" Marlene began, \"She won't bite you.\"\n\n\"I just might when we get you out on that dance floor,\" Dianne purred.\n\nMy face couldn't have gotten any more red as I stood in front of the three beautiful women. \"Oh my God, look at his poor face,\" Margie giggled.\n\n\"Alright you two,\" Marlene said, \"I'm going to save my baby before you kill him,\" she laughed. \"I'll be back in an hour or hour and a half,\" she continued as she led me and Misty to the elevator.\n\n\"Call us if you need any help,\" Dianne yelled before the door closed.\n\nMarlene took me in her arms and laid a long, passionate kiss on me as the elevator began it's descent. \"Oh my god, I love you, Michael,\" she said as she plunged her tongue seductively in my mouth. \"Mmm, you are so handsome.\"\n\nI was truly hoping that the elevator would get stuck as our tongues danced together. \"Marlene, you are so beautiful; I couldn't wait to see you,\" I said, cupping her face into my hands. \"I wanted to surprise you, but didn't want to disturb your busy day.\"\n\n\"Handsome, you always find a way to surprise me, and you'll never disturb my day,\" she moaned as she traced her tongue around my lips. she reached down quickly and laughed at the hard on that was raging in my pants as the elevator came to a slow stop. \"You are too much,\" she giggled.\n\n\"Marlene, are you kidding me? Between you and the other two up there in the lobby; it was like I was in the Playboy mansion,\" I gasped. \"I thought that Dianne was going to swallow me up right there.\"\n\n\"Dianne is very touchy-feely,\" Marlene said as we exited the elevator. \"I do have to warn you, they are going to tear you up on the dance floor!\" she laughed.\n\nWe decided to grab chinese food for lunch, so Marlene took my arm and led us to her favorite place. As we entered, the hostess greeted Marlene, telling her that it was so nice to see her. Marlene introduced me to the young girl as she sat us at our table. I tucked Misty under my chair and in seconds, she was fast asleep on her paws. Marlene and I had a wonderful lunch as we talked and laughed about the girls and the way that Misty had Mr. O'Niel on the floor. \"Michael, you should have seen his face,\" she said. \"He looked like a little kid!\"\n\n\"He's a bigt guy,\" I said with a mouth full of Grandfather chicken.\n\n\"Yeah, he is. he played football with my dad in high school and went on to play at Penn during college.\"\n\n\"He went to high school with your dad?\" I asked in surprise.\n\n\"yes, that's where they first met and became life long friends.\"\n\nWe talked for a bit more before I told her that I had better let her get back to work. \"I'm taking you home, Handsome,\" she blurted out, grabbing the bill as the waitress placed it on the table.\n\n\"No you're not, and give me that,\" I said, surprised at her quickness at swiping up the bill.\n\n\"Yes I am, and no, I'm paying,\" she rebutted with a giggle.\n\n\"Marlene, you don't... You can't...\" I started to say.\n\n\"I can, and I am,\" she said in her teasing voice, reaching across the table and pinching my cheek.\n\nI knew that I lost this one and she wasn't taking no for an answer. she pulled her card from her purse and gave it to the waitress. \"OK, I guess so...\" I gasped in frustration.\n\nShe leaned across the table, pinched my cheek once again, gave me a kiss, and said, \"Paybacks!\"\n\n\"Real funny, beautiful,\" I laughed.\n\nWe walked to the parking garage after exiting the restaurant and climbed into Marlene's SUV. In fifteen minutes, we were crossing the Ben Franklin bridge into New Jersey and on our way home. We spoke throughout the ride, with Marlene questioning me more and more for the reason that I was in the city that day. I fended off her questions with vague answers and bits of sarcasm. Soon, we were turning onto the main street of our little town and minutes later pulling into my driveway. I retrieved Misty from the back of the SUV and walked up the sidewalk and into the house. Misty ran for the back door after I released her from her leash.\n\n\"Looks like someone really has to go,\" I laughed as I opened the door for poor Misty.\n\nMarlene strolled behind me and grabbed me around my waist. \"You made me so happy, Michael. To think that you thought enough of me to come into the city and bring me to lunch means so much. You and Misty were a big hit with everyone,\" she whispered in my ear from behind. \"Everybody loves you, Michael... Everybody is attracted to you; there is just something...\" she whispered before I felt her tongue slip into my ear.\n\nI pressed my head against her soft lips and wiggled my ass into her skirt, letting out a low moan. \"Handsome?\" she seductively moaned.\n\n\"Huh?\"\n\n\"Can you give me a quickie before I have to leave?\" she breathed heavily as her hands dropped to my hard, pulsing cock.\n\n\"Now?\" I asked.\n\n\"Uh huh, right now...\"\n\n\"Here in the dining room?\"\n\n\"No, I want to bend over the bed again like I did the other night,\" she seductively moaned. \"I'll be waiting for you in the bedroom,\" she whispered as she tugged at my earlobe with her teeth. \"Hopefully, Misty won't be long,\" she teased as she released me and with deliberate clicks of her heels on the hardwood floors, made her way to the bedroom.\n\nI opened the door and called for Misty. Minutes later, she raced up the steps and ran into the kitchen. I gave her a bone to keep her out of our hair and she ran off to the spare bedroom. I almost ran to my bedroom, pulling my shirt off along the way. I stepped into the room and heard Marlene whimpering as she leaned over the bed. I walked behind her and was greeted with her legs spread and her bare ass gyrating slowly. I placed my hands on the smooth skin of her thighs and ran them up to her pussy. Her fingers were already busy sliding in and out of her dripping hole. I held onto her hand as it glided slowly into her depth. Removing my pants and bending over to pull them from my feet, I felt the beautiful high heels that Marlene was wearing. My cock lurched as my hand ran across the soft leather. I worked my way up her leg with soft kisses and light bites behind her knees. Marlene moaned louder and begged me to fill her. I asked her to slide back a little from the bed so I could run my cock along her pussy. As my cockhead met her fingers that were busy rubbing her clit, she took hold of it and placed it at her opening. \"Slide it in, Michael,\" she moaned as her hand rubbed the head around her opening. I slowly pushed forward and my cock quickly disappeared into Marlene's warm pussy. It slid deeper as her silky walls clamped around it's length. Marlene let out a long moan as I continued to sink deeper into her. \"Oh Michael, that feels so good...so good...yes...\"\n\nI withdrew my shaft to the head and gave a few short strokes at Marlene's entrance before easing it's full length inside until my pelvis pressed into her spread cheeks. \"Oh God yes...yes...oh God,\" she whimpered as she pressed her ass into me.\n\nI placed my hands on her hips and found that she never removed her skirt. It was flipped up over her back, covering the beautiful silk blouse that she had worn. \"Fuck me, Michael,\" she began to plead. \"Please... Tell me that you love me, please tell me...\"\n\n\"Marlene, I love you more than words can say,\" I whispered as I reached over her back and caressed her hair. \"I love you more and more every day, my beautiful, beautiful, baby.\"\n\n\"Promise me that we'll always be together, promise me that we will always be together...together,\" she cried.\n\n\"Sweetheart, you are my only thought through my days,\" I whispered again. \"I have finally found my true, true love.\"\n\n\"Michael, fuck me slow the way that you did the first night that we met; when you told me about love and feeling each other's presence,\" she whispered in a dreamy state. \"I want to feel every bit of you.\"\n\nI slowly withdrew my cock and lovingly returned it into it's deepest point. Marlene whimpered and moaned with my every soft thrust. \"Can you feel me, Sweetheart?\" I whispered.\n\n\"Yes, Love, I can feel every single part of you,\" she trembled. \"I can...feel...every...thing...\"\n\nI softly caressed Marlene's ass as I continued my slow rhythm in and out of her pussy. \"Michael, I'm going to come,\" she moaned, pushing back into me and holding herself still. I pressed into her and held my cock deep inside of her until I felt her legs begin to shake beneath her. \"yes, Michael, I'm coming,\" she whimpered, holding her ass tight into me. \"Yes, yes, I'm coming,\" she softly moaned. Her body stiffened and she gasped out a long breath before her legs buckled and she fell limp into the bed. \n\nMy cock fell from her as she collapsed onto the mattress. \"Michael, that was so beautiful, so, so beautiful.\"\n\nI massaged her legs and ass as she laid silently, gathering herself as her orgasm subsided. \"You are so beautiful,\" I said again in a soft, comforting voice.\n\nI crawled onto the bed and stroked her face, sliding my hand back and running my fingers through her hair. \"Are you OK, Gorgeous?\"\n\n\"Yes, I'm more than OK, she barely said. She kissed my fingers as they grazed across her lips. \"You didn't come,\" she faintly whispered.\n\n\"I don't need to come, Sweetheart. Just giving you pleasure and making you happy is enough for me,\" I told her as she laid still, almost in a trance. \"You can, um, pay me back later,\" I grinned. I felt Marlene's smile grow across her face before she lifted her head from the bed.\n\n\"I'm so glad that i stalked you,\" she said, pressing herself up from the bed and snuggling into me. \"I'm glad that you stalked me too,\" I grinned. \"Your clothes are going to be wrinkled,\" I said as I kissed her pouty lips.\n\n\"It'll give the girls something to talk about when I get back to work,\" she giggled. \"I have to get back soon; I have a lot of work to catch up on.\"\n\nWe dragged ourselves from the bed and Marlene straightened out her skirt and blouse. \"Hmm, yes, they'll be hounding me all day,\" she laughed as she pressed down on her skirt.\n\nMy cock strained against my stomach as I bent over to retrieve my pants. As I stood up, Marlene took it in her hand and as she stroked it, told me that she would certainly pay me back later that week. I kissed her and thanked her profusely for bringing Misty and me home. She gave me one last passionate kiss before walking out the front door and returning to work.\n\n**********\n\n**********\n\nThe weeks passed by and Marlene \"paid me back\" time and time again! I did go back into the city the following week to pick up my suit. I opted to leave poor Misty home, using my sister, Rose as my guide dog instead! I couldn't wait to wear it in front of Marlene after trying it on and having some minor alterations done to it. They were right, every man should purchase a personally tailored suit at some point in his life. Rose couldn't believe what a difference it made, but she said that the snakeskin belt had to go. She knew that it just wasn't my style. I wanted so badly to visit Marlene at her office, but she would really question me if I appeared twice in one week. I did run into officer Judy though. Rose and I were walking towards Eighteenth Street, when I heard a whistle and, \"Hey there stud\" from behind us. Judy laughed as I stopped and turned. \"How did you know that I was talking to you, Mike?\" she laughed. \"Is this your girlfriend?\"\n\n\"No, this is my younger sister, Rose,\" I said. \"Rose, this is officer Judy.\"\n\n\"Just Judy,\" the pleasant police woman said, as she held out her hand to greet my sister.\n\nWe exchanged pleasantries while walking toward the clothing store, and parted ways as rose and I entered. \"Say hi to Robert for me,\" Judy laughed as she walked away.\n\n\"Who is robert?\" Rose asked.\n\n\"I'll tell you later... It's a long story,\" I laughed, wondering if whiney Robert still had a job.\n\n**********\n\n**********\n\nMarlene and I decided to meet my daughter Monica for lunch in the town where she attended Grad School. As Marlene and I waited at an outside cafe, a silver SUV pulled up and parked close to us. A four foot, ten inch tiny bit of a thing jumped from the vehicle. \"Hi daddy!\" Monica yelled as she slammed the door behind her.\n\n\"Oh my God, Michael, she is beautiful,\" Marlene whispered under her breath. \"I can't believe that she drives that thing.\"\n\nI stood and gave my sweet Monica a big hug, leaning down and kissing her cheek afterwards. \"Monica, Sweetheart, this is my Marlene; Marlene, this is my precious daughter, Monica,\" I said with great pride. Marlene stood, shook Monica's hand, and then gave her a hug. \"It is so nice to finally meet you,\" Marlene said. \"Your dad always talks about you.\"\n\n\"Dad...\" Monica said in an embarrassed voice.\n\nWe sat in the late August sun, ordered our food, and chatted about anything and everything. Monica explained to Marlene that she was working on her Masters Degree in social work, also telling her about the internship that she was about to begin. Marlene was fixed on her every word as Monica told her that she would be doing her internship at an eating disorder facility, and would be working with teens and young adults. She asked Marlene about her job and Marlene told her that she was a lawyer, but not revealing that she was a partner in the firm. She told Monica that the firm mostly handled commercial real estate in the city, whether it dealt with purchases, sales of property, or the legal aspects of a business. She also revealed that she did pro bono work for victims of spousal abuse, which came to a surprise, since she had never mentioned it to me. The two of them discussed the physical and emotional toll that it takes, not only on the victim, but also on their family. I sat back and took it all in, realizing at that moment, how mature my daughter had become and how very much she had learned.\n\nThen of course, the subject changed to shoes. the conversation heightened as the two of them discussed styles, brands, stores, and websites. The waitress came to our table and asked if we needed anything else. \"Another table for me,\" I joked.\n\n\"Daddy, Michael,\" simultaniously came from the girl's mouths.\n\nAs I sat there, chastised by the both of them, I asked the waitress for another diet Coke. We sat for another hour as they continued to talk, before Monica suggested that she show us around the quaint downtown district. We lazily walked along, stopping in several stores, making several purchases which of course was either clothes or makeup. As the day drew to a close, it was time for Monica to get ready for work, so we said our goodbyes, gave hugs, kisses, and \"I love you's\" before getting into Marlene's Mustang and leaving for our hour and a half drive home.\n\nMarlene couldn't get enough of my daughter and spoke of her the whole way home. I was glowing, sitting proud in the passenger seat as Marlene went on about how beautiful, intelligent, and sweet my daughter was. \"Michael, she looks just like you,\" she said.\n\n\"Marlene, don't insult her like that,\" I laughed.\n\n\"Actually, she really resembles your sister Rose,\" she mentioned. \"She is so petite, but mighty in stature. She is a lovely young woman.\"\n\n\"Young woman... My baby, a young woman,\" I whispered.\n\nMarlene looked at my face and took my hand into hers. \"Michael, it's OK; it's a fact of life, little girls grow into young women. You did an amazing job,\" she softly said as she gently rubbed my hand.\n\n\"My job as a father will go on until my last day,\" I said as we soon reached the end of our trip.\n\n********\n\n**********\n\nThe next two weeks flew by and we found ourselves packing our bags into the SUV and heading to the hotel in Philadelphia for the following day's wedding. We made Marlene's mom's face brighten, when we dropped Misty off at her house for the weekend. \"There's my precious baby,\" Mrs. Cassidy said in elation. \"Are you going to stay with your grandmom for the weekend, little girl?\"\n\n\"Grandmom? Really Mom?\" Marlene laughed.\n\n\"Yes, she's my grand dog,\" her mom retorted as she fussed over Misty.\n\n\"Mom, call us if you need anything, or if she is too much for you,\" I said as I filled Misty's water bowl. \"She eats around five o'clock for dinner, and whenever you get up in the morning, OK?\"\n\n\"Yes, Michael, I have it all written down and taped to the refrigerator,\" she said in a reassuring voice.\n\n\"Ready Handsome?\" Marlene asked.\n\nWe said our goodbyes to Marlene's mom and Misty, jumped into the SUV and off we went. In forty-five minutes, we pulled in front of the beautiful Philadelphia hotel. The bell hop greeted us and unloaded our bags onto a cart, guided us inside and showed us to the reservation desk. After taking our key from the receptionist, the bell hop showed us to our room on the fourteenth floor. He arranged our clothes, hanging my suit and Marlene's dress in the overly spacious closet. He explained all that the hotel had to offer and told us if we needed anything else, to page him and he would be there to help us. I gave him a tip as he excused himself. The wedding wasn't until the following day, so we had a lot of time to relax and visit some of the sights and night life that the city had to offer. The next day would be a busy day for us. Marlene was getting her hair and nails done at noon, and the wedding was at five, followed by the reception at six.\n\n\"Michael, this room is beautiful... Come, look at this,\" she said as she pulled me to the soft luxurious bed. \"We'll give it a test drive later,\" she giggled as she pushed me onto it and slithered on top of me. \"Michael, I am so excited! I can't believe that we're lying here together in a beautiful hotel. I never, never dreamed...\" she tearfully whispered as she ran her delicate fingers across my face. \"All because of you...\"\n\nWe laid together, talking and laughing about the many situations that led to this moment. I loved to feel Marlene lying on me. She was my security blanket, and I was safe when her body covered me. As our tender kisses magically danced across our faces, ears, necks, and shoulders, time suspended as our two hearts became one, and never would they part. We made love, two bodies entangled in a graceful ballet, which told the beautiful story of two lost souls who were mysteriously brought together. We rolled and twisted in a synchronized dance with our moans and whimpers playing out the orchestral music. An exquisite performance of Tender, soft love; the two bodies speaking while their voices remained silent. Their emotions reaching for unknown depths as the strings of the orchestra progressed to their peak, straining to their breaking point, before the base drums and piano dramatically thundered out the climactic ending to the ballet, holding the last chord before the two dancers melted into each other, and collapsed onto the silent stage.\n\n\"Michael, could you feel that?\"\n\n\"Yes, beautiful, I felt it...\"\n\n\"What was it?\" she cried.\n\n\"Two hearts becoming one,\" I whispered softly in her ear.",
        "We laid in each other's arms, tracing our fingers in circles around the other's heart. I took Marlene's pouty bottom lip into my mouth, sucking and teasing it with my tongue. They say that beauty is in the eye of the beholder, and I was the beholder of true beauty.\n\nWe eventually gathered ourselves together and trecked out into the city. We walked to Love Park and had our picture taken in front of the \"LOVE\" statue. This picture would eventually be framed and rest on Marlene's desk in her office, and on the mantel of my fireplace. We grabbed a bite to eat at the Reading Terminal Market, walking out holding our stomachs and saying that we ate too much. We decided to walk off some of the food that sat heavy in our stomachs. Strolling along Market Street, we turned right at Sixth Street and visited Independence Hall, where the founding fathers of this nation declared it's independence. What would they think of the city if they were alive today? Could they ever have imagined the motorized carriages, the towering skyscrapers or the thundering flying machines that flew low over head, landing just south of the city? And these devises that people constantly stared into; what was so interesting that people no longer looked up to greet each other as they walked by? Did they feel the weight of the world on their shoulders like most of us do today? Answers to these questions and thousands more will never be known, only speculation would feed the fire that began on that July fourth, in the year seventeen hundred and seventy-six.\n\nThe sun lazily disappeared into the western horizon and the city lights brought our day to an end as we made our way back to the hotel. Returning to our room, we both plopped onto the bed. \"Oh my God, I can't even think of moving,\" I moaned.\n\n\"Me neither,\" Marlene sighed. \"I still can't believe that I ate that much for dinner.\"\n\n\"We have a busy day tomorrow, Sweetheart,\" I sighed. \"Your hair appointment is at noon, right?\"\n\n\"Yes, high noon,\" Marlene yawned.\n\n\"I guess that I'll just hang around here while you're getting all dolled up,\" I thought out loud.\n\n\"Oh no, you're coming with me,\" Marlene replied.\n\n\"I am?\" I replied in surprise.\n\n\"Yep, I arranged for you to get a massage while I'm getting my hair done,\" she said as she rolled over and kissed me.\n\n\"You did?\" I said in a high pitched voice. \"Where?\"\n\n\"In the salon where I'm getting my hair styled,\" she grinned, kissing me deeper.\n\n**********\n\n**********\n\nWe woke together the next morning, yawning and stretching in unison. \"There's a coffee maker over there if you want a cup,\" Marlene moaned as she cuddled into me.\n\n\"Mmm, OK, in a minute,\" I yawned again, stroking Marlene's hair.\n\nWe sat at the small table and sipped the less than satisfactory coffee. \"Do you feel like running out quick to get a real cup of this stuff?\"\n\n\"Yes, this isn't doing anything for me,\" Marlene said, agreeing with my asesment regarding the hotel room brew.\n\nWe cleaned up quickly and soon found ourselves out in the city streets once again. Coming across a small cafe, we stepped inside and took a table by the window. Drinking real coffee and chewing on bagels with cream cheese, Marlene described the people as they passed us by. It was a beautiful morning, and people were out walking their dogs, buying the morning newspaper, and going for their morning jogs. A lifetime could be spent sitting at this window, I thought; and many stories could be written about the various people that canvassed the sidewalks.\n\nAfter showering and heading to the hair salon, we parted ways as our names were called. After an hour of pure relaxation, I returned to the salon where Marlene was talking to the hair stylist while having the finishing touches completed. She saw me in the mirror and said, \"Hey Handsome, how was your massage?\"\n\n\"Very, very nice,\" I replied as I relaxed into the cushioned chair.\n\n\"I have to get my nails done and then we'll be out of here,\" she said apologetically.\n\n\"It's alright, Sweetheart; I'm fine.\"\n\nthe stylist asked Marlene if she thought that I might want her to dress up my hair a bit. \"What do you think, Michael?\" Marlene asked.\n\n\"Dress up my hair?\" I questioned.\n\n\"Just clean it up a bit,\" the stylist explained, \"I have a few minutes before my next client. It won't take but a minute or two.\"\n\nMarlene was led to the nail salon, and I was led to the chopping block. \"OK, wave your magic wand and make me handsome,\" I joked.\n\nthe girl laughed and assured me that she didn't need to perform any magic to make me handsome. \"Oh, you're just saying that because it's true,\" I joked.\n\n\"Oh brother,\" I heard Marlene giggle from the chair where she was sitting.\n\nIn minutes, I apparently looked like a new man. The stylist turned me to the mirror, blew the cut hair from around my neck before swiping it with a powdered brush. I heard a whistle coming from the nail salon. I turned red, telling Marlene to stop. I turned a deeper shade when I heard two other whistles coming from the same area. The women all laughed as I sat, clean cut and red faced.\n\nFourty-five minutes later, Marlene and I found ourselves walking back to the hotel. I wasn't allowed to hold her hand because of her freshly painted nails, so I took hold of her elbow as we continued our walk. \"Can I feel your hair when we get back?\" I asked.\n\n\"No, well, not right away,\" she said. \"I'll let you feel it after I put my dress on, OK?\"\n\n\"Oh baby, your dress...\" I whispered.\n\n\"Take it easy there, Handsome; we don't want to get anybody, or should I say, anything excited,\" she giggled. \n\nThe time had come to get dressed. Marlene went off to the bathroom to apply her makeup, lotions, and whatever other things that women do to prepare themselves for a special occasion!I on the other hand, splashed Marlene's favorite cologne on my fface and neck, and threw on my suit. I was sitting on the bed tying my polished shoes when Marlene stepped into the room. \"Mmm, you smell good, Handsome,\" she said as she retrieved her dress from the closet. I stood up and adjusted my tie before slipping on my jacket. \"Oh my god, Michael, you look so unbelievibly handsome,\" she said as she stepped from the closet and walked towards me. Marlene adjusted my tie and took a step back. \"Michael, that suit is gorgeous and fits you perfectly. I am speechless, absolutely speechless...\"\n\nMarlene kissed me softly, wiping her lipstick from my mouth. \"Mmm, you smell edible,\" I whispered as I felt her barely clothed body.\n\nShe brought my hands up to her thin, lacey bra, squeezing my hands into the silky material. \"Sheer silver,\" she teased. \"And in case you're wondering, the rest is silver too!\" she added with another soft kiss to my trembling lips.\n\n\"Marlene, you are the sexiest woman on this earth,\" I moaned into her mouth. She pulled my hands down her belly, to the garter that she was wearing that held up the stunning ultra-sheer silver stockings. Her four inch silver strappy sandals supported her graceful frame, and a lacey silver thong finished off her undergarments. \"Marlene, I'm never going to make it to the wedding,\" I gasped as she stood, sexy and confident before me.\n\n\"I'm sure that you'll be fine... Well, at least for a little while,\" she teased.\n\nI reached my hands around the soft cheeks of her ass and pulled her into me. \"I'm not so sure,\" I whispered as I kissed her neck.\n\n\"Mmm, Michael, stop... I need to finish getting ready. Can you help me zip up my dress? In case you're wondering it's also silver. A beautiful, shimmery silver.\"\n\n\"I don't know if my hands are working,\" I whispered. trying to picture my beautiful Marlene, standing in front of me in her stunning undergarments.\n\nMarlene stepped into the sleeveless, silver dress and adjusted it before giving me the go ahead to zip up the back. The sexy sound of the long zipper echoed through my head as it ran up the length of her spine. I fixed the clasp on the first try. Don't ask me how, it was pure luck.\n\nShe turned to me and slid my hands over the length of the form fitting, silky fabric. It held tight to her waist and rounded over the small curve of her ass. The dress loosened as it dropped down over her hips, stopping just above her knees. A slit graced her left thigh, ending just below the top of her stockings. She showed me the gold and silver bracelet that she was wearing around her subtle wrist, and the sparkling earings that dangled down from her tender ears. Her hair was styled high, accentuating her long delicate neck. A length of hair twisted down each side of her head. She wore a smokey eye shadow with hints of gold glitter and a very pale rose lip gloss to finish off her face.\n\nElegant, sophisticated, sensual, and sure as shit, sexy is how I would describe my beautiful Marlene. \"I still don't know how any one person can be so beautiful,\" I said as I stood breathless before the love of my life.\n\n\"Michael... Please...\"\n\nMarlene and I were one in the same; we didn't know how to take a compliment without feeling uncomfortable. The fact however, is that she indeed was truly beautiful, whether she was dressed to the nines, or in one of my ratty shirts and a pair of my shorts.\n\nWe had asked our bell hop if he could arrange for a taxi to meet us in front of the hotel. Marlene grabbed her purse, and we made our way down to the street for our ride to the church. The bell hop greeted us as we exited the elevator, telling us how fantastic the two of us looked together. We recieved a couple of more compliments as we made our way out to the waiting taxi.\n\nWe entered the church and were seated with my mom, sisters and their husbands. Marlene of course, received an overabundance of compliments as we greeted them. I also was greeted with some whistles and compliments regarding my new suit. The girls chatted about their dresses, shoes, and accessories as we waited for the ceremony to begin. It was very nice as weddings go and after greeting the new bride and groom, drove to the reception at the Ben Franklin with Rose and her husband Matt. There was a cocktail hour before the actual reception where we ate various hors d'oeuvres and drinks. There was shrimp cocktail that was the length of my hand and it would have been fine with me if that was all that I ate for the rest of the night. Well, besides other things that I was planning to feast on later at the hotel!\n\nMarlene and I walked around the room, making introductions to aunts, uncles, cousins and sisters, that she had not yet met. We fed each other strawberries that could be dipped in various melted chocolates and sugars. \"Michael, this is amazing, all of this food, drinks, and desserts are over the top!\"\n\n\"Yeah, this is pretty unbelievable, and this is only cocktail hour. We still have the main reception to attend upstairs.\"\n\n\"So my dear Michael, where did you get this gorgeous suit?\"\n\n\"I told you last week... I had some errands to run in the city!\"\n\n\"You stinker, I new that you were up to something... You are so bad. Did you and Misty really take the train into town?\"\n\n\"Yes, we did, and we were almost thrown out of the high class store where I bought it,\" I said to Marlene as we stood by a fruit bowl, attempting to stay away from the shrimp!\n\n\"You almost what?\" Marlene asked in surprise.\n\n\"Oh, some snooty guy got his panties in a bunch and wanted to throw me and Misty out of the building.\"\n\n\"They aren't allowed to do that are they? Isn't that against the law?\"\n\n\"I don't know, you're the lawyer,\" I joked. \"Actually, no they can't throw us out. Well, they can, but they would pay a very hefty price for doing so,\" I explained. \"It's a state and federal law that allows blind people and their guide dogs access anywhere the public is able to go.\"\n\n\"So, what happened?\" Marlene asked with interest.\n\n\"A police officer interveened and demanded that the manager make a personal appearance. Things very quickly were resolved after that,\" I finished.\n\n\"And you came to see me after all of that? You are too much, Handsome,\" she smiled and pinched my cheek.\n\nIt was time to move to the main dining area for the reception, so we all made our way upstairs, found our tables and took our seats. the guys were getting drinks for their wives, so I joined them, taking Matt's elbow and walked to the bar. \"Mike, I have to tell you, Marlene is absolutely gorgeous. Do you have any idea what she looks like?\"\n\n\"Yeah, I have an good idea,\" I said with a smirk.\n\n\"No, did anybody ever describe what she looks like?\" he said again.\n\n\"No Matt, but I don't need to know because it doesn't matter,\" I finally said. \"I'm going to get her to dance with you though,\" I laughed.\n\n\"Oh yeah? is she a good dancer?\" he asked.\n\n\"Yeah, she's OK,\" I nonchalantly said.\n\nMatt danced like he had two left feet. He was the kindest, funniest guy, and he was always busting my ass about something. Now it was my time to pay him back! I ordered Marlene a glass of wine and myself a Diet coke, and after talking to a couple of cousins, Matt and I made our way back to the table.\n\nThe events of the evening began and the main coarse was served. My prime rib was as big as my plate and it melted in my mouth as I continued to feast on it, along with the mashed potatoes and roasted vegetables that graced the rest of the plate. Marlene couldn't say enough about her salmon, and was in absolute heaven while she ate and sipped on champagne. \"I'll save my wine for dessert!\" she joked.\n\nAfter the tables were cleared and coffee was served, the DJ started to wind up the dance music. We sat for awhile to let our meal digest before attempting to do any dancing. Their were some people dancing to the oldies, doing the jitterbug and the cha cha. My older sisters and their husbands soon joined in. It was fun to sit and watch them as they twisted each other around the dance floor. The music slowed and Marlene was out of her seat and pulling me out onto the dance floor before the opening section of the song was finished. The group began to sing, \"There's a spark of magic in your eyes...\"\n\n\"Michael, it's that song...\"\n\n\"Betcha By Golly, Wow,\" I said in shock, \"I can't believe it.\"\n\nOK, things were even getting weird for me, and chills ran down my spine. This was the very first song that Marlene and I had ever slow danced to, and it just happened to be the first slow song of the night. We melted into each other's arms and moved gracefully together as the song played on. She kissed me softly and told me that she loved me, then began to play with my hair. She was in heaven, she was playing with my hair, her security blanket, her happy place! \"I still can't believe that I am standing here, dancing with the most beautiful woman in the world,\" I said with a smile.\n\n\"You better believe it, Handsome, and you better never get tired of it!\" she giggled.\n\n\"Marlene, how could anyone ever get tired of this?\" I asked.\n\n\"I don't know,\" she simply whispered. \"Utt oh, Michael.\"\n\n\"What's wrong, are you alright?\" I asked with concern.\n\n\"People are staring at us... It's happening again,\" she whispered.\n\nMarlene, there has to be twenty couples out here dancing isn't there?\" I asked.\n\n\"No, there's maybe five or six,\" she whispered in my ear. \"Michael, what is it with you? Everytime that I'm with you, this happens,\" she said in in amazement.\n\n\"They're looking at you because you're so beautiful,\" I whispered back. \"Don't worry about it, Sweetheart, let them enjoy what they're looking at,\" I laughed.\n\nWe danced two more slow dances before the DJ fired up the dance music. I felt Marlene's hips begin to quiver in anticipation before she asked if I was ready to do a little bit of sweating. I took a deep breath before shaking my head yes, and off she went, shaking and wiggling to the beat of the thumping base. My sisters and the guys joined us and the hooting and hollering began. Marlene turned and ground her ass into me and I held onto her hips for dear life. She threw her arms behind her, grabbing my neck and pulled me forward in a sideways kiss. \"Yeah, go Mikey,\" one of the guys yelled.\n\n\"C'mon Marlene, show him what you've got,\" another laughed. We were having the time of our lives, not only dancing together, but with our family. Marlene twisted and gyrated in front, behind, and around me. She was a machine as she effortlessly moved her body. The song finally ended and I was winded, I needed to have a seat and the guys guided me back to the table while Marlene and my sisters remained on the floor for three more songs. \"Holy fuck, Mikey, she tore you up out there,\" they said. \"Look at her, her body is moving in more ways than should be legal. Mikey, do you know what her dress looks like?\"\n\n\"Yeah, I have a good idea; I helped her put it on,\" I smiled.\n\n\"You lucky, fucking bastard,\" they laughed.\n\nThe girls finally came back to the table after the music ended and the events of the evening continued. the toast was made, the bride danced with her father, the groom with his mother, the wedding cake was cut and distributed to the guests. It was time for the traditional throwing of the bridal bouquet and removing of the bride's garter belt, before it was thrown to the crowd of single men. My sister's insisted that Marlene go up and try to catch the bouquet. \"No way, I'm not going up there,\" Marlene said as she sat there red faced.\n\nMy sister, Lauren, got up and grabbed Marlene's hand. \"C'mon Marlene, you have to go up... I'll keep an eye on you,\" she said as she grabbed poor Marlene's hand. The guys had gone up to the bar for a shot or two as the countdown began for the bride to throw her bouquet behind her. The bouquet flew in slow motion through the air and right into the hand of my sister Lauren, who instantly shoved it in Marlene's hands. The crowd laughed and clapped with a louder roar coming from the bar. Oh shit, my brother-in-law's were getting started.\n\nIt was time for the single men to get on the dance floor after the groom had removed the garter from his new bride's leg. \"C'mon Mike,\" Matt said as he ran over to retrieve me.\n\n\"No way, Matt... I'm fifty four years old,\" I said. \"I'm too old for this,\" I pleaded to him with no avail.\n\n\"OK, we are going to catch this fucking thing because we want to witness you sliding that thing up Marlene's sexy leg,\" he said in a tipsy, but serious voice. \"Right here, Johnny,\" he yelled to the groom as the count down began.\n\nUp into the air. The garter sailed with Matt reaching up and over me, grabbing it out of the hands of a stunned sixteen year old kid, wrapping it around my head like a headband. The crowd laughed and cheered as I stood there on the verge of passing out. \n\nA chair was pulled out onto the middle of the dance floor and Marlene was asked to take a seat. The DJ explained the rules to us. \"Mike, the higher you put the garter on Marlene's leg, the better luck it is for the bride and groom,\" he said into the microphone. The crowd was hooting and cheering as the sexy music began. I could hear the guys cheering me on. \"C'mon Mikey, do it, do it!\"\n\nWell, if they wanted a show, I would give them one! what the fuck, you only live once, I thought as I began to circle Marlene while twirling the garter over my head. The music was loud, the crowd was cheering, and my brother-in-law's were egging me on from the sideline. Marlene sat in the chair with her hand over her mouth as I continued to tease her with what I would soon be sliding up her gorgeous legs. I circled her a second time before dropping to my knees in front of her. Marlene had her leg crossed over the other and her heell dangled from her foot. I took her shoe off and threw it over my shoulder making the surprised photographer duck out of the way. The crowd erupted as I placed the garter in between my teeth. \"Michael!\" Marlene screamed in shock.\n\nI took Marlene's sexy stocking covered foot into my hand and slipped it through the opening of the garter. I looked up at Marlene as I began to work my way up her sexy calve. The DJ was encouraging me as he laughed with the rest of the crowd. As I got to Marlene's knee, I lifted the hem of her dress, slid the band over her knee, and stuck my head under her dress as I raised the belt up her thigh. I felt Marlene's hand grab my head as I continued to work my way up. She let go and held her dress down over me so the crowd couldn't see up her legs. \"Michael, stop!\" she screamed and laughed. \"Stop, you're so bad!\"",
        "I was well up between her thighs as the crowd began to chant my name. \"Mikey, Mikey, Mikey,\" they shouted. the sound of men cheering and girls screaming filled the huge room. I stopped at the top of Marlene's thigh and sucked her skin between my lips. I felt her stiffen as my mouth clamped onto the soft skin above her stocking. She grabbed my head and pressed me into her as I sucked hard. I figured that I had already pressed my luck, so I gave her a little bite and slowly retreated down her leg and popped from beneath her dress and was greeted by a roar from the crowd. My face was beet red from embarrassment, but mostly from the heat under Marlene's dress. As I straightened back on my knees, Marlene leaned over and gave me a huge kiss. \"You are so, so bad, Michael, but I love it, and I love you, Sweetheart.\"\n\nI stood up with help from Marlene, both of us red faced as the DJ said, \"Well Mike and Marlene, the bride and groom should live a very, very long and happy life after that display! Ladies and gentlemen, lets hear it for Marlene and Mike!\" The crowd erupted again as we made our way back to our table. My sisters were in tears as they laughed and hugged Marlene. Of course, the guys had their own comments saved for me as I sat and took a much deserved drink. I thanked Matt for what he did for me as far as yanking the garter from the young kid who probably shouldn't have been up there in the first place. \"Now that was a show,\" Matt said as he patted me on the back. \"How far up did you get?\" he asked.\n\n\"Far enough,\" I grinned.\n\nThe music started up again and the dance floor quickly filled as the alcohol began to take affect. Marlene and I sat out for a couple of songs, trying to regain our composure. \"Michael, I can't believe you did that... You are absolutely crazy,\" she giggled.\n\n\"You aren't upset, are you?\" I asked.\n\n\"Oh no, Handsome... I thought that it was great, but when you sucked on my thigh,\" she whispered into my ear, \"I thought that I was going to pass out.\"\n\n\"Oh believe me, Marlene, if I could have gone higher, I would have,\" I said with a huge grin on my face.\n\n\"Well, maybe you can go higher when we get back to our room,\" she whispered in my ear before dipping her tongue inside.\n\nChills raced down my spine as her tongue circled inside of me. Her hand reached under the table and felt the massive hard on that was in my pants. Marlene backed away and smiled, taking a sip of wine as her hand held my covered cock. I moaned and eased my hip up to meet her. \"You better stop, Handsome, or you're going to ruin your new suit,\" she giggled.\n\n\"Sweetheart, can you do me a favor?\" I asked.\n\n\"No, not here,\" she said with a smile.\n\n\"No, not that, well if you want, but can you take Matt onto the dance floor and let loose with him?\"\n\n\"You want me to give Matt a run for his money?\" she asked, laughing at the thought. \"I can't do that to him,\" she said in a sympathetic voice.\n\n\"Please?\" I asked again. \"Just take him out and dance with him,\" I said with a smile.\n\nMarlene finally relented, walked around the table to Matt and took him by the hand. \"C'mon Matt, lets go out and dance,\" she said, pulling him by his hand out onto the dance floor. The floor was crowded with people of all ages dancing and overall, having a great time. Marlene leaned over and said something to Matt and then let loose. She easily moved her hips in more ways than poor Matt could have ever imagined. My sisters and their husbands were crying with laughter. The girls were yelling to Marlene. \"Give it to him Marlene,\" they yelled as they laughed at Matt's weak performance. Marlene twisted into Matt and ground her ass into him, raising her hands into the air as she continued to shake and wiggle.\n\nRose was in tears as her husband didn't know which way to move next. \"What's wrong Matthew?\" she laughed, \"C'mon, move those hips!\"\n\nMatt never had a chance as my beautiful baby had him tripping over his own feet. The guys were hooting and laughing at their floundering brother-in-law. As the song ended, Marlene and Matt received a round of cheers from our table. Matt was sweating pretty heavily as he attempted to downplay his lack of coordination.\n\n\"Nice job, Matt,\" I laughed as he came back to the table and plopped in his chair. One of the guys gave him another shot, telling him that it may help him calm down! My precious Marlene gave Matt a kiss on the cheek before coming around and sitting next to me. \"Thanks, Sweetheart, it sounded like Matt had a great time out there,\" I said as I kissed her sweaty lips.\n\n\"Michael, I feel so bad, but I have to admit, it was a lot of fun,\" she giggled. \"Don't laugh too hard, Handsome, you're next,\" she laughed as she pinched my cheek and gave me a soft, lingering kiss.\n\nThe reception was winding down as we all managed to laugh and dance the night away. Marlene and I said our goodbye's to everyone before leaving the party. As we stepped out into the pleasant night air, we decided to walk to the hotel instead of taking a taxi. \"Michael, I had such a nice time, your family is so, so nice and they make me feel like a part of the family,\" she said as we walked arm in arm up the street.\n\n\"You are part of the family, Sweetheart,\" I responded, stopping and turning towards her. \"Maybe some day legally,\" I whispered as my lips grazed her mouth.\n\n\"Michael...\" she moaned, \"Really?\"\n\n\"You never know what the future holds Marlene,\" I said with a grin before sucking on her bottom lip.\n\n\"Mmm, we should have taken a taxi to the hotel, Michael,\" she moaned as her smile widened.\n\nIt seemed that our pace quickened until we made it to the hotel and up to our room. We both sighed as we entered the room and sat on the bed. I began to take my suit jacket off as I sat there with my legs tingling from all of the dancing and walking. I stood and placed my jacket on a hanger when I heard Marlene ask me if I could unzip her. \"Fuck yeah,\" I answered with a huge smile. \"I've been looking forward to this moment all night,\" I laughed.\n\nMarlene walked over and turned her back to me. I unclasped the hook before running the zipper down her elegant dress. \"Thank you, Handsome, I'll be right back,\" she said as she walked toward the bathroom. Before closing the door, she said in a seductive voice, \"Don't bother putting any clothes on after you hang up that gorgeous suit.\"\n\nAs I stood there,hanging my suit in the closet and standing in my underwear and shirt, Marlene walked up behind me and reached her arms around me. \"I had to take the pins out of my hair,\" she whispered. \"I was going to put on something special that I bought, but it probably won't stay on that long, so I decided to just stay in these.\"\n\nShe lifted my shirt over my head and pulled my underwear down my legs. My cock strang out from the undergarment as Marlene threw them to the side. \"I just left my garter, stockings, and heels on; is that alright with you, Michael?\" she asked in a teasing voice as she pressed her breast into my back. the warmth of her tits had me moaning out loud. Her nipples danced across my back as she began to rub them into me, while reaching and taking my raging cock into her hand. \"How about if we take this to the bed?\" she suggested.\n\nWe couldn't get to the bed quick enough. We melted into each other after bouncing on the plush mattress. Our bodies tangled, our lips pressed together, and our tongues wrestled in each other's mouths. We were so excited that we didn't quite know where to start. There were too many decisions to make, too many parts of our bodies that we wanted to explore. We rolled and tumbled over the bed together for awhile before I broke our connection and moved Marlene onto her stomach. And there she laid before me, the picture of perfection dressed in nothing but a smokey silver garter, sheer silver stockings, and strappy, high heel silver shoes. \"Oh my god, Marlene, you are so beautiful,\" I said as I gently parted her legs. She moaned and wiggled into the bed as she felt my touch on her legs. I caressed her stocking covered calves, gliding my hands softly down to her heels. I slowly began to kiss my way up her legs until I reached the top of the silky hosiery. Marlene whimpered as I placed soft kisses on her naked thighs. I retreated down and bent my head, so that my hair would be the only thing that touched her body. I worked my soft hair up her legs and received a sharp gasp as I spread her legs a bit more and ran my hair up the valley of her ass. \"Oh my god, Michael, what are you doing to me? Oh god, that feels unbelievable.\"\n\nI repeated my action, this time after Marlene had spread her legs wider and lifted her ass higher to enable my hair to graze the lips of her moist pussy. \"Oh God, yes, yes, Michael... That feels so good,\" she gasped into the bed. I worked my way over her ass and up her back stopping at her neck. I could feel the chill race through Marlene's body as the end of my hair trickled across her soft skin. As Marlene raised up onto her elbows, I laid my cock between her ass cheeks and laid on top of her, pressing her down into the bed with a loud groan. \"Michael, please, please, I want you,\" she pleaded. I raised up and straddled her ass. My balls draped down between her legs and rested against her pussy. She pushed back and wiggled her ass, trying to stimulate them against her. I reached up and held her hands together above her head as I worked my way up her back, only letting my cock and balls touch her skin. Marlene was groaning and gasping as I deliberately worked my way up to her neck, leaving a wet trail of pre-cum behind. As my cock extended over her shoulder, she lifted her head and turned it to the side in an attempt to take it in her mouth. \"Michael, please, let me have it,\" she begged as her tongue extended like a snake, trying to grab a sample of what she wanted in her mouth. My hands were holding her wrists above her head as she begged and pleaded to me.\n\n\"Not yet, Sweetheart, I have more work to do,\" I whispered in her ear in a slow heavy breath. I released her hands and turned around, sitting on her back in reverse. My cock and balls pressed into her back as I leaned forward and began to lick and kiss the cheeks of her ass. \"Oh, Michael, please, yes, don't tease me,\" she whimpered. I moved down and sucked on the back of her thighs, feeling them spread wider in an open invitation. I rolled Marlene onto her side, remaining secure to her back. \"Oh Michael, what are you doing?\" she asked in a shaky voice. She didn't have to wait long for my answer, as I slid my head between her legs and licked the lips of her wet pussy from behind. \"Oh yes...yes..fuck, lick me,\" she begged. Her thighs clamped around my head as my tongue graced the entrance of her dripping pussy. She screamed out loud as she grabbed my head and pulled me into her. Marlene's hips thrust against my face as I filled her pussy with my tongue. \"Oh yes, Michael, lick my pussy... Lick meeeeee...\"\n\nMy nose was pressed against the trimmed hair of her landing strip as I continued to bathe her pussy with long, deep licks. I slid my tongue up to her clit as she began to buck herself wildly against my face. \"Michael, Michael...yes...lick...my...clit,\" she pleaded. I licked, kissed, and sucked her clit into my mouth while she held onto my hair with her fists and pulled me hard onto her, as she exploded with a long wail. Marlene continued to hump against my face as her orgasm raced through her entire body. \"Michael, Michael, Michael,\" she cried as the emotions spilled out of her. \"Michael, please, don't stop... I love you, I love you so much,\" she continued as tears poured from her eyes, running streaks of makeup down her cheeks. She held onto my hair as another quick orgasm unexpectedly rreared up from the depths of her convulsing pussy. Marlene was gasping for air as her body shook uncontrollably. I felt her release my hair before she rolled to her back, panting and sniffling as her orgasm slowly subsided. I slowly made my way up her heaving body, stopping to take each nipple into my mouth before reaching up and softly kissing Marlene. \"Are you alright?\" I asked as I kissed the tears that were running down her face.\n\n\"Michael, my god, what are you doing to me?\" she tearfully asked. \"How can you possibly keep making this better for me?\"\n\n\"Just lucky,\" I answered with a grin.\n\n\"You are so amazing; that was so amazing,\" she whimpered.\n\nWe laid together, stroking every part of each other, leaving trails of soft kisses along the way. It wasn't long before Marlene had her lips wrapped tightly around my cock and she was taking me down to the base. My cock pulsed in her mouth as she bobbed up and down the length of my shaft. She quickly pulled off of me, swung her hips over me and inserted my cock between her slick pussy and thrust down, taking the entire length deep inside. I moaned out a long, low growl as she began to repeatedly slammed down on my shaft. I could feel my orgasm building as Marlene wildly bounced up and down. My moans grew louder as I could feel myself growing inside of her pussy. She slammed onto me one last time and ground her pussy against my pelvis in rapid thrusts. My body tensed as I announced my orgasm, shooting jets of cum deep into her silky pussy. I was gasping for air as the cum continued to race out of my cock. Marlene was not far behind as she stiffened and fell on top of me in another orgasm. Her pussy contracted around my cock as the last shots of cum drained from my balls. Marlene continued rubbing against mne as her body quivered on top of me. She bit on my shoulder as another short orgasm finished her off.\n\nWe laid together, breathing heavily, holding each other tightly, and telling each other how wonderful our life had become. We fell asleep in each other's arms with my cock still buried in Marlene's pussy. Marlene woke up at some point during the night and removed her shoes and stockings before cleaning my cock with her mouth and rinsing herself off in the bathroom. We awoke in each other's arms in the morning, making love again before showering and packing our clothes. We ran out for a bite to eat one more time at the Reading Terminal Market, and once again left the famous building holding our bellies which were filled with some of the best food imaginable. We took a quick walk through Independence Mall one more time before making our way back to the hotel. We had to check out by eleven, so, we phoned the bell hop and he came up to help us carry our bags and luggage to the car which was waiting for us in the valet parking. After tipping the bell hop and valet, we drove into the eastern sun, and headed back to New Jersey.\n\n\"Michael, I had the best time ever,\" Marlene said with a broad smile. \"I am the happiest that I have ever been in my entire life.\"\n\n\"I'm glad that you had such a nice time, Sweetheart,\" I responded, \"It was really a lot of fun. My family is crazy aren't they?\"\n\n\"Oh my god, they are hysterical, and that poor Matthew...\" she laughed.\n\nI took Marlene's hand into mine, saying, \"Marlene, I'm so glad that you are so happy... I love to make you happy, and I also want to keep you happy for the rest of your life.\"\n\nShe squeezed my hand and held it for the rest of the ride home. We stopped at Marlene's mom's to drop off her things and pick up Misty. As we entered the house, the smell of coffee filled the air. \"Hey mom, we're home,\" Marlene yelled. Misty came racing out and wildly whipped her tail against us. \"Mom? Mom? Where are you?\" Marlene yelled in concern.\n\n\"I'm in the bathroom, Honey, I'll be right out,\" the sweet voice faintly said.\n\n\"Michael, I just had a really bad feeling for a second,\" she said as she held onto my arm before leaving, and making her way down the hall to check on her mom. Misty happily bounced along, not leaving Marlene's side.\n\n\"So much for man's best friend,\" I sighed.\n\nIt was ten minutes or so before Marlene reappeared, walking into my arms, telling me that her mom had slept in, with Misty keeping her company on the bed. She said that they had a relaxing morning, reading the paper and doing her crossword puzzle before turning on the Sunday morning shows. \"She's fine... She just lost track of time and is finishing up in the bathroom now,\" Marlene told me. \"Michael, she really gave me a scare.\"\n\nWe sat and watched TV until Mrs. Cassidy arrived from the hallway and greeted us with a smile and a kiss. \"Hi Mom, how are you?\" I asked as I gave her a hug.\n\n\"Hi Michael, I'm fine; how was your wedding?\" she replied.\n\nWe sat and told her all about the wedding, the hotel, and the things that we saw in the city. She told us that Misty was as good as gold and that they had a great time together. \"We sat and watched TV together, went for walks, and someone got her belly rubbed on more than one occasion,\" she laughed as she continued to stroke Misty's soft black fur.\n\n\"Mom, how did you get Misty to rub your belly,\" I asked with a laugh.\n\nMarlene spit water from her mouth across the room as she burst into a fit of laughter. She was coughing and trying to say something as she continued to laugh hysterically. \"Michael... You have to stop...making...me...\" she tried to say, coughing more as she couldn't finish her sentence. She got up and retrieved some paper towels to clean up the water that sprayed the room. As she settled down, she said, \"Michael, you have to stop doing that while I'm drinking... How do you think of saying those things so quickly?\"\n\n\"Just a gift,\" I laughed.\n\nMom was still laughing as Marlene wiped up the splatters of water from the coffee table and carpet. \"Mom, did you say that you and Misty went for a walk?\" I asked in surprise.\n\n\"Walks,\" she replied. \"Yes, Michael, why? My precious girl was so gentle while we walked around the block. And she stopped at every corner for me before I told her to go.\"\n\n\"Mom, she could have pulled you over,\" I said. \"She is really strong and you could have gotten hurt,\" I explained, trying not to make her feel bad.\n\n\"My baby girl would never do any such thing to her grandmom,\" Marlene's mom replied.\n\nMarlene and I laughed at her innocence as she spoke. \"Sweetheart, I better get going, so you and mom can do whatever you have to get done,\" I said as I stood up and stretched.\n\n\"OK, Handsome, give me a minute and I'll give you two a lift home.\"\n\n\"Michael, I still think that you should take Marlene, and leave my pretty girl here with me,\" her mom said in a whisper.\n\n\"I can hear you, Mom,\" Marlene sighed.\n\n\"Mom, I just may take you up on that one day,\" I answered. \"We'll talk about it later, OK?\"\n\n**********\n\n**********\n\nWell, another chapter is finished! The next one will be the last in the Silver series. Stay tuned for the final chapter of Marlene and Michael's lives...\n\nHoping that you enjoyed this story! Remember, your personal feedback is always welcome! Hoping that you all are well and that you enjoy the upcoming holidays. Remember, be kind to each other, say hi to people as they pass you by, and do something that will make a stranger smile; you never know, it may be the only act of kindness they receive. Enjoy your day... CantC54\n\n**********\n\n**********"
    ],
    "authorname": "CantC54",
    "tags": [
        "romantic story",
        "romance",
        "love story",
        "sex",
        "cunnilingus",
        "blow job"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/silver-pt-05"
}