{
    "title": "A Case of Self Defense",
    "pages": [
        "I've never submitted a story in the Loving Wives category, and I'm doing so now with great trepidation. Frankly, the commentators in this section are brutal. Many, though, are very insightful and offer genuinely thoughtful comments about writing style, character development, and the like. My only complaint with this category is that much of the basic plot lines appeared to have been thoroughly explored. Moreover, many of the themes are beyond cliche. Though it may be true, I long ago tired of every poor cuckolded bastard bemoan that his \"slut\" of a wife had violated their marital vows to foresake all others. No, I wanted to write something different. I don't really think I've succeeded, and I'd appreciate the readers' thoughts on this.\n\nFinally, much of this is a courtroom drama, and quite a bit of law is present. For those of you who watch too much Law & Order, I should tell you up front that the vast majority of the law as set forth in this story is an accurate depiction of the law in the State of Illinois and under the Federal Constitution, particularly the final bit at the end. I am an experienced attorney, and I have tried to keep as faithful to the law as possible.\n\nFinally, I fully realize that almost no lawyers act as depicted in here, but enough do act like this to make the story believable. (Remember the sleazy prosecutor in the Duke LaCross Team Rape Case? Or how about all the mob lawyers serving time in prison for conspiring with their own despicable clients?)\n\nThough I realize this is a very long story, I didn't want to drag it out so you're getting it all in one fell swoop. Please take some time to comment and let me know what you think.\n\n\n\nCHAPTER ONE\n\n\"That was nice,\" she said, regaining her breath.\n\nAlain Broussard only grunted, too winded to speak. Instead, his fingertips traced over her distended nipples. He loved her nipples. They were tiny, surrounded by small, light pink areolae, but they got hard as pebbles when she was excited and stayed that way.\n\n\"You remember what we talked about this afternoon?\" she said after finally settling her breathing. \"Over lunch?\"\n\n\"Uh huh,\" he said, not really remembering.\n\n\"Well,\" she said, rolling onto her side and facing him, \"I think I've got an idea.\"\n\nBroussard was alert now and flipped onto his side to face her. \"Let's hear it.\"\n\nHer eyes blazed with excitement as she began.\n\n\"All right, here's the deal.\" She sat up, sitting Indian style. He looked at her pussy, the bare mound and lips now slick with sweat, semen, and arousal. He focused back on her eyes and caught the sly smile.\n\nShe gets me going more than any of them, he thought. So comfortable in her body, flaunting it and knowing how to get him aroused.\n\n\"Concentrate, Alain,\" she said. \"This is important, and it'll make us a bundle.\"\n\nHe shot his eyes back to hers and nodded.\n\n\"Good boy,\" she taunted. \"So, everyday we calculate interest. Every day. On all deposits, investments, mortgage loans, short-term and long-term commercial paper. On all of it, and we do it every . . . single . . . day.\"\n\nHe nodded. \"Yeah. So what?\"\n\n\"Right down to the ten thousandth of a cent, right?\"\n\nHe nodded.\n\n\"Well, let me ask you something. When you get your savings account statement, does it show the fractions of a cent? Or does it just show the actual cent?\"\n\n\"Just the cents.\"\n\nShe nodded. \"Exactly. Your statement says, like, twelve dollars thirty-four cents, right?\" He nodded. \"Not twelve point three four two nine six three, right?\" He nodded again, not seeing where this was going.\n\nHer grin got bigger. She enjoyed playing him along like this, but he was getting impatient, wanting to look back between her legs. \"You'd never know if someone took the fractions off of the cents, would you?\" He opened his eyes, realizing the import of what she was saying.\n\n\"So we set up a dummy account, funnel all of those fractions of a cent from every single account\u2013every single day\u2013into the dummy account. Then we automatically funnel the dummy account balance to a numbered account, maybe Switzerland or the Caymans. It's only fractions, but\u2013\"\n\nHe finished the thought for her, unable to contain his excitement. \"But on millions of accounts every single day, it's. . . . Jesus Christ, it's a goddamned fortune.\"\n\nShe nodded, pleased with herself. \"Actually, it's about nine hundred grand a month, give or take,\" she said. \"Some months the fractions will average lower, some months higher. But on average, we're looking at nine hundred grand a month.\"\n\nHe nodded, all thoughts now on the treasure about to be amassed rather than the treasure between her legs. \"But can it be done? I mean, I'm sure it can be done somehow. But won't we get caught? Who checks this shit? And, frankly, I don't know shit about computers.\"\n\nShe nodded and bit her lip.\n\n\"Out with it,\" he said.\n\n\"Well, we've got you to cover our ass from on high. You're a senior vice president in commercial paper, so you routinely sign off on overseas transfers.\"\n\n\"Yeah,\" he said. \"And that raises the first problem. We'll have to create a whole mess of new accounts, not just one. The system will trigger IRS flags on any daily transfers from one account in excess of ten grand. So we'll have to set up, what, four or five accounts just to be safe.\"\n\n\"Good,\" she agreed. \"And we've got me. I'm in audits. Not a big wig, mind you, but I can keep an eye on things there. So we've got two out of three bases covered. We've got the money out covered, and we've got hiding the trails covered. Now we need someone to break the computer security and program the system to do what we need.\" She raised her eyebrows at him. \"Any ideas?\"\n\nFor the first time, he felt a smile coming over his face. \"I think I do,\" he said. \"And we're going right to the top.\"\n\n\"Richards?\" she said.\n\nBroussard nodded. \"It's perfect. He's the best, that's why he runs electronic security. He's a fuckin' genius to hear Jensen go on about him.\"\n\n\"But will he do it? I was thinking someone a bit more . . . I don't know . . . vulnerable.\"\n\nBroussard rubbed his hands together. \"Oh yeah, given the right amount of enticement he'll do it. Just got divorced. I heard him talking in the executive dining room, and he's getting clobbered on child support and alimony. He needs the money.\"\n\nShe frowned. \"Yeah, but will he get in on this? I mean, we get caught we go to prison. And we're ruined, professionally and financially.\"\n\n\"You chickening out already?\"\n\n\"Hell no,\" she said. \"I know the risks, but I'm willing to take them. And you know them, but it won't stop you. Our chances of getting caught are slim\u2013especially with all bases covered\u2013but there's still a chance. And he's a mousy little shit. He'll be scared off by the down side, no matter how small the chances of getting caught.\"\n\n\"That's where you come in,\" Broussard said. \"You see, he's also lonely. And I've seen him look at you. We play this right, you'll have him wrapped around your finger in a matter of weeks.\"\n\nShe frowned, mulling over what this meant. Broussard laughed, getting hard at the thought.\n\n\"Think about it,\" he said, \"it'll be like banging a high school virgin. You'll have your own little sex slave to keep you pleased. Train him to do what you want.\"\n\nShe laughed back. \"I've already got one of those,\" she said. \"He's called my husband.\"\n\n\"Then what's another sex slave?\" He reached his hands to her head and jerked her head\u2013and that wonderful mouth\u2013to his now throbbing erection. \"I'll make sure your other needs are met,\" he said, then groaned as his cock sank to the back of her throat.\n\nCHAPTER TWO\n\nAlain was right: Jeff Richards was a lost puppy dog. His divorce had caused a crushing financial burden that required him to give up half of his net income in child support and alimony, he was displaced from his five-bedroom home on the North Shore to a one-bedroom apartment further from the city, and he hadn't been laid in over a year.\n\nAt first, she was subtle. A smile, light touches on the arm, leaning into him for his answers to her innocuous questions. After two weeks, she sat with him in the executive dining room and chatted gaily about work, music, movies, and art. Soon, she was sitting with him every day, and the conversations got more personal. When he told her how crushed he was by his divorce, she even managed a tear as she stroked his arm.\n\nThe seduction was complete a month after it began. They were leaving the office together, and she invited him for a drive along the lakefront. Thirty minutes later, after stroking his thigh and murmuring her sympathies at his continued tales of woe, they were parked in the far corner of a forest preserve parking lot, away from other cars and prying eyes.\n\n\"Jeff,\" she said, her voice barely a whisper, \"I want to do something for you.\"\n\n\"What?\" he replied, confused.\n\nShe was enjoying this. He hadn't made a move, and she knew he would do nothing even if she was stark naked beside him.\n\n\"I want to help ease your pain,\" she said, her fingertips now running over the growing bulge in his pants.\n\nHe yelped, almost a squeak. \"But . . . but . . . you're married,\" he stammered.\n\nShe lowered her head, closing her eyes. Her voice went lower. \"I know,\" she said. \"But this isn't about that. I want to help you, and no one ever needs to know. I'm . . . well . . . these past few weeks, the pain you're under, I feel myself. . . .\"\n\nShe pressed into him, hugging with one hand and tracing his bulge lightly with the other. After a minute, he hugged her back, running his lips lightly through her soft blonde hair.\n\n\"I can't explain,\" she said. \"I just have to do this. You've become . . . someone special to me. Please?\"\n\nShe unbuckled his belt and slacks, then drew his zipper down. Reaching her hand in, she pulled his cock from the fly of his boxers and stared at it. She smiled. It was enormous. Experience taught her that, unless it was really small, size made little difference in actual sex. No, technique was far more important. Still, it was one hell of a visual turn on, and she was happy to see that Jeff Richards was certainly well above average in the endowment department.\n\n\"I don't know,\" he said, his breath coming shorter.\n\nBut his body knew, she realized. His cock was throbbing with the pulsing blood, and his hips were rising toward her lowering mouth.\n\nShe took him into her mouth, sliding her lips slowly up and down, sucking in as she did so. With her hand, she firmly grasped the base of his cock and began stroking him up and down in time with her mouth, feeling his pulse quickening and hearing his breath shortening to sharp gasps.\n\n\"I'm getting real close,\" he warned after little more than a minute.\n\nIn response, she picked up the speed of her hand and mouth, taking him in deeper and sucking harder.\n\n\"Oh my God,\" he groaned, shooting torrents into the back of her throat.\n\nIn response, she pushed her mouth down as far as she could, feeling his release on the back of her throat and around the head of his cock. She tried to swallow as quickly as she could, but his buildup was too much, and she felt the fluid escaping from her lips and onto her cheeks and chin.\n\n\"Thank you,\" he whispered as she released him and looked up. He reached into his pants pocket, withdrew a handkerchief, and licked the end. Then, as she sat up and looked at him, he dabbed the semen from her face.\n\n\"No,\" she said when he was done, leaning in to kiss him, \"thank you.\"\n\nThree weeks later, they lay together in the bed in his cramped apartment. She had spent the previous weeks giving him the rides of his life and planting the seeds of their plan in his mind. She knew he was now addicted to her, and he had reached the point where he'd kill for her if she asked. The time to strike was now, and she warmed him up with a blowjob.\n\nPromising him they could use the money to run away together and never be found, she told him the plan and what he needed to do. Richards was reluctant at first, but she poured it on.\n\n\"You're right,\" she said. \"Really, we don't need that much to be together.\" She stroked his softened cock. \"All we really need is a bedroom and a good strong bed.\"\n\nShe saw his eyes light up at the thought.\n\n\"But unless you want to pay child support and alimony for the rest of your life to that cheating whore who ruined you, we're going to need to get far away, set up new identities, and have enough money to live on until we're all set in our new lives.\"\n\n\"What about your husband?\" he responded.\n\n\"I can't stay with him any more,\" she replied, trying to bring a tear to her eyes and getting close. \"He's a bastard, cheating on me with everything that moves. Now I've got you, though.\" She feathered her fingers over his chest, teasing his nipples. \"I just want to be happy, and I need you for that.\"\n\nShe looked deep into his eyes. \"Please, Jeff, please tell me you'll do it. When we've got enough, we can go away together.\" She kissed his chest. \"Forever.\"\n\nHe sighed, and she knew she had him.\n\n\"Okay,\" he said. \"But first. . . .\"\n\nHe pushed her onto her back and leaned in, beginning a trail of kisses and darting licks from her neck, over and around her breasts, then to her stomach, concentrating there.\n\n\"Don't tease,\" she whimpered, pushing his head lower.\n\nHe obliged, and she groaned long and low when his tongue started circling her clit. My God, she thought, Alain was right. He was getting very good at pleasuring her. Maybe she'd dump Alain when all of this was over and concentrate on making Jeff Richards the ultimate walking dildo.\n\nCHAPTER THREE\n\nShe had seen his car when she pulled into the garage, but she didn't want to see him just now. No need for any confrontation.\n\n\"Hello, Deborah,\" he said from behind, startling her.\n\nShe froze. \"Alain,\" she responded, turning to see him leaning against the breakfast bar.\n\n\"Where've you been?\"\n\nNow unable to avoid talking with him, she put her purse on the counter and walked to the refrigerator, retrieving a bottled water and unscrewing the top.\n\n\"I asked where you were,\" he insisted.\n\nShe took a drink from the bottle before fixing her eyes on his and responding. \"What do you care?\"\n\n\"You're my wife.\"\n\nShe snorted. \"What, no girlfriends free tonight?\"\n\nHis expression went from cold to hot in a flash. \"I've told you, there are no girlfriends. Jesus Christ, there's been no one for seven years, since you caught me and\u2013\"\n\n\"And your whore of the month?\"\n\nHe said nothing, just clenched his jaws and tried to stare her down.\n\n\"Really, Alain, please don't play me for the fool.\"\n\n\"If you think I'm still having an affair\u2013\"\n\n\"Affairs, honey,\" she said, smiling. \"Plural.\"\n\n\"Fine,\" he snapped, \"affairzzz. If you think I'm still having affairs, then why are you still here? Why don't you just dump me and move on.\"\n\nShe sipped her water and held his gaze. They'd had this conversation before, too many times to count.\n\n\"I'm Catholic,\" she said. \"Very Catholic. You know that. And what's worse, Daddy's even more Catholic. So I'm supposed to be the good little wife and overlook your transgressions and stay by your side.\"\n\n\"He'll never cut you off,\" Broussard said. \"You know that. You're his little princess.\"\n\nHe emphasized princess, and Deborah felt her blood rising. \"No sense in taking that chance, though, is there? Not when the pre-nup cuts you off at the knees. So you just keep having your own life and I'll keep having mine, and ne'er the twain shall meet.\" \n\nShe took another swig from the water bottle before continuing. \"But rest assured,\" she said, \"the second he's gone, so are you.\"\n\n\"So you're fucking someone else?\" he said. A sinister smile curled his lips. Combined with the mane of dark hair streaked with gray, he looked feral. For a moment, she remembered the intense attraction that had originally drawn her to him twenty years before. Then she thought about what a true bastard he'd turned out to be, and the pleasant memories evaporated.\n\n\"I asked if you're fucking someone else,\" he repeated.\n\nShe only smiled in response.\n\nHe laughed. \"You frigid bitch, you probably haven't been laid in years.\"\n\nHer smile only broadened. \"Wanna bet?\"\n\nA look of fury came over his face and he was around the corner and on her before she could flee.\n\n\"Is that what you're doing?\" he said, tearing her blouse open and squeezing her breast roughly. \"You've been fucking someone else? Giving it away to tennis pros and plumbers?\"\n\nShe tried to push him away, but he was too strong for her.\n\n\"Maybe I'll show you who the king is around here,\" he continued, now gripping her forearm tightly with one hand and fumbling to get his belt undone and pants down with the other. \"Maybe a good fucking will keep you in your place.\"\n\nHe ignored her slaps and scratches as he reached under her skirt and tore her panties away before pushing her to the floor and getting on top of her, stabbing his cock toward her center.\n\n\"Get the fuck off of me,\" she yelled, struggling in vain against his weight and feeling his cock pressing against her and into her. She was dry, but the loads still seeping from her afternoon of fun minimized the pain as he began thrusting.\n\n\"You're pretty goddamned wet for someone who doesn't want this,\" he said, picking up the pace of his thrusting.\n\nStopping her struggles, she started laughing.\n\n\"What's so fucking funny,\" he growled.\n\n\"I'm not wet from you, you pathetic pig,\" she said, glaring into his eyes and now meeting his thrusts with her rising hips.\n\nThe look of recognition came across his eyes.\n\n\"Oh yes, darling,\" she said, now bucking into him. \"How does it feel to be sloppy fourths. Not seconds, dear. Fourths. To be sliding around in another man's loads?\" She felt him going soft. \"What's wrong? Not enough friction? Did he stretch me out too much for you to feel anything? Because I'm telling you, it was like being fucked by a baseball bat.\"\n\nWith a roar, he pushed himself off of her and pulled up his pants. For a moment, she thought she'd gone too far. Then she saw his features slackening and a dead look come into his eyes.\n\n\"You fucking whore,\" he said, and stalked from the room, leaving her on the floor with her panties around her ankles and her skirt bunched up under her ass.\n\nShe bellowed laughter at his retreating back.\n\nCHAPTER FOUR\n\nAn hour later, Broussard was in his locked den, gazing at the images on the screen in front of him.\n\nWhy am I so mad? he thought as he watched the action on the screen. His thoughts drowned out the dialogue from the images, but he knew the dialogue by heart.\n\nShe's cheating on me, but so what? I've been cheating on her for years\u2013haven't had any interest in screwing her for years\u2013and God knows that even the ice queen needed to get laid once in awhile.\n\nHis mind switched back to the screen. This was his favorite part.\n\n\"No,\" the slim blonde pleaded with him. \"Please, not that.\"\n\n\"Yes,\" he said on the screen, his lips moving silently along with the dialogue. \"That.\"\n\nHe watched himself on the screen, his mind reliving the moments as he slowly pushed his cock into the woman's clenching anus. His cock got harder as he heard her wailing intensify on the screen.\n\nI know why, his thoughts resumed as he watched his screen image continue the journey deep into the woman's tight ass. It's because she's mine. Deborah is mine, and it's my job to fuck other men's wives, not my wife's job to fuck other men.\n\n\"Don't worry, Karen,\" he said on the screen, \"the pain will go away in awhile.\"\n\nAnd she had to point out it was a bigger cock, he thought, trying now to banish the thoughts from his mind. He felt a twinge, worried that she was getting better somewhere else than she'd gotten from him. He felt his erection subsiding, and tried to focus again on the screen, concentrating on the dialogue.\n",
        "\"Please,\" the blonde begged. \"I've never . . . he's never been there . . . it hurts too much.\"\n\n\"Karen,\" he snapped, \"this is what it's going to take to keep your job. Got it?\"\n\nShe cried in response, and at that his flagging erection was rejuvenated.\n\nThis was his favorite. Of all of them, even Susan Flowers in auditing, this was definitely his favorite.\n\nCHAPTER FIVE\n\nBenjamin Bradford was uncomfortable. Sure, he'd been to these soirees before, but he never fit in. Even with Jennifer at his side, introducing him to the bigwigs of Jensen National Bank and proudly proclaiming the success of his business and what a wonderful, sexy, smart man he was, he still never felt comfortable.\n\nThey were surrounded by junior and senior vice presidents, more than a hundred of them, and their spouses. All were dressed straight from Preppies R Us in their designer chinos , tailor- made blue Oxford button down shirts, and thousand dollar Italian loafers without socks. The women were similarly attired in breezy cotton blouses, pleated shorts or capris, tasteful leather sandals, and tastefully expensive jewelry. And here was Brad, in a pair of dockers and a golf shirt, Citizen EcoDrive watch rather than Rolex.\n\nJennifer neither noticed nor cared, though. She still proudly showed him off to her fellow workers, hand in hand with Ben, and chatted easily with all of them.\n\n\"Ben,\" she said, \"I'd like you to meet Susan Flowers and her husband Clark.\"\n\nBen turned his head, and his eyes went wide.\n\n\"Hello, Ben,\" Clark Flowers said, extending his perfectly manicured hand and giving a firm handshake. \"Clark Flowers.\"\n\nBen shook the proffered hand, but his eyes stayed riveted to Susan Flowers.\n\n\"Ben, honey,\" Jennifer giggled, \"you're staring.\"\n\nHe cleared his throat and tried to laugh, but it came out as a choking gurgle.\n\n\"I know,\" Clark said, \"uncanny, isn't it?\"\n\nBen nodded. Susan Flowers and Jennifer could've been twins. Nearly the same height, about five six, both slim and blue eyed with short blonde hair.\n\n\"See anything you like?\" Susan laughed, offering her hand and shaking Ben's.\n\nHis eyes traveled the length of her body, then turned and looked Jennifer up and down. \"Wow,\" he said. \"Were you two separated at birth?\"\n\nThey all laughed. \"Makes it hard around the office sometimes,\" Susan said. \"People are constantly mistaking us for each other. And I think Jennifer here sometimes takes advantage of it, don't you darling?\" She placed a hand on Jennifer's forearm.\n\nJennifer grinned in response. \"If they want to think it's the Senior Vice President in charge of Auditing instead of lowly little Junior Vice President me, then who am I to embarrass them?\"\n\n\"You go girl,\" Clark said.\n\n\"Oh honey, look,\" Susan said, pointing over Ben's shoulder. Ben turned to follow her finger as she spoke, \"It's Alain, from Commercial Paper. I wanted to introduce the two of you, remember?\"\n\n\"Of course,\" Clark said, turning to Ben and nodding before following his wife.\n\n\"Who's Alain?\" Ben said, turning back to Jennifer.\n\nShe hesitated before answering. \"He's bad news,\" she whispered.\n\nBen's eyes traveled back to Broussard. \"How so?\"\n\n\"Just bad news. Stay away from him.\"\n\nHe nodded.\n\n\"Who's bad news?\" a loud voice said.\n\n\"Oh Ben,\" Jennifer said, tugging his hand to get his attention, \"it's Mr. Jensen.\"\n\n\"Please, Jennifer, it's Horace,\" he said.\n\nBen looked at the man before him, the President and Chief Executive Officer of Jensen National Bank. He was short, an inch or so shorter than Jennifer, and built like a block. He had a full head of silver hair, craggy face with a deep tan, square jaw line to match the square frame, and twinkling eyes of hazel. Ben guessed his age as sixty, but he could've been ten years either side of that. Either way, he looked to be in good shape, solid and strong for so short a man. And unlike every other person there, he was dressed in a pair of faded Levis and Chicago Bulls t-shirt.\n\n\"Horace,\" Jennifer said, \"this is my husband, Benjamin Bradford.\"\n\n\"Benjamin,\" Jensen said, an iron grip shaking Ben's hand, \"I'm Horace Jensen. Pleased to finally meet the man behind our little Jennifer's constant happiness.\"\n\n\"Please, sir,\" Ben said, \"it's Ben. And I'm pleased to finally meet the only other man who has apparently recognized what a special woman Jennifer is.\"\n\nJensen raised an eyebrow. \"Oh?\"\n\n\"Yessir,\" Ben continued. \"I've known since I first met her that she was special, but you have thousands of employees, and you've still managed to move her up the ranks faster than most, so I know you've seen it, too.\"\n\nJensen grinned, and Jennifer tapped his arm with a fist. \"Quit it, Ben,\" she said, though the delight in her eyes said otherwise.\n\n\"What do you do for a living, Ben,\" Jensen said, taking a sip of his drink.\n\n\"I'm a systems security analyst.\"\n\nJensen's eyebrows rose. \"And what's a systems security analyst do?\"\n\nBen cleared his throat. \"Well, sir, we break into secure computer systems.\"\n\n\"So you're a professional hacker?\"\n\n\"Something like that,\" Ben said, taking a pull on his beer before continuing. \"We're hired by companies\u2013banks, mostly, but other companies, too\u2013to try and break into their mainframe systems. We come at them from all different angles to see how secure their systems are. The theory is that if we can't do it, you're probably safe from others. If we can break in, though, we work with the company to create protocols and security features.\"\n\nJensen nodded, thinking for a minute before speaking. \"Can you wait here a minute?\"\n\n\"Sure,\" Ben said.\n\n\"Honey,\" Jennifer whispered in his ear, \"I think you've got his attention.\"\n\n\"It would be nice,\" Ben said, turning back and seeing the look on her face. It was hard to read. Was she excited? Nervous? \"I promise,\" he said, \"I won't embarrass you, okay?\"\n\nShe nodded. \"I know, baby.\"\n\n\"Ben,\" Jensen said, returning with a tall, thin, dark-haired man in his late thirties. \"Ben, this is Jeff Richards, Chief of Electronic Security.\"\n\nBen and Richards shook hands. He looks nervous, Ben thought. Richards's eyes dated to Jennifer.\n\n\"Hi, Jennifer,\" he stuttered.\n\n\"Hello, Jeff,\" she said.\n\n\"Ben's a systems analyst,\" Jensen said. \"You ever hear of that?\"\n\n\"Sure,\" Richards replied. \"They're hired to evaluate the integrity of system security.\"\n\n\"We have one of those?\"\n\nRichards shook his head. \"Just me and our people,\" he said, looking back at Ben with annoyance.\n\nHe thinks his people are enough, Ben thought.\n\n\"You think that's enough?\" Jensen prodded, reading Ben's mind.\n\nBefore Jensen could respond, Ben cut in. \"No,\" he said, \"it's never enough.\" Seeing the flash of anger on Richards's face, Ben continued. \"Look, I'm sure you're more than qualified. Hell, you're probably better at my job than I am. The problem is, you're only looking at it from your angle, from how to keep the system secure. No doubt you keep up on all the new tricks. You read the manuals and the publications, and you adjust as necessary. But there's a problem with that.\"\n\nRichards glared at him, but Jensen was intrigued, mulling over what Ben had said. Ben knew he had him, and he waited a minute before continuing.\n\n\"The problem,\" Ben said, \"is that the new break-in technique has already happened before anyone could publish anything about it.\"\n\nJensen nodded, agreeing with the conclusion. \"Makes sense, don't you think?\" He nudged Richards, who now looked like a spring about to uncoil.\n\n\"Yes,\" he squeaked, clearing his throat before continuing. \"Yes, it does make sense. But how do we know when you've done it? And that you won't mess anything up if you manage to get in.\"\n\nBen laughed. \"Because I give you a complete audit report,\" he said. \"And because if I screw anything up or get caught doing anything illegal, I lose my business and wind up in jail. That's why.\"\n\n\"Your business?\" Jensen said. \"You work for yourself?\"\n\nBen nodded. \"I've got employees, of course. Four of 'em. All specialists, all highly trained, and all as honest as the day is long. Mr. Jensen, we're good at what we do, and I recommend you give us a try.\"\n\nBen looked at Jennifer, who smiled at him before he continued. \"If you don't want to use us, or if you thinks our costs are out of line, I still recommend you hire someone to audit your system. I'll be glad to recommend some very good firms.\"\n\nJensen beamed at him. \"I don't think that'll be necessary, son,\" he said. He pulled a card from his pocket and handed it to Ben. \"You call me first think Monday and we'll schedule a time to meet and go over the specifics. But I like what I'm hearing, and I'd prefer to keep this in house. Right, Jennifer?\"\n\nShe hugged Jensen, who was at first embarrassed by the sudden show of emotion. \"Thank you, Horace. You won't be disappointed, I promise.\"\n\nWhat was that look Ben saw on Richard's face when Jennifer hugged Jensen? Was it anger? Jealousy? Lust? He couldn't tell, but it made him nervous.\n\nHe watched Richards stalk across the lawn toward Broussard and Susan Flowers. When the three were together, Richards started talking, and Ben saw three pairs of eyes turn and stare at him. He looked away, embarrassed at being caught.\n\nCHAPTER SIX\n\nJennifer walked in the front door and laid her purse on the stand beside the closet.\n\n\"I'm home,\" she called, hearing voices in the back of the house.\n\n\"Family room,\" Ben called.\n\n\"Mommy,\" the twins shrieked in unison, and she heard their clumsy thuds as they ran to find her.\n\n\"Hey, babies,\" she said, stooping and scooping a twin in each arm.\n\n\"Ashley and me are reading,\" Allison said.\n\n\"Oh really,\" Jennifer replied, turning to Ashley. \"That true?\"\n\nAshley nodded solemnly. \"The Horton book.\"\n\n\"Horton Hears A Who?\"\n\nAshley nodded again and whispered, \"It's my favorite.\"\n\n\"Not me,\" Allison shrieked. \"I like Sam I am.\"\n\n\"Well I like them both,\" Jennifer mediated.\n\n\"Good,\" Ben said, smiling as he walked up and took Ashley from her arms. \"Then you can read Green Eggs and Ham to them at bedtime.\"\n\nJennifer smiled as he leaned in and kissed her on the cheek. They walked into the kitchen for supper.\n\n\"How was work, sweetie?\" he asked behind her.\n\n\"Long.\" She glanced at the clock on the stove. Eight ten.\n\n\"You knew being a veep would bring longer hours,\" he said. He put Ashley into her high chair and pushed it to the table before turning and giving her a soft look. \"You don't have to keep doing this you know.\"\n\nShe shot a weary smile at him. \"I know, Ben. I want to be with you.\" She squeezed Allison tighter to her. \"And with you, you little monster.\" Allison giggled, wiggling as she was placed into her high chair. \"But it'll only be six or eight more months. Then I'll have the systems down, the job down, and everyone else taken care of. Then I'll have my life back; we'll have our lives back.\"\n\nHe only nodded before turning to pull down plates and serving the food. They'd been having this conversation for the past year, and she knew Ben was losing his patience. Still, if he could just be patient for a while longer, ten months at the outside, things would settle down and they could get back to normal.\n\n\"What did Theresa make for us today?\" she asked, trying to lighten the mood.\n\n\"Tamale pie,\" he said, scooping the casserole onto the plates.\n\nJennifer laughed. \"You really need to ask her to make some plain food once in awhile. All of this Mexican cooking is giving me an ulcer.\"\n\nBen put plates in front of the girls, both of whom started shoveling the food into their mouths. He turned and hugged Jennifer and said, \"They don't seem to mind. Besides, that's what you get for hiring a Hispanic nanny. Mexican food and bilingual children.\"\n\n\"Next time I'm hiring a French nanny,\" she murmured into his ear as she hugged him back, enjoying the feeling of his arms and body enveloping her.\n\n\"No problem,\" he said, leaning in and brushing his lips and tongue over her ear. \"French is good,\" she heard him chuckle as electric shocks from his lips went into her brain.\n\n\"You men are all pigs,\" she laughed, pushing him away and taking their plates to the table.\n\nWhen she sat, she winced with pain.\n\nBen noticed her grimace and raised his eyebrows.\n\n\"Fell at work,\" she explained. \"Wet spot on the floor. I landed hard, and I think I bruised my tail bone.\"\n\n\"You okay?\"\n\nShe heard the tone, and saw the sympathy spread across his face. \"I'll be fine,\" she reassured him. \"Just give me a few days before our next . . . workout.\"\n\nHe flashed a grin. \"Okay. But just a few days.\"\n\nShe smiled back and started eating.\n\n\"So did you meet with Mr. Jensen today?\" she asked.\n\nHe nodded, grinning.\n\n\"And?\"\n\nHis grin got bigger. \"I've got it. I'll be starting soon, after I get done with some things and get the team together and briefed.\"\n\n\"How soon?\" she asked.\n\nHe shook his head. \"Not telling. Don't want you accidentally tipping anyone off.\"\n\n\"Fair enough,\" she said, pushing her mostly uneaten plate aside. \"Did you get a good deal, though?\"\n\nHe nodded with enthusiasm. \"Oh yeah, we got a good deal all right. A real good deal.\"\n\n\"Well don't be too greedy, dear,\" she warned. \"Remember, I work there.\"\n\nHe laughed. \"It wasn't me,\" he said. \"Jensen must've spent the whole weekend on the phone. He had rates from everyone else, knew what they all charged. When he found out I was less, he insisted on a higher rate. I tried to argue with him, but he insisted. Says so long as I do a good job, he'd pay me a fair price. If he's not pleased, he'll pay the lower rate\u2013the standard\u2013but he'll pay top dollar if he thinks the work is top dollar. Kind of a bonus, I guess.\"\n\nHer eyes went wide. \"And you think you can give him top notch?\"\n\nHe nodded. \"I guarantee.\"\n\nCHAPTER SEVEN\n\nJeff Richards watched the monitor as Benjamin Bradford walked out of the elevator and toward his wife's desk. He followed the screen as she smiled up at him while Ben leaned down and kissed her cheek. She stroked his hair and murmured something to him. He laughed, and Richards wished he had audio to go with the visual.\n\n\"Keep an eye on him,\" Richards directed the man and woman sitting in front of the monitors. \"Take notes. Wherever he goes in this building, I want to know it. He takes a leak, I want to know the size of his pecker, got it?\"\n\nThey nodded and started taking notes.\n\n\"He's the security specialist,\" Richards continued. \"He gets into this system, we may all be out of a job. Got it?\"\n\nThey nodded, scribbling faster and peering more intently at the screen. They watched Ben's eyes scan over the room while saying something to Jennifer, who was logging out of her computer and reaching for her purse. Then they followed Ben from monitor to monitor as he left Jennifer at her desk to finish logging out while he walked toward the men's room. They watched him in the men's room\u2013relieving himself before washing his hands and combing his light brown hair\u2013and watched him leave the men's room. Then they followed him intently as Jennifer gave him a tour of her department before leading him back to the elevator from whence he came. Finally, they noted Ben and Jennifer leave the elevator on the first floor and exit the building.\n\nNone of the three paid attention to the short African-American janitor shuffle his cart into a supply closet and disappear for twelve minutes before reappearing and shuffling back down the hallway toward other offices.\n\nCHAPTER EIGHT\n\nBen sat in his office workshop, staring intently at the computer screen before him. Ron Washington had hooked a palm-sized computer into the systems lines running through the supply closet, and that little miracle of modern technology was now transmitting to Jeff's office computer. He was at the portal to the system, trying to decide how best to begin.\n\nFirst, he had to select a target. Whose password should he seek in infiltrating the system? He smiled. Broussard, the arrogant, smirking shit Jennifer had told him was bad news. Well, Ben thought, let's see if there's any truth to that rumor. In Username, he typed Broussard. The computer told him it didn't recognize the username. He typed in ABroussard. Again, no recognition. He nodded. This was standard. In a company as large as Jensen National, there would be any number of Smiths, and nearly as large a number of Smiths with the same first initial. It was just a matter of how many initials to use for the first name. System security rarely worried about username security; they almost always concentrated on password security. After four more tries, he finally got in on the full name: AlainBroussard.\n\nNow came the more tedious part: cracking Broussard's password. He thought of the most obvious method, merely calling the IT help desk and requesting a password verification. Such calls were received dozens of times a day, and help desks routinely gave them out over the phone. Still, if he was unsuccessful\u2013or if they had an extra layer of security at the help desk, such as insisting on going to Broussard's actual terminal and typing in the password themselves in front of him before confirming his password\u2013Ben would be tipping his hand and letting Richards know he was already in the system.\n\nBen thus decided to start easy with a hybrid attack on the password. The easiest password attack was a dictionary attack, which battered the login screen with nearly every word in the dictionary until the password was found and entry to the system gained. Dictionary attacks worked well on invading home systems, where users are rarely security conscious and needed easier passwords so they would remember them in the future. Unfortunately, dictionary attacks almost never worked in corporate systems because corporations are far more security conscious. Still, the user had to be able to remember the password, so corporate passwords usually consisted of words joined with numbers or keypad symbols. Hybrid attack software is designed to deal with just such passwords by bombarding the system with millions of combinations of letters, numbers, and symbols until entry is gained. Depending on the complexity of the password, such hybrid attacks could take days to gain entry.\n\nBen decided to wait until after 6:00 p.m., the end of the work day, before starting the hybrid attack. Otherwise, there was a high likelihood Broussard could still be logged into his computer, and the system would be alerted that a double entry was being attempted. Though double entries are not uncommon\u2013people frequently stay logged in over lunch and log in from a remote laptop while eating\u2013Ben guessed Richards would be tracking such double entries, particularly at times when they would be uncommon.\n\nBen slipped the disk into his computer and fired up the hybrid attack software. He typed in Broussard's username, typed the time parameters, and left his office, locking the door behind.\n\nTime to wait.\n\nCHAPTER NINE\n\nBen and Jennifer walked hand in hand into their bedroom, shutting the door behind them. The girls had been put to sleep, and Jennifer was no longer sore. She was horny.\n\n\"How about a little gymnastics?\" she suggested, nibbling the back of Ben's neck as he unbuttoned his shirt.\n\n\"You ready?\" he said, his hands unworking the buttons faster.\n\n\"Oh yeah,\" she said, her tongue darting into his ear before sucking on his earlobe. She felt the shiver run through his body.\n\nHis shirt unbuttoned, he turned and pulled her close, kissing her with longing. Without conscious thought, her body responded, her tongue seeking his while her hips ground into him.\n\n\"I've missed this,\" she mumbled in his ear as he worked down the buttons of her blouse. Done, he tugged her blouse off and reached behind her, unclasping her lacy bra while pulling her to the bed with him.\n\n\"Me, too,\" he said, leaning in to lick and kiss her bare neck as he sat on the bed and pulled her onto his lap.",
        "Their hands each went to the other's pants, getting in the way, and she felt his hands move away and to her breasts, cupping and squeezing them while she zipped his pants down and reached in to grasp his hard cock.\n\nWithout warning, his hands went to her ass and squeezed her cheeks, lifting her off his lap while his mouth zeroed in on her breasts. Standing, he sucked her nipple in, grating his teeth over the tightening nubbin before switching to her other breast and repeating the process.\n\nJennifer groaned her approval from deep in her chest while arching her back and thrusting her nipples further into his greedy mouth. Ben was the best, she thought. She'd been apprehensive about marriage, worried that their sex lives would wind down into the monotonous routine of twice a week missionary fucks. But that had never happened. Rather, Ben was always hungry for her, and he was constantly inventing new ways to drive her to greater heights. Making love with Ben was never slow and tender, though he could be patient and certainly lavished her body with more than enough attention. No, making love with Ben was all about need and desire and hunger, all about trusting each other to satisfy their mutual needs. She suspected some of his time on the computer was spent surfing internet porn, but she didn't care so long as he continued to surprise and amaze her. Ben had long ago broken all of her inhibitions about the ways two people could please each other, and she never wanted to give this up.\n\nBen lowered her, and Jennifer's feet touched the floor. She stood there as his mouth trailed lower while his hands undid her pants and pulled them down, leaving her standing in only a pair of lacy white thong panties. He started kissing her mound through the panties, simultaneously lifting her left leg. In response, Jennifer put her left foot on the bed over Ben's shoulder and leaned into him, supporting herself with her hands on his broad shoulders.\n\n\"Please, baby,\" she pleaded, wanting him to quit teasing and just ravish her.\n\nIn response, she felt the thong pushed aside as a finger pushed into her to the hilt. She gasped at the invasion, then rolled her hips into his face as he took her clit into his mouth, his tongue circling the throbbing nerve ends insistently.\n\n\"Oh God,\" she groaned after a minute of the attack as she felt a second finger join the first and begin sawing in and out, stretching her lips open. \"Keep going.\"\n\nHe did, and her first orgasm jolted through her body seconds later, her bucking hips doing nothing to remove his mouth from her soaking pussy.\n\nThe orgasm over, her legs sagged with the relief, and she felt his lips leaving her and his hands again picking her up by the ass. He turned her and laid her back on the bed.\n\n\"What's next,\" she grinned, her eyes still half closed in post orgasmic bliss.\n\nBen only flashed a wolfish smile in response, pushing his pants down his slim hips and exposing his smooth, throbbing erection.\n\n\"My turn,\" he said, pushing her back on the bed before leaning in and again attacking her with his lips, tongue, and fingers. She was still sensitive, but his touch was lighter this time, and he spent time away from her clit, concentrating instead on her soaking, swollen labia. Jennifer watched him for a minute before she saw his body swiveling on the bed, his cock getting nearer her mouth.\n\nWhen he was above her, she reached up and squeezed his tight ass with one hand while grasping the base of his cock with the other. Her tongue licked around the ridge of his head, teasing him. She felt him lightly flicker her clit with his own tongue, then move away as her hips jutted off the bed. They teased each other like this until Jennifer was sure her sensitivity had vanished, then, without warning, she sucked the head of his cock into her mouth and started pumping him while her other hand sought his clenched rosebud.\n\nIn response, Ben's hands each grabbed an ass cheek as he started tracing his tongue the length of her opening, concentrating feathery flicks of her clit before resuming the tortuous journey back down and up. As she sucked him in deeper with each bob of her head, Jennifer felt a finger circling her juices over her rosebud before, satisfied she was ready, pressing into her.\n\nJennifer's sucking increasing at the invasion. Her hand went still at the base and, with her other hand, she pulled him deeper and deeper into her mouth and throat while pressing against Ben's clenched anus. Somewhere in the distance of her building pleasure, she heard Ben gasp\u2013felt the rush of hot breath against her pussy\u2013when she broke through the knot of his anus and pushed in. In response, his finger pushed further into Jennifer and his attention remained centered on her clit.\n\nGroaning around the cock now rising and falling into her throat, Jennifer felt the rapid expulsions of hot breath increase and knew Ben was getting close. She started moving her finger in and out of his ass, circling as she did so. The throbbing increased in his cock, and she saw his sac tighten. She was nearing her own orgasm and strove to join what she knew was only seconds away. When she felt the second finger push into her ass and his tongue circle her clit with blinding speed, she exploded in a bucking frenzy. Holding him deep in her mouth, she felt him explode into her throat and fill her mouth with his salty sweet release. She tried to swallow quickly, but the sensations racking her body overrode all commands from her brain, and somewhere in the back of her mind she felt his cum flowing around his cock and down her chin and cheeks.\n\nPulling himself from her mouth, Ben said, \"Round one over.\"\n\nShe smiled. God, she really had to cut back on her schedule.\n\nCHAPTER TEN\n\nMore than an hour, and another orgasm for Ben and countless for Jennifer later, they lay in bed together. Ben was stroking his right hand over Jennifer's sweaty breasts and stomach, enjoying the look of contentment on her face.\n\n\"I was surprised at the end there,\" he murmured.\n\n\"Excuse the pun,\" Jennifer giggled, her eyes closed.\n\n\"I was just worried it was too soon,\" he continued. \"I don't want to hurt you, you know?\"\n\nShe opened her eyes and rolled to her side, facing him and stroking his cheek with her left hand. \"I'm never worried about you hurting me,\" she said, leaning in and brushing her lips lightly over hers. \"And you were very gentle\u2013the way you always are when we do that\u2013so I wasn't worried this time either, okay?\" He nodded, leaning forward to kiss her.\n\n\"Besides,\" Jennifer said, pushing his shoulder over toward the bed and rolling with him until she was straddling his hips, \"I was really in the mood for that tonight.\"\n\nHe watched her face draw near to his and felt her hips rock gently against him. He lifted his head to kiss her while lazily stroking her back and haunches.\n\nBreaking the kiss, Jennifer placed an arm on each side of his head and looked into his eyes.\n\n\"How's the work for Jensen going?\" she said, worry on her face.\n\nHe hesitated before answering, his mind on the hybrid attack that was, a mere fifty feet away, trying to get into the system. Still, he had to keep her out of this; she couldn't know anything or she may inadvertently tip someone off.\n\nHe smiled. \"Haven't really started yet,\" he replied.\n\n\"Please get going on it, baby,\" she said, leaning down and pecking his lips. \"This could be really good for you\u2013for us. And I want Mr. Jensen to love you as much as I do.\"\n\n\"And how much is that?\" he whispered, feeling himself, against all odds, begin to harden against her grinding pelvis.\n\n\"Let me show you,\" she said, slinking down his body and taking him back into her mouth, getting him ready for their first round three in several years.\n\nCHAPTER ELEVEN\n\nThe next morning, after breakfast with Jennifer and the girls, Ben went to his office as Jennifer went to her car for another day at the grindstone. Turning on his media library before starting, he smiled when he heard Bruce Springsteen and the E Street Bank start the mournful opening of \"Thunder Road.\" A good sign, he thought, starting the day with one of his all-time favorites.\n\nSitting at the main terminal, he sipped his coffee while shaking the mouse with is left hand to bring the screen from screensaver mode. He looked at the flashing display on the screen. That goddamned simpleton, Ben thought. He used his name with the addition of 123 as his password. The program probably cracked this an hour after starting.\n\nBen started typing notes on another computer, the notes that would be the basis of his ultimate report. These people definitely needed a primer on password security in addition to their internal security measures.\n\nNext, Ben started navigating the system, seeing how far he could get. He started with interoffice memoranda and communications, all of which he easily hacked into. He scanned the e-mails back and forth, clicking back and forth.\n\nFeeling mischievous, he decided to send Jennifer an e-mail from Broussard. \"Hey Baby, Guess Who?\" he typed.\n\nLittle more than a minute later, he saw a response. \"I told you not to e-mail me. J.\"\n\nThis raised Ben's hackles. Was this bastard harassing her? He decided to take some time and investigate, but first he needed to cover his tracks; he didn't want anyone to suspect he was in yet, including Jennifer. \"Sorry. Wrong addressee. A.\"\n\nJennifer didn't respond, so Ben went back to Broussard's e-mails and started delving into the history. Eight months back, Ben saw a series of e-mails that raised question marks in his mind. Investigating further, his fingers flying over the keyboard as he searched through the system, he concentrated on finding the clues. Three hours later, he had uncovered the whole trail and was astounded at the clever simplicity of the scheme. He downloaded copies of the strings of code into his external hard drive, along with the few e-mails obliquely referencing the deception.\n\nStill not satisfied he had the whole picture, Ben next returned to the trail of e-mails back and forth that had originally tipped him off. The e-mails ended abruptly, but Ben was well aware that the massive theft was still an ongoing enterprise. Maybe he's running it from a different account, Ben guessed, and scoured the e-mails for other addresses to search through.\n\nAn hour later, Ben was logged into Broussard's home e-mail account. The moron had used the same password at home as at work, which left Ben breathless. How could someone so diabolically clever and, to date, untouched be so incredibly careless? Didn't he realize how easy it was to get at this shit?\n\nThrough Broussard's home e-mail account, Ben hacked into Broussard's home computer and started searching. He hit the goldmine on the file marked Banking. In that file were thousands of transactions over the past eight months transferring, to date, nearly six million dollars into offshore accounts. In another folder, Ben found the passwords for all of the offshore accounts, which made Ben laugh out loud. Is there no limit to this fucking idiot's ignorance about computer security? Given who he was working with\u2013Ben had by now identified Jeff Richards as one of the two remaining co-conspirators\u2013you'd think someone would have clued him in.\n\nBen heard a knock on his door.\n\n\"Come in,\" he called, turning the screens off from the prying eyes outside the door.\n\nTheresa breezed in with a small plate holding a sandwich and an apple. \"I thought you'd be hungry, Mr. Bradford,\" she said, placing the plate on the desk in front of him. \"You haven't eaten since breakfast.\"\n\nHe looked at the clock. It was four ten, more than nine hours since he'd had a piece of toast with strawberry jam. Bouncing from the caffeine high running through is veins along with the excitement of what he'd uncovered, Ben hadn't realized how late it was or how hungry he'd become.\n\n\"Thanks, Theresa,\" he said, reaching for the sandwich as his stomach growled in anticipation.\n\n\"Mrs. Bradford phoned,\" Theresa continued. \"She's running late tonight and probably won't be home until after the girls's bedtime.\"\n\nWith a mouth full of food, Ben only nodded. Finally swallowing, he said, \"Okay. I'll be down in a little while and we'll get them fed.\"\n\nTheresa nodded and left, closing the door behind her.\n\nFinishing the sandwich, Ben took a munch from the apple while turning the computer screens back on. Searching through the file folders for anything that caught his fancy, Ben double clicked on videos. Let's see what kind of shit he's got here.\n\nThe folder had individual folders broken down under the first names of various women with a number after each name. Karen 1, Julie 13, Becky 3, Susan 2, and so on. Ben scanned the list and clicked on Becky 3.\n\nA video started playing, the camera stationary on Broussard and a pretty, mid-twenties blonde seated on a couch. They were talking, and Ben turned up the volume.\n\nBecky: I don't want to do this again.\n\nBroussard: You don't really have much choice now, do you?\n\nBecky, a tear running down her face: Please, Mr. Broussard, I\u2013 \n\nBroussard: Call me Alain. It's easier\u2013and more enjoyable for both of us\u2013that way.\n\nBecky: But it's not enjoyable, Alain. No matter what I call you. I'm . . . this is . . . my husband\u2013 \n\nBroussard, unbuckling his pants while leaning over to kiss the woman: He'll never know as long as you play along.\n\nBen watched in disgust as Broussard yanked the blonde's short hair, pulling her face to his now exposed cock. Scrolling through the video, he saw enough to know it got no better.\n\nGoing back to the list, Ben clicked on other videos. Some of the women were more than willing, but most were being forced. There was little indication what Broussard held over their heads to force them into these degrading situations, but it was something that caused most of them to give up all resistance by the third or fourth video. Only a few, Susan, Julie, and Patricia, were in more than ten videos, and all three of them were more than willing to shag Broussard in any deviant manner he wished. The others all ended after six or seven videos, by which time all inhibitions had been forcibly shed. Broussard must've simply gotten bored once he'd made them run the gamut, Ben surmised.\n\nBen recognized a few of the women from the various bank parties he'd attended with Jennifer. He knew Susan was the woman he'd met at the last party, the woman in charge of the auditing department. He couldn't remember her last name, and the videos didn't give it up. Still, she'd be a perfect third co-conspirator, and Ben made a note to hack into her systems and see what he could find.\n\nScrolling back to the videos from more than eight months ago, he looked at the list of names. Though he didn't want to watch any more of these videos, something could be there to give him an idea about the identity of the third co-conspirator Richards and Broussard repeatedly referred to in their e-mails. He knew the third party was a female\u2013they always referred to her in the feminine\u2013but there was no clue about her identity.\n\nAbout to give up, Ben scrolled over a named file from nearly eleven months before. His eyes got wide and he froze, afraid to click on the file. Jennifer 5. He stared at the screen for what seemed like forever but was, in reality, little more than a minute. Then, focusing on the screen, he held his breath and clicked on the file.\n\nCHAPTER TWELVE\n\nRebecca Lyons pulled into the underground garage of her condo complex. Shutting off the car, she opened the door and checked her hair and make up in the rear view mirror. Brushing her hair back with her fingers, she took a deep breath, grabbed her briefcase, and got out of the car. She looked around the well lit garage, seeing no one, before striding to the elevator. She listened for footsteps and her eyes kept sweeping over the parking facility while she waited for the doors to open.\n\nOnce the doors opened, she scurried into the elevator, hit Close Doors, then pressed 12. Her body remained taut waiting for the doors to close, and she was only able to breathe normally again when the doors finally closed and the elevator began its ascent.\n\nNine years later, she thought for the millionth time, and I'm still nervous. Then a tight smile played over her lips. Good, she thought, because if she'd been this cautious in the first place it would never have happened.\n\nWhen the doors opened on the top floor, Rebecca walked from the elevator, turned the corner, and collided with someone.\n\n\"Sorry,\" she said, instinctively pulling her briefcase tight to her body.\n\n\"Rebecca,\" the man said, and she almost fainted. After eight years, she still recognized the soft lilt he had every time he spoke her name.\n\n\"Ben?\" She looked at him. Sure enough, Benjamin Bradford in the flesh. Same trim figure, same short cut hair parted on the side, same deep brown eyes, same faded jeans, worn tennis shoes, and t-shirt apparel sense. If not for a few streaks of gray, which she realized seemed premature for a man in his early thirties, and the look on his face, he hadn't changed a bit in eight years.\n\n\"Rebecca,\" he said, \"I need your help.\"\n\nHer face tightened. \"How did you get in here?\" she demanded. \"This building's secure.\"\n\nHe cleared his throat, the look on his face getting more desperate. \"I know someone who lives here. An old client. They got me in.\"\n\n\"What do you want?\"\n\n\"Help,\" he repeated. \"I need your help.\"\n\nShe studied his face. She'd never seen him look like this. All those years they'd dated, four of the best years of her life followed by one of the worst, she'd never seen him . . . afraid. She realized that that's what he looked now. Afraid. And lost. This made her angry.\n\n\"Sure, you need my help,\" she said, brushing against him as she walked toward her door. \"Where were you when I needed your help? Huh? Can you answer me that? And now you want my help?\"\n\nShe heard him following as she unlocked her door.\n\n\"That's not fair, Rebecca,\" he pleaded. \"You know that's not the way it happened. I was there for you. I tried my best, you know I did.\"\n\nShe slumped against the door. He was right, he had gone well beyond the call of duty. And he'd have continued if she hadn't forced his hand and broken it off herself. That night had broken her, and after eight months of Ben trying to patiently get her better she knew she wasn't going to get better. Therapy, love, none of it was going to get that night of terror out of her mind for as long as she lived. So she'd done the hardest thing she'd ever had to do, harder even than enduring that night and the aftermath: She'd forced the only man she'd ever loved to leave her.\n\n\"Come in,\" she whispered, opening the door and going into her condo. She flipped on the lights and walked toward her bedroom. \"Have a seat and relax while I get out of this monkey suit.\"\n\nFive minutes later, Rebecca walked back into the living room, feeling far more comfortable in a sweatshirt and a pair of loose fitting jeans. She walked past Ben, who was sitting on the couch, and into the kitchen. \"You want something to eat or drink?\" she called. Hearing no answer, she grabbed a can of Diet Pepsi, popped it open, and walked back into the living room.\n\nBen was hunched on the couch now, his head between his hands.\n\n\"Ben,\" she said, curling into the chair opposite him, \"what's wrong?\"\n\n\"I need your help.\"\n\n\"Why me?\"\n\nHe coughed, a phlegmy rattle rife with angst. \"You'll understand once you know what's going on. What he's doing to them.\" He looked up from his hands and at her, the anger now flashing from his eyes and the twist of his mouth.\n\n\"Who? Who's doing what to whom?\"\n\nHis face went back to his hands before he answered. \"I want to hire you. Only after you've agreed can I tell you.\" His voice was broken and he sounded on the verge of tears.",
        "Rebecca felt her composure, her cold exterior begin to thaw at the sight and sound of him. She lowered her voice. \"Ben, c'mon, is it Jennifer? The girls?\"\n\nShe heard a gulping sob, but couldn't tell whether it was for Jennifer or the girls. Putting her soda on the coffee table, she got out of her chair and went over to the couch, unsure whether to risk sitting next to him.\n\nIt had been like that ever since that night, especially since Ben left. She'd had to force herself to endure human contact, to avoid flinching at the most casual of touches. Still, he was crumbling before her eyes, and she couldn't think of anything else to do. Sitting on the couch beside him, she placed her hand on his shoulder.\n\n\"Ben,\" she encouraged, \"you've got to tell me what you want. I can't help you unless you tell me.\" When he said nothing, she added, \"Fine, consider me hired. We'll work out the details later.\"\n\nHe looked up, saw she was serious, and began talking. Low and with emotion at the beginning, but by the end in a dulled monotone.\n\nAn hour later, Rebecca could only stare slack jawed as Ben finished telling about all of the deception. Yet, little more than a minute after he went silent, signaling the end of the tale, the lawyer in her kicked in. She flipped the latches on her briefcase, pulled out pen and legal pad, and began writing a plan.\n\n\"Okay, Ben,\" she said, \"you wanted my help, and now you're going to get it.\" The pace of her writing picked up as her anger rose. \"And I'm not going to give you much of a choice. We're going to burn their asses, and we're going to burn them but good.\" \n\nCHAPTER THIRTEEN\n\nTwo weeks later, Richards sat across from Broussard in the executive dining room.\n\n\"We may have a problem,\" he said, looking around to make sure no one was listening.\n\nBroussard put his fork down and his chewing slowed.\n\n\"He may be in the system,\" Richards continued. \"There's some strange log ins. Weird times, unaccounted for double log ins, snooping around in mundane folders.\"\n\nBroussard speared a piece of carrot and put it in his mouth, chewing methodically while staring at Richards. When he swallowed, he spoke. \"Any indications he's accessed any of the files related to the venture?\"\n\nRichards shrugged. \"No real way to tell. He could've. The chances are slim. Hell, there are millions of files throughout the system, and the chances of just running across that one are slim to none. Still, are you sure there are no trails anywhere else?\"\n\n\"Trails?\" Broussard asked. \"What kind of trails?\"\n\nRichards leaned into him. \"You know, any communications with . . . anyone else . . . about the . . . umm . . . .\"\n\nBroussard's eyes narrowed as he pondered the question. \"No,\" he finally intoned. \"We've never written it down. Hell, we haven't even spoken in months, in any way, shape, or form.\"\n\nRichards sighed, feeling the tension leave his body. \"And you don't keep any traces of this anywhere else?\"\n\nBroussard hesitated before answering. \"No, of course not.\"\n\nRichards knew he was lying. For the first time since this had all started, he felt a wrenching emptiness in the pit of his stomach. \"Just make sure you don't,\" he said.\n\nCHAPTER FOURTEEN\n\nAcross town, Rebecca picked up her office phone.\n\n\"Rebecca Lyons,\" she said.\n\n\"It's done,\" Ben said.\n\nShe smiled. This was going to be fun.\n\nCHAPTER FIFTEEN\n\nTwo days later, Jeff Richards was surprised to hear a knocking on his door. It was only six, and she wasn't due for another half hour. She couldn't usually stay too late on Fridays, but he knew this wouldn't take long anyway.\n\n\"What's so important you had to see me tonight?\" she said breezily, walking past him as he closed the door.\n\n\"We've got a problem,\" he said, for the first time immune to her quiet sexuality.\n\nShe spun and he saw anger flash over her face. \"What kind of problem?\"\n\n\"Broussard,\" Richards said. \"He didn't listen to everything I told him. About security.\"\n\nHer eyes narrowed. \"How do you know?\"\n\nRichards smiled. \"Because I hacked into his accounts,\" he said. \"Both at the office and at home.\"\n\n\"And?\"\n\n\"And he's got enough there to put us all in jail for a very fucking long time,\" Richards said, his voice breaking with the anger welling up inside of him.\n\nShe slammed her purse on the table. \"That fucking idiot,\" she hissed.\n\n\"And there's more,\" Richards said, walking closer to her.\n\n\"Such as?\"\n\n\"Such as videos,\" Richards said, grabbing her arm and gripping her tightly. Her eyes went wide. \"Didn't know he liked videotaping his sessions with you, did you?\" He saw the look of realization flash across her face, and the grip on her arm tightened. \n\n\"Let go of me,\" she said, trying to jerk her arm from his steely grasp.\n\n\"Oh, he videotapes his sessions with all of them. All twenty-four of you, to be exact. But the ones with you were the ones I really liked seeing.\" She was struggling now, trying to jerk away from him, but he held on as he continued talking.\n\n\"I particularly liked the last one,\" he continued. \"The one where you and he plot to fuck me into helping you.\"\n\n\"It wasn't like that,\" she pleaded.\n\n\"It was exactly like that,\" he thundered. \"I watched the fucking video. I heard you, laughing at me.\" He pushed her onto the sofa now. \"Is that all I was to you? Just another fucking patsy? Did I ever mean anything to you?\"\n\nShe had tears now, streaming down her face. \"Not at the beginning you didn't. But you do now. I don't see him anymore. Just you. You're all I want, and you know that.\"\n\nRichards paused in his anger. She was convincing, and he wanted to believe her. And she was right: There had been no more videos of her and Broussard since that last one. They'd never again been together, of that he was sure. Given Broussard's predilections for recording his conquests, he was sure there'd have been more if she'd have continued.\n\n\"You know it's true,\" she wailed. \"Look at me, Jeff. You know it's true, don't you? Maybe not at the beginning, but now it's true. Right?\"\n\nAgainst his will, he felt his head nodding in agreement. It was true. It had to be true. Because if it wasn't, there was no use in continuing. With anything.\n\n\"There's more,\" he said.\n\nHer crying subsided to sniffles, and she was brushing the tears from her cheeks. \"What do you mean?\"\n\n\"The money,\" he said. \"It's gone.\"\n\n\"Gone?\"\n\nHe nodded.\n\n\"That fucking bastard,\" she screeched, grabbing her purse and flying out the door.\n\nRichards watched her go, again unsure whether she was in it for him or the money.\n\nCHAPTER SIXTEEN\n\nBen turned over and looked at the alarm clock. A little after six, time to get up. He rolled out of bed and went to the bathroom, relieving himself before brushing his teeth and shaving. Returning to the bedroom, he nudged the sleeping mound under the covers. She had gotten in late the night before, well after he'd already gone to bed, though he'd feigned sleep as she had snuck under the covers..\n\n\"Honey,\" he whispered, \"wanna take a shower together?\"\n\nShe murmured in response and clutched the blankets tighter to her body.\n\nHe decided to let her sleep and went to shower.\n\nFreshly showered and cleaned up, he was buttoning his shirt when the doorbell rang. Six thirty on Saturday morning, who the hell could that be?\n\nHe trotted down the stairs and to the door. Opening it, he was greeted by a middle-aged man in a rumpled suit, his face a mask of fatigue. He was holding a badge up for Ben to see, and behind him were three uniformed police officers.\n\n\"Mr. Bradford?\" the suit said. Ben nodded. \"Is Mrs. Bradford home?\"\n\nBen paused. \"Why?\"\n\n\"Because we'd like to speak with her,\" he said.\n\n\"And you are?\"\n\n\"Detective Dale Robertson.\"\n\n\"And what do you want to talk with Jennifer about, Detective?\"\n\n\"Ben, honey, who is it?\" he heard from behind him. He turned as Jennifer descended the stairs.\n\n\"It's the police,\" he said. \"They want to . . . . Jesus H. Christ, what the hell happened to you?\"\n\nJennifer flinched, but it did little to hide her battered face. Her lips were split and puffy, one eye beginning to blacken, and her left cheek was swollen and bruised.\n\n\"Jennifer,\" he insisted, \"what happened to your face?\"\n\nFrom behind him, Ben heard gasps as the officers apparently saw the signs of her beating.\n\n\"Did your husband do this to you, ma'am?\" Detective Robinson said.\n\nJennifer fled back up the stairs without another word.\n\nBen started following her when the detective's command to stop froze him.\n\n\"Did you do that to her?\" Robinson asked.\n\nBen shook his head. \"Of course not. Jesus Christ, you think I could hit my wife? What kind of fuckin'\u2013\"\n\n\"When did you last see her before just now?\" Robinson continued.\n\nBen thought for a moment before speaking. \"Why are you here, Detective?\"\n\n\"Please answer my question,\" Robinson said.\n\nBen shook his head. \"I don't think so.\" He looked back over his shoulders toward the stairs, then turned back to Robinson. \"I'm going to have to ask you to leave.\"\n\nRobinson grinned. \"Doesn't work that way. We need to speak with your wife, and we need to speak with her right now.\"\n\n\"You got a warrant?\" Ben shot at him.\n\nRobinson's lips tightened. \"We don't need a warrant.\"\n\n\"Wrong, Detective. This is my house\u2013and her house\u2013and we're in it. You can't come in without a warrant, and you can't take her out without a warrant. You know it and I know it.\"\n\n\"Okay,\" Robinson said, \"we'll get your warrant. And we'll keep someone here to make sure you don't take off. But Mr. Bradford?\" He glared at Ben, who glared right back at him. \"I won't forget how difficult you made this, okay?\"\n\nIn response, Ben swung the door shut.\n\nCHAPTER SEVENTEEN\n\nRobinson returned to the Broussard residence and strode into the den, noticing that the coroner's office was jotting down body temperatures on a chart and the crime techs were just finishing packing their equipment.\n\n\"Anything since I've been gone?\" he asked no one in particular.\n\n\"Probable cause of death,\" the coroner said, still jotting notes. \"Knife to the chest, bled out.\"\n\n\"No shit,\" Robinson smirked, taking in the puddle of blood spread out all around the body.\n\n\"Got this, though,\" said one of the techs. \"Thought you'd find it interesting.\"\n\nRobinson walked over behind the desk and looked at the computer screen.\n\n\"We were dusting the desktop and mouse for prints and bumped the mouse. The screen came up and showed us this.\"\n\nWith that, the tech bumped the mouse and the screen lit up. Robinson saw the coroner rise from the body, then looked up and saw the same thing. Looked down, then back up.\n\n\"He's got this place set for video?\"\n\n\"Yep,\" the tech said, grinning.\n\n\"Was it set last night? When this happened?\"\n\nThe tech shrugged. \"Dunno, didn't check. Not my field. Just thought you'd find it interesting.\"\n\n\"Oh, I find it interesting all right,\" Robinson said, pulling out his cell and phoning in for computer services technicians to get their asses over to the scene.\n\nCHAPTER EIGHTEEN\n\n\"What's going on?\" Rebecca asked as she walked in the front door.\n\n\"I'll give you the whole story later,\" Ben said. \"But for now, the cops were here and want to question Jennifer.\"\n\n\"About what?\"\n\n\"They wouldn't say. But probably about that thing we talked about last night.\"\n\nRebecca's face tightened as she tossed her jacket over the couch. \"Where's Jennifer?\"\n\n\"Upstairs.\" Ben pointed up the stairwell. \"Last door on the right.\"\n\n\"You spoken to her since they left?\"\n\nHe shook his head. \"She locked the door and won't let me in.\"\n\nRebecca nodded. \"Stay here,\" she ordered. \"Maybe she'll be more comfortable just talking to me.\"\n\nBen bit his bottom lip and nodded.\n\n\"Jennifer,\" Rebecca said, knocking on the door. \"Jennifer, I'm Rebecca Lyons. I'm an attorney, and I need to speak with you.\" She heard no response. \"Jennifer, please let me in. Ben's not here, he's downstairs. It'll be just you and me, okay? Please, Jennifer, we don't have much time.\"\n\nShe heard padded footsteps, then the door handle clicked and the door opened.\n\n\"Can I come in?\" Rebecca asked.\n\nJennifer walked back and sat on the bed, saying nothing. She just stared at Rebecca, who gasped when she saw Jennifer's battered face.\n\n\"Jennifer, the police were here.\" Jennifer said nothing. \"Do you know what they want?\" After a moment, Jennifer nodded slowly, as if in a trance. \"Can you tell me what happened to you?\"\n\nJennifer turned to face Rebecca and again nodded. Then a tear started to trickle down her cheek, and she leaned over into Rebecca and squeezed her in a tight hug.\n\n\"Settle down,\" Rebecca whispered, rubbing Jennifer's back as she felt the damp tears penetrate her blouse at the shoulder. \"Jennifer, you've got to be strong now. The police will be back any minute, and I need to know what happened. Okay?\"\n\nShe felt Jennifer nod against her shoulder, then the hug loosened. After a moment, Jennifer sat back and started to speak.\n\nThirty minutes later, Jennifer finished her story. Rebecca could only sit there stunned, her mind a whirl of feverish activity. Before she could fully form a plan, she heard the doorbell ring and knew that decision time had arrived.\n\nCHAPTER NINETEEN\n\nRobinson waited patiently while the dark haired attorney read the warrant. She's beautiful, he thought, but wounded. There was something about her, a skittishness around people, a hesitation to touch. She only seemed comfortable around Bradford, he realized. Best file that away to look into down the road.\n\n\"All right, Detective,\" she said, handing back the warrant. \"Please proceed.\"\n\n\"But Rebecca,\" Ben said behind her.\n\n\"There's nothing we can do, Ben,\" she said. \"It's all in order.\"\n\nRobinson smiled. \"Told you I'd be back, hotshot.\" He tapped Ben on the shoulder with the warrant as he walked past, leading five uniformed officers and three crime scene technicians into the heart of the house.\n\nThe officers and technicians spread out, each going into different areas of the home. Robinson followed their progress before turning and facing Rebecca and Ben.\n\n\"Where's Mrs. Bradford?\" he asked.\n\n\"Upstairs,\" Ben said.\n\n\"Will she be joining us?\" He directed this question at Rebecca.\n\n\"No, she won't be joining us,\" Rebecca said. \"She's had a very traumatic time, and she's better off resting.\"\n\n\"You know,\" Robinson said, knowing he was wasting his breath, \"if she'd just answer a few questions, we'd be able to leave these people alone.\"\n\nRebecca shook her head. \"No go, Detective. You should be advised right now that Mrs. Bradford is represented by counsel\u2013me\u2013and she won't be answering any questions unless I'm there. Okay?\"\n\nRobinson nodded while willing his blood pressure to go back down. Goddamned lawyers.\n\n\"Detective,\" he heard from his right. Glancing that way, he saw a technician striding in from the garage with a camera held up.\n\n\"Right here,\" he said, showing Robinson the picture on the digital camera. \"Just like we thought.\"\n\nRobinson looked at the picture and, sure enough, there it was. Along the driver's side door was a long scratch through the paint and to the metal running for nearly the length of the door. He smiled. Gotcha, Mrs. Bradford.\n\n\"Alfaro,\" he called out.\n\n\"Yeah,\" a uniformed sergeant replied from the other room.\n\n\"You're in charge here 'til I get back, okay?\"\n\n\"Got it.\"\n\n\"And Sergeant,\" he called, turning to look at Rebecca and Ben, \"don't let Mrs. Bradford leave. She steps a foot out this door, you cuff her and take her in. Got it?\"\n\n\"Got it,\" said Sgt. Alfaro, walking into the room.\n\n\"We'll play it your way, Ms. Lyons,\" Robinson said, not bothering to contain his glee. \"You just wait here until I get back with the arrest warrant, okay?\"\n\nRebecca only yawned in response. \"Please don't take too long, Detective,\" she said.\n\nHis blood pressure went back up at her mocking tone. Then he had two thoughts back-to-back. First, I'll wipe that smirk off your face, counselor. Then second, what does she know that I don't? She's playing this awful cool, even for a lawyer.\n\nThe second thought ate away at Robinson even as he drove back to the Bradford residence with the warrant on the seat beside him.\n\nWhat does she know that I don't?\n\nCHAPTER TWENTY\n\nLake County State's Attorney Robert Knight was turned out in his best suit and tie for this appearance. He was in the middle of a tight race for State's Attorney, and he needed a very public show of law and order to help him along to his third term. People of the State of Illinois v. Jennifer Bradford was going to be just that vehicle, he'd decided when the file had been brought into the office. To that end, he'd made the decision to personally see this case through from beginning to end.\n\nThe courtroom was abuzz with spectators and press, and Knight smiled. This was perfect, he knew. The more of this, the better his chances looked. Now he just had to make sure he secured a quick conviction. He nodded in thought at that. Murder trials could easily take as much as two years to get to trial, and that would be far too late for his purposes. He had to do his best to speed this one along as quickly as possible. The primaries were four months away, and the election thirteen months away. If he could get this to trial by the end of summer, he'd build a wave of momentum that would carry him back into office.\n\n\"All rise,\" the bailiff commanded, and the courtroom fell silent save the shuffling of a hundred bodies coming to their feet. \"The Circuit Court for the Nineteenth Judicial Circuit is now in session, the Honorable Judge Gerald Feldman presiding.\"\n\nKnight smiled as the judge strode through the door from chambers to the bench, taking a seat as the bailiff told everyone they could take their seats, too. Knight was delighted Judge Feldman had been assigned to the case. In his seventeenth year on the bench, he was known as a no nonsense, law and order judge. Sure, Knight knew, he could raise hell with the attorneys if they slipped up, but he'd do his best to get this show on the road.\n\n\"Is the defendant here?\" Feldman asked the bailiff.\n\n\"I'll bring her out, your Honor.\"\n\nFeldman nodded, and all eyes followed the bailiff to a side door. A minute later, Jennifer shuffled through the door in an orange jail jumpsuit stenciled with Lake County Jail, orange laceless tennis shoes on her feet, and manacles holding her hands to the chain around her waist.\n\nKnight felt himself get aroused at the sight. She was a beautiful woman, someone he'd love to bed if given the chance. Then the smile turned predatory as he realized she would guarantee front page coverage for the duration of the case.\n\n\"We're calling People v. Bradford, Case Number 09 CF 2311,\" Feldman said in a bored voice, shuffling through the file folder in front of him. \"Counsel for the State, please identify yourself.\"\n\n\"Robert Knight for the People of the State of Illinois,\" Knight said, his deep voice booming through the courtroom.\n\n\"Counsel for Defendant?\"\n\n\"Rebecca Lyons of Schwartz, Gillman, your Honor.\"\n\nFeldman turned to the dark haired wisp of a woman next to him. He noticed for the first time that she was as beautiful as her client, but in a diametrically opposed way. While Jennifer was medium height, blonde haired, blue eyed, with a slim, athletic build, Rebecca Lyons was shorter by several inches, brown haired and brown eyed, with a petite built. And whereas Jennifer, even in her current state, exuded an air of relaxed sexuality, Rebecca Lyons burned with an obvious intensity.\n\n\"Ms. Lyons,\" Feldman intoned, looking over the top of his glasses, \"does your client waive the reading of the charges?\"\n\n\"She does, your Honor.\"\n\n\"Fine. How does she plead to the sole count at this time, murder in the first degree?\"\n\n\"Not guilty, your Honor.\"\n\nA murmur arose in the courtroom, and reporter's pens scribbled over their notepads.",
        "\"Quiet,\" the bailiff called out, and the murmur died.\n\nFeldman smiled at the bailiff before continuing.\n\n\"What's the State's position on bail?\"\n\nKnight cleared his throat, needing to make sure he was heard throughout the room. \"Given the gravity of the charge, the State requests that Defendant be remanded to custody pending trial.\"\n\nThe murmur arose again, and Feldman shot a look at the crowd, who quieted down.\n\n\"Ms. Lyons?\"\n\n\"Your Honor, Mrs. Bradford has strong ties to this community. She has a family, very young twin girls, and a husband who also has ties to the community. She poses no risk of flight. We request that bail be set at a reasonable amount.\"\n\nFeldman nodded, then scribbled something on the form in front of him. \"Bail will be set at ten million dollars, ten percent to apply. If she can post that, she'll have to surrender her passport.\"\n\nKnight smiled, pleased with such a high bail. Then he heard a thud and turned to his right. Jennifer Bradford had fainted, and the courtroom erupted in noise.\n\nKnight's smile got broader. Oh yeah, he knew, this was going to give him that third term sure as hell.\n\nCHAPTER TWENTY-ONE\n\nFive months later, Ben was nervous, his right knee pumping up and down as he sat in the front row five feet behind Jennifer and Rebecca. They had spent the past four days picking a jury, and Rebecca had assured Jennifer and him that it was a good one. Five men and seven women; only one of the men unmarried, but he was engaged; and three of the women unmarried, but that didn't matter with a self-defense claim based on attempted rape.\n\nBen noticed that Jennifer didn't look well. She was dressed simply in a white blouse and gray skirt, no make up, hair dull with cheap jail shampoo. Most noticeably, she was pale, gaunt, and had dark circles under her eyes. Jail definitely didn't agree with her, he knew. But then again, who does it agree with except psychos and career criminals?\n\nRebecca, on the other hand, was a model of intense self assurance. She wore a black skirt and jacket over a white blouse, simple cross necklace visible at the base of her slender throat, hair neatly coiffed, eyes blazing intently as Knight finished his opening statement and retook his seat at counsel table, turning to look at Rebecca with raised eyebrows.\n\n\"Does the defense wish to offer an opening statement at this time?\" Judge Feldman asked from the bench.\n\nRebecca rose. \"No, your Honor,\" she said. \"If the Court will permit, we wish to defer until the commencement of our case in chief.\"\n\n\"The Court will so permit, Ms. Lyons,\" he responded. Turning to Knight, he said, \"Will the State please call their first witness.\"\n\n\"Your Honor,\" Knight said, standing at the podium and turning toward the door at the back of the courtroom, \"the State wishes to call Deborah Broussard.\"\n\nBen was expecting this. Rebecca had explained how trials in the real world\u2013those not skewed in made-for-television movies\u2013really worked. The first witness was almost always the life-and-death witness. That was the witness called to testify she had seen the victim just before death and he was alive. Then, she'd seen him after the death, and he was dead. It seemed ridiculous, but to prove a murder you actually had to have testimony that a live person was now dead; then you had to have the coroner testify that the death was by foul means; then you had the remaining array of witnesses to testify that the defendant was the person responsible for that death by foul means. Moreover, Rebecca had told Ben that surviving spouses were inevitably called as the life-and-death witness because they immediately created sympathy with the jury, contempt for the scoundrel charged with ruining this poor witness's life by killing the spouse, and an appreciation that a real person was now dead, struck down in the prime of their happy, idyllic life.\n\nThe door was held open by a bailiff, and Deborah Broussard strode down the aisle between the seats and toward the bench. Knight went rigid at her appearance, and Ben turned to look.\n\nDeborah Broussard was dressed in a glittering array of expensive gold and diamond jewelry, attired in a flowing white pantsuit that accentuated her long legs and the glitter of her jewelry. She didn't look anything like the grieving widow, Ben realized, and he turned to catch Rebecca's reaction. Rebecca's lips were pressed, but there was a glint of humor in her eyes.\n\nThe witness was sworn in, and Deborah took the witness stand. The first few questions were introductory. Name, address, occupation, how long have you lived there, were you married, to whom, when were you married, did you have any children. Then the fireworks began.\n\n\"Mrs. Broussard, prior to the late evening hours of September twenty-third, when was the last time you saw your husband?\" Knight asked, setting up the he-was-alive line of questioning.\n\n\"On September twenty-first,\" she answered, the hint of a smile playing over her lips. Ben saw Rebecca focus in on the witness, as curious as he was about the strange reaction of the grieving widow.\n\n\"You mean on the twenty-second, don't you?\" Knight said, flipping through a stack of police reports in front of him.\n\n\"Objection,\" Rebecca said. \"Asked and answered.\"\n\n\"Overruled,\" Feldman said. \"The witness may answer to clarify any confusion.\"\n\nDeborah smiled at the judge, then turned back to Knight. \"No, Mr. Knight, I mean the twenty-first.\"\n\n\"But you previously told Detective Robinson, the lead detective on the case, that you last saw him on the twenty-second, didn't you?\"\n\n\"Objection,\" Rebecca said. \"He's impeaching his own witness.\"\n\n\"Sustained.\"\n\nKnight paused, glared at Rebecca then back at his notes, flipped the page of his question list, then continued. \"Okay, the twenty-first. Where were you when you saw him?\"\n\n\"At my house.\"\n\n\"You mean you and your husband's house, right Mrs. Broussard?\" Knight corrected.\n\n\"No, Mr. Knight. I mean my house. The house is, and always has been, solely in my name.\"\n\nBen was smiling now, noticing that members of the jury were mesmerized by her demeanor and at least one of the men on the jury was smiling and nodding his head. She certainly wasn't playing the grieving widow part very well.\n\n\"Okay, Mrs. Broussard, you last saw your husband at your house on the twenty-first. Was he alive at that point?\"\n\nShe snorted. \"You could say that, Mr. Knight. But if you want clarification, you may want to ask the floozie he was busy undressing.\"\n\nBen almost laughed aloud, and several members of the jury were choking back laughs while several others turned to Knight to catch his reaction.\n\n\"Silence,\" Judge Feldman thundered, quieting the loud murmuring from the gallery. Silence achieved, he turned to Knight and, suppressing a grin, said, \"Please continue, Mr. Knight.\"\n\nKnight swallowed, then flicked off a series of questions with his pen. Finally reaching one he liked, he asked, \"Okay, after the twenty-first, when you last saw your husband . . . uh . . . with another . . . when was the next time you saw him?\"\n\n\"At about ten thirty on the twenty-third, lying in the middle of the floor of his den about five feet from where I'd last seen him two days before.\"\n\n\"And what was his condition at that time?\"\n\nDeborah raised her eyebrows. \"Why, he was dead, of course.\"\n\nKnight looked at the witness, unsure whether to continue. After a moment, he said, \"No further questions of this witness, your Honor.\"\n\nWith that, Knight flipped the 3-ring binder holding his questions shut, tucked it under his arm, and strode back to counsel's table.\n\n\"Ms. Lyons,\" Judge Feldman said, finishing his notes as he spoke, \"does the defense have any questions of Mrs. Broussard?\"\n\n\"We do, your Honor,\" Rebecca said, rising to her feet and walking to the jury box. Unlike Knight, who'd remained locked to the podium in the middle of the court well, Rebecca leaned against the jury box. Ben saw every juror's eyes turn to her, waiting for her first question.\n\n\"Ms. Broussard,\" Rebecca said once every eye had settled on her, \"I'd like to take this opportunity to express my condolences at the loss of your husband.\" Deborah nodded. \"I'm sure this is very difficult for you,\" Rebecca continued.\n\nDeborah snorted. \"I'm getting through it pretty well, actually.\"\n\nSeveral of the women jurors, including all three single women, smiled at the comment. Good riddance to Alain Broussard, Ben knew they were thinking.\n\n\"Ms. Broussard, I just have a few questions if you don't mind.\" Deborah nodded. \"You said the last time you saw your husband, he was with another woman?\"\n\n\"Yes, another in a long line of them.\"\n\nBen looked at Knight, who was glaring at the witness. His first witness was already a disaster for the State; she'd turned the entire jury against the victim and painted him as a slimeball of the first order.\n\n\"Did you know this woman?\"\n\n\"No, I hadn't seen this one before.\"\n\n\"What did she look like?\"\n\nDeborah pondered this for a moment. \"Like most of the rest, I suppose.\"\n\n\"Most of the rest in his 'long line of women?'\"\n\n\"Yes,\" Deborah said. \"Mid-twenties to mid-thirties, slim, blonde hair. Pretty.\"\n\nRebecca swept her arm at Jennifer, and Ben saw his wife tense at the attention of every juror's eyes upon her.\n\n\"Like Mrs. Bradford?\"\n\n\"Oh yes,\" Deborah said, \"a lot like Mrs. Bradford.\"\n\n\"And what was this woman he was with, on the twenty-first, what was her demeanor?\"\n\n\"Objection,\" Knight said, rising to his feet. \"Relevance.\"\n\n\"Ms. Lyons?\"\n\n\"They opened the door on direct, your Honor. I think we're allowed to explore this avenue more fully, particularly given the full extent of the testimony so far and the nature of the affirmative defense we've raised in our pleadings.\"\n\nJudge Feldman nodded. \"Overruled. The witness will please answer the question.\"\n\n\"What was the woman's demeanor?\" asked Deborah. Rebecca nodded. \"She was crying.\"\n\n\"Your husband was undressing her and she was crying?\"\n\n\"Objection,\" Knight thundered.\n\n\"Overruled,\" Judge Feldman shot back.\n\n\"Yes. She appeared very reluctant. She was crying, telling him this wasn't right, . . . .\"\n\n\"Objection. Hearsay.\"\n\n\"Doesn't go to the truth of the matter asserted,\" Rebecca shot back. \"Only goes to indicate demeanor of the woman.\"\n\n\"Correct. The objection is overruled,\" Judge Feldman said. Turning to Deborah, he said, \"She was crying and telling him it wasn't right. Anything else?\"\n\n\"Yes, your Honor, she was just limp. You know, like she was a zombie. She wasn't helping him, just arms at her side, crying him and asking him to stop.\"\n\n\"And what did you do, Mrs. Broussard?\" Rebecca asked.\n\n\"I told her to come with me.\"\n\n\"Did she?\"\n\n\"She wouldn't. I told her she didn't have to do anything she didn't want to, but she just sat there. I told Alain to leave her be, but he just smirked and told me she was more than willing. That this was a little game they played from time to time. He said I should hang around to see how fun it could be.\"\n\n\"Did you call the police?\"\n\nDeborah dropped her eyes. \"No. I offered to, but the woman begged me not to. She said she'd be fine.\"\n\nRebecca tapped her knuckles on the jury rail. \"Thank you for your honesty, Ms. Broussard.\" Turning to the bench, she said, \"I have no further questions of this witness, your Honor.\"\n\nJudge Feldman nodded and turned to Knight. \"Mr. Knight? Any re-direct?\"\n\nKnight cleared his throat and stood. \"No, your Honor.\"\n\n\"Then the witness is excused. Mrs. Broussard, please do not discuss your testimony with any of the other witnesses who are in the hallway. Do you understand?\"\n\nDeborah nodded. \"I won't, your Honor.\"\n\n\"Thank you.\" Turning to Knight, Judge Feldman said, \"The State may call its next witness.\"\n\nKnight called Dr. Anthony Iatrolla, the Lake County Coroner. Ben nearly fell asleep during the dry testimony about causes of death, penetrating force, and so on and so on. Even the pictures weren't very interesting. They showed Broussard curled face down in a pool of blood, some photos of scratch marks on his neck and penis, and a few showed close-ups of the fatal stab wound, a tiny slice an inch or so long into his rib cage just to the right of his sternum.\n\nOn cross-examination, Rebecca focused first on the time of death. Dr. Iatrolla had estimated death at between seven and ten that evening. Sure, he'd admitted, it could have been earlier, and it certainly could have been later. The home was equipped with a computerized thermostat that automatically changed temperatures in the house, lowering the temperature when people would normally be absent and raising it when they would be home. Given the fluctuations attendant with such temperature changes, most notably how long the home took to heat up or cool down, could skew the time either way. In any event, rigor mortis had not yet set in when the coroner arrived, so he was comfortable with the time frame.\n\nJust as she returned to counsel table, her cross-examination apparently concluded, Rebecca stopped and turned.\n\n\"By the way,\" she said, \"this was an artery that was severed I believe you said?\"\n\n\"Yes,\" Dr. Iatrolla said. \"The aorta, as a matter of fact.\"\n\n\"And those bleed a lot, right?\"\n\n\"Yes.\"\n\n\"And that blood flow is instant and spastic, right? I mean, once it's pierced, the blood flow is immediate and in great quantity, right?\"\n\n\"Yes,\" he said.\n\n\"Thanks, Doctor,\" she said, sitting. \"No further questions.\"\n\nNext to the stand was Detective Robinson, who had been seated throughout the trial at counsel table with Knight. He talked about arriving at the scene at midnight, securing the crime scene, questioning Deborah Broussard, and learning about the home's surveillance capabilities.\n\n\"Surveillance capabilities?\" Knight asked.\n\nRobinson cleared his throat. \"Yes sir. The home has perimeter fencing and an electronic gate. There are cameras on the gate that record every entry and exit every time the gate is either touched\u2013something to do with interference in the electrical signal\u2013or when the gate is activated.\"\n\n\"And did you view the footage?\"\n\nRobinson nodded. \"It showed a dark BMW 325 entering at seven twenty-three and exiting at seven fifty-two.\"\n\n\"Could you tell the color of the BMW?\" Knight asked.\n\n\"No, sir, the camera only shoots black and white.\"\n\n\"Did you get a license plate?\"\n\n\"No,\" Robinson said, clearing his throat. \"The plates were covered, front and back, with what appeared to be mud or dirt. We couldn't make out a number.\"\n\n\"Your Honor,\" Rebecca said, standing. \"At this point, we're going to object under the best evidence rule. If they have the tape, they should produce it and let us all draw our own conclusions rather than let the witness merely describe his observations.\"\n\nJudge Feldman turned to Knight. \"Mr. Knight, do you have the tape?\"\n\nKnight glared at Rebecca. \"We do, your Honor. But it would be a waste of time\u2013of everyone's time\u2013to have to sit and watch the whole thing.\"\n\n\"Ms. Lyons?\" Judge Feldman asked.\n\nShe shrugged. \"My client's facing life in prison, your Honor. Surely Mr. Knight, or any members of the jury, for that matter, will not begrudge thirty minutes of their time to watch the tape on which the witness's entire investigation seems to have turned.\"\n\nBen saw several members of the jury nod with appreciation. \n\nJudge Feldman directed Knight to lay the foundation for the tape, which he did through Detective Robinson's testimony. Then, everyone spent the next thirty minutes watching the tape.\n\nAfter recessing for lunch, Knight resumed his questioning of Detective Robinson.\n\n\"What did this tape signify to you?\" Knight asked Robinson.\n\n\"Well, it looked like someone in a dark BMW, license plate unknown, entered the gates at about seven thirty and left about a half hour later. It also looked like that person was a blonde female. And finally, it looked like the driver's side car door made contact with the gate as it pulled out.\"\n\nKnight nodded. He then led Robinson to further details of the investigation that night. Robinson had a conversation with Deborah about any friends of theirs with BMW 325s, particularly those with blonde hair. The only names she could come up with were Susan Flowers and Jennifer Bradford, two of Alain's co-workers she had met at company parties in the past. When he couldn't reach either by phone, he drove to the Flowers residence. No one was present, and there was no BMW in the driveway. Next, he drove to the Bradford residence, where he eventually located Jennifer's red BMW 325 with a long scratch on the driver's side door.\n\n\"Was there any residue on the car door from whatever it struck?\"\n\nRobinson shook his head. \"No sir. The scratch appeared to have been buffed out.\"\n\n\"Did the scratch appear to be recent?\"\n\n\"Objection,\" Rebecca said. \"He's not qualified as an auto expert, so he can't testify to the age of the damage to the auto.\"\n\n\"I'll re-phrase the question,\" Knight said before the judge could rule.\n\n\"Detective,\" he said, \"could you describe the scratch in more detail?\"\n\n\"Sure. It was about two feet long and to the metal.\" Turning to Jennifer at her table, he continued. \"The metal was shiny without a spot of rust.\"\n\n\"And Detective, did your search of the Bradford residence turn up any other evidence?\"\n\n\"It did,\" he said. \"We found a blouse with blood stains on it.\"\n\nKnight turned and picked up a clear plastic bag holding a white cotton blouse. \"Is this that blouse?\"\n\nHe handed the bag to Detective Robinson, who made a great show of carefully inspecting the bag.\n\n\"It is,\" Robinson finally confirmed, handing the bag back to Knight.\n\n\"Your Honor, I'd like to have what has previously been marked as State's Exhibit Number thirty-four for identification be admitted into evidence as State's Exhibit Number Thirty-Four.\"\n\n\"No objection,\" Rebecca said.\n\n\"There being no objection, State's Exhibit Number Thirty-Four will be admitted.\"\n\n\"I have no further questions of the witness at this time,\" Knight said.\n\nRebecca stood and strode to the table holding the exhibits thus far admitted. She picked up the blouse and walked back to Detective Robinson.\n\n\"You testified there was blood on this blouse, right?\"\n\n\"Yes, ma'am,\" he said, taking the blouse.\n\n\"You were present when the coroner, Dr. Iatrolla, testified, right?\"\n\n\"Yes, ma'am.\"\n\n\"And you heard him testify that the victim was killed when his aorta was severed, right?\"\n\n\"Yes, ma'am.\"\n\n\"And you heard him say that arterial punctures bleed fast and furious, right?\"\n\n\"Yes, ma'am.\"\n\nRebecca jerked her head at the blouse in Robinson's hands. \"What color is that blouse?\"\n\n\"White.\"\n\n\"Show me the blood on this blouse,\" she said, folding her arms and leaning back against the jury box.\n\nThe jurors leaned forward and watched Robinson pull the blouse from he bag, unfolding it after he had done so.\n\n\"It's right her, ma'am,\" he said, pointing to a spot on the lower right section of the front of the blouse. The judge set the record about the location of the spot to which Robinson was pointing, then Rebecca continued.\n\n\"That's it?\" she said. \"She's charged with stabbing someone and piercing the aorta, and you're showing me a spot of blood that's, what, maybe the size of my thumb?\"\n\n\"That's all there is, ma'am. Maybe Mrs. Bradford got out of the way before it started spurting.\"\n\n\"Your Honor,\" Rebecca said, wheeling to face the judge.\n\n\"The witness will please refrain from such comments, understood?\" Robinson nodded. \"And the jury will disregard that statement.\"\n\n\"All right, Detective, let me ask you, how many homicides have you investigated in your career?\"\n\n\"Thirty-four,\" he said.\n\n\"And how many cases of any kind\u2013homicides, car accidents, suicides, and so on\u2013have had with arterial punctures?\"\n\nRobinson thought for a minute. \"Couple of dozen, I suppose.\"",
        "\"Have you ever seen anything in all of your experience with arterial punctures that indicated someone could just jump out of the way of arterial spray?\"\n\n\"No, ma'am.\"\n\nRebecca nodded. \"And this was the only bloody clothing you found in the Bradford residence? No bloody shoes? Or did she manage to float fifteen feet over the floor to make her escape?\"\n\n\"No,\" he agreed, \"this was it.\"\n\n\"What about the car? If she was leaving the scene of such a messy murder, surely you must have found blood stains in the car, right?\"\n\n\"No, ma'am, no blood in the car, either.\"\n\nJudge Feldman chose this point to adjourn until the following morning.\n\nCHAPTER TWENTY-TWO\n\n\"We've got some serious problems here,\" Robinson observed to Knight as they walked down the hallway toward Knight's office.\n\n\"You fucking think?\" Knight said. \"She's filed a notice of intent to use the affirmative defense of self defense to rape. Then, right from the starting gate, the grieving fucking widow takes the stand and all but makes their case for them. How the fuck could you let that happen?\"\n\nRobinson's lips tightened and he struggled to control his rising anger. \"You knew from the get go that she has that defense. You saw the goddamned videos that sick bastard kept. You thought his wife knew nothing about him?\"\n\nKnight stopped and spun on Robinson. \"Not a word,\" he hissed. \"You hear me? Not a fucking word about any goddamned videos. Those come out and we're fucked.\"\n\n\"Well maybe we should be fucked,\" Robinson said. \"I'm not the one who's withholding evidence here; you are. I turned it all over to you, and what you did with it is none of my fucking business. I mean, what if they ask me about them? You expect me to lie?\"\n\n\"They don't know anything about any videos,\" Knight said. Seeing Robinson was clearly uncomfortable with this confirmation of withholding evidence, he continued. \"I'll say it again, those videos come to light, we're\u2013both of us\u2013fucked.\"\n\n\"But what if there's something to it? Maybe that sick fucker did try to rape her. She wasn't on any of the videos, so we know if she was there it was for the first time. Maybe she stood up to him and he didn't like it. Jesus Christ, you saw the booking photos. Somebody nearly knocked her head off she was beaten up so bad. You think Lyons isn't going to come after me with that tomorrow?\"\n\nKnight nodded. \"I know she's going to go after you about that. But still, how do we know it wasn't hubby. Notice he's not on their witness list. That's why he's sitting in the courtroom. He can't offer an alibi, so they didn't even bother listing him.\"\n\n\"Yeah,\" Robinson said, \"but I don't think so. And I don't like how close hubby seems to be with Lyons, either.\"\n\nKnight's eyes narrowed. \"What do you mean?\"\n\n\"You see her body language?\"\n\nKnight nodded. \"She's got some kind of phobia about being touched.\"\n\n\"Yeah,\" Robinson said. \"It's the first thing I noticed about her the morning of the arrest. But guess who she doesn't mind touching?\"\n\nKnight waited for the answer.\n\n\"That's right,\" Robinson continued. \"She doesn't get all freaky around hubby.\"\n\n\"You think he's banging her?\"\n\nRobinson shook his head. \"No. I looked it up. Seems they used to be an item back when she was in law school. Engaged to be married.\"\n\n\"What happened?\"\n\n\"She was raped is what happened. Three black dudes from the projects pulled her into a warehouse and raped her repeatedly for a couple of hours. She freaked, was never the same. They called it quits a few months later.\"\n\nA wave of anger swept over Knight's face. \"And I'm just hearing about this for the first time? What the fuck's wrong with you?\"\n\n\"And what would you have done about it? If you'd known, what the hell difference would it have made.\"\n\n\"Would've been nice, that's all.\"\n\n\"Well,\" Robinson said, \"at least now you know why she's fighting her ass off for Jennifer Bradford. She empathizes with a fellow rape victim.\"\n\n\"But there's no evidence she was raped,\" Knight insisted.\n\nRobinson laughed. \"You know, you gotta show she killed him before they can even raise that defense. And at this point there's damned little evidence she was even in the fucking house.\"\n\nCHAPTER TWENTY-THREE\n\nThey sat in Rebecca's office, sipping sodas while Rebecca went over the questions lined up for the next day.\n\n\"So how you going to play it?\"\n\nRebecca looked up and saw that Ben was nervous. She smiled before answering.\n\n\"Well,\" she said, \"we're doing pretty good so far. Your little session with Deborah Broussard paid off in spades. How'd you get her to play along?\"\n\nBen grinned. \"Wasn't hard. I just showed her a few of the videos and she spilled the beans on the whole story. Just like she did in court.\"\n\n\"So you think she was telling the truth? I mean, did she lie to us or to the cops?\"\n\nBen shrugged. \"Not a clue. But once she really saw dear sweet Alain for what he really was\u2013and I don't think she was too surprised\u2013she just grinned and told me not to worry, she wouldn't be a problem. Said she was tired of playing the grieving widow for poor Daddy, and this would finally get him off her back. Whatever all that means.\"\n\nRebecca smiled. \"Well, she did one hell of a job planting the seeds. And the rest of them,\" she leaned back in her chair and folded her hands behind her head. \"Well, let's just say that we've already got reasonable doubt about whether Jennifer was even there.\"\n\n\"And tomorrow?\"\n\n\"Tomorrow, my dear, we're going to blow this case wide open,\" Jennifer assured him.\n\nBen nibbled on a fingernail. \"You sure we're playing this right this time?\"\n\nJennifer nodded. \"Oh yeah, I think we've got 'em all where we want 'em.\"\n\nCHAPTER TWENTY-FOUR\n\nAfter the previous day's fireworks, the courtroom was more packed to the maximum. Spectators were squeezed into the seats, and nearly two dozen more lined the walls.\n\n\"So Detective,\" Rebecca started, \"you testified you were first on the scene?\"\n\n\"Correct.\"\n\n\"Before the plainclothes officers?\"\n\n\"Yes. I was only a few blocks away on a residential burglary when the call came in. I left a few officers there and headed right over. I was there within minutes of the call coming in.\"\n\n\"And Mr. Broussard was face down on the floor in a pool of blood?\"\n\nRobinson nodded. \"That's correct.\"\n\n\"Did you subsequently roll him over?\"\n\nRobinson hesitated, knowing where this was going. \"Yes.\"\n\n\"Did you notice anything unusual when you did?\"\n\n\"Yes,\" Robinson said, trying to deflect. \"There was a knife sticking out of his ribs and blood covered the front of his body.\"\n\nRebecca smiled. \"Anything else unusual?\"\n\nRobinson took a breath. He knew that any more evasion would only hurt the State's case.\n\n\"Yes,\" he said. \"Mr. Robinson's trousers were unzipped and his penis was exposed.\"\n\nRebecca nodded thoughtfully, waiting for the rising murmur in the courtroom to die down. \"And you heard the coroner testify that, in addition to the knife wound, Mr. Broussard had a few other injuries as well, right?\"\n\n\"Yes.\"\n\n\"And those injuries were a scratch on his neck and a scratch on his penis, right?\"\n\n\"Yes.\"\n\n\"How many rape cases have you worked in your time as an officer?\"\n\n\"Objection,\" Knight said. \"Beyond the scope of direct.\"\n\n\"Overruled,\" Judge Feldman said without waiting for Rebecca's response.\n\n\"Couple of hundred.\"\n\n\"In how many of them did the witness fight back?\"\n\n\"Fifty, maybe seventy-five,\" Robinson said.\n\n\"What type of wounds did the assailants typically have in those cases where the rape victim fought her attacker?\"\n\nRobinson shot a glance to Knight, who only lowered his head. \"Scratch marks.\"\n\n\"Scratch marks where, Detective?\"\n\n\"Face, neck, chest, back, genitals,\" Robinson answered. \"Pretty much where there was exposed skin.\"\n\nRebecca's head spun, and her eyes locked with Robinson's. \"And the only exposed skin on Mr. Broussard when you found him was his face, neck, and penis, right?\"\n\nRobinson, having violated the first rule of testifying by answering too much, mumbled his answer.\n\n\"What, Detective? The ladies and gentlemen of the jury didn't hear your answer.\"\n\n\"I said 'yes, those were the only exposed areas not covered by clothing,'\" he said, looking back at her.\n\n\"And you heard Ms. Broussard's testimony, right?\"\n\n\"Yes,\" he said.\n\n\"You hear that part about where he appeared to be forcing himself on a young woman?\"\n\n\"Yes.\"\n\n\"Anything in the course of your investigation arise to lend credence to any history of such behavior by Mr. Broussard?\"\n\nRobinson hesitated, looking to Knight again for guidance. Knight only stared back at him, offering nothing.\n\n\"Take your time, Detective,\" Rebecca said. \"We all know it was a long investigation.\"\n\nHe cringed at the contempt in her voice.\n\n\"Well, we heard some rumblings,\" he finally offered.\n\n\"Rumblings? That's all? You sure there wasn't more?\" she said. \"Proof of a more definitive kind?\"\n\nRobinson was sweating now, afraid to answer, but terrified of getting caught. Knight's face had tightened, and he was watching Rebecca's every move.\n\n\"What do you mean by definitive?\" Robinson asked.\n\n\"Now Detective, I think you know what I mean by definitive.\" She turned and walked to counsel table, reached into her briefcase, and retrieved a stack of DVDs. Robinson saw Jennifer Bradford's body and face tighten at the sight of them, her eyes going wide. This was the first emotion other than sadness she'd shown since they'd started picking the jury.\n\nAs Rebecca turned and held the DVDs up for all to see, Robinson was sure his look of terror made Jennifer Bradford's apprehension seem like giddy joy.\n\n\"Objection, your Honor,\" Knight thundered, flying from his seat.\n\n\"Mr. Knight,\" Judge Feldman said, leaning forward and staring down the prosecutor, \"there's no question pending or any offer of evidence.\"\n\n\"But there's going to be,\" Knight insisted, \"and I want it cut off right now.\"\n\nRobinson sat mute, unable to move as he watched Knight panic. Rebecca, on the other hand, only smiled, continuing to hold the DVDs up high. The murmuring in the courtroom was rising, and the bailiff's attempts to quiet them proved futile.\n\nJudge Feldman stood. \"Court's in recess,\" he said. \"Counsel, follow me.\"\n\nCHAPTER TWENTY-FIVE\n\nFeldman strode through the door to his chambers and was seated by the time the two attorneys walked in. He smiled at them.\n\n\"Okay, Bob, you wanna tell me what's got your undies in an uproar?\"\n\n\"Your Honor,\" Rebecca interrupted, \"I'm sorry, but I'm going to have to object to this. If we're going to discuss this, I really must ask that a court reporter be present.\"\n\nFeldman looked at her. She was cool as a cucumber and had clearly played all of this out well in advance. He had to admit he was enjoying her show. For someone with no experience defending a murder case, she hadn't missed a step yet. Moreover, she was making a complete fool out of Bob Knight. \n\n\"Point taken, Ms. Lyons,\" Feldman said. \"Jim,\" he called to the bailiff just outside the door, \"you wanna ask Francine to come back here for this little show.\"\n\nThey waited for the court reporter, who appeared moments later with her steno machine.\n\n\"For the record,\" Feldman started, \"we are in chambers on People v. Bradford. Both counsel are present, as well as myself.\"\n\nTurning to Knight, he said, \"When we left this off, Mr. Knight, you were objecting to what appeared to be a stack of DVDs. Would you please now explain the basis of your objection, however untimely it appears to be at this point?\"\n\nKnight fumbled for words before getting started. \"The evidence I fear is about to be produced is highly prejudicial and will serve only to inflame the jury.\"\n\n\"And what do you think this evidence is, Mr. Knight?\"\n\nKnight squirmed at that one, and nothing came from his mouth.\n\nFeldman turned to Rebecca. \"Ms. Lyons,\" he said, \"can you explain what is going on here?\"\n\nShe smiled wide and placed her hands in her lap. \"Of course, your Honor. You see, these are DVDs from Mr. Broussard's computer. They show his various sexual conquests over the three-year period before his death.\"\n\nFeldman sat back and whistled low. He stared back and forth between Rebecca and Knight, and the look on Knight's face told him that he still wasn't getting the full story.\n\n\"This makes you uncomfortable, Mr. Knight?\"\n\nKnight shook his head.\n\nFeldman turned back to Rebecca. \"All right, Ms. Lyons, assuming what you say is true, what is the probative value of these videos?\"\n\n\"Well, your Honor,\" she said, leaning forward and whispering conspiratorially, \"the vast majority of the videos clearly depict sex that was highly coercive in nature.\"\n\nFeldman raised his eyebrows at this and shot a look at Knight. Knight was still tight-lipped, though.\n\n\"You disagree with Ms. Lyons's characterization of these videos, Mr. Knight?\"\n\n\"No, your Honor.\"\n\nFeldman nodded. Turning back to Rebecca, he continued. \"Is there more, or are you going to make me drag this out of you bit by bit?\"\n\nRebecca shot a look of contempt at Knight before she spoke. \"Just this, your Honor,\" she said, turning back to look at the judge with fire now dancing in her eyes. \"Mr. Knight had these videos and never bothered to turn them over.\"\n\nThe tightening of Knight's entire body told Judge Feldman that this was true.\n\n\"You're kidding me, right Bob?\" he said to Knight. \"You're prosecuting a murder where we've got notice they're going to be raising self defense to rape as a justification, and you didn't bother turning over videos that show the victim\u2013and I now use that term guardedly\u2013has a long history of coercive sex?\"\n\n\"But none of them, not a single one, shows the defendant, your Honor,\" Knight pleaded. \"They're not relevant to this case because they don't show that she was the victim of any such coercion.\"\n\n\"Oh come off it, counsel,\" Feldman thundered. \"You know better than that. They're clearly relevant to the matter at hand, and the defense had a constitutional right to have them. And you had a constitutional\u2013and ethical\u2013obligation to turn them over to her.\"\n\n\"But she's already got them, Judge,\" Knight pleaded. \"There's no prejudice where she's already got them.\"\n\nFeldman thought about this for a moment. \"So, no harm, no foul. Is that your response?\"\n\nKnight nodded.\n\nFeldman turned to Rebecca. \"Ms. Lyons, he makes a good point. If you've already got them, where's the harm?\"\n\n\"The harm, your Honor, is that is shows he's hidden the most central evidence of this case from us. And you don't know when we got them. If it was only yesterday\u2013which is, by the way, the first time I was able to fully view all of these tapes\u2013then how am I supposed to prepare a defense when they make sure to hide all evidence central to my defense? Oh no, your Honor, we're clearly prejudiced.\"\n\nFeldman nodded. \"I could give you a continuance, permit you to amend your witness list if you wish. Then we could still go forward.\"\n\n\"And how do we know he's not hiding other evidence, your Honor?\"\n\nFeldman turned to Knight. \"Bob, any more surprises for Ms. Lyons?\"\n\nKnight hesitated. \"No.\"\n\nFeldman leaned over his desk and glared at the prosecutor. \"This is your last chance to come clean,\" he said. \"If I find any more improperly withheld evidence, she's getting a mistrial.\"\n\nKnight said nothing for a minute.\n\n\"We're waiting,\" Feldman said.\n\n\"No, there's nothing else.\"\n\nFeldman stared at the prosecutor, knowing he was lying. Then he looked at Rebecca and saw the smile on her face. She knows he's lying, too, and she's going to prove it.\n\nCHAPTER TWENTY-SIX\n\n\"So, Detective, when last we spoke, you were about to tell me whether you had any more definitive evidence that Mr. Broussard had a history of coercing women into having sex. Want to share that with the jury now?\"\n\nRobinson looked at Knight, who was staring straight ahead.\n\n\"There were videos on the victim's computer,\" Robinson said. \"They were very . . . uh . . . graphic. And they depicted some, well, uh, encounters that appeared to be less than mutually agreeable.\"\n\nRebecca flashed him a look of sarcasm. \"Do you really want me to start showing these videos, or would you like a shot at describing 'encounters that appeared to be less than mutually agreeable?'\"\n\nRobinson flushed. \"He seemed to be extorting sex from quite a few of the women.\"\n\n\"How many videos were there?\"\n\n\"Couple of hundred.\"\n\nThe murmuring in the gallery rose, and Robinson heard an audible gasp from the jury box.\n\n\"How many different women?\"\n\n\"Twenty-three.\"\n\n\"And how many of them appeared to depict such coerced sexual relations?\"\n\n\"The majority of them.\"\n\nRebecca looked at the jurors, going from face to face, as she spoke next. \"The majority? You want to try putting a percentage on it?\"\n\nRobinson looked at the jury, and all eyes were glued on him, waiting for the answer. He looked at Knight, who looked straight ahead. Oh well, he sure as hell wasn't risking his career for this farce. He'd never wanted the charges pressed in the first place, and now Knight was tossing him to the wolves.\n\nRobinson turned from Knight to Rebecca. \"I'll do better than put a percentage on it. Of the twenty-three women, only three appeared consensual. One of those wasn't initially consensual, but it was clearly consensual by the third meeting.\"\n\n\"And the others?\"\n\nRobinson turned to the jury. \"If I'd had these videos, and if Mr. Broussard were still alive, I'd be pressing charges against him for well over a hundred and fifty counts of aggravated criminal sexual assault.\"\n\nMost of the jurors stared back at him in shock, and the courtroom erupted in pandemonium.\n\n\"Quiet,\" the bailiff was yelling. Robinson saw that Judge Feldman was only shaking his head. The defendant still appeared nervous, though.\n\nThat's curious, Robinson thought. She wasn't on any of the videos. Maybe the night of the murder\u2013if he could even call it that anymore\u2013was her first encounter. And maybe she'd been the first, and only, one to ever resist Broussard's advances fully.\n\nWhen the courtroom quieted back down, Rebecca smiled at Robinson. \"Detective,\" she said, leaning back against the jury box and placing her arms on the rail behind her, \"did you interview any of these twenty-three women?\"\n\nRobinson nodded. \"All of them.\"\n\n\"Did they all have alibis for the evening of September twenty-third?\"\n\n\"No.\"\n\n\"Did any of them, either the women or their spouses or someone else close to them, own dark BMW 325s?\"\n\n\"Yes,\" Robinson said. Here it was, the biggest chink in the armor. And he had no clue how she knew this. Judging from the smile on her face, though, it was evident she knew everything.\n\n\"Did any of those with no alibi, or weak alibis, for that matter, own a dark BMW 325?\"\n\nRobinson looked at the defendant. Behind her, he watched Benjamin Bradford cross his arms and sit back. He knows the answer, Robinson realized. He's playing this, playing us, and has been all along.\n\nRobinson looked back at Rebecca. \"Of the two women who owned dark BMW 325s, neither had a solid alibi for the night of the murder.\"\n\nAs the noise in the courtroom again rose, Robinson saw most of the jury now openly smirking at him and at Knight. We're done, he thought.\n\nOn her way back to counsel table, Rebecca stopped, standing very still while waiting for the crowd to quiet down. Robinson watched as the courtroom went dead silent and every eye in the room locked on the dark, intense defense counsel.\n\nShe turned slowly and looked straight at Judge Feldman, her eyes never leaving his as she asked the next question.\n\n\"Detective,\" she said, her voice loud and clear, \"you have been a police officer for twenty-one years, correct?\"\n\n\"Yes,\" he conceded, hoping this was not going where he thought it was going. Still, he'd testified thousands of times, and he recognized impeachment when he heard it.",
        "\"And during that time, you have received extensive training in cataloguing the process of your investigation, correct?\"\n\n\"Yes,\" Robinson croaked, seeing Knight drop his head to counsel table and bury his face in his arms. Looking back at Rebecca, he noticed she was still looking straight at Judge Feldman, a smile now beginning to curve her lips as her voice got louder.\n\n\"And part of that process is preparing and filing police reports of each and every interview you conduct during the course of the investigation, correct?\"\n\nRobinson hesitated. They were dead.\n\n\"Correct?\" Rebecca repeated.\n\n\"Correct,\" he agreed.\n\n\"And you prepared police reports of each and every interview with each and every one of these twenty-three women, correct?\"\n\nRobinson looked around. All eyes were now on him, including an obviously very angry Judge Feldman's piercing stare.\n\n\"Correct,\" Robinson said.\n\n\"Then can you explain why none of these police reports were ever turned over to the defense or listed on any of the discovery documents provided to the defense?\"\n\nRobinson's answer was drowned out by the new uproar in the courtroom, and Robinson hung his head.\n\n\"Counsel,\" Judge Feldman roared. \"Chambers, now.\"\n\nCHAPTER TWENTY-SEVEN\n\n\"So what happened in chambers?\" Ben asked her, his feet kicked up on her coffee table and a glass of wine in his hand.\n\n\"It's going to be over first thing tomorrow is what happened,\" Rebecca replied. \"Feldman went nuts, and he's going to be spending the entire evening researching and writing his mistrial statement. He's not going to get this wrong and run the risk of it coming back to bite him in the ass. He's going to make sure Knight's ruined over this.\"\n\nBen laughed. \"Arrogant prick,\" he said. \"Serves him right.\"\n\nRebecca smiled.\n\n\"Penny for your thoughts,\" Ben said, sipping the wine and looking at her curled in the chair opposite.\n\n\"I'm still worried about how this is going to play out tomorrow,\" she said. \"You know, after the trial's over. Is it going to go down like we're planning? Is there going to be another sudden turn of events to deal with?\"\n\nBen smiled. \"Don't worry,\" he said. \"It's going to play out perfectly. Now come over here and give me a kiss.\"\n\nShe did, and it was getting easier every time they touched. Gone was the hesitation, the fear of contact. Though she was still tentative at first, she soon relaxed as their tongues explored each other's mouths and his hands brushed lightly over her stiffening nipples.\n\nMy God, she thought, it's taken nine years since that terrible night. What if she'd been more patient the first time and hadn't thrown him out? Would they have stayed together and had children of their own?\n\nStill, she was getting a second chance here\u2013that they were getting a second chance\u2013and she vowed not to mess it up this time.\n\nCHAPTER TWENTY-EIGHT\n\nJennifer stood as the jury filed into the courtroom and took their seats in the jury box. Judge Feldman, she noticed, had a severe look on his face, and he glared several times at Knight. This had to be good, she knew, but Rebecca was playing it close to the vest. She had moved for a mistrial, Rebecca had told her yesterday before Jennifer had been returned to the cell she'd lived in the past five and a half months.\n\nJennifer had spent the night in her cell praying. Praying that the motion for mistrial would be granted; that this long ordeal would finally be over; and, most of all, that she'd be able to again hold and hug her beautiful little girls that she hadn't seen all this time. She and Ben had agreed at the outset that they didn't want the girls to see her like this, and Ben promised he'd tell them that she was out of town on business for a long time, but would soon return. Both Ben and Rebecca had shared pictures of the girls during that time, but the aching in her heart only grew with every passing day.\n\n\"Ladies and gentlemen,\" Judge Feldman intoned, quieting the courtroom murmur, \"in light of yesterday's testimony, defense counsel made a motion for mistrial in chambers. The Court has heard the arguments of both the defense and the prosecution, both for and against defense counsel's motion. Before the Court rules on the motion, it would like to make the following findings.\"\n\nFeldman shuffled through the papers before him, read a page, then began speaking, looking throughout the courtroom as he did so.\n\n\"First, the defense has, from the outset of this action, given notice of its intent to raise the affirmative defense of justification to the charge of murder. That justification is premised on self defense to a sexual assault.\"\n\n\"Second,\" Feldman continued after glancing at his notes, \"under the Due Process Clause as enunciated in the Fifth Amendment of the United States Constitution, the prosecution is obligated to turn over to the defense, in a timely manner, all evidence in the prosecution's possession that either is, or can reasonably be construed as, exculpatory to the defendant's guilt.\"\n\n\"Third,\" Feldman continued, his voice now rising as he pushed his notes aside, \"the prosecution has, in this case, intentionally and with flagrant disregard of the Constitution and the defendant's rights thereunder, withheld key evidence from the defense. That evidence so intentionally withheld includes videotapes that show the victim had a long history of possible sexual assault as well as police reports of interviews with numerous other persons who all had motive and possible means to commit the offense charged. Worse, the prosecution intentionally engaged in a pattern of conduct designed to insure the defense would know absolutely nothing about the existence of any such persons altogether.\"\n\n\"Fourth, there is now great doubt in the Court's mind that any of the evidence thus far adduced\u2013and granted, the prosecution has not yet concluded its case in chief, but I can't see it getting better\u2013that any of the evidence thus far adduced in trial points solely to the defendant as the perpetrator of this crime. To the contrary, we now have at least two other possible suspects, the identity of whom was not disclosed to the defense until Detective Robinson testified yesterday at trial. As a matter of fact, and I want to make this clear, were it not for the truthful testimony of Detective Robinson under less than ideal circumstances, none of this would ever have come to light. For this, Detective Robinson is to be commended.\"\n\nJudge Feldman gave a nod to Detective Robinson, who was sitting next to Knight at the prosecution's table. Then Jennifer watched as Judge Feldman's gaze swivelled and rested on hers. Without conscious thought, she felt her chest constrict as she held her breath.\n\n\"In all of my years on the bench,\" he said, his gaze unwavering and his facial features softening, \"I have never witnessed such gross prosecutorial misconduct. Any evidence presented that may point to the defendant being the vehicle of Mr. Broussard's death\u2013and it's highly unclear whether she was, in fact, the person responsible for that death\u2013but any such evidence points more so to the likelihood that the defense she raised is valid.\"\n\nFeldman's face now hardened as he turned to Knight. \"Given the level of prosecutorial misconduct and the severe prejudice thus inflicted on the defendant's rights after the commencement of this trial, this Court has no alternative but to grant defense counsel's motion for a mistrial.\" The courtroom erupted, but was just as quickly silenced when Judge Feldman slapped his palm on his bench. \"Such mistrial being predicated on prosecutorial misconduct after the jury has been sworn in, the charges are furthermore dismissed with prejudice.\"\n\nThis time, no amount of shouting from the bailiff would quiet the courtroom. Jennifer watched Judge Feldman scribble his signature to an Order form and hand it to the clerk before leaving the bench. She turned and watched Knight slam his briefcase shut and storm from the courtroom, ignoring the questions being shouted at him by a dozen or more reporters..\n\n\"What does this mean?\" Jennifer asked Rebecca, who was leaning back in the chair beside her, rubbing her face as the intense energy visibly left her petite frame.\n\n\"It means you're free,\" Rebecca said. \"It's all over.\"\n\nJennifer felt the hot tears sliding down her cheeks as the empty pit in her stomach was filled with hope. She turned and looked at Ben, who smiled at her. She could only smile back, not trusting her voice to speak.\n\n\"Miss Bradford,\" the bailiff said, gently placing his hand on her shoulder. She turned, and he continued, \"Could you come with me, please? We're just going to go back and get your things now and we'll have you out of here in no time, okay?\"\n\nShe nodded, then turned back to Ben. \"We'll wait for you,\" he said.\n\nWhen Jennifer stood and followed the bailiff, she looked back at Ben, who was now hugging Rebecca. Rebecca, she noticed, was hugging him back just as fiercely. Strange, Jennifer thought. He didn't hug me.\n\nCHAPTER TWENTY-NINE\n\nOutside the courthouse, Detective Bradford waited near the throng of reporters for Benjamin Bradford to appear. When the door swung open, Ben was leading Rebecca toward the microphones, standing to the side as she answered all questions put to her.\n\n\"Can I speak with you for a minute?\" Robinson whispered into Ben's ear.\n\nBen turned and smiled at him. \"Why of course, Detective.\"\n\nThey walked unnoticed to a deserted area fifty feet away.\n\n\"You knew all along, didn't you?\" Robinson said without preamble.\n\nBen's smile got bigger. \"Knew what, Detective?\"\n\n\"The videos and the police reports. You've had them all along, haven't you?\"\n\nBen only smiled in response.\n\n\"You played us,\" Robinson insisted, trying to get a response. \"You\u2013and she\u2013knew this would happen, and you played us.\"\n\nA cloud of anger passed over Ben's face, then the smile returned. \"Detective,\" he said, \"assuming what you say is true, how could anyone have possibly known Knight would withhold all of that evidence? That he'd play right into our hands?\"\n\nRobinson shook his head. \"That didn't matter if you had all of that evidence though, did it? No, that just made it faster for you, and helped to bring Knight down in the process. Either way, even if it had all been produced, you had us.\"\n\n\"Then why were the charges pressed in the first place, Detective?\" The look of anger returned to Ben's face, and his voice was now a hiss. \"You knew what a rotten bastard Broussard was, and you still brought these charges and did your level best to convict her. Like the world's a worse place without that . . . that . . . that fucking animal going around destroying all those lives. Oh yeah, who's the bad guy here, Detective?\"\n\nRobinson said nothing. Bradford was right.\n\n\"Assuming we had all of this from day one,\" Bradford continued, \"and I'm not saying we did, but if we did, then yeah, we weren't really all that worried.\"\n\n\"But again, Detective,\" Ben said, spitting out the last word with venom, \"the real question is why? Why did you bring these charges? You of all people knew what a monster Broussard was. Why did you put us through this?\"\n\nRobinson shook his head. \"I didn't,\" he finally said. \"I begged Knight to drop it, but he wouldn't. Said he needed this win, needed it to stay in office.\"\n\n\"That's bullshit,\" Ben said. \"You could have leaked all of this to the press months ago. It would have gone away, and you goddamned well know it. No. Instead, you just played right along with this . . . this . . . this fucking farce so you and Knight could get your backs patted, get your elections won and your promotions approved. Well touche, Detective, I guess it didn't work out quite the way you planned, did it? And if you want someone to blame, start by looking in a fucking mirror.\"\n\nRobinson said nothing to this. What could he say? He just watched Ben storm off toward Rebecca before himself turning and walking back into the courthouse.\n\nCHAPTER THIRTY\n\n\"Where are we going, dear?\" Jennifer said, looking at Ben.\n\n\"We've got to stop by Rebecca's, Jen,\" he said. He was tight lipped, his face a mask, and Jennifer was uneasy.\n\n\"But I want to see my babies,\" she said. \"Ben, please, can't it wait?\"\n\nBen shook his head.\n\n\"Ben, baby, what's wrong?\"\n\nHe shot her a glance, and Jennifer felt a shiver run down her spine. Oh God, she thought, this can't be happening.\n\nShe bit her lip as the car pulled into a parking garage. They were silent riding the elevator to the top floor, where they got off and Jennifer followed Ben down the hallway to a door. He pulled a key and unlocked the door, motioning her inside. Seeing him unlock the door to Rebecca's condo, Jennifer felt like someone had punched her in the stomach.\n\n\"Sit,\" he said, pointing at the dining room table.\n\nShe slid into a chair and watched Ben. He was running wires to and from a laptop computer and an external hard drive. Then he fired up the computer and clicked on some folders. She couldn't see the screen, but she feared the worst. Seeing the videos in the courtroom had paralyzed her with fear, but she thought she was free and clear after hearing the testimony and figuring out that she hadn't been in any of them. Now she wasn't so sure this was all over yet.\n\n\"Here already?\" she heard, and turned to watch Rebecca walk in the door and toss her jacket over a chair.\n\n\"Just getting ready now,\" Ben said.\n\nRebecca smiled and flipped the latches on her briefcase. \"Then we'll need these,\" Rebecca said, pulling a thick manila envelope from the briefcase and setting it on the table in front of Jennifer.\n\n\"What's going on here?\" Jennifer asked, looking at the two of them as they sat at the table.\n\n\"Let me tell you a story,\" Ben started, typing on a couple of keys on the laptop, then clicking the mouse.\n\n\"Once there was a family, and they were very happy. At least the husband thought so. They seemed to have it all. He had a good business that was just starting to take off, and she was rising rapidly through the ranks and getting promoted faster and faster. This couple had two beautiful little girls, and things couldn't have been better.\"\n\nJennifer watched Ben as he spoke, and she saw tears welling up in his eyes.\n\n\"Then one day, at a party,\" he continued, \"I was hired by your boss to audit your computer security. You seemed so excited at that, so happy for both of us. And I was happy, too. I wanted to make you proud, let you see what I really do and how well I do it. So I gave it my all, and in no time, I was in your systems.\"\n\nJennifer felt a tightness in her chest. He'd broken through. She'd tried to monitor him, tried to find out how far along he was, but he'd never tipped his hand. She'd underestimated him, she realized. She'd relied far too much on Jeff Richard's bland assurances that all was well.\n\nBen smiled through the tears now running down his cheeks. \"You only made one mistake, Jennifer, and it was a very small one.\"\n\nShe looked confused while he waited for her to guess.\n\n\"Your only mistake,\" Ben said after seeing she wouldn't answer, \"was at the party when you identified Broussard to me as a prick. And just for shits and grins, I decided that he was the one I was going to break in through. You see, it's those people, the arrogant know-it-alls, that usually make the biggest mistakes. They think they're invincible, and they don't bother to listen to all the peons about little things. Little things like password security and overall systems security. And because you pointed that out to me right off the bat, I was unknowingly pointed in the right direction to uncover the whole sordid scheme.\"\n\nHe slid the laptop in front of her and she looked at the screen. \"First, there was this,\" he said, clicking the mouse and calling up a series of e-mails. \"E-mails between Broussard and Richards. E-mails between a head of systems security and a head of commercial paper that shouldn't be there. They probably didn't talk to each other five times a year, and suddenly we've got them e-mailing each other two, three times a day.\"\n\nBen clicked the mouse again, and a specific e-mail popped onto the screen. \"So that leads me to this,\" he said. \"An e-mail from Broussard to his own home computer.\"\n\nBen clicked again. \"And that led me to this.\" Jennifer looked at the screen and watched as Ben scrolled down the thousands of deposits from Jensen National to the series of offshore accounts.\n\n\"And this,\" Ben said, clicking the mouse again. A folder was called up giving all of the information about each of the offshore accounts, including balances and account passwords.\n\n\"So it was you,\" Jennifer whispered.\n\nBen nodded. \"You didn't think I was that bright, did you?\"\n\nShe said nothing, amazed he'd uncovered the whole scheme so quickly. He was right, she'd clearly underestimated her own husband. Then again, she had no idea what he really did or how he did it. Instead, she'd relied on Richards to foil any attempted intrusions.\n\n\"The problem was,\" Ben continued, \"I knew there were three of you, but I could only identify Richards and Broussard. Frankly, I figured for Susan Flowers as the third. The third was clearly a female, and just as clearly worked in auditing. I remembered you saying that she and Broussard had a thing going, and I was sure as hell positive that she was the one.\"\n\nBen clicked the mouse and a list of folders appeared, all women's names with numbers behind them. \"Then I ran across this,\" he said. He clicked on one marked Susan 9, and a video appeared and started playing. \"This confirmed my suspicions,\" Ben said, turning to the screen. Susan was enthusiastically riding Broussard's cock, in the throes of orgasm.\n\n\"But there are none of me on there,\" Jennifer said, scanning the list of videos. \"So what's this all about?\"\n\nBen smiled. \"No, Jennifer, there are none of you on here.\" He scrolled the screen with the mouse, running up and down the hundreds of video files. \"This is what the police have had since day one.\"\n\n\"Then you know I'm innocent,\" Jennifer pleaded. \"Please, Ben, I don't understand what's going on.\"\n\nBen's look of sorrow vanished, and she watched as pain and anger contorted his features.\n\n\"Jennifer,\" he said, his voice hoarse, \"this is what the police had because I took these out.\"\n\nHe clicked the mouse and six video files appeared. They were labeled Jennifer 1 through 5, and the last one was labeled The Murder. Jennifer shivered at the last one.\n\nBen scrolled the arrow to Jennifer 5 and double-clicked. \"This is the video that changed my life,\" he said. She watched the screen. There she was, naked and in front of Broussard, detailing the scheme to take millions, to seduce Jeff Richards, to make her dreams of wealth finally come true.\n\n\"You did it all for the money, didn't you?\" he asked.\n\nShe nodded, watching the screen.\n\n\"No matter what it took, you just wanted the money. Fuck me, fuck our marriage.\" His voice cracked as she turned to him. \"To hell with our little girls, right?\"\n\nShe gasped at the last. \"No, Ben, it was because of them that I did it. So they'd never have to want for anything. So they'd not go to school in hand-me-downs like I did, with cheap haircuts and not enough money for a homecoming dress. So they'd never have to worry about living in a trailer house.\" She felt the tears streaming down her face. \"No, you're wrong there,\" she said, \"they were why I did it. And every time I did something I didn't want to do, I thought of them and how they'd never have to grow up like I did. Ashamed of myself and my family, the butt of everyone's jokes at every dance and football game and class and everything.\"\n\nBen's face was now awash in tears, and Jennifer looked at Rebecca. She thought Rebecca looked sympathetic, but she couldn't tell if it was for her or for Ben.\n\n\"You slept with more, didn't you?\" Ben accused.\n\nShe nodded her head.",
        "\"That's how you got promoted so quickly, isn't it?\"\n\n\"It started with Susan,\" Jennifer whispered. \"We were working late one night, and she came back to the office from dinner. She'd had a little too much to drink, and she called me into her office. When I got there, she had me go over some figures with her. She started stroking my arm, then my cheek, then my ass. I knew what she wanted. Hell, it was common knowledge around the office that she swung both ways. And everyone knew that her playthings got . . . perks.\"\n\n\"So you became her plaything,\" Ben said, his voice going flat.\n\nJennifer nodded. \"About two years ago.\" She saw the disgust wash over Ben's face. \"But Ben, don't you see, I was promoted shortly thereafter. The youngest junior vice president in the department.\"\n\n\"Who else?\"\n\nJennifer bit her lip. \"She introduced me to Alain,\" Jennifer said.\n\nBen double clicked on Jennifer 1, and the video popped up and started running. He scrolled forward to the middle of the video. \"So that explains this, doesn't it?\" Ben said. Jennifer watched the screen as she lapped at Susan's pussy, moaning with hunger while Broussard pushed into her ass from behind.\n\nJennifer felt her cheeks flush with humiliation, feeling both Ben and Rebecca's eyes burn into her.\n\n\"What could he do for you, Jennifer?\"\n\nShe said nothing.\n\n\"You needed him to steal the money, didn't you?\" Ben accused. \"You knew all along where this was going, and you needed someone with access to overseas transfers to get it done, right?\" She nodded, and he continued. \"And you knew that you could set up Susan Flowers as the fall girl if it ever came to light, didn't you?\" She nodded again.\n\n\"So who else besides Susan Flowers and Alain Broussard?\" Ben said. \"Judging by your conversation in the first video, you probably fucked Jeff Richards, too, didn't you?\"\n\nJennifer bit her lip. He couldn't prove that, she figured. Their meetings had been limited to the office, in a car, or in Richards's apartment.\n\nWhen she said nothing, Ben clicked the mouse yet again. This time, Jennifer recognized her home e-mail account. \"My dearest Jen,\" the e-mail read, \"I am so sorry about yesterday. You were right, I've never done that before, and I was too excited to go as slowly as you begged me to. I hope you're all right, and I hope this won't affect our relationship. JR\"\n\n\"That was the night you said you hurt your tail bone, wasn't it?\" Ben snarled.\n\nWhen Jennifer said nothing, Ben clicked on her response to Richards. \"Dear Jeff, Don't worry, sweetie. My poor little ass just isn't used to such big tools. But practice makes perfect, and I look forward to practicing with you forever and ever. Love, J.\"\n\n\"Did I ever mean anything to you, Jennifer?\" Ben asked.\n\nShe looked at him, the tears now dry and a look of sadness masking his face.\n\n\"You were my whole life,\" she whispered. \"Don't you see, I didn't mean that to him. It's you I want to be with forever and ever. I was only using him to get the money we need.\"\n\nBen shook his head. \"No, Jennifer,\" he whipped back, \"we didn't need the money. We had plenty of money. Jesus Christ, you drive a fucking BMW, and we can afford a full-time nanny. So no, we didn't need the money.\"\n\n\"You say you did this for the girls,\" Rebecca spoke, her voice soft. Jennifer turned, surprised at her interruption. \"But all that time you were . . . with all of these people, you weren't at home with your little girls.\"\n\n\"And all of those nights you were out late fucking all of them,\" Ben said, picking up the thread, \"I was at home with the girls, playing with them, reading to them, feeding them, and putting them to bed.\"\n\nJennifer said nothing, just staring back and forth between Ben and Rebecca.\n\n\"You're fucking him, aren't you?\" Jennifer accused Rebecca.\n\nIn response, Ben opened the manila envelope and pulled out a stack of papers. He placed them in front of Jennifer and slid a pen next to them.\n\n\"Sign these,\" he said.\n\nJennifer looked down. Judgment of Dissolution of Marriage, the top document said. She flipped through the stack. Marital Settlement Agreement. Stipulation Regarding Grounds. Appearance and Waiver of Notice. Petition for Dissolution of Marriage.\n\n\"So that's what you want, Ben? You want to be rid of me so you two can go back to fucking each other?\"\n\nShe glared at them, but both of their faces had become impassive, betraying nothing of their thoughts.\n\n\"You,\" she screamed at Rebecca, \"you're my fucking lawyer. You can't do this.\"\n\n\"You'll see,\" Ben said, \"that everything's pretty fair. We sell the house and split it all fifty-fifty, I keep my business in exchange for you keeping your 401(k) and retirement programs. We'll split the furniture and the other accounts. You get to keep your precious BMW.\"\n\nJennifer glared at him. \"And the girls?\"\n\n\"They'll stay with me,\" Ben said. Then he leaned forward and his face got hard. \"The agreement says you get visitation, Jennifer. Reasonable visitation, too.\" She saw his eyes turn to ice and flinched at the hatred in his voice. \"But you'll never exercise that visitation, do you understand?\"\n\nJennifer gasped. \"You can't\u2013\"\n\n\"Oh yes I can,\" Ben said. \"You're dead. None of us is ever going to see you again, especially not the girls. Got it?\"\n\nWith that, Ben double-clicked for the last time. She turned to the laptop, tears streaming down her face as the video started playing. Broussard was behind his desk, stroking his cock as he watched the screen. She watched with horror as she entered Broussard's den in a fury, a knife in her hand. Broussard flew from his chair and punched her in the face, and she kept coming, scratching at his exposed neck and penis. \"Where's the money, you fucking bastard?\" she kept asking as he flailed at her. Then she watched as she stuck the knife into his chest and twisted, still screaming at him to tell her where the money was.\n\n\"You didn't think I'd let a murderess near my girls, did you?\" Ben said. \"Face it, Jennifer, I'm holding all the cards here. If you make a fuss of any kind, this video, and your whole sordid scheme, comes to light. And you'll go to prison for the rest of your pathetic excuse for a life.\"\n\nJennifer felt herself go cold all over. \"They can't charge me again,\" she said. \"You heard the judge. Case dismissed with prejudice. That means double jeopardy applies, and they can't try me again.\"\n\n\"That's not quite accurate,\" Rebecca said. \"You're right: The State of Illinois cannot again charge you with Alain Broussard's murder. However, the Federal Government can still charge you.\"\n\nJennifer's mouth shot open.\n\n\"That's right,\" Rebecca continued. \"Double jeopardy only prevents you from being charged in the same court\u2013in this case, the courts of the State of Illinois\u2013for the same offense. You can still be tried for all of the Federal crimes, though, so long as the charges are brought in Federal court.\"\n\nJennifer was speechless. This couldn't be right.\n\n\"Remember Rodney King?\" Rebecca asked. Jennifer nodded. \"Remember all those cops were acquitted in California court and all the rioting that ensued? Then, remember two years later when most of the same cops were convicted and sent to prison in Federal cases?\"\n\nJennifer didn't really remember, but she didn't doubt that Rebecca was telling the truth.\n\n\"You see,\" Rebecca said, \"you violated the RICO statute. Because there was three of you, it was a conspiracy. And every time money was transferred out of Jensen National Bank and into your own accounts, it was wire fraud. All those transfers constitute a pattern of criminal conduct, which is exactly what RICO is aimed at. And when you murdered Broussard to get at the money, you committed a murder in furtherance of the criminal conspiracy. And guess what, there's no statute of limitations for murder, Jennifer.\"\n\n\"That's right,\" Ben said, and she turned to look at him. \"So don't think about doing anything other than disappearing forever.\"\n\nHe leaned forward and glared at her. \"Copies of all of this, as well as a time line of the whole sorry affair, are in a very safe place. And if anything\u2013and I mean anything\u2013happens to me or to Rebecca, this all goes straight to the Federal prosecutors. So you'd better pray that I live a very long, healthy life, and that Rebecca does the same. Because if you try anything, or even if either of us is the victim of an innocent accident, they're going to come after you. Do you understand?\"\n\nJennifer was beat, and she knew it. Sure, she'd look all of this up, but it was clear now that they'd orchestrated the whole thing from the very beginning and had planned for every contingency.\n\nThen she was confused. \"Buy why?\"\n\nBen looked at her with contempt. \"You killed a man, slept with half your co-workers, and you need to ask why?\"\n\nJennifer shook her head. \"No,\" she said, \"why didn't you just let all of this come out at the trial? Why are you letting me go? Is it the money? You're taking the money?\"\n\n\"Well, we'll admit you surprised us with your reaction; caught us flatfooted,\" Rebecca said. \"We just thought this would make the three of you start scurrying for cover, trying to uncover what was going on. But no, you had to go and kill him. We didn't really see that coming. We really had to think quickly on this one.\"\n\n\"But think quickly we did,\" Ben laughed. \"And it really works out better than if we'd have just let you dangle in the wind before turning all of you in.\"\n\nBen leaned forward and spoke, venom in his voice. \"First, we're not just letting you go.\"\n\n\"Oh no,\" Rebecca chimed in. \"You get to spend the rest of your life without your girls, without ever again holding them or hugging them or tucking them in. Instead, you'll be looking over your shoulder for the rest of your life, wondering if today's the day you get to go to jail for the rest of your life.\"\n\n\"And second,\" Ben said, \"we're giving the money back. Don't you see? You know I'd never keep the money. But if this had all come out in a trial, old man Jensen would never have thought we weren't in on it together. No matter what I gave him, he'd always have doubts, always think I knew what you were doing. Now, though, we're going to give it back and we're going to lay it all at Broussard's doorstep.\"\n\n\"The trial made him out to be such a slime,\" Rebecca said. \"No one will have any doubt he was capable of this.\"\n\n\"And I'm going to make it clear in my report just how sloppy Richards has been,\" Ben said. \"He'll lose his job and never get another. That should just about break him for good. Between losing his job and losing you\u2013I doubt you're going back to him\u2013he'll be broke in no time and at the end of his rope. And Susan Flowers will probably go down, too, seeing as her accounting department missed all of this for months.\"\n\n\"And Ben gets to be the hero,\" Rebecca said, rubbing Ben's forearm and looking at him. \"I'm the brilliant attorney who uncovered the shady prosecutor and freed an innocent woman, and Ben's the hero who uncovers the six million dollar heist and returns every dime.\"\n\n\"That's right,\" Ben said, smiling at Rebecca. \"Jensen will put me on permanent retainer, recommend me all over the world, and my business will explode. Hell, we'll be rich, won't we dear?\"\n\nRebecca nodded, leaning over and kissing him on the lips.\n\n\"Think about it, Jennifer,\" Ben said. \"We'll have it all: Love, wealth, and two beautiful little girls.\"\n\nJennifer watched as he raised his eyebrows at her.\n\nThe look said it all: She'd have nothing.\n\nAbsolutely nothing.\n\nShe watched her tear fall on the papers before her as she reached for the pen to sign away the dream that had once been her life.\n\nFinis"
    ],
    "authorname": "Rehnquist",
    "tags": [
        "adultery",
        "oral",
        "anal",
        "coercion",
        "mystery"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/a-case-of-self-defense"
}