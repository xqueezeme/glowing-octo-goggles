{
    "title": "Stolen Birthright Ch. 65-72",
    "pages": [
        "I was shaking with fear; my mind was running through the possibilities and all of them sucked.\n\nI was having a hard time coming up with one that didn't end in my death, the death of my family, even my Pack. The Cartel was known for its brutal methods, they wouldn't stop at just me. They would kill everyone I loved in front of me first. Then there was the CIA, which apparently didn't need my services again, plus the whole US Government which still had shoot on sight orders out for us.\n\nCraig climbed onto the bed with me, pulling me into his arms as I started to cry on his chest. He was fisting his hands and fighting off a shift; his wolf was panicking, which didn't help my cat at all. He buried his nose in my hair, sniffing deeply to calm down. When he had pushed his wolf back, he looked up at Al again. \"What can we do?\"\n\nHe closed his eyes, no one spoke for a couple of minutes. Finally, Al looked up again. \"She needs to die, in a very public fashion.\"\n\nIf I wasn't holding him down, there was no doubt Craig would have attacked him. I nuzzled his neck to calm him down, I knew he wouldn't say that and leave it. \"What are you thinking,\" I said.\n\n\"If we do nothing, the Cartel eventually finds out about her. They will come here and try to kill her, and it will be a bloodbath. Our entire Pack will die to protect you, Ella, and if we shift to do so it endangers us all. We can't wait for them, we have to give them a chance to kill you themselves, but at a time and place of our choosing.\" Craig was glaring at him, probably counting the ways he could kill him. \"Then we fake your death in a way they can't refute. Once you are dead, then the real fun begins.\"\n\n\"What do you mean?\"\n\n\"Well, you aren't going to like it, but here's my idea.\" \n\nThree days later, the modifications to my fishing boat were in place and Craig was ready. I was in my bikini with a light cover, driving towards the northeast corner of the island. The coordinates were fed into the navigation system so the autopilot could handle things. It was late afternoon, and this morning a call had been placed by one of our employees to the Cartel hotline. He told them he had seen her, she was fishing in the area and gave them my current location and the name of my fishing boat. We were just waiting for them to arrive.\n\nMichael Campbell and Josh were about thirty miles east of me, keeping an eye to the sky and the waters so I could get some warning. The Cartel didn't mess around; I got a call, there was a helicopter on the way, and there were armed men in it. I pushed the throttles up and got the boat to maximum speed; we had picked my loiter location so I could get to the waypoint in a short time for an aircraft, a longer time for a boat. I went down below, making sure everything was set and I grabbed my M-4 rifle. Unlike the civilian semiautomatic version, down here on the black market we could buy the good stuff.\n\nI moved to the front of the center island as the twenty-four-foot boat crashed through the swell. I could see the white and blue helicopter rapidly approaching, and the two men leaning out the doors. They were attached with harnesses inside the helicopter, while their feet rested on the skids. They were carrying shorter firearms, probably HK sub-machine guns. I rested the stock on the windshield and tried to keep my legs loose as the boat bounced. Once they got to within 200 yards, I opened up.\n\nThey did too, a strafing run that sprayed bullets near me but did not hit me. It was just as tough to fire accurately from a helicopter, and as they passed over I had a feeling neither of us did any damage. I ran to the helm to put the center console between us. Sneaking a look at the GPS, I could see we were getting close.\n\nI swapped to a full magazine and slid the bolt home. The helicopter was racing back, and I opened up again, this time aiming a little higher. They two men opened up on me, and as we were trading rounds the boat drove over the waypoint and the charges blew.\n\nAl had warned me this would hurt, and he was right. The low power charge on the plate under my feet went first, launching me up and back just before the main charges blew. \n\nAl had put extra gasoline in containers below, so when the shaped charges went the fireball was impressive. That was my thought as I tumbled backwards through the air. I took a deep breath just before I hit the water, leaving the pyrotechnics behind.\n\nI shook my head as I went underwater, clearing my head. I swam down, needing to get to the bottom which was thirty feet below in this area. I had almost made it down when Craig pulled me to him, placing the scuba breather in my mouth. Together we went down to the bottom, where he helped me put on a mask and fins.\n\nHe took the triple air tank from the bottom and helped put it on me, adjusting the straps. Once I was ready, Craig released the short tether that the freshly killed wild boar was attached to, plunging his knife into it a few times. The blood floated up along with it until the tether stopped about ten feet below the water. I could see the blacktip sharks already moving in, and bigger ones were sure to come.\n\nWe powered up the diver propulsion vehicle and let it pull us away from the burning and disintegrating boat above us. I could hear the helicopter circling around, but the light was low enough they couldn't see us down here. No one could hold their breath that long, and as I took a last look, I could see the sharks tearing the pig apart. We set a course of 020 and settled in, conserving our air and energy as we crossed the four miles of open water at a comfortable depth.\n\nIt took two hours until we reached the reef at Isla Bayoneta, a smaller, uninhabited island across the channel from our home. We shut down the propulsion vehicle and put the tanks and gear with it, Craig would come back later when things calmed down to get it back. We waited until the helicopter was out of sight before we swam to the shore and climbed onto the quiet beach.\n\n\"I hate this part of the plan,\" I said as I sat there. \"I don't want to be isolated from you.\"\n\nHe pulled me into his lap and scented my neck before nuzzling at his mating bite. \"I don't either, but it's the only way to be safe. No one can see you, ever, and you can't be anywhere near us.\" He put his hands on my belly, listening to the heartbeat of our child. \"Until we know who burned us and we can figure out a way to bring you out safely, you have to remain here. Safe.\"\n\n\"In panther form?\"\n\n\"Yes... we can't risk building anything here, and no one can ever see you. Fishermen and explorers sometimes come her overnight. We can't have tracks, sightings or communications.\" \n\nI leaned back into him, trying to memorize my last feel of him for Luna knows how long. \"At least there is the mind link this time.\" The island was in visual range, and easily within range of the Pack bond. They could still talk to me, I could still talk to my mate and my boys and my people, unlike the isolation at Fort Detrick.\n\n\"I or one of the Pack members will stop in once in a while, pretending to be exploring or having a picnic. We will leave behind water and food if you need It, although these islands are overrun with boars too.\" I snickered at this, we had made a serious dent in the population of our island. \"Now off with the bikini, I have to take everything.\"\n\n\"You just want to see me naked,\" I said as I stood up and gave him a sultry look.\n\n\"Yes,\" he smirked, \"and I have something before you before I go.\" He stood up, dropping his swimsuit behind on the sand as he went. I licked my lips as I looked over his body, he was getting hotter with every year, while I was getting fatter and rounded with the baby. I could see from his physical reaction that he found me attractive still, as if the feelings over the bond weren't enough.\n\nMy cat wanted to play, and I let her take charge. She quickly shifted and bolted for the trees, her tail high with her arousal evident. Craig shifted and took off after me. I darted between the trees; I was agile, but I couldn't match his speed. It didn't take long before he pushed me to the ground, his teeth holding my neck.\n\nI stilled under him, raising my head in submission to him. He kept the grip as his back legs pushed forward; eager to take him, I raised my hips and moved my tail out of the way. His bright red tip poked around until he found my slit, then with a strong push he drove home. I roared in pleasure as he growled for me to stay in place.\n\nOnce he was fully seated, he backed out and started to pound into me with a vengeance. I could feel his knot forming, and before it got too big he pushed it home. It was uncomfortable at first, but once it was seated it felt amazing. We were too excited, too frantic to make it last long and our animal sides didn't care. He went faster and faster until I broke over him, shuddering in pleasure and causing him to blast my insides with his sticky essence.\n\nI was tied to him, so he settled down next to me. Over the course of the night, we made love again and again, until it was time for him to go. Al and Josh had arranged to pick him and the gear up just before sunrise, so they could be out of there before the Cartel or the Panamanian Navy arrived at the attack site.\n\nI watched as he shifted into human form again, putting his trunks back on. Josh waded ashore with some jugs of water and hid them behind the trees. Together, they waded into the surf as my cat draped herself over a tree branch. They brought up the scuba gear and loaded it up, then with one final wave they turned and sped away.\n\nI was alone.\n\nThe plan had gone off without a hitch. Our Pack had a member who was on a beach at the nearest part of the island, and he had a camera with a telephoto lens and video. He recorded the entire attack and the aftermath, all the way to when the helicopter left again. Josh leaked it to a local news station, and pretty soon it was all over the networks and world news. Black Ker, the notorious thief and assassin, the fresh-faced North Dakota ranch girl who became the world's most wanted criminal, was dead. Killed by Cartel gunmen off the islands in Panama.\n\nI wished I could see it, the way he described the explosion it sounded amazing. The fireball, the debris, and you could clearly see me being blown out the back of the boat. \n\nThe helicopter hovered overhead for thirty minutes, and no one ever came up. Within ten, you could see the sharks in their feeding frenzy. No one doubted that I had met a grisly end.\n\nMy life became a routine; I would sleep during the day in a tall tree, the breeze helping to keep me cool. I would come down in the early evening and get water, there were some pools of rainwater in season to drink from. If I was hungry, I would hunt; I only had to do this every four or five days, since I would gorge myself on the pigs. The meat wouldn't keep in the heat, so I would eat my fill and abandon the rest.\n\nAs the months pushed on, I had more and more trouble moving as my belly got bigger with the baby. I was surprised when the labor began; at first I dismissed it, not having any experience with labor in panther form. I figured it out and told Craig, but he would be an hour or so to get here. \n\nHe didn't make it.\n\nIf I had a choice, I'd take cat form any time. Twenty minutes later, I was biting through the cord and expelling the placenta, which my cat decided would be a tasty post-partum snack. I licked my daughter clean as she lay in the grass; she was beautiful, and I could smell the Alpha Wolf on her.\n\nCh 66\n\nI was trying to find a position where I could get my daughter to suckle from my breast in cat form when Craig arrived, out of breath. \"Oh my, Ella... She's beautiful!\" He sat next to me and picked her up, cleaning her with the towel he had over his shoulder. I got up and moved until my head was in his lap, purring deeply as I watched him bond with his girl. \n\n\"I'm sorry, it went so fast in this form and I couldn't stop pushing,\" I said over the mate bond. \n\n\"I thought she would be born in panther form since you are in that form,\" he said. \"Didn't you say the young stay with the mothers in the wild for their first years?\"\n\n\"Yes but she's wolf; I think because I was pregnant before I was changed, she didn't get the panther. Or maybe the wolf part is dominant, I don't know. It doesn't matter, she's Alpha wolf, I could smell that already.\" Since he already had two adopted sons of Alpha blood, I was happy he had a daughter to spoil now too. \"I'm just mad that since she isn't a panther, I have to let you take her back home. She can't even hold her head up to feed from me, and she won't survive the elements out here.\"\n\n\"I'm so sorry it had to be this way, Ella. The boys miss you too, even though they can talk to you they cry at night sometimes because you aren't there to tuck them in.\" Our baby started to cry, and my nipples started leaking milk. I rolled onto my back and Craig tried to get her to latch on, but with the fur and the smaller nipple size it wasn't working.\n\n\"Screw this,\" I said. He picked her up and held her while I focused on being human again. Bones rearranged and shifted, fur retreated and in moments I was back in human form for the first time in months. I moved to the edge of the grass where I could lean against a tree. \"Give her to me,\" I said. He did, and I placed her to my breast, holding the nipple into her mouth until she latched on and started to pull. We both watched as she ate her first meal, I never tired of the feeling of providing food for my babies.\n\nWhen she tired, I burped her on my shoulder then switched sides. She ate a little more then fell asleep, so I handed her back to Craig as we sat under the tree. \"What should we do about this?\"\n\nCraig looked out at the ocean visible through a break in the trees, the moonlight illuminated the beach and the channel. Our island was on the horizon. \"I don't know, we put you here for good reason, Ella. I can't risk losing you again.\"\n\n\"It's been months since we faked my death, love. The media coverage has died down, the helicopters and boats aren't showing any more, it seems like everything is back to normal. The Cartel bought it.\" I put my head in my hands. \"I'm tired of missing my family, my Pack. Even my cat is getting tired of being a cat.\"\n\nWe pulled Al and Mark into the conversation over the bond. After explaining the situation, Al summed things up for me. \"We could sneak you back here, Ella, but if we do we have to minimize the risk. Under no circumstances can you be seen outside in human form, EVER. Not with satellites, drones and other surveillance. You can be human inside the house with the shades drawn, and change back to cat form to go anywhere. I don't even want the staff to know about you,\" he said.\n\n\"Fine,\" I said. \"At least I can be with my family again.\"\n\n\"Well, we better pack up your stuff and get ready to go then.\" I looked at him like he'd grown two heads, I'd been living alone here with nothing. \"Oh yeah. Come on, I'll bring her to the boat with me and you can hide under the tarp.\" I shifted and followed him back the trail to the beach; when he called, I ran out and jumped into the boat, hiding under some fishing gear and a tarp in the bow. The moon was still out as he pushed the boat off the sand and fired up the engine. Luckily, my little girl sleeps deep, and didn't even wake up to the noise and the motion around her. \n\n\"You know, we need to think of a name for her,\" I said. \n\n\"I was so convinced it would be a boy, I didn't think much about it. We could name her after someone we lost in the war.\"\n\nI nodded, I was thinking the same way. \"I know the name is old-fashioned, but my mother died protecting me, and her name was Emmanuelle. We called her Emma for short.\"\n\n\"I like it, the old names are making a comeback. She would have loved to help you raise your babies, Ella.\" I was glad the cat form couldn't cry, I was getting a little emotional. \n\n\"How about Alice for a middle name?\"\n\n\"After my oldest cousin's mate?\" Doug and Remi's oldest son, David, was mated to her and she had died in the initial attack with most of the Johnson Pack leadership. \n\n\"Yes, I can't think of a woman other than Olivia on my side that I'd want to name our daughter after.\" I nodded my head. \"All right, we'll announce her to the Pack as Emmanuelle Alice Black. I'll get Al to start working on a birth certificate and passport for her when we get back.\n\nTwo plus years later\n\nMy three babies were curled up with me on my large bed, Craig had gone down earlier to get us breakfast. Emmanuelle was tucked up under my left arm, her warm breath blowing on my shoulder as she twitched in her sleep. Her older brothers, Mitchell and Darryl, were on her right side. Darryl's arm was over my rounded stomach, occasionally moving as the twins moved around inside me. Six months along, and I was huge again. I was exceedingly fertile, apparently.\n\nOnce Emma was weaned, I had my first heat as a panther. It was interesting, I must say- if Craig hadn't been there for it I would have grabbed any male to screw me, the drive to procreate was so strong. Craig and I ran in our animal forms to a remote beach, where he made love to me as often as he could stand. When he couldn't stand, I rode him. Three days of constant sex later, we dragged ourselves back home with me being pregnant again.\n\n\"Breakfast is ready,\" Craig said as he poked his head in. Waking my babies, I watched as he put Emma on his hip and the boys followed him out, smiling as they went. I quickly did my business and dressed, meeting them downstairs where Craig had a plate waiting for me. \"Good morning, love. How are the twins treating you?\"\n\n\"Like my bladder is a speed bag,\" I said. I dug into my breakfast, looking around the table. Mark and Olivia were on the other side, their oldest girls Elanor and Elizabeth to their right, fourteen-month-old Alex in a high chair on the left, and adopted son Tony and daughter Tina on the other side of him. The two of them would be turning ten soon, and were going to be strong cats. After the wolfsbane took their wolves away at the beginning of the war, they asked for and received their panthers when Al bit them last year. I loved their forms, they were matching spotted panthers like Al, but lighter in color, just not as light as Olivia was. There were now five cats on the island, something that would never happen in the wild where the cats are so territorial. It was the wolf influence that allowed it to happen.\n\nThe triplet girls with Tom and Shelley were still human, we wanted them to be older before we changed them since their wolves had caused trouble. Mark's parents had been offered the change, and even the choice of panther or wolf. So far they had refused, preferring to remain human until their girls were changed.\n\nWe were just finishing up when Al told us over the bond to turn the news on. \"BLACK KER ALIVE, STRIKES AGAIN\" was the headline on the news crawl. We watched in fascination as the story went on; Ker had penetrated the security of a museum in Brussels and stole a painting, it was worth millions of dollars on the black market. Her calling card had been left behind, and only a quick glimpse of a woman in all black was caught on security video. A week earlier, a Russian oligarch had been killed in his Black Sea estate. Ker had been blamed there too, but the reports were scoffed at until this proof.\n\nAl walked in as we continued to watch. \"This isn't good, Ella.\" He looked up at the screen. \"This puts you back in the crosshairs as far as I'm concerned. Until Ker is caught, you're in danger.\"\n\nI sighed. \"Well, this sucks. Don't tell me I have to go back to the other island.\" I put my hand over my belly, I didn't want to have these babies alone. \n\nCraig took my hand. \"I think we just need to be more careful. We might see some surveillance looking for you, so I think you need to stay in our rooms. Even being down here in the dining room could be dangerous if they get a look.\"",
        "\"Fine,\" I huffed. \"But I'm still going cat once in a while. She doesn't like being cooped up all the time.\" \n\nOlivia smiled at me. \"We can still go hunting together, Tony and Tina are ready to take down their own hogs if we are there to help.\"\n\n\"I'd like that.\"\n\nTwo weeks later, the four of us were moving silently through the jungle towards our hunting area on the northwest side of the island. I was leading the way with the twins in the middle and Olivia in the back. We weren't after the big wild boars this time, but the dominant ones were still numerous and dangerous.\n\nI froze as a new smell wafted into my nose. The other cats stopped and started to sniff as well. It was human, which was bad enough, but I recognized this one. \"We have an intruder near Seashell Beach. Olivia, take the twins home and be careful. Craig, Al, I'm going after him.\"\n\n\"Ella, stay put, Al and I will be there shortly. You don't need to put yourself in danger.\"\n\n\"I do, Craig. I know this guy.\"\n\nI waited until the other three cats had moved out of sight before I started stalking the intruder. I could hear him moving through the jungle towards me; he was quiet, but not cat quiet. I took a deep smell; I could pick up gun oil, sweat and bug spray along with the unique scent I remembered. I climbed a tree and waited, ten minutes later he was below me.\n\nHe hadn't changed much. He had a camouflage uniform on with a floppy jungle hat and jungle boots. A small backpack could be seen under his ghillie suit, and his M40 rifle and spotting scope were slung alongside. A satellite phone and radio were clipped to his belt. He was outfitted for a stalk and kill, and I was the target. I just couldn't believe the Marines had sent Gunny Rodriguez after me.\n\nI waited until the right moment then pounced. He didn't get any warning before I crashed down on his back, slamming him to the ground as my claws dug into his skin. He tried to roll, but I swatted him with a big paw and knocked him out.\n\nI changed into my human form and started to remove his equipment. I used the strap from the spotting scope to tie his hands behind his back. The satellite phone and radio were immediately smashed against the trees, since they might have GPS in them. I was starting to dig through his backpack when I heard his voice. \"Damn, E, that hurt.\" He struggled against his bonds with no success. \"I'm glad to see you alive, seeing you on a naked walk was still on my bucket list.\"\n\nI laughed. \"Cheater. You didn't even beat me yet.\" I pulled out an olive-green T-shirt out of his backpack and pulled it over my body. \"Besides, who wants to see a pregnant woman naked?\"\n\nIt was his turn to laugh. \"Ella, I'm a Marine. If a woman is naked, I want to see it.\"\n\nI left everything except the rifle. I had missed this, I thought, as my hand moved along the synthetic stock. Pulling him to his feet, I looked in his eyes. \"I wanted to see you again, Gunny, but not like this. Anyone else would be dead already. Now, follow me, we need to talk to some people. I want answers.\"\n\n\"I don't know if I can give you those, Ella.\" He looked at me with sorrow in his eyes. \"I trusted you, I thought you were my friend. If I had known what you really were, I never would have trained you.\" I could feel his eyes on me as I moved silently between the trees, he sounded like an elephant crashing through the jungle compared to me. \n\n\"Damn, Ella, you move like a cat.\"\n\n\"Yeah, I know.\" I kept moving, I could hear my Pack members moving to encircle us as we approached the house. \"Stop.\" I pushed him down to his knees as Al approached behind him, making him jump as he felt a hand on his shoulder.\n\n\"Why are you here, Gunny?\" I could smell his fear as a dozen wolves and panthers approached.\n\n\"To find and kill you, Ella.\"\n\nCh 67\n\nI looked at the Marine, the former friend and instructor who had just told me he was here to kill me, and my jaw dropped. \"Why would you do that? What did I do to deserve a bullet in the chest?\" Snipers always aimed for the chest where the large round would cause fatal damage even if it was six inches off.\n\n\"I volunteered.\" The ring of wolves and panthers started to close in on him as I smelled the blood leaking from the punctures on his shoulder and neck. My cat had clawed him, we didn't have much time if he panicked before he would make a forced turn, and that was no fun to deal with. I resigned myself to thinking I was going to have to kill him. \n\nOne of my Pack members tossed me a pair of shorts and I pulled them on. Craig was starting to growl at my closeness to him, combined with his smell being on me from the shirt. Luckily for Gunny, he was smart enough not to eye rape me in front of my mate.\n\n\"I thought you were my friend, Gunny.\"\n\n\"That's why I volunteered. I know you, Ella; you're dangerous, but you aren't the person they were making you out to be. There had to be an explanation, but if the CIA picked another guy, they would shoot first and ignore questions later. I figured I'd talk to you and find out what really happened.\"\n\nI smiled a little at that. \"So what were you told?\"\n\n\"That you went rogue. There was a job in Mexico and you disappeared; the only way the Cartel would not kill you would be if you were working for them. So a few months ago when word got out that Black Ker was alive and taking jobs, your picture was front and center.\" I started moving him towards home as we talked. \"That was the only photo they had of Black Ker, after it was let out that the CIA sent you to me to train you for the job. You can't believe the shit that came down after you left.\"\n\n\"What do you mean?\"\n\n\"Word got out that your group was really working for the Pacific Cartel. That's what they told me, anyway. I can guess at the rest. Big shots at the CIA would flip out when they were told Al was running a group off the reservation; if the connection was made public, people would go to jail.\" Al's cat growled as he walked behind us. \"The CIA sent a team to take your team out, and that team never came back. Then Jose Hernandez was killed, that pretty much confirmed you guys were rogue, since Jose was an informant with the Drug Enforcement Agency.\"\n\nI took in this information. \"I was sent to you to train to kill Jose. I was told the CIA needed him dead.\" It hit me like a sledgehammer. \"I was never meant to survive, was I? \n\nWhether it was the Cartel or the CIA, they were going to kill me.\"\n\n\"Probably. They needed things cleaned up, that meant Al and Ker had to die.\" He looked over at me. \"You did a good job faking your death, Ella, but without a body there was always doubt. When Ker became active, the Agency decided to find out if you really dead. If not, I was to make it so.\"\n\nWe had made it almost back to the house, and most of the Pack members escorting us ran inside to get changed. \"I'm not Black Ker, Gunny. I know who she is, this job had to be done and she was pregnant and couldn't do it. I owed them for busting me out of Army custody, and this job was the price.\" Craig ran out with a pair of shorts, I pulled them on before leaving the treeline since we still were worried about surveillance. \n\n\"Killing that bastard of a druglord was the first time I killed someone who wasn't trying to kill me or my people. He deserved it; you wouldn't believe the stuff I saw while I was surveilling him.\"\n\n\"Oh, I'd believe it. Those guys are animals.\"\n\n\"So I killed him, and escaped. When I got back to the safe house we were using as a base, it had been attacked. The place looked like a war zone. Ker was gone, Al was damn near killed.\"\n\nAl walked back, wearing khaki shorts and a Panama shirt. \"Would have been dead if she hadn't turned me.\" He stood in front of Gunny, neither man flinching as he stared him down. \"I've been giving a lot of thought to who tried to have me killed.\"\n\nGunny grinned. \"Any ideas?\"\n\n\"Two. Either the CIA was getting rid of us, or Black Ker was getting rid of the CIA. Since she was injured in the attack, I was thinking the former. I know that's part of the answer, they are still after her. How she escaped and what she's doing now, I don't know.\" Al put his hand on Gunny's broad shoulder. \"I don't care, either. All I want is for Ella and I to be left alone, to raise our families in peace and safety. I've grown to love island life.\"\n\n\"I can see that.\" He looked around at the beach and the big hotel-like home. \"Look, Ella... All I wanted to do was to see that it wasn't true, that you weren't what they said. I can see that now. Let me go, I'll report back that there is no sign of you here.\"\n\n\"It's not as simple as that, Gunny.\" I pulled aside his shirt to show the scratches on his neck and shoulder. \"I'm a were-panther, and I scratched you. Luckily, you aren't scared so the change didn't come fast, but it will come. You're going to become like me, like Al, like a few others on this island.\"\n\n\"That doesn't seem like too bad a retirement plan,\" he said. \"You'll help?\"\n\n\"Of course,\" I said. \"You'll be fine.\"\n\nHis fever hit an hour later, and by morning we had a new member of the Pack. His panther was huge, much bigger than Al's or mine. Just like his human form, his cat was heavily muscled. We equipped him with the contacts, and he reported back to his superiors that I was nowhere to be found in Panama's islands. He then turned in his retirement papers and a month later was back on the island with us.\n\nHe fit right in, especially as a hunter. He loved to mix it up with those huge wild boars, and Craig was happy that I was leaving them to him. \n\nNow I just needed to find him a mate.\n\nShe wasn't among our Pack, our population skewed young due to the refugees, plus the mating age women were all mated- and driving our average steadily down as they had their children. I was lying on the floor in front of the couch in cat form, having learned that shifting late in pregnancy was tough- and giving birth as a cat was MUCH easier. I was watching my children play when the teasers started on television. \"Capt. Gary Johnson FOUND SAFE, interview to follow.\" I had Darryl turned the volume up, curious because Derek and Renee's pack was under severe pressure during the search for him. \n\nI notified the Pack over the bond, and soon a dozen people had joined us in the living room.\n\nGunny and I were talking over the bond about how he might have been rescued; I still called him Gunny because Beta made him look around for others and he didn't like being called Ricardo. I had to save my I Love Lucy jokes for the right moments, you know. When they started the interview, I was watching with one eye until they broadened the shot and I saw Renee Johnson holding his hand. \"HOLY F... IT'S RENEE!\"\n\nI blasted that over the bond and soon the room was filled with the entire Pack. I was glad panthers didn't cry, as the emotion at seeing her alive after five years plus the pregnancy hormones left me a mess. Craig rubbed my ears and neck as we watched. She looked good, she had grown into a fine young woman and she positively glowed with happiness. Looking closer, I could see the years in war had been tough on her as well. Her eyes were hard, the same way Gunny's were; the eyes of someone who had seen too much.\n\nI stood up and walked closer to the screen. When the shooting occurred, I collapsed on the floor and my water broke. My heart was breaking for her as I went through labor. I took no joy in the day that I birthed the twins, son Gary was a wolf and daughter Renee was a panther. Gary couldn't shift, I could just smell the wolf, but Renee could shift back and forth as I did. They nursed as I watched the coverage of the funeral and the end of the war. \n\nWith the signing of the peace treaty, we started to think about whether our island hideout was still needed. The refugees were split, some were happy here and wanted to stay, others wanted to return to their old packs. Maggie spoke up at the Pack meeting on the subject. \"It's been too long, Ella. Jeremy's never met his father, and he's five now. I have to go back.\" She'd never given up her Pack bond, knowing she would return.\n\n\"We have to find out if any other members survived,\" John Johnson said. \"Our Pack still owns property in the Alexandria area, we need to claim it so we can revive our Pack eventually.\" Even the ones who wanted to stay on the island wanted to go back to the States to search for family and friends; no one knew who had survived the war and who had not. \n\n\"I owe it to my Pack to find the dead and send them off properly,\" Elder Campbell said. \"The government said they would return their bodies. It's my duty.\"\n\n\"I hate to break into this party planning with some reality,\" Al said, \"but I have to. Ella and I are still in danger, we don't know who gave us up and Black Ker is still out there. If anyone leaves the island, they might be traced back; if anyone changes Pack, they could be forced to tell where we are even if Craig issues an Alpha command. The safest thing for us is to remain out of sight, and out of mind.\"\n\nI stared at him for a while before answering. \"I understand the danger, Al, but I can't stand in the way of families reuniting. We have to let them go.\" I looked at each of them from the couch, my babies in my arms. \"I would just ask that if my name comes up, tell them that I died a few years ago.\"\n\nA week later and after a bunch of phone calls arranging logistics with Jimmy Erickson, most of my Pack was gathered by the airstrip and loading into the charter bound for Denver. Everyone was happy to go except two... Mabel and Gunny. \"Why do I have to go along,\" Gunny whined to me. \"My relatives are all dead, my family is right here.\"\n\n\"They might need protection, and you won't be distracted,\" I said. \"Plus, you'll be visiting a number of Packs, maybe you'll both find your mates.\"\n\n\"Yeah, right,\" sneered Mabel. \"I gave up on that years ago.\"\n\n\"So did Marge, and look what happened to her.\" We all laughed, she had gone through an unexpected heat and was now pregnant with their first child. Al had to stay here, so Marge was as well. \"Plus, we need to find out how many of our former Pack members survived the war in their new Packs.\"\n\nThey were gone for a month, and about half of them returned. Mabel wasn't among them. \n\nCh 68\n\n\"Where's Mabel?\" I looked around, almost in panic, as the last of my Pack members exited the charter flight and she was still gone. Al and Marge were by my side, she was reaching through the bond for her and she wasn't answering.\n\n\"Mated and moved,\" said Gunny as he came up and gave us a big hug. \"Some retired Beta from Alaska swept her off her feet. They are visiting his Pack right now.\"\n\n\"Alaska?\" Marge started rolling in laughter. \"Mabel was just telling me about how nice it was down here, never having to worry about snow again. I'm SO going to bust her chops now.\"\n\n\"Me too,\" I said. \"I'm never going through another North Dakota winter, my cat and I love the jungle life.\" I leaned back into Craig's muscled chest. \"You with me?\"\n\n\"Always, my mate. I like clothing-optional weather, especially for you.\" \n\nI smacked his arm and grinned. \"I'm not going into heat until next year, you know.\" We got back in the cars and drove back home. There was plenty of space now, the island seemed kind of empty with everyone gone, and even now I found myself missing the chaos from before. \"How did the trip go, Gunny?\"\n\n\"Really well, actually. Since the war ended, the packs have come out in a level of cooperation Mabel said had never been seen before. We had no problems traveling between Packs, in fact we were honored guests wherever we went. Having a common enemy and facing the demise of our species focused everyone on what was really important.\"\n\n\"How are the Packs doing?\"\n\n\"Struggling, really. The consensus of the Alphas we talked to is that a third of the Packs no longer exist, either wiped out completely or absorbed into others. It could be better, some might be waiting it out to see if humans really will accept us.\"\n\nI sank into the seat. \"What about the Johnson Pack? I know Renee is alive, but what about the rest?\"\n\n\"Derek sends his regards. He's really busy right now, trying to rebuild his Pack House and taking in refugees. He said he was down under a hundred left when the war ended. The ones that returned to him were a big boost. He owes you his eternal gratitude for saving his most vulnerable.\"\n\n\"But he doesn't know, right?\"\n\n\"Nope.\" Gunny leaned back and closed his eyes. \"It was hard lying to them, Ella, telling them you were really dead. Some people knew already because of the press coverage, others have been isolated so long they didn't know. It crushed them and their Pack to hear you were gone.\"\n\nI hated this. I hated having to hide, I hated that I asked people to lie to me, most of all I hated that I couldn't just get on a plane and visit my family.\n\nWe got back and got everyone settled, and after wrassling my kids into bed I retired back to our room and dropped my clothes in the hamper before joining Craig in the shower. Later, as we were cuddling and getting ready to sleep, I let him know what I was feeling.\n\n\"I know you miss things, Ella, but your safety is the most important thing to me,\" he said. \"I know it sucks, but I'd rather be stuck forever on this island with you than spend a single day with you gone.\" I leaned down and kissed him hard, relaxing into his embrace. \"I've talked to Al already. He agrees, the longer we can keep you dead to the world the better.\"\n\n\"I just feel like I want to go on offense for a while, you know? I can't live like this forever, cats aren't meant to be looking over their shoulders. My panther wants to hunt.\"\n\nHe pulled me tight. \"And my wolf wants you safe in my den, with our babies.\" We fell asleep slowly that night.\n\nThe next morning, I pulled Al and Gunny aside and told them what I was thinking. Al was certain we should stay hidden, but Gunny surprised me with his answer. \"You're right, Ella. It's time we started hunting.\"\n\n\"Craig won't let me.\"\n\n\"I didn't mean you. Send me.\" I looked at him funny. \"It makes sense. When you want to kill a sniper, you send a sniper. I've still got contacts in the military and the CIA. I can try and track her down, plus I can see how the CIA really feels about her and what is going on.\"\n\nI thought about it for a bit. \"You're Pack now, Gunny...\"\n\n\"Yes, and that means I protect them AND that includes you. Plus, I don't have a mate here, so traveling around isn't a bad thing. Truth be told, it's kind of boring around here. Nothing but pigs and waves.\"\n\nI snorted. \"Try spending months and months in cat form around here, by yourself.\"\n\n\"No thanks.\" We talked longer about how it would work, and when we brought Craig in he quickly agreed. \n\nA week later, Gunny was flying out on the plane that had brought Mabel and her mate Carl in for their visit. Carl didn't look to be sixty, he looked like Cary Grant and loved like a porn star, if the noises from their room were any indication. When they finally came down for breakfast the next morning, I had left a carton of condoms on her chair. \"You don't want to ruin your youth by getting pregnant now, do you?\" \n\n\"If these aren't made of Kevlar and steel, they won't last a minute with us,\" she smirked. \"I'm happy to see you finally figured out what they are, now we just have to teach you how to use them!\" Wait a minute, that boomeranged on me quickly! \"We've got a lifetime of loving to make up.\" She kissed him deeply, he wasn't even embarrassed by her behavior. I could only imagine what it was like to find your mate at that age. \"Besides, if we were to have a child it would be Luna's second greatest blessing in my life.\"\n\n\"What?\" I put on my shocked face as I lifted my shirt so Gary could latch on. \"I was #1 up until last week, and now you're shoving me down to the third spot?\"",
        "\"Fourth,\" she said. \"Your babies are much more fun than you were, because I can just hand them back.\" I loved having her back, but she no longer belonged here and I could see that in her face. It was hard saying goodbye, but they promised to visit- especially in February.\n\nMonths passed with no news from The Pack was thrilled when the first discussions of Wolfstock came about. It was everything I thought we needed as a species- a chance to find relatives and mates, to form a united leadership, and put a better face on \n\nwerewolves after the long war. I was just apprehensive; I wanted my Pack to go, but I knew I couldn't. It also made it more likely someone would slip up and let out I was still alive.\n\nWhen it rolled around, almost the entire Pack went; it was important for the families and young ones to be able to find their lost relatives and friends. One of the big things that was coming from it was a complete census, so we could finally know who made it and where they went. I was curious about what had happened to some of the Belden Pack members who had gone elsewhere when my parents were killed and I was attacked.\n\nIt seemed like a different lifetime back then. All I had to do was go to school and dream of my mate.\n\nCraig and I watched the opening ceremonies on the TV in our room, our children surrounding us on the big bed. I nearly lost it when they started a slide show of the packs that had been lost, some had been friends and allies. The waterworks didn't stop for me, as they awarded medals to five people who had shown great courage during the war and reflected the best of our species.\n\nThe second person to receive the medal was Jimmy Erickson, the warrior we had rescued from the Johnson Pack at the beginning of the war. He was standing there, his remaining arm around his mate, as the emcee read his citation. The logistics and support network he stayed behind to set up, providing food, weapons and shelter, had saved hundreds of wolves from certain doom.\n\nI lost it at the last award. Derek and Amanda walked on stage, holding a photograph as the assembled wolves rose to their feet. They accepted the award... for me, posthumously. My initial distribution of the UV filtering contacts had saved many from death, and word quickly spread to all Packs of its effectiveness. \"That was actually Ker,\" I said to the screen. The stage filled with dozens of children and vulnerable adults who were saved and sheltered thanks to my efforts. \n\n\"She may have lost her wolf, but she never lost her love for us,\" Derek said. \"She risked capture time and again to bring people out, and many have returned to us after five long years, safe and happy. We owe her more than we can express.\"\n\nCraig held me as I broke down, my oldest hugging me tight as we watched the outpouring of support. I dried my eyes as I watched the coverage; mates being found, the fun runs, and the interviews. \n\nWhen Renee walked into that challenge circle, my blood ran cold, and when I saw what happened to her I shifted and ran into the jungle. My cat needed to kill, to destroy, to maim after what she just saw.\n\nCh 69\n\nGunny called a few months later. He hadn't made any progress yet, but he had a few ideas. So did I.\n\nWorking with Jimmy Erickson, I arranged to have Derek and Amanda whisked down on a charter plane. They were hesitant, but Jimmy explained that there were some personal effects I had left behind that they needed to go through. Maggie King convinced them to come, and she and her son Jeremy and mate Jackson were on the same flight. Jackson insisted on finding and thanking everyone who had saved his heavily pregnant mate when the war broke out, plus Jeremy wanted to see his friends again.\n\nThe plane arrived late at night, and since it was a school night the children were already asleep. I stayed home with them while Craig went to see them at the airport. I spent the time pacing around the living room in anticipation, they were going to shit a collective brick when they saw me alive. \n\nThe twins had woken up and were hungry, so I was sitting in the chair with one on each breast. I had mastered the art of stacking pillows and blankets to the babies could be hands-free feeders with my first twins! I heard the SUV's pull up outside and Amanda talking about how beautiful the island was as they gathered their bags to come in. I pulled Renee off, she was starting to sleep again, and burped her just before the door opened. \n\n\"You'll need to be quiet, we have babies in the house and it's late,\" Craig said as he carried bags in and set them to the side. As soon as he moved to the side and bent down, Amanda saw me across the room. I said, \"Welcome to our Pack, Amanda,\" as she stood there and let out an ear-splitting scream before her knees started to wobble. \n\nDerek almost ran her over, but then her eyes rolled back and she started to drop. Derek jumped into action, catching her shoulders and easing her to the ground; his eyes kept going back and forth between his unconscious mate, and his very much alive cousin.\n\nHe held her against his chest as he sat on the carpet with his mouth wide open. Craig was finding this hilarious, while Maggie just looked at him and said, \"Surprise?\"\n\n\"You're really alive?\"\n\n\"She is, we're sorry we had to keep you in the dark about it but she would be in danger if people knew she was still alive.\" Craig lifted Amanda off the floor and carried her over to the couch and laid her down. \n\nDerek jumped up and rushed me, hugging me tightly around the neck as his tears ran down into my hair. \"Goddess, thank you for this,\" he said as Craig and Maddie took the babies so I could hug him properly. When he finally let me go and sat back, he held his arms out to Craig for one of them.\n\n\"Derek, meet your cousin Gary,\" I said as he pulled the baby into his chest and took a deep sniff of his scent. \"Maggie is holding Renee.\"\n\nHe had a wonderfully confused, happy and proud expression on his face as he looked up. \"You know about them?\"\n\n\"Yes, I watched it live. The babies were born the night Gary was killed, the stress of the watching it kicked off my labor. They were fine, though, and I'm glad Renee is too.\"\n\nI got up and offered the chair to Derek so he could sit and hold Renee as well. \n\nMeanwhile, I moved over to the couch and lifted Amanda's head up so it could rest on my lap after I sat down. I smelled her, the scent was complex, not just her and Derek. I looked down at her belly, my hand going down to feel where the start of her baby bump was. \"She's pregnant? Congratulations!\"\n\nDerek grinned. \"We found out recently, I'm so happy. During the war, none of our women went into heat. It's been a long time since we had a baby in the Pack.\" Craig had walked to the kitchen and retrieved the first aid kit, getting the smelling salts out. He broke one under her nose and she grimaced and shook her head, waking up on my lap.\n\n\"You could just say hello, cousin,\" I said as I stroked her hair.\n\n\"How?\" She sat up and jumped into my arms, hugging the life out of me. \"We saw you die, Ella.\"\n\nJust then the rest of my children walked into the room, sleepy-eyed, with Emma trailing a stuffed wolf behind her. \"Mommy,\" she said, \"Who are they?\"\n\nI opened my arms and the three ran up onto the couch, sitting on my lap and on a shocked Amanda's lap as well. \"This is your cousin Amanda, her mate Derek is holding your little brother and sister. They are from the Johnson Pack.\"\n\n\"OK.\" Darryl and Mitch jumped off and grabbed Jeremy. \"Miss Maggie, can Jeremy stay with us tonight?\" They had missed their buddy.\n\n\"Of course,\" Maggie said. She got up and grabbed his bag and looked back at us. \"Take your time, I'll get the boys settled down and be back in a few. I've heard this story.\"\n\nEmma decided that her cousin was the perfect place to settle in and cuddle, and she was asleep a minute later. \"So you know those two were Darryl and Mitch...\"\n\nShe looked at them going back up the stairs. \"They're so big! I forget it's been more than five years now since you had them. Who is this cutie?\"\n\nI smiled as she smelled Emma's hair. \"Her name is Emmanuelle, but we call her Emma like my Mom. I got pregnant with her after the CIA got me freed from Army custody. These two,\" I pointed to Derek and the two he was holding, \"are Gary and Renee. I got them with my last heat.\"\n\n\"Heat? But you're human.\" She leaned in and sniffed me, her eyebrows went up and she took another whiff. \"Wait a minute, you aren't a wolf.\"\n\n\"Nope, a black panther.\"\n\nShe fell back against the back of the couch, confusion on her face. \"Someone is going to have to explain what happened to you and soon!\"\n\n\"I want to hear your story too, but I'll give you the cliff notes version of mine.\" I started with watching the war start, then seeing their Pack House bombed. I knew Renee had gone back to them after we picked up the refugees, so I picked it up with that. I told them about Olivia having to kill her wolf, along with Tony and Tina's, to avoid being killed at the checkpoint. When I got to the part about being attacked in Wal-Mart and being captured by the Army, I had to remove her hand from mine because she was squeezing it too hard.\n\nI skimmed over my two years as a lab rat at Fort Detrick, getting to my return to the Pack and the deal I made with the CIA. Craig picked up the story, telling them about our relocation to this private island sanctuary where we thought we could sit out the war. I told them Ker biting me to give my my Panther, about my mission to kill the druglord, my narrow escape, and how someone had nearly killed Al and I hadn't seen Ker since.\n\n\"That's why we had to fake her death,\" Craig said. \"The drug cartel got her picture, someone at the CIA gave her up. We had the whole thing staged; scuba gear, explosives in the boat, even a pig to bring in the sharks. It worked, too.\"\n\n\"But only as long as I stayed out of sight.\" I sighed, thinking back to those lonely days. \"I spent months alone on a nearby island while things calmed down, all in cat form. Even here, I don't open windows and I only go outside as a panther, mostly at night. I'm afraid of satellites and spies. The cartel won't hesitate to kill me if they find out I'm still alive.\"\n\nAfter bringing them up to date, they filled me in on all the stuff that had been going on with them. We went late into the night, no one wanting to stop, but we were all getting tired. The babies woke up and I could smell why immediately. \"I'll tell you what, let's get some rest and talk tomorrow,\" I said. \"The babies will need to be fed and I need a few hours' sleep before daylight.\"\n\nWe woke up late the next morning, Marge had put out a big brunch buffet and we were all sitting around the big dining table catching up. The children were all at school, even the youngest still had activities planned. I could see them on the beach playing in the sand as we ate.\n\nAl, Craig and I filled the Alphas in on where we were with the search for the people who had burned us. After listening, Derek agreed with me. \"You need to go on the attack,\" he said, \"a defensive strategy will never work. You don't know when someone will find out, and you aren't big enough to fend off an attack. You got lucky that Gunny wanted to talk to you first or you'd already be dead.\"\n\n\"I know.\" I looked around. \"Until Gunny comes up with something, I just don't know WHAT to attack.\"\n\n\"There were a handful of people at the CIA who I know were aware of my group and what we were doing,\" Al said, \"but with the new Administration, things were turning over. I think someone wanted us dead and buried, but I don't know who.\"\n\n\"You don't have to know,\" Derek said. \"Look at what we have already just with what they did to you, Ella. The CIA, operating domestically, with a secret squad of mercenaries involved with assassinations, extortion, kidnapping and theft. The Army taking a known human captive for two years, experimenting on her against her will at a secret location INSIDE the United States. Then, the CIA gets her out but in return forces her to travel to Mexico and kill a druglord. Finally, they release her name and photograph, knowing that she isn't Black Ker, and knowing that she will be killed as a result.\" He paused and looked at everyone. \"There isn't a reporter in the country who wouldn't do anything to break a story like that, and it will scare the shit out of the Administration if they get wind of it.\"\n\n\"So we go public?\"\n\n\"No,\" Amanda said, \"if you do that, you'll be killed. The Cartel still wants you dead, Black Ker or not.\"\n\n\"But you can threaten to go public.\" Derek sat back and thought. \"I have some contacts in the Department of Justice, so does Alpha Robert Hastings, Renee's second chance mate. We set up a meet and you give them a sworn statement and answer questions.\" \n\n\"The new administration is much different than the last, they want to have good relations with werewolves. A story like this would destroy much of the goodwill that has been created since the end of the war.\" I looked at Amanda a little surprised. \"There are several Packs, mine included, that would react with anger at what they did to you. You have more allies out there than you think, Ella.\"\n\n\"And then what?\" Craig looked at the Alpha pair. \"So what if there is a scandal if Ella still is in danger?\"\n\n\"They can flush out the persons who burned you from the inside. Trust me, these people will get to the bottom of it,\" Derek replied. \"They've already shown that they will let Pack justice take care of things, quickly and quietly, instead of dragging it through their legal system. When you are done, tell them you want two things.\" He leaned forward. \"You want them to find out who was involved in you both being framed and targeted for assassination. And you want them delivered to this island.\"\n\nMy cat was licking her lips, she wanted her enemies' throats ripped open between her teeth. I could tell Al was feeling the same way.\n\nWe decided the rest of the stories could wait, they had two days here and I wanted to make sure they got a chance to enjoy the break. I could see the stress of the war etched in their faces, the losses in the distant looks that came to their eyes. It was time to have some fun.\n\nThey spent most of the day playing with the young ones on the beach, even learning to boogie board in the surf. I couldn't imagine a Pack with no little ones, we were overflowing with them! Some of the orphans were still here, as well as the children of those Pack members who had decided to stay with us. I smiled as I looked at them playing in the shallow water, tossing my boys high in the air until they crashed back to the sea.\n\nI had to stay in the house, napping with the babies and staying out of sight. I'd get my chance, though. After dark, we were going to take them for a boar hunt. \n\nThey watched in fascination as I shifted on the back porch into my panther form and stretched. Craig shifted and came over to rub his scent on me; I reared back and grabbed his wolf's neck in my paws. The musk glands on my neck left their strong scent behind, marking him as mine. Olivia and Al's panthers came up, along with Mabel's and Mark's wolves. A half-dozen other wolves from the Pack also wanted to come. The cats were going to carry the bags of supplies in our mouths, since we were going the shorter way and could hide them by the ambush point. Craig chuffed to start the hunt, we had learned early that we couldn't howl because the sound would carry over the water for miles.\n\nThe wolves took off along the east side towards the airport as the cats slinked quietly through the jungle on the west. We had a good spot picked out, and the plan was for the wolves to drive the wild pigs into the funnel created by the rock formations and to the cats. It was a good way to take down up to a dozen pigs at once.\n\nI could tell from the chatter that Derek and Amanda were having fun chasing through the jungle and making a racket. We were still taking it easy on the deer population of the island, only killing those that were injured, while we kept knocking back the wild boar population.\n\nI started to hear the group of boars approaching, their grunts and the sound of their hooves easily picked up by my cat hearing. The three of us moved into position on the branches above the trail; we would take out the largest ones near the front. As they came into view, we crouched down and pounced.\n\nI had a good-sized male in sight, and I dropped silently onto his back as he ran beneath me. My claws dug in and held on to his body while my teeth latched onto his neck. I heard his neck snap as I drove him to the ground, so I released him and leaped at a smaller one. My large paw raked his shoulder and rolled him, then I tore his throat out while he was on his back.\n\nI looked around, my face covered in the blood of my victims, and my cat was pleased with the carnage. Olivia had taken down a male, and Al had taken down a large sow that probably went three hundred pounds. The herd had stopped and scattered when we dropped down onto the leaders, and the confusion allowed the wolves to take another eight. I moved around, checking to make sure my Pack members were all right as they shifted back to human form.\n\n\"We've got a truck coming to a point a quarter mile away,\" Craig said as he took a bag from Olivia. They quickly pulled on clothes and removed the ropes and knives needed to field clean the pigs. Hoisting them up by the back legs, they quickly removed the guts and heads that would spoil quickly in the warm weather. Twenty minutes later, they were carrying the carcasses on their shoulders towards the truck. Everyone was in good spirits, this was a good hunt that would fill our freezers, and Al's big one would be on the spit in an hour or two for their going-away party.\n\nI shifted to cat form and relayed the message to Craig. \"Derek, Amanda, she wants to know if you want to go exploring for a while before heading back.\"\n\nThey eagerly agreed. \"I love this,\" Derek said. \"It still feels weird to be able to run and hunt without worrying about drones, or maintaining our spacing so a single missile couldn't take two of us out.\"\n\nIt didn't take long for us to visit a few of my favorite beaches, plus the high point of the island had a great view of the moon over the Pacific. We shifted back to human form on the top of the rise so we could talk. \"I'm glad you guys came,\" I said. \"I missed you. It was hell not knowing what was happening with you all, you are my only family left.\"\n\n\"You've done well, Ella.\" Derek gave me a hug and pulled Amanda onto his waist. \"We weren't exaggerating when we gave you that award. You did so much good, you saved so many people, and you did the best thing of all.\" I looked at him quizzically. \"Unlike us and the other Packs, you kept living. You had pups, and you hid them from the horrors that the rest of us faced. I know with a certainty that if it wasn't for Jimmy, my Pack would be gone. We couldn't hunt, the land couldn't support us and we wouldn't have been able to fight back without it. He said you spent millions and never said a word, and you never turned him down when he asked for more.\"\n\nTears started to stream down my face. \"It was just money. The whole time, I was thinking I should be out there with you.\"\n\n\"As a human? No, you helped us survive more than any warrior would.\"\n\n\"Is it ever enough?\"\n\nAmanda held my hand. \"Is anything to be gained by looking back now?\" She gazed out at the water, the first glow of the dawn was approaching. \"You have a wonderful home, a big family, an Alpha for a mate and your panther is just beautiful to watch. Five years ago, you felt like everything had been taken away from you, and now you have everything you dreamed of. I'm jealous, actually.\"\n\n\"Five pups and kitts before I'm twenty-four. I never would have predicted that. I didn't think I'd be mated by then, I thought I'd be getting my MBA and learning the family business.\"",
        "\"Family IS your business, Ella. Family planning? Not so much.\" Amanda gave me a hug and then we started back, since I had to be inside by daylight. We stopped at the base of the hill when we heard the sound of the helicopter over the water, rapidly approaching.\n\nCh 70\n\n\"Craig, what's going on with the helicopter?\"\n\n\"It's Panamanian military,\" he replied. \"They radioed us and said to meet them at the airstrip. I'm on my way with Mark now. Stay out of sight, love.\"\n\n\"Keep me posted.\" I looked over at Derek and Amanda, standing together in their wolf forms. We weren't the same Pack so I couldn't talk without shifting, so I did. \"It's a military helicopter, Craig is on the way to meet it at the airstrip. We should get home now, it will be light soon.\" I bounded through the jungle, they followed easily since they were much faster than me by nature. We shifted at the treeline and raced into the house. I took a quick shower and fed the babies before going back downstairs; I wasn't hungry, we had eaten one of the boars while in animal form, but I needed to stay awake to see what was going on.\n\nA half hour later, Craig had pulled into the driveway and the Pack was gathered for an emergency meeting. I joined him on the stairs in the living room as everyone gathered around. \"This morning,\" he started, \"I was notified by the Panamanian Army that an agreement had been reached with the United States regarding the removal of unexploded chemical ordnance on this island. We have been given thirty days to leave the island, in preparation for removal of the materials.\"\n\nThe pack was shocked, looking around at each other. I was shocked as well; after all these years, we were suddenly being booted? \"How long?\" was the first question.\n\n\"A year. Maybe more.\" Everyone started talking at once, and Craig had to growl to get everyone to quiet down. \"Look, it was bound to happen. The government has been trying to get the United States to remove the chemical weapons for decades, and now it is happening. I had to pretend to be happy about it, because the ordnance is the big reason this island is so lightly developed.\"\n\nThere were many more questions, most of which we couldn't answer. Finally, I had enough. \"QUIET.\" The group stilled, heads bowed in submission. \"We are leaving soon, we all need to prepare. I don't know how much we will be able to bring with us, so start thinking about what to store and what to take.\"\n\n\"But how do we know what to take if we don't know where we are going?\" They did raise a good question.\n\n\"We came here with almost nothing, we can leave with the same. Don't worry about it. We will come up with some options and discuss them at a later meeting. Now, if you'll excuse me, I've been up all night and the bed is calling me.\" There was a bit of laughter at that, but they got the point. \"We have a party tonight, we're doing a pig roast to celebrate my cousin's visit and their pregnancy. Those of you who weren't involved in the hunt, please help with the preparation. We'll eat at sundown.\"\n\nThe party was epic, over the years we have become experts at roasting big pigs over hot coals. The recipe had evolved a bit, our time on the islands had pushed our tastes away from tomato-based sauces and towards ones that were featuring local tropical fruits and spices. I could tell Derek was hooked, he was drooling even after his fourth serving. We were sitting at a picnic table, watching as some Pack members played volleyball and others gathered around the fire on the beach. \"So does anyone have any ideas as to where we can go,\" I asked.\n\nDerek looked at me. \"Well, first off, do you have papers to travel?\"\n\n\"Of course,\" Craig said. \"We have real and fake passports for everyone who has come here, thanks to our contacts. Along the way, we obtained dual citizenship with Panama; it cost a pretty penny in bribes, but it's another layer. We can travel on either passport.\"\n\n\"It might be easier to talk about the places you should NOT go,\" said Amanda. \"Mexico is out, too corrupt and the Cartels are too powerful there. I'd say the same about El Salvador and Honduras, plus some of South America.\"\n\n\"We can't go to North Dakota,\" Craig said. \"After Wolfstock, everyone knows you used to be a wolf and your pack was in Belden. You show up anywhere in that state, you'll be recognized.\"\n\n\"Or our Pack,\" Derek said. \"We've got embedded reporters, you'd stick out like a sore thumb. We've even got a reporter who used to be in the Pack.\"\n\n\"I know,\" I giggled a little. \"We knew Linda Remington years ago when she did the feature on our Pack.\"\n\n\"That was you?\" I nodded. \"Wow. I had my suspicions, but you did such a good job hiding your identities I couldn't tell for sure.\"\n\n\"Renee's pack is out too,\" Amanda said. \"They are having issues with the Cartels down there, and the DEA. They even got raided by the Feds recently. Too hot for you.\"\n\nI nodded. \"I want to bring Renee to me when the time is right, please don't say anything to her or Robert about us,\" I said. \"You know she'll freak out when she finally sees me, I hate to ruin the surprise.\" They nodded. \"So, any ideas? I'd really prefer not to go anywhere cold. I don't think my body could handle it anymore.\"\n\n\"There's the abandoned territories of Packs that are gone,\" Al said. \n\n\"We can't go back to Alexandria, Olivia and I could be recognized. Plus, most of the properties were seized and sold during the war. Without a surviving Pack member to transfer it to, nothing happens, and we can't come out as survivors without an explanation.\"\n\nWe kicked it around for a while longer, when Derek said he had an idea. \"I have to run it by some people, but it's warm and it's empty. You guys keep thinking of ideas and I'll call you on the satphone when I get back and talk to the Alpha.\" We focused on enjoying the rest of the night before they had to leave; the plane was arriving from the mainland at first light. \n\nA few days later, I got a call back from Derek. The Alpha had given permission for us to stay in the empty territory until we could return to the island; the agreement required us to sign a formal treaty with them, and could be revisited after a year. The Alphas wanted to meet us in person before letting us in, so Craig and I were going to have to leave earlier. \n\nThe best news, though, was that he was able to confirm through the Alphas and the DEA that the Soccorro cartel was no more. They had made the mistake of pissing off Renee Hastings, and Renee and Doug ended him. His organization fell apart, the territories being taken over by adjacent cartels. Renee had contacts with the other Cartel leaders; none of them had any issue with what she had done with taking out Jose Hernandez or with me. If I could be safe from the US Government, I might be able to show my face again.\n\nWe set up a charter flight back to the States for us, leaving Mark and Olivia in charge behind us. Craig and I arranged to meet Gunny at the airport, and as soon as our fake ID's cleared Customs he was loading us into an SUV and heading for the Gila Pack. \n\nGunny filled us in on the events recently in the Pack; although Renee and Robert were now fully mated, a lot of other events had gone on. The Cartel war was over, and her Pack members were now members of the Gila Pack. Seven months pregnant, and she was on bedrest with the twins.\n\nWe were met at the edge of their territory by a guard who searched our vehicle and then escorted us to the house; the Pack was still on edge after everything that had happened. We pulled up next to a huge resort house, where two men and a woman were waiting for us. Gunny jumped out and opened the door, helping me out then Craig followed and took my hand. We walked over to the two men, and Gunny spoke first. \"Alphas Craig and Ella Anderson, may I present Alpha Robert Hastings and his counsel, William Post.\"\n\nCraig shook their hands first, but I reached forward and hugged Robert before shaking William's hand. \"Thank you so much for inviting us, and I'm so happy my favorite little cousin found you for a mate!\"\n\n\"No more than I am, she's amazing.\" He gestured for us to follow him as we went up the stairs into the spacious entryway of his Pack house. \"I'll have to hold the tour until later, Renee knows Alphas are coming to talk and she's itching to do something other than watch television.\"\n\n\"Does she know who we are?\"\n\n\"No, and that's what will be fun with this. I told her it is a Pack that is looking to relocate because their properties in the Midwest were confiscated and sold during the war.\"\n\n\"Let me go in first,\" Craig said. \"This should be fun.\"\n\nWe got to the Alpha wing and I hung back while Craig went in right behind Robert. I listened in through the open door as he made introductions. \"Oh, it's wonderful to meet you Alpha Craig, welcome to...\"\n\nI snuck forward to see and started to laugh to myself. She had a confused expression on her face as she pulled Craig's arm to her face, sniffing it wildly. \"This can't be... how...\"\n\n\"Reports of my death have been exaggerated, Renee.\" I ran into the room and gave her a big hug as she tried to get her mind around things. It took her thirty seconds to put two words together as we cried on each other's shoulders.\n\nShe sniffed my neck, and was confused again. \"I can tell you're mated to Craig, but why do you smell like a cat?\"\n\nIt took an hour, sitting next to her on the bed, to bring her up to speed with where we were on everything. We had agreed not to talk about Ker, so we left the danger we were in generic to the government for some things I had done during the war. \"We're not ready yet for everyone to know who I am and where I'm living,\" I said. \"We were happy and safe down in Panama, but now we have to be kicked out for a year. That's why we thought of the Santa Fe area, we wanted a territory with no established Pack we can settle in to quietly, that doesn't have snow.\"\n\n\"Of course you can use the Santa Fe territory! I couldn't ask for better neighbors than my favorite cousin. You have to promise to visit, though.\"\n\n\"We will.\" We stayed for a few more hours, then drove to a property Gunny had located which we might be interested in. I looked at the property on the Internet while we drove there. It looked promising; the six million dollar asking price was reasonable, and the fifty-acre ranch butted up to thousands of acres of the Santa Fe State Forest. From the satellite view and photos, the canyons and forests would provide lots of cover for Pack runs and hunting. The main house was big enough at seven thousand square feet, with six bedrooms and seven baths, but we would have to subdivide some of the bedrooms to make rooms for the many children. It had a barn, shop, large kitchen, outdoor kitchen and my favorite- a pond with a swim-under waterfall. We toured it with the realtor, and let Gunny in charge of buying it under the name of one of our dummy corporations. We also tasked him with getting the stables cleaned out and the building turned into a guesthouse. \n\n\"No problem there, why, you've given me almost three weeks to pull off a three-month project,\" he complained.\n\n\"Suck it up, Gunny. Find a way.\" I smirked at him as we walked back to the car; I was willing to bet he would get it done through sheer willpower. He had Craig drive back to the airport so he could start calling general contractors, and he had one picked out and meeting him at the property in an hour. We boarded the flight and went back home.\n\nWe had another Pack meeting that night where we went over the location and the new property, and all were in favor. \"No ocean,\" John Johnson complained, \"but the pond is cool, humidity will be low and I'm imagining all that forest to run after being on this island.\" It was also nice to have allies on each side, with Renee's pack to the west and their allies, the El Paso Pack, to the east.\n\nI sent my mate with Mark and Olivia back to the states a week early to get the new house ready while I supervised the move. We were putting a bunch of stuff into storage, as the military wanted to use the old resort as a base of operations for the bomb clearance operation. The US government would be renting the property and the vehicles, as well as providing compensation for us being relocated, so the financial hit wasn't so bad. We left them large map in the office of the northern part of the island, where each known unexploded ordnance was located. I said they were each marked with stakes and orange flags, each with a number, that a bomb-sniffing dog had found when we brought him in.\n\nOf course, we had lots of bomb-sniffing wolves, and we had mapped everything when we first got here for our own safety.\n\nWe had everyone pack their belongings being left behind into watertight cases, and left them in a storage room. By the time we got word it was time to leave, each person was down to a couple suitcases of possessions. It helped that the desert climate we were going to would require similar clothing! We were all carrying our US passports, mine with my fake name Elanor Black, and our other identifications were well hidden in our suitcases for when Customs would inspect them. \n\nThere were more than a few tears as we went wheels-up and watched our island disappear below us. I had a funny feeling we would not return to the place I had grown to love.\n\nCh 71\n\nI sank lower into the water, letting the cool splashes coat my fur as I purred in pleasure. The pond was truly my favorite part of my new home; although it was a mere shadow of the beaches and oceans I had become accustomed to, it was enough. The heat of the day disappeared as I moved under the waterfall, letting the water course over my neck.\n\nWhen I settled in the calm spot behind the falls, I felt my neck move as little Renee stood up and shook herself off. Panthers were excellent swimmers, and my little cat loved being in the water with me. She was riding like a kit would, her paws around my neck with her tiny claws giving purchase. There was a splash nearby as Gary jumped into the water and started dog-paddling towards us. Even though he was only six months old, he had been shifting for a month now. This was new ground, as the full-blooded wolves didn't shift for a few more years. The panther part of his parentage had pushed this up quite a bit, since panther kitts are able to shift from birth.\n\nGary pulled himself up onto a rock protrusion that left his head and shoulders above water. He yipped at his sister, who playfully batted at his head with her paw. Soon the rest of the children in our Pack were in the pool, finding the shadowed areas where the air was cooler. There was a mix of human and animal forms. There was a yell of \"CANNONBALL!!\" before Gunny jumped in the deep end, the splash nailing a bunch of kids who shrieked in delight and splashed him back. Craig jumped from on top of the falls, nailing Gunny and the kids again, and it turned into a splash war.\n\nBy Luna, I loved my life. Another few months and I'd go into heat again, and I couldn't wait to get pregnant again. I giggled inside as I thought back to myself in high school, swearing off mating and being a \"baby-making machine\" when now? I was still pissed that I missed two years in lockup when I could have had another baby with my mate. Every time Craig asked me how many babies I wanted, my answer was the same. \"More.\"\n\nI sank slowly below the water, forcing Renee to let go and swim over to her brother. Shifting underwater, I used powerful strokes to come up behind Craig and grab him from behind. I loved the feel of my nipples against his back; I couldn't look at him without my cat and I getting all hot and bothered. Darryl and Mitch were taking turns being flipped into the water; they would stand in Craig's hands and he would pull up and flip them backwards as they screamed. I moved next to him and we sent both flying on the count of three. Soon, a line had formed and we had to add Gunny and Mark to the mix.\n\nI saw Shelly bringing drinks to the table by the pool, so I climbed out and joined her. Everyone was naked, the pool was private and there was no danger of passing boats seeing us. It was easier, too, since we could shift at will. Tom and Shelly had slowly gotten used to being around werewolves and cats, and nudity no longer bothered them. She smiled as she watched their adopted girls, Sharon, Sara and Sally, as they played in the water. When the war ended, they found a werewolf-friendly therapist who was helping them work through the loss of their family and Pack. They were doing much better, and there was hope that they would be ready and willing to become panthers in a few more years.\n\n\"The RV is gassed up and ready for your trip, Ella,\" Tom said as he sat down and kissed his wife. When the Pack had to flee, the RV was put into storage; now that we were back in the States, they had driven it down so we could use it. Tom had completed some business back in North Dakota and was happy to be down south before winter hit.\n\n\"All right, we'll eat and get going.\" I called to Gunny, he was going with Al and I to pick up William Post at the airport and then we were going to drive straight through to Washington, DC. After all these months, it was time for us to go on the offensive.\n\nCraig was staying behind with the Pack, as he wasn't needed to do what needed to be done. We said our goodbyes and were gone with the sunset. William was happy to see us, he was now our lawyer and would play a key part in the day ahead. His mate, retired FBI agent and now Gila Pack Beta Melody, had decided to come along to help with security. Both were recently changed and recently mated, so we offered them the bedroom for the overnight shift. I drove until one in the morning, then we gassed up in Texas and Gunny took over. \"Your turn, Rico.\"\n\nHe glared at me as he climbed into the seat. \"It's Gunny, always has been and always will.\"\n\nI smirked, ever since I had sneaked a look at his driver's license while he was getting gas I had been waiting for the right times to needle him. He thought Rico sounded weak, like some backup dancer on TV, not a rough-and-tumble Marine Sniper. \"Whatever. I'm going to get some sleep on the couch, you wake up Al at four and let him drive a while.\" I got settled as Al snored lightly in the recliner next to me. Just before he turned onto the freeway I had to do one more thing. In a nasally voice, I called to him. \"Reee-ko! Reeko Suave-ey!\"\n\n\"Shut up, Ella, or I'll leave you on the side of the road.\"\n\n\"Night, Gunny.\"\n\nWe pulled into the Alexandria, Virginia suburbs about eleven that night and parked in a church lot near our target's house. Melody got set up with the communications equipment, her radios were tuned to local frequencies for the police and Secret Service, the attached scramblers ready to interpret the noise everyone else would hear. Gunny had to stay with her, since we could only link within the Pack. We grabbed our bags, and Al and I led the way to the walking path in the park behind the target's house. William grabbed a seat at a table to wait and listen, he wouldn't come in until we had disabled the alarm system.\n\nGetting in to the \"highly secure\" home was a joke. Josh had hacked into the alarm company and found the back door into the system, a code left behind by the installers so they could remotely access it for service. Michelle entered the code on her laptop before we got to the back fence. The security fence was high and electrified, but that didn't even slow us down. We shifted, taking our small bags in our teeth, and climbed up a large oak tree before jumping into the backyard. Pulling on clothes from the bags, we walked to the back by the kitchen. I took out lock picks, making quick work of the back door, and we silently entering the house. I headed up to the master bedroom while Al went out and opened the gate for William.",
        "She didn't even wake up as the two men joined me in the room. When I turned the light on and shook her shoulder, she opened her eyes slowly. Her eyes went wide as she recognized my face, and she screamed before I covered her mouth with my hand. \"No need for that, Miss Giovanni, we're here to talk to you and we don't mean you harm. Is it all right if I call you Lisa? Or would you prefer White House Counsel?\"\n\n\"Lisa's fine,\" she said nervously, looking around at the others. \"Mister Post, what are you doing here?\"\n\n\"It's another mess for you to help us clean up, I'm afraid.\" Her face dropped and paled, the last time they had talked it had caused her huge headaches; luckily, the information never leaked.\n\n\"Now what? Does it have to do with Ker here?\" She looked at me, then back at him, fear still in her eyes.\n\n\"Yes, it does.\" He reached into his briefcase and removed some papers, handing them to her she put on her reading glasses and glanced down at them. \"What you have there are sworn statements by Ella Grey and Al Hogwood relating to their treatment by CIA and Government officials.\"\n\nI snorted. \"Hogwood? No wonder you never told me your name. This trip is comedic GOLD.\"\n\n\"Shut up, Ella, we're on the job.\"\n\n\"Summarize, please?\"\n\n\"Ella was known to be human, yet was arrested and held for two years without charges or a court hearing. During this time, she was deprived of her civil rights and was the subject of medical experiments without her consent.\" He turned to Al. \"Al was a CIA Deputy Director, who ran an off-the-books group under the direct supervision of the CIA Director. During a field operation, his team was blown and he was attacked and nearly killed by a contract CIA hit team. He has been forced to remain in hiding for years, unable to clear his name.\"\n\n\"I see. Is that when Black Ker here went rogue?\" She flipped through the pages, then settled back to read. \n\n\"Yes,\" Al replied, \"But she isn't Black Ker. She was brought in by me to complete a single mission while Ker was in her last month of pregnancy. Someone decided to take her out and make everyone believe she did it, but if you look at the dates, it's not possible. She was in confinement during some of the known Ker activities, and she isn't old enough to have done the first ones.\" She nodded and read on.\n\n\"Lisa, would you like some coffee or tea?\"\n\nShe looked at the clock, it was one in the morning. \"Please, this looks like a long night.\"\n\nI returned ten minutes later, she had nearly finished her first read of the affidavits. \"This is a good start, but I need an investigator on this and we need to tape your statements. Can I bring someone in?\"\n\n\"As long as it is someone you trust with your life,\" I said. She grabbed her phone and dialed a number, and a few minutes later she was talking to the Inspector of the Government Crimes unit. \"She'll be here in about twenty minutes, can you bring her up?\"\n\n\"Gunny can do it.\" I linked him to wait in the driveway as I walked downstairs to open the front door. Lisa took the time to use the bathroom and get dressed.\n\nWhen he came back to the kitchen where we were waiting, he was pale and clearly shaken. The woman who entered before him was dressed professionally, about forty years old, with long blonde hair in a ponytail. She was broad shouldered and muscled, like a swimmer, with sparkling green eyes. Gunny couldn't keep his eyes off her, and was fighting back a shift.\n\n\"What's going on?\"\n\n\"MATE!\"\n\nI shook my head, it was a hell of a time to find her and she looked like she was too busy for the burly ex-Marine right now. \"Ella Grey, Al, this is Rose Conspiell, FBI Senior Agent-In-Charge.\"\n\n\"Pleasure to meet you,\" I said followed by Al. She quickly got her bearings and Al set up the video camera while she read our statements. She and Lisa filled a few pages with questions, and we spent the next few hours laying out everything we knew about what had gone on.\n\nThe sun was rising as Rose finally shut off the video camera. Lisa looked at us and sat back, they were in trouble and they knew it. \"So what do you want, William?\"\n\n\"Eventually, we want their names cleared so they can travel and live freely again, of course. Before that can happen, we need to know who in the CIA burned them and why.\"\n\n\"That can take a while,\" Lisa said.\n\n\"We know. No action will be taken on our side during that effort. But,\" he leaned forward, \"WHEN you find out who did it, we want them brought to our territory, to face Pack justice.\"\n\n\"You'll kill them,\" Lisa said.\n\n\"If they deserve it, yes. On the other hand, it will be quiet, out of the press, and won't raise any questions. We're really saving you a lot of headaches by doing this.\"\n\n\"Anything else,\" she asked.\n\n\"Twenty million dollars in restitution for the imprisonment and time spent avoiding extra-judicial assassinations. Cheap, really, compared to what would happen if this went to trial. Ella sitting there, young and surrounded by her five children, would have the jury ready to order much more.\"\n\n\"I can't promise to deliver the CIA men, not until we've identified them and have had a chance to interrogate them,\" she said. \"BUT, if what you say is proved out, I have no objection to Pack justice and I don't think the President will either.\"\n\n\"That's good enough for now.\" He stood and shook her hand as we all rose with him. We walked towards the back door, I nearly had to shove Gunny in front of me. The poor man had been staring at Rose all night like she was a steak, it was a wonder she hadn't noticed. We walked through the gate and back towards the RV.\n\n\"I have to stay,\" Gunny said. \"She's the one.\"\n\nI gave him a hug. \"Way ahead of you. Melody already booked you a hotel near her house, and a rental car will be delivered tonight. Josh ran a complete background check on her and forwarded it to your phone. You're relieved of all Pack duties until you can bring her home.\" I gave him a quick hug. \"Just don't screw it up by scaring her off, she doesn't need creepy stalker guy.\"\n\n\"I'm a Marine Sniper, Ella.\" He smiled. \"She'll never see me, and I always take my objective.\"\n\n\"Just don't end up walking to the parking lot naked this time,\" I said as I laughed.\n\nCh 72\n\nAl and I had a bet going on whether Gunny would get his woman before Lisa would get her men. Let's just say he chose poorly, I had far more confidence in the power of a muscled chest and ripped abs than investigations and interviews.\n\nA week later, Gunny arrived for a weekend visit with his arm around Rose. She was sporting a hickie on her neck, a precursor to the change she needed an Alpha's permission to receive. I was more shocked at the young lady who was walking beside her. She looked to be about sixteen or seventeen, and was a younger version of her Mom. In other words, she was a blonde goddess. As they walked through the gate into the backyard, her eyes lit up as she saw the big pool. Another swimmer, I thought.\n\nAs we were introducing ourselves, she let out a shriek. I smirked a little, the older kids were getting out of the pool to introduce themselves and all of them were naked. \"We have guests, everyone get clothes on and no shifting without permission,\" I said. Her daughter Charlotte made it look like she was keeping her eyes covered, but I could see her peeking between her fingers as a couple of the teenage males were going to the shower room to grab trunks. One froze, staring at her as she stared back; Josh finally shook his head and walked through the door. \"Thanks for the warning you were bringing guests,\" I said to Gunny as I smacked his shoulder. \"Did you tell them you are a werepanther?\"\n\n\"We talked about it on the way here, they're still trying to get their heads around the idea that she is my mate. I haven't changed for them yet.\"\n\n\"I apologize for the shock; as werewolves and panthers, we don't have the same hangups about nudity as humans have developed. It is normal for us to be nude around the house or the pool.\"\n\n\"No problem,\" Rose said. \"Someone should have called ahead.\" I liked her, she would keep Gunny in line.\n\n\"Charlotte, if you'd like to go for a swim, we have a bunch of spare swimsuits in the women's changing room. We bought a bunch of them when we moved here, most still have tags on them.\" She looked at her Mom, who nodded. She squealed her thanks and ran off to get dressed.\n\n\"Alphas, I can't get her smell out of my head. My wolf is going nuts. Mom, what do I do?\" I could sense Josh's tension through the bond.\n\n\"Be her friend first, she's human, you have to go slow. I'm so happy for you, son!\" Angela was excited, she didn't expect her son to find his mate so early. \n\nI motioned for Gunny and Rose to sit at the table. \"What was all that about,\" she said. \"Your eyes were glazing over...\"\n\n\"It's called the pack link,\" Gunny said as he took her hand. \"In a Pack, we each have the ability to talk directly between each other mentally, since we can't talk in animal form. It only occurs within a family, like between mates, and once you are joined to a Pack.\"\n\n\"Do you have to be in a Pack?\"\n\n\"No,\" I said, \"But your animal is more stable and happy in a Pack. Wolves are social creatures, they aren't happy alone. The Pack is like a big family, everyone helping each other and supporting the group.\"\n\n\"So this is like a commune, then.\"\n\n\"No, not really. It's more like a close-knit military unit. There is an organization within the Pack, everyone has their rank and their responsibilities. Watch how things work here during the visit, and talk to anyone you want. We would never force you to take the change, or force you to be in a Pack. When you are ready, you'll come to us.\"\n\n\"Huh.\" She thanked Marge for bringing out the lemonades as she and Al sat down. We looked over, the kids had run out of the changing rooms and were jumping back in the pool- naked. I started to get up when I saw Charlotte running out with Jane Spencer and diving naked into the pool to join them. The teen boys ran out and soon a volleyball game was going on. I could see Rose wanted to stop it, but Gunny put his hand on hers and I saw her relax a little. \"Is it true? Her mate is here?\"\n\nI nodded, smiling widely. \"It appears so. We recognize our mates by smell, and by the tingles when we touch. Josh, the young man who was staring at her, is her mate. She doesn't know it yet, he's going to spend some time getting to know her first.\"\n\n\"Fuck me sideways,\" she muttered, \"I thought this was just a social call.\"\n\n\"Gladly,\" Gunny said as she elbowed him. \"It's best to leave them alone and let nature take its course. I'm thrilled they found each other; there isn't anyone in the world who will love and protect her like he will. Josh Spencer is a great kid, he's amazing with computers.\"\n\nHer eyes went wide. \"JOSH SPENCER? You mean the kid who made #6 on the FBI Most Wanted list? The cyberterrorist responsible for Shitter's Full '17, the Great Sewer Backup?\"\n\n\"Yep, that's him,\" I said. \"No better friend, no worse enemy. He's off the list now, he was pardoned after the war.\" I took her hand. \"It was a tough time, we had to use anything we had available just to survive. Hell, his hacking almost single-handedly funded our side of the war. He brought in hundreds of millions of dollars in the first year of the conflict. He's got more money than he can use, more friends than you would believe, yet he chooses to live here with us because we are his family. That's what a good kid he is.\"\n\nJohn and Angela were holding hands across the table from her. \"We've been getting updates, he's already in love with her and would do anything to make her happy. She is interested in him too, our daughter can tell. He'll treat her with love and respect,\" John said.\n\nShe looked at the two talking in between points. \"He better, if he hurts her I'll kill him if she leaves anything alive.\" She looked down. \"She's my only family, I got pregnant at sixteen and kicked out of the house. I had to move in with my best friend, luckily my Grandmother took me in. I finished high school and got through college on scholarships. I got my degree, then law school while she was at school or day care. I joined the FBI when she was eight, and worked my way up. She's never had anyone other than I and her Great Grandma, the rest of the family disowned me.\" She paused and wiped a tear away. \"I'm thirty-four, and until Gunny here forced his way in I thought I'd die a lonely old woman.\" He leaned over and kissed her tenderly. \"She hasn't dated either. I need to talk to him soon; she was raped when she was fourteen by a man I had dated briefly. Ever since, she's had trouble trusting boys and she doesn't like to be touched.\"\n\n\"He will understand, and help her,\" I said. \"I can talk to her as well. I was raped and left pregnant when I was eighteen; my friends drugged me and one of the boys left me pregnant.\"\n\nHer face curled up in anger. \"Did he go to jail?\"\n\n\"Nope. I killed him.\" I showed her the scar on my left thumb. \"I tore his throat out with my teeth when he got too close, then I bit my own thumb off to get out of the handcuffs and escape. If she needs someone to talk to, I'd be happy to help.\" The conversation turned lighter, and dinner was served out by the pool. Craig joined us, having returned from a trip to town to purchase more furniture.\n\nThe kids eventually got tired and were ushered off to bed; it wasn't lost on us that Josh walked her back to the teen girl's bunkhouse with Jane. We had moved on to adult beverages by now, and Gunny and Rose finally started to talk about the other things going on.\n\n\"So, I wanted to update you on the search. It hasn't taken long, the men responsible admitted to it and were proud they had taken care of the 'problem.' They turned over the evidence, according to the information they were given, Al and Ker had made contact with the American Mob and were leaving to become contract killers. They had bank transfers, emails, everything. They burned you to prevent your group's existence from becoming public and since you were going rogue.\"\n\n\"Where did they get the evidence?\" \n\n\"From your group's trainer... Trevor Madison.\"\n\nAl started to rise, his chair twisted and bent under the strain as he fought off a shift. I wasn't much better; Craig had to bite my mark and rub my side to calm me down. Trevor had found and trained Black Ker into the dangerous weapon she became, and had visited Quantico a few times to help me learn to use my Panther. I had trusted him, and it cut deeply.\n\n\"Who knows the real story,\" Al asked.\n\n\"Just Lisa and I. We decided that it was better if everyone continued to believe you both were dead. Trevor went off the grid a few weeks after the team didn't come back from Mexico. No one has seen him since, nor have we seen Black Ker. We figure they were planning to go out on their own, and used the CIA to destroy all links back to the Government. We've worked with the FBI and Justice Department to clear your name, Ella, so there are no active warrants on you. Al, you're still dead. However, until we can locate Trevor and whoever he is working with, you're both not safe coming out.\"\n\nI let it all sink in; we were safe from the Cartel, now from the Government but still had to hide. I couldn't let too many people in the Packs know either; Trevor was a werecat, and might be working with packless wolves or corrupt Alphas. \"I guess we'll just stick around here until we can go back home,\" I said.\n\n\"I agree.\" Al pulled Marge onto his lap. \"I'll just have to stay home and make sure my mate here doesn't over-exert herself.\"\n\n\"There's one more issue,\" Rose said. \"We had our lawyers look into the applicability of Pack law to these men. For Al, quite simply, it doesn't apply since he wasn't a panther until after he was attacked. For you, Ella, it is more difficult. When you were recruited you were human, they had no way to know you were a panther. Even so, sending you off and later releasing your photo is not against the law.\"\n\n\"Even if it puts me in danger?\"\n\n\"They didn't lie, or take out a contract. You did the hit, they just let the Cartel know who did it.\"\n\nI sulked for a moment, I wanted more closure than that. \"So in the end, the CIA guys were the orchestra, not the conductor.\"\n\nShe nodded. \"Yes, that is what we concluded. We are giving them administrative sanctions; suspensions, reassignments, letters of reprimands. That's all we can support. As for your imprisonment, we agree it was not justified but under the emergency powers of the President, almost anything was legal. We determined that the twenty million settlement was an adequate and fair redress for everything. I have the paperwork and the check here if you agree.\"\n\n\"I have to check with my lawyer.\"\n\n\"Go ahead, we emailed it to him earlier. He's waiting your call.\" I did so, and a few minutes later signed the papers and accepted the check. I tucked it away, maybe the girls and I could take a little shopping trip and blow some of this mad money soon. \n\nWith that, we said our good nights and went off to our rooms.\n\nOur time in New Mexico came to a close almost a year later; we left Gunny, Rose, and the Spencers there because they weren't ready to leave the country quite yet. Rose had become a panther when they mated a few weeks after they arrived, and resigned from the FBI. Josh and Charlotte were very much in love, but we were making them wait until she was 18 before she could mate and change. She was debating panther vs. wolf as we left.\n\nThe island had been cleared of lost ordnance, and we started making plans for expansion. We were talking about returning the hotel to a tourist destination, while building a compound for the Pack on the north end. We still had to be careful about what we posted on social media and what we said, but there was a lot more internet access than we allowed before. We still kept posted on the happenings back home, occasionally face-timing with Renee and Robert, or Derek and Amanda.\n\nWe were shocked when the news came out about Black Ker assassinating a Luna, and the nationwide panther-hunt for her when she escaped capture. Derek assured us there was nothing we could do there to help, so we stayed home and watched.\n\nWhen the news came that she had been arrested and would face trial, we booked a plane. I figured I might not dispense the justice, but I would see it being carried out and that was enough. Craig stayed behind with the kids, and Marge with their baby boy Curtis. We flew to New Mexico first to pick up Gunny and Rose, then flew to Denver. We arrived at the Pack shortly after the trial started, and left knowing justice had been done.\n\nThere was no more reason to hide with Trevor and his backers dead. I met with the new Pack Alphas at Telluride, who were absolutely thrilled to see me alive. We got a promise from them to visit over the winter, plus we saw many other friends and acquaintances. I promised to see them all at Wolfstock III next summer, assuming the triplets were able to travel by then. \n\nYes, I was pregnant again, and I'd never been happier.\n\nWhen my parents died, all I could live for was revenge. I found neither joy nor satisfaction in it. \n\nVengeance leaves you hollow; it was only through forgiveness that I experienced the greatest blessings in my life. I had survived, I had overcome, I was a better person and Alpha because of it. \n\nIt was time to go home to my family and my Pack."
    ],
    "authorname": "partwolf",
    "tags": [
        "were",
        "werewolf",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/stolen-birthright-ch-65-72"
}