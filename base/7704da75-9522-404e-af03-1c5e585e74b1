{
    "title": "Six Degrees Ch. 02",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n*****\n\nPart 6 - The Crime Scenes \n\n\"Officer down! Officer down!\" came the call over the police radio, with a call for an ambulance and an address.\n\nSomeone in the neighborhood had seen the van pull in and the masked men exit the vehicle, and immediately had called 9-1-1. The Police, already on heightened alert, converged. The first to arrive at the house made the call, and now the entire TCPD vehicle fleet was moving all over the place like a disturbed ant bed. It was not long before the black van was spotted.\n\n\"We've got company.\" the van driver said. Two Police cruisers had pulled in behind them, blue lights blazing.\n\n\"Go for the State Line!\" one man called out. The van sped up, hurtling through traffic. They had their radio tuned to Police frequencies, and realized that they were about to be cut off. The driver sped through traffic towards North Avenue, which would lead to the West Highway out of Town and towards Hammondsville, across the State Line--\n\n*WHAM!!*\n\nThe Police cruiser came out of nowhere and t-boned the van, hurling it through the air. It came to rest on its side. Officers pulling up got out of their cars and converged on the van, guns drawn.\n\nThe leader inside the vehicle had been strapped in. Seeing what had happened, he released himself from his seatbelt, then got out the .22LR auto pistol with silencer.\n\n*pop* *pop* *pop* \n\nThe officers heard the muffled noise. They yelled for the occupants to come out of the van. There was no response. Finally, one well-armored officer got to the vehicle and looked inside the windshield.\n\n\"I think they're dead.\" he said. Another officer came to the back doors and opened them, covered by his teammates Looking inside, they saw four dead men... three by gunshots to the head at close range, the fourth by taking cyanide.\n\n* * * * * * * * * * * * * * * *\n\nI was in my office. I had gone over the duty logs and was working through emails. Most of them were between other officers with copies to me; I made sure to read those to understand what my people were doing.\n\nI became aware that there were people moving around in the halls. Since Precincts had been established, traffic in the hallways had fallen off, so for activity to be going on now meant something was up. I felt a strange vibe.\n\nAnd then my door practically flew off its hinges, and I became aware of a platinum blonde Police Captain rushing in. The look on her face was sheer horror, and chilled me to the bone even before she spoke.\n\n\"Don... it's Tanya.\"\n\n* * * * * * * * * * * * * * * *\n\nI entered the house. The bustle of activity by the Crime Lab and Uniformed Officers immediately ceased upon sight of me.\n\n\"Carry on. Carry on.\" I said quietly, almost hoarsely. The activity resumed.\n\nI was not numb; I felt the blood rushing to my head, the agonizing pain in my heart, and the lead weight in the pit of my stomach. I willed my legs to move as I came into the front room. Martha the M.E. pulled up the bloodied sheet to let me see the mortal remains of Pamela Feeley.\n\n\"She died instantly, Commander.\" Martha said. \"Semi-automatic gunfire. One of the guns raked across her abdomen, practically cut her in two. Others got her in the head and heart area.\" The sight of what machine gun bullets could do to a human body was morbidly fascinating to me... but in this case was utterly horrifying.\n\nI looked up at Cindy, who understood. \"This way. Back room.\" she said. Patrolman Hicks led us to the room, which was little Pete's nursery room.\n\nGoing in, I saw no body on the floor, but there were two large bloodstains in front of the crib. \"She's still alive, sir.\" said Hicks. \"They rushed her to the Hospital in a Police car rather than wait for an ambulance.\"\n\nI steeled myself and looked in the crib. There was a mound. I could see where someone had marked two bullet holes. Underneath the blanket... was Tanya's armored vest, wrapped into a tube.\n\n\"She wrapped her vest around the baby.\" said J.R. Barnes, who had come into the room. Normally, .22 long rifle can penetrate kevlar vests, but the bullets hit where the vest overlapped itself. He's alive and didn't seem hurt, but he was taken to the Hospital with his mother.\"\n\n\"Oh my God.\" I whispered. Then I felt my legs leave me, unable to hold me up. I realized I was sitting on the floor. \"Oh my God, she wrapped her vest around Pete rather than put it on!\" My head fell into my hands as the pain overwhelmed me. \"She gave herself up to save him...\" I was crying, feeling the tears running down my face, unaware of anything else for a moment.\n\nThen Sergeant Rudistan came in. He saved me from dishonor by saying \"Commander, are you finding any clues down there that we missed?\" I sucked it up, then looked up at him and Cindy.\n\n\"No, I guess not.\" I said, then took his hand and let him pull me up to my feet again. I listened as Rudistan gave the report of the van being interdicted and the perps found dead. Ballistics would be run to see if the guns in the vehicle matched the casings and bullets found here at the house.\n\n\"All right, thanks for the report.\" I said.\n\n\"Commander,\" said J.R. Barnes, \"there's one more thing you need to see. These were found in the crib next to the baby.\" He then brought out Pete Feeley's shield, still in its frame, and the Laika crowbar. Both were now in evidence bags.\n\n\"The fucking bastard...\" Cindy whispered, anger now on her ruggedly pretty face.\n\n\"We'll get these back to you after we've examined them for evidence, Commander.\" said Barnes, knowing from where they had come.\n\n\"Thanks.\" I said. \"Take your time, get everything you can.\" Then my spidey-sense started going off, and apparently I was not the only one so affected.\n\n\"Commander,\" said Cindy, \"we need to go to the Hospital. Right now.\"\n\n\"Yeah.\" I said.\n\nPart 7 - Confrontation \n\nI'd been to the Trauma area of the Hospital entirely too many times. When I got up to the Nurse's Station and the waiting room area, I was only a bit surprised to find my wife Laura already there.\n\n\"Tanya's been rushed into surgery.\" said Laura. \"She took three bullets. The E.R. people said she did not look as bad as Cindy did the night she was brought in, but it's still serious.\"\n\n\"And baby Pete?\" I asked.\n\n\"Tanya put a pacifier in his mouth, so when the vest impacted him, he didn't cry out.\" Laura said. \"Also, the vest hit his entire back, dispersing the force of the blow. Babies are surprisingly resilient, but it was still a hard blow for him to take. He's got some bruising on his upper back, but it looks like his kidneys are okay. If there's no internal bleeding or head trauma, he should be okay.\"\n\n\"Good.\" I said, relief flooding my soul. Then I remembered: \"I need to call Paulina.\"\n\n\"Why?\" Laura asked.\n\n\"Tanya's living will calls for me to become Pete's guardian if she's incapacitated.\" I said.\n\n\"Funny,\" Cindy said, \"I had a thought about that very thing at the house. That's why I told you we need to come here.\"\n\nThe waiting room was beginning to fill up as Officers and Detectives came up. Teresa, Julie Newton, Julie's sister Yvonne, and Helena all rushed up, followed by Martin Nash and Joanne Cummings. Then the Chief came in.\n\nJust then, my cellphone beeped, as did Laura's. We were independently getting messages to come to the Main Reception Area in the lobby.\n\n* * * * * * * * * * * * * * * *\n\n\"I am taking that baby into Child Protective Services right now.\" the woman was telling the woman at the front desk. \"If you do not cooperate, I will have these two SBI Agents arrest you. His mother is incapacitated, and I am formally taking custody of Peter D. Feeley.\"\n\n\"Like HELL you will!\"\n\nI need not say my crowbar was in my hands as the woman whirled to face me. She was black, middle aged, and was dressed well. She was also the head of the County's Child Protective Services, and her name was Linda Farris. The SBI Agents with her were Agent Greenwalt and Carter Fischer. \n\nI continued: \"The baby's mother left a living will, naming me as guardian. You even try to touch that baby and I will kill you on the spot!\"\n\n\"Gentlemen,\" said Farris, \"arrest that man.\" I just looked at Fischer and Greenwalt.\n\n\"Ma'am,\" said Fischer nervously, \"that is the Iron Crowbar. He is the Police Commander in this County.\"\n\n\"I don't care who the fuck he is.\" said Farris. \"Arrest him. Right now.\"\n\nI spoke up, sheer menace in m voice. \"I'll save Fischer and Greenwalt by asking you to exhibit your warrant to arrest me. Oh, you don't have one. And it wouldn't matter: you will have to kill me to take that baby from me, and that's if I don't kill you first.\"\n\nLaura hung up her cellphone. \"Paulina called Judge Watts. He's already putting out a bench warrant for you to appear before him immediately, Ms. Farris.\" The woman's phone began ringing, and by sheer coincidence confirmed what Laura was saying.\n\n\"Agents, stay here.\" said Farris. \"If anyone tries to take that baby from your custody, arrest them.\"\n\n\"I'd suggest you two guys leave my County before I get really upset.\" I said to them. To Linda Farris's shock, they quickly left. They had no desire to learn what a Crowbar beatdown felt like...\n\n* * * * * * * * * * * * * * * *\n\n\"Your Honor, here's the living will giving Commander Troy and his wife guardianship of Peter Donald Feeley during his mother's incapacitation.\" Paulina said.\n\n\"Ms. Farris,\" said Judge Watts, who was looking surprisingly angry, \"would you explain to me why you even think you have custody of that child? And why are you acting unilaterally without securing the required legal paperwork, which will now include a warrant that will never be issued?\"\n\n\"Your Honor,\" said Ms. Farris, \"it is not unusual for Child Protective Services to take physical custody of a child immediately upon learning of the mother's incapacitation. This child needs to be cared for, and arrangements made for that immediately.\"\n\n\"How did you learn of the mother's incapacitation so quickly, Ms. Farris?\" asked Judge Watts skeptically.\n\n\"There was a call to Child Protective Services, Your Honor.\" said Ms. Farris.\n\n\"By who?\" asked Watts, his voice underlying his growing irritation.\n\n\"I will have to check and get back to you, sir.\" said Ms. Farris. \"When I was told of it, I assumed the Police made the call.\"\n\n\"Really!\" said Watts, shaking his head. \"The incapacitated woman is herself a Police Officer. Any one of her colleagues would take care of that child, even if she didn't leave the legal papers to have Commander Troy assume guardianship, of which he is fully capable of doing. Now why don't you tell me what's really going on, Ms. Farris? Why are you trying this end-around to take custody of that child?\"\n\n\"I'm not sure what you're asking, Your Honor.\" said Ms. Farris. \"I'm just trying to do my job.\"\n\n\"That's a load.\" said Watts. \"Ms. Patterson, your writ is granted. Commander and Mrs. Troy have guardianship of Peter Donald Feeley during Ms. Perlman's incapacitation, and while I pray to the Lord she recovers... should she die, that guardianship will continue as the process to make it permanent is completed.\n\nJudge Watts was not finished: \"Furthermore, Ms. Farris, neither you, nor anyone at Child Protective Services, nor anyone associated with you or CPS, nor hired by you or CPS, is to attempt to take custody or physical possession of that child. To attempt to do so will be considered Contempt of this Court as well as a felony criminal offense of kidnapping. Do you understand, Ms. Farris?\"\n\n\"Your Honor, I intend to appeal this ruling--\"\n\n\"I SAID 'DO YOU UNDERSTAND?', MS. FARRIS!\" yelled Judge Watts, his patience gone. \"Give me one more word of crap and you will be in jail for Contempt. DO. YOU. UNDERSTAND?\"\n\n\"I understand.\" said Ms. Farris. The look on her face was sheer ugliness.\n\nPart 8 - The News \n\nI was in the waiting room. The Chief and Cindy were there, as well. I had permitted Martin Nash and Teresa Croyle to stay, and told the rest of the Detectives to go back to work, promising to give them updates as I received them myself.\n\nPaulina had given me the paperwork making me Peter D. Feeley's temporary guardian. \"She's already appealed, and to my utter shock, Leahy squashed it like a bug. With prejudice, too.\" Paulina said. \"I don't know what the hell is going on with all that. I've never seen anything like it. Good thing you called me and had me already on the move about it.\"\n\n\"Thanks to Cindy and her vibes.\" I said. \"But it's obvious why Farris is doing this--\"\n\nJust then FBI Special Agent in Charge Jack Muscone barreled in, his face as white as a sheet. He was followed by Sandra Speer, who broke off and went to hug her boyfriend Martin Nash (which is why I let him stay).\n\n\"How... how is she?\" Jack gasped.\n\n\"Have a seat.\" I said, indicating the space next to me. \"C'mon, sit!\" He finally obeyed, and I said \"She's alive, she's in surgery, we're waiting to hear more. Early word is that it's not life-threatening like Cindy was, but I'll believe that when I see it.\"\n\n\"And the baby? And Pamela?\"\n\nI said \"The baby is fine, despite an attempt to kill him, and another to kidnap him. Rudistan and Morton are guarding him now, and it will take nuclear weapons to get past them. Pamela... was killed in the initial attack.\"\n\n\"Oh, geez.\" said Jack. \"Wait... what kidnapping attempt?\" There was a chorus of agreement with the question.\n\n\"The head of Child Protective Services tried to take custody of little Pete and take him out of here. And right under my nose.\" I said. \"They must think I'm a stupid idiot and would not see what they are up to.\"\n\n\"But why?\" asked Teresa. \"Of course, I can ask that about this whole attack.\"\n\n\"Speaking of that,\" I said, \"it's time to go to work and figure it out. Captain Ross, take direct charge of this case. Get Detective Cummings and start putting the puzzle pieces together. Lt. Croyle, get your people to work contacting C.I.s and the like. See if there's anything else going on, or if this is meant to distract from something. Mr. Nash, you are the liaison to our FBI friends here. Stay with them, work with them on any traces of information. Jack, you might ask the Belfort Badge Gang Task Force if anything was going on recently.\"\n\n\"I don't have to ask.\" said Jack. \"You're going to hate me when I tell you this, but they told me yesterday that there was some activity on Belfort's network Sunday.\"\n\nI had to take in a breath, then I exhaled and said \"No, I don't hate you for that, Jack. You're sitting there hating yourself enough for both of us. Seriously, tell your Task Force People that moving like pond water won't get it done, and has gotten a Police Officer wounded and her mother-in-law murdered.\"\n\n\"That won't be all I tell them.\" said Jack. \"And then my boss will have his turn with them. You might get some leftovers.\"\n\n\"Good enough.\" I said. \"While you're at it, check up on Linda Farris, see if she's part of this group...\"\n\n* * * * * * * * * * * * * * * *\n\nI had sent Cindy out of the Hospital not only to take charge of the investigation, but also because I knew Tanya had a lung wound, and I did not want Cindy to re-live her own horrific experiences when any news came out.\n\nAt 2:15pm, that news came. Dr. Morgan came to the waiting room. \"May I see the Commander and the Chief?\" No one knew if this was good nor bad, but Chief Moynahan and I followed Dr. Morgan down the hall to a small exam room where he could show X-rays and stuff.\n\n\"I have good news and bad news.\" Dr. Morgan said. \"The surgeries went very well. As long as there is no internal bleeding that we missed, she should begin recovering. She has three wounds. One is in her left leg; it fortunately missed the bone and the big arteries and veins, and it's not too bad. \n\n\"The second, or probably the third, is in her right lung. She's very fortunate that it went straight through without severe damage. Captain Ross's damage came from an expanding bullet that hit in the wrong places and did a lot of tissue damage; Lt. Perlman is far more lucky.\"\n\n\"And the third must be the bad news.\" I said.\n\n\"Yes, it is.\" Dr. Morgan said. \"The third... hit her in her back. She must've been spinning when it hit.\" He pointed to a drawing of the lower back he'd posted on the whiteboard. \"It hit right here at the base of the spine, above the coccyx. It shattered these vertebrae, and cleaning that up was what took so long. But worse... her spine is damaged. I'm sorry, but I believe she will be paralyzed from the waist down.\"\n\nI felt the Chief put his arm around me as the agony went through my own spine.\n\n\"I'll tell the others, Commander.\" Moynahan said.\n\n\"No. No sir, I should be the one to tell them... especially Jack.\" I said, rallying myself, and steeling myself to do my duty.\n\nPart 9 - Spinning The Webs \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" yelled the lovely redheaded reporterette from outside Police Headquarters at 7:00am, Tuesday, February 4th. \"The Town & County Police Department remains in shock after the brutal attack upon Major Crimes Division Lieutenant Tanya Perlman and her family!\n\n\"Pamela Feeley was killed in the attack upon her home on the second anniversary of the death of her son, Police Corporal Peter M. Feeley. Lt. Perlman saved her baby son, Peter D. Feeley, by wrapping him in her Police armor vest. Lt. Perlman is in intensive care at University Hospital, but doctor's say she is expected to recover. Baby Pete Feeley will be released into the care of relatives later this morning, as he suffered only minor injuries.\"\n\n\"In a related story,\" Bettina continued, \"Governor Val Jared suspended Child Protective Services Director Linda Farris, after Farris attempted to gain custody of baby Pete Feeley without authorization. Judge Rodney K. Watts not only blocked Farris's illegal move, but recommended to the Governor that Ms. Farris be suspended until her actions are either explained or discovered. Ms. Farris has retained legal counsel and is not cooperating with authorities.\"\n\n\"The perpetrators of this horrific attack were chased down by Police, but are reported to have killed themselves after their vehicle was rammed by a Police cruiser. Police are investigating the case, but so far have no leads as to who is behind this attack upon one of their own...\"\n\n* * * * * * * * * * * * * * * *\n\n\"You must've been getting way too close to them.\" said the DepDirector of the FBI. We were in the Federal Building, in the FBI's hidden-away conference room. It was 10:00am, Thursday, February 4th. Present were himself, Jack Muscone, Sandra Speer, Lindy Linares, Eduardo Escobar, all of the FBI; myself, Chief Moynahan, Cindy Ross, and Martin Nash.\n\n\"We got a huge break with Vauxhall.\" I said. \"We shut it down, we shut down the John Clay Financial Services, the Castor & Pollux Enterprises, and you FBI guys were and are crawling up City & Counties Bank's ass. We got Steven Moschel, and he sang like a canary, so that whole organ donation ring is now being busted by your guys across 22 States. Hospital Director Alcott has confessed and cut a deal in exchange for her testimony.\"\n\n\"Not only that,\" said Jack Muscone, looking exhausted, \"we're pretty sure those four guys who attacked Tanya and her family were hired out of the Belfort Gang system. We're looking hard for any financial transaction that might've had a Vauxhall connection and a connection to Belfort. Or maybe we'll find the bastard Consultant's new payment pipelines, and can get something straight to him.\"",
        "\"The Coroner's reports states that the perps were drugged, amped up.\" I said. \"Similar patterns to previous hired hitters.\"\n\n\"What I don't understand, and would like to be enlightened upon,\" said the DepDirector in a prim voice, \"is why attack Tanya Perlman. Why her?\"\n\n\"Not her, not directly.\" I said. \"Her son. Pete Feeley's son. The Consultant was trying to kill the baby.\"\n\n\"And the steps that lead you to this conclusion?\" asked the DepDirector, his eyes boring into me. He seemed pretty peeved at something, I could feel.\n\nI turned to Cindy. \"Want a shot at the title?\" I asked.\n\n\"I'm not seeing it.\" said Cindy. \"It's your party.\"\n\nI said \"First of all, Feeley's badge was stolen from my office, and was left at the crime scene. A piece of paper was left in my office in the badge's place.\" I showed them a copy of the paper, with 'hampered' struck through. I also brought them up to speed on the previous notes and the progression of the strike-throughs.\n\n\"You'll also note the word 'Troilus' scrawled beneath the other words.\" I said. \"Troilus was the young son of King Priam of Troy in the Trojan War. Legend was that he had to be killed for Troy to fall. So the plan was to kill baby Pete Feeley as a prelude to the fall of Troy... that being me.\" I heard gasps as the mythology lesson was absorbed.\n\n\"Third was the kidnapping attempt when the house raid didn't kill baby Pete.\" I said. \"That was Plan B, somewhat desperate, and it failed as well. But it shows me that baby Pete is the real target, though I'm sure the bastard was happy to cause me and everyone else pain by killing Pamela Feeley and especially Tanya Perlman.\"\n\n\"Last, but not least,\" I said, \"they did not administer a head shot to Tanya to finish her off. I don't know if they knew if she was alive or not, but if they'd specifically wanted her dead, they'd have made sure. They didn't; ergo, she wasn't the primary target.\"\n\n\"Damn.\" said Jack, quietly. He was hurting, I could tell.\n\n\"So you are right, sir.\" I said to the DepDirector. \"I am getting close to the son of a bitch. Shutting down Vauxhall and its threads, and especially City & Counties Bank, has hurt him, and he has retaliated in this fashion. He missed the primary target, Pete Feeley's child, but he's killed and maimed everyone else along the way.\"\n\n\"And while we're distracted,\" said Sandra Speer, \"he'll be setting up new financial pipelines to launder his considerable hidden wealth.\"\n\n\"So we need to be looking for more pots of gold at the end of rainbows.\" said Lindy Linares.\n\n\"At least you have the Mouseketeers helping you.\" I replied. Lindy smiled. I had to explain to some of the others about Myron, Mary, and David.\n\n\"So, besides financial institutions, he could launder through property ownership.\" Jack Muscone said.\n\n\"Or through a large public University.\" Cindy replied, with considerable meaning in her voice. I nodded her way.\n\n\"Either way,\" I said, \"he has had, and will continue to have to go national with the kinds of money we're talking about. City & Counties Bank was just one of those institutions. I'm sure he has more, but they're likely out of State. And that's why we, meaning the TCPD, need your help at the Federal level.\"\n\n\"You've got it.\" said the DepDirector. \"Jack, this is your team's priority for right now, as if I have to say it. Let's help the Iron Crowbar take this bastard down.\"\n\n\"Yes sir.\" said Jack Muscone, his beady black eyes turning jet, dead to all but Justice...\n\n* * * * * * * * * * * * * * * *\n\n\"It's not just him, it's a huge organization that he's built.\" said Cindy as we drove back to Headquarters. \"That's why just killing him doesn't work. If you do, they just come after him in wave after wave... after wave after wave.\"\n\n\"Yep.\" I said. \"I have to weave my larger web around his web, then spring upon him at the right time.\" \n\nWe pulled into Headquarters. As we walked inside, Cindy said \"Commander, I want to stay in direct control of MCD for the time being, at least until we know more about Tanya's status.\"\n\n\"Sure.\" I said. \"But you need to think seriously about a succession plan.\"\n\n\"That's easy. It'll be Nash.\" Cindy said as we walked down the hall towards her office. To her surprise I followed her inside.\n\n\"Why Nash?\" I said, once the door was closed behind us.\n\n\"He's the only one anywhere near ready, sir.\" Cindy said. She sat down behind her desk as I sat down on the loveseat sofa. \"Joanne has tremendous potential, but she hasn't even been to Detective School nor Advanced Course yet. She's just not experienced enough yet. Ditto that for Teddy. So that leaves Washington, Torres and people in Vice. Purvis might could take over, but I don't think any of the others, including Theo and Diana, are good enough to actually take the leadership role in MCD. At least not yet.\"\n\nI nodded. \"Well, I'm going to have good thoughts about Tanya returning. I agree with you about Nash, but I'm surprised you haven't figured out why we need a Plan 'C'. And here is my Plan 'C'.\" \n\nI told Cindy what Plan 'C' was. She nodded, and I could tell she was trying to figure out why I needed to think past Martin Nash in the first place.\n\n* * * * * * * * * * * * * * * *\n\nNo sooner did I reach my office and sit down, when Helena told me I had two guests to see me. One of them was Lt. Teresa Croyle. The other was my nephew, Todd Burke.\n\nAs I had them sit down in the 'hot chairs', I said \"Since I don't see a ring on your finger, Lieutenant, I'm guessing this is a professional visit.\"\n\n\"Yes sir.\" said Teresa, not even blinking at what I'd just suggested. \"Todd and I talked about this last night, and I suggested he come and talk to you.\"\n\nI nodded, and Todd began: \"A few months ago, I talked to Lt. Perlman about beginning a deeper investigation of the murder of my brother Jack and his lover by her husband. We wanted to see if there was more to it than just a domestic situation.\"\n\n\"Yes, I know.\" I said. \"And as far as I know, she hadn't found out much that we didn't already know.\"\n\n\"We were wondering, sir,\" said Teresa, \"if this attack on Tanya might be related to her investigation of that stuff.\"\n\n\"Well, that's certainly a thought. My own theory is that since Pete Feeley's shield was stolen from my wall here,\" I said as I pointed to the wall to my right, \"and was placed in little Pete's crib, that he was the target more than his mother actually was.\"\n\nTeresa looked at Todd and said \"That's probably it.\" Todd did not seem to be convinced.\n\n\"Tell you guys what.\" I said. \"Todd, I'm sure you have your own resources, but Teresa, you can work with Todd and look into whatever Tanya had found on this. Get with Mary about accessing files so that others can't see what you're doing; don't trust your computers in your offices to be secure, either.\"\n\nThey nodded, and got up to go. \"One more thing, Lt. Croyle,\" I said. \"With Lt. Perlman hospitalized, you'll need to step up and help Captain Ross with the overall Detective leadership. I'm going to talk with her about bringing you more into the loop on MCD stuff as well as Vice. Those dinners Todd is cooking for you might have to be served a little later in the evening.\"\n\n\"Not much gets by you, Uncle Don.\" my nephew said with that grin of his.\n\n\"That comes from growing up with your mother as my older sister. I'm always watching behind my back.\" I retorted. \"You guys have a good day. Now, scoot.\" They left.\n\nPart 10 - Awakening and Gloom \n\nFriday, February 5th. I was called by my wife to come to University Hospital. The doctors had not sedated Tanya too heavily, and they expected her to wake up.\n\nAs I drove with Cindy in my Police SUV, she asked \"Was it like this when I was in the Hospital?\"\n\n\"No. It was much worse.\" I said. \"We didn't know if you were even going to live, and at one point you got pretty close, there.\"\n\n\"My father told me about that.\" Cindy said. \"He said he knew for sure that you were his nephew when you got to my bedside before he did.\"\n\n\"I think he knew already.\" I said. \"Anyway, Pamela's funeral is this afternoon at the Methodist Church. Are you going?\"\n\n\"Yes.\" Cindy said. \"The normal Police Honor Guard is going to be the pallbearers, by the way. I think Pete and his dad would've like that.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Tanya?\" asked Dr. Morgan, touching her shoulder. \"Tanya?\" \n\nWe were in ICU, and Dr. Morgan was waking Tanya up. Her head began moving slightly, and she opened her eyes. As is common, the first thing she did was try to reject her breathing tube.\"\n\n\"Relax, relax.\" said Dr. Morgan. \"That's a breathing tube. Just let it work... there you go.\" Tanya calmed down. \"You've got a couple of friends, here.\"\n\nCindy and I came up so that Tanya could see us. Tanya smiled as I said \"Well, there you are. Glad to see you back with us.\" Tanya smiled, then I saw the inevitable shock in her eyes, knowing what it meant.\u2028\n\n\"Relax, relax.\" I said. \"Pete is fine. He's with me and Laura. We're keeping him safe.\" Relief flooded Tanya's face, then she looked up inquiringly again. \n\n\"Pamela didn't make it.\" I said, again knowing her thoughts. \"She died in the attack. There's nothing you can do about that, so just try to relax. We're taking care of Pete, so don't worry about him. By the way, here is someone who knows what it's like to be where you are now.\" I backed away as Cindy talked to Tanya for several minutes.\n\nAs they did, I was remembering the evening before, as Laura and I showed Carole her new room. It was the bedroom facing the front of the house, which had four overall bedrooms. And Carole was now in the 'Why' phase of life.\n\n\"This is your new room, Carole.\" Laura said. \"Your own room! There's your bed, and your toys, and Bowser's basket.\"\n\n\"Why?\" Carole asked.\n\n\"Because Jim and Pete are in your old room, so you get your own.\" I said.\n\n\"Why?\"\n\n\"Because Pete is staying with us.\" Laura said. \"His mom is sick, so we're taking care of him.\"\n\n\"What about his daddy?\" asked Carole. Laura looked at me.\n\n\"His daddy is in Heaven.\" I told Carole. \"He died a long time ago.\"\n\n\"Why?\"\n\nNo way I was going to answer that one. Fortunately, little kids have a six second attention span. I took advantage of that by saying \"We'll talk about that later. Right now, you need to take your bath and go to bed. And there's Bowser, looking at his new room.\" Indeed, Bowser was sniffing around, and so was Buddy. Bowser was surprised to find his basket in the room. We wondered what he and Buddy would do.\n\n\"Is Pete going to get a dog, too?\" Carole asked.\n\n\"Not right now, Babygirl.\" Laura said. Her voice was just a tad acidic. \"We have enough dogs.\"\n\n\"He can share Buddy with Jim.\" I said. \"And you should be a good girl and let both of them play with Bowser, too.\" That did not go over very well.\n\n\"Bowser is my dog!\" Carole declared emphatically. Yep, she was her father's daughter, all right.\n\nBy the way, Bowser slept in his basket in Carole's room, and Buddy slept in his under Jim's crib, seemingly undisturbed by the new arrangements. People should be more like dogs, I thought to myself.\n\n* * * * * * * * * * * * * * * *\n\nThe funeral at the Methodist Church was fairly well attended. I wore civilian clothes, as did Cindy. Teresa wore her duty dress uniform, as did a number of the Uniformed Officers that had known Pete Feeley: Rudistan, Morton, Hicks.\n\nAmong the crowd was Pastor Westboro of First Baptist. He sat with his Council colleague, Kelly Carnes, and her dentist husband, who looked fairly nerdish; I had non-church-like thoughts that Kelly, a beautiful woman, was probably spreading her legs for other men. Actually, I was sure of it, but I digress...\n\nI also took note of who was not there, and who rightly should've been. And I realized I had work to do, but it would have to wait...\n\nWe also attended the graveside service. She had had to bury her husband, and then her son... something no mother should have to do. And now we laid Pamela Feeley to rest at Cemetery Hill, next to her husband. Their graves were on the other side of the hill from Pete's. After the ceremony, several of us Police Officers walked over to his graveside. The flowers I had left there had been removed, and another display in a small flowerpot was there.\n\n\"Doesn't seem right, sir.\" said Rudistan. \"Pete Feeley and now his mom, good people murdered, while bad guys are getting away with everything.\"\n\n\"Not everything.\" I said. \"And we're here to do what we can, Rudistan. We're gonna get the bastards behind this, and you'll be right there with the cuffs.\"\n\n\"Better not trust me, Commander.\" said Rudistan. \"He might not make it to County Jail, if you know what I mean.\" I smiled, knowing that he would be lucky if he made it into Rudistan's custody...\n\nPart 11 - Reckoning \n\nSunday, February 7th. Tanya was recovering well. The breathing tube was removed, somewhat to my amazement. She was going to be moved to a private room, as well. Dr. Morgan called me and asked me to come to his office in the Hospital.\n\n\"We ran the preliminary tests while she was half out of it.\" Dr. Morgan said. \"But we need to do the tests while she's awake. And I'll tell you now, Don... she's never going to walk again.\"\n\n\"What about her... bodily functions?\" I asked. One problem of paralysis not discussed is not being able to control doing one's business, or the body not being able to eliminate wastes without external help. I won't describe it here, but it's not good.\n\n\"Fortunately, she has most of that. A couple of vertebrae higher, and that might not've been the case.\" Dr. Morgan said. \"We're not sure about the sexual functions, though. But what I need right now... is for you to be there when we break the news to her.\"\n\n\"Sure,\" I said, \"but maybe Jack Muscone would be better?\"\n\n\"You can call him, but there is one thing I know.\" said Dr. Morgan. \"Your officers worship you, Don. Ms. Perlman did not arrange for custody of her son to be with anyone else. She may love others, but she trusts you. Having you there will help her through this like nothing else can.\"\n\n\"Okay.\" I said. I called Jack Muscone anyway.\n\nWhen he got there, we went to Tanya's room. I was tired of Hospital rooms, having seen Amy's life slip away over a month of visits with Buddy, and the pain-filled memories of Cindy's time here. But I was grateful for this Hospital, and its doctors and staff; without them some of my finest Officers, and some fine Fire Department people would be dead... and I'd been a patient myself.\n\nTanya was happy to see both of us. I told her that Pete was doing fine with Jim and Carole. Jack asked her how she was doing, and she said she was doing fine and wanted to get out of here.\n\nThey began running the tests. Tanya could move her arms, she could feel the pinpoints on her abdomen and most of her back. Then Dr. Morgan took the bandage off her leg wound, and I could see the stitching. \"Can you feel that?\" he asked, touching around the wound.\n\n\"Uhhh... no.\" Tanya said.\n\n\"Do you feel your toes?\" Dr. Morgan asked.\n\n\"Yes.\" Tanya said.\n\n\"Wiggle them.\" said Dr. Morgan. They didn't move. Tanya looked surprised.\n\n\"I feel them there, but I can't... move them.\" she said.\n\n\"Okay, don't try to move anything.\" Dr. Morgan said. \"Just relax.\"\n\n\"What's going on, Doctor?\" Tanya asked. I could see she was trying to move her toes again, and was failing. She looked up at me.\n\n\"But... but I can feel my legs!\" she exclaimed.\n\n\"Do you feel your wound?\" Dr. Morgan asked. \"Do you feel the pain from it?\"\n\n\"No, it doesn't hurt...\" Tanya said as Dr. Morgan brought a stool around and sat down.\n\n\"Ms. Perlman,\" he said, \"one of the bullets struck you at the base of your spine. The damage was pretty severe. We'll run more tests, but there's no way to say this but straight out: you're paralyzed from the waist down.\"\n\n\"No, I feel my legs!\" Tanya said, then looked at me. \"Don, tell him I can feel my legs.\"\n\n\"Tanya,\" I said, \"that's your brain playing tricks on you. It's telling you what should be there; it hasn't figured out yet that your legs aren't responding.\"\n\nIt was hitting her. \"How am I supposed to be a cop and help you catch bad guys?\" she asked. And then the tears started.\n\n\"Why don't we worry about that when the time comes.\" I said. \"Right now, Tanya, you need to think about getting well. One step at a time, okay?\"\n\n\"Don...\" Tanya said, her eyes pleading, \"I'm scared.\"\n\nMy heart went out to her, even as I knew I could not know what she was facing in her mind as well as her future. Still, I tried my best to assuage her fear.\n\n\"Try not to be.\" I said. \"I'm here to help you, Jack's here to help you, and Cindy and Teresa and everyone. We'll get through this, as the team we are. We're with you, and we're not going to abandon you. We will face the fear together.\"\n\n\"Yes, we will.\" said Jack Muscone. Tanya reached out for both our hands and squeezed them. After a moment, I put her hand on Jack's and said \"I'll let y'all talk while I talk to Dr. Morgan...\"\n\n* * * * * * * * * * * * * * * *\n\nLeaving the Hospital, I went to the building that housed the University President's office. I knew that University President Wellman was there... because he was meeting with my wife Laura as well as other Department Heads of the various Schools and Colleges. \n\nAs the meeting concluded and people chatted as they left, Laura went up to Dr. Wellman. \"Dr. Wellman, you are about to have a visitor.\"\n\n\"Oh? Who's that?\" asked Wellman skeptically.\n\n\"My husband. He wishes to talk to you about his Police Lieutenant that is in the hospital.\" Laura said.\n\n\"Well, actually I'm very busy and need to...\"\n\n\"Doctor.\" Laura said severely and formally. \"This is not a request. I'm just letting you know. You might want to just suck it up rather than keep him waiting.\"\n\nWellman stared daggers at Laura, but realized he was not going to get past the Iron Crowbar. He said nothing but his eyes showed that he was relenting. Laura went to the door and opened it, then left the room. A second later her husband walked in, his trademark red crowbar in his hand.\n\n\"You wanted to speak with me?\" Wellman said, acidly and formally.\n\n\"Yes, Dr. Wellman.\" I said. \"I want to know why you have not visited Tanya in the hospital yet.\"\n\n\"I... I've been very busy--\" Wellman stammered. \n\n\"I'm busy, too.\" I said. \"But I'm there for her because she needs me to be. She needs you to be there for her, as well. This is her darkest hour.\"\n\n\"I...\" Wellman said, then finally sucked up his resolve, and his courage. \"Look, Commander, there's not much I can do for her. You're caring for her child, you're leading your Police to find who did this...\"\n\n\"Dr. Wellman,\" I said, \"Tanya cares about you a great deal. In my opinion, way too damn much for her own good. But that's not my business. What is my business is seeing her get well. And for that to happen, you need to go visit her. You're her lover, you need to resolve your relationship with her.\"\n\nWellman's eyes had flashed anger at the 'too much for her own good' comment, and they about popped out of his head at my last remark. \"How dare you!\" he gasped. I was having none of it.\n\n\"I dare,\" I thundered, \"because she is one of my Police Officers, and I take care of my people. I do not leave loose ends, Dr. Wellman. If all she was to you is a sex object, you're going to tell her that. If it's more, and you're going to see her through this, you're going to tell her that. Whatever she is to you, you're going to tell her. You owe her that much. So... what is it going to be?\"\n\nWellman did not ask what the other options might possibly be, which was a wise move on his part. \"All right,\" he said, \"I'll visit her tomorrow.\"\n\nPart 12 - And Life Goes On \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" said the lovely redhead at 7:00am, Monday, February 8th. \"Channel Two News has learned that Town & County Police Lieutenant Tanya Perlman... is paralyzed from the waist down.\"",
        "The MCD room was full, and it was utterly silent as Bettina continued. \"Lt. Perlman's other wounds were not life-threatening, and she is recovering well from them. But the bullet that shattered her lower spine has left injuries that may never heal.\"\n\n\"The Police Department declined to make any statement concerning Lt. Perlman's position as the leader of the Major Crimes Division. The Sheriff and the Town & County Council also declined to speculate on her future with the Police Force.\"\n\n\"Damn,\" said Theo Washington, \"at least let her get out of the hospital...\" There was a murmur of agreement. Have I mentioned that I am not the only one who has cultivated a deep dislike of the Press?\n\nThere was the beginnings of speculation on what would happen in MCD, including who would be leading it in Tanya's absence. I simply told them that they still had me to deal with, and nothing had changed regarding that.\n\nYou may wonder why I did not shut the rumor mill down. There were a couple of reasons: first, I wanted to hear whose names came up. Martin Nash's did the most. Some speculated that Lt. Croyle would come over, and the Vice leadership slot would be filled.\n\nAnd then my second reason bore fruit when Captain Cindy Ross came in. She did not brook the rumor mill too well. \n\n\"Ladies and gentlemen,\" she called out, \"I want to hear no more speculation on this matter. You'll be notified of any structural changes at the proper time, and all these rumors do nothing for our mission nor Lt. Perlman's health.\" That pretty much silenced the room again.\n\n\"All right,\" I said, \"everyone get back to work. By the way, unless Ms. Perlman is in your direct chain of command, let her get out of the hospital before visiting her. She needs to rest and recover. Those who do visit, keep the visits short, and be positive in her presence. Carry on.\" I turned to go.\n\nAs I went through the door I heard Cindy say \"Mr. Nash. My office.\" I knew what that was about, as Cindy had told me. She was going to tell Nash that she was temporarily putting him in charge of MCD for the time being, though without title. I stayed back, letting her do her job.\n\n* * * * * * * * * * * * * * * *\n\n\"Hello, Tanya.\" said Sidney P. Wellman as he came into Tanya's room. He was carrying no flowers nor other gifts.\n\nHer face broke into a smile when she saw him. \"Hi, Sidney!\" she said happily. \"I was hoping you'd come visit me.\"\n\n\"Yes.\" he said, then added, \"I wanted to let you recover before I bothered you.\"\n\n\"You're never bothering me.\" Tanya said. \"Have a seat.\"\n\n\"I...I really can't stay.\" said Wellman. \"I just came by to see how you were doing, and...\" Tanya peered at him as he stopped speaking, his face falling.\n\n\"It's okay.\" she said.\n\n\"No, it's not.\" said Wellman. \"I can't tell you how terrible I feel about this... about you being wounded, and Mrs. Feeley being killed. And... well, I know you'll think badly of me for saying this now, while you're still in the hospital... but you know I can't be here for you the way you want me to be... the way you've wanted me to be.\"\n\n\"I understand.\" she said, understanding, and trying to hold back her emotions.\n\n\"I want you to know,\" Wellman said, \"that it could not have been what you wanted even before all this happened. I think a great deal of you, Tanya, but it was an affair.\"\n\n\"I appreciate you coming to tell me.\" Tanya said. \"A lesser man would've just walked away.\"\n\nWellman gave a brief smile. \"You're a very special lady, Tanya. And I know you'll still do great things, no matter what your condition is.\"\n\n\"Thanks.\" said Tanya as Wellman kissed her forehead. \n\n\"Take care.\" he said as he left the room. Tanya watched the door a moment, and was surprised but not surprised when it opened again, and Dr. Laura Fredricson came in.\n\n\"How are you doing?\" Laura asked, sitting down on the stool next to the bed.\n\n\"I... I'll be all right.\" Tanya said, knowing full well why Laura was here, and the real Power of the Crowbar that was behind both Wellman and Laura's visits. \"I'll be all right. I... I knew it, in my deepest soul... but now it's out there. So it's done.\"\n\nIt wasn't done, and Laura knew it. She stayed and talked to Tanya for a considerable time...\n\n* * * * * * * * * * * * * * * *\n\nIt was dark outside as I finished up the paperwork. I was waiting for the Chief to go home. It had been a long, long day. Corporal Feeley's badge was back where it belonged, on my wall; it was technically still evidence, but the Crime Lab had done all they could with it and had brought it back to me. They retained the Laika crowbar in the Crime Lab for the time being.\n\n\"Come in!\" I said as I heard a knock on the door. I looked up to see Chief Moynahan come inside.\n\n\"Chief!\" I said, rising out of my chair.\n\n\"Oh, sit down, sit down.\" he said as he came to a 'hot chair', \"and I'll do the same here, if you don't mind.\"\n\n\"Please.\" I said. As we sat down, I noticed him looking at Feeley's shield.\n\n\"So, Mr. Crowbar,\" he said, \"would you mind sharing a little of whatever you have in your drawer?\"\n\nI smiled and brought out two drink glasses. \"What'll it be? I've got bourbon, Scotch, and Canadian Whisky.\"\n\n\"I'll try the Canadian.\" Moynahan said. I poured two shots. We toasted and drank.\n\n\"Ah, that's good.\" he said. \"Of course I knew you had something in your drawer because I have yet to meet a Police Captain or higher that doesn't have at least one bottle of something stashed away... for medicinal purposes, of course.\"\n\nI grinned again, but said nothing, letting the Chief come around to his purpose of conversation.\n\n\"You know, Don,\" he said, \"I never lost anyone directly under me while I was at Midtown PD. Never had anyone wounded as badly as Ms. Perlman was, much less Ms. Ross. The Army was a different story, of course. What I wanted to tell you is that I know its hurting you inside, but don't let it eat you up. As you know, what's done is done; all we can do is move on, help our wounded heal up, and get the bad guys.\"\n\n\"Yes sir.\" I said. \"And don't worry, it drives me but it doesn't consume me.\"\n\n\"Good.\" Moynahan said. \"And I'm very impressed with how you've handled this, and everything else that has happened. I've got to admit, when I was in Midtown and I heard that a barely-thirty-year-old man was becoming second-in-command of a not-insignificant Police Force, I thought it was crazy. And it would've been crazy... for anyone else.\"\n\n\"Thank you, sir.\" I said. \"It's not all that crazy, though. I think of D-Day... those 22-year-old Lieutenants, 26-year-old Captains, if that.. leading men into that machine gun fire on the beach, then up that mountain at Point du Hoc. Leadership far beyond anything I'm doing.\"\n\n\"I'm going to call Chief Griswold and get that quote of his about modesty.\" Moynahan said as I poured two more shots. \"Anyway, we're getting short-staffed around here. The Council is already badgering me and the Sheriff about who is going to take over Lt. Perlman's position. They are a cold-hearted bunch of bastards. The Sheriff can act indignant with them, and he did. Put 'em to shame. Me, I just told them to ask the Iron Crowbar. Funny thing, they shut up completely after that.\" I just nodded knowingly.\n\nHe continued: \"But they do have a point. If Perlman were a Captain, we'd put her in a wheelchair-accessible office and give her paperwork to do. But she's not. The Council has reservations about the job she'll be able to do, even if she fully recovers otherwise. It's brutal, but that's the world we live in. Life goes on, and the Council is right in that we have to keep on going. And I'm afraid that it is going to fall upon you and me to make that happen, as painful as that is going to be. It's just such a waste... Lt. Perlman was a very talented Detective.\"\n\n\"I've already got a plan, sir.\" I said. \"And I hate to waste great talent...\"\n\n* * * * * * * * * * * * * * * *\n\nWednesday, February 10th. It was time.\n\nJack Muscone entered Tanya Perlman's room, bringing some red roses. \"Aw, that's sweet.\" Tanya said as he kissed her forehead and sat down beside her in the chair by the bed.\n\n\"How are you feeling?\" he asked.\n\n\"Okay.\" Tanya said. \"They're going to release me soon. Well, it'd be more accurate to say they're moving me to the rehab wing on the other side. The beds are normal, it's not as much like a hospital, and at least the view is better, so I'm told.\" The windows on that side looked south, with a better vista than the north side, which looked at the Campus and the Stadium.\n\nJack noted Tanya was looking down. \"Feeling okay? You're looking a little down.\"\n\n\"I'm just tired.\" Tanya said, attempting to hide her depression over Sidney P. Wellman. \"Bored, too. Five hundred television channels, and not a God-damn thing on that's worth watching. I'm reading books, but that gets tiring too, especially when I can't move.\"\n\n\"I'm sure it's tough.\" Jack said\n\n\"And of course,\" Tanya said, \"I have to sit here and wonder about my future. I've heard that the Council is already asking about replacing me, and that makes me wonder what my future is going to be. I love being a cop, and working with Don and Cindy and Teresa and all my MCD guys. Now... I can't even help.\"\n\n\"Nonsense,\" said Jack, knowing the real situation about the police situation, and also about Wellman. \"Look, don't let anything get you down. And it's times like this that you find out who loves you, and who doesn't. And while that can hurt, in the long run, you're better off for it. You've got some friends that love you very much. The Iron Crowbar takes care of his people like no one I've ever seen, and you will always be one of his people. And that goes for me, too.\"\n\n\"Thanks.\" Tanya said, a bit dully. \"I do appreciate it, even if I'm cranky and feeling down.\"\n\n\"Well, we can't have that.\" said Muscone, getting up. \"Maybe this will cheer you up.\" He went to the door and opened it. Right on cue, Your Iron Crowbar walked into the room with a precious bundle in my arms.\n\n\"Pete!\" Tanya gushed upon sight of her son, her eyes practically bulging out of her head as they lit up, the rosy color coming back into her cheeks, her cherubic smile radiant. \"Oh my baby!\" she said as she reached for him. I put him in her arms.\n\n\"Oh, my baby, I love you so much!\" she said as she hugged him. Then I noticed that she went quiet, her head down. As I looked on, I noticed that she was crying, silently sobbing as she held him to her. I went up and put my hand on her shoulder, more the back of her neck and head, to let her know I was there for her.\n\nFinally, her eyes shining and tears streaking down her face, Tanya finally looked up at me and said \"Thank you. For everything.\"\n\n\"Least I can do. It was you that saved him, Tanya. You saved him.\" I said. She nodded, more tears flowing down her cheeks, understanding my words and my acknowledgement of her heroism and self-sacrifice.\n\n\"It was... it's worth it.\" she said. She then turned back to her son. \"Oh Pete, I'm so happy to see you...\"\n\n\"I'm going to go check in with Dr. Morgan.\" I said. \"I'll be back in a minute.\" I left Tanya and Pete alone... with Jack, who was still sitting by Tanya's bedside.\n\nAfter a few minutes of playing and talking with Pete, accompanied by tears at times, Tanya said \"I don't know how I'm supposed to keep up with this guy when he starts running.\"\n\n\"You'll do fine.\" Jack said. He then said, more seriously, \"Tanya, I want you to know something.\" She looked over at him and he said \"You won't have to do this... alone.\" She fully understood what he meant...\n\nPart 13 - Another Death In The Family \n\nFriday, February 12th. The workout with Sergeant Tate and the run with the ROTC Cadets had been tough. I'd surprised Sergeant Tate with a few new Aikido-related moves. That had started a discussion that it was time for both of us to up our games, and we both agreed to get some extra training. Sergeant Tate liked my idea. Then, when it was time for the run, he told the Cadets that today was 'Run the Iron Crowbar into the ground Day'. But they did not run me into the ground.\n\nBack at Headquarters, I did my 'three Ss' in the locker room, then went to MCD. Detective Martin Nash was already there, making coffee.\n\n\"Ready to lead MCD, Martin?\" I asked.\n\n\"I'll step up, sir.\" said Nash. \"But I hope Lt. Perlman can come back, and soon.\"\n\n\"Me, too.\" I said. Just then, I heard a whirring noise coming down the hallway. Curious, I looked out and saw Mrs. Veasley, the woman from the 'Going Rogue' case, driving her wheelchair at a high rate of speed down the corridor, with a Patrol Officer from the Duty Desk trying to keep up without running.\n\n\"Ah, there you are, Commander Troy.\" Mrs. Veasley said in her authoritative way.\n\n\"Uh, sir,\" said the Patrol Officer, \"Mrs. Veasley asked to see you.\"\n\n\"That's fine, Jones. You can go back to the Duty Desk.\" I said. As he left, I said \"Come into my office, Mrs. Veasley.\" I led the way, and she drove into my office, parking herself next to the sofa. My offer of coffee or tea was politely refused.\n\n\"So, Mrs. Veasley,\" I said, sitting down behind my desk, \"what can I do for you?\"\n\n\"I'm not sure, Commander,\" said Mrs. Veasley, \"but you must trust me when I say that I had a very strong feeling that I needed to come here this morning. Ms. Ross will be needing my help.\"\n\n\"Oh?\" I asked. \"Any idea what about?\" Just then, my Police cellphone rang.\n\n\"I believe you're about to find out.\" said Mrs. Veasley. I answered the phone.\n\nIt was the Police Chief of the Nextdoor County Police Force. And indeed, his words revealed all. He said that one of his county's Sheriff Deputies was bringing Molly Evans and her children here, to my Police Headquarters. He told me why. After a moment of conversation, I hung up.\n\n\"I think I understand now.\" I said. I told Mrs. Veasley the news. She nodded. I immediately called Chief Moynahan and Lt. Wes 'Coldiron' Masters, then another call to Laura...\n\n* * * * * * * * * * * * * * * *\n\nThirty minutes later, Molly arrived. I hugged her as Mrs. Veasley took charge of Ian, holding and admiring him. I took Ross, who seemed happy enough to see me. Moments later, Laura came in with paperwork.\n\nA moment later, Cindy came in, Teresa following. \"My goodness,\" said Cindy, \"you've got a party going on in here, Commander. Hello, Mrs. Veasley, it's nice to see you again.\"\n\n\"I am happy to be able to be here to see you, Child.\" said Mrs. Veasley. \"Commander, why don't you take care of business while we wait here.\"\n\n\"Yes, a good idea.\" I said. \"Cindy, Molly, come with me, please.\" I led the way out of my office and to the Chief's office nearby. The Chief called out for us to come in. Lt. Masters was also in the room... as was Police Chaplain Father Romano. Molly wavered upon sight of him, and I gently squeezed her arms to bolster her; she understood.\n\n\"Have a seat, ladies.\" said the Chief.\n\n\"What's this about, Chief?\" Cindy asked. Molly's face was already showing what she knew was coming. Cindy looked puzzled; she had no clue, I realized.\n\n\"Commander?\" asked the Chief, knowing that this should come from me.\n\n\"Yes sir.\" I said. Turning to Cindy and Molly, I said \"Ladies, I am sorry to inform you that I have received news from Canada. Your father passed away last night...\"\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/six-degrees-ch-02"
}