{
    "title": "The Intern Pt. 03",
    "pages": [
        "There's nothing like being left alone. It can feel great when you need it, and it can rip your guts out when you don't... even though it's the very same thing. I had messed up my unpaid internship by accidentally fondling the ass of the CFO in the elevator, on purposely giving him a blowjob in his office, and then recreationally doing an on-camera remote masturbation session with him... in his bed. Then, I told him about the fun facts of my freakish bear trap vagina that closed up whenever anything tried to penetrate it, because he was too good of a guy not to tell him and let him get involved with someone like me. Then, nothing. I was left alone. Again. Life went on. I delivered food, pretended to be on important calls with audiobooks, and counted down the days until I could get control of my trust fund. It wasn't even that hard. I had nothing left. I just didn't care anymore. \n\nI know you're wondering about the stick he gave me. The thing he gave me to care for. Believe it or not, it didn't die. I changed the water a couple times. I didn't have anything to mist it with, so I just ran it under some water every day and that seemed to be good enough. It hadn't changed much. It certainly hadn't changed into the beautiful flowering branch that Forrester drew on the sheet of paper with my name on it at my cubicle. His kind gesture in the vase at my desk was still just a stick. Sometimes, despite our best intentions and all the faith in the world, a stick is just a stick. \n\nForrester had ghosted. A week had gone by and I never saw or heard from him. He never called me after I turned off my phone and left his condo without the shirt I'd come to get. No chat notifications, no flirty texts, not even a lunch order... and that was good, of course. That was great, even. It was just what I wanted. I was fine with that. I never had patience for that whole thing where two people who didn't connect had to pretend at the office that everything was fine. Why can't it be fine that everything isn't fine? What is it about a workplace that requires fake fineness? \n\nYou know who else didn't play the fake fineness game? Trudy. That woman? She just let her not-fine flag fly. \"Where's the shirt?\" she asked one day, as I handed her her Strawberry Poppyseed with Chicken salad. \n\n\"What shirt?\" I asked, too thrown off to remember to be on a call with Valerie Solanas. \n\nShe raised a skeptical eyebrow at me. \"The shirt Mr. Forrester lent you. The shirt you were *supposed* to leave in his bathroom. The shirt you *said* you would bring back a week ago. Mr. Forrester keeps six white dress shirts in his cabinet at all times. There have been only five there for a week now. So, where is the shirt?\" she snapped. \n\nI shrugged. \"I dunno. Ask Forrester. It's his shirt.\"\n\n\"I can't. He's been working from home and is only available for emergencies. So, you're saying Mr. Forrester knows where the shirt is?\" \n\nI sighed and pinched my nose. \"He asked me to go to his place for a shirt. I went. If it's not in his cabinet, that's his business.\" \n\n\"He had you go to his place?\" she said, her eyes sharpening as if she had finally caught the lie in my dastardly shirt plot. \"Alright, then... what is the doorman's name?\" \n\n\"Daryl was on duty when I went,\" I said, picking a sleep seed out of my eye with my middle finger. \"Big guy. Looks like Idris Elba. Hates durian.\"\n\nTrudy's face changed slightly, concern coloring her eyes. \"You really have been there, then...\" she said. She shook her head. \"He's never worked from home this long before. The last time he disappeared this long was when his wife...\" she trailed off. \n\nMy stomach lurched. \"When his wife what?\" I asked. Not that I really cared about what Forrester's wife did. A wife which Forrester apparently had. Not my business, really. It's just that the wives of gods tend to take it badly when mortals grab their husband's ass, give them a blowjob, and then masturbate in their bed. Other than that, I was fine with Forrester's wife. Fine. Fine, fine, fine.\n\nAny charming and informative answer Trudy was getting ready to give me about Forrester's wife was pre-empted by her phone ringing. She answered it and I began pushing my cart away to go hand out more lunches. The cart was stuck, though, because for reasons unknown to me, Trudy was holding onto it.\n\n\"Yes, she's here... no, she didn't bring you a Green Goddess... yes, it's been piling up - do you want me to... okay... okay, will do. Say, did she ever return your shirt? Mmm hmm... uh huh... yeah... say, are you going to end this bullshit story anytime soon? Yeah, I didn't think so... I'll send her over with it this afternoon, she can pick up the quarterlies then and bring them in tomorrow. Anything else? Okay... yeah, well not if I see you first.\" Then, Trudy ended the call and looked up at me. \"Come back here at 4:00 - you'll be bringing his mail to his place, picking up the quarterlies and bringing them to me tomorrow. Tell Daryl you're there for the arm-wrestling championship.\"\n\nThat evening, Forrester's door opened before I even knocked... Daryl must have told him I was coming after he showed me how to 'hook' to leverage my opponent into using their bicep instead of their pectoral muscles to keep their arm from being pulled down. Daryl also clarified for me that kicking your opponent in the balls was not regulation play in the world of arm wrestling. \n\n\"Here's your mail,\" I said, holding it out to Forrester and keeping my eyes fastidiously on the hall outside of his apartment. I felt him take the bundle from me, and then it somehow felt right for me to examine the rug in the hall. Yup. It was definitely a rug. I noticed in my peripheral vision that his feet hadn't moved. He was also barefoot. It's strangely intimate to see a person's bare feet after you've only seen them in the armor of business shoes. Why hadn't he said anything yet? Was he looking through the mail? \n\nI chanced a look up to his hands to confirm the mail theory, but they were just jammed in the pockets of his jeans. The mail sat un-examined on a small table next to the door. He really should say something, I mean, this was just intolerable. Even if you're pretending everything is fine, you say something when someone comes to the door with a bundle of your mail. How was I supposed to know whether to be on the offensive or defensive if he didn't say anything? \n\nI thought about just leaving, but then I remembered that I needed to get the quarterly reports for Trudy, and somehow telling her that I didn't get them was a fate worse than standing in front of the bare feet and jeans of the man who last saw me masturbating in his bed. I wasn't sure if the rest of Forrester's body was even there, really. I looked further up his torso, and saw he was wearing another dress shirt, but this one was looser... because it was unbuttoned completely, showing his chest and stomach with a slight line of hair going from his navel down under the band of his jeans. Holy mother of god. A slight whimper came out of my mouth, but I coughed quickly to cover it and went back to examining the hallway. \n\n\"Um... Trudy said you had the quarterlies for me to take back...?\" I said, now completely unable to focus on any particular feature of the hallway, so my eyes were just flitting around like a butterfly jacked up on espresso. What was wrong with him? Say something you freakishly sexy psychopath! Don't just make me stand here and look at this stylish, yet inoffensive, hallway! I took a deep breath, looked up to his face, and got ready to give him a profanity-laced etiquette lesson when I froze. \n\nForrester was grinning. Then, laughing softly, he pulled his hand out of the pocket of his jeans and checked his watch. Then, he nodded and put his hand back in his pocket and looked at me again, this time not grinning, but smiling warmly at me, as if I was his favorite thing in the world. \"I was wondering how long it would take for you to look at me. Come in,\" he said, and then turned around and left. \n\nOff-balance and still a little perturbed, I stepped out of my shoes and padded after him. The place felt different with him there, still mysterious in a way, but less forbidding... like the place knew its master was home. I followed the noises and smells of cooking to the kitchen, where Forrester was moving a pile of chopped tomatoes from a cutting board into a pan sizzling with onions, garlic and olive oil. I stood in the entry to the kitchen, uncertain of what to do. \"Trudy's worried about you... you haven't been in to work,\" I said. \n\n\"I haven't,\" he said, pouring some wine into the pan and giving it a slight shake. \"I suffered an acute bout of priapism after our last phone call and it seemed a good idea to work from home until my condition stabilized.\" Worried, I quickly looked up \"priapism\" on my phone and blushed as he stirred the pan with a smirk. \n\n\"I would think your wife would have helped you with that,\" I said when he turned to look at me. \n\nHis smile faded slightly, then returned with a wistful look. \"I daresay she would. Mind you, I never looked twice at another woman while she lived, but she did love a good hard cock.\"\n\n\"You're widowed...\" I said, stunned and at a loss.\n\n\"Yes... cancer,\" he said, turning back to the tomatoes in the pan. \n\n\"I'm sorry, I didn't know... I just didn't want to... you know,\" I said, sliding onto a stool near the kitchen island where I could watch him cook. \n\n\"I know. Context... one of the many benefits of having dinner before orgasms... that's why we're eating together now,\" he said, taking a wineglass down from a rack, filling it and placing it in front of me. \"When Kelly died three years ago, I couldn't seem to look people in the eyes without randomly breaking into tears, so I just stayed home for a while. It was Trudy that gently facilitated my return to the office,\" he said, suppressing a smile. \n\n\"Gently? How? With a pitchfork?\" I muttered. \n\nForrester nodded, laughing. \"Pretty much... Trudy also got me involved in some volunteer work to keep me busy. Something different to get me engaged in life again. I'm grateful she did. Here, tear these up, big pieces...\" he said, putting a pile of green leaves in front of me. \n\nI began tearing the soft leaves and a wonderful fragrance wrapped itself around my head. \"Basil. Mmmm...\" I said, quickly tearing the rest of the leaves as he drained pasta into the sink and dumped it into the simmering tomatoes. Forrester took the basil away and put it in with the pasta, tossing all of it together in the pan with an expert circular motion. \n\nI sipped my wine as he turned and poured the pasta onto two plates, sprinkling shredded cheese over them. He didn't fumble or hesitate in the kitchen, but every movement was efficient and precise, like he had done it hundreds of times. \n\nI followed him out onto the terrace where he put our plates onto a small table set for dinner in front of a curved and cushioned loveseat. We slid down onto the seat next to each other and leaned back, enjoying the view. Well, I enjoyed the view... for reasons I didn't understand, Forrester just looked at me. After seeing me becoming self-conscious under his examination, he smiled again and began eating, nudging me to do so, as well. \n\n\"Oh my god...\" I moaned after the first bite, \"this is so good.\"\n\n\"I know,\" Forrester said through a mouthful of pasta, \"I've never had basil torn this well before...\" I giggled and bumped his shoulder with mine. He grinned again, and I noticed the fine lines beginning to form around his eyes and I found them comforting and warming me at the same time. They told me that he was no fool, that he had seen life and life had seen him, that he knew what he wanted. Sitting so closely, I could smell his freshly-showered scent... the only time a man smelled better than he did while he slept. Had he been thinking of me while under the hot spray, soaping his body? It just didn't make any sense. I needed this to make more sense. \n\n\"I'm sorry, but... um... we weren't cut off the last time we talked, were we? You heard what I said after... you know?\" I asked, unable to bear my confusion any more. \n\nForrester stopped eating and put down his fork. \"We were cut off... but only when you ended the call. I heard... and I'm so sorry,\" he said, turning to look at me. \"I can't imagine what that's been like for you... or how hard it must have been to tell me that.\" He took his wine and leaned back into the seat with me. \"Gillian that's... that's not something that... what I mean is, you deserve more than that. Have you talked with a doctor about it?\" \n\nI gave a mirthless laugh and took a drink of my wine, leaning back into the seat facing him. \"Let's say I was brought to doctors about it,\" I said, seeing a shadow cross his face at the way I phrased it. \"Some said sex always hurt for some women and I just needed to accept it, some prescribed anti-anxiety meds that didn't work, another thought a numbing cream would do the trick...\"\n\n\"Yeah, but what would you even feel if...\" Forrester began.\n\n\"I don't think my sexual pleasure was at the top of anyone's mind at the time,\" I said, drawing my legs up on the loveseat, hugging my knees to my chest. \"And after I was no longer... I mean, after I was on my own... I just didn't see the point.\"\n\nForrester frowned, then pulled my legs across his lap, looking at me to see if I was okay with it. I nodded and sipped my wine. \"I heard what you said... and that was the real reason I stayed home this week. I wanted to learn and understand more, so I took some time off. I needed more data... and you really shouldn't sit around googling \"vaginal spasms\" on your work computer if you don't want a visit from HR,\" he said. I chuckled, and he pulled my feet up into his lap and fed me some pasta from his plate. It tasted better than the pasta on my plate, somehow.\n\n\"You've been googling about vaginas for the last week?\" I asked, incredulous and strangely touched. \n\n\"Well, yes... and what you described sounded a lot like a condition called 'vaginismus.' It's when the vaginal muscles spasm when something penetrates... or tries to penetrate. It can be triggered by emotional factors, painful sexual experiences, or things like sexual abuse or trauma,\" he said, looking troubled and then glancing over at me. I, in turn, kept my face as impassive as a dead high-stakes poker player and didn't offer any explanation of which of those things might apply to me. He took a breath and nodded, taking a sip of wine before continuing, \"So, then, after that, I started calling around to gynecologists to try to find one that knew about vaginismus and sex-related pain - and not just in theory, either. I wanted someone who really seemed to be personally pissed off at it.\" \n\nHe paused. Why had he paused? I'd stopped breathing waiting to hear what he said next, and he was just sitting there looking at me hesitantly, like a dog expecting to be kicked. \"Well?\" I prompted. \n\n\"I think I've found someone who can help you. When I spoke with her, she said that if it is vaginismus, it could be months, maybe years of therapy, but that many people overcome it. And in the excitement of things, I'm afraid I overstepped and I... I booked an appointment for you next week.\"\n\nI exhaled. My carefully crafted plan of avoiding people for the rest of my life was crumbling before my eyes. Relationships, a family, a real sex life... all the things that were torn from me in the education of my youth, suddenly spread out before me like a feast. The fluttering, chirping hope of all these precious things handed to me in a few easy words. Shaking my head, I clutched the neckline of my sweater and pulled my head inside it and screamed through my clenched teeth. \n\n\"You're... upset,\" he said, from outside of my sweater cocoon.\n\n\"I'm furious at Emily Dickenson,\" I seethed.\n\n\"Yes... well, naturally...\" he said, obviously humoring the crazy girl who had her head inside her sweater.\n\nI explained. \"She wrote this fucking beautiful poem about hope, like it's a bird and singing inside us and lifting us up, never stopping, no matter what comes. Then she wrapped up the thing by saying that the bird never asked anything of her. Like it doesn't cost you anything to hope,\" I said, poking my head turtle-like out of my sweater and looking at him. \"That's a fucking lie that an agoraphobic shut-in told herself. It costs you *everything* to hope... especially after you've given up on hoping... because it means you've got something to lose again... that you can hurt even more than you have already.\"\n\n\"But, isn't it better to have hope of having something worth losing than having no hope?\" he asked, just like a rich guy who knew nothing about real loss. Before I could say something snarky about privilege, he continued. \"What I mean is, when Kelly got sick, she was stuck at home. No energy, low immunity, you know? When she'd just had a chemo session especially, she was just wiped out - physically and emotionally. After a while, she just wasn't herself. And no wonder... I mean, she couldn't do most of the things that she used to enjoy. Watching her disappear like that was almost more frightening than the cancer, because the spirit that was inside her - the thing that I loved the most - was fading. And without that spirit, what was the point?\" he said, looking at a spot on the sofa near the window looking out onto the rooftop garden. Looking at the garden, I noticed that all of it seemed to be designed to face that one point where he was looking.\n\n\"So, that's when I started this garden. Just that hibiscus over there at first,\" he said, pointing to a potted bush. \"I wanted to give her something to look at other than videos or an empty rooftop where we couldn't throw parties anymore,\" he said, looking around at the rooftop, as if remembering it filled with people. \"When I got home from work, she told me about a hummingbird that came to it... and she was smiling,\" he said, a proud look warming his face. \"This garden didn't extend her life, it didn't make her suffering disappear, it didn't fix anything, really... but it gave us hope. She had hope of getting a picture of a Baltimore Oriole in the bird bath, or watching the baby robins fledge from the nest they built... little things like that. I had hope of seeing her eyes light up as she told me about something that happened in the garden each day. Hope feeds the spirit... draws us out of ourselves... even if it doesn't always fix things, hope gives our lives worth, no matter how short they may be.\"\n\nWe sat quietly for a while, him gently rubbing my feet, and me feeling weird... humbled. I had been through so much that I felt like I was the world's only authority on pain and loss, but talking with Forrester made me realize that maybe I wasn't all alone. Maybe it was a crowded field of expertise. \"So, that's why you tried to help me... to give me hope,\" I said, quietly. \n\n\"Well... I did it because I could. We can't always do things about the suffering around us. I watched my wife die, feeling so horribly useless that it made me realize what a gift it is when we're actually able to help someone. I have the privilege of being able to do some things that not everyone can... like call doctors and have them pick up the phone. I did it because I cared about what you said. Caring is the blood that flows through the spirit. It's good to care, even if it makes you hurt... or even bleed sometimes. I did it because... it shouldn't hurt you to let another person inside.\"\n\n\"And here I was, just thinking you wanted to have sex with me...\" I said, looking up at him over my wineglass.\n\nHe acknowledged my point with a head tilt and a wry smile, taking my hand and sliding my legs off his lap, \"Well, for tonight, how about a dance?\" he asked softly, standing and drawing me up with him. \"Alexa, play Sting's 'A Touch of Jazz\" album,\" he said in a louder voice. Alexa acknowledged his request and a quiet jazz song that I didn't know began playing softly all around us. ",
        "I swallowed felt my gut begin to tighten again as he took me in his arms and held me against him, the stubble on his jaw brushing my temple as we swayed to the music. This didn't feel like anything I understood... calm, effortless, and yet irresistibly intimate. It wasn't rushed or carefully defined or emotionally guarded. It slipped under my skin and told me all my secrets from inside. It was wonderful... and I was absolutely certain that I was going to screw it up. \n\nI lifted my head from looking at his hand holding mine against his chest, ready to say that I had to go because I was tired... or late for something... or anything... anything that would let me get a measure of control over the situation, but then he tipped his head down and his lips brushed against mine. Kissing me softly, slowly, warm and wet, his breath shaking almost as much as I was. \n\nKissing usually makes me close my eyes... an almost irresistible impulse for me, but this time I couldn't stop watching Forrester bending his head and dipping to my mouth to taste it, like it was an exquisite morsel. Maybe I couldn't believe what I was seeing, or maybe I thought it would become a dream if I dared close my eyes, but I just stared as he moved his lips over my face, feeling his breath lightly fall on my skin as he did. \n\n\"So...\" he said against my lips, opening his eyes and not seeming surprised at all that mine were still open and watching him. \"I seem to be touching you... does this mean you no longer think I'm a stranger?\" he asked, now moving his lips along the line of my jaw. \n\nI let out a silent laugh. \"Stranger than most...\" I murmured. \"I tell you I can't have sex with you, and now you're kissing me. For a numbers and data guy, you're completely irrational,\" I mused.\n\n\"Ah, the certitude of youth... I'm not irrational at all. I'm kissing you because I want to kiss you, and because you want me to kiss you,\" he said, returning to my lips and flicking the tip of his tongue between them with the next kiss. I sighed happily. I really did want him to kiss me. I felt like a budding flower each time one of his kisses fell down on me like a warm raindrop.\n\n\"It's so nice... kissing,\" I said, opening my mouth slightly for him to kiss me more deeply. \"Why are you so good at kissing me?\" I asked, not even understanding what I meant.\n\n\"Practice, love,\" he said, bending to nip my neck as my head fell back. \"In my mind, I've kissed you thousands of times, since I saw you in that elevator.\"\n\nI shook my head with a smile, leaning my head back against his chest, my forehead fitting into the curve of his neck. \"I don't believe in love at first sight. Lust, maybe, but not love. You saw a girl in a fuzzy sweater with nice breasts and free food. I was a pipe dream in that elevator... but, you didn't have nearly enough data to be in love with me, CFO.\"\n\n\"Didn't I?\" Forrester said, looking down at me with secret amusement in his eyes. \"Well, it must be that you're in love with me, then, because kissing is never this good without someone being in love. Besides, I've given you more than enough data to be in love with me by now,\" he said, his eyes crinkling in silent laughter. \n\nOh, come on. Don't fall for that, Gillian. Don't you go for that lazy piece of bait like a starved\u2014 \"That's such utter bullshit,\" I said, jumping at the bait and devouring it, having gone deaf to my sensible inner voice and raising my head to look into his eyes. Forrester's smile widened, pleased with his success in provoking me. \"I know nothing about you except that you are an amazing cook, you garden in the city, and you play weird passphrase games with your doorman,\" I said. \n\n\"Is that all you've picked up?\" he asked, bending to kiss me again. \"You're not even trying. You're a lot more perceptive than that. Tell me... what was my undergraduate minor?\" I frowned at him, searching his eyes, only to find that he was perfectly serious about the question. He took me on a swirling turn around the rooftop as I stared at his chest, trying to work out the answer. His minor wasn't in his LinkedIn profile - only his predictable Business major. I thought about his office, but there were no diplomas on the walls or other displays of achievement. His office had only framed puzzle prints of masterpieces... and then there was that sketch of the twig he drew on my namesheet at the cubicle...\n\n\"Art... you had an Art minor,\" I said to his chest. It seemed like a weird choice of minor for a Business major, but I was almost sure that was the answer. I lifted my eyes to his face. He had been watching my face the entire time, and I felt a tremble inside. \n\nHis eyes warmed and I felt his pride in me, as he put his lips to my forehead. \"And I know that you're brilliant,\" he murmured. \"Soon you'll figure out what kind of volunteer work Trudy got me involved in, and then you'll know how a data type of guy can believe in love at first sight.\" \n\nWait. Did he just say he loved me? Not exactly, but... close. His face wasn't lying... and none of this felt like a put-on act to pressure me. Love? Why? How could he possibly? I became uneasy. I distrusted people who said they loved me if I couldn't clearly see their motivations. If this wasn't just a sex thing for Forrester... if I wasn't just a young attractive consenting body for him to enjoy... I was in trouble. I was in trouble, because I didn't have a lot else to offer. \n\nI opened my mouth again to give a lame excuse to leave, but then we swayed and my head was suddenly zooming backward toward the rooftop. I cried out and clung to him, trembling, but then I realized that his arms were holding me securely and that there was nothing about the movement that was out of his control. I was suspended in midair, helpless, but completely safe because he held me. \"I'm dipping you,\" he murmured against my temple. \"You're okay... I've got you. It won't hurt to fall for me a little bit...\" \n\nI closed my eyes and bit my lips at the corny line. It was awful, and it was wonderful, and I just couldn't bring myself to give him a hard time about it. He raised me out of the dip and I sighed contentedly, still clinging to him. I opened my eyes to see his brown eyes watching me closely. \"Wow...\" he whispered.\n\n\"What?\" I asked, letting my eyes wander through his. \n\n\"You just let a line like that slide... you must really be in love with me,\" he said, laughing silently as he bent down and kissed me again before I could answer. \n\n*** *** ***\n\nSherwood, Gillian: I DID IT!!\n\nForrester, Gregory: I never doubted you would. Not for a minute. What are we talking about?\n\nSherwood, Gillian: >:-( You know what I'm talking about. The thing I've been trying to do.\n\nForrester, Gregory: You hung the toilet paper roll properly? My god, I thought it would never happen.\n\nSherwood, Gillian: It's supposed to hang down in the front, but that's not what I'm talking about and you know it.\n\nForrester, Gregory: You threw away the nearly empty carton of Sesame Chicken instead of putting it back in the fridge to sadistically get my hopes up and then crush my spirit? Will wonders never cease? \n\nSherwood, Gillian: That was one time, for Pete's sake! You know, you're not as cute as you think you are. \n\nForrester, Gregory: I know. I'm cuter, but I'm trying to be humble for my girlfriend's sake. \n\nSherwood, Gillian: Fine. If you don't care about what I'm able to do now that I couldn't do three weeks ago, I won't bother telling you about it.\n\nForrester, Gregory: Well, why don't you come up here and show me, then...\n\nI grinned and locked my laptop screen and smelled the cherry blossoms on the branch at my desk, before telling my manager that I was taking a quick break on my way to the elevators. At the C-level floor, I went to Trudy's desk and sat down in the waiting area. \"Again?\" she asked, looking at me over her glasses with an utter lack of amusement. \n\n\"Talk to the boss. I'm just following orders,\" I replied, breezily. Actually, I could have just walked into Greg's office, but it was so much more fun to make Trudy announce me. \n\n\"Mm hm...\" she grunted, tapping on her computer. \n\nGreg stuck his head outside his door to the waiting area where I was sitting. \"I have a few minutes for you now, Ms. Sherwood,\" he said. Trudy snorted. I got the feeling she wasn't fooled by Greg's pathetic attempts to hide our work-inappropriate relationship. To be fair, it was really hard to invent plausible excuses for the unpaid intern to meet with the CFO on a daily basis, sometimes more frequently.\n\nI followed Greg into his office and as he closed and locked the door, I let my panties fall to the floor under my dress and kicked them aside. I sat down on one of the leather chairs and scooted my bottom down to the edge, spreading my legs wide and hooking my knees over the arms of the chair. Greg dropped to his knees and spread my lower lips with a heated look on his face. \"Hello, beautiful,\" he crooned. \"I've been thinking about you all day... is that a new perfume?\"\n\n\"Oh my god... stop talking to my pussy,\" I groaned, chuckling. \n\n\"Don't listen to her... she doesn't understand our love,\" he said, kissing my labia softly. \n\nAfter meeting with the doctor and having her confirm Greg's suspicions about vaginismus, I had begun a course of therapy to calm down the muscles in my vagina. My first therapy challenge was to be able to get my own finger into myself and have my body be okay with it rather than closing up like a bomb shelter. After that, I could begin using a set of dialators of increasing size that would gradually get me used to having something inside me that wouldn't trigger my vaginal version of PTSD. \n\nGreg had insisted on assisting in my therapy by saying encouraging, supportive things to my vagina to boost its self-esteem. Weirdo. The thing is, if I didn't know better, I'd say his home-spun therapy was helping. My therapy sessions with Greg were less painful and certainly more lubricated than those I tried on my own. Plus, it was kind of cute. Not that I'd ever admit it. \n\n\"Do you mind? I need to get back to my deliveries,\" I said, nudging one of his hands out of my way. \n\n\"We'll talk later...\" he whispered to my clit, and sat back on his heels. \n\nI reached down and began to slip my middle finger into my opening when he pulled my hand away. \"What are you doing? You can't just barge in there like an army of Huns! Have some respect! Show some finesse! No wonder she likes me better. Your therapist said you have to do the flower exercise first, remember?\"\n\n\"I just did them 15 minutes ago! My muscles are still warmed up from the earlier\u2014\" I began arguing, then gave up because Greg was looking at me like a disappointed puppy. He loved watching me do the \"flower exercise.\" Laughing, I closed my eyes and began gently touching my labia and clenching and releasing the muscles of my vaginal floor like a flower opening and closing its petals. Kegel exercises... after all my vaginal muscles' over-use from the painful spasms, Kegel exercises were the last thing I expected the therapist would make me do, but they were supposed to remind my body that those vaginal muscles could do voluntary movements under my control, and relax when I told them to, as well. \n\nGreg watched greedily, his mouth slightly open. \"I hope you appreciate the superhuman effort I'm putting into your therapy,\" he said, caressing my buttocks as I clenched and released my vaginal floor muscles inches away from his face. \n\n\"Yes... I'm certain the Vatican will have you beatified when they hear about it, Saint Gregory. I'll be sure to write them a detailed account of your sufferings,\" I responded drolly, slipping my finger into my wet, pulsing opening. \n\n\"You would mock the patron saint of vaginal orgasms?\" he asked, raising an eyebrow, but still watching me slowly take my finger inside myself. \n\nMy hand cupped my pussy as my finger bottomed out and I breathed in relief, because my muscles were still relaxed and comfortable with the sensation. After my vagina being a human panic room for so long, it felt like a miracle to be so... normal. Well, if \"normal\" was fingering yourself in your boss' office while he watched almost drooling. \"See? I did it!\" I gasped, tears coming to my eyes at the bizarre accomplishment. \n\n\"How are you feeling? Does it hurt?\" he asked.\n\n\"There's a little tightness on one side, but that's it,\" I said, tears rolling down the sides of my face. \"I can start using the dilators, now. Soon, the therapist will start with the myofascial release, and before you know it... oh my god... Greg...\" I gasped, feeling him push my palm gently to the side and take my clit into his mouth. He suckled on it with soft lips, rubbing it gently with his tongue. \"Ohhhhhh fuck...\" I moaned, quivering under his touch. He took his finger and caressed my wet slit, then went lower to my anus and slowly rubbed his fingertip inside me. \n\nI lurched up in the chair wide-eyed and lost it almost immediately. I clapped my hand over my mouth just in time to muffle the wail that came out of me as I peaked, feeling the muscles in my vagina clenching down strongly on my finger and miraculously releasing again and again. I began laughing and sobbing at the same time and Greg pulled me into his lap and held me, his breath warming the top of my head. \"Congratulations Scully,\" he laughed, calling me by my namesake's X-files character, his pet nickname for me.\n\n\"Thanks, Skinner,\" I giggled.\n\n\"Hey, Skinner's the old guy! You said I could be Mulder,\" he protested. \n\n\"No chance. Besides, Mitch Pileggi is sexier,\" I said, nuzzling his neck. \n\n\"Mmm... thank God for daddy complexes,\" he said, smiling into my hair. \n\n*** *** ***\n\n\"I can't believe you said I have a 'daddy complex,'\" I said under my breath, glancing over at Greg as he pulled the escargot out of its shell. We were having dinner at this French place in celebration of my therapy progress. The restaurant location was kept in its original Art-Deco style, but in a twist, the owner had devised a way to put sheer curtains around each booth from giant rings suspended from the ceiling. The effect was intimate and slightly naughty. \n\nGreg just smiled at my comment and held the snail out to me on the tiny seafood fork. I curled up against him and opened my mouth, allowing him to enjoy the view as he fed me the buttery crustacean. As I chewed, instead of feasting on the sight of my breasts barely contained in the cream-colored, cowl-neck, satin slip dress that he'd bought for me to wear that night, Greg turned his wrist slightly and glanced at his watch, still smiling. What was that about? Was he timing something again? Or did he do it just to bug me? Of course, I was bugged. He was checking his watch on our date and I still couldn't believe he thought I had daddy issues, or something. \"You didn't really mean it, did you.\" I pressed. \n\n\"Didn't I?\" he asked, reaching out for my champagne and holding it for me to sip. \n\nHe really thought I had a \"daddy complex\" then? What the hell? \"That's... that's just ridiculous. Gross! I never wanted to... with my own father? Ew!\"\n\n\"Well, I never suggested that, now, did I?\" he replied, dabbing the linen napkin gently on my lips, then patting it on my nose to tease me. \n\n\"And it's not like I'm some helpless little girl type that needs to be taken care of...\" I grumbled. I was tougher than hell. He had no idea of what I'd lived through. I had always danced around the subject of my childhood, and thankfully he never pushed me to talk about it, seeming to know that I needed more time for what would probably be a deeply troubling conversation. I snuggled up closer to him because I felt a little cold and sighed in happiness when he draped his arm over me. \n\n\"Certainly not,\" Greg agreed, toying with one of the curls I had pinned into my updo, and stroking my face gently. I felt his heartbeat as I rested my head against his chest, almost letting it lull me to sleep. With his other hand, he took one of the crudites from a plate and held it to my lips. I wrinkled my nose and shook my head, pointing to the escargot that I wanted more of, instead. \n\n\"Come on, now, you have to eat your vegetables, too,\" he chided, putting the radish rose to my lips again. I sulked and looked up at him plaintively, hoping for a reprieve, but with no luck. He even pressed his lips together in disapproval at my delay. I felt a little ashamed, so I leaned forward and took a tiny nibble of the radish, quickly looking up to see if it made him happy. He raised one eyebrow and I shrank down, chagrined. He wasn't impressed. I wanted him to be proud of me, so I screwed up my courage and took the whole radish in my mouth, crunching into it and trying to look happy and grateful. I hated radishes, however pretty they looked. Oh, but then Greg's brown eyes were shining warmly on me, and he bent down and kissed my chewing mouth. Then, even if I did have radish in my mouth, my pussy was hot, throbbing and slippery. I was such a lucky girl. \n\nI swallowed the awful root and showed him my empty mouth, then pointed at the escargot. Greg laughed and kissed my nose, before feeding me the rest of the escargot after carefully coaxing them out of their shells. Afterward, I sighed happily, replete. Then, I petted his chest, \"Well, if none of those things are true, I don't know where you came up with 'daddy complex.' You were just teasing me again... right?\" I asked, running my finger down the pattern in his pretty tie. \n\n\"I'm sure you're right, Princess...\" he murmured, the fine lines crinkling around his eyes again as he looked down at me, amused with the thoughts and plans he kept secret from me in his mind. He tipped my chin up and kissed me. \"You look very pretty tonight. Do you like your new dress?\" he asked. \n\nI nodded, smoothing it over my legs as I leaned against him. The candlelight made the satin fabric shimmer like liquid over my body, brushing my skin in its silky caress. \"I love it. Thank you so much... you take such good care of me,\" I sighed, and closed my eyes happily. I felt his body move slightly, and when I opened my eyes again, there was a small box on the table in front of me, tied with a red ribbon. I looked up at Greg, \"What's that?\" I asked. \n\n\"Hm... the contents seem to be obscured from our view. If only there was a way to find out,\" he said, drolly, as I grabbed the box excitedly and untied the ribbon. \n\nAs I lifted the lid, I caught a flash of the item and gasped, closing the box again quickly and glancing around to see if anyone was looking at us. My cheeks were on fire, but I still opened the box again just a crack to look at my present. The base was beautifully molded like a rose in bloom, and the entire thing was gracefully made from rose-colored glass. I looked up at him, excited and embarrassed and so, so happy. \"Have I ever told you how beautiful you are when you blush?\" he asked me, making me blush even more. \n\n\"I love it,\" I whispered in his ear. \"I can't wait.\"\n\n\"Well then, why don't you try it on...\" he suggested. \n\nMy eyes went wide and I bit my lips, but I still nodded. I put the present in my handbag and began to slide out of the booth to go to the restroom, but Greg's arm tightened around me, not letting me leave. Confused, I looked up at him again for an explanation, but enigmatically, he just smiled and offered none. Then, the smile slowly melted off my face as I realized what he wanted. He wanted me to try it on in the booth. \n\nSee, ever since we danced that first night on the rooftop, Greg and I had been exploring different ways that we could be intimate. We had given each other pleasure in a number of fulfilling ways, but I still wanted more of him. I wanted to feel him thrusting inside me, our bodies churning together, building to a peak and then bursting. I needed to feel him come. Greg had never even tried anal play before, though, and he had been hesitant. He didn't want to hurt me. He didn't want to trigger my condition, or set back my therapy progress. ",
        "Undaunted by these pathetic excuses, I methodically and relentlessly wore him down. I wore lacy boy-shorts panties that left the bottom half of each cheek bare, then bent over where he would just happen to catch a peek. I played with myself for him, stroking a lubed finger in and out of my anus as I rubbed my clit. I even slipped a lubed finger into him once, just when he was about to come in my mouth. I was covering my mouth and giggling silently when Daryl called up a little later, saying that the neighbor below us said that it sounded like a woman was being murdered upstairs. Let's just say, I wasn't the screaming woman that night. \n\nI had been gleefully encouraged when Greg had put his fingertip in my bottom today when I showed him my therapy progress, but I had no idea he had come this far over to the backside. Problem was, brilliant negotiator that he was, Greg had decided to use the promise of satisfaction of my anal demands to get his own kink satisfied. His kink: apparently, I had to put on a show for him... and I had to do it in public. \n\nFor a woman that aspired to disappear from society for most of her adult life, you can imagine how excited I was about fitting a Lovehoney Full Bloom Rose plug into my bottom with only the very sheer curtains hiding me, and those with a 1.5 inch crack still open to the busy room, not to mention our overly-solicitous waiter Eli, who was ready to refill any slightly-evaporated liquid at the table at a moment's notice. I honestly didn't think Greg even cared about what the world outside saw, he only had eyes and a bulging cock for my squirming, self-conscious discomfort. Sick bastard. Still, I was dying to have daddy fuck my ass. Wait, no. No, I didn't say daddy, you said daddy. Shut up about daddy fucking your ass, already. \n\nI took the toy out of my handbag and quickly covered it with my hands in my lap. I glanced up at Greg, and he leaned back in the booth, spreading his arms widely over the top, enjoyment plainly written across his face. Then, I started thinking strategy. The table would do a pretty good job of hiding the view from above, so if I just stayed on my side curled up against dadd\u2014Greg, I mean, then I could just work it in by pulling up the dress a little in back. The folds of my dress would cover things pretty well, otherwise. \n\nI lifted the dress over my bottom and began to bring the toy behind me, looking carefully for any sign of people glancing over. Then, Greg clucked his tongue. \"You know, you need to get it wet first, right?\" he said, oh so knowledgably for an anal virgin. I pursed my lips and glared at him. I knew he just wanted to torture me a little more by making me suck on it in front of everyone. \n\nWell, at that point, I decided that it was only fair if I brought him into the fun. So, instead of bringing it to my mouth and sucking on the plug for an audience, I put it down in his lap, right next to his insanely hard cock. Then, I smiled and lowered my head to his lap and began licking and sucking on it with obvious enjoyment. All my slurping noises and soft moaning grunts drifted up to where he watching me with glazed eyes and a clenched jaw. Then, of course, Eli the waiter came and found me bobbing my head in Greg's lap. My head was obscuring most of Greg's lap from Eli's view, and I'm afraid he made a few assumptions. \n\n\"Is... is everything all right, Mr. Forrester?\" Eli asked with a note of awed uncertainty in his voice. I just kept happily bobbing up and down on the plug, though now I kept the noise down out of courtesy. \n\n\"The escargot were superb... or so I hear. I didn't actually get any. But, I'm afraid they've made my girlfriend rather... sleepy,\" Greg said, his laughter barely disguised. \n\nThere was a long pause after that, but I didn't let it deter me from getting that plug good and wet. \"My girlfriend hasn't been that sleepy in years...\" the waiter said fervently, before clearing his throat. \"Um... right. Very good, Mr. Forrester. We'll have your entrees out shortly... unless you'd like to wait for your girlfriend to finish her... nap.\"\n\n\"I don't think that will be necessary, Eli. A man's got to keep up his strength, hasn't he?\" Greg replied. \n\n\"Yes sir,\" Eli replied, whisking away the empty dishes and closing the curtains very tightly. \n\nGreg's hands went to the back of my head, feeling it going up and down in his lap for a bit before turning my face to his. \"I think it's wet, now, Princess,\" he said, his eyes promising me that I would pay dearly for my fun. God, I couldn't wait. \n\nI smiled up at him from his lap, petting his raging hard-on and giving the tip of the plug one last lick, \"Well, if you're sure, Daddy,\" I said, smirking when I felt his cock jump under my hand at the last word. Hah! Maybe I wasn't the only one at the table with a \"daddy complex.\" \n\nI put the toy under the skirt of my dress and insinuated it into my opening a little. While I wasn't an anal virgin, I wasn't the most experienced either, mostly because it was hard for me to give someone else that much control and trust. I knew that I needed to make myself relax, push down and exhale to help it go into me with as little pain as possible. Still, I was excited and it was hard to relax. I pushed several times on it, but I kept tightening up and I knew I was running out of time. \"Easy, Princess... you can do it...\" Greg encouraged me, bending to kiss me as he stroked down my arms. He always made me feel like I was melting when he kissed me. Then, I felt him reach down to where I held the toy and then cover my hand with his own. \n\nSoon, I gasped against his lips as I felt the plug sliding in, expanding me. I began panting when I felt my body take it in, moving it perfectly into place, the rose settling snugly in between my cheeks. \"Oh... Daddy... I did it...\" I panted, his arm holding me tightly against him as my body adjusted to the hard fullness in my bottom. \n\nGreg moved my hand from his chest down to his cock, straining in his pants. \"Do you feel what you're doing to me?\" he rasped against my temple. \"Do you want this cock inside you? Do you want Daddy to fuck your ass, Princess?\" \n\n\"Yes Daddy, I need it. I want you so much, I can't stand it... please don't make me wait anymo\u2014\"\n\n\"And, we have the coq au vin for you, sir, and for mademoiselle we have... and I'll have these all wrapped up for you in just a moment... or we could just... always a pleasure, Mr. Forrester,\" Eli said, interrupting us and then smoothly adjusting to the needs of the changing situation as Daddy and I staggered out of the booth and left the restaurant, lost to the world. \n\n*** *** *** \n\nGreg brought me into the entryway, bent down, and removed my shoes one by one. Taking me by the hand, he led me to the bathroom, where he stood me in front of the mirror and slowly unpinned the curls in my updo and sent them tumbling down my shoulders one lock at a time. I did nothing. My hands just stayed at my sides and I watched him move, deliberately and precisely, doing exactly what he wanted. I was still. The only thing I did for myself was breathe... and yet I was almost shaking from head to toe. \n\nI watched him move his strong fingers into my hair and begin massaging my scalp, and I closed my eyes as it became the only sensation in the universe. He leaned his body closer to mine, brushing the rosebud bloom between my cheeks and I moaned as the plug sent sensations through my body at the slight touch. \n\nI felt one of Greg's strong arms curve around my hips, and the other guide my body to bend over the marble vanity. I stayed still, waiting for his touch, his voice, anything about him that told me of his wants or needs... the very act of being still for him sensitized me to no end. Then, I felt his fingertips, stroke down my spine, the sensation changing only slightly when his fingertips left my skin and stroked me through the satin gown. His hand then clasped the back of my neck firmly and a rush of wetness flooded my pussy and I shivered with pleasure, until I froze when he began pulsing his hips and his cock against my bottom. The glass rosebud snugly nestled between my soft cheeks was gently thrust harder against my anus, the sensations the plug was giving me pulling a soft cry out of my mouth. \"Oh, Daddy...\" I gasped. \n\nI felt Greg's body bend over me, still thrusting. \"You were very naughty at the restaurant, Princess. Do you realize what Eli thought you were doing?\" he murmured, close to my ear. \n\n\"I... n-no, Daddy,\" whispered, my cheek moving slightly against the cool marble with each strong pulse from his body. \n\n\"Eli saw you leaning over Daddy's lap. He saw your head bobbing up and down. He saw you licking and sucking on Daddy's present... but, Eli thought you were sucking on Daddy's cock.\"\n\n\"Oh, no... I'm sorry Daddy. Did... did he think I was bad?\" I asked, almost every nerve in my body focused on the sensation of the plug moving slightly in and out of my bottom.\n\n\"He thought you were Daddy's little cock slut, Princess,\" he rasped, grasping my waist in his hands and grinding his hips and cock hard against the rosebud, moving the plug in slow circles inside me. \"He thought you couldn't wait to get a load of Daddy's cum inside you... was he right?\" he asked, reaching between my legs and rubbing my clit through the cream colored satin. My legs nearly fell out from under me at the shock of sensation, but he held me up, changing to a quicker thrust and I couldn't help but push my hips back against him slightly. \n\n\"Oh Daddy...\" I gasped, looking down my body to see his hips pushing against me.\n\n\"Answer me, Princess,\" he said, his fingers thrumming on my clit, filling the bathroom with wet sounds from my juicy pussy, \"Are you Daddy's little cum slut?\"\n\n\"Yes! Yes! Yes Daddy!\" I screamed, my orgasm bursting through me. With a growl, Greg pulled me off the vanity, down on my knees, and after freeing his cock and shoving it into my mouth, he roared, sending of ropes of cum down my throat. I watched his face, both suffering and in ecstasy, as I sucked softly and swallowed his semen until he pulled himself out of my mouth. Then, I stayed on my knees, looking at the hands clasped in my lap. I had been a very bad girl. \n\nI waited. I waited, feeling the glass rosebud pressed against my body's rosebud, waiting for him to take me and make me bloom again. Somehow, it was a delight for me to wait for him, to sit in perfect stillness, waiting for him to move me again and I felt no fear because I knew that, no matter what happened, Daddy would take care of me. Maybe that was why he said what he said... maybe that was the pull of being Daddy's little girl... to know someone so big and so good that would love me and keep me safe, if only I would trust and obey him. \n\nI loved my Daddy.\n\nAs soon as the thought entered my mind, I opened my eyes in shock, and I was surprised to see Greg squatting next to me, watching my face silently. My lips opened, and suddenly I felt the words in my mouth, so frightening and irrevocable... words that changed everything. Then, with bitter cowardice, I closed my eyes and swallowed the words, feeling them pass resentfully down my throat, too large to go down peacefully. \n\nThen, I felt his hand lift my chin out of my failure. I opened my eyes again to see his, both warm and heated, understanding me... and I was broken into pieces. I wasn't afraid, though, because I knew my Daddy loved puzzles and would put me back together again. \"Look what you've done to your pretty dress, Princess,\" he murmured, holding up the spot where his fingers had rubbed my wet slit. \"Let's get you out of it,\" he said, taking my hand and raising me to my feet. \n\nI followed Daddy to the bedroom and let him lift the dress up my body, raising my arms high over my head to help him. Then, Daddy took my wrists in one hand and had me climb up on the bed, bending me, over my knees, pressing my chest down to the bed, and stretching my arms out in front of me. I stayed there naked, bowed like a fervent follower at the altar of his bed, waiting for my god... and waiting was my worship. \n\nI loved my Daddy. \n\nI felt him take the plug and slowly twist and slide it from my body, and I sighed in loss and anticipation, waiting for my Daddy to fill me again. I imagined him shedding his clothes, moving his strong body behind me, and positioning himself between my legs... and then my waiting became a blood sacrifice, cutting and cruel. I waited, hoping to hear his belt loosen, his pants fall to the floor, but the sounds never came.\n\nThen, his voice spoke into my fantasy. \"Princess, I want you to know that this will hurt me more than it hurts you...\" he said, a calming hand on my back. \n\n\"What do you mean, Da\u2014\" I asked, and then squealed as a sharp sound filled the bedroom, my bottom stinging. His hand, then, soothed the place of punishment, warming it with his forgiveness. The place he struck felt alive, and his caress only seemed to remind me that it was there, but that was probably why Daddy did it. He knew that bad girls needed their punishment... and their forgiveness. He kept me there, writing my crimes in red handprints on my white bottom, listening to my cries of confession. \n\nOh, how I loved my Daddy. \n\nWhen I had paid enough, I heard Daddy removing his clothes and hanging them up. Soon, I would feel him inside me. I shivered when I felt his weight on the bed behind me. I gasped at the sudden cold feeling of the gel he put on my bottom, massaging it around and inside of me. I pictured him doing the same to his strong daddy cock. Then his hands were on me, rubbing and separating my cheeks, exploring his playground. I felt his long hot cock slide up between my buttocks until it rested on my back, showing Daddy how far inside me he would go. I heard his breath shudder. \"Daddy's going to put his cock into your ass now, Princess. Are you ready for that?\"\n\n\"Yes, Daddy...\" I said, arching my back and wiggling my bottom for him. \n\nDaddy laughed, and the rich, warm sound of it almost making me come. \"Hold still, now. I don't want to hurt you...\" he said, taking my hip in his hand. \n\nThen, he was rubbing the hot slippery head of his daddy cock around my hole and pushing it in. I relaxed and pushed back until it slid in with a pop and Daddy's breath hissed between his teeth. \"Princess... are you okay?\" he asked, his breath shaking. I loved how careful he wanted to be with me. I also wanted to get fucked, so I bit my lips and pushed back hard on his cock until it slid all the way up inside me and I felt his hips hit my bottom.\n\n\"Unnnf... now,\" I gasped, \"now... I'm okay, Daddy,\" I whispered, slowly grinding my bottom against him, feeling the hairs around his cock tickling me. He let out a grunt and his hands tightened on my hips, breathing slow and deep. I was so full of him, the tight feel of him was everywhere inside my body. \"Please Daddy... please fuck me... I need it,\" I whispered.\n\nDaddy made a choked grunting noise and didn't move. It felt like he was shaking, so I tried to encourage him a little more. \n\n\"Daddy please... please... please... I know you don't want to hurt me, because you're so good and kind and you want to keep me safe,\" I said, slowly rotating my hips, feeling my body adjust and accept him, \"but you're all inside me now and it feels so good. You feel so good, Daddy. Please fuck me hard... ride me hard and make me scream... fuck your little gi\u2014\" I stopped with a yelp when Daddy yanked me up against him and covered my mouth.\n\n\"Princess, you feel so good that Daddy is going to fill up your ass with his cum right now if you don't hush,\" he hissed in my ear, reaching down and rubbing my clit. Of course, then, I couldn't help it at all. I was such a bad girl that I couldn't help myself and I started giggling. It made my whole body jiggle and it made his cock move around inside me, and it was so good. \"Are you kidding me?\" he growled. \"I'm almost splitting your ass apart with my cock and you're giggling?\" \n\n\"Yes, Daddy!\" I giggled. Then, I just giggled harder until Daddy pulled back and slammed back inside me with a grunt, his hips slapping against me. Then, my giggles stopped and I squealed because every nerve in me was alive and humming, waiting for what Daddy would do next. Come on, Daddy... do it... stop trying to keep me safe and just fuck me...\n\nDaddy pushed me back down on the bed and pulled my hips up back where he wanted them. Then, I felt him stroke his cock head up and down my wet slit and I moaned, only to get a spank from Daddy. I guess I wasn't supposed to do that. No moans. Daddy needs quiet. Up and down and up and down like he was painting my pussy, the wet slide of his cock head mixing with Daddy's shuddering breath. Then Daddy slapped his cock on my clit and I jumped and squealed under him, and I got another spank. I guess, Princess couldn't squeal anymore, either. Daddy had a lot of new rules for Princess, tonight. \n\nDaddy's cock slid up to my pussy hole and stayed there... the tip of his cock looking into the place that had been taken away from me and locked, the place where there was only pain and shame until Daddy loved it and told me it was beautiful. I could feel how much he wanted me there... and I wanted him there, too. I would do anything for Daddy. So, I took a deep breath and pushed back to force it inside me, but Daddy moved away and gave me another spank. Then, he put his cock back at the hole, rubbing and swirling, kissing and dancing with my pussy and inviting it to play, but not going inside yet because it would harm me... and he wouldn't harm me because he loved me. My Daddy loved me, and while he might spank me and hurt me, he would never allow himself to harm me, no matter how much I begged him to... and the realization made me love him so much I cried. \n\nThen, he put his hands on the bed on either side of my shoulders, pinned me down under him and kissed the back of my neck, and with a long slow thrust, he pushed his cock into my ass. \"Nnnnnnfffgh... oh God... unh... unh... unh... unh...\" the yearning in Daddy's voice sending shivers through me as he pumped my ass slowly and carefully. \n\n\"Oh yes, Daddy...\" I keened, moving my hand to touch his. His breath hitched and he clasped my hand tightly, increasing his pace. \"ah... ah... ahh... ahhh... you feel so good in my ass!\" I cried, pushing my hips to meet him, our bodies slapping together with each thrust. \n\nDaddy kept me trapped under him and kept fucking and rutting into me like a man possessed, reaching under me to rub my clit until I squealed and bucked against him as I came, spraying on his balls that were slapping against me with every pump. My body couldn't keep up with him and after I came for the third time, I fell limp and he rolled us to our sides, still pumping into me as if he could never get enough. \n\nWeak, I let him pull my legs over his, curled on his side next to me, and watched as he pistoned himself into my ass. I felt him cup my face in his hand and when I looked up at him, he held my eyes in his. Soon, I felt his cock swell, and then he pushed deep into me and held there, his cock throbbing as he filled me with his liquid fire. \n\nPanting, covered in sweat, and still intimately connected, we kept staring into each other's eyes without saying a word. Finally, I had to ask, because for some reason it was bothering me. \"This position seemed to work better for you...\" I said, quietly. Greg gave a breathy grunt in agreement. \"Was it... because it felt more like... you know... normal sex?\"\n\nGreg's eyes sharpened out of his sex haze, read my face carefully, and then he shook his head. \"No, Gillian... it was because I could see your face...\" he said, kissing me softly, \"and it felt more like making love.\"\n\nThe Intern, Part 3"
    ],
    "authorname": "LingeringAfterthought",
    "tags": [
        "anal",
        "cunnilingus",
        "butt plug",
        "daddy",
        "public",
        "vaginismus",
        "romance",
        "dancing",
        "blowjob",
        "spanking"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/the-intern-pt-03-1"
}