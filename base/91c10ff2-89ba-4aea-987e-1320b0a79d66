{
    "title": "Freshman Bride Pt. 05 - Getaway",
    "pages": [
        "Finally I leaned back in my chair, eyes closed. I rubbed at them with a certain weariness that can only come from finals week. That was the last one though, it felt good to be done. All the finals had been online so not like I had to go anywhere, but with covid the scheduling had been a bit of a nightmare. Two of my exams had been at the same time I had, had to contact both the professors and explain the situation. One did not want to change the time for me, the other let me change it but only to right after when it was supposed to be.\n\nChris knocked on the door when I said he could enter, he walked in.\n\n\"Finally done babe?\" I nodded and he leaned down on the chair kissing me slowly, I smiled. \"I always hated finals week too.\"\n\n\"It's much more bearable with you cheering me on.\" He laughed at that. \"That being said, sorry if I have been bitchy this week.\" I frowned a bit. He had not said anything but I had snapped at him a few times.\n\n\"Finals are a lot of stress Amelia, I know I have been there.\" He smiled kindly. \"I would have been more surprised if you had not snapped a little.\" I stood up and hugged him. He hugged back, making me feel safe, in his arms. I leaned up and kissed him. He kissed back, slowly our kiss became more passionate. \"Want to go back to our bedroom?\" He asked. I nodded, he grinned and picked me up in his arms causing me to giggle. He carried me back to the bedroom and lay me down on the bed.\n\nChris lay down next to me and put his arms around me kissing me as he did. I kissed back, pressing myself to him and wrapping my arms around him. Neither of us were really in a rush, though we had not had much sex during finals week. My dress was a long maxi dress, very casual but very comfy with just a simple bra and panties under it. Chris did not seem to mind that though as we made out.\n\nHis hand traveled down my back eventually cupping my ass gently, he squeezed it causing me to thrust forwards gently. I could feel both of us getting hard. He admitted to me once about a month before that he always got more excited when he felt me getting hard too as he knew I was getting turned on.\n\nI found myself rubbing my clit gently against his leg. I pulled his shirt off and he helped me pull off my dress. He sat up and pulled me into his lap and I slowly pulled his cock free from his pants. I felt it rub against mine in my panties. I moaned in pleasure, there was just something about having someone touch my clit through my panties. It just felt better than any time I had done it in boxers. Our missing got more intense, and he pulled my clit free, it slapped against his much larger cock. I reached down and put my hand around both of us and started to stroke them both gently while we made out.\n\nChris slowly pressed me back down onto the bed he pulled down my panties exposing my stiff clit but he was after something else. With a sly grin he leaned down and ran his tongue over my hole. I gasped as he did that, it was not something he did often. I looked up at me from behind my clit and started to eat me out. One hand stroked my clit gently, his lips and tongue eating out my eager pussy. I moaned glad that I kept myself clean down there so he could do that. He continued to tease my hole till he finally started kissing up my body. He got to my lips again and gave me a sweet sensual kiss.\n\nI felt him spreading my legs, slowly he lubed himself up. He lined his cock up with my pussy and pressed inward. I gasped as he entered but moaned in pleasure as he kept pressing forward. It did not take long at all for his balls to be against me all nine inches of that hot cock inside of me.\n\nHe started to make love to me thrusting gently making me moan, smiling over me watching my face relax into girlish glee as he made slow sweet love to me. Rather than talking dirty to me he kept telling me how beautiful I was and how feminine. It was so hot in a different way than just being a slut for him. He reached down and started to stroke my clit in time with his thrusts. I moaned louder and I could feel myself getting close.\n\n\"Baby I'm gonna cum, I'm gonna cum inside of you baby.\"\n\n\"Fuck yess baby cum inside fill me up make this girl pregnant.\" He grunted a bit and I felt him start to cum deep inside of my boipussy. He kept thrusting; though, pumping more cum into me till I started to cum hard too I gasped and moaned and cried out for god as I did.\n\nHe slipped out of me as his cock softened but pulled me close to him and kissed me as he held me.\n\n\"I love you Amelia, you are absolutely perfect to me.\" I grinned and blushed.\n\n\"I love you too Chris.\" I kissed him slowly, and enjoyed his arms around me.\n\nWe must have drifted off to sleep. We woke up several hours later and the sun was going down. We were both hungry so Chris ordered us some food.\n\n\"So I have a question.\" I looked up at him silently telling him to continue. \"I know you told your family you did not want to travel this year because of covid\" I nodded. \"Do you think you would want to travel with me?\"\n\n\"What do you mean, travel with you? He paused taking another bite of his tacos.\n\n\"I mean you, me a nice air bnb, maybe a hot tub just for the two of us, no one around, no place to go.\"\n\n\"So like here but with a hot tub?\" He laughed.\n\n\"I mean more like a romantic get away. My treat of course.\" I considered it for a moment or two.\n\n\" I would like that.\" He grinned.\n\n\"Good because I already booked a place in the city about an hour away.\" I giggled and playfully hit him on the arm.\n\n\"And what would you have done if I had said no?\" He shrugged.\n\n\"I honestly didn't think you would say no. We leave tomorrow.\"\n\n\"Wow, you were confident.\" He nodded \"well I had better go pack then.\"\n\nThe next day we got into his car and headed to the city. It was an hour away like he said and I was feeling a bit brave so I was wearing one of my retro dresses in the car with him. The house was a nice one story with a nice privacy fence in the back so no one could see into the yard with the hot tube. The bedroom had a huge king size bed in it.\n\n\"So what do you think baby?\" He asked with a grin \"Do you think this is a good place for a weekend of romance?\" I nodded and slipped my arms around him kissing him.\n\n\"As long as I am with you babe, we could be staying in an old barn and I would not care.\" He kissed me again. Longer and deeper this time.\n\nAs we slowly separated from the kiss. He pressed me back a little. I was taken aback he did not usually push me away. He had an odd look of determination on his face.\n\n\"Amelia, ever since I first saw you in that wedding gown I have been thinking that you would make any man a beautiful wonderful wife. You are kind, you are generous, you are funny. You have made me fall in love with you from day one.\" My face flushed a bit in excitement, I had a feeling I knew where this was going where I hoped it was going. \"These past months have been hard for everyone but you made it so much easier, and now I don't want to think about life without you.\" He paused and started to get down on one knee. I gasped and put my hands up to my mouth. He pulled a ring box from his pocket and opened it slowly to reveal a slightly antique looking ring with a gold band and three small diamonds on it. I gasped again. \"Amelia, will you marry me?\"\n\nI gasped again and tears started to run down my face. I picked up the ring and put it on, I could not say words my mind was whirling. Finally after what seemed like forever I managed to choke out.\n\n\"Yes Chris yes of course I'll marry you yes.\" He jumped up in triumph and kissed me passionately. I kissed back happy tears still streaking down my face, partially ruining my makeup. Right then though there was no one else in the world, just each other.\n\nWe found ourselves in the bedroom again, still kissing as if we were lost in the desert and had just found water. His shirt and pants came off and my dress and petticoat were both lost in the passion. He was surprised to find I was wearing a Teddie under my dress though. What can I say was hoping for sex when we got there. He stood on his knees over me on the bed as I moved to take his huge hard cock into my mouth.\n\nI had a bit of a surprise for him there, I had been practicing trying to suppress my gag reflex. His eyes widened as I just kept going and going and finally my nose was nestled in his pubic hair and I could feel his cock buried deep in my throat. I could not breath much doing this though so, I set to work sucking his cock. I felt both of his hands on the sides of my head and he started thrusting into my mouth and throat. It was so big but I kept gulping it down as he throat fucked me. When I had to breath though and pushed away he let me go without fuss. Just smiling at me as I caught my breath.\n\n\"How do you want me baby?\" I asked seductively. He smiled and kissed me. He turned me around with my arms and legs between his and ran his hands up and down my chest and stomach while I leaned back and kissed him over my shoulder. He pulled my clit out and stroked it gently, he moaned softly and I felt his hard cock rub against my ass. I moved my ass slowly rubbing his cock with it.\n\nHe pushed me down not hard but with just enough dominance that I was willing to submit. He ran a hand up my ass and reached for the lub. He squirted some onto his fingers and slowly started to rub my boi pussy with his gentle fingers. I moaned especially as he started to insert them into me.\n\n\"Mmmm, baby don't make me beg for it.\" I breathed to him. He gently smacked my ass just enough so I could feel it.\n\n\"Beg for what baby\" he smacked a bit harder.\n\n\"Mmmm your cock baby don't make me beg for it.\" I felt him slip his cock up to my pussy. \"That's it baby I want that big manly cock of yours please put it into my tight pussy.\" He rubbed it gently across me again, still not putting it inside.\n\n\"Tell me why you want it so badly, baby, tell me what it does to you, for you.\" He ran a finger over my hole again. He was making me beg for it, I laughed to myself.\n\n\"That hard cock of yours makes me feel like a real girl when it's in me I feel so full.\" He slipped a finger into me, rubbing me gently.\n\n\"Well that's one, tell me another\" I groaned in pleasure and mild frustration as he said this.\n\n\"I love your cock because I love being fucked and made love to I love being a woman.\" He slipped another finger in me, rubbing harder. \"I want it because I'm going to be your wife and that feels amazing!\" He pulled his fingers out of me only to replace them with his hard cock pressing deep into me.\n\nHe put his hands on my hips and started to trust into my tight boipussy. I moaned loudly and let my body enjoy itself. He started to say something as he made love to me.\n\n\"I'm gonna make all of your dirtiest fantasies come true baby. I'm gonna make you my wife just like I already made you into a girl. He thrust harder causing me to moan more. I felt something wash over me waves of pleasure more intense then when I came normally.\n\n\"Oh fuck baby I think I'm having a femgasm, oh fuck oh god yesssss\" he kept trusting into me moaning now as he did saying how tight it was. \"Oh fuck baby I am oh god I'm cumming without cum\" my body flushed with pleasure from my pussy to my head to my feet and back again. He started to ride me harder. I knew he was gonna cum to. Finally with a final loud moan he came hard inside of me. Hot cum splattered out of me too. As his cum filled my insides.\n\nLater his arm wrapped around my body, my head on his chest as we lay comfortably together. I looked down at the ring on my finger.\n\n\"It was my grandmother's ring,\" he said with a smile. \"That necklace from the first time too, technically you are only supposed to wear it when you get married to my family but you looked so pretty and it worked so well.\" I smiled my fingers lazily playing on his stomach.\n\n\"Oh so you set this up just knew I could not resist that wedding dress huh?\" He laughed.\n\n\"I had no idea what was going to happen that night.\" I believed him I had not either after all. We lay there together comfortably holding each other close till drifted to sleep."
    ],
    "authorname": "AmeliaZay",
    "tags": [],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/freshman-bride-pt-05-getaway"
}